// Cell: Cell_471085845
/*
{
  "id" : "Cell_471085845",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "389.617, 368.97, 26.6608, 12.8508", "396.043, 368.97, 26.6608, 12.8508", "402.468, 368.97, 26.6608, 12.8508" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "396.042, 368.97, 26.6608, 1.0", "401.884, 382.786, 26.6608, 1.0", "407.725, 396.602, 26.6608, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "395.93, 365.864, 40.6526, 0.3814", "396.727, 365.75, 42.5312, 0.483", "397.604, 365.115, 43.0802, 0.5084", "397.558, 364.017, 43.1522, 0.6356", "396.753, 363.221, 43.293, 0.8136", "395.735, 362.755, 43.8497, 1.0168", "394.822, 362.075, 43.6327, 1.1186", "394.298, 361.092, 44.2534, 1.144", "394.013, 360.017, 44.8969, 1.0424", "394.568, 359.049, 45.5045, 0.839" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "393.927, 372.089, 39.5209, 0.4322", "393.533, 373.143, 39.6735, 0.6102", "392.738, 373.946, 39.3277, 0.839", "391.759, 374.507, 38.8797, 0.966", "390.758, 375.026, 39.3165, 1.0168", "389.846, 375.642, 40.0725, 0.9152", "389.253, 376.566, 40.8386, 0.8898", "388.852, 377.614, 41.3815, 0.839", "388.898, 378.752, 41.1844, 0.9406", "389.158, 379.854, 40.7842, 0.966", "389.174, 380.969, 40.1598, 1.0424", "389.101, 382.103, 39.8412, 1.0168", "388.794, 383.198, 40.1551, 1.0168", "388.737, 384.198, 41.5016, 0.9406", "388.77, 385.323, 41.9958, 0.839", "389.005, 386.443, 42.002, 0.7118" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "393.733, 374.698, 23.3951, 0.839", "392.781, 375.313, 23.0339, 0.9152", "392.016, 376.159, 23.0093, 0.788", "391.193, 376.95, 23.165, 0.6864", "390.189, 377.469, 23.5502, 0.5848", "389.053, 377.515, 23.5105, 0.6356", "387.979, 377.896, 23.3506, 0.6102", "387.245, 378.76, 23.0182, 0.6864", "386.813, 379.818, 23.0888, 0.7118", "386.328, 380.822, 23.7219, 0.7372", "385.584, 381.627, 24.5196, 0.7118" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "396.941, 375.44, 27.9958, 0.6102", "396.79, 376.566, 27.7021, 0.788", "396.709, 377.703, 27.4543, 0.9152", "397.286, 378.687, 27.44, 0.966", "397.819, 379.699, 27.44, 1.0168", "398.28, 380.746, 27.44, 1.0424", "398.646, 381.831, 27.4403, 1.0932", "398.975, 382.925, 27.4425, 1.1186", "399.269, 384.032, 27.4546, 1.1694", "399.478, 385.156, 27.538, 1.1694", "400.01, 386.151, 27.9829, 1.1186", "400.16, 387.187, 29.1186, 0.9914", "400.107, 388.274, 29.9796, 0.8644" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "394.534, 375.154, 26.2766, 0.5338", "395.157, 376.109, 26.117, 0.7118", "395.438, 377.177, 25.4005, 0.8898", "395.005, 378.23, 25.2132, 1.0424", "394.425, 379.217, 25.2384, 1.0932", "393.656, 380.062, 25.3733, 1.0932", "392.742, 380.703, 25.9823, 1.0678", "391.808, 381.349, 26.315, 1.0932", "390.841, 381.961, 26.32, 1.0932", "389.82, 382.478, 26.32, 1.1186", "388.881, 383.131, 26.32, 1.1186", "388.111, 383.977, 26.3197, 1.144", "387.123, 385.88, 26.3136, 0.966", "386.987, 387.014, 26.2724, 0.8898", "387.363, 388.087, 26.0316, 0.8898", "388.193, 388.788, 25.1754, 0.8898", "388.826, 389.675, 24.3183, 0.839", "389.283, 390.643, 23.329, 0.839", "389.564, 391.742, 22.9771, 0.9406", "389.282, 392.85, 23.0213, 0.9914" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "402.716, 367.551, 27.4414, 0.8644", "403.713, 366.993, 27.4397, 1.0168", "404.837, 366.778, 27.4389, 1.0678", "405.979, 366.743, 27.4336, 1.0932", "407.114, 366.6, 27.3938, 1.0932", "408.222, 366.329, 27.1645, 1.1186", "409.291, 366.245, 26.1937, 1.0678", "410.338, 365.956, 25.3207, 1.0168", "411.432, 365.624, 25.2031, 0.9152", "412.551, 365.387, 25.2003, 0.8898", "413.691, 365.295, 25.2011, 0.9406", "414.779, 364.939, 25.2062, 0.9914", "415.869, 364.595, 25.2398, 1.0932", "416.992, 364.388, 25.4416, 1.0932", "418.011, 363.97, 26.1957, 1.1186" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "396.002, 362.347, 32.8608, 0.5848", "396.093, 361.221, 32.4254, 0.8136", "396.306, 360.102, 32.223, 0.9406", "396.254, 358.961, 32.3907, 1.0168", "396.067, 357.841, 32.0746, 1.0678", "396.052, 356.698, 31.92, 1.0932", "396.052, 355.554, 31.9203, 1.0932", "396.053, 354.41, 31.922, 1.0168", "396.055, 353.266, 31.9348, 0.8898", "396.077, 352.123, 32.0174, 0.661" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000389074780164
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "407.725, 396.602, 26.6608, 1.0", "413.566, 410.418, 26.6608, 1.0", "419.408, 424.234, 26.6608, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "394.568, 359.049, 45.5045, 0.839", "394.581, 358.099, 47.0683, 0.5848", "394.02, 357.293, 48.3902, 0.6356", "393.298, 356.426, 48.7007, 0.6356", "393.236, 355.305, 48.7021, 0.7118", "393.598, 354.222, 48.6128, 0.788", "394.089, 353.21, 48.1071, 0.9152", "394.219, 352.091, 47.6622, 1.0168", "394.267, 350.948, 47.6258, 1.0424", "394.5, 349.831, 47.7621, 1.0168", "394.568, 348.722, 48.4324, 1.0168", "394.234, 347.635, 48.7007, 1.0168", "393.844, 346.561, 48.7276, 0.9914", "393.426, 345.495, 48.7651, 0.8898", "393.296, 344.365, 49.019, 0.839", "393.2, 343.253, 49.6362, 0.8136", "392.798, 342.196, 49.2307, 0.8136", "392.256, 341.208, 48.743, 0.788", "391.511, 340.34, 48.7208, 0.7626", "390.57, 339.69, 48.7239, 0.839", "389.54, 339.193, 48.7427, 0.9406", "388.449, 338.852, 48.8648, 1.0932", "387.357, 338.722, 49.6404, 1.144" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "394.568, 359.049, 45.5045, 0.839", "395.537, 358.116, 46.2711, 0.7626", "396.452, 357.454, 46.7141, 0.7372", "397.534, 357.099, 46.7922, 0.7118", "398.541, 356.741, 45.8251, 0.7626", "399.483, 356.298, 44.665, 0.8136", "400.32, 355.531, 44.499, 0.9152", "400.968, 354.627, 45.1413, 0.9406", "401.699, 353.764, 45.5526, 0.9152", "402.448, 352.953, 46.2773, 0.8644", "403.305, 352.2, 46.4946, 0.839", "404.148, 351.429, 46.6116, 0.839", "405.03, 350.755, 47.2928, 0.8898", "405.936, 350.069, 47.5832, 0.9152", "406.897, 349.447, 47.6288, 0.9406", "407.978, 349.082, 47.7859, 0.8898", "409.063, 348.921, 48.5873, 0.839", "410.123, 348.878, 49.6255, 0.788", "411.109, 348.674, 50.9533, 0.788", "411.869, 347.886, 51.7544, 0.8898", "412.623, 347.037, 52.0906, 1.0168", "413.494, 346.297, 52.1517, 1.1186", "414.499, 345.767, 52.4958, 1.144", "415.524, 345.33, 53.1348, 1.0424", "416.638, 345.072, 53.1432, 0.839" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "389.005, 386.443, 42.002, 0.7118", "389.859, 386.838, 42.8369, 0.483", "390.808, 387.25, 44.0247, 0.5848", "391.711, 387.752, 45.1727, 0.6864", "392.566, 388.431, 45.9721, 0.7372", "393.437, 389.145, 46.4064, 0.7372", "394.387, 389.775, 46.5828, 0.661", "395.284, 390.446, 46.975, 0.5592", "396.042, 391.166, 48.036, 0.483", "396.86, 391.759, 49.3069, 0.483", "397.643, 392.511, 49.8411, 0.5338", "398.24, 393.478, 50.0542, 0.5848", "398.879, 394.388, 50.6142, 0.6356", "399.694, 395.088, 51.4979, 0.661", "400.69, 395.482, 52.3886, 0.6356", "401.748, 395.644, 53.3495, 0.5848", "402.804, 395.925, 54.1072, 0.483", "403.727, 396.558, 54.3152, 0.4322", "404.511, 397.388, 54.3449, 0.3814", "405.406, 398.087, 54.4695, 0.3814", "406.443, 398.516, 54.8985, 0.4322", "407.487, 398.938, 55.37, 0.4576", "408.485, 399.463, 55.8295, 0.5338", "409.495, 399.947, 56.387, 0.5084", "410.558, 400.275, 57.0147, 0.5084", "411.532, 400.746, 57.881, 0.4576", "412.26, 401.47, 59.0593, 0.483", "413.112, 402.149, 59.8573, 0.483", "414.196, 402.405, 60.347, 0.483", "415.296, 402.445, 61.0935, 0.4576", "416.274, 402.854, 62.0942, 0.5084", "417.207, 403.266, 63.3654, 0.5338", "418.285, 403.382, 64.2314, 0.5848", "419.419, 403.456, 64.5361, 0.5338", "420.486, 403.737, 65.2655, 0.483", "421.352, 404.368, 66.236, 0.3814", "422.148, 405.09, 67.2, 0.3304", "422.572, 405.496, 66.675, 0.305", "423.186, 406.241, 67.7732, 0.2796", "424.14, 406.701, 67.9703, 0.2542", "425.162, 407.083, 68.5124, 0.2288", "426.169, 407.298, 69.7208, 0.2288", "426.91, 408.001, 70.8915, 0.2288", "427.054, 408.98, 72.24, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "389.005, 386.443, 42.002, 0.7118", "388.865, 387.941, 42.0311, 0.7372", "388.323, 388.943, 42.1641, 0.7626", "387.805, 389.901, 43.0108, 0.8136", "387.149, 390.734, 44.058, 0.788", "386.33, 391.526, 44.2425, 0.788", "385.425, 392.226, 44.294, 0.7118", "384.713, 393.115, 44.5197, 0.6356", "384.357, 394.11, 45.5798, 0.5592", "384.309, 395.194, 46.4716, 0.5592", "383.654, 396.129, 46.5564, 0.6356", "382.915, 396.997, 46.7877, 0.7372", "382.389, 397.971, 47.4989, 0.8136", "381.914, 399.01, 47.6207, 0.7626", "381.478, 400.067, 47.7249, 0.6102" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "385.584, 381.627, 24.5196, 0.7118", "385.092, 382.317, 23.9996, 0.6102", "384.366, 383.159, 23.3461, 0.5848", "383.562, 383.955, 22.9645, 0.5338", "382.642, 384.613, 22.7884, 0.483", "381.644, 384.819, 21.7899, 0.3814", "381.049, 384.286, 20.0458, 0.3304", "380.782, 383.234, 19.6764, 0.305", "380.54, 382.173, 20.522, 0.2796", "380.382, 381.093, 21.1918, 0.305", "380.193, 379.982, 21.0608, 0.3814", "379.643, 379.014, 20.7273, 0.483", "378.822, 378.238, 20.3843, 0.483", "377.878, 377.639, 19.8702, 0.3814", "376.823, 377.279, 19.3584, 0.2796", "375.748, 376.966, 18.8619, 0.2288", "375.14, 376.22, 18.9395, 0.2288", "375.169, 375.108, 19.5182, 0.2796", "374.78, 374.195, 20.0511, 0.4068", "374.311, 373.239, 20.221, 0.5848", "374.586, 372.198, 20.125, 0.661", "375.395, 371.552, 19.3662, 0.5848", "376.378, 371.165, 18.3106, 0.4068", "377.335, 370.667, 18.5559, 0.2796", "377.829, 369.798, 19.6605, 0.2288", "377.93, 368.723, 19.1862, 0.2796", "378.05, 367.611, 18.6088, 0.356", "378.295, 366.498, 18.6066, 0.4576", "378.444, 365.389, 19.1548, 0.483", "378.408, 364.255, 19.0064, 0.4576", "378.32, 363.334, 17.36, 0.3814" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "385.584, 381.627, 24.5196, 0.7118", "384.897, 381.619, 25.7536, 0.7372", "383.884, 381.491, 26.9506, 0.8644", "382.77, 381.415, 27.438, 0.966", "381.637, 381.392, 27.8023, 0.9152", "380.511, 381.286, 28.1884, 0.7372", "379.395, 381.069, 28.1599, 0.5592", "378.292, 380.781, 28.2024, 0.5084", "377.201, 380.453, 28.4474, 0.6356", "376.104, 380.139, 28.553, 0.7372", "375.014, 379.793, 28.5653, 0.7118", "373.989, 379.297, 28.5872, 0.5848", "373.013, 378.701, 28.6916, 0.5084", "371.971, 378.317, 29.1533, 0.5338", "370.856, 378.216, 29.664, 0.6102", "369.737, 378.205, 30.2406, 0.661", "368.608, 378.202, 30.662, 0.7118", "367.467, 378.176, 30.7885, 0.7118", "366.336, 378.018, 30.8014, 0.7118", "365.206, 377.846, 30.8084, 0.6356", "364.067, 377.846, 30.8549, 0.6102", "362.935, 377.994, 31.0078, 0.5848", "361.807, 377.922, 30.9322, 0.661", "360.67, 377.807, 30.8218, 0.6864", "359.532, 377.864, 30.8, 0.6864", "358.462, 378.237, 30.8006, 0.6356", "357.365, 378.551, 30.8031, 0.5848", "356.228, 378.607, 30.8224, 0.5848", "355.11, 378.397, 30.9394, 0.5848", "354.035, 378.078, 31.4516, 0.6102", "352.94, 377.791, 31.8195, 0.6102", "351.834, 377.505, 31.9122, 0.5592", "350.704, 377.338, 31.9206, 0.5084", "349.562, 377.295, 31.9234, 0.4576", "348.418, 377.284, 31.943, 0.4576", "347.276, 377.237, 32.0849, 0.483", "346.243, 376.858, 32.6704, 0.483", "345.242, 376.318, 32.8185, 0.483", "344.183, 375.979, 32.2784, 0.4068", "343.061, 376.057, 32.0432, 0.356", "342.048, 376.547, 32.3364, 0.356", "340.951, 376.691, 32.9022, 0.4322", "339.879, 376.343, 33.0322, 0.483", "338.795, 375.978, 33.04, 0.4576", "337.694, 375.987, 33.6798, 0.4322", "336.575, 376.19, 33.6538, 0.4576", "335.453, 376.056, 33.3438, 0.5084", "334.34, 376.15, 33.8604, 0.5084", "333.221, 376.327, 34.2418, 0.5084", "332.097, 376.322, 34.7497, 0.5338", "330.998, 376.044, 34.4375, 0.6102", "329.987, 375.525, 34.7337, 0.6356", "328.999, 375.065, 35.574, 0.5848", "327.917, 374.829, 36.2821, 0.483", "326.776, 374.776, 36.3958, 0.3814", "325.65, 374.573, 36.4, 0.356", "324.592, 374.138, 36.4, 0.356", "323.499, 373.8, 36.4, 0.4068", "322.361, 373.686, 36.4003, 0.4322", "321.249, 373.952, 36.4008, 0.4322", "320.16, 374.302, 36.4056, 0.4322", "319.109, 374.754, 36.4316, 0.483", "317.986, 374.967, 36.6058, 0.5592", "316.921, 374.796, 37.5357, 0.5592" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "400.107, 388.274, 29.9796, 0.8644", "400.487, 389.427, 28.0372, 0.7626", "400.622, 390.526, 27.3655, 0.8136", "400.675, 391.63, 26.6445, 0.8644", "400.93, 392.737, 26.355, 0.8644", "401.288, 393.823, 26.3208, 0.9152", "401.78, 394.856, 26.32, 0.9152", "402.354, 395.846, 26.32, 0.9406", "403.063, 396.743, 26.32, 0.839", "403.706, 397.689, 26.32, 0.7372", "404.388, 398.607, 26.3197, 0.6102", "404.719, 399.7, 26.3186, 0.5848", "404.801, 400.84, 26.3094, 0.5338", "405.093, 401.947, 26.2517, 0.5084", "405.534, 402.991, 25.8978, 0.4576", "405.88, 404.049, 25.2529, 0.5084", "406.16, 405.15, 24.9082, 0.5592", "406.462, 406.216, 24.2152, 0.5848", "406.733, 407.326, 24.0853, 0.5084", "407.328, 408.303, 24.0744, 0.4576", "407.929, 409.276, 24.0506, 0.4576", "408.308, 410.354, 23.8949, 0.5592", "408.645, 411.408, 23.1885, 0.6356", "408.971, 412.494, 22.8306, 0.6356", "409.299, 413.557, 22.1707, 0.5338", "409.346, 414.692, 21.8414, 0.3814", "408.865, 415.73, 21.84, 0.2796" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "400.107, 388.274, 29.9796, 0.8644", "399.801, 389.345, 30.8913, 0.966", "399.484, 390.396, 31.6901, 0.8898", "399.271, 391.516, 31.9166, 0.7626", "399.339, 392.657, 31.9315, 0.6864", "399.766, 393.719, 31.9878, 0.6864", "400.628, 394.465, 32.2196, 0.661" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "389.282, 392.85, 23.0213, 0.9914", "388.668, 394.179, 23.6477, 0.788", "388.25, 395.231, 24.0237, 0.8136", "387.818, 396.291, 24.0747, 0.7372", "387.338, 397.329, 24.0568, 0.7372", "386.966, 398.409, 23.9392, 0.7626", "386.843, 399.527, 23.4422, 0.839", "386.529, 400.607, 23.9204, 0.8644", "386.034, 401.635, 24.1083, 0.8136", "385.465, 402.625, 24.2796, 0.7118", "385.099, 403.671, 24.9738, 0.6356", "385.026, 404.807, 25.2196, 0.6356", "384.769, 405.92, 25.3977, 0.6356", "384.248, 406.908, 25.9907, 0.5848", "383.627, 407.86, 25.671, 0.5084", "383.01, 408.806, 25.2218, 0.4576", "382.62, 409.882, 25.2003, 0.5338", "382.291, 410.977, 25.2, 0.6102", "381.963, 412.073, 25.2, 0.7118", "381.498, 413.118, 25.2006, 0.7118", "381.126, 414.2, 25.2034, 0.7118", "380.651, 415.241, 25.2188, 0.6356", "380.335, 416.339, 25.3271, 0.5848" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "389.282, 392.85, 23.0213, 0.9914", "389.651, 393.417, 21.6059, 0.5084", "390.131, 394.149, 19.8204, 0.5338", "390.391, 395.246, 19.637, 0.5848", "390.789, 396.274, 19.4698, 0.6864", "390.76, 397.405, 19.6246, 0.7118", "390.643, 398.488, 19.0814, 0.6864", "391.025, 399.445, 18.3008, 0.6102", "391.438, 400.266, 19.5703, 0.5848", "391.718, 401.152, 18.6245, 0.6102", "392.136, 402.056, 19.6258, 0.661", "392.662, 403.028, 18.9563, 0.6356", "393.235, 403.991, 18.5394, 0.5084", "393.878, 404.518, 17.08, 0.356" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "418.011, 363.97, 26.1957, 1.1186", "419.589, 364.102, 25.4344, 0.7372", "420.692, 364.204, 24.752, 0.5848", "421.696, 363.903, 24.3264, 0.4322", "422.318, 362.984, 24.2836, 0.4068", "423.114, 362.403, 23.3257, 0.4068", "423.556, 362.658, 25.0981, 0.3814", "424.137, 363.409, 24.2312, 0.4068", "424.431, 364.423, 24.2936, 0.4322", "424.644, 365.527, 24.4124, 0.5084", "425.327, 366.375, 23.9464, 0.5338", "426.037, 366.087, 22.0676, 0.5592", "426.973, 365.703, 21.4626, 0.6356", "427.935, 365.373, 20.8502, 0.661", "428.48, 364.64, 19.5031, 0.6102", "429.457, 364.135, 19.32, 0.5084" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "418.011, 363.97, 26.1957, 1.1186", "419.351, 362.631, 26.32, 0.6864", "420.06, 361.733, 26.32, 0.483" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "396.077, 352.123, 32.0174, 0.661", "396.601, 351.19, 30.9473, 0.9152", "397.162, 350.335, 29.6915, 0.839", "398.05, 349.69, 29.0298, 0.839", "399.102, 349.283, 29.3622, 0.8644", "400.198, 348.959, 29.4431, 0.8644", "401.294, 348.664, 29.1278, 0.8644", "402.332, 348.188, 29.0564, 0.8136", "403.338, 347.668, 28.6787, 0.7372", "404.309, 347.112, 28.0927, 0.6356", "405.132, 346.394, 27.2717, 0.5848", "405.434, 345.358, 26.4214, 0.6102", "405.121, 344.299, 25.6878, 0.6864", "404.874, 343.2, 25.24, 0.7118", "405.003, 342.064, 25.1885, 0.7372", "405.266, 340.951, 25.1241, 0.7372", "405.571, 339.859, 24.8074, 0.7372", "406.149, 338.894, 24.3121, 0.7372", "406.853, 337.999, 24.0778, 0.6864", "407.437, 337.018, 24.022, 0.6864", "407.802, 335.94, 23.7751, 0.6356", "408.091, 334.856, 23.233, 0.7118", "408.301, 333.759, 22.636, 0.7118", "408.353, 332.68, 21.7532, 0.6864", "408.147, 331.689, 20.4915, 0.483", "407.641, 330.721, 19.7224, 0.3814", "407.493, 329.648, 19.5989, 0.3304", "408.081, 328.698, 19.4426, 0.4322", "408.788, 327.861, 19.2189, 0.4576", "409.113, 326.785, 19.2083, 0.5338", "409.453, 325.705, 19.0562, 0.5084", "410.401, 325.332, 18.6469, 0.5338", "411.496, 325.01, 18.48, 0.4576" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "396.077, 352.123, 32.0174, 0.661", "396.314, 350.909, 32.4302, 0.9406", "396.482, 349.866, 31.3981, 1.0168", "396.465, 348.745, 30.8521, 1.0932", "396.219, 347.628, 30.8006, 1.1186", "395.971, 346.512, 30.8, 1.1186", "395.577, 345.438, 30.8, 1.1186", "395.098, 344.399, 30.8, 1.144", "394.555, 342.189, 30.7944, 1.2456", "393.622, 340.103, 30.6158, 1.1694", "392.889, 337.977, 29.6918, 1.1186", "392.664, 336.855, 29.6845, 1.0678", "392.429, 335.735, 29.7083, 1.0168", "392.564, 334.602, 29.8712, 0.966", "392.826, 333.531, 30.6197, 0.9406", "392.834, 332.405, 31.1142, 0.8898", "392.754, 331.3, 31.8086, 0.8136", "392.38, 330.221, 31.6333, 0.661" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "387.357, 338.722, 49.6404, 1.144", "388.213, 338.028, 51.3699, 0.788", "389.057, 337.331, 52.1396, 0.7626", "389.651, 336.659, 53.7942, 0.6864", "390.282, 335.787, 54.3648, 0.661", "391.138, 335.055, 54.6879, 0.6864", "391.922, 334.364, 55.7567, 0.788", "392.602, 333.532, 56.6902, 0.839", "393.246, 332.636, 57.4207, 0.839", "394.009, 331.803, 57.7917, 0.7626", "394.862, 331.064, 58.2352, 0.661", "395.659, 330.282, 58.823, 0.6102", "396.085, 329.257, 59.2774, 0.6102", "396.482, 328.192, 59.1027, 0.7118", "396.981, 327.179, 59.423, 0.7626", "397.51, 326.215, 60.1787, 0.8136", "398.078, 325.268, 60.9078, 0.8136", "398.545, 324.233, 61.1478, 0.839", "399.102, 323.237, 61.313, 0.7372", "399.741, 322.296, 61.588, 0.661", "400.341, 321.343, 62.078, 0.6102", "400.95, 320.379, 62.1589, 0.661", "401.591, 319.431, 62.1877, 0.6102", "402.043, 318.384, 62.2824, 0.5084", "402.467, 317.323, 62.3862, 0.4576", "402.776, 316.222, 62.4036, 0.5592", "403.172, 315.48, 64.038, 0.6864", "403.435, 314.552, 64.0002, 0.7626", "403.849, 313.779, 62.2322, 0.7372", "404.435, 312.889, 61.7453, 0.7118", "404.841, 311.838, 62.0802, 0.7118", "405.5, 310.915, 62.0861, 0.7372", "406.183, 310.014, 62.417, 0.7118", "406.719, 309.006, 62.2656, 0.6356", "407.291, 308.037, 62.0486, 0.5592", "408.088, 307.265, 61.9399, 0.5338", "408.522, 306.332, 62.8774, 0.5338", "409.171, 305.495, 63.0678, 0.5084", "409.993, 304.709, 62.7564, 0.5084", "410.376, 303.654, 63.2111, 0.5084", "411.036, 302.768, 63.8977, 0.5338", "411.611, 301.788, 64.062, 0.5592", "412.263, 300.856, 63.9086, 0.6102", "412.829, 299.886, 63.9876, 0.6864", "413.205, 298.81, 63.7118, 0.7372", "413.565, 297.739, 63.8061, 0.7626", "414.167, 296.839, 63.7767, 0.7626", "414.696, 295.878, 63.9957, 0.7626", "415.406, 295.065, 63.5051, 0.7118", "415.916, 294.069, 63.775, 0.6864", "416.428, 293.173, 62.9686, 0.6356", "417.127, 292.446, 63.9506, 0.7118", "417.721, 291.493, 63.5592, 0.7372", "418.171, 290.451, 63.7034, 0.7626", "418.511, 289.376, 63.5505, 0.6864", "418.729, 288.258, 63.299, 0.6356", "419.18, 287.273, 64.1382, 0.6356", "419.421, 286.162, 64.2662, 0.6356", "419.564, 285.064, 64.5156, 0.661", "419.704, 283.987, 65.3864, 0.7118", "419.972, 282.91, 66.0307, 0.7626", "420.441, 281.918, 66.8069, 0.7118", "421.093, 281.103, 65.6692, 0.6102", "421.865, 280.265, 65.8364, 0.5592", "422.45, 279.385, 66.8125, 0.6102", "422.801, 278.348, 67.4139, 0.5848", "423.31, 277.491, 67.4498, 0.5084", "423.435, 276.59, 66.9603, 0.4322", "423.873, 275.74, 68.2382, 0.483", "424.15, 274.746, 68.383, 0.5592", "424.676, 273.764, 68.5076, 0.5592", "424.892, 272.643, 68.5927, 0.483", "425.314, 271.619, 68.0386, 0.4322", "426.037, 270.84, 67.7093, 0.483", "426.293, 269.854, 66.8534, 0.5592", "426.921, 268.933, 67.013, 0.5592", "427.558, 268.035, 66.7842, 0.5084", "427.771, 266.923, 66.64, 0.4322", "427.861, 265.79, 66.4146, 0.4576", "428.013, 264.707, 66.6557, 0.483", "428.203, 263.619, 67.3327, 0.5848", "428.556, 262.598, 68.1436, 0.6356", "428.801, 261.483, 68.115, 0.6864", "429.145, 260.396, 68.29, 0.661", "429.449, 259.352, 68.4396, 0.6102", "429.079, 258.312, 68.7445, 0.5338", "428.58, 257.283, 68.6325, 0.5084", "428.705, 256.277, 69.4582, 0.5338", "428.684, 255.222, 68.7604, 0.6102", "429.07, 254.167, 69.2381, 0.6102", "429.344, 253.057, 69.356, 0.5338", "429.656, 251.964, 69.5957, 0.3814", "430.072, 250.901, 69.762, 0.305", "430.44, 249.846, 69.6713, 0.305", "430.943, 248.933, 69.3812, 0.356", "431.215, 247.934, 70.3662, 0.3814", "431.342, 246.823, 70.2276, 0.4068", "431.477, 245.725, 70.0686, 0.4322", "431.407, 244.623, 70.6118, 0.4322", "431.526, 243.557, 71.0654, 0.356", "431.968, 242.515, 71.4815, 0.2796", "432.45, 241.494, 71.9298, 0.2288", "432.933, 240.473, 72.3783, 0.2288", "433.416, 239.453, 72.8266, 0.2288", "433.899, 238.431, 73.2749, 0.2288", "434.232, 237.408, 73.7943, 0.2288", "433.895, 236.369, 74.6298, 0.2288", "433.559, 235.33, 75.4653, 0.2288", "433.223, 234.291, 76.3008, 0.2288", "433.0, 233.222, 76.9056, 0.2288", "433.036, 232.078, 76.9787, 0.2288", "433.073, 230.935, 77.0518, 0.2288", "433.14, 229.817, 77.387, 0.2288", "433.287, 228.766, 78.4333, 0.2288", "433.434, 227.715, 79.4797, 0.2288", "433.582, 226.664, 80.526, 0.2288", "433.729, 225.614, 81.5724, 0.2288", "433.858, 224.555, 82.5782, 0.2288", "433.907, 223.463, 83.4095, 0.2288", "433.955, 222.372, 84.2411, 0.2288", "434.003, 221.281, 85.0727, 0.2288", "434.052, 220.19, 85.9043, 0.2288", "434.1, 219.099, 86.7359, 0.2288", "434.149, 218.008, 87.5672, 0.2288", "434.197, 216.916, 88.3988, 0.2288", "434.245, 215.816, 89.1005, 0.2288", "434.291, 214.673, 89.1229, 0.2288", "434.337, 213.53, 89.145, 0.2288", "434.383, 212.387, 89.1674, 0.2288", "434.428, 211.244, 89.1898, 0.305", "434.435, 210.109, 89.2175, 0.3814", "433.906, 209.097, 89.3225, 0.4576", "433.376, 208.083, 89.4275, 0.3814", "432.845, 207.071, 89.5328, 0.356", "432.315, 206.057, 89.6378, 0.4322", "431.786, 205.045, 89.7428, 0.6864" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "387.357, 338.722, 49.6404, 1.144", "386.361, 338.305, 50.9146, 0.8898", "385.416, 337.816, 51.9428, 0.8136", "384.507, 337.125, 52.1013, 0.8136", "383.514, 336.559, 52.1962, 0.9152", "382.511, 336.028, 52.5591, 0.966", "381.551, 335.447, 53.1009, 0.9406", "380.593, 334.823, 53.0768, 0.839", "379.628, 334.215, 52.8464, 0.7626", "378.601, 333.719, 53.0225, 0.7118", "377.58, 333.351, 53.9014, 0.661", "376.499, 333.026, 54.32, 0.6356", "375.522, 332.434, 54.3206, 0.5848", "374.638, 331.705, 54.3236, 0.5848", "373.73, 331.012, 54.3388, 0.6102", "372.747, 330.428, 54.4222, 0.6864", "371.817, 329.779, 54.7826, 0.661", "370.9, 329.141, 55.3636, 0.5848", "369.874, 328.638, 55.44, 0.5338", "368.842, 328.145, 55.44, 0.6102", "367.884, 327.526, 55.44, 0.7372", "367.122, 326.673, 55.4403, 0.7372", "366.37, 325.812, 55.442, 0.7118", "365.506, 325.063, 55.4498, 0.661", "364.738, 324.216, 55.4932, 0.6864", "364.046, 323.31, 55.6917, 0.6864", "363.336, 322.435, 56.1677, 0.661", "362.706, 321.496, 56.5723, 0.6864", "361.97, 320.625, 56.6325, 0.6864", "361.071, 319.927, 56.8744, 0.7372", "360.202, 319.209, 57.344, 0.661", "359.404, 318.401, 57.6702, 0.6102", "358.564, 317.626, 57.7018, 0.5848", "357.677, 316.907, 57.7931, 0.6864", "356.901, 316.083, 58.1456, 0.788", "356.274, 315.15, 58.6342, 0.788", "355.717, 314.155, 58.7958, 0.7626", "355.093, 313.196, 58.7773, 0.7626", "354.545, 312.195, 58.6488, 0.8136", "354.072, 311.174, 58.1792, 0.8136", "353.453, 310.239, 57.713, 0.7118", "352.684, 309.391, 57.6349, 0.6102", "351.98, 308.505, 57.4364, 0.5084", "351.47, 307.507, 56.8809, 0.5338", "351.029, 306.465, 56.5888, 0.5848", "350.874, 305.346, 56.5818, 0.661", "351.017, 304.217, 56.7518, 0.6864", "350.994, 303.106, 57.0909, 0.6864", "350.537, 302.072, 56.9416, 0.661", "349.851, 301.166, 56.8341, 0.6356", "349.142, 300.277, 57.0002, 0.5848", "348.464, 299.361, 56.7902, 0.6356", "347.761, 298.463, 56.5928, 0.7118", "347.142, 297.508, 56.5555, 0.788", "346.637, 296.483, 56.5362, 0.7626", "346.026, 295.52, 56.4514, 0.6864", "345.31, 294.645, 56.1154, 0.6356", "344.503, 293.887, 55.6114, 0.5848", "343.555, 293.258, 55.4529, 0.5338", "342.737, 292.468, 55.44, 0.5084", "342.206, 291.483, 55.44, 0.5338", "341.97, 290.363, 55.44, 0.5592", "341.643, 289.28, 55.4397, 0.5592", "341.023, 288.33, 55.4392, 0.5084", "340.178, 287.573, 55.4361, 0.5084", "339.185, 287.011, 55.4148, 0.5338", "338.257, 286.389, 55.2633, 0.5848", "337.677, 285.564, 54.3074, 0.6356", "337.048, 284.887, 53.5632, 0.6356", "336.04, 284.395, 54.1038, 0.661", "335.152, 283.736, 54.4054, 0.661", "334.433, 282.883, 53.9636, 0.6864", "333.715, 282.02, 53.4192, 0.661", "333.124, 281.082, 53.919, 0.5848", "332.491, 280.159, 53.8336, 0.483", "332.142, 279.198, 53.4604, 0.4322", "331.728, 278.32, 53.8714, 0.4576", "331.452, 277.275, 53.3764, 0.483", "331.285, 276.149, 53.5072, 0.483", "331.029, 275.046, 53.5209, 0.4322", "330.529, 274.041, 53.2322, 0.4068", "329.979, 273.065, 53.193, 0.356", "329.437, 272.066, 53.2834, 0.3304", "328.869, 271.08, 52.999, 0.305", "327.899, 270.559, 52.6778, 0.2796", "326.84, 270.143, 52.8928, 0.2796", "325.777, 269.961, 52.0534, 0.2796", "324.656, 270.074, 51.6617, 0.4068", "323.522, 270.213, 51.52, 0.483" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "416.638, 345.072, 53.1432, 0.839", "417.95, 345.364, 54.5958, 0.8898", "419.048, 345.557, 55.1832, 0.7372", "420.18, 345.503, 55.5044, 0.7626", "421.292, 345.289, 55.7948, 0.788", "422.383, 345.282, 56.6138, 0.788", "423.419, 345.377, 57.7651, 0.661", "424.461, 345.68, 58.6074, 0.6356", "425.516, 346.071, 58.9786, 0.6356", "426.632, 346.174, 59.4843, 0.7118", "427.725, 346.174, 60.3103, 0.7118", "428.843, 346.172, 60.8555, 0.7372", "429.985, 346.159, 60.8927, 0.7626", "431.114, 346.094, 60.5016, 0.788", "432.218, 345.892, 60.0242, 0.7626", "433.315, 345.569, 59.9416, 0.7118", "434.405, 345.229, 60.0513, 0.7118", "435.481, 344.905, 60.4649, 0.7626", "436.578, 344.792, 61.2002, 0.788", "437.691, 344.746, 61.7985, 0.839", "438.817, 344.591, 61.8629, 0.839", "439.934, 344.415, 61.5104, 0.8644", "441.067, 344.427, 61.5734, 0.788", "442.17, 344.652, 62.008, 0.788", "443.246, 345.03, 62.16, 0.788", "444.298, 345.48, 62.1608, 0.8644", "445.341, 345.949, 62.165, 0.8898", "446.404, 346.371, 62.19, 0.9406", "447.477, 346.76, 62.3364, 0.966", "448.572, 347.026, 62.7267, 0.9152", "449.701, 347.093, 63.0899, 0.8644", "450.84, 347.115, 63.2856, 0.788", "451.945, 347.218, 63.866, 0.8136", "452.979, 347.429, 64.9365, 0.788", "454.007, 347.656, 66.0148, 0.839", "455.064, 347.99, 66.6271, 0.839", "456.103, 348.436, 67.0169, 0.8644", "457.136, 348.88, 67.5416, 0.8136", "458.192, 349.244, 68.061, 0.788", "459.297, 349.397, 68.6532, 0.6864", "460.396, 349.549, 69.2748, 0.6102", "461.413, 349.98, 69.8132, 0.5848", "462.273, 350.711, 70.0977, 0.661", "463.048, 351.527, 70.5272, 0.7118", "463.917, 352.177, 71.3152, 0.6864", "464.955, 352.514, 71.9872, 0.6102", "466.077, 352.646, 72.4209, 0.5084", "467.14, 352.95, 72.9221, 0.4322", "467.984, 353.654, 73.4023, 0.4068", "468.629, 354.567, 73.9584, 0.4576", "469.327, 355.393, 74.7967, 0.4576", "470.068, 356.051, 76.1331, 0.483", "470.611, 356.812, 77.6552, 0.5084", "470.864, 357.773, 78.9894, 0.6356", "471.044, 358.753, 80.3583, 0.6356", "471.403, 359.711, 81.564, 0.5592", "471.905, 360.695, 82.1976, 0.4322", "472.241, 361.765, 82.5356, 0.3814", "472.528, 362.711, 83.6998, 0.3814", "472.786, 363.677, 84.9761, 0.3814", "472.972, 364.74, 85.8942, 0.3814", "473.273, 365.795, 86.6524, 0.3814", "473.824, 366.681, 87.7234, 0.356", "474.311, 367.636, 88.6976, 0.3304", "475.063, 368.302, 89.434, 0.356", "476.083, 368.202, 90.536, 0.3814", "477.204, 368.204, 90.6744, 0.4322", "478.261, 368.536, 91.0003, 0.3814", "479.314, 368.762, 91.4105, 0.356", "480.432, 368.67, 91.6866, 0.2796", "481.55, 368.591, 92.1984, 0.2542", "482.647, 368.359, 92.3843, 0.2288", "483.72, 367.963, 92.4, 0.2542", "484.663, 367.382, 92.0066, 0.2796", "485.627, 366.883, 91.2335, 0.305", "486.666, 366.464, 91.5891, 0.305", "487.635, 365.966, 92.4244, 0.305", "488.596, 366.081, 93.7364, 0.305", "489.227, 366.668, 95.2084, 0.2796", "490.328, 366.804, 95.2403, 0.2542", "491.432, 366.956, 95.3271, 0.2288", "492.507, 367.334, 95.48, 0.2288", "493.554, 367.795, 95.48, 0.2288", "494.631, 368.12, 95.835, 0.2288", "495.561, 368.529, 94.8492, 0.2288", "496.432, 369.089, 95.6206, 0.2288", "497.299, 369.666, 96.7742, 0.2288", "498.166, 370.244, 97.9278, 0.2288", "498.761, 371.146, 98.2957, 0.2288", "499.237, 372.185, 98.3254, 0.2288", "499.714, 373.225, 98.3553, 0.2288", "500.196, 374.261, 98.3847, 0.2288", "501.153, 374.887, 98.3651, 0.2288", "502.111, 375.512, 98.3452, 0.2288", "503.111, 376.041, 98.3329, 0.2288", "504.222, 376.316, 98.3402, 0.2288", "505.331, 376.592, 98.3475, 0.2288", "506.442, 376.868, 98.355, 0.2288", "507.552, 377.144, 98.3623, 0.2288", "508.663, 377.419, 98.3696, 0.2288", "509.772, 377.695, 98.3769, 0.2288", "510.883, 377.971, 98.3842, 0.2288", "511.993, 378.246, 98.3914, 0.2288", "513.136, 378.257, 98.4015, 0.2288", "514.281, 378.257, 98.4119, 0.2288", "515.424, 378.256, 98.4222, 0.2288", "516.568, 378.256, 98.4326, 0.2288", "517.484, 378.866, 98.4287, 0.2288", "518.344, 379.618, 98.4214, 0.2288", "519.208, 380.371, 98.4141, 0.2288", "520.068, 381.124, 98.4066, 0.2288", "521.13, 381.532, 98.3984, 0.2288", "522.21, 381.908, 98.3903, 0.2288", "523.292, 382.284, 98.3819, 0.2796", "524.333, 382.73, 98.378, 0.3304", "525.221, 383.449, 98.39, 0.3814", "526.11, 384.17, 98.4018, 0.3304", "527.0, 384.89, 98.4138, 0.2796", "527.75, 385.745, 98.4012, 0.2288", "528.447, 386.651, 98.3794, 0.2288", "529.145, 387.559, 98.3576, 0.2288", "529.84, 388.466, 98.3357, 0.2288", "530.523, 389.383, 98.3226, 0.2288", "531.179, 390.321, 98.3245, 0.2288", "531.834, 391.258, 98.3265, 0.2288", "532.49, 392.196, 98.3284, 0.2288", "533.146, 393.133, 98.3304, 0.2542", "533.38, 394.204, 98.3464, 0.2796", "533.336, 395.332, 98.366, 0.305", "532.589, 396.197, 98.3212, 0.2796", "532.116, 397.129, 98.2909, 0.2542", "532.387, 398.241, 98.3018, 0.2288", "532.658, 399.352, 98.3125, 0.2288", "532.929, 400.464, 98.3234, 0.2288", "532.744, 401.504, 98.3503, 0.2288", "532.145, 402.479, 98.3914, 0.2288", "531.704, 403.51, 98.5373, 0.2542", "531.508, 404.63, 98.8459, 0.305", "531.312, 405.75, 99.1544, 0.356", "531.053, 406.856, 99.3773, 0.356", "530.641, 407.922, 99.3877, 0.305", "530.229, 408.989, 99.3983, 0.2542", "529.818, 410.056, 99.409, 0.305", "529.406, 411.124, 99.4193, 0.3814", "529.13, 412.206, 99.4358, 0.483", "529.304, 413.336, 99.4728, 0.4322" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "416.638, 345.072, 53.1432, 0.839", "417.189, 344.701, 52.943, 0.7372", "418.081, 344.005, 52.5384, 0.8136", "418.917, 343.27, 52.8254, 0.8136", "419.74, 342.599, 53.8395, 0.8136", "420.592, 341.936, 54.7383, 0.8898", "421.486, 341.254, 55.2101, 0.9914", "422.391, 340.565, 55.1323, 0.9914", "423.345, 339.967, 54.6932, 0.966", "424.299, 339.378, 54.8792, 0.8644", "425.239, 338.751, 55.307, 0.839", "426.141, 338.055, 55.4425, 0.839", "427.051, 337.361, 55.4719, 0.9152", "428.071, 336.871, 55.6153, 0.9406", "429.126, 336.509, 56.1778, 0.839", "430.148, 336.035, 56.5177, 0.661", "431.068, 335.367, 56.5701, 0.5084", "431.907, 334.59, 56.6006, 0.5084", "432.747, 333.816, 56.7246, 0.6102", "433.657, 333.161, 57.1841, 0.7626", "434.606, 332.553, 57.1155, 0.9152", "435.568, 331.957, 56.7062, 0.9914", "436.398, 331.194, 56.5995, 0.966", "437.213, 330.396, 56.777, 0.839", "437.847, 329.508, 57.4428, 0.7626", "438.215, 328.487, 58.2714, 0.788", "438.71, 327.494, 58.8095, 0.8898", "439.448, 326.658, 59.3354, 0.9406", "440.193, 325.814, 59.8018, 0.839", "440.896, 324.915, 59.9861, 0.6864", "441.647, 324.062, 60.2199, 0.5848", "442.486, 323.346, 60.8863, 0.6356", "443.228, 322.544, 61.651, 0.7118", "443.95, 321.695, 62.2768, 0.7626", "444.746, 320.945, 63.0616, 0.788", "445.484, 320.164, 64.0091, 0.8136", "446.258, 319.354, 64.3773, 0.839", "447.122, 318.606, 64.4241, 0.839", "448.115, 318.06, 64.5532, 0.839", "449.179, 317.778, 65.1879, 0.8136", "450.165, 317.54, 66.4465, 0.7372", "451.244, 317.361, 67.0631, 0.6356", "452.378, 317.223, 67.1826, 0.5592", "453.477, 317.004, 67.6578, 0.5848", "454.602, 317.021, 67.9773, 0.661", "455.692, 317.224, 68.6151, 0.788", "456.769, 317.273, 69.5167, 0.8898", "457.878, 317.109, 69.9465, 0.9406", "458.99, 316.846, 70.0384, 0.8898", "460.117, 316.685, 70.2612, 0.7626", "461.213, 316.679, 71.0114, 0.7118", "462.269, 316.422, 71.8276, 0.661", "463.279, 315.922, 71.6327, 0.661", "464.341, 315.535, 71.2127, 0.6102", "465.449, 315.282, 71.398, 0.7118", "466.503, 314.888, 71.8894, 0.8136", "467.564, 314.483, 72.2123, 0.9152", "468.667, 314.184, 72.24, 0.8898", "469.777, 313.908, 72.2408, 0.8136", "470.872, 313.576, 72.245, 0.7626", "471.936, 313.157, 72.2669, 0.7372", "472.964, 312.66, 72.3892, 0.788", "473.997, 312.201, 72.8283, 0.7626", "474.987, 311.663, 73.3074, 0.7372", "475.96, 311.071, 73.5445, 0.7626", "476.897, 310.597, 74.627, 0.839", "477.54, 309.706, 74.1126, 0.8898", "478.301, 308.914, 73.5039, 0.839", "479.168, 308.193, 73.7338, 0.7626", "480.075, 307.537, 74.317, 0.7372", "481.029, 306.974, 74.9776, 0.7118", "481.938, 306.344, 75.5723, 0.7118", "482.801, 305.644, 76.1975, 0.6102", "483.761, 305.068, 76.657, 0.5338", "484.792, 304.58, 76.8471, 0.4576", "485.824, 304.135, 77.3049, 0.483", "486.831, 303.636, 77.7358, 0.5084", "487.835, 303.092, 77.8355, 0.5848", "488.782, 302.461, 77.8431, 0.661", "489.69, 301.766, 77.8562, 0.7372", "490.558, 301.025, 77.9461, 0.7118", "491.459, 300.406, 78.519, 0.6102", "492.459, 299.916, 78.8903, 0.483", "493.482, 299.404, 78.7864, 0.4068", "494.427, 298.781, 78.5464, 0.3814", "495.344, 298.157, 78.902, 0.4068", "496.361, 297.664, 79.2254, 0.4576", "497.398, 297.239, 79.7549, 0.5592", "498.396, 297.103, 81.0107, 0.6356", "499.354, 296.559, 80.5216, 0.6864", "500.204, 295.867, 81.065, 0.6356", "501.146, 295.318, 80.3919, 0.5338", "502.04, 294.761, 81.0494, 0.3814", "502.951, 294.208, 81.6676, 0.305", "504.025, 293.82, 81.76, 0.3304", "504.989, 293.23, 81.5629, 0.4068", "505.774, 292.41, 81.5315, 0.4576", "506.672, 291.714, 81.5209, 0.4068", "507.652, 291.133, 81.6939, 0.356", "508.644, 290.568, 81.8546, 0.2796", "509.617, 289.999, 82.3234, 0.2796", "510.644, 289.51, 82.5756, 0.2796", "511.406, 288.696, 82.1442, 0.305", "511.972, 287.706, 82.1271, 0.305", "512.525, 286.739, 82.6, 0.3304", "513.432, 286.056, 82.6232, 0.356", "514.114, 285.139, 82.7378, 0.4068", "514.781, 284.216, 82.6725, 0.4322", "515.459, 283.345, 83.0519, 0.4576", "516.348, 282.684, 83.4224, 0.4576", "517.015, 281.829, 84.2106, 0.483", "517.95, 281.519, 84.8543, 0.5592", "518.73, 280.978, 84.6488, 0.5848", "519.615, 280.349, 84.9957, 0.5338", "520.615, 279.809, 85.3042, 0.4068", "521.112, 278.836, 85.9617, 0.3814", "521.973, 278.121, 86.5295, 0.4576", "522.786, 277.334, 86.8328, 0.5338", "523.803, 276.894, 87.4885, 0.5084", "524.59, 276.202, 88.2851, 0.4068", "525.042, 275.184, 88.76, 0.3304", "525.844, 274.455, 88.5122, 0.305", "526.689, 273.938, 89.0246, 0.356", "527.219, 273.089, 90.048, 0.483", "527.041, 272.043, 90.44, 0.661" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "427.054, 408.98, 72.24, 0.2288", "426.648, 409.823, 71.6288, 0.2288", "426.169, 410.818, 70.9066, 0.2542", "425.756, 411.851, 70.3385, 0.3304", "425.652, 412.96, 69.9331, 0.4068", "425.835, 414.066, 70.044, 0.4322", "426.08, 415.177, 70.2612, 0.356", "426.139, 416.314, 70.28, 0.305", "426.503, 417.378, 70.28, 0.3304", "427.094, 418.35, 70.0339, 0.4576", "427.591, 419.373, 69.7407, 0.5338", "428.064, 420.255, 71.0111, 0.5338", "428.426, 421.091, 72.539, 0.4322", "428.658, 422.011, 72.3562, 0.4068", "429.069, 423.041, 71.7296, 0.3814", "429.322, 424.116, 72.3316, 0.4068", "429.689, 424.886, 73.768, 0.3814", "429.769, 425.885, 72.6228, 0.4068", "429.733, 426.777, 71.0805, 0.4576", "429.699, 427.885, 70.8173, 0.483", "430.089, 428.769, 71.0844, 0.483", "430.644, 429.724, 70.6782, 0.4322", "431.122, 430.645, 71.671, 0.4068", "431.325, 431.771, 71.6736, 0.3814", "431.407, 432.906, 71.4599, 0.4322", "431.929, 433.905, 71.2684, 0.483", "432.791, 434.531, 70.9649, 0.5084", "433.778, 434.931, 71.3017, 0.4576", "434.616, 435.657, 71.755, 0.3814", "435.426, 436.435, 71.8729, 0.3304", "436.337, 437.11, 71.9524, 0.3304", "436.944, 437.941, 73.0327, 0.4576", "437.802, 438.689, 72.821, 0.661", "438.57, 439.499, 72.6692, 0.8136", "439.078, 440.511, 72.6356, 0.788", "439.631, 441.374, 73.369, 0.6102", "440.023, 442.396, 73.8094, 0.4322", "440.638, 443.219, 72.7874, 0.3304", "441.264, 444.165, 72.7264, 0.305", "442.081, 444.955, 72.5659, 0.305", "442.704, 445.874, 72.2714, 0.2796", "443.236, 446.861, 72.2434, 0.2542", "444.102, 447.476, 72.8784, 0.2288", "444.65, 448.266, 73.8489, 0.2288", "445.006, 449.323, 74.4024, 0.2288", "445.451, 450.37, 74.6833, 0.2288", "446.114, 451.283, 74.76, 0.2288", "447.066, 451.878, 74.9736, 0.2288", "447.737, 452.753, 74.7782, 0.2542", "448.234, 453.781, 74.7734, 0.305", "448.742, 454.756, 75.3872, 0.356", "449.479, 455.507, 76.1127, 0.356", "450.081, 456.361, 76.6962, 0.305", "450.934, 457.07, 77.114, 0.2542", "451.794, 457.76, 77.5561, 0.2542", "452.644, 458.509, 77.56, 0.2796", "453.411, 459.168, 78.5988, 0.305", "453.702, 460.08, 79.9484, 0.305", "454.51, 460.803, 79.52, 0.305" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "427.054, 408.98, 72.24, 0.2288", "427.139, 409.354, 72.3657, 0.305", "427.477, 410.418, 72.9277, 0.2796", "427.876, 411.477, 73.2063, 0.2796", "428.641, 411.954, 74.1698, 0.3304", "429.696, 411.967, 74.387, 0.4322", "430.3, 412.673, 75.1428, 0.5338", "430.991, 413.554, 75.6706, 0.6102", "431.604, 414.382, 76.2059, 0.6864", "432.417, 414.817, 75.9091, 0.7118", "433.157, 415.304, 77.005, 0.7118", "433.91, 416.107, 76.8544, 0.6864", "433.935, 416.583, 79.0339, 0.6864", "434.646, 417.377, 79.3366, 0.6102", "434.893, 418.056, 81.384, 0.5338", "434.772, 418.461, 83.7824, 0.483", "434.57, 419.504, 84.3937, 0.5084", "434.902, 420.373, 84.544, 0.5084", "435.897, 420.541, 85.731, 0.4322", "436.703, 420.618, 87.6215, 0.356", "437.676, 420.649, 88.9445, 0.305", "438.68, 420.649, 90.281, 0.305", "439.781, 420.544, 90.3496, 0.356", "440.077, 420.831, 87.8679, 0.4068", "440.718, 421.572, 89.1878, 0.4576", "441.298, 422.222, 90.8085, 0.4068", "441.943, 423.108, 91.2727, 0.356", "442.4, 424.114, 91.0426, 0.3304", "442.646, 424.521, 93.2028, 0.4068", "442.969, 425.279, 94.7377, 0.5084", "443.363, 426.264, 93.8557, 0.5592", "443.747, 427.328, 94.0766, 0.5338", "443.904, 428.459, 94.1422, 0.4322", "444.055, 429.587, 94.2752, 0.3814", "444.277, 430.702, 93.9823, 0.3304", "444.508, 431.813, 93.6502, 0.3304", "444.663, 432.941, 93.52, 0.2796", "444.672, 434.06, 93.8375, 0.2796", "444.699, 435.146, 94.6663, 0.3304", "444.766, 436.263, 95.2148, 0.4322", "444.787, 437.352, 95.067, 0.483", "444.711, 438.417, 94.0794, 0.4576", "444.594, 439.534, 93.7513, 0.3814", "444.387, 440.656, 93.7838, 0.356", "444.196, 441.78, 94.012, 0.3304", "444.251, 442.659, 95.6192, 0.356", "444.426, 443.695, 96.5653, 0.3814", "444.214, 444.762, 95.7491, 0.4576", "444.219, 445.881, 95.258, 0.5084", "444.079, 446.98, 95.4915, 0.483", "443.702, 448.032, 95.9025, 0.4068", "443.269, 449.022, 96.3413, 0.305", "442.74, 449.999, 96.7369, 0.2796", "442.306, 451.053, 96.691, 0.356", "441.858, 452.104, 96.6, 0.4576", "441.552, 453.201, 96.6, 0.5084", "441.328, 454.324, 96.6, 0.4068", "441.097, 455.439, 96.3866, 0.3304", "440.749, 456.523, 96.4541, 0.2796", "440.748, 457.504, 97.708, 0.356", "441.279, 458.414, 97.5531, 0.4322", "441.785, 459.211, 98.7694, 0.5084", "442.2, 460.266, 98.5653, 0.483", "442.377, 461.374, 98.28, 0.3814", "442.384, 462.518, 98.28, 0.305", "442.444, 463.621, 98.756, 0.2796", "442.565, 464.721, 99.2883, 0.305", "442.613, 465.862, 99.4081, 0.2796", "442.616, 466.966, 100.009, 0.2796", "442.633, 468.078, 100.52, 0.3304", "442.434, 469.165, 101.006, 0.4068", "442.457, 470.294, 101.052, 0.4322", "442.392, 471.433, 100.92, 0.356", "442.415, 472.562, 101.324, 0.3304", "442.841, 473.616, 101.36, 0.356" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "381.478, 400.067, 47.7249, 0.6102", "381.485, 400.44, 47.584, 0.2542", "381.504, 401.57, 47.1565, 0.2796", "381.523, 402.701, 46.7289, 0.3304", "381.513, 403.251, 46.6796, 0.356", "381.62, 404.386, 46.48, 0.4322", "381.899, 405.492, 46.4279, 0.4576", "382.161, 406.581, 45.9824, 0.483", "382.363, 407.691, 46.2196, 0.4576", "382.553, 408.807, 45.8352, 0.483", "382.986, 409.84, 45.64, 0.483", "383.507, 410.854, 45.8158, 0.5084", "383.69, 411.95, 46.1916, 0.5084", "383.969, 413.002, 45.9754, 0.6102", "384.16, 414.057, 45.071, 0.6864", "384.382, 415.114, 44.6995, 0.7626", "384.773, 416.16, 44.3806, 0.6864", "385.049, 417.261, 44.1599, 0.5592", "385.609, 418.195, 43.4042, 0.483", "385.842, 419.308, 43.6755, 0.5338", "385.892, 420.413, 44.0751, 0.661", "385.639, 421.479, 43.4706, 0.6864", "385.632, 422.512, 42.3942, 0.6864", "385.493, 423.627, 42.2523, 0.661", "384.901, 424.542, 42.5429, 0.7118", "384.164, 425.241, 41.832, 0.6864", "384.004, 426.204, 40.6232, 0.6102", "384.042, 427.25, 40.0252, 0.5084", "384.288, 428.219, 39.3414, 0.4576", "385.044, 429.055, 39.5318, 0.5084", "385.988, 429.599, 38.962, 0.5338", "386.912, 430.122, 39.6155, 0.5592", "387.7, 430.921, 39.5038, 0.483", "388.139, 431.97, 39.2837, 0.4576", "388.373, 433.083, 39.1784, 0.4322", "388.493, 434.169, 38.4406, 0.483", "388.528, 435.31, 38.4997, 0.4576", "388.603, 436.446, 38.5764, 0.4322", "388.61, 437.585, 38.579, 0.3814", "388.712, 438.722, 38.7192, 0.3814", "388.783, 439.847, 38.5655, 0.4068", "388.827, 440.949, 38.5496, 0.4068", "388.886, 442.061, 38.6498, 0.4068", "388.688, 443.11, 37.9106, 0.356", "388.145, 444.097, 37.6348, 0.356", "387.719, 445.135, 38.015, 0.3814", "387.706, 446.276, 37.8454, 0.4068", "387.741, 447.396, 37.2946, 0.3814", "387.871, 448.52, 36.946, 0.305", "388.045, 449.629, 37.168, 0.2542", "388.054, 450.734, 37.6127, 0.2542", "387.905, 451.832, 37.128, 0.305", "387.667, 452.917, 36.5257, 0.3814", "387.649, 454.034, 36.6391, 0.4068", "387.561, 455.102, 36.2625, 0.4068", "387.196, 456.124, 35.4301, 0.356", "387.103, 457.211, 34.6699, 0.3304", "387.43, 458.274, 34.0844, 0.305", "387.604, 459.402, 34.1625, 0.3304", "388.229, 460.353, 34.2913, 0.356", "388.853, 461.281, 33.7159, 0.356", "388.984, 462.255, 33.5143, 0.305", "388.751, 463.358, 33.7884, 0.2796", "388.89, 464.474, 33.7702, 0.305", "389.072, 465.6, 33.7677, 0.356", "388.883, 466.711, 33.7294, 0.3814", "388.849, 467.84, 33.3799, 0.356", "389.03, 468.959, 33.6554, 0.3304", "388.933, 470.07, 33.1058, 0.2796", "388.728, 471.191, 33.3122, 0.305", "388.421, 472.279, 33.3698, 0.356", "387.796, 473.186, 32.8048, 0.4322", "387.059, 474.011, 32.3985, 0.4068", "386.481, 474.985, 32.1107, 0.3814", "385.822, 475.887, 31.579, 0.3814", "385.276, 476.799, 30.5696, 0.4322", "384.852, 477.827, 30.0247, 0.4576", "384.598, 478.917, 29.4876, 0.4576", "384.295, 479.954, 28.5844, 0.483", "383.736, 480.764, 29.6324, 0.483", "382.975, 481.425, 28.4466, 0.4576", "382.04, 482.042, 28.0454, 0.3814", "381.189, 482.743, 27.3148, 0.3304", "380.14, 483.083, 27.1718, 0.305", "379.164, 483.643, 27.4299, 0.3304", "378.34, 484.415, 27.7416, 0.356", "377.405, 484.903, 26.819, 0.4068", "376.46, 485.485, 27.4459, 0.4068", "375.438, 485.995, 27.4963, 0.4322", "374.522, 486.628, 27.1617, 0.4322", "373.827, 487.463, 26.614, 0.4576", "373.27, 488.428, 27.0816, 0.4068", "372.668, 489.368, 27.6251, 0.3304", "371.995, 490.281, 27.456, 0.2542", "371.675, 491.357, 27.0598, 0.2288", "370.678, 491.846, 26.8604, 0.2288", "369.937, 492.701, 26.4583, 0.2288", "369.212, 493.543, 26.0336, 0.2288", "368.552, 494.341, 25.48, 0.2288", "367.899, 495.077, 25.48, 0.2288", "367.62, 496.168, 25.48, 0.2542", "367.027, 497.14, 25.4906, 0.3304", "366.438, 498.11, 25.4887, 0.4322", "366.165, 499.172, 25.0188, 0.483", "366.146, 500.271, 24.2626, 0.4576", "366.136, 501.396, 23.767, 0.3814", "366.275, 502.525, 23.6981, 0.3304", "366.651, 503.589, 24.08, 0.2796" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "381.478, 400.067, 47.7249, 0.6102", "380.875, 400.979, 48.2334, 0.7626", "380.227, 401.897, 48.748, 0.661", "379.682, 402.897, 49.0137, 0.661" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "316.921, 374.796, 37.5357, 0.5592", "316.531, 375.391, 37.3318, 0.305", "315.909, 376.341, 37.0056, 0.2542", "315.285, 377.291, 36.68, 0.2288", "314.83, 377.809, 36.6766, 0.2542", "313.71, 378.023, 36.5576, 0.2796", "312.684, 378.399, 35.9419, 0.356", "311.724, 378.838, 36.5456, 0.4068", "310.735, 379.134, 35.684, 0.5084", "309.657, 379.338, 35.5639, 0.5338", "308.656, 379.678, 34.5181, 0.5592", "307.615, 380.061, 34.5943, 0.5592", "306.62, 380.485, 33.9758, 0.5592", "305.572, 380.902, 33.7842, 0.5592", "304.607, 381.485, 33.3987, 0.4576", "303.718, 382.124, 32.8241, 0.4068", "302.78, 382.596, 31.7204, 0.356", "301.742, 382.937, 31.103, 0.4068", "300.884, 383.011, 29.5249, 0.4322", "300.551, 383.893, 28.842, 0.4322", "300.545, 385.021, 29.2006, 0.4068", "300.102, 385.805, 27.6892, 0.3814", "299.221, 386.14, 26.161, 0.4322", "298.21, 386.145, 25.1278, 0.5084", "297.21, 386.443, 25.76, 0.6102" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "316.921, 374.796, 37.5357, 0.5592", "316.307, 374.591, 38.4269, 0.6102", "315.323, 374.249, 39.5822, 0.5848", "314.291, 373.916, 40.4676, 0.5338", "313.182, 373.69, 40.8223, 0.6102", "312.041, 373.63, 40.8873, 0.661", "310.897, 373.61, 40.9609, 0.661", "309.898, 373.225, 41.8743, 0.5338", "308.917, 373.682, 41.1883, 0.4068", "307.976, 374.229, 40.3186, 0.3304", "307.036, 374.774, 39.4489, 0.305", "305.739, 375.075, 40.8579, 0.3814", "304.819, 375.295, 40.4998, 0.4068", "304.416, 376.153, 40.8876, 0.3814", "303.75, 377.05, 41.0903, 0.356", "302.787, 377.575, 40.4272, 0.3814", "301.846, 378.023, 40.4869, 0.483", "300.899, 378.513, 41.3577, 0.5592", "300.149, 379.155, 40.0882, 0.6102", "299.291, 379.896, 40.1797, 0.5592", "298.663, 380.784, 40.7204, 0.483", "297.988, 381.539, 39.9504, 0.4068", "297.02, 382.047, 40.4533, 0.4322", "296.142, 382.596, 41.2166, 0.483", "295.173, 383.083, 41.9026, 0.5338", "294.075, 383.326, 42.0031, 0.5084", "293.087, 383.691, 41.125, 0.4576", "292.163, 384.319, 41.1314, 0.4322", "291.161, 384.588, 42.1277, 0.4068", "290.329, 385.224, 41.3955, 0.4576", "289.47, 385.549, 41.3263, 0.483", "288.446, 385.879, 40.9909, 0.5592", "287.602, 386.587, 41.4252, 0.5338", "286.576, 386.815, 41.9031, 0.5084", "285.659, 387.138, 41.5019, 0.4576", "284.698, 387.515, 41.7385, 0.4576", "283.76, 388.041, 41.7186, 0.4068", "282.895, 388.648, 41.2031, 0.3304", "282.122, 389.365, 40.1402, 0.2542", "281.981, 389.987, 37.9548, 0.2288", "281.047, 390.117, 36.6568, 0.2288", "279.996, 390.358, 37.4282, 0.2542", "279.384, 390.608, 39.6886, 0.305", "278.776, 390.622, 42.0358, 0.3814", "278.065, 391.238, 42.8532, 0.4322", "277.05, 391.35, 43.4798, 0.4322", "275.916, 391.349, 43.7685, 0.3814", "274.885, 391.32, 42.6132, 0.305", "273.812, 391.303, 41.6427, 0.2796", "272.745, 391.044, 42.1957, 0.3304", "271.972, 390.977, 43.2648, 0.4322", "271.108, 390.388, 42.6188, 0.483", "270.128, 390.296, 42.2058, 0.4322", "269.023, 390.317, 41.7889, 0.356", "267.967, 390.361, 42.6877, 0.3304", "266.904, 390.172, 42.0034, 0.4068", "265.837, 389.785, 42.3279, 0.483", "264.775, 389.667, 42.4474, 0.5592", "263.784, 389.807, 43.0702, 0.5338", "262.751, 390.198, 43.05, 0.483", "261.673, 390.541, 43.2925, 0.3814", "260.624, 390.927, 42.8058, 0.3304", "259.572, 390.899, 41.8802, 0.305", "258.472, 390.738, 42.1372, 0.2796", "257.441, 390.333, 42.28, 0.2542", "256.297, 390.319, 42.28, 0.2542", "255.41, 389.946, 42.4043, 0.2796", "254.931, 388.953, 42.9288, 0.305", "254.286, 388.055, 43.6307, 0.2796", "253.548, 387.222, 43.96, 0.2542", "252.928, 386.307, 43.96, 0.2288", "252.436, 385.279, 43.96, 0.2542", "251.816, 384.334, 43.6481, 0.2796", "251.08, 383.502, 43.0287, 0.305", "250.389, 382.613, 42.9428, 0.2796", "249.94, 381.57, 42.8767, 0.2542", "249.64, 380.468, 42.8464, 0.2288", "249.438, 379.345, 43.0055, 0.2542", "249.143, 378.241, 43.1038, 0.305", "248.723, 377.181, 42.9316, 0.4322", "248.018, 376.376, 42.0, 0.5592" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "400.628, 394.465, 32.2196, 0.661", "401.246, 395.647, 33.4989, 0.661", "401.284, 396.733, 34.2644, 0.6864", "401.191, 397.829, 35.0342, 0.7118", "401.458, 398.933, 35.2181, 0.7626", "401.83, 400.012, 35.0291, 0.7626", "402.255, 401.049, 34.4644, 0.6864", "403.023, 401.876, 34.792, 0.6864", "403.87, 402.392, 36.1729, 0.661", "404.679, 402.686, 38.0153, 0.6356", "405.462, 403.465, 38.6968, 0.5592", "405.703, 404.562, 39.2056, 0.5592", "405.953, 405.651, 39.8124, 0.5848", "406.118, 406.77, 40.2237, 0.6356", "406.121, 407.884, 40.8624, 0.6356" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "400.628, 394.465, 32.2196, 0.661", "401.532, 394.607, 32.9381, 0.5338", "402.623, 394.673, 33.7495, 0.661", "403.756, 394.68, 34.102, 0.7626", "404.898, 394.679, 34.1572, 0.839", "406.042, 394.677, 34.16, 0.8644", "407.186, 394.656, 34.16, 0.839", "408.32, 394.505, 34.16, 0.7372", "409.445, 394.299, 34.16, 0.6356", "410.584, 394.205, 34.1603, 0.5592", "411.719, 394.063, 34.1622, 0.5592", "412.755, 393.595, 34.1729, 0.6102", "413.76, 393.047, 34.2322, 0.661", "414.773, 392.538, 34.5808, 0.661", "415.792, 392.061, 35.0865, 0.6102", "416.867, 391.682, 35.264, 0.6102", "418.004, 391.7, 35.2817, 0.6864", "419.131, 391.519, 35.2918, 0.788", "420.21, 391.141, 35.3553, 0.788", "421.233, 390.654, 35.7162, 0.661", "422.207, 390.097, 36.267, 0.5848", "423.276, 389.721, 36.6218, 0.5592", "424.382, 389.642, 37.2896, 0.661", "425.52, 389.601, 37.5211, 0.6864", "426.639, 389.371, 37.6572, 0.7118", "427.749, 389.217, 38.2077, 0.6356", "428.887, 389.219, 37.9775, 0.5592", "430.024, 389.306, 37.7605, 0.4576", "431.123, 389.143, 38.4104, 0.4576", "432.207, 388.792, 38.6582, 0.5084", "433.197, 388.223, 38.8142, 0.5848", "434.155, 387.649, 39.422, 0.5848", "435.161, 387.117, 39.7152, 0.5592", "436.154, 386.551, 39.6348, 0.5084", "437.082, 385.948, 38.9298, 0.483", "438.15, 385.553, 38.6501, 0.4576", "439.261, 385.281, 38.6406, 0.483", "440.293, 384.788, 38.6425, 0.5338", "441.311, 384.265, 38.6526, 0.5848", "442.328, 383.743, 38.7201, 0.6356", "443.261, 383.121, 39.2708, 0.7372" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "380.335, 416.339, 25.3271, 0.5848", "379.146, 417.369, 25.7289, 0.7372", "378.44, 417.902, 26.1534, 0.7372", "377.784, 418.805, 26.7092, 0.6864", "376.954, 419.522, 27.2054, 0.6102", "376.239, 420.277, 28.1299, 0.4576", "376.718, 421.221, 27.72, 0.356" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "380.335, 416.339, 25.3271, 0.5848", "380.296, 417.665, 26.4104, 0.4576", "380.766, 418.631, 27.1922, 0.5848", "381.516, 419.478, 27.4201, 0.661", "382.335, 420.276, 27.4445, 0.661", "383.215, 421.006, 27.461, 0.661", "384.288, 421.341, 27.5733, 0.6864", "385.406, 421.335, 28.0916, 0.7118", "386.509, 421.482, 28.721, 0.661", "387.622, 421.522, 29.3395, 0.5592", "388.758, 421.498, 29.657, 0.4576", "389.739, 422.05, 29.773, 0.4068", "390.603, 422.778, 30.2056, 0.3814", "391.596, 423.179, 31.1749, 0.4068", "392.527, 423.789, 31.8094, 0.4576", "393.294, 424.634, 31.9539, 0.5084", "394.274, 425.208, 32.1269, 0.5592", "395.379, 425.338, 32.7729, 0.5592", "396.506, 425.362, 33.2363, 0.5592", "397.641, 425.47, 33.3581, 0.5084", "398.7, 425.821, 33.885, 0.483", "399.633, 426.084, 35.3713, 0.4322", "400.619, 426.216, 36.4594, 0.4322", "401.697, 426.118, 36.0444, 0.4322", "402.725, 426.395, 35.8534, 0.4576", "403.723, 426.068, 35.5488, 0.4322", "404.81, 425.845, 35.765, 0.4068", "405.936, 426.013, 35.7437, 0.356", "407.064, 426.168, 35.9218, 0.3304", "408.135, 426.497, 36.4624, 0.3304", "409.069, 427.054, 37.079, 0.4068", "409.747, 427.923, 37.6191, 0.5084", "410.752, 428.417, 38.0909, 0.6102", "411.763, 428.878, 38.484, 0.661", "412.747, 429.329, 38.2147, 0.7118", "413.732, 429.8, 38.0792, 0.7372", "414.674, 430.438, 38.3485, 0.7626", "415.612, 431.044, 37.8725, 0.7626", "416.658, 431.458, 38.227, 0.7626", "417.66, 432.0, 38.4843, 0.7626", "418.725, 432.405, 38.4765, 0.788", "419.554, 433.156, 38.8063, 0.8136", "420.472, 433.649, 38.7106, 0.839", "421.456, 434.042, 39.6248, 0.788", "422.165, 434.863, 39.6978, 0.7118", "422.73, 435.823, 40.0604, 0.6102", "423.639, 436.367, 40.6608, 0.5338", "424.595, 436.886, 41.4372, 0.4576", "425.575, 437.269, 42.4564, 0.4068", "425.938, 438.092, 44.1112, 0.4068", "426.198, 439.19, 44.5572, 0.4576", "426.462, 440.286, 44.6874, 0.5338", "426.853, 441.246, 45.1623, 0.5848", "427.469, 442.109, 46.2132, 0.6102", "428.077, 443.025, 46.9703, 0.5592", "428.724, 443.779, 47.9979, 0.5084", "429.802, 444.007, 47.5168, 0.4322", "430.598, 444.754, 47.934, 0.5084", "431.516, 445.245, 47.88, 0.5848" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "420.06, 361.733, 26.32, 0.483", "420.504, 361.443, 26.32, 0.5084", "421.528, 361.056, 25.5984, 0.6102", "422.605, 360.956, 26.2828, 0.6864", "423.554, 361.448, 27.1491, 0.7626", "424.476, 361.912, 28.3472, 0.788", "425.583, 361.779, 28.5748, 0.8644", "426.679, 361.458, 28.7081, 0.839", "427.785, 361.217, 29.097, 0.788", "428.878, 360.914, 28.7918, 0.7118", "429.856, 360.334, 28.5911, 0.661", "430.721, 359.587, 28.6289, 0.661", "431.589, 358.848, 28.8518, 0.6864", "432.56, 358.297, 29.4454, 0.788", "433.63, 357.918, 29.7646, 0.8644", "434.694, 357.523, 30.1078, 0.8898", "435.743, 357.101, 30.5371, 0.8644", "436.766, 356.618, 30.1546, 0.8136", "437.8, 356.164, 29.7156, 0.788", "438.855, 355.724, 29.6806, 0.7626", "439.951, 355.394, 29.68, 0.7626", "441.088, 355.481, 29.68, 0.788", "442.227, 355.59, 29.68, 0.839", "443.202, 355.001, 29.68, 0.9406", "443.823, 354.04, 29.68, 0.9914", "444.517, 353.132, 29.6797, 0.9406", "445.357, 352.357, 29.6786, 0.788", "446.341, 351.782, 29.6699, 0.6864", "447.459, 351.541, 29.6148, 0.7118", "448.576, 351.318, 29.3566, 0.8136", "449.698, 351.15, 29.05, 0.8898", "450.817, 350.959, 29.3602, 0.9152", "451.909, 350.658, 29.7245, 0.9406", "453.046, 350.582, 29.9247, 0.9406", "454.172, 350.551, 30.2859, 0.966", "455.264, 350.225, 30.2058, 0.966", "456.32, 349.848, 29.748, 1.0168", "457.303, 349.263, 29.68, 1.0168", "458.24, 348.607, 29.68, 1.0168", "459.172, 347.944, 29.68, 1.0168", "460.133, 347.328, 29.68, 1.0678", "461.163, 346.828, 29.6806, 1.1186", "462.227, 346.416, 29.6836, 1.0932", "463.348, 346.219, 29.7055, 0.9914", "464.485, 346.283, 29.8371, 0.839", "465.583, 346.525, 30.2954, 0.7626", "466.641, 346.83, 31.0352, 0.788", "467.741, 346.929, 31.6585, 0.9406", "468.852, 346.712, 31.9222, 1.0932", "469.94, 346.361, 31.9343, 1.1694", "471.047, 346.071, 32.0163, 1.0932", "472.139, 345.765, 32.3173, 0.9406", "473.157, 345.3, 32.7894, 0.788", "474.044, 344.593, 33.0386, 0.6864", "474.9, 343.838, 33.0506, 0.6864", "475.857, 343.216, 33.0968, 0.7626", "476.88, 342.728, 33.3239, 0.9152", "477.955, 342.409, 33.868, 0.966", "479.032, 342.124, 34.4971, 0.966", "480.099, 341.771, 35.0081, 0.8898", "481.127, 341.293, 35.2629, 0.8644", "482.095, 340.685, 35.28, 0.8136", "483.056, 340.064, 35.28, 0.8136", "484.062, 339.526, 35.2803, 0.839", "485.112, 339.071, 35.2814, 0.8898", "486.14, 338.571, 35.2876, 0.9152", "487.134, 338.006, 35.322, 0.839", "488.156, 337.51, 35.52, 0.7626", "489.236, 337.251, 35.9929, 0.661", "490.329, 337.408, 36.5305, 0.6356", "491.384, 337.789, 37.0698, 0.6356", "492.462, 337.93, 37.7065, 0.6864", "493.526, 337.637, 38.2841, 0.8136", "494.508, 337.073, 38.5795, 0.839", "495.461, 336.44, 38.6422, 0.788", "496.496, 335.992, 38.6532, 0.6864", "497.607, 335.993, 38.7204, 0.6356", "498.673, 336.366, 39.0379, 0.7118", "499.739, 336.718, 39.4923, 0.7372", "500.852, 336.716, 39.7264, 0.839", "501.929, 336.352, 39.7709, 0.8136", "502.99, 335.925, 39.8255, 0.8136", "504.088, 335.685, 40.1618, 0.7626", "505.207, 335.583, 40.677, 0.7626", "506.267, 335.286, 41.2801, 0.7118", "507.267, 334.774, 41.7816, 0.661", "508.303, 334.309, 41.9709, 0.6356", "509.358, 333.866, 41.9796, 0.6864", "510.377, 333.351, 41.8835, 0.7118", "511.358, 332.77, 41.6808, 0.6864", "512.339, 332.196, 41.8006, 0.661", "513.303, 331.593, 42.1098, 0.7118", "514.245, 330.979, 42.6034, 0.788", "515.188, 330.359, 42.9974, 0.839", "516.117, 329.693, 43.1105, 0.8644", "517.041, 329.018, 43.1217, 0.9152", "517.976, 328.36, 43.1292, 0.9406", "518.954, 327.771, 43.1726, 0.966", "519.979, 327.279, 43.4414, 0.9406", "521.046, 326.945, 43.9796, 0.966", "522.078, 326.539, 44.6034, 0.9406", "522.984, 326.0, 45.628, 0.966", "523.918, 325.43, 46.3221, 0.966", "524.891, 324.838, 46.4951, 0.966", "525.88, 324.262, 46.6315, 0.9152", "526.793, 323.651, 47.3043, 0.839", "527.671, 323.02, 48.2163, 0.7626", "528.453, 322.227, 48.6559, 0.7118", "529.219, 321.379, 48.771, 0.661", "530.158, 320.767, 49.0398, 0.6356", "531.24, 320.548, 49.5835, 0.661", "532.364, 320.388, 49.8196, 0.7626", "533.417, 319.972, 49.8397, 0.8644", "534.522, 319.765, 49.8411, 0.8898", "535.637, 319.956, 49.8464, 0.8644", "536.768, 320.074, 49.8823, 0.8136", "537.906, 320.074, 50.1463, 0.7626", "539.013, 319.988, 50.7732, 0.661", "540.048, 319.592, 51.2898, 0.6102", "541.0, 319.267, 52.4868, 0.5338", "541.906, 319.218, 54.1626, 0.5592", "542.953, 319.415, 54.8442, 0.5848", "543.989, 319.594, 53.9944, 0.7118", "545.093, 319.634, 53.5276, 0.7626", "546.205, 319.635, 54.0341, 0.7626", "547.334, 319.639, 54.4124, 0.7372", "548.453, 319.694, 54.9458, 0.7372", "549.539, 319.909, 54.598, 0.7626", "550.638, 319.754, 54.404, 0.7626", "551.653, 319.251, 54.6042, 0.788", "552.637, 318.725, 55.1936, 0.7626", "553.546, 318.057, 55.5736, 0.7372", "554.511, 317.479, 56.0263, 0.6864", "555.601, 317.184, 56.3038, 0.6864", "556.689, 316.938, 55.8057, 0.6356", "557.797, 316.789, 55.2177, 0.5848", "558.708, 316.584, 56.6451, 0.5848", "559.578, 316.568, 58.4553, 0.6864", "560.645, 316.43, 59.3645, 0.788", "561.714, 316.111, 59.9452, 0.839", "562.673, 315.535, 60.5091, 0.839", "563.651, 314.981, 61.0196, 0.839", "564.661, 314.459, 61.339, 0.839", "565.635, 313.892, 61.833, 0.8136", "566.611, 313.31, 62.1326, 0.7118", "567.6, 312.736, 62.1603, 0.5592", "568.684, 312.368, 62.1662, 0.4322", "569.801, 312.123, 62.1978, 0.4576", "570.88, 311.749, 62.3773, 0.5848", "571.945, 311.437, 63.0384, 0.6864", "572.976, 311.182, 64.0856, 0.661", "574.052, 310.899, 64.7158, 0.5338", "574.949, 310.571, 66.1469, 0.4322", "576.088, 310.593, 66.0951, 0.3814", "577.209, 310.684, 65.7124, 0.4322", "578.34, 310.716, 66.0257, 0.5084", "579.442, 310.762, 66.768, 0.6102", "580.549, 310.674, 66.9838, 0.6356", "581.621, 310.786, 67.0944, 0.6102", "582.677, 311.166, 67.618, 0.5084", "583.646, 311.743, 67.5273, 0.4068", "584.534, 312.211, 66.7705, 0.356", "585.236, 312.883, 68.2189, 0.356", "586.11, 313.086, 69.1611, 0.4068", "587.039, 313.418, 69.8771, 0.4068", "587.829, 314.056, 69.8614, 0.4322", "588.452, 314.942, 70.7098, 0.4576", "589.204, 315.693, 69.9401, 0.5084", "590.245, 316.11, 69.895, 0.5592", "591.32, 316.492, 70.0325, 0.5592", "592.418, 316.789, 69.9664, 0.5592", "593.548, 316.859, 70.2901, 0.483", "594.664, 316.945, 70.3357, 0.4068", "595.76, 317.102, 70.3895, 0.305", "596.843, 317.316, 70.8372, 0.2796", "597.934, 317.605, 71.0595, 0.305", "599.063, 317.689, 71.3653, 0.356", "600.181, 317.664, 71.8281, 0.356", "601.256, 317.602, 72.767, 0.356", "602.355, 317.459, 73.0279, 0.356", "603.172, 316.846, 73.8606, 0.3814", "603.929, 316.02, 73.9385, 0.3304", "604.871, 315.381, 74.114, 0.305", "605.695, 314.658, 74.8821, 0.305", "606.213, 313.718, 75.8198, 0.356", "606.335, 312.655, 76.8012, 0.356", "606.547, 311.69, 78.108, 0.305", "606.516, 310.55, 78.3107, 0.2796", "606.516, 309.483, 78.9188, 0.2796", "607.263, 308.918, 80.1049, 0.305", "608.26, 308.561, 80.7341, 0.2796", "608.931, 307.815, 81.8152, 0.2542", "609.385, 306.773, 82.04, 0.2288", "610.021, 305.888, 82.04, 0.2288", "610.726, 305.045, 82.04, 0.2288", "611.379, 304.124, 82.04, 0.2542", "612.297, 303.467, 82.0484, 0.2796", "612.924, 302.767, 83.2135, 0.305", "613.773, 302.063, 83.44, 0.356", "614.099, 300.986, 83.44, 0.4068" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "420.06, 361.733, 26.32, 0.483", "419.937, 360.445, 26.3214, 0.6356", "419.556, 359.367, 26.3287, 0.788", "419.405, 358.233, 26.3738, 0.9152", "419.387, 357.1, 26.738, 0.9406", "419.379, 355.983, 27.3462, 0.9406", "419.32, 354.842, 27.4445, 0.8898", "419.036, 353.734, 27.4882, 0.8898", "418.886, 352.606, 27.7715, 0.8898", "418.651, 351.522, 28.4463, 0.8898", "418.799, 350.39, 28.6121, 0.8644", "419.227, 349.336, 28.9066, 0.8136", "419.384, 348.239, 29.6016, 0.839", "419.384, 347.096, 29.6845, 0.8898", "419.347, 345.953, 29.7262, 0.9914", "419.104, 344.838, 29.9424, 0.9914", "418.933, 343.751, 30.7054, 0.9406", "418.926, 342.607, 30.8042, 0.8644", "418.891, 341.465, 30.8392, 0.8898", "418.65, 340.349, 31.036, 0.9406", "418.284, 339.31, 31.7954, 0.966" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "392.38, 330.221, 31.6333, 0.661", "392.854, 329.545, 32.1756, 0.7626", "393.208, 328.508, 32.9728, 0.8644", "393.299, 327.369, 33.0728, 0.8898", "393.281, 326.228, 33.2629, 0.9406", "393.158, 325.134, 34.0242, 0.9406", "392.69, 324.094, 34.1947, 0.966", "392.194, 323.065, 34.368, 0.9914", "391.844, 322.017, 35.0969, 1.0424", "391.512, 320.925, 35.2803, 1.0424", "391.429, 319.785, 35.2909, 1.0168", "391.171, 318.67, 35.3517, 1.0168", "391.024, 317.55, 35.7927, 1.0678", "391.049, 316.433, 36.391, 1.1186", "391.229, 315.304, 36.4, 1.144", "391.575, 314.213, 36.4, 1.144", "391.909, 313.118, 36.4, 1.1186", "392.046, 311.983, 36.4, 1.0678", "392.391, 310.892, 36.4003, 1.0168", "392.391, 309.748, 36.407, 0.9914", "392.391, 308.604, 36.449, 0.966", "392.391, 307.466, 36.7161, 0.8644", "392.39, 306.363, 37.459, 0.7626", "392.385, 305.219, 37.5292, 0.6356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "392.38, 330.221, 31.6333, 0.661", "391.785, 329.171, 30.7969, 0.4068", "390.886, 328.539, 30.4867, 0.356", "390.064, 327.957, 29.6668, 0.3304", "389.993, 327.054, 28.2999, 0.4322", "390.095, 326.057, 27.0231, 0.4322", "389.663, 325.104, 26.3796, 0.483", "389.116, 324.115, 26.1663, 0.5084", "389.1, 323.076, 25.4632, 0.5848", "389.374, 322.039, 24.4894, 0.6356", "389.758, 320.991, 24.0915, 0.661", "389.785, 319.898, 24.0318, 0.7626", "389.726, 318.771, 23.7751, 0.839", "389.652, 317.644, 23.4066, 0.8644", "389.468, 316.574, 22.5893, 0.8136", "389.067, 315.548, 22.0545, 0.7626", "388.682, 314.478, 22.0875, 0.7626", "388.594, 313.408, 21.2926, 0.7372", "388.262, 312.336, 20.816, 0.7118", "387.798, 311.292, 20.8127, 0.7118", "387.344, 310.264, 20.2877, 0.7372", "386.9, 309.223, 19.88, 0.788" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "527.041, 272.043, 90.44, 0.661", "526.581, 271.279, 90.5646, 0.3814", "526.125, 270.252, 90.6889, 0.2796", "525.859, 269.149, 90.8001, 0.2542", "525.349, 268.132, 90.8373, 0.2288", "524.796, 267.135, 90.72, 0.2288", "524.18, 266.209, 91.0669, 0.2288", "523.779, 265.206, 91.4805, 0.2288", "523.393, 264.144, 91.56, 0.2288", "522.924, 263.102, 91.56, 0.2288", "522.643, 261.999, 91.56, 0.2288", "522.507, 260.864, 91.56, 0.2796", "522.127, 259.801, 91.56, 0.3304", "521.926, 258.701, 91.2106, 0.4068", "521.804, 257.569, 90.965, 0.4322", "521.778, 256.428, 90.8692, 0.4576", "521.786, 255.314, 90.2762, 0.4322", "522.224, 254.346, 90.9798, 0.356", "522.236, 253.206, 91.0, 0.2796", "522.236, 252.062, 91.0, 0.2796", "522.482, 250.998, 90.3638, 0.3304", "522.932, 250.359, 88.7541, 0.3814", "523.185, 249.273, 88.8532, 0.3304", "523.499, 248.218, 89.04, 0.356", "523.635, 247.102, 88.7832, 0.4576", "524.12, 246.141, 88.0443, 0.6102", "524.684, 245.189, 87.64, 0.6356", "524.935, 244.094, 87.4087, 0.5084", "525.138, 243.329, 85.7352, 0.3814", "525.398, 242.605, 83.6825, 0.305", "525.992, 242.016, 81.8224, 0.3304", "526.471, 241.081, 82.1344, 0.4068", "526.503, 240.712, 84.6266, 0.5338", "526.383, 240.552, 86.5544, 0.6102", "527.003, 239.639, 86.9971, 0.6102", "527.598, 238.734, 87.7887, 0.5338", "528.168, 237.883, 86.7941, 0.483", "529.078, 237.286, 87.145, 0.4322", "529.853, 236.508, 86.345, 0.356", "530.625, 235.732, 85.5448, 0.305", "531.362, 234.882, 85.2446, 0.2796", "532.073, 233.987, 85.2536, 0.305", "532.786, 233.091, 85.2622, 0.2796", "533.499, 232.197, 85.2709, 0.2796", "534.21, 231.301, 85.2799, 0.2796", "534.922, 230.406, 85.2886, 0.305", "535.661, 229.533, 85.2824, 0.2796", "536.404, 228.663, 85.2746, 0.2542", "537.146, 227.792, 85.2667, 0.2288", "537.888, 226.922, 85.2589, 0.2288", "538.541, 225.992, 85.2494, 0.2288", "539.041, 224.963, 85.2368, 0.2288", "539.541, 223.933, 85.2242, 0.2288", "540.041, 222.905, 85.2113, 0.2288", "540.507, 221.863, 85.2076, 0.2542", "540.833, 220.767, 85.2404, 0.2796", "541.159, 219.67, 85.2729, 0.305", "541.375, 218.558, 85.2832, 0.2796", "541.374, 217.414, 85.2485, 0.305", "541.372, 216.27, 85.2138, 0.4322" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "527.041, 272.043, 90.44, 0.661", "527.154, 270.809, 90.7631, 0.7372", "527.289, 269.998, 92.1785, 0.6864", "527.794, 269.032, 92.8696, 0.661", "528.469, 268.3, 92.2552, 0.6864", "529.21, 267.772, 93.1342, 0.839", "529.968, 266.998, 93.8207, 0.8644", "530.831, 266.252, 93.6561, 0.7626", "531.573, 265.45, 93.872, 0.5848", "532.055, 264.522, 94.9598, 0.5084", "532.643, 263.578, 94.9645, 0.5338", "533.161, 262.707, 96.0632, 0.5848", "534.034, 261.985, 95.8286, 0.5848", "534.742, 261.094, 95.8801, 0.5338", "535.388, 260.277, 96.81, 0.483", "535.997, 259.656, 96.8243, 0.4576", "536.53, 258.767, 95.811, 0.4576", "536.807, 257.691, 96.3231, 0.4068", "537.417, 256.738, 96.1534, 0.356", "537.799, 255.669, 96.04, 0.3304", "538.267, 254.653, 96.1262, 0.4068", "538.482, 253.604, 96.8215, 0.5338", "538.961, 252.681, 97.531, 0.6102", "539.516, 251.688, 97.4316, 0.5848", "540.117, 250.758, 97.8776, 0.5084", "540.947, 250.012, 98.2724, 0.4576", "541.703, 249.185, 98.4334, 0.483", "542.398, 248.333, 99.1054, 0.4576", "543.122, 247.523, 99.9866, 0.4576", "544.0, 246.827, 100.229, 0.4576", "544.831, 246.07, 99.8186, 0.5084", "545.83, 245.663, 100.426, 0.5084", "546.854, 245.371, 101.381, 0.4322", "547.804, 244.858, 100.759, 0.3814", "548.408, 244.172, 102.354, 0.3304", "549.31, 243.501, 102.869, 0.356", "550.214, 242.855, 103.427, 0.3304", "550.995, 242.021, 103.453, 0.3304", "551.747, 241.178, 103.127, 0.2796", "552.565, 240.431, 102.427, 0.2542", "553.297, 239.651, 102.397, 0.2288", "553.861, 238.808, 103.691, 0.2288", "554.424, 237.965, 104.985, 0.2288", "554.987, 237.12, 106.28, 0.2288", "555.552, 236.277, 107.574, 0.2288", "556.049, 235.377, 108.6, 0.2288", "556.299, 234.26, 108.597, 0.2288", "556.547, 233.144, 108.593, 0.2288", "556.794, 232.027, 108.59, 0.2288", "556.859, 230.93, 108.948, 0.2288", "556.661, 229.863, 109.831, 0.2288", "556.464, 228.795, 110.713, 0.2288", "556.267, 227.728, 111.596, 0.2288", "556.068, 226.661, 112.479, 0.2288", "556.025, 225.639, 113.555, 0.2288", "556.318, 224.718, 115.052, 0.2288", "556.612, 223.797, 116.55, 0.2288", "556.906, 222.876, 118.047, 0.2288", "557.2, 221.955, 119.544, 0.2288", "557.033, 221.033, 120.667, 0.2288", "556.437, 220.11, 121.442, 0.2288", "555.84, 219.186, 122.216, 0.2288", "555.258, 218.26, 122.998, 0.2288", "555.281, 217.214, 124.129, 0.2288", "555.305, 216.167, 125.259, 0.2288", "555.327, 215.121, 126.389, 0.2288", "555.349, 214.074, 127.519, 0.2288", "555.328, 213.032, 128.563, 0.2288", "554.768, 212.035, 128.583, 0.2288", "554.206, 211.037, 128.603, 0.2288", "553.646, 210.041, 128.623, 0.2288", "553.085, 209.043, 128.643, 0.2288", "552.828, 207.993, 128.639, 0.2288", "553.015, 206.864, 128.602, 0.2288", "552.758, 205.844, 128.609, 0.2288", "552.07, 204.93, 128.659, 0.2288", "551.383, 204.016, 128.708, 0.2288", "550.695, 203.102, 128.757, 0.2288", "550.008, 202.188, 128.806, 0.2288", "549.32, 201.273, 128.856, 0.2288", "548.633, 200.359, 128.905, 0.2288", "547.945, 199.445, 128.955, 0.2288", "547.258, 198.531, 129.004, 0.2288", "546.57, 197.617, 129.053, 0.2288", "545.883, 196.703, 129.103, 0.2288", "545.307, 195.717, 129.152, 0.2288", "544.763, 194.711, 129.2, 0.2288", "544.448, 193.731, 129.229, 0.2542", "545.197, 192.865, 129.162, 0.2796", "545.879, 191.97, 129.11, 0.305", "546.052, 190.839, 129.168, 0.3814", "546.224, 189.708, 129.226, 0.5338" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "379.682, 402.897, 49.0137, 0.661", "378.663, 403.044, 48.9689, 0.2542", "378.403, 403.157, 49.107, 0.2288", "377.274, 403.324, 49.2736, 0.2542", "376.149, 403.493, 49.093, 0.2796", "375.112, 403.818, 48.3314, 0.305", "373.999, 403.694, 48.7015, 0.305", "372.96, 403.26, 48.6895, 0.3304", "371.82, 403.281, 48.5044, 0.356", "370.742, 403.537, 48.368, 0.3814", "369.865, 404.27, 48.4224, 0.356", "369.059, 405.073, 48.4632, 0.3304", "368.346, 405.94, 48.4971, 0.2796", "367.547, 406.709, 47.8229, 0.2542", "366.537, 407.035, 47.6, 0.2288", "365.394, 407.035, 47.5126, 0.2288", "364.252, 407.069, 47.374, 0.2288", "363.194, 407.417, 47.32, 0.2288", "362.57, 408.288, 47.32, 0.2288", "361.778, 409.033, 47.32, 0.2288", "360.698, 409.39, 47.32, 0.2288", "359.594, 409.687, 47.32, 0.2288", "358.946, 410.582, 46.8261, 0.2288", "357.957, 411.082, 46.7866, 0.2288", "357.551, 411.951, 47.7772, 0.2288", "356.418, 411.973, 47.7389, 0.2288", "355.395, 412.233, 46.8692, 0.2288", "354.539, 412.954, 46.4341, 0.2542", "353.614, 413.61, 46.48, 0.2796", "352.55, 414.021, 46.48, 0.3304", "351.485, 414.423, 46.6785, 0.356", "350.591, 415.11, 46.76, 0.3814", "349.656, 415.754, 46.9857, 0.3814", "348.665, 416.319, 47.1839, 0.356", "347.917, 417.165, 47.3024, 0.3304", "347.211, 418.039, 47.7966, 0.2796", "346.413, 418.852, 47.8806, 0.2542", "345.617, 419.672, 47.7358, 0.2288", "344.77, 420.384, 48.3868, 0.2288", "344.011, 421.184, 49.0, 0.2796", "343.358, 422.002, 48.7049, 0.3814", "342.396, 422.39, 47.9998, 0.5084", "341.637, 423.216, 48.3454, 0.5338", "340.833, 424.004, 48.1944, 0.4576", "340.081, 424.823, 47.6, 0.356", "339.257, 425.615, 47.6482, 0.305", "338.532, 426.436, 47.5742, 0.305", "338.032, 427.357, 46.8832, 0.3304", "337.498, 428.292, 47.6594, 0.3814", "336.841, 429.053, 47.3278, 0.483", "336.072, 429.855, 47.2923, 0.5338", "335.287, 430.683, 47.1405, 0.5338", "334.447, 431.457, 47.2853, 0.4322", "333.704, 432.318, 47.6, 0.3304" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "379.682, 402.897, 49.0137, 0.661", "379.822, 403.811, 49.8053, 0.4576", "379.695, 404.895, 50.645, 0.483", "379.028, 405.81, 50.9838, 0.5084", "378.338, 406.72, 51.1762, 0.5592", "377.495, 407.437, 51.8815, 0.6864", "376.805, 408.341, 52.1772, 0.7626", "376.378, 409.374, 52.7699, 0.8136", "376.129, 410.158, 54.712, 0.7626" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "406.121, 407.884, 40.8624, 0.6356", "407.445, 408.413, 40.873, 0.305", "408.551, 408.626, 40.5454, 0.3814", "409.575, 408.965, 41.391, 0.4068", "410.58, 409.14, 42.469, 0.4068", "411.381, 409.928, 42.9106, 0.3814", "412.136, 410.717, 43.491, 0.4576", "412.811, 411.478, 44.5035, 0.5592", "413.227, 412.502, 45.1861, 0.6864", "413.557, 413.579, 45.6392, 0.7118", "413.993, 414.607, 46.0555, 0.7372", "414.619, 415.553, 46.0037, 0.7626", "415.21, 416.514, 45.561, 0.7626", "415.898, 417.4, 45.6968, 0.661", "416.572, 418.316, 45.8629, 0.5338", "417.361, 419.119, 45.5963, 0.5084", "418.165, 419.925, 45.3914, 0.5848", "418.806, 420.819, 45.9959, 0.6102", "419.226, 421.843, 45.6389, 0.5338", "420.019, 422.638, 45.4409, 0.4322", "420.617, 423.589, 45.8853, 0.4068", "421.228, 424.501, 46.1037, 0.483", "421.464, 425.364, 44.8944, 0.5592", "421.871, 426.401, 45.3281, 0.6102", "422.037, 427.518, 45.5888, 0.6102", "422.206, 428.628, 45.4572, 0.661", "422.689, 429.626, 45.7038, 0.7118", "422.515, 430.634, 46.5094, 0.7372", "422.491, 431.569, 48.0757, 0.6864", "422.729, 432.676, 47.9027, 0.6102", "422.992, 433.745, 47.25, 0.5848", "423.38, 434.645, 46.5212, 0.5848", "423.439, 435.611, 47.9069, 0.6356", "423.611, 436.692, 48.3515, 0.661", "423.984, 437.723, 48.2152, 0.661", "424.191, 438.746, 48.0973, 0.6356", "424.645, 439.727, 47.8313, 0.6356", "425.348, 440.599, 47.5969, 0.6864", "425.89, 441.523, 48.0085, 0.7118", "426.09, 442.587, 47.8842, 0.6864", "426.662, 443.534, 48.431, 0.6356", "427.169, 444.43, 47.7028, 0.5848", "427.665, 445.279, 47.7238, 0.5338", "427.883, 446.334, 48.4613, 0.483", "428.298, 447.353, 49.1453, 0.483", "428.791, 448.332, 48.5484, 0.5084", "429.38, 449.293, 48.0908, 0.5084", "429.589, 450.338, 48.9647, 0.5084", "429.944, 451.361, 48.5363, 0.5084", "430.245, 452.427, 49.0921, 0.5338", "430.619, 453.5, 48.9728, 0.483", "430.98, 454.505, 48.0808, 0.4576", "431.404, 455.376, 49.4544, 0.4322", "431.636, 456.47, 49.2699, 0.483", "431.971, 457.474, 49.9136, 0.4576", "432.072, 458.568, 49.152, 0.4322", "432.227, 459.684, 48.879, 0.356", "432.436, 460.796, 49.1708, 0.3814", "432.538, 461.898, 49.7294, 0.4068", "432.735, 462.963, 50.0279, 0.4576", "432.993, 464.035, 49.996, 0.4322", "433.373, 465.09, 50.4885, 0.4322", "433.767, 466.147, 50.9242, 0.4322", "434.233, 467.176, 51.058, 0.4576", "434.672, 468.225, 51.1736, 0.4576", "435.204, 469.201, 51.7258, 0.483", "435.666, 470.236, 51.8871, 0.5084", "436.318, 471.138, 51.4307, 0.5084", "437.196, 471.842, 51.6981, 0.5338", "438.179, 472.422, 51.6869, 0.5848", "438.798, 473.355, 51.9562, 0.6356", "439.284, 474.301, 51.1529, 0.5592", "439.968, 475.167, 51.4326, 0.4068", "441.019, 475.57, 51.52, 0.2796", "441.932, 476.229, 51.52, 0.2288", "442.827, 476.942, 51.52, 0.2288", "443.265, 477.967, 51.52, 0.2288", "444.201, 478.572, 51.52, 0.2288", "444.614, 479.636, 51.52, 0.2288", "445.256, 480.581, 51.5418, 0.2288", "446.323, 480.677, 52.3664, 0.2288", "447.119, 480.256, 53.9412, 0.2288", "448.231, 480.163, 54.04, 0.2542", "449.065, 479.393, 54.0504, 0.2796", "449.827, 478.74, 54.6745, 0.3304", "450.853, 478.659, 55.517, 0.3814", "451.995, 478.663, 55.6315, 0.4322", "453.094, 478.733, 56.2344, 0.4322", "454.158, 479.037, 56.7182, 0.3814", "455.122, 479.623, 56.6009, 0.3814", "456.081, 480.236, 56.5334, 0.4068", "456.987, 480.9, 56.919, 0.4322", "457.929, 481.49, 57.5375, 0.356", "458.718, 482.291, 57.68, 0.2796", "459.364, 483.226, 57.9286, 0.2288", "459.561, 484.328, 58.0698, 0.2542", "460.461, 485.006, 58.5292, 0.2796", "461.499, 485.482, 58.6611, 0.305", "462.466, 486.087, 58.6978, 0.2796", "463.286, 486.881, 58.8, 0.2542", "464.144, 487.59, 58.8, 0.2288", "464.519, 488.644, 58.7941, 0.2288", "465.223, 489.503, 58.6342, 0.2288", "465.562, 490.572, 58.4007, 0.2288", "465.865, 491.652, 58.7989, 0.2288", "466.209, 492.688, 58.8, 0.2288", "467.078, 493.418, 58.8, 0.2542", "467.869, 494.172, 58.6421, 0.2796", "468.537, 495.0, 57.9303, 0.305", "469.421, 495.595, 58.1854, 0.2796", "470.341, 496.229, 58.3358, 0.2542", "471.285, 496.792, 58.8787, 0.2542", "472.299, 497.294, 58.9142, 0.305", "473.223, 497.085, 57.7987, 0.356", "474.193, 497.173, 59.1279, 0.356", "475.258, 497.525, 59.4868, 0.305", "476.348, 497.793, 59.6277, 0.2542", "477.418, 498.098, 59.64, 0.2288", "478.562, 498.098, 59.64, 0.2288", "479.689, 498.226, 59.64, 0.2288", "480.64, 498.784, 59.64, 0.2288", "481.298, 499.705, 59.64, 0.2288", "481.84, 500.712, 59.64, 0.2288", "482.346, 501.736, 59.6504, 0.2288", "482.931, 502.708, 59.6702, 0.2542", "483.509, 503.686, 59.6554, 0.3304", "484.048, 504.661, 59.1436, 0.4068", "484.528, 505.65, 58.3926, 0.4322", "485.323, 506.35, 58.6132, 0.3814", "486.34, 506.863, 58.791, 0.356", "487.27, 507.481, 58.2364, 0.3814", "487.979, 508.36, 57.8743, 0.4068", "488.614, 509.301, 58.2092, 0.3814", "489.242, 510.235, 57.9788, 0.305", "489.96, 511.103, 57.68, 0.2796", "490.689, 511.983, 57.68, 0.3304", "491.302, 512.946, 57.7119, 0.4068", "491.865, 513.935, 57.526, 0.4322", "492.506, 514.806, 58.1395, 0.3814", "493.05, 515.792, 58.1157, 0.3814", "493.435, 516.93, 57.7676, 0.483", "494.303, 517.586, 58.5948, 0.4576", "495.104, 518.146, 58.3696, 0.4068", "495.468, 519.011, 56.8039, 0.4322", "496.226, 519.734, 56.105, 0.5084", "496.844, 520.65, 56.2335, 0.5848", "497.137, 521.744, 56.5566, 0.5592", "497.785, 522.65, 56.3212, 0.4576", "497.982, 523.767, 56.0339, 0.4068", "498.022, 524.898, 55.9656, 0.4576", "498.468, 525.846, 55.0794, 0.5848", "499.334, 526.497, 54.7758, 0.6102", "499.625, 527.398, 54.4639, 0.5848", "499.724, 528.486, 54.88, 0.5592", "499.652, 529.581, 54.7014, 0.6102", "500.04, 530.615, 54.2836, 0.6102", "500.189, 531.73, 54.5849, 0.5848", "500.262, 532.85, 54.8573, 0.5084", "500.325, 533.954, 55.4274, 0.483", "500.27, 535.068, 55.1046, 0.4068", "500.14, 536.196, 55.0292, 0.3304", "500.001, 537.3, 55.5859, 0.2542", "499.712, 538.404, 55.7035, 0.2288", "499.508, 539.525, 55.9118, 0.2288", "499.418, 540.641, 55.8177, 0.2288", "499.68, 541.723, 55.2782, 0.2542", "499.825, 542.773, 55.6811, 0.3304", "499.681, 543.821, 55.2549, 0.4576", "499.466, 544.841, 54.1052, 0.5338", "498.919, 545.808, 54.3024, 0.5592", "498.869, 546.935, 54.455, 0.5592", "498.78, 548.057, 54.1391, 0.5848", "498.52, 548.817, 52.6865, 0.5592", "498.321, 549.49, 51.8848, 0.4322", "498.178, 549.914, 49.6082, 0.3304", "498.246, 550.946, 49.4147, 0.2796", "498.554, 552.035, 49.6448, 0.305", "499.355, 552.666, 48.72, 0.305" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "406.121, 407.884, 40.8624, 0.6356", "406.137, 409.022, 40.8811, 0.3304", "406.219, 410.164, 40.8962, 0.4068", "406.4, 411.292, 41.0141, 0.5084", "405.963, 412.307, 41.6231, 0.5592", "405.371, 413.273, 41.9818, 0.5592", "404.861, 414.296, 42.0, 0.5338", "404.727, 415.43, 42.0006, 0.6102", "404.61, 416.568, 42.0036, 0.6864", "404.298, 417.668, 42.0238, 0.7372", "404.063, 418.785, 42.1652, 0.661", "403.798, 419.879, 42.6661, 0.6102", "403.572, 420.99, 43.0475, 0.5848", "403.092, 422.022, 42.8134, 0.6356", "402.6, 423.026, 42.2285, 0.6356", "402.168, 424.083, 42.1196, 0.6864", "401.971, 425.198, 42.5152, 0.661", "401.829, 426.309, 43.0842, 0.661", "401.506, 427.406, 43.0427, 0.5592", "401.335, 428.527, 42.6768, 0.5338", "401.162, 429.649, 42.3111, 0.5084", "400.796, 430.271, 42.9383, 0.5592", "400.288, 431.234, 42.8963, 0.5592", "399.877, 432.136, 42.7602, 0.5084", "399.477, 433.154, 43.4655, 0.3814", "399.024, 434.116, 42.8151, 0.305", "398.453, 435.085, 42.87, 0.305", "397.942, 436.039, 43.6761, 0.3814", "397.744, 437.136, 43.0746, 0.4322", "397.501, 438.241, 43.0531, 0.4576", "396.927, 439.203, 43.5725, 0.4576", "396.53, 440.271, 43.822, 0.4576", "396.027, 441.291, 43.8662, 0.4576", "395.531, 442.265, 43.7928, 0.4576", "395.106, 443.274, 44.371, 0.483", "394.734, 444.355, 44.4287, 0.5084", "394.583, 445.462, 44.9319, 0.5338", "394.565, 446.599, 45.1643, 0.5084", "394.403, 447.722, 44.8857, 0.4576", "394.064, 448.812, 44.9207, 0.4068", "393.997, 449.95, 44.8092, 0.3814", "393.703, 451.048, 45.0699, 0.4322", "393.223, 452.082, 44.8568, 0.4576", "392.82, 453.109, 44.4856, 0.4576", "392.426, 454.028, 45.5731, 0.3814", "391.788, 454.969, 45.2852, 0.3304", "391.087, 455.863, 44.9826, 0.305", "390.574, 456.847, 44.8913, 0.2796", "390.098, 457.865, 45.0761, 0.2542", "389.402, 458.767, 45.285, 0.2542", "388.751, 459.703, 45.2782, 0.2796", "388.099, 460.641, 45.1704, 0.3304", "387.524, 461.591, 45.6515, 0.356", "386.94, 462.547, 45.6596, 0.3814", "386.322, 463.505, 45.6179, 0.356", "385.639, 464.416, 45.8511, 0.305", "385.091, 465.414, 45.92, 0.2796", "384.353, 466.263, 45.6744, 0.2796", "383.725, 467.191, 45.1783, 0.3304", "383.056, 468.103, 45.4532, 0.3814", "382.61, 469.128, 44.8991, 0.4576", "382.262, 470.208, 45.1086, 0.483", "382.26, 471.337, 45.1702, 0.4322", "381.74, 472.31, 45.4754, 0.3304", "381.112, 473.227, 45.2673, 0.2542", "380.789, 474.308, 45.36, 0.2542", "380.386, 475.362, 45.36, 0.2796", "379.849, 476.367, 45.5314, 0.305", "379.671, 477.454, 45.1489, 0.2796", "379.26, 478.507, 45.096, 0.2542", "378.72, 479.514, 45.0803, 0.2288", "378.073, 480.457, 45.0184, 0.2288", "377.505, 481.451, 44.9876, 0.2288", "376.956, 482.41, 44.2655, 0.2288", "376.464, 483.426, 44.0602, 0.2288", "376.159, 484.524, 44.24, 0.2542", "375.688, 485.549, 44.1426, 0.2796", "375.182, 486.491, 43.5252, 0.305", "374.964, 487.519, 43.5425, 0.2796", "374.874, 488.579, 42.978, 0.2796", "374.415, 489.602, 42.84, 0.2796", "373.824, 490.582, 42.8884, 0.305", "373.746, 491.707, 43.0875, 0.2796", "373.889, 492.833, 42.8075, 0.2796", "373.969, 493.97, 42.5561, 0.305", "374.061, 495.084, 43.1116, 0.3814", "374.211, 496.218, 43.125, 0.4322", "374.201, 497.343, 43.584, 0.4322", "374.153, 498.458, 43.2516, 0.3814", "373.942, 499.563, 43.6383, 0.305", "373.74, 500.684, 43.414, 0.2542", "373.422, 501.769, 43.1315, 0.2288", "372.784, 502.69, 43.12, 0.2288", "371.939, 503.446, 43.1116, 0.2288", "371.408, 504.435, 42.9848, 0.2288", "371.23, 505.552, 42.8893, 0.2288", "371.171, 506.691, 42.9979, 0.2288", "370.859, 507.769, 42.957, 0.2542", "370.433, 508.819, 42.9551, 0.2796", "369.986, 509.851, 43.2482, 0.305", "369.413, 510.83, 43.582, 0.305", "369.227, 511.9, 43.5025, 0.356", "368.905, 512.944, 43.1934, 0.4576", "368.519, 513.999, 43.5868, 0.5338", "368.003, 514.991, 42.8786, 0.4068", "367.615, 516.04, 42.4026, 0.3304", "367.198, 517.081, 42.632, 0.3814", "366.717, 518.094, 42.4973, 0.4576", "366.104, 518.719, 40.9268, 0.5592", "365.708, 519.668, 39.7345, 0.5592", "365.313, 520.692, 39.4915, 0.5592", "364.714, 521.523, 40.4799, 0.5338", "364.084, 522.474, 40.3194, 0.5338", "363.419, 523.403, 40.4275, 0.5084", "362.637, 524.207, 40.2338, 0.5338", "361.702, 524.826, 39.7046, 0.5848", "361.018, 525.703, 39.6838, 0.6864", "360.103, 526.333, 39.989, 0.661", "359.304, 527.105, 40.0604, 0.5592", "358.51, 527.852, 40.6792, 0.483", "357.598, 528.422, 40.1248, 0.483", "356.676, 528.817, 38.8108, 0.5084", "355.813, 529.389, 38.5451, 0.4576", "355.094, 530.194, 39.2482, 0.4322", "354.549, 531.134, 39.4173, 0.4576", "353.688, 531.834, 38.8077, 0.483", "352.755, 532.462, 38.3009, 0.4576", "351.946, 533.225, 37.7104, 0.3814", "351.086, 533.873, 36.8922, 0.305", "350.107, 534.406, 37.4674, 0.305", "349.184, 534.867, 38.0904, 0.3304", "348.401, 535.574, 37.021, 0.4322", "347.545, 536.201, 36.0416, 0.4322", "346.672, 536.761, 36.2888, 0.4576", "345.645, 537.178, 36.7284, 0.4322", "344.65, 537.589, 36.8074, 0.4576", "343.865, 537.883, 35.2344, 0.4322", "343.212, 538.623, 34.1746, 0.356", "342.888, 539.616, 35.1702, 0.3304", "341.779, 539.737, 35.285, 0.356", "341.083, 540.191, 36.9404, 0.4322", "340.528, 541.164, 36.9799, 0.4576", "339.995, 542.148, 36.4616, 0.4322", "339.536, 543.169, 36.1497, 0.4322", "338.634, 543.85, 36.2513, 0.4068", "337.948, 544.6, 35.3321, 0.4068", "337.823, 545.42, 33.605, 0.4068", "337.675, 545.812, 30.9991, 0.4322", "337.597, 546.549, 29.7455, 0.4576", "337.345, 547.564, 29.1388, 0.4322", "336.818, 548.498, 28.2069, 0.3814", "336.343, 549.508, 28.2358, 0.4068", "336.221, 550.607, 27.72, 0.483" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "443.261, 383.121, 39.2708, 0.7372", "444.711, 383.167, 39.3879, 0.5848", "445.854, 383.202, 39.48, 0.5848", "446.313, 383.461, 39.8275, 0.5848", "447.256, 384.103, 39.9311, 0.5848", "448.328, 384.422, 39.7821, 0.5592", "449.415, 384.367, 39.9151, 0.483", "450.447, 384.857, 39.9888, 0.4322", "451.515, 385.213, 39.739, 0.4068", "452.599, 385.339, 40.0484, 0.4322", "453.643, 385.248, 40.0459, 0.4322", "454.546, 385.076, 41.141, 0.356", "455.603, 385.169, 41.897, 0.3304", "456.724, 385.144, 42.3769, 0.356", "457.79, 384.914, 43.2102, 0.4322", "458.825, 384.642, 44.1081, 0.4068", "459.947, 384.501, 44.2173, 0.356", "461.085, 384.494, 44.24, 0.356", "462.194, 384.239, 44.191, 0.4068", "463.231, 384.377, 44.5432, 0.483", "464.279, 384.313, 45.5666, 0.483", "465.375, 384.636, 45.7064, 0.483", "466.439, 384.986, 46.1936, 0.4068", "467.453, 385.227, 47.0814, 0.3814", "468.489, 385.581, 46.4414, 0.356", "469.484, 386.108, 46.5175, 0.4068", "470.587, 386.369, 46.8003, 0.3814", "471.652, 386.725, 46.844, 0.356", "472.456, 387.492, 47.0767, 0.2796", "473.209, 388.334, 47.1391, 0.2542", "474.148, 388.973, 47.3172, 0.2542", "475.23, 389.292, 47.3424, 0.305", "476.343, 389.555, 47.3567, 0.356", "477.374, 390.034, 47.425, 0.356", "478.431, 390.429, 47.7814, 0.3304", "479.513, 390.787, 47.9567, 0.3304", "480.548, 391.216, 47.4827, 0.356", "481.542, 391.685, 48.0267, 0.356", "482.564, 392.191, 48.1586, 0.305", "483.504, 392.831, 48.44, 0.2542", "484.577, 393.197, 48.44, 0.2288", "485.157, 394.176, 48.4305, 0.2288", "486.091, 394.831, 48.2793, 0.2288", "487.064, 395.425, 48.16, 0.2542", "487.891, 396.211, 48.1737, 0.305", "488.629, 397.073, 48.2202, 0.356", "489.598, 397.657, 48.16, 0.356", "490.687, 397.999, 48.16, 0.305", "491.488, 398.697, 48.16, 0.2542", "492.072, 399.643, 48.16, 0.2288", "492.952, 400.37, 48.1029, 0.2542", "493.683, 401.19, 47.696, 0.2796", "494.391, 402.031, 47.4858, 0.305", "495.273, 402.674, 48.2045, 0.2796", "496.152, 403.26, 49.28, 0.2542", "497.177, 403.601, 49.28, 0.2288", "498.273, 403.887, 49.28, 0.2288", "499.394, 404.061, 49.28, 0.2288", "500.529, 404.161, 49.28, 0.2288", "501.656, 404.264, 49.28, 0.2288", "502.778, 404.404, 49.28, 0.2288", "503.916, 404.404, 49.4502, 0.2288", "504.958, 404.404, 50.4, 0.2288", "506.094, 404.404, 50.629, 0.2288", "507.236, 404.404, 50.68, 0.2288", "508.38, 404.404, 50.7021, 0.2288", "509.289, 404.404, 51.9481, 0.2288", "510.361, 404.404, 52.36, 0.2288", "511.5, 404.471, 52.36, 0.2288", "512.588, 404.747, 52.5316, 0.2288", "513.655, 405.013, 52.9259, 0.2542", "514.694, 405.317, 53.599, 0.305", "515.794, 405.43, 54.04, 0.3814", "516.64, 405.945, 54.6022, 0.4068", "517.615, 406.203, 55.72, 0.4068", "518.736, 406.429, 55.72, 0.356", "519.833, 406.692, 55.72, 0.356", "520.978, 406.692, 55.72, 0.3304", "522.105, 406.749, 55.72, 0.3304", "523.036, 407.264, 55.72, 0.2796", "524.181, 407.264, 55.72, 0.305", "525.324, 407.264, 55.72, 0.356" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "443.261, 383.121, 39.2708, 0.7372", "444.156, 381.807, 39.7194, 0.4322", "444.923, 380.979, 39.7578, 0.4322", "445.693, 380.166, 39.3, 0.483", "446.471, 379.36, 39.6542, 0.5592", "447.047, 378.389, 39.6735, 0.6102", "448.04, 377.851, 39.4526, 0.6102", "449.055, 377.343, 39.5875, 0.5848", "449.999, 377.005, 40.777, 0.5338", "451.069, 376.696, 41.1015, 0.483", "451.958, 376.12, 40.9321, 0.483", "452.648, 375.388, 41.7054, 0.5592", "453.41, 374.616, 41.7301, 0.6356", "454.255, 373.896, 41.8169, 0.7118", "455.265, 373.418, 42.3539, 0.6864", "456.175, 372.909, 42.8274, 0.661", "457.073, 372.645, 41.7396, 0.5848", "458.057, 372.302, 42.779, 0.5848", "459.101, 372.174, 43.7676, 0.5592", "460.104, 371.731, 43.7304, 0.5592", "461.18, 371.478, 43.8771, 0.483", "462.26, 371.467, 44.4049, 0.4322", "463.2, 371.678, 45.3832, 0.3814", "464.202, 371.341, 44.5981, 0.4322", "465.149, 370.758, 44.0558, 0.4576", "466.185, 370.4, 44.4973, 0.5338", "467.26, 370.282, 44.0448, 0.5592", "468.19, 369.861, 44.8868, 0.661", "469.064, 369.224, 45.7503, 0.6864", "470.149, 368.88, 45.6201, 0.7118", "471.121, 368.414, 45.6434, 0.6864", "472.1, 367.993, 46.4694, 0.6356", "473.172, 368.16, 46.769, 0.5592", "474.239, 367.93, 47.0784, 0.4576", "475.232, 367.556, 46.3784, 0.4576", "476.184, 367.375, 47.5801, 0.483", "477.259, 367.277, 47.6801, 0.5338", "478.342, 367.541, 48.1309, 0.5592", "479.469, 367.59, 48.2622, 0.6102", "480.604, 367.596, 48.435, 0.661", "481.694, 367.288, 48.1508, 0.6356", "482.832, 367.224, 47.9699, 0.5848", "483.666, 367.184, 49.5569, 0.5592", "484.679, 366.669, 49.8803, 0.6102", "485.728, 366.223, 50.0746, 0.6356", "486.797, 366.112, 50.4333, 0.6356", "487.796, 366.495, 51.3814, 0.5592", "488.694, 366.625, 53.0852, 0.5338", "489.605, 366.676, 54.2013, 0.483", "490.67, 366.541, 53.8415, 0.5084", "491.693, 366.834, 54.6862, 0.483", "492.641, 367.072, 54.187, 0.4576", "493.675, 367.202, 54.4737, 0.3814", "494.715, 367.625, 54.5924, 0.356", "495.58, 368.368, 54.6, 0.4068" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "418.284, 339.31, 31.7954, 0.966", "417.642, 338.338, 31.9043, 0.7626", "416.963, 337.418, 31.9152, 0.839", "416.203, 336.562, 31.9004, 0.9152", "415.447, 335.704, 31.8332, 0.9152", "414.825, 334.757, 31.5151, 0.8644", "414.319, 333.753, 31.0089, 0.788", "413.801, 332.738, 30.8174, 0.7372", "413.492, 331.64, 30.7989, 0.7372", "413.393, 330.502, 30.7938, 0.7626", "413.228, 329.37, 30.7583, 0.8644", "413.067, 328.242, 30.5054, 0.9406", "413.202, 327.13, 29.9995, 0.9406", "413.402, 326.01, 29.7052, 0.8898", "413.438, 324.868, 29.7147, 0.8136", "413.438, 323.728, 29.9331, 0.8136", "413.429, 322.599, 30.3806, 0.7372", "413.35, 321.459, 30.4181, 0.7118", "413.191, 320.326, 30.4038, 0.5848", "413.014, 319.317, 31.6308, 0.5848" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "418.284, 339.31, 31.7954, 0.966", "419.251, 338.952, 31.2306, 0.5338", "420.072, 338.21, 30.8728, 0.6356", "420.837, 337.36, 30.7975, 0.7118", "421.576, 336.487, 30.7882, 0.788", "422.264, 335.574, 30.7474, 0.7372", "422.962, 334.673, 30.555, 0.6356", "423.54, 333.711, 30.0793, 0.5592", "424.057, 332.7, 29.7464, 0.5592", "424.71, 331.768, 29.6831, 0.6102", "425.481, 330.924, 29.6918, 0.6356", "426.268, 330.094, 29.731, 0.5848", "426.991, 329.216, 29.9676, 0.4322", "427.62, 328.28, 30.4245, 0.356", "428.355, 327.423, 30.2781, 0.356", "429.208, 326.685, 29.8407, 0.483", "430.041, 325.907, 29.6929, 0.5592", "430.853, 325.101, 29.6806, 0.6356", "431.662, 324.293, 29.6817, 0.661", "432.472, 323.484, 29.6864, 0.661", "433.286, 322.68, 29.7044, 0.6356", "434.11, 321.888, 29.7766, 0.5848", "434.977, 321.153, 30.0636, 0.5848", "435.897, 320.496, 30.4898, 0.6102", "436.782, 319.779, 30.4749, 0.6864", "437.574, 318.957, 30.4704, 0.7372", "438.319, 318.097, 30.7392, 0.6864", "439.042, 317.213, 30.8028, 0.6356", "439.798, 316.354, 30.8146, 0.6102", "440.67, 315.617, 30.872, 0.7118", "441.522, 314.867, 31.1741, 0.788", "442.309, 314.062, 31.6781, 0.7626", "443.045, 313.194, 31.9066, 0.6864", "443.751, 312.295, 31.9771, 0.5848", "444.525, 311.463, 32.2582, 0.5848", "445.364, 310.798, 33.2002, 0.5848", "446.344, 310.275, 33.8148, 0.6102", "447.337, 309.777, 33.203, 0.6102", "448.176, 309.032, 32.7026, 0.5592", "449.022, 308.524, 32.3599, 0.4576", "449.705, 308.251, 34.4005, 0.356", "450.361, 308.004, 35.1949, 0.305", "451.226, 307.691, 33.5513, 0.356", "451.502, 306.822, 32.0636, 0.3814", "452.516, 306.814, 32.2619, 0.4068", "453.073, 306.752, 34.4137, 0.3814", "453.991, 306.392, 34.2714, 0.4576", "455.07, 306.333, 33.7856, 0.5592", "456.188, 306.489, 33.5328, 0.6356", "457.319, 306.455, 33.7366, 0.6102", "458.172, 306.241, 35.4318, 0.5338", "459.263, 306.193, 36.1477, 0.5084", "460.354, 306.433, 36.1189, 0.483", "461.26, 307.027, 36.3314, 0.483", "462.185, 307.469, 36.4179, 0.4322", "463.239, 307.178, 35.8571, 0.3814", "464.348, 307.186, 36.4168, 0.3814", "465.155, 306.451, 37.2358, 0.4322", "466.15, 305.938, 37.7199, 0.5338", "467.047, 305.246, 37.4402, 0.5338", "467.774, 304.417, 36.7142, 0.4576", "468.506, 303.674, 35.574, 0.3814", "469.107, 302.857, 35.4348, 0.356", "469.271, 302.442, 37.557, 0.4576", "469.991, 302.419, 39.3854, 0.5084", "470.152, 301.627, 37.912, 0.5592", "470.81, 301.148, 36.6064, 0.483", "471.707, 300.634, 37.4007, 0.4322", "472.448, 299.911, 37.6253, 0.3814", "473.422, 299.41, 38.0439, 0.356", "474.157, 298.847, 37.1176, 0.3304", "475.112, 298.333, 37.7658, 0.3304", "476.141, 297.852, 37.7054, 0.356", "477.165, 297.426, 38.0744, 0.4068", "478.176, 297.497, 39.1838, 0.4068", "479.08, 297.035, 38.6691, 0.4576", "480.123, 296.574, 38.6005, 0.483", "481.192, 296.182, 38.7764, 0.5592", "482.226, 295.941, 39.7897, 0.5592", "483.298, 295.681, 39.5567, 0.5338", "484.258, 295.67, 39.7197, 0.4576", "485.231, 295.828, 41.0782, 0.4068", "486.244, 295.51, 41.5554, 0.356", "487.013, 294.733, 42.2408, 0.3304", "487.977, 294.907, 41.412, 0.2796", "489.074, 294.626, 41.5694, 0.305", "490.075, 294.184, 42.3842, 0.3304", "490.947, 293.753, 43.687, 0.4068", "491.867, 293.394, 44.5402, 0.4068", "492.958, 293.084, 44.8283, 0.4068", "494.079, 292.897, 44.9148, 0.356", "495.197, 292.673, 45.0299, 0.3304", "496.007, 291.94, 45.1156, 0.305", "497.049, 291.624, 45.4628, 0.3304", "498.13, 291.301, 45.0993, 0.356", "499.25, 291.073, 45.0733, 0.3814", "500.27, 290.69, 44.24, 0.4068" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "392.385, 305.219, 37.5292, 0.6356", "393.343, 304.717, 36.3776, 0.4322", "393.743, 303.681, 36.2583, 0.5084", "393.765, 302.554, 35.8492, 0.5848", "393.771, 301.435, 35.3396, 0.661", "393.806, 300.292, 35.282, 0.6864", "393.951, 299.162, 35.2929, 0.6356", "394.163, 298.041, 35.3332, 0.6102", "394.215, 296.901, 35.2783, 0.5848", "394.18, 295.795, 34.6965, 0.6864", "394.033, 294.746, 33.6734, 0.7118", "393.742, 293.678, 33.0296, 0.7372", "393.46, 292.581, 32.6816, 0.661", "393.306, 291.47, 32.1916, 0.6864", "393.264, 290.336, 31.9082, 0.6864", "393.123, 289.204, 31.8385, 0.7118", "392.91, 288.092, 31.5084, 0.6864", "392.762, 287.006, 30.7359, 0.6864", "392.552, 285.937, 29.9673, 0.6864", "392.231, 284.848, 29.8166, 0.7118", "391.872, 283.768, 30.0558, 0.7372", "391.48, 282.709, 29.9835, 0.7118", "391.196, 281.623, 29.4524, 0.5848", "391.096, 280.504, 29.1838, 0.4322", "391.254, 279.411, 29.6472, 0.4068", "391.424, 278.332, 30.3545, 0.4576", "391.447, 277.214, 30.1498, 0.5848", "391.372, 276.117, 29.3787, 0.5848", "391.239, 275.005, 28.9232, 0.6102", "391.152, 273.891, 29.2628, 0.5592", "391.284, 272.831, 29.0847, 0.5592", "391.048, 271.853, 27.9908, 0.5338", "390.666, 270.861, 28.6658, 0.5338", "390.715, 269.787, 29.3689, 0.5338", "391.025, 268.731, 28.7084, 0.5084", "391.343, 267.633, 28.698, 0.4576", "391.504, 266.51, 28.8386, 0.4322", "391.456, 265.374, 29.0853, 0.4068", "391.404, 264.246, 29.4888, 0.4322", "391.34, 263.111, 29.6209, 0.4322", "391.158, 262.02, 30.172, 0.4576", "390.934, 260.943, 30.9422, 0.4322", "390.875, 260.094, 30.0628, 0.356", "391.083, 258.999, 30.6267, 0.305", "391.428, 257.934, 30.9767, 0.2796", "391.802, 256.862, 31.2388, 0.305", "392.086, 255.814, 30.5668, 0.2796", "392.4, 254.771, 31.0226, 0.2796", "392.203, 253.653, 31.3356, 0.305", "392.219, 252.571, 31.9777, 0.356", "392.238, 251.544, 32.9384, 0.4068", "392.327, 250.527, 32.3417, 0.4322", "392.391, 249.581, 33.3752, 0.483", "392.124, 248.515, 33.88, 0.5084", "392.007, 247.775, 33.57, 0.5848", "391.827, 246.662, 33.1022, 0.6102", "391.736, 245.522, 33.0411, 0.6356", "391.884, 244.388, 33.0414, 0.5848", "391.717, 243.257, 33.0476, 0.6102", "391.44, 242.147, 33.0862, 0.6356", "391.155, 241.046, 33.3777, 0.6864", "391.019, 239.912, 33.4989, 0.661", "390.993, 238.783, 33.0546, 0.6102", "390.828, 237.65, 33.04, 0.5338", "390.665, 236.519, 33.04, 0.5084", "390.556, 235.379, 33.04, 0.483", "390.527, 234.235, 33.0397, 0.4576", "390.227, 233.132, 33.0361, 0.4322", "389.981, 232.015, 33.0075, 0.5084", "389.619, 230.932, 32.8132, 0.661", "389.251, 229.906, 31.9665, 0.788", "388.9, 228.822, 31.7489, 0.8136", "388.635, 227.743, 31.0783, 0.788", "388.308, 226.673, 30.4814, 0.6864", "387.953, 225.653, 29.5607, 0.5592", "387.554, 224.655, 28.6073, 0.4068", "387.431, 223.533, 28.1635, 0.356", "387.529, 222.404, 28.2738, 0.4068", "387.021, 221.432, 27.4789, 0.4576", "386.631, 220.41, 26.7761, 0.483", "386.83, 219.289, 26.4995, 0.5084", "387.106, 218.179, 26.5308, 0.5848", "387.481, 217.103, 26.7112, 0.6864", "387.786, 216.034, 27.323, 0.661", "387.9, 214.897, 27.3734, 0.5848", "388.022, 213.764, 27.1485, 0.4576", "387.956, 212.63, 27.0371, 0.4322", "387.667, 211.537, 27.4546, 0.483", "387.256, 210.473, 27.6402, 0.5592", "386.868, 209.408, 27.9681, 0.6102", "386.662, 208.292, 27.9667, 0.6102", "386.771, 207.222, 27.251, 0.6102", "387.0, 206.212, 27.4966, 0.5592", "387.244, 205.15, 26.9987, 0.4576", "387.418, 204.063, 26.4258, 0.3304", "387.438, 202.92, 26.4502, 0.2542", "387.505, 201.779, 26.5303, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "392.385, 305.219, 37.5292, 0.6356", "392.328, 304.109, 37.6202, 0.8644", "392.131, 303.0, 38.066, 0.966", "391.972, 301.98, 39.2454, 0.9914", "392.019, 300.906, 40.1716, 0.9152", "392.131, 299.796, 40.775, 0.7626", "391.885, 298.687, 40.8187, 0.661", "391.603, 297.584, 40.563, 0.661", "391.532, 296.468, 40.0117, 0.7372", "391.683, 295.339, 40.0859, 0.8644", "391.899, 294.24, 40.6501, 0.9152", "391.917, 293.102, 40.8674, 0.9406", "391.827, 291.962, 40.8822, 0.9152", "391.548, 290.854, 40.8937, 0.8898", "391.162, 289.777, 40.9598, 0.8898", "390.674, 288.75, 41.26, 0.8898", "390.176, 287.746, 41.8166, 0.8898", "389.71, 286.705, 41.9919, 0.8644", "389.274, 285.648, 42.0, 0.839", "388.802, 284.604, 42.0008, 0.8644", "388.509, 283.5, 42.0067, 0.8898", "388.108, 282.43, 42.044, 0.9152", "387.607, 281.407, 42.3052, 0.966", "386.918, 280.527, 42.9027, 0.966", "386.132, 279.717, 43.3457, 0.9152", "385.418, 278.869, 44.0429, 0.788", "384.932, 277.918, 45.0374, 0.7118", "384.804, 276.791, 45.3597, 0.7118", "384.923, 275.655, 45.3564, 0.6864", "384.686, 274.538, 45.3365, 0.6356", "384.164, 273.522, 45.2362, 0.5338", "383.777, 272.463, 44.8336, 0.5338", "383.702, 271.339, 44.4021, 0.6356", "383.731, 270.198, 44.5855, 0.7626", "383.85, 269.079, 45.0873, 0.788", "383.938, 267.949, 45.36, 0.6864", "383.767, 266.819, 45.36, 0.6102", "383.484, 265.71, 45.36, 0.6102", "383.25, 264.59, 45.36, 0.661", "383.029, 263.468, 45.36, 0.7118", "382.791, 262.349, 45.3608, 0.7118", "382.516, 261.24, 45.3659, 0.7118", "382.084, 260.182, 45.3944, 0.6356", "381.552, 259.172, 45.5344, 0.6356", "381.094, 258.142, 45.9796, 0.6356", "380.793, 257.055, 46.4232, 0.7372", "380.352, 256.016, 46.6724, 0.7626", "379.625, 255.152, 47.1246, 0.788", "378.93, 254.271, 47.5149, 0.7372", "378.488, 253.216, 47.6, 0.7118", "378.043, 252.166, 47.6, 0.7118", "377.47, 251.177, 47.6, 0.7626", "376.94, 250.163, 47.6, 0.839", "376.471, 249.12, 47.6, 0.8644", "375.995, 248.08, 47.6, 0.839", "375.572, 247.017, 47.6, 0.7372", "375.203, 245.934, 47.6, 0.661", "374.825, 244.855, 47.6011, 0.6356", "374.372, 243.805, 47.6064, 0.6864", "373.873, 242.776, 47.6375, 0.7118", "373.433, 241.727, 47.8142, 0.6864", "373.151, 240.636, 48.2829, 0.6356", "372.937, 239.524, 48.6422, 0.661", "372.758, 238.396, 48.72, 0.7118", "372.652, 237.256, 48.72, 0.7626", "372.422, 236.146, 48.72, 0.7372", "371.931, 235.114, 48.7206, 0.7118", "371.405, 234.098, 48.7234, 0.6864", "370.992, 233.034, 48.7435, 0.661", "370.712, 231.928, 48.8816, 0.6356", "370.502, 230.818, 49.2864, 0.6102", "370.416, 229.692, 49.7129, 0.661", "370.334, 228.556, 49.84, 0.6864", "370.112, 227.434, 49.8389, 0.7118", "369.774, 226.345, 49.833, 0.661", "369.25, 225.331, 49.8039, 0.661", "368.653, 224.362, 49.6367, 0.6356", "368.203, 223.328, 49.2425, 0.6102", "367.848, 222.254, 49.107, 0.5338", "367.324, 221.257, 49.5004, 0.5084", "366.672, 220.326, 49.7879, 0.483", "366.047, 219.369, 49.84, 0.5084", "365.438, 218.4, 49.84, 0.5338", "364.729, 217.508, 49.84, 0.6864", "363.928, 216.692, 49.8389, 0.8898", "363.21, 215.809, 49.8336, 1.0932", "362.664, 214.805, 49.8016, 1.1694", "362.272, 213.742, 49.593, 1.1186", "361.957, 212.656, 49.1924, 0.966", "361.573, 211.599, 49.28, 0.8136", "361.279, 210.53, 49.9316, 0.7118", "361.017, 209.438, 50.1122, 0.7372", "360.588, 208.383, 49.8817, 0.7626", "360.161, 207.325, 49.8238, 0.7626", "359.925, 206.215, 49.7076, 0.7372", "359.919, 205.085, 49.3497, 0.7372", "360.055, 203.968, 48.8642, 0.7626", "360.245, 202.854, 48.4333, 0.7118", "360.35, 201.736, 47.9461, 0.7118", "360.338, 200.611, 47.465, 0.7118", "360.282, 199.483, 47.0282, 0.7626", "360.289, 198.357, 46.6267, 0.788", "360.589, 197.273, 46.5578, 0.839", "361.089, 196.251, 46.8224, 0.9152", "361.594, 195.242, 47.2814, 0.8898", "362.084, 194.218, 47.5653, 0.8644", "362.528, 193.165, 47.6084, 0.7626", "362.883, 192.079, 47.6549, 0.7626", "363.163, 190.977, 47.8968, 0.661", "363.534, 189.917, 48.3518, 0.5848", "364.016, 188.89, 48.6612, 0.483", "364.188, 187.8, 48.72, 0.5084", "363.79, 186.76, 48.72, 0.6102", "363.157, 185.806, 48.7197, 0.661", "362.615, 184.804, 48.7194, 0.661", "362.421, 183.7, 48.7166, 0.6102", "362.654, 182.596, 48.6987, 0.6864", "362.951, 181.493, 48.5862, 0.7372", "363.045, 180.384, 48.0724, 0.788", "362.88, 179.315, 47.2156, 0.7372", "362.431, 178.305, 46.6396, 0.7626", "361.758, 177.39, 46.4906, 0.8644", "360.995, 176.539, 46.4797, 1.0424", "360.298, 175.634, 46.4792, 1.144", "359.777, 174.62, 46.4752, 1.0424", "359.357, 173.556, 46.4517, 0.8898", "358.897, 172.511, 46.3322, 0.788", "358.519, 171.451, 45.8856, 0.8898", "358.247, 170.354, 45.4784, 0.966", "358.084, 169.226, 45.3477, 0.966", "357.931, 168.094, 45.2351, 0.839", "357.672, 166.999, 44.786, 0.7626", "357.286, 165.936, 44.375, 0.7372", "356.87, 164.874, 44.2512, 0.788", "356.498, 163.792, 44.2383, 0.7372", "356.292, 162.671, 44.2288, 0.6356", "356.226, 161.531, 44.1585, 0.5592", "356.035, 160.425, 43.6887, 0.6356", "355.634, 159.364, 43.4994, 0.839", "355.229, 158.311, 43.906, 0.9406", "354.806, 157.255, 44.1857, 0.9152", "354.537, 156.148, 44.2352, 0.788", "354.622, 155.017, 44.2226, 0.661", "354.978, 153.934, 44.1353, 0.5592", "355.205, 152.836, 43.6456, 0.483", "355.111, 151.717, 43.1967, 0.5338", "355.208, 150.593, 42.8137, 0.6356", "355.287, 149.492, 42.0932, 0.7626", "355.216, 148.412, 41.1916, 0.7372", "354.856, 147.384, 40.3791, 0.661", "354.312, 146.398, 39.9078, 0.5592", "354.011, 145.301, 39.9454, 0.6102", "353.946, 144.189, 39.3644, 0.7626", "353.888, 143.072, 38.775, 0.8644", "353.636, 141.96, 38.6462, 0.8644", "353.527, 140.822, 38.6383, 0.7372", "353.577, 139.68, 38.6302, 0.6864", "353.835, 138.567, 38.5756, 0.6102", "353.885, 137.438, 38.1713, 0.5848", "353.725, 136.328, 37.627, 0.5338", "354.03, 135.233, 37.522, 0.6102", "354.348, 134.135, 37.5166, 0.6864", "354.408, 132.993, 37.4968, 0.7372", "354.41, 131.851, 37.3618, 0.661", "354.408, 130.757, 36.5473, 0.5338", "354.399, 129.742, 35.2612, 0.4576", "354.33, 128.604, 35.0854, 0.483", "353.797, 127.729, 36.3118, 0.6356" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "376.129, 410.158, 54.712, 0.7626", "375.618, 411.034, 52.8156, 0.3304", "375.17, 411.93, 51.8, 0.4068", "374.849, 413.021, 51.8325, 0.483", "374.336, 413.971, 52.2144, 0.483", "373.973, 414.928, 51.7006, 0.5084", "373.478, 415.932, 51.97, 0.5084", "372.886, 416.839, 51.1949, 0.5592", "372.313, 417.775, 51.9112, 0.5848", "371.687, 418.591, 52.7828, 0.5592", "371.11, 419.552, 52.2197, 0.483", "370.486, 420.437, 52.2264, 0.4576", "369.843, 421.3, 52.92, 0.5084", "369.148, 422.152, 52.4709, 0.5848", "368.391, 422.945, 51.7031, 0.5592", "367.825, 423.866, 51.9966, 0.483", "367.232, 424.813, 52.351, 0.4068", "366.632, 425.781, 52.19, 0.4068", "366.089, 426.781, 52.3191, 0.4576", "365.664, 427.835, 52.1382, 0.483", "364.975, 428.716, 52.633, 0.4322", "364.236, 429.581, 52.36, 0.3814", "363.516, 430.467, 52.4101, 0.4068", "362.735, 431.264, 53.009, 0.483", "362.012, 432.13, 53.2036, 0.483", "361.246, 432.936, 52.9455, 0.4068", "360.471, 433.717, 53.2375, 0.3304", "359.752, 434.512, 53.1664, 0.3304", "359.121, 435.385, 54.0957, 0.356", "358.819, 436.42, 53.8247, 0.4068", "358.404, 437.366, 52.698, 0.4068", "357.699, 438.242, 53.0608, 0.3814", "356.937, 439.043, 53.76, 0.305", "356.361, 440.026, 53.6754, 0.2542", "355.743, 440.922, 53.0348, 0.2542", "354.908, 441.682, 53.3459, 0.2796", "354.165, 442.547, 53.1222, 0.3304", "353.423, 443.404, 52.9847, 0.356", "352.771, 444.341, 53.1541, 0.3814", "352.027, 445.191, 52.8612, 0.356", "351.25, 445.913, 53.7589, 0.3304", "351.04, 447.036, 53.8838, 0.305", "350.804, 448.113, 54.5768, 0.305", "350.146, 449.043, 54.3273, 0.3304", "349.436, 449.933, 54.1671, 0.356", "348.604, 450.711, 54.423, 0.4068", "347.77, 451.475, 54.488, 0.3814", "346.787, 452.014, 54.1383, 0.4068", "345.741, 452.461, 54.3124, 0.4322", "344.702, 452.911, 54.381, 0.5338", "343.602, 453.205, 54.395, 0.5848", "342.794, 453.529, 53.048, 0.6102", "341.947, 453.945, 53.354, 0.6356", "340.936, 454.443, 53.4215, 0.6356", "340.007, 454.995, 52.9936, 0.6102", "339.053, 455.319, 52.8646, 0.5338", "338.249, 455.787, 52.9603, 0.5338", "337.33, 456.259, 53.3784, 0.5338", "336.348, 456.802, 53.5688, 0.5592", "335.328, 457.28, 53.4635, 0.4576", "334.37, 457.684, 52.3536, 0.4068", "333.478, 458.334, 52.5983, 0.3814", "332.624, 458.973, 53.6043, 0.4322", "331.676, 459.508, 55.4952, 0.4068", "331.142, 460.224, 56.4491, 0.4068", "330.749, 461.211, 56.7244, 0.4322", "330.501, 462.29, 56.28, 0.4068" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "376.129, 410.158, 54.712, 0.7626", "375.691, 410.531, 56.2092, 0.3304", "375.01, 411.059, 58.035, 0.2796", "374.254, 411.576, 59.7145, 0.305", "374.282, 412.384, 61.196, 0.4322", "374.927, 413.197, 62.279, 0.5084", "375.371, 414.165, 63.208, 0.5848", "375.484, 415.207, 64.286, 0.5848", "375.588, 416.241, 65.4522, 0.661", "375.619, 417.343, 66.1584, 0.7118", "375.337, 418.425, 66.6644, 0.6864", "375.102, 419.447, 67.755, 0.6102", "375.15, 420.515, 68.7148, 0.5084", "375.429, 421.608, 68.4292, 0.483", "375.737, 422.706, 68.2214, 0.4576", "375.918, 423.835, 68.231, 0.4322", "376.078, 424.967, 68.2226, 0.4322", "376.353, 425.973, 69.3759, 0.3814", "376.629, 426.979, 70.5289, 0.4068", "376.463, 427.56, 70.3842, 0.4322", "376.7, 428.596, 71.0889, 0.5084", "376.829, 429.533, 72.623, 0.5084", "376.238, 430.306, 73.8212, 0.483", "375.788, 431.182, 72.4147, 0.4576", "375.181, 432.082, 71.5582, 0.483", "374.816, 433.093, 70.9262, 0.483", "374.843, 434.196, 71.493, 0.483", "375.018, 435.191, 72.7709, 0.4322", "375.254, 436.189, 73.612, 0.4322", "375.887, 437.102, 73.9698, 0.4576", "376.539, 437.828, 75.3183, 0.5084", "376.804, 438.818, 76.2121, 0.483", "376.726, 439.946, 76.463, 0.4068", "376.778, 441.064, 77.0182, 0.3304", "376.886, 442.052, 78.3759, 0.3304", "376.786, 443.19, 78.2782, 0.356", "376.862, 444.301, 78.6391, 0.356", "377.159, 445.056, 80.3071, 0.305", "377.051, 446.191, 80.1198, 0.2796", "376.91, 447.318, 80.3141, 0.2796", "376.68, 448.407, 80.8223, 0.3304", "376.465, 449.475, 81.0214, 0.3304", "376.294, 450.472, 82.1145, 0.3304", "376.049, 451.581, 82.4331, 0.2796", "375.845, 452.703, 82.6, 0.2542", "375.508, 453.787, 82.6, 0.2288", "375.07, 454.843, 82.6818, 0.2288", "374.792, 455.942, 82.826, 0.2288", "374.664, 457.065, 83.2096, 0.2288", "374.378, 458.149, 83.5806, 0.2288", "374.082, 459.25, 83.6998, 0.2288", "373.897, 460.334, 84.3296, 0.2288", "373.675, 461.436, 84.7745, 0.2542", "373.538, 462.567, 84.9612, 0.2796", "373.898, 463.611, 85.3457, 0.305", "374.38, 464.592, 86.1484, 0.2796", "374.327, 465.713, 86.24, 0.2542", "374.316, 466.857, 86.24, 0.2288", "374.316, 468.001, 86.24, 0.2288", "374.316, 469.145, 86.24, 0.2288", "374.316, 470.289, 86.24, 0.2288", "374.316, 471.433, 86.24, 0.2288", "374.316, 472.577, 86.24, 0.2288", "374.316, 473.721, 86.24, 0.2288", "374.769, 474.76, 86.24, 0.2796", "374.773, 475.904, 86.24, 0.356" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "413.014, 319.317, 31.6308, 0.5848", "413.386, 318.909, 31.9799, 0.483", "414.133, 318.091, 32.681, 0.483", "414.896, 317.303, 33.4636, 0.5338", "415.681, 316.5, 33.8839, 0.5592", "416.478, 315.844, 34.9264, 0.661", "416.902, 314.799, 35.0437, 0.7372", "417.551, 313.988, 35.9859, 0.8644", "418.055, 312.965, 35.8694, 0.8644", "418.663, 312.008, 36.0909, 0.8644", "419.346, 311.157, 36.8306, 0.8136", "419.87, 310.279, 38.075, 0.8644", "420.451, 309.362, 38.7296, 0.839", "420.96, 308.371, 39.1219, 0.788", "421.156, 307.265, 39.4864, 0.6864", "421.17, 306.126, 39.7102, 0.6356", "421.373, 305.021, 39.3742, 0.6102", "421.758, 303.946, 39.3848, 0.6356", "422.349, 303.008, 39.1194, 0.661", "423.022, 302.186, 40.1461, 0.6864", "423.675, 301.366, 41.2208, 0.6864", "424.433, 300.591, 42.0017, 0.661", "425.184, 299.735, 42.2114, 0.5848", "425.831, 298.828, 42.756, 0.483", "426.492, 298.054, 43.9169, 0.4322", "427.365, 297.321, 43.8892, 0.4576", "428.276, 296.652, 43.8609, 0.483", "428.952, 295.898, 44.9599, 0.4322", "429.46, 295.048, 46.1975, 0.3304", "429.554, 293.953, 46.0048, 0.2542", "430.028, 293.148, 45.0215, 0.2288", "430.204, 292.126, 46.0102, 0.2288", "430.523, 291.218, 47.5112, 0.305", "430.873, 290.499, 46.4775, 0.4068", "431.144, 289.49, 45.5868, 0.5084", "431.298, 288.409, 44.8868, 0.4576", "431.54, 287.382, 45.6694, 0.4068", "431.875, 286.463, 45.8629, 0.3814", "432.233, 285.431, 45.1926, 0.5084", "432.669, 284.381, 44.8832, 0.5592", "433.058, 283.354, 45.6201, 0.5592", "433.343, 282.509, 47.3651, 0.4576", "433.69, 281.583, 48.1505, 0.4068", "434.073, 280.79, 46.8115, 0.4322", "434.713, 279.869, 47.0008, 0.483", "435.214, 278.887, 47.4788, 0.5338", "435.528, 277.794, 47.6134, 0.483", "436.189, 277.102, 48.7404, 0.3814", "436.982, 276.3, 48.9983, 0.3304", "437.01, 275.159, 49.0, 0.356", "437.473, 274.118, 48.8774, 0.483", "437.801, 273.04, 49.2974, 0.5084", "438.201, 271.979, 49.1935, 0.5084", "438.715, 271.231, 50.6024, 0.4068", "438.887, 270.526, 50.825, 0.3814", "438.946, 269.465, 50.5453, 0.3304", "439.024, 268.611, 51.7384, 0.3304", "438.952, 267.49, 51.4298, 0.2796", "438.964, 266.359, 51.7762, 0.305", "438.779, 265.414, 52.9788, 0.3304", "438.776, 264.428, 53.7454, 0.3814", "438.46, 263.523, 54.9298, 0.356", "438.066, 262.498, 55.6604, 0.3304", "437.534, 261.502, 55.9628, 0.3304", "437.157, 260.665, 56.0952, 0.356", "436.778, 259.917, 57.96, 0.4576" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "413.014, 319.317, 31.6308, 0.5848", "412.758, 317.995, 31.9631, 0.6864", "412.375, 316.925, 32.1964, 0.7372", "412.068, 315.863, 32.8395, 0.7626", "411.926, 314.74, 32.8726, 0.7626", "411.507, 313.702, 32.2907, 0.7626", "411.155, 312.65, 31.8746, 0.7626", "411.11, 311.539, 32.4534, 0.788", "410.936, 310.462, 33.2004, 0.7626", "410.829, 309.346, 33.0229, 0.7372", "410.663, 308.267, 32.8194, 0.661", "410.395, 307.167, 33.2276, 0.661", "410.359, 306.061, 32.8079, 0.6356", "410.323, 305.03, 31.6803, 0.6102", "410.297, 303.939, 32.4134, 0.5592", "410.482, 302.839, 32.2255, 0.5338", "410.46, 301.735, 31.5627, 0.5848", "410.559, 300.631, 32.0673, 0.6356", "410.326, 299.535, 32.424, 0.6864", "410.163, 298.47, 31.5907, 0.661", "410.337, 297.383, 30.8711, 0.661", "410.704, 296.311, 31.0862, 0.7118", "411.174, 295.472, 29.8214, 0.8136", "411.395, 294.391, 30.5141, 0.8898", "411.877, 293.384, 30.8666, 0.8898", "412.505, 292.46, 30.5404, 0.8136", "412.758, 291.364, 30.3582, 0.7118", "412.85, 290.281, 29.4944, 0.6102", "412.856, 289.263, 29.4465, 0.6102", "413.082, 288.293, 30.0712, 0.6356", "413.305, 287.188, 30.2492, 0.6864", "413.573, 286.279, 28.709, 0.6356", "413.785, 285.27, 28.1823, 0.6102", "413.294, 284.311, 28.3164, 0.6102", "412.79, 283.444, 27.0074, 0.6864", "412.09, 282.621, 26.789, 0.6864", "411.955, 281.56, 26.21, 0.6102", "412.426, 280.527, 26.3273, 0.5084", "412.957, 279.551, 25.8619, 0.4322", "413.149, 278.49, 25.163, 0.4576", "413.264, 277.401, 25.2804, 0.483", "413.1, 276.305, 24.6638, 0.5848", "413.067, 275.165, 24.5342, 0.6356", "413.326, 274.09, 24.1928, 0.6864", "413.305, 273.003, 23.6608, 0.7118", "413.076, 271.893, 23.2828, 0.7626", "413.085, 270.792, 22.6125, 0.8136", "412.997, 269.752, 21.4931, 0.8136", "412.977, 268.623, 21.2472, 0.7626", "413.038, 267.48, 21.2831, 0.661", "413.226, 266.387, 20.8631, 0.5338", "413.552, 265.32, 20.578, 0.4322", "413.846, 264.216, 20.7052, 0.4322", "414.129, 263.11, 20.6419, 0.5084", "414.383, 262.027, 20.0553, 0.5848", "414.578, 260.928, 19.4592, 0.5848", "415.045, 259.911, 19.1041, 0.5592", "415.828, 259.108, 18.695, 0.5084", "416.735, 258.426, 18.8874, 0.483", "417.192, 257.551, 18.9269, 0.4576", "416.806, 256.483, 18.727, 0.4322", "416.604, 255.389, 18.2633, 0.4576", "416.535, 254.284, 17.698, 0.483", "416.873, 253.258, 18.3784, 0.6102", "417.101, 252.138, 18.48, 0.661" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "353.797, 127.729, 36.3118, 0.6356", "353.751, 126.907, 36.3334, 0.2796", "353.688, 125.765, 36.3633, 0.356", "353.656, 124.63, 36.3919, 0.4576", "354.14, 123.601, 36.4344, 0.5084", "354.338, 122.481, 36.6909, 0.5592", "354.669, 121.389, 36.8491, 0.5592", "355.049, 120.327, 37.0292, 0.5084", "355.073, 119.262, 37.725, 0.4322", "354.841, 118.19, 37.389, 0.4068", "354.947, 117.099, 36.9278, 0.483", "354.598, 116.086, 36.3703, 0.5338", "354.751, 115.133, 35.1106, 0.5848", "354.629, 114.008, 35.5289, 0.6102", "354.411, 112.904, 35.9856, 0.6356", "353.961, 111.874, 36.4328, 0.6356", "353.469, 110.871, 36.2706, 0.5592", "353.346, 109.865, 35.2097, 0.5338", "353.094, 109.055, 33.7918, 0.483", "352.614, 108.079, 33.3673, 0.483", "352.229, 107.045, 33.0002, 0.4576", "351.848, 105.993, 33.5163, 0.5084", "351.202, 105.067, 33.5978, 0.5592", "350.824, 104.011, 33.1461, 0.6102", "350.292, 103.071, 33.9786, 0.5592", "350.297, 101.972, 34.6251, 0.5084", "350.473, 100.993, 33.3253, 0.483", "350.763, 99.8879, 33.3404, 0.5338", "350.948, 98.7612, 33.2797, 0.5592", "351.112, 97.6325, 33.3978, 0.5084", "351.366, 96.5195, 33.3108, 0.4576", "351.847, 95.5642, 32.716, 0.483", "352.452, 94.642, 32.2322, 0.5848", "352.912, 93.6178, 32.6626, 0.5848", "353.58, 92.698, 32.7334, 0.5338", "354.289, 91.9374, 31.64, 0.4576", "355.033, 91.0798, 31.7957, 0.5084", "355.582, 90.1533, 32.4783, 0.5084", "355.917, 89.1049, 32.0897, 0.5084", "356.314, 88.1225, 32.9076, 0.4322", "356.744, 87.2243, 31.7316, 0.4322", "357.099, 86.183, 31.0293, 0.4068", "357.693, 85.3263, 31.2012, 0.4068", "358.271, 84.4923, 31.134, 0.356", "358.18, 83.4478, 30.8269, 0.3814", "358.142, 82.4487, 32.0068, 0.3814", "357.715, 81.4255, 32.1426, 0.4576", "357.354, 80.386, 31.9942, 0.483", "357.067, 79.4704, 33.0044, 0.5592", "356.647, 78.6044, 33.3774, 0.5592", "356.407, 77.5105, 32.9605, 0.5848", "356.056, 76.4391, 33.2262, 0.6356", "355.768, 75.3731, 32.7737, 0.7372", "355.586, 74.2715, 32.2008, 0.7626", "355.487, 73.1804, 32.454, 0.7372", "355.638, 72.2509, 33.6442, 0.6864", "355.46, 71.1815, 34.104, 0.7118", "355.284, 70.1476, 35.1266, 0.7118", "355.179, 69.1808, 34.356, 0.661", "355.791, 68.3362, 34.5772, 0.5848", "356.23, 67.3838, 33.5381, 0.5084", "356.355, 66.3415, 34.0071, 0.483", "355.955, 65.3296, 34.6634, 0.4322", "355.093, 65.1908, 33.6571, 0.3814", "354.727, 64.7558, 35.7787, 0.3304", "354.172, 64.2206, 36.874, 0.2796", "353.953, 63.3067, 37.655, 0.305", "353.613, 62.3128, 36.9088, 0.3304", "353.27, 61.4408, 35.3069, 0.3814", "352.666, 60.5956, 35.3979, 0.356", "352.118, 59.9323, 36.6663, 0.356", "351.976, 59.0744, 35.7949, 0.4068", "352.135, 58.1342, 34.4534, 0.483", "352.175, 57.1267, 33.9161, 0.5338", "352.193, 56.0471, 34.769, 0.5084", "352.357, 54.9367, 34.8219, 0.483", "352.605, 53.8587, 34.1281, 0.4322", "352.945, 52.8192, 33.4107, 0.4322", "353.27, 51.7893, 33.9108, 0.4068", "353.605, 50.8924, 34.5114, 0.4068", "353.745, 49.842, 33.7114, 0.3304", "353.97, 48.8259, 34.3742, 0.305", "354.163, 47.7453, 34.9552, 0.305", "354.362, 46.6203, 34.967, 0.4068", "354.982, 45.8744, 33.6, 0.4576" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "353.797, 127.729, 36.3118, 0.6356", "353.21, 127.205, 36.2692, 0.5084", "352.194, 126.749, 35.7272, 0.483", "351.253, 126.126, 35.3315, 0.5338", "350.328, 125.456, 35.1691, 0.5338", "349.261, 125.164, 34.5486, 0.5338", "348.256, 125.02, 33.2727, 0.4576", "347.382, 124.438, 32.2078, 0.3814", "346.729, 123.563, 31.3869, 0.3814", "346.225, 122.573, 30.7373, 0.4068", "345.519, 121.723, 30.0311, 0.4576", "344.819, 120.828, 29.6909, 0.4322", "344.152, 119.9, 29.5739, 0.3814", "343.516, 118.968, 29.1332, 0.356", "343.057, 117.943, 28.6124, 0.3814", "342.52, 116.934, 28.5614, 0.4576", "342.094, 115.872, 28.56, 0.483", "341.596, 114.843, 28.56, 0.483", "341.088, 113.818, 28.5603, 0.483", "340.543, 112.812, 28.5611, 0.5338", "339.88, 111.88, 28.5648, 0.5848", "339.208, 110.954, 28.5838, 0.6102", "338.363, 110.185, 28.6793, 0.6102", "337.482, 109.569, 29.6195, 0.6102", "337.049, 108.583, 28.7484, 0.6356", "336.497, 107.585, 28.5701, 0.7118", "335.8, 106.679, 28.5594, 0.788", "335.191, 105.71, 28.5578, 0.839", "334.649, 104.703, 28.5482, 0.788", "334.06, 103.723, 28.4925, 0.7118", "333.314, 102.87, 28.0977, 0.6356", "332.321, 102.363, 27.4901, 0.5848", "331.32, 101.81, 27.433, 0.5848", "330.27, 101.356, 27.3902, 0.5592", "329.345, 100.688, 27.186, 0.6102", "328.636, 99.8673, 26.3021, 0.661", "327.641, 99.528, 25.2, 0.7626" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_37", "dend_32", "dend_23", "dend_18", "dend_9", "dend_0", "dend_54", "dend_49", "dend_45", "dend_38", "dend_36", "dend_33", "dend_31", "dend_24", "dend_20", "dend_19", "dend_17", "dend_10", "dend_8", "dend_1", "dend_56", "dend_55", "dend_53", "dend_50", "dend_47", "dend_46", "dend_44", "dend_39", "dend_35", "dend_34", "dend_28", "dend_25", "dend_22", "dend_21", "dend_16", "dend_11", "dend_3", "dend_2", "dend_52", "dend_51", "dend_43", "dend_40", "dend_30", "dend_29", "dend_27", "dend_26", "dend_13", "dend_12", "dend_7", "dend_4", "dend_42", "dend_41", "dend_15", "dend_14", "dend_6", "dend_5" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20081",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.15"
  }, {
    "group" : "axon",
    "value" : "1.15"
  }, {
    "group" : "dend",
    "value" : "1.15"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "192.6"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.0307912E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.050352365",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.008597068",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.80320024",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.018533524",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.007453334",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.016618334",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "6.419922E-5",
    "erev" : "-88.53063"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.534816E-4",
    "erev" : "-88.53063"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "5.3397116E-6",
    "erev" : "-88.53063"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.1144784E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.009762187",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_471085845

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_23
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_38
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_48, dend_37, dend_32, dend_23, dend_18, dend_9, dend_0, dend_54, dend_49, dend_45, dend_38, dend_36, dend_33, dend_31, dend_24, dend_20, dend_19, dend_17, dend_10, dend_8, dend_1, dend_56, dend_55, dend_53, dend_50, dend_47, dend_46, dend_44, dend_39, dend_35, dend_34, dend_28, dend_25, dend_22, dend_21, dend_16, dend_11, dend_3, dend_2, dend_52, dend_51, dend_43, dend_40, dend_30, dend_29, dend_27, dend_26, dend_13, dend_12, dend_7, dend_4, dend_42, dend_41, dend_15, dend_14, dend_6, dend_5]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_20081, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_20081
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000389074780164)
    connect dend_48(0), soma_0(0.5000389074780164)
    connect dend_37(0), soma_0(0.5000389074780164)
    connect dend_32(0), soma_0(0.5000389074780164)
    connect dend_23(0), soma_0(0.5000389074780164)
    connect dend_18(0), soma_0(0.5000389074780164)
    connect dend_9(0), soma_0(0.5000389074780164)
    connect dend_0(0), soma_0(0.5000389074780164)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 389.617, 368.97, 26.6608, 12.8508 ) }
    soma_0 { pt3dadd( 396.043, 368.97, 26.6608, 12.8508 ) }
    soma_0 { pt3dadd( 402.468, 368.97, 26.6608, 12.8508 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 396.042, 368.97, 26.6608, 1.0 ) }
    axon_0 { pt3dadd( 401.884, 382.786, 26.6608, 1.0 ) }
    axon_0 { pt3dadd( 407.725, 396.602, 26.6608, 1.0 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 6/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 395.93, 365.864, 40.6526, 0.3814 ) }
    dend_48 { pt3dadd( 396.727, 365.75, 42.5312, 0.483 ) }
    dend_48 { pt3dadd( 397.604, 365.115, 43.0802, 0.5084 ) }
    dend_48 { pt3dadd( 397.558, 364.017, 43.1522, 0.6356 ) }
    dend_48 { pt3dadd( 396.753, 363.221, 43.293, 0.8136 ) }
    dend_48 { pt3dadd( 395.735, 362.755, 43.8497, 1.0168 ) }
    dend_48 { pt3dadd( 394.822, 362.075, 43.6327, 1.1186 ) }
    dend_48 { pt3dadd( 394.298, 361.092, 44.2534, 1.144 ) }
    dend_48 { pt3dadd( 394.013, 360.017, 44.8969, 1.0424 ) }
    dend_48 { pt3dadd( 394.568, 359.049, 45.5045, 0.839 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 16/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 393.927, 372.089, 39.5209, 0.4322 ) }
    dend_37 { pt3dadd( 393.533, 373.143, 39.6735, 0.6102 ) }
    dend_37 { pt3dadd( 392.738, 373.946, 39.3277, 0.839 ) }
    dend_37 { pt3dadd( 391.759, 374.507, 38.8797, 0.966 ) }
    dend_37 { pt3dadd( 390.758, 375.026, 39.3165, 1.0168 ) }
    dend_37 { pt3dadd( 389.846, 375.642, 40.0725, 0.9152 ) }
    dend_37 { pt3dadd( 389.253, 376.566, 40.8386, 0.8898 ) }
    dend_37 { pt3dadd( 388.852, 377.614, 41.3815, 0.839 ) }
    dend_37 { pt3dadd( 388.898, 378.752, 41.1844, 0.9406 ) }
    dend_37 { pt3dadd( 389.158, 379.854, 40.7842, 0.966 ) }
    dend_37 { pt3dadd( 389.174, 380.969, 40.1598, 1.0424 ) }
    dend_37 { pt3dadd( 389.101, 382.103, 39.8412, 1.0168 ) }
    dend_37 { pt3dadd( 388.794, 383.198, 40.1551, 1.0168 ) }
    dend_37 { pt3dadd( 388.737, 384.198, 41.5016, 0.9406 ) }
    dend_37 { pt3dadd( 388.77, 385.323, 41.9958, 0.839 ) }
    dend_37 { pt3dadd( 389.005, 386.443, 42.002, 0.7118 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 393.733, 374.698, 23.3951, 0.839 ) }
    dend_32 { pt3dadd( 392.781, 375.313, 23.0339, 0.9152 ) }
    dend_32 { pt3dadd( 392.016, 376.159, 23.0093, 0.788 ) }
    dend_32 { pt3dadd( 391.193, 376.95, 23.165, 0.6864 ) }
    dend_32 { pt3dadd( 390.189, 377.469, 23.5502, 0.5848 ) }
    dend_32 { pt3dadd( 389.053, 377.515, 23.5105, 0.6356 ) }
    dend_32 { pt3dadd( 387.979, 377.896, 23.3506, 0.6102 ) }
    dend_32 { pt3dadd( 387.245, 378.76, 23.0182, 0.6864 ) }
    dend_32 { pt3dadd( 386.813, 379.818, 23.0888, 0.7118 ) }
    dend_32 { pt3dadd( 386.328, 380.822, 23.7219, 0.7372 ) }
    dend_32 { pt3dadd( 385.584, 381.627, 24.5196, 0.7118 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 43/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 396.941, 375.44, 27.9958, 0.6102 ) }
    dend_23 { pt3dadd( 396.79, 376.566, 27.7021, 0.788 ) }
    dend_23 { pt3dadd( 396.709, 377.703, 27.4543, 0.9152 ) }
    dend_23 { pt3dadd( 397.286, 378.687, 27.44, 0.966 ) }
    dend_23 { pt3dadd( 397.819, 379.699, 27.44, 1.0168 ) }
    dend_23 { pt3dadd( 398.28, 380.746, 27.44, 1.0424 ) }
    dend_23 { pt3dadd( 398.646, 381.831, 27.4403, 1.0932 ) }
    dend_23 { pt3dadd( 398.975, 382.925, 27.4425, 1.1186 ) }
    dend_23 { pt3dadd( 399.269, 384.032, 27.4546, 1.1694 ) }
    dend_23 { pt3dadd( 399.478, 385.156, 27.538, 1.1694 ) }
    dend_23 { pt3dadd( 400.01, 386.151, 27.9829, 1.1186 ) }
    dend_23 { pt3dadd( 400.16, 387.187, 29.1186, 0.9914 ) }
    dend_23 { pt3dadd( 400.107, 388.274, 29.9796, 0.8644 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 56/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 394.534, 375.154, 26.2766, 0.5338 ) }
    dend_18 { pt3dadd( 395.157, 376.109, 26.117, 0.7118 ) }
    dend_18 { pt3dadd( 395.438, 377.177, 25.4005, 0.8898 ) }
    dend_18 { pt3dadd( 395.005, 378.23, 25.2132, 1.0424 ) }
    dend_18 { pt3dadd( 394.425, 379.217, 25.2384, 1.0932 ) }
    dend_18 { pt3dadd( 393.656, 380.062, 25.3733, 1.0932 ) }
    dend_18 { pt3dadd( 392.742, 380.703, 25.9823, 1.0678 ) }
    dend_18 { pt3dadd( 391.808, 381.349, 26.315, 1.0932 ) }
    dend_18 { pt3dadd( 390.841, 381.961, 26.32, 1.0932 ) }
    dend_18 { pt3dadd( 389.82, 382.478, 26.32, 1.1186 ) }
    dend_18 { pt3dadd( 388.881, 383.131, 26.32, 1.1186 ) }
    dend_18 { pt3dadd( 388.111, 383.977, 26.3197, 1.144 ) }
    dend_18 { pt3dadd( 387.123, 385.88, 26.3136, 0.966 ) }
    dend_18 { pt3dadd( 386.987, 387.014, 26.2724, 0.8898 ) }
    dend_18 { pt3dadd( 387.363, 388.087, 26.0316, 0.8898 ) }
    dend_18 { pt3dadd( 388.193, 388.788, 25.1754, 0.8898 ) }
    dend_18 { pt3dadd( 388.826, 389.675, 24.3183, 0.839 ) }
    dend_18 { pt3dadd( 389.283, 390.643, 23.329, 0.839 ) }
    dend_18 { pt3dadd( 389.564, 391.742, 22.9771, 0.9406 ) }
    dend_18 { pt3dadd( 389.282, 392.85, 23.0213, 0.9914 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 76/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 402.716, 367.551, 27.4414, 0.8644 ) }
    dend_9 { pt3dadd( 403.713, 366.993, 27.4397, 1.0168 ) }
    dend_9 { pt3dadd( 404.837, 366.778, 27.4389, 1.0678 ) }
    dend_9 { pt3dadd( 405.979, 366.743, 27.4336, 1.0932 ) }
    dend_9 { pt3dadd( 407.114, 366.6, 27.3938, 1.0932 ) }
    dend_9 { pt3dadd( 408.222, 366.329, 27.1645, 1.1186 ) }
    dend_9 { pt3dadd( 409.291, 366.245, 26.1937, 1.0678 ) }
    dend_9 { pt3dadd( 410.338, 365.956, 25.3207, 1.0168 ) }
    dend_9 { pt3dadd( 411.432, 365.624, 25.2031, 0.9152 ) }
    dend_9 { pt3dadd( 412.551, 365.387, 25.2003, 0.8898 ) }
    dend_9 { pt3dadd( 413.691, 365.295, 25.2011, 0.9406 ) }
    dend_9 { pt3dadd( 414.779, 364.939, 25.2062, 0.9914 ) }
    dend_9 { pt3dadd( 415.869, 364.595, 25.2398, 1.0932 ) }
    dend_9 { pt3dadd( 416.992, 364.388, 25.4416, 1.0932 ) }
    dend_9 { pt3dadd( 418.011, 363.97, 26.1957, 1.1186 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 91/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 396.002, 362.347, 32.8608, 0.5848 ) }
    dend_0 { pt3dadd( 396.093, 361.221, 32.4254, 0.8136 ) }
    dend_0 { pt3dadd( 396.306, 360.102, 32.223, 0.9406 ) }
    dend_0 { pt3dadd( 396.254, 358.961, 32.3907, 1.0168 ) }
    dend_0 { pt3dadd( 396.067, 357.841, 32.0746, 1.0678 ) }
    dend_0 { pt3dadd( 396.052, 356.698, 31.92, 1.0932 ) }
    dend_0 { pt3dadd( 396.052, 355.554, 31.9203, 1.0932 ) }
    dend_0 { pt3dadd( 396.053, 354.41, 31.922, 1.0168 ) }
    dend_0 { pt3dadd( 396.055, 353.266, 31.9348, 0.8898 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 396.077, 352.123, 32.0174, 0.661 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 1/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 407.725, 396.602, 26.6608, 1.0 ) }
    axon_1 { pt3dadd( 413.566, 410.418, 26.6608, 1.0 ) }
    axon_1 { pt3dadd( 419.408, 424.234, 26.6608, 1.0 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 394.568, 359.049, 45.5045, 0.839 ) }
    dend_54 { pt3dadd( 394.581, 358.099, 47.0683, 0.5848 ) }
    dend_54 { pt3dadd( 394.02, 357.293, 48.3902, 0.6356 ) }
    dend_54 { pt3dadd( 393.298, 356.426, 48.7007, 0.6356 ) }
    dend_54 { pt3dadd( 393.236, 355.305, 48.7021, 0.7118 ) }
    dend_54 { pt3dadd( 393.598, 354.222, 48.6128, 0.788 ) }
    dend_54 { pt3dadd( 394.089, 353.21, 48.1071, 0.9152 ) }
    dend_54 { pt3dadd( 394.219, 352.091, 47.6622, 1.0168 ) }
    dend_54 { pt3dadd( 394.267, 350.948, 47.6258, 1.0424 ) }
    dend_54 { pt3dadd( 394.5, 349.831, 47.7621, 1.0168 ) }
    dend_54 { pt3dadd( 394.568, 348.722, 48.4324, 1.0168 ) }
    dend_54 { pt3dadd( 394.234, 347.635, 48.7007, 1.0168 ) }
    dend_54 { pt3dadd( 393.844, 346.561, 48.7276, 0.9914 ) }
    dend_54 { pt3dadd( 393.426, 345.495, 48.7651, 0.8898 ) }
    dend_54 { pt3dadd( 393.296, 344.365, 49.019, 0.839 ) }
    dend_54 { pt3dadd( 393.2, 343.253, 49.6362, 0.8136 ) }
    dend_54 { pt3dadd( 392.798, 342.196, 49.2307, 0.8136 ) }
    dend_54 { pt3dadd( 392.256, 341.208, 48.743, 0.788 ) }
    dend_54 { pt3dadd( 391.511, 340.34, 48.7208, 0.7626 ) }
    dend_54 { pt3dadd( 390.57, 339.69, 48.7239, 0.839 ) }
    dend_54 { pt3dadd( 389.54, 339.193, 48.7427, 0.9406 ) }
    dend_54 { pt3dadd( 388.449, 338.852, 48.8648, 1.0932 ) }
    dend_54 { pt3dadd( 387.357, 338.722, 49.6404, 1.144 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 394.568, 359.049, 45.5045, 0.839 ) }
    dend_49 { pt3dadd( 395.537, 358.116, 46.2711, 0.7626 ) }
    dend_49 { pt3dadd( 396.452, 357.454, 46.7141, 0.7372 ) }
    dend_49 { pt3dadd( 397.534, 357.099, 46.7922, 0.7118 ) }
    dend_49 { pt3dadd( 398.541, 356.741, 45.8251, 0.7626 ) }
    dend_49 { pt3dadd( 399.483, 356.298, 44.665, 0.8136 ) }
    dend_49 { pt3dadd( 400.32, 355.531, 44.499, 0.9152 ) }
    dend_49 { pt3dadd( 400.968, 354.627, 45.1413, 0.9406 ) }
    dend_49 { pt3dadd( 401.699, 353.764, 45.5526, 0.9152 ) }
    dend_49 { pt3dadd( 402.448, 352.953, 46.2773, 0.8644 ) }
    dend_49 { pt3dadd( 403.305, 352.2, 46.4946, 0.839 ) }
    dend_49 { pt3dadd( 404.148, 351.429, 46.6116, 0.839 ) }
    dend_49 { pt3dadd( 405.03, 350.755, 47.2928, 0.8898 ) }
    dend_49 { pt3dadd( 405.936, 350.069, 47.5832, 0.9152 ) }
    dend_49 { pt3dadd( 406.897, 349.447, 47.6288, 0.9406 ) }
    dend_49 { pt3dadd( 407.978, 349.082, 47.7859, 0.8898 ) }
    dend_49 { pt3dadd( 409.063, 348.921, 48.5873, 0.839 ) }
    dend_49 { pt3dadd( 410.123, 348.878, 49.6255, 0.788 ) }
    dend_49 { pt3dadd( 411.109, 348.674, 50.9533, 0.788 ) }
    dend_49 { pt3dadd( 411.869, 347.886, 51.7544, 0.8898 ) }
    dend_49 { pt3dadd( 412.623, 347.037, 52.0906, 1.0168 ) }
    dend_49 { pt3dadd( 413.494, 346.297, 52.1517, 1.1186 ) }
    dend_49 { pt3dadd( 414.499, 345.767, 52.4958, 1.144 ) }
    dend_49 { pt3dadd( 415.524, 345.33, 53.1348, 1.0424 ) }
    dend_49 { pt3dadd( 416.638, 345.072, 53.1432, 0.839 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 52/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 389.005, 386.443, 42.002, 0.7118 ) }
    dend_45 { pt3dadd( 389.859, 386.838, 42.8369, 0.483 ) }
    dend_45 { pt3dadd( 390.808, 387.25, 44.0247, 0.5848 ) }
    dend_45 { pt3dadd( 391.711, 387.752, 45.1727, 0.6864 ) }
    dend_45 { pt3dadd( 392.566, 388.431, 45.9721, 0.7372 ) }
    dend_45 { pt3dadd( 393.437, 389.145, 46.4064, 0.7372 ) }
    dend_45 { pt3dadd( 394.387, 389.775, 46.5828, 0.661 ) }
    dend_45 { pt3dadd( 395.284, 390.446, 46.975, 0.5592 ) }
    dend_45 { pt3dadd( 396.042, 391.166, 48.036, 0.483 ) }
    dend_45 { pt3dadd( 396.86, 391.759, 49.3069, 0.483 ) }
    dend_45 { pt3dadd( 397.643, 392.511, 49.8411, 0.5338 ) }
    dend_45 { pt3dadd( 398.24, 393.478, 50.0542, 0.5848 ) }
    dend_45 { pt3dadd( 398.879, 394.388, 50.6142, 0.6356 ) }
    dend_45 { pt3dadd( 399.694, 395.088, 51.4979, 0.661 ) }
    dend_45 { pt3dadd( 400.69, 395.482, 52.3886, 0.6356 ) }
    dend_45 { pt3dadd( 401.748, 395.644, 53.3495, 0.5848 ) }
    dend_45 { pt3dadd( 402.804, 395.925, 54.1072, 0.483 ) }
    dend_45 { pt3dadd( 403.727, 396.558, 54.3152, 0.4322 ) }
    dend_45 { pt3dadd( 404.511, 397.388, 54.3449, 0.3814 ) }
    dend_45 { pt3dadd( 405.406, 398.087, 54.4695, 0.3814 ) }
    dend_45 { pt3dadd( 406.443, 398.516, 54.8985, 0.4322 ) }
    dend_45 { pt3dadd( 407.487, 398.938, 55.37, 0.4576 ) }
    dend_45 { pt3dadd( 408.485, 399.463, 55.8295, 0.5338 ) }
    dend_45 { pt3dadd( 409.495, 399.947, 56.387, 0.5084 ) }
    dend_45 { pt3dadd( 410.558, 400.275, 57.0147, 0.5084 ) }
    dend_45 { pt3dadd( 411.532, 400.746, 57.881, 0.4576 ) }
    dend_45 { pt3dadd( 412.26, 401.47, 59.0593, 0.483 ) }
    dend_45 { pt3dadd( 413.112, 402.149, 59.8573, 0.483 ) }
    dend_45 { pt3dadd( 414.196, 402.405, 60.347, 0.483 ) }
    dend_45 { pt3dadd( 415.296, 402.445, 61.0935, 0.4576 ) }
    dend_45 { pt3dadd( 416.274, 402.854, 62.0942, 0.5084 ) }
    dend_45 { pt3dadd( 417.207, 403.266, 63.3654, 0.5338 ) }
    dend_45 { pt3dadd( 418.285, 403.382, 64.2314, 0.5848 ) }
    dend_45 { pt3dadd( 419.419, 403.456, 64.5361, 0.5338 ) }
    dend_45 { pt3dadd( 420.486, 403.737, 65.2655, 0.483 ) }
    dend_45 { pt3dadd( 421.352, 404.368, 66.236, 0.3814 ) }
    dend_45 { pt3dadd( 422.148, 405.09, 67.2, 0.3304 ) }
    dend_45 { pt3dadd( 422.572, 405.496, 66.675, 0.305 ) }
    dend_45 { pt3dadd( 423.186, 406.241, 67.7732, 0.2796 ) }
    dend_45 { pt3dadd( 424.14, 406.701, 67.9703, 0.2542 ) }
    dend_45 { pt3dadd( 425.162, 407.083, 68.5124, 0.2288 ) }
    dend_45 { pt3dadd( 426.169, 407.298, 69.7208, 0.2288 ) }
    dend_45 { pt3dadd( 426.91, 408.001, 70.8915, 0.2288 ) }
    dend_45 { pt3dadd( 427.054, 408.98, 72.24, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 96/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 389.005, 386.443, 42.002, 0.7118 ) }
    dend_38 { pt3dadd( 388.865, 387.941, 42.0311, 0.7372 ) }
    dend_38 { pt3dadd( 388.323, 388.943, 42.1641, 0.7626 ) }
    dend_38 { pt3dadd( 387.805, 389.901, 43.0108, 0.8136 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_38 { pt3dadd( 387.149, 390.734, 44.058, 0.788 ) }
    dend_38 { pt3dadd( 386.33, 391.526, 44.2425, 0.788 ) }
    dend_38 { pt3dadd( 385.425, 392.226, 44.294, 0.7118 ) }
    dend_38 { pt3dadd( 384.713, 393.115, 44.5197, 0.6356 ) }
    dend_38 { pt3dadd( 384.357, 394.11, 45.5798, 0.5592 ) }
    dend_38 { pt3dadd( 384.309, 395.194, 46.4716, 0.5592 ) }
    dend_38 { pt3dadd( 383.654, 396.129, 46.5564, 0.6356 ) }
    dend_38 { pt3dadd( 382.915, 396.997, 46.7877, 0.7372 ) }
    dend_38 { pt3dadd( 382.389, 397.971, 47.4989, 0.8136 ) }
    dend_38 { pt3dadd( 381.914, 399.01, 47.6207, 0.7626 ) }
    dend_38 { pt3dadd( 381.478, 400.067, 47.7249, 0.6102 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 11/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 385.584, 381.627, 24.5196, 0.7118 ) }
    dend_36 { pt3dadd( 385.092, 382.317, 23.9996, 0.6102 ) }
    dend_36 { pt3dadd( 384.366, 383.159, 23.3461, 0.5848 ) }
    dend_36 { pt3dadd( 383.562, 383.955, 22.9645, 0.5338 ) }
    dend_36 { pt3dadd( 382.642, 384.613, 22.7884, 0.483 ) }
    dend_36 { pt3dadd( 381.644, 384.819, 21.7899, 0.3814 ) }
    dend_36 { pt3dadd( 381.049, 384.286, 20.0458, 0.3304 ) }
    dend_36 { pt3dadd( 380.782, 383.234, 19.6764, 0.305 ) }
    dend_36 { pt3dadd( 380.54, 382.173, 20.522, 0.2796 ) }
    dend_36 { pt3dadd( 380.382, 381.093, 21.1918, 0.305 ) }
    dend_36 { pt3dadd( 380.193, 379.982, 21.0608, 0.3814 ) }
    dend_36 { pt3dadd( 379.643, 379.014, 20.7273, 0.483 ) }
    dend_36 { pt3dadd( 378.822, 378.238, 20.3843, 0.483 ) }
    dend_36 { pt3dadd( 377.878, 377.639, 19.8702, 0.3814 ) }
    dend_36 { pt3dadd( 376.823, 377.279, 19.3584, 0.2796 ) }
    dend_36 { pt3dadd( 375.748, 376.966, 18.8619, 0.2288 ) }
    dend_36 { pt3dadd( 375.14, 376.22, 18.9395, 0.2288 ) }
    dend_36 { pt3dadd( 375.169, 375.108, 19.5182, 0.2796 ) }
    dend_36 { pt3dadd( 374.78, 374.195, 20.0511, 0.4068 ) }
    dend_36 { pt3dadd( 374.311, 373.239, 20.221, 0.5848 ) }
    dend_36 { pt3dadd( 374.586, 372.198, 20.125, 0.661 ) }
    dend_36 { pt3dadd( 375.395, 371.552, 19.3662, 0.5848 ) }
    dend_36 { pt3dadd( 376.378, 371.165, 18.3106, 0.4068 ) }
    dend_36 { pt3dadd( 377.335, 370.667, 18.5559, 0.2796 ) }
    dend_36 { pt3dadd( 377.829, 369.798, 19.6605, 0.2288 ) }
    dend_36 { pt3dadd( 377.93, 368.723, 19.1862, 0.2796 ) }
    dend_36 { pt3dadd( 378.05, 367.611, 18.6088, 0.356 ) }
    dend_36 { pt3dadd( 378.295, 366.498, 18.6066, 0.4576 ) }
    dend_36 { pt3dadd( 378.444, 365.389, 19.1548, 0.483 ) }
    dend_36 { pt3dadd( 378.408, 364.255, 19.0064, 0.4576 ) }
    dend_36 { pt3dadd( 378.32, 363.334, 17.36, 0.3814 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 42/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 385.584, 381.627, 24.5196, 0.7118 ) }
    dend_33 { pt3dadd( 384.897, 381.619, 25.7536, 0.7372 ) }
    dend_33 { pt3dadd( 383.884, 381.491, 26.9506, 0.8644 ) }
    dend_33 { pt3dadd( 382.77, 381.415, 27.438, 0.966 ) }
    dend_33 { pt3dadd( 381.637, 381.392, 27.8023, 0.9152 ) }
    dend_33 { pt3dadd( 380.511, 381.286, 28.1884, 0.7372 ) }
    dend_33 { pt3dadd( 379.395, 381.069, 28.1599, 0.5592 ) }
    dend_33 { pt3dadd( 378.292, 380.781, 28.2024, 0.5084 ) }
    dend_33 { pt3dadd( 377.201, 380.453, 28.4474, 0.6356 ) }
    dend_33 { pt3dadd( 376.104, 380.139, 28.553, 0.7372 ) }
    dend_33 { pt3dadd( 375.014, 379.793, 28.5653, 0.7118 ) }
    dend_33 { pt3dadd( 373.989, 379.297, 28.5872, 0.5848 ) }
    dend_33 { pt3dadd( 373.013, 378.701, 28.6916, 0.5084 ) }
    dend_33 { pt3dadd( 371.971, 378.317, 29.1533, 0.5338 ) }
    dend_33 { pt3dadd( 370.856, 378.216, 29.664, 0.6102 ) }
    dend_33 { pt3dadd( 369.737, 378.205, 30.2406, 0.661 ) }
    dend_33 { pt3dadd( 368.608, 378.202, 30.662, 0.7118 ) }
    dend_33 { pt3dadd( 367.467, 378.176, 30.7885, 0.7118 ) }
    dend_33 { pt3dadd( 366.336, 378.018, 30.8014, 0.7118 ) }
    dend_33 { pt3dadd( 365.206, 377.846, 30.8084, 0.6356 ) }
    dend_33 { pt3dadd( 364.067, 377.846, 30.8549, 0.6102 ) }
    dend_33 { pt3dadd( 362.935, 377.994, 31.0078, 0.5848 ) }
    dend_33 { pt3dadd( 361.807, 377.922, 30.9322, 0.661 ) }
    dend_33 { pt3dadd( 360.67, 377.807, 30.8218, 0.6864 ) }
    dend_33 { pt3dadd( 359.532, 377.864, 30.8, 0.6864 ) }
    dend_33 { pt3dadd( 358.462, 378.237, 30.8006, 0.6356 ) }
    dend_33 { pt3dadd( 357.365, 378.551, 30.8031, 0.5848 ) }
    dend_33 { pt3dadd( 356.228, 378.607, 30.8224, 0.5848 ) }
    dend_33 { pt3dadd( 355.11, 378.397, 30.9394, 0.5848 ) }
    dend_33 { pt3dadd( 354.035, 378.078, 31.4516, 0.6102 ) }
    dend_33 { pt3dadd( 352.94, 377.791, 31.8195, 0.6102 ) }
    dend_33 { pt3dadd( 351.834, 377.505, 31.9122, 0.5592 ) }
    dend_33 { pt3dadd( 350.704, 377.338, 31.9206, 0.5084 ) }
    dend_33 { pt3dadd( 349.562, 377.295, 31.9234, 0.4576 ) }
    dend_33 { pt3dadd( 348.418, 377.284, 31.943, 0.4576 ) }
    dend_33 { pt3dadd( 347.276, 377.237, 32.0849, 0.483 ) }
    dend_33 { pt3dadd( 346.243, 376.858, 32.6704, 0.483 ) }
    dend_33 { pt3dadd( 345.242, 376.318, 32.8185, 0.483 ) }
    dend_33 { pt3dadd( 344.183, 375.979, 32.2784, 0.4068 ) }
    dend_33 { pt3dadd( 343.061, 376.057, 32.0432, 0.356 ) }
    dend_33 { pt3dadd( 342.048, 376.547, 32.3364, 0.356 ) }
    dend_33 { pt3dadd( 340.951, 376.691, 32.9022, 0.4322 ) }
    dend_33 { pt3dadd( 339.879, 376.343, 33.0322, 0.483 ) }
    dend_33 { pt3dadd( 338.795, 375.978, 33.04, 0.4576 ) }
    dend_33 { pt3dadd( 337.694, 375.987, 33.6798, 0.4322 ) }
    dend_33 { pt3dadd( 336.575, 376.19, 33.6538, 0.4576 ) }
    dend_33 { pt3dadd( 335.453, 376.056, 33.3438, 0.5084 ) }
    dend_33 { pt3dadd( 334.34, 376.15, 33.8604, 0.5084 ) }
    dend_33 { pt3dadd( 333.221, 376.327, 34.2418, 0.5084 ) }
    dend_33 { pt3dadd( 332.097, 376.322, 34.7497, 0.5338 ) }
    dend_33 { pt3dadd( 330.998, 376.044, 34.4375, 0.6102 ) }
    dend_33 { pt3dadd( 329.987, 375.525, 34.7337, 0.6356 ) }
    dend_33 { pt3dadd( 328.999, 375.065, 35.574, 0.5848 ) }
    dend_33 { pt3dadd( 327.917, 374.829, 36.2821, 0.483 ) }
    dend_33 { pt3dadd( 326.776, 374.776, 36.3958, 0.3814 ) }
    dend_33 { pt3dadd( 325.65, 374.573, 36.4, 0.356 ) }
    dend_33 { pt3dadd( 324.592, 374.138, 36.4, 0.356 ) }
    dend_33 { pt3dadd( 323.499, 373.8, 36.4, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_33 { pt3dadd( 322.361, 373.686, 36.4003, 0.4322 ) }
    dend_33 { pt3dadd( 321.249, 373.952, 36.4008, 0.4322 ) }
    dend_33 { pt3dadd( 320.16, 374.302, 36.4056, 0.4322 ) }
    dend_33 { pt3dadd( 319.109, 374.754, 36.4316, 0.483 ) }
    dend_33 { pt3dadd( 317.986, 374.967, 36.6058, 0.5592 ) }
    dend_33 { pt3dadd( 316.921, 374.796, 37.5357, 0.5592 ) }
    // Section: dend_31, id: dend_31, parent: dend_23 (entry count 6/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 400.107, 388.274, 29.9796, 0.8644 ) }
    dend_31 { pt3dadd( 400.487, 389.427, 28.0372, 0.7626 ) }
    dend_31 { pt3dadd( 400.622, 390.526, 27.3655, 0.8136 ) }
    dend_31 { pt3dadd( 400.675, 391.63, 26.6445, 0.8644 ) }
    dend_31 { pt3dadd( 400.93, 392.737, 26.355, 0.8644 ) }
    dend_31 { pt3dadd( 401.288, 393.823, 26.3208, 0.9152 ) }
    dend_31 { pt3dadd( 401.78, 394.856, 26.32, 0.9152 ) }
    dend_31 { pt3dadd( 402.354, 395.846, 26.32, 0.9406 ) }
    dend_31 { pt3dadd( 403.063, 396.743, 26.32, 0.839 ) }
    dend_31 { pt3dadd( 403.706, 397.689, 26.32, 0.7372 ) }
    dend_31 { pt3dadd( 404.388, 398.607, 26.3197, 0.6102 ) }
    dend_31 { pt3dadd( 404.719, 399.7, 26.3186, 0.5848 ) }
    dend_31 { pt3dadd( 404.801, 400.84, 26.3094, 0.5338 ) }
    dend_31 { pt3dadd( 405.093, 401.947, 26.2517, 0.5084 ) }
    dend_31 { pt3dadd( 405.534, 402.991, 25.8978, 0.4576 ) }
    dend_31 { pt3dadd( 405.88, 404.049, 25.2529, 0.5084 ) }
    dend_31 { pt3dadd( 406.16, 405.15, 24.9082, 0.5592 ) }
    dend_31 { pt3dadd( 406.462, 406.216, 24.2152, 0.5848 ) }
    dend_31 { pt3dadd( 406.733, 407.326, 24.0853, 0.5084 ) }
    dend_31 { pt3dadd( 407.328, 408.303, 24.0744, 0.4576 ) }
    dend_31 { pt3dadd( 407.929, 409.276, 24.0506, 0.4576 ) }
    dend_31 { pt3dadd( 408.308, 410.354, 23.8949, 0.5592 ) }
    dend_31 { pt3dadd( 408.645, 411.408, 23.1885, 0.6356 ) }
    dend_31 { pt3dadd( 408.971, 412.494, 22.8306, 0.6356 ) }
    dend_31 { pt3dadd( 409.299, 413.557, 22.1707, 0.5338 ) }
    dend_31 { pt3dadd( 409.346, 414.692, 21.8414, 0.3814 ) }
    dend_31 { pt3dadd( 408.865, 415.73, 21.84, 0.2796 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 400.107, 388.274, 29.9796, 0.8644 ) }
    dend_24 { pt3dadd( 399.801, 389.345, 30.8913, 0.966 ) }
    dend_24 { pt3dadd( 399.484, 390.396, 31.6901, 0.8898 ) }
    dend_24 { pt3dadd( 399.271, 391.516, 31.9166, 0.7626 ) }
    dend_24 { pt3dadd( 399.339, 392.657, 31.9315, 0.6864 ) }
    dend_24 { pt3dadd( 399.766, 393.719, 31.9878, 0.6864 ) }
    dend_24 { pt3dadd( 400.628, 394.465, 32.2196, 0.661 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 389.282, 392.85, 23.0213, 0.9914 ) }
    dend_20 { pt3dadd( 388.668, 394.179, 23.6477, 0.788 ) }
    dend_20 { pt3dadd( 388.25, 395.231, 24.0237, 0.8136 ) }
    dend_20 { pt3dadd( 387.818, 396.291, 24.0747, 0.7372 ) }
    dend_20 { pt3dadd( 387.338, 397.329, 24.0568, 0.7372 ) }
    dend_20 { pt3dadd( 386.966, 398.409, 23.9392, 0.7626 ) }
    dend_20 { pt3dadd( 386.843, 399.527, 23.4422, 0.839 ) }
    dend_20 { pt3dadd( 386.529, 400.607, 23.9204, 0.8644 ) }
    dend_20 { pt3dadd( 386.034, 401.635, 24.1083, 0.8136 ) }
    dend_20 { pt3dadd( 385.465, 402.625, 24.2796, 0.7118 ) }
    dend_20 { pt3dadd( 385.099, 403.671, 24.9738, 0.6356 ) }
    dend_20 { pt3dadd( 385.026, 404.807, 25.2196, 0.6356 ) }
    dend_20 { pt3dadd( 384.769, 405.92, 25.3977, 0.6356 ) }
    dend_20 { pt3dadd( 384.248, 406.908, 25.9907, 0.5848 ) }
    dend_20 { pt3dadd( 383.627, 407.86, 25.671, 0.5084 ) }
    dend_20 { pt3dadd( 383.01, 408.806, 25.2218, 0.4576 ) }
    dend_20 { pt3dadd( 382.62, 409.882, 25.2003, 0.5338 ) }
    dend_20 { pt3dadd( 382.291, 410.977, 25.2, 0.6102 ) }
    dend_20 { pt3dadd( 381.963, 412.073, 25.2, 0.7118 ) }
    dend_20 { pt3dadd( 381.498, 413.118, 25.2006, 0.7118 ) }
    dend_20 { pt3dadd( 381.126, 414.2, 25.2034, 0.7118 ) }
    dend_20 { pt3dadd( 380.651, 415.241, 25.2188, 0.6356 ) }
    dend_20 { pt3dadd( 380.335, 416.339, 25.3271, 0.5848 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 389.282, 392.85, 23.0213, 0.9914 ) }
    dend_19 { pt3dadd( 389.651, 393.417, 21.6059, 0.5084 ) }
    dend_19 { pt3dadd( 390.131, 394.149, 19.8204, 0.5338 ) }
    dend_19 { pt3dadd( 390.391, 395.246, 19.637, 0.5848 ) }
    dend_19 { pt3dadd( 390.789, 396.274, 19.4698, 0.6864 ) }
    dend_19 { pt3dadd( 390.76, 397.405, 19.6246, 0.7118 ) }
    dend_19 { pt3dadd( 390.643, 398.488, 19.0814, 0.6864 ) }
    dend_19 { pt3dadd( 391.025, 399.445, 18.3008, 0.6102 ) }
    dend_19 { pt3dadd( 391.438, 400.266, 19.5703, 0.5848 ) }
    dend_19 { pt3dadd( 391.718, 401.152, 18.6245, 0.6102 ) }
    dend_19 { pt3dadd( 392.136, 402.056, 19.6258, 0.661 ) }
    dend_19 { pt3dadd( 392.662, 403.028, 18.9563, 0.6356 ) }
    dend_19 { pt3dadd( 393.235, 403.991, 18.5394, 0.5084 ) }
    dend_19 { pt3dadd( 393.878, 404.518, 17.08, 0.356 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 77/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 418.011, 363.97, 26.1957, 1.1186 ) }
    dend_17 { pt3dadd( 419.589, 364.102, 25.4344, 0.7372 ) }
    dend_17 { pt3dadd( 420.692, 364.204, 24.752, 0.5848 ) }
    dend_17 { pt3dadd( 421.696, 363.903, 24.3264, 0.4322 ) }
    dend_17 { pt3dadd( 422.318, 362.984, 24.2836, 0.4068 ) }
    dend_17 { pt3dadd( 423.114, 362.403, 23.3257, 0.4068 ) }
    dend_17 { pt3dadd( 423.556, 362.658, 25.0981, 0.3814 ) }
    dend_17 { pt3dadd( 424.137, 363.409, 24.2312, 0.4068 ) }
    dend_17 { pt3dadd( 424.431, 364.423, 24.2936, 0.4322 ) }
    dend_17 { pt3dadd( 424.644, 365.527, 24.4124, 0.5084 ) }
    dend_17 { pt3dadd( 425.327, 366.375, 23.9464, 0.5338 ) }
    dend_17 { pt3dadd( 426.037, 366.087, 22.0676, 0.5592 ) }
    dend_17 { pt3dadd( 426.973, 365.703, 21.4626, 0.6356 ) }
    dend_17 { pt3dadd( 427.935, 365.373, 20.8502, 0.661 ) }
    dend_17 { pt3dadd( 428.48, 364.64, 19.5031, 0.6102 ) }
    dend_17 { pt3dadd( 429.457, 364.135, 19.32, 0.5084 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 418.011, 363.97, 26.1957, 1.1186 ) }
    dend_10 { pt3dadd( 419.351, 362.631, 26.32, 0.6864 ) }
    dend_10 { pt3dadd( 420.06, 361.733, 26.32, 0.483 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 396.077, 352.123, 32.0174, 0.661 ) }
    dend_8 { pt3dadd( 396.601, 351.19, 30.9473, 0.9152 ) }
    dend_8 { pt3dadd( 397.162, 350.335, 29.6915, 0.839 ) }
    dend_8 { pt3dadd( 398.05, 349.69, 29.0298, 0.839 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 399.102, 349.283, 29.3622, 0.8644 ) }
    dend_8 { pt3dadd( 400.198, 348.959, 29.4431, 0.8644 ) }
    dend_8 { pt3dadd( 401.294, 348.664, 29.1278, 0.8644 ) }
    dend_8 { pt3dadd( 402.332, 348.188, 29.0564, 0.8136 ) }
    dend_8 { pt3dadd( 403.338, 347.668, 28.6787, 0.7372 ) }
    dend_8 { pt3dadd( 404.309, 347.112, 28.0927, 0.6356 ) }
    dend_8 { pt3dadd( 405.132, 346.394, 27.2717, 0.5848 ) }
    dend_8 { pt3dadd( 405.434, 345.358, 26.4214, 0.6102 ) }
    dend_8 { pt3dadd( 405.121, 344.299, 25.6878, 0.6864 ) }
    dend_8 { pt3dadd( 404.874, 343.2, 25.24, 0.7118 ) }
    dend_8 { pt3dadd( 405.003, 342.064, 25.1885, 0.7372 ) }
    dend_8 { pt3dadd( 405.266, 340.951, 25.1241, 0.7372 ) }
    dend_8 { pt3dadd( 405.571, 339.859, 24.8074, 0.7372 ) }
    dend_8 { pt3dadd( 406.149, 338.894, 24.3121, 0.7372 ) }
    dend_8 { pt3dadd( 406.853, 337.999, 24.0778, 0.6864 ) }
    dend_8 { pt3dadd( 407.437, 337.018, 24.022, 0.6864 ) }
    dend_8 { pt3dadd( 407.802, 335.94, 23.7751, 0.6356 ) }
    dend_8 { pt3dadd( 408.091, 334.856, 23.233, 0.7118 ) }
    dend_8 { pt3dadd( 408.301, 333.759, 22.636, 0.7118 ) }
    dend_8 { pt3dadd( 408.353, 332.68, 21.7532, 0.6864 ) }
    dend_8 { pt3dadd( 408.147, 331.689, 20.4915, 0.483 ) }
    dend_8 { pt3dadd( 407.641, 330.721, 19.7224, 0.3814 ) }
    dend_8 { pt3dadd( 407.493, 329.648, 19.5989, 0.3304 ) }
    dend_8 { pt3dadd( 408.081, 328.698, 19.4426, 0.4322 ) }
    dend_8 { pt3dadd( 408.788, 327.861, 19.2189, 0.4576 ) }
    dend_8 { pt3dadd( 409.113, 326.785, 19.2083, 0.5338 ) }
    dend_8 { pt3dadd( 409.453, 325.705, 19.0562, 0.5084 ) }
    dend_8 { pt3dadd( 410.401, 325.332, 18.6469, 0.5338 ) }
    dend_8 { pt3dadd( 411.496, 325.01, 18.48, 0.4576 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 29/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 396.077, 352.123, 32.0174, 0.661 ) }
    dend_1 { pt3dadd( 396.314, 350.909, 32.4302, 0.9406 ) }
    dend_1 { pt3dadd( 396.482, 349.866, 31.3981, 1.0168 ) }
    dend_1 { pt3dadd( 396.465, 348.745, 30.8521, 1.0932 ) }
    dend_1 { pt3dadd( 396.219, 347.628, 30.8006, 1.1186 ) }
    dend_1 { pt3dadd( 395.971, 346.512, 30.8, 1.1186 ) }
    dend_1 { pt3dadd( 395.577, 345.438, 30.8, 1.1186 ) }
    dend_1 { pt3dadd( 395.098, 344.399, 30.8, 1.144 ) }
    dend_1 { pt3dadd( 394.555, 342.189, 30.7944, 1.2456 ) }
    dend_1 { pt3dadd( 393.622, 340.103, 30.6158, 1.1694 ) }
    dend_1 { pt3dadd( 392.889, 337.977, 29.6918, 1.1186 ) }
    dend_1 { pt3dadd( 392.664, 336.855, 29.6845, 1.0678 ) }
    dend_1 { pt3dadd( 392.429, 335.735, 29.7083, 1.0168 ) }
    dend_1 { pt3dadd( 392.564, 334.602, 29.8712, 0.966 ) }
    dend_1 { pt3dadd( 392.826, 333.531, 30.6197, 0.9406 ) }
    dend_1 { pt3dadd( 392.834, 332.405, 31.1142, 0.8898 ) }
    dend_1 { pt3dadd( 392.754, 331.3, 31.8086, 0.8136 ) }
    dend_1 { pt3dadd( 392.38, 330.221, 31.6333, 0.661 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 47/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 387.357, 338.722, 49.6404, 1.144 ) }
    dend_56 { pt3dadd( 388.213, 338.028, 51.3699, 0.788 ) }
    dend_56 { pt3dadd( 389.057, 337.331, 52.1396, 0.7626 ) }
    dend_56 { pt3dadd( 389.651, 336.659, 53.7942, 0.6864 ) }
    dend_56 { pt3dadd( 390.282, 335.787, 54.3648, 0.661 ) }
    dend_56 { pt3dadd( 391.138, 335.055, 54.6879, 0.6864 ) }
    dend_56 { pt3dadd( 391.922, 334.364, 55.7567, 0.788 ) }
    dend_56 { pt3dadd( 392.602, 333.532, 56.6902, 0.839 ) }
    dend_56 { pt3dadd( 393.246, 332.636, 57.4207, 0.839 ) }
    dend_56 { pt3dadd( 394.009, 331.803, 57.7917, 0.7626 ) }
    dend_56 { pt3dadd( 394.862, 331.064, 58.2352, 0.661 ) }
    dend_56 { pt3dadd( 395.659, 330.282, 58.823, 0.6102 ) }
    dend_56 { pt3dadd( 396.085, 329.257, 59.2774, 0.6102 ) }
    dend_56 { pt3dadd( 396.482, 328.192, 59.1027, 0.7118 ) }
    dend_56 { pt3dadd( 396.981, 327.179, 59.423, 0.7626 ) }
    dend_56 { pt3dadd( 397.51, 326.215, 60.1787, 0.8136 ) }
    dend_56 { pt3dadd( 398.078, 325.268, 60.9078, 0.8136 ) }
    dend_56 { pt3dadd( 398.545, 324.233, 61.1478, 0.839 ) }
    dend_56 { pt3dadd( 399.102, 323.237, 61.313, 0.7372 ) }
    dend_56 { pt3dadd( 399.741, 322.296, 61.588, 0.661 ) }
    dend_56 { pt3dadd( 400.341, 321.343, 62.078, 0.6102 ) }
    dend_56 { pt3dadd( 400.95, 320.379, 62.1589, 0.661 ) }
    dend_56 { pt3dadd( 401.591, 319.431, 62.1877, 0.6102 ) }
    dend_56 { pt3dadd( 402.043, 318.384, 62.2824, 0.5084 ) }
    dend_56 { pt3dadd( 402.467, 317.323, 62.3862, 0.4576 ) }
    dend_56 { pt3dadd( 402.776, 316.222, 62.4036, 0.5592 ) }
    dend_56 { pt3dadd( 403.172, 315.48, 64.038, 0.6864 ) }
    dend_56 { pt3dadd( 403.435, 314.552, 64.0002, 0.7626 ) }
    dend_56 { pt3dadd( 403.849, 313.779, 62.2322, 0.7372 ) }
    dend_56 { pt3dadd( 404.435, 312.889, 61.7453, 0.7118 ) }
    dend_56 { pt3dadd( 404.841, 311.838, 62.0802, 0.7118 ) }
    dend_56 { pt3dadd( 405.5, 310.915, 62.0861, 0.7372 ) }
    dend_56 { pt3dadd( 406.183, 310.014, 62.417, 0.7118 ) }
    dend_56 { pt3dadd( 406.719, 309.006, 62.2656, 0.6356 ) }
    dend_56 { pt3dadd( 407.291, 308.037, 62.0486, 0.5592 ) }
    dend_56 { pt3dadd( 408.088, 307.265, 61.9399, 0.5338 ) }
    dend_56 { pt3dadd( 408.522, 306.332, 62.8774, 0.5338 ) }
    dend_56 { pt3dadd( 409.171, 305.495, 63.0678, 0.5084 ) }
    dend_56 { pt3dadd( 409.993, 304.709, 62.7564, 0.5084 ) }
    dend_56 { pt3dadd( 410.376, 303.654, 63.2111, 0.5084 ) }
    dend_56 { pt3dadd( 411.036, 302.768, 63.8977, 0.5338 ) }
    dend_56 { pt3dadd( 411.611, 301.788, 64.062, 0.5592 ) }
    dend_56 { pt3dadd( 412.263, 300.856, 63.9086, 0.6102 ) }
    dend_56 { pt3dadd( 412.829, 299.886, 63.9876, 0.6864 ) }
    dend_56 { pt3dadd( 413.205, 298.81, 63.7118, 0.7372 ) }
    dend_56 { pt3dadd( 413.565, 297.739, 63.8061, 0.7626 ) }
    dend_56 { pt3dadd( 414.167, 296.839, 63.7767, 0.7626 ) }
    dend_56 { pt3dadd( 414.696, 295.878, 63.9957, 0.7626 ) }
    dend_56 { pt3dadd( 415.406, 295.065, 63.5051, 0.7118 ) }
    dend_56 { pt3dadd( 415.916, 294.069, 63.775, 0.6864 ) }
    dend_56 { pt3dadd( 416.428, 293.173, 62.9686, 0.6356 ) }
    dend_56 { pt3dadd( 417.127, 292.446, 63.9506, 0.7118 ) }
    dend_56 { pt3dadd( 417.721, 291.493, 63.5592, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_56 { pt3dadd( 418.171, 290.451, 63.7034, 0.7626 ) }
    dend_56 { pt3dadd( 418.511, 289.376, 63.5505, 0.6864 ) }
    dend_56 { pt3dadd( 418.729, 288.258, 63.299, 0.6356 ) }
    dend_56 { pt3dadd( 419.18, 287.273, 64.1382, 0.6356 ) }
    dend_56 { pt3dadd( 419.421, 286.162, 64.2662, 0.6356 ) }
    dend_56 { pt3dadd( 419.564, 285.064, 64.5156, 0.661 ) }
    dend_56 { pt3dadd( 419.704, 283.987, 65.3864, 0.7118 ) }
    dend_56 { pt3dadd( 419.972, 282.91, 66.0307, 0.7626 ) }
    dend_56 { pt3dadd( 420.441, 281.918, 66.8069, 0.7118 ) }
    dend_56 { pt3dadd( 421.093, 281.103, 65.6692, 0.6102 ) }
    dend_56 { pt3dadd( 421.865, 280.265, 65.8364, 0.5592 ) }
    dend_56 { pt3dadd( 422.45, 279.385, 66.8125, 0.6102 ) }
    dend_56 { pt3dadd( 422.801, 278.348, 67.4139, 0.5848 ) }
    dend_56 { pt3dadd( 423.31, 277.491, 67.4498, 0.5084 ) }
    dend_56 { pt3dadd( 423.435, 276.59, 66.9603, 0.4322 ) }
    dend_56 { pt3dadd( 423.873, 275.74, 68.2382, 0.483 ) }
    dend_56 { pt3dadd( 424.15, 274.746, 68.383, 0.5592 ) }
    dend_56 { pt3dadd( 424.676, 273.764, 68.5076, 0.5592 ) }
    dend_56 { pt3dadd( 424.892, 272.643, 68.5927, 0.483 ) }
    dend_56 { pt3dadd( 425.314, 271.619, 68.0386, 0.4322 ) }
    dend_56 { pt3dadd( 426.037, 270.84, 67.7093, 0.483 ) }
    dend_56 { pt3dadd( 426.293, 269.854, 66.8534, 0.5592 ) }
    dend_56 { pt3dadd( 426.921, 268.933, 67.013, 0.5592 ) }
    dend_56 { pt3dadd( 427.558, 268.035, 66.7842, 0.5084 ) }
    dend_56 { pt3dadd( 427.771, 266.923, 66.64, 0.4322 ) }
    dend_56 { pt3dadd( 427.861, 265.79, 66.4146, 0.4576 ) }
    dend_56 { pt3dadd( 428.013, 264.707, 66.6557, 0.483 ) }
    dend_56 { pt3dadd( 428.203, 263.619, 67.3327, 0.5848 ) }
    dend_56 { pt3dadd( 428.556, 262.598, 68.1436, 0.6356 ) }
    dend_56 { pt3dadd( 428.801, 261.483, 68.115, 0.6864 ) }
    dend_56 { pt3dadd( 429.145, 260.396, 68.29, 0.661 ) }
    dend_56 { pt3dadd( 429.449, 259.352, 68.4396, 0.6102 ) }
    dend_56 { pt3dadd( 429.079, 258.312, 68.7445, 0.5338 ) }
    dend_56 { pt3dadd( 428.58, 257.283, 68.6325, 0.5084 ) }
    dend_56 { pt3dadd( 428.705, 256.277, 69.4582, 0.5338 ) }
    dend_56 { pt3dadd( 428.684, 255.222, 68.7604, 0.6102 ) }
    dend_56 { pt3dadd( 429.07, 254.167, 69.2381, 0.6102 ) }
    dend_56 { pt3dadd( 429.344, 253.057, 69.356, 0.5338 ) }
    dend_56 { pt3dadd( 429.656, 251.964, 69.5957, 0.3814 ) }
    dend_56 { pt3dadd( 430.072, 250.901, 69.762, 0.305 ) }
    dend_56 { pt3dadd( 430.44, 249.846, 69.6713, 0.305 ) }
    dend_56 { pt3dadd( 430.943, 248.933, 69.3812, 0.356 ) }
    dend_56 { pt3dadd( 431.215, 247.934, 70.3662, 0.3814 ) }
    dend_56 { pt3dadd( 431.342, 246.823, 70.2276, 0.4068 ) }
    dend_56 { pt3dadd( 431.477, 245.725, 70.0686, 0.4322 ) }
    dend_56 { pt3dadd( 431.407, 244.623, 70.6118, 0.4322 ) }
    dend_56 { pt3dadd( 431.526, 243.557, 71.0654, 0.356 ) }
    dend_56 { pt3dadd( 431.968, 242.515, 71.4815, 0.2796 ) }
    dend_56 { pt3dadd( 432.45, 241.494, 71.9298, 0.2288 ) }
    dend_56 { pt3dadd( 432.933, 240.473, 72.3783, 0.2288 ) }
    dend_56 { pt3dadd( 433.416, 239.453, 72.8266, 0.2288 ) }
    dend_56 { pt3dadd( 433.899, 238.431, 73.2749, 0.2288 ) }
    dend_56 { pt3dadd( 434.232, 237.408, 73.7943, 0.2288 ) }
    dend_56 { pt3dadd( 433.895, 236.369, 74.6298, 0.2288 ) }
    dend_56 { pt3dadd( 433.559, 235.33, 75.4653, 0.2288 ) }
    dend_56 { pt3dadd( 433.223, 234.291, 76.3008, 0.2288 ) }
    dend_56 { pt3dadd( 433.0, 233.222, 76.9056, 0.2288 ) }
    dend_56 { pt3dadd( 433.036, 232.078, 76.9787, 0.2288 ) }
    dend_56 { pt3dadd( 433.073, 230.935, 77.0518, 0.2288 ) }
    dend_56 { pt3dadd( 433.14, 229.817, 77.387, 0.2288 ) }
    dend_56 { pt3dadd( 433.287, 228.766, 78.4333, 0.2288 ) }
    dend_56 { pt3dadd( 433.434, 227.715, 79.4797, 0.2288 ) }
    dend_56 { pt3dadd( 433.582, 226.664, 80.526, 0.2288 ) }
    dend_56 { pt3dadd( 433.729, 225.614, 81.5724, 0.2288 ) }
    dend_56 { pt3dadd( 433.858, 224.555, 82.5782, 0.2288 ) }
    dend_56 { pt3dadd( 433.907, 223.463, 83.4095, 0.2288 ) }
    dend_56 { pt3dadd( 433.955, 222.372, 84.2411, 0.2288 ) }
    dend_56 { pt3dadd( 434.003, 221.281, 85.0727, 0.2288 ) }
    dend_56 { pt3dadd( 434.052, 220.19, 85.9043, 0.2288 ) }
    dend_56 { pt3dadd( 434.1, 219.099, 86.7359, 0.2288 ) }
    dend_56 { pt3dadd( 434.149, 218.008, 87.5672, 0.2288 ) }
    dend_56 { pt3dadd( 434.197, 216.916, 88.3988, 0.2288 ) }
    dend_56 { pt3dadd( 434.245, 215.816, 89.1005, 0.2288 ) }
    dend_56 { pt3dadd( 434.291, 214.673, 89.1229, 0.2288 ) }
    dend_56 { pt3dadd( 434.337, 213.53, 89.145, 0.2288 ) }
    dend_56 { pt3dadd( 434.383, 212.387, 89.1674, 0.2288 ) }
    dend_56 { pt3dadd( 434.428, 211.244, 89.1898, 0.305 ) }
    dend_56 { pt3dadd( 434.435, 210.109, 89.2175, 0.3814 ) }
    dend_56 { pt3dadd( 433.906, 209.097, 89.3225, 0.4576 ) }
    dend_56 { pt3dadd( 433.376, 208.083, 89.4275, 0.3814 ) }
    dend_56 { pt3dadd( 432.845, 207.071, 89.5328, 0.356 ) }
    dend_56 { pt3dadd( 432.315, 206.057, 89.6378, 0.4322 ) }
    dend_56 { pt3dadd( 431.786, 205.045, 89.7428, 0.6864 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 83/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 387.357, 338.722, 49.6404, 1.144 ) }
    dend_55 { pt3dadd( 386.361, 338.305, 50.9146, 0.8898 ) }
    dend_55 { pt3dadd( 385.416, 337.816, 51.9428, 0.8136 ) }
    dend_55 { pt3dadd( 384.507, 337.125, 52.1013, 0.8136 ) }
    dend_55 { pt3dadd( 383.514, 336.559, 52.1962, 0.9152 ) }
    dend_55 { pt3dadd( 382.511, 336.028, 52.5591, 0.966 ) }
    dend_55 { pt3dadd( 381.551, 335.447, 53.1009, 0.9406 ) }
    dend_55 { pt3dadd( 380.593, 334.823, 53.0768, 0.839 ) }
    dend_55 { pt3dadd( 379.628, 334.215, 52.8464, 0.7626 ) }
    dend_55 { pt3dadd( 378.601, 333.719, 53.0225, 0.7118 ) }
    dend_55 { pt3dadd( 377.58, 333.351, 53.9014, 0.661 ) }
    dend_55 { pt3dadd( 376.499, 333.026, 54.32, 0.6356 ) }
    dend_55 { pt3dadd( 375.522, 332.434, 54.3206, 0.5848 ) }
    dend_55 { pt3dadd( 374.638, 331.705, 54.3236, 0.5848 ) }
    dend_55 { pt3dadd( 373.73, 331.012, 54.3388, 0.6102 ) }
    dend_55 { pt3dadd( 372.747, 330.428, 54.4222, 0.6864 ) }
    dend_55 { pt3dadd( 371.817, 329.779, 54.7826, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_55 { pt3dadd( 370.9, 329.141, 55.3636, 0.5848 ) }
    dend_55 { pt3dadd( 369.874, 328.638, 55.44, 0.5338 ) }
    dend_55 { pt3dadd( 368.842, 328.145, 55.44, 0.6102 ) }
    dend_55 { pt3dadd( 367.884, 327.526, 55.44, 0.7372 ) }
    dend_55 { pt3dadd( 367.122, 326.673, 55.4403, 0.7372 ) }
    dend_55 { pt3dadd( 366.37, 325.812, 55.442, 0.7118 ) }
    dend_55 { pt3dadd( 365.506, 325.063, 55.4498, 0.661 ) }
    dend_55 { pt3dadd( 364.738, 324.216, 55.4932, 0.6864 ) }
    dend_55 { pt3dadd( 364.046, 323.31, 55.6917, 0.6864 ) }
    dend_55 { pt3dadd( 363.336, 322.435, 56.1677, 0.661 ) }
    dend_55 { pt3dadd( 362.706, 321.496, 56.5723, 0.6864 ) }
    dend_55 { pt3dadd( 361.97, 320.625, 56.6325, 0.6864 ) }
    dend_55 { pt3dadd( 361.071, 319.927, 56.8744, 0.7372 ) }
    dend_55 { pt3dadd( 360.202, 319.209, 57.344, 0.661 ) }
    dend_55 { pt3dadd( 359.404, 318.401, 57.6702, 0.6102 ) }
    dend_55 { pt3dadd( 358.564, 317.626, 57.7018, 0.5848 ) }
    dend_55 { pt3dadd( 357.677, 316.907, 57.7931, 0.6864 ) }
    dend_55 { pt3dadd( 356.901, 316.083, 58.1456, 0.788 ) }
    dend_55 { pt3dadd( 356.274, 315.15, 58.6342, 0.788 ) }
    dend_55 { pt3dadd( 355.717, 314.155, 58.7958, 0.7626 ) }
    dend_55 { pt3dadd( 355.093, 313.196, 58.7773, 0.7626 ) }
    dend_55 { pt3dadd( 354.545, 312.195, 58.6488, 0.8136 ) }
    dend_55 { pt3dadd( 354.072, 311.174, 58.1792, 0.8136 ) }
    dend_55 { pt3dadd( 353.453, 310.239, 57.713, 0.7118 ) }
    dend_55 { pt3dadd( 352.684, 309.391, 57.6349, 0.6102 ) }
    dend_55 { pt3dadd( 351.98, 308.505, 57.4364, 0.5084 ) }
    dend_55 { pt3dadd( 351.47, 307.507, 56.8809, 0.5338 ) }
    dend_55 { pt3dadd( 351.029, 306.465, 56.5888, 0.5848 ) }
    dend_55 { pt3dadd( 350.874, 305.346, 56.5818, 0.661 ) }
    dend_55 { pt3dadd( 351.017, 304.217, 56.7518, 0.6864 ) }
    dend_55 { pt3dadd( 350.994, 303.106, 57.0909, 0.6864 ) }
    dend_55 { pt3dadd( 350.537, 302.072, 56.9416, 0.661 ) }
    dend_55 { pt3dadd( 349.851, 301.166, 56.8341, 0.6356 ) }
    dend_55 { pt3dadd( 349.142, 300.277, 57.0002, 0.5848 ) }
    dend_55 { pt3dadd( 348.464, 299.361, 56.7902, 0.6356 ) }
    dend_55 { pt3dadd( 347.761, 298.463, 56.5928, 0.7118 ) }
    dend_55 { pt3dadd( 347.142, 297.508, 56.5555, 0.788 ) }
    dend_55 { pt3dadd( 346.637, 296.483, 56.5362, 0.7626 ) }
    dend_55 { pt3dadd( 346.026, 295.52, 56.4514, 0.6864 ) }
    dend_55 { pt3dadd( 345.31, 294.645, 56.1154, 0.6356 ) }
    dend_55 { pt3dadd( 344.503, 293.887, 55.6114, 0.5848 ) }
    dend_55 { pt3dadd( 343.555, 293.258, 55.4529, 0.5338 ) }
    dend_55 { pt3dadd( 342.737, 292.468, 55.44, 0.5084 ) }
    dend_55 { pt3dadd( 342.206, 291.483, 55.44, 0.5338 ) }
    dend_55 { pt3dadd( 341.97, 290.363, 55.44, 0.5592 ) }
    dend_55 { pt3dadd( 341.643, 289.28, 55.4397, 0.5592 ) }
    dend_55 { pt3dadd( 341.023, 288.33, 55.4392, 0.5084 ) }
    dend_55 { pt3dadd( 340.178, 287.573, 55.4361, 0.5084 ) }
    dend_55 { pt3dadd( 339.185, 287.011, 55.4148, 0.5338 ) }
    dend_55 { pt3dadd( 338.257, 286.389, 55.2633, 0.5848 ) }
    dend_55 { pt3dadd( 337.677, 285.564, 54.3074, 0.6356 ) }
    dend_55 { pt3dadd( 337.048, 284.887, 53.5632, 0.6356 ) }
    dend_55 { pt3dadd( 336.04, 284.395, 54.1038, 0.661 ) }
    dend_55 { pt3dadd( 335.152, 283.736, 54.4054, 0.661 ) }
    dend_55 { pt3dadd( 334.433, 282.883, 53.9636, 0.6864 ) }
    dend_55 { pt3dadd( 333.715, 282.02, 53.4192, 0.661 ) }
    dend_55 { pt3dadd( 333.124, 281.082, 53.919, 0.5848 ) }
    dend_55 { pt3dadd( 332.491, 280.159, 53.8336, 0.483 ) }
    dend_55 { pt3dadd( 332.142, 279.198, 53.4604, 0.4322 ) }
    dend_55 { pt3dadd( 331.728, 278.32, 53.8714, 0.4576 ) }
    dend_55 { pt3dadd( 331.452, 277.275, 53.3764, 0.483 ) }
    dend_55 { pt3dadd( 331.285, 276.149, 53.5072, 0.483 ) }
    dend_55 { pt3dadd( 331.029, 275.046, 53.5209, 0.4322 ) }
    dend_55 { pt3dadd( 330.529, 274.041, 53.2322, 0.4068 ) }
    dend_55 { pt3dadd( 329.979, 273.065, 53.193, 0.356 ) }
    dend_55 { pt3dadd( 329.437, 272.066, 53.2834, 0.3304 ) }
    dend_55 { pt3dadd( 328.869, 271.08, 52.999, 0.305 ) }
    dend_55 { pt3dadd( 327.899, 270.559, 52.6778, 0.2796 ) }
    dend_55 { pt3dadd( 326.84, 270.143, 52.8928, 0.2796 ) }
    dend_55 { pt3dadd( 325.777, 269.961, 52.0534, 0.2796 ) }
    dend_55 { pt3dadd( 324.656, 270.074, 51.6617, 0.4068 ) }
    dend_55 { pt3dadd( 323.522, 270.213, 51.52, 0.483 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 72/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 416.638, 345.072, 53.1432, 0.839 ) }
    dend_53 { pt3dadd( 417.95, 345.364, 54.5958, 0.8898 ) }
    dend_53 { pt3dadd( 419.048, 345.557, 55.1832, 0.7372 ) }
    dend_53 { pt3dadd( 420.18, 345.503, 55.5044, 0.7626 ) }
    dend_53 { pt3dadd( 421.292, 345.289, 55.7948, 0.788 ) }
    dend_53 { pt3dadd( 422.383, 345.282, 56.6138, 0.788 ) }
    dend_53 { pt3dadd( 423.419, 345.377, 57.7651, 0.661 ) }
    dend_53 { pt3dadd( 424.461, 345.68, 58.6074, 0.6356 ) }
    dend_53 { pt3dadd( 425.516, 346.071, 58.9786, 0.6356 ) }
    dend_53 { pt3dadd( 426.632, 346.174, 59.4843, 0.7118 ) }
    dend_53 { pt3dadd( 427.725, 346.174, 60.3103, 0.7118 ) }
    dend_53 { pt3dadd( 428.843, 346.172, 60.8555, 0.7372 ) }
    dend_53 { pt3dadd( 429.985, 346.159, 60.8927, 0.7626 ) }
    dend_53 { pt3dadd( 431.114, 346.094, 60.5016, 0.788 ) }
    dend_53 { pt3dadd( 432.218, 345.892, 60.0242, 0.7626 ) }
    dend_53 { pt3dadd( 433.315, 345.569, 59.9416, 0.7118 ) }
    dend_53 { pt3dadd( 434.405, 345.229, 60.0513, 0.7118 ) }
    dend_53 { pt3dadd( 435.481, 344.905, 60.4649, 0.7626 ) }
    dend_53 { pt3dadd( 436.578, 344.792, 61.2002, 0.788 ) }
    dend_53 { pt3dadd( 437.691, 344.746, 61.7985, 0.839 ) }
    dend_53 { pt3dadd( 438.817, 344.591, 61.8629, 0.839 ) }
    dend_53 { pt3dadd( 439.934, 344.415, 61.5104, 0.8644 ) }
    dend_53 { pt3dadd( 441.067, 344.427, 61.5734, 0.788 ) }
    dend_53 { pt3dadd( 442.17, 344.652, 62.008, 0.788 ) }
    dend_53 { pt3dadd( 443.246, 345.03, 62.16, 0.788 ) }
    dend_53 { pt3dadd( 444.298, 345.48, 62.1608, 0.8644 ) }
    dend_53 { pt3dadd( 445.341, 345.949, 62.165, 0.8898 ) }
    dend_53 { pt3dadd( 446.404, 346.371, 62.19, 0.9406 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_53 { pt3dadd( 447.477, 346.76, 62.3364, 0.966 ) }
    dend_53 { pt3dadd( 448.572, 347.026, 62.7267, 0.9152 ) }
    dend_53 { pt3dadd( 449.701, 347.093, 63.0899, 0.8644 ) }
    dend_53 { pt3dadd( 450.84, 347.115, 63.2856, 0.788 ) }
    dend_53 { pt3dadd( 451.945, 347.218, 63.866, 0.8136 ) }
    dend_53 { pt3dadd( 452.979, 347.429, 64.9365, 0.788 ) }
    dend_53 { pt3dadd( 454.007, 347.656, 66.0148, 0.839 ) }
    dend_53 { pt3dadd( 455.064, 347.99, 66.6271, 0.839 ) }
    dend_53 { pt3dadd( 456.103, 348.436, 67.0169, 0.8644 ) }
    dend_53 { pt3dadd( 457.136, 348.88, 67.5416, 0.8136 ) }
    dend_53 { pt3dadd( 458.192, 349.244, 68.061, 0.788 ) }
    dend_53 { pt3dadd( 459.297, 349.397, 68.6532, 0.6864 ) }
    dend_53 { pt3dadd( 460.396, 349.549, 69.2748, 0.6102 ) }
    dend_53 { pt3dadd( 461.413, 349.98, 69.8132, 0.5848 ) }
    dend_53 { pt3dadd( 462.273, 350.711, 70.0977, 0.661 ) }
    dend_53 { pt3dadd( 463.048, 351.527, 70.5272, 0.7118 ) }
    dend_53 { pt3dadd( 463.917, 352.177, 71.3152, 0.6864 ) }
    dend_53 { pt3dadd( 464.955, 352.514, 71.9872, 0.6102 ) }
    dend_53 { pt3dadd( 466.077, 352.646, 72.4209, 0.5084 ) }
    dend_53 { pt3dadd( 467.14, 352.95, 72.9221, 0.4322 ) }
    dend_53 { pt3dadd( 467.984, 353.654, 73.4023, 0.4068 ) }
    dend_53 { pt3dadd( 468.629, 354.567, 73.9584, 0.4576 ) }
    dend_53 { pt3dadd( 469.327, 355.393, 74.7967, 0.4576 ) }
    dend_53 { pt3dadd( 470.068, 356.051, 76.1331, 0.483 ) }
    dend_53 { pt3dadd( 470.611, 356.812, 77.6552, 0.5084 ) }
    dend_53 { pt3dadd( 470.864, 357.773, 78.9894, 0.6356 ) }
    dend_53 { pt3dadd( 471.044, 358.753, 80.3583, 0.6356 ) }
    dend_53 { pt3dadd( 471.403, 359.711, 81.564, 0.5592 ) }
    dend_53 { pt3dadd( 471.905, 360.695, 82.1976, 0.4322 ) }
    dend_53 { pt3dadd( 472.241, 361.765, 82.5356, 0.3814 ) }
    dend_53 { pt3dadd( 472.528, 362.711, 83.6998, 0.3814 ) }
    dend_53 { pt3dadd( 472.786, 363.677, 84.9761, 0.3814 ) }
    dend_53 { pt3dadd( 472.972, 364.74, 85.8942, 0.3814 ) }
    dend_53 { pt3dadd( 473.273, 365.795, 86.6524, 0.3814 ) }
    dend_53 { pt3dadd( 473.824, 366.681, 87.7234, 0.356 ) }
    dend_53 { pt3dadd( 474.311, 367.636, 88.6976, 0.3304 ) }
    dend_53 { pt3dadd( 475.063, 368.302, 89.434, 0.356 ) }
    dend_53 { pt3dadd( 476.083, 368.202, 90.536, 0.3814 ) }
    dend_53 { pt3dadd( 477.204, 368.204, 90.6744, 0.4322 ) }
    dend_53 { pt3dadd( 478.261, 368.536, 91.0003, 0.3814 ) }
    dend_53 { pt3dadd( 479.314, 368.762, 91.4105, 0.356 ) }
    dend_53 { pt3dadd( 480.432, 368.67, 91.6866, 0.2796 ) }
    dend_53 { pt3dadd( 481.55, 368.591, 92.1984, 0.2542 ) }
    dend_53 { pt3dadd( 482.647, 368.359, 92.3843, 0.2288 ) }
    dend_53 { pt3dadd( 483.72, 367.963, 92.4, 0.2542 ) }
    dend_53 { pt3dadd( 484.663, 367.382, 92.0066, 0.2796 ) }
    dend_53 { pt3dadd( 485.627, 366.883, 91.2335, 0.305 ) }
    dend_53 { pt3dadd( 486.666, 366.464, 91.5891, 0.305 ) }
    dend_53 { pt3dadd( 487.635, 365.966, 92.4244, 0.305 ) }
    dend_53 { pt3dadd( 488.596, 366.081, 93.7364, 0.305 ) }
    dend_53 { pt3dadd( 489.227, 366.668, 95.2084, 0.2796 ) }
    dend_53 { pt3dadd( 490.328, 366.804, 95.2403, 0.2542 ) }
    dend_53 { pt3dadd( 491.432, 366.956, 95.3271, 0.2288 ) }
    dend_53 { pt3dadd( 492.507, 367.334, 95.48, 0.2288 ) }
    dend_53 { pt3dadd( 493.554, 367.795, 95.48, 0.2288 ) }
    dend_53 { pt3dadd( 494.631, 368.12, 95.835, 0.2288 ) }
    dend_53 { pt3dadd( 495.561, 368.529, 94.8492, 0.2288 ) }
    dend_53 { pt3dadd( 496.432, 369.089, 95.6206, 0.2288 ) }
    dend_53 { pt3dadd( 497.299, 369.666, 96.7742, 0.2288 ) }
    dend_53 { pt3dadd( 498.166, 370.244, 97.9278, 0.2288 ) }
    dend_53 { pt3dadd( 498.761, 371.146, 98.2957, 0.2288 ) }
    dend_53 { pt3dadd( 499.237, 372.185, 98.3254, 0.2288 ) }
    dend_53 { pt3dadd( 499.714, 373.225, 98.3553, 0.2288 ) }
    dend_53 { pt3dadd( 500.196, 374.261, 98.3847, 0.2288 ) }
    dend_53 { pt3dadd( 501.153, 374.887, 98.3651, 0.2288 ) }
    dend_53 { pt3dadd( 502.111, 375.512, 98.3452, 0.2288 ) }
    dend_53 { pt3dadd( 503.111, 376.041, 98.3329, 0.2288 ) }
    dend_53 { pt3dadd( 504.222, 376.316, 98.3402, 0.2288 ) }
    dend_53 { pt3dadd( 505.331, 376.592, 98.3475, 0.2288 ) }
    dend_53 { pt3dadd( 506.442, 376.868, 98.355, 0.2288 ) }
    dend_53 { pt3dadd( 507.552, 377.144, 98.3623, 0.2288 ) }
    dend_53 { pt3dadd( 508.663, 377.419, 98.3696, 0.2288 ) }
    dend_53 { pt3dadd( 509.772, 377.695, 98.3769, 0.2288 ) }
    dend_53 { pt3dadd( 510.883, 377.971, 98.3842, 0.2288 ) }
    dend_53 { pt3dadd( 511.993, 378.246, 98.3914, 0.2288 ) }
    dend_53 { pt3dadd( 513.136, 378.257, 98.4015, 0.2288 ) }
    dend_53 { pt3dadd( 514.281, 378.257, 98.4119, 0.2288 ) }
    dend_53 { pt3dadd( 515.424, 378.256, 98.4222, 0.2288 ) }
    dend_53 { pt3dadd( 516.568, 378.256, 98.4326, 0.2288 ) }
    dend_53 { pt3dadd( 517.484, 378.866, 98.4287, 0.2288 ) }
    dend_53 { pt3dadd( 518.344, 379.618, 98.4214, 0.2288 ) }
    dend_53 { pt3dadd( 519.208, 380.371, 98.4141, 0.2288 ) }
    dend_53 { pt3dadd( 520.068, 381.124, 98.4066, 0.2288 ) }
    dend_53 { pt3dadd( 521.13, 381.532, 98.3984, 0.2288 ) }
    dend_53 { pt3dadd( 522.21, 381.908, 98.3903, 0.2288 ) }
    dend_53 { pt3dadd( 523.292, 382.284, 98.3819, 0.2796 ) }
    dend_53 { pt3dadd( 524.333, 382.73, 98.378, 0.3304 ) }
    dend_53 { pt3dadd( 525.221, 383.449, 98.39, 0.3814 ) }
    dend_53 { pt3dadd( 526.11, 384.17, 98.4018, 0.3304 ) }
    dend_53 { pt3dadd( 527.0, 384.89, 98.4138, 0.2796 ) }
    dend_53 { pt3dadd( 527.75, 385.745, 98.4012, 0.2288 ) }
    dend_53 { pt3dadd( 528.447, 386.651, 98.3794, 0.2288 ) }
    dend_53 { pt3dadd( 529.145, 387.559, 98.3576, 0.2288 ) }
    dend_53 { pt3dadd( 529.84, 388.466, 98.3357, 0.2288 ) }
    dend_53 { pt3dadd( 530.523, 389.383, 98.3226, 0.2288 ) }
    dend_53 { pt3dadd( 531.179, 390.321, 98.3245, 0.2288 ) }
    dend_53 { pt3dadd( 531.834, 391.258, 98.3265, 0.2288 ) }
    dend_53 { pt3dadd( 532.49, 392.196, 98.3284, 0.2288 ) }
    dend_53 { pt3dadd( 533.146, 393.133, 98.3304, 0.2542 ) }
    dend_53 { pt3dadd( 533.38, 394.204, 98.3464, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_53 { pt3dadd( 533.336, 395.332, 98.366, 0.305 ) }
    dend_53 { pt3dadd( 532.589, 396.197, 98.3212, 0.2796 ) }
    dend_53 { pt3dadd( 532.116, 397.129, 98.2909, 0.2542 ) }
    dend_53 { pt3dadd( 532.387, 398.241, 98.3018, 0.2288 ) }
    dend_53 { pt3dadd( 532.658, 399.352, 98.3125, 0.2288 ) }
    dend_53 { pt3dadd( 532.929, 400.464, 98.3234, 0.2288 ) }
    dend_53 { pt3dadd( 532.744, 401.504, 98.3503, 0.2288 ) }
    dend_53 { pt3dadd( 532.145, 402.479, 98.3914, 0.2288 ) }
    dend_53 { pt3dadd( 531.704, 403.51, 98.5373, 0.2542 ) }
    dend_53 { pt3dadd( 531.508, 404.63, 98.8459, 0.305 ) }
    dend_53 { pt3dadd( 531.312, 405.75, 99.1544, 0.356 ) }
    dend_53 { pt3dadd( 531.053, 406.856, 99.3773, 0.356 ) }
    dend_53 { pt3dadd( 530.641, 407.922, 99.3877, 0.305 ) }
    dend_53 { pt3dadd( 530.229, 408.989, 99.3983, 0.2542 ) }
    dend_53 { pt3dadd( 529.818, 410.056, 99.409, 0.305 ) }
    dend_53 { pt3dadd( 529.406, 411.124, 99.4193, 0.3814 ) }
    dend_53 { pt3dadd( 529.13, 412.206, 99.4358, 0.483 ) }
    dend_53 { pt3dadd( 529.304, 413.336, 99.4728, 0.4322 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 18/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 416.638, 345.072, 53.1432, 0.839 ) }
    dend_50 { pt3dadd( 417.189, 344.701, 52.943, 0.7372 ) }
    dend_50 { pt3dadd( 418.081, 344.005, 52.5384, 0.8136 ) }
    dend_50 { pt3dadd( 418.917, 343.27, 52.8254, 0.8136 ) }
    dend_50 { pt3dadd( 419.74, 342.599, 53.8395, 0.8136 ) }
    dend_50 { pt3dadd( 420.592, 341.936, 54.7383, 0.8898 ) }
    dend_50 { pt3dadd( 421.486, 341.254, 55.2101, 0.9914 ) }
    dend_50 { pt3dadd( 422.391, 340.565, 55.1323, 0.9914 ) }
    dend_50 { pt3dadd( 423.345, 339.967, 54.6932, 0.966 ) }
    dend_50 { pt3dadd( 424.299, 339.378, 54.8792, 0.8644 ) }
    dend_50 { pt3dadd( 425.239, 338.751, 55.307, 0.839 ) }
    dend_50 { pt3dadd( 426.141, 338.055, 55.4425, 0.839 ) }
    dend_50 { pt3dadd( 427.051, 337.361, 55.4719, 0.9152 ) }
    dend_50 { pt3dadd( 428.071, 336.871, 55.6153, 0.9406 ) }
    dend_50 { pt3dadd( 429.126, 336.509, 56.1778, 0.839 ) }
    dend_50 { pt3dadd( 430.148, 336.035, 56.5177, 0.661 ) }
    dend_50 { pt3dadd( 431.068, 335.367, 56.5701, 0.5084 ) }
    dend_50 { pt3dadd( 431.907, 334.59, 56.6006, 0.5084 ) }
    dend_50 { pt3dadd( 432.747, 333.816, 56.7246, 0.6102 ) }
    dend_50 { pt3dadd( 433.657, 333.161, 57.1841, 0.7626 ) }
    dend_50 { pt3dadd( 434.606, 332.553, 57.1155, 0.9152 ) }
    dend_50 { pt3dadd( 435.568, 331.957, 56.7062, 0.9914 ) }
    dend_50 { pt3dadd( 436.398, 331.194, 56.5995, 0.966 ) }
    dend_50 { pt3dadd( 437.213, 330.396, 56.777, 0.839 ) }
    dend_50 { pt3dadd( 437.847, 329.508, 57.4428, 0.7626 ) }
    dend_50 { pt3dadd( 438.215, 328.487, 58.2714, 0.788 ) }
    dend_50 { pt3dadd( 438.71, 327.494, 58.8095, 0.8898 ) }
    dend_50 { pt3dadd( 439.448, 326.658, 59.3354, 0.9406 ) }
    dend_50 { pt3dadd( 440.193, 325.814, 59.8018, 0.839 ) }
    dend_50 { pt3dadd( 440.896, 324.915, 59.9861, 0.6864 ) }
    dend_50 { pt3dadd( 441.647, 324.062, 60.2199, 0.5848 ) }
    dend_50 { pt3dadd( 442.486, 323.346, 60.8863, 0.6356 ) }
    dend_50 { pt3dadd( 443.228, 322.544, 61.651, 0.7118 ) }
    dend_50 { pt3dadd( 443.95, 321.695, 62.2768, 0.7626 ) }
    dend_50 { pt3dadd( 444.746, 320.945, 63.0616, 0.788 ) }
    dend_50 { pt3dadd( 445.484, 320.164, 64.0091, 0.8136 ) }
    dend_50 { pt3dadd( 446.258, 319.354, 64.3773, 0.839 ) }
    dend_50 { pt3dadd( 447.122, 318.606, 64.4241, 0.839 ) }
    dend_50 { pt3dadd( 448.115, 318.06, 64.5532, 0.839 ) }
    dend_50 { pt3dadd( 449.179, 317.778, 65.1879, 0.8136 ) }
    dend_50 { pt3dadd( 450.165, 317.54, 66.4465, 0.7372 ) }
    dend_50 { pt3dadd( 451.244, 317.361, 67.0631, 0.6356 ) }
    dend_50 { pt3dadd( 452.378, 317.223, 67.1826, 0.5592 ) }
    dend_50 { pt3dadd( 453.477, 317.004, 67.6578, 0.5848 ) }
    dend_50 { pt3dadd( 454.602, 317.021, 67.9773, 0.661 ) }
    dend_50 { pt3dadd( 455.692, 317.224, 68.6151, 0.788 ) }
    dend_50 { pt3dadd( 456.769, 317.273, 69.5167, 0.8898 ) }
    dend_50 { pt3dadd( 457.878, 317.109, 69.9465, 0.9406 ) }
    dend_50 { pt3dadd( 458.99, 316.846, 70.0384, 0.8898 ) }
    dend_50 { pt3dadd( 460.117, 316.685, 70.2612, 0.7626 ) }
    dend_50 { pt3dadd( 461.213, 316.679, 71.0114, 0.7118 ) }
    dend_50 { pt3dadd( 462.269, 316.422, 71.8276, 0.661 ) }
    dend_50 { pt3dadd( 463.279, 315.922, 71.6327, 0.661 ) }
    dend_50 { pt3dadd( 464.341, 315.535, 71.2127, 0.6102 ) }
    dend_50 { pt3dadd( 465.449, 315.282, 71.398, 0.7118 ) }
    dend_50 { pt3dadd( 466.503, 314.888, 71.8894, 0.8136 ) }
    dend_50 { pt3dadd( 467.564, 314.483, 72.2123, 0.9152 ) }
    dend_50 { pt3dadd( 468.667, 314.184, 72.24, 0.8898 ) }
    dend_50 { pt3dadd( 469.777, 313.908, 72.2408, 0.8136 ) }
    dend_50 { pt3dadd( 470.872, 313.576, 72.245, 0.7626 ) }
    dend_50 { pt3dadd( 471.936, 313.157, 72.2669, 0.7372 ) }
    dend_50 { pt3dadd( 472.964, 312.66, 72.3892, 0.788 ) }
    dend_50 { pt3dadd( 473.997, 312.201, 72.8283, 0.7626 ) }
    dend_50 { pt3dadd( 474.987, 311.663, 73.3074, 0.7372 ) }
    dend_50 { pt3dadd( 475.96, 311.071, 73.5445, 0.7626 ) }
    dend_50 { pt3dadd( 476.897, 310.597, 74.627, 0.839 ) }
    dend_50 { pt3dadd( 477.54, 309.706, 74.1126, 0.8898 ) }
    dend_50 { pt3dadd( 478.301, 308.914, 73.5039, 0.839 ) }
    dend_50 { pt3dadd( 479.168, 308.193, 73.7338, 0.7626 ) }
    dend_50 { pt3dadd( 480.075, 307.537, 74.317, 0.7372 ) }
    dend_50 { pt3dadd( 481.029, 306.974, 74.9776, 0.7118 ) }
    dend_50 { pt3dadd( 481.938, 306.344, 75.5723, 0.7118 ) }
    dend_50 { pt3dadd( 482.801, 305.644, 76.1975, 0.6102 ) }
    dend_50 { pt3dadd( 483.761, 305.068, 76.657, 0.5338 ) }
    dend_50 { pt3dadd( 484.792, 304.58, 76.8471, 0.4576 ) }
    dend_50 { pt3dadd( 485.824, 304.135, 77.3049, 0.483 ) }
    dend_50 { pt3dadd( 486.831, 303.636, 77.7358, 0.5084 ) }
    dend_50 { pt3dadd( 487.835, 303.092, 77.8355, 0.5848 ) }
    dend_50 { pt3dadd( 488.782, 302.461, 77.8431, 0.661 ) }
    dend_50 { pt3dadd( 489.69, 301.766, 77.8562, 0.7372 ) }
    dend_50 { pt3dadd( 490.558, 301.025, 77.9461, 0.7118 ) }
    dend_50 { pt3dadd( 491.459, 300.406, 78.519, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_50 { pt3dadd( 492.459, 299.916, 78.8903, 0.483 ) }
    dend_50 { pt3dadd( 493.482, 299.404, 78.7864, 0.4068 ) }
    dend_50 { pt3dadd( 494.427, 298.781, 78.5464, 0.3814 ) }
    dend_50 { pt3dadd( 495.344, 298.157, 78.902, 0.4068 ) }
    dend_50 { pt3dadd( 496.361, 297.664, 79.2254, 0.4576 ) }
    dend_50 { pt3dadd( 497.398, 297.239, 79.7549, 0.5592 ) }
    dend_50 { pt3dadd( 498.396, 297.103, 81.0107, 0.6356 ) }
    dend_50 { pt3dadd( 499.354, 296.559, 80.5216, 0.6864 ) }
    dend_50 { pt3dadd( 500.204, 295.867, 81.065, 0.6356 ) }
    dend_50 { pt3dadd( 501.146, 295.318, 80.3919, 0.5338 ) }
    dend_50 { pt3dadd( 502.04, 294.761, 81.0494, 0.3814 ) }
    dend_50 { pt3dadd( 502.951, 294.208, 81.6676, 0.305 ) }
    dend_50 { pt3dadd( 504.025, 293.82, 81.76, 0.3304 ) }
    dend_50 { pt3dadd( 504.989, 293.23, 81.5629, 0.4068 ) }
    dend_50 { pt3dadd( 505.774, 292.41, 81.5315, 0.4576 ) }
    dend_50 { pt3dadd( 506.672, 291.714, 81.5209, 0.4068 ) }
    dend_50 { pt3dadd( 507.652, 291.133, 81.6939, 0.356 ) }
    dend_50 { pt3dadd( 508.644, 290.568, 81.8546, 0.2796 ) }
    dend_50 { pt3dadd( 509.617, 289.999, 82.3234, 0.2796 ) }
    dend_50 { pt3dadd( 510.644, 289.51, 82.5756, 0.2796 ) }
    dend_50 { pt3dadd( 511.406, 288.696, 82.1442, 0.305 ) }
    dend_50 { pt3dadd( 511.972, 287.706, 82.1271, 0.305 ) }
    dend_50 { pt3dadd( 512.525, 286.739, 82.6, 0.3304 ) }
    dend_50 { pt3dadd( 513.432, 286.056, 82.6232, 0.356 ) }
    dend_50 { pt3dadd( 514.114, 285.139, 82.7378, 0.4068 ) }
    dend_50 { pt3dadd( 514.781, 284.216, 82.6725, 0.4322 ) }
    dend_50 { pt3dadd( 515.459, 283.345, 83.0519, 0.4576 ) }
    dend_50 { pt3dadd( 516.348, 282.684, 83.4224, 0.4576 ) }
    dend_50 { pt3dadd( 517.015, 281.829, 84.2106, 0.483 ) }
    dend_50 { pt3dadd( 517.95, 281.519, 84.8543, 0.5592 ) }
    dend_50 { pt3dadd( 518.73, 280.978, 84.6488, 0.5848 ) }
    dend_50 { pt3dadd( 519.615, 280.349, 84.9957, 0.5338 ) }
    dend_50 { pt3dadd( 520.615, 279.809, 85.3042, 0.4068 ) }
    dend_50 { pt3dadd( 521.112, 278.836, 85.9617, 0.3814 ) }
    dend_50 { pt3dadd( 521.973, 278.121, 86.5295, 0.4576 ) }
    dend_50 { pt3dadd( 522.786, 277.334, 86.8328, 0.5338 ) }
    dend_50 { pt3dadd( 523.803, 276.894, 87.4885, 0.5084 ) }
    dend_50 { pt3dadd( 524.59, 276.202, 88.2851, 0.4068 ) }
    dend_50 { pt3dadd( 525.042, 275.184, 88.76, 0.3304 ) }
    dend_50 { pt3dadd( 525.844, 274.455, 88.5122, 0.305 ) }
    dend_50 { pt3dadd( 526.689, 273.938, 89.0246, 0.356 ) }
    dend_50 { pt3dadd( 527.219, 273.089, 90.048, 0.483 ) }
    dend_50 { pt3dadd( 527.041, 272.043, 90.44, 0.661 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 43/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 427.054, 408.98, 72.24, 0.2288 ) }
    dend_47 { pt3dadd( 426.648, 409.823, 71.6288, 0.2288 ) }
    dend_47 { pt3dadd( 426.169, 410.818, 70.9066, 0.2542 ) }
    dend_47 { pt3dadd( 425.756, 411.851, 70.3385, 0.3304 ) }
    dend_47 { pt3dadd( 425.652, 412.96, 69.9331, 0.4068 ) }
    dend_47 { pt3dadd( 425.835, 414.066, 70.044, 0.4322 ) }
    dend_47 { pt3dadd( 426.08, 415.177, 70.2612, 0.356 ) }
    dend_47 { pt3dadd( 426.139, 416.314, 70.28, 0.305 ) }
    dend_47 { pt3dadd( 426.503, 417.378, 70.28, 0.3304 ) }
    dend_47 { pt3dadd( 427.094, 418.35, 70.0339, 0.4576 ) }
    dend_47 { pt3dadd( 427.591, 419.373, 69.7407, 0.5338 ) }
    dend_47 { pt3dadd( 428.064, 420.255, 71.0111, 0.5338 ) }
    dend_47 { pt3dadd( 428.426, 421.091, 72.539, 0.4322 ) }
    dend_47 { pt3dadd( 428.658, 422.011, 72.3562, 0.4068 ) }
    dend_47 { pt3dadd( 429.069, 423.041, 71.7296, 0.3814 ) }
    dend_47 { pt3dadd( 429.322, 424.116, 72.3316, 0.4068 ) }
    dend_47 { pt3dadd( 429.689, 424.886, 73.768, 0.3814 ) }
    dend_47 { pt3dadd( 429.769, 425.885, 72.6228, 0.4068 ) }
    dend_47 { pt3dadd( 429.733, 426.777, 71.0805, 0.4576 ) }
    dend_47 { pt3dadd( 429.699, 427.885, 70.8173, 0.483 ) }
    dend_47 { pt3dadd( 430.089, 428.769, 71.0844, 0.483 ) }
    dend_47 { pt3dadd( 430.644, 429.724, 70.6782, 0.4322 ) }
    dend_47 { pt3dadd( 431.122, 430.645, 71.671, 0.4068 ) }
    dend_47 { pt3dadd( 431.325, 431.771, 71.6736, 0.3814 ) }
    dend_47 { pt3dadd( 431.407, 432.906, 71.4599, 0.4322 ) }
    dend_47 { pt3dadd( 431.929, 433.905, 71.2684, 0.483 ) }
    dend_47 { pt3dadd( 432.791, 434.531, 70.9649, 0.5084 ) }
    dend_47 { pt3dadd( 433.778, 434.931, 71.3017, 0.4576 ) }
    dend_47 { pt3dadd( 434.616, 435.657, 71.755, 0.3814 ) }
    dend_47 { pt3dadd( 435.426, 436.435, 71.8729, 0.3304 ) }
    dend_47 { pt3dadd( 436.337, 437.11, 71.9524, 0.3304 ) }
    dend_47 { pt3dadd( 436.944, 437.941, 73.0327, 0.4576 ) }
    dend_47 { pt3dadd( 437.802, 438.689, 72.821, 0.661 ) }
    dend_47 { pt3dadd( 438.57, 439.499, 72.6692, 0.8136 ) }
    dend_47 { pt3dadd( 439.078, 440.511, 72.6356, 0.788 ) }
    dend_47 { pt3dadd( 439.631, 441.374, 73.369, 0.6102 ) }
    dend_47 { pt3dadd( 440.023, 442.396, 73.8094, 0.4322 ) }
    dend_47 { pt3dadd( 440.638, 443.219, 72.7874, 0.3304 ) }
    dend_47 { pt3dadd( 441.264, 444.165, 72.7264, 0.305 ) }
    dend_47 { pt3dadd( 442.081, 444.955, 72.5659, 0.305 ) }
    dend_47 { pt3dadd( 442.704, 445.874, 72.2714, 0.2796 ) }
    dend_47 { pt3dadd( 443.236, 446.861, 72.2434, 0.2542 ) }
    dend_47 { pt3dadd( 444.102, 447.476, 72.8784, 0.2288 ) }
    dend_47 { pt3dadd( 444.65, 448.266, 73.8489, 0.2288 ) }
    dend_47 { pt3dadd( 445.006, 449.323, 74.4024, 0.2288 ) }
    dend_47 { pt3dadd( 445.451, 450.37, 74.6833, 0.2288 ) }
    dend_47 { pt3dadd( 446.114, 451.283, 74.76, 0.2288 ) }
    dend_47 { pt3dadd( 447.066, 451.878, 74.9736, 0.2288 ) }
    dend_47 { pt3dadd( 447.737, 452.753, 74.7782, 0.2542 ) }
    dend_47 { pt3dadd( 448.234, 453.781, 74.7734, 0.305 ) }
    dend_47 { pt3dadd( 448.742, 454.756, 75.3872, 0.356 ) }
    dend_47 { pt3dadd( 449.479, 455.507, 76.1127, 0.356 ) }
    dend_47 { pt3dadd( 450.081, 456.361, 76.6962, 0.305 ) }
    dend_47 { pt3dadd( 450.934, 457.07, 77.114, 0.2542 ) }
    dend_47 { pt3dadd( 451.794, 457.76, 77.5561, 0.2542 ) }
    dend_47 { pt3dadd( 452.644, 458.509, 77.56, 0.2796 ) }
    dend_47 { pt3dadd( 453.411, 459.168, 78.5988, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_47 { pt3dadd( 453.702, 460.08, 79.9484, 0.305 ) }
    dend_47 { pt3dadd( 454.51, 460.803, 79.52, 0.305 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 2/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 427.054, 408.98, 72.24, 0.2288 ) }
    dend_46 { pt3dadd( 427.139, 409.354, 72.3657, 0.305 ) }
    dend_46 { pt3dadd( 427.477, 410.418, 72.9277, 0.2796 ) }
    dend_46 { pt3dadd( 427.876, 411.477, 73.2063, 0.2796 ) }
    dend_46 { pt3dadd( 428.641, 411.954, 74.1698, 0.3304 ) }
    dend_46 { pt3dadd( 429.696, 411.967, 74.387, 0.4322 ) }
    dend_46 { pt3dadd( 430.3, 412.673, 75.1428, 0.5338 ) }
    dend_46 { pt3dadd( 430.991, 413.554, 75.6706, 0.6102 ) }
    dend_46 { pt3dadd( 431.604, 414.382, 76.2059, 0.6864 ) }
    dend_46 { pt3dadd( 432.417, 414.817, 75.9091, 0.7118 ) }
    dend_46 { pt3dadd( 433.157, 415.304, 77.005, 0.7118 ) }
    dend_46 { pt3dadd( 433.91, 416.107, 76.8544, 0.6864 ) }
    dend_46 { pt3dadd( 433.935, 416.583, 79.0339, 0.6864 ) }
    dend_46 { pt3dadd( 434.646, 417.377, 79.3366, 0.6102 ) }
    dend_46 { pt3dadd( 434.893, 418.056, 81.384, 0.5338 ) }
    dend_46 { pt3dadd( 434.772, 418.461, 83.7824, 0.483 ) }
    dend_46 { pt3dadd( 434.57, 419.504, 84.3937, 0.5084 ) }
    dend_46 { pt3dadd( 434.902, 420.373, 84.544, 0.5084 ) }
    dend_46 { pt3dadd( 435.897, 420.541, 85.731, 0.4322 ) }
    dend_46 { pt3dadd( 436.703, 420.618, 87.6215, 0.356 ) }
    dend_46 { pt3dadd( 437.676, 420.649, 88.9445, 0.305 ) }
    dend_46 { pt3dadd( 438.68, 420.649, 90.281, 0.305 ) }
    dend_46 { pt3dadd( 439.781, 420.544, 90.3496, 0.356 ) }
    dend_46 { pt3dadd( 440.077, 420.831, 87.8679, 0.4068 ) }
    dend_46 { pt3dadd( 440.718, 421.572, 89.1878, 0.4576 ) }
    dend_46 { pt3dadd( 441.298, 422.222, 90.8085, 0.4068 ) }
    dend_46 { pt3dadd( 441.943, 423.108, 91.2727, 0.356 ) }
    dend_46 { pt3dadd( 442.4, 424.114, 91.0426, 0.3304 ) }
    dend_46 { pt3dadd( 442.646, 424.521, 93.2028, 0.4068 ) }
    dend_46 { pt3dadd( 442.969, 425.279, 94.7377, 0.5084 ) }
    dend_46 { pt3dadd( 443.363, 426.264, 93.8557, 0.5592 ) }
    dend_46 { pt3dadd( 443.747, 427.328, 94.0766, 0.5338 ) }
    dend_46 { pt3dadd( 443.904, 428.459, 94.1422, 0.4322 ) }
    dend_46 { pt3dadd( 444.055, 429.587, 94.2752, 0.3814 ) }
    dend_46 { pt3dadd( 444.277, 430.702, 93.9823, 0.3304 ) }
    dend_46 { pt3dadd( 444.508, 431.813, 93.6502, 0.3304 ) }
    dend_46 { pt3dadd( 444.663, 432.941, 93.52, 0.2796 ) }
    dend_46 { pt3dadd( 444.672, 434.06, 93.8375, 0.2796 ) }
    dend_46 { pt3dadd( 444.699, 435.146, 94.6663, 0.3304 ) }
    dend_46 { pt3dadd( 444.766, 436.263, 95.2148, 0.4322 ) }
    dend_46 { pt3dadd( 444.787, 437.352, 95.067, 0.483 ) }
    dend_46 { pt3dadd( 444.711, 438.417, 94.0794, 0.4576 ) }
    dend_46 { pt3dadd( 444.594, 439.534, 93.7513, 0.3814 ) }
    dend_46 { pt3dadd( 444.387, 440.656, 93.7838, 0.356 ) }
    dend_46 { pt3dadd( 444.196, 441.78, 94.012, 0.3304 ) }
    dend_46 { pt3dadd( 444.251, 442.659, 95.6192, 0.356 ) }
    dend_46 { pt3dadd( 444.426, 443.695, 96.5653, 0.3814 ) }
    dend_46 { pt3dadd( 444.214, 444.762, 95.7491, 0.4576 ) }
    dend_46 { pt3dadd( 444.219, 445.881, 95.258, 0.5084 ) }
    dend_46 { pt3dadd( 444.079, 446.98, 95.4915, 0.483 ) }
    dend_46 { pt3dadd( 443.702, 448.032, 95.9025, 0.4068 ) }
    dend_46 { pt3dadd( 443.269, 449.022, 96.3413, 0.305 ) }
    dend_46 { pt3dadd( 442.74, 449.999, 96.7369, 0.2796 ) }
    dend_46 { pt3dadd( 442.306, 451.053, 96.691, 0.356 ) }
    dend_46 { pt3dadd( 441.858, 452.104, 96.6, 0.4576 ) }
    dend_46 { pt3dadd( 441.552, 453.201, 96.6, 0.5084 ) }
    dend_46 { pt3dadd( 441.328, 454.324, 96.6, 0.4068 ) }
    dend_46 { pt3dadd( 441.097, 455.439, 96.3866, 0.3304 ) }
    dend_46 { pt3dadd( 440.749, 456.523, 96.4541, 0.2796 ) }
    dend_46 { pt3dadd( 440.748, 457.504, 97.708, 0.356 ) }
    dend_46 { pt3dadd( 441.279, 458.414, 97.5531, 0.4322 ) }
    dend_46 { pt3dadd( 441.785, 459.211, 98.7694, 0.5084 ) }
    dend_46 { pt3dadd( 442.2, 460.266, 98.5653, 0.483 ) }
    dend_46 { pt3dadd( 442.377, 461.374, 98.28, 0.3814 ) }
    dend_46 { pt3dadd( 442.384, 462.518, 98.28, 0.305 ) }
    dend_46 { pt3dadd( 442.444, 463.621, 98.756, 0.2796 ) }
    dend_46 { pt3dadd( 442.565, 464.721, 99.2883, 0.305 ) }
    dend_46 { pt3dadd( 442.613, 465.862, 99.4081, 0.2796 ) }
    dend_46 { pt3dadd( 442.616, 466.966, 100.009, 0.2796 ) }
    dend_46 { pt3dadd( 442.633, 468.078, 100.52, 0.3304 ) }
    dend_46 { pt3dadd( 442.434, 469.165, 101.006, 0.4068 ) }
    dend_46 { pt3dadd( 442.457, 470.294, 101.052, 0.4322 ) }
    dend_46 { pt3dadd( 442.392, 471.433, 100.92, 0.356 ) }
    dend_46 { pt3dadd( 442.415, 472.562, 101.324, 0.3304 ) }
    dend_46 { pt3dadd( 442.841, 473.616, 101.36, 0.356 ) }
    // Section: dend_44, id: dend_44, parent: dend_38 (entry count 77/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 381.478, 400.067, 47.7249, 0.6102 ) }
    dend_44 { pt3dadd( 381.485, 400.44, 47.584, 0.2542 ) }
    dend_44 { pt3dadd( 381.504, 401.57, 47.1565, 0.2796 ) }
    dend_44 { pt3dadd( 381.523, 402.701, 46.7289, 0.3304 ) }
    dend_44 { pt3dadd( 381.513, 403.251, 46.6796, 0.356 ) }
    dend_44 { pt3dadd( 381.62, 404.386, 46.48, 0.4322 ) }
    dend_44 { pt3dadd( 381.899, 405.492, 46.4279, 0.4576 ) }
    dend_44 { pt3dadd( 382.161, 406.581, 45.9824, 0.483 ) }
    dend_44 { pt3dadd( 382.363, 407.691, 46.2196, 0.4576 ) }
    dend_44 { pt3dadd( 382.553, 408.807, 45.8352, 0.483 ) }
    dend_44 { pt3dadd( 382.986, 409.84, 45.64, 0.483 ) }
    dend_44 { pt3dadd( 383.507, 410.854, 45.8158, 0.5084 ) }
    dend_44 { pt3dadd( 383.69, 411.95, 46.1916, 0.5084 ) }
    dend_44 { pt3dadd( 383.969, 413.002, 45.9754, 0.6102 ) }
    dend_44 { pt3dadd( 384.16, 414.057, 45.071, 0.6864 ) }
    dend_44 { pt3dadd( 384.382, 415.114, 44.6995, 0.7626 ) }
    dend_44 { pt3dadd( 384.773, 416.16, 44.3806, 0.6864 ) }
    dend_44 { pt3dadd( 385.049, 417.261, 44.1599, 0.5592 ) }
    dend_44 { pt3dadd( 385.609, 418.195, 43.4042, 0.483 ) }
    dend_44 { pt3dadd( 385.842, 419.308, 43.6755, 0.5338 ) }
    dend_44 { pt3dadd( 385.892, 420.413, 44.0751, 0.661 ) }
    dend_44 { pt3dadd( 385.639, 421.479, 43.4706, 0.6864 ) }
    dend_44 { pt3dadd( 385.632, 422.512, 42.3942, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_44 { pt3dadd( 385.493, 423.627, 42.2523, 0.661 ) }
    dend_44 { pt3dadd( 384.901, 424.542, 42.5429, 0.7118 ) }
    dend_44 { pt3dadd( 384.164, 425.241, 41.832, 0.6864 ) }
    dend_44 { pt3dadd( 384.004, 426.204, 40.6232, 0.6102 ) }
    dend_44 { pt3dadd( 384.042, 427.25, 40.0252, 0.5084 ) }
    dend_44 { pt3dadd( 384.288, 428.219, 39.3414, 0.4576 ) }
    dend_44 { pt3dadd( 385.044, 429.055, 39.5318, 0.5084 ) }
    dend_44 { pt3dadd( 385.988, 429.599, 38.962, 0.5338 ) }
    dend_44 { pt3dadd( 386.912, 430.122, 39.6155, 0.5592 ) }
    dend_44 { pt3dadd( 387.7, 430.921, 39.5038, 0.483 ) }
    dend_44 { pt3dadd( 388.139, 431.97, 39.2837, 0.4576 ) }
    dend_44 { pt3dadd( 388.373, 433.083, 39.1784, 0.4322 ) }
    dend_44 { pt3dadd( 388.493, 434.169, 38.4406, 0.483 ) }
    dend_44 { pt3dadd( 388.528, 435.31, 38.4997, 0.4576 ) }
    dend_44 { pt3dadd( 388.603, 436.446, 38.5764, 0.4322 ) }
    dend_44 { pt3dadd( 388.61, 437.585, 38.579, 0.3814 ) }
    dend_44 { pt3dadd( 388.712, 438.722, 38.7192, 0.3814 ) }
    dend_44 { pt3dadd( 388.783, 439.847, 38.5655, 0.4068 ) }
    dend_44 { pt3dadd( 388.827, 440.949, 38.5496, 0.4068 ) }
    dend_44 { pt3dadd( 388.886, 442.061, 38.6498, 0.4068 ) }
    dend_44 { pt3dadd( 388.688, 443.11, 37.9106, 0.356 ) }
    dend_44 { pt3dadd( 388.145, 444.097, 37.6348, 0.356 ) }
    dend_44 { pt3dadd( 387.719, 445.135, 38.015, 0.3814 ) }
    dend_44 { pt3dadd( 387.706, 446.276, 37.8454, 0.4068 ) }
    dend_44 { pt3dadd( 387.741, 447.396, 37.2946, 0.3814 ) }
    dend_44 { pt3dadd( 387.871, 448.52, 36.946, 0.305 ) }
    dend_44 { pt3dadd( 388.045, 449.629, 37.168, 0.2542 ) }
    dend_44 { pt3dadd( 388.054, 450.734, 37.6127, 0.2542 ) }
    dend_44 { pt3dadd( 387.905, 451.832, 37.128, 0.305 ) }
    dend_44 { pt3dadd( 387.667, 452.917, 36.5257, 0.3814 ) }
    dend_44 { pt3dadd( 387.649, 454.034, 36.6391, 0.4068 ) }
    dend_44 { pt3dadd( 387.561, 455.102, 36.2625, 0.4068 ) }
    dend_44 { pt3dadd( 387.196, 456.124, 35.4301, 0.356 ) }
    dend_44 { pt3dadd( 387.103, 457.211, 34.6699, 0.3304 ) }
    dend_44 { pt3dadd( 387.43, 458.274, 34.0844, 0.305 ) }
    dend_44 { pt3dadd( 387.604, 459.402, 34.1625, 0.3304 ) }
    dend_44 { pt3dadd( 388.229, 460.353, 34.2913, 0.356 ) }
    dend_44 { pt3dadd( 388.853, 461.281, 33.7159, 0.356 ) }
    dend_44 { pt3dadd( 388.984, 462.255, 33.5143, 0.305 ) }
    dend_44 { pt3dadd( 388.751, 463.358, 33.7884, 0.2796 ) }
    dend_44 { pt3dadd( 388.89, 464.474, 33.7702, 0.305 ) }
    dend_44 { pt3dadd( 389.072, 465.6, 33.7677, 0.356 ) }
    dend_44 { pt3dadd( 388.883, 466.711, 33.7294, 0.3814 ) }
    dend_44 { pt3dadd( 388.849, 467.84, 33.3799, 0.356 ) }
    dend_44 { pt3dadd( 389.03, 468.959, 33.6554, 0.3304 ) }
    dend_44 { pt3dadd( 388.933, 470.07, 33.1058, 0.2796 ) }
    dend_44 { pt3dadd( 388.728, 471.191, 33.3122, 0.305 ) }
    dend_44 { pt3dadd( 388.421, 472.279, 33.3698, 0.356 ) }
    dend_44 { pt3dadd( 387.796, 473.186, 32.8048, 0.4322 ) }
    dend_44 { pt3dadd( 387.059, 474.011, 32.3985, 0.4068 ) }
    dend_44 { pt3dadd( 386.481, 474.985, 32.1107, 0.3814 ) }
    dend_44 { pt3dadd( 385.822, 475.887, 31.579, 0.3814 ) }
    dend_44 { pt3dadd( 385.276, 476.799, 30.5696, 0.4322 ) }
    dend_44 { pt3dadd( 384.852, 477.827, 30.0247, 0.4576 ) }
    dend_44 { pt3dadd( 384.598, 478.917, 29.4876, 0.4576 ) }
    dend_44 { pt3dadd( 384.295, 479.954, 28.5844, 0.483 ) }
    dend_44 { pt3dadd( 383.736, 480.764, 29.6324, 0.483 ) }
    dend_44 { pt3dadd( 382.975, 481.425, 28.4466, 0.4576 ) }
    dend_44 { pt3dadd( 382.04, 482.042, 28.0454, 0.3814 ) }
    dend_44 { pt3dadd( 381.189, 482.743, 27.3148, 0.3304 ) }
    dend_44 { pt3dadd( 380.14, 483.083, 27.1718, 0.305 ) }
    dend_44 { pt3dadd( 379.164, 483.643, 27.4299, 0.3304 ) }
    dend_44 { pt3dadd( 378.34, 484.415, 27.7416, 0.356 ) }
    dend_44 { pt3dadd( 377.405, 484.903, 26.819, 0.4068 ) }
    dend_44 { pt3dadd( 376.46, 485.485, 27.4459, 0.4068 ) }
    dend_44 { pt3dadd( 375.438, 485.995, 27.4963, 0.4322 ) }
    dend_44 { pt3dadd( 374.522, 486.628, 27.1617, 0.4322 ) }
    dend_44 { pt3dadd( 373.827, 487.463, 26.614, 0.4576 ) }
    dend_44 { pt3dadd( 373.27, 488.428, 27.0816, 0.4068 ) }
    dend_44 { pt3dadd( 372.668, 489.368, 27.6251, 0.3304 ) }
    dend_44 { pt3dadd( 371.995, 490.281, 27.456, 0.2542 ) }
    dend_44 { pt3dadd( 371.675, 491.357, 27.0598, 0.2288 ) }
    dend_44 { pt3dadd( 370.678, 491.846, 26.8604, 0.2288 ) }
    dend_44 { pt3dadd( 369.937, 492.701, 26.4583, 0.2288 ) }
    dend_44 { pt3dadd( 369.212, 493.543, 26.0336, 0.2288 ) }
    dend_44 { pt3dadd( 368.552, 494.341, 25.48, 0.2288 ) }
    dend_44 { pt3dadd( 367.899, 495.077, 25.48, 0.2288 ) }
    dend_44 { pt3dadd( 367.62, 496.168, 25.48, 0.2542 ) }
    dend_44 { pt3dadd( 367.027, 497.14, 25.4906, 0.3304 ) }
    dend_44 { pt3dadd( 366.438, 498.11, 25.4887, 0.4322 ) }
    dend_44 { pt3dadd( 366.165, 499.172, 25.0188, 0.483 ) }
    dend_44 { pt3dadd( 366.146, 500.271, 24.2626, 0.4576 ) }
    dend_44 { pt3dadd( 366.136, 501.396, 23.767, 0.3814 ) }
    dend_44 { pt3dadd( 366.275, 502.525, 23.6981, 0.3304 ) }
    dend_44 { pt3dadd( 366.651, 503.589, 24.08, 0.2796 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 85/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 381.478, 400.067, 47.7249, 0.6102 ) }
    dend_39 { pt3dadd( 380.875, 400.979, 48.2334, 0.7626 ) }
    dend_39 { pt3dadd( 380.227, 401.897, 48.748, 0.661 ) }
    dend_39 { pt3dadd( 379.682, 402.897, 49.0137, 0.661 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 316.921, 374.796, 37.5357, 0.5592 ) }
    dend_35 { pt3dadd( 316.531, 375.391, 37.3318, 0.305 ) }
    dend_35 { pt3dadd( 315.909, 376.341, 37.0056, 0.2542 ) }
    dend_35 { pt3dadd( 315.285, 377.291, 36.68, 0.2288 ) }
    dend_35 { pt3dadd( 314.83, 377.809, 36.6766, 0.2542 ) }
    dend_35 { pt3dadd( 313.71, 378.023, 36.5576, 0.2796 ) }
    dend_35 { pt3dadd( 312.684, 378.399, 35.9419, 0.356 ) }
    dend_35 { pt3dadd( 311.724, 378.838, 36.5456, 0.4068 ) }
    dend_35 { pt3dadd( 310.735, 379.134, 35.684, 0.5084 ) }
    dend_35 { pt3dadd( 309.657, 379.338, 35.5639, 0.5338 ) }
    dend_35 { pt3dadd( 308.656, 379.678, 34.5181, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_35 { pt3dadd( 307.615, 380.061, 34.5943, 0.5592 ) }
    dend_35 { pt3dadd( 306.62, 380.485, 33.9758, 0.5592 ) }
    dend_35 { pt3dadd( 305.572, 380.902, 33.7842, 0.5592 ) }
    dend_35 { pt3dadd( 304.607, 381.485, 33.3987, 0.4576 ) }
    dend_35 { pt3dadd( 303.718, 382.124, 32.8241, 0.4068 ) }
    dend_35 { pt3dadd( 302.78, 382.596, 31.7204, 0.356 ) }
    dend_35 { pt3dadd( 301.742, 382.937, 31.103, 0.4068 ) }
    dend_35 { pt3dadd( 300.884, 383.011, 29.5249, 0.4322 ) }
    dend_35 { pt3dadd( 300.551, 383.893, 28.842, 0.4322 ) }
    dend_35 { pt3dadd( 300.545, 385.021, 29.2006, 0.4068 ) }
    dend_35 { pt3dadd( 300.102, 385.805, 27.6892, 0.3814 ) }
    dend_35 { pt3dadd( 299.221, 386.14, 26.161, 0.4322 ) }
    dend_35 { pt3dadd( 298.21, 386.145, 25.1278, 0.5084 ) }
    dend_35 { pt3dadd( 297.21, 386.443, 25.76, 0.6102 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 14/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 316.921, 374.796, 37.5357, 0.5592 ) }
    dend_34 { pt3dadd( 316.307, 374.591, 38.4269, 0.6102 ) }
    dend_34 { pt3dadd( 315.323, 374.249, 39.5822, 0.5848 ) }
    dend_34 { pt3dadd( 314.291, 373.916, 40.4676, 0.5338 ) }
    dend_34 { pt3dadd( 313.182, 373.69, 40.8223, 0.6102 ) }
    dend_34 { pt3dadd( 312.041, 373.63, 40.8873, 0.661 ) }
    dend_34 { pt3dadd( 310.897, 373.61, 40.9609, 0.661 ) }
    dend_34 { pt3dadd( 309.898, 373.225, 41.8743, 0.5338 ) }
    dend_34 { pt3dadd( 308.917, 373.682, 41.1883, 0.4068 ) }
    dend_34 { pt3dadd( 307.976, 374.229, 40.3186, 0.3304 ) }
    dend_34 { pt3dadd( 307.036, 374.774, 39.4489, 0.305 ) }
    dend_34 { pt3dadd( 305.739, 375.075, 40.8579, 0.3814 ) }
    dend_34 { pt3dadd( 304.819, 375.295, 40.4998, 0.4068 ) }
    dend_34 { pt3dadd( 304.416, 376.153, 40.8876, 0.3814 ) }
    dend_34 { pt3dadd( 303.75, 377.05, 41.0903, 0.356 ) }
    dend_34 { pt3dadd( 302.787, 377.575, 40.4272, 0.3814 ) }
    dend_34 { pt3dadd( 301.846, 378.023, 40.4869, 0.483 ) }
    dend_34 { pt3dadd( 300.899, 378.513, 41.3577, 0.5592 ) }
    dend_34 { pt3dadd( 300.149, 379.155, 40.0882, 0.6102 ) }
    dend_34 { pt3dadd( 299.291, 379.896, 40.1797, 0.5592 ) }
    dend_34 { pt3dadd( 298.663, 380.784, 40.7204, 0.483 ) }
    dend_34 { pt3dadd( 297.988, 381.539, 39.9504, 0.4068 ) }
    dend_34 { pt3dadd( 297.02, 382.047, 40.4533, 0.4322 ) }
    dend_34 { pt3dadd( 296.142, 382.596, 41.2166, 0.483 ) }
    dend_34 { pt3dadd( 295.173, 383.083, 41.9026, 0.5338 ) }
    dend_34 { pt3dadd( 294.075, 383.326, 42.0031, 0.5084 ) }
    dend_34 { pt3dadd( 293.087, 383.691, 41.125, 0.4576 ) }
    dend_34 { pt3dadd( 292.163, 384.319, 41.1314, 0.4322 ) }
    dend_34 { pt3dadd( 291.161, 384.588, 42.1277, 0.4068 ) }
    dend_34 { pt3dadd( 290.329, 385.224, 41.3955, 0.4576 ) }
    dend_34 { pt3dadd( 289.47, 385.549, 41.3263, 0.483 ) }
    dend_34 { pt3dadd( 288.446, 385.879, 40.9909, 0.5592 ) }
    dend_34 { pt3dadd( 287.602, 386.587, 41.4252, 0.5338 ) }
    dend_34 { pt3dadd( 286.576, 386.815, 41.9031, 0.5084 ) }
    dend_34 { pt3dadd( 285.659, 387.138, 41.5019, 0.4576 ) }
    dend_34 { pt3dadd( 284.698, 387.515, 41.7385, 0.4576 ) }
    dend_34 { pt3dadd( 283.76, 388.041, 41.7186, 0.4068 ) }
    dend_34 { pt3dadd( 282.895, 388.648, 41.2031, 0.3304 ) }
    dend_34 { pt3dadd( 282.122, 389.365, 40.1402, 0.2542 ) }
    dend_34 { pt3dadd( 281.981, 389.987, 37.9548, 0.2288 ) }
    dend_34 { pt3dadd( 281.047, 390.117, 36.6568, 0.2288 ) }
    dend_34 { pt3dadd( 279.996, 390.358, 37.4282, 0.2542 ) }
    dend_34 { pt3dadd( 279.384, 390.608, 39.6886, 0.305 ) }
    dend_34 { pt3dadd( 278.776, 390.622, 42.0358, 0.3814 ) }
    dend_34 { pt3dadd( 278.065, 391.238, 42.8532, 0.4322 ) }
    dend_34 { pt3dadd( 277.05, 391.35, 43.4798, 0.4322 ) }
    dend_34 { pt3dadd( 275.916, 391.349, 43.7685, 0.3814 ) }
    dend_34 { pt3dadd( 274.885, 391.32, 42.6132, 0.305 ) }
    dend_34 { pt3dadd( 273.812, 391.303, 41.6427, 0.2796 ) }
    dend_34 { pt3dadd( 272.745, 391.044, 42.1957, 0.3304 ) }
    dend_34 { pt3dadd( 271.972, 390.977, 43.2648, 0.4322 ) }
    dend_34 { pt3dadd( 271.108, 390.388, 42.6188, 0.483 ) }
    dend_34 { pt3dadd( 270.128, 390.296, 42.2058, 0.4322 ) }
    dend_34 { pt3dadd( 269.023, 390.317, 41.7889, 0.356 ) }
    dend_34 { pt3dadd( 267.967, 390.361, 42.6877, 0.3304 ) }
    dend_34 { pt3dadd( 266.904, 390.172, 42.0034, 0.4068 ) }
    dend_34 { pt3dadd( 265.837, 389.785, 42.3279, 0.483 ) }
    dend_34 { pt3dadd( 264.775, 389.667, 42.4474, 0.5592 ) }
    dend_34 { pt3dadd( 263.784, 389.807, 43.0702, 0.5338 ) }
    dend_34 { pt3dadd( 262.751, 390.198, 43.05, 0.483 ) }
    dend_34 { pt3dadd( 261.673, 390.541, 43.2925, 0.3814 ) }
    dend_34 { pt3dadd( 260.624, 390.927, 42.8058, 0.3304 ) }
    dend_34 { pt3dadd( 259.572, 390.899, 41.8802, 0.305 ) }
    dend_34 { pt3dadd( 258.472, 390.738, 42.1372, 0.2796 ) }
    dend_34 { pt3dadd( 257.441, 390.333, 42.28, 0.2542 ) }
    dend_34 { pt3dadd( 256.297, 390.319, 42.28, 0.2542 ) }
    dend_34 { pt3dadd( 255.41, 389.946, 42.4043, 0.2796 ) }
    dend_34 { pt3dadd( 254.931, 388.953, 42.9288, 0.305 ) }
    dend_34 { pt3dadd( 254.286, 388.055, 43.6307, 0.2796 ) }
    dend_34 { pt3dadd( 253.548, 387.222, 43.96, 0.2542 ) }
    dend_34 { pt3dadd( 252.928, 386.307, 43.96, 0.2288 ) }
    dend_34 { pt3dadd( 252.436, 385.279, 43.96, 0.2542 ) }
    dend_34 { pt3dadd( 251.816, 384.334, 43.6481, 0.2796 ) }
    dend_34 { pt3dadd( 251.08, 383.502, 43.0287, 0.305 ) }
    dend_34 { pt3dadd( 250.389, 382.613, 42.9428, 0.2796 ) }
    dend_34 { pt3dadd( 249.94, 381.57, 42.8767, 0.2542 ) }
    dend_34 { pt3dadd( 249.64, 380.468, 42.8464, 0.2288 ) }
    dend_34 { pt3dadd( 249.438, 379.345, 43.0055, 0.2542 ) }
    dend_34 { pt3dadd( 249.143, 378.241, 43.1038, 0.305 ) }
    dend_34 { pt3dadd( 248.723, 377.181, 42.9316, 0.4322 ) }
    dend_34 { pt3dadd( 248.018, 376.376, 42.0, 0.5592 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 400.628, 394.465, 32.2196, 0.661 ) }
    dend_28 { pt3dadd( 401.246, 395.647, 33.4989, 0.661 ) }
    dend_28 { pt3dadd( 401.284, 396.733, 34.2644, 0.6864 ) }
    dend_28 { pt3dadd( 401.191, 397.829, 35.0342, 0.7118 ) }
    dend_28 { pt3dadd( 401.458, 398.933, 35.2181, 0.7626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_28 { pt3dadd( 401.83, 400.012, 35.0291, 0.7626 ) }
    dend_28 { pt3dadd( 402.255, 401.049, 34.4644, 0.6864 ) }
    dend_28 { pt3dadd( 403.023, 401.876, 34.792, 0.6864 ) }
    dend_28 { pt3dadd( 403.87, 402.392, 36.1729, 0.661 ) }
    dend_28 { pt3dadd( 404.679, 402.686, 38.0153, 0.6356 ) }
    dend_28 { pt3dadd( 405.462, 403.465, 38.6968, 0.5592 ) }
    dend_28 { pt3dadd( 405.703, 404.562, 39.2056, 0.5592 ) }
    dend_28 { pt3dadd( 405.953, 405.651, 39.8124, 0.5848 ) }
    dend_28 { pt3dadd( 406.118, 406.77, 40.2237, 0.6356 ) }
    dend_28 { pt3dadd( 406.121, 407.884, 40.8624, 0.6356 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 10/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 400.628, 394.465, 32.2196, 0.661 ) }
    dend_25 { pt3dadd( 401.532, 394.607, 32.9381, 0.5338 ) }
    dend_25 { pt3dadd( 402.623, 394.673, 33.7495, 0.661 ) }
    dend_25 { pt3dadd( 403.756, 394.68, 34.102, 0.7626 ) }
    dend_25 { pt3dadd( 404.898, 394.679, 34.1572, 0.839 ) }
    dend_25 { pt3dadd( 406.042, 394.677, 34.16, 0.8644 ) }
    dend_25 { pt3dadd( 407.186, 394.656, 34.16, 0.839 ) }
    dend_25 { pt3dadd( 408.32, 394.505, 34.16, 0.7372 ) }
    dend_25 { pt3dadd( 409.445, 394.299, 34.16, 0.6356 ) }
    dend_25 { pt3dadd( 410.584, 394.205, 34.1603, 0.5592 ) }
    dend_25 { pt3dadd( 411.719, 394.063, 34.1622, 0.5592 ) }
    dend_25 { pt3dadd( 412.755, 393.595, 34.1729, 0.6102 ) }
    dend_25 { pt3dadd( 413.76, 393.047, 34.2322, 0.661 ) }
    dend_25 { pt3dadd( 414.773, 392.538, 34.5808, 0.661 ) }
    dend_25 { pt3dadd( 415.792, 392.061, 35.0865, 0.6102 ) }
    dend_25 { pt3dadd( 416.867, 391.682, 35.264, 0.6102 ) }
    dend_25 { pt3dadd( 418.004, 391.7, 35.2817, 0.6864 ) }
    dend_25 { pt3dadd( 419.131, 391.519, 35.2918, 0.788 ) }
    dend_25 { pt3dadd( 420.21, 391.141, 35.3553, 0.788 ) }
    dend_25 { pt3dadd( 421.233, 390.654, 35.7162, 0.661 ) }
    dend_25 { pt3dadd( 422.207, 390.097, 36.267, 0.5848 ) }
    dend_25 { pt3dadd( 423.276, 389.721, 36.6218, 0.5592 ) }
    dend_25 { pt3dadd( 424.382, 389.642, 37.2896, 0.661 ) }
    dend_25 { pt3dadd( 425.52, 389.601, 37.5211, 0.6864 ) }
    dend_25 { pt3dadd( 426.639, 389.371, 37.6572, 0.7118 ) }
    dend_25 { pt3dadd( 427.749, 389.217, 38.2077, 0.6356 ) }
    dend_25 { pt3dadd( 428.887, 389.219, 37.9775, 0.5592 ) }
    dend_25 { pt3dadd( 430.024, 389.306, 37.7605, 0.4576 ) }
    dend_25 { pt3dadd( 431.123, 389.143, 38.4104, 0.4576 ) }
    dend_25 { pt3dadd( 432.207, 388.792, 38.6582, 0.5084 ) }
    dend_25 { pt3dadd( 433.197, 388.223, 38.8142, 0.5848 ) }
    dend_25 { pt3dadd( 434.155, 387.649, 39.422, 0.5848 ) }
    dend_25 { pt3dadd( 435.161, 387.117, 39.7152, 0.5592 ) }
    dend_25 { pt3dadd( 436.154, 386.551, 39.6348, 0.5084 ) }
    dend_25 { pt3dadd( 437.082, 385.948, 38.9298, 0.483 ) }
    dend_25 { pt3dadd( 438.15, 385.553, 38.6501, 0.4576 ) }
    dend_25 { pt3dadd( 439.261, 385.281, 38.6406, 0.483 ) }
    dend_25 { pt3dadd( 440.293, 384.788, 38.6425, 0.5338 ) }
    dend_25 { pt3dadd( 441.311, 384.265, 38.6526, 0.5848 ) }
    dend_25 { pt3dadd( 442.328, 383.743, 38.7201, 0.6356 ) }
    dend_25 { pt3dadd( 443.261, 383.121, 39.2708, 0.7372 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 51/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 380.335, 416.339, 25.3271, 0.5848 ) }
    dend_22 { pt3dadd( 379.146, 417.369, 25.7289, 0.7372 ) }
    dend_22 { pt3dadd( 378.44, 417.902, 26.1534, 0.7372 ) }
    dend_22 { pt3dadd( 377.784, 418.805, 26.7092, 0.6864 ) }
    dend_22 { pt3dadd( 376.954, 419.522, 27.2054, 0.6102 ) }
    dend_22 { pt3dadd( 376.239, 420.277, 28.1299, 0.4576 ) }
    dend_22 { pt3dadd( 376.718, 421.221, 27.72, 0.356 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 58/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 380.335, 416.339, 25.3271, 0.5848 ) }
    dend_21 { pt3dadd( 380.296, 417.665, 26.4104, 0.4576 ) }
    dend_21 { pt3dadd( 380.766, 418.631, 27.1922, 0.5848 ) }
    dend_21 { pt3dadd( 381.516, 419.478, 27.4201, 0.661 ) }
    dend_21 { pt3dadd( 382.335, 420.276, 27.4445, 0.661 ) }
    dend_21 { pt3dadd( 383.215, 421.006, 27.461, 0.661 ) }
    dend_21 { pt3dadd( 384.288, 421.341, 27.5733, 0.6864 ) }
    dend_21 { pt3dadd( 385.406, 421.335, 28.0916, 0.7118 ) }
    dend_21 { pt3dadd( 386.509, 421.482, 28.721, 0.661 ) }
    dend_21 { pt3dadd( 387.622, 421.522, 29.3395, 0.5592 ) }
    dend_21 { pt3dadd( 388.758, 421.498, 29.657, 0.4576 ) }
    dend_21 { pt3dadd( 389.739, 422.05, 29.773, 0.4068 ) }
    dend_21 { pt3dadd( 390.603, 422.778, 30.2056, 0.3814 ) }
    dend_21 { pt3dadd( 391.596, 423.179, 31.1749, 0.4068 ) }
    dend_21 { pt3dadd( 392.527, 423.789, 31.8094, 0.4576 ) }
    dend_21 { pt3dadd( 393.294, 424.634, 31.9539, 0.5084 ) }
    dend_21 { pt3dadd( 394.274, 425.208, 32.1269, 0.5592 ) }
    dend_21 { pt3dadd( 395.379, 425.338, 32.7729, 0.5592 ) }
    dend_21 { pt3dadd( 396.506, 425.362, 33.2363, 0.5592 ) }
    dend_21 { pt3dadd( 397.641, 425.47, 33.3581, 0.5084 ) }
    dend_21 { pt3dadd( 398.7, 425.821, 33.885, 0.483 ) }
    dend_21 { pt3dadd( 399.633, 426.084, 35.3713, 0.4322 ) }
    dend_21 { pt3dadd( 400.619, 426.216, 36.4594, 0.4322 ) }
    dend_21 { pt3dadd( 401.697, 426.118, 36.0444, 0.4322 ) }
    dend_21 { pt3dadd( 402.725, 426.395, 35.8534, 0.4576 ) }
    dend_21 { pt3dadd( 403.723, 426.068, 35.5488, 0.4322 ) }
    dend_21 { pt3dadd( 404.81, 425.845, 35.765, 0.4068 ) }
    dend_21 { pt3dadd( 405.936, 426.013, 35.7437, 0.356 ) }
    dend_21 { pt3dadd( 407.064, 426.168, 35.9218, 0.3304 ) }
    dend_21 { pt3dadd( 408.135, 426.497, 36.4624, 0.3304 ) }
    dend_21 { pt3dadd( 409.069, 427.054, 37.079, 0.4068 ) }
    dend_21 { pt3dadd( 409.747, 427.923, 37.6191, 0.5084 ) }
    dend_21 { pt3dadd( 410.752, 428.417, 38.0909, 0.6102 ) }
    dend_21 { pt3dadd( 411.763, 428.878, 38.484, 0.661 ) }
    dend_21 { pt3dadd( 412.747, 429.329, 38.2147, 0.7118 ) }
    dend_21 { pt3dadd( 413.732, 429.8, 38.0792, 0.7372 ) }
    dend_21 { pt3dadd( 414.674, 430.438, 38.3485, 0.7626 ) }
    dend_21 { pt3dadd( 415.612, 431.044, 37.8725, 0.7626 ) }
    dend_21 { pt3dadd( 416.658, 431.458, 38.227, 0.7626 ) }
    dend_21 { pt3dadd( 417.66, 432.0, 38.4843, 0.7626 ) }
    dend_21 { pt3dadd( 418.725, 432.405, 38.4765, 0.788 ) }
    dend_21 { pt3dadd( 419.554, 433.156, 38.8063, 0.8136 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_21 { pt3dadd( 420.472, 433.649, 38.7106, 0.839 ) }
    dend_21 { pt3dadd( 421.456, 434.042, 39.6248, 0.788 ) }
    dend_21 { pt3dadd( 422.165, 434.863, 39.6978, 0.7118 ) }
    dend_21 { pt3dadd( 422.73, 435.823, 40.0604, 0.6102 ) }
    dend_21 { pt3dadd( 423.639, 436.367, 40.6608, 0.5338 ) }
    dend_21 { pt3dadd( 424.595, 436.886, 41.4372, 0.4576 ) }
    dend_21 { pt3dadd( 425.575, 437.269, 42.4564, 0.4068 ) }
    dend_21 { pt3dadd( 425.938, 438.092, 44.1112, 0.4068 ) }
    dend_21 { pt3dadd( 426.198, 439.19, 44.5572, 0.4576 ) }
    dend_21 { pt3dadd( 426.462, 440.286, 44.6874, 0.5338 ) }
    dend_21 { pt3dadd( 426.853, 441.246, 45.1623, 0.5848 ) }
    dend_21 { pt3dadd( 427.469, 442.109, 46.2132, 0.6102 ) }
    dend_21 { pt3dadd( 428.077, 443.025, 46.9703, 0.5592 ) }
    dend_21 { pt3dadd( 428.724, 443.779, 47.9979, 0.5084 ) }
    dend_21 { pt3dadd( 429.802, 444.007, 47.5168, 0.4322 ) }
    dend_21 { pt3dadd( 430.598, 444.754, 47.934, 0.5084 ) }
    dend_21 { pt3dadd( 431.516, 445.245, 47.88, 0.5848 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 17/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 420.06, 361.733, 26.32, 0.483 ) }
    dend_16 { pt3dadd( 420.504, 361.443, 26.32, 0.5084 ) }
    dend_16 { pt3dadd( 421.528, 361.056, 25.5984, 0.6102 ) }
    dend_16 { pt3dadd( 422.605, 360.956, 26.2828, 0.6864 ) }
    dend_16 { pt3dadd( 423.554, 361.448, 27.1491, 0.7626 ) }
    dend_16 { pt3dadd( 424.476, 361.912, 28.3472, 0.788 ) }
    dend_16 { pt3dadd( 425.583, 361.779, 28.5748, 0.8644 ) }
    dend_16 { pt3dadd( 426.679, 361.458, 28.7081, 0.839 ) }
    dend_16 { pt3dadd( 427.785, 361.217, 29.097, 0.788 ) }
    dend_16 { pt3dadd( 428.878, 360.914, 28.7918, 0.7118 ) }
    dend_16 { pt3dadd( 429.856, 360.334, 28.5911, 0.661 ) }
    dend_16 { pt3dadd( 430.721, 359.587, 28.6289, 0.661 ) }
    dend_16 { pt3dadd( 431.589, 358.848, 28.8518, 0.6864 ) }
    dend_16 { pt3dadd( 432.56, 358.297, 29.4454, 0.788 ) }
    dend_16 { pt3dadd( 433.63, 357.918, 29.7646, 0.8644 ) }
    dend_16 { pt3dadd( 434.694, 357.523, 30.1078, 0.8898 ) }
    dend_16 { pt3dadd( 435.743, 357.101, 30.5371, 0.8644 ) }
    dend_16 { pt3dadd( 436.766, 356.618, 30.1546, 0.8136 ) }
    dend_16 { pt3dadd( 437.8, 356.164, 29.7156, 0.788 ) }
    dend_16 { pt3dadd( 438.855, 355.724, 29.6806, 0.7626 ) }
    dend_16 { pt3dadd( 439.951, 355.394, 29.68, 0.7626 ) }
    dend_16 { pt3dadd( 441.088, 355.481, 29.68, 0.788 ) }
    dend_16 { pt3dadd( 442.227, 355.59, 29.68, 0.839 ) }
    dend_16 { pt3dadd( 443.202, 355.001, 29.68, 0.9406 ) }
    dend_16 { pt3dadd( 443.823, 354.04, 29.68, 0.9914 ) }
    dend_16 { pt3dadd( 444.517, 353.132, 29.6797, 0.9406 ) }
    dend_16 { pt3dadd( 445.357, 352.357, 29.6786, 0.788 ) }
    dend_16 { pt3dadd( 446.341, 351.782, 29.6699, 0.6864 ) }
    dend_16 { pt3dadd( 447.459, 351.541, 29.6148, 0.7118 ) }
    dend_16 { pt3dadd( 448.576, 351.318, 29.3566, 0.8136 ) }
    dend_16 { pt3dadd( 449.698, 351.15, 29.05, 0.8898 ) }
    dend_16 { pt3dadd( 450.817, 350.959, 29.3602, 0.9152 ) }
    dend_16 { pt3dadd( 451.909, 350.658, 29.7245, 0.9406 ) }
    dend_16 { pt3dadd( 453.046, 350.582, 29.9247, 0.9406 ) }
    dend_16 { pt3dadd( 454.172, 350.551, 30.2859, 0.966 ) }
    dend_16 { pt3dadd( 455.264, 350.225, 30.2058, 0.966 ) }
    dend_16 { pt3dadd( 456.32, 349.848, 29.748, 1.0168 ) }
    dend_16 { pt3dadd( 457.303, 349.263, 29.68, 1.0168 ) }
    dend_16 { pt3dadd( 458.24, 348.607, 29.68, 1.0168 ) }
    dend_16 { pt3dadd( 459.172, 347.944, 29.68, 1.0168 ) }
    dend_16 { pt3dadd( 460.133, 347.328, 29.68, 1.0678 ) }
    dend_16 { pt3dadd( 461.163, 346.828, 29.6806, 1.1186 ) }
    dend_16 { pt3dadd( 462.227, 346.416, 29.6836, 1.0932 ) }
    dend_16 { pt3dadd( 463.348, 346.219, 29.7055, 0.9914 ) }
    dend_16 { pt3dadd( 464.485, 346.283, 29.8371, 0.839 ) }
    dend_16 { pt3dadd( 465.583, 346.525, 30.2954, 0.7626 ) }
    dend_16 { pt3dadd( 466.641, 346.83, 31.0352, 0.788 ) }
    dend_16 { pt3dadd( 467.741, 346.929, 31.6585, 0.9406 ) }
    dend_16 { pt3dadd( 468.852, 346.712, 31.9222, 1.0932 ) }
    dend_16 { pt3dadd( 469.94, 346.361, 31.9343, 1.1694 ) }
    dend_16 { pt3dadd( 471.047, 346.071, 32.0163, 1.0932 ) }
    dend_16 { pt3dadd( 472.139, 345.765, 32.3173, 0.9406 ) }
    dend_16 { pt3dadd( 473.157, 345.3, 32.7894, 0.788 ) }
    dend_16 { pt3dadd( 474.044, 344.593, 33.0386, 0.6864 ) }
    dend_16 { pt3dadd( 474.9, 343.838, 33.0506, 0.6864 ) }
    dend_16 { pt3dadd( 475.857, 343.216, 33.0968, 0.7626 ) }
    dend_16 { pt3dadd( 476.88, 342.728, 33.3239, 0.9152 ) }
    dend_16 { pt3dadd( 477.955, 342.409, 33.868, 0.966 ) }
    dend_16 { pt3dadd( 479.032, 342.124, 34.4971, 0.966 ) }
    dend_16 { pt3dadd( 480.099, 341.771, 35.0081, 0.8898 ) }
    dend_16 { pt3dadd( 481.127, 341.293, 35.2629, 0.8644 ) }
    dend_16 { pt3dadd( 482.095, 340.685, 35.28, 0.8136 ) }
    dend_16 { pt3dadd( 483.056, 340.064, 35.28, 0.8136 ) }
    dend_16 { pt3dadd( 484.062, 339.526, 35.2803, 0.839 ) }
    dend_16 { pt3dadd( 485.112, 339.071, 35.2814, 0.8898 ) }
    dend_16 { pt3dadd( 486.14, 338.571, 35.2876, 0.9152 ) }
    dend_16 { pt3dadd( 487.134, 338.006, 35.322, 0.839 ) }
    dend_16 { pt3dadd( 488.156, 337.51, 35.52, 0.7626 ) }
    dend_16 { pt3dadd( 489.236, 337.251, 35.9929, 0.661 ) }
    dend_16 { pt3dadd( 490.329, 337.408, 36.5305, 0.6356 ) }
    dend_16 { pt3dadd( 491.384, 337.789, 37.0698, 0.6356 ) }
    dend_16 { pt3dadd( 492.462, 337.93, 37.7065, 0.6864 ) }
    dend_16 { pt3dadd( 493.526, 337.637, 38.2841, 0.8136 ) }
    dend_16 { pt3dadd( 494.508, 337.073, 38.5795, 0.839 ) }
    dend_16 { pt3dadd( 495.461, 336.44, 38.6422, 0.788 ) }
    dend_16 { pt3dadd( 496.496, 335.992, 38.6532, 0.6864 ) }
    dend_16 { pt3dadd( 497.607, 335.993, 38.7204, 0.6356 ) }
    dend_16 { pt3dadd( 498.673, 336.366, 39.0379, 0.7118 ) }
    dend_16 { pt3dadd( 499.739, 336.718, 39.4923, 0.7372 ) }
    dend_16 { pt3dadd( 500.852, 336.716, 39.7264, 0.839 ) }
    dend_16 { pt3dadd( 501.929, 336.352, 39.7709, 0.8136 ) }
    dend_16 { pt3dadd( 502.99, 335.925, 39.8255, 0.8136 ) }
    dend_16 { pt3dadd( 504.088, 335.685, 40.1618, 0.7626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_16 { pt3dadd( 505.207, 335.583, 40.677, 0.7626 ) }
    dend_16 { pt3dadd( 506.267, 335.286, 41.2801, 0.7118 ) }
    dend_16 { pt3dadd( 507.267, 334.774, 41.7816, 0.661 ) }
    dend_16 { pt3dadd( 508.303, 334.309, 41.9709, 0.6356 ) }
    dend_16 { pt3dadd( 509.358, 333.866, 41.9796, 0.6864 ) }
    dend_16 { pt3dadd( 510.377, 333.351, 41.8835, 0.7118 ) }
    dend_16 { pt3dadd( 511.358, 332.77, 41.6808, 0.6864 ) }
    dend_16 { pt3dadd( 512.339, 332.196, 41.8006, 0.661 ) }
    dend_16 { pt3dadd( 513.303, 331.593, 42.1098, 0.7118 ) }
    dend_16 { pt3dadd( 514.245, 330.979, 42.6034, 0.788 ) }
    dend_16 { pt3dadd( 515.188, 330.359, 42.9974, 0.839 ) }
    dend_16 { pt3dadd( 516.117, 329.693, 43.1105, 0.8644 ) }
    dend_16 { pt3dadd( 517.041, 329.018, 43.1217, 0.9152 ) }
    dend_16 { pt3dadd( 517.976, 328.36, 43.1292, 0.9406 ) }
    dend_16 { pt3dadd( 518.954, 327.771, 43.1726, 0.966 ) }
    dend_16 { pt3dadd( 519.979, 327.279, 43.4414, 0.9406 ) }
    dend_16 { pt3dadd( 521.046, 326.945, 43.9796, 0.966 ) }
    dend_16 { pt3dadd( 522.078, 326.539, 44.6034, 0.9406 ) }
    dend_16 { pt3dadd( 522.984, 326.0, 45.628, 0.966 ) }
    dend_16 { pt3dadd( 523.918, 325.43, 46.3221, 0.966 ) }
    dend_16 { pt3dadd( 524.891, 324.838, 46.4951, 0.966 ) }
    dend_16 { pt3dadd( 525.88, 324.262, 46.6315, 0.9152 ) }
    dend_16 { pt3dadd( 526.793, 323.651, 47.3043, 0.839 ) }
    dend_16 { pt3dadd( 527.671, 323.02, 48.2163, 0.7626 ) }
    dend_16 { pt3dadd( 528.453, 322.227, 48.6559, 0.7118 ) }
    dend_16 { pt3dadd( 529.219, 321.379, 48.771, 0.661 ) }
    dend_16 { pt3dadd( 530.158, 320.767, 49.0398, 0.6356 ) }
    dend_16 { pt3dadd( 531.24, 320.548, 49.5835, 0.661 ) }
    dend_16 { pt3dadd( 532.364, 320.388, 49.8196, 0.7626 ) }
    dend_16 { pt3dadd( 533.417, 319.972, 49.8397, 0.8644 ) }
    dend_16 { pt3dadd( 534.522, 319.765, 49.8411, 0.8898 ) }
    dend_16 { pt3dadd( 535.637, 319.956, 49.8464, 0.8644 ) }
    dend_16 { pt3dadd( 536.768, 320.074, 49.8823, 0.8136 ) }
    dend_16 { pt3dadd( 537.906, 320.074, 50.1463, 0.7626 ) }
    dend_16 { pt3dadd( 539.013, 319.988, 50.7732, 0.661 ) }
    dend_16 { pt3dadd( 540.048, 319.592, 51.2898, 0.6102 ) }
    dend_16 { pt3dadd( 541.0, 319.267, 52.4868, 0.5338 ) }
    dend_16 { pt3dadd( 541.906, 319.218, 54.1626, 0.5592 ) }
    dend_16 { pt3dadd( 542.953, 319.415, 54.8442, 0.5848 ) }
    dend_16 { pt3dadd( 543.989, 319.594, 53.9944, 0.7118 ) }
    dend_16 { pt3dadd( 545.093, 319.634, 53.5276, 0.7626 ) }
    dend_16 { pt3dadd( 546.205, 319.635, 54.0341, 0.7626 ) }
    dend_16 { pt3dadd( 547.334, 319.639, 54.4124, 0.7372 ) }
    dend_16 { pt3dadd( 548.453, 319.694, 54.9458, 0.7372 ) }
    dend_16 { pt3dadd( 549.539, 319.909, 54.598, 0.7626 ) }
    dend_16 { pt3dadd( 550.638, 319.754, 54.404, 0.7626 ) }
    dend_16 { pt3dadd( 551.653, 319.251, 54.6042, 0.788 ) }
    dend_16 { pt3dadd( 552.637, 318.725, 55.1936, 0.7626 ) }
    dend_16 { pt3dadd( 553.546, 318.057, 55.5736, 0.7372 ) }
    dend_16 { pt3dadd( 554.511, 317.479, 56.0263, 0.6864 ) }
    dend_16 { pt3dadd( 555.601, 317.184, 56.3038, 0.6864 ) }
    dend_16 { pt3dadd( 556.689, 316.938, 55.8057, 0.6356 ) }
    dend_16 { pt3dadd( 557.797, 316.789, 55.2177, 0.5848 ) }
    dend_16 { pt3dadd( 558.708, 316.584, 56.6451, 0.5848 ) }
    dend_16 { pt3dadd( 559.578, 316.568, 58.4553, 0.6864 ) }
    dend_16 { pt3dadd( 560.645, 316.43, 59.3645, 0.788 ) }
    dend_16 { pt3dadd( 561.714, 316.111, 59.9452, 0.839 ) }
    dend_16 { pt3dadd( 562.673, 315.535, 60.5091, 0.839 ) }
    dend_16 { pt3dadd( 563.651, 314.981, 61.0196, 0.839 ) }
    dend_16 { pt3dadd( 564.661, 314.459, 61.339, 0.839 ) }
    dend_16 { pt3dadd( 565.635, 313.892, 61.833, 0.8136 ) }
    dend_16 { pt3dadd( 566.611, 313.31, 62.1326, 0.7118 ) }
    dend_16 { pt3dadd( 567.6, 312.736, 62.1603, 0.5592 ) }
    dend_16 { pt3dadd( 568.684, 312.368, 62.1662, 0.4322 ) }
    dend_16 { pt3dadd( 569.801, 312.123, 62.1978, 0.4576 ) }
    dend_16 { pt3dadd( 570.88, 311.749, 62.3773, 0.5848 ) }
    dend_16 { pt3dadd( 571.945, 311.437, 63.0384, 0.6864 ) }
    dend_16 { pt3dadd( 572.976, 311.182, 64.0856, 0.661 ) }
    dend_16 { pt3dadd( 574.052, 310.899, 64.7158, 0.5338 ) }
    dend_16 { pt3dadd( 574.949, 310.571, 66.1469, 0.4322 ) }
    dend_16 { pt3dadd( 576.088, 310.593, 66.0951, 0.3814 ) }
    dend_16 { pt3dadd( 577.209, 310.684, 65.7124, 0.4322 ) }
    dend_16 { pt3dadd( 578.34, 310.716, 66.0257, 0.5084 ) }
    dend_16 { pt3dadd( 579.442, 310.762, 66.768, 0.6102 ) }
    dend_16 { pt3dadd( 580.549, 310.674, 66.9838, 0.6356 ) }
    dend_16 { pt3dadd( 581.621, 310.786, 67.0944, 0.6102 ) }
    dend_16 { pt3dadd( 582.677, 311.166, 67.618, 0.5084 ) }
    dend_16 { pt3dadd( 583.646, 311.743, 67.5273, 0.4068 ) }
    dend_16 { pt3dadd( 584.534, 312.211, 66.7705, 0.356 ) }
    dend_16 { pt3dadd( 585.236, 312.883, 68.2189, 0.356 ) }
    dend_16 { pt3dadd( 586.11, 313.086, 69.1611, 0.4068 ) }
    dend_16 { pt3dadd( 587.039, 313.418, 69.8771, 0.4068 ) }
    dend_16 { pt3dadd( 587.829, 314.056, 69.8614, 0.4322 ) }
    dend_16 { pt3dadd( 588.452, 314.942, 70.7098, 0.4576 ) }
    dend_16 { pt3dadd( 589.204, 315.693, 69.9401, 0.5084 ) }
    dend_16 { pt3dadd( 590.245, 316.11, 69.895, 0.5592 ) }
    dend_16 { pt3dadd( 591.32, 316.492, 70.0325, 0.5592 ) }
    dend_16 { pt3dadd( 592.418, 316.789, 69.9664, 0.5592 ) }
    dend_16 { pt3dadd( 593.548, 316.859, 70.2901, 0.483 ) }
    dend_16 { pt3dadd( 594.664, 316.945, 70.3357, 0.4068 ) }
    dend_16 { pt3dadd( 595.76, 317.102, 70.3895, 0.305 ) }
    dend_16 { pt3dadd( 596.843, 317.316, 70.8372, 0.2796 ) }
    dend_16 { pt3dadd( 597.934, 317.605, 71.0595, 0.305 ) }
    dend_16 { pt3dadd( 599.063, 317.689, 71.3653, 0.356 ) }
    dend_16 { pt3dadd( 600.181, 317.664, 71.8281, 0.356 ) }
    dend_16 { pt3dadd( 601.256, 317.602, 72.767, 0.356 ) }
    dend_16 { pt3dadd( 602.355, 317.459, 73.0279, 0.356 ) }
    dend_16 { pt3dadd( 603.172, 316.846, 73.8606, 0.3814 ) }
    dend_16 { pt3dadd( 603.929, 316.02, 73.9385, 0.3304 ) }
    dend_16 { pt3dadd( 604.871, 315.381, 74.114, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_16 { pt3dadd( 605.695, 314.658, 74.8821, 0.305 ) }
    dend_16 { pt3dadd( 606.213, 313.718, 75.8198, 0.356 ) }
    dend_16 { pt3dadd( 606.335, 312.655, 76.8012, 0.356 ) }
    dend_16 { pt3dadd( 606.547, 311.69, 78.108, 0.305 ) }
    dend_16 { pt3dadd( 606.516, 310.55, 78.3107, 0.2796 ) }
    dend_16 { pt3dadd( 606.516, 309.483, 78.9188, 0.2796 ) }
    dend_16 { pt3dadd( 607.263, 308.918, 80.1049, 0.305 ) }
    dend_16 { pt3dadd( 608.26, 308.561, 80.7341, 0.2796 ) }
    dend_16 { pt3dadd( 608.931, 307.815, 81.8152, 0.2542 ) }
    dend_16 { pt3dadd( 609.385, 306.773, 82.04, 0.2288 ) }
    dend_16 { pt3dadd( 610.021, 305.888, 82.04, 0.2288 ) }
    dend_16 { pt3dadd( 610.726, 305.045, 82.04, 0.2288 ) }
    dend_16 { pt3dadd( 611.379, 304.124, 82.04, 0.2542 ) }
    dend_16 { pt3dadd( 612.297, 303.467, 82.0484, 0.2796 ) }
    dend_16 { pt3dadd( 612.924, 302.767, 83.2135, 0.305 ) }
    dend_16 { pt3dadd( 613.773, 302.063, 83.44, 0.356 ) }
    dend_16 { pt3dadd( 614.099, 300.986, 83.44, 0.4068 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 17/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 420.06, 361.733, 26.32, 0.483 ) }
    dend_11 { pt3dadd( 419.937, 360.445, 26.3214, 0.6356 ) }
    dend_11 { pt3dadd( 419.556, 359.367, 26.3287, 0.788 ) }
    dend_11 { pt3dadd( 419.405, 358.233, 26.3738, 0.9152 ) }
    dend_11 { pt3dadd( 419.387, 357.1, 26.738, 0.9406 ) }
    dend_11 { pt3dadd( 419.379, 355.983, 27.3462, 0.9406 ) }
    dend_11 { pt3dadd( 419.32, 354.842, 27.4445, 0.8898 ) }
    dend_11 { pt3dadd( 419.036, 353.734, 27.4882, 0.8898 ) }
    dend_11 { pt3dadd( 418.886, 352.606, 27.7715, 0.8898 ) }
    dend_11 { pt3dadd( 418.651, 351.522, 28.4463, 0.8898 ) }
    dend_11 { pt3dadd( 418.799, 350.39, 28.6121, 0.8644 ) }
    dend_11 { pt3dadd( 419.227, 349.336, 28.9066, 0.8136 ) }
    dend_11 { pt3dadd( 419.384, 348.239, 29.6016, 0.839 ) }
    dend_11 { pt3dadd( 419.384, 347.096, 29.6845, 0.8898 ) }
    dend_11 { pt3dadd( 419.347, 345.953, 29.7262, 0.9914 ) }
    dend_11 { pt3dadd( 419.104, 344.838, 29.9424, 0.9914 ) }
    dend_11 { pt3dadd( 418.933, 343.751, 30.7054, 0.9406 ) }
    dend_11 { pt3dadd( 418.926, 342.607, 30.8042, 0.8644 ) }
    dend_11 { pt3dadd( 418.891, 341.465, 30.8392, 0.8898 ) }
    dend_11 { pt3dadd( 418.65, 340.349, 31.036, 0.9406 ) }
    dend_11 { pt3dadd( 418.284, 339.31, 31.7954, 0.966 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 38/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 392.38, 330.221, 31.6333, 0.661 ) }
    dend_3 { pt3dadd( 392.854, 329.545, 32.1756, 0.7626 ) }
    dend_3 { pt3dadd( 393.208, 328.508, 32.9728, 0.8644 ) }
    dend_3 { pt3dadd( 393.299, 327.369, 33.0728, 0.8898 ) }
    dend_3 { pt3dadd( 393.281, 326.228, 33.2629, 0.9406 ) }
    dend_3 { pt3dadd( 393.158, 325.134, 34.0242, 0.9406 ) }
    dend_3 { pt3dadd( 392.69, 324.094, 34.1947, 0.966 ) }
    dend_3 { pt3dadd( 392.194, 323.065, 34.368, 0.9914 ) }
    dend_3 { pt3dadd( 391.844, 322.017, 35.0969, 1.0424 ) }
    dend_3 { pt3dadd( 391.512, 320.925, 35.2803, 1.0424 ) }
    dend_3 { pt3dadd( 391.429, 319.785, 35.2909, 1.0168 ) }
    dend_3 { pt3dadd( 391.171, 318.67, 35.3517, 1.0168 ) }
    dend_3 { pt3dadd( 391.024, 317.55, 35.7927, 1.0678 ) }
    dend_3 { pt3dadd( 391.049, 316.433, 36.391, 1.1186 ) }
    dend_3 { pt3dadd( 391.229, 315.304, 36.4, 1.144 ) }
    dend_3 { pt3dadd( 391.575, 314.213, 36.4, 1.144 ) }
    dend_3 { pt3dadd( 391.909, 313.118, 36.4, 1.1186 ) }
    dend_3 { pt3dadd( 392.046, 311.983, 36.4, 1.0678 ) }
    dend_3 { pt3dadd( 392.391, 310.892, 36.4003, 1.0168 ) }
    dend_3 { pt3dadd( 392.391, 309.748, 36.407, 0.9914 ) }
    dend_3 { pt3dadd( 392.391, 308.604, 36.449, 0.966 ) }
    dend_3 { pt3dadd( 392.391, 307.466, 36.7161, 0.8644 ) }
    dend_3 { pt3dadd( 392.39, 306.363, 37.459, 0.7626 ) }
    dend_3 { pt3dadd( 392.385, 305.219, 37.5292, 0.6356 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 62/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 392.38, 330.221, 31.6333, 0.661 ) }
    dend_2 { pt3dadd( 391.785, 329.171, 30.7969, 0.4068 ) }
    dend_2 { pt3dadd( 390.886, 328.539, 30.4867, 0.356 ) }
    dend_2 { pt3dadd( 390.064, 327.957, 29.6668, 0.3304 ) }
    dend_2 { pt3dadd( 389.993, 327.054, 28.2999, 0.4322 ) }
    dend_2 { pt3dadd( 390.095, 326.057, 27.0231, 0.4322 ) }
    dend_2 { pt3dadd( 389.663, 325.104, 26.3796, 0.483 ) }
    dend_2 { pt3dadd( 389.116, 324.115, 26.1663, 0.5084 ) }
    dend_2 { pt3dadd( 389.1, 323.076, 25.4632, 0.5848 ) }
    dend_2 { pt3dadd( 389.374, 322.039, 24.4894, 0.6356 ) }
    dend_2 { pt3dadd( 389.758, 320.991, 24.0915, 0.661 ) }
    dend_2 { pt3dadd( 389.785, 319.898, 24.0318, 0.7626 ) }
    dend_2 { pt3dadd( 389.726, 318.771, 23.7751, 0.839 ) }
    dend_2 { pt3dadd( 389.652, 317.644, 23.4066, 0.8644 ) }
    dend_2 { pt3dadd( 389.468, 316.574, 22.5893, 0.8136 ) }
    dend_2 { pt3dadd( 389.067, 315.548, 22.0545, 0.7626 ) }
    dend_2 { pt3dadd( 388.682, 314.478, 22.0875, 0.7626 ) }
    dend_2 { pt3dadd( 388.594, 313.408, 21.2926, 0.7372 ) }
    dend_2 { pt3dadd( 388.262, 312.336, 20.816, 0.7118 ) }
    dend_2 { pt3dadd( 387.798, 311.292, 20.8127, 0.7118 ) }
    dend_2 { pt3dadd( 387.344, 310.264, 20.2877, 0.7372 ) }
    dend_2 { pt3dadd( 386.9, 309.223, 19.88, 0.788 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 84/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 527.041, 272.043, 90.44, 0.661 ) }
    dend_52 { pt3dadd( 526.581, 271.279, 90.5646, 0.3814 ) }
    dend_52 { pt3dadd( 526.125, 270.252, 90.6889, 0.2796 ) }
    dend_52 { pt3dadd( 525.859, 269.149, 90.8001, 0.2542 ) }
    dend_52 { pt3dadd( 525.349, 268.132, 90.8373, 0.2288 ) }
    dend_52 { pt3dadd( 524.796, 267.135, 90.72, 0.2288 ) }
    dend_52 { pt3dadd( 524.18, 266.209, 91.0669, 0.2288 ) }
    dend_52 { pt3dadd( 523.779, 265.206, 91.4805, 0.2288 ) }
    dend_52 { pt3dadd( 523.393, 264.144, 91.56, 0.2288 ) }
    dend_52 { pt3dadd( 522.924, 263.102, 91.56, 0.2288 ) }
    dend_52 { pt3dadd( 522.643, 261.999, 91.56, 0.2288 ) }
    dend_52 { pt3dadd( 522.507, 260.864, 91.56, 0.2796 ) }
    dend_52 { pt3dadd( 522.127, 259.801, 91.56, 0.3304 ) }
    dend_52 { pt3dadd( 521.926, 258.701, 91.2106, 0.4068 ) }
    dend_52 { pt3dadd( 521.804, 257.569, 90.965, 0.4322 ) }
    dend_52 { pt3dadd( 521.778, 256.428, 90.8692, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_52 { pt3dadd( 521.786, 255.314, 90.2762, 0.4322 ) }
    dend_52 { pt3dadd( 522.224, 254.346, 90.9798, 0.356 ) }
    dend_52 { pt3dadd( 522.236, 253.206, 91.0, 0.2796 ) }
    dend_52 { pt3dadd( 522.236, 252.062, 91.0, 0.2796 ) }
    dend_52 { pt3dadd( 522.482, 250.998, 90.3638, 0.3304 ) }
    dend_52 { pt3dadd( 522.932, 250.359, 88.7541, 0.3814 ) }
    dend_52 { pt3dadd( 523.185, 249.273, 88.8532, 0.3304 ) }
    dend_52 { pt3dadd( 523.499, 248.218, 89.04, 0.356 ) }
    dend_52 { pt3dadd( 523.635, 247.102, 88.7832, 0.4576 ) }
    dend_52 { pt3dadd( 524.12, 246.141, 88.0443, 0.6102 ) }
    dend_52 { pt3dadd( 524.684, 245.189, 87.64, 0.6356 ) }
    dend_52 { pt3dadd( 524.935, 244.094, 87.4087, 0.5084 ) }
    dend_52 { pt3dadd( 525.138, 243.329, 85.7352, 0.3814 ) }
    dend_52 { pt3dadd( 525.398, 242.605, 83.6825, 0.305 ) }
    dend_52 { pt3dadd( 525.992, 242.016, 81.8224, 0.3304 ) }
    dend_52 { pt3dadd( 526.471, 241.081, 82.1344, 0.4068 ) }
    dend_52 { pt3dadd( 526.503, 240.712, 84.6266, 0.5338 ) }
    dend_52 { pt3dadd( 526.383, 240.552, 86.5544, 0.6102 ) }
    dend_52 { pt3dadd( 527.003, 239.639, 86.9971, 0.6102 ) }
    dend_52 { pt3dadd( 527.598, 238.734, 87.7887, 0.5338 ) }
    dend_52 { pt3dadd( 528.168, 237.883, 86.7941, 0.483 ) }
    dend_52 { pt3dadd( 529.078, 237.286, 87.145, 0.4322 ) }
    dend_52 { pt3dadd( 529.853, 236.508, 86.345, 0.356 ) }
    dend_52 { pt3dadd( 530.625, 235.732, 85.5448, 0.305 ) }
    dend_52 { pt3dadd( 531.362, 234.882, 85.2446, 0.2796 ) }
    dend_52 { pt3dadd( 532.073, 233.987, 85.2536, 0.305 ) }
    dend_52 { pt3dadd( 532.786, 233.091, 85.2622, 0.2796 ) }
    dend_52 { pt3dadd( 533.499, 232.197, 85.2709, 0.2796 ) }
    dend_52 { pt3dadd( 534.21, 231.301, 85.2799, 0.2796 ) }
    dend_52 { pt3dadd( 534.922, 230.406, 85.2886, 0.305 ) }
    dend_52 { pt3dadd( 535.661, 229.533, 85.2824, 0.2796 ) }
    dend_52 { pt3dadd( 536.404, 228.663, 85.2746, 0.2542 ) }
    dend_52 { pt3dadd( 537.146, 227.792, 85.2667, 0.2288 ) }
    dend_52 { pt3dadd( 537.888, 226.922, 85.2589, 0.2288 ) }
    dend_52 { pt3dadd( 538.541, 225.992, 85.2494, 0.2288 ) }
    dend_52 { pt3dadd( 539.041, 224.963, 85.2368, 0.2288 ) }
    dend_52 { pt3dadd( 539.541, 223.933, 85.2242, 0.2288 ) }
    dend_52 { pt3dadd( 540.041, 222.905, 85.2113, 0.2288 ) }
    dend_52 { pt3dadd( 540.507, 221.863, 85.2076, 0.2542 ) }
    dend_52 { pt3dadd( 540.833, 220.767, 85.2404, 0.2796 ) }
    dend_52 { pt3dadd( 541.159, 219.67, 85.2729, 0.305 ) }
    dend_52 { pt3dadd( 541.375, 218.558, 85.2832, 0.2796 ) }
    dend_52 { pt3dadd( 541.374, 217.414, 85.2485, 0.305 ) }
    dend_52 { pt3dadd( 541.372, 216.27, 85.2138, 0.4322 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 44/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 527.041, 272.043, 90.44, 0.661 ) }
    dend_51 { pt3dadd( 527.154, 270.809, 90.7631, 0.7372 ) }
    dend_51 { pt3dadd( 527.289, 269.998, 92.1785, 0.6864 ) }
    dend_51 { pt3dadd( 527.794, 269.032, 92.8696, 0.661 ) }
    dend_51 { pt3dadd( 528.469, 268.3, 92.2552, 0.6864 ) }
    dend_51 { pt3dadd( 529.21, 267.772, 93.1342, 0.839 ) }
    dend_51 { pt3dadd( 529.968, 266.998, 93.8207, 0.8644 ) }
    dend_51 { pt3dadd( 530.831, 266.252, 93.6561, 0.7626 ) }
    dend_51 { pt3dadd( 531.573, 265.45, 93.872, 0.5848 ) }
    dend_51 { pt3dadd( 532.055, 264.522, 94.9598, 0.5084 ) }
    dend_51 { pt3dadd( 532.643, 263.578, 94.9645, 0.5338 ) }
    dend_51 { pt3dadd( 533.161, 262.707, 96.0632, 0.5848 ) }
    dend_51 { pt3dadd( 534.034, 261.985, 95.8286, 0.5848 ) }
    dend_51 { pt3dadd( 534.742, 261.094, 95.8801, 0.5338 ) }
    dend_51 { pt3dadd( 535.388, 260.277, 96.81, 0.483 ) }
    dend_51 { pt3dadd( 535.997, 259.656, 96.8243, 0.4576 ) }
    dend_51 { pt3dadd( 536.53, 258.767, 95.811, 0.4576 ) }
    dend_51 { pt3dadd( 536.807, 257.691, 96.3231, 0.4068 ) }
    dend_51 { pt3dadd( 537.417, 256.738, 96.1534, 0.356 ) }
    dend_51 { pt3dadd( 537.799, 255.669, 96.04, 0.3304 ) }
    dend_51 { pt3dadd( 538.267, 254.653, 96.1262, 0.4068 ) }
    dend_51 { pt3dadd( 538.482, 253.604, 96.8215, 0.5338 ) }
    dend_51 { pt3dadd( 538.961, 252.681, 97.531, 0.6102 ) }
    dend_51 { pt3dadd( 539.516, 251.688, 97.4316, 0.5848 ) }
    dend_51 { pt3dadd( 540.117, 250.758, 97.8776, 0.5084 ) }
    dend_51 { pt3dadd( 540.947, 250.012, 98.2724, 0.4576 ) }
    dend_51 { pt3dadd( 541.703, 249.185, 98.4334, 0.483 ) }
    dend_51 { pt3dadd( 542.398, 248.333, 99.1054, 0.4576 ) }
    dend_51 { pt3dadd( 543.122, 247.523, 99.9866, 0.4576 ) }
    dend_51 { pt3dadd( 544.0, 246.827, 100.229, 0.4576 ) }
    dend_51 { pt3dadd( 544.831, 246.07, 99.8186, 0.5084 ) }
    dend_51 { pt3dadd( 545.83, 245.663, 100.426, 0.5084 ) }
    dend_51 { pt3dadd( 546.854, 245.371, 101.381, 0.4322 ) }
    dend_51 { pt3dadd( 547.804, 244.858, 100.759, 0.3814 ) }
    dend_51 { pt3dadd( 548.408, 244.172, 102.354, 0.3304 ) }
    dend_51 { pt3dadd( 549.31, 243.501, 102.869, 0.356 ) }
    dend_51 { pt3dadd( 550.214, 242.855, 103.427, 0.3304 ) }
    dend_51 { pt3dadd( 550.995, 242.021, 103.453, 0.3304 ) }
    dend_51 { pt3dadd( 551.747, 241.178, 103.127, 0.2796 ) }
    dend_51 { pt3dadd( 552.565, 240.431, 102.427, 0.2542 ) }
    dend_51 { pt3dadd( 553.297, 239.651, 102.397, 0.2288 ) }
    dend_51 { pt3dadd( 553.861, 238.808, 103.691, 0.2288 ) }
    dend_51 { pt3dadd( 554.424, 237.965, 104.985, 0.2288 ) }
    dend_51 { pt3dadd( 554.987, 237.12, 106.28, 0.2288 ) }
    dend_51 { pt3dadd( 555.552, 236.277, 107.574, 0.2288 ) }
    dend_51 { pt3dadd( 556.049, 235.377, 108.6, 0.2288 ) }
    dend_51 { pt3dadd( 556.299, 234.26, 108.597, 0.2288 ) }
    dend_51 { pt3dadd( 556.547, 233.144, 108.593, 0.2288 ) }
    dend_51 { pt3dadd( 556.794, 232.027, 108.59, 0.2288 ) }
    dend_51 { pt3dadd( 556.859, 230.93, 108.948, 0.2288 ) }
    dend_51 { pt3dadd( 556.661, 229.863, 109.831, 0.2288 ) }
    dend_51 { pt3dadd( 556.464, 228.795, 110.713, 0.2288 ) }
    dend_51 { pt3dadd( 556.267, 227.728, 111.596, 0.2288 ) }
    dend_51 { pt3dadd( 556.068, 226.661, 112.479, 0.2288 ) }
    dend_51 { pt3dadd( 556.025, 225.639, 113.555, 0.2288 ) }
    dend_51 { pt3dadd( 556.318, 224.718, 115.052, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_51 { pt3dadd( 556.612, 223.797, 116.55, 0.2288 ) }
    dend_51 { pt3dadd( 556.906, 222.876, 118.047, 0.2288 ) }
    dend_51 { pt3dadd( 557.2, 221.955, 119.544, 0.2288 ) }
    dend_51 { pt3dadd( 557.033, 221.033, 120.667, 0.2288 ) }
    dend_51 { pt3dadd( 556.437, 220.11, 121.442, 0.2288 ) }
    dend_51 { pt3dadd( 555.84, 219.186, 122.216, 0.2288 ) }
    dend_51 { pt3dadd( 555.258, 218.26, 122.998, 0.2288 ) }
    dend_51 { pt3dadd( 555.281, 217.214, 124.129, 0.2288 ) }
    dend_51 { pt3dadd( 555.305, 216.167, 125.259, 0.2288 ) }
    dend_51 { pt3dadd( 555.327, 215.121, 126.389, 0.2288 ) }
    dend_51 { pt3dadd( 555.349, 214.074, 127.519, 0.2288 ) }
    dend_51 { pt3dadd( 555.328, 213.032, 128.563, 0.2288 ) }
    dend_51 { pt3dadd( 554.768, 212.035, 128.583, 0.2288 ) }
    dend_51 { pt3dadd( 554.206, 211.037, 128.603, 0.2288 ) }
    dend_51 { pt3dadd( 553.646, 210.041, 128.623, 0.2288 ) }
    dend_51 { pt3dadd( 553.085, 209.043, 128.643, 0.2288 ) }
    dend_51 { pt3dadd( 552.828, 207.993, 128.639, 0.2288 ) }
    dend_51 { pt3dadd( 553.015, 206.864, 128.602, 0.2288 ) }
    dend_51 { pt3dadd( 552.758, 205.844, 128.609, 0.2288 ) }
    dend_51 { pt3dadd( 552.07, 204.93, 128.659, 0.2288 ) }
    dend_51 { pt3dadd( 551.383, 204.016, 128.708, 0.2288 ) }
    dend_51 { pt3dadd( 550.695, 203.102, 128.757, 0.2288 ) }
    dend_51 { pt3dadd( 550.008, 202.188, 128.806, 0.2288 ) }
    dend_51 { pt3dadd( 549.32, 201.273, 128.856, 0.2288 ) }
    dend_51 { pt3dadd( 548.633, 200.359, 128.905, 0.2288 ) }
    dend_51 { pt3dadd( 547.945, 199.445, 128.955, 0.2288 ) }
    dend_51 { pt3dadd( 547.258, 198.531, 129.004, 0.2288 ) }
    dend_51 { pt3dadd( 546.57, 197.617, 129.053, 0.2288 ) }
    dend_51 { pt3dadd( 545.883, 196.703, 129.103, 0.2288 ) }
    dend_51 { pt3dadd( 545.307, 195.717, 129.152, 0.2288 ) }
    dend_51 { pt3dadd( 544.763, 194.711, 129.2, 0.2288 ) }
    dend_51 { pt3dadd( 544.448, 193.731, 129.229, 0.2542 ) }
    dend_51 { pt3dadd( 545.197, 192.865, 129.162, 0.2796 ) }
    dend_51 { pt3dadd( 545.879, 191.97, 129.11, 0.305 ) }
    dend_51 { pt3dadd( 546.052, 190.839, 129.168, 0.3814 ) }
    dend_51 { pt3dadd( 546.224, 189.708, 129.226, 0.5338 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 36/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 379.682, 402.897, 49.0137, 0.661 ) }
    dend_43 { pt3dadd( 378.663, 403.044, 48.9689, 0.2542 ) }
    dend_43 { pt3dadd( 378.403, 403.157, 49.107, 0.2288 ) }
    dend_43 { pt3dadd( 377.274, 403.324, 49.2736, 0.2542 ) }
    dend_43 { pt3dadd( 376.149, 403.493, 49.093, 0.2796 ) }
    dend_43 { pt3dadd( 375.112, 403.818, 48.3314, 0.305 ) }
    dend_43 { pt3dadd( 373.999, 403.694, 48.7015, 0.305 ) }
    dend_43 { pt3dadd( 372.96, 403.26, 48.6895, 0.3304 ) }
    dend_43 { pt3dadd( 371.82, 403.281, 48.5044, 0.356 ) }
    dend_43 { pt3dadd( 370.742, 403.537, 48.368, 0.3814 ) }
    dend_43 { pt3dadd( 369.865, 404.27, 48.4224, 0.356 ) }
    dend_43 { pt3dadd( 369.059, 405.073, 48.4632, 0.3304 ) }
    dend_43 { pt3dadd( 368.346, 405.94, 48.4971, 0.2796 ) }
    dend_43 { pt3dadd( 367.547, 406.709, 47.8229, 0.2542 ) }
    dend_43 { pt3dadd( 366.537, 407.035, 47.6, 0.2288 ) }
    dend_43 { pt3dadd( 365.394, 407.035, 47.5126, 0.2288 ) }
    dend_43 { pt3dadd( 364.252, 407.069, 47.374, 0.2288 ) }
    dend_43 { pt3dadd( 363.194, 407.417, 47.32, 0.2288 ) }
    dend_43 { pt3dadd( 362.57, 408.288, 47.32, 0.2288 ) }
    dend_43 { pt3dadd( 361.778, 409.033, 47.32, 0.2288 ) }
    dend_43 { pt3dadd( 360.698, 409.39, 47.32, 0.2288 ) }
    dend_43 { pt3dadd( 359.594, 409.687, 47.32, 0.2288 ) }
    dend_43 { pt3dadd( 358.946, 410.582, 46.8261, 0.2288 ) }
    dend_43 { pt3dadd( 357.957, 411.082, 46.7866, 0.2288 ) }
    dend_43 { pt3dadd( 357.551, 411.951, 47.7772, 0.2288 ) }
    dend_43 { pt3dadd( 356.418, 411.973, 47.7389, 0.2288 ) }
    dend_43 { pt3dadd( 355.395, 412.233, 46.8692, 0.2288 ) }
    dend_43 { pt3dadd( 354.539, 412.954, 46.4341, 0.2542 ) }
    dend_43 { pt3dadd( 353.614, 413.61, 46.48, 0.2796 ) }
    dend_43 { pt3dadd( 352.55, 414.021, 46.48, 0.3304 ) }
    dend_43 { pt3dadd( 351.485, 414.423, 46.6785, 0.356 ) }
    dend_43 { pt3dadd( 350.591, 415.11, 46.76, 0.3814 ) }
    dend_43 { pt3dadd( 349.656, 415.754, 46.9857, 0.3814 ) }
    dend_43 { pt3dadd( 348.665, 416.319, 47.1839, 0.356 ) }
    dend_43 { pt3dadd( 347.917, 417.165, 47.3024, 0.3304 ) }
    dend_43 { pt3dadd( 347.211, 418.039, 47.7966, 0.2796 ) }
    dend_43 { pt3dadd( 346.413, 418.852, 47.8806, 0.2542 ) }
    dend_43 { pt3dadd( 345.617, 419.672, 47.7358, 0.2288 ) }
    dend_43 { pt3dadd( 344.77, 420.384, 48.3868, 0.2288 ) }
    dend_43 { pt3dadd( 344.011, 421.184, 49.0, 0.2796 ) }
    dend_43 { pt3dadd( 343.358, 422.002, 48.7049, 0.3814 ) }
    dend_43 { pt3dadd( 342.396, 422.39, 47.9998, 0.5084 ) }
    dend_43 { pt3dadd( 341.637, 423.216, 48.3454, 0.5338 ) }
    dend_43 { pt3dadd( 340.833, 424.004, 48.1944, 0.4576 ) }
    dend_43 { pt3dadd( 340.081, 424.823, 47.6, 0.356 ) }
    dend_43 { pt3dadd( 339.257, 425.615, 47.6482, 0.305 ) }
    dend_43 { pt3dadd( 338.532, 426.436, 47.5742, 0.305 ) }
    dend_43 { pt3dadd( 338.032, 427.357, 46.8832, 0.3304 ) }
    dend_43 { pt3dadd( 337.498, 428.292, 47.6594, 0.3814 ) }
    dend_43 { pt3dadd( 336.841, 429.053, 47.3278, 0.483 ) }
    dend_43 { pt3dadd( 336.072, 429.855, 47.2923, 0.5338 ) }
    dend_43 { pt3dadd( 335.287, 430.683, 47.1405, 0.5338 ) }
    dend_43 { pt3dadd( 334.447, 431.457, 47.2853, 0.4322 ) }
    dend_43 { pt3dadd( 333.704, 432.318, 47.6, 0.3304 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 90/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 379.682, 402.897, 49.0137, 0.661 ) }
    dend_40 { pt3dadd( 379.822, 403.811, 49.8053, 0.4576 ) }
    dend_40 { pt3dadd( 379.695, 404.895, 50.645, 0.483 ) }
    dend_40 { pt3dadd( 379.028, 405.81, 50.9838, 0.5084 ) }
    dend_40 { pt3dadd( 378.338, 406.72, 51.1762, 0.5592 ) }
    dend_40 { pt3dadd( 377.495, 407.437, 51.8815, 0.6864 ) }
    dend_40 { pt3dadd( 376.805, 408.341, 52.1772, 0.7626 ) }
    dend_40 { pt3dadd( 376.378, 409.374, 52.7699, 0.8136 ) }
    dend_40 { pt3dadd( 376.129, 410.158, 54.712, 0.7626 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 406.121, 407.884, 40.8624, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_30 { pt3dadd( 407.445, 408.413, 40.873, 0.305 ) }
    dend_30 { pt3dadd( 408.551, 408.626, 40.5454, 0.3814 ) }
    dend_30 { pt3dadd( 409.575, 408.965, 41.391, 0.4068 ) }
    dend_30 { pt3dadd( 410.58, 409.14, 42.469, 0.4068 ) }
    dend_30 { pt3dadd( 411.381, 409.928, 42.9106, 0.3814 ) }
    dend_30 { pt3dadd( 412.136, 410.717, 43.491, 0.4576 ) }
    dend_30 { pt3dadd( 412.811, 411.478, 44.5035, 0.5592 ) }
    dend_30 { pt3dadd( 413.227, 412.502, 45.1861, 0.6864 ) }
    dend_30 { pt3dadd( 413.557, 413.579, 45.6392, 0.7118 ) }
    dend_30 { pt3dadd( 413.993, 414.607, 46.0555, 0.7372 ) }
    dend_30 { pt3dadd( 414.619, 415.553, 46.0037, 0.7626 ) }
    dend_30 { pt3dadd( 415.21, 416.514, 45.561, 0.7626 ) }
    dend_30 { pt3dadd( 415.898, 417.4, 45.6968, 0.661 ) }
    dend_30 { pt3dadd( 416.572, 418.316, 45.8629, 0.5338 ) }
    dend_30 { pt3dadd( 417.361, 419.119, 45.5963, 0.5084 ) }
    dend_30 { pt3dadd( 418.165, 419.925, 45.3914, 0.5848 ) }
    dend_30 { pt3dadd( 418.806, 420.819, 45.9959, 0.6102 ) }
    dend_30 { pt3dadd( 419.226, 421.843, 45.6389, 0.5338 ) }
    dend_30 { pt3dadd( 420.019, 422.638, 45.4409, 0.4322 ) }
    dend_30 { pt3dadd( 420.617, 423.589, 45.8853, 0.4068 ) }
    dend_30 { pt3dadd( 421.228, 424.501, 46.1037, 0.483 ) }
    dend_30 { pt3dadd( 421.464, 425.364, 44.8944, 0.5592 ) }
    dend_30 { pt3dadd( 421.871, 426.401, 45.3281, 0.6102 ) }
    dend_30 { pt3dadd( 422.037, 427.518, 45.5888, 0.6102 ) }
    dend_30 { pt3dadd( 422.206, 428.628, 45.4572, 0.661 ) }
    dend_30 { pt3dadd( 422.689, 429.626, 45.7038, 0.7118 ) }
    dend_30 { pt3dadd( 422.515, 430.634, 46.5094, 0.7372 ) }
    dend_30 { pt3dadd( 422.491, 431.569, 48.0757, 0.6864 ) }
    dend_30 { pt3dadd( 422.729, 432.676, 47.9027, 0.6102 ) }
    dend_30 { pt3dadd( 422.992, 433.745, 47.25, 0.5848 ) }
    dend_30 { pt3dadd( 423.38, 434.645, 46.5212, 0.5848 ) }
    dend_30 { pt3dadd( 423.439, 435.611, 47.9069, 0.6356 ) }
    dend_30 { pt3dadd( 423.611, 436.692, 48.3515, 0.661 ) }
    dend_30 { pt3dadd( 423.984, 437.723, 48.2152, 0.661 ) }
    dend_30 { pt3dadd( 424.191, 438.746, 48.0973, 0.6356 ) }
    dend_30 { pt3dadd( 424.645, 439.727, 47.8313, 0.6356 ) }
    dend_30 { pt3dadd( 425.348, 440.599, 47.5969, 0.6864 ) }
    dend_30 { pt3dadd( 425.89, 441.523, 48.0085, 0.7118 ) }
    dend_30 { pt3dadd( 426.09, 442.587, 47.8842, 0.6864 ) }
    dend_30 { pt3dadd( 426.662, 443.534, 48.431, 0.6356 ) }
    dend_30 { pt3dadd( 427.169, 444.43, 47.7028, 0.5848 ) }
    dend_30 { pt3dadd( 427.665, 445.279, 47.7238, 0.5338 ) }
    dend_30 { pt3dadd( 427.883, 446.334, 48.4613, 0.483 ) }
    dend_30 { pt3dadd( 428.298, 447.353, 49.1453, 0.483 ) }
    dend_30 { pt3dadd( 428.791, 448.332, 48.5484, 0.5084 ) }
    dend_30 { pt3dadd( 429.38, 449.293, 48.0908, 0.5084 ) }
    dend_30 { pt3dadd( 429.589, 450.338, 48.9647, 0.5084 ) }
    dend_30 { pt3dadd( 429.944, 451.361, 48.5363, 0.5084 ) }
    dend_30 { pt3dadd( 430.245, 452.427, 49.0921, 0.5338 ) }
    dend_30 { pt3dadd( 430.619, 453.5, 48.9728, 0.483 ) }
    dend_30 { pt3dadd( 430.98, 454.505, 48.0808, 0.4576 ) }
    dend_30 { pt3dadd( 431.404, 455.376, 49.4544, 0.4322 ) }
    dend_30 { pt3dadd( 431.636, 456.47, 49.2699, 0.483 ) }
    dend_30 { pt3dadd( 431.971, 457.474, 49.9136, 0.4576 ) }
    dend_30 { pt3dadd( 432.072, 458.568, 49.152, 0.4322 ) }
    dend_30 { pt3dadd( 432.227, 459.684, 48.879, 0.356 ) }
    dend_30 { pt3dadd( 432.436, 460.796, 49.1708, 0.3814 ) }
    dend_30 { pt3dadd( 432.538, 461.898, 49.7294, 0.4068 ) }
    dend_30 { pt3dadd( 432.735, 462.963, 50.0279, 0.4576 ) }
    dend_30 { pt3dadd( 432.993, 464.035, 49.996, 0.4322 ) }
    dend_30 { pt3dadd( 433.373, 465.09, 50.4885, 0.4322 ) }
    dend_30 { pt3dadd( 433.767, 466.147, 50.9242, 0.4322 ) }
    dend_30 { pt3dadd( 434.233, 467.176, 51.058, 0.4576 ) }
    dend_30 { pt3dadd( 434.672, 468.225, 51.1736, 0.4576 ) }
    dend_30 { pt3dadd( 435.204, 469.201, 51.7258, 0.483 ) }
    dend_30 { pt3dadd( 435.666, 470.236, 51.8871, 0.5084 ) }
    dend_30 { pt3dadd( 436.318, 471.138, 51.4307, 0.5084 ) }
    dend_30 { pt3dadd( 437.196, 471.842, 51.6981, 0.5338 ) }
    dend_30 { pt3dadd( 438.179, 472.422, 51.6869, 0.5848 ) }
    dend_30 { pt3dadd( 438.798, 473.355, 51.9562, 0.6356 ) }
    dend_30 { pt3dadd( 439.284, 474.301, 51.1529, 0.5592 ) }
    dend_30 { pt3dadd( 439.968, 475.167, 51.4326, 0.4068 ) }
    dend_30 { pt3dadd( 441.019, 475.57, 51.52, 0.2796 ) }
    dend_30 { pt3dadd( 441.932, 476.229, 51.52, 0.2288 ) }
    dend_30 { pt3dadd( 442.827, 476.942, 51.52, 0.2288 ) }
    dend_30 { pt3dadd( 443.265, 477.967, 51.52, 0.2288 ) }
    dend_30 { pt3dadd( 444.201, 478.572, 51.52, 0.2288 ) }
    dend_30 { pt3dadd( 444.614, 479.636, 51.52, 0.2288 ) }
    dend_30 { pt3dadd( 445.256, 480.581, 51.5418, 0.2288 ) }
    dend_30 { pt3dadd( 446.323, 480.677, 52.3664, 0.2288 ) }
    dend_30 { pt3dadd( 447.119, 480.256, 53.9412, 0.2288 ) }
    dend_30 { pt3dadd( 448.231, 480.163, 54.04, 0.2542 ) }
    dend_30 { pt3dadd( 449.065, 479.393, 54.0504, 0.2796 ) }
    dend_30 { pt3dadd( 449.827, 478.74, 54.6745, 0.3304 ) }
    dend_30 { pt3dadd( 450.853, 478.659, 55.517, 0.3814 ) }
    dend_30 { pt3dadd( 451.995, 478.663, 55.6315, 0.4322 ) }
    dend_30 { pt3dadd( 453.094, 478.733, 56.2344, 0.4322 ) }
    dend_30 { pt3dadd( 454.158, 479.037, 56.7182, 0.3814 ) }
    dend_30 { pt3dadd( 455.122, 479.623, 56.6009, 0.3814 ) }
    dend_30 { pt3dadd( 456.081, 480.236, 56.5334, 0.4068 ) }
    dend_30 { pt3dadd( 456.987, 480.9, 56.919, 0.4322 ) }
    dend_30 { pt3dadd( 457.929, 481.49, 57.5375, 0.356 ) }
    dend_30 { pt3dadd( 458.718, 482.291, 57.68, 0.2796 ) }
    dend_30 { pt3dadd( 459.364, 483.226, 57.9286, 0.2288 ) }
    dend_30 { pt3dadd( 459.561, 484.328, 58.0698, 0.2542 ) }
    dend_30 { pt3dadd( 460.461, 485.006, 58.5292, 0.2796 ) }
    dend_30 { pt3dadd( 461.499, 485.482, 58.6611, 0.305 ) }
    dend_30 { pt3dadd( 462.466, 486.087, 58.6978, 0.2796 ) }
    dend_30 { pt3dadd( 463.286, 486.881, 58.8, 0.2542 ) }
    dend_30 { pt3dadd( 464.144, 487.59, 58.8, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_30 { pt3dadd( 464.519, 488.644, 58.7941, 0.2288 ) }
    dend_30 { pt3dadd( 465.223, 489.503, 58.6342, 0.2288 ) }
    dend_30 { pt3dadd( 465.562, 490.572, 58.4007, 0.2288 ) }
    dend_30 { pt3dadd( 465.865, 491.652, 58.7989, 0.2288 ) }
    dend_30 { pt3dadd( 466.209, 492.688, 58.8, 0.2288 ) }
    dend_30 { pt3dadd( 467.078, 493.418, 58.8, 0.2542 ) }
    dend_30 { pt3dadd( 467.869, 494.172, 58.6421, 0.2796 ) }
    dend_30 { pt3dadd( 468.537, 495.0, 57.9303, 0.305 ) }
    dend_30 { pt3dadd( 469.421, 495.595, 58.1854, 0.2796 ) }
    dend_30 { pt3dadd( 470.341, 496.229, 58.3358, 0.2542 ) }
    dend_30 { pt3dadd( 471.285, 496.792, 58.8787, 0.2542 ) }
    dend_30 { pt3dadd( 472.299, 497.294, 58.9142, 0.305 ) }
    dend_30 { pt3dadd( 473.223, 497.085, 57.7987, 0.356 ) }
    dend_30 { pt3dadd( 474.193, 497.173, 59.1279, 0.356 ) }
    dend_30 { pt3dadd( 475.258, 497.525, 59.4868, 0.305 ) }
    dend_30 { pt3dadd( 476.348, 497.793, 59.6277, 0.2542 ) }
    dend_30 { pt3dadd( 477.418, 498.098, 59.64, 0.2288 ) }
    dend_30 { pt3dadd( 478.562, 498.098, 59.64, 0.2288 ) }
    dend_30 { pt3dadd( 479.689, 498.226, 59.64, 0.2288 ) }
    dend_30 { pt3dadd( 480.64, 498.784, 59.64, 0.2288 ) }
    dend_30 { pt3dadd( 481.298, 499.705, 59.64, 0.2288 ) }
    dend_30 { pt3dadd( 481.84, 500.712, 59.64, 0.2288 ) }
    dend_30 { pt3dadd( 482.346, 501.736, 59.6504, 0.2288 ) }
    dend_30 { pt3dadd( 482.931, 502.708, 59.6702, 0.2542 ) }
    dend_30 { pt3dadd( 483.509, 503.686, 59.6554, 0.3304 ) }
    dend_30 { pt3dadd( 484.048, 504.661, 59.1436, 0.4068 ) }
    dend_30 { pt3dadd( 484.528, 505.65, 58.3926, 0.4322 ) }
    dend_30 { pt3dadd( 485.323, 506.35, 58.6132, 0.3814 ) }
    dend_30 { pt3dadd( 486.34, 506.863, 58.791, 0.356 ) }
    dend_30 { pt3dadd( 487.27, 507.481, 58.2364, 0.3814 ) }
    dend_30 { pt3dadd( 487.979, 508.36, 57.8743, 0.4068 ) }
    dend_30 { pt3dadd( 488.614, 509.301, 58.2092, 0.3814 ) }
    dend_30 { pt3dadd( 489.242, 510.235, 57.9788, 0.305 ) }
    dend_30 { pt3dadd( 489.96, 511.103, 57.68, 0.2796 ) }
    dend_30 { pt3dadd( 490.689, 511.983, 57.68, 0.3304 ) }
    dend_30 { pt3dadd( 491.302, 512.946, 57.7119, 0.4068 ) }
    dend_30 { pt3dadd( 491.865, 513.935, 57.526, 0.4322 ) }
    dend_30 { pt3dadd( 492.506, 514.806, 58.1395, 0.3814 ) }
    dend_30 { pt3dadd( 493.05, 515.792, 58.1157, 0.3814 ) }
    dend_30 { pt3dadd( 493.435, 516.93, 57.7676, 0.483 ) }
    dend_30 { pt3dadd( 494.303, 517.586, 58.5948, 0.4576 ) }
    dend_30 { pt3dadd( 495.104, 518.146, 58.3696, 0.4068 ) }
    dend_30 { pt3dadd( 495.468, 519.011, 56.8039, 0.4322 ) }
    dend_30 { pt3dadd( 496.226, 519.734, 56.105, 0.5084 ) }
    dend_30 { pt3dadd( 496.844, 520.65, 56.2335, 0.5848 ) }
    dend_30 { pt3dadd( 497.137, 521.744, 56.5566, 0.5592 ) }
    dend_30 { pt3dadd( 497.785, 522.65, 56.3212, 0.4576 ) }
    dend_30 { pt3dadd( 497.982, 523.767, 56.0339, 0.4068 ) }
    dend_30 { pt3dadd( 498.022, 524.898, 55.9656, 0.4576 ) }
    dend_30 { pt3dadd( 498.468, 525.846, 55.0794, 0.5848 ) }
    dend_30 { pt3dadd( 499.334, 526.497, 54.7758, 0.6102 ) }
    dend_30 { pt3dadd( 499.625, 527.398, 54.4639, 0.5848 ) }
    dend_30 { pt3dadd( 499.724, 528.486, 54.88, 0.5592 ) }
    dend_30 { pt3dadd( 499.652, 529.581, 54.7014, 0.6102 ) }
    dend_30 { pt3dadd( 500.04, 530.615, 54.2836, 0.6102 ) }
    dend_30 { pt3dadd( 500.189, 531.73, 54.5849, 0.5848 ) }
    dend_30 { pt3dadd( 500.262, 532.85, 54.8573, 0.5084 ) }
    dend_30 { pt3dadd( 500.325, 533.954, 55.4274, 0.483 ) }
    dend_30 { pt3dadd( 500.27, 535.068, 55.1046, 0.4068 ) }
    dend_30 { pt3dadd( 500.14, 536.196, 55.0292, 0.3304 ) }
    dend_30 { pt3dadd( 500.001, 537.3, 55.5859, 0.2542 ) }
    dend_30 { pt3dadd( 499.712, 538.404, 55.7035, 0.2288 ) }
    dend_30 { pt3dadd( 499.508, 539.525, 55.9118, 0.2288 ) }
    dend_30 { pt3dadd( 499.418, 540.641, 55.8177, 0.2288 ) }
    dend_30 { pt3dadd( 499.68, 541.723, 55.2782, 0.2542 ) }
    dend_30 { pt3dadd( 499.825, 542.773, 55.6811, 0.3304 ) }
    dend_30 { pt3dadd( 499.681, 543.821, 55.2549, 0.4576 ) }
    dend_30 { pt3dadd( 499.466, 544.841, 54.1052, 0.5338 ) }
    dend_30 { pt3dadd( 498.919, 545.808, 54.3024, 0.5592 ) }
    dend_30 { pt3dadd( 498.869, 546.935, 54.455, 0.5592 ) }
    dend_30 { pt3dadd( 498.78, 548.057, 54.1391, 0.5848 ) }
    dend_30 { pt3dadd( 498.52, 548.817, 52.6865, 0.5592 ) }
    dend_30 { pt3dadd( 498.321, 549.49, 51.8848, 0.4322 ) }
    dend_30 { pt3dadd( 498.178, 549.914, 49.6082, 0.3304 ) }
    dend_30 { pt3dadd( 498.246, 550.946, 49.4147, 0.2796 ) }
    dend_30 { pt3dadd( 498.554, 552.035, 49.6448, 0.305 ) }
    dend_30 { pt3dadd( 499.355, 552.666, 48.72, 0.305 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 77/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 406.121, 407.884, 40.8624, 0.6356 ) }
    dend_29 { pt3dadd( 406.137, 409.022, 40.8811, 0.3304 ) }
    dend_29 { pt3dadd( 406.219, 410.164, 40.8962, 0.4068 ) }
    dend_29 { pt3dadd( 406.4, 411.292, 41.0141, 0.5084 ) }
    dend_29 { pt3dadd( 405.963, 412.307, 41.6231, 0.5592 ) }
    dend_29 { pt3dadd( 405.371, 413.273, 41.9818, 0.5592 ) }
    dend_29 { pt3dadd( 404.861, 414.296, 42.0, 0.5338 ) }
    dend_29 { pt3dadd( 404.727, 415.43, 42.0006, 0.6102 ) }
    dend_29 { pt3dadd( 404.61, 416.568, 42.0036, 0.6864 ) }
    dend_29 { pt3dadd( 404.298, 417.668, 42.0238, 0.7372 ) }
    dend_29 { pt3dadd( 404.063, 418.785, 42.1652, 0.661 ) }
    dend_29 { pt3dadd( 403.798, 419.879, 42.6661, 0.6102 ) }
    dend_29 { pt3dadd( 403.572, 420.99, 43.0475, 0.5848 ) }
    dend_29 { pt3dadd( 403.092, 422.022, 42.8134, 0.6356 ) }
    dend_29 { pt3dadd( 402.6, 423.026, 42.2285, 0.6356 ) }
    dend_29 { pt3dadd( 402.168, 424.083, 42.1196, 0.6864 ) }
    dend_29 { pt3dadd( 401.971, 425.198, 42.5152, 0.661 ) }
    dend_29 { pt3dadd( 401.829, 426.309, 43.0842, 0.661 ) }
    dend_29 { pt3dadd( 401.506, 427.406, 43.0427, 0.5592 ) }
    dend_29 { pt3dadd( 401.335, 428.527, 42.6768, 0.5338 ) }
    dend_29 { pt3dadd( 401.162, 429.649, 42.3111, 0.5084 ) }
    dend_29 { pt3dadd( 400.796, 430.271, 42.9383, 0.5592 ) }
    dend_29 { pt3dadd( 400.288, 431.234, 42.8963, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_29 { pt3dadd( 399.877, 432.136, 42.7602, 0.5084 ) }
    dend_29 { pt3dadd( 399.477, 433.154, 43.4655, 0.3814 ) }
    dend_29 { pt3dadd( 399.024, 434.116, 42.8151, 0.305 ) }
    dend_29 { pt3dadd( 398.453, 435.085, 42.87, 0.305 ) }
    dend_29 { pt3dadd( 397.942, 436.039, 43.6761, 0.3814 ) }
    dend_29 { pt3dadd( 397.744, 437.136, 43.0746, 0.4322 ) }
    dend_29 { pt3dadd( 397.501, 438.241, 43.0531, 0.4576 ) }
    dend_29 { pt3dadd( 396.927, 439.203, 43.5725, 0.4576 ) }
    dend_29 { pt3dadd( 396.53, 440.271, 43.822, 0.4576 ) }
    dend_29 { pt3dadd( 396.027, 441.291, 43.8662, 0.4576 ) }
    dend_29 { pt3dadd( 395.531, 442.265, 43.7928, 0.4576 ) }
    dend_29 { pt3dadd( 395.106, 443.274, 44.371, 0.483 ) }
    dend_29 { pt3dadd( 394.734, 444.355, 44.4287, 0.5084 ) }
    dend_29 { pt3dadd( 394.583, 445.462, 44.9319, 0.5338 ) }
    dend_29 { pt3dadd( 394.565, 446.599, 45.1643, 0.5084 ) }
    dend_29 { pt3dadd( 394.403, 447.722, 44.8857, 0.4576 ) }
    dend_29 { pt3dadd( 394.064, 448.812, 44.9207, 0.4068 ) }
    dend_29 { pt3dadd( 393.997, 449.95, 44.8092, 0.3814 ) }
    dend_29 { pt3dadd( 393.703, 451.048, 45.0699, 0.4322 ) }
    dend_29 { pt3dadd( 393.223, 452.082, 44.8568, 0.4576 ) }
    dend_29 { pt3dadd( 392.82, 453.109, 44.4856, 0.4576 ) }
    dend_29 { pt3dadd( 392.426, 454.028, 45.5731, 0.3814 ) }
    dend_29 { pt3dadd( 391.788, 454.969, 45.2852, 0.3304 ) }
    dend_29 { pt3dadd( 391.087, 455.863, 44.9826, 0.305 ) }
    dend_29 { pt3dadd( 390.574, 456.847, 44.8913, 0.2796 ) }
    dend_29 { pt3dadd( 390.098, 457.865, 45.0761, 0.2542 ) }
    dend_29 { pt3dadd( 389.402, 458.767, 45.285, 0.2542 ) }
    dend_29 { pt3dadd( 388.751, 459.703, 45.2782, 0.2796 ) }
    dend_29 { pt3dadd( 388.099, 460.641, 45.1704, 0.3304 ) }
    dend_29 { pt3dadd( 387.524, 461.591, 45.6515, 0.356 ) }
    dend_29 { pt3dadd( 386.94, 462.547, 45.6596, 0.3814 ) }
    dend_29 { pt3dadd( 386.322, 463.505, 45.6179, 0.356 ) }
    dend_29 { pt3dadd( 385.639, 464.416, 45.8511, 0.305 ) }
    dend_29 { pt3dadd( 385.091, 465.414, 45.92, 0.2796 ) }
    dend_29 { pt3dadd( 384.353, 466.263, 45.6744, 0.2796 ) }
    dend_29 { pt3dadd( 383.725, 467.191, 45.1783, 0.3304 ) }
    dend_29 { pt3dadd( 383.056, 468.103, 45.4532, 0.3814 ) }
    dend_29 { pt3dadd( 382.61, 469.128, 44.8991, 0.4576 ) }
    dend_29 { pt3dadd( 382.262, 470.208, 45.1086, 0.483 ) }
    dend_29 { pt3dadd( 382.26, 471.337, 45.1702, 0.4322 ) }
    dend_29 { pt3dadd( 381.74, 472.31, 45.4754, 0.3304 ) }
    dend_29 { pt3dadd( 381.112, 473.227, 45.2673, 0.2542 ) }
    dend_29 { pt3dadd( 380.789, 474.308, 45.36, 0.2542 ) }
    dend_29 { pt3dadd( 380.386, 475.362, 45.36, 0.2796 ) }
    dend_29 { pt3dadd( 379.849, 476.367, 45.5314, 0.305 ) }
    dend_29 { pt3dadd( 379.671, 477.454, 45.1489, 0.2796 ) }
    dend_29 { pt3dadd( 379.26, 478.507, 45.096, 0.2542 ) }
    dend_29 { pt3dadd( 378.72, 479.514, 45.0803, 0.2288 ) }
    dend_29 { pt3dadd( 378.073, 480.457, 45.0184, 0.2288 ) }
    dend_29 { pt3dadd( 377.505, 481.451, 44.9876, 0.2288 ) }
    dend_29 { pt3dadd( 376.956, 482.41, 44.2655, 0.2288 ) }
    dend_29 { pt3dadd( 376.464, 483.426, 44.0602, 0.2288 ) }
    dend_29 { pt3dadd( 376.159, 484.524, 44.24, 0.2542 ) }
    dend_29 { pt3dadd( 375.688, 485.549, 44.1426, 0.2796 ) }
    dend_29 { pt3dadd( 375.182, 486.491, 43.5252, 0.305 ) }
    dend_29 { pt3dadd( 374.964, 487.519, 43.5425, 0.2796 ) }
    dend_29 { pt3dadd( 374.874, 488.579, 42.978, 0.2796 ) }
    dend_29 { pt3dadd( 374.415, 489.602, 42.84, 0.2796 ) }
    dend_29 { pt3dadd( 373.824, 490.582, 42.8884, 0.305 ) }
    dend_29 { pt3dadd( 373.746, 491.707, 43.0875, 0.2796 ) }
    dend_29 { pt3dadd( 373.889, 492.833, 42.8075, 0.2796 ) }
    dend_29 { pt3dadd( 373.969, 493.97, 42.5561, 0.305 ) }
    dend_29 { pt3dadd( 374.061, 495.084, 43.1116, 0.3814 ) }
    dend_29 { pt3dadd( 374.211, 496.218, 43.125, 0.4322 ) }
    dend_29 { pt3dadd( 374.201, 497.343, 43.584, 0.4322 ) }
    dend_29 { pt3dadd( 374.153, 498.458, 43.2516, 0.3814 ) }
    dend_29 { pt3dadd( 373.942, 499.563, 43.6383, 0.305 ) }
    dend_29 { pt3dadd( 373.74, 500.684, 43.414, 0.2542 ) }
    dend_29 { pt3dadd( 373.422, 501.769, 43.1315, 0.2288 ) }
    dend_29 { pt3dadd( 372.784, 502.69, 43.12, 0.2288 ) }
    dend_29 { pt3dadd( 371.939, 503.446, 43.1116, 0.2288 ) }
    dend_29 { pt3dadd( 371.408, 504.435, 42.9848, 0.2288 ) }
    dend_29 { pt3dadd( 371.23, 505.552, 42.8893, 0.2288 ) }
    dend_29 { pt3dadd( 371.171, 506.691, 42.9979, 0.2288 ) }
    dend_29 { pt3dadd( 370.859, 507.769, 42.957, 0.2542 ) }
    dend_29 { pt3dadd( 370.433, 508.819, 42.9551, 0.2796 ) }
    dend_29 { pt3dadd( 369.986, 509.851, 43.2482, 0.305 ) }
    dend_29 { pt3dadd( 369.413, 510.83, 43.582, 0.305 ) }
    dend_29 { pt3dadd( 369.227, 511.9, 43.5025, 0.356 ) }
    dend_29 { pt3dadd( 368.905, 512.944, 43.1934, 0.4576 ) }
    dend_29 { pt3dadd( 368.519, 513.999, 43.5868, 0.5338 ) }
    dend_29 { pt3dadd( 368.003, 514.991, 42.8786, 0.4068 ) }
    dend_29 { pt3dadd( 367.615, 516.04, 42.4026, 0.3304 ) }
    dend_29 { pt3dadd( 367.198, 517.081, 42.632, 0.3814 ) }
    dend_29 { pt3dadd( 366.717, 518.094, 42.4973, 0.4576 ) }
    dend_29 { pt3dadd( 366.104, 518.719, 40.9268, 0.5592 ) }
    dend_29 { pt3dadd( 365.708, 519.668, 39.7345, 0.5592 ) }
    dend_29 { pt3dadd( 365.313, 520.692, 39.4915, 0.5592 ) }
    dend_29 { pt3dadd( 364.714, 521.523, 40.4799, 0.5338 ) }
    dend_29 { pt3dadd( 364.084, 522.474, 40.3194, 0.5338 ) }
    dend_29 { pt3dadd( 363.419, 523.403, 40.4275, 0.5084 ) }
    dend_29 { pt3dadd( 362.637, 524.207, 40.2338, 0.5338 ) }
    dend_29 { pt3dadd( 361.702, 524.826, 39.7046, 0.5848 ) }
    dend_29 { pt3dadd( 361.018, 525.703, 39.6838, 0.6864 ) }
    dend_29 { pt3dadd( 360.103, 526.333, 39.989, 0.661 ) }
    dend_29 { pt3dadd( 359.304, 527.105, 40.0604, 0.5592 ) }
    dend_29 { pt3dadd( 358.51, 527.852, 40.6792, 0.483 ) }
    dend_29 { pt3dadd( 357.598, 528.422, 40.1248, 0.483 ) }
    dend_29 { pt3dadd( 356.676, 528.817, 38.8108, 0.5084 ) }
    dend_29 { pt3dadd( 355.813, 529.389, 38.5451, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_29 { pt3dadd( 355.094, 530.194, 39.2482, 0.4322 ) }
    dend_29 { pt3dadd( 354.549, 531.134, 39.4173, 0.4576 ) }
    dend_29 { pt3dadd( 353.688, 531.834, 38.8077, 0.483 ) }
    dend_29 { pt3dadd( 352.755, 532.462, 38.3009, 0.4576 ) }
    dend_29 { pt3dadd( 351.946, 533.225, 37.7104, 0.3814 ) }
    dend_29 { pt3dadd( 351.086, 533.873, 36.8922, 0.305 ) }
    dend_29 { pt3dadd( 350.107, 534.406, 37.4674, 0.305 ) }
    dend_29 { pt3dadd( 349.184, 534.867, 38.0904, 0.3304 ) }
    dend_29 { pt3dadd( 348.401, 535.574, 37.021, 0.4322 ) }
    dend_29 { pt3dadd( 347.545, 536.201, 36.0416, 0.4322 ) }
    dend_29 { pt3dadd( 346.672, 536.761, 36.2888, 0.4576 ) }
    dend_29 { pt3dadd( 345.645, 537.178, 36.7284, 0.4322 ) }
    dend_29 { pt3dadd( 344.65, 537.589, 36.8074, 0.4576 ) }
    dend_29 { pt3dadd( 343.865, 537.883, 35.2344, 0.4322 ) }
    dend_29 { pt3dadd( 343.212, 538.623, 34.1746, 0.356 ) }
    dend_29 { pt3dadd( 342.888, 539.616, 35.1702, 0.3304 ) }
    dend_29 { pt3dadd( 341.779, 539.737, 35.285, 0.356 ) }
    dend_29 { pt3dadd( 341.083, 540.191, 36.9404, 0.4322 ) }
    dend_29 { pt3dadd( 340.528, 541.164, 36.9799, 0.4576 ) }
    dend_29 { pt3dadd( 339.995, 542.148, 36.4616, 0.4322 ) }
    dend_29 { pt3dadd( 339.536, 543.169, 36.1497, 0.4322 ) }
    dend_29 { pt3dadd( 338.634, 543.85, 36.2513, 0.4068 ) }
    dend_29 { pt3dadd( 337.948, 544.6, 35.3321, 0.4068 ) }
    dend_29 { pt3dadd( 337.823, 545.42, 33.605, 0.4068 ) }
    dend_29 { pt3dadd( 337.675, 545.812, 30.9991, 0.4322 ) }
    dend_29 { pt3dadd( 337.597, 546.549, 29.7455, 0.4576 ) }
    dend_29 { pt3dadd( 337.345, 547.564, 29.1388, 0.4322 ) }
    dend_29 { pt3dadd( 336.818, 548.498, 28.2069, 0.3814 ) }
    dend_29 { pt3dadd( 336.343, 549.508, 28.2358, 0.4068 ) }
    dend_29 { pt3dadd( 336.221, 550.607, 27.72, 0.483 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 443.261, 383.121, 39.2708, 0.7372 ) }
    dend_27 { pt3dadd( 444.711, 383.167, 39.3879, 0.5848 ) }
    dend_27 { pt3dadd( 445.854, 383.202, 39.48, 0.5848 ) }
    dend_27 { pt3dadd( 446.313, 383.461, 39.8275, 0.5848 ) }
    dend_27 { pt3dadd( 447.256, 384.103, 39.9311, 0.5848 ) }
    dend_27 { pt3dadd( 448.328, 384.422, 39.7821, 0.5592 ) }
    dend_27 { pt3dadd( 449.415, 384.367, 39.9151, 0.483 ) }
    dend_27 { pt3dadd( 450.447, 384.857, 39.9888, 0.4322 ) }
    dend_27 { pt3dadd( 451.515, 385.213, 39.739, 0.4068 ) }
    dend_27 { pt3dadd( 452.599, 385.339, 40.0484, 0.4322 ) }
    dend_27 { pt3dadd( 453.643, 385.248, 40.0459, 0.4322 ) }
    dend_27 { pt3dadd( 454.546, 385.076, 41.141, 0.356 ) }
    dend_27 { pt3dadd( 455.603, 385.169, 41.897, 0.3304 ) }
    dend_27 { pt3dadd( 456.724, 385.144, 42.3769, 0.356 ) }
    dend_27 { pt3dadd( 457.79, 384.914, 43.2102, 0.4322 ) }
    dend_27 { pt3dadd( 458.825, 384.642, 44.1081, 0.4068 ) }
    dend_27 { pt3dadd( 459.947, 384.501, 44.2173, 0.356 ) }
    dend_27 { pt3dadd( 461.085, 384.494, 44.24, 0.356 ) }
    dend_27 { pt3dadd( 462.194, 384.239, 44.191, 0.4068 ) }
    dend_27 { pt3dadd( 463.231, 384.377, 44.5432, 0.483 ) }
    dend_27 { pt3dadd( 464.279, 384.313, 45.5666, 0.483 ) }
    dend_27 { pt3dadd( 465.375, 384.636, 45.7064, 0.483 ) }
    dend_27 { pt3dadd( 466.439, 384.986, 46.1936, 0.4068 ) }
    dend_27 { pt3dadd( 467.453, 385.227, 47.0814, 0.3814 ) }
    dend_27 { pt3dadd( 468.489, 385.581, 46.4414, 0.356 ) }
    dend_27 { pt3dadd( 469.484, 386.108, 46.5175, 0.4068 ) }
    dend_27 { pt3dadd( 470.587, 386.369, 46.8003, 0.3814 ) }
    dend_27 { pt3dadd( 471.652, 386.725, 46.844, 0.356 ) }
    dend_27 { pt3dadd( 472.456, 387.492, 47.0767, 0.2796 ) }
    dend_27 { pt3dadd( 473.209, 388.334, 47.1391, 0.2542 ) }
    dend_27 { pt3dadd( 474.148, 388.973, 47.3172, 0.2542 ) }
    dend_27 { pt3dadd( 475.23, 389.292, 47.3424, 0.305 ) }
    dend_27 { pt3dadd( 476.343, 389.555, 47.3567, 0.356 ) }
    dend_27 { pt3dadd( 477.374, 390.034, 47.425, 0.356 ) }
    dend_27 { pt3dadd( 478.431, 390.429, 47.7814, 0.3304 ) }
    dend_27 { pt3dadd( 479.513, 390.787, 47.9567, 0.3304 ) }
    dend_27 { pt3dadd( 480.548, 391.216, 47.4827, 0.356 ) }
    dend_27 { pt3dadd( 481.542, 391.685, 48.0267, 0.356 ) }
    dend_27 { pt3dadd( 482.564, 392.191, 48.1586, 0.305 ) }
    dend_27 { pt3dadd( 483.504, 392.831, 48.44, 0.2542 ) }
    dend_27 { pt3dadd( 484.577, 393.197, 48.44, 0.2288 ) }
    dend_27 { pt3dadd( 485.157, 394.176, 48.4305, 0.2288 ) }
    dend_27 { pt3dadd( 486.091, 394.831, 48.2793, 0.2288 ) }
    dend_27 { pt3dadd( 487.064, 395.425, 48.16, 0.2542 ) }
    dend_27 { pt3dadd( 487.891, 396.211, 48.1737, 0.305 ) }
    dend_27 { pt3dadd( 488.629, 397.073, 48.2202, 0.356 ) }
    dend_27 { pt3dadd( 489.598, 397.657, 48.16, 0.356 ) }
    dend_27 { pt3dadd( 490.687, 397.999, 48.16, 0.305 ) }
    dend_27 { pt3dadd( 491.488, 398.697, 48.16, 0.2542 ) }
    dend_27 { pt3dadd( 492.072, 399.643, 48.16, 0.2288 ) }
    dend_27 { pt3dadd( 492.952, 400.37, 48.1029, 0.2542 ) }
    dend_27 { pt3dadd( 493.683, 401.19, 47.696, 0.2796 ) }
    dend_27 { pt3dadd( 494.391, 402.031, 47.4858, 0.305 ) }
    dend_27 { pt3dadd( 495.273, 402.674, 48.2045, 0.2796 ) }
    dend_27 { pt3dadd( 496.152, 403.26, 49.28, 0.2542 ) }
    dend_27 { pt3dadd( 497.177, 403.601, 49.28, 0.2288 ) }
    dend_27 { pt3dadd( 498.273, 403.887, 49.28, 0.2288 ) }
    dend_27 { pt3dadd( 499.394, 404.061, 49.28, 0.2288 ) }
    dend_27 { pt3dadd( 500.529, 404.161, 49.28, 0.2288 ) }
    dend_27 { pt3dadd( 501.656, 404.264, 49.28, 0.2288 ) }
    dend_27 { pt3dadd( 502.778, 404.404, 49.28, 0.2288 ) }
    dend_27 { pt3dadd( 503.916, 404.404, 49.4502, 0.2288 ) }
    dend_27 { pt3dadd( 504.958, 404.404, 50.4, 0.2288 ) }
    dend_27 { pt3dadd( 506.094, 404.404, 50.629, 0.2288 ) }
    dend_27 { pt3dadd( 507.236, 404.404, 50.68, 0.2288 ) }
    dend_27 { pt3dadd( 508.38, 404.404, 50.7021, 0.2288 ) }
    dend_27 { pt3dadd( 509.289, 404.404, 51.9481, 0.2288 ) }
    dend_27 { pt3dadd( 510.361, 404.404, 52.36, 0.2288 ) }
    dend_27 { pt3dadd( 511.5, 404.471, 52.36, 0.2288 ) }
    dend_27 { pt3dadd( 512.588, 404.747, 52.5316, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_27 { pt3dadd( 513.655, 405.013, 52.9259, 0.2542 ) }
    dend_27 { pt3dadd( 514.694, 405.317, 53.599, 0.305 ) }
    dend_27 { pt3dadd( 515.794, 405.43, 54.04, 0.3814 ) }
    dend_27 { pt3dadd( 516.64, 405.945, 54.6022, 0.4068 ) }
    dend_27 { pt3dadd( 517.615, 406.203, 55.72, 0.4068 ) }
    dend_27 { pt3dadd( 518.736, 406.429, 55.72, 0.356 ) }
    dend_27 { pt3dadd( 519.833, 406.692, 55.72, 0.356 ) }
    dend_27 { pt3dadd( 520.978, 406.692, 55.72, 0.3304 ) }
    dend_27 { pt3dadd( 522.105, 406.749, 55.72, 0.3304 ) }
    dend_27 { pt3dadd( 523.036, 407.264, 55.72, 0.2796 ) }
    dend_27 { pt3dadd( 524.181, 407.264, 55.72, 0.305 ) }
    dend_27 { pt3dadd( 525.324, 407.264, 55.72, 0.356 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 12/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 443.261, 383.121, 39.2708, 0.7372 ) }
    dend_26 { pt3dadd( 444.156, 381.807, 39.7194, 0.4322 ) }
    dend_26 { pt3dadd( 444.923, 380.979, 39.7578, 0.4322 ) }
    dend_26 { pt3dadd( 445.693, 380.166, 39.3, 0.483 ) }
    dend_26 { pt3dadd( 446.471, 379.36, 39.6542, 0.5592 ) }
    dend_26 { pt3dadd( 447.047, 378.389, 39.6735, 0.6102 ) }
    dend_26 { pt3dadd( 448.04, 377.851, 39.4526, 0.6102 ) }
    dend_26 { pt3dadd( 449.055, 377.343, 39.5875, 0.5848 ) }
    dend_26 { pt3dadd( 449.999, 377.005, 40.777, 0.5338 ) }
    dend_26 { pt3dadd( 451.069, 376.696, 41.1015, 0.483 ) }
    dend_26 { pt3dadd( 451.958, 376.12, 40.9321, 0.483 ) }
    dend_26 { pt3dadd( 452.648, 375.388, 41.7054, 0.5592 ) }
    dend_26 { pt3dadd( 453.41, 374.616, 41.7301, 0.6356 ) }
    dend_26 { pt3dadd( 454.255, 373.896, 41.8169, 0.7118 ) }
    dend_26 { pt3dadd( 455.265, 373.418, 42.3539, 0.6864 ) }
    dend_26 { pt3dadd( 456.175, 372.909, 42.8274, 0.661 ) }
    dend_26 { pt3dadd( 457.073, 372.645, 41.7396, 0.5848 ) }
    dend_26 { pt3dadd( 458.057, 372.302, 42.779, 0.5848 ) }
    dend_26 { pt3dadd( 459.101, 372.174, 43.7676, 0.5592 ) }
    dend_26 { pt3dadd( 460.104, 371.731, 43.7304, 0.5592 ) }
    dend_26 { pt3dadd( 461.18, 371.478, 43.8771, 0.483 ) }
    dend_26 { pt3dadd( 462.26, 371.467, 44.4049, 0.4322 ) }
    dend_26 { pt3dadd( 463.2, 371.678, 45.3832, 0.3814 ) }
    dend_26 { pt3dadd( 464.202, 371.341, 44.5981, 0.4322 ) }
    dend_26 { pt3dadd( 465.149, 370.758, 44.0558, 0.4576 ) }
    dend_26 { pt3dadd( 466.185, 370.4, 44.4973, 0.5338 ) }
    dend_26 { pt3dadd( 467.26, 370.282, 44.0448, 0.5592 ) }
    dend_26 { pt3dadd( 468.19, 369.861, 44.8868, 0.661 ) }
    dend_26 { pt3dadd( 469.064, 369.224, 45.7503, 0.6864 ) }
    dend_26 { pt3dadd( 470.149, 368.88, 45.6201, 0.7118 ) }
    dend_26 { pt3dadd( 471.121, 368.414, 45.6434, 0.6864 ) }
    dend_26 { pt3dadd( 472.1, 367.993, 46.4694, 0.6356 ) }
    dend_26 { pt3dadd( 473.172, 368.16, 46.769, 0.5592 ) }
    dend_26 { pt3dadd( 474.239, 367.93, 47.0784, 0.4576 ) }
    dend_26 { pt3dadd( 475.232, 367.556, 46.3784, 0.4576 ) }
    dend_26 { pt3dadd( 476.184, 367.375, 47.5801, 0.483 ) }
    dend_26 { pt3dadd( 477.259, 367.277, 47.6801, 0.5338 ) }
    dend_26 { pt3dadd( 478.342, 367.541, 48.1309, 0.5592 ) }
    dend_26 { pt3dadd( 479.469, 367.59, 48.2622, 0.6102 ) }
    dend_26 { pt3dadd( 480.604, 367.596, 48.435, 0.661 ) }
    dend_26 { pt3dadd( 481.694, 367.288, 48.1508, 0.6356 ) }
    dend_26 { pt3dadd( 482.832, 367.224, 47.9699, 0.5848 ) }
    dend_26 { pt3dadd( 483.666, 367.184, 49.5569, 0.5592 ) }
    dend_26 { pt3dadd( 484.679, 366.669, 49.8803, 0.6102 ) }
    dend_26 { pt3dadd( 485.728, 366.223, 50.0746, 0.6356 ) }
    dend_26 { pt3dadd( 486.797, 366.112, 50.4333, 0.6356 ) }
    dend_26 { pt3dadd( 487.796, 366.495, 51.3814, 0.5592 ) }
    dend_26 { pt3dadd( 488.694, 366.625, 53.0852, 0.5338 ) }
    dend_26 { pt3dadd( 489.605, 366.676, 54.2013, 0.483 ) }
    dend_26 { pt3dadd( 490.67, 366.541, 53.8415, 0.5084 ) }
    dend_26 { pt3dadd( 491.693, 366.834, 54.6862, 0.483 ) }
    dend_26 { pt3dadd( 492.641, 367.072, 54.187, 0.4576 ) }
    dend_26 { pt3dadd( 493.675, 367.202, 54.4737, 0.3814 ) }
    dend_26 { pt3dadd( 494.715, 367.625, 54.5924, 0.356 ) }
    dend_26 { pt3dadd( 495.58, 368.368, 54.6, 0.4068 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 67/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 418.284, 339.31, 31.7954, 0.966 ) }
    dend_13 { pt3dadd( 417.642, 338.338, 31.9043, 0.7626 ) }
    dend_13 { pt3dadd( 416.963, 337.418, 31.9152, 0.839 ) }
    dend_13 { pt3dadd( 416.203, 336.562, 31.9004, 0.9152 ) }
    dend_13 { pt3dadd( 415.447, 335.704, 31.8332, 0.9152 ) }
    dend_13 { pt3dadd( 414.825, 334.757, 31.5151, 0.8644 ) }
    dend_13 { pt3dadd( 414.319, 333.753, 31.0089, 0.788 ) }
    dend_13 { pt3dadd( 413.801, 332.738, 30.8174, 0.7372 ) }
    dend_13 { pt3dadd( 413.492, 331.64, 30.7989, 0.7372 ) }
    dend_13 { pt3dadd( 413.393, 330.502, 30.7938, 0.7626 ) }
    dend_13 { pt3dadd( 413.228, 329.37, 30.7583, 0.8644 ) }
    dend_13 { pt3dadd( 413.067, 328.242, 30.5054, 0.9406 ) }
    dend_13 { pt3dadd( 413.202, 327.13, 29.9995, 0.9406 ) }
    dend_13 { pt3dadd( 413.402, 326.01, 29.7052, 0.8898 ) }
    dend_13 { pt3dadd( 413.438, 324.868, 29.7147, 0.8136 ) }
    dend_13 { pt3dadd( 413.438, 323.728, 29.9331, 0.8136 ) }
    dend_13 { pt3dadd( 413.429, 322.599, 30.3806, 0.7372 ) }
    dend_13 { pt3dadd( 413.35, 321.459, 30.4181, 0.7118 ) }
    dend_13 { pt3dadd( 413.191, 320.326, 30.4038, 0.5848 ) }
    dend_13 { pt3dadd( 413.014, 319.317, 31.6308, 0.5848 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 87/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 418.284, 339.31, 31.7954, 0.966 ) }
    dend_12 { pt3dadd( 419.251, 338.952, 31.2306, 0.5338 ) }
    dend_12 { pt3dadd( 420.072, 338.21, 30.8728, 0.6356 ) }
    dend_12 { pt3dadd( 420.837, 337.36, 30.7975, 0.7118 ) }
    dend_12 { pt3dadd( 421.576, 336.487, 30.7882, 0.788 ) }
    dend_12 { pt3dadd( 422.264, 335.574, 30.7474, 0.7372 ) }
    dend_12 { pt3dadd( 422.962, 334.673, 30.555, 0.6356 ) }
    dend_12 { pt3dadd( 423.54, 333.711, 30.0793, 0.5592 ) }
    dend_12 { pt3dadd( 424.057, 332.7, 29.7464, 0.5592 ) }
    dend_12 { pt3dadd( 424.71, 331.768, 29.6831, 0.6102 ) }
    dend_12 { pt3dadd( 425.481, 330.924, 29.6918, 0.6356 ) }
    dend_12 { pt3dadd( 426.268, 330.094, 29.731, 0.5848 ) }
    dend_12 { pt3dadd( 426.991, 329.216, 29.9676, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_12 { pt3dadd( 427.62, 328.28, 30.4245, 0.356 ) }
    dend_12 { pt3dadd( 428.355, 327.423, 30.2781, 0.356 ) }
    dend_12 { pt3dadd( 429.208, 326.685, 29.8407, 0.483 ) }
    dend_12 { pt3dadd( 430.041, 325.907, 29.6929, 0.5592 ) }
    dend_12 { pt3dadd( 430.853, 325.101, 29.6806, 0.6356 ) }
    dend_12 { pt3dadd( 431.662, 324.293, 29.6817, 0.661 ) }
    dend_12 { pt3dadd( 432.472, 323.484, 29.6864, 0.661 ) }
    dend_12 { pt3dadd( 433.286, 322.68, 29.7044, 0.6356 ) }
    dend_12 { pt3dadd( 434.11, 321.888, 29.7766, 0.5848 ) }
    dend_12 { pt3dadd( 434.977, 321.153, 30.0636, 0.5848 ) }
    dend_12 { pt3dadd( 435.897, 320.496, 30.4898, 0.6102 ) }
    dend_12 { pt3dadd( 436.782, 319.779, 30.4749, 0.6864 ) }
    dend_12 { pt3dadd( 437.574, 318.957, 30.4704, 0.7372 ) }
    dend_12 { pt3dadd( 438.319, 318.097, 30.7392, 0.6864 ) }
    dend_12 { pt3dadd( 439.042, 317.213, 30.8028, 0.6356 ) }
    dend_12 { pt3dadd( 439.798, 316.354, 30.8146, 0.6102 ) }
    dend_12 { pt3dadd( 440.67, 315.617, 30.872, 0.7118 ) }
    dend_12 { pt3dadd( 441.522, 314.867, 31.1741, 0.788 ) }
    dend_12 { pt3dadd( 442.309, 314.062, 31.6781, 0.7626 ) }
    dend_12 { pt3dadd( 443.045, 313.194, 31.9066, 0.6864 ) }
    dend_12 { pt3dadd( 443.751, 312.295, 31.9771, 0.5848 ) }
    dend_12 { pt3dadd( 444.525, 311.463, 32.2582, 0.5848 ) }
    dend_12 { pt3dadd( 445.364, 310.798, 33.2002, 0.5848 ) }
    dend_12 { pt3dadd( 446.344, 310.275, 33.8148, 0.6102 ) }
    dend_12 { pt3dadd( 447.337, 309.777, 33.203, 0.6102 ) }
    dend_12 { pt3dadd( 448.176, 309.032, 32.7026, 0.5592 ) }
    dend_12 { pt3dadd( 449.022, 308.524, 32.3599, 0.4576 ) }
    dend_12 { pt3dadd( 449.705, 308.251, 34.4005, 0.356 ) }
    dend_12 { pt3dadd( 450.361, 308.004, 35.1949, 0.305 ) }
    dend_12 { pt3dadd( 451.226, 307.691, 33.5513, 0.356 ) }
    dend_12 { pt3dadd( 451.502, 306.822, 32.0636, 0.3814 ) }
    dend_12 { pt3dadd( 452.516, 306.814, 32.2619, 0.4068 ) }
    dend_12 { pt3dadd( 453.073, 306.752, 34.4137, 0.3814 ) }
    dend_12 { pt3dadd( 453.991, 306.392, 34.2714, 0.4576 ) }
    dend_12 { pt3dadd( 455.07, 306.333, 33.7856, 0.5592 ) }
    dend_12 { pt3dadd( 456.188, 306.489, 33.5328, 0.6356 ) }
    dend_12 { pt3dadd( 457.319, 306.455, 33.7366, 0.6102 ) }
    dend_12 { pt3dadd( 458.172, 306.241, 35.4318, 0.5338 ) }
    dend_12 { pt3dadd( 459.263, 306.193, 36.1477, 0.5084 ) }
    dend_12 { pt3dadd( 460.354, 306.433, 36.1189, 0.483 ) }
    dend_12 { pt3dadd( 461.26, 307.027, 36.3314, 0.483 ) }
    dend_12 { pt3dadd( 462.185, 307.469, 36.4179, 0.4322 ) }
    dend_12 { pt3dadd( 463.239, 307.178, 35.8571, 0.3814 ) }
    dend_12 { pt3dadd( 464.348, 307.186, 36.4168, 0.3814 ) }
    dend_12 { pt3dadd( 465.155, 306.451, 37.2358, 0.4322 ) }
    dend_12 { pt3dadd( 466.15, 305.938, 37.7199, 0.5338 ) }
    dend_12 { pt3dadd( 467.047, 305.246, 37.4402, 0.5338 ) }
    dend_12 { pt3dadd( 467.774, 304.417, 36.7142, 0.4576 ) }
    dend_12 { pt3dadd( 468.506, 303.674, 35.574, 0.3814 ) }
    dend_12 { pt3dadd( 469.107, 302.857, 35.4348, 0.356 ) }
    dend_12 { pt3dadd( 469.271, 302.442, 37.557, 0.4576 ) }
    dend_12 { pt3dadd( 469.991, 302.419, 39.3854, 0.5084 ) }
    dend_12 { pt3dadd( 470.152, 301.627, 37.912, 0.5592 ) }
    dend_12 { pt3dadd( 470.81, 301.148, 36.6064, 0.483 ) }
    dend_12 { pt3dadd( 471.707, 300.634, 37.4007, 0.4322 ) }
    dend_12 { pt3dadd( 472.448, 299.911, 37.6253, 0.3814 ) }
    dend_12 { pt3dadd( 473.422, 299.41, 38.0439, 0.356 ) }
    dend_12 { pt3dadd( 474.157, 298.847, 37.1176, 0.3304 ) }
    dend_12 { pt3dadd( 475.112, 298.333, 37.7658, 0.3304 ) }
    dend_12 { pt3dadd( 476.141, 297.852, 37.7054, 0.356 ) }
    dend_12 { pt3dadd( 477.165, 297.426, 38.0744, 0.4068 ) }
    dend_12 { pt3dadd( 478.176, 297.497, 39.1838, 0.4068 ) }
    dend_12 { pt3dadd( 479.08, 297.035, 38.6691, 0.4576 ) }
    dend_12 { pt3dadd( 480.123, 296.574, 38.6005, 0.483 ) }
    dend_12 { pt3dadd( 481.192, 296.182, 38.7764, 0.5592 ) }
    dend_12 { pt3dadd( 482.226, 295.941, 39.7897, 0.5592 ) }
    dend_12 { pt3dadd( 483.298, 295.681, 39.5567, 0.5338 ) }
    dend_12 { pt3dadd( 484.258, 295.67, 39.7197, 0.4576 ) }
    dend_12 { pt3dadd( 485.231, 295.828, 41.0782, 0.4068 ) }
    dend_12 { pt3dadd( 486.244, 295.51, 41.5554, 0.356 ) }
    dend_12 { pt3dadd( 487.013, 294.733, 42.2408, 0.3304 ) }
    dend_12 { pt3dadd( 487.977, 294.907, 41.412, 0.2796 ) }
    dend_12 { pt3dadd( 489.074, 294.626, 41.5694, 0.305 ) }
    dend_12 { pt3dadd( 490.075, 294.184, 42.3842, 0.3304 ) }
    dend_12 { pt3dadd( 490.947, 293.753, 43.687, 0.4068 ) }
    dend_12 { pt3dadd( 491.867, 293.394, 44.5402, 0.4068 ) }
    dend_12 { pt3dadd( 492.958, 293.084, 44.8283, 0.4068 ) }
    dend_12 { pt3dadd( 494.079, 292.897, 44.9148, 0.356 ) }
    dend_12 { pt3dadd( 495.197, 292.673, 45.0299, 0.3304 ) }
    dend_12 { pt3dadd( 496.007, 291.94, 45.1156, 0.305 ) }
    dend_12 { pt3dadd( 497.049, 291.624, 45.4628, 0.3304 ) }
    dend_12 { pt3dadd( 498.13, 291.301, 45.0993, 0.356 ) }
    dend_12 { pt3dadd( 499.25, 291.073, 45.0733, 0.3814 ) }
    dend_12 { pt3dadd( 500.27, 290.69, 44.24, 0.4068 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 84/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 392.385, 305.219, 37.5292, 0.6356 ) }
    dend_7 { pt3dadd( 393.343, 304.717, 36.3776, 0.4322 ) }
    dend_7 { pt3dadd( 393.743, 303.681, 36.2583, 0.5084 ) }
    dend_7 { pt3dadd( 393.765, 302.554, 35.8492, 0.5848 ) }
    dend_7 { pt3dadd( 393.771, 301.435, 35.3396, 0.661 ) }
    dend_7 { pt3dadd( 393.806, 300.292, 35.282, 0.6864 ) }
    dend_7 { pt3dadd( 393.951, 299.162, 35.2929, 0.6356 ) }
    dend_7 { pt3dadd( 394.163, 298.041, 35.3332, 0.6102 ) }
    dend_7 { pt3dadd( 394.215, 296.901, 35.2783, 0.5848 ) }
    dend_7 { pt3dadd( 394.18, 295.795, 34.6965, 0.6864 ) }
    dend_7 { pt3dadd( 394.033, 294.746, 33.6734, 0.7118 ) }
    dend_7 { pt3dadd( 393.742, 293.678, 33.0296, 0.7372 ) }
    dend_7 { pt3dadd( 393.46, 292.581, 32.6816, 0.661 ) }
    dend_7 { pt3dadd( 393.306, 291.47, 32.1916, 0.6864 ) }
    dend_7 { pt3dadd( 393.264, 290.336, 31.9082, 0.6864 ) }
    dend_7 { pt3dadd( 393.123, 289.204, 31.8385, 0.7118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_7 { pt3dadd( 392.91, 288.092, 31.5084, 0.6864 ) }
    dend_7 { pt3dadd( 392.762, 287.006, 30.7359, 0.6864 ) }
    dend_7 { pt3dadd( 392.552, 285.937, 29.9673, 0.6864 ) }
    dend_7 { pt3dadd( 392.231, 284.848, 29.8166, 0.7118 ) }
    dend_7 { pt3dadd( 391.872, 283.768, 30.0558, 0.7372 ) }
    dend_7 { pt3dadd( 391.48, 282.709, 29.9835, 0.7118 ) }
    dend_7 { pt3dadd( 391.196, 281.623, 29.4524, 0.5848 ) }
    dend_7 { pt3dadd( 391.096, 280.504, 29.1838, 0.4322 ) }
    dend_7 { pt3dadd( 391.254, 279.411, 29.6472, 0.4068 ) }
    dend_7 { pt3dadd( 391.424, 278.332, 30.3545, 0.4576 ) }
    dend_7 { pt3dadd( 391.447, 277.214, 30.1498, 0.5848 ) }
    dend_7 { pt3dadd( 391.372, 276.117, 29.3787, 0.5848 ) }
    dend_7 { pt3dadd( 391.239, 275.005, 28.9232, 0.6102 ) }
    dend_7 { pt3dadd( 391.152, 273.891, 29.2628, 0.5592 ) }
    dend_7 { pt3dadd( 391.284, 272.831, 29.0847, 0.5592 ) }
    dend_7 { pt3dadd( 391.048, 271.853, 27.9908, 0.5338 ) }
    dend_7 { pt3dadd( 390.666, 270.861, 28.6658, 0.5338 ) }
    dend_7 { pt3dadd( 390.715, 269.787, 29.3689, 0.5338 ) }
    dend_7 { pt3dadd( 391.025, 268.731, 28.7084, 0.5084 ) }
    dend_7 { pt3dadd( 391.343, 267.633, 28.698, 0.4576 ) }
    dend_7 { pt3dadd( 391.504, 266.51, 28.8386, 0.4322 ) }
    dend_7 { pt3dadd( 391.456, 265.374, 29.0853, 0.4068 ) }
    dend_7 { pt3dadd( 391.404, 264.246, 29.4888, 0.4322 ) }
    dend_7 { pt3dadd( 391.34, 263.111, 29.6209, 0.4322 ) }
    dend_7 { pt3dadd( 391.158, 262.02, 30.172, 0.4576 ) }
    dend_7 { pt3dadd( 390.934, 260.943, 30.9422, 0.4322 ) }
    dend_7 { pt3dadd( 390.875, 260.094, 30.0628, 0.356 ) }
    dend_7 { pt3dadd( 391.083, 258.999, 30.6267, 0.305 ) }
    dend_7 { pt3dadd( 391.428, 257.934, 30.9767, 0.2796 ) }
    dend_7 { pt3dadd( 391.802, 256.862, 31.2388, 0.305 ) }
    dend_7 { pt3dadd( 392.086, 255.814, 30.5668, 0.2796 ) }
    dend_7 { pt3dadd( 392.4, 254.771, 31.0226, 0.2796 ) }
    dend_7 { pt3dadd( 392.203, 253.653, 31.3356, 0.305 ) }
    dend_7 { pt3dadd( 392.219, 252.571, 31.9777, 0.356 ) }
    dend_7 { pt3dadd( 392.238, 251.544, 32.9384, 0.4068 ) }
    dend_7 { pt3dadd( 392.327, 250.527, 32.3417, 0.4322 ) }
    dend_7 { pt3dadd( 392.391, 249.581, 33.3752, 0.483 ) }
    dend_7 { pt3dadd( 392.124, 248.515, 33.88, 0.5084 ) }
    dend_7 { pt3dadd( 392.007, 247.775, 33.57, 0.5848 ) }
    dend_7 { pt3dadd( 391.827, 246.662, 33.1022, 0.6102 ) }
    dend_7 { pt3dadd( 391.736, 245.522, 33.0411, 0.6356 ) }
    dend_7 { pt3dadd( 391.884, 244.388, 33.0414, 0.5848 ) }
    dend_7 { pt3dadd( 391.717, 243.257, 33.0476, 0.6102 ) }
    dend_7 { pt3dadd( 391.44, 242.147, 33.0862, 0.6356 ) }
    dend_7 { pt3dadd( 391.155, 241.046, 33.3777, 0.6864 ) }
    dend_7 { pt3dadd( 391.019, 239.912, 33.4989, 0.661 ) }
    dend_7 { pt3dadd( 390.993, 238.783, 33.0546, 0.6102 ) }
    dend_7 { pt3dadd( 390.828, 237.65, 33.04, 0.5338 ) }
    dend_7 { pt3dadd( 390.665, 236.519, 33.04, 0.5084 ) }
    dend_7 { pt3dadd( 390.556, 235.379, 33.04, 0.483 ) }
    dend_7 { pt3dadd( 390.527, 234.235, 33.0397, 0.4576 ) }
    dend_7 { pt3dadd( 390.227, 233.132, 33.0361, 0.4322 ) }
    dend_7 { pt3dadd( 389.981, 232.015, 33.0075, 0.5084 ) }
    dend_7 { pt3dadd( 389.619, 230.932, 32.8132, 0.661 ) }
    dend_7 { pt3dadd( 389.251, 229.906, 31.9665, 0.788 ) }
    dend_7 { pt3dadd( 388.9, 228.822, 31.7489, 0.8136 ) }
    dend_7 { pt3dadd( 388.635, 227.743, 31.0783, 0.788 ) }
    dend_7 { pt3dadd( 388.308, 226.673, 30.4814, 0.6864 ) }
    dend_7 { pt3dadd( 387.953, 225.653, 29.5607, 0.5592 ) }
    dend_7 { pt3dadd( 387.554, 224.655, 28.6073, 0.4068 ) }
    dend_7 { pt3dadd( 387.431, 223.533, 28.1635, 0.356 ) }
    dend_7 { pt3dadd( 387.529, 222.404, 28.2738, 0.4068 ) }
    dend_7 { pt3dadd( 387.021, 221.432, 27.4789, 0.4576 ) }
    dend_7 { pt3dadd( 386.631, 220.41, 26.7761, 0.483 ) }
    dend_7 { pt3dadd( 386.83, 219.289, 26.4995, 0.5084 ) }
    dend_7 { pt3dadd( 387.106, 218.179, 26.5308, 0.5848 ) }
    dend_7 { pt3dadd( 387.481, 217.103, 26.7112, 0.6864 ) }
    dend_7 { pt3dadd( 387.786, 216.034, 27.323, 0.661 ) }
    dend_7 { pt3dadd( 387.9, 214.897, 27.3734, 0.5848 ) }
    dend_7 { pt3dadd( 388.022, 213.764, 27.1485, 0.4576 ) }
    dend_7 { pt3dadd( 387.956, 212.63, 27.0371, 0.4322 ) }
    dend_7 { pt3dadd( 387.667, 211.537, 27.4546, 0.483 ) }
    dend_7 { pt3dadd( 387.256, 210.473, 27.6402, 0.5592 ) }
    dend_7 { pt3dadd( 386.868, 209.408, 27.9681, 0.6102 ) }
    dend_7 { pt3dadd( 386.662, 208.292, 27.9667, 0.6102 ) }
    dend_7 { pt3dadd( 386.771, 207.222, 27.251, 0.6102 ) }
    dend_7 { pt3dadd( 387.0, 206.212, 27.4966, 0.5592 ) }
    dend_7 { pt3dadd( 387.244, 205.15, 26.9987, 0.4576 ) }
    dend_7 { pt3dadd( 387.418, 204.063, 26.4258, 0.3304 ) }
    dend_7 { pt3dadd( 387.438, 202.92, 26.4502, 0.2542 ) }
    dend_7 { pt3dadd( 387.505, 201.779, 26.5303, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 81/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 392.385, 305.219, 37.5292, 0.6356 ) }
    dend_4 { pt3dadd( 392.328, 304.109, 37.6202, 0.8644 ) }
    dend_4 { pt3dadd( 392.131, 303.0, 38.066, 0.966 ) }
    dend_4 { pt3dadd( 391.972, 301.98, 39.2454, 0.9914 ) }
    dend_4 { pt3dadd( 392.019, 300.906, 40.1716, 0.9152 ) }
    dend_4 { pt3dadd( 392.131, 299.796, 40.775, 0.7626 ) }
    dend_4 { pt3dadd( 391.885, 298.687, 40.8187, 0.661 ) }
    dend_4 { pt3dadd( 391.603, 297.584, 40.563, 0.661 ) }
    dend_4 { pt3dadd( 391.532, 296.468, 40.0117, 0.7372 ) }
    dend_4 { pt3dadd( 391.683, 295.339, 40.0859, 0.8644 ) }
    dend_4 { pt3dadd( 391.899, 294.24, 40.6501, 0.9152 ) }
    dend_4 { pt3dadd( 391.917, 293.102, 40.8674, 0.9406 ) }
    dend_4 { pt3dadd( 391.827, 291.962, 40.8822, 0.9152 ) }
    dend_4 { pt3dadd( 391.548, 290.854, 40.8937, 0.8898 ) }
    dend_4 { pt3dadd( 391.162, 289.777, 40.9598, 0.8898 ) }
    dend_4 { pt3dadd( 390.674, 288.75, 41.26, 0.8898 ) }
    dend_4 { pt3dadd( 390.176, 287.746, 41.8166, 0.8898 ) }
    dend_4 { pt3dadd( 389.71, 286.705, 41.9919, 0.8644 ) }
    dend_4 { pt3dadd( 389.274, 285.648, 42.0, 0.839 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_4 { pt3dadd( 388.802, 284.604, 42.0008, 0.8644 ) }
    dend_4 { pt3dadd( 388.509, 283.5, 42.0067, 0.8898 ) }
    dend_4 { pt3dadd( 388.108, 282.43, 42.044, 0.9152 ) }
    dend_4 { pt3dadd( 387.607, 281.407, 42.3052, 0.966 ) }
    dend_4 { pt3dadd( 386.918, 280.527, 42.9027, 0.966 ) }
    dend_4 { pt3dadd( 386.132, 279.717, 43.3457, 0.9152 ) }
    dend_4 { pt3dadd( 385.418, 278.869, 44.0429, 0.788 ) }
    dend_4 { pt3dadd( 384.932, 277.918, 45.0374, 0.7118 ) }
    dend_4 { pt3dadd( 384.804, 276.791, 45.3597, 0.7118 ) }
    dend_4 { pt3dadd( 384.923, 275.655, 45.3564, 0.6864 ) }
    dend_4 { pt3dadd( 384.686, 274.538, 45.3365, 0.6356 ) }
    dend_4 { pt3dadd( 384.164, 273.522, 45.2362, 0.5338 ) }
    dend_4 { pt3dadd( 383.777, 272.463, 44.8336, 0.5338 ) }
    dend_4 { pt3dadd( 383.702, 271.339, 44.4021, 0.6356 ) }
    dend_4 { pt3dadd( 383.731, 270.198, 44.5855, 0.7626 ) }
    dend_4 { pt3dadd( 383.85, 269.079, 45.0873, 0.788 ) }
    dend_4 { pt3dadd( 383.938, 267.949, 45.36, 0.6864 ) }
    dend_4 { pt3dadd( 383.767, 266.819, 45.36, 0.6102 ) }
    dend_4 { pt3dadd( 383.484, 265.71, 45.36, 0.6102 ) }
    dend_4 { pt3dadd( 383.25, 264.59, 45.36, 0.661 ) }
    dend_4 { pt3dadd( 383.029, 263.468, 45.36, 0.7118 ) }
    dend_4 { pt3dadd( 382.791, 262.349, 45.3608, 0.7118 ) }
    dend_4 { pt3dadd( 382.516, 261.24, 45.3659, 0.7118 ) }
    dend_4 { pt3dadd( 382.084, 260.182, 45.3944, 0.6356 ) }
    dend_4 { pt3dadd( 381.552, 259.172, 45.5344, 0.6356 ) }
    dend_4 { pt3dadd( 381.094, 258.142, 45.9796, 0.6356 ) }
    dend_4 { pt3dadd( 380.793, 257.055, 46.4232, 0.7372 ) }
    dend_4 { pt3dadd( 380.352, 256.016, 46.6724, 0.7626 ) }
    dend_4 { pt3dadd( 379.625, 255.152, 47.1246, 0.788 ) }
    dend_4 { pt3dadd( 378.93, 254.271, 47.5149, 0.7372 ) }
    dend_4 { pt3dadd( 378.488, 253.216, 47.6, 0.7118 ) }
    dend_4 { pt3dadd( 378.043, 252.166, 47.6, 0.7118 ) }
    dend_4 { pt3dadd( 377.47, 251.177, 47.6, 0.7626 ) }
    dend_4 { pt3dadd( 376.94, 250.163, 47.6, 0.839 ) }
    dend_4 { pt3dadd( 376.471, 249.12, 47.6, 0.8644 ) }
    dend_4 { pt3dadd( 375.995, 248.08, 47.6, 0.839 ) }
    dend_4 { pt3dadd( 375.572, 247.017, 47.6, 0.7372 ) }
    dend_4 { pt3dadd( 375.203, 245.934, 47.6, 0.661 ) }
    dend_4 { pt3dadd( 374.825, 244.855, 47.6011, 0.6356 ) }
    dend_4 { pt3dadd( 374.372, 243.805, 47.6064, 0.6864 ) }
    dend_4 { pt3dadd( 373.873, 242.776, 47.6375, 0.7118 ) }
    dend_4 { pt3dadd( 373.433, 241.727, 47.8142, 0.6864 ) }
    dend_4 { pt3dadd( 373.151, 240.636, 48.2829, 0.6356 ) }
    dend_4 { pt3dadd( 372.937, 239.524, 48.6422, 0.661 ) }
    dend_4 { pt3dadd( 372.758, 238.396, 48.72, 0.7118 ) }
    dend_4 { pt3dadd( 372.652, 237.256, 48.72, 0.7626 ) }
    dend_4 { pt3dadd( 372.422, 236.146, 48.72, 0.7372 ) }
    dend_4 { pt3dadd( 371.931, 235.114, 48.7206, 0.7118 ) }
    dend_4 { pt3dadd( 371.405, 234.098, 48.7234, 0.6864 ) }
    dend_4 { pt3dadd( 370.992, 233.034, 48.7435, 0.661 ) }
    dend_4 { pt3dadd( 370.712, 231.928, 48.8816, 0.6356 ) }
    dend_4 { pt3dadd( 370.502, 230.818, 49.2864, 0.6102 ) }
    dend_4 { pt3dadd( 370.416, 229.692, 49.7129, 0.661 ) }
    dend_4 { pt3dadd( 370.334, 228.556, 49.84, 0.6864 ) }
    dend_4 { pt3dadd( 370.112, 227.434, 49.8389, 0.7118 ) }
    dend_4 { pt3dadd( 369.774, 226.345, 49.833, 0.661 ) }
    dend_4 { pt3dadd( 369.25, 225.331, 49.8039, 0.661 ) }
    dend_4 { pt3dadd( 368.653, 224.362, 49.6367, 0.6356 ) }
    dend_4 { pt3dadd( 368.203, 223.328, 49.2425, 0.6102 ) }
    dend_4 { pt3dadd( 367.848, 222.254, 49.107, 0.5338 ) }
    dend_4 { pt3dadd( 367.324, 221.257, 49.5004, 0.5084 ) }
    dend_4 { pt3dadd( 366.672, 220.326, 49.7879, 0.483 ) }
    dend_4 { pt3dadd( 366.047, 219.369, 49.84, 0.5084 ) }
    dend_4 { pt3dadd( 365.438, 218.4, 49.84, 0.5338 ) }
    dend_4 { pt3dadd( 364.729, 217.508, 49.84, 0.6864 ) }
    dend_4 { pt3dadd( 363.928, 216.692, 49.8389, 0.8898 ) }
    dend_4 { pt3dadd( 363.21, 215.809, 49.8336, 1.0932 ) }
    dend_4 { pt3dadd( 362.664, 214.805, 49.8016, 1.1694 ) }
    dend_4 { pt3dadd( 362.272, 213.742, 49.593, 1.1186 ) }
    dend_4 { pt3dadd( 361.957, 212.656, 49.1924, 0.966 ) }
    dend_4 { pt3dadd( 361.573, 211.599, 49.28, 0.8136 ) }
    dend_4 { pt3dadd( 361.279, 210.53, 49.9316, 0.7118 ) }
    dend_4 { pt3dadd( 361.017, 209.438, 50.1122, 0.7372 ) }
    dend_4 { pt3dadd( 360.588, 208.383, 49.8817, 0.7626 ) }
    dend_4 { pt3dadd( 360.161, 207.325, 49.8238, 0.7626 ) }
    dend_4 { pt3dadd( 359.925, 206.215, 49.7076, 0.7372 ) }
    dend_4 { pt3dadd( 359.919, 205.085, 49.3497, 0.7372 ) }
    dend_4 { pt3dadd( 360.055, 203.968, 48.8642, 0.7626 ) }
    dend_4 { pt3dadd( 360.245, 202.854, 48.4333, 0.7118 ) }
    dend_4 { pt3dadd( 360.35, 201.736, 47.9461, 0.7118 ) }
    dend_4 { pt3dadd( 360.338, 200.611, 47.465, 0.7118 ) }
    dend_4 { pt3dadd( 360.282, 199.483, 47.0282, 0.7626 ) }
    dend_4 { pt3dadd( 360.289, 198.357, 46.6267, 0.788 ) }
    dend_4 { pt3dadd( 360.589, 197.273, 46.5578, 0.839 ) }
    dend_4 { pt3dadd( 361.089, 196.251, 46.8224, 0.9152 ) }
    dend_4 { pt3dadd( 361.594, 195.242, 47.2814, 0.8898 ) }
    dend_4 { pt3dadd( 362.084, 194.218, 47.5653, 0.8644 ) }
    dend_4 { pt3dadd( 362.528, 193.165, 47.6084, 0.7626 ) }
    dend_4 { pt3dadd( 362.883, 192.079, 47.6549, 0.7626 ) }
    dend_4 { pt3dadd( 363.163, 190.977, 47.8968, 0.661 ) }
    dend_4 { pt3dadd( 363.534, 189.917, 48.3518, 0.5848 ) }
    dend_4 { pt3dadd( 364.016, 188.89, 48.6612, 0.483 ) }
    dend_4 { pt3dadd( 364.188, 187.8, 48.72, 0.5084 ) }
    dend_4 { pt3dadd( 363.79, 186.76, 48.72, 0.6102 ) }
    dend_4 { pt3dadd( 363.157, 185.806, 48.7197, 0.661 ) }
    dend_4 { pt3dadd( 362.615, 184.804, 48.7194, 0.661 ) }
    dend_4 { pt3dadd( 362.421, 183.7, 48.7166, 0.6102 ) }
    dend_4 { pt3dadd( 362.654, 182.596, 48.6987, 0.6864 ) }
    dend_4 { pt3dadd( 362.951, 181.493, 48.5862, 0.7372 ) }
    dend_4 { pt3dadd( 363.045, 180.384, 48.0724, 0.788 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( 362.88, 179.315, 47.2156, 0.7372 ) }
    dend_4 { pt3dadd( 362.431, 178.305, 46.6396, 0.7626 ) }
    dend_4 { pt3dadd( 361.758, 177.39, 46.4906, 0.8644 ) }
    dend_4 { pt3dadd( 360.995, 176.539, 46.4797, 1.0424 ) }
    dend_4 { pt3dadd( 360.298, 175.634, 46.4792, 1.144 ) }
    dend_4 { pt3dadd( 359.777, 174.62, 46.4752, 1.0424 ) }
    dend_4 { pt3dadd( 359.357, 173.556, 46.4517, 0.8898 ) }
    dend_4 { pt3dadd( 358.897, 172.511, 46.3322, 0.788 ) }
    dend_4 { pt3dadd( 358.519, 171.451, 45.8856, 0.8898 ) }
    dend_4 { pt3dadd( 358.247, 170.354, 45.4784, 0.966 ) }
    dend_4 { pt3dadd( 358.084, 169.226, 45.3477, 0.966 ) }
    dend_4 { pt3dadd( 357.931, 168.094, 45.2351, 0.839 ) }
    dend_4 { pt3dadd( 357.672, 166.999, 44.786, 0.7626 ) }
    dend_4 { pt3dadd( 357.286, 165.936, 44.375, 0.7372 ) }
    dend_4 { pt3dadd( 356.87, 164.874, 44.2512, 0.788 ) }
    dend_4 { pt3dadd( 356.498, 163.792, 44.2383, 0.7372 ) }
    dend_4 { pt3dadd( 356.292, 162.671, 44.2288, 0.6356 ) }
    dend_4 { pt3dadd( 356.226, 161.531, 44.1585, 0.5592 ) }
    dend_4 { pt3dadd( 356.035, 160.425, 43.6887, 0.6356 ) }
    dend_4 { pt3dadd( 355.634, 159.364, 43.4994, 0.839 ) }
    dend_4 { pt3dadd( 355.229, 158.311, 43.906, 0.9406 ) }
    dend_4 { pt3dadd( 354.806, 157.255, 44.1857, 0.9152 ) }
    dend_4 { pt3dadd( 354.537, 156.148, 44.2352, 0.788 ) }
    dend_4 { pt3dadd( 354.622, 155.017, 44.2226, 0.661 ) }
    dend_4 { pt3dadd( 354.978, 153.934, 44.1353, 0.5592 ) }
    dend_4 { pt3dadd( 355.205, 152.836, 43.6456, 0.483 ) }
    dend_4 { pt3dadd( 355.111, 151.717, 43.1967, 0.5338 ) }
    dend_4 { pt3dadd( 355.208, 150.593, 42.8137, 0.6356 ) }
    dend_4 { pt3dadd( 355.287, 149.492, 42.0932, 0.7626 ) }
    dend_4 { pt3dadd( 355.216, 148.412, 41.1916, 0.7372 ) }
    dend_4 { pt3dadd( 354.856, 147.384, 40.3791, 0.661 ) }
    dend_4 { pt3dadd( 354.312, 146.398, 39.9078, 0.5592 ) }
    dend_4 { pt3dadd( 354.011, 145.301, 39.9454, 0.6102 ) }
    dend_4 { pt3dadd( 353.946, 144.189, 39.3644, 0.7626 ) }
    dend_4 { pt3dadd( 353.888, 143.072, 38.775, 0.8644 ) }
    dend_4 { pt3dadd( 353.636, 141.96, 38.6462, 0.8644 ) }
    dend_4 { pt3dadd( 353.527, 140.822, 38.6383, 0.7372 ) }
    dend_4 { pt3dadd( 353.577, 139.68, 38.6302, 0.6864 ) }
    dend_4 { pt3dadd( 353.835, 138.567, 38.5756, 0.6102 ) }
    dend_4 { pt3dadd( 353.885, 137.438, 38.1713, 0.5848 ) }
    dend_4 { pt3dadd( 353.725, 136.328, 37.627, 0.5338 ) }
    dend_4 { pt3dadd( 354.03, 135.233, 37.522, 0.6102 ) }
    dend_4 { pt3dadd( 354.348, 134.135, 37.5166, 0.6864 ) }
    dend_4 { pt3dadd( 354.408, 132.993, 37.4968, 0.7372 ) }
    dend_4 { pt3dadd( 354.41, 131.851, 37.3618, 0.661 ) }
    dend_4 { pt3dadd( 354.408, 130.757, 36.5473, 0.5338 ) }
    dend_4 { pt3dadd( 354.399, 129.742, 35.2612, 0.4576 ) }
    dend_4 { pt3dadd( 354.33, 128.604, 35.0854, 0.483 ) }
    dend_4 { pt3dadd( 353.797, 127.729, 36.3118, 0.6356 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 49/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 376.129, 410.158, 54.712, 0.7626 ) }
    dend_42 { pt3dadd( 375.618, 411.034, 52.8156, 0.3304 ) }
    dend_42 { pt3dadd( 375.17, 411.93, 51.8, 0.4068 ) }
    dend_42 { pt3dadd( 374.849, 413.021, 51.8325, 0.483 ) }
    dend_42 { pt3dadd( 374.336, 413.971, 52.2144, 0.483 ) }
    dend_42 { pt3dadd( 373.973, 414.928, 51.7006, 0.5084 ) }
    dend_42 { pt3dadd( 373.478, 415.932, 51.97, 0.5084 ) }
    dend_42 { pt3dadd( 372.886, 416.839, 51.1949, 0.5592 ) }
    dend_42 { pt3dadd( 372.313, 417.775, 51.9112, 0.5848 ) }
    dend_42 { pt3dadd( 371.687, 418.591, 52.7828, 0.5592 ) }
    dend_42 { pt3dadd( 371.11, 419.552, 52.2197, 0.483 ) }
    dend_42 { pt3dadd( 370.486, 420.437, 52.2264, 0.4576 ) }
    dend_42 { pt3dadd( 369.843, 421.3, 52.92, 0.5084 ) }
    dend_42 { pt3dadd( 369.148, 422.152, 52.4709, 0.5848 ) }
    dend_42 { pt3dadd( 368.391, 422.945, 51.7031, 0.5592 ) }
    dend_42 { pt3dadd( 367.825, 423.866, 51.9966, 0.483 ) }
    dend_42 { pt3dadd( 367.232, 424.813, 52.351, 0.4068 ) }
    dend_42 { pt3dadd( 366.632, 425.781, 52.19, 0.4068 ) }
    dend_42 { pt3dadd( 366.089, 426.781, 52.3191, 0.4576 ) }
    dend_42 { pt3dadd( 365.664, 427.835, 52.1382, 0.483 ) }
    dend_42 { pt3dadd( 364.975, 428.716, 52.633, 0.4322 ) }
    dend_42 { pt3dadd( 364.236, 429.581, 52.36, 0.3814 ) }
    dend_42 { pt3dadd( 363.516, 430.467, 52.4101, 0.4068 ) }
    dend_42 { pt3dadd( 362.735, 431.264, 53.009, 0.483 ) }
    dend_42 { pt3dadd( 362.012, 432.13, 53.2036, 0.483 ) }
    dend_42 { pt3dadd( 361.246, 432.936, 52.9455, 0.4068 ) }
    dend_42 { pt3dadd( 360.471, 433.717, 53.2375, 0.3304 ) }
    dend_42 { pt3dadd( 359.752, 434.512, 53.1664, 0.3304 ) }
    dend_42 { pt3dadd( 359.121, 435.385, 54.0957, 0.356 ) }
    dend_42 { pt3dadd( 358.819, 436.42, 53.8247, 0.4068 ) }
    dend_42 { pt3dadd( 358.404, 437.366, 52.698, 0.4068 ) }
    dend_42 { pt3dadd( 357.699, 438.242, 53.0608, 0.3814 ) }
    dend_42 { pt3dadd( 356.937, 439.043, 53.76, 0.305 ) }
    dend_42 { pt3dadd( 356.361, 440.026, 53.6754, 0.2542 ) }
    dend_42 { pt3dadd( 355.743, 440.922, 53.0348, 0.2542 ) }
    dend_42 { pt3dadd( 354.908, 441.682, 53.3459, 0.2796 ) }
    dend_42 { pt3dadd( 354.165, 442.547, 53.1222, 0.3304 ) }
    dend_42 { pt3dadd( 353.423, 443.404, 52.9847, 0.356 ) }
    dend_42 { pt3dadd( 352.771, 444.341, 53.1541, 0.3814 ) }
    dend_42 { pt3dadd( 352.027, 445.191, 52.8612, 0.356 ) }
    dend_42 { pt3dadd( 351.25, 445.913, 53.7589, 0.3304 ) }
    dend_42 { pt3dadd( 351.04, 447.036, 53.8838, 0.305 ) }
    dend_42 { pt3dadd( 350.804, 448.113, 54.5768, 0.305 ) }
    dend_42 { pt3dadd( 350.146, 449.043, 54.3273, 0.3304 ) }
    dend_42 { pt3dadd( 349.436, 449.933, 54.1671, 0.356 ) }
    dend_42 { pt3dadd( 348.604, 450.711, 54.423, 0.4068 ) }
    dend_42 { pt3dadd( 347.77, 451.475, 54.488, 0.3814 ) }
    dend_42 { pt3dadd( 346.787, 452.014, 54.1383, 0.4068 ) }
    dend_42 { pt3dadd( 345.741, 452.461, 54.3124, 0.4322 ) }
    dend_42 { pt3dadd( 344.702, 452.911, 54.381, 0.5338 ) }
    dend_42 { pt3dadd( 343.602, 453.205, 54.395, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_42 { pt3dadd( 342.794, 453.529, 53.048, 0.6102 ) }
    dend_42 { pt3dadd( 341.947, 453.945, 53.354, 0.6356 ) }
    dend_42 { pt3dadd( 340.936, 454.443, 53.4215, 0.6356 ) }
    dend_42 { pt3dadd( 340.007, 454.995, 52.9936, 0.6102 ) }
    dend_42 { pt3dadd( 339.053, 455.319, 52.8646, 0.5338 ) }
    dend_42 { pt3dadd( 338.249, 455.787, 52.9603, 0.5338 ) }
    dend_42 { pt3dadd( 337.33, 456.259, 53.3784, 0.5338 ) }
    dend_42 { pt3dadd( 336.348, 456.802, 53.5688, 0.5592 ) }
    dend_42 { pt3dadd( 335.328, 457.28, 53.4635, 0.4576 ) }
    dend_42 { pt3dadd( 334.37, 457.684, 52.3536, 0.4068 ) }
    dend_42 { pt3dadd( 333.478, 458.334, 52.5983, 0.3814 ) }
    dend_42 { pt3dadd( 332.624, 458.973, 53.6043, 0.4322 ) }
    dend_42 { pt3dadd( 331.676, 459.508, 55.4952, 0.4068 ) }
    dend_42 { pt3dadd( 331.142, 460.224, 56.4491, 0.4068 ) }
    dend_42 { pt3dadd( 330.749, 461.211, 56.7244, 0.4322 ) }
    dend_42 { pt3dadd( 330.501, 462.29, 56.28, 0.4068 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 16/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 376.129, 410.158, 54.712, 0.7626 ) }
    dend_41 { pt3dadd( 375.691, 410.531, 56.2092, 0.3304 ) }
    dend_41 { pt3dadd( 375.01, 411.059, 58.035, 0.2796 ) }
    dend_41 { pt3dadd( 374.254, 411.576, 59.7145, 0.305 ) }
    dend_41 { pt3dadd( 374.282, 412.384, 61.196, 0.4322 ) }
    dend_41 { pt3dadd( 374.927, 413.197, 62.279, 0.5084 ) }
    dend_41 { pt3dadd( 375.371, 414.165, 63.208, 0.5848 ) }
    dend_41 { pt3dadd( 375.484, 415.207, 64.286, 0.5848 ) }
    dend_41 { pt3dadd( 375.588, 416.241, 65.4522, 0.661 ) }
    dend_41 { pt3dadd( 375.619, 417.343, 66.1584, 0.7118 ) }
    dend_41 { pt3dadd( 375.337, 418.425, 66.6644, 0.6864 ) }
    dend_41 { pt3dadd( 375.102, 419.447, 67.755, 0.6102 ) }
    dend_41 { pt3dadd( 375.15, 420.515, 68.7148, 0.5084 ) }
    dend_41 { pt3dadd( 375.429, 421.608, 68.4292, 0.483 ) }
    dend_41 { pt3dadd( 375.737, 422.706, 68.2214, 0.4576 ) }
    dend_41 { pt3dadd( 375.918, 423.835, 68.231, 0.4322 ) }
    dend_41 { pt3dadd( 376.078, 424.967, 68.2226, 0.4322 ) }
    dend_41 { pt3dadd( 376.353, 425.973, 69.3759, 0.3814 ) }
    dend_41 { pt3dadd( 376.629, 426.979, 70.5289, 0.4068 ) }
    dend_41 { pt3dadd( 376.463, 427.56, 70.3842, 0.4322 ) }
    dend_41 { pt3dadd( 376.7, 428.596, 71.0889, 0.5084 ) }
    dend_41 { pt3dadd( 376.829, 429.533, 72.623, 0.5084 ) }
    dend_41 { pt3dadd( 376.238, 430.306, 73.8212, 0.483 ) }
    dend_41 { pt3dadd( 375.788, 431.182, 72.4147, 0.4576 ) }
    dend_41 { pt3dadd( 375.181, 432.082, 71.5582, 0.483 ) }
    dend_41 { pt3dadd( 374.816, 433.093, 70.9262, 0.483 ) }
    dend_41 { pt3dadd( 374.843, 434.196, 71.493, 0.483 ) }
    dend_41 { pt3dadd( 375.018, 435.191, 72.7709, 0.4322 ) }
    dend_41 { pt3dadd( 375.254, 436.189, 73.612, 0.4322 ) }
    dend_41 { pt3dadd( 375.887, 437.102, 73.9698, 0.4576 ) }
    dend_41 { pt3dadd( 376.539, 437.828, 75.3183, 0.5084 ) }
    dend_41 { pt3dadd( 376.804, 438.818, 76.2121, 0.483 ) }
    dend_41 { pt3dadd( 376.726, 439.946, 76.463, 0.4068 ) }
    dend_41 { pt3dadd( 376.778, 441.064, 77.0182, 0.3304 ) }
    dend_41 { pt3dadd( 376.886, 442.052, 78.3759, 0.3304 ) }
    dend_41 { pt3dadd( 376.786, 443.19, 78.2782, 0.356 ) }
    dend_41 { pt3dadd( 376.862, 444.301, 78.6391, 0.356 ) }
    dend_41 { pt3dadd( 377.159, 445.056, 80.3071, 0.305 ) }
    dend_41 { pt3dadd( 377.051, 446.191, 80.1198, 0.2796 ) }
    dend_41 { pt3dadd( 376.91, 447.318, 80.3141, 0.2796 ) }
    dend_41 { pt3dadd( 376.68, 448.407, 80.8223, 0.3304 ) }
    dend_41 { pt3dadd( 376.465, 449.475, 81.0214, 0.3304 ) }
    dend_41 { pt3dadd( 376.294, 450.472, 82.1145, 0.3304 ) }
    dend_41 { pt3dadd( 376.049, 451.581, 82.4331, 0.2796 ) }
    dend_41 { pt3dadd( 375.845, 452.703, 82.6, 0.2542 ) }
    dend_41 { pt3dadd( 375.508, 453.787, 82.6, 0.2288 ) }
    dend_41 { pt3dadd( 375.07, 454.843, 82.6818, 0.2288 ) }
    dend_41 { pt3dadd( 374.792, 455.942, 82.826, 0.2288 ) }
    dend_41 { pt3dadd( 374.664, 457.065, 83.2096, 0.2288 ) }
    dend_41 { pt3dadd( 374.378, 458.149, 83.5806, 0.2288 ) }
    dend_41 { pt3dadd( 374.082, 459.25, 83.6998, 0.2288 ) }
    dend_41 { pt3dadd( 373.897, 460.334, 84.3296, 0.2288 ) }
    dend_41 { pt3dadd( 373.675, 461.436, 84.7745, 0.2542 ) }
    dend_41 { pt3dadd( 373.538, 462.567, 84.9612, 0.2796 ) }
    dend_41 { pt3dadd( 373.898, 463.611, 85.3457, 0.305 ) }
    dend_41 { pt3dadd( 374.38, 464.592, 86.1484, 0.2796 ) }
    dend_41 { pt3dadd( 374.327, 465.713, 86.24, 0.2542 ) }
    dend_41 { pt3dadd( 374.316, 466.857, 86.24, 0.2288 ) }
    dend_41 { pt3dadd( 374.316, 468.001, 86.24, 0.2288 ) }
    dend_41 { pt3dadd( 374.316, 469.145, 86.24, 0.2288 ) }
    dend_41 { pt3dadd( 374.316, 470.289, 86.24, 0.2288 ) }
    dend_41 { pt3dadd( 374.316, 471.433, 86.24, 0.2288 ) }
    dend_41 { pt3dadd( 374.316, 472.577, 86.24, 0.2288 ) }
    dend_41 { pt3dadd( 374.316, 473.721, 86.24, 0.2288 ) }
    dend_41 { pt3dadd( 374.769, 474.76, 86.24, 0.2796 ) }
    dend_41 { pt3dadd( 374.773, 475.904, 86.24, 0.356 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 413.014, 319.317, 31.6308, 0.5848 ) }
    dend_15 { pt3dadd( 413.386, 318.909, 31.9799, 0.483 ) }
    dend_15 { pt3dadd( 414.133, 318.091, 32.681, 0.483 ) }
    dend_15 { pt3dadd( 414.896, 317.303, 33.4636, 0.5338 ) }
    dend_15 { pt3dadd( 415.681, 316.5, 33.8839, 0.5592 ) }
    dend_15 { pt3dadd( 416.478, 315.844, 34.9264, 0.661 ) }
    dend_15 { pt3dadd( 416.902, 314.799, 35.0437, 0.7372 ) }
    dend_15 { pt3dadd( 417.551, 313.988, 35.9859, 0.8644 ) }
    dend_15 { pt3dadd( 418.055, 312.965, 35.8694, 0.8644 ) }
    dend_15 { pt3dadd( 418.663, 312.008, 36.0909, 0.8644 ) }
    dend_15 { pt3dadd( 419.346, 311.157, 36.8306, 0.8136 ) }
    dend_15 { pt3dadd( 419.87, 310.279, 38.075, 0.8644 ) }
    dend_15 { pt3dadd( 420.451, 309.362, 38.7296, 0.839 ) }
    dend_15 { pt3dadd( 420.96, 308.371, 39.1219, 0.788 ) }
    dend_15 { pt3dadd( 421.156, 307.265, 39.4864, 0.6864 ) }
    dend_15 { pt3dadd( 421.17, 306.126, 39.7102, 0.6356 ) }
    dend_15 { pt3dadd( 421.373, 305.021, 39.3742, 0.6102 ) }
    dend_15 { pt3dadd( 421.758, 303.946, 39.3848, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_15 { pt3dadd( 422.349, 303.008, 39.1194, 0.661 ) }
    dend_15 { pt3dadd( 423.022, 302.186, 40.1461, 0.6864 ) }
    dend_15 { pt3dadd( 423.675, 301.366, 41.2208, 0.6864 ) }
    dend_15 { pt3dadd( 424.433, 300.591, 42.0017, 0.661 ) }
    dend_15 { pt3dadd( 425.184, 299.735, 42.2114, 0.5848 ) }
    dend_15 { pt3dadd( 425.831, 298.828, 42.756, 0.483 ) }
    dend_15 { pt3dadd( 426.492, 298.054, 43.9169, 0.4322 ) }
    dend_15 { pt3dadd( 427.365, 297.321, 43.8892, 0.4576 ) }
    dend_15 { pt3dadd( 428.276, 296.652, 43.8609, 0.483 ) }
    dend_15 { pt3dadd( 428.952, 295.898, 44.9599, 0.4322 ) }
    dend_15 { pt3dadd( 429.46, 295.048, 46.1975, 0.3304 ) }
    dend_15 { pt3dadd( 429.554, 293.953, 46.0048, 0.2542 ) }
    dend_15 { pt3dadd( 430.028, 293.148, 45.0215, 0.2288 ) }
    dend_15 { pt3dadd( 430.204, 292.126, 46.0102, 0.2288 ) }
    dend_15 { pt3dadd( 430.523, 291.218, 47.5112, 0.305 ) }
    dend_15 { pt3dadd( 430.873, 290.499, 46.4775, 0.4068 ) }
    dend_15 { pt3dadd( 431.144, 289.49, 45.5868, 0.5084 ) }
    dend_15 { pt3dadd( 431.298, 288.409, 44.8868, 0.4576 ) }
    dend_15 { pt3dadd( 431.54, 287.382, 45.6694, 0.4068 ) }
    dend_15 { pt3dadd( 431.875, 286.463, 45.8629, 0.3814 ) }
    dend_15 { pt3dadd( 432.233, 285.431, 45.1926, 0.5084 ) }
    dend_15 { pt3dadd( 432.669, 284.381, 44.8832, 0.5592 ) }
    dend_15 { pt3dadd( 433.058, 283.354, 45.6201, 0.5592 ) }
    dend_15 { pt3dadd( 433.343, 282.509, 47.3651, 0.4576 ) }
    dend_15 { pt3dadd( 433.69, 281.583, 48.1505, 0.4068 ) }
    dend_15 { pt3dadd( 434.073, 280.79, 46.8115, 0.4322 ) }
    dend_15 { pt3dadd( 434.713, 279.869, 47.0008, 0.483 ) }
    dend_15 { pt3dadd( 435.214, 278.887, 47.4788, 0.5338 ) }
    dend_15 { pt3dadd( 435.528, 277.794, 47.6134, 0.483 ) }
    dend_15 { pt3dadd( 436.189, 277.102, 48.7404, 0.3814 ) }
    dend_15 { pt3dadd( 436.982, 276.3, 48.9983, 0.3304 ) }
    dend_15 { pt3dadd( 437.01, 275.159, 49.0, 0.356 ) }
    dend_15 { pt3dadd( 437.473, 274.118, 48.8774, 0.483 ) }
    dend_15 { pt3dadd( 437.801, 273.04, 49.2974, 0.5084 ) }
    dend_15 { pt3dadd( 438.201, 271.979, 49.1935, 0.5084 ) }
    dend_15 { pt3dadd( 438.715, 271.231, 50.6024, 0.4068 ) }
    dend_15 { pt3dadd( 438.887, 270.526, 50.825, 0.3814 ) }
    dend_15 { pt3dadd( 438.946, 269.465, 50.5453, 0.3304 ) }
    dend_15 { pt3dadd( 439.024, 268.611, 51.7384, 0.3304 ) }
    dend_15 { pt3dadd( 438.952, 267.49, 51.4298, 0.2796 ) }
    dend_15 { pt3dadd( 438.964, 266.359, 51.7762, 0.305 ) }
    dend_15 { pt3dadd( 438.779, 265.414, 52.9788, 0.3304 ) }
    dend_15 { pt3dadd( 438.776, 264.428, 53.7454, 0.3814 ) }
    dend_15 { pt3dadd( 438.46, 263.523, 54.9298, 0.356 ) }
    dend_15 { pt3dadd( 438.066, 262.498, 55.6604, 0.3304 ) }
    dend_15 { pt3dadd( 437.534, 261.502, 55.9628, 0.3304 ) }
    dend_15 { pt3dadd( 437.157, 260.665, 56.0952, 0.356 ) }
    dend_15 { pt3dadd( 436.778, 259.917, 57.96, 0.4576 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 48/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 413.014, 319.317, 31.6308, 0.5848 ) }
    dend_14 { pt3dadd( 412.758, 317.995, 31.9631, 0.6864 ) }
    dend_14 { pt3dadd( 412.375, 316.925, 32.1964, 0.7372 ) }
    dend_14 { pt3dadd( 412.068, 315.863, 32.8395, 0.7626 ) }
    dend_14 { pt3dadd( 411.926, 314.74, 32.8726, 0.7626 ) }
    dend_14 { pt3dadd( 411.507, 313.702, 32.2907, 0.7626 ) }
    dend_14 { pt3dadd( 411.155, 312.65, 31.8746, 0.7626 ) }
    dend_14 { pt3dadd( 411.11, 311.539, 32.4534, 0.788 ) }
    dend_14 { pt3dadd( 410.936, 310.462, 33.2004, 0.7626 ) }
    dend_14 { pt3dadd( 410.829, 309.346, 33.0229, 0.7372 ) }
    dend_14 { pt3dadd( 410.663, 308.267, 32.8194, 0.661 ) }
    dend_14 { pt3dadd( 410.395, 307.167, 33.2276, 0.661 ) }
    dend_14 { pt3dadd( 410.359, 306.061, 32.8079, 0.6356 ) }
    dend_14 { pt3dadd( 410.323, 305.03, 31.6803, 0.6102 ) }
    dend_14 { pt3dadd( 410.297, 303.939, 32.4134, 0.5592 ) }
    dend_14 { pt3dadd( 410.482, 302.839, 32.2255, 0.5338 ) }
    dend_14 { pt3dadd( 410.46, 301.735, 31.5627, 0.5848 ) }
    dend_14 { pt3dadd( 410.559, 300.631, 32.0673, 0.6356 ) }
    dend_14 { pt3dadd( 410.326, 299.535, 32.424, 0.6864 ) }
    dend_14 { pt3dadd( 410.163, 298.47, 31.5907, 0.661 ) }
    dend_14 { pt3dadd( 410.337, 297.383, 30.8711, 0.661 ) }
    dend_14 { pt3dadd( 410.704, 296.311, 31.0862, 0.7118 ) }
    dend_14 { pt3dadd( 411.174, 295.472, 29.8214, 0.8136 ) }
    dend_14 { pt3dadd( 411.395, 294.391, 30.5141, 0.8898 ) }
    dend_14 { pt3dadd( 411.877, 293.384, 30.8666, 0.8898 ) }
    dend_14 { pt3dadd( 412.505, 292.46, 30.5404, 0.8136 ) }
    dend_14 { pt3dadd( 412.758, 291.364, 30.3582, 0.7118 ) }
    dend_14 { pt3dadd( 412.85, 290.281, 29.4944, 0.6102 ) }
    dend_14 { pt3dadd( 412.856, 289.263, 29.4465, 0.6102 ) }
    dend_14 { pt3dadd( 413.082, 288.293, 30.0712, 0.6356 ) }
    dend_14 { pt3dadd( 413.305, 287.188, 30.2492, 0.6864 ) }
    dend_14 { pt3dadd( 413.573, 286.279, 28.709, 0.6356 ) }
    dend_14 { pt3dadd( 413.785, 285.27, 28.1823, 0.6102 ) }
    dend_14 { pt3dadd( 413.294, 284.311, 28.3164, 0.6102 ) }
    dend_14 { pt3dadd( 412.79, 283.444, 27.0074, 0.6864 ) }
    dend_14 { pt3dadd( 412.09, 282.621, 26.789, 0.6864 ) }
    dend_14 { pt3dadd( 411.955, 281.56, 26.21, 0.6102 ) }
    dend_14 { pt3dadd( 412.426, 280.527, 26.3273, 0.5084 ) }
    dend_14 { pt3dadd( 412.957, 279.551, 25.8619, 0.4322 ) }
    dend_14 { pt3dadd( 413.149, 278.49, 25.163, 0.4576 ) }
    dend_14 { pt3dadd( 413.264, 277.401, 25.2804, 0.483 ) }
    dend_14 { pt3dadd( 413.1, 276.305, 24.6638, 0.5848 ) }
    dend_14 { pt3dadd( 413.067, 275.165, 24.5342, 0.6356 ) }
    dend_14 { pt3dadd( 413.326, 274.09, 24.1928, 0.6864 ) }
    dend_14 { pt3dadd( 413.305, 273.003, 23.6608, 0.7118 ) }
    dend_14 { pt3dadd( 413.076, 271.893, 23.2828, 0.7626 ) }
    dend_14 { pt3dadd( 413.085, 270.792, 22.6125, 0.8136 ) }
    dend_14 { pt3dadd( 412.997, 269.752, 21.4931, 0.8136 ) }
    dend_14 { pt3dadd( 412.977, 268.623, 21.2472, 0.7626 ) }
    dend_14 { pt3dadd( 413.038, 267.48, 21.2831, 0.661 ) }
    dend_14 { pt3dadd( 413.226, 266.387, 20.8631, 0.5338 ) }
    dend_14 { pt3dadd( 413.552, 265.32, 20.578, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 413.846, 264.216, 20.7052, 0.4322 ) }
    dend_14 { pt3dadd( 414.129, 263.11, 20.6419, 0.5084 ) }
    dend_14 { pt3dadd( 414.383, 262.027, 20.0553, 0.5848 ) }
    dend_14 { pt3dadd( 414.578, 260.928, 19.4592, 0.5848 ) }
    dend_14 { pt3dadd( 415.045, 259.911, 19.1041, 0.5592 ) }
    dend_14 { pt3dadd( 415.828, 259.108, 18.695, 0.5084 ) }
    dend_14 { pt3dadd( 416.735, 258.426, 18.8874, 0.483 ) }
    dend_14 { pt3dadd( 417.192, 257.551, 18.9269, 0.4576 ) }
    dend_14 { pt3dadd( 416.806, 256.483, 18.727, 0.4322 ) }
    dend_14 { pt3dadd( 416.604, 255.389, 18.2633, 0.4576 ) }
    dend_14 { pt3dadd( 416.535, 254.284, 17.698, 0.483 ) }
    dend_14 { pt3dadd( 416.873, 253.258, 18.3784, 0.6102 ) }
    dend_14 { pt3dadd( 417.101, 252.138, 18.48, 0.661 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 13/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 353.797, 127.729, 36.3118, 0.6356 ) }
    dend_6 { pt3dadd( 353.751, 126.907, 36.3334, 0.2796 ) }
    dend_6 { pt3dadd( 353.688, 125.765, 36.3633, 0.356 ) }
    dend_6 { pt3dadd( 353.656, 124.63, 36.3919, 0.4576 ) }
    dend_6 { pt3dadd( 354.14, 123.601, 36.4344, 0.5084 ) }
    dend_6 { pt3dadd( 354.338, 122.481, 36.6909, 0.5592 ) }
    dend_6 { pt3dadd( 354.669, 121.389, 36.8491, 0.5592 ) }
    dend_6 { pt3dadd( 355.049, 120.327, 37.0292, 0.5084 ) }
    dend_6 { pt3dadd( 355.073, 119.262, 37.725, 0.4322 ) }
    dend_6 { pt3dadd( 354.841, 118.19, 37.389, 0.4068 ) }
    dend_6 { pt3dadd( 354.947, 117.099, 36.9278, 0.483 ) }
    dend_6 { pt3dadd( 354.598, 116.086, 36.3703, 0.5338 ) }
    dend_6 { pt3dadd( 354.751, 115.133, 35.1106, 0.5848 ) }
    dend_6 { pt3dadd( 354.629, 114.008, 35.5289, 0.6102 ) }
    dend_6 { pt3dadd( 354.411, 112.904, 35.9856, 0.6356 ) }
    dend_6 { pt3dadd( 353.961, 111.874, 36.4328, 0.6356 ) }
    dend_6 { pt3dadd( 353.469, 110.871, 36.2706, 0.5592 ) }
    dend_6 { pt3dadd( 353.346, 109.865, 35.2097, 0.5338 ) }
    dend_6 { pt3dadd( 353.094, 109.055, 33.7918, 0.483 ) }
    dend_6 { pt3dadd( 352.614, 108.079, 33.3673, 0.483 ) }
    dend_6 { pt3dadd( 352.229, 107.045, 33.0002, 0.4576 ) }
    dend_6 { pt3dadd( 351.848, 105.993, 33.5163, 0.5084 ) }
    dend_6 { pt3dadd( 351.202, 105.067, 33.5978, 0.5592 ) }
    dend_6 { pt3dadd( 350.824, 104.011, 33.1461, 0.6102 ) }
    dend_6 { pt3dadd( 350.292, 103.071, 33.9786, 0.5592 ) }
    dend_6 { pt3dadd( 350.297, 101.972, 34.6251, 0.5084 ) }
    dend_6 { pt3dadd( 350.473, 100.993, 33.3253, 0.483 ) }
    dend_6 { pt3dadd( 350.763, 99.8879, 33.3404, 0.5338 ) }
    dend_6 { pt3dadd( 350.948, 98.7612, 33.2797, 0.5592 ) }
    dend_6 { pt3dadd( 351.112, 97.6325, 33.3978, 0.5084 ) }
    dend_6 { pt3dadd( 351.366, 96.5195, 33.3108, 0.4576 ) }
    dend_6 { pt3dadd( 351.847, 95.5642, 32.716, 0.483 ) }
    dend_6 { pt3dadd( 352.452, 94.642, 32.2322, 0.5848 ) }
    dend_6 { pt3dadd( 352.912, 93.6178, 32.6626, 0.5848 ) }
    dend_6 { pt3dadd( 353.58, 92.698, 32.7334, 0.5338 ) }
    dend_6 { pt3dadd( 354.289, 91.9374, 31.64, 0.4576 ) }
    dend_6 { pt3dadd( 355.033, 91.0798, 31.7957, 0.5084 ) }
    dend_6 { pt3dadd( 355.582, 90.1533, 32.4783, 0.5084 ) }
    dend_6 { pt3dadd( 355.917, 89.1049, 32.0897, 0.5084 ) }
    dend_6 { pt3dadd( 356.314, 88.1225, 32.9076, 0.4322 ) }
    dend_6 { pt3dadd( 356.744, 87.2243, 31.7316, 0.4322 ) }
    dend_6 { pt3dadd( 357.099, 86.183, 31.0293, 0.4068 ) }
    dend_6 { pt3dadd( 357.693, 85.3263, 31.2012, 0.4068 ) }
    dend_6 { pt3dadd( 358.271, 84.4923, 31.134, 0.356 ) }
    dend_6 { pt3dadd( 358.18, 83.4478, 30.8269, 0.3814 ) }
    dend_6 { pt3dadd( 358.142, 82.4487, 32.0068, 0.3814 ) }
    dend_6 { pt3dadd( 357.715, 81.4255, 32.1426, 0.4576 ) }
    dend_6 { pt3dadd( 357.354, 80.386, 31.9942, 0.483 ) }
    dend_6 { pt3dadd( 357.067, 79.4704, 33.0044, 0.5592 ) }
    dend_6 { pt3dadd( 356.647, 78.6044, 33.3774, 0.5592 ) }
    dend_6 { pt3dadd( 356.407, 77.5105, 32.9605, 0.5848 ) }
    dend_6 { pt3dadd( 356.056, 76.4391, 33.2262, 0.6356 ) }
    dend_6 { pt3dadd( 355.768, 75.3731, 32.7737, 0.7372 ) }
    dend_6 { pt3dadd( 355.586, 74.2715, 32.2008, 0.7626 ) }
    dend_6 { pt3dadd( 355.487, 73.1804, 32.454, 0.7372 ) }
    dend_6 { pt3dadd( 355.638, 72.2509, 33.6442, 0.6864 ) }
    dend_6 { pt3dadd( 355.46, 71.1815, 34.104, 0.7118 ) }
    dend_6 { pt3dadd( 355.284, 70.1476, 35.1266, 0.7118 ) }
    dend_6 { pt3dadd( 355.179, 69.1808, 34.356, 0.661 ) }
    dend_6 { pt3dadd( 355.791, 68.3362, 34.5772, 0.5848 ) }
    dend_6 { pt3dadd( 356.23, 67.3838, 33.5381, 0.5084 ) }
    dend_6 { pt3dadd( 356.355, 66.3415, 34.0071, 0.483 ) }
    dend_6 { pt3dadd( 355.955, 65.3296, 34.6634, 0.4322 ) }
    dend_6 { pt3dadd( 355.093, 65.1908, 33.6571, 0.3814 ) }
    dend_6 { pt3dadd( 354.727, 64.7558, 35.7787, 0.3304 ) }
    dend_6 { pt3dadd( 354.172, 64.2206, 36.874, 0.2796 ) }
    dend_6 { pt3dadd( 353.953, 63.3067, 37.655, 0.305 ) }
    dend_6 { pt3dadd( 353.613, 62.3128, 36.9088, 0.3304 ) }
    dend_6 { pt3dadd( 353.27, 61.4408, 35.3069, 0.3814 ) }
    dend_6 { pt3dadd( 352.666, 60.5956, 35.3979, 0.356 ) }
    dend_6 { pt3dadd( 352.118, 59.9323, 36.6663, 0.356 ) }
    dend_6 { pt3dadd( 351.976, 59.0744, 35.7949, 0.4068 ) }
    dend_6 { pt3dadd( 352.135, 58.1342, 34.4534, 0.483 ) }
    dend_6 { pt3dadd( 352.175, 57.1267, 33.9161, 0.5338 ) }
    dend_6 { pt3dadd( 352.193, 56.0471, 34.769, 0.5084 ) }
    dend_6 { pt3dadd( 352.357, 54.9367, 34.8219, 0.483 ) }
    dend_6 { pt3dadd( 352.605, 53.8587, 34.1281, 0.4322 ) }
    dend_6 { pt3dadd( 352.945, 52.8192, 33.4107, 0.4322 ) }
    dend_6 { pt3dadd( 353.27, 51.7893, 33.9108, 0.4068 ) }
    dend_6 { pt3dadd( 353.605, 50.8924, 34.5114, 0.4068 ) }
    dend_6 { pt3dadd( 353.745, 49.842, 33.7114, 0.3304 ) }
    dend_6 { pt3dadd( 353.97, 48.8259, 34.3742, 0.305 ) }
    dend_6 { pt3dadd( 354.163, 47.7453, 34.9552, 0.305 ) }
    dend_6 { pt3dadd( 354.362, 46.6203, 34.967, 0.4068 ) }
    dend_6 { pt3dadd( 354.982, 45.8744, 33.6, 0.4576 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 353.797, 127.729, 36.3118, 0.6356 ) }
    dend_5 { pt3dadd( 353.21, 127.205, 36.2692, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_5 { pt3dadd( 352.194, 126.749, 35.7272, 0.483 ) }
    dend_5 { pt3dadd( 351.253, 126.126, 35.3315, 0.5338 ) }
    dend_5 { pt3dadd( 350.328, 125.456, 35.1691, 0.5338 ) }
    dend_5 { pt3dadd( 349.261, 125.164, 34.5486, 0.5338 ) }
    dend_5 { pt3dadd( 348.256, 125.02, 33.2727, 0.4576 ) }
    dend_5 { pt3dadd( 347.382, 124.438, 32.2078, 0.3814 ) }
    dend_5 { pt3dadd( 346.729, 123.563, 31.3869, 0.3814 ) }
    dend_5 { pt3dadd( 346.225, 122.573, 30.7373, 0.4068 ) }
    dend_5 { pt3dadd( 345.519, 121.723, 30.0311, 0.4576 ) }
    dend_5 { pt3dadd( 344.819, 120.828, 29.6909, 0.4322 ) }
    dend_5 { pt3dadd( 344.152, 119.9, 29.5739, 0.3814 ) }
    dend_5 { pt3dadd( 343.516, 118.968, 29.1332, 0.356 ) }
    dend_5 { pt3dadd( 343.057, 117.943, 28.6124, 0.3814 ) }
    dend_5 { pt3dadd( 342.52, 116.934, 28.5614, 0.4576 ) }
    dend_5 { pt3dadd( 342.094, 115.872, 28.56, 0.483 ) }
    dend_5 { pt3dadd( 341.596, 114.843, 28.56, 0.483 ) }
    dend_5 { pt3dadd( 341.088, 113.818, 28.5603, 0.483 ) }
    dend_5 { pt3dadd( 340.543, 112.812, 28.5611, 0.5338 ) }
    dend_5 { pt3dadd( 339.88, 111.88, 28.5648, 0.5848 ) }
    dend_5 { pt3dadd( 339.208, 110.954, 28.5838, 0.6102 ) }
    dend_5 { pt3dadd( 338.363, 110.185, 28.6793, 0.6102 ) }
    dend_5 { pt3dadd( 337.482, 109.569, 29.6195, 0.6102 ) }
    dend_5 { pt3dadd( 337.049, 108.583, 28.7484, 0.6356 ) }
    dend_5 { pt3dadd( 336.497, 107.585, 28.5701, 0.7118 ) }
    dend_5 { pt3dadd( 335.8, 106.679, 28.5594, 0.788 ) }
    dend_5 { pt3dadd( 335.191, 105.71, 28.5578, 0.839 ) }
    dend_5 { pt3dadd( 334.649, 104.703, 28.5482, 0.788 ) }
    dend_5 { pt3dadd( 334.06, 103.723, 28.4925, 0.7118 ) }
    dend_5 { pt3dadd( 333.314, 102.87, 28.0977, 0.6356 ) }
    dend_5 { pt3dadd( 332.321, 102.363, 27.4901, 0.5848 ) }
    dend_5 { pt3dadd( 331.32, 101.81, 27.433, 0.5848 ) }
    dend_5 { pt3dadd( 330.27, 101.356, 27.3902, 0.5592 ) }
    dend_5 { pt3dadd( 329.345, 100.688, 27.186, 0.6102 ) }
    dend_5 { pt3dadd( 328.636, 99.8673, 26.3021, 0.661 ) }
    dend_5 { pt3dadd( 327.641, 99.528, 25.2, 0.7626 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_48, dend_37, dend_32, dend_23, dend_18, dend_9, dend_0, dend_54, dend_49, dend_45, dend_38, dend_36, dend_33, dend_31, dend_24, dend_20, dend_19, dend_17, dend_10, dend_8, dend_1, dend_56, dend_55, dend_53, dend_50, dend_47, dend_46, dend_44, dend_39, dend_35, dend_34, dend_28, dend_25, dend_22, dend_21, dend_16, dend_11, dend_3, dend_2, dend_52, dend_51, dend_43, dend_40, dend_30, dend_29, dend_27, dend_26, dend_13, dend_12, dend_7, dend_4, dend_42, dend_41, dend_15, dend_14, dend_6, dend_5]}
    dend = new SectionList()
    dend_48 dend.append()
    dend_37 dend.append()
    dend_32 dend.append()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_54 dend.append()
    dend_49 dend.append()
    dend_45 dend.append()
    dend_38 dend.append()
    dend_36 dend.append()
    dend_33 dend.append()
    dend_31 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_10 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_56 dend.append()
    dend_55 dend.append()
    dend_53 dend.append()
    dend_50 dend.append()
    dend_47 dend.append()
    dend_46 dend.append()
    dend_44 dend.append()
    dend_39 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_52 dend.append()
    dend_51 dend.append()
    dend_43 dend.append()
    dend_40 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_20081, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_20081 = new SectionList()
    soma_0 OneSecGrp_SectionRef_20081.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.15  // units: uF/cm2
    forsec axon cm = 1.15  // units: uF/cm2
    forsec dend cm = 1.15  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 192.6  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 2.0307912E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.050352365  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 0.0  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.008597068  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.80320024  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.018533524  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.007453334  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.016618334  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 6.419922E-5  // units: S cm-2
        e_pas_nml2 = -88.53063  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.534816E-4  // units: S cm-2
        e_pas_nml2 = -88.53063  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 5.3397116E-6  // units: S cm-2
        e_pas_nml2 = -88.53063  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.1144784E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.009762187  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_45 nseg = 3
    dend_33 nseg = 3
    dend_56 nseg = 9
    dend_55 nseg = 5
    dend_53 nseg = 9
    dend_50 nseg = 7
    dend_47 nseg = 3
    dend_46 nseg = 5
    dend_44 nseg = 7
    dend_34 nseg = 5
    dend_25 nseg = 3
    dend_21 nseg = 3
    dend_16 nseg = 13
    dend_52 nseg = 3
    dend_51 nseg = 5
    dend_43 nseg = 3
    dend_30 nseg = 11
    dend_29 nseg = 9
    dend_27 nseg = 5
    dend_26 nseg = 3
    dend_12 nseg = 7
    dend_7 nseg = 5
    dend_4 nseg = 9
    dend_42 nseg = 5
    dend_41 nseg = 5
    dend_15 nseg = 5
    dend_14 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_471085845


