// Cell: cNAC187_L5_BP_bf9275d56a_0_0
/*
{
  "id" : "cNAC187_L5_BP_bf9275d56a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.05583, 8.25355, 2.83526, 0.83", "-5.85697, 10.4247, 3.25771, 1.11", "-7.50853, 11.7039, 3.47746, 0.83", "-9.11309, 12.936, 3.67436, 0.83", "-10.0631, 13.6385, 3.78225, 1.11", "-13.0382, 15.8339, 4.12805, 1.11", "-18.3593, 19.5924, 4.73931, 0.83", "-20.2763, 20.8948, 4.94117, 0.83", "-21.7944, 21.8956, 5.06654, 0.83", "-23.2747, 22.8873, 5.17507, 0.83", "-24.4798, 23.7048, 5.23363, 0.55", "-25.3855, 24.2583, 5.29306, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.84924, 6.34713, -6.29707, 0.55", "7.87975, 7.00269, -6.97383, 0.55", "9.63825, 7.16818, -7.86934, 0.83", "12.4214, 7.34429, -9.53281, 0.55", "13.7649, 7.42931, -10.3358, 1.38", "17.0682, 7.63833, -12.3101, 0.55", "18.4751, 7.56755, -13.2522, 0.83", "25.7528, 6.26944, -18.5452, 0.55", "26.4569, 6.09487, -19.1276, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.686548, -10.701, 3.30922, 1.11", "-0.739486, -15.3718, 4.9837, 1.11", "-0.761046, -17.2741, 5.66566, 0.83", "-0.789689, -19.8013, 6.57168, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.895963, 10.1264, -1.38587, 1.11", "0.989071, 12.3539, -1.36733, 1.11", "1.12828, 15.9883, -1.2046, 1.38", "1.13946, 16.1907, -1.19183, 1.38", "1.42798, 18.6951, -1.00497, 0.83", "1.83721, 21.3432, -0.663379, 0.83", "2.54628, 24.3329, 0.0898929, 0.83", "2.95236, 25.4667, 0.518396, 0.83", "3.35474, 26.2877, 0.914033, 1.11", "4.53549, 28.2873, 1.93794, 0.55", "5.90903, 30.3743, 3.16078, 0.83", "7.71417, 32.5206, 4.55306, 0.55", "8.63692, 33.4119, 5.18576, 0.83", "9.9252, 34.619, 6.17099, 0.55", "11.5191, 36.1544, 7.50321, 0.55", "13.7419, 38.4653, 9.5361, 0.55", "16.1913, 41.1067, 11.7806, 0.55", "17.7315, 42.821, 13.4543, 0.55", "19.6135, 44.9886, 15.8141, 0.55", "20.0038, 45.4232, 16.3491, 0.83", "21.0328, 46.5719, 17.8575, 0.55", "21.9005, 47.4673, 19.0424, 0.83", "23.8962, 49.9141, 21.8513, 0.55", "24.6522, 50.8077, 22.6737, 0.83", "25.3639, 51.4661, 23.2339, 0.55", "26.0725, 52.0329, 23.6655, 0.83", "27.6472, 53.0865, 24.4511, 0.83", "29.7329, 54.521, 25.2996, 0.83", "31.0147, 55.4694, 25.6784, 0.55", "31.9918, 56.2902, 25.9728, 0.55", "34.554, 58.4109, 26.7052, 0.83", "36.2098, 59.7708, 27.1101, 0.55", "38.7253, 61.763, 27.6205, 0.55", "41.0316, 63.4331, 27.994, 0.55", "43.0954, 64.8478, 28.2718, 0.55", "45.705, 66.5051, 28.5024, 0.55", "47.3009, 67.3169, 28.5907, 0.55", "48.3913, 67.773, 28.5193, 0.55", "49.8415, 68.1135, 28.3013, 0.55", "52.008, 68.2692, 27.7981, 0.55", "53.3596, 68.195, 27.4321, 0.55", "55.3335, 68.033, 27.0358, 0.55", "59.0901, 67.8439, 26.6171, 0.55", "62.0355, 67.8318, 26.4988, 0.55", "65.1553, 67.9677, 26.5601, 0.55", "67.1541, 68.1233, 26.7578, 0.55", "72.343, 68.9989, 27.6149, 0.55", "75.4105, 69.7541, 28.3543, 0.55", "77.7083, 70.4718, 29.1256, 0.55", "79.1036, 71.1411, 29.649, 0.55", "80.7207, 72.1368, 30.2478, 0.55", "83.4596, 74.1002, 31.0151, 0.55", "84.0887, 74.5729, 31.1035, 0.55", "85.8947, 75.8371, 31.237, 0.55", "87.554, 77.1838, 31.3534, 0.83", "88.4597, 77.9309, 31.4026, 0.55", "89.8161, 79.2132, 31.422, 0.83", "96.9408, 86.061, 33.4193, 0.83", "103.138, 93.9159, 34.6623, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-25.3855, 24.2583, 5.29306, 0.55", "-27.1713, 25.5425, 4.1817, 0.55", "-29.1131, 26.939, 2.97322, 0.55", "-31.4564, 28.6243, 1.51483, 0.55", "-33.3914, 30.0159, 0.310608, 0.83", "-35.0129, 31.1821, -0.698532, 0.55", "-38.0226, 33.3466, -2.57164, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-25.3855, 24.2583, 5.29306, 0.55", "-28.261, 24.8547, 4.81886, 0.55", "-31.3391, 25.3727, 4.61541, 0.55", "-34.8343, 25.9488, 4.46975, 0.55", "-39.9231, 26.6979, 4.72085, 0.55", "-44.1996, 27.1816, 5.22505, 0.55", "-48.6962, 27.6076, 5.93994, 0.55", "-53.0715, 27.6972, 7.07741, 0.55", "-56.8614, 27.3891, 8.39359, 0.55", "-61.6145, 26.6482, 10.5103, 0.55", "-63.6983, 26.1598, 11.7027, 0.55", "-65.9546, 25.6028, 13.0834, 0.55", "-69.9272, 24.3405, 15.3253, 0.55", "-72.0232, 23.6961, 16.1963, 0.55", "-74.2185, 22.9563, 17.0918, 0.55", "-76.8145, 22.1255, 17.9002, 0.55", "-79.6309, 21.2853, 18.7065, 0.55", "-83.6457, 20.082, 19.7705, 0.55", "-88.9784, 18.8586, 20.7399, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "26.4569, 6.09487, -19.1276, 0.55", "30.8942, 7.40938, -20.089, 0.55", "33.4632, 8.0018, -21.0021, 0.55", "36.0042, 8.47037, -21.9364, 0.55", "37.7433, 8.72081, -22.5717, 0.55", "40.2872, 9.02832, -23.4786, 0.55", "45.5712, 9.55786, -25.5217, 0.55", "51.5728, 10.1061, -28.2388, 0.55", "54.4935, 10.1826, -29.7519, 0.55", "56.0608, 10.1814, -30.6635, 0.55", "57.7799, 10.186, -31.7328, 0.55", "60.8511, 10.1092, -33.626, 0.55", "61.9697, 10.0148, -34.3482, 0.55", "66.7054, 9.71932, -37.7728, 0.55", "70.0585, 9.55456, -40.4452, 0.55", "71.9882, 9.49507, -42.0377, 0.55", "73.9135, 9.41891, -43.6241, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.4569, 6.09487, -19.1276, 0.83", "28.3792, 7.9185, -19.5179, 0.83", "29.4846, 8.94208, -19.7976, 0.55", "31.1207, 10.4397, -20.3785, 0.83", "32.2179, 11.4658, -20.8168, 0.55", "33.718, 12.9332, -21.4112, 0.83", "35.5044, 14.7602, -22.0635, 0.55", "36.4153, 15.6185, -22.3242, 0.55", "38.5645, 17.3318, -22.651, 0.83", "40.5415, 18.7217, -22.583, 0.55", "41.6362, 19.5223, -22.4255, 0.83", "43.248, 20.8213, -22.0125, 0.55", "45.5146, 22.8356, -21.1027, 0.55", "48.6822, 25.5094, -19.5932, 0.55", "51.7028, 28.0128, -17.8756, 0.55", "54.0966, 29.9831, -16.4563, 0.55", "58.0358, 33.259, -14.0998, 0.55", "60.8882, 35.7701, -12.3345, 0.55", "62.5645, 37.4709, -11.2502, 0.55", "65.5631, 40.9779, -9.34241, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.789689, -19.8013, 6.57168, 0.83", "-0.890489, -22.6449, 6.44938, 0.83", "-0.988697, -25.4154, 6.33023, 0.83", "-1.09835, -28.5086, 6.1972, 0.83", "-1.1556, -30.1238, 6.12773, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.789689, -19.8013, 6.57168, 0.55", "-0.0914985, -21.4445, 7.44179, 0.55", "0.606947, -23.4396, 8.64508, 0.55", "1.18825, -26.0185, 10.4346, 0.55", "1.35718, -27.0148, 11.1764, 0.83", "1.65723, -29.5425, 13.4109, 0.55", "1.71926, -30.8378, 14.6206, 0.55", "1.82166, -33.3546, 17.0906, 0.83", "1.83149, -35.2161, 19.0704, 0.55", "1.70273, -36.737, 20.7225, 0.55", "1.38069, -39.6094, 23.8209, 0.55", "1.11801, -41.8982, 26.2637, 0.55", "0.95116, -43.7376, 28.2354, 0.55", "0.85844, -45.6998, 30.2362, 0.28", "0.875896, -46.5233, 31.0184, 0.55", "0.919538, -48.0456, 32.3687, 0.28", "1.18247, -50.4439, 34.027, 0.55", "0.383693, -58.2433, 40.5293, 0.55", "-0.354919, -65.4463, 47.693, 0.55", "-0.142293, -71.4463, 55.9211, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-38.0226, 33.3466, -2.57164, 0.55", "-41.695, 33.1949, -2.11003, 0.55", "-43.2928, 32.9916, -1.80461, 0.83", "-45.2292, 32.5903, -1.30106, 0.55", "-46.7493, 32.2351, -0.821656, 0.83", "-50.731, 31.4204, 0.459332, 0.55", "-52.2435, 31.1263, 0.961181, 0.28", "-54.826, 30.5829, 1.95302, 0.55", "-58.2879, 29.8739, 3.2799, 0.55", "-60.8838, 29.3768, 4.20695, 0.55", "-64.3212, 28.75, 5.37017, 0.28", "-65.185, 28.6292, 5.60109, 0.55", "-66.9546, 28.4191, 6.03882, 0.28", "-68.1256, 28.341, 6.26684, 0.55", "-70.4536, 28.245, 6.57422, 0.28", "-71.7937, 28.155, 6.67266, 0.55", "-74.153, 27.8468, 6.79446, 0.28", "-75.7196, 27.6528, 6.82949, 0.55", "-86.5495, 24.1737, 10.043, 0.55", "-96.7845, 19.3857, 13.5123, 0.55", "-106.628, 13.5977, 16.564, 0.55", "-116.123, 6.84593, 18.556, 0.55", "-124.894, -0.147177, 22.2818, 0.55", "-134.344, -6.47576, 25.5024, 0.55", "-144.223, -11.2683, 29.8785, 0.55", "-153.932, -16.8179, 33.7071, 0.55", "-163.621, -21.8405, 38.2466, 0.55", "-172.916, -27.2156, 43.1895, 0.55", "-181.155, -34.0287, 48.2309, 0.55", "-189.661, -39.9589, 53.9055, 0.55", "-198.077, -46.7473, 58.6801, 0.55", "-205.355, -54.3146, 64.1112, 0.55", "-211.165, -61.7146, 71.2664, 0.55", "-216.459, -70.6948, 76.8385, 0.55", "-220.203, -80.0722, 82.9838, 0.55", "-224.635, -89.0372, 89.2842, 0.55", "-230.358, -97.1933, 95.644, 0.55", "-238.392, -103.362, 101.736, 0.55", "-245.4, -110.816, 107.656, 0.55", "-250.858, -117.16, 116.003, 0.55", "-258.015, -122.41, 123.809, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-38.0226, 33.3466, -2.57164, 0.55", "-39.0813, 34.9412, -4.77156, 0.55", "-39.6693, 36.6656, -7.03156, 0.55", "-40.1331, 38.6296, -9.31602, 0.55", "-40.4235, 39.8595, -10.7465, 0.55", "-40.9533, 42.1029, -13.3559, 0.83", "-41.3408, 43.7442, -15.265, 0.55", "-41.5721, 46.0387, -17.9927, 0.83", "-41.4764, 47.4486, -19.4005, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-88.9784, 18.8586, 20.7399, 0.28", "-90.0467, 16.9839, 20.1266, 0.28", "-90.5537, 16.1851, 19.7897, 0.28", "-91.211, 15.0588, 19.2741, 0.55", "-91.7531, 14.067, 18.832, 0.28", "-92.5538, 12.5539, 18.1799, 0.55", "-94.7845, 8.09751, 16.347, 0.28", "-95.5056, 6.54544, 15.579, 0.55", "-96.5938, 4.1625, 14.3135, 0.28", "-97.2152, 2.74276, 13.4913, 0.55", "-97.6433, 1.76659, 12.8999, 0.28", "-98.1315, 0.645276, 12.231, 0.55", "-99.6073, -3.10836, 10.1053, 0.28", "-100.069, -4.23972, 9.41915, 0.55", "-100.873, -5.95092, 8.17557, 0.28", "-101.535, -7.03468, 7.26771, 0.28", "-102.134, -7.75273, 6.62119, 0.55", "-104.237, -9.76447, 4.8374, 0.28", "-105.219, -10.5778, 4.12455, 0.55", "-107.617, -12.4149, 2.36302, 0.28", "-110.021, -14.0307, 0.739279, 0.28", "-112.636, -15.557, -0.922405, 0.28", "-113.838, -16.1266, -1.57112, 0.55", "-119.613, -22.8121, -6.13019, 0.55", "-126.146, -29.7633, -8.92992, 0.55", "-132.465, -36.1892, -13.1268, 0.55", "-138.897, -41.9165, -18.0918, 0.55", "-145.361, -46.8496, -23.8114, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-88.9784, 18.8586, 20.7399, 0.55", "-89.7389, 18.7959, 20.8117, 0.55", "-91.8947, 18.6215, 21.2916, 0.55", "-92.7066, 18.5353, 21.5148, 0.55", "-94.617, 18.2752, 22.0687, 0.55", "-97.5497, 17.905, 22.78, 0.55", "-99.0725, 17.7591, 23.1228, 0.28", "-101.44, 17.4809, 23.6102, 0.55", "-103.197, 17.2384, 23.9093, 0.55", "-103.938, 17.1311, 24.0372, 0.28", "-108.388, 16.4853, 24.7985, 0.55", "-110.463, 16.0881, 25.0279, 0.28", "-113.255, 15.5418, 25.1738, 0.28", "-115.657, 15.1061, 25.1587, 0.55", "-125.104, 14.7798, 27.1382, 0.55", "-134.268, 14.2107, 30.1309, 0.55", "-142.947, 12.6603, 34.0721, 0.55", "-151.397, 12.7295, 38.7486, 0.55", "-158.701, 12.4755, 45.0612, 0.55", "-164.655, 12.7497, 52.6604, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "73.9135, 9.41891, -43.6241, 0.55", "76.9039, 10.3049, -46.1352, 0.55", "77.8523, 10.5374, -46.9853, 0.55", "79.0413, 10.7903, -48.0314, 0.55", "81.2016, 11.2183, -50.0557, 0.55", "83.4624, 11.566, -52.2162, 0.55", "84.5725, 11.6492, -53.2363, 0.83", "85.4908, 11.648, -54.1394, 0.55", "86.1818, 11.5837, -54.879, 0.83", "87.8616, 11.1855, -56.7553, 0.55", "89.2524, 10.7284, -58.298, 0.55", "90.8518, 10.199, -59.9938, 0.55", "92.63, 9.65685, -61.9222, 0.55", "93.8246, 9.26261, -63.2424, 0.55", "95.1731, 8.80985, -64.7737, 0.55", "96.3369, 8.4521, -66.1809, 0.55", "97.0663, 8.28464, -67.1683, 0.55", "98.0012, 7.95686, -69.1635, 0.55", "98.5155, 7.70863, -70.4082, 0.55", "98.9727, 7.29342, -72.0567, 0.55", "99.6151, 6.49873, -74.8359, 0.55", "99.7489, 6.29482, -75.4604, 0.28", "101.472, 3.73418, -83.0423, 0.28", "102.045, 3.00197, -85.2689, 0.83", "104.288, 0.271875, -93.1497, 0.83", "105.439, -1.14098, -96.7942, 0.83", "105.988, -1.77074, -98.2628, 0.55", "106.612, -2.38648, -99.6927, 0.55", "108.299, -3.56461, -102.33, 0.55", "110.091, -4.6085, -104.641, 0.28", "110.62, -4.76375, -104.76, 0.55", "111.777, -4.98646, -104.619, 0.28", "112.488, -5.06415, -104.434, 0.55", "113.229, -5.14908, -104.178, 0.28", "114.116, -5.20282, -103.834, 0.55", "115.441, -5.22639, -103.467, 0.28", "116.507, -5.28137, -103.204, 0.55", "117.684, -5.27281, -103.014, 0.28", "119.285, -5.26918, -102.899, 0.55", "121.081, -5.2337, -102.882, 0.55", "122.66, -5.19365, -102.973, 0.28", "124.845, -5.1296, -103.222, 0.55", "128.624, -4.95241, -104.064, 0.55", "130.291, -4.80666, -104.647, 0.55", "131.007, -4.72141, -104.977, 0.83", "132.373, -4.56111, -105.732, 0.55", "133.319, -4.41696, -106.319, 0.83", "135.861, -3.9645, -107.934, 0.55", "137.419, -3.7997, -108.951, 0.28", "138.077, -3.76426, -109.301, 0.55", "139.884, -3.81498, -110.045, 0.28", "140.52, -3.88676, -110.258, 0.55", "141.832, -4.0971, -110.489, 0.28", "143.171, -4.41778, -110.484, 0.55", "145.879, -5.1641, -109.992, 0.28", "147.128, -5.54998, -109.629, 0.55", "148.99, -6.21954, -108.982, 0.28", "151.342, -7.04842, -108.081, 0.55", "153.041, -7.62247, -107.405, 0.55", "155.978, -8.52154, -106.196, 0.28", "157.182, -8.84497, -105.803, 0.55", "159.254, -9.30708, -105.362, 0.28", "161.312, -9.62505, -105.079, 0.55", "162.436, -9.68769, -105.092, 0.28", "163.445, -9.61588, -105.196, 0.55", "166.288, -9.2688, -105.776, 0.28", "168.312, -8.88301, -106.237, 0.28", "170.064, -8.42088, -106.676, 0.55", "171.997, -7.86553, -107.266, 0.28", "172.482, -7.6931, -107.401, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "73.9135, 9.41891, -43.6241, 0.55", "74.7202, 7.41065, -44.6157, 0.55", "75.2556, 5.70293, -45.3405, 0.28", "75.7411, 4.15378, -45.8771, 0.55", "76.9324, 0.891027, -47.0442, 0.28", "77.0028, 0.681424, -47.1458, 0.55", "77.4021, -0.422737, -47.7635, 0.28", "77.6575, -1.36475, -48.4117, 0.55", "77.8759, -2.36838, -49.1913, 0.28", "78.1395, -3.74973, -50.3118, 0.55", "78.7977, -7.2115, -53.067, 0.55", "79.3669, -10.3777, -55.6283, 0.55", "79.7998, -12.9121, -57.6787, 0.55", "80.1839, -15.4046, -59.6547, 0.55", "80.2806, -16.0459, -60.1408, 0.28", "80.3999, -16.7221, -60.6091, 0.55", "80.6415, -17.6375, -61.1793, 0.28", "81.2237, -19.2386, -62.0623, 0.55", "82.5717, -22.2123, -63.2941, 0.55", "83.3064, -23.7923, -63.817, 0.28", "83.9642, -25.4204, -64.4178, 0.55", "84.7271, -27.7347, -65.3427, 0.28", "85.2308, -29.6244, -66.1311, 0.55", "85.8711, -32.4672, -67.3151, 0.28", "86.5512, -35.3951, -68.4549, 0.55", "87.487, -39.6584, -70.1449, 0.28", "87.9398, -41.9386, -71.0529, 0.55", "88.3692, -44.2826, -72.0332, 0.28", "88.7306, -46.3643, -73.0158, 0.28", "89.2701, -48.9822, -74.4519, 0.55", "89.9218, -51.3797, -75.7273, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "65.5631, 40.9779, -9.34241, 0.55", "68.0424, 41.2142, -8.87042, 0.55", "69.8595, 41.2989, -8.68932, 0.55", "73.8418, 41.4162, -8.49294, 0.55", "75.6362, 41.4147, -8.55782, 0.55", "77.5845, 41.442, -8.73085, 0.55", "80.1876, 41.502, -9.15112, 0.55", "82.9414, 41.4639, -9.84535, 0.55", "84.3866, 41.4064, -10.3712, 0.55", "87.314, 41.2423, -11.837, 0.55", "88.659, 41.1727, -12.556, 0.55", "91.8201, 40.9406, -14.3156, 0.55", "93.9777, 40.7007, -15.4807, 0.55", "95.5694, 40.5228, -16.2655, 0.83", "98.1308, 40.1497, -17.4811, 0.55", "100.665, 39.6767, -18.5632, 0.83", "102.835, 39.1892, -19.3966, 0.55", "104.764, 38.7936, -20.0438, 0.55", "105.854, 38.6212, -20.3583, 0.83", "108.4, 38.2417, -20.963, 0.28", "109.659, 38.1123, -21.191, 0.28", "110.889, 37.9053, -21.4652, 0.28", "112.213, 37.7149, -21.771, 0.28", "114.322, 37.4434, -22.3069, 0.28", "115.17, 37.3472, -22.499, 0.55", "117.198, 37.1597, -22.7668, 0.55", "120.861, 36.8093, -23.0659, 0.55", "121.881, 36.6916, -23.1027, 0.55", "122.798, 36.5626, -23.0948, 0.83", "124.784, 36.3587, -22.9294, 0.55", "126.51, 36.1878, -22.7593, 0.55", "128.141, 36.0337, -22.592, 0.55", "129.406, 35.8894, -22.4947, 0.55", "131.435, 35.5163, -22.421, 0.55", "133.858, 34.8634, -22.4396, 0.55", "137.69, 33.4252, -22.6764, 0.55", "139.842, 32.3372, -22.9012, 0.55", "141.756, 31.0981, -23.1522, 0.28", "142.346, 30.6152, -23.2453, 0.55", "143.709, 29.2061, -23.4755, 0.28", "144.953, 27.5726, -23.6825, 0.55", "146.224, 25.4974, -23.7479, 0.55", "147.077, 24.145, -23.7218, 0.28", "147.387, 23.6718, -23.6876, 0.55", "148.18, 22.5033, -23.5862, 0.28", "149.251, 20.9954, -23.4157, 0.55", "151.985, 17.4053, -22.912, 0.55", "153.399, 15.6083, -22.6172, 0.55", "154.708, 13.9661, -22.331, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "65.5631, 40.9779, -9.34241, 0.55", "66.6509, 42.405, -8.29167, 0.55", "67.0099, 42.8447, -7.97539, 0.55", "68.3932, 44.3635, -6.80148, 0.55", "69.9187, 46.1102, -5.4936, 0.55", "71.8499, 48.3866, -3.75664, 0.55", "72.3849, 49.0131, -3.28137, 0.55", "73.3592, 50.0887, -2.40522, 0.55", "74.4403, 51.2618, -1.51086, 0.55", "75.7151, 52.6182, -0.563069, 0.55", "76.91, 53.9177, 0.319665, 0.55", "77.5722, 54.6383, 0.745197, 0.55", "78.3445, 55.5069, 1.22376, 0.55", "79.3007, 56.597, 1.7732, 0.83", "80.9448, 58.2496, 2.50267, 0.55", "82.0673, 59.2613, 2.96896, 0.83", "83.6659, 60.5568, 3.62203, 0.55", "84.166, 60.9241, 3.83703, 0.55", "85.7486, 61.9691, 4.53356, 0.55", "88.6644, 63.6044, 5.80617, 0.55", "90.8445, 64.6635, 6.78216, 0.55", "92.5717, 65.4583, 7.6482, 0.55", "94.3291, 66.2269, 8.65083, 0.55", "94.7002, 66.3811, 8.87056, 0.28", "95.4597, 66.6664, 9.33636, 0.83", "98.5809, 67.8098, 11.2973, 0.55", "100.78, 68.5847, 12.6306, 0.55", "102.559, 69.289, 13.7315, 0.55", "103.618, 69.7135, 14.4004, 0.83", "104.449, 70.0594, 14.9197, 0.28", "105.205, 70.3695, 15.3835, 0.55", "110.465, 74.5963, 18.7045, 0.55", "116.738, 77.3555, 21.8029, 0.55", "122.7, 80.9913, 24.5946, 0.55", "127.633, 84.4373, 29.1056, 0.55", "132.228, 87.1424, 34.4096, 0.55", "138.211, 88.052, 38.8755, 0.55", "144.622, 87.6918, 42.7899, 0.55", "151.551, 88.305, 45.6504, 0.55", "158.264, 89.085, 48.9499, 0.55", "165.256, 90.3138, 51.4314, 0.55", "171.85, 92.3231, 54.4408, 0.55", "178.113, 93.4276, 58.4552, 0.55", "184.072, 96.008, 62.2494, 0.55", "189.215, 99.9084, 66.1093, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.1556, -30.1238, 6.12773, 1.38", "1.62643, -32.9948, 5.31911, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.1556, -30.1238, 6.12773, 0.55", "-2.72727, -32.0959, 6.13534, 0.55", "-4.45875, -34.6208, 6.1449, 0.55", "-5.81244, -36.295, 6.16803, 0.55", "-6.94956, -37.6946, 6.00081, 0.55", "-9.42824, -40.5955, 5.38959, 0.55", "-11.1674, -42.5338, 4.91018, 0.55", "-12.7122, -44.2716, 4.42241, 0.55", "-16.6854, -48.5038, 3.17321, 0.55", "-21.4638, -53.4062, 1.71214, 0.55", "-25.1645, -57.1202, 0.513273, 0.55", "-27.5244, -59.5582, -0.287781, 0.55", "-30.2298, -62.4819, -1.1983, 0.55", "-33.6539, -66.6697, -2.30617, 0.55", "-35.6485, -69.6356, -2.90999, 0.55", "-38.1027, -73.897, -3.42684, 0.55", "-40.0508, -77.8863, -3.75717, 0.55", "-42.0037, -82.8593, -4.0556, 0.55", "-43.8269, -88.6928, -4.25276, 0.55", "-44.7878, -93.1469, -4.28645, 0.55", "-45.119, -95.3616, -4.15522, 0.55", "-45.5926, -100.561, -3.55652, 0.55", "-45.952, -105.426, -2.86725, 0.55", "-46.0708, -110.322, -1.80493, 0.55", "-46.1717, -113.131, -1.04309, 0.55", "-46.4379, -121.816, 1.63238, 0.55", "-46.462, -122.456, 1.84049, 0.55", "-46.5381, -126.371, 3.2126, 0.55", "-47.0042, -133.376, 5.82281, 0.55", "-47.1706, -135.719, 6.55639, 0.55", "-47.5069, -139.384, 7.0742, 0.55", "-47.5898, -140.745, 6.9566, 0.55", "-47.6475, -145.354, 5.70016, 0.55", "-47.5047, -148.338, 4.26254, 0.55", "-47.1259, -153.093, 1.01183, 0.55", "-46.4171, -158.908, -3.40838, 0.28", "-46.2151, -160.345, -4.69452, 0.55", "-45.8974, -162.525, -6.83603, 0.28", "-45.8521, -162.854, -7.17623, 0.55", "-45.6191, -164.653, -8.88558, 0.28", "-45.5848, -165.264, -9.32653, 0.55", "-45.4922, -168.44, -11.0083, 0.28", "-45.5027, -169.521, -11.5679, 0.55", "-45.5762, -172.649, -13.0097, 0.28", "-45.595, -173.633, -13.4599, 0.55", "-45.689, -177.03, -14.9587, 0.28", "-45.7239, -178.592, -15.6559, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.142293, -71.4463, 55.9211, 0.55", "-2.10114, -78.0486, 63.572, 0.55", "-4.73114, -83.6197, 71.8187, 0.55", "-7.38985, -89.8757, 79.5489, 0.55", "-10.2738, -96.1313, 87.1983, 0.55", "-12.6336, -103.659, 93.8103, 0.55", "-14.6653, -110.902, 100.837, 0.55", "-16.6485, -119.808, 105.602, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.142293, -71.4463, 55.9211, 0.55", "2.41145, -81.0737, 63.4705, 0.55", "4.24365, -91.9997, 69.2556, 0.55", "4.31989, -102.554, 75.9489, 0.55", "3.10997, -113.43, 81.9855, 0.55", "2.42903, -124.391, 87.9526, 0.55", "2.2958, -135.006, 94.5484, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-41.4764, 47.4486, -19.4005, 0.83", "-40.6919, 49.4776, -20.3173, 0.83", "-38.9912, 54.2853, -22.2881, 0.55", "-38.3001, 56.3157, -23.0117, 0.83", "-37.5938, 58.4498, -23.6731, 0.55", "-36.9514, 60.5644, -24.118, 0.55", "-36.6599, 61.5895, -24.2316, 0.28", "-36.5523, 62.2225, -24.18, 0.55", "-36.2729, 64.1988, -23.5952, 0.28", "-36.1467, 65.0298, -23.2987, 0.55", "-35.7819, 67.8816, -22.1684, 0.28", "-35.5774, 70.1183, -21.2186, 0.55", "-35.4645, 73.5809, -19.6857, 0.28", "-35.4945, 76.6083, -18.3169, 0.28", "-35.6236, 78.2948, -17.5512, 0.55", "-35.9043, 80.2977, -16.6839, 0.28", "-36.1078, 81.2507, -16.2781, 0.55", "-36.6787, 83.5302, -15.4648, 0.28", "-37.1356, 85.0788, -15.0333, 0.28", "-37.6014, 86.6157, -14.6643, 0.28", "-37.8158, 87.4281, -14.4622, 0.55", "-38.485, 90.7365, -13.6601, 0.28", "-39.1272, 94.6762, -12.735, 0.55", "-39.3279, 96.0382, -12.4141, 0.55", "-39.5597, 97.3946, -12.072, 0.55", "-40.1862, 100.294, -11.4386, 0.55", "-40.7032, 102.213, -11.1005, 0.28", "-40.9769, 102.943, -11.0084, 0.55", "-41.8643, 104.91, -10.7654, 0.28", "-42.8651, 107.031, -10.6105, 0.55", "-44.5365, 110.12, -10.586, 0.28", "-45.3523, 111.424, -10.6572, 0.28", "-46.6472, 113.295, -10.9897, 0.55", "-48.0826, 115.276, -11.4639, 0.28", "-48.3447, 115.592, -11.5655, 0.55", "-49.2923, 116.612, -11.9653, 0.28", "-52.5828, 119.89, -13.3548, 0.55", "-57.1002, 124.065, -15.6197, 0.28", "-57.9174, 124.796, -16.1114, 0.55", "-60.1476, 126.717, -17.5358, 0.28", "-61.075, 127.518, -18.1667, 0.28", "-61.8671, 128.205, -18.7657, 0.55", "-64.12, 129.959, -20.8306, 0.28", "-65.7347, 130.976, -22.2832, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-41.4764, 47.4486, -19.4005, 0.55", "-41.6495, 48.7366, -19.2046, 0.55", "-41.7906, 49.476, -19.0297, 0.28", "-42.0335, 49.9688, -18.8143, 0.55", "-42.5913, 51.1003, -18.3196, 0.28", "-42.9831, 51.8951, -17.9722, 0.55", "-43.7054, 53.3603, -17.3316, 0.28", "-44.2197, 54.1031, -16.8757, 0.55", "-46.2444, 55.6721, -15.2978, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-145.361, -46.8496, -23.8114, 0.55", "-151.563, -54.6022, -28.2299, 0.55", "-156.024, -63.1281, -33.2807, 0.55", "-159.419, -70.6912, -40.3071, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-145.361, -46.8496, -23.8114, 0.55", "-150.269, -51.731, -28.4856, 0.55", "-154.295, -56.5271, -34.013, 0.55", "-157.978, -61.4135, -39.6983, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-164.655, 12.7497, 52.6604, 0.55", "-171.102, 12.4783, 56.567, 0.55", "-177.833, 13.2587, 59.8822, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-164.655, 12.7497, 52.6604, 0.55", "-175.493, 11.3194, 56.2949, 0.55", "-186.426, 11.7927, 59.8981, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "89.9218, -51.3797, -75.7273, 0.28", "95.2487, -54.9025, -82.7559, 0.28", "95.7755, -55.2745, -83.3659, 0.55", "96.6649, -55.9024, -84.3957, 0.28", "97.4139, -56.4311, -85.2628, 0.28", "98.4052, -57.1309, -86.4107, 0.55", "99.7123, -58.0537, -87.924, 0.55", "101.396, -59.2983, -88.4852, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "89.9218, -51.3797, -75.7273, 0.55", "90.6172, -52.4092, -76.5725, 0.55", "90.8467, -52.88, -76.9512, 0.28", "91.1999, -53.6935, -77.6184, 0.55", "91.978, -55.4857, -79.0881, 0.28", "92.5172, -56.7277, -80.1067, 0.55", "93.4308, -58.832, -81.8324, 0.28", "94.4876, -61.4342, -84.1374, 0.28", "94.9266, -62.639, -85.222, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "154.708, 13.9661, -22.331, 0.28", "157.508, 11.8452, -20.788, 0.28", "161.069, 9.11333, -18.4128, 0.28", "163.33, 7.36155, -16.7644, 0.55", "164.668, 6.43996, -15.7846, 0.28", "165.38, 5.94427, -15.2494, 0.28", "168.911, 3.48121, -12.6672, 0.55", "169.715, 2.97462, -11.981, 0.28", "171.651, 1.64224, -10.0157, 0.55", "173.312, 0.451471, -8.38884, 0.28", "174.743, -0.506325, -7.09868, 0.55", "176.432, -1.69714, -5.67494, 0.55", "179.133, -3.70939, -3.79711, 0.55", "179.788, -4.2142, -3.36315, 0.55", "182.153, -6.12954, -1.77255, 0.28", "183.08, -6.93198, -1.15201, 0.55", "184.351, -7.93653, -0.366141, 0.28", "186.151, -9.39497, 0.65552, 0.55", "189.121, -11.8146, 1.79238, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "154.708, 13.9661, -22.331, 0.55", "152.859, 13.6494, -22.364, 0.55", "151.357, 13.3922, -22.3908, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.62643, -32.9948, 5.31911, 0.83", "1.76605, -33.2933, 5.2741, 0.83", "3.41804, -35.9315, 4.97938, 0.83", "4.84211, -38.2429, 4.56694, 0.55", "5.97821, -40.0868, 4.23791, 0.55", "8.39304, -44.0062, 3.53854, 0.83", "11.322, -48.7602, 2.69025, 0.55", "12.9285, -51.2477, 2.28563, 0.83", "15.8044, -55.2015, 1.77439, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.62643, -32.9948, 5.31911, 0.55", "0.473422, -33.9046, 2.91287, 0.55", "-0.764193, -34.8812, 0.330069, 0.55", "-2.22521, -36.0341, -2.71895, 0.55", "-3.99936, -37.434, -6.42145, 0.55", "-5.00613, -38.2285, -8.5225, 0.55", "-5.20837, -38.388, -8.94457, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.2958, -135.006, 94.5484, 0.55", "3.19793, -142.42, 99.5201, 0.55", "5.0274, -150.345, 103.308, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.2958, -135.006, 94.5484, 0.55", "1.90853, -143.954, 99.7061, 0.55", "1.37791, -152.596, 105.349, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-46.2444, 55.6721, -15.2978, 0.28", "-47.6159, 56.4151, -14.1717, 0.28", "-48.1505, 56.6769, -13.6944, 0.55", "-49.6938, 57.4246, -12.2804, 0.28", "-50.4392, 57.8202, -11.6441, 0.55", "-52.4508, 58.915, -9.98588, 0.28", "-54.4954, 60.0277, -8.30053, 0.55", "-57.8793, 61.7095, -5.54119, 0.28", "-58.6002, 62.0723, -4.95119, 0.55", "-60.1748, 62.9704, -3.669, 0.28", "-60.7912, 63.3524, -3.15349, 0.55", "-67.2207, 65.6089, 0.474701, 0.55", "-73.6595, 69.2588, 2.66901, 0.55", "-79.6614, 72.7303, 6.06308, 0.55", "-84.7126, 77.091, 9.94426, 0.55", "-90.3455, 81.38, 13.0214, 0.55", "-96.7445, 84.3421, 16.1636, 0.55", "-102.978, 86.3581, 20.2467, 0.55", "-108.815, 87.2725, 25.2143, 0.55", "-114.617, 88.6818, 30.1088, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-46.2444, 55.6721, -15.2978, 0.55", "-49.1683, 54.5555, -15.307, 0.55", "-50.6848, 53.9298, -15.3288, 0.28", "-51.8133, 53.4641, -15.345, 0.55", "-52.7538, 53.076, -15.3585, 0.28", "-53.4126, 52.8041, -15.3679, 0.55", "-55.2293, 52.0545, -15.394, 0.28", "-56.3923, 51.5059, -15.575, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-159.419, -70.6912, -40.3071, 0.55", "-163.541, -79.6791, -43.7014, 0.55", "-167.452, -89.0952, -46.0096, 0.55", "-170.587, -98.1763, -50.133, 0.55", "-174.767, -107.358, -52.8764, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-159.419, -70.6912, -40.3071, 0.55", "-163.953, -74.3546, -48.7151, 0.55", "-167.993, -76.5438, -57.856, 0.55", "-172.887, -80.0411, -66.1313, 0.55", "-179.787, -82.0906, -73.4018, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-157.978, -61.4135, -39.6983, 0.55", "-166.52, -59.5696, -48.7627, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-157.978, -61.4135, -39.6983, 0.55", "-162.561, -72.1689, -43.0684, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "101.396, -59.2983, -88.4852, 0.28", "104.232, -60.4965, -89.599, 0.28", "105.549, -61.053, -90.1164, 0.55", "108.061, -62.1144, -91.103, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "101.396, -59.2983, -88.4852, 0.55", "100.956, -61.0341, -90.5764, 0.55", "100.074, -64.5063, -94.7594, 0.28", "99.786, -65.6373, -96.122, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "94.9266, -62.639, -85.222, 0.28", "96.9562, -66.9626, -88.1984, 0.28", "97.9612, -69.1035, -89.6722, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "94.9266, -62.639, -85.222, 0.55", "93.6773, -63.3544, -84.2499, 0.55", "90.1937, -65.3495, -81.5391, 0.28", "89.3661, -65.8234, -80.8951, 0.55", "87.1023, -67.1199, -79.1335, 0.28", "85.6431, -67.9556, -77.998, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.8044, -55.2015, 1.77439, 0.83", "15.8306, -55.4885, 1.74144, 0.83", "16.2538, -59.2387, 1.39627, 0.83", "16.3814, -62.0429, 1.37299, 0.83", "16.3923, -64.7395, 1.66972, 0.83", "16.3529, -68.317, 2.3604, 0.83", "16.2356, -72.4327, 3.33386, 0.83", "16.1861, -77.0171, 4.65104, 0.83", "16.1923, -81.4608, 6.13145, 0.83", "15.818, -86.9243, 7.91721, 0.83", "15.4736, -89.4418, 8.63358, 0.83", "15.1765, -91.3406, 9.05736, 0.83", "14.5109, -94.9875, 9.81508, 0.83", "13.9432, -98.2619, 10.298, 0.83", "12.9011, -105.278, 10.4716, 0.83", "12.2462, -109.139, 10.0704, 0.83", "11.5744, -112.707, 9.45116, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.8044, -55.2015, 1.77439, 0.55", "14.9894, -57.2593, 2.32394, 0.55", "14.4138, -58.7437, 2.83729, 0.55", "14.1016, -59.6851, 3.24922, 0.55", "13.7289, -61.1469, 4.00998, 0.55", "13.1272, -64.0259, 5.67375, 0.55", "12.7347, -66.1846, 7.17546, 0.55", "12.4846, -67.8989, 8.56234, 0.55", "12.2317, -69.6196, 10.1009, 0.55", "12.0356, -71.0399, 11.4563, 0.28", "11.9175, -72.1852, 12.7422, 0.55", "11.7562, -74.2428, 15.4006, 0.55", "11.6338, -75.4911, 17.197, 0.55", "11.5545, -76.191, 18.1988, 0.55", "11.4011, -77.0201, 19.3499, 0.83", "10.8637, -79.4938, 22.598, 0.28", "10.6786, -80.3145, 23.6493, 0.55", "10.3757, -81.801, 25.4802, 0.28", "10.2946, -82.2562, 26.0792, 0.55", "10.1595, -83.3275, 27.4423, 0.28", "10.0709, -83.9409, 28.169, 0.55", "9.46164, -85.985, 30.0198, 0.55", "9.97715, -91.3142, 36.7131, 0.55", "10.9851, -96.3427, 43.5807, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.20837, -38.388, -8.94457, 0.55", "-7.40537, -39.9239, -13.6805, 0.55", "-8.07141, -40.2867, -15.0316, 0.55", "-9.78236, -41.197, -18.3274, 0.55", "-13.6168, -43.005, -25.3092, 0.28", "-14.2074, -43.2528, -26.2969, 0.55", "-16.7239, -44.3871, -30.2809, 0.55", "-20.3417, -45.9371, -35.2851, 0.55", "-21.7418, -46.4697, -37.1578, 0.28", "-23.0011, -46.8222, -38.712, 0.28", "-25.282, -47.3633, -41.0108, 0.55", "-28.0212, -47.8646, -43.9391, 0.28", "-30.527, -48.0592, -46.7169, 0.55", "-32.4795, -48.0077, -48.8247, 0.55", "-33.8061, -47.8328, -50.3294, 0.55", "-37.6541, -47.0989, -54.8951, 0.55", "-41.7366, -45.9734, -59.6157, 0.55", "-43.4408, -45.3897, -61.5183, 0.28", "-45.0477, -44.8679, -63.3609, 0.55", "-48.3243, -44.0754, -67.0536, 0.28", "-49.4319, -43.8484, -68.2823, 0.83", "-51.5602, -43.392, -70.4109, 0.28", "-53.1756, -43.2009, -71.7113, 0.55", "-55.5402, -43.0176, -73.546, 0.28", "-56.4936, -42.9304, -74.2432, 0.55", "-58.2958, -42.8051, -75.4325, 0.55", "-61.0535, -42.3125, -77.1254, 0.55", "-62.889, -41.8676, -78.128, 0.28", "-64.4062, -41.3113, -78.8192, 0.55", "-66.1893, -40.4265, -79.6463, 0.28", "-66.4794, -40.2565, -79.7929, 0.55", "-69.0092, -38.6299, -81.6202, 0.28", "-70.7792, -37.4106, -83.1582, 0.55", "-72.9996, -35.6268, -85.551, 0.83", "-74.7518, -34.109, -87.7649, 0.28", "-75.1869, -33.7217, -88.3917, 0.55", "-78.4489, -30.8195, -93.4364, 0.28", "-78.996, -30.3255, -94.3929, 0.55", "-80.5629, -28.7129, -97.3576, 0.28", "-80.966, -28.2982, -98.1271, 0.55", "-82.0339, -27.2175, -100.001, 0.28", "-82.8121, -26.4385, -101.263, 0.55", "-84.6678, -24.6955, -103.73, 0.28", "-85.7904, -23.7627, -105.139, 0.55", "-88.2445, -21.9654, -107.985, 0.28", "-88.9816, -21.4807, -108.818, 0.55", "-90.1576, -20.8327, -110.071, 0.28", "-91.1728, -20.2865, -111.076, 0.55", "-93.3304, -19.1853, -113.013, 0.28", "-93.9886, -18.8708, -113.572, 0.55", "-98.9583, -16.4192, -117.471, 0.28", "-100.75, -15.4153, -118.672, 0.55", "-104.009, -13.4498, -120.593, 0.28", "-105.49, -12.4994, -121.412, 0.55", "-108.948, -10.3448, -123.082, 0.28", "-110.235, -9.61411, -123.636, 0.55", "-114.979, -7.41137, -125.377, 0.28", "-116.97, -6.75131, -126.081, 0.55", "-119.835, -6.2928, -127.044, 0.55", "-121.612, -6.12553, -127.592, 0.55", "-125.309, -5.87777, -128.429, 0.28", "-129.003, -5.66838, -129.026, 0.28", "-132.099, -5.48193, -129.436, 0.55", "-135.961, -4.92726, -129.538, 0.28", "-137.912, -4.41963, -129.346, 0.55", "-142.604, -2.49645, -128.457, 0.28", "-145.077, -1.05091, -127.46, 0.55", "-146.699, 0.118878, -126.491, 0.28", "-148.548, 1.4429, -124.991, 0.55", "-150.87, 3.17987, -122.852, 0.28", "-151.755, 3.79196, -122.051, 0.55", "-156.362, 6.53436, -118.42, 0.28", "-157.921, 7.39905, -117.211, 0.55", "-161.637, 9.31663, -114.245, 0.28", "-163.658, 10.3346, -112.635, 0.55", "-165.32, 11.1685, -111.314, 0.55", "-167.309, 12.1494, -109.787, 0.28", "-168.352, 12.6464, -109.16, 0.55", "-171.846, 14.421, -107.264, 0.28", "-173.662, 15.5556, -106.236, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.20837, -38.388, -8.94457, 0.55", "-4.85219, -38.4543, -10.0118, 0.55", "-4.46955, -38.3974, -11.0704, 0.55", "-3.93181, -38.2279, -12.3597, 0.55", "-3.45441, -37.9992, -13.3857, 0.55", "0.110605, -35.7373, -19.8133, 0.55", "0.893072, -35.0512, -21.2677, 0.55", "2.00669, -33.8727, -23.4385, 0.55", "2.7848, -32.9843, -24.979, 0.55", "3.56284, -32.0255, -26.4505, 0.28", "4.83686, -30.4098, -28.6247, 0.55", "6.86772, -27.8892, -31.7145, 0.28", "6.99702, -27.7335, -32.0455, 0.55", "7.33624, -27.1931, -34.4856, 0.28", "7.29575, -26.9548, -36.1783, 0.55", "7.09074, -26.8409, -38.0178, 0.55", "6.68958, -26.8072, -41.328, 0.55", "5.9238, -26.7851, -47.8283, 0.55", "5.49033, -26.808, -52.2038, 0.55", "5.3819, -26.8253, -53.718, 0.55", "4.89721, -26.8383, -63.6782, 0.55", "4.87599, -26.7921, -66.3768, 0.55", "4.97753, -26.7553, -67.891, 0.55", "5.52834, -26.726, -71.4027, 0.55", "7.37875, -27.0305, -79.7711, 0.55", "7.98153, -27.1943, -82.0085, 0.28", "8.42593, -27.3349, -83.2595, 0.55", "9.12651, -27.6165, -85.1051, 0.28", "9.47791, -27.8039, -85.8458, 0.55", "11.07, -28.6601, -87.7554, 0.28", "12.7683, -29.8963, -88.3345, 0.55", "13.8153, -30.7918, -88.6185, 0.28", "14.8162, -31.795, -88.7667, 0.55", "15.7266, -32.9034, -88.8266, 0.28", "16.124, -33.4794, -88.8677, 0.55", "17.0733, -34.9974, -88.8949, 0.28", "17.307, -35.4519, -88.9715, 0.55", "18.6038, -38.0556, -89.5611, 0.28", "19.2062, -39.2531, -90.0032, 0.55", "20.5286, -41.7947, -91.2703, 0.28", "21.0344, -42.7242, -91.8562, 0.55", "22.7831, -45.7586, -94.0063, 0.28", "23.2063, -46.4951, -94.5641, 0.55", "24.4579, -48.8318, -96.4069, 0.28", "24.7263, -49.3839, -96.7863, 0.55", "25.3866, -50.8482, -97.7642, 0.28", "25.76, -51.6949, -98.4212, 0.55", "26.1427, -52.5215, -99.1436, 0.55", "26.91, -54.1711, -100.572, 0.28", "27.4603, -55.1783, -101.605, 0.55", "29.242, -57.6242, -104.926, 0.28", "29.9294, -58.3963, -106.263, 0.55", "30.4179, -58.8788, -107.172, 0.28", "30.9267, -59.3097, -108.084, 0.55", "32.5418, -60.4892, -110.853, 0.28", "33.7931, -61.4086, -112.906, 0.55", "36.051, -63.1957, -116.195, 0.28", "36.7652, -63.7504, -117.226, 0.55", "38.2146, -64.7609, -119.055, 0.28", "38.721, -65.0914, -119.617, 0.55", "39.6217, -65.6192, -120.358, 0.28", "40.4468, -66.0607, -120.939, 0.55", "42.7761, -67.1353, -122.269, 0.28", "45.464, -68.2541, -123.749, 0.28", "46.8587, -68.7577, -124.4, 0.28", "48.2352, -69.219, -125.139, 0.55", "50.2429, -69.7957, -126.224, 0.28", "51.1425, -70.0385, -126.687, 0.83", "53.4683, -70.6906, -127.782, 0.28", "54.4582, -70.9961, -128.312, 0.55", "58.7393, -72.5082, -130.853, 0.28", "60.8162, -73.2885, -132.298, 0.28", "62.2869, -73.8542, -133.452, 0.55", "63.1029, -74.2028, -134.227, 0.55", "65.1889, -75.1609, -136.475, 0.28", "67.0997, -76.1649, -138.67, 0.55", "68.8397, -77.1478, -140.67, 0.28", "70.3701, -78.0646, -142.576, 0.55", "71.6396, -78.8027, -144.143, 0.28", "72.7093, -79.3103, -145.357, 0.55", "75.3534, -80.3515, -148.143, 0.28", "76.7223, -80.8772, -149.493, 0.55", "78.8162, -81.6744, -151.437, 0.28", "80.5491, -82.2683, -152.982, 0.55", "84.6017, -83.4485, -156.602, 0.28", "86.1982, -83.8176, -158.194, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "5.0274, -150.345, 103.308, 0.55", "6.42287, -160.168, 107.875, 0.55", "8.97489, -170.574, 109.991, 0.55", "10.8359, -180.719, 113.582, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.0274, -150.345, 103.308, 0.55", "7.44263, -160.136, 110.301, 0.55", "8.17541, -168.682, 119.079, 0.55", "8.84136, -175.24, 129.43, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.37791, -152.596, 105.349, 0.55", "1.76158, -159.884, 109.073, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.37791, -152.596, 105.349, 0.55", "0.0418701, -163.877, 113.178, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "11.5744, -112.707, 9.45116, 0.83", "12.3986, -115.718, 9.93674, 0.83", "13.2225, -118.245, 10.5267, 0.83", "14.0414, -120.756, 11.1132, 0.83", "14.8191, -123.141, 11.6702, 0.83", "16.0176, -126.816, 12.5285, 0.83", "17.2075, -130.464, 13.3806, 0.83", "18.2109, -132.861, 14.2464, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "11.5744, -112.707, 9.45116, 0.55", "13.1386, -114.755, 9.42174, 0.55", "14.3209, -116.365, 9.11815, 0.55", "15.1316, -117.561, 8.7785, 0.55", "15.8547, -118.976, 8.2175, 0.83", "16.5559, -120.595, 7.39254, 0.55", "17.2418, -122.178, 6.58562, 0.83", "17.8777, -123.903, 5.55921, 0.55", "18.2381, -124.908, 4.87156, 0.83", "19.251, -128.171, 2.40567, 0.55", "19.8266, -130.746, 0.32689, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.9851, -96.3427, 43.5807, 0.55", "9.07743, -104.17, 50.5056, 0.55", "5.7778, -111.027, 57.9183, 0.55", "1.82373, -116.893, 65.8436, 0.55", "-3.02298, -121.558, 74.0658, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.9851, -96.3427, 43.5807, 0.55", "11.9943, -103.732, 51.8796, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "18.2109, -132.861, 14.2464, 0.55", "18.46, -135.181, 14.9361, 0.55", "18.862, -138.136, 15.8899, 0.55", "19.242, -140.928, 16.7747, 0.55", "19.4881, -142.914, 17.3736, 0.55", "19.8857, -146.462, 18.3877, 0.55", "21.1505, -156.441, 20.9758, 0.55", "21.6591, -159.832, 21.7041, 0.55", "22.0238, -162.227, 22.0955, 0.55", "22.457, -164.97, 22.3198, 0.55", "22.7506, -167.1, 22.3045, 0.55", "23.5795, -172.079, 22.0573, 0.55", "24.0761, -175.865, 21.8688, 0.55", "24.4715, -178.346, 21.8164, 0.55", "25.4839, -184.766, 22.0128, 0.55", "26.1429, -189.076, 22.3386, 0.55", "27.0293, -194.62, 23.0731, 0.55", "28.1337, -200.888, 24.3935, 0.55", "29.071, -205.055, 25.531, 0.55", "29.6879, -207.512, 26.268, 0.55", "30.2134, -209.78, 26.9425, 0.55", "30.9239, -212.655, 27.6565, 0.55", "32.5362, -219.606, 28.9021, 0.55", "33.2492, -222.296, 29.2791, 0.55", "33.9696, -225.295, 29.6809, 0.55", "35.0131, -229.801, 30.262, 0.55", "35.6527, -233.272, 30.7488, 0.55", "36.0655, -236.579, 31.1757, 0.55", "36.3173, -239.739, 31.5888, 0.55", "36.5113, -242.823, 32.0393, 0.55", "36.6622, -245.018, 32.3373, 0.55", "36.9273, -248.613, 32.6986, 0.55", "37.1743, -252.945, 32.8029, 0.55", "37.344, -255.052, 32.692, 0.55", "37.5091, -256.907, 32.4527, 0.55", "37.9754, -260.406, 31.7861, 0.55", "38.2465, -262.628, 31.3022, 0.55", "38.6147, -265.362, 30.8087, 0.55", "38.8041, -267.282, 30.5818, 0.55", "39.212, -272.272, 30.1924, 0.55", "39.433, -276.002, 30.174, 0.55", "39.692, -281.763, 30.6261, 0.55", "39.9503, -285.464, 31.2694, 0.55", "40.1948, -289.347, 32.074, 0.28", "40.2557, -290.907, 32.464, 0.28", "40.3951, -294.682, 33.7607, 0.28", "40.4988, -298.159, 35.2419, 0.28", "41.0812, -302.719, 37.6697, 0.28", "43.6955, -313.013, 40.3834, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "18.2109, -132.861, 14.2464, 0.55", "19.3689, -133.306, 15.3133, 0.55", "21.6432, -134.482, 17.6934, 0.55", "23.5547, -135.658, 19.8419, 0.28", "25.5635, -137.004, 22.2178, 0.55", "26.6511, -137.868, 23.8422, 0.28", "28.3864, -139.432, 26.8845, 0.55", "28.9169, -140.277, 28.4466, 0.28", "29.0596, -140.584, 29.0787, 0.28", "29.296, -141.017, 30.1784, 0.55", "30.3716, -142.411, 34.2668, 0.28", "30.8649, -142.949, 35.9638, 0.55", "32.6774, -144.496, 40.723, 0.28", "33.7686, -145.247, 43.18, 0.28", "35.2416, -146.213, 46.1127, 0.55", "37.6775, -147.717, 50.1906, 0.28", "38.0461, -147.915, 50.6943, 0.55", "39.9789, -148.877, 53.023, 0.28", "40.1714, -148.966, 53.2119, 0.55", "41.8421, -150.06, 54.9397, 0.28", "42.602, -150.665, 55.8158, 0.55", "48.7817, -155.101, 63.0773, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-3.02298, -121.558, 74.0658, 0.55", "-4.66678, -125.929, 85.1657, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.02298, -121.558, 74.0658, 0.55", "-8.48615, -131.375, 81.5779, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_BP_bf9275d56a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.05583, 8.25355, 2.83526, 0.83 ) }
    dend_43 { pt3dadd( -5.85697, 10.4247, 3.25771, 1.11 ) }
    dend_43 { pt3dadd( -7.50853, 11.7039, 3.47746, 0.83 ) }
    dend_43 { pt3dadd( -9.11309, 12.936, 3.67436, 0.83 ) }
    dend_43 { pt3dadd( -10.0631, 13.6385, 3.78225, 1.11 ) }
    dend_43 { pt3dadd( -13.0382, 15.8339, 4.12805, 1.11 ) }
    dend_43 { pt3dadd( -18.3593, 19.5924, 4.73931, 0.83 ) }
    dend_43 { pt3dadd( -20.2763, 20.8948, 4.94117, 0.83 ) }
    dend_43 { pt3dadd( -21.7944, 21.8956, 5.06654, 0.83 ) }
    dend_43 { pt3dadd( -23.2747, 22.8873, 5.17507, 0.83 ) }
    dend_43 { pt3dadd( -24.4798, 23.7048, 5.23363, 0.55 ) }
    dend_43 { pt3dadd( -25.3855, 24.2583, 5.29306, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.84924, 6.34713, -6.29707, 0.55 ) }
    dend_28 { pt3dadd( 7.87975, 7.00269, -6.97383, 0.55 ) }
    dend_28 { pt3dadd( 9.63825, 7.16818, -7.86934, 0.83 ) }
    dend_28 { pt3dadd( 12.4214, 7.34429, -9.53281, 0.55 ) }
    dend_28 { pt3dadd( 13.7649, 7.42931, -10.3358, 1.38 ) }
    dend_28 { pt3dadd( 17.0682, 7.63833, -12.3101, 0.55 ) }
    dend_28 { pt3dadd( 18.4751, 7.56755, -13.2522, 0.83 ) }
    dend_28 { pt3dadd( 25.7528, 6.26944, -18.5452, 0.55 ) }
    dend_28 { pt3dadd( 26.4569, 6.09487, -19.1276, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.686548, -10.701, 3.30922, 1.11 ) }
    dend_1 { pt3dadd( -0.739486, -15.3718, 4.9837, 1.11 ) }
    dend_1 { pt3dadd( -0.761046, -17.2741, 5.66566, 0.83 ) }
    dend_1 { pt3dadd( -0.789689, -19.8013, 6.57168, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.895963, 10.1264, -1.38587, 1.11 ) }
    dend_0 { pt3dadd( 0.989071, 12.3539, -1.36733, 1.11 ) }
    dend_0 { pt3dadd( 1.12828, 15.9883, -1.2046, 1.38 ) }
    dend_0 { pt3dadd( 1.13946, 16.1907, -1.19183, 1.38 ) }
    dend_0 { pt3dadd( 1.42798, 18.6951, -1.00497, 0.83 ) }
    dend_0 { pt3dadd( 1.83721, 21.3432, -0.663379, 0.83 ) }
    dend_0 { pt3dadd( 2.54628, 24.3329, 0.0898929, 0.83 ) }
    dend_0 { pt3dadd( 2.95236, 25.4667, 0.518396, 0.83 ) }
    dend_0 { pt3dadd( 3.35474, 26.2877, 0.914033, 1.11 ) }
    dend_0 { pt3dadd( 4.53549, 28.2873, 1.93794, 0.55 ) }
    dend_0 { pt3dadd( 5.90903, 30.3743, 3.16078, 0.83 ) }
    dend_0 { pt3dadd( 7.71417, 32.5206, 4.55306, 0.55 ) }
    dend_0 { pt3dadd( 8.63692, 33.4119, 5.18576, 0.83 ) }
    dend_0 { pt3dadd( 9.9252, 34.619, 6.17099, 0.55 ) }
    dend_0 { pt3dadd( 11.5191, 36.1544, 7.50321, 0.55 ) }
    dend_0 { pt3dadd( 13.7419, 38.4653, 9.5361, 0.55 ) }
    dend_0 { pt3dadd( 16.1913, 41.1067, 11.7806, 0.55 ) }
    dend_0 { pt3dadd( 17.7315, 42.821, 13.4543, 0.55 ) }
    dend_0 { pt3dadd( 19.6135, 44.9886, 15.8141, 0.55 ) }
    dend_0 { pt3dadd( 20.0038, 45.4232, 16.3491, 0.83 ) }
    dend_0 { pt3dadd( 21.0328, 46.5719, 17.8575, 0.55 ) }
    dend_0 { pt3dadd( 21.9005, 47.4673, 19.0424, 0.83 ) }
    dend_0 { pt3dadd( 23.8962, 49.9141, 21.8513, 0.55 ) }
    dend_0 { pt3dadd( 24.6522, 50.8077, 22.6737, 0.83 ) }
    dend_0 { pt3dadd( 25.3639, 51.4661, 23.2339, 0.55 ) }
    dend_0 { pt3dadd( 26.0725, 52.0329, 23.6655, 0.83 ) }
    dend_0 { pt3dadd( 27.6472, 53.0865, 24.4511, 0.83 ) }
    dend_0 { pt3dadd( 29.7329, 54.521, 25.2996, 0.83 ) }
    dend_0 { pt3dadd( 31.0147, 55.4694, 25.6784, 0.55 ) }
    dend_0 { pt3dadd( 31.9918, 56.2902, 25.9728, 0.55 ) }
    dend_0 { pt3dadd( 34.554, 58.4109, 26.7052, 0.83 ) }
    dend_0 { pt3dadd( 36.2098, 59.7708, 27.1101, 0.55 ) }
    dend_0 { pt3dadd( 38.7253, 61.763, 27.6205, 0.55 ) }
    dend_0 { pt3dadd( 41.0316, 63.4331, 27.994, 0.55 ) }
    dend_0 { pt3dadd( 43.0954, 64.8478, 28.2718, 0.55 ) }
    dend_0 { pt3dadd( 45.705, 66.5051, 28.5024, 0.55 ) }
    dend_0 { pt3dadd( 47.3009, 67.3169, 28.5907, 0.55 ) }
    dend_0 { pt3dadd( 48.3913, 67.773, 28.5193, 0.55 ) }
    dend_0 { pt3dadd( 49.8415, 68.1135, 28.3013, 0.55 ) }
    dend_0 { pt3dadd( 52.008, 68.2692, 27.7981, 0.55 ) }
    dend_0 { pt3dadd( 53.3596, 68.195, 27.4321, 0.55 ) }
    dend_0 { pt3dadd( 55.3335, 68.033, 27.0358, 0.55 ) }
    dend_0 { pt3dadd( 59.0901, 67.8439, 26.6171, 0.55 ) }
    dend_0 { pt3dadd( 62.0355, 67.8318, 26.4988, 0.55 ) }
    dend_0 { pt3dadd( 65.1553, 67.9677, 26.5601, 0.55 ) }
    dend_0 { pt3dadd( 67.1541, 68.1233, 26.7578, 0.55 ) }
    dend_0 { pt3dadd( 72.343, 68.9989, 27.6149, 0.55 ) }
    dend_0 { pt3dadd( 75.4105, 69.7541, 28.3543, 0.55 ) }
    dend_0 { pt3dadd( 77.7083, 70.4718, 29.1256, 0.55 ) }
    dend_0 { pt3dadd( 79.1036, 71.1411, 29.649, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 80.7207, 72.1368, 30.2478, 0.55 ) }
    dend_0 { pt3dadd( 83.4596, 74.1002, 31.0151, 0.55 ) }
    dend_0 { pt3dadd( 84.0887, 74.5729, 31.1035, 0.55 ) }
    dend_0 { pt3dadd( 85.8947, 75.8371, 31.237, 0.55 ) }
    dend_0 { pt3dadd( 87.554, 77.1838, 31.3534, 0.83 ) }
    dend_0 { pt3dadd( 88.4597, 77.9309, 31.4026, 0.55 ) }
    dend_0 { pt3dadd( 89.8161, 79.2132, 31.422, 0.83 ) }
    dend_0 { pt3dadd( 96.9408, 86.061, 33.4193, 0.83 ) }
    dend_0 { pt3dadd( 103.138, 93.9159, 34.6623, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -25.3855, 24.2583, 5.29306, 0.55 ) }
    dend_55 { pt3dadd( -27.1713, 25.5425, 4.1817, 0.55 ) }
    dend_55 { pt3dadd( -29.1131, 26.939, 2.97322, 0.55 ) }
    dend_55 { pt3dadd( -31.4564, 28.6243, 1.51483, 0.55 ) }
    dend_55 { pt3dadd( -33.3914, 30.0159, 0.310608, 0.83 ) }
    dend_55 { pt3dadd( -35.0129, 31.1821, -0.698532, 0.55 ) }
    dend_55 { pt3dadd( -38.0226, 33.3466, -2.57164, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -25.3855, 24.2583, 5.29306, 0.55 ) }
    dend_44 { pt3dadd( -28.261, 24.8547, 4.81886, 0.55 ) }
    dend_44 { pt3dadd( -31.3391, 25.3727, 4.61541, 0.55 ) }
    dend_44 { pt3dadd( -34.8343, 25.9488, 4.46975, 0.55 ) }
    dend_44 { pt3dadd( -39.9231, 26.6979, 4.72085, 0.55 ) }
    dend_44 { pt3dadd( -44.1996, 27.1816, 5.22505, 0.55 ) }
    dend_44 { pt3dadd( -48.6962, 27.6076, 5.93994, 0.55 ) }
    dend_44 { pt3dadd( -53.0715, 27.6972, 7.07741, 0.55 ) }
    dend_44 { pt3dadd( -56.8614, 27.3891, 8.39359, 0.55 ) }
    dend_44 { pt3dadd( -61.6145, 26.6482, 10.5103, 0.55 ) }
    dend_44 { pt3dadd( -63.6983, 26.1598, 11.7027, 0.55 ) }
    dend_44 { pt3dadd( -65.9546, 25.6028, 13.0834, 0.55 ) }
    dend_44 { pt3dadd( -69.9272, 24.3405, 15.3253, 0.55 ) }
    dend_44 { pt3dadd( -72.0232, 23.6961, 16.1963, 0.55 ) }
    dend_44 { pt3dadd( -74.2185, 22.9563, 17.0918, 0.55 ) }
    dend_44 { pt3dadd( -76.8145, 22.1255, 17.9002, 0.55 ) }
    dend_44 { pt3dadd( -79.6309, 21.2853, 18.7065, 0.55 ) }
    dend_44 { pt3dadd( -83.6457, 20.082, 19.7705, 0.55 ) }
    dend_44 { pt3dadd( -88.9784, 18.8586, 20.7399, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 26.4569, 6.09487, -19.1276, 0.55 ) }
    dend_34 { pt3dadd( 30.8942, 7.40938, -20.089, 0.55 ) }
    dend_34 { pt3dadd( 33.4632, 8.0018, -21.0021, 0.55 ) }
    dend_34 { pt3dadd( 36.0042, 8.47037, -21.9364, 0.55 ) }
    dend_34 { pt3dadd( 37.7433, 8.72081, -22.5717, 0.55 ) }
    dend_34 { pt3dadd( 40.2872, 9.02832, -23.4786, 0.55 ) }
    dend_34 { pt3dadd( 45.5712, 9.55786, -25.5217, 0.55 ) }
    dend_34 { pt3dadd( 51.5728, 10.1061, -28.2388, 0.55 ) }
    dend_34 { pt3dadd( 54.4935, 10.1826, -29.7519, 0.55 ) }
    dend_34 { pt3dadd( 56.0608, 10.1814, -30.6635, 0.55 ) }
    dend_34 { pt3dadd( 57.7799, 10.186, -31.7328, 0.55 ) }
    dend_34 { pt3dadd( 60.8511, 10.1092, -33.626, 0.55 ) }
    dend_34 { pt3dadd( 61.9697, 10.0148, -34.3482, 0.55 ) }
    dend_34 { pt3dadd( 66.7054, 9.71932, -37.7728, 0.55 ) }
    dend_34 { pt3dadd( 70.0585, 9.55456, -40.4452, 0.55 ) }
    dend_34 { pt3dadd( 71.9882, 9.49507, -42.0377, 0.55 ) }
    dend_34 { pt3dadd( 73.9135, 9.41891, -43.6241, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.4569, 6.09487, -19.1276, 0.83 ) }
    dend_29 { pt3dadd( 28.3792, 7.9185, -19.5179, 0.83 ) }
    dend_29 { pt3dadd( 29.4846, 8.94208, -19.7976, 0.55 ) }
    dend_29 { pt3dadd( 31.1207, 10.4397, -20.3785, 0.83 ) }
    dend_29 { pt3dadd( 32.2179, 11.4658, -20.8168, 0.55 ) }
    dend_29 { pt3dadd( 33.718, 12.9332, -21.4112, 0.83 ) }
    dend_29 { pt3dadd( 35.5044, 14.7602, -22.0635, 0.55 ) }
    dend_29 { pt3dadd( 36.4153, 15.6185, -22.3242, 0.55 ) }
    dend_29 { pt3dadd( 38.5645, 17.3318, -22.651, 0.83 ) }
    dend_29 { pt3dadd( 40.5415, 18.7217, -22.583, 0.55 ) }
    dend_29 { pt3dadd( 41.6362, 19.5223, -22.4255, 0.83 ) }
    dend_29 { pt3dadd( 43.248, 20.8213, -22.0125, 0.55 ) }
    dend_29 { pt3dadd( 45.5146, 22.8356, -21.1027, 0.55 ) }
    dend_29 { pt3dadd( 48.6822, 25.5094, -19.5932, 0.55 ) }
    dend_29 { pt3dadd( 51.7028, 28.0128, -17.8756, 0.55 ) }
    dend_29 { pt3dadd( 54.0966, 29.9831, -16.4563, 0.55 ) }
    dend_29 { pt3dadd( 58.0358, 33.259, -14.0998, 0.55 ) }
    dend_29 { pt3dadd( 60.8882, 35.7701, -12.3345, 0.55 ) }
    dend_29 { pt3dadd( 62.5645, 37.4709, -11.2502, 0.55 ) }
    dend_29 { pt3dadd( 65.5631, 40.9779, -9.34241, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.789689, -19.8013, 6.57168, 0.83 ) }
    dend_11 { pt3dadd( -0.890489, -22.6449, 6.44938, 0.83 ) }
    dend_11 { pt3dadd( -0.988697, -25.4154, 6.33023, 0.83 ) }
    dend_11 { pt3dadd( -1.09835, -28.5086, 6.1972, 0.83 ) }
    dend_11 { pt3dadd( -1.1556, -30.1238, 6.12773, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.789689, -19.8013, 6.57168, 0.55 ) }
    dend_2 { pt3dadd( -0.0914985, -21.4445, 7.44179, 0.55 ) }
    dend_2 { pt3dadd( 0.606947, -23.4396, 8.64508, 0.55 ) }
    dend_2 { pt3dadd( 1.18825, -26.0185, 10.4346, 0.55 ) }
    dend_2 { pt3dadd( 1.35718, -27.0148, 11.1764, 0.83 ) }
    dend_2 { pt3dadd( 1.65723, -29.5425, 13.4109, 0.55 ) }
    dend_2 { pt3dadd( 1.71926, -30.8378, 14.6206, 0.55 ) }
    dend_2 { pt3dadd( 1.82166, -33.3546, 17.0906, 0.83 ) }
    dend_2 { pt3dadd( 1.83149, -35.2161, 19.0704, 0.55 ) }
    dend_2 { pt3dadd( 1.70273, -36.737, 20.7225, 0.55 ) }
    dend_2 { pt3dadd( 1.38069, -39.6094, 23.8209, 0.55 ) }
    dend_2 { pt3dadd( 1.11801, -41.8982, 26.2637, 0.55 ) }
    dend_2 { pt3dadd( 0.95116, -43.7376, 28.2354, 0.55 ) }
    dend_2 { pt3dadd( 0.85844, -45.6998, 30.2362, 0.28 ) }
    dend_2 { pt3dadd( 0.875896, -46.5233, 31.0184, 0.55 ) }
    dend_2 { pt3dadd( 0.919538, -48.0456, 32.3687, 0.28 ) }
    dend_2 { pt3dadd( 1.18247, -50.4439, 34.027, 0.55 ) }
    dend_2 { pt3dadd( 0.383693, -58.2433, 40.5293, 0.55 ) }
    dend_2 { pt3dadd( -0.354919, -65.4463, 47.693, 0.55 ) }
    dend_2 { pt3dadd( -0.142293, -71.4463, 55.9211, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -38.0226, 33.3466, -2.57164, 0.55 ) }
    dend_61 { pt3dadd( -41.695, 33.1949, -2.11003, 0.55 ) }
    dend_61 { pt3dadd( -43.2928, 32.9916, -1.80461, 0.83 ) }
    dend_61 { pt3dadd( -45.2292, 32.5903, -1.30106, 0.55 ) }
    dend_61 { pt3dadd( -46.7493, 32.2351, -0.821656, 0.83 ) }
    dend_61 { pt3dadd( -50.731, 31.4204, 0.459332, 0.55 ) }
    dend_61 { pt3dadd( -52.2435, 31.1263, 0.961181, 0.28 ) }
    dend_61 { pt3dadd( -54.826, 30.5829, 1.95302, 0.55 ) }
    dend_61 { pt3dadd( -58.2879, 29.8739, 3.2799, 0.55 ) }
    dend_61 { pt3dadd( -60.8838, 29.3768, 4.20695, 0.55 ) }
    dend_61 { pt3dadd( -64.3212, 28.75, 5.37017, 0.28 ) }
    dend_61 { pt3dadd( -65.185, 28.6292, 5.60109, 0.55 ) }
    dend_61 { pt3dadd( -66.9546, 28.4191, 6.03882, 0.28 ) }
    dend_61 { pt3dadd( -68.1256, 28.341, 6.26684, 0.55 ) }
    dend_61 { pt3dadd( -70.4536, 28.245, 6.57422, 0.28 ) }
    dend_61 { pt3dadd( -71.7937, 28.155, 6.67266, 0.55 ) }
    dend_61 { pt3dadd( -74.153, 27.8468, 6.79446, 0.28 ) }
    dend_61 { pt3dadd( -75.7196, 27.6528, 6.82949, 0.55 ) }
    dend_61 { pt3dadd( -86.5495, 24.1737, 10.043, 0.55 ) }
    dend_61 { pt3dadd( -96.7845, 19.3857, 13.5123, 0.55 ) }
    dend_61 { pt3dadd( -106.628, 13.5977, 16.564, 0.55 ) }
    dend_61 { pt3dadd( -116.123, 6.84593, 18.556, 0.55 ) }
    dend_61 { pt3dadd( -124.894, -0.147177, 22.2818, 0.55 ) }
    dend_61 { pt3dadd( -134.344, -6.47576, 25.5024, 0.55 ) }
    dend_61 { pt3dadd( -144.223, -11.2683, 29.8785, 0.55 ) }
    dend_61 { pt3dadd( -153.932, -16.8179, 33.7071, 0.55 ) }
    dend_61 { pt3dadd( -163.621, -21.8405, 38.2466, 0.55 ) }
    dend_61 { pt3dadd( -172.916, -27.2156, 43.1895, 0.55 ) }
    dend_61 { pt3dadd( -181.155, -34.0287, 48.2309, 0.55 ) }
    dend_61 { pt3dadd( -189.661, -39.9589, 53.9055, 0.55 ) }
    dend_61 { pt3dadd( -198.077, -46.7473, 58.6801, 0.55 ) }
    dend_61 { pt3dadd( -205.355, -54.3146, 64.1112, 0.55 ) }
    dend_61 { pt3dadd( -211.165, -61.7146, 71.2664, 0.55 ) }
    dend_61 { pt3dadd( -216.459, -70.6948, 76.8385, 0.55 ) }
    dend_61 { pt3dadd( -220.203, -80.0722, 82.9838, 0.55 ) }
    dend_61 { pt3dadd( -224.635, -89.0372, 89.2842, 0.55 ) }
    dend_61 { pt3dadd( -230.358, -97.1933, 95.644, 0.55 ) }
    dend_61 { pt3dadd( -238.392, -103.362, 101.736, 0.55 ) }
    dend_61 { pt3dadd( -245.4, -110.816, 107.656, 0.55 ) }
    dend_61 { pt3dadd( -250.858, -117.16, 116.003, 0.55 ) }
    dend_61 { pt3dadd( -258.015, -122.41, 123.809, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -38.0226, 33.3466, -2.57164, 0.55 ) }
    dend_56 { pt3dadd( -39.0813, 34.9412, -4.77156, 0.55 ) }
    dend_56 { pt3dadd( -39.6693, 36.6656, -7.03156, 0.55 ) }
    dend_56 { pt3dadd( -40.1331, 38.6296, -9.31602, 0.55 ) }
    dend_56 { pt3dadd( -40.4235, 39.8595, -10.7465, 0.55 ) }
    dend_56 { pt3dadd( -40.9533, 42.1029, -13.3559, 0.83 ) }
    dend_56 { pt3dadd( -41.3408, 43.7442, -15.265, 0.55 ) }
    dend_56 { pt3dadd( -41.5721, 46.0387, -17.9927, 0.83 ) }
    dend_56 { pt3dadd( -41.4764, 47.4486, -19.4005, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -88.9784, 18.8586, 20.7399, 0.28 ) }
    dend_48 { pt3dadd( -90.0467, 16.9839, 20.1266, 0.28 ) }
    dend_48 { pt3dadd( -90.5537, 16.1851, 19.7897, 0.28 ) }
    dend_48 { pt3dadd( -91.211, 15.0588, 19.2741, 0.55 ) }
    dend_48 { pt3dadd( -91.7531, 14.067, 18.832, 0.28 ) }
    dend_48 { pt3dadd( -92.5538, 12.5539, 18.1799, 0.55 ) }
    dend_48 { pt3dadd( -94.7845, 8.09751, 16.347, 0.28 ) }
    dend_48 { pt3dadd( -95.5056, 6.54544, 15.579, 0.55 ) }
    dend_48 { pt3dadd( -96.5938, 4.1625, 14.3135, 0.28 ) }
    dend_48 { pt3dadd( -97.2152, 2.74276, 13.4913, 0.55 ) }
    dend_48 { pt3dadd( -97.6433, 1.76659, 12.8999, 0.28 ) }
    dend_48 { pt3dadd( -98.1315, 0.645276, 12.231, 0.55 ) }
    dend_48 { pt3dadd( -99.6073, -3.10836, 10.1053, 0.28 ) }
    dend_48 { pt3dadd( -100.069, -4.23972, 9.41915, 0.55 ) }
    dend_48 { pt3dadd( -100.873, -5.95092, 8.17557, 0.28 ) }
    dend_48 { pt3dadd( -101.535, -7.03468, 7.26771, 0.28 ) }
    dend_48 { pt3dadd( -102.134, -7.75273, 6.62119, 0.55 ) }
    dend_48 { pt3dadd( -104.237, -9.76447, 4.8374, 0.28 ) }
    dend_48 { pt3dadd( -105.219, -10.5778, 4.12455, 0.55 ) }
    dend_48 { pt3dadd( -107.617, -12.4149, 2.36302, 0.28 ) }
    dend_48 { pt3dadd( -110.021, -14.0307, 0.739279, 0.28 ) }
    dend_48 { pt3dadd( -112.636, -15.557, -0.922405, 0.28 ) }
    dend_48 { pt3dadd( -113.838, -16.1266, -1.57112, 0.55 ) }
    dend_48 { pt3dadd( -119.613, -22.8121, -6.13019, 0.55 ) }
    dend_48 { pt3dadd( -126.146, -29.7633, -8.92992, 0.55 ) }
    dend_48 { pt3dadd( -132.465, -36.1892, -13.1268, 0.55 ) }
    dend_48 { pt3dadd( -138.897, -41.9165, -18.0918, 0.55 ) }
    dend_48 { pt3dadd( -145.361, -46.8496, -23.8114, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -88.9784, 18.8586, 20.7399, 0.55 ) }
    dend_45 { pt3dadd( -89.7389, 18.7959, 20.8117, 0.55 ) }
    dend_45 { pt3dadd( -91.8947, 18.6215, 21.2916, 0.55 ) }
    dend_45 { pt3dadd( -92.7066, 18.5353, 21.5148, 0.55 ) }
    dend_45 { pt3dadd( -94.617, 18.2752, 22.0687, 0.55 ) }
    dend_45 { pt3dadd( -97.5497, 17.905, 22.78, 0.55 ) }
    dend_45 { pt3dadd( -99.0725, 17.7591, 23.1228, 0.28 ) }
    dend_45 { pt3dadd( -101.44, 17.4809, 23.6102, 0.55 ) }
    dend_45 { pt3dadd( -103.197, 17.2384, 23.9093, 0.55 ) }
    dend_45 { pt3dadd( -103.938, 17.1311, 24.0372, 0.28 ) }
    dend_45 { pt3dadd( -108.388, 16.4853, 24.7985, 0.55 ) }
    dend_45 { pt3dadd( -110.463, 16.0881, 25.0279, 0.28 ) }
    dend_45 { pt3dadd( -113.255, 15.5418, 25.1738, 0.28 ) }
    dend_45 { pt3dadd( -115.657, 15.1061, 25.1587, 0.55 ) }
    dend_45 { pt3dadd( -125.104, 14.7798, 27.1382, 0.55 ) }
    dend_45 { pt3dadd( -134.268, 14.2107, 30.1309, 0.55 ) }
    dend_45 { pt3dadd( -142.947, 12.6603, 34.0721, 0.55 ) }
    dend_45 { pt3dadd( -151.397, 12.7295, 38.7486, 0.55 ) }
    dend_45 { pt3dadd( -158.701, 12.4755, 45.0612, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -164.655, 12.7497, 52.6604, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 73.9135, 9.41891, -43.6241, 0.55 ) }
    dend_42 { pt3dadd( 76.9039, 10.3049, -46.1352, 0.55 ) }
    dend_42 { pt3dadd( 77.8523, 10.5374, -46.9853, 0.55 ) }
    dend_42 { pt3dadd( 79.0413, 10.7903, -48.0314, 0.55 ) }
    dend_42 { pt3dadd( 81.2016, 11.2183, -50.0557, 0.55 ) }
    dend_42 { pt3dadd( 83.4624, 11.566, -52.2162, 0.55 ) }
    dend_42 { pt3dadd( 84.5725, 11.6492, -53.2363, 0.83 ) }
    dend_42 { pt3dadd( 85.4908, 11.648, -54.1394, 0.55 ) }
    dend_42 { pt3dadd( 86.1818, 11.5837, -54.879, 0.83 ) }
    dend_42 { pt3dadd( 87.8616, 11.1855, -56.7553, 0.55 ) }
    dend_42 { pt3dadd( 89.2524, 10.7284, -58.298, 0.55 ) }
    dend_42 { pt3dadd( 90.8518, 10.199, -59.9938, 0.55 ) }
    dend_42 { pt3dadd( 92.63, 9.65685, -61.9222, 0.55 ) }
    dend_42 { pt3dadd( 93.8246, 9.26261, -63.2424, 0.55 ) }
    dend_42 { pt3dadd( 95.1731, 8.80985, -64.7737, 0.55 ) }
    dend_42 { pt3dadd( 96.3369, 8.4521, -66.1809, 0.55 ) }
    dend_42 { pt3dadd( 97.0663, 8.28464, -67.1683, 0.55 ) }
    dend_42 { pt3dadd( 98.0012, 7.95686, -69.1635, 0.55 ) }
    dend_42 { pt3dadd( 98.5155, 7.70863, -70.4082, 0.55 ) }
    dend_42 { pt3dadd( 98.9727, 7.29342, -72.0567, 0.55 ) }
    dend_42 { pt3dadd( 99.6151, 6.49873, -74.8359, 0.55 ) }
    dend_42 { pt3dadd( 99.7489, 6.29482, -75.4604, 0.28 ) }
    dend_42 { pt3dadd( 101.472, 3.73418, -83.0423, 0.28 ) }
    dend_42 { pt3dadd( 102.045, 3.00197, -85.2689, 0.83 ) }
    dend_42 { pt3dadd( 104.288, 0.271875, -93.1497, 0.83 ) }
    dend_42 { pt3dadd( 105.439, -1.14098, -96.7942, 0.83 ) }
    dend_42 { pt3dadd( 105.988, -1.77074, -98.2628, 0.55 ) }
    dend_42 { pt3dadd( 106.612, -2.38648, -99.6927, 0.55 ) }
    dend_42 { pt3dadd( 108.299, -3.56461, -102.33, 0.55 ) }
    dend_42 { pt3dadd( 110.091, -4.6085, -104.641, 0.28 ) }
    dend_42 { pt3dadd( 110.62, -4.76375, -104.76, 0.55 ) }
    dend_42 { pt3dadd( 111.777, -4.98646, -104.619, 0.28 ) }
    dend_42 { pt3dadd( 112.488, -5.06415, -104.434, 0.55 ) }
    dend_42 { pt3dadd( 113.229, -5.14908, -104.178, 0.28 ) }
    dend_42 { pt3dadd( 114.116, -5.20282, -103.834, 0.55 ) }
    dend_42 { pt3dadd( 115.441, -5.22639, -103.467, 0.28 ) }
    dend_42 { pt3dadd( 116.507, -5.28137, -103.204, 0.55 ) }
    dend_42 { pt3dadd( 117.684, -5.27281, -103.014, 0.28 ) }
    dend_42 { pt3dadd( 119.285, -5.26918, -102.899, 0.55 ) }
    dend_42 { pt3dadd( 121.081, -5.2337, -102.882, 0.55 ) }
    dend_42 { pt3dadd( 122.66, -5.19365, -102.973, 0.28 ) }
    dend_42 { pt3dadd( 124.845, -5.1296, -103.222, 0.55 ) }
    dend_42 { pt3dadd( 128.624, -4.95241, -104.064, 0.55 ) }
    dend_42 { pt3dadd( 130.291, -4.80666, -104.647, 0.55 ) }
    dend_42 { pt3dadd( 131.007, -4.72141, -104.977, 0.83 ) }
    dend_42 { pt3dadd( 132.373, -4.56111, -105.732, 0.55 ) }
    dend_42 { pt3dadd( 133.319, -4.41696, -106.319, 0.83 ) }
    dend_42 { pt3dadd( 135.861, -3.9645, -107.934, 0.55 ) }
    dend_42 { pt3dadd( 137.419, -3.7997, -108.951, 0.28 ) }
    dend_42 { pt3dadd( 138.077, -3.76426, -109.301, 0.55 ) }
    dend_42 { pt3dadd( 139.884, -3.81498, -110.045, 0.28 ) }
    dend_42 { pt3dadd( 140.52, -3.88676, -110.258, 0.55 ) }
    dend_42 { pt3dadd( 141.832, -4.0971, -110.489, 0.28 ) }
    dend_42 { pt3dadd( 143.171, -4.41778, -110.484, 0.55 ) }
    dend_42 { pt3dadd( 145.879, -5.1641, -109.992, 0.28 ) }
    dend_42 { pt3dadd( 147.128, -5.54998, -109.629, 0.55 ) }
    dend_42 { pt3dadd( 148.99, -6.21954, -108.982, 0.28 ) }
    dend_42 { pt3dadd( 151.342, -7.04842, -108.081, 0.55 ) }
    dend_42 { pt3dadd( 153.041, -7.62247, -107.405, 0.55 ) }
    dend_42 { pt3dadd( 155.978, -8.52154, -106.196, 0.28 ) }
    dend_42 { pt3dadd( 157.182, -8.84497, -105.803, 0.55 ) }
    dend_42 { pt3dadd( 159.254, -9.30708, -105.362, 0.28 ) }
    dend_42 { pt3dadd( 161.312, -9.62505, -105.079, 0.55 ) }
    dend_42 { pt3dadd( 162.436, -9.68769, -105.092, 0.28 ) }
    dend_42 { pt3dadd( 163.445, -9.61588, -105.196, 0.55 ) }
    dend_42 { pt3dadd( 166.288, -9.2688, -105.776, 0.28 ) }
    dend_42 { pt3dadd( 168.312, -8.88301, -106.237, 0.28 ) }
    dend_42 { pt3dadd( 170.064, -8.42088, -106.676, 0.55 ) }
    dend_42 { pt3dadd( 171.997, -7.86553, -107.266, 0.28 ) }
    dend_42 { pt3dadd( 172.482, -7.6931, -107.401, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 73.9135, 9.41891, -43.6241, 0.55 ) }
    dend_35 { pt3dadd( 74.7202, 7.41065, -44.6157, 0.55 ) }
    dend_35 { pt3dadd( 75.2556, 5.70293, -45.3405, 0.28 ) }
    dend_35 { pt3dadd( 75.7411, 4.15378, -45.8771, 0.55 ) }
    dend_35 { pt3dadd( 76.9324, 0.891027, -47.0442, 0.28 ) }
    dend_35 { pt3dadd( 77.0028, 0.681424, -47.1458, 0.55 ) }
    dend_35 { pt3dadd( 77.4021, -0.422737, -47.7635, 0.28 ) }
    dend_35 { pt3dadd( 77.6575, -1.36475, -48.4117, 0.55 ) }
    dend_35 { pt3dadd( 77.8759, -2.36838, -49.1913, 0.28 ) }
    dend_35 { pt3dadd( 78.1395, -3.74973, -50.3118, 0.55 ) }
    dend_35 { pt3dadd( 78.7977, -7.2115, -53.067, 0.55 ) }
    dend_35 { pt3dadd( 79.3669, -10.3777, -55.6283, 0.55 ) }
    dend_35 { pt3dadd( 79.7998, -12.9121, -57.6787, 0.55 ) }
    dend_35 { pt3dadd( 80.1839, -15.4046, -59.6547, 0.55 ) }
    dend_35 { pt3dadd( 80.2806, -16.0459, -60.1408, 0.28 ) }
    dend_35 { pt3dadd( 80.3999, -16.7221, -60.6091, 0.55 ) }
    dend_35 { pt3dadd( 80.6415, -17.6375, -61.1793, 0.28 ) }
    dend_35 { pt3dadd( 81.2237, -19.2386, -62.0623, 0.55 ) }
    dend_35 { pt3dadd( 82.5717, -22.2123, -63.2941, 0.55 ) }
    dend_35 { pt3dadd( 83.3064, -23.7923, -63.817, 0.28 ) }
    dend_35 { pt3dadd( 83.9642, -25.4204, -64.4178, 0.55 ) }
    dend_35 { pt3dadd( 84.7271, -27.7347, -65.3427, 0.28 ) }
    dend_35 { pt3dadd( 85.2308, -29.6244, -66.1311, 0.55 ) }
    dend_35 { pt3dadd( 85.8711, -32.4672, -67.3151, 0.28 ) }
    dend_35 { pt3dadd( 86.5512, -35.3951, -68.4549, 0.55 ) }
    dend_35 { pt3dadd( 87.487, -39.6584, -70.1449, 0.28 ) }
    dend_35 { pt3dadd( 87.9398, -41.9386, -71.0529, 0.55 ) }
    dend_35 { pt3dadd( 88.3692, -44.2826, -72.0332, 0.28 ) }
    dend_35 { pt3dadd( 88.7306, -46.3643, -73.0158, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 89.2701, -48.9822, -74.4519, 0.55 ) }
    dend_35 { pt3dadd( 89.9218, -51.3797, -75.7273, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 65.5631, 40.9779, -9.34241, 0.55 ) }
    dend_31 { pt3dadd( 68.0424, 41.2142, -8.87042, 0.55 ) }
    dend_31 { pt3dadd( 69.8595, 41.2989, -8.68932, 0.55 ) }
    dend_31 { pt3dadd( 73.8418, 41.4162, -8.49294, 0.55 ) }
    dend_31 { pt3dadd( 75.6362, 41.4147, -8.55782, 0.55 ) }
    dend_31 { pt3dadd( 77.5845, 41.442, -8.73085, 0.55 ) }
    dend_31 { pt3dadd( 80.1876, 41.502, -9.15112, 0.55 ) }
    dend_31 { pt3dadd( 82.9414, 41.4639, -9.84535, 0.55 ) }
    dend_31 { pt3dadd( 84.3866, 41.4064, -10.3712, 0.55 ) }
    dend_31 { pt3dadd( 87.314, 41.2423, -11.837, 0.55 ) }
    dend_31 { pt3dadd( 88.659, 41.1727, -12.556, 0.55 ) }
    dend_31 { pt3dadd( 91.8201, 40.9406, -14.3156, 0.55 ) }
    dend_31 { pt3dadd( 93.9777, 40.7007, -15.4807, 0.55 ) }
    dend_31 { pt3dadd( 95.5694, 40.5228, -16.2655, 0.83 ) }
    dend_31 { pt3dadd( 98.1308, 40.1497, -17.4811, 0.55 ) }
    dend_31 { pt3dadd( 100.665, 39.6767, -18.5632, 0.83 ) }
    dend_31 { pt3dadd( 102.835, 39.1892, -19.3966, 0.55 ) }
    dend_31 { pt3dadd( 104.764, 38.7936, -20.0438, 0.55 ) }
    dend_31 { pt3dadd( 105.854, 38.6212, -20.3583, 0.83 ) }
    dend_31 { pt3dadd( 108.4, 38.2417, -20.963, 0.28 ) }
    dend_31 { pt3dadd( 109.659, 38.1123, -21.191, 0.28 ) }
    dend_31 { pt3dadd( 110.889, 37.9053, -21.4652, 0.28 ) }
    dend_31 { pt3dadd( 112.213, 37.7149, -21.771, 0.28 ) }
    dend_31 { pt3dadd( 114.322, 37.4434, -22.3069, 0.28 ) }
    dend_31 { pt3dadd( 115.17, 37.3472, -22.499, 0.55 ) }
    dend_31 { pt3dadd( 117.198, 37.1597, -22.7668, 0.55 ) }
    dend_31 { pt3dadd( 120.861, 36.8093, -23.0659, 0.55 ) }
    dend_31 { pt3dadd( 121.881, 36.6916, -23.1027, 0.55 ) }
    dend_31 { pt3dadd( 122.798, 36.5626, -23.0948, 0.83 ) }
    dend_31 { pt3dadd( 124.784, 36.3587, -22.9294, 0.55 ) }
    dend_31 { pt3dadd( 126.51, 36.1878, -22.7593, 0.55 ) }
    dend_31 { pt3dadd( 128.141, 36.0337, -22.592, 0.55 ) }
    dend_31 { pt3dadd( 129.406, 35.8894, -22.4947, 0.55 ) }
    dend_31 { pt3dadd( 131.435, 35.5163, -22.421, 0.55 ) }
    dend_31 { pt3dadd( 133.858, 34.8634, -22.4396, 0.55 ) }
    dend_31 { pt3dadd( 137.69, 33.4252, -22.6764, 0.55 ) }
    dend_31 { pt3dadd( 139.842, 32.3372, -22.9012, 0.55 ) }
    dend_31 { pt3dadd( 141.756, 31.0981, -23.1522, 0.28 ) }
    dend_31 { pt3dadd( 142.346, 30.6152, -23.2453, 0.55 ) }
    dend_31 { pt3dadd( 143.709, 29.2061, -23.4755, 0.28 ) }
    dend_31 { pt3dadd( 144.953, 27.5726, -23.6825, 0.55 ) }
    dend_31 { pt3dadd( 146.224, 25.4974, -23.7479, 0.55 ) }
    dend_31 { pt3dadd( 147.077, 24.145, -23.7218, 0.28 ) }
    dend_31 { pt3dadd( 147.387, 23.6718, -23.6876, 0.55 ) }
    dend_31 { pt3dadd( 148.18, 22.5033, -23.5862, 0.28 ) }
    dend_31 { pt3dadd( 149.251, 20.9954, -23.4157, 0.55 ) }
    dend_31 { pt3dadd( 151.985, 17.4053, -22.912, 0.55 ) }
    dend_31 { pt3dadd( 153.399, 15.6083, -22.6172, 0.55 ) }
    dend_31 { pt3dadd( 154.708, 13.9661, -22.331, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 65.5631, 40.9779, -9.34241, 0.55 ) }
    dend_30 { pt3dadd( 66.6509, 42.405, -8.29167, 0.55 ) }
    dend_30 { pt3dadd( 67.0099, 42.8447, -7.97539, 0.55 ) }
    dend_30 { pt3dadd( 68.3932, 44.3635, -6.80148, 0.55 ) }
    dend_30 { pt3dadd( 69.9187, 46.1102, -5.4936, 0.55 ) }
    dend_30 { pt3dadd( 71.8499, 48.3866, -3.75664, 0.55 ) }
    dend_30 { pt3dadd( 72.3849, 49.0131, -3.28137, 0.55 ) }
    dend_30 { pt3dadd( 73.3592, 50.0887, -2.40522, 0.55 ) }
    dend_30 { pt3dadd( 74.4403, 51.2618, -1.51086, 0.55 ) }
    dend_30 { pt3dadd( 75.7151, 52.6182, -0.563069, 0.55 ) }
    dend_30 { pt3dadd( 76.91, 53.9177, 0.319665, 0.55 ) }
    dend_30 { pt3dadd( 77.5722, 54.6383, 0.745197, 0.55 ) }
    dend_30 { pt3dadd( 78.3445, 55.5069, 1.22376, 0.55 ) }
    dend_30 { pt3dadd( 79.3007, 56.597, 1.7732, 0.83 ) }
    dend_30 { pt3dadd( 80.9448, 58.2496, 2.50267, 0.55 ) }
    dend_30 { pt3dadd( 82.0673, 59.2613, 2.96896, 0.83 ) }
    dend_30 { pt3dadd( 83.6659, 60.5568, 3.62203, 0.55 ) }
    dend_30 { pt3dadd( 84.166, 60.9241, 3.83703, 0.55 ) }
    dend_30 { pt3dadd( 85.7486, 61.9691, 4.53356, 0.55 ) }
    dend_30 { pt3dadd( 88.6644, 63.6044, 5.80617, 0.55 ) }
    dend_30 { pt3dadd( 90.8445, 64.6635, 6.78216, 0.55 ) }
    dend_30 { pt3dadd( 92.5717, 65.4583, 7.6482, 0.55 ) }
    dend_30 { pt3dadd( 94.3291, 66.2269, 8.65083, 0.55 ) }
    dend_30 { pt3dadd( 94.7002, 66.3811, 8.87056, 0.28 ) }
    dend_30 { pt3dadd( 95.4597, 66.6664, 9.33636, 0.83 ) }
    dend_30 { pt3dadd( 98.5809, 67.8098, 11.2973, 0.55 ) }
    dend_30 { pt3dadd( 100.78, 68.5847, 12.6306, 0.55 ) }
    dend_30 { pt3dadd( 102.559, 69.289, 13.7315, 0.55 ) }
    dend_30 { pt3dadd( 103.618, 69.7135, 14.4004, 0.83 ) }
    dend_30 { pt3dadd( 104.449, 70.0594, 14.9197, 0.28 ) }
    dend_30 { pt3dadd( 105.205, 70.3695, 15.3835, 0.55 ) }
    dend_30 { pt3dadd( 110.465, 74.5963, 18.7045, 0.55 ) }
    dend_30 { pt3dadd( 116.738, 77.3555, 21.8029, 0.55 ) }
    dend_30 { pt3dadd( 122.7, 80.9913, 24.5946, 0.55 ) }
    dend_30 { pt3dadd( 127.633, 84.4373, 29.1056, 0.55 ) }
    dend_30 { pt3dadd( 132.228, 87.1424, 34.4096, 0.55 ) }
    dend_30 { pt3dadd( 138.211, 88.052, 38.8755, 0.55 ) }
    dend_30 { pt3dadd( 144.622, 87.6918, 42.7899, 0.55 ) }
    dend_30 { pt3dadd( 151.551, 88.305, 45.6504, 0.55 ) }
    dend_30 { pt3dadd( 158.264, 89.085, 48.9499, 0.55 ) }
    dend_30 { pt3dadd( 165.256, 90.3138, 51.4314, 0.55 ) }
    dend_30 { pt3dadd( 171.85, 92.3231, 54.4408, 0.55 ) }
    dend_30 { pt3dadd( 178.113, 93.4276, 58.4552, 0.55 ) }
    dend_30 { pt3dadd( 184.072, 96.008, 62.2494, 0.55 ) }
    dend_30 { pt3dadd( 189.215, 99.9084, 66.1093, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.1556, -30.1238, 6.12773, 1.38 ) }
    dend_13 { pt3dadd( 1.62643, -32.9948, 5.31911, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.1556, -30.1238, 6.12773, 0.55 ) }
    dend_12 { pt3dadd( -2.72727, -32.0959, 6.13534, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.45875, -34.6208, 6.1449, 0.55 ) }
    dend_12 { pt3dadd( -5.81244, -36.295, 6.16803, 0.55 ) }
    dend_12 { pt3dadd( -6.94956, -37.6946, 6.00081, 0.55 ) }
    dend_12 { pt3dadd( -9.42824, -40.5955, 5.38959, 0.55 ) }
    dend_12 { pt3dadd( -11.1674, -42.5338, 4.91018, 0.55 ) }
    dend_12 { pt3dadd( -12.7122, -44.2716, 4.42241, 0.55 ) }
    dend_12 { pt3dadd( -16.6854, -48.5038, 3.17321, 0.55 ) }
    dend_12 { pt3dadd( -21.4638, -53.4062, 1.71214, 0.55 ) }
    dend_12 { pt3dadd( -25.1645, -57.1202, 0.513273, 0.55 ) }
    dend_12 { pt3dadd( -27.5244, -59.5582, -0.287781, 0.55 ) }
    dend_12 { pt3dadd( -30.2298, -62.4819, -1.1983, 0.55 ) }
    dend_12 { pt3dadd( -33.6539, -66.6697, -2.30617, 0.55 ) }
    dend_12 { pt3dadd( -35.6485, -69.6356, -2.90999, 0.55 ) }
    dend_12 { pt3dadd( -38.1027, -73.897, -3.42684, 0.55 ) }
    dend_12 { pt3dadd( -40.0508, -77.8863, -3.75717, 0.55 ) }
    dend_12 { pt3dadd( -42.0037, -82.8593, -4.0556, 0.55 ) }
    dend_12 { pt3dadd( -43.8269, -88.6928, -4.25276, 0.55 ) }
    dend_12 { pt3dadd( -44.7878, -93.1469, -4.28645, 0.55 ) }
    dend_12 { pt3dadd( -45.119, -95.3616, -4.15522, 0.55 ) }
    dend_12 { pt3dadd( -45.5926, -100.561, -3.55652, 0.55 ) }
    dend_12 { pt3dadd( -45.952, -105.426, -2.86725, 0.55 ) }
    dend_12 { pt3dadd( -46.0708, -110.322, -1.80493, 0.55 ) }
    dend_12 { pt3dadd( -46.1717, -113.131, -1.04309, 0.55 ) }
    dend_12 { pt3dadd( -46.4379, -121.816, 1.63238, 0.55 ) }
    dend_12 { pt3dadd( -46.462, -122.456, 1.84049, 0.55 ) }
    dend_12 { pt3dadd( -46.5381, -126.371, 3.2126, 0.55 ) }
    dend_12 { pt3dadd( -47.0042, -133.376, 5.82281, 0.55 ) }
    dend_12 { pt3dadd( -47.1706, -135.719, 6.55639, 0.55 ) }
    dend_12 { pt3dadd( -47.5069, -139.384, 7.0742, 0.55 ) }
    dend_12 { pt3dadd( -47.5898, -140.745, 6.9566, 0.55 ) }
    dend_12 { pt3dadd( -47.6475, -145.354, 5.70016, 0.55 ) }
    dend_12 { pt3dadd( -47.5047, -148.338, 4.26254, 0.55 ) }
    dend_12 { pt3dadd( -47.1259, -153.093, 1.01183, 0.55 ) }
    dend_12 { pt3dadd( -46.4171, -158.908, -3.40838, 0.28 ) }
    dend_12 { pt3dadd( -46.2151, -160.345, -4.69452, 0.55 ) }
    dend_12 { pt3dadd( -45.8974, -162.525, -6.83603, 0.28 ) }
    dend_12 { pt3dadd( -45.8521, -162.854, -7.17623, 0.55 ) }
    dend_12 { pt3dadd( -45.6191, -164.653, -8.88558, 0.28 ) }
    dend_12 { pt3dadd( -45.5848, -165.264, -9.32653, 0.55 ) }
    dend_12 { pt3dadd( -45.4922, -168.44, -11.0083, 0.28 ) }
    dend_12 { pt3dadd( -45.5027, -169.521, -11.5679, 0.55 ) }
    dend_12 { pt3dadd( -45.5762, -172.649, -13.0097, 0.28 ) }
    dend_12 { pt3dadd( -45.595, -173.633, -13.4599, 0.55 ) }
    dend_12 { pt3dadd( -45.689, -177.03, -14.9587, 0.28 ) }
    dend_12 { pt3dadd( -45.7239, -178.592, -15.6559, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.142293, -71.4463, 55.9211, 0.55 ) }
    dend_10 { pt3dadd( -2.10114, -78.0486, 63.572, 0.55 ) }
    dend_10 { pt3dadd( -4.73114, -83.6197, 71.8187, 0.55 ) }
    dend_10 { pt3dadd( -7.38985, -89.8757, 79.5489, 0.55 ) }
    dend_10 { pt3dadd( -10.2738, -96.1313, 87.1983, 0.55 ) }
    dend_10 { pt3dadd( -12.6336, -103.659, 93.8103, 0.55 ) }
    dend_10 { pt3dadd( -14.6653, -110.902, 100.837, 0.55 ) }
    dend_10 { pt3dadd( -16.6485, -119.808, 105.602, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.142293, -71.4463, 55.9211, 0.55 ) }
    dend_3 { pt3dadd( 2.41145, -81.0737, 63.4705, 0.55 ) }
    dend_3 { pt3dadd( 4.24365, -91.9997, 69.2556, 0.55 ) }
    dend_3 { pt3dadd( 4.31989, -102.554, 75.9489, 0.55 ) }
    dend_3 { pt3dadd( 3.10997, -113.43, 81.9855, 0.55 ) }
    dend_3 { pt3dadd( 2.42903, -124.391, 87.9526, 0.55 ) }
    dend_3 { pt3dadd( 2.2958, -135.006, 94.5484, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -41.4764, 47.4486, -19.4005, 0.83 ) }
    dend_60 { pt3dadd( -40.6919, 49.4776, -20.3173, 0.83 ) }
    dend_60 { pt3dadd( -38.9912, 54.2853, -22.2881, 0.55 ) }
    dend_60 { pt3dadd( -38.3001, 56.3157, -23.0117, 0.83 ) }
    dend_60 { pt3dadd( -37.5938, 58.4498, -23.6731, 0.55 ) }
    dend_60 { pt3dadd( -36.9514, 60.5644, -24.118, 0.55 ) }
    dend_60 { pt3dadd( -36.6599, 61.5895, -24.2316, 0.28 ) }
    dend_60 { pt3dadd( -36.5523, 62.2225, -24.18, 0.55 ) }
    dend_60 { pt3dadd( -36.2729, 64.1988, -23.5952, 0.28 ) }
    dend_60 { pt3dadd( -36.1467, 65.0298, -23.2987, 0.55 ) }
    dend_60 { pt3dadd( -35.7819, 67.8816, -22.1684, 0.28 ) }
    dend_60 { pt3dadd( -35.5774, 70.1183, -21.2186, 0.55 ) }
    dend_60 { pt3dadd( -35.4645, 73.5809, -19.6857, 0.28 ) }
    dend_60 { pt3dadd( -35.4945, 76.6083, -18.3169, 0.28 ) }
    dend_60 { pt3dadd( -35.6236, 78.2948, -17.5512, 0.55 ) }
    dend_60 { pt3dadd( -35.9043, 80.2977, -16.6839, 0.28 ) }
    dend_60 { pt3dadd( -36.1078, 81.2507, -16.2781, 0.55 ) }
    dend_60 { pt3dadd( -36.6787, 83.5302, -15.4648, 0.28 ) }
    dend_60 { pt3dadd( -37.1356, 85.0788, -15.0333, 0.28 ) }
    dend_60 { pt3dadd( -37.6014, 86.6157, -14.6643, 0.28 ) }
    dend_60 { pt3dadd( -37.8158, 87.4281, -14.4622, 0.55 ) }
    dend_60 { pt3dadd( -38.485, 90.7365, -13.6601, 0.28 ) }
    dend_60 { pt3dadd( -39.1272, 94.6762, -12.735, 0.55 ) }
    dend_60 { pt3dadd( -39.3279, 96.0382, -12.4141, 0.55 ) }
    dend_60 { pt3dadd( -39.5597, 97.3946, -12.072, 0.55 ) }
    dend_60 { pt3dadd( -40.1862, 100.294, -11.4386, 0.55 ) }
    dend_60 { pt3dadd( -40.7032, 102.213, -11.1005, 0.28 ) }
    dend_60 { pt3dadd( -40.9769, 102.943, -11.0084, 0.55 ) }
    dend_60 { pt3dadd( -41.8643, 104.91, -10.7654, 0.28 ) }
    dend_60 { pt3dadd( -42.8651, 107.031, -10.6105, 0.55 ) }
    dend_60 { pt3dadd( -44.5365, 110.12, -10.586, 0.28 ) }
    dend_60 { pt3dadd( -45.3523, 111.424, -10.6572, 0.28 ) }
    dend_60 { pt3dadd( -46.6472, 113.295, -10.9897, 0.55 ) }
    dend_60 { pt3dadd( -48.0826, 115.276, -11.4639, 0.28 ) }
    dend_60 { pt3dadd( -48.3447, 115.592, -11.5655, 0.55 ) }
    dend_60 { pt3dadd( -49.2923, 116.612, -11.9653, 0.28 ) }
    dend_60 { pt3dadd( -52.5828, 119.89, -13.3548, 0.55 ) }
    dend_60 { pt3dadd( -57.1002, 124.065, -15.6197, 0.28 ) }
    dend_60 { pt3dadd( -57.9174, 124.796, -16.1114, 0.55 ) }
    dend_60 { pt3dadd( -60.1476, 126.717, -17.5358, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -61.075, 127.518, -18.1667, 0.28 ) }
    dend_60 { pt3dadd( -61.8671, 128.205, -18.7657, 0.55 ) }
    dend_60 { pt3dadd( -64.12, 129.959, -20.8306, 0.28 ) }
    dend_60 { pt3dadd( -65.7347, 130.976, -22.2832, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -41.4764, 47.4486, -19.4005, 0.55 ) }
    dend_57 { pt3dadd( -41.6495, 48.7366, -19.2046, 0.55 ) }
    dend_57 { pt3dadd( -41.7906, 49.476, -19.0297, 0.28 ) }
    dend_57 { pt3dadd( -42.0335, 49.9688, -18.8143, 0.55 ) }
    dend_57 { pt3dadd( -42.5913, 51.1003, -18.3196, 0.28 ) }
    dend_57 { pt3dadd( -42.9831, 51.8951, -17.9722, 0.55 ) }
    dend_57 { pt3dadd( -43.7054, 53.3603, -17.3316, 0.28 ) }
    dend_57 { pt3dadd( -44.2197, 54.1031, -16.8757, 0.55 ) }
    dend_57 { pt3dadd( -46.2444, 55.6721, -15.2978, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -145.361, -46.8496, -23.8114, 0.55 ) }
    dend_52 { pt3dadd( -151.563, -54.6022, -28.2299, 0.55 ) }
    dend_52 { pt3dadd( -156.024, -63.1281, -33.2807, 0.55 ) }
    dend_52 { pt3dadd( -159.419, -70.6912, -40.3071, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -145.361, -46.8496, -23.8114, 0.55 ) }
    dend_49 { pt3dadd( -150.269, -51.731, -28.4856, 0.55 ) }
    dend_49 { pt3dadd( -154.295, -56.5271, -34.013, 0.55 ) }
    dend_49 { pt3dadd( -157.978, -61.4135, -39.6983, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -164.655, 12.7497, 52.6604, 0.55 ) }
    dend_47 { pt3dadd( -171.102, 12.4783, 56.567, 0.55 ) }
    dend_47 { pt3dadd( -177.833, 13.2587, 59.8822, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -164.655, 12.7497, 52.6604, 0.55 ) }
    dend_46 { pt3dadd( -175.493, 11.3194, 56.2949, 0.55 ) }
    dend_46 { pt3dadd( -186.426, 11.7927, 59.8981, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 89.9218, -51.3797, -75.7273, 0.28 ) }
    dend_39 { pt3dadd( 95.2487, -54.9025, -82.7559, 0.28 ) }
    dend_39 { pt3dadd( 95.7755, -55.2745, -83.3659, 0.55 ) }
    dend_39 { pt3dadd( 96.6649, -55.9024, -84.3957, 0.28 ) }
    dend_39 { pt3dadd( 97.4139, -56.4311, -85.2628, 0.28 ) }
    dend_39 { pt3dadd( 98.4052, -57.1309, -86.4107, 0.55 ) }
    dend_39 { pt3dadd( 99.7123, -58.0537, -87.924, 0.55 ) }
    dend_39 { pt3dadd( 101.396, -59.2983, -88.4852, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 89.9218, -51.3797, -75.7273, 0.55 ) }
    dend_36 { pt3dadd( 90.6172, -52.4092, -76.5725, 0.55 ) }
    dend_36 { pt3dadd( 90.8467, -52.88, -76.9512, 0.28 ) }
    dend_36 { pt3dadd( 91.1999, -53.6935, -77.6184, 0.55 ) }
    dend_36 { pt3dadd( 91.978, -55.4857, -79.0881, 0.28 ) }
    dend_36 { pt3dadd( 92.5172, -56.7277, -80.1067, 0.55 ) }
    dend_36 { pt3dadd( 93.4308, -58.832, -81.8324, 0.28 ) }
    dend_36 { pt3dadd( 94.4876, -61.4342, -84.1374, 0.28 ) }
    dend_36 { pt3dadd( 94.9266, -62.639, -85.222, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 154.708, 13.9661, -22.331, 0.28 ) }
    dend_33 { pt3dadd( 157.508, 11.8452, -20.788, 0.28 ) }
    dend_33 { pt3dadd( 161.069, 9.11333, -18.4128, 0.28 ) }
    dend_33 { pt3dadd( 163.33, 7.36155, -16.7644, 0.55 ) }
    dend_33 { pt3dadd( 164.668, 6.43996, -15.7846, 0.28 ) }
    dend_33 { pt3dadd( 165.38, 5.94427, -15.2494, 0.28 ) }
    dend_33 { pt3dadd( 168.911, 3.48121, -12.6672, 0.55 ) }
    dend_33 { pt3dadd( 169.715, 2.97462, -11.981, 0.28 ) }
    dend_33 { pt3dadd( 171.651, 1.64224, -10.0157, 0.55 ) }
    dend_33 { pt3dadd( 173.312, 0.451471, -8.38884, 0.28 ) }
    dend_33 { pt3dadd( 174.743, -0.506325, -7.09868, 0.55 ) }
    dend_33 { pt3dadd( 176.432, -1.69714, -5.67494, 0.55 ) }
    dend_33 { pt3dadd( 179.133, -3.70939, -3.79711, 0.55 ) }
    dend_33 { pt3dadd( 179.788, -4.2142, -3.36315, 0.55 ) }
    dend_33 { pt3dadd( 182.153, -6.12954, -1.77255, 0.28 ) }
    dend_33 { pt3dadd( 183.08, -6.93198, -1.15201, 0.55 ) }
    dend_33 { pt3dadd( 184.351, -7.93653, -0.366141, 0.28 ) }
    dend_33 { pt3dadd( 186.151, -9.39497, 0.65552, 0.55 ) }
    dend_33 { pt3dadd( 189.121, -11.8146, 1.79238, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 154.708, 13.9661, -22.331, 0.55 ) }
    dend_32 { pt3dadd( 152.859, 13.6494, -22.364, 0.55 ) }
    dend_32 { pt3dadd( 151.357, 13.3922, -22.3908, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.62643, -32.9948, 5.31911, 0.83 ) }
    dend_17 { pt3dadd( 1.76605, -33.2933, 5.2741, 0.83 ) }
    dend_17 { pt3dadd( 3.41804, -35.9315, 4.97938, 0.83 ) }
    dend_17 { pt3dadd( 4.84211, -38.2429, 4.56694, 0.55 ) }
    dend_17 { pt3dadd( 5.97821, -40.0868, 4.23791, 0.55 ) }
    dend_17 { pt3dadd( 8.39304, -44.0062, 3.53854, 0.83 ) }
    dend_17 { pt3dadd( 11.322, -48.7602, 2.69025, 0.55 ) }
    dend_17 { pt3dadd( 12.9285, -51.2477, 2.28563, 0.83 ) }
    dend_17 { pt3dadd( 15.8044, -55.2015, 1.77439, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.62643, -32.9948, 5.31911, 0.55 ) }
    dend_14 { pt3dadd( 0.473422, -33.9046, 2.91287, 0.55 ) }
    dend_14 { pt3dadd( -0.764193, -34.8812, 0.330069, 0.55 ) }
    dend_14 { pt3dadd( -2.22521, -36.0341, -2.71895, 0.55 ) }
    dend_14 { pt3dadd( -3.99936, -37.434, -6.42145, 0.55 ) }
    dend_14 { pt3dadd( -5.00613, -38.2285, -8.5225, 0.55 ) }
    dend_14 { pt3dadd( -5.20837, -38.388, -8.94457, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.2958, -135.006, 94.5484, 0.55 ) }
    dend_7 { pt3dadd( 3.19793, -142.42, 99.5201, 0.55 ) }
    dend_7 { pt3dadd( 5.0274, -150.345, 103.308, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.2958, -135.006, 94.5484, 0.55 ) }
    dend_4 { pt3dadd( 1.90853, -143.954, 99.7061, 0.55 ) }
    dend_4 { pt3dadd( 1.37791, -152.596, 105.349, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -46.2444, 55.6721, -15.2978, 0.28 ) }
    dend_59 { pt3dadd( -47.6159, 56.4151, -14.1717, 0.28 ) }
    dend_59 { pt3dadd( -48.1505, 56.6769, -13.6944, 0.55 ) }
    dend_59 { pt3dadd( -49.6938, 57.4246, -12.2804, 0.28 ) }
    dend_59 { pt3dadd( -50.4392, 57.8202, -11.6441, 0.55 ) }
    dend_59 { pt3dadd( -52.4508, 58.915, -9.98588, 0.28 ) }
    dend_59 { pt3dadd( -54.4954, 60.0277, -8.30053, 0.55 ) }
    dend_59 { pt3dadd( -57.8793, 61.7095, -5.54119, 0.28 ) }
    dend_59 { pt3dadd( -58.6002, 62.0723, -4.95119, 0.55 ) }
    dend_59 { pt3dadd( -60.1748, 62.9704, -3.669, 0.28 ) }
    dend_59 { pt3dadd( -60.7912, 63.3524, -3.15349, 0.55 ) }
    dend_59 { pt3dadd( -67.2207, 65.6089, 0.474701, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -73.6595, 69.2588, 2.66901, 0.55 ) }
    dend_59 { pt3dadd( -79.6614, 72.7303, 6.06308, 0.55 ) }
    dend_59 { pt3dadd( -84.7126, 77.091, 9.94426, 0.55 ) }
    dend_59 { pt3dadd( -90.3455, 81.38, 13.0214, 0.55 ) }
    dend_59 { pt3dadd( -96.7445, 84.3421, 16.1636, 0.55 ) }
    dend_59 { pt3dadd( -102.978, 86.3581, 20.2467, 0.55 ) }
    dend_59 { pt3dadd( -108.815, 87.2725, 25.2143, 0.55 ) }
    dend_59 { pt3dadd( -114.617, 88.6818, 30.1088, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -46.2444, 55.6721, -15.2978, 0.55 ) }
    dend_58 { pt3dadd( -49.1683, 54.5555, -15.307, 0.55 ) }
    dend_58 { pt3dadd( -50.6848, 53.9298, -15.3288, 0.28 ) }
    dend_58 { pt3dadd( -51.8133, 53.4641, -15.345, 0.55 ) }
    dend_58 { pt3dadd( -52.7538, 53.076, -15.3585, 0.28 ) }
    dend_58 { pt3dadd( -53.4126, 52.8041, -15.3679, 0.55 ) }
    dend_58 { pt3dadd( -55.2293, 52.0545, -15.394, 0.28 ) }
    dend_58 { pt3dadd( -56.3923, 51.5059, -15.575, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -159.419, -70.6912, -40.3071, 0.55 ) }
    dend_54 { pt3dadd( -163.541, -79.6791, -43.7014, 0.55 ) }
    dend_54 { pt3dadd( -167.452, -89.0952, -46.0096, 0.55 ) }
    dend_54 { pt3dadd( -170.587, -98.1763, -50.133, 0.55 ) }
    dend_54 { pt3dadd( -174.767, -107.358, -52.8764, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -159.419, -70.6912, -40.3071, 0.55 ) }
    dend_53 { pt3dadd( -163.953, -74.3546, -48.7151, 0.55 ) }
    dend_53 { pt3dadd( -167.993, -76.5438, -57.856, 0.55 ) }
    dend_53 { pt3dadd( -172.887, -80.0411, -66.1313, 0.55 ) }
    dend_53 { pt3dadd( -179.787, -82.0906, -73.4018, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -157.978, -61.4135, -39.6983, 0.55 ) }
    dend_51 { pt3dadd( -166.52, -59.5696, -48.7627, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -157.978, -61.4135, -39.6983, 0.55 ) }
    dend_50 { pt3dadd( -162.561, -72.1689, -43.0684, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 101.396, -59.2983, -88.4852, 0.28 ) }
    dend_41 { pt3dadd( 104.232, -60.4965, -89.599, 0.28 ) }
    dend_41 { pt3dadd( 105.549, -61.053, -90.1164, 0.55 ) }
    dend_41 { pt3dadd( 108.061, -62.1144, -91.103, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 101.396, -59.2983, -88.4852, 0.55 ) }
    dend_40 { pt3dadd( 100.956, -61.0341, -90.5764, 0.55 ) }
    dend_40 { pt3dadd( 100.074, -64.5063, -94.7594, 0.28 ) }
    dend_40 { pt3dadd( 99.786, -65.6373, -96.122, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 94.9266, -62.639, -85.222, 0.28 ) }
    dend_38 { pt3dadd( 96.9562, -66.9626, -88.1984, 0.28 ) }
    dend_38 { pt3dadd( 97.9612, -69.1035, -89.6722, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 94.9266, -62.639, -85.222, 0.55 ) }
    dend_37 { pt3dadd( 93.6773, -63.3544, -84.2499, 0.55 ) }
    dend_37 { pt3dadd( 90.1937, -65.3495, -81.5391, 0.28 ) }
    dend_37 { pt3dadd( 89.3661, -65.8234, -80.8951, 0.55 ) }
    dend_37 { pt3dadd( 87.1023, -67.1199, -79.1335, 0.28 ) }
    dend_37 { pt3dadd( 85.6431, -67.9556, -77.998, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.8044, -55.2015, 1.77439, 0.83 ) }
    dend_23 { pt3dadd( 15.8306, -55.4885, 1.74144, 0.83 ) }
    dend_23 { pt3dadd( 16.2538, -59.2387, 1.39627, 0.83 ) }
    dend_23 { pt3dadd( 16.3814, -62.0429, 1.37299, 0.83 ) }
    dend_23 { pt3dadd( 16.3923, -64.7395, 1.66972, 0.83 ) }
    dend_23 { pt3dadd( 16.3529, -68.317, 2.3604, 0.83 ) }
    dend_23 { pt3dadd( 16.2356, -72.4327, 3.33386, 0.83 ) }
    dend_23 { pt3dadd( 16.1861, -77.0171, 4.65104, 0.83 ) }
    dend_23 { pt3dadd( 16.1923, -81.4608, 6.13145, 0.83 ) }
    dend_23 { pt3dadd( 15.818, -86.9243, 7.91721, 0.83 ) }
    dend_23 { pt3dadd( 15.4736, -89.4418, 8.63358, 0.83 ) }
    dend_23 { pt3dadd( 15.1765, -91.3406, 9.05736, 0.83 ) }
    dend_23 { pt3dadd( 14.5109, -94.9875, 9.81508, 0.83 ) }
    dend_23 { pt3dadd( 13.9432, -98.2619, 10.298, 0.83 ) }
    dend_23 { pt3dadd( 12.9011, -105.278, 10.4716, 0.83 ) }
    dend_23 { pt3dadd( 12.2462, -109.139, 10.0704, 0.83 ) }
    dend_23 { pt3dadd( 11.5744, -112.707, 9.45116, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.8044, -55.2015, 1.77439, 0.55 ) }
    dend_18 { pt3dadd( 14.9894, -57.2593, 2.32394, 0.55 ) }
    dend_18 { pt3dadd( 14.4138, -58.7437, 2.83729, 0.55 ) }
    dend_18 { pt3dadd( 14.1016, -59.6851, 3.24922, 0.55 ) }
    dend_18 { pt3dadd( 13.7289, -61.1469, 4.00998, 0.55 ) }
    dend_18 { pt3dadd( 13.1272, -64.0259, 5.67375, 0.55 ) }
    dend_18 { pt3dadd( 12.7347, -66.1846, 7.17546, 0.55 ) }
    dend_18 { pt3dadd( 12.4846, -67.8989, 8.56234, 0.55 ) }
    dend_18 { pt3dadd( 12.2317, -69.6196, 10.1009, 0.55 ) }
    dend_18 { pt3dadd( 12.0356, -71.0399, 11.4563, 0.28 ) }
    dend_18 { pt3dadd( 11.9175, -72.1852, 12.7422, 0.55 ) }
    dend_18 { pt3dadd( 11.7562, -74.2428, 15.4006, 0.55 ) }
    dend_18 { pt3dadd( 11.6338, -75.4911, 17.197, 0.55 ) }
    dend_18 { pt3dadd( 11.5545, -76.191, 18.1988, 0.55 ) }
    dend_18 { pt3dadd( 11.4011, -77.0201, 19.3499, 0.83 ) }
    dend_18 { pt3dadd( 10.8637, -79.4938, 22.598, 0.28 ) }
    dend_18 { pt3dadd( 10.6786, -80.3145, 23.6493, 0.55 ) }
    dend_18 { pt3dadd( 10.3757, -81.801, 25.4802, 0.28 ) }
    dend_18 { pt3dadd( 10.2946, -82.2562, 26.0792, 0.55 ) }
    dend_18 { pt3dadd( 10.1595, -83.3275, 27.4423, 0.28 ) }
    dend_18 { pt3dadd( 10.0709, -83.9409, 28.169, 0.55 ) }
    dend_18 { pt3dadd( 9.46164, -85.985, 30.0198, 0.55 ) }
    dend_18 { pt3dadd( 9.97715, -91.3142, 36.7131, 0.55 ) }
    dend_18 { pt3dadd( 10.9851, -96.3427, 43.5807, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.20837, -38.388, -8.94457, 0.55 ) }
    dend_16 { pt3dadd( -7.40537, -39.9239, -13.6805, 0.55 ) }
    dend_16 { pt3dadd( -8.07141, -40.2867, -15.0316, 0.55 ) }
    dend_16 { pt3dadd( -9.78236, -41.197, -18.3274, 0.55 ) }
    dend_16 { pt3dadd( -13.6168, -43.005, -25.3092, 0.28 ) }
    dend_16 { pt3dadd( -14.2074, -43.2528, -26.2969, 0.55 ) }
    dend_16 { pt3dadd( -16.7239, -44.3871, -30.2809, 0.55 ) }
    dend_16 { pt3dadd( -20.3417, -45.9371, -35.2851, 0.55 ) }
    dend_16 { pt3dadd( -21.7418, -46.4697, -37.1578, 0.28 ) }
    dend_16 { pt3dadd( -23.0011, -46.8222, -38.712, 0.28 ) }
    dend_16 { pt3dadd( -25.282, -47.3633, -41.0108, 0.55 ) }
    dend_16 { pt3dadd( -28.0212, -47.8646, -43.9391, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -30.527, -48.0592, -46.7169, 0.55 ) }
    dend_16 { pt3dadd( -32.4795, -48.0077, -48.8247, 0.55 ) }
    dend_16 { pt3dadd( -33.8061, -47.8328, -50.3294, 0.55 ) }
    dend_16 { pt3dadd( -37.6541, -47.0989, -54.8951, 0.55 ) }
    dend_16 { pt3dadd( -41.7366, -45.9734, -59.6157, 0.55 ) }
    dend_16 { pt3dadd( -43.4408, -45.3897, -61.5183, 0.28 ) }
    dend_16 { pt3dadd( -45.0477, -44.8679, -63.3609, 0.55 ) }
    dend_16 { pt3dadd( -48.3243, -44.0754, -67.0536, 0.28 ) }
    dend_16 { pt3dadd( -49.4319, -43.8484, -68.2823, 0.83 ) }
    dend_16 { pt3dadd( -51.5602, -43.392, -70.4109, 0.28 ) }
    dend_16 { pt3dadd( -53.1756, -43.2009, -71.7113, 0.55 ) }
    dend_16 { pt3dadd( -55.5402, -43.0176, -73.546, 0.28 ) }
    dend_16 { pt3dadd( -56.4936, -42.9304, -74.2432, 0.55 ) }
    dend_16 { pt3dadd( -58.2958, -42.8051, -75.4325, 0.55 ) }
    dend_16 { pt3dadd( -61.0535, -42.3125, -77.1254, 0.55 ) }
    dend_16 { pt3dadd( -62.889, -41.8676, -78.128, 0.28 ) }
    dend_16 { pt3dadd( -64.4062, -41.3113, -78.8192, 0.55 ) }
    dend_16 { pt3dadd( -66.1893, -40.4265, -79.6463, 0.28 ) }
    dend_16 { pt3dadd( -66.4794, -40.2565, -79.7929, 0.55 ) }
    dend_16 { pt3dadd( -69.0092, -38.6299, -81.6202, 0.28 ) }
    dend_16 { pt3dadd( -70.7792, -37.4106, -83.1582, 0.55 ) }
    dend_16 { pt3dadd( -72.9996, -35.6268, -85.551, 0.83 ) }
    dend_16 { pt3dadd( -74.7518, -34.109, -87.7649, 0.28 ) }
    dend_16 { pt3dadd( -75.1869, -33.7217, -88.3917, 0.55 ) }
    dend_16 { pt3dadd( -78.4489, -30.8195, -93.4364, 0.28 ) }
    dend_16 { pt3dadd( -78.996, -30.3255, -94.3929, 0.55 ) }
    dend_16 { pt3dadd( -80.5629, -28.7129, -97.3576, 0.28 ) }
    dend_16 { pt3dadd( -80.966, -28.2982, -98.1271, 0.55 ) }
    dend_16 { pt3dadd( -82.0339, -27.2175, -100.001, 0.28 ) }
    dend_16 { pt3dadd( -82.8121, -26.4385, -101.263, 0.55 ) }
    dend_16 { pt3dadd( -84.6678, -24.6955, -103.73, 0.28 ) }
    dend_16 { pt3dadd( -85.7904, -23.7627, -105.139, 0.55 ) }
    dend_16 { pt3dadd( -88.2445, -21.9654, -107.985, 0.28 ) }
    dend_16 { pt3dadd( -88.9816, -21.4807, -108.818, 0.55 ) }
    dend_16 { pt3dadd( -90.1576, -20.8327, -110.071, 0.28 ) }
    dend_16 { pt3dadd( -91.1728, -20.2865, -111.076, 0.55 ) }
    dend_16 { pt3dadd( -93.3304, -19.1853, -113.013, 0.28 ) }
    dend_16 { pt3dadd( -93.9886, -18.8708, -113.572, 0.55 ) }
    dend_16 { pt3dadd( -98.9583, -16.4192, -117.471, 0.28 ) }
    dend_16 { pt3dadd( -100.75, -15.4153, -118.672, 0.55 ) }
    dend_16 { pt3dadd( -104.009, -13.4498, -120.593, 0.28 ) }
    dend_16 { pt3dadd( -105.49, -12.4994, -121.412, 0.55 ) }
    dend_16 { pt3dadd( -108.948, -10.3448, -123.082, 0.28 ) }
    dend_16 { pt3dadd( -110.235, -9.61411, -123.636, 0.55 ) }
    dend_16 { pt3dadd( -114.979, -7.41137, -125.377, 0.28 ) }
    dend_16 { pt3dadd( -116.97, -6.75131, -126.081, 0.55 ) }
    dend_16 { pt3dadd( -119.835, -6.2928, -127.044, 0.55 ) }
    dend_16 { pt3dadd( -121.612, -6.12553, -127.592, 0.55 ) }
    dend_16 { pt3dadd( -125.309, -5.87777, -128.429, 0.28 ) }
    dend_16 { pt3dadd( -129.003, -5.66838, -129.026, 0.28 ) }
    dend_16 { pt3dadd( -132.099, -5.48193, -129.436, 0.55 ) }
    dend_16 { pt3dadd( -135.961, -4.92726, -129.538, 0.28 ) }
    dend_16 { pt3dadd( -137.912, -4.41963, -129.346, 0.55 ) }
    dend_16 { pt3dadd( -142.604, -2.49645, -128.457, 0.28 ) }
    dend_16 { pt3dadd( -145.077, -1.05091, -127.46, 0.55 ) }
    dend_16 { pt3dadd( -146.699, 0.118878, -126.491, 0.28 ) }
    dend_16 { pt3dadd( -148.548, 1.4429, -124.991, 0.55 ) }
    dend_16 { pt3dadd( -150.87, 3.17987, -122.852, 0.28 ) }
    dend_16 { pt3dadd( -151.755, 3.79196, -122.051, 0.55 ) }
    dend_16 { pt3dadd( -156.362, 6.53436, -118.42, 0.28 ) }
    dend_16 { pt3dadd( -157.921, 7.39905, -117.211, 0.55 ) }
    dend_16 { pt3dadd( -161.637, 9.31663, -114.245, 0.28 ) }
    dend_16 { pt3dadd( -163.658, 10.3346, -112.635, 0.55 ) }
    dend_16 { pt3dadd( -165.32, 11.1685, -111.314, 0.55 ) }
    dend_16 { pt3dadd( -167.309, 12.1494, -109.787, 0.28 ) }
    dend_16 { pt3dadd( -168.352, 12.6464, -109.16, 0.55 ) }
    dend_16 { pt3dadd( -171.846, 14.421, -107.264, 0.28 ) }
    dend_16 { pt3dadd( -173.662, 15.5556, -106.236, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.20837, -38.388, -8.94457, 0.55 ) }
    dend_15 { pt3dadd( -4.85219, -38.4543, -10.0118, 0.55 ) }
    dend_15 { pt3dadd( -4.46955, -38.3974, -11.0704, 0.55 ) }
    dend_15 { pt3dadd( -3.93181, -38.2279, -12.3597, 0.55 ) }
    dend_15 { pt3dadd( -3.45441, -37.9992, -13.3857, 0.55 ) }
    dend_15 { pt3dadd( 0.110605, -35.7373, -19.8133, 0.55 ) }
    dend_15 { pt3dadd( 0.893072, -35.0512, -21.2677, 0.55 ) }
    dend_15 { pt3dadd( 2.00669, -33.8727, -23.4385, 0.55 ) }
    dend_15 { pt3dadd( 2.7848, -32.9843, -24.979, 0.55 ) }
    dend_15 { pt3dadd( 3.56284, -32.0255, -26.4505, 0.28 ) }
    dend_15 { pt3dadd( 4.83686, -30.4098, -28.6247, 0.55 ) }
    dend_15 { pt3dadd( 6.86772, -27.8892, -31.7145, 0.28 ) }
    dend_15 { pt3dadd( 6.99702, -27.7335, -32.0455, 0.55 ) }
    dend_15 { pt3dadd( 7.33624, -27.1931, -34.4856, 0.28 ) }
    dend_15 { pt3dadd( 7.29575, -26.9548, -36.1783, 0.55 ) }
    dend_15 { pt3dadd( 7.09074, -26.8409, -38.0178, 0.55 ) }
    dend_15 { pt3dadd( 6.68958, -26.8072, -41.328, 0.55 ) }
    dend_15 { pt3dadd( 5.9238, -26.7851, -47.8283, 0.55 ) }
    dend_15 { pt3dadd( 5.49033, -26.808, -52.2038, 0.55 ) }
    dend_15 { pt3dadd( 5.3819, -26.8253, -53.718, 0.55 ) }
    dend_15 { pt3dadd( 4.89721, -26.8383, -63.6782, 0.55 ) }
    dend_15 { pt3dadd( 4.87599, -26.7921, -66.3768, 0.55 ) }
    dend_15 { pt3dadd( 4.97753, -26.7553, -67.891, 0.55 ) }
    dend_15 { pt3dadd( 5.52834, -26.726, -71.4027, 0.55 ) }
    dend_15 { pt3dadd( 7.37875, -27.0305, -79.7711, 0.55 ) }
    dend_15 { pt3dadd( 7.98153, -27.1943, -82.0085, 0.28 ) }
    dend_15 { pt3dadd( 8.42593, -27.3349, -83.2595, 0.55 ) }
    dend_15 { pt3dadd( 9.12651, -27.6165, -85.1051, 0.28 ) }
    dend_15 { pt3dadd( 9.47791, -27.8039, -85.8458, 0.55 ) }
    dend_15 { pt3dadd( 11.07, -28.6601, -87.7554, 0.28 ) }
    dend_15 { pt3dadd( 12.7683, -29.8963, -88.3345, 0.55 ) }
    dend_15 { pt3dadd( 13.8153, -30.7918, -88.6185, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 14.8162, -31.795, -88.7667, 0.55 ) }
    dend_15 { pt3dadd( 15.7266, -32.9034, -88.8266, 0.28 ) }
    dend_15 { pt3dadd( 16.124, -33.4794, -88.8677, 0.55 ) }
    dend_15 { pt3dadd( 17.0733, -34.9974, -88.8949, 0.28 ) }
    dend_15 { pt3dadd( 17.307, -35.4519, -88.9715, 0.55 ) }
    dend_15 { pt3dadd( 18.6038, -38.0556, -89.5611, 0.28 ) }
    dend_15 { pt3dadd( 19.2062, -39.2531, -90.0032, 0.55 ) }
    dend_15 { pt3dadd( 20.5286, -41.7947, -91.2703, 0.28 ) }
    dend_15 { pt3dadd( 21.0344, -42.7242, -91.8562, 0.55 ) }
    dend_15 { pt3dadd( 22.7831, -45.7586, -94.0063, 0.28 ) }
    dend_15 { pt3dadd( 23.2063, -46.4951, -94.5641, 0.55 ) }
    dend_15 { pt3dadd( 24.4579, -48.8318, -96.4069, 0.28 ) }
    dend_15 { pt3dadd( 24.7263, -49.3839, -96.7863, 0.55 ) }
    dend_15 { pt3dadd( 25.3866, -50.8482, -97.7642, 0.28 ) }
    dend_15 { pt3dadd( 25.76, -51.6949, -98.4212, 0.55 ) }
    dend_15 { pt3dadd( 26.1427, -52.5215, -99.1436, 0.55 ) }
    dend_15 { pt3dadd( 26.91, -54.1711, -100.572, 0.28 ) }
    dend_15 { pt3dadd( 27.4603, -55.1783, -101.605, 0.55 ) }
    dend_15 { pt3dadd( 29.242, -57.6242, -104.926, 0.28 ) }
    dend_15 { pt3dadd( 29.9294, -58.3963, -106.263, 0.55 ) }
    dend_15 { pt3dadd( 30.4179, -58.8788, -107.172, 0.28 ) }
    dend_15 { pt3dadd( 30.9267, -59.3097, -108.084, 0.55 ) }
    dend_15 { pt3dadd( 32.5418, -60.4892, -110.853, 0.28 ) }
    dend_15 { pt3dadd( 33.7931, -61.4086, -112.906, 0.55 ) }
    dend_15 { pt3dadd( 36.051, -63.1957, -116.195, 0.28 ) }
    dend_15 { pt3dadd( 36.7652, -63.7504, -117.226, 0.55 ) }
    dend_15 { pt3dadd( 38.2146, -64.7609, -119.055, 0.28 ) }
    dend_15 { pt3dadd( 38.721, -65.0914, -119.617, 0.55 ) }
    dend_15 { pt3dadd( 39.6217, -65.6192, -120.358, 0.28 ) }
    dend_15 { pt3dadd( 40.4468, -66.0607, -120.939, 0.55 ) }
    dend_15 { pt3dadd( 42.7761, -67.1353, -122.269, 0.28 ) }
    dend_15 { pt3dadd( 45.464, -68.2541, -123.749, 0.28 ) }
    dend_15 { pt3dadd( 46.8587, -68.7577, -124.4, 0.28 ) }
    dend_15 { pt3dadd( 48.2352, -69.219, -125.139, 0.55 ) }
    dend_15 { pt3dadd( 50.2429, -69.7957, -126.224, 0.28 ) }
    dend_15 { pt3dadd( 51.1425, -70.0385, -126.687, 0.83 ) }
    dend_15 { pt3dadd( 53.4683, -70.6906, -127.782, 0.28 ) }
    dend_15 { pt3dadd( 54.4582, -70.9961, -128.312, 0.55 ) }
    dend_15 { pt3dadd( 58.7393, -72.5082, -130.853, 0.28 ) }
    dend_15 { pt3dadd( 60.8162, -73.2885, -132.298, 0.28 ) }
    dend_15 { pt3dadd( 62.2869, -73.8542, -133.452, 0.55 ) }
    dend_15 { pt3dadd( 63.1029, -74.2028, -134.227, 0.55 ) }
    dend_15 { pt3dadd( 65.1889, -75.1609, -136.475, 0.28 ) }
    dend_15 { pt3dadd( 67.0997, -76.1649, -138.67, 0.55 ) }
    dend_15 { pt3dadd( 68.8397, -77.1478, -140.67, 0.28 ) }
    dend_15 { pt3dadd( 70.3701, -78.0646, -142.576, 0.55 ) }
    dend_15 { pt3dadd( 71.6396, -78.8027, -144.143, 0.28 ) }
    dend_15 { pt3dadd( 72.7093, -79.3103, -145.357, 0.55 ) }
    dend_15 { pt3dadd( 75.3534, -80.3515, -148.143, 0.28 ) }
    dend_15 { pt3dadd( 76.7223, -80.8772, -149.493, 0.55 ) }
    dend_15 { pt3dadd( 78.8162, -81.6744, -151.437, 0.28 ) }
    dend_15 { pt3dadd( 80.5491, -82.2683, -152.982, 0.55 ) }
    dend_15 { pt3dadd( 84.6017, -83.4485, -156.602, 0.28 ) }
    dend_15 { pt3dadd( 86.1982, -83.8176, -158.194, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 5.0274, -150.345, 103.308, 0.55 ) }
    dend_9 { pt3dadd( 6.42287, -160.168, 107.875, 0.55 ) }
    dend_9 { pt3dadd( 8.97489, -170.574, 109.991, 0.55 ) }
    dend_9 { pt3dadd( 10.8359, -180.719, 113.582, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.0274, -150.345, 103.308, 0.55 ) }
    dend_8 { pt3dadd( 7.44263, -160.136, 110.301, 0.55 ) }
    dend_8 { pt3dadd( 8.17541, -168.682, 119.079, 0.55 ) }
    dend_8 { pt3dadd( 8.84136, -175.24, 129.43, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.37791, -152.596, 105.349, 0.55 ) }
    dend_6 { pt3dadd( 1.76158, -159.884, 109.073, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.37791, -152.596, 105.349, 0.55 ) }
    dend_5 { pt3dadd( 0.0418701, -163.877, 113.178, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 11.5744, -112.707, 9.45116, 0.83 ) }
    dend_25 { pt3dadd( 12.3986, -115.718, 9.93674, 0.83 ) }
    dend_25 { pt3dadd( 13.2225, -118.245, 10.5267, 0.83 ) }
    dend_25 { pt3dadd( 14.0414, -120.756, 11.1132, 0.83 ) }
    dend_25 { pt3dadd( 14.8191, -123.141, 11.6702, 0.83 ) }
    dend_25 { pt3dadd( 16.0176, -126.816, 12.5285, 0.83 ) }
    dend_25 { pt3dadd( 17.2075, -130.464, 13.3806, 0.83 ) }
    dend_25 { pt3dadd( 18.2109, -132.861, 14.2464, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 11.5744, -112.707, 9.45116, 0.55 ) }
    dend_24 { pt3dadd( 13.1386, -114.755, 9.42174, 0.55 ) }
    dend_24 { pt3dadd( 14.3209, -116.365, 9.11815, 0.55 ) }
    dend_24 { pt3dadd( 15.1316, -117.561, 8.7785, 0.55 ) }
    dend_24 { pt3dadd( 15.8547, -118.976, 8.2175, 0.83 ) }
    dend_24 { pt3dadd( 16.5559, -120.595, 7.39254, 0.55 ) }
    dend_24 { pt3dadd( 17.2418, -122.178, 6.58562, 0.83 ) }
    dend_24 { pt3dadd( 17.8777, -123.903, 5.55921, 0.55 ) }
    dend_24 { pt3dadd( 18.2381, -124.908, 4.87156, 0.83 ) }
    dend_24 { pt3dadd( 19.251, -128.171, 2.40567, 0.55 ) }
    dend_24 { pt3dadd( 19.8266, -130.746, 0.32689, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.9851, -96.3427, 43.5807, 0.55 ) }
    dend_20 { pt3dadd( 9.07743, -104.17, 50.5056, 0.55 ) }
    dend_20 { pt3dadd( 5.7778, -111.027, 57.9183, 0.55 ) }
    dend_20 { pt3dadd( 1.82373, -116.893, 65.8436, 0.55 ) }
    dend_20 { pt3dadd( -3.02298, -121.558, 74.0658, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.9851, -96.3427, 43.5807, 0.55 ) }
    dend_19 { pt3dadd( 11.9943, -103.732, 51.8796, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 18.2109, -132.861, 14.2464, 0.55 ) }
    dend_27 { pt3dadd( 18.46, -135.181, 14.9361, 0.55 ) }
    dend_27 { pt3dadd( 18.862, -138.136, 15.8899, 0.55 ) }
    dend_27 { pt3dadd( 19.242, -140.928, 16.7747, 0.55 ) }
    dend_27 { pt3dadd( 19.4881, -142.914, 17.3736, 0.55 ) }
    dend_27 { pt3dadd( 19.8857, -146.462, 18.3877, 0.55 ) }
    dend_27 { pt3dadd( 21.1505, -156.441, 20.9758, 0.55 ) }
    dend_27 { pt3dadd( 21.6591, -159.832, 21.7041, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 22.0238, -162.227, 22.0955, 0.55 ) }
    dend_27 { pt3dadd( 22.457, -164.97, 22.3198, 0.55 ) }
    dend_27 { pt3dadd( 22.7506, -167.1, 22.3045, 0.55 ) }
    dend_27 { pt3dadd( 23.5795, -172.079, 22.0573, 0.55 ) }
    dend_27 { pt3dadd( 24.0761, -175.865, 21.8688, 0.55 ) }
    dend_27 { pt3dadd( 24.4715, -178.346, 21.8164, 0.55 ) }
    dend_27 { pt3dadd( 25.4839, -184.766, 22.0128, 0.55 ) }
    dend_27 { pt3dadd( 26.1429, -189.076, 22.3386, 0.55 ) }
    dend_27 { pt3dadd( 27.0293, -194.62, 23.0731, 0.55 ) }
    dend_27 { pt3dadd( 28.1337, -200.888, 24.3935, 0.55 ) }
    dend_27 { pt3dadd( 29.071, -205.055, 25.531, 0.55 ) }
    dend_27 { pt3dadd( 29.6879, -207.512, 26.268, 0.55 ) }
    dend_27 { pt3dadd( 30.2134, -209.78, 26.9425, 0.55 ) }
    dend_27 { pt3dadd( 30.9239, -212.655, 27.6565, 0.55 ) }
    dend_27 { pt3dadd( 32.5362, -219.606, 28.9021, 0.55 ) }
    dend_27 { pt3dadd( 33.2492, -222.296, 29.2791, 0.55 ) }
    dend_27 { pt3dadd( 33.9696, -225.295, 29.6809, 0.55 ) }
    dend_27 { pt3dadd( 35.0131, -229.801, 30.262, 0.55 ) }
    dend_27 { pt3dadd( 35.6527, -233.272, 30.7488, 0.55 ) }
    dend_27 { pt3dadd( 36.0655, -236.579, 31.1757, 0.55 ) }
    dend_27 { pt3dadd( 36.3173, -239.739, 31.5888, 0.55 ) }
    dend_27 { pt3dadd( 36.5113, -242.823, 32.0393, 0.55 ) }
    dend_27 { pt3dadd( 36.6622, -245.018, 32.3373, 0.55 ) }
    dend_27 { pt3dadd( 36.9273, -248.613, 32.6986, 0.55 ) }
    dend_27 { pt3dadd( 37.1743, -252.945, 32.8029, 0.55 ) }
    dend_27 { pt3dadd( 37.344, -255.052, 32.692, 0.55 ) }
    dend_27 { pt3dadd( 37.5091, -256.907, 32.4527, 0.55 ) }
    dend_27 { pt3dadd( 37.9754, -260.406, 31.7861, 0.55 ) }
    dend_27 { pt3dadd( 38.2465, -262.628, 31.3022, 0.55 ) }
    dend_27 { pt3dadd( 38.6147, -265.362, 30.8087, 0.55 ) }
    dend_27 { pt3dadd( 38.8041, -267.282, 30.5818, 0.55 ) }
    dend_27 { pt3dadd( 39.212, -272.272, 30.1924, 0.55 ) }
    dend_27 { pt3dadd( 39.433, -276.002, 30.174, 0.55 ) }
    dend_27 { pt3dadd( 39.692, -281.763, 30.6261, 0.55 ) }
    dend_27 { pt3dadd( 39.9503, -285.464, 31.2694, 0.55 ) }
    dend_27 { pt3dadd( 40.1948, -289.347, 32.074, 0.28 ) }
    dend_27 { pt3dadd( 40.2557, -290.907, 32.464, 0.28 ) }
    dend_27 { pt3dadd( 40.3951, -294.682, 33.7607, 0.28 ) }
    dend_27 { pt3dadd( 40.4988, -298.159, 35.2419, 0.28 ) }
    dend_27 { pt3dadd( 41.0812, -302.719, 37.6697, 0.28 ) }
    dend_27 { pt3dadd( 43.6955, -313.013, 40.3834, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 18.2109, -132.861, 14.2464, 0.55 ) }
    dend_26 { pt3dadd( 19.3689, -133.306, 15.3133, 0.55 ) }
    dend_26 { pt3dadd( 21.6432, -134.482, 17.6934, 0.55 ) }
    dend_26 { pt3dadd( 23.5547, -135.658, 19.8419, 0.28 ) }
    dend_26 { pt3dadd( 25.5635, -137.004, 22.2178, 0.55 ) }
    dend_26 { pt3dadd( 26.6511, -137.868, 23.8422, 0.28 ) }
    dend_26 { pt3dadd( 28.3864, -139.432, 26.8845, 0.55 ) }
    dend_26 { pt3dadd( 28.9169, -140.277, 28.4466, 0.28 ) }
    dend_26 { pt3dadd( 29.0596, -140.584, 29.0787, 0.28 ) }
    dend_26 { pt3dadd( 29.296, -141.017, 30.1784, 0.55 ) }
    dend_26 { pt3dadd( 30.3716, -142.411, 34.2668, 0.28 ) }
    dend_26 { pt3dadd( 30.8649, -142.949, 35.9638, 0.55 ) }
    dend_26 { pt3dadd( 32.6774, -144.496, 40.723, 0.28 ) }
    dend_26 { pt3dadd( 33.7686, -145.247, 43.18, 0.28 ) }
    dend_26 { pt3dadd( 35.2416, -146.213, 46.1127, 0.55 ) }
    dend_26 { pt3dadd( 37.6775, -147.717, 50.1906, 0.28 ) }
    dend_26 { pt3dadd( 38.0461, -147.915, 50.6943, 0.55 ) }
    dend_26 { pt3dadd( 39.9789, -148.877, 53.023, 0.28 ) }
    dend_26 { pt3dadd( 40.1714, -148.966, 53.2119, 0.55 ) }
    dend_26 { pt3dadd( 41.8421, -150.06, 54.9397, 0.28 ) }
    dend_26 { pt3dadd( 42.602, -150.665, 55.8158, 0.55 ) }
    dend_26 { pt3dadd( 48.7817, -155.101, 63.0773, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -3.02298, -121.558, 74.0658, 0.55 ) }
    dend_22 { pt3dadd( -4.66678, -125.929, 85.1657, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.02298, -121.558, 74.0658, 0.55 ) }
    dend_21 { pt3dadd( -8.48615, -131.375, 81.5779, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 7
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 13
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_BP_bf9275d56a_0_0


