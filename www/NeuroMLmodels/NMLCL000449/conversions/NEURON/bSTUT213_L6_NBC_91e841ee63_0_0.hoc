// Cell: bSTUT213_L6_NBC_91e841ee63_0_0
/*
{
  "id" : "bSTUT213_L6_NBC_91e841ee63_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.873478, -12.1204, -1.0889, 3.2264", "-0.698655, -10.9282, -0.984246, 5.56239", "-0.523832, -9.73588, -0.879587, 7.69458", "-0.349009, -8.5436, -0.774929, 10.6304", "-0.174186, -7.35132, -0.670271, 12.3889", "6.37175E-4, -6.15904, -0.565612, 13.0429", "0.17546, -4.96676, -0.460954, 13.3962", "0.350283, -3.77448, -0.356295, 13.6031", "0.525106, -2.5822, -0.251637, 13.7768", "0.699929, -1.38992, -0.146979, 13.7572", "0.874752, -0.197642, -0.0423202, 13.4519", "1.04958, 0.994638, 0.0623382, 13.1714", "1.2244, 2.18692, 0.166997, 12.4149", "1.39922, 3.3792, 0.271655, 11.5059", "1.57404, 4.57148, 0.376313, 10.5982", "1.74887, 5.76376, 0.480972, 9.84377", "1.92369, 6.95604, 0.58563, 9.16735", "2.09851, 8.14832, 0.690289, 7.18404", "2.27334, 9.34059, 0.794947, 5.28238", "2.44816, 10.5329, 0.899606, 3.93844", "2.62298, 11.7252, 1.00426, 2.5386" ]
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "3.61398, 11.3404, -0.788928, 2.06", "3.61398, 11.3404, -0.788928, 2.06", "3.85366, 12.3745, -0.788928, 2.06", "3.90266, 12.5859, -0.788928, 2.06", "4.20632, 13.896, -0.788928, 2.06", "4.48734, 15.1084, -0.788928, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.65398, 9.44994, -2.84893, 1.77", "4.65395, 11.377, -6.08133, 1.62", "5.50774, 12.6367, -7.8631, 1.62", "5.54002, 12.6769, -7.94062, 1.62", "6.29801, 13.4597, -9.77477, 1.47", "6.3746, 13.5215, -9.94935, 1.47", "8.2303, 14.6306, -13.9563, 1.47", "9.94685, 15.1198, -17.2135, 1.92", "13.0706, 15.7044, -23.1261, 1.92", "14.124, 15.8428, -25.1441, 1.92", "15.1925, 15.8777, -27.2464, 1.92", "16.2167, 15.8559, -29.297, 1.84", "17.6604, 15.6301, -32.2373, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.85602, 7.64494, 2.46107, 1.62", "-2.85602, 7.64494, 2.46107, 1.62", "-3.11727, 7.90305, 2.55296, 1.62", "-3.14076, 7.92596, 2.56064, 1.62", "-3.70706, 8.50138, 2.73657, 1.84", "-4.16564, 8.97431, 2.87567, 1.84", "-4.65901, 9.4831, 3.02533, 1.62", "-5.20538, 10.0484, 3.1945, 1.62", "-5.83299, 10.7016, 3.39589, 1.92", "-6.15369, 11.0395, 3.49973, 1.92", "-6.17574, 11.0637, 3.50705, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.07398, -8.35306, 1.15107, 2.21", "6.07398, -8.35306, 1.15107, 2.21", "6.68435, -9.37628, 2.74541, 1.84", "7.48335, -10.7158, 4.83251, 1.84", "7.50739, -10.7561, 4.8953, 1.84", "8.33324, -12.1405, 7.05255, 1.62", "9.20144, -13.596, 9.3204, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.38602, -10.5571, -1.22893, 3.24", "-2.38602, -10.5571, -1.22893, 3.24", "-2.72777, -11.6037, -1.21521, 3.24", "-3.14087, -12.8688, -1.19862, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998293907579
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62298, 11.7252, 1.00426, 0.668637", "4.79915, 26.5665, 1.00426, 0.668637", "6.97531, 41.4078, 1.00426, 0.668637" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "4.48734, 15.1084, -0.788928, 1.47", "5.62967, 15.9374, 0.213089, 1.47", "8.66494, 18.3455, 2.21472, 1.18", "8.71775, 18.3928, 2.23972, 1.18", "9.96568, 19.549, 2.53974, 1.18", "11.358, 20.8606, 2.64835, 1.18", "11.4045, 20.9049, 2.64822, 1.18", "12.6263, 22.1645, 2.31283, 1.4", "13.7732, 23.4084, 1.73196, 1.4", "15.0251, 24.8623, 1.09541, 1.18", "15.8317, 25.8917, 0.67143, 1.18", "15.8818, 25.9577, 0.651937, 1.18", "16.6305, 26.9418, 0.441638, 1.18", "16.6832, 27.0085, 0.438709, 1.18", "17.7467, 28.2716, 0.626689, 1.18", "17.8027, 28.3323, 0.648599, 1.18", "19.4445, 29.9373, 1.3149, 1.18", "19.4901, 29.9788, 1.33332, 1.18", "20.6466, 30.9524, 1.74438, 1.18", "21.7117, 31.8284, 2.07898, 1.18", "23.5693, 33.3073, 2.6119, 1.03", "25.1289, 34.6259, 3.02553, 1.03", "25.1755, 34.6684, 3.03838, 1.03", "26.5595, 35.963, 3.40012, 0.81", "27.6656, 37.0539, 3.6616, 0.81", "27.7089, 37.0997, 3.67317, 0.81", "29.2829, 38.9353, 4.0994, 1.03", "30.794, 40.846, 4.66751, 1.03" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.48734, 15.1084, -0.788928, 1.11", "3.28722, 17.5364, 0.229721, 1.11", "2.95405, 18.3394, 0.404997, 1.11", "2.63298, 19.1132, 0.573911, 1.03", "2.06643, 20.4786, 0.871971, 1.25", "2.04302, 20.535, 0.884288, 1.25", "1.39746, 22.0909, 1.22391, 1.25", "0.969274, 23.1874, 1.15977, 1.47" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "17.6604, 15.6301, -32.2373, 1.55", "17.0823, 12.4454, -36.364, 1.55", "16.9926, 11.4878, -37.2786, 0.81", "16.9232, 10.5852, -37.9458, 0.81", "16.8169, 9.26112, -38.8136, 0.81", "16.8035, 9.18015, -38.8698, 0.81", "16.5155, 8.18704, -39.7193, 1.11", "16.2723, 7.47853, -40.2064, 0.81", "15.7375, 6.64567, -41.1259, 0.59", "15.6699, 6.57819, -41.2314, 0.59", "14.569, 5.72754, -42.8353, 0.59", "13.2291, 4.7523, -44.72, 1.25", "13.1899, 4.72616, -44.7739, 1.25", "11.7144, 3.75961, -46.7476, 1.18", "10.1123, 2.72175, -48.8992, 0.81", "8.50674, 1.61656, -51.0524, 0.52", "7.91383, 1.16266, -51.8335, 0.52", "7.86787, 1.12596, -51.8897, 0.52", "7.43521, 0.773403, -52.412, 0.52" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "17.6604, 15.6301, -32.2373, 1.4", "20.6012, 14.5766, -33.383, 1.4", "24.0847, 13.3286, -34.7401, 1.4", "24.1636, 13.3003, -34.7709, 1.4", "25.9946, 12.6444, -35.4842, 1.4", "26.1716, 12.581, -35.5532, 1.4" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.17574, 11.0637, 3.50705, 0.88", "-6.67062, 12.229, 3.9101, 0.88", "-6.92255, 12.8852, 4.12423, 0.88", "-7.29075, 13.9881, 4.45481, 0.88", "-7.83698, 15.7956, 4.97138, 0.74", "-8.13964, 16.9693, 5.30683, 0.74", "-8.29779, 17.7115, 5.50917, 1.03", "-8.30758, 17.7931, 5.52736, 1.03", "-8.34543, 18.6773, 5.7574, 1.03", "-8.34455, 18.7919, 5.7895, 1.03", "-8.38227, 19.937, 6.20212, 0.88", "-8.59031, 21.1028, 6.79689, 1.18", "-8.6109, 21.1639, 6.83416, 1.18", "-9.11493, 22.3003, 7.59504, 1.18", "-9.69571, 23.3564, 8.37131, 0.81", "-10.4859, 24.5985, 9.33741, 0.81", "-11.5852, 26.1183, 10.544, 0.81", "-12.3816, 27.1395, 11.3619, 0.81", "-12.4216, 27.1903, 11.4006, 0.81", "-13.1015, 28.0913, 12.0097, 0.66", "-13.1377, 28.1478, 12.0432, 0.66", "-13.6027, 29.2748, 12.5008, 0.66", "-13.6559, 29.5688, 12.605, 0.66", "-13.7016, 30.5255, 13.0129, 0.96", "-13.6824, 31.6002, 13.5093, 0.96", "-13.6495, 31.9996, 13.7041, 0.96", "-13.5895, 32.551, 13.9894, 0.96", "-13.3732, 33.9668, 14.8016, 0.81", "-13.1714, 35.1336, 15.5056, 0.81", "-12.9771, 36.0593, 16.1018, 0.81", "-12.9595, 36.1491, 16.1682, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-6.17574, 11.0637, 3.50705, 0.88", "-6.18849, 11.5577, 3.44863, 0.88", "-6.19363, 12.1449, 3.37233, 0.74", "-6.19141, 12.8509, 3.27385, 0.74", "-6.19101, 12.9068, 3.26541, 0.74", "-6.15872, 14.1327, 3.07525, 0.74", "-6.12296, 14.9769, 2.94604, 0.88", "-6.09907, 15.441, 2.86326, 0.88", "-6.09092, 15.5807, 2.83722, 0.88", "-6.0532, 16.2239, 2.7196, 0.74", "-6.01012, 17.0197, 2.60724, 0.74", "-5.96609, 17.9663, 2.50974, 0.74", "-5.93785, 18.8556, 2.44522, 1.62", "-5.91721, 19.8152, 2.39322, 1.62", "-5.90978, 20.9294, 2.37436, 1.33", "-5.91262, 21.7464, 2.38953, 0.96", "-5.92542, 22.513, 2.42506, 0.96", "-5.93547, 23.1601, 2.47348, 0.96", "-5.93568, 23.2164, 2.47909, 0.96", "-5.94121, 24.0395, 2.56122, 0.96", "-5.9385, 24.99, 2.63401, 0.74", "-5.93158, 25.7028, 2.65361, 0.74", "-5.93057, 25.7594, 2.65416, 0.74", "-5.92973, 26.283, 2.58019, 1.03", "-5.93084, 26.3455, 2.56351, 1.03", "-5.95365, 26.8972, 2.35039, 1.03", "-5.95731, 26.9491, 2.32743, 1.03", "-6.04706, 27.8722, 1.79876, 1.03", "-6.18867, 29.1162, 0.984565, 1.03", "-6.19535, 29.169, 0.946377, 1.03", "-6.3192, 30.1125, 0.220632, 1.03", "-6.32538, 30.157, 0.184868, 1.03", "-6.46759, 31.1075, -0.562388, 0.88", "-6.47572, 31.1587, -0.602589, 0.88", "-6.52745, 31.517, -0.824131, 0.88", "-6.5353, 31.5663, -0.851566, 0.88", "-6.61008, 32.0482, -1.0827, 0.88", "-6.6483, 32.3473, -1.17643, 0.88", "-6.70357, 32.9499, -1.2796, 0.88", "-6.70766, 33.0055, -1.28872, 0.88", "-6.71743, 33.663, -1.38989, 0.88", "-6.71807, 33.9237, -1.42909, 0.88", "-6.70141, 34.806, -1.55589, 0.88", "-6.66407, 35.7443, -1.6762, 1.03", "-6.66067, 35.8085, -1.68241, 1.03", "-6.58522, 36.8837, -1.78866, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.20144, -13.596, 9.3204, 1.11", "11.5885, -17.1046, 10.3143, 1.11", "12.593, -18.521, 10.5808, 1.11", "12.7002, -18.653, 10.5612, 1.11", "13.6542, -19.6498, 10.2673, 1.33", "14.9957, -20.8617, 9.79177, 1.11", "17.1216, -22.6034, 9.05145, 1.11", "17.1816, -22.6505, 9.02432, 1.11", "20.0723, -24.7268, 7.70507, 1.25", "22.2594, -26.2299, 6.69692, 1.55", "24.3613, -27.5392, 5.72074, 1.55", "25.6137, -28.2637, 5.1071, 1.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.20144, -13.596, 9.3204, 1.47", "9.47698, -17.3685, 17.001, 1.47", "9.55435, -18.3598, 18.7056, 1.03", "9.67365, -19.1031, 19.6487, 1.03", "9.98909, -20.507, 21.1188, 0.88", "10.0087, -20.57, 21.1765, 0.88", "10.5775, -22.194, 22.57, 0.88", "10.6017, -22.248, 22.5975, 0.88", "12.011, -24.7535, 23.9453, 0.88", "12.7254, -25.7519, 24.5465, 1.47", "14.1685, -27.4408, 25.6671, 0.88", "14.2222, -27.4961, 25.7102, 0.88", "15.7739, -28.8164, 26.9361, 0.74", "15.8969, -28.9061, 27.0397, 0.74", "17.1436, -29.6199, 28.1628, 0.74", "17.2227, -29.6585, 28.2303, 0.74", "18.4994, -30.185, 29.3526, 1.33", "19.5283, -30.5833, 30.3578, 0.96", "21.1346, -31.2155, 31.9937, 1.11", "21.1863, -31.2369, 32.0489, 1.11", "22.04, -31.6381, 33.0319, 1.11", "23.4023, -32.425, 34.5539, 0.81", "24.4036, -33.1029, 35.6292, 1.25", "25.1811, -33.7886, 36.5332, 0.88", "25.2219, -33.8346, 36.5803, 0.88", "26.0471, -35.0792, 37.6225, 0.81", "26.4961, -36.2702, 38.3447, 0.81", "26.5121, -36.3708, 38.3793, 0.81", "26.5359, -38.0326, 38.8166, 0.81", "26.5309, -38.0949, 38.8319, 0.81", "26.3888, -39.2343, 39.0818, 0.81", "26.2935, -40.2888, 39.3565, 1.18", "26.2691, -41.3376, 39.7178, 0.88", "26.5064, -42.5133, 40.3884, 0.59", "26.9356, -43.3576, 41.2854, 0.59", "26.967, -43.4087, 41.3504, 0.59", "28.04, -44.8728, 43.5286, 0.59", "28.0742, -44.9165, 43.5981, 0.59", "29.36, -46.5552, 46.0074, 0.81", "30.4456, -47.9972, 48.0294, 0.81", "31.0732, -48.8922, 49.2492, 0.81", "31.1145, -48.9521, 49.3313, 0.81", "32.0717, -50.4162, 51.3017, 0.74", "33.0277, -51.7877, 53.0994, 0.52", "34.1757, -53.3644, 55.0321, 0.52", "34.2698, -53.4676, 55.1586, 0.52", "35.7009, -54.724, 56.9143, 0.52", "35.7445, -54.7631, 56.9654, 0.52", "36.3873, -55.364, 57.7402, 0.52", "36.4749, -55.4691, 57.8621, 0.52", "37.021, -56.477, 58.5488, 0.52", "37.1062, -56.6971, 58.6646, 0.52", "37.7715, -58.7351, 59.5532, 0.52", "38.2201, -59.9621, 60.1199, 0.52", "38.3421, -60.2961, 60.2809, 0.52", "38.7267, -61.3614, 60.802, 0.52", "38.763, -61.4593, 60.851, 0.52", "39.4817, -62.7953, 61.5608, 0.52", "40.0626, -63.2981, 61.9087, 0.88", "40.1963, -63.3824, 61.9623, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.14087, -12.8688, -1.19862, 0.59", "-4.00358, -13.0954, -1.31952, 0.59", "-5.354, -13.4861, -1.34803, 0.59", "-7.01143, -14.0019, -1.26241, 0.59", "-7.66, -14.223, -1.19963, 0.59", "-9.94921, -15.114, -0.918511, 0.88", "-11.0648, -15.601, -0.804267, 0.88", "-12.3006, -16.2072, -0.651941, 0.96", "-13.3455, -16.7681, -0.518341, 1.25", "-14.3579, -17.3731, -0.434732, 1.47", "-15.6791, -18.1202, -0.663176, 1.11", "-17.2984, -18.9537, -1.3971, 1.03", "-18.0692, -19.3129, -1.85079, 1.03", "-18.1538, -19.3487, -1.90845, 1.03", "-19.8855, -20.0503, -3.18165, 1.55", "-23.4676, -21.4713, -5.9229, 0.66", "-24.8407, -22.0402, -6.97056, 0.66", "-25.6106, -22.4093, -7.56156, 0.66", "-25.6621, -22.4397, -7.6, 0.66", "-26.4511, -23.0052, -8.14479, 0.74", "-27.1172, -23.6306, -8.5339, 1.03", "-27.8991, -24.7657, -9.0096, 1.03", "-28.8772, -26.2822, -9.57423, 1.25", "-29.4415, -27.1666, -9.93737, 1.18", "-29.5052, -27.259, -9.97786, 1.18", "-30.0267, -27.8734, -10.3374, 0.52", "-30.0775, -27.912, -10.3679, 0.52", "-31.0127, -28.2251, -10.8346, 0.52", "-31.0793, -28.2337, -10.86, 0.52", "-31.5764, -28.2606, -11.0835, 0.52", "-33.146, -28.3074, -11.8028, 0.88", "-34.2647, -28.3208, -12.3191, 1.25", "-35.7709, -28.3514, -13.0401, 1.25", "-36.5887, -28.377, -13.4456, 0.88", "-38.0595, -28.5163, -14.1681, 0.88", "-38.7058, -28.6627, -14.5199, 0.52", "-39.0645, -28.8276, -14.7203, 0.52", "-39.3215, -29.0149, -14.9182, 0.52", "-39.6279, -29.2501, -15.1936, 0.52", "-40.2024, -29.6579, -15.7602, 0.52", "-41.2982, -30.3842, -16.8619, 0.88", "-42.0097, -30.8339, -17.5941, 1.25", "-43.9829, -32.0006, -19.5281, 1.62", "-45.6248, -32.9279, -20.9937, 1.55", "-47.0555, -33.6963, -22.1802, 0.81", "-47.1351, -33.7375, -22.2408, 0.81", "-47.579, -33.982, -22.5318, 0.37", "-48.5965, -34.6369, -23.1017, 0.37", "-49.7643, -35.6203, -23.4734, 0.37", "-49.8125, -35.6707, -23.4792, 0.37", "-50.516, -36.4113, -23.5747, 1.03", "-51.2043, -37.1174, -23.6936, 1.47", "-51.9365, -37.8703, -23.8323, 0.96", "-52.5058, -38.4585, -23.9517, 0.29", "-54.0608, -40.038, -24.2915, 0.29", "-56.1483, -42.108, -24.7307, 0.29", "-57.1943, -43.0953, -24.934, 0.29", "-57.9124, -43.7328, -25.0884, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.14087, -12.8688, -1.19862, 2.36", "-3.23391, -13.1718, -1.23932, 2.36", "-3.55807, -14.2093, -1.3318, 2.36", "-4.1215, -16.0124, -1.49254, 1.99", "-4.65631, -17.724, -1.64512, 1.99", "-5.13256, -19.2481, -1.78098, 2.14", "-5.65979, -20.9354, -1.9314, 3.02", "-5.96935, -21.8605, -2.00035, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.97531, 41.4078, 1.00426, 1.18", "9.15148, 56.2491, 1.00426, 1.18", "11.3276, 71.0904, 1.00426, 1.18" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "30.794, 40.846, 4.66751, 0.74", "31.0557, 43.1403, 5.98615, 0.74", "31.0638, 43.1968, 6.00583, 0.74", "31.2312, 43.9494, 6.21537, 0.74", "31.416, 44.6308, 6.37282, 0.59", "31.6271, 45.3338, 6.50696, 0.59", "31.8086, 45.9152, 6.59985, 0.59", "31.8249, 45.9653, 6.59935, 0.59", "32.0697, 46.6638, 6.62641, 0.22", "32.2128, 47.0366, 6.65627, 0.81", "32.3945, 47.5101, 6.71175, 1.03", "32.5736, 47.9044, 6.7993, 1.03", "32.9357, 48.6518, 7.00124, 0.81", "33.3361, 49.4296, 7.22435, 0.59", "33.8624, 50.4408, 7.51509, 0.59", "33.8974, 50.5035, 7.53747, 0.59", "34.7384, 51.9255, 8.1079, 0.59", "34.7645, 51.9683, 8.12584, 0.59", "35.0996, 52.5217, 8.3838, 0.44", "35.4247, 53.0847, 8.70711, 0.44", "36.0243, 54.308, 9.46246, 0.44", "36.1632, 54.6527, 9.67072, 0.96", "36.2788, 55.0932, 9.90937, 0.96", "36.4613, 55.9462, 10.3628, 0.59", "36.5889, 56.7282, 10.7489, 0.29", "36.6597, 57.3159, 11.0009, 0.29", "36.6647, 57.4243, 11.0318, 0.29", "36.6876, 58.5654, 11.2481, 0.29", "36.6879, 58.6253, 11.2515, 0.29", "36.6782, 59.3368, 11.1452, 0.29", "36.6746, 59.4455, 11.1159, 0.81", "36.6321, 59.9688, 10.9561, 0.81", "36.5747, 60.3193, 10.8427, 0.29", "36.3478, 60.9174, 10.6591, 0.29", "35.9847, 61.547, 10.4881, 0.29", "35.8975, 61.6669, 10.4583, 0.29", "35.4561, 62.171, 10.3171, 0.29", "35.23, 62.3944, 10.2504, 0.29", "34.2021, 63.2708, 9.99098, 0.29", "33.2974, 63.9371, 9.78151, 0.29", "33.2396, 63.9776, 9.7696, 0.29", "32.1508, 64.7246, 9.53017, 0.29", "32.0556, 64.7877, 9.50704, 0.29", "31.4915, 65.1457, 9.35841, 0.29", "30.9693, 65.4375, 9.20386, 0.81", "30.3339, 65.7382, 9.04547, 0.81", "30.0843, 73.0202, 10.9107, 0.81", "30.1842, 79.9618, 13.8999, 0.81" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "30.794, 40.846, 4.66751, 1.03", "32.5672, 41.1698, 5.58286, 1.03", "33.634, 41.3861, 6.09114, 0.74", "35.0948, 41.8219, 6.68284, 0.74", "35.1439, 41.8431, 6.69932, 0.74", "35.9899, 42.3067, 6.83756, 0.52", "36.5554, 42.6684, 6.83602, 0.52", "36.6228, 42.7249, 6.81191, 0.52", "37.4969, 43.5693, 6.49416, 0.81", "38.1272, 44.2273, 6.25005, 1.11", "39.3232, 45.4244, 6.09275, 0.66", "39.904, 45.9952, 6.14452, 0.59", "40.6387, 46.5806, 6.4865, 0.59", "41.942, 47.4369, 7.48642, 0.59", "41.9934, 47.4618, 7.53474, 0.59", "43.5505, 48.0779, 9.08818, 0.59", "43.6006, 48.0959, 9.14107, 0.59", "44.7779, 48.5382, 10.3324, 1.25", "44.8314, 48.5615, 10.3794, 1.25", "45.8454, 49.1304, 11.0029, 0.96", "47.1575, 49.9721, 11.5349, 0.66", "47.2315, 50.0241, 11.5492, 0.66", "48.2484, 50.7893, 11.6556, 0.59", "49.2972, 51.6587, 11.6471, 0.59", "50.1744, 52.4217, 11.6106, 0.59", "50.7614, 52.9814, 11.5545, 0.59", "51.0576, 53.2533, 11.5144, 0.59", "51.4311, 53.5552, 11.475, 0.81", "52.0944, 54.0194, 11.4222, 0.81", "52.352, 54.1776, 11.4093, 0.81", "53.3608, 54.7683, 11.4046, 0.81", "54.3521, 55.3415, 11.4041, 0.44", "55.215, 55.8331, 11.4044, 0.44", "55.3011, 55.8815, 11.4041, 0.44", "56.1358, 56.3527, 11.4261, 0.81", "56.6326, 56.6457, 11.4468, 0.96", "57.3036, 57.0718, 11.5011, 0.81", "57.3558, 57.1096, 11.5066, 0.81", "58.1918, 57.8248, 11.5529, 0.52", "59.0929, 58.6639, 11.5682, 0.52", "59.5591, 59.1312, 11.5911, 0.81", "60.4605, 60.0796, 11.6525, 0.52", "60.5989, 60.2246, 11.6705, 0.52", "62.1809, 61.839, 11.9268, 0.37", "62.2263, 61.8835, 11.9347, 0.37", "63.2657, 62.8645, 12.1136, 0.37", "63.8316, 63.3691, 12.2251, 1.03", "65.0915, 64.4126, 12.4965, 1.03", "65.1418, 64.4511, 12.5089, 1.03", "65.9739, 65.0234, 12.7679, 1.03", "66.0257, 65.0601, 12.7803, 1.03", "66.7956, 65.6448, 12.8856, 0.66", "66.8534, 65.6902, 12.8919, 0.66", "67.3497, 66.1291, 12.9029, 0.66", "67.4259, 66.1996, 12.906, 0.66", "67.9072, 66.6853, 12.9439, 0.66", "68.9192, 67.7245, 13.0317, 0.29" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "0.969274, 23.1874, 1.15977, 0.96", "0.984379, 23.659, 1.16112, 0.96", "0.955842, 24.6329, 1.13617, 0.74", "0.795189, 25.8967, 1.07491, 0.74", "0.785713, 25.9518, 1.07144, 0.74", "0.535281, 27.0619, 0.989211, 0.66", "0.272414, 28.0911, 0.907022, 0.66", "0.219306, 28.2365, 0.897471, 0.66", "-0.314917, 29.1225, 0.808223, 1.03", "-0.35124, 29.1664, 0.805795, 1.03", "-0.880767, 29.714, 0.828533, 1.03", "-0.929732, 29.7589, 0.837072, 1.03", "-1.47481, 30.2381, 0.962554, 0.81", "-2.54039, 31.2076, 1.3134, 0.81", "-3.31087, 31.9433, 1.61938, 0.81", "-4.19583, 32.7966, 2.05869, 0.66", "-5.03736, 33.6367, 2.54606, 0.66", "-5.07937, 33.6816, 2.57248, 0.66", "-5.95743, 34.7442, 3.18984, 1.03", "-6.45327, 35.4277, 3.59589, 1.03", "-7.12303, 36.4228, 4.21275, 0.96", "-7.41594, 36.9147, 4.53056, 0.96", "-7.78025, 37.6448, 4.98281, 0.52", "-8.10954, 38.4003, 5.43558, 0.52", "-8.12543, 38.4482, 5.46117, 0.52", "-8.37915, 39.5191, 6.00194, 1.11", "-8.4894, 40.3408, 6.33243, 1.11", "-8.58109, 41.1903, 6.70788, 1.03", "-8.58612, 41.2412, 6.73147, 1.03", "-8.69421, 41.8487, 6.98789, 0.66", "-8.7112, 41.9086, 7.00853, 0.66", "-9.08937, 42.5545, 7.13237, 0.44", "-9.68584, 43.1454, 7.22565, 0.44", "-9.9453, 43.3248, 7.27368, 0.44", "-10.6136, 43.7376, 7.54767, 0.44", "-10.783, 43.8443, 7.65381, 0.44", "-11.5874, 44.4395, 8.30203, 0.44", "-11.6241, 44.4747, 8.34657, 0.44", "-12.1876, 45.2427, 9.31649, 0.74", "-12.7128, 46.2535, 10.6547, 0.52", "-12.9303, 46.8747, 11.4391, 0.66", "-13.0587, 47.3862, 12.057, 0.66", "-13.1939, 48.4014, 13.1671, 1.47", "-13.2244, 48.7967, 13.5517, 1.47", "-13.232, 50.4113, 14.7884, 0.66", "-13.2213, 51.2856, 15.3272, 0.66", "-13.2229, 51.4087, 15.3961, 0.66", "-13.3171, 52.4709, 15.9062, 0.66", "-13.3265, 52.5303, 15.9325, 0.66", "-13.6232, 54.1599, 16.6838, 0.66", "-13.6334, 54.2108, 16.7055, 0.66", "-13.8674, 54.9833, 17.1243, 0.66", "-14.2612, 56.1001, 17.8145, 0.66", "-14.6962, 57.1989, 18.5539, 0.88", "-14.7543, 57.3665, 18.6629, 0.88", "-15.0097, 58.2775, 19.2763, 0.88", "-15.2752, 59.5598, 20.0756, 1.11", "-15.3371, 60.0137, 20.3372, 0.88", "-15.4069, 60.6804, 20.6991, 0.59", "-15.575, 61.9103, 21.2581, 0.59", "-15.7597, 62.8671, 21.6712, 0.44", "-15.91, 63.5073, 21.9262, 0.44", "-15.9389, 63.6055, 21.9538, 0.44", "-16.29, 64.3622, 22.1207, 0.44", "-16.5208, 64.7046, 22.173, 0.44", "-16.8103, 65.0294, 22.1786, 0.44", "-16.9553, 65.1938, 22.1617, 0.44", "-17.1569, 65.586, 22.1562, 0.74", "-17.3564, 66.3761, 22.1927, 0.96", "-17.3557, 66.4317, 22.1981, 0.96", "-17.3031, 66.8353, 22.2466, 0.96", "-17.2894, 66.8986, 22.255, 0.96", "-17.0463, 67.906, 22.3878, 0.44", "-17.0332, 67.9695, 22.3952, 0.44", "-16.9509, 68.7919, 22.4621, 0.44", "-16.9496, 68.8907, 22.467, 0.44", "-16.9806, 69.5819, 22.4674, 0.44", "-17.0478, 70.261, 22.4371, 0.96", "-17.2131, 71.3062, 22.3645, 0.96", "-17.5048, 72.5866, 22.2626, 0.96", "-17.7102, 73.2955, 22.1985, 0.96", "-17.8994, 73.9198, 22.142, 0.44", "-18.2106, 74.9162, 22.0549, 0.44", "-18.5865, 76.1367, 21.9581, 0.44", "-18.8794, 77.1338, 21.9044, 0.44", "-18.9071, 77.2358, 21.9025, 0.44", "-19.0958, 77.9759, 21.9286, 0.44", "-19.2389, 78.5659, 21.9817, 0.74", "-19.3464, 79.0556, 22.0431, 0.81", "-19.5211, 79.8853, 22.1622, 0.81", "-19.5396, 79.9756, 22.177, 0.81", "-19.7716, 80.7374, 22.2967, 0.29", "-19.9136, 81.048, 22.3426, 0.29", "-19.9877, 81.1889, 22.3592, 0.29", "-20.2484, 81.6519, 22.3947, 0.29", "-20.3485, 81.8176, 22.3987, 0.29", "-20.6002, 82.2422, 22.3956, 0.29", "-20.6521, 82.328, 22.3916, 0.29", "-21.1036, 83.1036, 22.3518, 0.29", "-21.3371, 83.5042, 22.3371, 0.29", "-21.3747, 83.5696, 22.3357, 0.29", "-21.5153, 83.8044, 22.3347, 0.88", "-21.8203, 84.4102, 22.3448, 0.88", "-22.2394, 85.2747, 22.3346, 0.88", "-22.4792, 85.7403, 22.3169, 0.88", "-22.5104, 85.7982, 22.3133, 0.88", "-23.0107, 86.6816, 22.2359, 0.29", "-23.7797, 88.0002, 22.0928, 0.29", "-24.1243, 88.604, 22.0048, 0.59", "-24.4867, 89.242, 21.8846, 0.59", "-24.7595, 89.7304, 21.7783, 0.29", "-25.0986, 90.3078, 21.639, 0.29", "-25.1695, 90.4159, 21.6093, 0.29", "-25.5982, 90.9756, 21.4445, 0.29", "-25.6554, 91.0565, 21.4264, 0.29", "-26.0167, 91.5924, 21.3114, 0.29", "-26.1586, 91.7972, 21.2716, 0.29", "-26.4827, 92.2276, 21.2525, 0.29", "-26.5306, 92.2865, 21.2558, 0.29", "-27.1409, 92.9916, 21.3398, 0.29", "-27.3899, 93.2697, 21.3781, 1.11", "-27.9235, 93.8523, 21.4651, 1.33", "-28.7453, 94.7635, 21.6108, 0.74", "-29.321, 95.4499, 21.695, 0.44", "-29.8913, 96.187, 21.7515, 0.44", "-30.0178, 96.3652, 21.7565, 0.44", "-30.2046, 96.6539, 21.7475, 0.44", "-30.2737, 96.7754, 21.7249, 0.44", "-30.7473, 97.7158, 21.4282, 0.44", "-31.0635, 98.3574, 21.2061, 1.11", "-31.3729, 98.9989, 20.9746, 1.55", "-31.606, 99.5092, 20.7992, 1.55", "-32.1038, 100.632, 20.4295, 0.22", "-32.4074, 101.353, 20.214, 0.22", "-32.7136, 102.107, 20.0186, 0.22", "-32.7466, 102.199, 19.9974, 0.22", "-33.0132, 103.036, 19.8412, 0.22", "-33.0943, 103.301, 19.8096, 0.22", "-33.2869, 103.956, 19.793, 0.22", "-33.4517, 104.426, 19.7797, 0.96", "-33.55, 104.679, 19.7711, 0.96", "-33.7328, 105.073, 19.768, 0.22", "-33.9939, 105.547, 19.7729, 0.22", "-34.0885, 105.716, 19.7779, 0.22", "-34.8519, 107.094, 19.8434, 0.22", "-34.9164, 107.219, 19.8598, 0.22", "-35.254, 107.896, 19.9881, 0.81", "-35.2815, 107.954, 20.0021, 0.81", "-35.5891, 108.627, 20.198, 1.33", "-35.7761, 109.046, 20.3412, 1.33", "-36.2318, 109.864, 20.6888, 0.15", "-36.4893, 110.258, 20.8575, 0.15", "-36.5488, 110.334, 20.8848, 0.15", "-37.127, 111.02, 21.1089, 0.15", "-37.2105, 111.108, 21.1347, 0.15", "-38.972, 112.852, 21.5711, 0.15", "-39.0885, 112.965, 21.5824, 0.15", "-40.5904, 114.332, 21.5496, 0.15", "-40.7035, 114.429, 21.5356, 1.03", "-41.2347, 114.855, 21.4047, 1.03", "-41.2862, 114.894, 21.3868, 1.03", "-42.4486, 115.696, 20.692, 0.15", "-43.3701, 116.297, 20.0713, 0.15", "-43.4801, 116.357, 19.9764, 0.59", "-43.8769, 116.578, 19.6305, 0.59", "-47.9117, 125.062, 19.7922, 0.59", "-53.6175, 132.564, 18.6787, 0.59", "-60.1977, 139.464, 18.8766, 0.59", "-66.7518, 146.39, 18.7421, 0.59", "-73.8329, 152.827, 18.9373, 0.59", "-79.4881, 160.417, 19.451, 0.59", "-84.9327, 168.16, 19.2595, 0.59" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "0.969274, 23.1874, 1.15977, 0.66", "0.543814, 23.775, 0.630039, 0.66", "-0.136856, 24.384, -0.138037, 0.52", "-0.571634, 24.6959, -0.564321, 0.52", "-0.616221, 24.7265, -0.60288, 0.52", "-1.44731, 25.2905, -1.28088, 0.52", "-1.55445, 25.3662, -1.36693, 0.52", "-2.82357, 26.3507, -2.35715, 0.88", "-3.30647, 26.7969, -2.69561, 0.96", "-3.80884, 27.4377, -3.01838, 0.96", "-3.84192, 27.4901, -3.03763, 0.96", "-4.26956, 28.339, -3.27731, 0.66", "-4.78214, 29.5045, -3.574, 0.66", "-5.24517, 30.7034, -3.83319, 0.66", "-5.93532, 32.3815, -4.19976, 0.66", "-5.96182, 32.4385, -4.21437, 0.66", "-6.5926, 33.6066, -4.54421, 0.44", "-7.05911, 34.3281, -4.76596, 0.44", "-7.56088, 34.9522, -4.99101, 0.88", "-8.38318, 35.8369, -5.36011, 0.88", "-9.11086, 36.5661, -5.67449, 0.44", "-9.60826, 37.0698, -5.87721, 0.96", "-10.1129, 37.5745, -6.06279, 1.25", "-10.7798, 38.2488, -6.30736, 1.25", "-11.6288, 39.0909, -6.54496, 0.52", "-12.4317, 39.8904, -6.67807, 0.29", "-12.5836, 40.0474, -6.6833, 0.29", "-13.1237, 40.624, -6.66412, 0.29", "-13.509, 41.0637, -6.62018, 0.29", "-14.2481, 41.978, -6.46994, 0.29", "-14.7727, 42.7088, -6.31873, 0.29", "-15.0853, 43.2314, -6.22535, 0.29", "-15.3008, 43.6678, -6.16844, 0.29", "-15.642, 44.5352, -6.09457, 0.66", "-15.854, 45.1807, -6.06153, 0.96", "-16.1246, 46.1235, -6.06269, 0.96", "-16.2881, 46.718, -6.05464, 0.96", "-16.456, 47.316, -6.03965, 0.52", "-16.5949, 47.7611, -6.02444, 0.37", "-16.7468, 48.1374, -5.97179, 0.37", "-16.8126, 48.2618, -5.93994, 0.37", "-17.2346, 48.8567, -5.71969, 0.37", "-17.4145, 49.066, -5.63021, 0.37", "-17.7849, 49.4635, -5.46172, 0.37", "-18.6842, 50.3985, -5.08024, 0.37", "-18.8166, 50.5359, -5.02625, 0.37", "-19.4982, 51.2571, -4.82499, 0.37", "-19.8963, 51.6876, -4.76347, 0.66", "-20.3923, 52.2604, -4.75594, 0.66", "-21.0492, 53.1115, -4.86913, 0.66", "-21.0851, 53.1637, -4.8836, 0.66", "-21.8357, 54.3889, -5.24688, 0.29", "-22.1856, 55.0344, -5.46187, 0.29", "-22.271, 55.2083, -5.52325, 0.29", "-22.6055, 55.9769, -5.79263, 0.88", "-22.8328, 56.5907, -5.99165, 0.88", "-22.9654, 56.9714, -6.06813, 0.88", "-23.1357, 57.495, -6.10027, 0.37", "-23.1567, 57.565, -6.10293, 0.37", "-23.3022, 58.0086, -6.10717, 0.37", "-23.3726, 58.1973, -6.10012, 0.37", "-23.8541, 59.2682, -6.03197, 0.37", "-23.8825, 59.326, -6.03093, 0.37", "-24.1179, 59.7763, -6.03551, 1.11", "-24.6843, 60.8079, -6.0774, 1.11", "-25.2385, 61.7693, -6.14009, 1.11", "-25.8168, 62.7593, -6.27125, 1.11", "-26.2511, 63.4974, -6.4143, 1.11", "-26.4403, 63.8169, -6.49147, 0.44", "-26.9585, 64.5773, -6.71045, 0.44", "-27.1037, 64.7682, -6.77208, 0.44", "-27.8807, 65.7123, -7.07679, 0.44", "-27.9229, 65.7603, -7.09034, 0.44", "-28.5045, 66.395, -7.21516, 0.44", "-30.1706, 68.1851, -7.48228, 0.44", "-30.5495, 68.5817, -7.52487, 1.33", "-31.0727, 69.1506, -7.55504, 1.62", "-31.7299, 69.9234, -7.54015, 0.96", "-32.141, 70.4541, -7.52042, 0.37", "-32.7366, 71.3003, -7.47349, 0.37", "-32.7751, 71.3631, -7.46878, 0.37", "-33.6715, 72.9034, -7.3649, 0.37", "-34.3689, 74.1693, -7.29781, 0.37", "-34.7504, 74.8946, -7.26959, 0.74", "-34.9491, 75.279, -7.26313, 0.29", "-35.0177, 75.415, -7.26028, 0.29", "-35.7239, 76.842, -7.22863, 0.29", "-35.7824, 76.9668, -7.22572, 0.29", "-36.0853, 77.631, -7.21688, 1.55", "-36.3992, 78.3612, -7.2039, 1.62", "-36.6669, 78.9884, -7.19462, 1.03", "-36.693, 79.0472, -7.1942, 1.03", "-36.9283, 79.5547, -7.195, 0.37", "-36.9561, 79.6128, -7.19576, 0.37", "-37.3228, 80.3361, -7.21749, 0.37", "-37.77, 81.1643, -7.24968, 1.11", "-38.1367, 81.8189, -7.26674, 1.11", "-38.3294, 82.152, -7.27064, 0.52", "-38.4025, 82.2859, -7.2699, 0.52", "-38.6801, 82.8399, -7.25957, 0.52", "-38.7999, 83.0994, -7.25203, 0.52", "-39.0077, 83.5961, -7.23384, 0.52", "-39.1755, 84.0182, -7.21936, 1.11", "-39.5863, 85.0866, -7.18782, 1.11", "-39.8006, 85.6227, -7.17771, 0.37", "-40.1115, 86.3694, -7.17238, 0.37", "-40.1962, 86.5529, -7.17421, 0.37", "-40.5771, 87.3017, -7.19731, 0.37", "-40.729, 87.5708, -7.20952, 0.37", "-41.2257, 88.3428, -7.25482, 0.37", "-41.5521, 88.8166, -7.28699, 0.88", "-41.9171, 89.3219, -7.32506, 0.88", "-41.9558, 89.3739, -7.32921, 0.88", "-42.0846, 89.5406, -7.34225, 0.29", "-42.1698, 89.6505, -7.35027, 0.29", "-42.8451, 90.5391, -7.40863, 0.29", "-42.8832, 90.5912, -7.41583, 0.29", "-43.3449, 91.2077, -7.5408, 0.81", "-43.6689, 91.6239, -7.64419, 1.11", "-43.8656, 91.8467, -7.71096, 1.11", "-43.9106, 91.8915, -7.72725, 1.11", "-44.5665, 92.4335, -7.97159, 0.22", "-45.0273, 92.7763, -8.13217, 0.22", "-45.1078, 92.83, -8.15914, 0.22", "-45.818, 93.3087, -8.37876, 0.22", "-45.9813, 93.4275, -8.42599, 0.22", "-46.5039, 93.8399, -8.55619, 0.22", "-46.8316, 94.1377, -8.61233, 0.22", "-46.893, 94.2056, -8.62441, 0.66", "-47.1656, 94.5829, -8.71072, 0.66", "-47.4217, 95.0316, -8.82417, 0.15", "-47.5165, 95.1976, -8.86748, 0.15", "-47.8886, 95.8558, -9.04502, 0.15", "-47.959, 95.9726, -9.07069, 0.15", "-48.3162, 96.5263, -9.16811, 0.59", "-48.9493, 97.3784, -9.27485, 0.59", "-49.3003, 97.8093, -9.29933, 0.59", "-49.3491, 97.8656, -9.29986, 0.59", "-49.7681, 98.3292, -9.28003, 0.22", "-49.8124, 98.3771, -9.27761, 0.22", "-50.2599, 98.841, -9.25006, 0.22", "-50.5016, 99.0904, -9.25462, 0.22", "-51.0941, 99.7176, -9.30691, 0.22", "-51.3418, 99.9934, -9.33929, 0.22", "-51.5591, 100.238, -9.37643, 0.74", "-52.1299, 100.885, -9.48006, 0.74", "-52.4797, 101.286, -9.54593, 0.22", "-52.5639, 101.384, -9.56191, 0.22", "-53.8814, 102.893, -9.80013, 0.22", "-54.0793, 103.113, -9.8525, 0.81", "-54.7416, 103.829, -10.0651, 0.81", "-54.7833, 103.876, -10.0836, 0.81", "-54.978, 104.097, -10.1915, 0.15", "-55.6758, 104.885, -10.6497, 0.15", "-56.3987, 105.708, -11.2445, 0.66", "-56.6248, 105.984, -11.4327, 0.66", "-57.2139, 106.762, -11.9288, 0.15", "-57.4144, 107.041, -12.0873, 0.37", "-57.5446, 107.232, -12.1988, 0.15", "-57.574, 107.283, -12.2269, 0.15", "-58.0533, 108.129, -12.585, 0.15", "-58.1813, 108.355, -12.6804, 1.03", "-58.4256, 108.769, -12.9004, 1.03", "-58.8494, 109.514, -13.3425, 0.22", "-58.8771, 109.564, -13.3746, 0.22", "-59.4157, 110.567, -14.1296, 0.22", "-59.4401, 110.615, -14.1667, 0.22", "-59.8409, 111.427, -14.7615, 0.88", "-60.0393, 111.829, -14.9876, 0.88", "-60.0691, 111.885, -14.9998, 0.88", "-60.3498, 112.364, -14.9864, 0.22", "-61.0112, 113.465, -14.8044, 0.22", "-61.0445, 113.519, -14.7919, 0.22", "-61.6227, 114.412, -14.5224, 0.22", "-62.3735, 115.495, -14.207, 0.22", "-63.0146, 116.38, -13.9589, 0.22", "-63.4826, 117.014, -13.7898, 1.11", "-63.5684, 117.128, -13.7616, 1.11", "-63.8048, 117.444, -13.7043, 0.22", "-64.5117, 118.422, -13.6779, 0.22", "-64.7153, 118.698, -13.7107, 0.66", "-65.1967, 119.319, -13.7994, 0.66" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "26.1716, 12.581, -35.5532, 0.81", "26.794, 12.5622, -37.1598, 0.81", "26.824, 12.5654, -37.2251, 0.81", "27.1572, 12.6177, -37.9123, 0.81", "27.3134, 12.6578, -38.2027, 0.81", "27.8424, 12.8257, -39.1304, 0.52", "29.9172, 13.6159, -42.516, 0.81", "30.5148, 13.9275, -43.3438, 0.81", "30.5567, 13.9509, -43.3968, 0.81", "31.2335, 14.3757, -44.2034, 0.81", "31.3169, 14.4273, -44.2941, 0.81", "31.8051, 14.6724, -44.7431, 0.81", "32.7008, 14.8977, -45.2148, 0.52", "33.0176, 14.9026, -45.8397, 0.52", "33.0956, 14.9029, -46.0067, 0.52", "33.4865, 14.8635, -46.968, 0.81", "34.1245, 14.7699, -48.7095, 0.81", "34.1431, 14.766, -48.7694, 0.81", "35.0543, 14.5902, -52.2444, 0.74", "35.3207, 14.594, -53.3029, 1.84" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "26.1716, 12.581, -35.5532, 1.4", "26.216, 12.5854, -35.5177, 1.4", "29.2227, 12.9395, -33.5279, 0.96", "29.437, 12.9696, -33.4189, 0.96", "30.9818, 13.2008, -32.8122, 0.96", "31.073, 13.216, -32.7838, 0.96", "32.7054, 13.5015, -32.3415, 0.96", "32.7717, 13.515, -32.3316, 0.96", "34.074, 13.8529, -32.3551, 1.18", "35.1122, 14.1543, -32.3707, 0.88", "36.0864, 14.4679, -32.385, 0.88", "36.1509, 14.4896, -32.386, 0.88", "36.7268, 14.6945, -32.4271, 0.88", "37.5318, 14.9912, -32.5131, 0.88", "37.5948, 15.0152, -32.5215, 0.88", "39.5762, 15.7653, -32.8022, 0.88", "39.6657, 15.798, -32.8151, 0.88", "41.6977, 16.487, -33.1791, 1.18", "43.1331, 16.9502, -33.473, 1.18", "43.4877, 17.0603, -33.5522, 1.18", "45.0403, 17.5738, -33.912, 1.18", "45.3176, 17.6715, -33.9804, 1.18", "47.1724, 18.269, -34.4004, 1.18", "47.3777, 18.3183, -34.4386, 1.18", "47.8925, 18.3965, -34.5313, 0.52", "49.1939, 18.4746, -34.7314, 0.52", "49.2619, 18.472, -34.7396, 0.52", "50.5398, 18.3413, -34.8303, 0.88", "51.9412, 18.0982, -34.8412, 0.88", "52.1915, 18.0512, -34.8487, 0.88", "53.1554, 17.8645, -34.8946, 1.25", "53.3673, 17.8293, -34.9071, 1.25", "54.3024, 17.7617, -34.9662, 1.25", "54.4391, 17.7631, -34.9756, 1.25", "55.9912, 17.8733, -35.15, 1.11", "57.5596, 18.0298, -35.3665, 1.11", "58.8139, 18.1561, -35.5562, 0.81", "60.2135, 18.2847, -35.7784, 0.81", "60.4364, 18.2968, -35.8129, 0.81", "62.4116, 18.3322, -36.0997, 0.81", "62.5147, 18.3306, -36.1137, 0.81", "64.6846, 18.2192, -36.3982, 0.81", "64.7875, 18.2095, -36.4099, 0.81", "67.0709, 17.9247, -36.6212, 0.81", "67.9907, 17.825, -36.7334, 0.96", "68.2134, 17.8036, -36.7643, 0.96", "69.2157, 17.7331, -36.9401, 0.74", "70.5567, 17.6798, -37.2163, 0.74", "70.6236, 17.6783, -37.231, 0.74", "73.4049, 17.669, -37.9776, 0.74", "74.2551, 17.6679, -38.2188, 1.4", "75.9931, 17.6639, -38.7321, 1.77", "77.0203, 17.6638, -39.0545, 1.77", "77.2997, 17.6627, -39.1449, 1.77", "78.7825, 17.6411, -39.5839, 1.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-12.9595, 36.1491, 16.1682, 0.44", "-13.7052, 36.3706, 16.9198, 0.44", "-14.4029, 36.5991, 17.5816, 0.44", "-15.1888, 36.8715, 18.3046, 0.44", "-15.2178, 36.8817, 18.3303, 0.44", "-16.0927, 37.1899, 19.0885, 0.74", "-16.4507, 37.3051, 19.3894, 0.74", "-16.6865, 37.3815, 19.5606, 0.37", "-16.718, 37.3898, 19.584, 0.37", "-17.1651, 37.4695, 19.8673, 0.37", "-17.1932, 37.4728, 19.8868, 0.37", "-17.6841, 37.5075, 20.244, 0.37", "-17.7256, 37.511, 20.2766, 0.37", "-18.3141, 37.5985, 20.7933, 0.37", "-18.3523, 37.6067, 20.8288, 0.37", "-18.9315, 37.7775, 21.3548, 0.37", "-19.2383, 37.8892, 21.6011, 0.37", "-19.2736, 37.9062, 21.6243, 0.37", "-19.8083, 38.1674, 21.9053, 0.37", "-19.8413, 38.1837, 21.9203, 0.37", "-20.3641, 38.4177, 22.1267, 0.59", "-20.8848, 38.6265, 22.2997, 0.59", "-21.5562, 38.8587, 22.5176, 0.81", "-22.1365, 39.0489, 22.6998, 0.81", "-22.6874, 39.2258, 22.8621, 0.29", "-22.9515, 39.3154, 22.9451, 0.29", "-23.0264, 39.3439, 22.975, 0.29", "-23.5884, 39.5477, 23.2519, 0.29", "-23.6681, 39.573, 23.2962, 0.29", "-24.1382, 39.7029, 23.5653, 0.59", "-24.4975, 39.7783, 23.7671, 0.59", "-25.2867, 39.9047, 24.2229, 0.15", "-25.8407, 39.9687, 24.5379, 0.37", "-26.0264, 39.9803, 24.6425, 0.74", "-26.36, 39.9814, 24.8454, 0.37", "-26.624, 39.9582, 25.0226, 0.37", "-26.6605, 39.9539, 25.0502, 0.37", "-26.8921, 39.9529, 25.2497, 0.22", "-26.9322, 39.995, 25.3167, 0.22", "-27.1629, 40.4109, 25.825, 0.22", "-27.1805, 40.4453, 25.865, 0.22", "-27.3708, 40.8093, 26.2605, 0.22", "-27.421, 40.8878, 26.3745, 0.22", "-27.5309, 41.0153, 26.6169, 0.22", "-27.5497, 41.0296, 26.6491, 0.22", "-28.0003, 41.2942, 27.3166, 0.74", "-28.1882, 41.3818, 27.5658, 0.74", "-29.006, 41.6843, 28.5604, 0.59", "-29.5886, 41.8701, 29.2078, 0.37", "-30.1687, 42.0086, 29.8406, 0.37", "-30.199, 42.0105, 29.8751, 0.37", "-30.4661, 41.9687, 30.2309, 0.37", "-30.5121, 41.9573, 30.2957, 0.37", "-30.8821, 41.8343, 30.8254, 0.37", "-31.3484, 41.6877, 31.6252, 0.88", "-31.8997, 41.5745, 32.8587, 0.88", "-32.2781, 41.6206, 34.1389, 0.37", "-32.4003, 41.7054, 34.8084, 0.37", "-32.4084, 41.7155, 34.868, 0.37", "-32.467, 41.9565, 35.8356, 0.37", "-32.4659, 42.2771, 36.5536, 0.37", "-32.3621, 43.0346, 37.6778, 0.37", "-32.3539, 43.0583, 37.7083, 0.37", "-35.8158, 43.375, 42.2743, 0.37" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-12.9595, 36.1491, 16.1682, 0.52", "-13.4654, 37.2414, 17.2064, 0.52", "-13.956, 38.1292, 17.8926, 0.52", "-13.9904, 38.1773, 17.9307, 0.52", "-14.8061, 39.1094, 18.6837, 0.52", "-14.8754, 39.1812, 18.7467, 0.52", "-15.7094, 40.0787, 19.5317, 0.52", "-16.5634, 40.9563, 20.2757, 0.74", "-17.5394, 41.9926, 21.1552, 0.74", "-18.487, 43.1458, 22.1595, 0.59", "-19.213, 44.051, 23.0991, 0.59", "-19.8539, 44.8384, 24.0606, 0.66", "-19.8891, 44.8822, 24.1212, 0.66", "-20.292, 45.4236, 24.9441, 0.66", "-21.2001, 46.8228, 27.1376, 0.52", "-22.0524, 48.3748, 29.677, 0.52", "-22.394, 49.1274, 30.9394, 0.52", "-22.4175, 49.1891, 31.046, 0.52", "-22.5769, 49.7197, 31.8822, 0.52", "-22.5988, 49.8295, 32.041, 0.52", "-22.5718, 50.8436, 33.1419, 0.96", "-22.3918, 51.7478, 33.8309, 0.96", "-22.3269, 52.3275, 34.1953, 0.52", "-22.3651, 53.411, 34.8293, 0.52", "-22.3818, 53.4823, 34.8635, 0.52", "-22.7343, 54.5407, 35.2648, 0.74", "-22.771, 54.6227, 35.2881, 0.74", "-23.3361, 55.7417, 35.7124, 0.74", "-23.367, 55.8086, 35.7469, 0.74", "-23.7684, 56.819, 36.3542, 0.37", "-24.0356, 57.3977, 36.7843, 0.37", "-24.0589, 57.4513, 36.8225, 0.37", "-24.6688, 58.9783, 37.8697, 0.37", "-24.9745, 59.7236, 38.4386, 0.59", "-25.5566, 60.9636, 39.3774, 0.81", "-26.57, 62.6273, 40.7154, 0.52", "-27.2971, 63.6353, 41.5398, 0.52", "-28.193, 64.708, 42.3937, 0.52", "-29.2959, 65.8125, 43.168, 0.29", "-30.2067, 66.5279, 43.688, 0.29", "-31.6765, 67.4184, 44.3522, 0.29", "-31.8078, 67.4859, 44.4014, 0.29", "-32.6063, 67.8039, 44.7, 0.15", "-33.8898, 68.205, 45.0931, 0.15", "-35.3628, 68.7035, 45.407, 0.81", "-36.0964, 68.9782, 45.5914, 0.81", "-41.3981, 78.2769, 50.2059, 0.81" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-6.58522, 36.8837, -1.78866, 0.66", "-6.47755, 37.0486, -1.83264, 0.66", "-6.35488, 37.2913, -1.91946, 0.66", "-6.32039, 37.384, -1.95354, 0.66", "-6.13131, 37.9927, -2.17781, 0.66", "-6.12349, 38.0328, -2.19093, 0.66", "-6.04379, 38.648, -2.38838, 0.66", "-6.02595, 38.9604, -2.49597, 0.66", "-6.03287, 39.2704, -2.59238, 0.29", "-6.0355, 39.3114, -2.60393, 0.29", "-6.09015, 39.9654, -2.80051, 0.29", "-6.10747, 40.2615, -2.8871, 0.29", "-6.10913, 40.3027, -2.89795, 0.29", "-6.10888, 41.0339, -3.09918, 0.29", "-6.10616, 41.1311, -3.12668, 0.29", "-6.06509, 41.9773, -3.36136, 0.29", "-6.06141, 42.0186, -3.37178, 0.29", "-6.03975, 42.3229, -3.44694, 0.96", "-6.00494, 42.8952, -3.56628, 0.96", "-6.00078, 42.9432, -3.57397, 0.96", "-5.96396, 43.2956, -3.61685, 0.81", "-5.8824, 44.065, -3.67964, 0.59", "-5.77927, 44.996, -3.75672, 0.52", "-5.73498, 45.4071, -3.81209, 0.37", "-5.65845, 46.3279, -3.97538, 0.37", "-5.62534, 46.819, -4.07756, 1.03", "-5.60414, 47.2203, -4.17236, 1.03", "-5.60282, 47.2557, -4.18187, 1.03", "-5.57433, 48.1105, -4.47398, 0.52", "-5.57719, 48.6632, -4.69939, 0.52", "-5.58113, 48.7584, -4.74153, 0.52", "-5.6123, 49.601, -5.06796, 0.44", "-5.61341, 49.6361, -5.07849, 0.44", "-5.64946, 50.4986, -5.19526, 1.33", "-5.67707, 51.2584, -5.16705, 1.4", "-5.67932, 51.3225, -5.15784, 1.4", "-5.70856, 51.9446, -5.01466, 0.22", "-5.75405, 52.7166, -4.76022, 0.22", "-5.81659, 53.5477, -4.4386, 0.59", "-5.86461, 53.937, -4.25781, 0.59", "-5.92679, 54.3056, -4.08849, 0.22", "-5.9354, 54.344, -4.07079, 0.22", "-6.01603, 54.6219, -3.94834, 0.22", "-6.13623, 54.9584, -3.79519, 0.22", "-6.31862, 55.3803, -3.64114, 0.22", "-6.35781, 55.4629, -3.60976, 0.22", "-6.66331, 56.1029, -3.36491, 0.81", "-6.68062, 56.1401, -3.35172, 0.81", "-6.88311, 56.5674, -3.21145, 0.81", "-6.9604, 56.7368, -3.16685, 0.81", "-7.16963, 57.2112, -3.06122, 0.22", "-7.19451, 57.266, -3.05233, 0.22", "-7.45388, 57.8096, -3.00504, 0.22", "-7.5799, 58.0689, -2.98949, 0.22", "-7.79451, 58.5033, -2.97489, 0.22", "-8.00566, 58.9109, -3.00844, 1.03", "-8.2035, 59.2786, -3.06975, 1.03", "-8.43481, 59.701, -3.16736, 0.66", "-8.75213, 60.2843, -3.3383, 0.22", "-9.03013, 60.8174, -3.51907, 0.22", "-9.48549, 61.6931, -3.86759, 0.22", "-9.50575, 61.734, -3.88633, 0.22", "-9.63848, 62.015, -4.02053, 0.88", "-9.74368, 62.243, -4.12271, 0.88", "-9.95288, 62.711, -4.30738, 0.22", "-9.96729, 62.7434, -4.31759, 0.22", "-10.3984, 63.6634, -4.49349, 0.22", "-10.4335, 63.7287, -4.50524, 0.22", "-10.6709, 64.0922, -4.59781, 0.22", "-10.6976, 64.1246, -4.60883, 0.22", "-10.9644, 64.3979, -4.7149, 0.96", "-11.3295, 64.7487, -4.8586, 0.96", "-11.3646, 64.7815, -4.87253, 0.96", "-11.8422, 65.2808, -5.12435, 0.37", "-12.1587, 65.6797, -5.33309, 0.29", "-12.4965, 66.1866, -5.57741, 0.15", "-12.516, 66.2216, -5.59377, 0.15", "-12.6898, 66.5597, -5.73906, 0.15", "-12.95, 67.0927, -5.94634, 1.03", "-13.1988, 67.6487, -6.1249, 1.03", "-13.3126, 67.9303, -6.21195, 1.03", "-13.4231, 68.2335, -6.297, 0.22", "-13.641, 68.8851, -6.44909, 0.22", "-13.6532, 68.9255, -6.45625, 0.22", "-13.7674, 69.3741, -6.50302, 0.96", "-13.8736, 69.8698, -6.54678, 1.11", "-13.9127, 70.2378, -6.57007, 0.22", "-13.9161, 70.6423, -6.58514, 0.22", "-13.8861, 70.9507, -6.60965, 0.22", "-13.8636, 71.125, -6.6294, 0.22", "-13.8593, 71.1672, -6.63336, 0.22", "-13.8015, 72.0473, -6.74059, 0.22", "-13.7934, 72.1101, -6.75487, 0.22", "-13.7141, 72.6058, -6.93519, 0.22", "-13.7065, 72.6503, -6.9543, 0.22", "-13.5002, 73.8466, -7.48852, 0.22", "-13.2608, 75.2336, -8.13799, 0.22", "-13.033, 76.557, -8.80543, 0.22", "-12.8535, 77.5537, -9.32282, 1.33", "-12.7758, 77.9424, -9.5347, 1.33" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-6.58522, 36.8837, -1.78866, 0.74", "-7.03768, 37.8605, -1.64021, 0.74", "-7.36778, 38.4638, -1.56741, 0.37", "-7.69244, 39.0262, -1.50756, 0.37", "-7.79828, 39.2053, -1.49162, 0.37", "-8.25723, 39.9677, -1.43188, 0.22", "-8.2914, 40.0245, -1.42809, 0.22", "-8.87416, 40.8917, -1.42043, 0.22", "-8.91328, 40.9456, -1.41956, 0.22", "-9.32689, 41.4932, -1.39561, 0.22", "-9.48232, 41.6934, -1.38211, 0.88", "-9.83142, 42.1682, -1.34223, 0.88", "-10.0323, 42.4582, -1.31517, 0.44", "-10.2225, 42.8034, -1.28712, 0.29", "-10.3797, 43.1365, -1.26669, 0.29", "-10.4013, 43.1984, -1.25955, 0.29", "-10.5804, 43.8675, -1.16122, 0.29", "-10.647, 44.159, -1.11289, 0.29", "-10.8422, 45.1631, -0.945187, 0.29", "-10.8589, 45.2471, -0.931835, 0.29", "-11.0449, 45.9845, -0.790524, 0.29", "-11.1641, 46.3616, -0.697014, 0.29", "-11.3652, 46.833, -0.556849, 0.29", "-11.4338, 46.9522, -0.518964, 0.29", "-11.7575, 47.3916, -0.371462, 0.88", "-12.2914, 48.0236, -0.196174, 0.88", "-12.3306, 48.0648, -0.187938, 0.88", "-12.6614, 48.4139, -0.127408, 0.44", "-13.0687, 48.8538, -0.0645044, 0.37", "-13.1629, 48.9693, -0.0548866, 0.37", "-13.6548, 49.6525, -0.0252597, 0.37", "-13.7906, 49.8655, -0.0251271, 0.37", "-14.112, 50.4302, -0.0211806, 0.37", "-14.1758, 50.5568, -0.0185544, 0.37", "-14.6851, 51.6446, -0.101802, 0.37", "-14.7881, 51.8693, -0.139089, 1.11", "-14.8167, 51.9271, -0.153764, 1.11", "-15.1449, 52.4977, -0.337615, 1.11", "-15.1878, 52.5565, -0.360224, 1.11", "-15.9211, 53.3677, -0.703019, 0.74", "-16.2702, 53.6625, -0.844499, 0.29", "-16.7843, 54.0486, -1.02393, 0.29", "-16.9089, 54.1337, -1.06358, 0.29", "-17.4968, 54.4937, -1.22561, 0.74", "-17.7639, 54.6709, -1.28236, 0.74", "-18.0597, 54.8803, -1.31693, 0.29", "-18.1192, 54.9278, -1.3288, 0.29", "-18.7568, 55.5667, -1.50851, 0.22", "-18.8042, 55.6246, -1.52376, 0.22", "-19.2916, 56.3336, -1.66145, 0.22", "-19.3639, 56.4549, -1.67784, 0.22", "-19.7267, 57.0307, -1.71473, 0.74", "-20.1403, 57.6556, -1.72018, 0.74", "-20.665, 58.429, -1.65162, 0.74", "-20.9983, 58.8856, -1.58816, 0.44", "-21.3064, 59.2735, -1.5133, 0.22", "-22.2818, 60.4373, -1.24334, 0.22", "-22.3481, 60.5116, -1.222, 0.22", "-22.8067, 60.9831, -1.07599, 0.81", "-23.3322, 61.5515, -0.869827, 0.96", "-23.392, 61.6208, -0.844656, 0.96", "-23.7406, 62.079, -0.665443, 0.96", "-23.773, 62.1337, -0.645298, 0.96", "-23.9787, 62.5125, -0.528037, 0.29", "-24.6659, 63.883, -0.186942, 0.29", "-24.6942, 63.941, -0.171431, 0.29", "-24.9021, 64.3177, -0.0726207, 0.88", "-25.277, 64.9439, 0.08523, 0.88", "-25.7287, 65.6134, 0.241162, 0.88", "-26.0414, 66.0316, 0.331061, 0.29", "-26.4627, 66.5283, 0.424116, 0.15", "-27.3487, 67.5166, 0.619844, 0.15", "-27.7445, 67.9299, 0.705452, 0.44", "-28.2738, 68.4592, 0.813156, 0.44", "-28.3213, 68.5059, 0.822213, 0.44", "-28.5512, 68.7252, 0.859266, 0.81", "-29.5668, 69.6574, 1.04306, 0.81", "-30.0942, 70.1159, 1.16116, 0.22", "-30.6705, 70.5873, 1.30144, 0.22", "-30.8342, 70.7167, 1.34431, 0.22", "-31.7206, 71.3988, 1.57978, 0.22", "-32.6612, 72.0956, 1.83905, 0.22", "-32.7143, 72.1346, 1.85507, 0.22", "-33.294, 72.5829, 2.03363, 0.22", "-33.4495, 72.7214, 2.0759, 0.74", "-33.8787, 73.213, 2.16161, 0.74", "-34.0135, 73.4204, 2.17064, 0.74", "-34.2306, 73.8033, 2.17626, 0.74", "-34.3682, 74.0409, 2.18814, 0.74", "-34.8399, 74.7791, 2.24619, 0.22", "-35.1478, 75.2359, 2.25858, 0.22", "-35.7184, 76.0509, 2.27555, 0.22", "-36.1678, 76.7014, 2.28397, 0.88", "-36.8167, 77.6438, 2.31459, 1.25", "-37.4444, 78.546, 2.35697, 1.25", "-38.3124, 79.7511, 2.43079, 1.25", "-38.9172, 80.5599, 2.48204, 0.59", "-39.5171, 81.3359, 2.4942, 0.59", "-40.1637, 82.1113, 2.46449, 0.15", "-40.7615, 82.7792, 2.42742, 0.15", "-41.0531, 83.0827, 2.40715, 0.37", "-41.3711, 83.3614, 2.3907, 0.37", "-42.2602, 84.0433, 2.28161, 0.22", "-43.0775, 84.5887, 2.04085, 0.22", "-43.137, 84.6286, 2.01123, 0.22", "-43.339, 84.7744, 1.88151, 0.74", "-43.8848, 85.2141, 1.49606, 0.74", "-43.9303, 85.2551, 1.46785, 0.74", "-44.97, 86.1797, 0.830078, 0.15", "-45.3944, 86.5444, 0.57371, 0.15", "-45.5075, 86.6409, 0.515952, 0.15", "-45.9899, 87.0438, 0.279738, 0.15", "-47.1167, 87.9813, -0.236347, 0.15", "-48.037, 88.7458, -0.590895, 0.88", "-48.6734, 89.2781, -0.756253, 0.88", "-49.6206, 90.064, -1.02895, 0.66", "-55.4394, 97.5903, -1.50482, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "25.6137, -28.2637, 5.1071, 1.03", "26.2697, -29.473, 4.4297, 1.03", "26.3423, -29.5834, 4.38643, 1.03", "27.0134, -30.575, 4.04563, 1.03", "27.3038, -30.9565, 3.94049, 1.03", "28.9789, -33.0015, 3.47517, 1.03", "29.0352, -33.0655, 3.46218, 1.03", "31.2843, -35.4246, 3.14046, 0.88", "31.419, -35.5518, 3.13216, 0.88", "33.5966, -37.3781, 3.22058, 0.88", "34.4487, -37.9999, 3.35214, 0.88", "35.2447, -38.5021, 3.55293, 1.25", "36.2974, -39.0992, 3.87387, 1.25", "38.3884, -40.1253, 4.61503, 0.74", "40.4287, -41.0917, 5.32252, 0.74", "42.1332, -41.868, 5.89791, 0.74", "42.1989, -41.899, 5.91746, 0.74", "43.1272, -42.3521, 6.16329, 1.47", "44.4125, -42.9694, 6.4245, 1.47", "47.1235, -44.3351, 6.59309, 0.66", "48.3246, -44.9721, 6.52979, 0.66", "49.7363, -45.7662, 6.35145, 1.33", "49.8105, -45.8109, 6.33975, 1.33", "50.9566, -46.5689, 6.14639, 1.33", "52.995, -47.9396, 5.76796, 1.18", "54.577, -49.036, 5.43913, 1.18", "54.6757, -49.1068, 5.41795, 1.18", "56.3345, -50.3385, 5.06623, 0.88", "59.0593, -52.4951, 4.55217, 0.88" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "25.6137, -28.2637, 5.1071, 0.74", "25.6429, -28.2843, 5.16798, 0.74", "25.9892, -28.5676, 6.21891, 0.74", "26.0096, -28.5857, 6.28408, 0.74", "26.9152, -29.3291, 8.76614, 0.74", "28.3408, -30.3375, 12.1952, 0.74", "28.3685, -30.3556, 12.2576, 0.74", "29.9563, -31.2345, 15.4672, 1.4", "30.3868, -31.4489, 16.2836, 0.74", "31.3417, -31.8105, 17.8162, 0.74", "32.6322, -32.1059, 19.4269, 0.74", "32.7064, -32.1167, 19.4932, 0.74", "34.3027, -32.4544, 20.7471, 0.74", "34.3529, -32.4677, 20.7782, 0.74", "35.1389, -32.7005, 21.3317, 0.74", "35.2351, -32.7284, 21.3997, 0.74", "36.9393, -33.1662, 22.4722, 0.74", "38.6838, -33.5811, 23.5521, 0.74", "39.5786, -33.7865, 24.0961, 0.74", "41.656, -34.237, 25.2603, 0.74", "43.5692, -34.6671, 26.2386, 0.74", "45.2338, -35.0265, 27.0089, 1.25", "46.5885, -35.3293, 27.6171, 0.52", "47.1946, -35.4784, 27.8926, 0.52", "48.5298, -35.8651, 28.5213, 0.66", "50.3451, -36.4833, 29.409, 0.66", "50.4115, -36.5093, 29.4461, 0.66", "52.5889, -37.3142, 30.7295, 0.66", "53.1615, -37.4915, 31.0394, 0.96", "53.9966, -37.7291, 31.459, 0.66", "55.2798, -38.0261, 32.0488, 0.52", "55.3441, -38.042, 32.0728, 0.52", "56.6948, -38.4695, 32.4945, 0.52", "57.8757, -38.9486, 32.8311, 0.52", "58.873, -39.4499, 33.2374, 0.52", "58.92, -39.4778, 33.2621, 0.52", "60.0859, -40.1767, 33.905, 0.52", "61.0947, -40.757, 34.5008, 0.52", "62.2709, -41.409, 35.2121, 1.25", "63.3429, -41.8831, 35.9937, 0.52", "64.6009, -42.3427, 36.968, 0.52", "66.4788, -42.9351, 38.4492, 0.52", "66.6058, -42.9624, 38.5478, 0.52", "67.4726, -43.0871, 39.1949, 0.52", "70.4324, -43.1781, 41.2602, 0.37", "70.9976, -43.1419, 41.6515, 0.37", "71.1189, -43.12, 41.7395, 0.37", "72.1184, -42.8582, 42.5175, 0.37", "72.4014, -42.7891, 42.7539, 0.37", "73.7619, -42.4647, 43.938, 0.37", "73.8181, -42.4535, 43.9793, 0.37", "74.9754, -42.201, 44.9292, 0.37", "75.0275, -42.1896, 44.9755, 0.37", "76.4251, -41.913, 46.3652, 0.29", "76.5017, -41.8972, 46.4386, 0.29", "77.1747, -41.7405, 47.0608, 0.29", "77.232, -41.7264, 47.0995, 0.29", "77.8652, -41.5434, 47.4225, 0.29", "78.0054, -41.5037, 47.4827, 0.29", "79.1649, -41.1922, 47.8976, 0.29", "79.2892, -41.1559, 47.9536, 0.29", "80.5015, -40.7778, 48.5706, 0.29", "81.9526, -40.2582, 49.3591, 0.29", "82.0103, -40.2356, 49.3924, 0.29", "83.4487, -39.6322, 50.2666, 0.29", "84.6728, -39.0511, 51.0768, 0.59", "85.3491, -38.7008, 51.5459, 0.74", "86.0201, -38.2859, 52.0577, 0.74", "86.0696, -38.2526, 52.0941, 0.74", "92.7575, -39.4327, 59.5771, 0.74", "98.549, -40.2559, 67.8205, 0.74", "104.416, -42.6605, 75.6687, 0.74" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "40.1963, -63.3824, 61.9623, 0.52", "41.0405, -64.4193, 62.4198, 0.52", "41.3815, -64.9288, 62.6381, 0.66", "41.8419, -65.8025, 63.0042, 0.52", "42.2718, -66.7866, 63.4166, 0.29", "42.682, -68.0584, 63.9202, 0.44", "42.6985, -68.1226, 63.9446, 0.44", "42.7731, -68.8846, 64.1456, 0.44", "42.7171, -69.6313, 64.3392, 0.74", "42.6701, -69.8619, 64.3978, 0.74", "42.4734, -70.6089, 64.5555, 0.74", "42.4549, -70.6763, 64.5621, 0.74", "42.3386, -71.6357, 64.698, 0.74", "42.4213, -72.3847, 65.021, 0.44", "42.4393, -72.4439, 65.0559, 0.44", "42.769, -73.3532, 65.6352, 0.37", "42.8089, -73.4436, 65.7, 0.37", "43.6328, -75.0698, 66.9871, 0.37", "44.9756, -77.2351, 68.9856, 0.44", "45.4318, -77.8766, 69.6544, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "40.1963, -63.3824, 61.9623, 0.66", "41.0015, -63.692, 62.0824, 0.66", "41.4566, -63.8356, 62.2136, 0.29", "42.0826, -64.0331, 62.394, 0.29", "42.1426, -64.0521, 62.4114, 0.29", "42.9349, -64.302, 62.6398, 0.29", "43.0432, -64.3362, 62.671, 0.29", "43.9405, -64.6884, 62.7869, 0.74", "51.6188, -66.4792, 64.9562, 0.74", "59.1183, -69.5629, 65.6514, 0.74", "66.256, -72.9863, 67.472, 0.74", "73.0753, -77.2979, 67.9078, 0.74" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-57.9124, -43.7328, -25.0884, 0.29", "-59.7224, -44.477, -26.348, 0.29", "-60.7895, -44.9556, -27.1053, 0.29", "-61.8256, -45.4393, -27.8214, 0.29", "-63.3863, -46.1779, -28.8869, 0.88", "-64.0057, -46.4914, -29.3447, 1.18", "-64.6849, -46.8468, -29.8696, 0.59", "-65.5799, -47.4049, -30.6131, 0.52", "-65.8115, -47.5723, -30.8659, 0.88", "-65.8395, -47.5944, -30.9007, 0.88", "-66.6178, -48.2041, -31.817, 0.37", "-66.6451, -48.2258, -31.8526, 0.37", "-67.8648, -49.2077, -33.4654, 0.37", "-68.316, -49.5735, -33.964, 1.25", "-68.3429, -49.5947, -33.9893, 1.25", "-68.9069, -50.011, -34.4045, 1.25", "-68.9499, -50.0398, -34.4277, 1.25", "-69.413, -50.3594, -34.6197, 0.29", "-70.4618, -51.0837, -34.8572, 0.15", "-70.7855, -51.322, -34.945, 0.59", "-71.0329, -51.5098, -35.0272, 0.59", "-71.5595, -51.9171, -35.2319, 0.15", "-72.2996, -52.4562, -35.5267, 0.15", "-72.3373, -52.4818, -35.5462, 0.15", "-73.0414, -52.9317, -35.9163, 0.88", "-73.0796, -52.9557, -35.937, 0.88", "-73.583, -53.2707, -36.2125, 0.88", "-74.2882, -53.7073, -36.643, 0.22", "-75.6094, -54.5474, -37.4868, 0.22", "-76.3863, -55.1668, -38.0733, 0.22", "-77.5965, -56.457, -39.2991, 0.22", "-77.6196, -56.4881, -39.3296, 0.22", "-78.1693, -57.8109, -40.653, 0.22", "-78.2933, -58.5932, -41.307, 0.22", "-78.1473, -60.5413, -42.5824, 0.22", "-77.6007, -62.3035, -43.3866, 0.22", "-77.5828, -62.3399, -43.3959, 0.22", "-76.1851, -64.7597, -43.4531, 0.22", "-73.8019, -68.2518, -42.6633, 0.22", "-73.779, -68.2862, -42.6371, 0.22", "-73.1015, -69.3109, -41.4931, 0.22", "-73.0822, -69.3418, -41.45, 0.22", "-72.537, -70.3072, -39.8861, 0.22", "-72.529, -70.3274, -39.8414, 0.22", "-72.3744, -72.2256, -35.6342, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-57.9124, -43.7328, -25.0884, 1.18", "-60.0553, -45.6771, -24.5659, 1.18", "-61.6871, -47.0537, -24.6284, 1.18", "-62.7725, -47.9442, -24.8173, 0.52", "-64.0481, -48.9791, -25.1316, 0.52", "-64.0993, -49.0206, -25.146, 0.52", "-65.0966, -49.8361, -25.5641, 0.52", "-66.335, -50.8305, -26.1104, 0.52", "-66.4258, -50.9026, -26.1814, 0.52", "-67.1177, -51.4351, -26.955, 0.37", "-67.1545, -51.4671, -27.0028, 0.37", "-68.2017, -52.4147, -28.2497, 1.11", "-68.7155, -52.9128, -28.814, 1.11", "-68.7617, -52.9572, -28.8577, 1.11", "-69.994, -54.1107, -29.9811, 0.22", "-70.7973, -54.8307, -30.6615, 0.22", "-71.4531, -55.4381, -31.15, 0.29", "-71.5214, -55.503, -31.1905, 0.29", "-71.8827, -55.8412, -31.4572, 0.81", "-71.9306, -55.8856, -31.499, 0.81", "-72.4379, -56.3637, -31.9479, 0.81", "-73.3995, -57.2993, -32.8911, 0.37", "-73.4378, -57.3387, -32.9308, 0.37", "-75.0376, -59.0825, -34.5503, 0.15", "-75.6691, -59.9119, -35.2023, 0.96", "-76.1692, -60.6676, -35.7109, 1.4", "-76.5828, -61.5246, -36.1704, 0.52", "-76.595, -61.5776, -36.186, 0.52", "-76.6572, -62.6212, -36.3528, 0.29", "-76.4225, -64.4073, -36.3148, 0.29", "-76.4077, -64.4806, -36.3082, 0.29", "-76.0529, -65.9282, -36.1113, 0.29", "-75.5368, -68.2236, -35.7074, 0.29", "-75.5112, -68.3594, -35.6808, 0.29", "-75.2852, -70.1859, -35.2328, 0.29", "-75.2725, -70.3511, -35.1851, 0.29", "-75.24, -71.4184, -34.8316, 0.15", "-75.3556, -72.9172, -34.1789, 0.15", "-75.3693, -72.9746, -34.1494, 0.15", "-75.7359, -74.1274, -33.5775, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.96935, -21.8605, -2.00035, 0.88", "-8.18093, -22.276, -3.74964, 0.88", "-8.89324, -22.4374, -4.28007, 0.88", "-9.68398, -22.6166, -4.86891, 0.88", "-9.71611, -22.6239, -4.89283, 0.88", "-10.2624, -22.7477, -5.2996, 0.88", "-11.6603, -23.0644, -6.34056, 1.4", "-11.9491, -23.1838, -6.49738, 1.4" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.96935, -21.8605, -2.00035, 0.81", "-6.42178, -24.4633, -0.772693, 0.81", "-6.74693, -26.3339, 0.109607, 0.81", "-6.98937, -27.7287, 0.76748, 0.81", "-7.20388, -28.9627, 1.34953, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.96935, -21.8605, -2.00035, 2.5", "-5.92326, -22.5396, -1.76665, 2.5", "-5.79611, -24.2998, -1.28605, 1.03", "-5.62884, -25.7283, -1.01806, 0.59", "-5.40842, -26.8947, -0.86756, 0.59", "-5.38622, -26.9635, -0.86681, 0.59", "-5.09325, -27.7369, -0.898432, 0.59", "-4.4329, -29.0397, -1.10723, 0.59", "-3.24321, -30.8862, -1.60793, 1.03", "-2.1368, -32.3927, -2.10007, 0.81", "-0.0258624, -35.0197, -2.89905, 0.81", "0.0137466, -35.0669, -2.91218, 0.81", "2.22896, -37.6075, -3.5768, 0.81", "4.50815, -40.3022, -4.18527, 0.81", "4.55102, -40.3608, -4.19472, 0.81", "5.53497, -42.1341, -4.38662, 0.52", "6.04277, -43.3906, -4.44744, 0.52", "6.17894, -43.848, -4.44881, 0.74", "6.62692, -46.4444, -4.327, 1.11", "6.94117, -49.2883, -4.17591, 1.11", "7.14751, -51.2135, -4.10901, 0.81", "7.16559, -51.3667, -4.10616, 0.81", "7.55777, -53.6739, -3.95655, 0.59", "7.57297, -53.7336, -3.95025, 0.59", "8.14598, -55.4176, -3.66062, 0.59", "8.16922, -55.4739, -3.64744, 0.59", "8.83976, -57.0149, -3.24448, 0.59", "9.67013, -58.9755, -2.77779, 0.44", "10.2273, -60.3399, -2.52654, 0.44", "10.4144, -60.8779, -2.44413, 1.03", "10.4343, -60.9469, -2.43547, 1.03", "10.7159, -62.0435, -2.3577, 1.03", "10.7338, -62.1238, -2.36278, 1.03", "11.0007, -63.027, -2.53394, 0.52", "11.5155, -64.189, -2.79397, 0.52", "11.6312, -64.3947, -2.84036, 0.52", "12.2994, -65.4354, -3.06548, 0.74", "13.0182, -66.5146, -3.26912, 0.88", "13.6966, -67.5554, -3.38952, 0.66", "14.2605, -68.4734, -3.42753, 0.44", "14.8514, -69.5997, -3.41441, 0.44", "14.8786, -69.6668, -3.41119, 0.44", "15.4215, -71.3871, -3.26795, 0.44", "15.6584, -72.3509, -3.17155, 0.88", "15.8788, -73.461, -3.08041, 1.18", "16.2547, -75.2979, -2.92014, 0.88", "16.5402, -76.538, -2.79204, 1.18", "16.5604, -76.6071, -2.78489, 1.18", "17.2846, -78.6409, -2.57633, 0.66", "17.3177, -78.7166, -2.56949, 0.66", "18.4321, -80.644, -2.36578, 0.66", "18.4748, -80.703, -2.35832, 0.66", "19.6841, -82.1165, -2.18443, 0.66", "19.7326, -82.1716, -2.17907, 0.66", "20.4534, -82.9734, -2.14769, 0.29", "21.1396, -83.8566, -2.22238, 0.29", "21.1807, -83.9159, -2.23435, 0.29", "21.8055, -84.919, -2.46469, 0.81", "22.5389, -86.1388, -2.77892, 1.18", "23.1616, -87.1677, -3.05061, 0.88", "23.9343, -88.4537, -3.3899, 0.29", "24.4355, -89.2703, -3.60235, 0.29", "24.6178, -89.5447, -3.67081, 0.29", "25.6725, -90.9806, -3.95291, 0.66", "26.2538, -91.6992, -4.03886, 1.03", "26.8741, -92.4667, -4.04143, 0.37", "26.9191, -92.5244, -4.03598, 0.37", "27.575, -93.469, -3.87155, 0.37", "28.1256, -94.3222, -3.59804, 0.81", "28.5184, -94.9895, -3.31053, 0.81", "29.1538, -96.012, -2.81445, 0.52", "29.1904, -96.0685, -2.78516, 0.52", "30.1891, -97.4555, -2.05007, 0.88", "31.2927, -98.835, -1.28074, 0.52", "31.6498, -99.1989, -1.03942, 0.52", "32.3836, -99.658, -0.565963, 0.74", "32.5793, -99.7253, -0.450304, 0.74", "33.4197, -99.8183, 0.093612, 0.52", "33.493, -99.8143, 0.139416, 0.52", "35.2111, -99.5052, 1.193, 0.29", "37.1213, -99.0272, 2.46674, 0.22", "37.4328, -98.9271, 2.69513, 0.37", "39.1139, -98.3171, 3.9849, 0.81", "42.6129, -108.039, 3.61614, 0.81", "45.947, -117.818, 3.90871, 0.81", "47.6263, -127.833, 5.71769, 0.81", "50.4748, -137.679, 7.01145, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "30.1842, 79.9618, 13.8999, 0.29", "28.8296, 84.6105, 19.9324, 0.29", "26.4927, 88.1101, 26.5013, 0.29", "24.6977, 91.6918, 33.1903, 0.29", "21.5629, 95.7785, 39.008, 0.29", "18.8721, 100.89, 44.106, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "30.1842, 79.9618, 13.8999, 0.74", "30.4564, 88.6231, 15.4617, 0.29", "30.9708, 96.9747, 18.2991, 0.29", "30.8263, 105.541, 20.3726, 0.29" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "68.9192, 67.7245, 13.0317, 0.37", "68.9705, 67.8062, 13.0582, 0.37", "69.4995, 68.6206, 13.2288, 0.37", "69.5705, 68.7208, 13.2446, 0.37", "70.039, 69.365, 13.4308, 0.59", "70.574, 70.09, 13.67, 0.59", "70.6929, 70.2514, 13.7241, 0.59", "71.5216, 71.3373, 14.0905, 0.29", "71.862, 71.73, 14.2193, 0.29", "73.2479, 73.2312, 14.6482, 0.15", "73.3393, 73.3244, 14.6792, 0.15", "73.7687, 73.7423, 14.845, 0.15", "74.1784, 74.1392, 15.0123, 0.15", "75.1009, 75.0276, 15.3768, 0.15", "75.5327, 75.4514, 15.5184, 0.44", "76.5826, 76.455, 15.7855, 0.29", "77.3378, 77.1905, 15.9939, 0.29", "77.7004, 77.5552, 16.1069, 0.29", "78.5193, 78.4687, 16.4022, 0.29", "78.9672, 79.0689, 16.588, 0.74", "86.5824, 88.8586, 18.4185, 0.74", "94.5395, 98.5549, 18.5437, 0.74", "101.893, 108.665, 19.0048, 0.74" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "68.9192, 67.7245, 13.0317, 0.29", "68.9903, 67.6746, 13.0184, 0.29", "69.0455, 67.6469, 13.0085, 0.29", "69.5144, 67.4347, 12.925, 0.29", "69.6433, 67.3839, 12.9023, 0.29", "70.0299, 67.2427, 12.8347, 0.29", "70.2063, 67.1783, 12.8038, 0.29", "71.281, 66.8075, 12.6166, 0.29", "71.3401, 66.7887, 12.6063, 0.29", "71.9099, 66.639, 12.5087, 0.88", "71.9791, 66.6229, 12.497, 0.88", "80.6866, 64.494, 11.6832, 0.88", "89.1167, 61.504, 12.4503, 0.88", "97.6877, 59.3279, 14.1324, 0.88", "106.44, 57.4681, 15.1782, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "35.3207, 14.594, -53.3029, 0.74", "35.6182, 17.2893, -55.756, 0.74", "35.834, 18.2981, -56.9245, 0.74", "35.8477, 18.3515, -56.9902, 0.74", "36.0452, 18.9359, -57.7912, 0.74", "36.3098, 19.6422, -58.7989, 0.74", "36.8447, 20.9304, -60.7681, 0.59", "37.8258, 22.9067, -63.9405, 0.59", "37.8925, 23.0267, -64.1506, 0.59", "38.712, 24.4317, -66.6423, 0.59", "38.7364, 24.4712, -66.7151, 0.59", "39.6161, 25.8381, -69.3345, 0.29", "39.6423, 25.8779, -69.4066, 0.29", "39.869, 26.2916, -70.0502, 0.29", "40.1884, 27.1183, -71.2147, 0.29", "40.1907, 27.1676, -71.2691, 0.29", "39.9682, 27.5721, -71.7481, 0.29", "39.8077, 27.71, -71.9201, 0.29", "39.3165, 28.1295, -72.4491, 0.29", "38.7444, 28.5888, -73.0505, 0.74", "38.2603, 29.132, -73.9931, 0.74", "37.5202, 30.49, -76.4003, 0.37", "37.5088, 30.5278, -76.4775, 0.37", "37.4166, 31.0082, -77.5169, 0.37", "37.4087, 31.0609, -77.6375, 0.37", "37.1544, 33.2078, -82.3503, 0.37", "37.1212, 33.5855, -83.1649, 1.03", "36.8034, 35.8273, -87.7288, 1.03", "36.7943, 35.8662, -87.8058, 1.03", "36.3915, 37.2396, -90.3638, 0.29", "36.2152, 37.7791, -91.2518, 0.29", "36.174, 37.9009, -91.41, 0.29", "35.8737, 38.9588, -92.6107, 0.29", "35.864, 39.0202, -92.6694, 0.29", "35.7304, 41.0686, -94.6355, 0.29", "35.7327, 41.1303, -94.6944, 0.29", "35.8611, 42.6236, -96.2691, 1.33", "35.9306, 43.1668, -96.8621, 1.33", "36.2936, 45.2188, -99.2032, 0.29", "36.3927, 45.9758, -100.081, 0.29", "36.3905, 46.0635, -100.177, 0.29", "36.2802, 46.9369, -101.069, 1.03", "36.1963, 47.2523, -101.365, 1.03", "36.1796, 47.3062, -101.43, 1.03", "35.9239, 48.3631, -102.62, 0.22", "35.6484, 49.5782, -104.057, 0.22", "35.6351, 49.6316, -104.123, 0.22", "35.3296, 50.8526, -105.657, 1.18", "34.6358, 53.8786, -109.34, 0.22", "34.434, 55.1287, -110.884, 0.22", "34.3025, 56.7102, -112.908, 1.18", "34.3228, 58.4525, -115.509, 0.15", "34.3302, 58.596, -115.739, 0.15", "34.4555, 59.4752, -117.115, 0.15", "34.7827, 60.9736, -119.328, 0.15", "35.1523, 62.3701, -121.38, 1.62", "36.313, 65.8204, -126.162, 0.22", "36.3324, 65.8696, -126.23, 0.22", "37.0256, 67.6312, -128.715, 0.22", "37.3611, 68.4952, -129.968, 1.25", "37.4639, 68.8199, -130.357, 1.25", "37.4879, 68.8925, -130.417, 1.25" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "35.3207, 14.594, -53.3029, 0.96", "35.4311, 14.6053, -53.3515, 0.96", "36.3156, 14.693, -53.7516, 0.74", "37.4597, 14.7925, -54.1975, 0.74", "38.7204, 14.9111, -54.726, 0.74", "38.7827, 14.9173, -54.7586, 0.74", "40.6416, 15.1359, -55.9587, 0.74", "40.6813, 15.1425, -55.9881, 0.74", "41.903, 15.4056, -57.0682, 0.74", "42.8762, 15.6701, -57.9836, 0.74", "43.9194, 16.0586, -59.0822, 1.62", "44.7799, 16.4249, -60.0928, 0.66", "45.4537, 16.7364, -60.9243, 0.52", "46.3999, 17.1809, -62.1043, 1.25", "47.0647, 17.479, -62.9272, 1.25", "49.054, 18.3065, -65.1597, 0.59", "50.4256, 18.8158, -66.6836, 0.96", "51.9324, 19.3179, -68.3908, 0.96", "51.9655, 19.3278, -68.4267, 0.96", "54.3768, 20.0065, -70.8444, 0.96", "55.0771, 20.177, -71.5097, 1.47", "57.2584, 20.64, -73.3575, 0.74", "57.3035, 20.6508, -73.3905, 0.74", "59.6169, 21.2568, -74.9517, 0.74", "60.3737, 21.4766, -75.4264, 1.47", "61.3898, 21.8148, -75.9603, 0.59", "61.5715, 21.8737, -76.0527, 0.59", "62.849, 22.2767, -76.5915, 0.59", "62.9511, 22.3058, -76.6425, 0.59", "64.0169, 22.5399, -77.3268, 2.14", "64.2833, 22.5879, -77.4985, 2.14", "65.63, 22.7458, -78.3352, 0.66", "66.0388, 22.7771, -78.5948, 0.66", "66.0785, 22.7795, -78.625, 0.66", "67.5195, 22.935, -80.0087, 0.66", "67.5527, 22.9412, -80.0453, 0.66", "68.6866, 23.2504, -81.4738, 0.66", "68.8247, 23.3074, -81.6815, 1.18", "69.7153, 23.7507, -83.2095, 0.81", "70.6191, 24.2325, -84.8214, 0.44", "70.893, 24.4011, -85.3717, 0.44", "70.9149, 24.4136, -85.4146, 0.44", "71.6603, 24.8218, -86.8549, 0.44", "71.7008, 24.8365, -86.9171, 0.44", "72.3716, 24.9533, -87.7186, 0.44", "72.4054, 24.9592, -87.7547, 0.44", "73.1561, 25.0895, -88.5673, 1.4", "73.1961, 25.0986, -88.6068, 1.4", "73.5643, 25.1922, -88.9518, 1.4", "75.7897, 25.7447, -91.2048, 0.52", "77.2303, 26.1147, -92.7418, 0.37", "77.2651, 26.124, -92.7762, 0.37", "79.1547, 26.6652, -94.5359, 0.37", "79.1954, 26.6772, -94.5738, 0.37", "81.4271, 27.349, -96.6776, 0.37", "81.4683, 27.3609, -96.715, 0.37", "82.9894, 27.7793, -98.0495, 0.37", "83.0254, 27.789, -98.0825, 0.37", "84.2694, 28.1164, -99.2643, 0.29", "85.7366, 28.515, -100.597, 0.29", "85.774, 28.5258, -100.628, 0.29", "88.3846, 29.2648, -102.701, 0.29", "89.6255, 29.6071, -103.726, 1.62", "89.664, 29.6176, -103.756, 1.62", "90.3979, 29.8149, -104.232, 1.62", "91.095, 30.0205, -104.641, 0.29", "92.135, 30.331, -105.287, 0.29", "93.5988, 30.7368, -106.162, 0.29", "93.6414, 30.747, -106.186, 0.29", "94.9496, 31.0165, -107.044, 0.29", "95.2939, 31.0771, -107.299, 1.11", "96.6685, 31.3046, -108.365, 0.29", "97.6533, 31.4497, -109.137, 0.29", "98.8837, 31.656, -109.999, 1.47", "100.057, 31.8723, -110.815, 0.15", "100.098, 31.8791, -110.842, 0.15", "100.852, 31.9907, -111.265, 0.15", "100.904, 32.0001, -111.287, 0.15", "101.938, 32.1934, -111.694, 0.15", "102.038, 32.2067, -111.73, 0.15", "103.123, 32.3092, -112.123, 0.15", "104.011, 32.3687, -112.499, 1.11", "104.349, 32.3778, -112.665, 1.11", "104.39, 32.3805, -112.694, 1.11", "105.633, 32.5009, -113.78, 0.37", "105.931, 32.5536, -114.078, 0.59", "106.137, 32.6199, -114.309, 0.59", "106.184, 32.638, -114.358, 0.59", "107.467, 33.1508, -115.69, 0.29", "107.699, 33.2342, -115.882, 0.22", "107.738, 33.2483, -115.909, 0.22", "108.356, 33.4515, -116.285, 0.22", "108.66, 33.5428, -116.461, 0.22", "109.559, 33.8011, -116.94, 1.03", "111.295, 34.2759, -117.741, 0.22", "111.851, 34.425, -118.007, 0.22", "111.895, 34.4362, -118.028, 0.22", "112.96, 34.6943, -118.583, 1.11", "113.321, 34.7857, -118.774, 1.11", "113.391, 34.8055, -118.809, 1.11" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "78.7825, 17.6411, -39.5839, 0.44", "79.439, 17.7225, -39.6083, 0.44", "79.9793, 17.8141, -39.6822, 0.44", "80.2484, 17.8637, -39.7294, 0.44", "81.7318, 18.2455, -40.5189, 0.44", "81.7842, 18.262, -40.554, 0.44", "82.3404, 18.4535, -40.9612, 0.81", "83.2385, 18.7779, -41.6617, 0.81", "83.2885, 18.8008, -41.712, 0.81", "84.9782, 19.7128, -43.547, 0.22", "85.2969, 19.9154, -43.9255, 0.22", "85.3517, 19.9537, -43.9983, 0.22", "85.5777, 20.135, -44.3155, 0.44", "86.3593, 20.8095, -45.3962, 0.29", "87.2087, 21.5876, -46.5338, 0.29", "88.5209, 22.9203, -48.3822, 0.96", "89.5099, 23.9973, -49.9207, 0.44", "89.9379, 24.4399, -50.5497, 0.44", "90.109, 24.6127, -50.7922, 1.03", "90.3449, 24.8341, -51.071, 1.03", "91.5003, 25.9361, -52.322, 0.29", "91.5661, 25.9815, -52.3662, 0.29", "93.211, 26.8018, -53.1294, 0.29", "93.3317, 26.8473, -53.1818, 0.29", "94.6651, 27.259, -53.6834, 0.29", "94.7624, 27.2869, -53.7116, 0.29", "96.4646, 27.7819, -54.1664, 0.29", "96.5299, 27.8045, -54.1939, 0.29", "97.1563, 28.0326, -54.544, 0.29", "97.2806, 28.0763, -54.6163, 0.29", "98.1274, 28.3404, -55.054, 1.03", "99.541, 28.7072, -55.5825, 0.29", "99.7386, 28.7441, -55.6214, 0.29", "101.705, 29.0271, -56.0083, 0.29", "101.768, 29.0343, -56.0209, 0.29", "103.051, 29.1255, -56.21, 0.81", "103.714, 29.1582, -56.2658, 0.22", "105.383, 29.2543, -56.2768, 0.22", "106.321, 29.3472, -56.3437, 1.03", "106.44, 29.3655, -56.3612, 1.03", "107.457, 29.5797, -56.5787, 0.15", "108.434, 29.8704, -56.8824, 0.15", "108.492, 29.8918, -56.902, 0.15", "109.762, 30.515, -57.4647, 0.81", "109.879, 30.5705, -57.5143, 0.81", "110.167, 30.6769, -57.656, 0.81", "110.255, 30.7031, -57.707, 0.81", "110.719, 30.7919, -57.9612, 0.15", "110.777, 30.8008, -57.989, 0.15", "111.9, 30.8977, -58.3823, 0.15", "112.961, 30.9592, -58.7634, 0.74", "113.166, 30.965, -58.839, 0.74", "113.237, 30.9663, -58.8643, 0.74" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "78.7825, 17.6411, -39.5839, 0.66", "78.9637, 17.434, -39.8266, 0.66", "79.0029, 17.3947, -39.881, 0.66", "79.7164, 16.803, -40.7655, 0.66", "79.9148, 16.6781, -40.9903, 0.66", "80.6537, 16.2761, -41.7883, 0.66", "81.4306, 15.9254, -42.5141, 1.18", "81.569, 15.8755, -42.6291, 1.18", "82.2515, 15.6838, -43.1052, 1.18", "83.0514, 15.5295, -43.5766, 0.44", "83.1315, 15.5164, -43.6171, 0.44", "84.3551, 15.3281, -44.1304, 0.44", "84.6807, 15.2997, -44.3043, 0.44", "85.5284, 15.2908, -44.8577, 0.44", "85.5919, 15.294, -44.9053, 0.44", "86.149, 15.3502, -45.3464, 0.74", "86.2195, 15.3627, -45.4021, 0.74", "88.3632, 15.9078, -47.066, 0.44", "89.7735, 16.2143, -47.9235, 0.44", "89.8463, 16.2245, -47.9532, 0.44", "90.6738, 16.2549, -48.1169, 0.88", "91.6329, 16.2298, -48.1688, 0.88", "92.5155, 16.1681, -48.119, 0.88", "94.3153, 15.9103, -47.7424, 0.44", "96.3152, 15.538, -47.2277, 0.44", "98.0041, 15.172, -46.7527, 1.25", "98.0888, 15.1517, -46.7274, 1.25", "98.9708, 14.9218, -46.4559, 1.25", "100.66, 14.4581, -45.9821, 0.37", "101.791, 14.2085, -45.8391, 0.37", "101.948, 14.1821, -45.8477, 0.37", "103.228, 14.0325, -46.1629, 0.37", "103.333, 14.021, -46.1993, 0.37", "104.596, 13.9053, -46.7696, 0.37", "106.706, 13.7645, -47.8942, 1.03", "107.58, 13.681, -48.3748, 1.92", "108.045, 13.6244, -48.6302, 0.29", "108.919, 13.5175, -49.1462, 0.29", "109.056, 13.5029, -49.2257, 0.29", "110.091, 13.398, -49.7869, 0.29", "110.742, 13.2706, -50.0881, 0.74", "110.821, 13.2549, -50.1294, 0.74", "112.099, 12.9973, -50.7983, 0.74", "112.169, 12.9824, -50.8337, 0.74", "112.837, 12.826, -51.1401, 0.22", "113.717, 12.6053, -51.4983, 0.22", "113.876, 12.5476, -51.5183, 0.22", "114.597, 12.2085, -51.4481, 0.96", "114.959, 12.0161, -51.3597, 0.96", "115.668, 11.6384, -51.1619, 0.96", "115.736, 11.6025, -51.1411, 0.96", "117.912, 10.4813, -50.4495, 0.37", "118.016, 10.428, -50.4183, 0.37", "119.717, 9.58443, -50.0054, 0.37", "119.788, 9.55095, -49.9921, 0.37", "120.405, 9.28512, -49.93, 0.59", "120.64, 9.20142, -49.9354, 0.22", "120.716, 9.18088, -49.9459, 0.22", "121.855, 8.87346, -50.0133, 0.22", "121.932, 8.85312, -50.014, 0.22", "122.414, 8.72289, -50.02, 0.44", "122.665, 8.6483, -50.03, 0.44", "123.741, 8.29606, -50.1009, 0.22", "126.176, 7.46148, -50.3482, 0.22", "126.89, 7.20559, -50.4448, 1.03", "127.599, 6.94446, -50.5619, 0.22", "129.002, 6.40384, -50.8386, 0.22", "129.384, 6.25332, -50.9315, 0.22", "131.275, 5.52153, -51.4755, 0.22", "133.548, 4.61334, -52.1675, 0.22", "134.702, 4.16471, -52.5213, 1.18", "135.704, 3.78903, -52.8289, 1.18", "136.389, 3.54853, -53.0354, 0.15", "138.675, 2.78147, -53.7208, 0.15", "138.758, 2.75465, -53.7459, 0.52", "139.374, 2.57179, -53.9303, 0.15", "139.522, 2.53245, -53.9736, 0.15", "141.51, 2.07302, -54.518, 0.15", "142.063, 1.95259, -54.6602, 0.96", "142.86, 1.79581, -54.8725, 0.96", "143.097, 1.75242, -54.936, 0.96", "143.825, 1.63896, -55.1266, 0.15", "145.525, 1.45437, -55.5395, 0.15", "145.614, 1.45093, -55.559, 0.15", "145.947, 1.4485, -55.6182, 0.81", "146.025, 1.44985, -55.6287, 0.81", "146.853, 1.46823, -55.696, 0.81", "147.436, 1.48714, -55.7012, 0.81", "147.515, 1.49033, -55.7015, 0.81", "148.131, 1.50823, -55.7121, 0.15", "148.221, 1.51061, -55.7142, 0.15", "149.219, 1.53823, -55.7413, 0.15", "149.34, 1.53845, -55.7395, 0.15", "151.37, 1.51198, -55.6406, 0.15", "151.816, 1.51005, -55.6041, 0.44", "152.054, 1.51243, -55.5777, 0.44", "152.229, 1.51726, -55.5521, 0.44", "153.208, 1.56053, -55.3636, 0.15", "153.461, 1.57147, -55.3059, 0.15", "154.062, 1.6024, -55.1026, 0.15", "154.558, 1.62451, -54.938, 0.88", "155.127, 1.64872, -54.7737, 0.88", "155.292, 1.65983, -54.7405, 0.88" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-35.8158, 43.375, 42.2743, 0.37", "-40.3613, 44.5445, 48.9135, 0.37", "-44.5824, 45.7685, 55.7511, 0.37", "-48.7571, 46.4751, 62.7008, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-35.8158, 43.375, 42.2743, 0.29", "-43.9079, 45.9899, 47.5708, 0.37", "-53.0664, 48.5408, 50.7604, 0.37", "-61.6856, 52.1161, 54.3418, 0.37", "-69.8035, 57.5352, 56.1095, 0.37", "-77.5732, 63.6003, 56.8829, 0.37", "-84.2627, 70.5465, 58.7146, 0.37", "-90.2252, 77.5216, 62.1487, 0.37", "-94.6318, 85.6168, 65.1741, 0.37", "-99.6989, 92.7318, 69.5608, 0.37", "-102.953, 101.252, 72.7238, 0.37", "-104.876, 109.56, 77.2412, 0.37", "-107.292, 117.168, 82.7666, 0.37" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-41.3981, 78.2769, 50.2059, 0.29", "-46.935, 86.3754, 56.8077, 0.29", "-51.334, 95.0556, 63.4156, 0.29", "-54.4772, 102.749, 71.7425, 0.29", "-57.4007, 109.801, 80.7266, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-41.3981, 78.2769, 50.2059, 0.74", "-45.3453, 83.3033, 53.8261, 0.29", "-49.8204, 87.7939, 57.6116, 0.29", "-54.3256, 92.4881, 61.0894, 0.29", "-59.054, 96.4789, 65.1693, 0.29", "-64.433, 100.237, 68.6763, 0.29", "-69.9245, 103.76, 72.2766, 0.29", "-75.3976, 107.062, 76.1189, 0.29", "-80.423, 111.633, 79.0585, 0.29", "-85.0187, 116.377, 82.3483, 0.29", "-90.3223, 120.599, 85.3721, 0.29", "-95.3256, 124.535, 89.1883, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "59.0593, -52.4951, 4.55217, 0.59", "60.2935, -52.6207, 4.58411, 0.59", "60.5395, -52.6433, 4.58095, 0.59", "61.0025, -52.684, 4.569, 0.59", "62.3042, -52.8435, 4.54448, 0.44", "63.3331, -52.9862, 4.52803, 0.44", "64.6118, -53.2227, 4.45237, 0.81", "65.6604, -53.4851, 4.33572, 0.52", "65.7366, -53.5116, 4.32764, 0.52", "66.8518, -54.0188, 4.15671, 0.22", "66.9314, -54.0624, 4.14107, 0.22", "68.1651, -54.9157, 3.85609, 0.52", "69.1676, -55.7489, 3.59546, 0.44", "70.2364, -56.7338, 3.29476, 0.44", "71.2009, -57.6716, 3.01084, 0.22", "71.3179, -57.7903, 2.97463, 0.22", "71.7809, -58.2661, 2.84381, 0.22", "72.0764, -58.5548, 2.82951, 0.22", "72.6732, -59.1109, 2.96461, 0.22", "72.7373, -59.1641, 3.00199, 0.22", "73.218, -59.5589, 3.36323, 1.03", "73.2694, -59.6049, 3.40345, 1.03", "74.6458, -60.9421, 4.53462, 0.22", "75.3221, -61.6744, 5.12458, 0.22", "75.3654, -61.7239, 5.16935, 0.22", "75.8784, -62.3007, 5.67902, 0.37", "76.2551, -62.7029, 6.06294, 0.59", "76.5939, -63.0271, 6.36127, 0.59", "76.648, -63.0735, 6.39726, 0.59", "77.7267, -63.8316, 7.09426, 0.22", "78.5623, -64.3473, 7.60485, 0.22", "79.434, -64.8197, 8.11962, 0.74", "80.0726, -65.1373, 8.47391, 0.74", "80.9003, -65.5709, 8.88059, 0.74", "80.9629, -65.615, 8.90377, 0.74", "81.5305, -66.1094, 9.03289, 0.37", "81.6482, -66.2308, 9.0499, 0.22", "81.7012, -66.2896, 9.0515, 0.22", "82.3916, -67.0949, 9.05227, 0.22", "83.7379, -68.7147, 9.01782, 0.22", "83.7916, -68.7729, 9.01496, 0.22", "84.3856, -69.3778, 8.96886, 0.59", "84.9792, -69.9641, 8.92058, 1.03", "85.5777, -70.5331, 8.86913, 0.44", "85.8587, -70.7754, 8.84216, 0.22", "87.7697, -72.1628, 8.64792, 0.22", "87.8347, -72.2093, 8.64256, 0.22", "98.2115, -77.2177, 8.17101, 0.22", "107.213, -84.2196, 7.53518, 0.22", "116.811, -90.0249, 4.98368, 0.22", "125.835, -96.9085, 3.59139, 0.22", "134.015, -104.764, 2.91064, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "59.0593, -52.4951, 4.55217, 0.88", "59.2373, -53.0902, 4.49356, 0.88", "59.5084, -54.3221, 4.39976, 0.66", "59.5222, -54.3956, 4.39485, 0.66", "59.7517, -55.4828, 4.33156, 0.66", "60.0763, -56.948, 4.25315, 0.59", "60.2727, -57.7925, 4.16978, 0.81", "60.5296, -58.8743, 4.04998, 0.81", "60.569, -59.0283, 4.02487, 0.81", "60.8674, -60.0805, 3.81393, 0.52", "60.8932, -60.1491, 3.79611, 0.52", "61.5883, -60.972, 3.50037, 0.37", "61.6733, -61.0349, 3.4726, 0.37", "62.4094, -61.3972, 3.28231, 0.37", "62.8472, -61.5711, 3.18748, 0.37", "63.7164, -61.8538, 3.04223, 0.37", "65.2641, -62.351, 2.74124, 0.22", "65.4386, -62.4061, 2.71242, 0.22", "66.3845, -62.769, 2.5374, 0.81", "66.5358, -62.8332, 2.50604, 0.81", "67.253, -63.2511, 2.38148, 1.18", "68.4098, -64.1738, 2.25349, 0.88", "68.8338, -64.6265, 2.243, 0.29", "69.7945, -65.8214, 2.30298, 0.29", "69.8529, -65.9101, 2.31834, 0.29", "70.781, -67.462, 2.68431, 0.29", "71.1283, -68.0943, 2.82161, 0.81", "71.5781, -68.9291, 2.99848, 0.81", "72.0009, -69.7329, 3.15435, 0.81", "72.8439, -71.332, 3.45752, 0.44", "73.4133, -72.4292, 3.63498, 0.44", "74.1217, -73.8033, 3.76158, 1.11", "74.4315, -74.3784, 3.7829, 1.11" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "104.416, -42.6605, 75.6687, 0.29", "106.342, -44.2126, 79.8852, 0.29", "107.748, -46.4462, 83.9895, 0.29", "108.944, -49.4849, 87.5784, 0.29", "109.612, -53.3682, 90.3282, 0.29", "110.71, -56.9359, 93.3791, 0.29", "111.066, -60.8479, 96.1529, 0.29", "111.011, -64.8046, 98.8908, 0.29", "111.442, -69.1778, 100.71, 0.29", "112.484, -73.3216, 102.824, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "104.416, -42.6605, 75.6687, 0.74", "113.906, -43.2148, 80.9305, 0.29", "122.487, -42.799, 87.5905, 0.29", "131.44, -40.0199, 93.0466, 0.29", "139.851, -37.7642, 99.5162, 0.29", "149.492, -36.5766, 104.394, 0.29", "158.113, -34.3436, 110.595, 0.29", "166.309, -29.8286, 115.971, 0.29", "173.526, -25.558, 122.738, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "45.4318, -77.8766, 69.6544, 0.37", "45.7658, -78.2636, 69.7923, 0.37", "46.3982, -79.0678, 70.2638, 0.37", "47.0837, -80.1852, 71.0698, 0.22", "47.1098, -80.2422, 71.1124, 0.22", "47.5415, -81.925, 72.308, 0.52", "47.6344, -82.5372, 72.7289, 0.52", "47.5789, -83.6734, 73.5265, 0.37", "47.2643, -84.8263, 74.2548, 0.22", "46.9717, -85.5336, 74.6292, 0.22", "46.265, -86.8513, 75.1028, 0.22", "46.2226, -86.9122, 75.1158, 0.22", "45.6676, -87.6139, 75.2159, 0.22", "44.3156, -89.2001, 75.4018, 0.22", "43.7252, -89.9242, 75.4822, 0.22", "42.6315, -91.4132, 75.6296, 0.22", "41.083, -93.733, 75.8409, 0.15", "39.8677, -95.7156, 76.0108, 0.15", "38.3646, -98.3816, 76.188, 0.15", "37.03, -100.868, 76.3186, 0.15", "35.2247, -104.436, 76.4951, 0.15", "34.6694, -105.679, 76.5437, 0.59", "34.2082, -106.916, 76.5653, 0.59", "33.848, -108.083, 76.5611, 0.29", "33.6953, -108.765, 76.5085, 0.29", "31.2779, -118.973, 78.209, 0.29", "28.2334, -128.523, 81.9136, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "45.4318, -77.8766, 69.6544, 0.59", "45.7478, -78.0566, 69.7354, 0.59", "46.619, -78.6173, 70.1052, 0.22", "47.0501, -78.8795, 70.2295, 0.22", "48.6504, -79.842, 70.631, 0.22", "48.7031, -79.8725, 70.6376, 0.22", "50.0849, -80.6741, 70.8145, 0.22", "51.6746, -81.6297, 71.0445, 0.22", "53.6997, -82.9173, 71.3906, 0.22", "53.751, -82.9499, 71.3971, 0.22", "55.4767, -83.9398, 71.4002, 0.22", "63.3592, -87.6782, 72.3999, 0.22", "71.2641, -90.6586, 74.9125, 0.22", "79.6934, -93.1839, 75.6413, 0.22", "88.4879, -94.2775, 75.8204, 0.22", "96.8411, -97.1058, 75.8634, 0.22", "105.42, -98.7462, 77.3145, 0.22", "114.029, -100.45, 78.4731, 0.22", "122.725, -101.592, 79.7509, 0.22", "131.159, -101.317, 82.4981, 0.22", "139.39, -101.762, 85.7763, 0.22", "147.935, -101.603, 88.1652, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-11.9491, -23.1838, -6.49738, 0.96", "-13.8943, -24.6385, -11.2421, 0.96", "-14.3993, -25.0162, -12.474, 0.96", "-14.4265, -25.0366, -12.5404, 0.96" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-11.9491, -23.1838, -6.49738, 1.4", "-12.2664, -23.3802, -6.28572, 1.4", "-13.3023, -24.0366, -5.55647, 1.03", "-13.372, -24.0829, -5.50279, 1.03", "-14.2295, -24.6761, -4.82796, 0.59", "-15.0812, -25.3612, -4.06454, 0.59", "-15.9683, -26.1203, -3.28304, 0.66", "-16.0163, -26.1669, -3.24063, 0.66", "-16.8994, -27.1357, -2.44977, 0.66", "-17.5888, -27.96, -1.86252, 0.44", "-18.4996, -29.1774, -1.11758, 0.44", "-19.0143, -29.9273, -0.735882, 0.66", "-19.7126, -30.938, -0.272789, 0.66", "-19.8075, -31.0552, -0.212668, 0.66", "-20.7261, -31.9268, 0.342756, 0.66", "-20.8006, -31.978, 0.397407, 0.66", "-21.5152, -32.3035, 0.980655, 0.66", "-22.3859, -32.6106, 1.83355, 0.88", "-23.5508, -32.9472, 3.04412, 1.03", "-24.4986, -33.2002, 4.06311, 0.74", "-25.6999, -33.5424, 5.39511, 0.66", "-26.8006, -33.8966, 6.62856, 0.66", "-27.4777, -34.1718, 7.41442, 0.66", "-28.4199, -34.6925, 8.57318, 0.66", "-28.4593, -34.7224, 8.6223, 0.66", "-29.4705, -35.683, 9.85378, 0.66", "-29.5143, -35.7282, 9.90191, 0.66", "-30.3925, -36.6423, 10.8369, 0.66", "-30.4332, -36.6816, 10.877, 0.66", "-31.409, -37.5361, 11.8244, 0.66", "-31.5719, -37.6577, 11.9707, 1.03", "-32.1927, -38.0214, 12.4751, 0.52", "-33.2386, -38.5595, 13.2578, 0.52", "-33.291, -38.5852, 13.2962, 0.52", "-33.9059, -38.902, 13.7491, 0.66", "-34.6955, -39.3215, 14.3303, 0.66", "-35.5091, -39.7901, 14.9175, 1.4", "-36.0102, -40.1057, 15.2755, 0.81", "-37.0336, -40.7694, 15.9863, 0.52", "-37.9752, -41.3939, 16.6479, 0.37", "-38.7807, -41.9405, 17.2224, 0.81", "-39.4294, -42.4081, 17.6851, 0.96", "-40.1336, -42.9367, 18.1826, 0.96", "-41.0775, -43.6514, 18.8315, 0.66", "-41.8536, -44.2301, 19.3384, 0.66", "-41.9227, -44.284, 19.3848, 0.66", "-43.0816, -45.212, 20.1731, 0.66", "-43.1304, -45.2508, 20.2034, 0.66", "-44.0502, -46.0191, 20.7171, 0.66", "-45.3138, -47.1281, 21.3469, 0.66", "-46.3345, -48.0243, 21.7936, 0.66", "-46.3759, -48.0627, 21.811, 0.66", "-47.2909, -48.9503, 22.1996, 0.66", "-48.2219, -49.904, 22.621, 0.66", "-48.6559, -50.354, 22.8385, 0.44", "-48.7009, -50.3995, 22.8641, 0.44", "-49.1833, -50.8048, 23.1264, 0.44", "-49.81, -51.2102, 23.4542, 0.44", "-50.6947, -51.6051, 23.8643, 0.88", "-51.9462, -51.9965, 24.3539, 0.96", "-52.4884, -52.1352, 24.5384, 0.96", "-53.8493, -52.4363, 24.9209, 0.44", "-55.1516, -52.6755, 25.2075, 0.44", "-56.4076, -52.9055, 25.4197, 0.44", "-57.3546, -53.0781, 25.5443, 0.44", "-57.4223, -53.0939, 25.5512, 0.44", "-58.1827, -53.3331, 25.6335, 0.66", "-58.2444, -53.3633, 25.644, 0.66", "-59.0604, -53.8812, 25.7614, 0.66", "-59.1229, -53.9281, 25.772, 0.66", "-59.7779, -54.414, 25.858, 0.52", "-60.4957, -54.8885, 25.9388, 0.29", "-61.4357, -55.412, 26.0293, 0.29", "-62.2943, -55.8324, 26.0955, 0.96", "-63.3037, -56.2633, 26.1855, 0.96", "-64.4183, -56.7188, 26.3516, 0.88", "-65.5878, -57.166, 26.6027, 0.74", "-67.1044, -57.7199, 27.0628, 0.52", "-67.1574, -57.738, 27.084, 0.52", "-68.3706, -58.1593, 27.7111, 0.52", "-69.399, -58.5076, 28.3503, 0.96", "-70.185, -58.8094, 28.964, 1.18", "-70.9407, -59.1685, 29.6821, 0.59", "-71.244, -59.3469, 30.0114, 0.29", "-71.5083, -59.5034, 30.2646, 0.15", "-71.5668, -59.5367, 30.3072, 0.29", "-72.0598, -59.7585, 30.4954, 0.29", "-72.4406, -59.8924, 30.5956, 0.29", "-72.9785, -60.0142, 30.6525, 0.29", "-73.9751, -60.1657, 30.7398, 0.29", "-74.6979, -60.242, 30.8267, 0.44", "-75.6279, -60.3117, 30.9606, 0.96", "-76.5388, -60.3684, 31.118, 1.33", "-77.9127, -60.4655, 31.4328, 1.33", "-78.7635, -60.5587, 31.6853, 0.52", "-79.639, -60.7184, 32.0159, 0.22", "-79.7102, -60.7387, 32.0459, 0.22", "-80.4373, -61.0417, 32.3499, 0.22", "-81.0299, -61.3573, 32.5909, 0.52", "-81.6083, -61.7226, 32.8456, 0.88", "-81.6645, -61.7577, 32.8662, 0.88", "-82.2635, -62.1148, 33.0533, 0.88", "-83.4994, -62.7953, 33.453, 0.22", "-83.5592, -62.8252, 33.4722, 0.22", "-84.5555, -63.2998, 33.8327, 0.22", "-85.0859, -63.5407, 34.037, 0.22", "-85.1369, -63.5636, 34.0581, 0.22", "-85.9051, -63.932, 34.3969, 0.22", "-86.1645, -64.0817, 34.5216, 0.22", "-87.3955, -64.8497, 35.0757, 0.22", "-88.0601, -65.3115, 35.3513, 1.25", "-88.1113, -65.3531, 35.3717, 1.25", "-88.8682, -66.0064, 35.6615, 1.62", "-89.5239, -66.6095, 35.8814, 1.62", "-90.1942, -67.2724, 36.1021, 0.22", "-90.4887, -67.6012, 36.1982, 0.22", "-91.6369, -69.0247, 36.5961, 0.22", "-91.7236, -69.1386, 36.6257, 0.22", "-92.1424, -69.7177, 36.7673, 0.22", "-92.5975, -70.3637, 36.92, 0.96", "-93.2587, -71.3234, 37.143, 0.96", "-93.7671, -71.9955, 37.3349, 0.15", "-94.2606, -72.6028, 37.5383, 0.15", "-94.3101, -72.6583, 37.5633, 0.15", "-95.0913, -73.4465, 38.0328, 0.15", "-95.2247, -73.5721, 38.1189, 0.15", "-95.9358, -74.1666, 38.5487, 0.15", "-95.9854, -74.2061, 38.5765, 0.15", "-96.9498, -74.9603, 39.0781, 0.15", "-97.2508, -75.202, 39.2227, 0.88", "-97.918, -75.7448, 39.5155, 1.11", "-98.5762, -76.3076, 39.8088, 0.66", "-98.8768, -76.5785, 39.935, 0.22", "-99.2969, -76.9401, 40.1111, 0.15", "-99.3481, -76.9815, 40.1319, 0.15", "-99.9585, -77.4644, 40.4196, 0.15", "-100.443, -77.8339, 40.6921, 0.15", "-100.794, -78.114, 40.9173, 0.37", "-101.058, -78.3189, 41.0832, 0.15", "-101.171, -78.4035, 41.1465, 0.15", "-101.826, -78.898, 41.4744, 0.15", "-102.448, -79.3695, 41.7549, 0.15", "-102.786, -79.6151, 41.897, 0.81", "-103.475, -80.1071, 42.1941, 0.81", "-104.044, -80.4827, 42.4489, 0.22", "-104.69, -80.875, 42.7481, 0.22", "-104.811, -80.943, 42.8016, 0.22", "-105.484, -81.3461, 43.0812, 0.22", "-105.54, -81.3811, 43.1036, 0.22", "-106.683, -82.1655, 43.5543, 0.22", "-106.803, -82.246, 43.5845, 0.22", "-107.712, -82.734, 43.4361, 0.22", "-108.478, -83.1332, 43.1756, 0.22", "-108.594, -83.1831, 43.1188, 0.22", "-109.116, -83.3894, 42.8444, 0.96", "-110.647, -83.9678, 42.0346, 0.66", "-113.131, -84.7971, 40.7852, 0.22", "-114.002, -85.0735, 40.3887, 0.22", "-116.035, -85.7578, 39.5755, 0.52", "-116.702, -86.0067, 39.3522, 0.96", "-117.744, -86.4274, 39.0988, 0.96", "-118.891, -86.9893, 39.0183, 0.15", "-119.95, -87.612, 39.1469, 0.22", "-120.976, -88.2714, 39.3701, 0.22", "-121.245, -88.4831, 39.478, 0.22", "-121.613, -88.7961, 39.6699, 0.44", "-122.02, -89.2317, 39.9691, 0.74", "-122.055, -89.278, 40.0058, 0.74", "-122.436, -89.6988, 40.3456, 0.74", "-122.478, -89.7412, 40.3799, 0.74", "-123.176, -90.452, 40.8873, 0.22", "-123.984, -91.2296, 41.3721, 0.22", "-124.032, -91.273, 41.3977, 0.22", "-124.874, -91.9856, 41.8272, 0.22", "-125.445, -92.4465, 42.1021, 0.22", "-125.557, -92.5298, 42.154, 0.22", "-127.197, -93.6371, 42.8165, 0.22", "-127.335, -93.7268, 42.8734, 0.22", "-128.889, -94.8325, 43.6377, 0.22", "-129.117, -95.008, 43.7673, 0.22", "-129.767, -95.5219, 44.1602, 0.52", "-130.446, -96.0579, 44.5967, 1.33", "-131.099, -96.5744, 45.0508, 1.55", "-132.26, -97.462, 45.8918, 0.37", "-132.608, -97.7232, 46.1643, 0.22", "-132.85, -97.9028, 46.3566, 0.22", "-133.641, -98.5039, 46.9821, 0.22", "-133.736, -98.5822, 47.0668, 0.22", "-134.119, -98.8941, 47.3879, 0.22", "-134.188, -98.9482, 47.4325, 0.22", "-134.503, -99.2561, 47.6682, 0.59", "-134.913, -99.6753, 47.9915, 0.59", "-135.465, -100.301, 48.4478, 0.22", "-135.563, -100.404, 48.5286, 0.22", "-135.883, -100.718, 48.7939, 0.22", "-136.167, -100.974, 49.0168, 0.22", "-137.108, -101.755, 49.7321, 0.22", "-137.26, -101.88, 49.849, 0.66", "-137.513, -102.077, 50.0279, 0.22", "-137.558, -102.114, 50.0649, 0.22", "-138.311, -102.746, 50.7477, 0.22", "-138.371, -102.798, 50.8063, 0.22", "-138.791, -103.153, 51.2419, 0.66", "-139.338, -103.572, 51.802, 0.66", "-139.892, -104.015, 52.3428, 0.22", "-139.936, -104.049, 52.3842, 0.22", "-140.437, -104.371, 52.7357, 0.22", "-140.962, -104.657, 53.0187, 0.22", "-141.164, -104.743, 53.0854, 0.22", "-142.988, -105.414, 53.4906, 0.22", "-143.063, -105.438, 53.5021, 0.22", "-144.828, -105.955, 53.7467, 0.15", "-145.538, -106.154, 53.8325, 1.11", "-146.862, -106.453, 53.8583, 0.44", "-147.46, -106.55, 53.8023, 0.44", "-147.606, -106.572, 53.779, 0.44", "-148.848, -106.788, 53.551, 0.44", "-149.642, -106.929, 53.3351, 0.81", "-152.752, -107.534, 52.3582, 0.22", "-155.269, -108.057, 51.5165, 0.74", "-156.125, -108.255, 51.2231, 0.74", "-156.198, -108.274, 51.1979, 0.74", "-159.299, -109.148, 49.9856, 0.22", "-160.529, -109.525, 49.4886, 0.22", "-160.734, -109.61, 49.4198, 0.22", "-161.961, -110.2, 49.0851, 0.22", "-162.45, -110.443, 48.983, 0.88", "-164.603, -111.596, 48.6279, 0.22", "-164.74, -111.684, 48.6206, 0.22", "-166.508, -112.755, 48.4235, 0.22", "-166.827, -112.942, 48.3828, 0.81", "-167.6, -113.363, 48.2726, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.20388, -28.9627, 1.34953, 0.29", "-8.71908, -28.6614, -3.22521, 0.29", "-8.88622, -28.5617, -3.94686, 0.44", "-8.89204, -28.548, -4.00557, 0.44", "-8.90833, -28.1938, -5.23026, 0.44", "-8.98972, -28.6104, -4.05655, 0.44", "-9.00299, -28.6517, -3.95307, 0.44", "-9.33414, -29.324, -2.7143, 0.44", "-9.57139, -29.7163, -2.01448, 0.44", "-9.59002, -29.7478, -1.96686, 0.44", "-9.76964, -30.0376, -1.62204, 0.66", "-9.78981, -30.0825, -1.58918, 0.66", "-10.0381, -30.6895, -1.27991, 0.66", "-10.0563, -30.7425, -1.26372, 0.66", "-10.2986, -31.4577, -1.04103, 0.44", "-10.3169, -31.5103, -1.02379, 0.44", "-10.5574, -32.258, -0.767852, 0.44", "-10.5744, -32.3106, -0.748932, 0.44", "-10.7979, -33.0444, -0.503561, 0.44", "-10.9176, -33.5586, -0.313018, 0.74", "-10.9777, -34.1138, -0.0361759, 0.74", "-11.0203, -34.8749, 0.398392, 0.59", "-11.021, -34.932, 0.433856, 0.59", "-11.0026, -35.9609, 1.14837, 0.59", "-10.9302, -36.9148, 1.95556, 0.81", "-10.7897, -38.1977, 3.30049, 0.52", "-10.7205, -38.8621, 4.09138, 0.52", "-10.7166, -38.9048, 4.14462, 0.52", "-10.6293, -39.9393, 5.39946, 0.52", "-10.5655, -40.9477, 6.54288, 0.74", "-10.5457, -41.8525, 7.43899, 0.52", "-10.5523, -42.3784, 7.89008, 0.52", "-10.5562, -43.1232, 8.50649, 0.52", "-10.6525, -44.2004, 9.39447, 0.52", "-10.8849, -45.0948, 10.132, 0.81", "-10.902, -45.1479, 10.1701, 0.81", "-11.0633, -45.5786, 10.4811, 0.74", "-11.5426, -46.4848, 11.3623, 0.59", "-12.1667, -47.0764, 12.3425, 0.81", "-12.7932, -47.3098, 13.2129, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.20388, -28.9627, 1.34953, 0.74", "-7.2334, -29.1259, 1.28832, 0.74", "-7.41335, -29.8574, 1.02445, 1.18", "-7.73674, -31.0411, 0.606882, 1.03", "-8.22925, -32.8852, -0.0423198, 0.74", "-8.67389, -34.4079, -0.614309, 0.66", "-9.21545, -36.1964, -1.27941, 0.66", "-9.45508, -36.8368, -1.54789, 1.03", "-9.51042, -36.9667, -1.60681, 1.03", "-9.82854, -37.7181, -1.96067, 0.81", "-10.2461, -39.0205, -2.54091, 0.81", "-10.5576, -40.4901, -3.14853, 0.81", "-10.7767, -42.3148, -3.87619, 0.52", "-10.8362, -43.5833, -4.34901, 0.74", "-10.7705, -45.5625, -4.92201, 1.03", "-10.5314, -47.7605, -5.38701, 0.96", "-10.5166, -47.8452, -5.39932, 0.96", "-10.2699, -49.0478, -5.52318, 1.18", "-9.86722, -50.8714, -5.63281, 1.03", "-9.3562, -53.4598, -5.74706, 1.03", "-9.03376, -55.388, -5.80193, 0.96", "-8.80128, -56.9942, -5.86841, 0.81", "-8.6321, -58.1849, -5.92986, 1.03", "-8.48248, -59.0352, -6.01784, 0.74", "-8.30583, -59.8821, -6.17348, 0.59", "-8.28561, -59.9529, -6.19275, 0.59", "-7.81927, -61.2046, -6.57395, 0.59", "-7.75289, -61.3485, -6.61568, 0.59", "-6.32645, -64.1598, -7.23437, 0.59", "-6.29447, -64.2289, -7.24218, 0.59", "-5.48825, -66.0778, -7.33447, 0.59", "-5.43145, -66.2312, -7.33053, 0.59", "-5.13417, -67.2792, -7.21248, 1.03", "-4.5304, -69.6989, -6.8353, 0.81", "-4.01544, -72.5267, -6.17151, 0.81", "-4.00557, -72.5897, -6.15639, 0.81", "-3.86097, -74.0054, -5.80367, 1.55", "-3.7772, -75.0074, -5.55817, 1.92" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "18.8721, 100.89, 44.106, 0.37", "13.2498, 104.478, 50.0646, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "18.8721, 100.89, 44.106, 0.29", "19.4989, 104.947, 51.3697, 0.37", "19.444, 109.575, 58.2728, 0.37", "19.5069, 113.165, 65.8299, 0.37", "18.692, 117.593, 72.8286, 0.37", "18.2719, 122.579, 79.4353, 0.37" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "37.4879, 68.8925, -130.417, 0.22", "39.387, 70.7374, -131.969, 0.22", "40.8637, 72.2032, -133.156, 0.22", "40.9358, 72.2746, -133.223, 0.22", "42.9329, 74.2957, -135.08, 0.22", "43.4934, 74.9182, -135.588, 1.03", "43.7965, 75.2762, -135.904, 1.03", "43.8315, 75.3226, -135.939, 1.03", "44.7392, 76.7613, -137.206, 0.22", "45.3585, 77.804, -138.173, 0.22", "45.9757, 79.0329, -139.283, 0.22", "46.8022, 81.0294, -141.195, 0.22", "47.1739, 82.3188, -142.282, 0.22", "47.6053, 84.5365, -144.228, 0.22", "47.6124, 84.5955, -144.28, 0.22", "47.6192, 85.943, -145.406, 0.22", "47.4305, 88.5327, -147.239, 0.22", "47.1198, 91.4609, -149.171, 0.22", "46.6509, 95.2037, -151.632, 0.22", "46.6205, 95.4977, -151.813, 0.44", "46.259, 100.03, -154.546, 0.15", "46.1705, 103.346, -156.413, 0.15", "46.276, 107.912, -158.673, 0.15", "46.2843, 108.012, -158.719, 0.15", "46.5258, 110.002, -159.476, 0.15", "46.546, 110.111, -159.518, 0.15", "47.6389, 112.8, -160.63, 0.15", "47.737, 112.954, -160.686, 0.15", "48.4597, 113.869, -160.642, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "37.4879, 68.8925, -130.417, 0.22", "36.9067, 70.6146, -130.988, 0.22", "36.5489, 71.7146, -131.27, 0.22", "36.4929, 71.8919, -131.33, 0.22", "36.0665, 73.5663, -131.901, 0.22", "35.9804, 74.0684, -132.052, 0.66", "35.91, 74.603, -132.204, 0.22", "35.8564, 75.7276, -132.448, 0.22", "35.9133, 77.3436, -132.803, 0.22", "36.1252, 78.7589, -133.092, 0.22", "36.5148, 80.4631, -133.425, 0.22", "36.5302, 80.519, -133.435, 0.22", "36.8224, 81.4226, -133.599, 0.22", "36.8448, 81.4768, -133.606, 0.22", "37.8536, 83.5554, -133.589, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-57.4007, 109.801, 80.7266, 0.37", "-61.7812, 120.051, 89.9878, 0.37", "-65.4625, 130.447, 99.3591, 0.37", "-69.7251, 138.919, 110.461, 0.37", "-71.4479, 148.52, 121.194, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-57.4007, 109.801, 80.7266, 0.29", "-61.3155, 117.59, 88.2909, 0.37", "-64.5533, 124.663, 96.8351, 0.37", "-66.6118, 132.371, 105.109, 0.37", "-67.4732, 139.532, 114.062, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "74.4315, -74.3784, 3.7829, 0.74", "74.1157, -75.2222, 4.63545, 0.74", "73.8465, -76.0743, 5.1612, 0.59", "73.5816, -76.9126, 5.67845, 0.59", "73.5664, -76.9607, 5.70814, 0.59", "73.1737, -78.2037, 6.47511, 0.59", "73.156, -78.2599, 6.50975, 0.59", "72.5482, -80.2522, 7.97105, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "74.4315, -74.3784, 3.7829, 1.11", "74.5865, -74.5743, 3.67049, 1.11", "75.0967, -75.2329, 3.37692, 0.52", "75.1503, -75.3068, 3.3578, 0.52", "75.5291, -75.9082, 3.26558, 0.52", "75.5487, -75.944, 3.25812, 0.52", "75.9037, -76.6385, 3.0947, 0.74", "75.9224, -76.6811, 3.08637, 0.74", "76.2743, -77.5915, 2.96216, 0.74", "76.4664, -78.2039, 2.86869, 0.74", "76.6382, -78.8989, 2.75191, 0.29", "76.6462, -78.9387, 2.74518, 0.29", "76.6798, -79.1459, 2.69513, 0.29", "76.6877, -79.1906, 2.68257, 0.29", "76.7845, -79.7216, 2.50738, 0.29", "76.8987, -80.1692, 2.36543, 0.52", "76.9102, -80.2076, 2.3555, 0.52", "77.1571, -80.9998, 2.14264, 0.52", "77.3234, -81.5712, 1.99257, 0.52", "77.3324, -81.6043, 1.98405, 0.52", "77.393, -81.8792, 1.91584, 0.22", "77.43, -82.1237, 1.86324, 0.22", "77.4345, -82.1692, 1.85214, 0.22", "77.4681, -82.7092, 1.72578, 0.22", "77.4761, -82.7549, 1.71809, 0.22", "77.7338, -83.5291, 1.6857, 0.22", "77.7713, -83.6133, 1.68923, 0.22", "78.1261, -84.2831, 1.75395, 0.81", "78.3382, -84.633, 1.80193, 0.81", "78.982, -85.5834, 1.96797, 0.37", "79.5094, -86.3271, 2.12872, 0.37", "79.7634, -86.6649, 2.22195, 0.44", "79.8766, -86.8155, 2.26835, 0.15", "80.4085, -87.5217, 2.52598, 0.15", "80.4322, -87.5541, 2.53676, 0.15", "80.4828, -87.6304, 2.55154, 0.66", "80.5814, -87.8021, 2.56173, 0.88", "80.6106, -87.8528, 2.56405, 0.88", "80.8045, -88.2021, 2.58091, 0.88", "84.7424, -92.6775, 2.21482, 0.88", "88.1288, -97.4886, 1.32058, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-14.4265, -25.0366, -12.5404, 0.59", "-14.4648, -25.1445, -15.3549, 0.59", "-14.4591, -25.1495, -15.3852, 0.59", "-14.1406, -25.3924, -15.769, 0.59", "-14.1234, -25.405, -15.7857, 0.59", "-13.7414, -25.6992, -16.2999, 0.59", "-13.6964, -25.7335, -16.3639, 0.59", "-13.0469, -26.2495, -17.1045, 0.59", "-12.781, -26.4831, -17.482, 1.03", "-12.3396, -26.9693, -18.381, 0.88", "-11.9824, -27.5287, -19.5974, 0.74", "-11.9385, -27.6375, -19.8692, 0.74", "-11.8767, -27.8877, -20.5931, 0.74", "-11.876, -27.8952, -20.6193, 0.74", "-11.8443, -28.0867, -21.333, 1.03", "-11.7764, -28.3695, -22.2591, 0.29", "-11.7078, -28.4705, -22.5948, 0.44", "-11.5131, -28.6201, -23.122, 0.88", "-11.2826, -28.7223, -23.512, 1.03", "-11.0199, -28.8122, -23.914, 1.03", "-11.003, -28.8155, -23.9352, 1.03", "-10.5, -28.8746, -24.5112, 1.03", "-10.113, -28.8993, -24.9936, 0.44", "-10.0965, -28.8998, -25.0155, 0.44", "-9.59614, -28.9292, -26.0859, 0.74", "-9.46883, -28.9691, -26.4507, 0.74", "-9.46136, -28.9742, -26.4765, 0.74", "-9.41819, -29.0234, -26.6455, 0.74", "-9.41115, -29.0332, -26.6742, 0.74", "-9.0885, -29.5907, -28.0014, 0.88", "-8.92811, -29.956, -28.7686, 0.88", "-8.75341, -30.3747, -29.6725, 0.59", "-8.68867, -30.5244, -30.0059, 0.88", "-8.68305, -30.5372, -30.0336, 0.88", "-8.55776, -30.8598, -30.7054, 0.52", "-8.44627, -31.2438, -31.4802, 0.37", "-8.42344, -31.4246, -31.8578, 0.37", "-8.42162, -31.4372, -31.8817, 0.37", "-8.37471, -31.672, -32.3179, 0.37", "-8.25897, -32.1467, -33.1011, 0.37", "-8.10647, -32.6833, -33.9588, 0.37", "-8.09579, -32.7152, -34.0089, 0.37", "-7.98404, -33.0402, -34.5804, 0.37", "-7.73302, -33.6872, -35.8557, 0.37", "-7.63754, -33.886, -36.2975, 0.37", "-7.44047, -34.1913, -37.0308, 0.96", "-7.3463, -34.3156, -37.3751, 0.96", "-7.03659, -34.7089, -38.5808, 0.44", "-7.02965, -34.7168, -38.6102, 0.44", "-6.938, -34.8018, -38.9402, 1.33", "-6.86961, -34.8818, -39.3516, 1.33", "-6.64638, -35.1755, -40.9076, 0.66", "-6.63854, -35.1906, -40.9962, 0.66", "-6.56742, -35.3484, -41.8777, 1.55", "-6.53899, -35.4235, -42.2961, 1.55", "-6.37537, -35.9958, -45.5895, 0.81", "-6.3615, -36.0652, -45.9949, 1.77", "-6.30687, -36.3539, -47.6304, 0.44", "-6.28193, -36.4789, -48.2941, 0.44", "-6.28097, -36.4845, -48.3209, 0.44", "-6.24357, -36.7052, -49.2227, 0.88", "-6.24054, -36.7166, -49.2515, 0.88", "-6.18284, -37.036, -49.9825, 0.37", "-6.13305, -37.2355, -50.3579, 0.37", "-6.06721, -37.5139, -50.8975, 0.74", "-6.05294, -37.6368, -51.1583, 0.74", "-6.03821, -37.9768, -51.8956, 0.37", "-6.03779, -37.988, -51.9203, 0.37", "-6.03759, -38.1967, -52.3833, 0.37", "-6.0297, -38.5009, -53.0804, 1.18", "-5.96558, -39.3593, -55.0801, 0.44", "-5.96443, -39.3689, -55.1055, 0.44", "-5.94097, -39.5246, -55.5596, 0.44", "-5.88515, -39.7752, -56.3672, 0.44", "-5.8593, -39.8555, -56.6561, 0.44", "-5.84621, -39.8773, -56.738, 0.44", "-5.56437, -40.1205, -57.7367, 0.37", "-5.55785, -40.1275, -57.7664, 0.37", "-5.48444, -40.219, -58.2014, 0.37", "-5.4088, -40.4152, -59.0275, 0.37", "-5.40558, -40.4393, -59.1169, 0.37", "-5.39506, -40.5458, -59.4474, 0.37", "-5.36532, -40.9429, -60.4994, 0.37", "-5.36432, -40.9546, -60.5281, 0.37", "-5.29812, -41.4704, -61.7413, 0.15", "-5.24214, -41.7531, -62.3752, 0.88", "-5.20444, -41.897, -62.6842, 0.88", "-5.2012, -41.9092, -62.7082, 0.88", "-5.07477, -42.4632, -63.7251, 0.29", "-4.92015, -43.1493, -64.9351, 0.29", "-4.81018, -43.6332, -65.7599, 0.29", "-4.66404, -44.3306, -66.9342, 0.96", "-4.49073, -45.2327, -68.4687, 0.22", "-4.3963, -45.7493, -69.3407, 0.37", "-4.29873, -46.3348, -70.3123, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-14.4265, -25.0366, -12.5404, 0.74", "-15.5843, -26.6292, -13.6787, 0.74", "-15.6142, -26.6858, -13.7115, 0.74", "-15.9727, -27.4906, -14.1341, 0.74", "-16.4629, -28.808, -14.7292, 0.74", "-16.9268, -29.9758, -15.189, 0.74", "-16.9616, -30.0455, -15.2143, 0.74", "-17.5159, -31.1644, -15.4574, 0.74", "-17.5918, -31.2961, -15.4824, 0.74", "-18.2081, -32.1925, -15.6207, 0.74", "-18.83, -32.9918, -15.6845, 0.74", "-19.777, -34.0934, -15.8717, 0.44", "-19.8203, -34.1483, -15.8904, 0.44", "-20.2426, -34.6868, -16.2132, 0.66", "-20.2735, -34.7292, -16.2464, 0.66", "-20.637, -35.2253, -16.7474, 0.96", "-21.3382, -36.2357, -17.8789, 0.96", "-22.0333, -37.1645, -19.07, 1.18", "-23.0489, -38.2031, -20.6826, 1.18", "-24.1247, -39.0781, -22.2317, 1.18", "-25.3356, -39.8999, -23.8363, 0.96", "-25.4273, -39.9468, -23.9422, 0.96", "-26.9, -40.4884, -25.3788, 0.88", "-28.9299, -41.0328, -27.0819, 0.44", "-29.7862, -41.1986, -27.6522, 0.66", "-29.852, -41.209, -27.6853, 0.66", "-31.3676, -41.471, -28.2492, 0.66", "-32.4684, -41.698, -28.5879, 0.44", "-32.5487, -41.72, -28.6048, 0.44", "-34.2441, -42.3597, -28.8888, 0.74", "-34.9281, -42.674, -29.0577, 0.74", "-34.9891, -42.7079, -29.0813, 0.74", "-35.9479, -43.2454, -29.813, 0.44", "-36.3932, -43.5022, -30.1782, 0.44", "-36.7332, -43.6901, -30.4415, 0.44", "-37.6182, -44.2011, -31.0885, 0.44", "-39.0502, -44.9994, -32.1093, 0.81", "-41.9198, -46.5607, -34.0933, 0.96", "-43.4201, -47.397, -35.1203, 1.77", "-45.5792, -48.6248, -36.6334, 1.47", "-46.5022, -49.1859, -37.2774, 1.47", "-48.2765, -50.4307, -38.54, 1.47", "-48.32, -50.4749, -38.5784, 1.47", "-48.7698, -51.1122, -39.0999, 1.55", "-49.7282, -52.7241, -40.4938, 1.11", "-50.0866, -53.4603, -41.1069, 0.66", "-50.6732, -54.7122, -42.117, 0.37", "-51.4558, -56.6458, -43.4805, 0.37", "-52.106, -58.1997, -44.5385, 0.37", "-52.5763, -59.2623, -45.2176, 0.37", "-52.628, -59.3654, -45.2807, 0.37", "-53.0775, -60.0939, -45.7179, 0.37", "-54.0586, -61.214, -46.5356, 0.37", "-55.0078, -62.2305, -47.2051, 0.22", "-55.3603, -62.641, -47.4549, 0.22", "-56.5963, -64.1238, -48.3099, 1.25", "-57.3351, -65.0131, -48.7823, 1.62", "-59.631, -67.7125, -50.1757, 0.22", "-61.4611, -69.7299, -51.1595, 0.22", "-61.5063, -69.7829, -51.1797, 0.22", "-62.1934, -70.657, -51.4616, 0.22", "-62.2458, -70.7196, -51.4758, 0.22", "-63.7523, -72.3072, -51.841, 0.22", "-63.8648, -72.4126, -51.8671, 0.22", "-64.8375, -73.2433, -52.2213, 0.22", "-65.0069, -73.3959, -52.2888, 0.22", "-66.3989, -74.7377, -52.8551, 0.22", "-67.1167, -75.5716, -53.1907, 0.22", "-67.8107, -76.5316, -53.5501, 0.96", "-68.2569, -77.2704, -53.8212, 1.25", "-68.6465, -77.9323, -54.1151, 0.52", "-69.0397, -78.6101, -54.4259, 0.15", "-70.0949, -80.2991, -55.3474, 0.15", "-70.1814, -80.4211, -55.4213, 0.15", "-70.982, -81.5006, -56.0701, 0.15", "-72.3847, -83.2307, -57.1504, 0.15", "-72.6449, -83.5238, -57.3456, 1.4", "-74.3493, -85.3453, -58.6168, 1.4", "-74.9636, -85.9745, -59.0716, 0.22", "-75.657, -86.69, -59.5967, 0.22", "-76.0845, -87.1242, -59.9348, 0.22", "-77.0638, -88.171, -60.7094, 0.22", "-77.1077, -88.2178, -60.7436, 0.22", "-77.9981, -89.241, -61.3847, 1.03", "-78.5919, -89.9367, -61.8151, 1.33", "-79.449, -91.0727, -62.4758, 0.74", "-79.8519, -91.769, -62.7957, 0.22", "-80.1987, -92.6074, -63.0545, 0.22", "-80.5252, -93.6944, -63.2525, 0.22", "-80.5396, -93.7641, -63.2541, 0.22", "-80.6894, -94.3456, -63.2697, 1.03", "-80.9544, -95.2701, -63.272, 0.74", "-81.2032, -96.1052, -63.2707, 0.74", "-81.5422, -97.097, -63.3012, 0.44", "-81.9872, -98.1766, -63.3829, 0.22", "-83.0283, -100.461, -63.5843, 0.15", "-83.2396, -100.851, -63.6313, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.7932, -47.3098, 13.2129, 0.52", "-13.121, -47.5295, 13.326, 0.52", "-13.7562, -48.4543, 13.8802, 0.52", "-14.5267, -50.4395, 15.1621, 0.44", "-14.7887, -51.4444, 15.764, 0.44", "-14.8019, -51.5187, 15.8094, 0.44", "-15.0575, -53.3542, 16.9424, 0.44", "-15.2217, -55.2712, 18.2763, 0.44", "-15.2214, -55.5038, 18.4538, 0.44", "-15.1411, -57.0299, 19.7556, 0.44", "-15.1397, -58.0371, 20.7199, 0.44", "-15.1481, -58.0985, 20.7843, 0.44", "-15.5336, -59.4225, 22.3388, 0.44", "-15.8393, -60.1295, 23.2517, 0.37", "-15.9934, -60.4921, 23.7818, 0.37", "-16.1651, -61.0458, 24.622, 0.66", "-16.3485, -61.8116, 25.7354, 0.66", "-16.5031, -62.8514, 27.1614, 0.29", "-16.5007, -63.5047, 27.9726, 0.29", "-16.4156, -64.9607, 29.6457, 0.29", "-16.2503, -66.4295, 31.1889, 0.29", "-16.2377, -66.4996, 31.2623, 0.29", "-16.1702, -66.7613, 31.5375, 0.96", "-15.9221, -67.7041, 32.4963, 0.37", "-15.6167, -68.7259, 33.4494, 0.37", "-15.601, -68.7927, 33.5063, 0.37", "-15.2526, -70.6623, 35.2162, 0.37", "-15.2036, -70.9395, 35.475, 0.74", "-15.1457, -71.2975, 35.8264, 0.29", "-14.9588, -72.6851, 37.2957, 0.29", "-14.7846, -73.4845, 38.1938, 0.29", "-16.1599, -82.8857, 46.6336, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.7932, -47.3098, 13.2129, 0.81", "-12.8402, -47.2377, 13.3416, 0.81", "-12.9262, -47.1029, 13.593, 0.44", "-13.0689, -46.8177, 14.0551, 0.44", "-13.2673, -46.4213, 14.6975, 0.44", "-13.4201, -46.1161, 15.1922, 0.44", "-13.6658, -45.6253, 15.9875, 0.22", "-13.7503, -45.4395, 16.293, 0.22", "-13.8744, -45.1419, 16.8295, 0.22", "-15.5491, -42.0315, 22.1641, 0.22", "-18.2763, -39.9149, 27.6143, 0.22", "-19.9192, -36.8071, 32.9605, 0.22", "-20.8171, -32.9341, 37.9118, 0.22", "-21.8388, -29.5294, 43.21, 0.22", "-24.2042, -26.6133, 48.4056, 0.22", "-27.2927, -23.7058, 53.215, 0.22", "-30.987, -21.7887, 58.1589, 0.22", "-34.4251, -20.3931, 63.4737, 0.22", "-37.2824, -19.9601, 69.305, 0.22", "-40.0354, -20.2541, 75.2073, 0.22", "-42.7781, -20.7145, 81.1052, 0.22", "-44.3415, -20.9141, 87.4299, 0.22", "-45.1994, -21.9358, 93.8141, 0.22", "-45.7565, -22.246, 100.303, 0.22", "-46.1257, -21.7505, 106.78, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-3.7772, -75.0074, -5.55817, 0.37", "-7.30947, -75.3118, -3.56267, 0.37", "-7.52267, -75.3358, -3.4245, 0.37", "-8.81444, -75.5171, -2.51528, 0.37", "-9.59796, -75.6754, -1.84756, 0.22", "-10.5053, -75.8586, -1.07429, 0.22", "-11.8423, -76.1286, 0.0650742, 0.22", "-12.1412, -76.2199, 0.428539, 0.44", "-12.8712, -76.4655, 1.30698, 0.44", "-13.9786, -76.877, 2.60535, 0.22", "-24.262, -76.5548, 8.82926, 0.22", "-35.3546, -77.3581, 13.4135, 0.22", "-45.528, -76.5131, 19.7556, 0.22", "-55.3965, -75.5893, 26.5477, 0.22" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-3.7772, -75.0074, -5.55817, 1.33", "-3.2613, -75.648, -5.71504, 1.33", "-2.76629, -76.3475, -5.91332, 0.88", "-2.74078, -76.3947, -5.92377, 0.88", "-2.19223, -77.6234, -6.16077, 0.66", "-1.59583, -79.1907, -6.4366, 0.66", "-1.01388, -80.9219, -6.71657, 0.66", "-0.564789, -82.46, -6.94565, 0.66", "-0.0320592, -84.5261, -7.23354, 0.96", "0.184911, -85.5526, -7.36928, 1.69", "0.325992, -86.4631, -7.48076, 1.25", "0.434544, -87.3959, -7.58894, 0.96", "0.441981, -87.4581, -7.59625, 0.96", "0.659261, -88.6877, -7.71851, 0.59", "1.14728, -90.8125, -7.93865, 0.59", "1.71067, -92.858, -8.13667, 0.96", "2.34618, -94.9368, -8.32561, 1.11", "2.74712, -96.2333, -8.43489, 0.74", "3.12522, -97.4469, -8.52358, 0.74", "3.33109, -98.1702, -8.57387, 0.52", "3.58164, -99.1201, -8.63369, 0.52", "3.60586, -99.2529, -8.64291, 0.52", "3.65255, -100.555, -8.80431, 0.52", "3.64667, -100.636, -8.8192, 0.52", "3.48462, -102.105, -9.09047, 0.44", "3.4794, -102.176, -9.09991, 0.44", "3.48002, -102.856, -9.14402, 0.44", "3.60995, -104.835, -9.20753, 0.44", "3.61811, -104.897, -9.20583, 0.44", "3.79252, -105.948, -9.13872, 0.88", "4.13225, -107.791, -8.95063, 0.88", "4.42943, -109.814, -8.69141, 0.88", "4.43532, -109.877, -8.68186, 0.88", "4.44878, -110.99, -8.44552, 1.25", "4.40992, -111.77, -8.27193, 1.33", "4.29479, -112.7, -8.05792, 0.96", "4.05154, -113.874, -7.76046, 0.52", "3.84617, -114.649, -7.62212, 0.52", "3.51502, -115.832, -7.50395, 1.18", "3.21258, -116.855, -7.4913, 1.18", "3.19275, -116.924, -7.49411, 1.18", "2.91865, -117.996, -7.62975, 0.96", "2.61412, -119.281, -7.9115, 0.96", "2.46197, -119.992, -8.12624, 1.25", "2.34035, -120.798, -8.42839, 1.03", "2.33538, -120.866, -8.45445, 1.03", "2.33747, -121.745, -8.79249, 0.88", "2.42273, -122.764, -9.12285, 0.88", "2.56079, -123.727, -9.36824, 0.59", "2.75891, -124.945, -9.64091, 0.52", "2.83808, -125.404, -9.72904, 0.52", "2.85992, -125.55, -9.75043, 0.52", "3.03175, -126.847, -9.86641, 0.52", "3.03758, -126.936, -9.86795, 0.52", "3.01241, -128.08, -9.81857, 0.74", "3.00602, -128.143, -9.81511, 0.74", "2.90882, -129.068, -9.78184, 0.81", "2.86016, -129.601, -9.77495, 0.81", "2.79429, -130.408, -9.79576, 0.29", "2.75124, -131.064, -9.81744, 0.29", "2.74923, -131.136, -9.82044, 0.29", "2.76642, -132.063, -9.87653, 0.29", "2.77188, -132.135, -9.88248, 0.29", "2.91065, -133.062, -9.99166, 0.29", "3.06994, -133.849, -10.1486, 0.29", "3.15622, -134.218, -10.2356, 0.88", "3.29817, -134.773, -10.375, 0.88", "3.34395, -134.947, -10.42, 0.88", "3.49619, -135.602, -10.5372, 0.59", "3.73626, -136.648, -10.6783, 0.59", "3.74804, -136.719, -10.6847, 0.59", "3.94425, -138.381, -10.7602, 0.59", "4.00886, -139.108, -10.7729, 0.29", "4.10404, -140.692, -10.7729, 0.29", "4.10866, -140.89, -10.7695, 0.29", "4.09362, -142.416, -10.6933, 0.29", "4.01694, -143.904, -10.629, 0.37", "3.94847, -144.559, -10.6058, 1.18", "3.79799, -145.686, -10.5877, 1.33", "3.65665, -146.595, -10.6079, 0.74", "3.44349, -147.816, -10.6409, 0.52", "3.26539, -148.743, -10.6748, 0.52", "3.1202, -149.437, -10.7149, 0.52", "3.1053, -149.507, -10.7198, 0.52", "2.91469, -150.472, -10.805, 0.52", "2.88083, -150.667, -10.8271, 0.52", "2.76423, -151.376, -10.9163, 0.52", "2.68571, -151.905, -10.9644, 0.88", "2.58204, -152.636, -11.0205, 1.03", "2.48009, -153.431, -11.0742, 0.59", "2.47309, -153.494, -11.0778, 0.59", "2.38819, -154.794, -11.1914, 0.29", "2.37451, -155.708, -11.2945, 0.29", "2.37944, -155.79, -11.3065, 0.29", "2.50465, -156.705, -11.4702, 0.29", "2.53324, -156.895, -11.5219, 0.29", "2.64221, -157.705, -11.8085, 0.29", "2.64796, -157.762, -11.8343, 0.29", "2.65502, -158.494, -12.1867, 0.29", "2.65035, -158.551, -12.2128, 0.29", "2.48675, -159.686, -12.6621, 0.29", "2.43705, -159.951, -12.7433, 0.29", "2.26091, -160.777, -12.9482, 0.29", "2.16651, -161.252, -13.0511, 1.03", "2.04926, -161.919, -13.1738, 1.47", "1.94143, -162.77, -13.3015, 0.37", "1.83585, -164.074, -13.4201, 0.37", "1.83031, -164.137, -13.4248, 0.37", "1.77053, -164.745, -13.4613, 0.81", "1.70896, -165.269, -13.4842, 0.88", "1.64154, -165.728, -13.5026, 0.88", "1.47052, -166.757, -13.5412, 0.22", "1.29292, -167.805, -13.5748, 0.22", "1.28277, -167.876, -13.5778, 0.22", "1.23835, -168.201, -13.5928, 0.37", "1.1706, -168.884, -13.6336, 0.37", "1.108, -169.97, -13.7165, 0.29", "1.10942, -170.042, -13.7239, 0.29", "1.20473, -171.156, -13.8536, 0.29", "1.22045, -171.281, -13.8671, 0.29", "1.43789, -172.572, -14.0042, 0.22", "1.52714, -173.026, -14.0516, 0.66", "1.67111, -173.78, -14.1249, 0.81", "1.77685, -174.378, -14.1775, 0.96", "1.89906, -175.075, -14.1997, 0.37", "1.91123, -175.137, -14.1997, 0.37", "2.15348, -176.306, -14.1815, 0.15", "2.24165, -176.782, -14.1731, 0.74", "2.32578, -177.435, -14.1612, 0.74", "2.39541, -178.478, -14.149, 0.22", "2.4016, -179.296, -14.1491, 0.22", "2.362, -179.994, -14.1502, 0.22", "2.29203, -180.49, -14.1516, 0.59", "2.14913, -181.159, -14.1669, 0.59", "1.9928, -181.655, -14.1911, 0.22", "1.92931, -181.791, -14.2012, 0.22", "1.60009, -182.376, -14.2146, 0.22", "1.45668, -182.622, -14.2073, 0.44", "1.267, -182.965, -14.1929, 0.44", "1.24243, -183.033, -14.1912, 0.44", "1.05034, -183.829, -14.1841, 0.22", "1.00596, -184.085, -14.2183, 0.22", "0.950953, -184.626, -14.3614, 0.22", "0.941373, -184.754, -14.4039, 0.22", "0.8422, -186.311, -14.9959, 0.22", "0.83736, -186.393, -15.0302, 0.22", "0.802234, -187.698, -15.6447, 0.22", "0.764868, -189.061, -16.3343, 0.22", "0.758409, -189.304, -16.4707, 0.52", "0.755308, -189.359, -16.5036, 0.52", "0.705887, -189.668, -16.7352, 0.52", "-0.450164, -198.392, -18.7202, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "72.5482, -80.2522, 7.97105, 0.44", "72.3909, -80.8106, 8.19789, 0.44", "72.4474, -80.9477, 8.2297, 0.44", "72.7305, -81.5542, 8.36408, 0.44", "72.8972, -81.8997, 8.43794, 0.44", "73.2821, -82.6795, 8.5943, 0.44", "73.3158, -82.7464, 8.60707, 0.44", "75.0961, -86.1292, 9.15091, 0.44", "75.1337, -86.1948, 9.16056, 0.44", "75.3981, -86.6193, 9.21768, 1.33", "76.0599, -87.5534, 9.31869, 1.4", "76.3656, -87.9105, 9.36808, 0.37", "76.4189, -87.9654, 9.37718, 0.37", "77.217, -88.6224, 9.4861, 0.29", "77.2782, -88.6695, 9.49377, 0.29", "78.9902, -89.8557, 9.65311, 0.29", "80.6089, -90.8937, 9.74813, 0.29", "80.6752, -90.9349, 9.75053, 0.29", "83.4677, -92.6272, 9.79935, 0.29", "83.6243, -92.7163, 9.8013, 0.29", "85.4708, -93.7201, 9.80712, 0.52", "87.3817, -94.6926, 9.77485, 0.29", "88.0863, -95.0279, 9.73883, 0.59", "88.6596, -95.2727, 9.70908, 0.59", "90.3327, -95.8687, 9.62614, 0.44", "90.5587, -95.9455, 9.6155, 0.44", "91.4823, -96.3537, 9.52378, 0.29", "91.6213, -96.4242, 9.50468, 0.29", "92.6383, -96.97, 9.34734, 0.29", "92.8483, -97.0927, 9.30981, 0.29", "93.7702, -97.6962, 9.11139, 0.29", "97.9681, -100.608, 8.20152, 0.29", "98.0386, -100.66, 8.18591, 0.29", "107.678, -106.283, 7.52918, 0.29" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "72.5482, -80.2522, 7.97105, 0.52", "72.4542, -80.1415, 7.97069, 0.52", "72.4219, -80.1046, 7.97695, 0.52", "71.986, -79.6096, 8.10332, 0.37", "71.3127, -78.879, 8.3312, 0.37", "70.7511, -78.3185, 8.50642, 0.59", "70.054, -77.7587, 8.63991, 0.59", "69.2427, -77.2077, 8.73302, 0.22", "69.2056, -77.1861, 8.73544, 0.22", "68.3817, -76.8076, 8.77556, 0.22", "67.8181, -76.6122, 8.78405, 0.22", "66.2342, -76.1871, 8.69954, 0.22", "66.0291, -76.1457, 8.67076, 0.66", "65.9808, -76.1365, 8.65903, 0.66", "65.2841, -76.0224, 8.47796, 0.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "88.1288, -97.4886, 1.32058, 0.29", "93.211, -105.919, 0.384942, 0.29", "98.655, -114.179, 0.599741, 0.29", "104.447, -122.221, 0.853383, 0.29", "110.054, -130.29, 2.09912, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "88.1288, -97.4886, 1.32058, 0.74", "91.9554, -103.956, 0.582609, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-16.1599, -82.8857, 46.6336, 0.37", "-12.85, -92.8257, 56.8312, 0.37", "-10.669, -104.236, 65.525, 0.37", "-7.27963, -115.23, 74.4327, 0.37", "-4.46821, -126.524, 83.1207, 0.37", "-2.93627, -136.948, 93.1971, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-16.1599, -82.8857, 46.6336, 0.29", "-20.1725, -89.652, 53.3959, 0.37", "-22.998, -97.8509, 58.9418, 0.37", "-24.1255, -105.248, 66.1767, 0.37" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-55.3965, -75.5893, 26.5477, 0.37", "-63.7051, -75.59, 32.2473, 0.37", "-72.6187, -76.026, 36.9282, 0.37", "-81.391, -78.455, 41.1947, 0.37", "-88.842, -81.5957, 47.1628, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-55.3965, -75.5893, 26.5477, 0.29", "-61.5152, -75.94, 32.0131, 0.37", "-66.5511, -77.0986, 38.3964, 0.37", "-71.082, -77.6105, 45.2243, 0.37", "-74.195, -77.3181, 52.8002, 0.37", "-75.4251, -76.2285, 60.8027, 0.37", "-75.3008, -73.7616, 68.5284, 0.37", "-74.5118, -72.523, 76.5559, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "65.2841, -76.0224, 8.47796, 0.37", "65.3404, -76.1988, 8.49906, 0.37", "65.902, -77.9524, 8.55239, 0.37", "65.9516, -78.1048, 8.55131, 0.37", "66.6454, -80.2347, 8.53617, 0.37", "66.6683, -80.3051, 8.53567, 0.37", "67.5985, -83.161, 8.51537, 0.37", "67.6277, -83.2422, 8.5131, 0.37", "68.072, -84.2946, 8.40902, 0.37", "73.5103, -95.3477, 9.60547, 0.37", "77.4981, -106.67, 12.4266, 0.37", "81.7571, -117.754, 15.8096, 0.37", "86.923, -127.623, 21.3334, 0.37", "92.367, -137.466, 26.6416, 0.37", "96.2066, -147.351, 33.1121, 0.37", "98.1153, -158.423, 38.1912, 0.37", "102.042, -169.298, 42.5461, 0.37", "106.231, -179.956, 47.2277, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "65.2841, -76.0224, 8.47796, 0.37", "65.1969, -76.0104, 8.45952, 0.37", "65.134, -76.002, 8.45561, 0.37", "64.1089, -75.8669, 8.44601, 0.22", "63.778, -75.8001, 8.4532, 0.22", "62.9307, -75.5925, 8.48578, 0.22", "62.8615, -75.5715, 8.48976, 0.22", "61.8632, -75.2236, 8.57314, 0.22", "61.7371, -75.1755, 8.58709, 0.22", "60.9152, -74.8385, 8.69897, 0.22", "60.6941, -74.7471, 8.7239, 0.22", "59.7738, -74.3531, 8.80978, 0.22", "59.6684, -74.3066, 8.81889, 0.22", "58.0894, -73.5927, 8.93288, 0.22", "57.9261, -73.5201, 8.9432, 0.22", "56.3804, -72.8419, 9.0302, 0.22", "56.3167, -72.8087, 9.03321, 0.22", "55.259, -72.1687, 9.07962, 0.22", "55.0521, -72.0044, 9.08631, 0.22", "54.5162, -71.437, 9.09459, 0.22", "54.255, -71.1082, 9.09602, 0.22", "53.4935, -69.9596, 9.08297, 0.22", "53.4264, -69.8523, 9.08127, 0.22", "52.6151, -68.4353, 9.05074, 0.22", "52.5776, -68.3641, 9.0471, 0.22", "52.1009, -67.3876, 8.96913, 0.22", "51.9406, -67.063, 8.93063, 0.22", "51.5143, -66.2614, 8.79777, 0.22", "51.4524, -66.148, 8.77627, 0.22", "50.9738, -65.3455, 8.6148, 0.22", "50.9404, -65.2949, 8.60528, 0.22", "50.6589, -64.9003, 8.53551, 0.29", "50.3958, -64.5881, 8.47451, 0.29", "49.7484, -63.9407, 8.34799, 0.29", "49.3169, -63.5537, 8.28242, 0.29", "48.9494, -63.2569, 8.24443, 0.29", "48.8799, -63.203, 8.23773, 0.29", "48.1059, -62.6245, 8.16889, 0.29", "48.0485, -62.5823, 8.16397, 0.29", "47.3387, -62.0544, 8.10649, 0.29", "47.1176, -61.8875, 8.09242, 0.29", "46.555, -61.4695, 8.07921, 0.29", "46.214, -61.2155, 8.0884, 0.44", "45.9208, -60.9692, 8.11172, 0.52", "45.5825, -60.6598, 8.13203, 0.52", "45.5389, -60.6156, 8.13351, 0.52", "45.306, -60.3506, 8.13385, 0.29", "45.0742, -60.0601, 8.12285, 0.29", "44.4611, -59.2666, 8.07746, 0.29", "44.4208, -59.2198, 8.07552, 0.29", "44.0418, -58.8115, 8.06324, 0.29", "43.8809, -58.6398, 8.05355, 0.29", "43.6826, -58.4362, 8.03928, 0.29", "43.5526, -58.3012, 8.02847, 0.29", "42.8872, -57.6289, 7.97582, 0.29", "42.7499, -57.491, 7.96674, 0.29", "42.2329, -56.9515, 7.93258, 0.29", "42.019, -56.7186, 7.91884, 0.29", "41.2167, -55.8004, 7.86811, 0.29", "41.1327, -55.6984, 7.86228, 0.29", "40.6556, -55.082, 7.82493, 0.52", "40.3569, -54.6957, 7.80027, 0.52", "40.1422, -54.3992, 7.77808, 0.52", "39.9897, -54.1587, 7.75147, 0.37", "39.3202, -53.0088, 7.50386, 0.37", "39.2925, -52.9565, 7.4888, 0.37", "39.0882, -52.4905, 7.32152, 0.52", "38.7987, -51.7645, 7.02797, 0.81", "38.5506, -51.1326, 6.76004, 0.81", "38.1932, -50.2976, 6.41987, 0.37", "38.1397, -50.1856, 6.37882, 0.37", "37.8446, -49.6203, 6.19089, 0.37", "37.6978, -49.3852, 6.12197, 0.37", "37.2385, -48.7259, 5.94445, 0.29", "36.5562, -47.7694, 5.71761, 0.29", "35.5019, -46.3068, 5.4281, 0.29", "35.4411, -46.2224, 5.41125, 0.29", "34.5273, -44.9549, 5.15375, 0.29", "34.4795, -44.8826, 5.14076, 0.29", "33.9888, -44.0539, 5.00617, 0.29", "33.8645, -43.8141, 4.97771, 0.29", "33.5107, -43.0423, 4.92743, 0.29", "33.4207, -42.8069, 4.91477, 0.29", "33.1201, -41.8169, 4.8718, 0.29", "33.0992, -41.7508, 4.8678, 0.29", "32.5868, -40.1596, 4.75203, 0.29", "32.548, -40.0358, 4.74047, 0.29", "32.2295, -39.0138, 4.62587, 0.29", "32.1925, -38.8902, 4.60852, 0.29", "31.5641, -36.6824, 4.21711, 0.29", "31.534, -36.5582, 4.19351, 0.29", "31.4135, -35.9503, 4.06995, 0.29", "31.387, -35.8256, 4.04516, 0.29", "31.1575, -34.9281, 3.85164, 0.29", "31.107, -34.7489, 3.81029, 0.29", "30.6666, -33.3285, 3.46029, 0.29", "30.5837, -33.0902, 3.40184, 0.29", "30.1417, -31.915, 3.12084, 0.29", "29.7588, -30.9332, 2.9667, 0.29", "29.7034, -30.8015, 2.94814, 0.29", "29.2714, -29.831, 2.82926, 0.29", "29.2141, -29.7137, 2.81943, 0.29", "28.5383, -28.2345, 2.73672, 0.29", "28.0627, -26.9352, 2.74978, 0.29", "23.2737, -19.8049, 1.02088, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-74.5118, -72.523, 76.5559, 0.37", "-79.9323, -70.7071, 88.8105, 0.37", "-85.1299, -70.3355, 101.326, 0.37", "-89.3086, -69.4891, 114.172, 0.37", "-93.7626, -70.5065, 126.957, 0.37", "-96.9668, -72.7226, 139.972, 0.37", "-98.1999, -74.4131, 153.38, 0.37", "-100.999, -77.7826, 166.246, 0.37", "-104.495, -79.8256, 179.213, 0.37", "-107.713, -81.6443, 192.282, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-74.5118, -72.523, 76.5559, 0.29", "-76.2564, -73.4817, 88.9697, 0.37", "-76.9488, -75.7754, 101.322, 0.37", "-80.1081, -79.1781, 113.012, 0.37", "-83.7574, -81.7229, 124.781, 0.37", "-86.8879, -84.099, 136.735, 0.37", "-88.281, -86.2645, 149.051, 0.37", "-90.2604, -86.719, 161.451, 0.37", "-91.2911, -87.0724, 173.965, 0.37", "-93.062, -86.7003, 186.381, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_69", "dend_58", "dend_45", "dend_24", "dend_0", "dend_73", "dend_70", "dend_68", "dend_59", "dend_49", "dend_46", "dend_30", "dend_25", "dend_21", "dend_1", "dend_77", "dend_74", "dend_72", "dend_71", "dend_63", "dend_60", "dend_55", "dend_50", "dend_48", "dend_47", "dend_34", "dend_31", "dend_27", "dend_26", "dend_23", "dend_22", "dend_16", "dend_3", "dend_2", "dend_79", "dend_78", "dend_76", "dend_75", "dend_65", "dend_64", "dend_62", "dend_61", "dend_57", "dend_56", "dend_52", "dend_51", "dend_44", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_18", "dend_17", "dend_11", "dend_4", "dend_81", "dend_80", "dend_67", "dend_66", "dend_54", "dend_53", "dend_39", "dend_36", "dend_20", "dend_19", "dend_13", "dend_12", "dend_6", "dend_5", "dend_43", "dend_40", "dend_38", "dend_37", "dend_15", "dend_14", "dend_10", "dend_7", "dend_42", "dend_41", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_NBC_91e841ee63_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_73, id: dend_73, parent: dend_69
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_24
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_0
create dend_21
public dend_21
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_63
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_69(0), soma_0(0.499998293907579)
    connect dend_58(0), soma_0(0.499998293907579)
    connect dend_45(0), soma_0(0.499998293907579)
    connect dend_24(0), soma_0(0.499998293907579)
    connect dend_0(0), soma_0(0.499998293907579)
    connect axon_0(0), soma_0(1.0)
    connect dend_73(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.873478, -12.1204, -1.0889, 3.2264 ) }
    soma_0 { pt3dadd( -0.698655, -10.9282, -0.984246, 5.56239 ) }
    soma_0 { pt3dadd( -0.523832, -9.73588, -0.879587, 7.69458 ) }
    soma_0 { pt3dadd( -0.349009, -8.5436, -0.774929, 10.6304 ) }
    soma_0 { pt3dadd( -0.174186, -7.35132, -0.670271, 12.3889 ) }
    soma_0 { pt3dadd( 6.37175E-4, -6.15904, -0.565612, 13.0429 ) }
    soma_0 { pt3dadd( 0.17546, -4.96676, -0.460954, 13.3962 ) }
    soma_0 { pt3dadd( 0.350283, -3.77448, -0.356295, 13.6031 ) }
    soma_0 { pt3dadd( 0.525106, -2.5822, -0.251637, 13.7768 ) }
    soma_0 { pt3dadd( 0.699929, -1.38992, -0.146979, 13.7572 ) }
    soma_0 { pt3dadd( 0.874752, -0.197642, -0.0423202, 13.4519 ) }
    soma_0 { pt3dadd( 1.04958, 0.994638, 0.0623382, 13.1714 ) }
    soma_0 { pt3dadd( 1.2244, 2.18692, 0.166997, 12.4149 ) }
    soma_0 { pt3dadd( 1.39922, 3.3792, 0.271655, 11.5059 ) }
    soma_0 { pt3dadd( 1.57404, 4.57148, 0.376313, 10.5982 ) }
    soma_0 { pt3dadd( 1.74887, 5.76376, 0.480972, 9.84377 ) }
    soma_0 { pt3dadd( 1.92369, 6.95604, 0.58563, 9.16735 ) }
    soma_0 { pt3dadd( 2.09851, 8.14832, 0.690289, 7.18404 ) }
    soma_0 { pt3dadd( 2.27334, 9.34059, 0.794947, 5.28238 ) }
    soma_0 { pt3dadd( 2.44816, 10.5329, 0.899606, 3.93844 ) }
    soma_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 2.5386 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 21/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 3.61398, 11.3404, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.61398, 11.3404, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.85366, 12.3745, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 3.90266, 12.5859, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.20632, 13.896, -0.788928, 2.06 ) }
    dend_69 { pt3dadd( 4.48734, 15.1084, -0.788928, 2.06 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 27/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.65398, 9.44994, -2.84893, 1.77 ) }
    dend_58 { pt3dadd( 4.65395, 11.377, -6.08133, 1.62 ) }
    dend_58 { pt3dadd( 5.50774, 12.6367, -7.8631, 1.62 ) }
    dend_58 { pt3dadd( 5.54002, 12.6769, -7.94062, 1.62 ) }
    dend_58 { pt3dadd( 6.29801, 13.4597, -9.77477, 1.47 ) }
    dend_58 { pt3dadd( 6.3746, 13.5215, -9.94935, 1.47 ) }
    dend_58 { pt3dadd( 8.2303, 14.6306, -13.9563, 1.47 ) }
    dend_58 { pt3dadd( 9.94685, 15.1198, -17.2135, 1.92 ) }
    dend_58 { pt3dadd( 13.0706, 15.7044, -23.1261, 1.92 ) }
    dend_58 { pt3dadd( 14.124, 15.8428, -25.1441, 1.92 ) }
    dend_58 { pt3dadd( 15.1925, 15.8777, -27.2464, 1.92 ) }
    dend_58 { pt3dadd( 16.2167, 15.8559, -29.297, 1.84 ) }
    dend_58 { pt3dadd( 17.6604, 15.6301, -32.2373, 1.84 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.85602, 7.64494, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -2.85602, 7.64494, 2.46107, 1.62 ) }
    dend_45 { pt3dadd( -3.11727, 7.90305, 2.55296, 1.62 ) }
    dend_45 { pt3dadd( -3.14076, 7.92596, 2.56064, 1.62 ) }
    dend_45 { pt3dadd( -3.70706, 8.50138, 2.73657, 1.84 ) }
    dend_45 { pt3dadd( -4.16564, 8.97431, 2.87567, 1.84 ) }
    dend_45 { pt3dadd( -4.65901, 9.4831, 3.02533, 1.62 ) }
    dend_45 { pt3dadd( -5.20538, 10.0484, 3.1945, 1.62 ) }
    dend_45 { pt3dadd( -5.83299, 10.7016, 3.39589, 1.92 ) }
    dend_45 { pt3dadd( -6.15369, 11.0395, 3.49973, 1.92 ) }
    dend_45 { pt3dadd( -6.17574, 11.0637, 3.50705, 1.92 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.07398, -8.35306, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.07398, -8.35306, 1.15107, 2.21 ) }
    dend_24 { pt3dadd( 6.68435, -9.37628, 2.74541, 1.84 ) }
    dend_24 { pt3dadd( 7.48335, -10.7158, 4.83251, 1.84 ) }
    dend_24 { pt3dadd( 7.50739, -10.7561, 4.8953, 1.84 ) }
    dend_24 { pt3dadd( 8.33324, -12.1405, 7.05255, 1.62 ) }
    dend_24 { pt3dadd( 9.20144, -13.596, 9.3204, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.38602, -10.5571, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.38602, -10.5571, -1.22893, 3.24 ) }
    dend_0 { pt3dadd( -2.72777, -11.6037, -1.21521, 3.24 ) }
    dend_0 { pt3dadd( -3.14087, -12.8688, -1.19862, 2.87 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 62/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62298, 11.7252, 1.00426, 0.668637 ) }
    axon_0 { pt3dadd( 4.79915, 26.5665, 1.00426, 0.668637 ) }
    axon_0 { pt3dadd( 6.97531, 41.4078, 1.00426, 0.668637 ) }
    // Section: dend_73, id: dend_73, parent: dend_69 (entry count 65/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 4.48734, 15.1084, -0.788928, 1.47 ) }
    dend_73 { pt3dadd( 5.62967, 15.9374, 0.213089, 1.47 ) }
    dend_73 { pt3dadd( 8.66494, 18.3455, 2.21472, 1.18 ) }
    dend_73 { pt3dadd( 8.71775, 18.3928, 2.23972, 1.18 ) }
    dend_73 { pt3dadd( 9.96568, 19.549, 2.53974, 1.18 ) }
    dend_73 { pt3dadd( 11.358, 20.8606, 2.64835, 1.18 ) }
    dend_73 { pt3dadd( 11.4045, 20.9049, 2.64822, 1.18 ) }
    dend_73 { pt3dadd( 12.6263, 22.1645, 2.31283, 1.4 ) }
    dend_73 { pt3dadd( 13.7732, 23.4084, 1.73196, 1.4 ) }
    dend_73 { pt3dadd( 15.0251, 24.8623, 1.09541, 1.18 ) }
    dend_73 { pt3dadd( 15.8317, 25.8917, 0.67143, 1.18 ) }
    dend_73 { pt3dadd( 15.8818, 25.9577, 0.651937, 1.18 ) }
    dend_73 { pt3dadd( 16.6305, 26.9418, 0.441638, 1.18 ) }
    dend_73 { pt3dadd( 16.6832, 27.0085, 0.438709, 1.18 ) }
    dend_73 { pt3dadd( 17.7467, 28.2716, 0.626689, 1.18 ) }
    dend_73 { pt3dadd( 17.8027, 28.3323, 0.648599, 1.18 ) }
    dend_73 { pt3dadd( 19.4445, 29.9373, 1.3149, 1.18 ) }
    dend_73 { pt3dadd( 19.4901, 29.9788, 1.33332, 1.18 ) }
    dend_73 { pt3dadd( 20.6466, 30.9524, 1.74438, 1.18 ) }
    dend_73 { pt3dadd( 21.7117, 31.8284, 2.07898, 1.18 ) }
    dend_73 { pt3dadd( 23.5693, 33.3073, 2.6119, 1.03 ) }
    dend_73 { pt3dadd( 25.1289, 34.6259, 3.02553, 1.03 ) }
    dend_73 { pt3dadd( 25.1755, 34.6684, 3.03838, 1.03 ) }
    dend_73 { pt3dadd( 26.5595, 35.963, 3.40012, 0.81 ) }
    dend_73 { pt3dadd( 27.6656, 37.0539, 3.6616, 0.81 ) }
    dend_73 { pt3dadd( 27.7089, 37.0997, 3.67317, 0.81 ) }
    dend_73 { pt3dadd( 29.2829, 38.9353, 4.0994, 1.03 ) }
    dend_73 { pt3dadd( 30.794, 40.846, 4.66751, 1.03 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 93/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.48734, 15.1084, -0.788928, 1.11 ) }
    dend_70 { pt3dadd( 3.28722, 17.5364, 0.229721, 1.11 ) }
    dend_70 { pt3dadd( 2.95405, 18.3394, 0.404997, 1.11 ) }
    dend_70 { pt3dadd( 2.63298, 19.1132, 0.573911, 1.03 ) }
    dend_70 { pt3dadd( 2.06643, 20.4786, 0.871971, 1.25 ) }
    dend_70 { pt3dadd( 2.04302, 20.535, 0.884288, 1.25 ) }
    dend_70 { pt3dadd( 1.39746, 22.0909, 1.22391, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_70 { pt3dadd( 0.969274, 23.1874, 1.15977, 1.47 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 1/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 17.6604, 15.6301, -32.2373, 1.55 ) }
    dend_68 { pt3dadd( 17.0823, 12.4454, -36.364, 1.55 ) }
    dend_68 { pt3dadd( 16.9926, 11.4878, -37.2786, 0.81 ) }
    dend_68 { pt3dadd( 16.9232, 10.5852, -37.9458, 0.81 ) }
    dend_68 { pt3dadd( 16.8169, 9.26112, -38.8136, 0.81 ) }
    dend_68 { pt3dadd( 16.8035, 9.18015, -38.8698, 0.81 ) }
    dend_68 { pt3dadd( 16.5155, 8.18704, -39.7193, 1.11 ) }
    dend_68 { pt3dadd( 16.2723, 7.47853, -40.2064, 0.81 ) }
    dend_68 { pt3dadd( 15.7375, 6.64567, -41.1259, 0.59 ) }
    dend_68 { pt3dadd( 15.6699, 6.57819, -41.2314, 0.59 ) }
    dend_68 { pt3dadd( 14.569, 5.72754, -42.8353, 0.59 ) }
    dend_68 { pt3dadd( 13.2291, 4.7523, -44.72, 1.25 ) }
    dend_68 { pt3dadd( 13.1899, 4.72616, -44.7739, 1.25 ) }
    dend_68 { pt3dadd( 11.7144, 3.75961, -46.7476, 1.18 ) }
    dend_68 { pt3dadd( 10.1123, 2.72175, -48.8992, 0.81 ) }
    dend_68 { pt3dadd( 8.50674, 1.61656, -51.0524, 0.52 ) }
    dend_68 { pt3dadd( 7.91383, 1.16266, -51.8335, 0.52 ) }
    dend_68 { pt3dadd( 7.86787, 1.12596, -51.8897, 0.52 ) }
    dend_68 { pt3dadd( 7.43521, 0.773403, -52.412, 0.52 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 20/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 17.6604, 15.6301, -32.2373, 1.4 ) }
    dend_59 { pt3dadd( 20.6012, 14.5766, -33.383, 1.4 ) }
    dend_59 { pt3dadd( 24.0847, 13.3286, -34.7401, 1.4 ) }
    dend_59 { pt3dadd( 24.1636, 13.3003, -34.7709, 1.4 ) }
    dend_59 { pt3dadd( 25.9946, 12.6444, -35.4842, 1.4 ) }
    dend_59 { pt3dadd( 26.1716, 12.581, -35.5532, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 26/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.17574, 11.0637, 3.50705, 0.88 ) }
    dend_49 { pt3dadd( -6.67062, 12.229, 3.9101, 0.88 ) }
    dend_49 { pt3dadd( -6.92255, 12.8852, 4.12423, 0.88 ) }
    dend_49 { pt3dadd( -7.29075, 13.9881, 4.45481, 0.88 ) }
    dend_49 { pt3dadd( -7.83698, 15.7956, 4.97138, 0.74 ) }
    dend_49 { pt3dadd( -8.13964, 16.9693, 5.30683, 0.74 ) }
    dend_49 { pt3dadd( -8.29779, 17.7115, 5.50917, 1.03 ) }
    dend_49 { pt3dadd( -8.30758, 17.7931, 5.52736, 1.03 ) }
    dend_49 { pt3dadd( -8.34543, 18.6773, 5.7574, 1.03 ) }
    dend_49 { pt3dadd( -8.34455, 18.7919, 5.7895, 1.03 ) }
    dend_49 { pt3dadd( -8.38227, 19.937, 6.20212, 0.88 ) }
    dend_49 { pt3dadd( -8.59031, 21.1028, 6.79689, 1.18 ) }
    dend_49 { pt3dadd( -8.6109, 21.1639, 6.83416, 1.18 ) }
    dend_49 { pt3dadd( -9.11493, 22.3003, 7.59504, 1.18 ) }
    dend_49 { pt3dadd( -9.69571, 23.3564, 8.37131, 0.81 ) }
    dend_49 { pt3dadd( -10.4859, 24.5985, 9.33741, 0.81 ) }
    dend_49 { pt3dadd( -11.5852, 26.1183, 10.544, 0.81 ) }
    dend_49 { pt3dadd( -12.3816, 27.1395, 11.3619, 0.81 ) }
    dend_49 { pt3dadd( -12.4216, 27.1903, 11.4006, 0.81 ) }
    dend_49 { pt3dadd( -13.1015, 28.0913, 12.0097, 0.66 ) }
    dend_49 { pt3dadd( -13.1377, 28.1478, 12.0432, 0.66 ) }
    dend_49 { pt3dadd( -13.6027, 29.2748, 12.5008, 0.66 ) }
    dend_49 { pt3dadd( -13.6559, 29.5688, 12.605, 0.66 ) }
    dend_49 { pt3dadd( -13.7016, 30.5255, 13.0129, 0.96 ) }
    dend_49 { pt3dadd( -13.6824, 31.6002, 13.5093, 0.96 ) }
    dend_49 { pt3dadd( -13.6495, 31.9996, 13.7041, 0.96 ) }
    dend_49 { pt3dadd( -13.5895, 32.551, 13.9894, 0.96 ) }
    dend_49 { pt3dadd( -13.3732, 33.9668, 14.8016, 0.81 ) }
    dend_49 { pt3dadd( -13.1714, 35.1336, 15.5056, 0.81 ) }
    dend_49 { pt3dadd( -12.9771, 36.0593, 16.1018, 0.81 ) }
    dend_49 { pt3dadd( -12.9595, 36.1491, 16.1682, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -6.17574, 11.0637, 3.50705, 0.88 ) }
    dend_46 { pt3dadd( -6.18849, 11.5577, 3.44863, 0.88 ) }
    dend_46 { pt3dadd( -6.19363, 12.1449, 3.37233, 0.74 ) }
    dend_46 { pt3dadd( -6.19141, 12.8509, 3.27385, 0.74 ) }
    dend_46 { pt3dadd( -6.19101, 12.9068, 3.26541, 0.74 ) }
    dend_46 { pt3dadd( -6.15872, 14.1327, 3.07525, 0.74 ) }
    dend_46 { pt3dadd( -6.12296, 14.9769, 2.94604, 0.88 ) }
    dend_46 { pt3dadd( -6.09907, 15.441, 2.86326, 0.88 ) }
    dend_46 { pt3dadd( -6.09092, 15.5807, 2.83722, 0.88 ) }
    dend_46 { pt3dadd( -6.0532, 16.2239, 2.7196, 0.74 ) }
    dend_46 { pt3dadd( -6.01012, 17.0197, 2.60724, 0.74 ) }
    dend_46 { pt3dadd( -5.96609, 17.9663, 2.50974, 0.74 ) }
    dend_46 { pt3dadd( -5.93785, 18.8556, 2.44522, 1.62 ) }
    dend_46 { pt3dadd( -5.91721, 19.8152, 2.39322, 1.62 ) }
    dend_46 { pt3dadd( -5.90978, 20.9294, 2.37436, 1.33 ) }
    dend_46 { pt3dadd( -5.91262, 21.7464, 2.38953, 0.96 ) }
    dend_46 { pt3dadd( -5.92542, 22.513, 2.42506, 0.96 ) }
    dend_46 { pt3dadd( -5.93547, 23.1601, 2.47348, 0.96 ) }
    dend_46 { pt3dadd( -5.93568, 23.2164, 2.47909, 0.96 ) }
    dend_46 { pt3dadd( -5.94121, 24.0395, 2.56122, 0.96 ) }
    dend_46 { pt3dadd( -5.9385, 24.99, 2.63401, 0.74 ) }
    dend_46 { pt3dadd( -5.93158, 25.7028, 2.65361, 0.74 ) }
    dend_46 { pt3dadd( -5.93057, 25.7594, 2.65416, 0.74 ) }
    dend_46 { pt3dadd( -5.92973, 26.283, 2.58019, 1.03 ) }
    dend_46 { pt3dadd( -5.93084, 26.3455, 2.56351, 1.03 ) }
    dend_46 { pt3dadd( -5.95365, 26.8972, 2.35039, 1.03 ) }
    dend_46 { pt3dadd( -5.95731, 26.9491, 2.32743, 1.03 ) }
    dend_46 { pt3dadd( -6.04706, 27.8722, 1.79876, 1.03 ) }
    dend_46 { pt3dadd( -6.18867, 29.1162, 0.984565, 1.03 ) }
    dend_46 { pt3dadd( -6.19535, 29.169, 0.946377, 1.03 ) }
    dend_46 { pt3dadd( -6.3192, 30.1125, 0.220632, 1.03 ) }
    dend_46 { pt3dadd( -6.32538, 30.157, 0.184868, 1.03 ) }
    dend_46 { pt3dadd( -6.46759, 31.1075, -0.562388, 0.88 ) }
    dend_46 { pt3dadd( -6.47572, 31.1587, -0.602589, 0.88 ) }
    dend_46 { pt3dadd( -6.52745, 31.517, -0.824131, 0.88 ) }
    dend_46 { pt3dadd( -6.5353, 31.5663, -0.851566, 0.88 ) }
    dend_46 { pt3dadd( -6.61008, 32.0482, -1.0827, 0.88 ) }
    dend_46 { pt3dadd( -6.6483, 32.3473, -1.17643, 0.88 ) }
    dend_46 { pt3dadd( -6.70357, 32.9499, -1.2796, 0.88 ) }
    dend_46 { pt3dadd( -6.70766, 33.0055, -1.28872, 0.88 ) }
    dend_46 { pt3dadd( -6.71743, 33.663, -1.38989, 0.88 ) }
    dend_46 { pt3dadd( -6.71807, 33.9237, -1.42909, 0.88 ) }
    dend_46 { pt3dadd( -6.70141, 34.806, -1.55589, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( -6.66407, 35.7443, -1.6762, 1.03 ) }
    dend_46 { pt3dadd( -6.66067, 35.8085, -1.68241, 1.03 ) }
    dend_46 { pt3dadd( -6.58522, 36.8837, -1.78866, 1.03 ) }
    // Section: dend_30, id: dend_30, parent: dend_24 (entry count 3/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.20144, -13.596, 9.3204, 1.11 ) }
    dend_30 { pt3dadd( 11.5885, -17.1046, 10.3143, 1.11 ) }
    dend_30 { pt3dadd( 12.593, -18.521, 10.5808, 1.11 ) }
    dend_30 { pt3dadd( 12.7002, -18.653, 10.5612, 1.11 ) }
    dend_30 { pt3dadd( 13.6542, -19.6498, 10.2673, 1.33 ) }
    dend_30 { pt3dadd( 14.9957, -20.8617, 9.79177, 1.11 ) }
    dend_30 { pt3dadd( 17.1216, -22.6034, 9.05145, 1.11 ) }
    dend_30 { pt3dadd( 17.1816, -22.6505, 9.02432, 1.11 ) }
    dend_30 { pt3dadd( 20.0723, -24.7268, 7.70507, 1.25 ) }
    dend_30 { pt3dadd( 22.2594, -26.2299, 6.69692, 1.55 ) }
    dend_30 { pt3dadd( 24.3613, -27.5392, 5.72074, 1.55 ) }
    dend_30 { pt3dadd( 25.6137, -28.2637, 5.1071, 1.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 15/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.20144, -13.596, 9.3204, 1.47 ) }
    dend_25 { pt3dadd( 9.47698, -17.3685, 17.001, 1.47 ) }
    dend_25 { pt3dadd( 9.55435, -18.3598, 18.7056, 1.03 ) }
    dend_25 { pt3dadd( 9.67365, -19.1031, 19.6487, 1.03 ) }
    dend_25 { pt3dadd( 9.98909, -20.507, 21.1188, 0.88 ) }
    dend_25 { pt3dadd( 10.0087, -20.57, 21.1765, 0.88 ) }
    dend_25 { pt3dadd( 10.5775, -22.194, 22.57, 0.88 ) }
    dend_25 { pt3dadd( 10.6017, -22.248, 22.5975, 0.88 ) }
    dend_25 { pt3dadd( 12.011, -24.7535, 23.9453, 0.88 ) }
    dend_25 { pt3dadd( 12.7254, -25.7519, 24.5465, 1.47 ) }
    dend_25 { pt3dadd( 14.1685, -27.4408, 25.6671, 0.88 ) }
    dend_25 { pt3dadd( 14.2222, -27.4961, 25.7102, 0.88 ) }
    dend_25 { pt3dadd( 15.7739, -28.8164, 26.9361, 0.74 ) }
    dend_25 { pt3dadd( 15.8969, -28.9061, 27.0397, 0.74 ) }
    dend_25 { pt3dadd( 17.1436, -29.6199, 28.1628, 0.74 ) }
    dend_25 { pt3dadd( 17.2227, -29.6585, 28.2303, 0.74 ) }
    dend_25 { pt3dadd( 18.4994, -30.185, 29.3526, 1.33 ) }
    dend_25 { pt3dadd( 19.5283, -30.5833, 30.3578, 0.96 ) }
    dend_25 { pt3dadd( 21.1346, -31.2155, 31.9937, 1.11 ) }
    dend_25 { pt3dadd( 21.1863, -31.2369, 32.0489, 1.11 ) }
    dend_25 { pt3dadd( 22.04, -31.6381, 33.0319, 1.11 ) }
    dend_25 { pt3dadd( 23.4023, -32.425, 34.5539, 0.81 ) }
    dend_25 { pt3dadd( 24.4036, -33.1029, 35.6292, 1.25 ) }
    dend_25 { pt3dadd( 25.1811, -33.7886, 36.5332, 0.88 ) }
    dend_25 { pt3dadd( 25.2219, -33.8346, 36.5803, 0.88 ) }
    dend_25 { pt3dadd( 26.0471, -35.0792, 37.6225, 0.81 ) }
    dend_25 { pt3dadd( 26.4961, -36.2702, 38.3447, 0.81 ) }
    dend_25 { pt3dadd( 26.5121, -36.3708, 38.3793, 0.81 ) }
    dend_25 { pt3dadd( 26.5359, -38.0326, 38.8166, 0.81 ) }
    dend_25 { pt3dadd( 26.5309, -38.0949, 38.8319, 0.81 ) }
    dend_25 { pt3dadd( 26.3888, -39.2343, 39.0818, 0.81 ) }
    dend_25 { pt3dadd( 26.2935, -40.2888, 39.3565, 1.18 ) }
    dend_25 { pt3dadd( 26.2691, -41.3376, 39.7178, 0.88 ) }
    dend_25 { pt3dadd( 26.5064, -42.5133, 40.3884, 0.59 ) }
    dend_25 { pt3dadd( 26.9356, -43.3576, 41.2854, 0.59 ) }
    dend_25 { pt3dadd( 26.967, -43.4087, 41.3504, 0.59 ) }
    dend_25 { pt3dadd( 28.04, -44.8728, 43.5286, 0.59 ) }
    dend_25 { pt3dadd( 28.0742, -44.9165, 43.5981, 0.59 ) }
    dend_25 { pt3dadd( 29.36, -46.5552, 46.0074, 0.81 ) }
    dend_25 { pt3dadd( 30.4456, -47.9972, 48.0294, 0.81 ) }
    dend_25 { pt3dadd( 31.0732, -48.8922, 49.2492, 0.81 ) }
    dend_25 { pt3dadd( 31.1145, -48.9521, 49.3313, 0.81 ) }
    dend_25 { pt3dadd( 32.0717, -50.4162, 51.3017, 0.74 ) }
    dend_25 { pt3dadd( 33.0277, -51.7877, 53.0994, 0.52 ) }
    dend_25 { pt3dadd( 34.1757, -53.3644, 55.0321, 0.52 ) }
    dend_25 { pt3dadd( 34.2698, -53.4676, 55.1586, 0.52 ) }
    dend_25 { pt3dadd( 35.7009, -54.724, 56.9143, 0.52 ) }
    dend_25 { pt3dadd( 35.7445, -54.7631, 56.9654, 0.52 ) }
    dend_25 { pt3dadd( 36.3873, -55.364, 57.7402, 0.52 ) }
    dend_25 { pt3dadd( 36.4749, -55.4691, 57.8621, 0.52 ) }
    dend_25 { pt3dadd( 37.021, -56.477, 58.5488, 0.52 ) }
    dend_25 { pt3dadd( 37.1062, -56.6971, 58.6646, 0.52 ) }
    dend_25 { pt3dadd( 37.7715, -58.7351, 59.5532, 0.52 ) }
    dend_25 { pt3dadd( 38.2201, -59.9621, 60.1199, 0.52 ) }
    dend_25 { pt3dadd( 38.3421, -60.2961, 60.2809, 0.52 ) }
    dend_25 { pt3dadd( 38.7267, -61.3614, 60.802, 0.52 ) }
    dend_25 { pt3dadd( 38.763, -61.4593, 60.851, 0.52 ) }
    dend_25 { pt3dadd( 39.4817, -62.7953, 61.5608, 0.52 ) }
    dend_25 { pt3dadd( 40.0626, -63.2981, 61.9087, 0.88 ) }
    dend_25 { pt3dadd( 40.1963, -63.3824, 61.9623, 0.88 ) }
    // Section: dend_21, id: dend_21, parent: dend_0 (entry count 75/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.14087, -12.8688, -1.19862, 0.59 ) }
    dend_21 { pt3dadd( -4.00358, -13.0954, -1.31952, 0.59 ) }
    dend_21 { pt3dadd( -5.354, -13.4861, -1.34803, 0.59 ) }
    dend_21 { pt3dadd( -7.01143, -14.0019, -1.26241, 0.59 ) }
    dend_21 { pt3dadd( -7.66, -14.223, -1.19963, 0.59 ) }
    dend_21 { pt3dadd( -9.94921, -15.114, -0.918511, 0.88 ) }
    dend_21 { pt3dadd( -11.0648, -15.601, -0.804267, 0.88 ) }
    dend_21 { pt3dadd( -12.3006, -16.2072, -0.651941, 0.96 ) }
    dend_21 { pt3dadd( -13.3455, -16.7681, -0.518341, 1.25 ) }
    dend_21 { pt3dadd( -14.3579, -17.3731, -0.434732, 1.47 ) }
    dend_21 { pt3dadd( -15.6791, -18.1202, -0.663176, 1.11 ) }
    dend_21 { pt3dadd( -17.2984, -18.9537, -1.3971, 1.03 ) }
    dend_21 { pt3dadd( -18.0692, -19.3129, -1.85079, 1.03 ) }
    dend_21 { pt3dadd( -18.1538, -19.3487, -1.90845, 1.03 ) }
    dend_21 { pt3dadd( -19.8855, -20.0503, -3.18165, 1.55 ) }
    dend_21 { pt3dadd( -23.4676, -21.4713, -5.9229, 0.66 ) }
    dend_21 { pt3dadd( -24.8407, -22.0402, -6.97056, 0.66 ) }
    dend_21 { pt3dadd( -25.6106, -22.4093, -7.56156, 0.66 ) }
    dend_21 { pt3dadd( -25.6621, -22.4397, -7.6, 0.66 ) }
    dend_21 { pt3dadd( -26.4511, -23.0052, -8.14479, 0.74 ) }
    dend_21 { pt3dadd( -27.1172, -23.6306, -8.5339, 1.03 ) }
    dend_21 { pt3dadd( -27.8991, -24.7657, -9.0096, 1.03 ) }
    dend_21 { pt3dadd( -28.8772, -26.2822, -9.57423, 1.25 ) }
    dend_21 { pt3dadd( -29.4415, -27.1666, -9.93737, 1.18 ) }
    dend_21 { pt3dadd( -29.5052, -27.259, -9.97786, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -30.0267, -27.8734, -10.3374, 0.52 ) }
    dend_21 { pt3dadd( -30.0775, -27.912, -10.3679, 0.52 ) }
    dend_21 { pt3dadd( -31.0127, -28.2251, -10.8346, 0.52 ) }
    dend_21 { pt3dadd( -31.0793, -28.2337, -10.86, 0.52 ) }
    dend_21 { pt3dadd( -31.5764, -28.2606, -11.0835, 0.52 ) }
    dend_21 { pt3dadd( -33.146, -28.3074, -11.8028, 0.88 ) }
    dend_21 { pt3dadd( -34.2647, -28.3208, -12.3191, 1.25 ) }
    dend_21 { pt3dadd( -35.7709, -28.3514, -13.0401, 1.25 ) }
    dend_21 { pt3dadd( -36.5887, -28.377, -13.4456, 0.88 ) }
    dend_21 { pt3dadd( -38.0595, -28.5163, -14.1681, 0.88 ) }
    dend_21 { pt3dadd( -38.7058, -28.6627, -14.5199, 0.52 ) }
    dend_21 { pt3dadd( -39.0645, -28.8276, -14.7203, 0.52 ) }
    dend_21 { pt3dadd( -39.3215, -29.0149, -14.9182, 0.52 ) }
    dend_21 { pt3dadd( -39.6279, -29.2501, -15.1936, 0.52 ) }
    dend_21 { pt3dadd( -40.2024, -29.6579, -15.7602, 0.52 ) }
    dend_21 { pt3dadd( -41.2982, -30.3842, -16.8619, 0.88 ) }
    dend_21 { pt3dadd( -42.0097, -30.8339, -17.5941, 1.25 ) }
    dend_21 { pt3dadd( -43.9829, -32.0006, -19.5281, 1.62 ) }
    dend_21 { pt3dadd( -45.6248, -32.9279, -20.9937, 1.55 ) }
    dend_21 { pt3dadd( -47.0555, -33.6963, -22.1802, 0.81 ) }
    dend_21 { pt3dadd( -47.1351, -33.7375, -22.2408, 0.81 ) }
    dend_21 { pt3dadd( -47.579, -33.982, -22.5318, 0.37 ) }
    dend_21 { pt3dadd( -48.5965, -34.6369, -23.1017, 0.37 ) }
    dend_21 { pt3dadd( -49.7643, -35.6203, -23.4734, 0.37 ) }
    dend_21 { pt3dadd( -49.8125, -35.6707, -23.4792, 0.37 ) }
    dend_21 { pt3dadd( -50.516, -36.4113, -23.5747, 1.03 ) }
    dend_21 { pt3dadd( -51.2043, -37.1174, -23.6936, 1.47 ) }
    dend_21 { pt3dadd( -51.9365, -37.8703, -23.8323, 0.96 ) }
    dend_21 { pt3dadd( -52.5058, -38.4585, -23.9517, 0.29 ) }
    dend_21 { pt3dadd( -54.0608, -40.038, -24.2915, 0.29 ) }
    dend_21 { pt3dadd( -56.1483, -42.108, -24.7307, 0.29 ) }
    dend_21 { pt3dadd( -57.1943, -43.0953, -24.934, 0.29 ) }
    dend_21 { pt3dadd( -57.9124, -43.7328, -25.0884, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 33/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.14087, -12.8688, -1.19862, 2.36 ) }
    dend_1 { pt3dadd( -3.23391, -13.1718, -1.23932, 2.36 ) }
    dend_1 { pt3dadd( -3.55807, -14.2093, -1.3318, 2.36 ) }
    dend_1 { pt3dadd( -4.1215, -16.0124, -1.49254, 1.99 ) }
    dend_1 { pt3dadd( -4.65631, -17.724, -1.64512, 1.99 ) }
    dend_1 { pt3dadd( -5.13256, -19.2481, -1.78098, 2.14 ) }
    dend_1 { pt3dadd( -5.65979, -20.9354, -1.9314, 3.02 ) }
    dend_1 { pt3dadd( -5.96935, -21.8605, -2.00035, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.97531, 41.4078, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 9.15148, 56.2491, 1.00426, 1.18 ) }
    axon_1 { pt3dadd( 11.3276, 71.0904, 1.00426, 1.18 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 44/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 30.794, 40.846, 4.66751, 0.74 ) }
    dend_77 { pt3dadd( 31.0557, 43.1403, 5.98615, 0.74 ) }
    dend_77 { pt3dadd( 31.0638, 43.1968, 6.00583, 0.74 ) }
    dend_77 { pt3dadd( 31.2312, 43.9494, 6.21537, 0.74 ) }
    dend_77 { pt3dadd( 31.416, 44.6308, 6.37282, 0.59 ) }
    dend_77 { pt3dadd( 31.6271, 45.3338, 6.50696, 0.59 ) }
    dend_77 { pt3dadd( 31.8086, 45.9152, 6.59985, 0.59 ) }
    dend_77 { pt3dadd( 31.8249, 45.9653, 6.59935, 0.59 ) }
    dend_77 { pt3dadd( 32.0697, 46.6638, 6.62641, 0.22 ) }
    dend_77 { pt3dadd( 32.2128, 47.0366, 6.65627, 0.81 ) }
    dend_77 { pt3dadd( 32.3945, 47.5101, 6.71175, 1.03 ) }
    dend_77 { pt3dadd( 32.5736, 47.9044, 6.7993, 1.03 ) }
    dend_77 { pt3dadd( 32.9357, 48.6518, 7.00124, 0.81 ) }
    dend_77 { pt3dadd( 33.3361, 49.4296, 7.22435, 0.59 ) }
    dend_77 { pt3dadd( 33.8624, 50.4408, 7.51509, 0.59 ) }
    dend_77 { pt3dadd( 33.8974, 50.5035, 7.53747, 0.59 ) }
    dend_77 { pt3dadd( 34.7384, 51.9255, 8.1079, 0.59 ) }
    dend_77 { pt3dadd( 34.7645, 51.9683, 8.12584, 0.59 ) }
    dend_77 { pt3dadd( 35.0996, 52.5217, 8.3838, 0.44 ) }
    dend_77 { pt3dadd( 35.4247, 53.0847, 8.70711, 0.44 ) }
    dend_77 { pt3dadd( 36.0243, 54.308, 9.46246, 0.44 ) }
    dend_77 { pt3dadd( 36.1632, 54.6527, 9.67072, 0.96 ) }
    dend_77 { pt3dadd( 36.2788, 55.0932, 9.90937, 0.96 ) }
    dend_77 { pt3dadd( 36.4613, 55.9462, 10.3628, 0.59 ) }
    dend_77 { pt3dadd( 36.5889, 56.7282, 10.7489, 0.29 ) }
    dend_77 { pt3dadd( 36.6597, 57.3159, 11.0009, 0.29 ) }
    dend_77 { pt3dadd( 36.6647, 57.4243, 11.0318, 0.29 ) }
    dend_77 { pt3dadd( 36.6876, 58.5654, 11.2481, 0.29 ) }
    dend_77 { pt3dadd( 36.6879, 58.6253, 11.2515, 0.29 ) }
    dend_77 { pt3dadd( 36.6782, 59.3368, 11.1452, 0.29 ) }
    dend_77 { pt3dadd( 36.6746, 59.4455, 11.1159, 0.81 ) }
    dend_77 { pt3dadd( 36.6321, 59.9688, 10.9561, 0.81 ) }
    dend_77 { pt3dadd( 36.5747, 60.3193, 10.8427, 0.29 ) }
    dend_77 { pt3dadd( 36.3478, 60.9174, 10.6591, 0.29 ) }
    dend_77 { pt3dadd( 35.9847, 61.547, 10.4881, 0.29 ) }
    dend_77 { pt3dadd( 35.8975, 61.6669, 10.4583, 0.29 ) }
    dend_77 { pt3dadd( 35.4561, 62.171, 10.3171, 0.29 ) }
    dend_77 { pt3dadd( 35.23, 62.3944, 10.2504, 0.29 ) }
    dend_77 { pt3dadd( 34.2021, 63.2708, 9.99098, 0.29 ) }
    dend_77 { pt3dadd( 33.2974, 63.9371, 9.78151, 0.29 ) }
    dend_77 { pt3dadd( 33.2396, 63.9776, 9.7696, 0.29 ) }
    dend_77 { pt3dadd( 32.1508, 64.7246, 9.53017, 0.29 ) }
    dend_77 { pt3dadd( 32.0556, 64.7877, 9.50704, 0.29 ) }
    dend_77 { pt3dadd( 31.4915, 65.1457, 9.35841, 0.29 ) }
    dend_77 { pt3dadd( 30.9693, 65.4375, 9.20386, 0.81 ) }
    dend_77 { pt3dadd( 30.3339, 65.7382, 9.04547, 0.81 ) }
    dend_77 { pt3dadd( 30.0843, 73.0202, 10.9107, 0.81 ) }
    dend_77 { pt3dadd( 30.1842, 79.9618, 13.8999, 0.81 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 92/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 30.794, 40.846, 4.66751, 1.03 ) }
    dend_74 { pt3dadd( 32.5672, 41.1698, 5.58286, 1.03 ) }
    dend_74 { pt3dadd( 33.634, 41.3861, 6.09114, 0.74 ) }
    dend_74 { pt3dadd( 35.0948, 41.8219, 6.68284, 0.74 ) }
    dend_74 { pt3dadd( 35.1439, 41.8431, 6.69932, 0.74 ) }
    dend_74 { pt3dadd( 35.9899, 42.3067, 6.83756, 0.52 ) }
    dend_74 { pt3dadd( 36.5554, 42.6684, 6.83602, 0.52 ) }
    dend_74 { pt3dadd( 36.6228, 42.7249, 6.81191, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_74 { pt3dadd( 37.4969, 43.5693, 6.49416, 0.81 ) }
    dend_74 { pt3dadd( 38.1272, 44.2273, 6.25005, 1.11 ) }
    dend_74 { pt3dadd( 39.3232, 45.4244, 6.09275, 0.66 ) }
    dend_74 { pt3dadd( 39.904, 45.9952, 6.14452, 0.59 ) }
    dend_74 { pt3dadd( 40.6387, 46.5806, 6.4865, 0.59 ) }
    dend_74 { pt3dadd( 41.942, 47.4369, 7.48642, 0.59 ) }
    dend_74 { pt3dadd( 41.9934, 47.4618, 7.53474, 0.59 ) }
    dend_74 { pt3dadd( 43.5505, 48.0779, 9.08818, 0.59 ) }
    dend_74 { pt3dadd( 43.6006, 48.0959, 9.14107, 0.59 ) }
    dend_74 { pt3dadd( 44.7779, 48.5382, 10.3324, 1.25 ) }
    dend_74 { pt3dadd( 44.8314, 48.5615, 10.3794, 1.25 ) }
    dend_74 { pt3dadd( 45.8454, 49.1304, 11.0029, 0.96 ) }
    dend_74 { pt3dadd( 47.1575, 49.9721, 11.5349, 0.66 ) }
    dend_74 { pt3dadd( 47.2315, 50.0241, 11.5492, 0.66 ) }
    dend_74 { pt3dadd( 48.2484, 50.7893, 11.6556, 0.59 ) }
    dend_74 { pt3dadd( 49.2972, 51.6587, 11.6471, 0.59 ) }
    dend_74 { pt3dadd( 50.1744, 52.4217, 11.6106, 0.59 ) }
    dend_74 { pt3dadd( 50.7614, 52.9814, 11.5545, 0.59 ) }
    dend_74 { pt3dadd( 51.0576, 53.2533, 11.5144, 0.59 ) }
    dend_74 { pt3dadd( 51.4311, 53.5552, 11.475, 0.81 ) }
    dend_74 { pt3dadd( 52.0944, 54.0194, 11.4222, 0.81 ) }
    dend_74 { pt3dadd( 52.352, 54.1776, 11.4093, 0.81 ) }
    dend_74 { pt3dadd( 53.3608, 54.7683, 11.4046, 0.81 ) }
    dend_74 { pt3dadd( 54.3521, 55.3415, 11.4041, 0.44 ) }
    dend_74 { pt3dadd( 55.215, 55.8331, 11.4044, 0.44 ) }
    dend_74 { pt3dadd( 55.3011, 55.8815, 11.4041, 0.44 ) }
    dend_74 { pt3dadd( 56.1358, 56.3527, 11.4261, 0.81 ) }
    dend_74 { pt3dadd( 56.6326, 56.6457, 11.4468, 0.96 ) }
    dend_74 { pt3dadd( 57.3036, 57.0718, 11.5011, 0.81 ) }
    dend_74 { pt3dadd( 57.3558, 57.1096, 11.5066, 0.81 ) }
    dend_74 { pt3dadd( 58.1918, 57.8248, 11.5529, 0.52 ) }
    dend_74 { pt3dadd( 59.0929, 58.6639, 11.5682, 0.52 ) }
    dend_74 { pt3dadd( 59.5591, 59.1312, 11.5911, 0.81 ) }
    dend_74 { pt3dadd( 60.4605, 60.0796, 11.6525, 0.52 ) }
    dend_74 { pt3dadd( 60.5989, 60.2246, 11.6705, 0.52 ) }
    dend_74 { pt3dadd( 62.1809, 61.839, 11.9268, 0.37 ) }
    dend_74 { pt3dadd( 62.2263, 61.8835, 11.9347, 0.37 ) }
    dend_74 { pt3dadd( 63.2657, 62.8645, 12.1136, 0.37 ) }
    dend_74 { pt3dadd( 63.8316, 63.3691, 12.2251, 1.03 ) }
    dend_74 { pt3dadd( 65.0915, 64.4126, 12.4965, 1.03 ) }
    dend_74 { pt3dadd( 65.1418, 64.4511, 12.5089, 1.03 ) }
    dend_74 { pt3dadd( 65.9739, 65.0234, 12.7679, 1.03 ) }
    dend_74 { pt3dadd( 66.0257, 65.0601, 12.7803, 1.03 ) }
    dend_74 { pt3dadd( 66.7956, 65.6448, 12.8856, 0.66 ) }
    dend_74 { pt3dadd( 66.8534, 65.6902, 12.8919, 0.66 ) }
    dend_74 { pt3dadd( 67.3497, 66.1291, 12.9029, 0.66 ) }
    dend_74 { pt3dadd( 67.4259, 66.1996, 12.906, 0.66 ) }
    dend_74 { pt3dadd( 67.9072, 66.6853, 12.9439, 0.66 ) }
    dend_74 { pt3dadd( 68.9192, 67.7245, 13.0317, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 49/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 0.969274, 23.1874, 1.15977, 0.96 ) }
    dend_72 { pt3dadd( 0.984379, 23.659, 1.16112, 0.96 ) }
    dend_72 { pt3dadd( 0.955842, 24.6329, 1.13617, 0.74 ) }
    dend_72 { pt3dadd( 0.795189, 25.8967, 1.07491, 0.74 ) }
    dend_72 { pt3dadd( 0.785713, 25.9518, 1.07144, 0.74 ) }
    dend_72 { pt3dadd( 0.535281, 27.0619, 0.989211, 0.66 ) }
    dend_72 { pt3dadd( 0.272414, 28.0911, 0.907022, 0.66 ) }
    dend_72 { pt3dadd( 0.219306, 28.2365, 0.897471, 0.66 ) }
    dend_72 { pt3dadd( -0.314917, 29.1225, 0.808223, 1.03 ) }
    dend_72 { pt3dadd( -0.35124, 29.1664, 0.805795, 1.03 ) }
    dend_72 { pt3dadd( -0.880767, 29.714, 0.828533, 1.03 ) }
    dend_72 { pt3dadd( -0.929732, 29.7589, 0.837072, 1.03 ) }
    dend_72 { pt3dadd( -1.47481, 30.2381, 0.962554, 0.81 ) }
    dend_72 { pt3dadd( -2.54039, 31.2076, 1.3134, 0.81 ) }
    dend_72 { pt3dadd( -3.31087, 31.9433, 1.61938, 0.81 ) }
    dend_72 { pt3dadd( -4.19583, 32.7966, 2.05869, 0.66 ) }
    dend_72 { pt3dadd( -5.03736, 33.6367, 2.54606, 0.66 ) }
    dend_72 { pt3dadd( -5.07937, 33.6816, 2.57248, 0.66 ) }
    dend_72 { pt3dadd( -5.95743, 34.7442, 3.18984, 1.03 ) }
    dend_72 { pt3dadd( -6.45327, 35.4277, 3.59589, 1.03 ) }
    dend_72 { pt3dadd( -7.12303, 36.4228, 4.21275, 0.96 ) }
    dend_72 { pt3dadd( -7.41594, 36.9147, 4.53056, 0.96 ) }
    dend_72 { pt3dadd( -7.78025, 37.6448, 4.98281, 0.52 ) }
    dend_72 { pt3dadd( -8.10954, 38.4003, 5.43558, 0.52 ) }
    dend_72 { pt3dadd( -8.12543, 38.4482, 5.46117, 0.52 ) }
    dend_72 { pt3dadd( -8.37915, 39.5191, 6.00194, 1.11 ) }
    dend_72 { pt3dadd( -8.4894, 40.3408, 6.33243, 1.11 ) }
    dend_72 { pt3dadd( -8.58109, 41.1903, 6.70788, 1.03 ) }
    dend_72 { pt3dadd( -8.58612, 41.2412, 6.73147, 1.03 ) }
    dend_72 { pt3dadd( -8.69421, 41.8487, 6.98789, 0.66 ) }
    dend_72 { pt3dadd( -8.7112, 41.9086, 7.00853, 0.66 ) }
    dend_72 { pt3dadd( -9.08937, 42.5545, 7.13237, 0.44 ) }
    dend_72 { pt3dadd( -9.68584, 43.1454, 7.22565, 0.44 ) }
    dend_72 { pt3dadd( -9.9453, 43.3248, 7.27368, 0.44 ) }
    dend_72 { pt3dadd( -10.6136, 43.7376, 7.54767, 0.44 ) }
    dend_72 { pt3dadd( -10.783, 43.8443, 7.65381, 0.44 ) }
    dend_72 { pt3dadd( -11.5874, 44.4395, 8.30203, 0.44 ) }
    dend_72 { pt3dadd( -11.6241, 44.4747, 8.34657, 0.44 ) }
    dend_72 { pt3dadd( -12.1876, 45.2427, 9.31649, 0.74 ) }
    dend_72 { pt3dadd( -12.7128, 46.2535, 10.6547, 0.52 ) }
    dend_72 { pt3dadd( -12.9303, 46.8747, 11.4391, 0.66 ) }
    dend_72 { pt3dadd( -13.0587, 47.3862, 12.057, 0.66 ) }
    dend_72 { pt3dadd( -13.1939, 48.4014, 13.1671, 1.47 ) }
    dend_72 { pt3dadd( -13.2244, 48.7967, 13.5517, 1.47 ) }
    dend_72 { pt3dadd( -13.232, 50.4113, 14.7884, 0.66 ) }
    dend_72 { pt3dadd( -13.2213, 51.2856, 15.3272, 0.66 ) }
    dend_72 { pt3dadd( -13.2229, 51.4087, 15.3961, 0.66 ) }
    dend_72 { pt3dadd( -13.3171, 52.4709, 15.9062, 0.66 ) }
    dend_72 { pt3dadd( -13.3265, 52.5303, 15.9325, 0.66 ) }
    dend_72 { pt3dadd( -13.6232, 54.1599, 16.6838, 0.66 ) }
    dend_72 { pt3dadd( -13.6334, 54.2108, 16.7055, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_72 { pt3dadd( -13.8674, 54.9833, 17.1243, 0.66 ) }
    dend_72 { pt3dadd( -14.2612, 56.1001, 17.8145, 0.66 ) }
    dend_72 { pt3dadd( -14.6962, 57.1989, 18.5539, 0.88 ) }
    dend_72 { pt3dadd( -14.7543, 57.3665, 18.6629, 0.88 ) }
    dend_72 { pt3dadd( -15.0097, 58.2775, 19.2763, 0.88 ) }
    dend_72 { pt3dadd( -15.2752, 59.5598, 20.0756, 1.11 ) }
    dend_72 { pt3dadd( -15.3371, 60.0137, 20.3372, 0.88 ) }
    dend_72 { pt3dadd( -15.4069, 60.6804, 20.6991, 0.59 ) }
    dend_72 { pt3dadd( -15.575, 61.9103, 21.2581, 0.59 ) }
    dend_72 { pt3dadd( -15.7597, 62.8671, 21.6712, 0.44 ) }
    dend_72 { pt3dadd( -15.91, 63.5073, 21.9262, 0.44 ) }
    dend_72 { pt3dadd( -15.9389, 63.6055, 21.9538, 0.44 ) }
    dend_72 { pt3dadd( -16.29, 64.3622, 22.1207, 0.44 ) }
    dend_72 { pt3dadd( -16.5208, 64.7046, 22.173, 0.44 ) }
    dend_72 { pt3dadd( -16.8103, 65.0294, 22.1786, 0.44 ) }
    dend_72 { pt3dadd( -16.9553, 65.1938, 22.1617, 0.44 ) }
    dend_72 { pt3dadd( -17.1569, 65.586, 22.1562, 0.74 ) }
    dend_72 { pt3dadd( -17.3564, 66.3761, 22.1927, 0.96 ) }
    dend_72 { pt3dadd( -17.3557, 66.4317, 22.1981, 0.96 ) }
    dend_72 { pt3dadd( -17.3031, 66.8353, 22.2466, 0.96 ) }
    dend_72 { pt3dadd( -17.2894, 66.8986, 22.255, 0.96 ) }
    dend_72 { pt3dadd( -17.0463, 67.906, 22.3878, 0.44 ) }
    dend_72 { pt3dadd( -17.0332, 67.9695, 22.3952, 0.44 ) }
    dend_72 { pt3dadd( -16.9509, 68.7919, 22.4621, 0.44 ) }
    dend_72 { pt3dadd( -16.9496, 68.8907, 22.467, 0.44 ) }
    dend_72 { pt3dadd( -16.9806, 69.5819, 22.4674, 0.44 ) }
    dend_72 { pt3dadd( -17.0478, 70.261, 22.4371, 0.96 ) }
    dend_72 { pt3dadd( -17.2131, 71.3062, 22.3645, 0.96 ) }
    dend_72 { pt3dadd( -17.5048, 72.5866, 22.2626, 0.96 ) }
    dend_72 { pt3dadd( -17.7102, 73.2955, 22.1985, 0.96 ) }
    dend_72 { pt3dadd( -17.8994, 73.9198, 22.142, 0.44 ) }
    dend_72 { pt3dadd( -18.2106, 74.9162, 22.0549, 0.44 ) }
    dend_72 { pt3dadd( -18.5865, 76.1367, 21.9581, 0.44 ) }
    dend_72 { pt3dadd( -18.8794, 77.1338, 21.9044, 0.44 ) }
    dend_72 { pt3dadd( -18.9071, 77.2358, 21.9025, 0.44 ) }
    dend_72 { pt3dadd( -19.0958, 77.9759, 21.9286, 0.44 ) }
    dend_72 { pt3dadd( -19.2389, 78.5659, 21.9817, 0.74 ) }
    dend_72 { pt3dadd( -19.3464, 79.0556, 22.0431, 0.81 ) }
    dend_72 { pt3dadd( -19.5211, 79.8853, 22.1622, 0.81 ) }
    dend_72 { pt3dadd( -19.5396, 79.9756, 22.177, 0.81 ) }
    dend_72 { pt3dadd( -19.7716, 80.7374, 22.2967, 0.29 ) }
    dend_72 { pt3dadd( -19.9136, 81.048, 22.3426, 0.29 ) }
    dend_72 { pt3dadd( -19.9877, 81.1889, 22.3592, 0.29 ) }
    dend_72 { pt3dadd( -20.2484, 81.6519, 22.3947, 0.29 ) }
    dend_72 { pt3dadd( -20.3485, 81.8176, 22.3987, 0.29 ) }
    dend_72 { pt3dadd( -20.6002, 82.2422, 22.3956, 0.29 ) }
    dend_72 { pt3dadd( -20.6521, 82.328, 22.3916, 0.29 ) }
    dend_72 { pt3dadd( -21.1036, 83.1036, 22.3518, 0.29 ) }
    dend_72 { pt3dadd( -21.3371, 83.5042, 22.3371, 0.29 ) }
    dend_72 { pt3dadd( -21.3747, 83.5696, 22.3357, 0.29 ) }
    dend_72 { pt3dadd( -21.5153, 83.8044, 22.3347, 0.88 ) }
    dend_72 { pt3dadd( -21.8203, 84.4102, 22.3448, 0.88 ) }
    dend_72 { pt3dadd( -22.2394, 85.2747, 22.3346, 0.88 ) }
    dend_72 { pt3dadd( -22.4792, 85.7403, 22.3169, 0.88 ) }
    dend_72 { pt3dadd( -22.5104, 85.7982, 22.3133, 0.88 ) }
    dend_72 { pt3dadd( -23.0107, 86.6816, 22.2359, 0.29 ) }
    dend_72 { pt3dadd( -23.7797, 88.0002, 22.0928, 0.29 ) }
    dend_72 { pt3dadd( -24.1243, 88.604, 22.0048, 0.59 ) }
    dend_72 { pt3dadd( -24.4867, 89.242, 21.8846, 0.59 ) }
    dend_72 { pt3dadd( -24.7595, 89.7304, 21.7783, 0.29 ) }
    dend_72 { pt3dadd( -25.0986, 90.3078, 21.639, 0.29 ) }
    dend_72 { pt3dadd( -25.1695, 90.4159, 21.6093, 0.29 ) }
    dend_72 { pt3dadd( -25.5982, 90.9756, 21.4445, 0.29 ) }
    dend_72 { pt3dadd( -25.6554, 91.0565, 21.4264, 0.29 ) }
    dend_72 { pt3dadd( -26.0167, 91.5924, 21.3114, 0.29 ) }
    dend_72 { pt3dadd( -26.1586, 91.7972, 21.2716, 0.29 ) }
    dend_72 { pt3dadd( -26.4827, 92.2276, 21.2525, 0.29 ) }
    dend_72 { pt3dadd( -26.5306, 92.2865, 21.2558, 0.29 ) }
    dend_72 { pt3dadd( -27.1409, 92.9916, 21.3398, 0.29 ) }
    dend_72 { pt3dadd( -27.3899, 93.2697, 21.3781, 1.11 ) }
    dend_72 { pt3dadd( -27.9235, 93.8523, 21.4651, 1.33 ) }
    dend_72 { pt3dadd( -28.7453, 94.7635, 21.6108, 0.74 ) }
    dend_72 { pt3dadd( -29.321, 95.4499, 21.695, 0.44 ) }
    dend_72 { pt3dadd( -29.8913, 96.187, 21.7515, 0.44 ) }
    dend_72 { pt3dadd( -30.0178, 96.3652, 21.7565, 0.44 ) }
    dend_72 { pt3dadd( -30.2046, 96.6539, 21.7475, 0.44 ) }
    dend_72 { pt3dadd( -30.2737, 96.7754, 21.7249, 0.44 ) }
    dend_72 { pt3dadd( -30.7473, 97.7158, 21.4282, 0.44 ) }
    dend_72 { pt3dadd( -31.0635, 98.3574, 21.2061, 1.11 ) }
    dend_72 { pt3dadd( -31.3729, 98.9989, 20.9746, 1.55 ) }
    dend_72 { pt3dadd( -31.606, 99.5092, 20.7992, 1.55 ) }
    dend_72 { pt3dadd( -32.1038, 100.632, 20.4295, 0.22 ) }
    dend_72 { pt3dadd( -32.4074, 101.353, 20.214, 0.22 ) }
    dend_72 { pt3dadd( -32.7136, 102.107, 20.0186, 0.22 ) }
    dend_72 { pt3dadd( -32.7466, 102.199, 19.9974, 0.22 ) }
    dend_72 { pt3dadd( -33.0132, 103.036, 19.8412, 0.22 ) }
    dend_72 { pt3dadd( -33.0943, 103.301, 19.8096, 0.22 ) }
    dend_72 { pt3dadd( -33.2869, 103.956, 19.793, 0.22 ) }
    dend_72 { pt3dadd( -33.4517, 104.426, 19.7797, 0.96 ) }
    dend_72 { pt3dadd( -33.55, 104.679, 19.7711, 0.96 ) }
    dend_72 { pt3dadd( -33.7328, 105.073, 19.768, 0.22 ) }
    dend_72 { pt3dadd( -33.9939, 105.547, 19.7729, 0.22 ) }
    dend_72 { pt3dadd( -34.0885, 105.716, 19.7779, 0.22 ) }
    dend_72 { pt3dadd( -34.8519, 107.094, 19.8434, 0.22 ) }
    dend_72 { pt3dadd( -34.9164, 107.219, 19.8598, 0.22 ) }
    dend_72 { pt3dadd( -35.254, 107.896, 19.9881, 0.81 ) }
    dend_72 { pt3dadd( -35.2815, 107.954, 20.0021, 0.81 ) }
    dend_72 { pt3dadd( -35.5891, 108.627, 20.198, 1.33 ) }
    dend_72 { pt3dadd( -35.7761, 109.046, 20.3412, 1.33 ) }
    dend_72 { pt3dadd( -36.2318, 109.864, 20.6888, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_72 { pt3dadd( -36.4893, 110.258, 20.8575, 0.15 ) }
    dend_72 { pt3dadd( -36.5488, 110.334, 20.8848, 0.15 ) }
    dend_72 { pt3dadd( -37.127, 111.02, 21.1089, 0.15 ) }
    dend_72 { pt3dadd( -37.2105, 111.108, 21.1347, 0.15 ) }
    dend_72 { pt3dadd( -38.972, 112.852, 21.5711, 0.15 ) }
    dend_72 { pt3dadd( -39.0885, 112.965, 21.5824, 0.15 ) }
    dend_72 { pt3dadd( -40.5904, 114.332, 21.5496, 0.15 ) }
    dend_72 { pt3dadd( -40.7035, 114.429, 21.5356, 1.03 ) }
    dend_72 { pt3dadd( -41.2347, 114.855, 21.4047, 1.03 ) }
    dend_72 { pt3dadd( -41.2862, 114.894, 21.3868, 1.03 ) }
    dend_72 { pt3dadd( -42.4486, 115.696, 20.692, 0.15 ) }
    dend_72 { pt3dadd( -43.3701, 116.297, 20.0713, 0.15 ) }
    dend_72 { pt3dadd( -43.4801, 116.357, 19.9764, 0.59 ) }
    dend_72 { pt3dadd( -43.8769, 116.578, 19.6305, 0.59 ) }
    dend_72 { pt3dadd( -47.9117, 125.062, 19.7922, 0.59 ) }
    dend_72 { pt3dadd( -53.6175, 132.564, 18.6787, 0.59 ) }
    dend_72 { pt3dadd( -60.1977, 139.464, 18.8766, 0.59 ) }
    dend_72 { pt3dadd( -66.7518, 146.39, 18.7421, 0.59 ) }
    dend_72 { pt3dadd( -73.8329, 152.827, 18.9373, 0.59 ) }
    dend_72 { pt3dadd( -79.4881, 160.417, 19.451, 0.59 ) }
    dend_72 { pt3dadd( -84.9327, 168.16, 19.2595, 0.59 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 21/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 0.969274, 23.1874, 1.15977, 0.66 ) }
    dend_71 { pt3dadd( 0.543814, 23.775, 0.630039, 0.66 ) }
    dend_71 { pt3dadd( -0.136856, 24.384, -0.138037, 0.52 ) }
    dend_71 { pt3dadd( -0.571634, 24.6959, -0.564321, 0.52 ) }
    dend_71 { pt3dadd( -0.616221, 24.7265, -0.60288, 0.52 ) }
    dend_71 { pt3dadd( -1.44731, 25.2905, -1.28088, 0.52 ) }
    dend_71 { pt3dadd( -1.55445, 25.3662, -1.36693, 0.52 ) }
    dend_71 { pt3dadd( -2.82357, 26.3507, -2.35715, 0.88 ) }
    dend_71 { pt3dadd( -3.30647, 26.7969, -2.69561, 0.96 ) }
    dend_71 { pt3dadd( -3.80884, 27.4377, -3.01838, 0.96 ) }
    dend_71 { pt3dadd( -3.84192, 27.4901, -3.03763, 0.96 ) }
    dend_71 { pt3dadd( -4.26956, 28.339, -3.27731, 0.66 ) }
    dend_71 { pt3dadd( -4.78214, 29.5045, -3.574, 0.66 ) }
    dend_71 { pt3dadd( -5.24517, 30.7034, -3.83319, 0.66 ) }
    dend_71 { pt3dadd( -5.93532, 32.3815, -4.19976, 0.66 ) }
    dend_71 { pt3dadd( -5.96182, 32.4385, -4.21437, 0.66 ) }
    dend_71 { pt3dadd( -6.5926, 33.6066, -4.54421, 0.44 ) }
    dend_71 { pt3dadd( -7.05911, 34.3281, -4.76596, 0.44 ) }
    dend_71 { pt3dadd( -7.56088, 34.9522, -4.99101, 0.88 ) }
    dend_71 { pt3dadd( -8.38318, 35.8369, -5.36011, 0.88 ) }
    dend_71 { pt3dadd( -9.11086, 36.5661, -5.67449, 0.44 ) }
    dend_71 { pt3dadd( -9.60826, 37.0698, -5.87721, 0.96 ) }
    dend_71 { pt3dadd( -10.1129, 37.5745, -6.06279, 1.25 ) }
    dend_71 { pt3dadd( -10.7798, 38.2488, -6.30736, 1.25 ) }
    dend_71 { pt3dadd( -11.6288, 39.0909, -6.54496, 0.52 ) }
    dend_71 { pt3dadd( -12.4317, 39.8904, -6.67807, 0.29 ) }
    dend_71 { pt3dadd( -12.5836, 40.0474, -6.6833, 0.29 ) }
    dend_71 { pt3dadd( -13.1237, 40.624, -6.66412, 0.29 ) }
    dend_71 { pt3dadd( -13.509, 41.0637, -6.62018, 0.29 ) }
    dend_71 { pt3dadd( -14.2481, 41.978, -6.46994, 0.29 ) }
    dend_71 { pt3dadd( -14.7727, 42.7088, -6.31873, 0.29 ) }
    dend_71 { pt3dadd( -15.0853, 43.2314, -6.22535, 0.29 ) }
    dend_71 { pt3dadd( -15.3008, 43.6678, -6.16844, 0.29 ) }
    dend_71 { pt3dadd( -15.642, 44.5352, -6.09457, 0.66 ) }
    dend_71 { pt3dadd( -15.854, 45.1807, -6.06153, 0.96 ) }
    dend_71 { pt3dadd( -16.1246, 46.1235, -6.06269, 0.96 ) }
    dend_71 { pt3dadd( -16.2881, 46.718, -6.05464, 0.96 ) }
    dend_71 { pt3dadd( -16.456, 47.316, -6.03965, 0.52 ) }
    dend_71 { pt3dadd( -16.5949, 47.7611, -6.02444, 0.37 ) }
    dend_71 { pt3dadd( -16.7468, 48.1374, -5.97179, 0.37 ) }
    dend_71 { pt3dadd( -16.8126, 48.2618, -5.93994, 0.37 ) }
    dend_71 { pt3dadd( -17.2346, 48.8567, -5.71969, 0.37 ) }
    dend_71 { pt3dadd( -17.4145, 49.066, -5.63021, 0.37 ) }
    dend_71 { pt3dadd( -17.7849, 49.4635, -5.46172, 0.37 ) }
    dend_71 { pt3dadd( -18.6842, 50.3985, -5.08024, 0.37 ) }
    dend_71 { pt3dadd( -18.8166, 50.5359, -5.02625, 0.37 ) }
    dend_71 { pt3dadd( -19.4982, 51.2571, -4.82499, 0.37 ) }
    dend_71 { pt3dadd( -19.8963, 51.6876, -4.76347, 0.66 ) }
    dend_71 { pt3dadd( -20.3923, 52.2604, -4.75594, 0.66 ) }
    dend_71 { pt3dadd( -21.0492, 53.1115, -4.86913, 0.66 ) }
    dend_71 { pt3dadd( -21.0851, 53.1637, -4.8836, 0.66 ) }
    dend_71 { pt3dadd( -21.8357, 54.3889, -5.24688, 0.29 ) }
    dend_71 { pt3dadd( -22.1856, 55.0344, -5.46187, 0.29 ) }
    dend_71 { pt3dadd( -22.271, 55.2083, -5.52325, 0.29 ) }
    dend_71 { pt3dadd( -22.6055, 55.9769, -5.79263, 0.88 ) }
    dend_71 { pt3dadd( -22.8328, 56.5907, -5.99165, 0.88 ) }
    dend_71 { pt3dadd( -22.9654, 56.9714, -6.06813, 0.88 ) }
    dend_71 { pt3dadd( -23.1357, 57.495, -6.10027, 0.37 ) }
    dend_71 { pt3dadd( -23.1567, 57.565, -6.10293, 0.37 ) }
    dend_71 { pt3dadd( -23.3022, 58.0086, -6.10717, 0.37 ) }
    dend_71 { pt3dadd( -23.3726, 58.1973, -6.10012, 0.37 ) }
    dend_71 { pt3dadd( -23.8541, 59.2682, -6.03197, 0.37 ) }
    dend_71 { pt3dadd( -23.8825, 59.326, -6.03093, 0.37 ) }
    dend_71 { pt3dadd( -24.1179, 59.7763, -6.03551, 1.11 ) }
    dend_71 { pt3dadd( -24.6843, 60.8079, -6.0774, 1.11 ) }
    dend_71 { pt3dadd( -25.2385, 61.7693, -6.14009, 1.11 ) }
    dend_71 { pt3dadd( -25.8168, 62.7593, -6.27125, 1.11 ) }
    dend_71 { pt3dadd( -26.2511, 63.4974, -6.4143, 1.11 ) }
    dend_71 { pt3dadd( -26.4403, 63.8169, -6.49147, 0.44 ) }
    dend_71 { pt3dadd( -26.9585, 64.5773, -6.71045, 0.44 ) }
    dend_71 { pt3dadd( -27.1037, 64.7682, -6.77208, 0.44 ) }
    dend_71 { pt3dadd( -27.8807, 65.7123, -7.07679, 0.44 ) }
    dend_71 { pt3dadd( -27.9229, 65.7603, -7.09034, 0.44 ) }
    dend_71 { pt3dadd( -28.5045, 66.395, -7.21516, 0.44 ) }
    dend_71 { pt3dadd( -30.1706, 68.1851, -7.48228, 0.44 ) }
    dend_71 { pt3dadd( -30.5495, 68.5817, -7.52487, 1.33 ) }
    dend_71 { pt3dadd( -31.0727, 69.1506, -7.55504, 1.62 ) }
    dend_71 { pt3dadd( -31.7299, 69.9234, -7.54015, 0.96 ) }
    dend_71 { pt3dadd( -32.141, 70.4541, -7.52042, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_71 { pt3dadd( -32.7366, 71.3003, -7.47349, 0.37 ) }
    dend_71 { pt3dadd( -32.7751, 71.3631, -7.46878, 0.37 ) }
    dend_71 { pt3dadd( -33.6715, 72.9034, -7.3649, 0.37 ) }
    dend_71 { pt3dadd( -34.3689, 74.1693, -7.29781, 0.37 ) }
    dend_71 { pt3dadd( -34.7504, 74.8946, -7.26959, 0.74 ) }
    dend_71 { pt3dadd( -34.9491, 75.279, -7.26313, 0.29 ) }
    dend_71 { pt3dadd( -35.0177, 75.415, -7.26028, 0.29 ) }
    dend_71 { pt3dadd( -35.7239, 76.842, -7.22863, 0.29 ) }
    dend_71 { pt3dadd( -35.7824, 76.9668, -7.22572, 0.29 ) }
    dend_71 { pt3dadd( -36.0853, 77.631, -7.21688, 1.55 ) }
    dend_71 { pt3dadd( -36.3992, 78.3612, -7.2039, 1.62 ) }
    dend_71 { pt3dadd( -36.6669, 78.9884, -7.19462, 1.03 ) }
    dend_71 { pt3dadd( -36.693, 79.0472, -7.1942, 1.03 ) }
    dend_71 { pt3dadd( -36.9283, 79.5547, -7.195, 0.37 ) }
    dend_71 { pt3dadd( -36.9561, 79.6128, -7.19576, 0.37 ) }
    dend_71 { pt3dadd( -37.3228, 80.3361, -7.21749, 0.37 ) }
    dend_71 { pt3dadd( -37.77, 81.1643, -7.24968, 1.11 ) }
    dend_71 { pt3dadd( -38.1367, 81.8189, -7.26674, 1.11 ) }
    dend_71 { pt3dadd( -38.3294, 82.152, -7.27064, 0.52 ) }
    dend_71 { pt3dadd( -38.4025, 82.2859, -7.2699, 0.52 ) }
    dend_71 { pt3dadd( -38.6801, 82.8399, -7.25957, 0.52 ) }
    dend_71 { pt3dadd( -38.7999, 83.0994, -7.25203, 0.52 ) }
    dend_71 { pt3dadd( -39.0077, 83.5961, -7.23384, 0.52 ) }
    dend_71 { pt3dadd( -39.1755, 84.0182, -7.21936, 1.11 ) }
    dend_71 { pt3dadd( -39.5863, 85.0866, -7.18782, 1.11 ) }
    dend_71 { pt3dadd( -39.8006, 85.6227, -7.17771, 0.37 ) }
    dend_71 { pt3dadd( -40.1115, 86.3694, -7.17238, 0.37 ) }
    dend_71 { pt3dadd( -40.1962, 86.5529, -7.17421, 0.37 ) }
    dend_71 { pt3dadd( -40.5771, 87.3017, -7.19731, 0.37 ) }
    dend_71 { pt3dadd( -40.729, 87.5708, -7.20952, 0.37 ) }
    dend_71 { pt3dadd( -41.2257, 88.3428, -7.25482, 0.37 ) }
    dend_71 { pt3dadd( -41.5521, 88.8166, -7.28699, 0.88 ) }
    dend_71 { pt3dadd( -41.9171, 89.3219, -7.32506, 0.88 ) }
    dend_71 { pt3dadd( -41.9558, 89.3739, -7.32921, 0.88 ) }
    dend_71 { pt3dadd( -42.0846, 89.5406, -7.34225, 0.29 ) }
    dend_71 { pt3dadd( -42.1698, 89.6505, -7.35027, 0.29 ) }
    dend_71 { pt3dadd( -42.8451, 90.5391, -7.40863, 0.29 ) }
    dend_71 { pt3dadd( -42.8832, 90.5912, -7.41583, 0.29 ) }
    dend_71 { pt3dadd( -43.3449, 91.2077, -7.5408, 0.81 ) }
    dend_71 { pt3dadd( -43.6689, 91.6239, -7.64419, 1.11 ) }
    dend_71 { pt3dadd( -43.8656, 91.8467, -7.71096, 1.11 ) }
    dend_71 { pt3dadd( -43.9106, 91.8915, -7.72725, 1.11 ) }
    dend_71 { pt3dadd( -44.5665, 92.4335, -7.97159, 0.22 ) }
    dend_71 { pt3dadd( -45.0273, 92.7763, -8.13217, 0.22 ) }
    dend_71 { pt3dadd( -45.1078, 92.83, -8.15914, 0.22 ) }
    dend_71 { pt3dadd( -45.818, 93.3087, -8.37876, 0.22 ) }
    dend_71 { pt3dadd( -45.9813, 93.4275, -8.42599, 0.22 ) }
    dend_71 { pt3dadd( -46.5039, 93.8399, -8.55619, 0.22 ) }
    dend_71 { pt3dadd( -46.8316, 94.1377, -8.61233, 0.22 ) }
    dend_71 { pt3dadd( -46.893, 94.2056, -8.62441, 0.66 ) }
    dend_71 { pt3dadd( -47.1656, 94.5829, -8.71072, 0.66 ) }
    dend_71 { pt3dadd( -47.4217, 95.0316, -8.82417, 0.15 ) }
    dend_71 { pt3dadd( -47.5165, 95.1976, -8.86748, 0.15 ) }
    dend_71 { pt3dadd( -47.8886, 95.8558, -9.04502, 0.15 ) }
    dend_71 { pt3dadd( -47.959, 95.9726, -9.07069, 0.15 ) }
    dend_71 { pt3dadd( -48.3162, 96.5263, -9.16811, 0.59 ) }
    dend_71 { pt3dadd( -48.9493, 97.3784, -9.27485, 0.59 ) }
    dend_71 { pt3dadd( -49.3003, 97.8093, -9.29933, 0.59 ) }
    dend_71 { pt3dadd( -49.3491, 97.8656, -9.29986, 0.59 ) }
    dend_71 { pt3dadd( -49.7681, 98.3292, -9.28003, 0.22 ) }
    dend_71 { pt3dadd( -49.8124, 98.3771, -9.27761, 0.22 ) }
    dend_71 { pt3dadd( -50.2599, 98.841, -9.25006, 0.22 ) }
    dend_71 { pt3dadd( -50.5016, 99.0904, -9.25462, 0.22 ) }
    dend_71 { pt3dadd( -51.0941, 99.7176, -9.30691, 0.22 ) }
    dend_71 { pt3dadd( -51.3418, 99.9934, -9.33929, 0.22 ) }
    dend_71 { pt3dadd( -51.5591, 100.238, -9.37643, 0.74 ) }
    dend_71 { pt3dadd( -52.1299, 100.885, -9.48006, 0.74 ) }
    dend_71 { pt3dadd( -52.4797, 101.286, -9.54593, 0.22 ) }
    dend_71 { pt3dadd( -52.5639, 101.384, -9.56191, 0.22 ) }
    dend_71 { pt3dadd( -53.8814, 102.893, -9.80013, 0.22 ) }
    dend_71 { pt3dadd( -54.0793, 103.113, -9.8525, 0.81 ) }
    dend_71 { pt3dadd( -54.7416, 103.829, -10.0651, 0.81 ) }
    dend_71 { pt3dadd( -54.7833, 103.876, -10.0836, 0.81 ) }
    dend_71 { pt3dadd( -54.978, 104.097, -10.1915, 0.15 ) }
    dend_71 { pt3dadd( -55.6758, 104.885, -10.6497, 0.15 ) }
    dend_71 { pt3dadd( -56.3987, 105.708, -11.2445, 0.66 ) }
    dend_71 { pt3dadd( -56.6248, 105.984, -11.4327, 0.66 ) }
    dend_71 { pt3dadd( -57.2139, 106.762, -11.9288, 0.15 ) }
    dend_71 { pt3dadd( -57.4144, 107.041, -12.0873, 0.37 ) }
    dend_71 { pt3dadd( -57.5446, 107.232, -12.1988, 0.15 ) }
    dend_71 { pt3dadd( -57.574, 107.283, -12.2269, 0.15 ) }
    dend_71 { pt3dadd( -58.0533, 108.129, -12.585, 0.15 ) }
    dend_71 { pt3dadd( -58.1813, 108.355, -12.6804, 1.03 ) }
    dend_71 { pt3dadd( -58.4256, 108.769, -12.9004, 1.03 ) }
    dend_71 { pt3dadd( -58.8494, 109.514, -13.3425, 0.22 ) }
    dend_71 { pt3dadd( -58.8771, 109.564, -13.3746, 0.22 ) }
    dend_71 { pt3dadd( -59.4157, 110.567, -14.1296, 0.22 ) }
    dend_71 { pt3dadd( -59.4401, 110.615, -14.1667, 0.22 ) }
    dend_71 { pt3dadd( -59.8409, 111.427, -14.7615, 0.88 ) }
    dend_71 { pt3dadd( -60.0393, 111.829, -14.9876, 0.88 ) }
    dend_71 { pt3dadd( -60.0691, 111.885, -14.9998, 0.88 ) }
    dend_71 { pt3dadd( -60.3498, 112.364, -14.9864, 0.22 ) }
    dend_71 { pt3dadd( -61.0112, 113.465, -14.8044, 0.22 ) }
    dend_71 { pt3dadd( -61.0445, 113.519, -14.7919, 0.22 ) }
    dend_71 { pt3dadd( -61.6227, 114.412, -14.5224, 0.22 ) }
    dend_71 { pt3dadd( -62.3735, 115.495, -14.207, 0.22 ) }
    dend_71 { pt3dadd( -63.0146, 116.38, -13.9589, 0.22 ) }
    dend_71 { pt3dadd( -63.4826, 117.014, -13.7898, 1.11 ) }
    dend_71 { pt3dadd( -63.5684, 117.128, -13.7616, 1.11 ) }
    dend_71 { pt3dadd( -63.8048, 117.444, -13.7043, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_71 { pt3dadd( -64.5117, 118.422, -13.6779, 0.22 ) }
    dend_71 { pt3dadd( -64.7153, 118.698, -13.7107, 0.66 ) }
    dend_71 { pt3dadd( -65.1967, 119.319, -13.7994, 0.66 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 3/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 26.1716, 12.581, -35.5532, 0.81 ) }
    dend_63 { pt3dadd( 26.794, 12.5622, -37.1598, 0.81 ) }
    dend_63 { pt3dadd( 26.824, 12.5654, -37.2251, 0.81 ) }
    dend_63 { pt3dadd( 27.1572, 12.6177, -37.9123, 0.81 ) }
    dend_63 { pt3dadd( 27.3134, 12.6578, -38.2027, 0.81 ) }
    dend_63 { pt3dadd( 27.8424, 12.8257, -39.1304, 0.52 ) }
    dend_63 { pt3dadd( 29.9172, 13.6159, -42.516, 0.81 ) }
    dend_63 { pt3dadd( 30.5148, 13.9275, -43.3438, 0.81 ) }
    dend_63 { pt3dadd( 30.5567, 13.9509, -43.3968, 0.81 ) }
    dend_63 { pt3dadd( 31.2335, 14.3757, -44.2034, 0.81 ) }
    dend_63 { pt3dadd( 31.3169, 14.4273, -44.2941, 0.81 ) }
    dend_63 { pt3dadd( 31.8051, 14.6724, -44.7431, 0.81 ) }
    dend_63 { pt3dadd( 32.7008, 14.8977, -45.2148, 0.52 ) }
    dend_63 { pt3dadd( 33.0176, 14.9026, -45.8397, 0.52 ) }
    dend_63 { pt3dadd( 33.0956, 14.9029, -46.0067, 0.52 ) }
    dend_63 { pt3dadd( 33.4865, 14.8635, -46.968, 0.81 ) }
    dend_63 { pt3dadd( 34.1245, 14.7699, -48.7095, 0.81 ) }
    dend_63 { pt3dadd( 34.1431, 14.766, -48.7694, 0.81 ) }
    dend_63 { pt3dadd( 35.0543, 14.5902, -52.2444, 0.74 ) }
    dend_63 { pt3dadd( 35.3207, 14.594, -53.3029, 1.84 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 23/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 26.1716, 12.581, -35.5532, 1.4 ) }
    dend_60 { pt3dadd( 26.216, 12.5854, -35.5177, 1.4 ) }
    dend_60 { pt3dadd( 29.2227, 12.9395, -33.5279, 0.96 ) }
    dend_60 { pt3dadd( 29.437, 12.9696, -33.4189, 0.96 ) }
    dend_60 { pt3dadd( 30.9818, 13.2008, -32.8122, 0.96 ) }
    dend_60 { pt3dadd( 31.073, 13.216, -32.7838, 0.96 ) }
    dend_60 { pt3dadd( 32.7054, 13.5015, -32.3415, 0.96 ) }
    dend_60 { pt3dadd( 32.7717, 13.515, -32.3316, 0.96 ) }
    dend_60 { pt3dadd( 34.074, 13.8529, -32.3551, 1.18 ) }
    dend_60 { pt3dadd( 35.1122, 14.1543, -32.3707, 0.88 ) }
    dend_60 { pt3dadd( 36.0864, 14.4679, -32.385, 0.88 ) }
    dend_60 { pt3dadd( 36.1509, 14.4896, -32.386, 0.88 ) }
    dend_60 { pt3dadd( 36.7268, 14.6945, -32.4271, 0.88 ) }
    dend_60 { pt3dadd( 37.5318, 14.9912, -32.5131, 0.88 ) }
    dend_60 { pt3dadd( 37.5948, 15.0152, -32.5215, 0.88 ) }
    dend_60 { pt3dadd( 39.5762, 15.7653, -32.8022, 0.88 ) }
    dend_60 { pt3dadd( 39.6657, 15.798, -32.8151, 0.88 ) }
    dend_60 { pt3dadd( 41.6977, 16.487, -33.1791, 1.18 ) }
    dend_60 { pt3dadd( 43.1331, 16.9502, -33.473, 1.18 ) }
    dend_60 { pt3dadd( 43.4877, 17.0603, -33.5522, 1.18 ) }
    dend_60 { pt3dadd( 45.0403, 17.5738, -33.912, 1.18 ) }
    dend_60 { pt3dadd( 45.3176, 17.6715, -33.9804, 1.18 ) }
    dend_60 { pt3dadd( 47.1724, 18.269, -34.4004, 1.18 ) }
    dend_60 { pt3dadd( 47.3777, 18.3183, -34.4386, 1.18 ) }
    dend_60 { pt3dadd( 47.8925, 18.3965, -34.5313, 0.52 ) }
    dend_60 { pt3dadd( 49.1939, 18.4746, -34.7314, 0.52 ) }
    dend_60 { pt3dadd( 49.2619, 18.472, -34.7396, 0.52 ) }
    dend_60 { pt3dadd( 50.5398, 18.3413, -34.8303, 0.88 ) }
    dend_60 { pt3dadd( 51.9412, 18.0982, -34.8412, 0.88 ) }
    dend_60 { pt3dadd( 52.1915, 18.0512, -34.8487, 0.88 ) }
    dend_60 { pt3dadd( 53.1554, 17.8645, -34.8946, 1.25 ) }
    dend_60 { pt3dadd( 53.3673, 17.8293, -34.9071, 1.25 ) }
    dend_60 { pt3dadd( 54.3024, 17.7617, -34.9662, 1.25 ) }
    dend_60 { pt3dadd( 54.4391, 17.7631, -34.9756, 1.25 ) }
    dend_60 { pt3dadd( 55.9912, 17.8733, -35.15, 1.11 ) }
    dend_60 { pt3dadd( 57.5596, 18.0298, -35.3665, 1.11 ) }
    dend_60 { pt3dadd( 58.8139, 18.1561, -35.5562, 0.81 ) }
    dend_60 { pt3dadd( 60.2135, 18.2847, -35.7784, 0.81 ) }
    dend_60 { pt3dadd( 60.4364, 18.2968, -35.8129, 0.81 ) }
    dend_60 { pt3dadd( 62.4116, 18.3322, -36.0997, 0.81 ) }
    dend_60 { pt3dadd( 62.5147, 18.3306, -36.1137, 0.81 ) }
    dend_60 { pt3dadd( 64.6846, 18.2192, -36.3982, 0.81 ) }
    dend_60 { pt3dadd( 64.7875, 18.2095, -36.4099, 0.81 ) }
    dend_60 { pt3dadd( 67.0709, 17.9247, -36.6212, 0.81 ) }
    dend_60 { pt3dadd( 67.9907, 17.825, -36.7334, 0.96 ) }
    dend_60 { pt3dadd( 68.2134, 17.8036, -36.7643, 0.96 ) }
    dend_60 { pt3dadd( 69.2157, 17.7331, -36.9401, 0.74 ) }
    dend_60 { pt3dadd( 70.5567, 17.6798, -37.2163, 0.74 ) }
    dend_60 { pt3dadd( 70.6236, 17.6783, -37.231, 0.74 ) }
    dend_60 { pt3dadd( 73.4049, 17.669, -37.9776, 0.74 ) }
    dend_60 { pt3dadd( 74.2551, 17.6679, -38.2188, 1.4 ) }
    dend_60 { pt3dadd( 75.9931, 17.6639, -38.7321, 1.77 ) }
    dend_60 { pt3dadd( 77.0203, 17.6638, -39.0545, 1.77 ) }
    dend_60 { pt3dadd( 77.2997, 17.6627, -39.1449, 1.77 ) }
    dend_60 { pt3dadd( 78.7825, 17.6411, -39.5839, 1.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 78/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -12.9595, 36.1491, 16.1682, 0.44 ) }
    dend_55 { pt3dadd( -13.7052, 36.3706, 16.9198, 0.44 ) }
    dend_55 { pt3dadd( -14.4029, 36.5991, 17.5816, 0.44 ) }
    dend_55 { pt3dadd( -15.1888, 36.8715, 18.3046, 0.44 ) }
    dend_55 { pt3dadd( -15.2178, 36.8817, 18.3303, 0.44 ) }
    dend_55 { pt3dadd( -16.0927, 37.1899, 19.0885, 0.74 ) }
    dend_55 { pt3dadd( -16.4507, 37.3051, 19.3894, 0.74 ) }
    dend_55 { pt3dadd( -16.6865, 37.3815, 19.5606, 0.37 ) }
    dend_55 { pt3dadd( -16.718, 37.3898, 19.584, 0.37 ) }
    dend_55 { pt3dadd( -17.1651, 37.4695, 19.8673, 0.37 ) }
    dend_55 { pt3dadd( -17.1932, 37.4728, 19.8868, 0.37 ) }
    dend_55 { pt3dadd( -17.6841, 37.5075, 20.244, 0.37 ) }
    dend_55 { pt3dadd( -17.7256, 37.511, 20.2766, 0.37 ) }
    dend_55 { pt3dadd( -18.3141, 37.5985, 20.7933, 0.37 ) }
    dend_55 { pt3dadd( -18.3523, 37.6067, 20.8288, 0.37 ) }
    dend_55 { pt3dadd( -18.9315, 37.7775, 21.3548, 0.37 ) }
    dend_55 { pt3dadd( -19.2383, 37.8892, 21.6011, 0.37 ) }
    dend_55 { pt3dadd( -19.2736, 37.9062, 21.6243, 0.37 ) }
    dend_55 { pt3dadd( -19.8083, 38.1674, 21.9053, 0.37 ) }
    dend_55 { pt3dadd( -19.8413, 38.1837, 21.9203, 0.37 ) }
    dend_55 { pt3dadd( -20.3641, 38.4177, 22.1267, 0.59 ) }
    dend_55 { pt3dadd( -20.8848, 38.6265, 22.2997, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -21.5562, 38.8587, 22.5176, 0.81 ) }
    dend_55 { pt3dadd( -22.1365, 39.0489, 22.6998, 0.81 ) }
    dend_55 { pt3dadd( -22.6874, 39.2258, 22.8621, 0.29 ) }
    dend_55 { pt3dadd( -22.9515, 39.3154, 22.9451, 0.29 ) }
    dend_55 { pt3dadd( -23.0264, 39.3439, 22.975, 0.29 ) }
    dend_55 { pt3dadd( -23.5884, 39.5477, 23.2519, 0.29 ) }
    dend_55 { pt3dadd( -23.6681, 39.573, 23.2962, 0.29 ) }
    dend_55 { pt3dadd( -24.1382, 39.7029, 23.5653, 0.59 ) }
    dend_55 { pt3dadd( -24.4975, 39.7783, 23.7671, 0.59 ) }
    dend_55 { pt3dadd( -25.2867, 39.9047, 24.2229, 0.15 ) }
    dend_55 { pt3dadd( -25.8407, 39.9687, 24.5379, 0.37 ) }
    dend_55 { pt3dadd( -26.0264, 39.9803, 24.6425, 0.74 ) }
    dend_55 { pt3dadd( -26.36, 39.9814, 24.8454, 0.37 ) }
    dend_55 { pt3dadd( -26.624, 39.9582, 25.0226, 0.37 ) }
    dend_55 { pt3dadd( -26.6605, 39.9539, 25.0502, 0.37 ) }
    dend_55 { pt3dadd( -26.8921, 39.9529, 25.2497, 0.22 ) }
    dend_55 { pt3dadd( -26.9322, 39.995, 25.3167, 0.22 ) }
    dend_55 { pt3dadd( -27.1629, 40.4109, 25.825, 0.22 ) }
    dend_55 { pt3dadd( -27.1805, 40.4453, 25.865, 0.22 ) }
    dend_55 { pt3dadd( -27.3708, 40.8093, 26.2605, 0.22 ) }
    dend_55 { pt3dadd( -27.421, 40.8878, 26.3745, 0.22 ) }
    dend_55 { pt3dadd( -27.5309, 41.0153, 26.6169, 0.22 ) }
    dend_55 { pt3dadd( -27.5497, 41.0296, 26.6491, 0.22 ) }
    dend_55 { pt3dadd( -28.0003, 41.2942, 27.3166, 0.74 ) }
    dend_55 { pt3dadd( -28.1882, 41.3818, 27.5658, 0.74 ) }
    dend_55 { pt3dadd( -29.006, 41.6843, 28.5604, 0.59 ) }
    dend_55 { pt3dadd( -29.5886, 41.8701, 29.2078, 0.37 ) }
    dend_55 { pt3dadd( -30.1687, 42.0086, 29.8406, 0.37 ) }
    dend_55 { pt3dadd( -30.199, 42.0105, 29.8751, 0.37 ) }
    dend_55 { pt3dadd( -30.4661, 41.9687, 30.2309, 0.37 ) }
    dend_55 { pt3dadd( -30.5121, 41.9573, 30.2957, 0.37 ) }
    dend_55 { pt3dadd( -30.8821, 41.8343, 30.8254, 0.37 ) }
    dend_55 { pt3dadd( -31.3484, 41.6877, 31.6252, 0.88 ) }
    dend_55 { pt3dadd( -31.8997, 41.5745, 32.8587, 0.88 ) }
    dend_55 { pt3dadd( -32.2781, 41.6206, 34.1389, 0.37 ) }
    dend_55 { pt3dadd( -32.4003, 41.7054, 34.8084, 0.37 ) }
    dend_55 { pt3dadd( -32.4084, 41.7155, 34.868, 0.37 ) }
    dend_55 { pt3dadd( -32.467, 41.9565, 35.8356, 0.37 ) }
    dend_55 { pt3dadd( -32.4659, 42.2771, 36.5536, 0.37 ) }
    dend_55 { pt3dadd( -32.3621, 43.0346, 37.6778, 0.37 ) }
    dend_55 { pt3dadd( -32.3539, 43.0583, 37.7083, 0.37 ) }
    dend_55 { pt3dadd( -35.8158, 43.375, 42.2743, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -12.9595, 36.1491, 16.1682, 0.52 ) }
    dend_50 { pt3dadd( -13.4654, 37.2414, 17.2064, 0.52 ) }
    dend_50 { pt3dadd( -13.956, 38.1292, 17.8926, 0.52 ) }
    dend_50 { pt3dadd( -13.9904, 38.1773, 17.9307, 0.52 ) }
    dend_50 { pt3dadd( -14.8061, 39.1094, 18.6837, 0.52 ) }
    dend_50 { pt3dadd( -14.8754, 39.1812, 18.7467, 0.52 ) }
    dend_50 { pt3dadd( -15.7094, 40.0787, 19.5317, 0.52 ) }
    dend_50 { pt3dadd( -16.5634, 40.9563, 20.2757, 0.74 ) }
    dend_50 { pt3dadd( -17.5394, 41.9926, 21.1552, 0.74 ) }
    dend_50 { pt3dadd( -18.487, 43.1458, 22.1595, 0.59 ) }
    dend_50 { pt3dadd( -19.213, 44.051, 23.0991, 0.59 ) }
    dend_50 { pt3dadd( -19.8539, 44.8384, 24.0606, 0.66 ) }
    dend_50 { pt3dadd( -19.8891, 44.8822, 24.1212, 0.66 ) }
    dend_50 { pt3dadd( -20.292, 45.4236, 24.9441, 0.66 ) }
    dend_50 { pt3dadd( -21.2001, 46.8228, 27.1376, 0.52 ) }
    dend_50 { pt3dadd( -22.0524, 48.3748, 29.677, 0.52 ) }
    dend_50 { pt3dadd( -22.394, 49.1274, 30.9394, 0.52 ) }
    dend_50 { pt3dadd( -22.4175, 49.1891, 31.046, 0.52 ) }
    dend_50 { pt3dadd( -22.5769, 49.7197, 31.8822, 0.52 ) }
    dend_50 { pt3dadd( -22.5988, 49.8295, 32.041, 0.52 ) }
    dend_50 { pt3dadd( -22.5718, 50.8436, 33.1419, 0.96 ) }
    dend_50 { pt3dadd( -22.3918, 51.7478, 33.8309, 0.96 ) }
    dend_50 { pt3dadd( -22.3269, 52.3275, 34.1953, 0.52 ) }
    dend_50 { pt3dadd( -22.3651, 53.411, 34.8293, 0.52 ) }
    dend_50 { pt3dadd( -22.3818, 53.4823, 34.8635, 0.52 ) }
    dend_50 { pt3dadd( -22.7343, 54.5407, 35.2648, 0.74 ) }
    dend_50 { pt3dadd( -22.771, 54.6227, 35.2881, 0.74 ) }
    dend_50 { pt3dadd( -23.3361, 55.7417, 35.7124, 0.74 ) }
    dend_50 { pt3dadd( -23.367, 55.8086, 35.7469, 0.74 ) }
    dend_50 { pt3dadd( -23.7684, 56.819, 36.3542, 0.37 ) }
    dend_50 { pt3dadd( -24.0356, 57.3977, 36.7843, 0.37 ) }
    dend_50 { pt3dadd( -24.0589, 57.4513, 36.8225, 0.37 ) }
    dend_50 { pt3dadd( -24.6688, 58.9783, 37.8697, 0.37 ) }
    dend_50 { pt3dadd( -24.9745, 59.7236, 38.4386, 0.59 ) }
    dend_50 { pt3dadd( -25.5566, 60.9636, 39.3774, 0.81 ) }
    dend_50 { pt3dadd( -26.57, 62.6273, 40.7154, 0.52 ) }
    dend_50 { pt3dadd( -27.2971, 63.6353, 41.5398, 0.52 ) }
    dend_50 { pt3dadd( -28.193, 64.708, 42.3937, 0.52 ) }
    dend_50 { pt3dadd( -29.2959, 65.8125, 43.168, 0.29 ) }
    dend_50 { pt3dadd( -30.2067, 66.5279, 43.688, 0.29 ) }
    dend_50 { pt3dadd( -31.6765, 67.4184, 44.3522, 0.29 ) }
    dend_50 { pt3dadd( -31.8078, 67.4859, 44.4014, 0.29 ) }
    dend_50 { pt3dadd( -32.6063, 67.8039, 44.7, 0.15 ) }
    dend_50 { pt3dadd( -33.8898, 68.205, 45.0931, 0.15 ) }
    dend_50 { pt3dadd( -35.3628, 68.7035, 45.407, 0.81 ) }
    dend_50 { pt3dadd( -36.0964, 68.9782, 45.5914, 0.81 ) }
    dend_50 { pt3dadd( -41.3981, 78.2769, 50.2059, 0.81 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 89/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -6.58522, 36.8837, -1.78866, 0.66 ) }
    dend_48 { pt3dadd( -6.47755, 37.0486, -1.83264, 0.66 ) }
    dend_48 { pt3dadd( -6.35488, 37.2913, -1.91946, 0.66 ) }
    dend_48 { pt3dadd( -6.32039, 37.384, -1.95354, 0.66 ) }
    dend_48 { pt3dadd( -6.13131, 37.9927, -2.17781, 0.66 ) }
    dend_48 { pt3dadd( -6.12349, 38.0328, -2.19093, 0.66 ) }
    dend_48 { pt3dadd( -6.04379, 38.648, -2.38838, 0.66 ) }
    dend_48 { pt3dadd( -6.02595, 38.9604, -2.49597, 0.66 ) }
    dend_48 { pt3dadd( -6.03287, 39.2704, -2.59238, 0.29 ) }
    dend_48 { pt3dadd( -6.0355, 39.3114, -2.60393, 0.29 ) }
    dend_48 { pt3dadd( -6.09015, 39.9654, -2.80051, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_48 { pt3dadd( -6.10747, 40.2615, -2.8871, 0.29 ) }
    dend_48 { pt3dadd( -6.10913, 40.3027, -2.89795, 0.29 ) }
    dend_48 { pt3dadd( -6.10888, 41.0339, -3.09918, 0.29 ) }
    dend_48 { pt3dadd( -6.10616, 41.1311, -3.12668, 0.29 ) }
    dend_48 { pt3dadd( -6.06509, 41.9773, -3.36136, 0.29 ) }
    dend_48 { pt3dadd( -6.06141, 42.0186, -3.37178, 0.29 ) }
    dend_48 { pt3dadd( -6.03975, 42.3229, -3.44694, 0.96 ) }
    dend_48 { pt3dadd( -6.00494, 42.8952, -3.56628, 0.96 ) }
    dend_48 { pt3dadd( -6.00078, 42.9432, -3.57397, 0.96 ) }
    dend_48 { pt3dadd( -5.96396, 43.2956, -3.61685, 0.81 ) }
    dend_48 { pt3dadd( -5.8824, 44.065, -3.67964, 0.59 ) }
    dend_48 { pt3dadd( -5.77927, 44.996, -3.75672, 0.52 ) }
    dend_48 { pt3dadd( -5.73498, 45.4071, -3.81209, 0.37 ) }
    dend_48 { pt3dadd( -5.65845, 46.3279, -3.97538, 0.37 ) }
    dend_48 { pt3dadd( -5.62534, 46.819, -4.07756, 1.03 ) }
    dend_48 { pt3dadd( -5.60414, 47.2203, -4.17236, 1.03 ) }
    dend_48 { pt3dadd( -5.60282, 47.2557, -4.18187, 1.03 ) }
    dend_48 { pt3dadd( -5.57433, 48.1105, -4.47398, 0.52 ) }
    dend_48 { pt3dadd( -5.57719, 48.6632, -4.69939, 0.52 ) }
    dend_48 { pt3dadd( -5.58113, 48.7584, -4.74153, 0.52 ) }
    dend_48 { pt3dadd( -5.6123, 49.601, -5.06796, 0.44 ) }
    dend_48 { pt3dadd( -5.61341, 49.6361, -5.07849, 0.44 ) }
    dend_48 { pt3dadd( -5.64946, 50.4986, -5.19526, 1.33 ) }
    dend_48 { pt3dadd( -5.67707, 51.2584, -5.16705, 1.4 ) }
    dend_48 { pt3dadd( -5.67932, 51.3225, -5.15784, 1.4 ) }
    dend_48 { pt3dadd( -5.70856, 51.9446, -5.01466, 0.22 ) }
    dend_48 { pt3dadd( -5.75405, 52.7166, -4.76022, 0.22 ) }
    dend_48 { pt3dadd( -5.81659, 53.5477, -4.4386, 0.59 ) }
    dend_48 { pt3dadd( -5.86461, 53.937, -4.25781, 0.59 ) }
    dend_48 { pt3dadd( -5.92679, 54.3056, -4.08849, 0.22 ) }
    dend_48 { pt3dadd( -5.9354, 54.344, -4.07079, 0.22 ) }
    dend_48 { pt3dadd( -6.01603, 54.6219, -3.94834, 0.22 ) }
    dend_48 { pt3dadd( -6.13623, 54.9584, -3.79519, 0.22 ) }
    dend_48 { pt3dadd( -6.31862, 55.3803, -3.64114, 0.22 ) }
    dend_48 { pt3dadd( -6.35781, 55.4629, -3.60976, 0.22 ) }
    dend_48 { pt3dadd( -6.66331, 56.1029, -3.36491, 0.81 ) }
    dend_48 { pt3dadd( -6.68062, 56.1401, -3.35172, 0.81 ) }
    dend_48 { pt3dadd( -6.88311, 56.5674, -3.21145, 0.81 ) }
    dend_48 { pt3dadd( -6.9604, 56.7368, -3.16685, 0.81 ) }
    dend_48 { pt3dadd( -7.16963, 57.2112, -3.06122, 0.22 ) }
    dend_48 { pt3dadd( -7.19451, 57.266, -3.05233, 0.22 ) }
    dend_48 { pt3dadd( -7.45388, 57.8096, -3.00504, 0.22 ) }
    dend_48 { pt3dadd( -7.5799, 58.0689, -2.98949, 0.22 ) }
    dend_48 { pt3dadd( -7.79451, 58.5033, -2.97489, 0.22 ) }
    dend_48 { pt3dadd( -8.00566, 58.9109, -3.00844, 1.03 ) }
    dend_48 { pt3dadd( -8.2035, 59.2786, -3.06975, 1.03 ) }
    dend_48 { pt3dadd( -8.43481, 59.701, -3.16736, 0.66 ) }
    dend_48 { pt3dadd( -8.75213, 60.2843, -3.3383, 0.22 ) }
    dend_48 { pt3dadd( -9.03013, 60.8174, -3.51907, 0.22 ) }
    dend_48 { pt3dadd( -9.48549, 61.6931, -3.86759, 0.22 ) }
    dend_48 { pt3dadd( -9.50575, 61.734, -3.88633, 0.22 ) }
    dend_48 { pt3dadd( -9.63848, 62.015, -4.02053, 0.88 ) }
    dend_48 { pt3dadd( -9.74368, 62.243, -4.12271, 0.88 ) }
    dend_48 { pt3dadd( -9.95288, 62.711, -4.30738, 0.22 ) }
    dend_48 { pt3dadd( -9.96729, 62.7434, -4.31759, 0.22 ) }
    dend_48 { pt3dadd( -10.3984, 63.6634, -4.49349, 0.22 ) }
    dend_48 { pt3dadd( -10.4335, 63.7287, -4.50524, 0.22 ) }
    dend_48 { pt3dadd( -10.6709, 64.0922, -4.59781, 0.22 ) }
    dend_48 { pt3dadd( -10.6976, 64.1246, -4.60883, 0.22 ) }
    dend_48 { pt3dadd( -10.9644, 64.3979, -4.7149, 0.96 ) }
    dend_48 { pt3dadd( -11.3295, 64.7487, -4.8586, 0.96 ) }
    dend_48 { pt3dadd( -11.3646, 64.7815, -4.87253, 0.96 ) }
    dend_48 { pt3dadd( -11.8422, 65.2808, -5.12435, 0.37 ) }
    dend_48 { pt3dadd( -12.1587, 65.6797, -5.33309, 0.29 ) }
    dend_48 { pt3dadd( -12.4965, 66.1866, -5.57741, 0.15 ) }
    dend_48 { pt3dadd( -12.516, 66.2216, -5.59377, 0.15 ) }
    dend_48 { pt3dadd( -12.6898, 66.5597, -5.73906, 0.15 ) }
    dend_48 { pt3dadd( -12.95, 67.0927, -5.94634, 1.03 ) }
    dend_48 { pt3dadd( -13.1988, 67.6487, -6.1249, 1.03 ) }
    dend_48 { pt3dadd( -13.3126, 67.9303, -6.21195, 1.03 ) }
    dend_48 { pt3dadd( -13.4231, 68.2335, -6.297, 0.22 ) }
    dend_48 { pt3dadd( -13.641, 68.8851, -6.44909, 0.22 ) }
    dend_48 { pt3dadd( -13.6532, 68.9255, -6.45625, 0.22 ) }
    dend_48 { pt3dadd( -13.7674, 69.3741, -6.50302, 0.96 ) }
    dend_48 { pt3dadd( -13.8736, 69.8698, -6.54678, 1.11 ) }
    dend_48 { pt3dadd( -13.9127, 70.2378, -6.57007, 0.22 ) }
    dend_48 { pt3dadd( -13.9161, 70.6423, -6.58514, 0.22 ) }
    dend_48 { pt3dadd( -13.8861, 70.9507, -6.60965, 0.22 ) }
    dend_48 { pt3dadd( -13.8636, 71.125, -6.6294, 0.22 ) }
    dend_48 { pt3dadd( -13.8593, 71.1672, -6.63336, 0.22 ) }
    dend_48 { pt3dadd( -13.8015, 72.0473, -6.74059, 0.22 ) }
    dend_48 { pt3dadd( -13.7934, 72.1101, -6.75487, 0.22 ) }
    dend_48 { pt3dadd( -13.7141, 72.6058, -6.93519, 0.22 ) }
    dend_48 { pt3dadd( -13.7065, 72.6503, -6.9543, 0.22 ) }
    dend_48 { pt3dadd( -13.5002, 73.8466, -7.48852, 0.22 ) }
    dend_48 { pt3dadd( -13.2608, 75.2336, -8.13799, 0.22 ) }
    dend_48 { pt3dadd( -13.033, 76.557, -8.80543, 0.22 ) }
    dend_48 { pt3dadd( -12.8535, 77.5537, -9.32282, 1.33 ) }
    dend_48 { pt3dadd( -12.7758, 77.9424, -9.5347, 1.33 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -6.58522, 36.8837, -1.78866, 0.74 ) }
    dend_47 { pt3dadd( -7.03768, 37.8605, -1.64021, 0.74 ) }
    dend_47 { pt3dadd( -7.36778, 38.4638, -1.56741, 0.37 ) }
    dend_47 { pt3dadd( -7.69244, 39.0262, -1.50756, 0.37 ) }
    dend_47 { pt3dadd( -7.79828, 39.2053, -1.49162, 0.37 ) }
    dend_47 { pt3dadd( -8.25723, 39.9677, -1.43188, 0.22 ) }
    dend_47 { pt3dadd( -8.2914, 40.0245, -1.42809, 0.22 ) }
    dend_47 { pt3dadd( -8.87416, 40.8917, -1.42043, 0.22 ) }
    dend_47 { pt3dadd( -8.91328, 40.9456, -1.41956, 0.22 ) }
    dend_47 { pt3dadd( -9.32689, 41.4932, -1.39561, 0.22 ) }
    dend_47 { pt3dadd( -9.48232, 41.6934, -1.38211, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( -9.83142, 42.1682, -1.34223, 0.88 ) }
    dend_47 { pt3dadd( -10.0323, 42.4582, -1.31517, 0.44 ) }
    dend_47 { pt3dadd( -10.2225, 42.8034, -1.28712, 0.29 ) }
    dend_47 { pt3dadd( -10.3797, 43.1365, -1.26669, 0.29 ) }
    dend_47 { pt3dadd( -10.4013, 43.1984, -1.25955, 0.29 ) }
    dend_47 { pt3dadd( -10.5804, 43.8675, -1.16122, 0.29 ) }
    dend_47 { pt3dadd( -10.647, 44.159, -1.11289, 0.29 ) }
    dend_47 { pt3dadd( -10.8422, 45.1631, -0.945187, 0.29 ) }
    dend_47 { pt3dadd( -10.8589, 45.2471, -0.931835, 0.29 ) }
    dend_47 { pt3dadd( -11.0449, 45.9845, -0.790524, 0.29 ) }
    dend_47 { pt3dadd( -11.1641, 46.3616, -0.697014, 0.29 ) }
    dend_47 { pt3dadd( -11.3652, 46.833, -0.556849, 0.29 ) }
    dend_47 { pt3dadd( -11.4338, 46.9522, -0.518964, 0.29 ) }
    dend_47 { pt3dadd( -11.7575, 47.3916, -0.371462, 0.88 ) }
    dend_47 { pt3dadd( -12.2914, 48.0236, -0.196174, 0.88 ) }
    dend_47 { pt3dadd( -12.3306, 48.0648, -0.187938, 0.88 ) }
    dend_47 { pt3dadd( -12.6614, 48.4139, -0.127408, 0.44 ) }
    dend_47 { pt3dadd( -13.0687, 48.8538, -0.0645044, 0.37 ) }
    dend_47 { pt3dadd( -13.1629, 48.9693, -0.0548866, 0.37 ) }
    dend_47 { pt3dadd( -13.6548, 49.6525, -0.0252597, 0.37 ) }
    dend_47 { pt3dadd( -13.7906, 49.8655, -0.0251271, 0.37 ) }
    dend_47 { pt3dadd( -14.112, 50.4302, -0.0211806, 0.37 ) }
    dend_47 { pt3dadd( -14.1758, 50.5568, -0.0185544, 0.37 ) }
    dend_47 { pt3dadd( -14.6851, 51.6446, -0.101802, 0.37 ) }
    dend_47 { pt3dadd( -14.7881, 51.8693, -0.139089, 1.11 ) }
    dend_47 { pt3dadd( -14.8167, 51.9271, -0.153764, 1.11 ) }
    dend_47 { pt3dadd( -15.1449, 52.4977, -0.337615, 1.11 ) }
    dend_47 { pt3dadd( -15.1878, 52.5565, -0.360224, 1.11 ) }
    dend_47 { pt3dadd( -15.9211, 53.3677, -0.703019, 0.74 ) }
    dend_47 { pt3dadd( -16.2702, 53.6625, -0.844499, 0.29 ) }
    dend_47 { pt3dadd( -16.7843, 54.0486, -1.02393, 0.29 ) }
    dend_47 { pt3dadd( -16.9089, 54.1337, -1.06358, 0.29 ) }
    dend_47 { pt3dadd( -17.4968, 54.4937, -1.22561, 0.74 ) }
    dend_47 { pt3dadd( -17.7639, 54.6709, -1.28236, 0.74 ) }
    dend_47 { pt3dadd( -18.0597, 54.8803, -1.31693, 0.29 ) }
    dend_47 { pt3dadd( -18.1192, 54.9278, -1.3288, 0.29 ) }
    dend_47 { pt3dadd( -18.7568, 55.5667, -1.50851, 0.22 ) }
    dend_47 { pt3dadd( -18.8042, 55.6246, -1.52376, 0.22 ) }
    dend_47 { pt3dadd( -19.2916, 56.3336, -1.66145, 0.22 ) }
    dend_47 { pt3dadd( -19.3639, 56.4549, -1.67784, 0.22 ) }
    dend_47 { pt3dadd( -19.7267, 57.0307, -1.71473, 0.74 ) }
    dend_47 { pt3dadd( -20.1403, 57.6556, -1.72018, 0.74 ) }
    dend_47 { pt3dadd( -20.665, 58.429, -1.65162, 0.74 ) }
    dend_47 { pt3dadd( -20.9983, 58.8856, -1.58816, 0.44 ) }
    dend_47 { pt3dadd( -21.3064, 59.2735, -1.5133, 0.22 ) }
    dend_47 { pt3dadd( -22.2818, 60.4373, -1.24334, 0.22 ) }
    dend_47 { pt3dadd( -22.3481, 60.5116, -1.222, 0.22 ) }
    dend_47 { pt3dadd( -22.8067, 60.9831, -1.07599, 0.81 ) }
    dend_47 { pt3dadd( -23.3322, 61.5515, -0.869827, 0.96 ) }
    dend_47 { pt3dadd( -23.392, 61.6208, -0.844656, 0.96 ) }
    dend_47 { pt3dadd( -23.7406, 62.079, -0.665443, 0.96 ) }
    dend_47 { pt3dadd( -23.773, 62.1337, -0.645298, 0.96 ) }
    dend_47 { pt3dadd( -23.9787, 62.5125, -0.528037, 0.29 ) }
    dend_47 { pt3dadd( -24.6659, 63.883, -0.186942, 0.29 ) }
    dend_47 { pt3dadd( -24.6942, 63.941, -0.171431, 0.29 ) }
    dend_47 { pt3dadd( -24.9021, 64.3177, -0.0726207, 0.88 ) }
    dend_47 { pt3dadd( -25.277, 64.9439, 0.08523, 0.88 ) }
    dend_47 { pt3dadd( -25.7287, 65.6134, 0.241162, 0.88 ) }
    dend_47 { pt3dadd( -26.0414, 66.0316, 0.331061, 0.29 ) }
    dend_47 { pt3dadd( -26.4627, 66.5283, 0.424116, 0.15 ) }
    dend_47 { pt3dadd( -27.3487, 67.5166, 0.619844, 0.15 ) }
    dend_47 { pt3dadd( -27.7445, 67.9299, 0.705452, 0.44 ) }
    dend_47 { pt3dadd( -28.2738, 68.4592, 0.813156, 0.44 ) }
    dend_47 { pt3dadd( -28.3213, 68.5059, 0.822213, 0.44 ) }
    dend_47 { pt3dadd( -28.5512, 68.7252, 0.859266, 0.81 ) }
    dend_47 { pt3dadd( -29.5668, 69.6574, 1.04306, 0.81 ) }
    dend_47 { pt3dadd( -30.0942, 70.1159, 1.16116, 0.22 ) }
    dend_47 { pt3dadd( -30.6705, 70.5873, 1.30144, 0.22 ) }
    dend_47 { pt3dadd( -30.8342, 70.7167, 1.34431, 0.22 ) }
    dend_47 { pt3dadd( -31.7206, 71.3988, 1.57978, 0.22 ) }
    dend_47 { pt3dadd( -32.6612, 72.0956, 1.83905, 0.22 ) }
    dend_47 { pt3dadd( -32.7143, 72.1346, 1.85507, 0.22 ) }
    dend_47 { pt3dadd( -33.294, 72.5829, 2.03363, 0.22 ) }
    dend_47 { pt3dadd( -33.4495, 72.7214, 2.0759, 0.74 ) }
    dend_47 { pt3dadd( -33.8787, 73.213, 2.16161, 0.74 ) }
    dend_47 { pt3dadd( -34.0135, 73.4204, 2.17064, 0.74 ) }
    dend_47 { pt3dadd( -34.2306, 73.8033, 2.17626, 0.74 ) }
    dend_47 { pt3dadd( -34.3682, 74.0409, 2.18814, 0.74 ) }
    dend_47 { pt3dadd( -34.8399, 74.7791, 2.24619, 0.22 ) }
    dend_47 { pt3dadd( -35.1478, 75.2359, 2.25858, 0.22 ) }
    dend_47 { pt3dadd( -35.7184, 76.0509, 2.27555, 0.22 ) }
    dend_47 { pt3dadd( -36.1678, 76.7014, 2.28397, 0.88 ) }
    dend_47 { pt3dadd( -36.8167, 77.6438, 2.31459, 1.25 ) }
    dend_47 { pt3dadd( -37.4444, 78.546, 2.35697, 1.25 ) }
    dend_47 { pt3dadd( -38.3124, 79.7511, 2.43079, 1.25 ) }
    dend_47 { pt3dadd( -38.9172, 80.5599, 2.48204, 0.59 ) }
    dend_47 { pt3dadd( -39.5171, 81.3359, 2.4942, 0.59 ) }
    dend_47 { pt3dadd( -40.1637, 82.1113, 2.46449, 0.15 ) }
    dend_47 { pt3dadd( -40.7615, 82.7792, 2.42742, 0.15 ) }
    dend_47 { pt3dadd( -41.0531, 83.0827, 2.40715, 0.37 ) }
    dend_47 { pt3dadd( -41.3711, 83.3614, 2.3907, 0.37 ) }
    dend_47 { pt3dadd( -42.2602, 84.0433, 2.28161, 0.22 ) }
    dend_47 { pt3dadd( -43.0775, 84.5887, 2.04085, 0.22 ) }
    dend_47 { pt3dadd( -43.137, 84.6286, 2.01123, 0.22 ) }
    dend_47 { pt3dadd( -43.339, 84.7744, 1.88151, 0.74 ) }
    dend_47 { pt3dadd( -43.8848, 85.2141, 1.49606, 0.74 ) }
    dend_47 { pt3dadd( -43.9303, 85.2551, 1.46785, 0.74 ) }
    dend_47 { pt3dadd( -44.97, 86.1797, 0.830078, 0.15 ) }
    dend_47 { pt3dadd( -45.3944, 86.5444, 0.57371, 0.15 ) }
    dend_47 { pt3dadd( -45.5075, 86.6409, 0.515952, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( -45.9899, 87.0438, 0.279738, 0.15 ) }
    dend_47 { pt3dadd( -47.1167, 87.9813, -0.236347, 0.15 ) }
    dend_47 { pt3dadd( -48.037, 88.7458, -0.590895, 0.88 ) }
    dend_47 { pt3dadd( -48.6734, 89.2781, -0.756253, 0.88 ) }
    dend_47 { pt3dadd( -49.6206, 90.064, -1.02895, 0.66 ) }
    dend_47 { pt3dadd( -55.4394, 97.5903, -1.50482, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 25.6137, -28.2637, 5.1071, 1.03 ) }
    dend_34 { pt3dadd( 26.2697, -29.473, 4.4297, 1.03 ) }
    dend_34 { pt3dadd( 26.3423, -29.5834, 4.38643, 1.03 ) }
    dend_34 { pt3dadd( 27.0134, -30.575, 4.04563, 1.03 ) }
    dend_34 { pt3dadd( 27.3038, -30.9565, 3.94049, 1.03 ) }
    dend_34 { pt3dadd( 28.9789, -33.0015, 3.47517, 1.03 ) }
    dend_34 { pt3dadd( 29.0352, -33.0655, 3.46218, 1.03 ) }
    dend_34 { pt3dadd( 31.2843, -35.4246, 3.14046, 0.88 ) }
    dend_34 { pt3dadd( 31.419, -35.5518, 3.13216, 0.88 ) }
    dend_34 { pt3dadd( 33.5966, -37.3781, 3.22058, 0.88 ) }
    dend_34 { pt3dadd( 34.4487, -37.9999, 3.35214, 0.88 ) }
    dend_34 { pt3dadd( 35.2447, -38.5021, 3.55293, 1.25 ) }
    dend_34 { pt3dadd( 36.2974, -39.0992, 3.87387, 1.25 ) }
    dend_34 { pt3dadd( 38.3884, -40.1253, 4.61503, 0.74 ) }
    dend_34 { pt3dadd( 40.4287, -41.0917, 5.32252, 0.74 ) }
    dend_34 { pt3dadd( 42.1332, -41.868, 5.89791, 0.74 ) }
    dend_34 { pt3dadd( 42.1989, -41.899, 5.91746, 0.74 ) }
    dend_34 { pt3dadd( 43.1272, -42.3521, 6.16329, 1.47 ) }
    dend_34 { pt3dadd( 44.4125, -42.9694, 6.4245, 1.47 ) }
    dend_34 { pt3dadd( 47.1235, -44.3351, 6.59309, 0.66 ) }
    dend_34 { pt3dadd( 48.3246, -44.9721, 6.52979, 0.66 ) }
    dend_34 { pt3dadd( 49.7363, -45.7662, 6.35145, 1.33 ) }
    dend_34 { pt3dadd( 49.8105, -45.8109, 6.33975, 1.33 ) }
    dend_34 { pt3dadd( 50.9566, -46.5689, 6.14639, 1.33 ) }
    dend_34 { pt3dadd( 52.995, -47.9396, 5.76796, 1.18 ) }
    dend_34 { pt3dadd( 54.577, -49.036, 5.43913, 1.18 ) }
    dend_34 { pt3dadd( 54.6757, -49.1068, 5.41795, 1.18 ) }
    dend_34 { pt3dadd( 56.3345, -50.3385, 5.06623, 0.88 ) }
    dend_34 { pt3dadd( 59.0593, -52.4951, 4.55217, 0.88 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 35/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 25.6137, -28.2637, 5.1071, 0.74 ) }
    dend_31 { pt3dadd( 25.6429, -28.2843, 5.16798, 0.74 ) }
    dend_31 { pt3dadd( 25.9892, -28.5676, 6.21891, 0.74 ) }
    dend_31 { pt3dadd( 26.0096, -28.5857, 6.28408, 0.74 ) }
    dend_31 { pt3dadd( 26.9152, -29.3291, 8.76614, 0.74 ) }
    dend_31 { pt3dadd( 28.3408, -30.3375, 12.1952, 0.74 ) }
    dend_31 { pt3dadd( 28.3685, -30.3556, 12.2576, 0.74 ) }
    dend_31 { pt3dadd( 29.9563, -31.2345, 15.4672, 1.4 ) }
    dend_31 { pt3dadd( 30.3868, -31.4489, 16.2836, 0.74 ) }
    dend_31 { pt3dadd( 31.3417, -31.8105, 17.8162, 0.74 ) }
    dend_31 { pt3dadd( 32.6322, -32.1059, 19.4269, 0.74 ) }
    dend_31 { pt3dadd( 32.7064, -32.1167, 19.4932, 0.74 ) }
    dend_31 { pt3dadd( 34.3027, -32.4544, 20.7471, 0.74 ) }
    dend_31 { pt3dadd( 34.3529, -32.4677, 20.7782, 0.74 ) }
    dend_31 { pt3dadd( 35.1389, -32.7005, 21.3317, 0.74 ) }
    dend_31 { pt3dadd( 35.2351, -32.7284, 21.3997, 0.74 ) }
    dend_31 { pt3dadd( 36.9393, -33.1662, 22.4722, 0.74 ) }
    dend_31 { pt3dadd( 38.6838, -33.5811, 23.5521, 0.74 ) }
    dend_31 { pt3dadd( 39.5786, -33.7865, 24.0961, 0.74 ) }
    dend_31 { pt3dadd( 41.656, -34.237, 25.2603, 0.74 ) }
    dend_31 { pt3dadd( 43.5692, -34.6671, 26.2386, 0.74 ) }
    dend_31 { pt3dadd( 45.2338, -35.0265, 27.0089, 1.25 ) }
    dend_31 { pt3dadd( 46.5885, -35.3293, 27.6171, 0.52 ) }
    dend_31 { pt3dadd( 47.1946, -35.4784, 27.8926, 0.52 ) }
    dend_31 { pt3dadd( 48.5298, -35.8651, 28.5213, 0.66 ) }
    dend_31 { pt3dadd( 50.3451, -36.4833, 29.409, 0.66 ) }
    dend_31 { pt3dadd( 50.4115, -36.5093, 29.4461, 0.66 ) }
    dend_31 { pt3dadd( 52.5889, -37.3142, 30.7295, 0.66 ) }
    dend_31 { pt3dadd( 53.1615, -37.4915, 31.0394, 0.96 ) }
    dend_31 { pt3dadd( 53.9966, -37.7291, 31.459, 0.66 ) }
    dend_31 { pt3dadd( 55.2798, -38.0261, 32.0488, 0.52 ) }
    dend_31 { pt3dadd( 55.3441, -38.042, 32.0728, 0.52 ) }
    dend_31 { pt3dadd( 56.6948, -38.4695, 32.4945, 0.52 ) }
    dend_31 { pt3dadd( 57.8757, -38.9486, 32.8311, 0.52 ) }
    dend_31 { pt3dadd( 58.873, -39.4499, 33.2374, 0.52 ) }
    dend_31 { pt3dadd( 58.92, -39.4778, 33.2621, 0.52 ) }
    dend_31 { pt3dadd( 60.0859, -40.1767, 33.905, 0.52 ) }
    dend_31 { pt3dadd( 61.0947, -40.757, 34.5008, 0.52 ) }
    dend_31 { pt3dadd( 62.2709, -41.409, 35.2121, 1.25 ) }
    dend_31 { pt3dadd( 63.3429, -41.8831, 35.9937, 0.52 ) }
    dend_31 { pt3dadd( 64.6009, -42.3427, 36.968, 0.52 ) }
    dend_31 { pt3dadd( 66.4788, -42.9351, 38.4492, 0.52 ) }
    dend_31 { pt3dadd( 66.6058, -42.9624, 38.5478, 0.52 ) }
    dend_31 { pt3dadd( 67.4726, -43.0871, 39.1949, 0.52 ) }
    dend_31 { pt3dadd( 70.4324, -43.1781, 41.2602, 0.37 ) }
    dend_31 { pt3dadd( 70.9976, -43.1419, 41.6515, 0.37 ) }
    dend_31 { pt3dadd( 71.1189, -43.12, 41.7395, 0.37 ) }
    dend_31 { pt3dadd( 72.1184, -42.8582, 42.5175, 0.37 ) }
    dend_31 { pt3dadd( 72.4014, -42.7891, 42.7539, 0.37 ) }
    dend_31 { pt3dadd( 73.7619, -42.4647, 43.938, 0.37 ) }
    dend_31 { pt3dadd( 73.8181, -42.4535, 43.9793, 0.37 ) }
    dend_31 { pt3dadd( 74.9754, -42.201, 44.9292, 0.37 ) }
    dend_31 { pt3dadd( 75.0275, -42.1896, 44.9755, 0.37 ) }
    dend_31 { pt3dadd( 76.4251, -41.913, 46.3652, 0.29 ) }
    dend_31 { pt3dadd( 76.5017, -41.8972, 46.4386, 0.29 ) }
    dend_31 { pt3dadd( 77.1747, -41.7405, 47.0608, 0.29 ) }
    dend_31 { pt3dadd( 77.232, -41.7264, 47.0995, 0.29 ) }
    dend_31 { pt3dadd( 77.8652, -41.5434, 47.4225, 0.29 ) }
    dend_31 { pt3dadd( 78.0054, -41.5037, 47.4827, 0.29 ) }
    dend_31 { pt3dadd( 79.1649, -41.1922, 47.8976, 0.29 ) }
    dend_31 { pt3dadd( 79.2892, -41.1559, 47.9536, 0.29 ) }
    dend_31 { pt3dadd( 80.5015, -40.7778, 48.5706, 0.29 ) }
    dend_31 { pt3dadd( 81.9526, -40.2582, 49.3591, 0.29 ) }
    dend_31 { pt3dadd( 82.0103, -40.2356, 49.3924, 0.29 ) }
    dend_31 { pt3dadd( 83.4487, -39.6322, 50.2666, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 84.6728, -39.0511, 51.0768, 0.59 ) }
    dend_31 { pt3dadd( 85.3491, -38.7008, 51.5459, 0.74 ) }
    dend_31 { pt3dadd( 86.0201, -38.2859, 52.0577, 0.74 ) }
    dend_31 { pt3dadd( 86.0696, -38.2526, 52.0941, 0.74 ) }
    dend_31 { pt3dadd( 92.7575, -39.4327, 59.5771, 0.74 ) }
    dend_31 { pt3dadd( 98.549, -40.2559, 67.8205, 0.74 ) }
    dend_31 { pt3dadd( 104.416, -42.6605, 75.6687, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 7/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 40.1963, -63.3824, 61.9623, 0.52 ) }
    dend_27 { pt3dadd( 41.0405, -64.4193, 62.4198, 0.52 ) }
    dend_27 { pt3dadd( 41.3815, -64.9288, 62.6381, 0.66 ) }
    dend_27 { pt3dadd( 41.8419, -65.8025, 63.0042, 0.52 ) }
    dend_27 { pt3dadd( 42.2718, -66.7866, 63.4166, 0.29 ) }
    dend_27 { pt3dadd( 42.682, -68.0584, 63.9202, 0.44 ) }
    dend_27 { pt3dadd( 42.6985, -68.1226, 63.9446, 0.44 ) }
    dend_27 { pt3dadd( 42.7731, -68.8846, 64.1456, 0.44 ) }
    dend_27 { pt3dadd( 42.7171, -69.6313, 64.3392, 0.74 ) }
    dend_27 { pt3dadd( 42.6701, -69.8619, 64.3978, 0.74 ) }
    dend_27 { pt3dadd( 42.4734, -70.6089, 64.5555, 0.74 ) }
    dend_27 { pt3dadd( 42.4549, -70.6763, 64.5621, 0.74 ) }
    dend_27 { pt3dadd( 42.3386, -71.6357, 64.698, 0.74 ) }
    dend_27 { pt3dadd( 42.4213, -72.3847, 65.021, 0.44 ) }
    dend_27 { pt3dadd( 42.4393, -72.4439, 65.0559, 0.44 ) }
    dend_27 { pt3dadd( 42.769, -73.3532, 65.6352, 0.37 ) }
    dend_27 { pt3dadd( 42.8089, -73.4436, 65.7, 0.37 ) }
    dend_27 { pt3dadd( 43.6328, -75.0698, 66.9871, 0.37 ) }
    dend_27 { pt3dadd( 44.9756, -77.2351, 68.9856, 0.44 ) }
    dend_27 { pt3dadd( 45.4318, -77.8766, 69.6544, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 27/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 40.1963, -63.3824, 61.9623, 0.66 ) }
    dend_26 { pt3dadd( 41.0015, -63.692, 62.0824, 0.66 ) }
    dend_26 { pt3dadd( 41.4566, -63.8356, 62.2136, 0.29 ) }
    dend_26 { pt3dadd( 42.0826, -64.0331, 62.394, 0.29 ) }
    dend_26 { pt3dadd( 42.1426, -64.0521, 62.4114, 0.29 ) }
    dend_26 { pt3dadd( 42.9349, -64.302, 62.6398, 0.29 ) }
    dend_26 { pt3dadd( 43.0432, -64.3362, 62.671, 0.29 ) }
    dend_26 { pt3dadd( 43.9405, -64.6884, 62.7869, 0.74 ) }
    dend_26 { pt3dadd( 51.6188, -66.4792, 64.9562, 0.74 ) }
    dend_26 { pt3dadd( 59.1183, -69.5629, 65.6514, 0.74 ) }
    dend_26 { pt3dadd( 66.256, -72.9863, 67.472, 0.74 ) }
    dend_26 { pt3dadd( 73.0753, -77.2979, 67.9078, 0.74 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 39/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -57.9124, -43.7328, -25.0884, 0.29 ) }
    dend_23 { pt3dadd( -59.7224, -44.477, -26.348, 0.29 ) }
    dend_23 { pt3dadd( -60.7895, -44.9556, -27.1053, 0.29 ) }
    dend_23 { pt3dadd( -61.8256, -45.4393, -27.8214, 0.29 ) }
    dend_23 { pt3dadd( -63.3863, -46.1779, -28.8869, 0.88 ) }
    dend_23 { pt3dadd( -64.0057, -46.4914, -29.3447, 1.18 ) }
    dend_23 { pt3dadd( -64.6849, -46.8468, -29.8696, 0.59 ) }
    dend_23 { pt3dadd( -65.5799, -47.4049, -30.6131, 0.52 ) }
    dend_23 { pt3dadd( -65.8115, -47.5723, -30.8659, 0.88 ) }
    dend_23 { pt3dadd( -65.8395, -47.5944, -30.9007, 0.88 ) }
    dend_23 { pt3dadd( -66.6178, -48.2041, -31.817, 0.37 ) }
    dend_23 { pt3dadd( -66.6451, -48.2258, -31.8526, 0.37 ) }
    dend_23 { pt3dadd( -67.8648, -49.2077, -33.4654, 0.37 ) }
    dend_23 { pt3dadd( -68.316, -49.5735, -33.964, 1.25 ) }
    dend_23 { pt3dadd( -68.3429, -49.5947, -33.9893, 1.25 ) }
    dend_23 { pt3dadd( -68.9069, -50.011, -34.4045, 1.25 ) }
    dend_23 { pt3dadd( -68.9499, -50.0398, -34.4277, 1.25 ) }
    dend_23 { pt3dadd( -69.413, -50.3594, -34.6197, 0.29 ) }
    dend_23 { pt3dadd( -70.4618, -51.0837, -34.8572, 0.15 ) }
    dend_23 { pt3dadd( -70.7855, -51.322, -34.945, 0.59 ) }
    dend_23 { pt3dadd( -71.0329, -51.5098, -35.0272, 0.59 ) }
    dend_23 { pt3dadd( -71.5595, -51.9171, -35.2319, 0.15 ) }
    dend_23 { pt3dadd( -72.2996, -52.4562, -35.5267, 0.15 ) }
    dend_23 { pt3dadd( -72.3373, -52.4818, -35.5462, 0.15 ) }
    dend_23 { pt3dadd( -73.0414, -52.9317, -35.9163, 0.88 ) }
    dend_23 { pt3dadd( -73.0796, -52.9557, -35.937, 0.88 ) }
    dend_23 { pt3dadd( -73.583, -53.2707, -36.2125, 0.88 ) }
    dend_23 { pt3dadd( -74.2882, -53.7073, -36.643, 0.22 ) }
    dend_23 { pt3dadd( -75.6094, -54.5474, -37.4868, 0.22 ) }
    dend_23 { pt3dadd( -76.3863, -55.1668, -38.0733, 0.22 ) }
    dend_23 { pt3dadd( -77.5965, -56.457, -39.2991, 0.22 ) }
    dend_23 { pt3dadd( -77.6196, -56.4881, -39.3296, 0.22 ) }
    dend_23 { pt3dadd( -78.1693, -57.8109, -40.653, 0.22 ) }
    dend_23 { pt3dadd( -78.2933, -58.5932, -41.307, 0.22 ) }
    dend_23 { pt3dadd( -78.1473, -60.5413, -42.5824, 0.22 ) }
    dend_23 { pt3dadd( -77.6007, -62.3035, -43.3866, 0.22 ) }
    dend_23 { pt3dadd( -77.5828, -62.3399, -43.3959, 0.22 ) }
    dend_23 { pt3dadd( -76.1851, -64.7597, -43.4531, 0.22 ) }
    dend_23 { pt3dadd( -73.8019, -68.2518, -42.6633, 0.22 ) }
    dend_23 { pt3dadd( -73.779, -68.2862, -42.6371, 0.22 ) }
    dend_23 { pt3dadd( -73.1015, -69.3109, -41.4931, 0.22 ) }
    dend_23 { pt3dadd( -73.0822, -69.3418, -41.45, 0.22 ) }
    dend_23 { pt3dadd( -72.537, -70.3072, -39.8861, 0.22 ) }
    dend_23 { pt3dadd( -72.529, -70.3274, -39.8414, 0.22 ) }
    dend_23 { pt3dadd( -72.3744, -72.2256, -35.6342, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -57.9124, -43.7328, -25.0884, 1.18 ) }
    dend_22 { pt3dadd( -60.0553, -45.6771, -24.5659, 1.18 ) }
    dend_22 { pt3dadd( -61.6871, -47.0537, -24.6284, 1.18 ) }
    dend_22 { pt3dadd( -62.7725, -47.9442, -24.8173, 0.52 ) }
    dend_22 { pt3dadd( -64.0481, -48.9791, -25.1316, 0.52 ) }
    dend_22 { pt3dadd( -64.0993, -49.0206, -25.146, 0.52 ) }
    dend_22 { pt3dadd( -65.0966, -49.8361, -25.5641, 0.52 ) }
    dend_22 { pt3dadd( -66.335, -50.8305, -26.1104, 0.52 ) }
    dend_22 { pt3dadd( -66.4258, -50.9026, -26.1814, 0.52 ) }
    dend_22 { pt3dadd( -67.1177, -51.4351, -26.955, 0.37 ) }
    dend_22 { pt3dadd( -67.1545, -51.4671, -27.0028, 0.37 ) }
    dend_22 { pt3dadd( -68.2017, -52.4147, -28.2497, 1.11 ) }
    dend_22 { pt3dadd( -68.7155, -52.9128, -28.814, 1.11 ) }
    dend_22 { pt3dadd( -68.7617, -52.9572, -28.8577, 1.11 ) }
    dend_22 { pt3dadd( -69.994, -54.1107, -29.9811, 0.22 ) }
    dend_22 { pt3dadd( -70.7973, -54.8307, -30.6615, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_22 { pt3dadd( -71.4531, -55.4381, -31.15, 0.29 ) }
    dend_22 { pt3dadd( -71.5214, -55.503, -31.1905, 0.29 ) }
    dend_22 { pt3dadd( -71.8827, -55.8412, -31.4572, 0.81 ) }
    dend_22 { pt3dadd( -71.9306, -55.8856, -31.499, 0.81 ) }
    dend_22 { pt3dadd( -72.4379, -56.3637, -31.9479, 0.81 ) }
    dend_22 { pt3dadd( -73.3995, -57.2993, -32.8911, 0.37 ) }
    dend_22 { pt3dadd( -73.4378, -57.3387, -32.9308, 0.37 ) }
    dend_22 { pt3dadd( -75.0376, -59.0825, -34.5503, 0.15 ) }
    dend_22 { pt3dadd( -75.6691, -59.9119, -35.2023, 0.96 ) }
    dend_22 { pt3dadd( -76.1692, -60.6676, -35.7109, 1.4 ) }
    dend_22 { pt3dadd( -76.5828, -61.5246, -36.1704, 0.52 ) }
    dend_22 { pt3dadd( -76.595, -61.5776, -36.186, 0.52 ) }
    dend_22 { pt3dadd( -76.6572, -62.6212, -36.3528, 0.29 ) }
    dend_22 { pt3dadd( -76.4225, -64.4073, -36.3148, 0.29 ) }
    dend_22 { pt3dadd( -76.4077, -64.4806, -36.3082, 0.29 ) }
    dend_22 { pt3dadd( -76.0529, -65.9282, -36.1113, 0.29 ) }
    dend_22 { pt3dadd( -75.5368, -68.2236, -35.7074, 0.29 ) }
    dend_22 { pt3dadd( -75.5112, -68.3594, -35.6808, 0.29 ) }
    dend_22 { pt3dadd( -75.2852, -70.1859, -35.2328, 0.29 ) }
    dend_22 { pt3dadd( -75.2725, -70.3511, -35.1851, 0.29 ) }
    dend_22 { pt3dadd( -75.24, -71.4184, -34.8316, 0.15 ) }
    dend_22 { pt3dadd( -75.3556, -72.9172, -34.1789, 0.15 ) }
    dend_22 { pt3dadd( -75.3693, -72.9746, -34.1494, 0.15 ) }
    dend_22 { pt3dadd( -75.7359, -74.1274, -33.5775, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.96935, -21.8605, -2.00035, 0.88 ) }
    dend_16 { pt3dadd( -8.18093, -22.276, -3.74964, 0.88 ) }
    dend_16 { pt3dadd( -8.89324, -22.4374, -4.28007, 0.88 ) }
    dend_16 { pt3dadd( -9.68398, -22.6166, -4.86891, 0.88 ) }
    dend_16 { pt3dadd( -9.71611, -22.6239, -4.89283, 0.88 ) }
    dend_16 { pt3dadd( -10.2624, -22.7477, -5.2996, 0.88 ) }
    dend_16 { pt3dadd( -11.6603, -23.0644, -6.34056, 1.4 ) }
    dend_16 { pt3dadd( -11.9491, -23.1838, -6.49738, 1.4 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.96935, -21.8605, -2.00035, 0.81 ) }
    dend_3 { pt3dadd( -6.42178, -24.4633, -0.772693, 0.81 ) }
    dend_3 { pt3dadd( -6.74693, -26.3339, 0.109607, 0.81 ) }
    dend_3 { pt3dadd( -6.98937, -27.7287, 0.76748, 0.81 ) }
    dend_3 { pt3dadd( -7.20388, -28.9627, 1.34953, 0.81 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 37/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.96935, -21.8605, -2.00035, 2.5 ) }
    dend_2 { pt3dadd( -5.92326, -22.5396, -1.76665, 2.5 ) }
    dend_2 { pt3dadd( -5.79611, -24.2998, -1.28605, 1.03 ) }
    dend_2 { pt3dadd( -5.62884, -25.7283, -1.01806, 0.59 ) }
    dend_2 { pt3dadd( -5.40842, -26.8947, -0.86756, 0.59 ) }
    dend_2 { pt3dadd( -5.38622, -26.9635, -0.86681, 0.59 ) }
    dend_2 { pt3dadd( -5.09325, -27.7369, -0.898432, 0.59 ) }
    dend_2 { pt3dadd( -4.4329, -29.0397, -1.10723, 0.59 ) }
    dend_2 { pt3dadd( -3.24321, -30.8862, -1.60793, 1.03 ) }
    dend_2 { pt3dadd( -2.1368, -32.3927, -2.10007, 0.81 ) }
    dend_2 { pt3dadd( -0.0258624, -35.0197, -2.89905, 0.81 ) }
    dend_2 { pt3dadd( 0.0137466, -35.0669, -2.91218, 0.81 ) }
    dend_2 { pt3dadd( 2.22896, -37.6075, -3.5768, 0.81 ) }
    dend_2 { pt3dadd( 4.50815, -40.3022, -4.18527, 0.81 ) }
    dend_2 { pt3dadd( 4.55102, -40.3608, -4.19472, 0.81 ) }
    dend_2 { pt3dadd( 5.53497, -42.1341, -4.38662, 0.52 ) }
    dend_2 { pt3dadd( 6.04277, -43.3906, -4.44744, 0.52 ) }
    dend_2 { pt3dadd( 6.17894, -43.848, -4.44881, 0.74 ) }
    dend_2 { pt3dadd( 6.62692, -46.4444, -4.327, 1.11 ) }
    dend_2 { pt3dadd( 6.94117, -49.2883, -4.17591, 1.11 ) }
    dend_2 { pt3dadd( 7.14751, -51.2135, -4.10901, 0.81 ) }
    dend_2 { pt3dadd( 7.16559, -51.3667, -4.10616, 0.81 ) }
    dend_2 { pt3dadd( 7.55777, -53.6739, -3.95655, 0.59 ) }
    dend_2 { pt3dadd( 7.57297, -53.7336, -3.95025, 0.59 ) }
    dend_2 { pt3dadd( 8.14598, -55.4176, -3.66062, 0.59 ) }
    dend_2 { pt3dadd( 8.16922, -55.4739, -3.64744, 0.59 ) }
    dend_2 { pt3dadd( 8.83976, -57.0149, -3.24448, 0.59 ) }
    dend_2 { pt3dadd( 9.67013, -58.9755, -2.77779, 0.44 ) }
    dend_2 { pt3dadd( 10.2273, -60.3399, -2.52654, 0.44 ) }
    dend_2 { pt3dadd( 10.4144, -60.8779, -2.44413, 1.03 ) }
    dend_2 { pt3dadd( 10.4343, -60.9469, -2.43547, 1.03 ) }
    dend_2 { pt3dadd( 10.7159, -62.0435, -2.3577, 1.03 ) }
    dend_2 { pt3dadd( 10.7338, -62.1238, -2.36278, 1.03 ) }
    dend_2 { pt3dadd( 11.0007, -63.027, -2.53394, 0.52 ) }
    dend_2 { pt3dadd( 11.5155, -64.189, -2.79397, 0.52 ) }
    dend_2 { pt3dadd( 11.6312, -64.3947, -2.84036, 0.52 ) }
    dend_2 { pt3dadd( 12.2994, -65.4354, -3.06548, 0.74 ) }
    dend_2 { pt3dadd( 13.0182, -66.5146, -3.26912, 0.88 ) }
    dend_2 { pt3dadd( 13.6966, -67.5554, -3.38952, 0.66 ) }
    dend_2 { pt3dadd( 14.2605, -68.4734, -3.42753, 0.44 ) }
    dend_2 { pt3dadd( 14.8514, -69.5997, -3.41441, 0.44 ) }
    dend_2 { pt3dadd( 14.8786, -69.6668, -3.41119, 0.44 ) }
    dend_2 { pt3dadd( 15.4215, -71.3871, -3.26795, 0.44 ) }
    dend_2 { pt3dadd( 15.6584, -72.3509, -3.17155, 0.88 ) }
    dend_2 { pt3dadd( 15.8788, -73.461, -3.08041, 1.18 ) }
    dend_2 { pt3dadd( 16.2547, -75.2979, -2.92014, 0.88 ) }
    dend_2 { pt3dadd( 16.5402, -76.538, -2.79204, 1.18 ) }
    dend_2 { pt3dadd( 16.5604, -76.6071, -2.78489, 1.18 ) }
    dend_2 { pt3dadd( 17.2846, -78.6409, -2.57633, 0.66 ) }
    dend_2 { pt3dadd( 17.3177, -78.7166, -2.56949, 0.66 ) }
    dend_2 { pt3dadd( 18.4321, -80.644, -2.36578, 0.66 ) }
    dend_2 { pt3dadd( 18.4748, -80.703, -2.35832, 0.66 ) }
    dend_2 { pt3dadd( 19.6841, -82.1165, -2.18443, 0.66 ) }
    dend_2 { pt3dadd( 19.7326, -82.1716, -2.17907, 0.66 ) }
    dend_2 { pt3dadd( 20.4534, -82.9734, -2.14769, 0.29 ) }
    dend_2 { pt3dadd( 21.1396, -83.8566, -2.22238, 0.29 ) }
    dend_2 { pt3dadd( 21.1807, -83.9159, -2.23435, 0.29 ) }
    dend_2 { pt3dadd( 21.8055, -84.919, -2.46469, 0.81 ) }
    dend_2 { pt3dadd( 22.5389, -86.1388, -2.77892, 1.18 ) }
    dend_2 { pt3dadd( 23.1616, -87.1677, -3.05061, 0.88 ) }
    dend_2 { pt3dadd( 23.9343, -88.4537, -3.3899, 0.29 ) }
    dend_2 { pt3dadd( 24.4355, -89.2703, -3.60235, 0.29 ) }
    dend_2 { pt3dadd( 24.6178, -89.5447, -3.67081, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 25.6725, -90.9806, -3.95291, 0.66 ) }
    dend_2 { pt3dadd( 26.2538, -91.6992, -4.03886, 1.03 ) }
    dend_2 { pt3dadd( 26.8741, -92.4667, -4.04143, 0.37 ) }
    dend_2 { pt3dadd( 26.9191, -92.5244, -4.03598, 0.37 ) }
    dend_2 { pt3dadd( 27.575, -93.469, -3.87155, 0.37 ) }
    dend_2 { pt3dadd( 28.1256, -94.3222, -3.59804, 0.81 ) }
    dend_2 { pt3dadd( 28.5184, -94.9895, -3.31053, 0.81 ) }
    dend_2 { pt3dadd( 29.1538, -96.012, -2.81445, 0.52 ) }
    dend_2 { pt3dadd( 29.1904, -96.0685, -2.78516, 0.52 ) }
    dend_2 { pt3dadd( 30.1891, -97.4555, -2.05007, 0.88 ) }
    dend_2 { pt3dadd( 31.2927, -98.835, -1.28074, 0.52 ) }
    dend_2 { pt3dadd( 31.6498, -99.1989, -1.03942, 0.52 ) }
    dend_2 { pt3dadd( 32.3836, -99.658, -0.565963, 0.74 ) }
    dend_2 { pt3dadd( 32.5793, -99.7253, -0.450304, 0.74 ) }
    dend_2 { pt3dadd( 33.4197, -99.8183, 0.093612, 0.52 ) }
    dend_2 { pt3dadd( 33.493, -99.8143, 0.139416, 0.52 ) }
    dend_2 { pt3dadd( 35.2111, -99.5052, 1.193, 0.29 ) }
    dend_2 { pt3dadd( 37.1213, -99.0272, 2.46674, 0.22 ) }
    dend_2 { pt3dadd( 37.4328, -98.9271, 2.69513, 0.37 ) }
    dend_2 { pt3dadd( 39.1139, -98.3171, 3.9849, 0.81 ) }
    dend_2 { pt3dadd( 42.6129, -108.039, 3.61614, 0.81 ) }
    dend_2 { pt3dadd( 45.947, -117.818, 3.90871, 0.81 ) }
    dend_2 { pt3dadd( 47.6263, -127.833, 5.71769, 0.81 ) }
    dend_2 { pt3dadd( 50.4748, -137.679, 7.01145, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 24/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 30.1842, 79.9618, 13.8999, 0.29 ) }
    dend_79 { pt3dadd( 28.8296, 84.6105, 19.9324, 0.29 ) }
    dend_79 { pt3dadd( 26.4927, 88.1101, 26.5013, 0.29 ) }
    dend_79 { pt3dadd( 24.6977, 91.6918, 33.1903, 0.29 ) }
    dend_79 { pt3dadd( 21.5629, 95.7785, 39.008, 0.29 ) }
    dend_79 { pt3dadd( 18.8721, 100.89, 44.106, 0.29 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 30/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 30.1842, 79.9618, 13.8999, 0.74 ) }
    dend_78 { pt3dadd( 30.4564, 88.6231, 15.4617, 0.29 ) }
    dend_78 { pt3dadd( 30.9708, 96.9747, 18.2991, 0.29 ) }
    dend_78 { pt3dadd( 30.8263, 105.541, 20.3726, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 34/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 68.9192, 67.7245, 13.0317, 0.37 ) }
    dend_76 { pt3dadd( 68.9705, 67.8062, 13.0582, 0.37 ) }
    dend_76 { pt3dadd( 69.4995, 68.6206, 13.2288, 0.37 ) }
    dend_76 { pt3dadd( 69.5705, 68.7208, 13.2446, 0.37 ) }
    dend_76 { pt3dadd( 70.039, 69.365, 13.4308, 0.59 ) }
    dend_76 { pt3dadd( 70.574, 70.09, 13.67, 0.59 ) }
    dend_76 { pt3dadd( 70.6929, 70.2514, 13.7241, 0.59 ) }
    dend_76 { pt3dadd( 71.5216, 71.3373, 14.0905, 0.29 ) }
    dend_76 { pt3dadd( 71.862, 71.73, 14.2193, 0.29 ) }
    dend_76 { pt3dadd( 73.2479, 73.2312, 14.6482, 0.15 ) }
    dend_76 { pt3dadd( 73.3393, 73.3244, 14.6792, 0.15 ) }
    dend_76 { pt3dadd( 73.7687, 73.7423, 14.845, 0.15 ) }
    dend_76 { pt3dadd( 74.1784, 74.1392, 15.0123, 0.15 ) }
    dend_76 { pt3dadd( 75.1009, 75.0276, 15.3768, 0.15 ) }
    dend_76 { pt3dadd( 75.5327, 75.4514, 15.5184, 0.44 ) }
    dend_76 { pt3dadd( 76.5826, 76.455, 15.7855, 0.29 ) }
    dend_76 { pt3dadd( 77.3378, 77.1905, 15.9939, 0.29 ) }
    dend_76 { pt3dadd( 77.7004, 77.5552, 16.1069, 0.29 ) }
    dend_76 { pt3dadd( 78.5193, 78.4687, 16.4022, 0.29 ) }
    dend_76 { pt3dadd( 78.9672, 79.0689, 16.588, 0.74 ) }
    dend_76 { pt3dadd( 86.5824, 88.8586, 18.4185, 0.74 ) }
    dend_76 { pt3dadd( 94.5395, 98.5549, 18.5437, 0.74 ) }
    dend_76 { pt3dadd( 101.893, 108.665, 19.0048, 0.74 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 57/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 68.9192, 67.7245, 13.0317, 0.29 ) }
    dend_75 { pt3dadd( 68.9903, 67.6746, 13.0184, 0.29 ) }
    dend_75 { pt3dadd( 69.0455, 67.6469, 13.0085, 0.29 ) }
    dend_75 { pt3dadd( 69.5144, 67.4347, 12.925, 0.29 ) }
    dend_75 { pt3dadd( 69.6433, 67.3839, 12.9023, 0.29 ) }
    dend_75 { pt3dadd( 70.0299, 67.2427, 12.8347, 0.29 ) }
    dend_75 { pt3dadd( 70.2063, 67.1783, 12.8038, 0.29 ) }
    dend_75 { pt3dadd( 71.281, 66.8075, 12.6166, 0.29 ) }
    dend_75 { pt3dadd( 71.3401, 66.7887, 12.6063, 0.29 ) }
    dend_75 { pt3dadd( 71.9099, 66.639, 12.5087, 0.88 ) }
    dend_75 { pt3dadd( 71.9791, 66.6229, 12.497, 0.88 ) }
    dend_75 { pt3dadd( 80.6866, 64.494, 11.6832, 0.88 ) }
    dend_75 { pt3dadd( 89.1167, 61.504, 12.4503, 0.88 ) }
    dend_75 { pt3dadd( 97.6877, 59.3279, 14.1324, 0.88 ) }
    dend_75 { pt3dadd( 106.44, 57.4681, 15.1782, 0.88 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 35.3207, 14.594, -53.3029, 0.74 ) }
    dend_65 { pt3dadd( 35.6182, 17.2893, -55.756, 0.74 ) }
    dend_65 { pt3dadd( 35.834, 18.2981, -56.9245, 0.74 ) }
    dend_65 { pt3dadd( 35.8477, 18.3515, -56.9902, 0.74 ) }
    dend_65 { pt3dadd( 36.0452, 18.9359, -57.7912, 0.74 ) }
    dend_65 { pt3dadd( 36.3098, 19.6422, -58.7989, 0.74 ) }
    dend_65 { pt3dadd( 36.8447, 20.9304, -60.7681, 0.59 ) }
    dend_65 { pt3dadd( 37.8258, 22.9067, -63.9405, 0.59 ) }
    dend_65 { pt3dadd( 37.8925, 23.0267, -64.1506, 0.59 ) }
    dend_65 { pt3dadd( 38.712, 24.4317, -66.6423, 0.59 ) }
    dend_65 { pt3dadd( 38.7364, 24.4712, -66.7151, 0.59 ) }
    dend_65 { pt3dadd( 39.6161, 25.8381, -69.3345, 0.29 ) }
    dend_65 { pt3dadd( 39.6423, 25.8779, -69.4066, 0.29 ) }
    dend_65 { pt3dadd( 39.869, 26.2916, -70.0502, 0.29 ) }
    dend_65 { pt3dadd( 40.1884, 27.1183, -71.2147, 0.29 ) }
    dend_65 { pt3dadd( 40.1907, 27.1676, -71.2691, 0.29 ) }
    dend_65 { pt3dadd( 39.9682, 27.5721, -71.7481, 0.29 ) }
    dend_65 { pt3dadd( 39.8077, 27.71, -71.9201, 0.29 ) }
    dend_65 { pt3dadd( 39.3165, 28.1295, -72.4491, 0.29 ) }
    dend_65 { pt3dadd( 38.7444, 28.5888, -73.0505, 0.74 ) }
    dend_65 { pt3dadd( 38.2603, 29.132, -73.9931, 0.74 ) }
    dend_65 { pt3dadd( 37.5202, 30.49, -76.4003, 0.37 ) }
    dend_65 { pt3dadd( 37.5088, 30.5278, -76.4775, 0.37 ) }
    dend_65 { pt3dadd( 37.4166, 31.0082, -77.5169, 0.37 ) }
    dend_65 { pt3dadd( 37.4087, 31.0609, -77.6375, 0.37 ) }
    dend_65 { pt3dadd( 37.1544, 33.2078, -82.3503, 0.37 ) }
    dend_65 { pt3dadd( 37.1212, 33.5855, -83.1649, 1.03 ) }
    dend_65 { pt3dadd( 36.8034, 35.8273, -87.7288, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_65 { pt3dadd( 36.7943, 35.8662, -87.8058, 1.03 ) }
    dend_65 { pt3dadd( 36.3915, 37.2396, -90.3638, 0.29 ) }
    dend_65 { pt3dadd( 36.2152, 37.7791, -91.2518, 0.29 ) }
    dend_65 { pt3dadd( 36.174, 37.9009, -91.41, 0.29 ) }
    dend_65 { pt3dadd( 35.8737, 38.9588, -92.6107, 0.29 ) }
    dend_65 { pt3dadd( 35.864, 39.0202, -92.6694, 0.29 ) }
    dend_65 { pt3dadd( 35.7304, 41.0686, -94.6355, 0.29 ) }
    dend_65 { pt3dadd( 35.7327, 41.1303, -94.6944, 0.29 ) }
    dend_65 { pt3dadd( 35.8611, 42.6236, -96.2691, 1.33 ) }
    dend_65 { pt3dadd( 35.9306, 43.1668, -96.8621, 1.33 ) }
    dend_65 { pt3dadd( 36.2936, 45.2188, -99.2032, 0.29 ) }
    dend_65 { pt3dadd( 36.3927, 45.9758, -100.081, 0.29 ) }
    dend_65 { pt3dadd( 36.3905, 46.0635, -100.177, 0.29 ) }
    dend_65 { pt3dadd( 36.2802, 46.9369, -101.069, 1.03 ) }
    dend_65 { pt3dadd( 36.1963, 47.2523, -101.365, 1.03 ) }
    dend_65 { pt3dadd( 36.1796, 47.3062, -101.43, 1.03 ) }
    dend_65 { pt3dadd( 35.9239, 48.3631, -102.62, 0.22 ) }
    dend_65 { pt3dadd( 35.6484, 49.5782, -104.057, 0.22 ) }
    dend_65 { pt3dadd( 35.6351, 49.6316, -104.123, 0.22 ) }
    dend_65 { pt3dadd( 35.3296, 50.8526, -105.657, 1.18 ) }
    dend_65 { pt3dadd( 34.6358, 53.8786, -109.34, 0.22 ) }
    dend_65 { pt3dadd( 34.434, 55.1287, -110.884, 0.22 ) }
    dend_65 { pt3dadd( 34.3025, 56.7102, -112.908, 1.18 ) }
    dend_65 { pt3dadd( 34.3228, 58.4525, -115.509, 0.15 ) }
    dend_65 { pt3dadd( 34.3302, 58.596, -115.739, 0.15 ) }
    dend_65 { pt3dadd( 34.4555, 59.4752, -117.115, 0.15 ) }
    dend_65 { pt3dadd( 34.7827, 60.9736, -119.328, 0.15 ) }
    dend_65 { pt3dadd( 35.1523, 62.3701, -121.38, 1.62 ) }
    dend_65 { pt3dadd( 36.313, 65.8204, -126.162, 0.22 ) }
    dend_65 { pt3dadd( 36.3324, 65.8696, -126.23, 0.22 ) }
    dend_65 { pt3dadd( 37.0256, 67.6312, -128.715, 0.22 ) }
    dend_65 { pt3dadd( 37.3611, 68.4952, -129.968, 1.25 ) }
    dend_65 { pt3dadd( 37.4639, 68.8199, -130.357, 1.25 ) }
    dend_65 { pt3dadd( 37.4879, 68.8925, -130.417, 1.25 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 34/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 35.3207, 14.594, -53.3029, 0.96 ) }
    dend_64 { pt3dadd( 35.4311, 14.6053, -53.3515, 0.96 ) }
    dend_64 { pt3dadd( 36.3156, 14.693, -53.7516, 0.74 ) }
    dend_64 { pt3dadd( 37.4597, 14.7925, -54.1975, 0.74 ) }
    dend_64 { pt3dadd( 38.7204, 14.9111, -54.726, 0.74 ) }
    dend_64 { pt3dadd( 38.7827, 14.9173, -54.7586, 0.74 ) }
    dend_64 { pt3dadd( 40.6416, 15.1359, -55.9587, 0.74 ) }
    dend_64 { pt3dadd( 40.6813, 15.1425, -55.9881, 0.74 ) }
    dend_64 { pt3dadd( 41.903, 15.4056, -57.0682, 0.74 ) }
    dend_64 { pt3dadd( 42.8762, 15.6701, -57.9836, 0.74 ) }
    dend_64 { pt3dadd( 43.9194, 16.0586, -59.0822, 1.62 ) }
    dend_64 { pt3dadd( 44.7799, 16.4249, -60.0928, 0.66 ) }
    dend_64 { pt3dadd( 45.4537, 16.7364, -60.9243, 0.52 ) }
    dend_64 { pt3dadd( 46.3999, 17.1809, -62.1043, 1.25 ) }
    dend_64 { pt3dadd( 47.0647, 17.479, -62.9272, 1.25 ) }
    dend_64 { pt3dadd( 49.054, 18.3065, -65.1597, 0.59 ) }
    dend_64 { pt3dadd( 50.4256, 18.8158, -66.6836, 0.96 ) }
    dend_64 { pt3dadd( 51.9324, 19.3179, -68.3908, 0.96 ) }
    dend_64 { pt3dadd( 51.9655, 19.3278, -68.4267, 0.96 ) }
    dend_64 { pt3dadd( 54.3768, 20.0065, -70.8444, 0.96 ) }
    dend_64 { pt3dadd( 55.0771, 20.177, -71.5097, 1.47 ) }
    dend_64 { pt3dadd( 57.2584, 20.64, -73.3575, 0.74 ) }
    dend_64 { pt3dadd( 57.3035, 20.6508, -73.3905, 0.74 ) }
    dend_64 { pt3dadd( 59.6169, 21.2568, -74.9517, 0.74 ) }
    dend_64 { pt3dadd( 60.3737, 21.4766, -75.4264, 1.47 ) }
    dend_64 { pt3dadd( 61.3898, 21.8148, -75.9603, 0.59 ) }
    dend_64 { pt3dadd( 61.5715, 21.8737, -76.0527, 0.59 ) }
    dend_64 { pt3dadd( 62.849, 22.2767, -76.5915, 0.59 ) }
    dend_64 { pt3dadd( 62.9511, 22.3058, -76.6425, 0.59 ) }
    dend_64 { pt3dadd( 64.0169, 22.5399, -77.3268, 2.14 ) }
    dend_64 { pt3dadd( 64.2833, 22.5879, -77.4985, 2.14 ) }
    dend_64 { pt3dadd( 65.63, 22.7458, -78.3352, 0.66 ) }
    dend_64 { pt3dadd( 66.0388, 22.7771, -78.5948, 0.66 ) }
    dend_64 { pt3dadd( 66.0785, 22.7795, -78.625, 0.66 ) }
    dend_64 { pt3dadd( 67.5195, 22.935, -80.0087, 0.66 ) }
    dend_64 { pt3dadd( 67.5527, 22.9412, -80.0453, 0.66 ) }
    dend_64 { pt3dadd( 68.6866, 23.2504, -81.4738, 0.66 ) }
    dend_64 { pt3dadd( 68.8247, 23.3074, -81.6815, 1.18 ) }
    dend_64 { pt3dadd( 69.7153, 23.7507, -83.2095, 0.81 ) }
    dend_64 { pt3dadd( 70.6191, 24.2325, -84.8214, 0.44 ) }
    dend_64 { pt3dadd( 70.893, 24.4011, -85.3717, 0.44 ) }
    dend_64 { pt3dadd( 70.9149, 24.4136, -85.4146, 0.44 ) }
    dend_64 { pt3dadd( 71.6603, 24.8218, -86.8549, 0.44 ) }
    dend_64 { pt3dadd( 71.7008, 24.8365, -86.9171, 0.44 ) }
    dend_64 { pt3dadd( 72.3716, 24.9533, -87.7186, 0.44 ) }
    dend_64 { pt3dadd( 72.4054, 24.9592, -87.7547, 0.44 ) }
    dend_64 { pt3dadd( 73.1561, 25.0895, -88.5673, 1.4 ) }
    dend_64 { pt3dadd( 73.1961, 25.0986, -88.6068, 1.4 ) }
    dend_64 { pt3dadd( 73.5643, 25.1922, -88.9518, 1.4 ) }
    dend_64 { pt3dadd( 75.7897, 25.7447, -91.2048, 0.52 ) }
    dend_64 { pt3dadd( 77.2303, 26.1147, -92.7418, 0.37 ) }
    dend_64 { pt3dadd( 77.2651, 26.124, -92.7762, 0.37 ) }
    dend_64 { pt3dadd( 79.1547, 26.6652, -94.5359, 0.37 ) }
    dend_64 { pt3dadd( 79.1954, 26.6772, -94.5738, 0.37 ) }
    dend_64 { pt3dadd( 81.4271, 27.349, -96.6776, 0.37 ) }
    dend_64 { pt3dadd( 81.4683, 27.3609, -96.715, 0.37 ) }
    dend_64 { pt3dadd( 82.9894, 27.7793, -98.0495, 0.37 ) }
    dend_64 { pt3dadd( 83.0254, 27.789, -98.0825, 0.37 ) }
    dend_64 { pt3dadd( 84.2694, 28.1164, -99.2643, 0.29 ) }
    dend_64 { pt3dadd( 85.7366, 28.515, -100.597, 0.29 ) }
    dend_64 { pt3dadd( 85.774, 28.5258, -100.628, 0.29 ) }
    dend_64 { pt3dadd( 88.3846, 29.2648, -102.701, 0.29 ) }
    dend_64 { pt3dadd( 89.6255, 29.6071, -103.726, 1.62 ) }
    dend_64 { pt3dadd( 89.664, 29.6176, -103.756, 1.62 ) }
    dend_64 { pt3dadd( 90.3979, 29.8149, -104.232, 1.62 ) }
    dend_64 { pt3dadd( 91.095, 30.0205, -104.641, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_64 { pt3dadd( 92.135, 30.331, -105.287, 0.29 ) }
    dend_64 { pt3dadd( 93.5988, 30.7368, -106.162, 0.29 ) }
    dend_64 { pt3dadd( 93.6414, 30.747, -106.186, 0.29 ) }
    dend_64 { pt3dadd( 94.9496, 31.0165, -107.044, 0.29 ) }
    dend_64 { pt3dadd( 95.2939, 31.0771, -107.299, 1.11 ) }
    dend_64 { pt3dadd( 96.6685, 31.3046, -108.365, 0.29 ) }
    dend_64 { pt3dadd( 97.6533, 31.4497, -109.137, 0.29 ) }
    dend_64 { pt3dadd( 98.8837, 31.656, -109.999, 1.47 ) }
    dend_64 { pt3dadd( 100.057, 31.8723, -110.815, 0.15 ) }
    dend_64 { pt3dadd( 100.098, 31.8791, -110.842, 0.15 ) }
    dend_64 { pt3dadd( 100.852, 31.9907, -111.265, 0.15 ) }
    dend_64 { pt3dadd( 100.904, 32.0001, -111.287, 0.15 ) }
    dend_64 { pt3dadd( 101.938, 32.1934, -111.694, 0.15 ) }
    dend_64 { pt3dadd( 102.038, 32.2067, -111.73, 0.15 ) }
    dend_64 { pt3dadd( 103.123, 32.3092, -112.123, 0.15 ) }
    dend_64 { pt3dadd( 104.011, 32.3687, -112.499, 1.11 ) }
    dend_64 { pt3dadd( 104.349, 32.3778, -112.665, 1.11 ) }
    dend_64 { pt3dadd( 104.39, 32.3805, -112.694, 1.11 ) }
    dend_64 { pt3dadd( 105.633, 32.5009, -113.78, 0.37 ) }
    dend_64 { pt3dadd( 105.931, 32.5536, -114.078, 0.59 ) }
    dend_64 { pt3dadd( 106.137, 32.6199, -114.309, 0.59 ) }
    dend_64 { pt3dadd( 106.184, 32.638, -114.358, 0.59 ) }
    dend_64 { pt3dadd( 107.467, 33.1508, -115.69, 0.29 ) }
    dend_64 { pt3dadd( 107.699, 33.2342, -115.882, 0.22 ) }
    dend_64 { pt3dadd( 107.738, 33.2483, -115.909, 0.22 ) }
    dend_64 { pt3dadd( 108.356, 33.4515, -116.285, 0.22 ) }
    dend_64 { pt3dadd( 108.66, 33.5428, -116.461, 0.22 ) }
    dend_64 { pt3dadd( 109.559, 33.8011, -116.94, 1.03 ) }
    dend_64 { pt3dadd( 111.295, 34.2759, -117.741, 0.22 ) }
    dend_64 { pt3dadd( 111.851, 34.425, -118.007, 0.22 ) }
    dend_64 { pt3dadd( 111.895, 34.4362, -118.028, 0.22 ) }
    dend_64 { pt3dadd( 112.96, 34.6943, -118.583, 1.11 ) }
    dend_64 { pt3dadd( 113.321, 34.7857, -118.774, 1.11 ) }
    dend_64 { pt3dadd( 113.391, 34.8055, -118.809, 1.11 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 78.7825, 17.6411, -39.5839, 0.44 ) }
    dend_62 { pt3dadd( 79.439, 17.7225, -39.6083, 0.44 ) }
    dend_62 { pt3dadd( 79.9793, 17.8141, -39.6822, 0.44 ) }
    dend_62 { pt3dadd( 80.2484, 17.8637, -39.7294, 0.44 ) }
    dend_62 { pt3dadd( 81.7318, 18.2455, -40.5189, 0.44 ) }
    dend_62 { pt3dadd( 81.7842, 18.262, -40.554, 0.44 ) }
    dend_62 { pt3dadd( 82.3404, 18.4535, -40.9612, 0.81 ) }
    dend_62 { pt3dadd( 83.2385, 18.7779, -41.6617, 0.81 ) }
    dend_62 { pt3dadd( 83.2885, 18.8008, -41.712, 0.81 ) }
    dend_62 { pt3dadd( 84.9782, 19.7128, -43.547, 0.22 ) }
    dend_62 { pt3dadd( 85.2969, 19.9154, -43.9255, 0.22 ) }
    dend_62 { pt3dadd( 85.3517, 19.9537, -43.9983, 0.22 ) }
    dend_62 { pt3dadd( 85.5777, 20.135, -44.3155, 0.44 ) }
    dend_62 { pt3dadd( 86.3593, 20.8095, -45.3962, 0.29 ) }
    dend_62 { pt3dadd( 87.2087, 21.5876, -46.5338, 0.29 ) }
    dend_62 { pt3dadd( 88.5209, 22.9203, -48.3822, 0.96 ) }
    dend_62 { pt3dadd( 89.5099, 23.9973, -49.9207, 0.44 ) }
    dend_62 { pt3dadd( 89.9379, 24.4399, -50.5497, 0.44 ) }
    dend_62 { pt3dadd( 90.109, 24.6127, -50.7922, 1.03 ) }
    dend_62 { pt3dadd( 90.3449, 24.8341, -51.071, 1.03 ) }
    dend_62 { pt3dadd( 91.5003, 25.9361, -52.322, 0.29 ) }
    dend_62 { pt3dadd( 91.5661, 25.9815, -52.3662, 0.29 ) }
    dend_62 { pt3dadd( 93.211, 26.8018, -53.1294, 0.29 ) }
    dend_62 { pt3dadd( 93.3317, 26.8473, -53.1818, 0.29 ) }
    dend_62 { pt3dadd( 94.6651, 27.259, -53.6834, 0.29 ) }
    dend_62 { pt3dadd( 94.7624, 27.2869, -53.7116, 0.29 ) }
    dend_62 { pt3dadd( 96.4646, 27.7819, -54.1664, 0.29 ) }
    dend_62 { pt3dadd( 96.5299, 27.8045, -54.1939, 0.29 ) }
    dend_62 { pt3dadd( 97.1563, 28.0326, -54.544, 0.29 ) }
    dend_62 { pt3dadd( 97.2806, 28.0763, -54.6163, 0.29 ) }
    dend_62 { pt3dadd( 98.1274, 28.3404, -55.054, 1.03 ) }
    dend_62 { pt3dadd( 99.541, 28.7072, -55.5825, 0.29 ) }
    dend_62 { pt3dadd( 99.7386, 28.7441, -55.6214, 0.29 ) }
    dend_62 { pt3dadd( 101.705, 29.0271, -56.0083, 0.29 ) }
    dend_62 { pt3dadd( 101.768, 29.0343, -56.0209, 0.29 ) }
    dend_62 { pt3dadd( 103.051, 29.1255, -56.21, 0.81 ) }
    dend_62 { pt3dadd( 103.714, 29.1582, -56.2658, 0.22 ) }
    dend_62 { pt3dadd( 105.383, 29.2543, -56.2768, 0.22 ) }
    dend_62 { pt3dadd( 106.321, 29.3472, -56.3437, 1.03 ) }
    dend_62 { pt3dadd( 106.44, 29.3655, -56.3612, 1.03 ) }
    dend_62 { pt3dadd( 107.457, 29.5797, -56.5787, 0.15 ) }
    dend_62 { pt3dadd( 108.434, 29.8704, -56.8824, 0.15 ) }
    dend_62 { pt3dadd( 108.492, 29.8918, -56.902, 0.15 ) }
    dend_62 { pt3dadd( 109.762, 30.515, -57.4647, 0.81 ) }
    dend_62 { pt3dadd( 109.879, 30.5705, -57.5143, 0.81 ) }
    dend_62 { pt3dadd( 110.167, 30.6769, -57.656, 0.81 ) }
    dend_62 { pt3dadd( 110.255, 30.7031, -57.707, 0.81 ) }
    dend_62 { pt3dadd( 110.719, 30.7919, -57.9612, 0.15 ) }
    dend_62 { pt3dadd( 110.777, 30.8008, -57.989, 0.15 ) }
    dend_62 { pt3dadd( 111.9, 30.8977, -58.3823, 0.15 ) }
    dend_62 { pt3dadd( 112.961, 30.9592, -58.7634, 0.74 ) }
    dend_62 { pt3dadd( 113.166, 30.965, -58.839, 0.74 ) }
    dend_62 { pt3dadd( 113.237, 30.9663, -58.8643, 0.74 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 78.7825, 17.6411, -39.5839, 0.66 ) }
    dend_61 { pt3dadd( 78.9637, 17.434, -39.8266, 0.66 ) }
    dend_61 { pt3dadd( 79.0029, 17.3947, -39.881, 0.66 ) }
    dend_61 { pt3dadd( 79.7164, 16.803, -40.7655, 0.66 ) }
    dend_61 { pt3dadd( 79.9148, 16.6781, -40.9903, 0.66 ) }
    dend_61 { pt3dadd( 80.6537, 16.2761, -41.7883, 0.66 ) }
    dend_61 { pt3dadd( 81.4306, 15.9254, -42.5141, 1.18 ) }
    dend_61 { pt3dadd( 81.569, 15.8755, -42.6291, 1.18 ) }
    dend_61 { pt3dadd( 82.2515, 15.6838, -43.1052, 1.18 ) }
    dend_61 { pt3dadd( 83.0514, 15.5295, -43.5766, 0.44 ) }
    dend_61 { pt3dadd( 83.1315, 15.5164, -43.6171, 0.44 ) }
    dend_61 { pt3dadd( 84.3551, 15.3281, -44.1304, 0.44 ) }
    dend_61 { pt3dadd( 84.6807, 15.2997, -44.3043, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_61 { pt3dadd( 85.5284, 15.2908, -44.8577, 0.44 ) }
    dend_61 { pt3dadd( 85.5919, 15.294, -44.9053, 0.44 ) }
    dend_61 { pt3dadd( 86.149, 15.3502, -45.3464, 0.74 ) }
    dend_61 { pt3dadd( 86.2195, 15.3627, -45.4021, 0.74 ) }
    dend_61 { pt3dadd( 88.3632, 15.9078, -47.066, 0.44 ) }
    dend_61 { pt3dadd( 89.7735, 16.2143, -47.9235, 0.44 ) }
    dend_61 { pt3dadd( 89.8463, 16.2245, -47.9532, 0.44 ) }
    dend_61 { pt3dadd( 90.6738, 16.2549, -48.1169, 0.88 ) }
    dend_61 { pt3dadd( 91.6329, 16.2298, -48.1688, 0.88 ) }
    dend_61 { pt3dadd( 92.5155, 16.1681, -48.119, 0.88 ) }
    dend_61 { pt3dadd( 94.3153, 15.9103, -47.7424, 0.44 ) }
    dend_61 { pt3dadd( 96.3152, 15.538, -47.2277, 0.44 ) }
    dend_61 { pt3dadd( 98.0041, 15.172, -46.7527, 1.25 ) }
    dend_61 { pt3dadd( 98.0888, 15.1517, -46.7274, 1.25 ) }
    dend_61 { pt3dadd( 98.9708, 14.9218, -46.4559, 1.25 ) }
    dend_61 { pt3dadd( 100.66, 14.4581, -45.9821, 0.37 ) }
    dend_61 { pt3dadd( 101.791, 14.2085, -45.8391, 0.37 ) }
    dend_61 { pt3dadd( 101.948, 14.1821, -45.8477, 0.37 ) }
    dend_61 { pt3dadd( 103.228, 14.0325, -46.1629, 0.37 ) }
    dend_61 { pt3dadd( 103.333, 14.021, -46.1993, 0.37 ) }
    dend_61 { pt3dadd( 104.596, 13.9053, -46.7696, 0.37 ) }
    dend_61 { pt3dadd( 106.706, 13.7645, -47.8942, 1.03 ) }
    dend_61 { pt3dadd( 107.58, 13.681, -48.3748, 1.92 ) }
    dend_61 { pt3dadd( 108.045, 13.6244, -48.6302, 0.29 ) }
    dend_61 { pt3dadd( 108.919, 13.5175, -49.1462, 0.29 ) }
    dend_61 { pt3dadd( 109.056, 13.5029, -49.2257, 0.29 ) }
    dend_61 { pt3dadd( 110.091, 13.398, -49.7869, 0.29 ) }
    dend_61 { pt3dadd( 110.742, 13.2706, -50.0881, 0.74 ) }
    dend_61 { pt3dadd( 110.821, 13.2549, -50.1294, 0.74 ) }
    dend_61 { pt3dadd( 112.099, 12.9973, -50.7983, 0.74 ) }
    dend_61 { pt3dadd( 112.169, 12.9824, -50.8337, 0.74 ) }
    dend_61 { pt3dadd( 112.837, 12.826, -51.1401, 0.22 ) }
    dend_61 { pt3dadd( 113.717, 12.6053, -51.4983, 0.22 ) }
    dend_61 { pt3dadd( 113.876, 12.5476, -51.5183, 0.22 ) }
    dend_61 { pt3dadd( 114.597, 12.2085, -51.4481, 0.96 ) }
    dend_61 { pt3dadd( 114.959, 12.0161, -51.3597, 0.96 ) }
    dend_61 { pt3dadd( 115.668, 11.6384, -51.1619, 0.96 ) }
    dend_61 { pt3dadd( 115.736, 11.6025, -51.1411, 0.96 ) }
    dend_61 { pt3dadd( 117.912, 10.4813, -50.4495, 0.37 ) }
    dend_61 { pt3dadd( 118.016, 10.428, -50.4183, 0.37 ) }
    dend_61 { pt3dadd( 119.717, 9.58443, -50.0054, 0.37 ) }
    dend_61 { pt3dadd( 119.788, 9.55095, -49.9921, 0.37 ) }
    dend_61 { pt3dadd( 120.405, 9.28512, -49.93, 0.59 ) }
    dend_61 { pt3dadd( 120.64, 9.20142, -49.9354, 0.22 ) }
    dend_61 { pt3dadd( 120.716, 9.18088, -49.9459, 0.22 ) }
    dend_61 { pt3dadd( 121.855, 8.87346, -50.0133, 0.22 ) }
    dend_61 { pt3dadd( 121.932, 8.85312, -50.014, 0.22 ) }
    dend_61 { pt3dadd( 122.414, 8.72289, -50.02, 0.44 ) }
    dend_61 { pt3dadd( 122.665, 8.6483, -50.03, 0.44 ) }
    dend_61 { pt3dadd( 123.741, 8.29606, -50.1009, 0.22 ) }
    dend_61 { pt3dadd( 126.176, 7.46148, -50.3482, 0.22 ) }
    dend_61 { pt3dadd( 126.89, 7.20559, -50.4448, 1.03 ) }
    dend_61 { pt3dadd( 127.599, 6.94446, -50.5619, 0.22 ) }
    dend_61 { pt3dadd( 129.002, 6.40384, -50.8386, 0.22 ) }
    dend_61 { pt3dadd( 129.384, 6.25332, -50.9315, 0.22 ) }
    dend_61 { pt3dadd( 131.275, 5.52153, -51.4755, 0.22 ) }
    dend_61 { pt3dadd( 133.548, 4.61334, -52.1675, 0.22 ) }
    dend_61 { pt3dadd( 134.702, 4.16471, -52.5213, 1.18 ) }
    dend_61 { pt3dadd( 135.704, 3.78903, -52.8289, 1.18 ) }
    dend_61 { pt3dadd( 136.389, 3.54853, -53.0354, 0.15 ) }
    dend_61 { pt3dadd( 138.675, 2.78147, -53.7208, 0.15 ) }
    dend_61 { pt3dadd( 138.758, 2.75465, -53.7459, 0.52 ) }
    dend_61 { pt3dadd( 139.374, 2.57179, -53.9303, 0.15 ) }
    dend_61 { pt3dadd( 139.522, 2.53245, -53.9736, 0.15 ) }
    dend_61 { pt3dadd( 141.51, 2.07302, -54.518, 0.15 ) }
    dend_61 { pt3dadd( 142.063, 1.95259, -54.6602, 0.96 ) }
    dend_61 { pt3dadd( 142.86, 1.79581, -54.8725, 0.96 ) }
    dend_61 { pt3dadd( 143.097, 1.75242, -54.936, 0.96 ) }
    dend_61 { pt3dadd( 143.825, 1.63896, -55.1266, 0.15 ) }
    dend_61 { pt3dadd( 145.525, 1.45437, -55.5395, 0.15 ) }
    dend_61 { pt3dadd( 145.614, 1.45093, -55.559, 0.15 ) }
    dend_61 { pt3dadd( 145.947, 1.4485, -55.6182, 0.81 ) }
    dend_61 { pt3dadd( 146.025, 1.44985, -55.6287, 0.81 ) }
    dend_61 { pt3dadd( 146.853, 1.46823, -55.696, 0.81 ) }
    dend_61 { pt3dadd( 147.436, 1.48714, -55.7012, 0.81 ) }
    dend_61 { pt3dadd( 147.515, 1.49033, -55.7015, 0.81 ) }
    dend_61 { pt3dadd( 148.131, 1.50823, -55.7121, 0.15 ) }
    dend_61 { pt3dadd( 148.221, 1.51061, -55.7142, 0.15 ) }
    dend_61 { pt3dadd( 149.219, 1.53823, -55.7413, 0.15 ) }
    dend_61 { pt3dadd( 149.34, 1.53845, -55.7395, 0.15 ) }
    dend_61 { pt3dadd( 151.37, 1.51198, -55.6406, 0.15 ) }
    dend_61 { pt3dadd( 151.816, 1.51005, -55.6041, 0.44 ) }
    dend_61 { pt3dadd( 152.054, 1.51243, -55.5777, 0.44 ) }
    dend_61 { pt3dadd( 152.229, 1.51726, -55.5521, 0.44 ) }
    dend_61 { pt3dadd( 153.208, 1.56053, -55.3636, 0.15 ) }
    dend_61 { pt3dadd( 153.461, 1.57147, -55.3059, 0.15 ) }
    dend_61 { pt3dadd( 154.062, 1.6024, -55.1026, 0.15 ) }
    dend_61 { pt3dadd( 154.558, 1.62451, -54.938, 0.88 ) }
    dend_61 { pt3dadd( 155.127, 1.64872, -54.7737, 0.88 ) }
    dend_61 { pt3dadd( 155.292, 1.65983, -54.7405, 0.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -35.8158, 43.375, 42.2743, 0.37 ) }
    dend_57 { pt3dadd( -40.3613, 44.5445, 48.9135, 0.37 ) }
    dend_57 { pt3dadd( -44.5824, 45.7685, 55.7511, 0.37 ) }
    dend_57 { pt3dadd( -48.7571, 46.4751, 62.7008, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 94/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -35.8158, 43.375, 42.2743, 0.29 ) }
    dend_56 { pt3dadd( -43.9079, 45.9899, 47.5708, 0.37 ) }
    dend_56 { pt3dadd( -53.0664, 48.5408, 50.7604, 0.37 ) }
    dend_56 { pt3dadd( -61.6856, 52.1161, 54.3418, 0.37 ) }
    dend_56 { pt3dadd( -69.8035, 57.5352, 56.1095, 0.37 ) }
    dend_56 { pt3dadd( -77.5732, 63.6003, 56.8829, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_56 { pt3dadd( -84.2627, 70.5465, 58.7146, 0.37 ) }
    dend_56 { pt3dadd( -90.2252, 77.5216, 62.1487, 0.37 ) }
    dend_56 { pt3dadd( -94.6318, 85.6168, 65.1741, 0.37 ) }
    dend_56 { pt3dadd( -99.6989, 92.7318, 69.5608, 0.37 ) }
    dend_56 { pt3dadd( -102.953, 101.252, 72.7238, 0.37 ) }
    dend_56 { pt3dadd( -104.876, 109.56, 77.2412, 0.37 ) }
    dend_56 { pt3dadd( -107.292, 117.168, 82.7666, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 7/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -41.3981, 78.2769, 50.2059, 0.29 ) }
    dend_52 { pt3dadd( -46.935, 86.3754, 56.8077, 0.29 ) }
    dend_52 { pt3dadd( -51.334, 95.0556, 63.4156, 0.29 ) }
    dend_52 { pt3dadd( -54.4772, 102.749, 71.7425, 0.29 ) }
    dend_52 { pt3dadd( -57.4007, 109.801, 80.7266, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 12/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -41.3981, 78.2769, 50.2059, 0.74 ) }
    dend_51 { pt3dadd( -45.3453, 83.3033, 53.8261, 0.29 ) }
    dend_51 { pt3dadd( -49.8204, 87.7939, 57.6116, 0.29 ) }
    dend_51 { pt3dadd( -54.3256, 92.4881, 61.0894, 0.29 ) }
    dend_51 { pt3dadd( -59.054, 96.4789, 65.1693, 0.29 ) }
    dend_51 { pt3dadd( -64.433, 100.237, 68.6763, 0.29 ) }
    dend_51 { pt3dadd( -69.9245, 103.76, 72.2766, 0.29 ) }
    dend_51 { pt3dadd( -75.3976, 107.062, 76.1189, 0.29 ) }
    dend_51 { pt3dadd( -80.423, 111.633, 79.0585, 0.29 ) }
    dend_51 { pt3dadd( -85.0187, 116.377, 82.3483, 0.29 ) }
    dend_51 { pt3dadd( -90.3223, 120.599, 85.3721, 0.29 ) }
    dend_51 { pt3dadd( -95.3256, 124.535, 89.1883, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 59.0593, -52.4951, 4.55217, 0.59 ) }
    dend_44 { pt3dadd( 60.2935, -52.6207, 4.58411, 0.59 ) }
    dend_44 { pt3dadd( 60.5395, -52.6433, 4.58095, 0.59 ) }
    dend_44 { pt3dadd( 61.0025, -52.684, 4.569, 0.59 ) }
    dend_44 { pt3dadd( 62.3042, -52.8435, 4.54448, 0.44 ) }
    dend_44 { pt3dadd( 63.3331, -52.9862, 4.52803, 0.44 ) }
    dend_44 { pt3dadd( 64.6118, -53.2227, 4.45237, 0.81 ) }
    dend_44 { pt3dadd( 65.6604, -53.4851, 4.33572, 0.52 ) }
    dend_44 { pt3dadd( 65.7366, -53.5116, 4.32764, 0.52 ) }
    dend_44 { pt3dadd( 66.8518, -54.0188, 4.15671, 0.22 ) }
    dend_44 { pt3dadd( 66.9314, -54.0624, 4.14107, 0.22 ) }
    dend_44 { pt3dadd( 68.1651, -54.9157, 3.85609, 0.52 ) }
    dend_44 { pt3dadd( 69.1676, -55.7489, 3.59546, 0.44 ) }
    dend_44 { pt3dadd( 70.2364, -56.7338, 3.29476, 0.44 ) }
    dend_44 { pt3dadd( 71.2009, -57.6716, 3.01084, 0.22 ) }
    dend_44 { pt3dadd( 71.3179, -57.7903, 2.97463, 0.22 ) }
    dend_44 { pt3dadd( 71.7809, -58.2661, 2.84381, 0.22 ) }
    dend_44 { pt3dadd( 72.0764, -58.5548, 2.82951, 0.22 ) }
    dend_44 { pt3dadd( 72.6732, -59.1109, 2.96461, 0.22 ) }
    dend_44 { pt3dadd( 72.7373, -59.1641, 3.00199, 0.22 ) }
    dend_44 { pt3dadd( 73.218, -59.5589, 3.36323, 1.03 ) }
    dend_44 { pt3dadd( 73.2694, -59.6049, 3.40345, 1.03 ) }
    dend_44 { pt3dadd( 74.6458, -60.9421, 4.53462, 0.22 ) }
    dend_44 { pt3dadd( 75.3221, -61.6744, 5.12458, 0.22 ) }
    dend_44 { pt3dadd( 75.3654, -61.7239, 5.16935, 0.22 ) }
    dend_44 { pt3dadd( 75.8784, -62.3007, 5.67902, 0.37 ) }
    dend_44 { pt3dadd( 76.2551, -62.7029, 6.06294, 0.59 ) }
    dend_44 { pt3dadd( 76.5939, -63.0271, 6.36127, 0.59 ) }
    dend_44 { pt3dadd( 76.648, -63.0735, 6.39726, 0.59 ) }
    dend_44 { pt3dadd( 77.7267, -63.8316, 7.09426, 0.22 ) }
    dend_44 { pt3dadd( 78.5623, -64.3473, 7.60485, 0.22 ) }
    dend_44 { pt3dadd( 79.434, -64.8197, 8.11962, 0.74 ) }
    dend_44 { pt3dadd( 80.0726, -65.1373, 8.47391, 0.74 ) }
    dend_44 { pt3dadd( 80.9003, -65.5709, 8.88059, 0.74 ) }
    dend_44 { pt3dadd( 80.9629, -65.615, 8.90377, 0.74 ) }
    dend_44 { pt3dadd( 81.5305, -66.1094, 9.03289, 0.37 ) }
    dend_44 { pt3dadd( 81.6482, -66.2308, 9.0499, 0.22 ) }
    dend_44 { pt3dadd( 81.7012, -66.2896, 9.0515, 0.22 ) }
    dend_44 { pt3dadd( 82.3916, -67.0949, 9.05227, 0.22 ) }
    dend_44 { pt3dadd( 83.7379, -68.7147, 9.01782, 0.22 ) }
    dend_44 { pt3dadd( 83.7916, -68.7729, 9.01496, 0.22 ) }
    dend_44 { pt3dadd( 84.3856, -69.3778, 8.96886, 0.59 ) }
    dend_44 { pt3dadd( 84.9792, -69.9641, 8.92058, 1.03 ) }
    dend_44 { pt3dadd( 85.5777, -70.5331, 8.86913, 0.44 ) }
    dend_44 { pt3dadd( 85.8587, -70.7754, 8.84216, 0.22 ) }
    dend_44 { pt3dadd( 87.7697, -72.1628, 8.64792, 0.22 ) }
    dend_44 { pt3dadd( 87.8347, -72.2093, 8.64256, 0.22 ) }
    dend_44 { pt3dadd( 98.2115, -77.2177, 8.17101, 0.22 ) }
    dend_44 { pt3dadd( 107.213, -84.2196, 7.53518, 0.22 ) }
    dend_44 { pt3dadd( 116.811, -90.0249, 4.98368, 0.22 ) }
    dend_44 { pt3dadd( 125.835, -96.9085, 3.59139, 0.22 ) }
    dend_44 { pt3dadd( 134.015, -104.764, 2.91064, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 59.0593, -52.4951, 4.55217, 0.88 ) }
    dend_35 { pt3dadd( 59.2373, -53.0902, 4.49356, 0.88 ) }
    dend_35 { pt3dadd( 59.5084, -54.3221, 4.39976, 0.66 ) }
    dend_35 { pt3dadd( 59.5222, -54.3956, 4.39485, 0.66 ) }
    dend_35 { pt3dadd( 59.7517, -55.4828, 4.33156, 0.66 ) }
    dend_35 { pt3dadd( 60.0763, -56.948, 4.25315, 0.59 ) }
    dend_35 { pt3dadd( 60.2727, -57.7925, 4.16978, 0.81 ) }
    dend_35 { pt3dadd( 60.5296, -58.8743, 4.04998, 0.81 ) }
    dend_35 { pt3dadd( 60.569, -59.0283, 4.02487, 0.81 ) }
    dend_35 { pt3dadd( 60.8674, -60.0805, 3.81393, 0.52 ) }
    dend_35 { pt3dadd( 60.8932, -60.1491, 3.79611, 0.52 ) }
    dend_35 { pt3dadd( 61.5883, -60.972, 3.50037, 0.37 ) }
    dend_35 { pt3dadd( 61.6733, -61.0349, 3.4726, 0.37 ) }
    dend_35 { pt3dadd( 62.4094, -61.3972, 3.28231, 0.37 ) }
    dend_35 { pt3dadd( 62.8472, -61.5711, 3.18748, 0.37 ) }
    dend_35 { pt3dadd( 63.7164, -61.8538, 3.04223, 0.37 ) }
    dend_35 { pt3dadd( 65.2641, -62.351, 2.74124, 0.22 ) }
    dend_35 { pt3dadd( 65.4386, -62.4061, 2.71242, 0.22 ) }
    dend_35 { pt3dadd( 66.3845, -62.769, 2.5374, 0.81 ) }
    dend_35 { pt3dadd( 66.5358, -62.8332, 2.50604, 0.81 ) }
    dend_35 { pt3dadd( 67.253, -63.2511, 2.38148, 1.18 ) }
    dend_35 { pt3dadd( 68.4098, -64.1738, 2.25349, 0.88 ) }
    dend_35 { pt3dadd( 68.8338, -64.6265, 2.243, 0.29 ) }
    dend_35 { pt3dadd( 69.7945, -65.8214, 2.30298, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( 69.8529, -65.9101, 2.31834, 0.29 ) }
    dend_35 { pt3dadd( 70.781, -67.462, 2.68431, 0.29 ) }
    dend_35 { pt3dadd( 71.1283, -68.0943, 2.82161, 0.81 ) }
    dend_35 { pt3dadd( 71.5781, -68.9291, 2.99848, 0.81 ) }
    dend_35 { pt3dadd( 72.0009, -69.7329, 3.15435, 0.81 ) }
    dend_35 { pt3dadd( 72.8439, -71.332, 3.45752, 0.44 ) }
    dend_35 { pt3dadd( 73.4133, -72.4292, 3.63498, 0.44 ) }
    dend_35 { pt3dadd( 74.1217, -73.8033, 3.76158, 1.11 ) }
    dend_35 { pt3dadd( 74.4315, -74.3784, 3.7829, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 104.416, -42.6605, 75.6687, 0.29 ) }
    dend_33 { pt3dadd( 106.342, -44.2126, 79.8852, 0.29 ) }
    dend_33 { pt3dadd( 107.748, -46.4462, 83.9895, 0.29 ) }
    dend_33 { pt3dadd( 108.944, -49.4849, 87.5784, 0.29 ) }
    dend_33 { pt3dadd( 109.612, -53.3682, 90.3282, 0.29 ) }
    dend_33 { pt3dadd( 110.71, -56.9359, 93.3791, 0.29 ) }
    dend_33 { pt3dadd( 111.066, -60.8479, 96.1529, 0.29 ) }
    dend_33 { pt3dadd( 111.011, -64.8046, 98.8908, 0.29 ) }
    dend_33 { pt3dadd( 111.442, -69.1778, 100.71, 0.29 ) }
    dend_33 { pt3dadd( 112.484, -73.3216, 102.824, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 19/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 104.416, -42.6605, 75.6687, 0.74 ) }
    dend_32 { pt3dadd( 113.906, -43.2148, 80.9305, 0.29 ) }
    dend_32 { pt3dadd( 122.487, -42.799, 87.5905, 0.29 ) }
    dend_32 { pt3dadd( 131.44, -40.0199, 93.0466, 0.29 ) }
    dend_32 { pt3dadd( 139.851, -37.7642, 99.5162, 0.29 ) }
    dend_32 { pt3dadd( 149.492, -36.5766, 104.394, 0.29 ) }
    dend_32 { pt3dadd( 158.113, -34.3436, 110.595, 0.29 ) }
    dend_32 { pt3dadd( 166.309, -29.8286, 115.971, 0.29 ) }
    dend_32 { pt3dadd( 173.526, -25.558, 122.738, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 45.4318, -77.8766, 69.6544, 0.37 ) }
    dend_29 { pt3dadd( 45.7658, -78.2636, 69.7923, 0.37 ) }
    dend_29 { pt3dadd( 46.3982, -79.0678, 70.2638, 0.37 ) }
    dend_29 { pt3dadd( 47.0837, -80.1852, 71.0698, 0.22 ) }
    dend_29 { pt3dadd( 47.1098, -80.2422, 71.1124, 0.22 ) }
    dend_29 { pt3dadd( 47.5415, -81.925, 72.308, 0.52 ) }
    dend_29 { pt3dadd( 47.6344, -82.5372, 72.7289, 0.52 ) }
    dend_29 { pt3dadd( 47.5789, -83.6734, 73.5265, 0.37 ) }
    dend_29 { pt3dadd( 47.2643, -84.8263, 74.2548, 0.22 ) }
    dend_29 { pt3dadd( 46.9717, -85.5336, 74.6292, 0.22 ) }
    dend_29 { pt3dadd( 46.265, -86.8513, 75.1028, 0.22 ) }
    dend_29 { pt3dadd( 46.2226, -86.9122, 75.1158, 0.22 ) }
    dend_29 { pt3dadd( 45.6676, -87.6139, 75.2159, 0.22 ) }
    dend_29 { pt3dadd( 44.3156, -89.2001, 75.4018, 0.22 ) }
    dend_29 { pt3dadd( 43.7252, -89.9242, 75.4822, 0.22 ) }
    dend_29 { pt3dadd( 42.6315, -91.4132, 75.6296, 0.22 ) }
    dend_29 { pt3dadd( 41.083, -93.733, 75.8409, 0.15 ) }
    dend_29 { pt3dadd( 39.8677, -95.7156, 76.0108, 0.15 ) }
    dend_29 { pt3dadd( 38.3646, -98.3816, 76.188, 0.15 ) }
    dend_29 { pt3dadd( 37.03, -100.868, 76.3186, 0.15 ) }
    dend_29 { pt3dadd( 35.2247, -104.436, 76.4951, 0.15 ) }
    dend_29 { pt3dadd( 34.6694, -105.679, 76.5437, 0.59 ) }
    dend_29 { pt3dadd( 34.2082, -106.916, 76.5653, 0.59 ) }
    dend_29 { pt3dadd( 33.848, -108.083, 76.5611, 0.29 ) }
    dend_29 { pt3dadd( 33.6953, -108.765, 76.5085, 0.29 ) }
    dend_29 { pt3dadd( 31.2779, -118.973, 78.209, 0.29 ) }
    dend_29 { pt3dadd( 28.2334, -128.523, 81.9136, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 45.4318, -77.8766, 69.6544, 0.59 ) }
    dend_28 { pt3dadd( 45.7478, -78.0566, 69.7354, 0.59 ) }
    dend_28 { pt3dadd( 46.619, -78.6173, 70.1052, 0.22 ) }
    dend_28 { pt3dadd( 47.0501, -78.8795, 70.2295, 0.22 ) }
    dend_28 { pt3dadd( 48.6504, -79.842, 70.631, 0.22 ) }
    dend_28 { pt3dadd( 48.7031, -79.8725, 70.6376, 0.22 ) }
    dend_28 { pt3dadd( 50.0849, -80.6741, 70.8145, 0.22 ) }
    dend_28 { pt3dadd( 51.6746, -81.6297, 71.0445, 0.22 ) }
    dend_28 { pt3dadd( 53.6997, -82.9173, 71.3906, 0.22 ) }
    dend_28 { pt3dadd( 53.751, -82.9499, 71.3971, 0.22 ) }
    dend_28 { pt3dadd( 55.4767, -83.9398, 71.4002, 0.22 ) }
    dend_28 { pt3dadd( 63.3592, -87.6782, 72.3999, 0.22 ) }
    dend_28 { pt3dadd( 71.2641, -90.6586, 74.9125, 0.22 ) }
    dend_28 { pt3dadd( 79.6934, -93.1839, 75.6413, 0.22 ) }
    dend_28 { pt3dadd( 88.4879, -94.2775, 75.8204, 0.22 ) }
    dend_28 { pt3dadd( 96.8411, -97.1058, 75.8634, 0.22 ) }
    dend_28 { pt3dadd( 105.42, -98.7462, 77.3145, 0.22 ) }
    dend_28 { pt3dadd( 114.029, -100.45, 78.4731, 0.22 ) }
    dend_28 { pt3dadd( 122.725, -101.592, 79.7509, 0.22 ) }
    dend_28 { pt3dadd( 131.159, -101.317, 82.4981, 0.22 ) }
    dend_28 { pt3dadd( 139.39, -101.762, 85.7763, 0.22 ) }
    dend_28 { pt3dadd( 147.935, -101.603, 88.1652, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 77/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -11.9491, -23.1838, -6.49738, 0.96 ) }
    dend_18 { pt3dadd( -13.8943, -24.6385, -11.2421, 0.96 ) }
    dend_18 { pt3dadd( -14.3993, -25.0162, -12.474, 0.96 ) }
    dend_18 { pt3dadd( -14.4265, -25.0366, -12.5404, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 81/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -11.9491, -23.1838, -6.49738, 1.4 ) }
    dend_17 { pt3dadd( -12.2664, -23.3802, -6.28572, 1.4 ) }
    dend_17 { pt3dadd( -13.3023, -24.0366, -5.55647, 1.03 ) }
    dend_17 { pt3dadd( -13.372, -24.0829, -5.50279, 1.03 ) }
    dend_17 { pt3dadd( -14.2295, -24.6761, -4.82796, 0.59 ) }
    dend_17 { pt3dadd( -15.0812, -25.3612, -4.06454, 0.59 ) }
    dend_17 { pt3dadd( -15.9683, -26.1203, -3.28304, 0.66 ) }
    dend_17 { pt3dadd( -16.0163, -26.1669, -3.24063, 0.66 ) }
    dend_17 { pt3dadd( -16.8994, -27.1357, -2.44977, 0.66 ) }
    dend_17 { pt3dadd( -17.5888, -27.96, -1.86252, 0.44 ) }
    dend_17 { pt3dadd( -18.4996, -29.1774, -1.11758, 0.44 ) }
    dend_17 { pt3dadd( -19.0143, -29.9273, -0.735882, 0.66 ) }
    dend_17 { pt3dadd( -19.7126, -30.938, -0.272789, 0.66 ) }
    dend_17 { pt3dadd( -19.8075, -31.0552, -0.212668, 0.66 ) }
    dend_17 { pt3dadd( -20.7261, -31.9268, 0.342756, 0.66 ) }
    dend_17 { pt3dadd( -20.8006, -31.978, 0.397407, 0.66 ) }
    dend_17 { pt3dadd( -21.5152, -32.3035, 0.980655, 0.66 ) }
    dend_17 { pt3dadd( -22.3859, -32.6106, 1.83355, 0.88 ) }
    dend_17 { pt3dadd( -23.5508, -32.9472, 3.04412, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_17 { pt3dadd( -24.4986, -33.2002, 4.06311, 0.74 ) }
    dend_17 { pt3dadd( -25.6999, -33.5424, 5.39511, 0.66 ) }
    dend_17 { pt3dadd( -26.8006, -33.8966, 6.62856, 0.66 ) }
    dend_17 { pt3dadd( -27.4777, -34.1718, 7.41442, 0.66 ) }
    dend_17 { pt3dadd( -28.4199, -34.6925, 8.57318, 0.66 ) }
    dend_17 { pt3dadd( -28.4593, -34.7224, 8.6223, 0.66 ) }
    dend_17 { pt3dadd( -29.4705, -35.683, 9.85378, 0.66 ) }
    dend_17 { pt3dadd( -29.5143, -35.7282, 9.90191, 0.66 ) }
    dend_17 { pt3dadd( -30.3925, -36.6423, 10.8369, 0.66 ) }
    dend_17 { pt3dadd( -30.4332, -36.6816, 10.877, 0.66 ) }
    dend_17 { pt3dadd( -31.409, -37.5361, 11.8244, 0.66 ) }
    dend_17 { pt3dadd( -31.5719, -37.6577, 11.9707, 1.03 ) }
    dend_17 { pt3dadd( -32.1927, -38.0214, 12.4751, 0.52 ) }
    dend_17 { pt3dadd( -33.2386, -38.5595, 13.2578, 0.52 ) }
    dend_17 { pt3dadd( -33.291, -38.5852, 13.2962, 0.52 ) }
    dend_17 { pt3dadd( -33.9059, -38.902, 13.7491, 0.66 ) }
    dend_17 { pt3dadd( -34.6955, -39.3215, 14.3303, 0.66 ) }
    dend_17 { pt3dadd( -35.5091, -39.7901, 14.9175, 1.4 ) }
    dend_17 { pt3dadd( -36.0102, -40.1057, 15.2755, 0.81 ) }
    dend_17 { pt3dadd( -37.0336, -40.7694, 15.9863, 0.52 ) }
    dend_17 { pt3dadd( -37.9752, -41.3939, 16.6479, 0.37 ) }
    dend_17 { pt3dadd( -38.7807, -41.9405, 17.2224, 0.81 ) }
    dend_17 { pt3dadd( -39.4294, -42.4081, 17.6851, 0.96 ) }
    dend_17 { pt3dadd( -40.1336, -42.9367, 18.1826, 0.96 ) }
    dend_17 { pt3dadd( -41.0775, -43.6514, 18.8315, 0.66 ) }
    dend_17 { pt3dadd( -41.8536, -44.2301, 19.3384, 0.66 ) }
    dend_17 { pt3dadd( -41.9227, -44.284, 19.3848, 0.66 ) }
    dend_17 { pt3dadd( -43.0816, -45.212, 20.1731, 0.66 ) }
    dend_17 { pt3dadd( -43.1304, -45.2508, 20.2034, 0.66 ) }
    dend_17 { pt3dadd( -44.0502, -46.0191, 20.7171, 0.66 ) }
    dend_17 { pt3dadd( -45.3138, -47.1281, 21.3469, 0.66 ) }
    dend_17 { pt3dadd( -46.3345, -48.0243, 21.7936, 0.66 ) }
    dend_17 { pt3dadd( -46.3759, -48.0627, 21.811, 0.66 ) }
    dend_17 { pt3dadd( -47.2909, -48.9503, 22.1996, 0.66 ) }
    dend_17 { pt3dadd( -48.2219, -49.904, 22.621, 0.66 ) }
    dend_17 { pt3dadd( -48.6559, -50.354, 22.8385, 0.44 ) }
    dend_17 { pt3dadd( -48.7009, -50.3995, 22.8641, 0.44 ) }
    dend_17 { pt3dadd( -49.1833, -50.8048, 23.1264, 0.44 ) }
    dend_17 { pt3dadd( -49.81, -51.2102, 23.4542, 0.44 ) }
    dend_17 { pt3dadd( -50.6947, -51.6051, 23.8643, 0.88 ) }
    dend_17 { pt3dadd( -51.9462, -51.9965, 24.3539, 0.96 ) }
    dend_17 { pt3dadd( -52.4884, -52.1352, 24.5384, 0.96 ) }
    dend_17 { pt3dadd( -53.8493, -52.4363, 24.9209, 0.44 ) }
    dend_17 { pt3dadd( -55.1516, -52.6755, 25.2075, 0.44 ) }
    dend_17 { pt3dadd( -56.4076, -52.9055, 25.4197, 0.44 ) }
    dend_17 { pt3dadd( -57.3546, -53.0781, 25.5443, 0.44 ) }
    dend_17 { pt3dadd( -57.4223, -53.0939, 25.5512, 0.44 ) }
    dend_17 { pt3dadd( -58.1827, -53.3331, 25.6335, 0.66 ) }
    dend_17 { pt3dadd( -58.2444, -53.3633, 25.644, 0.66 ) }
    dend_17 { pt3dadd( -59.0604, -53.8812, 25.7614, 0.66 ) }
    dend_17 { pt3dadd( -59.1229, -53.9281, 25.772, 0.66 ) }
    dend_17 { pt3dadd( -59.7779, -54.414, 25.858, 0.52 ) }
    dend_17 { pt3dadd( -60.4957, -54.8885, 25.9388, 0.29 ) }
    dend_17 { pt3dadd( -61.4357, -55.412, 26.0293, 0.29 ) }
    dend_17 { pt3dadd( -62.2943, -55.8324, 26.0955, 0.96 ) }
    dend_17 { pt3dadd( -63.3037, -56.2633, 26.1855, 0.96 ) }
    dend_17 { pt3dadd( -64.4183, -56.7188, 26.3516, 0.88 ) }
    dend_17 { pt3dadd( -65.5878, -57.166, 26.6027, 0.74 ) }
    dend_17 { pt3dadd( -67.1044, -57.7199, 27.0628, 0.52 ) }
    dend_17 { pt3dadd( -67.1574, -57.738, 27.084, 0.52 ) }
    dend_17 { pt3dadd( -68.3706, -58.1593, 27.7111, 0.52 ) }
    dend_17 { pt3dadd( -69.399, -58.5076, 28.3503, 0.96 ) }
    dend_17 { pt3dadd( -70.185, -58.8094, 28.964, 1.18 ) }
    dend_17 { pt3dadd( -70.9407, -59.1685, 29.6821, 0.59 ) }
    dend_17 { pt3dadd( -71.244, -59.3469, 30.0114, 0.29 ) }
    dend_17 { pt3dadd( -71.5083, -59.5034, 30.2646, 0.15 ) }
    dend_17 { pt3dadd( -71.5668, -59.5367, 30.3072, 0.29 ) }
    dend_17 { pt3dadd( -72.0598, -59.7585, 30.4954, 0.29 ) }
    dend_17 { pt3dadd( -72.4406, -59.8924, 30.5956, 0.29 ) }
    dend_17 { pt3dadd( -72.9785, -60.0142, 30.6525, 0.29 ) }
    dend_17 { pt3dadd( -73.9751, -60.1657, 30.7398, 0.29 ) }
    dend_17 { pt3dadd( -74.6979, -60.242, 30.8267, 0.44 ) }
    dend_17 { pt3dadd( -75.6279, -60.3117, 30.9606, 0.96 ) }
    dend_17 { pt3dadd( -76.5388, -60.3684, 31.118, 1.33 ) }
    dend_17 { pt3dadd( -77.9127, -60.4655, 31.4328, 1.33 ) }
    dend_17 { pt3dadd( -78.7635, -60.5587, 31.6853, 0.52 ) }
    dend_17 { pt3dadd( -79.639, -60.7184, 32.0159, 0.22 ) }
    dend_17 { pt3dadd( -79.7102, -60.7387, 32.0459, 0.22 ) }
    dend_17 { pt3dadd( -80.4373, -61.0417, 32.3499, 0.22 ) }
    dend_17 { pt3dadd( -81.0299, -61.3573, 32.5909, 0.52 ) }
    dend_17 { pt3dadd( -81.6083, -61.7226, 32.8456, 0.88 ) }
    dend_17 { pt3dadd( -81.6645, -61.7577, 32.8662, 0.88 ) }
    dend_17 { pt3dadd( -82.2635, -62.1148, 33.0533, 0.88 ) }
    dend_17 { pt3dadd( -83.4994, -62.7953, 33.453, 0.22 ) }
    dend_17 { pt3dadd( -83.5592, -62.8252, 33.4722, 0.22 ) }
    dend_17 { pt3dadd( -84.5555, -63.2998, 33.8327, 0.22 ) }
    dend_17 { pt3dadd( -85.0859, -63.5407, 34.037, 0.22 ) }
    dend_17 { pt3dadd( -85.1369, -63.5636, 34.0581, 0.22 ) }
    dend_17 { pt3dadd( -85.9051, -63.932, 34.3969, 0.22 ) }
    dend_17 { pt3dadd( -86.1645, -64.0817, 34.5216, 0.22 ) }
    dend_17 { pt3dadd( -87.3955, -64.8497, 35.0757, 0.22 ) }
    dend_17 { pt3dadd( -88.0601, -65.3115, 35.3513, 1.25 ) }
    dend_17 { pt3dadd( -88.1113, -65.3531, 35.3717, 1.25 ) }
    dend_17 { pt3dadd( -88.8682, -66.0064, 35.6615, 1.62 ) }
    dend_17 { pt3dadd( -89.5239, -66.6095, 35.8814, 1.62 ) }
    dend_17 { pt3dadd( -90.1942, -67.2724, 36.1021, 0.22 ) }
    dend_17 { pt3dadd( -90.4887, -67.6012, 36.1982, 0.22 ) }
    dend_17 { pt3dadd( -91.6369, -69.0247, 36.5961, 0.22 ) }
    dend_17 { pt3dadd( -91.7236, -69.1386, 36.6257, 0.22 ) }
    dend_17 { pt3dadd( -92.1424, -69.7177, 36.7673, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( -92.5975, -70.3637, 36.92, 0.96 ) }
    dend_17 { pt3dadd( -93.2587, -71.3234, 37.143, 0.96 ) }
    dend_17 { pt3dadd( -93.7671, -71.9955, 37.3349, 0.15 ) }
    dend_17 { pt3dadd( -94.2606, -72.6028, 37.5383, 0.15 ) }
    dend_17 { pt3dadd( -94.3101, -72.6583, 37.5633, 0.15 ) }
    dend_17 { pt3dadd( -95.0913, -73.4465, 38.0328, 0.15 ) }
    dend_17 { pt3dadd( -95.2247, -73.5721, 38.1189, 0.15 ) }
    dend_17 { pt3dadd( -95.9358, -74.1666, 38.5487, 0.15 ) }
    dend_17 { pt3dadd( -95.9854, -74.2061, 38.5765, 0.15 ) }
    dend_17 { pt3dadd( -96.9498, -74.9603, 39.0781, 0.15 ) }
    dend_17 { pt3dadd( -97.2508, -75.202, 39.2227, 0.88 ) }
    dend_17 { pt3dadd( -97.918, -75.7448, 39.5155, 1.11 ) }
    dend_17 { pt3dadd( -98.5762, -76.3076, 39.8088, 0.66 ) }
    dend_17 { pt3dadd( -98.8768, -76.5785, 39.935, 0.22 ) }
    dend_17 { pt3dadd( -99.2969, -76.9401, 40.1111, 0.15 ) }
    dend_17 { pt3dadd( -99.3481, -76.9815, 40.1319, 0.15 ) }
    dend_17 { pt3dadd( -99.9585, -77.4644, 40.4196, 0.15 ) }
    dend_17 { pt3dadd( -100.443, -77.8339, 40.6921, 0.15 ) }
    dend_17 { pt3dadd( -100.794, -78.114, 40.9173, 0.37 ) }
    dend_17 { pt3dadd( -101.058, -78.3189, 41.0832, 0.15 ) }
    dend_17 { pt3dadd( -101.171, -78.4035, 41.1465, 0.15 ) }
    dend_17 { pt3dadd( -101.826, -78.898, 41.4744, 0.15 ) }
    dend_17 { pt3dadd( -102.448, -79.3695, 41.7549, 0.15 ) }
    dend_17 { pt3dadd( -102.786, -79.6151, 41.897, 0.81 ) }
    dend_17 { pt3dadd( -103.475, -80.1071, 42.1941, 0.81 ) }
    dend_17 { pt3dadd( -104.044, -80.4827, 42.4489, 0.22 ) }
    dend_17 { pt3dadd( -104.69, -80.875, 42.7481, 0.22 ) }
    dend_17 { pt3dadd( -104.811, -80.943, 42.8016, 0.22 ) }
    dend_17 { pt3dadd( -105.484, -81.3461, 43.0812, 0.22 ) }
    dend_17 { pt3dadd( -105.54, -81.3811, 43.1036, 0.22 ) }
    dend_17 { pt3dadd( -106.683, -82.1655, 43.5543, 0.22 ) }
    dend_17 { pt3dadd( -106.803, -82.246, 43.5845, 0.22 ) }
    dend_17 { pt3dadd( -107.712, -82.734, 43.4361, 0.22 ) }
    dend_17 { pt3dadd( -108.478, -83.1332, 43.1756, 0.22 ) }
    dend_17 { pt3dadd( -108.594, -83.1831, 43.1188, 0.22 ) }
    dend_17 { pt3dadd( -109.116, -83.3894, 42.8444, 0.96 ) }
    dend_17 { pt3dadd( -110.647, -83.9678, 42.0346, 0.66 ) }
    dend_17 { pt3dadd( -113.131, -84.7971, 40.7852, 0.22 ) }
    dend_17 { pt3dadd( -114.002, -85.0735, 40.3887, 0.22 ) }
    dend_17 { pt3dadd( -116.035, -85.7578, 39.5755, 0.52 ) }
    dend_17 { pt3dadd( -116.702, -86.0067, 39.3522, 0.96 ) }
    dend_17 { pt3dadd( -117.744, -86.4274, 39.0988, 0.96 ) }
    dend_17 { pt3dadd( -118.891, -86.9893, 39.0183, 0.15 ) }
    dend_17 { pt3dadd( -119.95, -87.612, 39.1469, 0.22 ) }
    dend_17 { pt3dadd( -120.976, -88.2714, 39.3701, 0.22 ) }
    dend_17 { pt3dadd( -121.245, -88.4831, 39.478, 0.22 ) }
    dend_17 { pt3dadd( -121.613, -88.7961, 39.6699, 0.44 ) }
    dend_17 { pt3dadd( -122.02, -89.2317, 39.9691, 0.74 ) }
    dend_17 { pt3dadd( -122.055, -89.278, 40.0058, 0.74 ) }
    dend_17 { pt3dadd( -122.436, -89.6988, 40.3456, 0.74 ) }
    dend_17 { pt3dadd( -122.478, -89.7412, 40.3799, 0.74 ) }
    dend_17 { pt3dadd( -123.176, -90.452, 40.8873, 0.22 ) }
    dend_17 { pt3dadd( -123.984, -91.2296, 41.3721, 0.22 ) }
    dend_17 { pt3dadd( -124.032, -91.273, 41.3977, 0.22 ) }
    dend_17 { pt3dadd( -124.874, -91.9856, 41.8272, 0.22 ) }
    dend_17 { pt3dadd( -125.445, -92.4465, 42.1021, 0.22 ) }
    dend_17 { pt3dadd( -125.557, -92.5298, 42.154, 0.22 ) }
    dend_17 { pt3dadd( -127.197, -93.6371, 42.8165, 0.22 ) }
    dend_17 { pt3dadd( -127.335, -93.7268, 42.8734, 0.22 ) }
    dend_17 { pt3dadd( -128.889, -94.8325, 43.6377, 0.22 ) }
    dend_17 { pt3dadd( -129.117, -95.008, 43.7673, 0.22 ) }
    dend_17 { pt3dadd( -129.767, -95.5219, 44.1602, 0.52 ) }
    dend_17 { pt3dadd( -130.446, -96.0579, 44.5967, 1.33 ) }
    dend_17 { pt3dadd( -131.099, -96.5744, 45.0508, 1.55 ) }
    dend_17 { pt3dadd( -132.26, -97.462, 45.8918, 0.37 ) }
    dend_17 { pt3dadd( -132.608, -97.7232, 46.1643, 0.22 ) }
    dend_17 { pt3dadd( -132.85, -97.9028, 46.3566, 0.22 ) }
    dend_17 { pt3dadd( -133.641, -98.5039, 46.9821, 0.22 ) }
    dend_17 { pt3dadd( -133.736, -98.5822, 47.0668, 0.22 ) }
    dend_17 { pt3dadd( -134.119, -98.8941, 47.3879, 0.22 ) }
    dend_17 { pt3dadd( -134.188, -98.9482, 47.4325, 0.22 ) }
    dend_17 { pt3dadd( -134.503, -99.2561, 47.6682, 0.59 ) }
    dend_17 { pt3dadd( -134.913, -99.6753, 47.9915, 0.59 ) }
    dend_17 { pt3dadd( -135.465, -100.301, 48.4478, 0.22 ) }
    dend_17 { pt3dadd( -135.563, -100.404, 48.5286, 0.22 ) }
    dend_17 { pt3dadd( -135.883, -100.718, 48.7939, 0.22 ) }
    dend_17 { pt3dadd( -136.167, -100.974, 49.0168, 0.22 ) }
    dend_17 { pt3dadd( -137.108, -101.755, 49.7321, 0.22 ) }
    dend_17 { pt3dadd( -137.26, -101.88, 49.849, 0.66 ) }
    dend_17 { pt3dadd( -137.513, -102.077, 50.0279, 0.22 ) }
    dend_17 { pt3dadd( -137.558, -102.114, 50.0649, 0.22 ) }
    dend_17 { pt3dadd( -138.311, -102.746, 50.7477, 0.22 ) }
    dend_17 { pt3dadd( -138.371, -102.798, 50.8063, 0.22 ) }
    dend_17 { pt3dadd( -138.791, -103.153, 51.2419, 0.66 ) }
    dend_17 { pt3dadd( -139.338, -103.572, 51.802, 0.66 ) }
    dend_17 { pt3dadd( -139.892, -104.015, 52.3428, 0.22 ) }
    dend_17 { pt3dadd( -139.936, -104.049, 52.3842, 0.22 ) }
    dend_17 { pt3dadd( -140.437, -104.371, 52.7357, 0.22 ) }
    dend_17 { pt3dadd( -140.962, -104.657, 53.0187, 0.22 ) }
    dend_17 { pt3dadd( -141.164, -104.743, 53.0854, 0.22 ) }
    dend_17 { pt3dadd( -142.988, -105.414, 53.4906, 0.22 ) }
    dend_17 { pt3dadd( -143.063, -105.438, 53.5021, 0.22 ) }
    dend_17 { pt3dadd( -144.828, -105.955, 53.7467, 0.15 ) }
    dend_17 { pt3dadd( -145.538, -106.154, 53.8325, 1.11 ) }
    dend_17 { pt3dadd( -146.862, -106.453, 53.8583, 0.44 ) }
    dend_17 { pt3dadd( -147.46, -106.55, 53.8023, 0.44 ) }
    dend_17 { pt3dadd( -147.606, -106.572, 53.779, 0.44 ) }
    dend_17 { pt3dadd( -148.848, -106.788, 53.551, 0.44 ) }
    dend_17 { pt3dadd( -149.642, -106.929, 53.3351, 0.81 ) }
    dend_17 { pt3dadd( -152.752, -107.534, 52.3582, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_17 { pt3dadd( -155.269, -108.057, 51.5165, 0.74 ) }
    dend_17 { pt3dadd( -156.125, -108.255, 51.2231, 0.74 ) }
    dend_17 { pt3dadd( -156.198, -108.274, 51.1979, 0.74 ) }
    dend_17 { pt3dadd( -159.299, -109.148, 49.9856, 0.22 ) }
    dend_17 { pt3dadd( -160.529, -109.525, 49.4886, 0.22 ) }
    dend_17 { pt3dadd( -160.734, -109.61, 49.4198, 0.22 ) }
    dend_17 { pt3dadd( -161.961, -110.2, 49.0851, 0.22 ) }
    dend_17 { pt3dadd( -162.45, -110.443, 48.983, 0.88 ) }
    dend_17 { pt3dadd( -164.603, -111.596, 48.6279, 0.22 ) }
    dend_17 { pt3dadd( -164.74, -111.684, 48.6206, 0.22 ) }
    dend_17 { pt3dadd( -166.508, -112.755, 48.4235, 0.22 ) }
    dend_17 { pt3dadd( -166.827, -112.942, 48.3828, 0.81 ) }
    dend_17 { pt3dadd( -167.6, -113.363, 48.2726, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.20388, -28.9627, 1.34953, 0.29 ) }
    dend_11 { pt3dadd( -8.71908, -28.6614, -3.22521, 0.29 ) }
    dend_11 { pt3dadd( -8.88622, -28.5617, -3.94686, 0.44 ) }
    dend_11 { pt3dadd( -8.89204, -28.548, -4.00557, 0.44 ) }
    dend_11 { pt3dadd( -8.90833, -28.1938, -5.23026, 0.44 ) }
    dend_11 { pt3dadd( -8.98972, -28.6104, -4.05655, 0.44 ) }
    dend_11 { pt3dadd( -9.00299, -28.6517, -3.95307, 0.44 ) }
    dend_11 { pt3dadd( -9.33414, -29.324, -2.7143, 0.44 ) }
    dend_11 { pt3dadd( -9.57139, -29.7163, -2.01448, 0.44 ) }
    dend_11 { pt3dadd( -9.59002, -29.7478, -1.96686, 0.44 ) }
    dend_11 { pt3dadd( -9.76964, -30.0376, -1.62204, 0.66 ) }
    dend_11 { pt3dadd( -9.78981, -30.0825, -1.58918, 0.66 ) }
    dend_11 { pt3dadd( -10.0381, -30.6895, -1.27991, 0.66 ) }
    dend_11 { pt3dadd( -10.0563, -30.7425, -1.26372, 0.66 ) }
    dend_11 { pt3dadd( -10.2986, -31.4577, -1.04103, 0.44 ) }
    dend_11 { pt3dadd( -10.3169, -31.5103, -1.02379, 0.44 ) }
    dend_11 { pt3dadd( -10.5574, -32.258, -0.767852, 0.44 ) }
    dend_11 { pt3dadd( -10.5744, -32.3106, -0.748932, 0.44 ) }
    dend_11 { pt3dadd( -10.7979, -33.0444, -0.503561, 0.44 ) }
    dend_11 { pt3dadd( -10.9176, -33.5586, -0.313018, 0.74 ) }
    dend_11 { pt3dadd( -10.9777, -34.1138, -0.0361759, 0.74 ) }
    dend_11 { pt3dadd( -11.0203, -34.8749, 0.398392, 0.59 ) }
    dend_11 { pt3dadd( -11.021, -34.932, 0.433856, 0.59 ) }
    dend_11 { pt3dadd( -11.0026, -35.9609, 1.14837, 0.59 ) }
    dend_11 { pt3dadd( -10.9302, -36.9148, 1.95556, 0.81 ) }
    dend_11 { pt3dadd( -10.7897, -38.1977, 3.30049, 0.52 ) }
    dend_11 { pt3dadd( -10.7205, -38.8621, 4.09138, 0.52 ) }
    dend_11 { pt3dadd( -10.7166, -38.9048, 4.14462, 0.52 ) }
    dend_11 { pt3dadd( -10.6293, -39.9393, 5.39946, 0.52 ) }
    dend_11 { pt3dadd( -10.5655, -40.9477, 6.54288, 0.74 ) }
    dend_11 { pt3dadd( -10.5457, -41.8525, 7.43899, 0.52 ) }
    dend_11 { pt3dadd( -10.5523, -42.3784, 7.89008, 0.52 ) }
    dend_11 { pt3dadd( -10.5562, -43.1232, 8.50649, 0.52 ) }
    dend_11 { pt3dadd( -10.6525, -44.2004, 9.39447, 0.52 ) }
    dend_11 { pt3dadd( -10.8849, -45.0948, 10.132, 0.81 ) }
    dend_11 { pt3dadd( -10.902, -45.1479, 10.1701, 0.81 ) }
    dend_11 { pt3dadd( -11.0633, -45.5786, 10.4811, 0.74 ) }
    dend_11 { pt3dadd( -11.5426, -46.4848, 11.3623, 0.59 ) }
    dend_11 { pt3dadd( -12.1667, -47.0764, 12.3425, 0.81 ) }
    dend_11 { pt3dadd( -12.7932, -47.3098, 13.2129, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 53/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.20388, -28.9627, 1.34953, 0.74 ) }
    dend_4 { pt3dadd( -7.2334, -29.1259, 1.28832, 0.74 ) }
    dend_4 { pt3dadd( -7.41335, -29.8574, 1.02445, 1.18 ) }
    dend_4 { pt3dadd( -7.73674, -31.0411, 0.606882, 1.03 ) }
    dend_4 { pt3dadd( -8.22925, -32.8852, -0.0423198, 0.74 ) }
    dend_4 { pt3dadd( -8.67389, -34.4079, -0.614309, 0.66 ) }
    dend_4 { pt3dadd( -9.21545, -36.1964, -1.27941, 0.66 ) }
    dend_4 { pt3dadd( -9.45508, -36.8368, -1.54789, 1.03 ) }
    dend_4 { pt3dadd( -9.51042, -36.9667, -1.60681, 1.03 ) }
    dend_4 { pt3dadd( -9.82854, -37.7181, -1.96067, 0.81 ) }
    dend_4 { pt3dadd( -10.2461, -39.0205, -2.54091, 0.81 ) }
    dend_4 { pt3dadd( -10.5576, -40.4901, -3.14853, 0.81 ) }
    dend_4 { pt3dadd( -10.7767, -42.3148, -3.87619, 0.52 ) }
    dend_4 { pt3dadd( -10.8362, -43.5833, -4.34901, 0.74 ) }
    dend_4 { pt3dadd( -10.7705, -45.5625, -4.92201, 1.03 ) }
    dend_4 { pt3dadd( -10.5314, -47.7605, -5.38701, 0.96 ) }
    dend_4 { pt3dadd( -10.5166, -47.8452, -5.39932, 0.96 ) }
    dend_4 { pt3dadd( -10.2699, -49.0478, -5.52318, 1.18 ) }
    dend_4 { pt3dadd( -9.86722, -50.8714, -5.63281, 1.03 ) }
    dend_4 { pt3dadd( -9.3562, -53.4598, -5.74706, 1.03 ) }
    dend_4 { pt3dadd( -9.03376, -55.388, -5.80193, 0.96 ) }
    dend_4 { pt3dadd( -8.80128, -56.9942, -5.86841, 0.81 ) }
    dend_4 { pt3dadd( -8.6321, -58.1849, -5.92986, 1.03 ) }
    dend_4 { pt3dadd( -8.48248, -59.0352, -6.01784, 0.74 ) }
    dend_4 { pt3dadd( -8.30583, -59.8821, -6.17348, 0.59 ) }
    dend_4 { pt3dadd( -8.28561, -59.9529, -6.19275, 0.59 ) }
    dend_4 { pt3dadd( -7.81927, -61.2046, -6.57395, 0.59 ) }
    dend_4 { pt3dadd( -7.75289, -61.3485, -6.61568, 0.59 ) }
    dend_4 { pt3dadd( -6.32645, -64.1598, -7.23437, 0.59 ) }
    dend_4 { pt3dadd( -6.29447, -64.2289, -7.24218, 0.59 ) }
    dend_4 { pt3dadd( -5.48825, -66.0778, -7.33447, 0.59 ) }
    dend_4 { pt3dadd( -5.43145, -66.2312, -7.33053, 0.59 ) }
    dend_4 { pt3dadd( -5.13417, -67.2792, -7.21248, 1.03 ) }
    dend_4 { pt3dadd( -4.5304, -69.6989, -6.8353, 0.81 ) }
    dend_4 { pt3dadd( -4.01544, -72.5267, -6.17151, 0.81 ) }
    dend_4 { pt3dadd( -4.00557, -72.5897, -6.15639, 0.81 ) }
    dend_4 { pt3dadd( -3.86097, -74.0054, -5.80367, 1.55 ) }
    dend_4 { pt3dadd( -3.7772, -75.0074, -5.55817, 1.92 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 91/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 18.8721, 100.89, 44.106, 0.37 ) }
    dend_81 { pt3dadd( 13.2498, 104.478, 50.0646, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 93/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 18.8721, 100.89, 44.106, 0.29 ) }
    dend_80 { pt3dadd( 19.4989, 104.947, 51.3697, 0.37 ) }
    dend_80 { pt3dadd( 19.444, 109.575, 58.2728, 0.37 ) }
    dend_80 { pt3dadd( 19.5069, 113.165, 65.8299, 0.37 ) }
    dend_80 { pt3dadd( 18.692, 117.593, 72.8286, 0.37 ) }
    dend_80 { pt3dadd( 18.2719, 122.579, 79.4353, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 99/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 37.4879, 68.8925, -130.417, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_67 { pt3dadd( 39.387, 70.7374, -131.969, 0.22 ) }
    dend_67 { pt3dadd( 40.8637, 72.2032, -133.156, 0.22 ) }
    dend_67 { pt3dadd( 40.9358, 72.2746, -133.223, 0.22 ) }
    dend_67 { pt3dadd( 42.9329, 74.2957, -135.08, 0.22 ) }
    dend_67 { pt3dadd( 43.4934, 74.9182, -135.588, 1.03 ) }
    dend_67 { pt3dadd( 43.7965, 75.2762, -135.904, 1.03 ) }
    dend_67 { pt3dadd( 43.8315, 75.3226, -135.939, 1.03 ) }
    dend_67 { pt3dadd( 44.7392, 76.7613, -137.206, 0.22 ) }
    dend_67 { pt3dadd( 45.3585, 77.804, -138.173, 0.22 ) }
    dend_67 { pt3dadd( 45.9757, 79.0329, -139.283, 0.22 ) }
    dend_67 { pt3dadd( 46.8022, 81.0294, -141.195, 0.22 ) }
    dend_67 { pt3dadd( 47.1739, 82.3188, -142.282, 0.22 ) }
    dend_67 { pt3dadd( 47.6053, 84.5365, -144.228, 0.22 ) }
    dend_67 { pt3dadd( 47.6124, 84.5955, -144.28, 0.22 ) }
    dend_67 { pt3dadd( 47.6192, 85.943, -145.406, 0.22 ) }
    dend_67 { pt3dadd( 47.4305, 88.5327, -147.239, 0.22 ) }
    dend_67 { pt3dadd( 47.1198, 91.4609, -149.171, 0.22 ) }
    dend_67 { pt3dadd( 46.6509, 95.2037, -151.632, 0.22 ) }
    dend_67 { pt3dadd( 46.6205, 95.4977, -151.813, 0.44 ) }
    dend_67 { pt3dadd( 46.259, 100.03, -154.546, 0.15 ) }
    dend_67 { pt3dadd( 46.1705, 103.346, -156.413, 0.15 ) }
    dend_67 { pt3dadd( 46.276, 107.912, -158.673, 0.15 ) }
    dend_67 { pt3dadd( 46.2843, 108.012, -158.719, 0.15 ) }
    dend_67 { pt3dadd( 46.5258, 110.002, -159.476, 0.15 ) }
    dend_67 { pt3dadd( 46.546, 110.111, -159.518, 0.15 ) }
    dend_67 { pt3dadd( 47.6389, 112.8, -160.63, 0.15 ) }
    dend_67 { pt3dadd( 47.737, 112.954, -160.686, 0.15 ) }
    dend_67 { pt3dadd( 48.4597, 113.869, -160.642, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 28/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 37.4879, 68.8925, -130.417, 0.22 ) }
    dend_66 { pt3dadd( 36.9067, 70.6146, -130.988, 0.22 ) }
    dend_66 { pt3dadd( 36.5489, 71.7146, -131.27, 0.22 ) }
    dend_66 { pt3dadd( 36.4929, 71.8919, -131.33, 0.22 ) }
    dend_66 { pt3dadd( 36.0665, 73.5663, -131.901, 0.22 ) }
    dend_66 { pt3dadd( 35.9804, 74.0684, -132.052, 0.66 ) }
    dend_66 { pt3dadd( 35.91, 74.603, -132.204, 0.22 ) }
    dend_66 { pt3dadd( 35.8564, 75.7276, -132.448, 0.22 ) }
    dend_66 { pt3dadd( 35.9133, 77.3436, -132.803, 0.22 ) }
    dend_66 { pt3dadd( 36.1252, 78.7589, -133.092, 0.22 ) }
    dend_66 { pt3dadd( 36.5148, 80.4631, -133.425, 0.22 ) }
    dend_66 { pt3dadd( 36.5302, 80.519, -133.435, 0.22 ) }
    dend_66 { pt3dadd( 36.8224, 81.4226, -133.599, 0.22 ) }
    dend_66 { pt3dadd( 36.8448, 81.4768, -133.606, 0.22 ) }
    dend_66 { pt3dadd( 37.8536, 83.5554, -133.589, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 43/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -57.4007, 109.801, 80.7266, 0.37 ) }
    dend_54 { pt3dadd( -61.7812, 120.051, 89.9878, 0.37 ) }
    dend_54 { pt3dadd( -65.4625, 130.447, 99.3591, 0.37 ) }
    dend_54 { pt3dadd( -69.7251, 138.919, 110.461, 0.37 ) }
    dend_54 { pt3dadd( -71.4479, 148.52, 121.194, 0.37 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -57.4007, 109.801, 80.7266, 0.29 ) }
    dend_53 { pt3dadd( -61.3155, 117.59, 88.2909, 0.37 ) }
    dend_53 { pt3dadd( -64.5533, 124.663, 96.8351, 0.37 ) }
    dend_53 { pt3dadd( -66.6118, 132.371, 105.109, 0.37 ) }
    dend_53 { pt3dadd( -67.4732, 139.532, 114.062, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 53/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 74.4315, -74.3784, 3.7829, 0.74 ) }
    dend_39 { pt3dadd( 74.1157, -75.2222, 4.63545, 0.74 ) }
    dend_39 { pt3dadd( 73.8465, -76.0743, 5.1612, 0.59 ) }
    dend_39 { pt3dadd( 73.5816, -76.9126, 5.67845, 0.59 ) }
    dend_39 { pt3dadd( 73.5664, -76.9607, 5.70814, 0.59 ) }
    dend_39 { pt3dadd( 73.1737, -78.2037, 6.47511, 0.59 ) }
    dend_39 { pt3dadd( 73.156, -78.2599, 6.50975, 0.59 ) }
    dend_39 { pt3dadd( 72.5482, -80.2522, 7.97105, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 74.4315, -74.3784, 3.7829, 1.11 ) }
    dend_36 { pt3dadd( 74.5865, -74.5743, 3.67049, 1.11 ) }
    dend_36 { pt3dadd( 75.0967, -75.2329, 3.37692, 0.52 ) }
    dend_36 { pt3dadd( 75.1503, -75.3068, 3.3578, 0.52 ) }
    dend_36 { pt3dadd( 75.5291, -75.9082, 3.26558, 0.52 ) }
    dend_36 { pt3dadd( 75.5487, -75.944, 3.25812, 0.52 ) }
    dend_36 { pt3dadd( 75.9037, -76.6385, 3.0947, 0.74 ) }
    dend_36 { pt3dadd( 75.9224, -76.6811, 3.08637, 0.74 ) }
    dend_36 { pt3dadd( 76.2743, -77.5915, 2.96216, 0.74 ) }
    dend_36 { pt3dadd( 76.4664, -78.2039, 2.86869, 0.74 ) }
    dend_36 { pt3dadd( 76.6382, -78.8989, 2.75191, 0.29 ) }
    dend_36 { pt3dadd( 76.6462, -78.9387, 2.74518, 0.29 ) }
    dend_36 { pt3dadd( 76.6798, -79.1459, 2.69513, 0.29 ) }
    dend_36 { pt3dadd( 76.6877, -79.1906, 2.68257, 0.29 ) }
    dend_36 { pt3dadd( 76.7845, -79.7216, 2.50738, 0.29 ) }
    dend_36 { pt3dadd( 76.8987, -80.1692, 2.36543, 0.52 ) }
    dend_36 { pt3dadd( 76.9102, -80.2076, 2.3555, 0.52 ) }
    dend_36 { pt3dadd( 77.1571, -80.9998, 2.14264, 0.52 ) }
    dend_36 { pt3dadd( 77.3234, -81.5712, 1.99257, 0.52 ) }
    dend_36 { pt3dadd( 77.3324, -81.6043, 1.98405, 0.52 ) }
    dend_36 { pt3dadd( 77.393, -81.8792, 1.91584, 0.22 ) }
    dend_36 { pt3dadd( 77.43, -82.1237, 1.86324, 0.22 ) }
    dend_36 { pt3dadd( 77.4345, -82.1692, 1.85214, 0.22 ) }
    dend_36 { pt3dadd( 77.4681, -82.7092, 1.72578, 0.22 ) }
    dend_36 { pt3dadd( 77.4761, -82.7549, 1.71809, 0.22 ) }
    dend_36 { pt3dadd( 77.7338, -83.5291, 1.6857, 0.22 ) }
    dend_36 { pt3dadd( 77.7713, -83.6133, 1.68923, 0.22 ) }
    dend_36 { pt3dadd( 78.1261, -84.2831, 1.75395, 0.81 ) }
    dend_36 { pt3dadd( 78.3382, -84.633, 1.80193, 0.81 ) }
    dend_36 { pt3dadd( 78.982, -85.5834, 1.96797, 0.37 ) }
    dend_36 { pt3dadd( 79.5094, -86.3271, 2.12872, 0.37 ) }
    dend_36 { pt3dadd( 79.7634, -86.6649, 2.22195, 0.44 ) }
    dend_36 { pt3dadd( 79.8766, -86.8155, 2.26835, 0.15 ) }
    dend_36 { pt3dadd( 80.4085, -87.5217, 2.52598, 0.15 ) }
    dend_36 { pt3dadd( 80.4322, -87.5541, 2.53676, 0.15 ) }
    dend_36 { pt3dadd( 80.4828, -87.6304, 2.55154, 0.66 ) }
    dend_36 { pt3dadd( 80.5814, -87.8021, 2.56173, 0.88 ) }
    dend_36 { pt3dadd( 80.6106, -87.8528, 2.56405, 0.88 ) }
    dend_36 { pt3dadd( 80.8045, -88.2021, 2.58091, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_36 { pt3dadd( 84.7424, -92.6775, 2.21482, 0.88 ) }
    dend_36 { pt3dadd( 88.1288, -97.4886, 1.32058, 0.88 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -14.4265, -25.0366, -12.5404, 0.59 ) }
    dend_20 { pt3dadd( -14.4648, -25.1445, -15.3549, 0.59 ) }
    dend_20 { pt3dadd( -14.4591, -25.1495, -15.3852, 0.59 ) }
    dend_20 { pt3dadd( -14.1406, -25.3924, -15.769, 0.59 ) }
    dend_20 { pt3dadd( -14.1234, -25.405, -15.7857, 0.59 ) }
    dend_20 { pt3dadd( -13.7414, -25.6992, -16.2999, 0.59 ) }
    dend_20 { pt3dadd( -13.6964, -25.7335, -16.3639, 0.59 ) }
    dend_20 { pt3dadd( -13.0469, -26.2495, -17.1045, 0.59 ) }
    dend_20 { pt3dadd( -12.781, -26.4831, -17.482, 1.03 ) }
    dend_20 { pt3dadd( -12.3396, -26.9693, -18.381, 0.88 ) }
    dend_20 { pt3dadd( -11.9824, -27.5287, -19.5974, 0.74 ) }
    dend_20 { pt3dadd( -11.9385, -27.6375, -19.8692, 0.74 ) }
    dend_20 { pt3dadd( -11.8767, -27.8877, -20.5931, 0.74 ) }
    dend_20 { pt3dadd( -11.876, -27.8952, -20.6193, 0.74 ) }
    dend_20 { pt3dadd( -11.8443, -28.0867, -21.333, 1.03 ) }
    dend_20 { pt3dadd( -11.7764, -28.3695, -22.2591, 0.29 ) }
    dend_20 { pt3dadd( -11.7078, -28.4705, -22.5948, 0.44 ) }
    dend_20 { pt3dadd( -11.5131, -28.6201, -23.122, 0.88 ) }
    dend_20 { pt3dadd( -11.2826, -28.7223, -23.512, 1.03 ) }
    dend_20 { pt3dadd( -11.0199, -28.8122, -23.914, 1.03 ) }
    dend_20 { pt3dadd( -11.003, -28.8155, -23.9352, 1.03 ) }
    dend_20 { pt3dadd( -10.5, -28.8746, -24.5112, 1.03 ) }
    dend_20 { pt3dadd( -10.113, -28.8993, -24.9936, 0.44 ) }
    dend_20 { pt3dadd( -10.0965, -28.8998, -25.0155, 0.44 ) }
    dend_20 { pt3dadd( -9.59614, -28.9292, -26.0859, 0.74 ) }
    dend_20 { pt3dadd( -9.46883, -28.9691, -26.4507, 0.74 ) }
    dend_20 { pt3dadd( -9.46136, -28.9742, -26.4765, 0.74 ) }
    dend_20 { pt3dadd( -9.41819, -29.0234, -26.6455, 0.74 ) }
    dend_20 { pt3dadd( -9.41115, -29.0332, -26.6742, 0.74 ) }
    dend_20 { pt3dadd( -9.0885, -29.5907, -28.0014, 0.88 ) }
    dend_20 { pt3dadd( -8.92811, -29.956, -28.7686, 0.88 ) }
    dend_20 { pt3dadd( -8.75341, -30.3747, -29.6725, 0.59 ) }
    dend_20 { pt3dadd( -8.68867, -30.5244, -30.0059, 0.88 ) }
    dend_20 { pt3dadd( -8.68305, -30.5372, -30.0336, 0.88 ) }
    dend_20 { pt3dadd( -8.55776, -30.8598, -30.7054, 0.52 ) }
    dend_20 { pt3dadd( -8.44627, -31.2438, -31.4802, 0.37 ) }
    dend_20 { pt3dadd( -8.42344, -31.4246, -31.8578, 0.37 ) }
    dend_20 { pt3dadd( -8.42162, -31.4372, -31.8817, 0.37 ) }
    dend_20 { pt3dadd( -8.37471, -31.672, -32.3179, 0.37 ) }
    dend_20 { pt3dadd( -8.25897, -32.1467, -33.1011, 0.37 ) }
    dend_20 { pt3dadd( -8.10647, -32.6833, -33.9588, 0.37 ) }
    dend_20 { pt3dadd( -8.09579, -32.7152, -34.0089, 0.37 ) }
    dend_20 { pt3dadd( -7.98404, -33.0402, -34.5804, 0.37 ) }
    dend_20 { pt3dadd( -7.73302, -33.6872, -35.8557, 0.37 ) }
    dend_20 { pt3dadd( -7.63754, -33.886, -36.2975, 0.37 ) }
    dend_20 { pt3dadd( -7.44047, -34.1913, -37.0308, 0.96 ) }
    dend_20 { pt3dadd( -7.3463, -34.3156, -37.3751, 0.96 ) }
    dend_20 { pt3dadd( -7.03659, -34.7089, -38.5808, 0.44 ) }
    dend_20 { pt3dadd( -7.02965, -34.7168, -38.6102, 0.44 ) }
    dend_20 { pt3dadd( -6.938, -34.8018, -38.9402, 1.33 ) }
    dend_20 { pt3dadd( -6.86961, -34.8818, -39.3516, 1.33 ) }
    dend_20 { pt3dadd( -6.64638, -35.1755, -40.9076, 0.66 ) }
    dend_20 { pt3dadd( -6.63854, -35.1906, -40.9962, 0.66 ) }
    dend_20 { pt3dadd( -6.56742, -35.3484, -41.8777, 1.55 ) }
    dend_20 { pt3dadd( -6.53899, -35.4235, -42.2961, 1.55 ) }
    dend_20 { pt3dadd( -6.37537, -35.9958, -45.5895, 0.81 ) }
    dend_20 { pt3dadd( -6.3615, -36.0652, -45.9949, 1.77 ) }
    dend_20 { pt3dadd( -6.30687, -36.3539, -47.6304, 0.44 ) }
    dend_20 { pt3dadd( -6.28193, -36.4789, -48.2941, 0.44 ) }
    dend_20 { pt3dadd( -6.28097, -36.4845, -48.3209, 0.44 ) }
    dend_20 { pt3dadd( -6.24357, -36.7052, -49.2227, 0.88 ) }
    dend_20 { pt3dadd( -6.24054, -36.7166, -49.2515, 0.88 ) }
    dend_20 { pt3dadd( -6.18284, -37.036, -49.9825, 0.37 ) }
    dend_20 { pt3dadd( -6.13305, -37.2355, -50.3579, 0.37 ) }
    dend_20 { pt3dadd( -6.06721, -37.5139, -50.8975, 0.74 ) }
    dend_20 { pt3dadd( -6.05294, -37.6368, -51.1583, 0.74 ) }
    dend_20 { pt3dadd( -6.03821, -37.9768, -51.8956, 0.37 ) }
    dend_20 { pt3dadd( -6.03779, -37.988, -51.9203, 0.37 ) }
    dend_20 { pt3dadd( -6.03759, -38.1967, -52.3833, 0.37 ) }
    dend_20 { pt3dadd( -6.0297, -38.5009, -53.0804, 1.18 ) }
    dend_20 { pt3dadd( -5.96558, -39.3593, -55.0801, 0.44 ) }
    dend_20 { pt3dadd( -5.96443, -39.3689, -55.1055, 0.44 ) }
    dend_20 { pt3dadd( -5.94097, -39.5246, -55.5596, 0.44 ) }
    dend_20 { pt3dadd( -5.88515, -39.7752, -56.3672, 0.44 ) }
    dend_20 { pt3dadd( -5.8593, -39.8555, -56.6561, 0.44 ) }
    dend_20 { pt3dadd( -5.84621, -39.8773, -56.738, 0.44 ) }
    dend_20 { pt3dadd( -5.56437, -40.1205, -57.7367, 0.37 ) }
    dend_20 { pt3dadd( -5.55785, -40.1275, -57.7664, 0.37 ) }
    dend_20 { pt3dadd( -5.48444, -40.219, -58.2014, 0.37 ) }
    dend_20 { pt3dadd( -5.4088, -40.4152, -59.0275, 0.37 ) }
    dend_20 { pt3dadd( -5.40558, -40.4393, -59.1169, 0.37 ) }
    dend_20 { pt3dadd( -5.39506, -40.5458, -59.4474, 0.37 ) }
    dend_20 { pt3dadd( -5.36532, -40.9429, -60.4994, 0.37 ) }
    dend_20 { pt3dadd( -5.36432, -40.9546, -60.5281, 0.37 ) }
    dend_20 { pt3dadd( -5.29812, -41.4704, -61.7413, 0.15 ) }
    dend_20 { pt3dadd( -5.24214, -41.7531, -62.3752, 0.88 ) }
    dend_20 { pt3dadd( -5.20444, -41.897, -62.6842, 0.88 ) }
    dend_20 { pt3dadd( -5.2012, -41.9092, -62.7082, 0.88 ) }
    dend_20 { pt3dadd( -5.07477, -42.4632, -63.7251, 0.29 ) }
    dend_20 { pt3dadd( -4.92015, -43.1493, -64.9351, 0.29 ) }
    dend_20 { pt3dadd( -4.81018, -43.6332, -65.7599, 0.29 ) }
    dend_20 { pt3dadd( -4.66404, -44.3306, -66.9342, 0.96 ) }
    dend_20 { pt3dadd( -4.49073, -45.2327, -68.4687, 0.22 ) }
    dend_20 { pt3dadd( -4.3963, -45.7493, -69.3407, 0.37 ) }
    dend_20 { pt3dadd( -4.29873, -46.3348, -70.3123, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -14.4265, -25.0366, -12.5404, 0.74 ) }
    dend_19 { pt3dadd( -15.5843, -26.6292, -13.6787, 0.74 ) }
    dend_19 { pt3dadd( -15.6142, -26.6858, -13.7115, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_19 { pt3dadd( -15.9727, -27.4906, -14.1341, 0.74 ) }
    dend_19 { pt3dadd( -16.4629, -28.808, -14.7292, 0.74 ) }
    dend_19 { pt3dadd( -16.9268, -29.9758, -15.189, 0.74 ) }
    dend_19 { pt3dadd( -16.9616, -30.0455, -15.2143, 0.74 ) }
    dend_19 { pt3dadd( -17.5159, -31.1644, -15.4574, 0.74 ) }
    dend_19 { pt3dadd( -17.5918, -31.2961, -15.4824, 0.74 ) }
    dend_19 { pt3dadd( -18.2081, -32.1925, -15.6207, 0.74 ) }
    dend_19 { pt3dadd( -18.83, -32.9918, -15.6845, 0.74 ) }
    dend_19 { pt3dadd( -19.777, -34.0934, -15.8717, 0.44 ) }
    dend_19 { pt3dadd( -19.8203, -34.1483, -15.8904, 0.44 ) }
    dend_19 { pt3dadd( -20.2426, -34.6868, -16.2132, 0.66 ) }
    dend_19 { pt3dadd( -20.2735, -34.7292, -16.2464, 0.66 ) }
    dend_19 { pt3dadd( -20.637, -35.2253, -16.7474, 0.96 ) }
    dend_19 { pt3dadd( -21.3382, -36.2357, -17.8789, 0.96 ) }
    dend_19 { pt3dadd( -22.0333, -37.1645, -19.07, 1.18 ) }
    dend_19 { pt3dadd( -23.0489, -38.2031, -20.6826, 1.18 ) }
    dend_19 { pt3dadd( -24.1247, -39.0781, -22.2317, 1.18 ) }
    dend_19 { pt3dadd( -25.3356, -39.8999, -23.8363, 0.96 ) }
    dend_19 { pt3dadd( -25.4273, -39.9468, -23.9422, 0.96 ) }
    dend_19 { pt3dadd( -26.9, -40.4884, -25.3788, 0.88 ) }
    dend_19 { pt3dadd( -28.9299, -41.0328, -27.0819, 0.44 ) }
    dend_19 { pt3dadd( -29.7862, -41.1986, -27.6522, 0.66 ) }
    dend_19 { pt3dadd( -29.852, -41.209, -27.6853, 0.66 ) }
    dend_19 { pt3dadd( -31.3676, -41.471, -28.2492, 0.66 ) }
    dend_19 { pt3dadd( -32.4684, -41.698, -28.5879, 0.44 ) }
    dend_19 { pt3dadd( -32.5487, -41.72, -28.6048, 0.44 ) }
    dend_19 { pt3dadd( -34.2441, -42.3597, -28.8888, 0.74 ) }
    dend_19 { pt3dadd( -34.9281, -42.674, -29.0577, 0.74 ) }
    dend_19 { pt3dadd( -34.9891, -42.7079, -29.0813, 0.74 ) }
    dend_19 { pt3dadd( -35.9479, -43.2454, -29.813, 0.44 ) }
    dend_19 { pt3dadd( -36.3932, -43.5022, -30.1782, 0.44 ) }
    dend_19 { pt3dadd( -36.7332, -43.6901, -30.4415, 0.44 ) }
    dend_19 { pt3dadd( -37.6182, -44.2011, -31.0885, 0.44 ) }
    dend_19 { pt3dadd( -39.0502, -44.9994, -32.1093, 0.81 ) }
    dend_19 { pt3dadd( -41.9198, -46.5607, -34.0933, 0.96 ) }
    dend_19 { pt3dadd( -43.4201, -47.397, -35.1203, 1.77 ) }
    dend_19 { pt3dadd( -45.5792, -48.6248, -36.6334, 1.47 ) }
    dend_19 { pt3dadd( -46.5022, -49.1859, -37.2774, 1.47 ) }
    dend_19 { pt3dadd( -48.2765, -50.4307, -38.54, 1.47 ) }
    dend_19 { pt3dadd( -48.32, -50.4749, -38.5784, 1.47 ) }
    dend_19 { pt3dadd( -48.7698, -51.1122, -39.0999, 1.55 ) }
    dend_19 { pt3dadd( -49.7282, -52.7241, -40.4938, 1.11 ) }
    dend_19 { pt3dadd( -50.0866, -53.4603, -41.1069, 0.66 ) }
    dend_19 { pt3dadd( -50.6732, -54.7122, -42.117, 0.37 ) }
    dend_19 { pt3dadd( -51.4558, -56.6458, -43.4805, 0.37 ) }
    dend_19 { pt3dadd( -52.106, -58.1997, -44.5385, 0.37 ) }
    dend_19 { pt3dadd( -52.5763, -59.2623, -45.2176, 0.37 ) }
    dend_19 { pt3dadd( -52.628, -59.3654, -45.2807, 0.37 ) }
    dend_19 { pt3dadd( -53.0775, -60.0939, -45.7179, 0.37 ) }
    dend_19 { pt3dadd( -54.0586, -61.214, -46.5356, 0.37 ) }
    dend_19 { pt3dadd( -55.0078, -62.2305, -47.2051, 0.22 ) }
    dend_19 { pt3dadd( -55.3603, -62.641, -47.4549, 0.22 ) }
    dend_19 { pt3dadd( -56.5963, -64.1238, -48.3099, 1.25 ) }
    dend_19 { pt3dadd( -57.3351, -65.0131, -48.7823, 1.62 ) }
    dend_19 { pt3dadd( -59.631, -67.7125, -50.1757, 0.22 ) }
    dend_19 { pt3dadd( -61.4611, -69.7299, -51.1595, 0.22 ) }
    dend_19 { pt3dadd( -61.5063, -69.7829, -51.1797, 0.22 ) }
    dend_19 { pt3dadd( -62.1934, -70.657, -51.4616, 0.22 ) }
    dend_19 { pt3dadd( -62.2458, -70.7196, -51.4758, 0.22 ) }
    dend_19 { pt3dadd( -63.7523, -72.3072, -51.841, 0.22 ) }
    dend_19 { pt3dadd( -63.8648, -72.4126, -51.8671, 0.22 ) }
    dend_19 { pt3dadd( -64.8375, -73.2433, -52.2213, 0.22 ) }
    dend_19 { pt3dadd( -65.0069, -73.3959, -52.2888, 0.22 ) }
    dend_19 { pt3dadd( -66.3989, -74.7377, -52.8551, 0.22 ) }
    dend_19 { pt3dadd( -67.1167, -75.5716, -53.1907, 0.22 ) }
    dend_19 { pt3dadd( -67.8107, -76.5316, -53.5501, 0.96 ) }
    dend_19 { pt3dadd( -68.2569, -77.2704, -53.8212, 1.25 ) }
    dend_19 { pt3dadd( -68.6465, -77.9323, -54.1151, 0.52 ) }
    dend_19 { pt3dadd( -69.0397, -78.6101, -54.4259, 0.15 ) }
    dend_19 { pt3dadd( -70.0949, -80.2991, -55.3474, 0.15 ) }
    dend_19 { pt3dadd( -70.1814, -80.4211, -55.4213, 0.15 ) }
    dend_19 { pt3dadd( -70.982, -81.5006, -56.0701, 0.15 ) }
    dend_19 { pt3dadd( -72.3847, -83.2307, -57.1504, 0.15 ) }
    dend_19 { pt3dadd( -72.6449, -83.5238, -57.3456, 1.4 ) }
    dend_19 { pt3dadd( -74.3493, -85.3453, -58.6168, 1.4 ) }
    dend_19 { pt3dadd( -74.9636, -85.9745, -59.0716, 0.22 ) }
    dend_19 { pt3dadd( -75.657, -86.69, -59.5967, 0.22 ) }
    dend_19 { pt3dadd( -76.0845, -87.1242, -59.9348, 0.22 ) }
    dend_19 { pt3dadd( -77.0638, -88.171, -60.7094, 0.22 ) }
    dend_19 { pt3dadd( -77.1077, -88.2178, -60.7436, 0.22 ) }
    dend_19 { pt3dadd( -77.9981, -89.241, -61.3847, 1.03 ) }
    dend_19 { pt3dadd( -78.5919, -89.9367, -61.8151, 1.33 ) }
    dend_19 { pt3dadd( -79.449, -91.0727, -62.4758, 0.74 ) }
    dend_19 { pt3dadd( -79.8519, -91.769, -62.7957, 0.22 ) }
    dend_19 { pt3dadd( -80.1987, -92.6074, -63.0545, 0.22 ) }
    dend_19 { pt3dadd( -80.5252, -93.6944, -63.2525, 0.22 ) }
    dend_19 { pt3dadd( -80.5396, -93.7641, -63.2541, 0.22 ) }
    dend_19 { pt3dadd( -80.6894, -94.3456, -63.2697, 1.03 ) }
    dend_19 { pt3dadd( -80.9544, -95.2701, -63.272, 0.74 ) }
    dend_19 { pt3dadd( -81.2032, -96.1052, -63.2707, 0.74 ) }
    dend_19 { pt3dadd( -81.5422, -97.097, -63.3012, 0.44 ) }
    dend_19 { pt3dadd( -81.9872, -98.1766, -63.3829, 0.22 ) }
    dend_19 { pt3dadd( -83.0283, -100.461, -63.5843, 0.15 ) }
    dend_19 { pt3dadd( -83.2396, -100.851, -63.6313, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.7932, -47.3098, 13.2129, 0.52 ) }
    dend_13 { pt3dadd( -13.121, -47.5295, 13.326, 0.52 ) }
    dend_13 { pt3dadd( -13.7562, -48.4543, 13.8802, 0.52 ) }
    dend_13 { pt3dadd( -14.5267, -50.4395, 15.1621, 0.44 ) }
    dend_13 { pt3dadd( -14.7887, -51.4444, 15.764, 0.44 ) }
    dend_13 { pt3dadd( -14.8019, -51.5187, 15.8094, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_13 { pt3dadd( -15.0575, -53.3542, 16.9424, 0.44 ) }
    dend_13 { pt3dadd( -15.2217, -55.2712, 18.2763, 0.44 ) }
    dend_13 { pt3dadd( -15.2214, -55.5038, 18.4538, 0.44 ) }
    dend_13 { pt3dadd( -15.1411, -57.0299, 19.7556, 0.44 ) }
    dend_13 { pt3dadd( -15.1397, -58.0371, 20.7199, 0.44 ) }
    dend_13 { pt3dadd( -15.1481, -58.0985, 20.7843, 0.44 ) }
    dend_13 { pt3dadd( -15.5336, -59.4225, 22.3388, 0.44 ) }
    dend_13 { pt3dadd( -15.8393, -60.1295, 23.2517, 0.37 ) }
    dend_13 { pt3dadd( -15.9934, -60.4921, 23.7818, 0.37 ) }
    dend_13 { pt3dadd( -16.1651, -61.0458, 24.622, 0.66 ) }
    dend_13 { pt3dadd( -16.3485, -61.8116, 25.7354, 0.66 ) }
    dend_13 { pt3dadd( -16.5031, -62.8514, 27.1614, 0.29 ) }
    dend_13 { pt3dadd( -16.5007, -63.5047, 27.9726, 0.29 ) }
    dend_13 { pt3dadd( -16.4156, -64.9607, 29.6457, 0.29 ) }
    dend_13 { pt3dadd( -16.2503, -66.4295, 31.1889, 0.29 ) }
    dend_13 { pt3dadd( -16.2377, -66.4996, 31.2623, 0.29 ) }
    dend_13 { pt3dadd( -16.1702, -66.7613, 31.5375, 0.96 ) }
    dend_13 { pt3dadd( -15.9221, -67.7041, 32.4963, 0.37 ) }
    dend_13 { pt3dadd( -15.6167, -68.7259, 33.4494, 0.37 ) }
    dend_13 { pt3dadd( -15.601, -68.7927, 33.5063, 0.37 ) }
    dend_13 { pt3dadd( -15.2526, -70.6623, 35.2162, 0.37 ) }
    dend_13 { pt3dadd( -15.2036, -70.9395, 35.475, 0.74 ) }
    dend_13 { pt3dadd( -15.1457, -71.2975, 35.8264, 0.29 ) }
    dend_13 { pt3dadd( -14.9588, -72.6851, 37.2957, 0.29 ) }
    dend_13 { pt3dadd( -14.7846, -73.4845, 38.1938, 0.29 ) }
    dend_13 { pt3dadd( -16.1599, -82.8857, 46.6336, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.7932, -47.3098, 13.2129, 0.81 ) }
    dend_12 { pt3dadd( -12.8402, -47.2377, 13.3416, 0.81 ) }
    dend_12 { pt3dadd( -12.9262, -47.1029, 13.593, 0.44 ) }
    dend_12 { pt3dadd( -13.0689, -46.8177, 14.0551, 0.44 ) }
    dend_12 { pt3dadd( -13.2673, -46.4213, 14.6975, 0.44 ) }
    dend_12 { pt3dadd( -13.4201, -46.1161, 15.1922, 0.44 ) }
    dend_12 { pt3dadd( -13.6658, -45.6253, 15.9875, 0.22 ) }
    dend_12 { pt3dadd( -13.7503, -45.4395, 16.293, 0.22 ) }
    dend_12 { pt3dadd( -13.8744, -45.1419, 16.8295, 0.22 ) }
    dend_12 { pt3dadd( -15.5491, -42.0315, 22.1641, 0.22 ) }
    dend_12 { pt3dadd( -18.2763, -39.9149, 27.6143, 0.22 ) }
    dend_12 { pt3dadd( -19.9192, -36.8071, 32.9605, 0.22 ) }
    dend_12 { pt3dadd( -20.8171, -32.9341, 37.9118, 0.22 ) }
    dend_12 { pt3dadd( -21.8388, -29.5294, 43.21, 0.22 ) }
    dend_12 { pt3dadd( -24.2042, -26.6133, 48.4056, 0.22 ) }
    dend_12 { pt3dadd( -27.2927, -23.7058, 53.215, 0.22 ) }
    dend_12 { pt3dadd( -30.987, -21.7887, 58.1589, 0.22 ) }
    dend_12 { pt3dadd( -34.4251, -20.3931, 63.4737, 0.22 ) }
    dend_12 { pt3dadd( -37.2824, -19.9601, 69.305, 0.22 ) }
    dend_12 { pt3dadd( -40.0354, -20.2541, 75.2073, 0.22 ) }
    dend_12 { pt3dadd( -42.7781, -20.7145, 81.1052, 0.22 ) }
    dend_12 { pt3dadd( -44.3415, -20.9141, 87.4299, 0.22 ) }
    dend_12 { pt3dadd( -45.1994, -21.9358, 93.8141, 0.22 ) }
    dend_12 { pt3dadd( -45.7565, -22.246, 100.303, 0.22 ) }
    dend_12 { pt3dadd( -46.1257, -21.7505, 106.78, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -3.7772, -75.0074, -5.55817, 0.37 ) }
    dend_6 { pt3dadd( -7.30947, -75.3118, -3.56267, 0.37 ) }
    dend_6 { pt3dadd( -7.52267, -75.3358, -3.4245, 0.37 ) }
    dend_6 { pt3dadd( -8.81444, -75.5171, -2.51528, 0.37 ) }
    dend_6 { pt3dadd( -9.59796, -75.6754, -1.84756, 0.22 ) }
    dend_6 { pt3dadd( -10.5053, -75.8586, -1.07429, 0.22 ) }
    dend_6 { pt3dadd( -11.8423, -76.1286, 0.0650742, 0.22 ) }
    dend_6 { pt3dadd( -12.1412, -76.2199, 0.428539, 0.44 ) }
    dend_6 { pt3dadd( -12.8712, -76.4655, 1.30698, 0.44 ) }
    dend_6 { pt3dadd( -13.9786, -76.877, 2.60535, 0.22 ) }
    dend_6 { pt3dadd( -24.262, -76.5548, 8.82926, 0.22 ) }
    dend_6 { pt3dadd( -35.3546, -77.3581, 13.4135, 0.22 ) }
    dend_6 { pt3dadd( -45.528, -76.5131, 19.7556, 0.22 ) }
    dend_6 { pt3dadd( -55.3965, -75.5893, 26.5477, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 65/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -3.7772, -75.0074, -5.55817, 1.33 ) }
    dend_5 { pt3dadd( -3.2613, -75.648, -5.71504, 1.33 ) }
    dend_5 { pt3dadd( -2.76629, -76.3475, -5.91332, 0.88 ) }
    dend_5 { pt3dadd( -2.74078, -76.3947, -5.92377, 0.88 ) }
    dend_5 { pt3dadd( -2.19223, -77.6234, -6.16077, 0.66 ) }
    dend_5 { pt3dadd( -1.59583, -79.1907, -6.4366, 0.66 ) }
    dend_5 { pt3dadd( -1.01388, -80.9219, -6.71657, 0.66 ) }
    dend_5 { pt3dadd( -0.564789, -82.46, -6.94565, 0.66 ) }
    dend_5 { pt3dadd( -0.0320592, -84.5261, -7.23354, 0.96 ) }
    dend_5 { pt3dadd( 0.184911, -85.5526, -7.36928, 1.69 ) }
    dend_5 { pt3dadd( 0.325992, -86.4631, -7.48076, 1.25 ) }
    dend_5 { pt3dadd( 0.434544, -87.3959, -7.58894, 0.96 ) }
    dend_5 { pt3dadd( 0.441981, -87.4581, -7.59625, 0.96 ) }
    dend_5 { pt3dadd( 0.659261, -88.6877, -7.71851, 0.59 ) }
    dend_5 { pt3dadd( 1.14728, -90.8125, -7.93865, 0.59 ) }
    dend_5 { pt3dadd( 1.71067, -92.858, -8.13667, 0.96 ) }
    dend_5 { pt3dadd( 2.34618, -94.9368, -8.32561, 1.11 ) }
    dend_5 { pt3dadd( 2.74712, -96.2333, -8.43489, 0.74 ) }
    dend_5 { pt3dadd( 3.12522, -97.4469, -8.52358, 0.74 ) }
    dend_5 { pt3dadd( 3.33109, -98.1702, -8.57387, 0.52 ) }
    dend_5 { pt3dadd( 3.58164, -99.1201, -8.63369, 0.52 ) }
    dend_5 { pt3dadd( 3.60586, -99.2529, -8.64291, 0.52 ) }
    dend_5 { pt3dadd( 3.65255, -100.555, -8.80431, 0.52 ) }
    dend_5 { pt3dadd( 3.64667, -100.636, -8.8192, 0.52 ) }
    dend_5 { pt3dadd( 3.48462, -102.105, -9.09047, 0.44 ) }
    dend_5 { pt3dadd( 3.4794, -102.176, -9.09991, 0.44 ) }
    dend_5 { pt3dadd( 3.48002, -102.856, -9.14402, 0.44 ) }
    dend_5 { pt3dadd( 3.60995, -104.835, -9.20753, 0.44 ) }
    dend_5 { pt3dadd( 3.61811, -104.897, -9.20583, 0.44 ) }
    dend_5 { pt3dadd( 3.79252, -105.948, -9.13872, 0.88 ) }
    dend_5 { pt3dadd( 4.13225, -107.791, -8.95063, 0.88 ) }
    dend_5 { pt3dadd( 4.42943, -109.814, -8.69141, 0.88 ) }
    dend_5 { pt3dadd( 4.43532, -109.877, -8.68186, 0.88 ) }
    dend_5 { pt3dadd( 4.44878, -110.99, -8.44552, 1.25 ) }
    dend_5 { pt3dadd( 4.40992, -111.77, -8.27193, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_5 { pt3dadd( 4.29479, -112.7, -8.05792, 0.96 ) }
    dend_5 { pt3dadd( 4.05154, -113.874, -7.76046, 0.52 ) }
    dend_5 { pt3dadd( 3.84617, -114.649, -7.62212, 0.52 ) }
    dend_5 { pt3dadd( 3.51502, -115.832, -7.50395, 1.18 ) }
    dend_5 { pt3dadd( 3.21258, -116.855, -7.4913, 1.18 ) }
    dend_5 { pt3dadd( 3.19275, -116.924, -7.49411, 1.18 ) }
    dend_5 { pt3dadd( 2.91865, -117.996, -7.62975, 0.96 ) }
    dend_5 { pt3dadd( 2.61412, -119.281, -7.9115, 0.96 ) }
    dend_5 { pt3dadd( 2.46197, -119.992, -8.12624, 1.25 ) }
    dend_5 { pt3dadd( 2.34035, -120.798, -8.42839, 1.03 ) }
    dend_5 { pt3dadd( 2.33538, -120.866, -8.45445, 1.03 ) }
    dend_5 { pt3dadd( 2.33747, -121.745, -8.79249, 0.88 ) }
    dend_5 { pt3dadd( 2.42273, -122.764, -9.12285, 0.88 ) }
    dend_5 { pt3dadd( 2.56079, -123.727, -9.36824, 0.59 ) }
    dend_5 { pt3dadd( 2.75891, -124.945, -9.64091, 0.52 ) }
    dend_5 { pt3dadd( 2.83808, -125.404, -9.72904, 0.52 ) }
    dend_5 { pt3dadd( 2.85992, -125.55, -9.75043, 0.52 ) }
    dend_5 { pt3dadd( 3.03175, -126.847, -9.86641, 0.52 ) }
    dend_5 { pt3dadd( 3.03758, -126.936, -9.86795, 0.52 ) }
    dend_5 { pt3dadd( 3.01241, -128.08, -9.81857, 0.74 ) }
    dend_5 { pt3dadd( 3.00602, -128.143, -9.81511, 0.74 ) }
    dend_5 { pt3dadd( 2.90882, -129.068, -9.78184, 0.81 ) }
    dend_5 { pt3dadd( 2.86016, -129.601, -9.77495, 0.81 ) }
    dend_5 { pt3dadd( 2.79429, -130.408, -9.79576, 0.29 ) }
    dend_5 { pt3dadd( 2.75124, -131.064, -9.81744, 0.29 ) }
    dend_5 { pt3dadd( 2.74923, -131.136, -9.82044, 0.29 ) }
    dend_5 { pt3dadd( 2.76642, -132.063, -9.87653, 0.29 ) }
    dend_5 { pt3dadd( 2.77188, -132.135, -9.88248, 0.29 ) }
    dend_5 { pt3dadd( 2.91065, -133.062, -9.99166, 0.29 ) }
    dend_5 { pt3dadd( 3.06994, -133.849, -10.1486, 0.29 ) }
    dend_5 { pt3dadd( 3.15622, -134.218, -10.2356, 0.88 ) }
    dend_5 { pt3dadd( 3.29817, -134.773, -10.375, 0.88 ) }
    dend_5 { pt3dadd( 3.34395, -134.947, -10.42, 0.88 ) }
    dend_5 { pt3dadd( 3.49619, -135.602, -10.5372, 0.59 ) }
    dend_5 { pt3dadd( 3.73626, -136.648, -10.6783, 0.59 ) }
    dend_5 { pt3dadd( 3.74804, -136.719, -10.6847, 0.59 ) }
    dend_5 { pt3dadd( 3.94425, -138.381, -10.7602, 0.59 ) }
    dend_5 { pt3dadd( 4.00886, -139.108, -10.7729, 0.29 ) }
    dend_5 { pt3dadd( 4.10404, -140.692, -10.7729, 0.29 ) }
    dend_5 { pt3dadd( 4.10866, -140.89, -10.7695, 0.29 ) }
    dend_5 { pt3dadd( 4.09362, -142.416, -10.6933, 0.29 ) }
    dend_5 { pt3dadd( 4.01694, -143.904, -10.629, 0.37 ) }
    dend_5 { pt3dadd( 3.94847, -144.559, -10.6058, 1.18 ) }
    dend_5 { pt3dadd( 3.79799, -145.686, -10.5877, 1.33 ) }
    dend_5 { pt3dadd( 3.65665, -146.595, -10.6079, 0.74 ) }
    dend_5 { pt3dadd( 3.44349, -147.816, -10.6409, 0.52 ) }
    dend_5 { pt3dadd( 3.26539, -148.743, -10.6748, 0.52 ) }
    dend_5 { pt3dadd( 3.1202, -149.437, -10.7149, 0.52 ) }
    dend_5 { pt3dadd( 3.1053, -149.507, -10.7198, 0.52 ) }
    dend_5 { pt3dadd( 2.91469, -150.472, -10.805, 0.52 ) }
    dend_5 { pt3dadd( 2.88083, -150.667, -10.8271, 0.52 ) }
    dend_5 { pt3dadd( 2.76423, -151.376, -10.9163, 0.52 ) }
    dend_5 { pt3dadd( 2.68571, -151.905, -10.9644, 0.88 ) }
    dend_5 { pt3dadd( 2.58204, -152.636, -11.0205, 1.03 ) }
    dend_5 { pt3dadd( 2.48009, -153.431, -11.0742, 0.59 ) }
    dend_5 { pt3dadd( 2.47309, -153.494, -11.0778, 0.59 ) }
    dend_5 { pt3dadd( 2.38819, -154.794, -11.1914, 0.29 ) }
    dend_5 { pt3dadd( 2.37451, -155.708, -11.2945, 0.29 ) }
    dend_5 { pt3dadd( 2.37944, -155.79, -11.3065, 0.29 ) }
    dend_5 { pt3dadd( 2.50465, -156.705, -11.4702, 0.29 ) }
    dend_5 { pt3dadd( 2.53324, -156.895, -11.5219, 0.29 ) }
    dend_5 { pt3dadd( 2.64221, -157.705, -11.8085, 0.29 ) }
    dend_5 { pt3dadd( 2.64796, -157.762, -11.8343, 0.29 ) }
    dend_5 { pt3dadd( 2.65502, -158.494, -12.1867, 0.29 ) }
    dend_5 { pt3dadd( 2.65035, -158.551, -12.2128, 0.29 ) }
    dend_5 { pt3dadd( 2.48675, -159.686, -12.6621, 0.29 ) }
    dend_5 { pt3dadd( 2.43705, -159.951, -12.7433, 0.29 ) }
    dend_5 { pt3dadd( 2.26091, -160.777, -12.9482, 0.29 ) }
    dend_5 { pt3dadd( 2.16651, -161.252, -13.0511, 1.03 ) }
    dend_5 { pt3dadd( 2.04926, -161.919, -13.1738, 1.47 ) }
    dend_5 { pt3dadd( 1.94143, -162.77, -13.3015, 0.37 ) }
    dend_5 { pt3dadd( 1.83585, -164.074, -13.4201, 0.37 ) }
    dend_5 { pt3dadd( 1.83031, -164.137, -13.4248, 0.37 ) }
    dend_5 { pt3dadd( 1.77053, -164.745, -13.4613, 0.81 ) }
    dend_5 { pt3dadd( 1.70896, -165.269, -13.4842, 0.88 ) }
    dend_5 { pt3dadd( 1.64154, -165.728, -13.5026, 0.88 ) }
    dend_5 { pt3dadd( 1.47052, -166.757, -13.5412, 0.22 ) }
    dend_5 { pt3dadd( 1.29292, -167.805, -13.5748, 0.22 ) }
    dend_5 { pt3dadd( 1.28277, -167.876, -13.5778, 0.22 ) }
    dend_5 { pt3dadd( 1.23835, -168.201, -13.5928, 0.37 ) }
    dend_5 { pt3dadd( 1.1706, -168.884, -13.6336, 0.37 ) }
    dend_5 { pt3dadd( 1.108, -169.97, -13.7165, 0.29 ) }
    dend_5 { pt3dadd( 1.10942, -170.042, -13.7239, 0.29 ) }
    dend_5 { pt3dadd( 1.20473, -171.156, -13.8536, 0.29 ) }
    dend_5 { pt3dadd( 1.22045, -171.281, -13.8671, 0.29 ) }
    dend_5 { pt3dadd( 1.43789, -172.572, -14.0042, 0.22 ) }
    dend_5 { pt3dadd( 1.52714, -173.026, -14.0516, 0.66 ) }
    dend_5 { pt3dadd( 1.67111, -173.78, -14.1249, 0.81 ) }
    dend_5 { pt3dadd( 1.77685, -174.378, -14.1775, 0.96 ) }
    dend_5 { pt3dadd( 1.89906, -175.075, -14.1997, 0.37 ) }
    dend_5 { pt3dadd( 1.91123, -175.137, -14.1997, 0.37 ) }
    dend_5 { pt3dadd( 2.15348, -176.306, -14.1815, 0.15 ) }
    dend_5 { pt3dadd( 2.24165, -176.782, -14.1731, 0.74 ) }
    dend_5 { pt3dadd( 2.32578, -177.435, -14.1612, 0.74 ) }
    dend_5 { pt3dadd( 2.39541, -178.478, -14.149, 0.22 ) }
    dend_5 { pt3dadd( 2.4016, -179.296, -14.1491, 0.22 ) }
    dend_5 { pt3dadd( 2.362, -179.994, -14.1502, 0.22 ) }
    dend_5 { pt3dadd( 2.29203, -180.49, -14.1516, 0.59 ) }
    dend_5 { pt3dadd( 2.14913, -181.159, -14.1669, 0.59 ) }
    dend_5 { pt3dadd( 1.9928, -181.655, -14.1911, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_5 { pt3dadd( 1.92931, -181.791, -14.2012, 0.22 ) }
    dend_5 { pt3dadd( 1.60009, -182.376, -14.2146, 0.22 ) }
    dend_5 { pt3dadd( 1.45668, -182.622, -14.2073, 0.44 ) }
    dend_5 { pt3dadd( 1.267, -182.965, -14.1929, 0.44 ) }
    dend_5 { pt3dadd( 1.24243, -183.033, -14.1912, 0.44 ) }
    dend_5 { pt3dadd( 1.05034, -183.829, -14.1841, 0.22 ) }
    dend_5 { pt3dadd( 1.00596, -184.085, -14.2183, 0.22 ) }
    dend_5 { pt3dadd( 0.950953, -184.626, -14.3614, 0.22 ) }
    dend_5 { pt3dadd( 0.941373, -184.754, -14.4039, 0.22 ) }
    dend_5 { pt3dadd( 0.8422, -186.311, -14.9959, 0.22 ) }
    dend_5 { pt3dadd( 0.83736, -186.393, -15.0302, 0.22 ) }
    dend_5 { pt3dadd( 0.802234, -187.698, -15.6447, 0.22 ) }
    dend_5 { pt3dadd( 0.764868, -189.061, -16.3343, 0.22 ) }
    dend_5 { pt3dadd( 0.758409, -189.304, -16.4707, 0.52 ) }
    dend_5 { pt3dadd( 0.755308, -189.359, -16.5036, 0.52 ) }
    dend_5 { pt3dadd( 0.705887, -189.668, -16.7352, 0.52 ) }
    dend_5 { pt3dadd( -0.450164, -198.392, -18.7202, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 72.5482, -80.2522, 7.97105, 0.44 ) }
    dend_43 { pt3dadd( 72.3909, -80.8106, 8.19789, 0.44 ) }
    dend_43 { pt3dadd( 72.4474, -80.9477, 8.2297, 0.44 ) }
    dend_43 { pt3dadd( 72.7305, -81.5542, 8.36408, 0.44 ) }
    dend_43 { pt3dadd( 72.8972, -81.8997, 8.43794, 0.44 ) }
    dend_43 { pt3dadd( 73.2821, -82.6795, 8.5943, 0.44 ) }
    dend_43 { pt3dadd( 73.3158, -82.7464, 8.60707, 0.44 ) }
    dend_43 { pt3dadd( 75.0961, -86.1292, 9.15091, 0.44 ) }
    dend_43 { pt3dadd( 75.1337, -86.1948, 9.16056, 0.44 ) }
    dend_43 { pt3dadd( 75.3981, -86.6193, 9.21768, 1.33 ) }
    dend_43 { pt3dadd( 76.0599, -87.5534, 9.31869, 1.4 ) }
    dend_43 { pt3dadd( 76.3656, -87.9105, 9.36808, 0.37 ) }
    dend_43 { pt3dadd( 76.4189, -87.9654, 9.37718, 0.37 ) }
    dend_43 { pt3dadd( 77.217, -88.6224, 9.4861, 0.29 ) }
    dend_43 { pt3dadd( 77.2782, -88.6695, 9.49377, 0.29 ) }
    dend_43 { pt3dadd( 78.9902, -89.8557, 9.65311, 0.29 ) }
    dend_43 { pt3dadd( 80.6089, -90.8937, 9.74813, 0.29 ) }
    dend_43 { pt3dadd( 80.6752, -90.9349, 9.75053, 0.29 ) }
    dend_43 { pt3dadd( 83.4677, -92.6272, 9.79935, 0.29 ) }
    dend_43 { pt3dadd( 83.6243, -92.7163, 9.8013, 0.29 ) }
    dend_43 { pt3dadd( 85.4708, -93.7201, 9.80712, 0.52 ) }
    dend_43 { pt3dadd( 87.3817, -94.6926, 9.77485, 0.29 ) }
    dend_43 { pt3dadd( 88.0863, -95.0279, 9.73883, 0.59 ) }
    dend_43 { pt3dadd( 88.6596, -95.2727, 9.70908, 0.59 ) }
    dend_43 { pt3dadd( 90.3327, -95.8687, 9.62614, 0.44 ) }
    dend_43 { pt3dadd( 90.5587, -95.9455, 9.6155, 0.44 ) }
    dend_43 { pt3dadd( 91.4823, -96.3537, 9.52378, 0.29 ) }
    dend_43 { pt3dadd( 91.6213, -96.4242, 9.50468, 0.29 ) }
    dend_43 { pt3dadd( 92.6383, -96.97, 9.34734, 0.29 ) }
    dend_43 { pt3dadd( 92.8483, -97.0927, 9.30981, 0.29 ) }
    dend_43 { pt3dadd( 93.7702, -97.6962, 9.11139, 0.29 ) }
    dend_43 { pt3dadd( 97.9681, -100.608, 8.20152, 0.29 ) }
    dend_43 { pt3dadd( 98.0386, -100.66, 8.18591, 0.29 ) }
    dend_43 { pt3dadd( 107.678, -106.283, 7.52918, 0.29 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 51/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 72.5482, -80.2522, 7.97105, 0.52 ) }
    dend_40 { pt3dadd( 72.4542, -80.1415, 7.97069, 0.52 ) }
    dend_40 { pt3dadd( 72.4219, -80.1046, 7.97695, 0.52 ) }
    dend_40 { pt3dadd( 71.986, -79.6096, 8.10332, 0.37 ) }
    dend_40 { pt3dadd( 71.3127, -78.879, 8.3312, 0.37 ) }
    dend_40 { pt3dadd( 70.7511, -78.3185, 8.50642, 0.59 ) }
    dend_40 { pt3dadd( 70.054, -77.7587, 8.63991, 0.59 ) }
    dend_40 { pt3dadd( 69.2427, -77.2077, 8.73302, 0.22 ) }
    dend_40 { pt3dadd( 69.2056, -77.1861, 8.73544, 0.22 ) }
    dend_40 { pt3dadd( 68.3817, -76.8076, 8.77556, 0.22 ) }
    dend_40 { pt3dadd( 67.8181, -76.6122, 8.78405, 0.22 ) }
    dend_40 { pt3dadd( 66.2342, -76.1871, 8.69954, 0.22 ) }
    dend_40 { pt3dadd( 66.0291, -76.1457, 8.67076, 0.66 ) }
    dend_40 { pt3dadd( 65.9808, -76.1365, 8.65903, 0.66 ) }
    dend_40 { pt3dadd( 65.2841, -76.0224, 8.47796, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 88.1288, -97.4886, 1.32058, 0.29 ) }
    dend_38 { pt3dadd( 93.211, -105.919, 0.384942, 0.29 ) }
    dend_38 { pt3dadd( 98.655, -114.179, 0.599741, 0.29 ) }
    dend_38 { pt3dadd( 104.447, -122.221, 0.853383, 0.29 ) }
    dend_38 { pt3dadd( 110.054, -130.29, 2.09912, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 71/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 88.1288, -97.4886, 1.32058, 0.74 ) }
    dend_37 { pt3dadd( 91.9554, -103.956, 0.582609, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -16.1599, -82.8857, 46.6336, 0.37 ) }
    dend_15 { pt3dadd( -12.85, -92.8257, 56.8312, 0.37 ) }
    dend_15 { pt3dadd( -10.669, -104.236, 65.525, 0.37 ) }
    dend_15 { pt3dadd( -7.27963, -115.23, 74.4327, 0.37 ) }
    dend_15 { pt3dadd( -4.46821, -126.524, 83.1207, 0.37 ) }
    dend_15 { pt3dadd( -2.93627, -136.948, 93.1971, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 79/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -16.1599, -82.8857, 46.6336, 0.29 ) }
    dend_14 { pt3dadd( -20.1725, -89.652, 53.3959, 0.37 ) }
    dend_14 { pt3dadd( -22.998, -97.8509, 58.9418, 0.37 ) }
    dend_14 { pt3dadd( -24.1255, -105.248, 66.1767, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 83/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -55.3965, -75.5893, 26.5477, 0.37 ) }
    dend_10 { pt3dadd( -63.7051, -75.59, 32.2473, 0.37 ) }
    dend_10 { pt3dadd( -72.6187, -76.026, 36.9282, 0.37 ) }
    dend_10 { pt3dadd( -81.391, -78.455, 41.1947, 0.37 ) }
    dend_10 { pt3dadd( -88.842, -81.5957, 47.1628, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -55.3965, -75.5893, 26.5477, 0.29 ) }
    dend_7 { pt3dadd( -61.5152, -75.94, 32.0131, 0.37 ) }
    dend_7 { pt3dadd( -66.5511, -77.0986, 38.3964, 0.37 ) }
    dend_7 { pt3dadd( -71.082, -77.6105, 45.2243, 0.37 ) }
    dend_7 { pt3dadd( -74.195, -77.3181, 52.8002, 0.37 ) }
    dend_7 { pt3dadd( -75.4251, -76.2285, 60.8027, 0.37 ) }
    dend_7 { pt3dadd( -75.3008, -73.7616, 68.5284, 0.37 ) }
    dend_7 { pt3dadd( -74.5118, -72.523, 76.5559, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 65.2841, -76.0224, 8.47796, 0.37 ) }
    dend_42 { pt3dadd( 65.3404, -76.1988, 8.49906, 0.37 ) }
    dend_42 { pt3dadd( 65.902, -77.9524, 8.55239, 0.37 ) }
    dend_42 { pt3dadd( 65.9516, -78.1048, 8.55131, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 66.6454, -80.2347, 8.53617, 0.37 ) }
    dend_42 { pt3dadd( 66.6683, -80.3051, 8.53567, 0.37 ) }
    dend_42 { pt3dadd( 67.5985, -83.161, 8.51537, 0.37 ) }
    dend_42 { pt3dadd( 67.6277, -83.2422, 8.5131, 0.37 ) }
    dend_42 { pt3dadd( 68.072, -84.2946, 8.40902, 0.37 ) }
    dend_42 { pt3dadd( 73.5103, -95.3477, 9.60547, 0.37 ) }
    dend_42 { pt3dadd( 77.4981, -106.67, 12.4266, 0.37 ) }
    dend_42 { pt3dadd( 81.7571, -117.754, 15.8096, 0.37 ) }
    dend_42 { pt3dadd( 86.923, -127.623, 21.3334, 0.37 ) }
    dend_42 { pt3dadd( 92.367, -137.466, 26.6416, 0.37 ) }
    dend_42 { pt3dadd( 96.2066, -147.351, 33.1121, 0.37 ) }
    dend_42 { pt3dadd( 98.1153, -158.423, 38.1912, 0.37 ) }
    dend_42 { pt3dadd( 102.042, -169.298, 42.5461, 0.37 ) }
    dend_42 { pt3dadd( 106.231, -179.956, 47.2277, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 65.2841, -76.0224, 8.47796, 0.37 ) }
    dend_41 { pt3dadd( 65.1969, -76.0104, 8.45952, 0.37 ) }
    dend_41 { pt3dadd( 65.134, -76.002, 8.45561, 0.37 ) }
    dend_41 { pt3dadd( 64.1089, -75.8669, 8.44601, 0.22 ) }
    dend_41 { pt3dadd( 63.778, -75.8001, 8.4532, 0.22 ) }
    dend_41 { pt3dadd( 62.9307, -75.5925, 8.48578, 0.22 ) }
    dend_41 { pt3dadd( 62.8615, -75.5715, 8.48976, 0.22 ) }
    dend_41 { pt3dadd( 61.8632, -75.2236, 8.57314, 0.22 ) }
    dend_41 { pt3dadd( 61.7371, -75.1755, 8.58709, 0.22 ) }
    dend_41 { pt3dadd( 60.9152, -74.8385, 8.69897, 0.22 ) }
    dend_41 { pt3dadd( 60.6941, -74.7471, 8.7239, 0.22 ) }
    dend_41 { pt3dadd( 59.7738, -74.3531, 8.80978, 0.22 ) }
    dend_41 { pt3dadd( 59.6684, -74.3066, 8.81889, 0.22 ) }
    dend_41 { pt3dadd( 58.0894, -73.5927, 8.93288, 0.22 ) }
    dend_41 { pt3dadd( 57.9261, -73.5201, 8.9432, 0.22 ) }
    dend_41 { pt3dadd( 56.3804, -72.8419, 9.0302, 0.22 ) }
    dend_41 { pt3dadd( 56.3167, -72.8087, 9.03321, 0.22 ) }
    dend_41 { pt3dadd( 55.259, -72.1687, 9.07962, 0.22 ) }
    dend_41 { pt3dadd( 55.0521, -72.0044, 9.08631, 0.22 ) }
    dend_41 { pt3dadd( 54.5162, -71.437, 9.09459, 0.22 ) }
    dend_41 { pt3dadd( 54.255, -71.1082, 9.09602, 0.22 ) }
    dend_41 { pt3dadd( 53.4935, -69.9596, 9.08297, 0.22 ) }
    dend_41 { pt3dadd( 53.4264, -69.8523, 9.08127, 0.22 ) }
    dend_41 { pt3dadd( 52.6151, -68.4353, 9.05074, 0.22 ) }
    dend_41 { pt3dadd( 52.5776, -68.3641, 9.0471, 0.22 ) }
    dend_41 { pt3dadd( 52.1009, -67.3876, 8.96913, 0.22 ) }
    dend_41 { pt3dadd( 51.9406, -67.063, 8.93063, 0.22 ) }
    dend_41 { pt3dadd( 51.5143, -66.2614, 8.79777, 0.22 ) }
    dend_41 { pt3dadd( 51.4524, -66.148, 8.77627, 0.22 ) }
    dend_41 { pt3dadd( 50.9738, -65.3455, 8.6148, 0.22 ) }
    dend_41 { pt3dadd( 50.9404, -65.2949, 8.60528, 0.22 ) }
    dend_41 { pt3dadd( 50.6589, -64.9003, 8.53551, 0.29 ) }
    dend_41 { pt3dadd( 50.3958, -64.5881, 8.47451, 0.29 ) }
    dend_41 { pt3dadd( 49.7484, -63.9407, 8.34799, 0.29 ) }
    dend_41 { pt3dadd( 49.3169, -63.5537, 8.28242, 0.29 ) }
    dend_41 { pt3dadd( 48.9494, -63.2569, 8.24443, 0.29 ) }
    dend_41 { pt3dadd( 48.8799, -63.203, 8.23773, 0.29 ) }
    dend_41 { pt3dadd( 48.1059, -62.6245, 8.16889, 0.29 ) }
    dend_41 { pt3dadd( 48.0485, -62.5823, 8.16397, 0.29 ) }
    dend_41 { pt3dadd( 47.3387, -62.0544, 8.10649, 0.29 ) }
    dend_41 { pt3dadd( 47.1176, -61.8875, 8.09242, 0.29 ) }
    dend_41 { pt3dadd( 46.555, -61.4695, 8.07921, 0.29 ) }
    dend_41 { pt3dadd( 46.214, -61.2155, 8.0884, 0.44 ) }
    dend_41 { pt3dadd( 45.9208, -60.9692, 8.11172, 0.52 ) }
    dend_41 { pt3dadd( 45.5825, -60.6598, 8.13203, 0.52 ) }
    dend_41 { pt3dadd( 45.5389, -60.6156, 8.13351, 0.52 ) }
    dend_41 { pt3dadd( 45.306, -60.3506, 8.13385, 0.29 ) }
    dend_41 { pt3dadd( 45.0742, -60.0601, 8.12285, 0.29 ) }
    dend_41 { pt3dadd( 44.4611, -59.2666, 8.07746, 0.29 ) }
    dend_41 { pt3dadd( 44.4208, -59.2198, 8.07552, 0.29 ) }
    dend_41 { pt3dadd( 44.0418, -58.8115, 8.06324, 0.29 ) }
    dend_41 { pt3dadd( 43.8809, -58.6398, 8.05355, 0.29 ) }
    dend_41 { pt3dadd( 43.6826, -58.4362, 8.03928, 0.29 ) }
    dend_41 { pt3dadd( 43.5526, -58.3012, 8.02847, 0.29 ) }
    dend_41 { pt3dadd( 42.8872, -57.6289, 7.97582, 0.29 ) }
    dend_41 { pt3dadd( 42.7499, -57.491, 7.96674, 0.29 ) }
    dend_41 { pt3dadd( 42.2329, -56.9515, 7.93258, 0.29 ) }
    dend_41 { pt3dadd( 42.019, -56.7186, 7.91884, 0.29 ) }
    dend_41 { pt3dadd( 41.2167, -55.8004, 7.86811, 0.29 ) }
    dend_41 { pt3dadd( 41.1327, -55.6984, 7.86228, 0.29 ) }
    dend_41 { pt3dadd( 40.6556, -55.082, 7.82493, 0.52 ) }
    dend_41 { pt3dadd( 40.3569, -54.6957, 7.80027, 0.52 ) }
    dend_41 { pt3dadd( 40.1422, -54.3992, 7.77808, 0.52 ) }
    dend_41 { pt3dadd( 39.9897, -54.1587, 7.75147, 0.37 ) }
    dend_41 { pt3dadd( 39.3202, -53.0088, 7.50386, 0.37 ) }
    dend_41 { pt3dadd( 39.2925, -52.9565, 7.4888, 0.37 ) }
    dend_41 { pt3dadd( 39.0882, -52.4905, 7.32152, 0.52 ) }
    dend_41 { pt3dadd( 38.7987, -51.7645, 7.02797, 0.81 ) }
    dend_41 { pt3dadd( 38.5506, -51.1326, 6.76004, 0.81 ) }
    dend_41 { pt3dadd( 38.1932, -50.2976, 6.41987, 0.37 ) }
    dend_41 { pt3dadd( 38.1397, -50.1856, 6.37882, 0.37 ) }
    dend_41 { pt3dadd( 37.8446, -49.6203, 6.19089, 0.37 ) }
    dend_41 { pt3dadd( 37.6978, -49.3852, 6.12197, 0.37 ) }
    dend_41 { pt3dadd( 37.2385, -48.7259, 5.94445, 0.29 ) }
    dend_41 { pt3dadd( 36.5562, -47.7694, 5.71761, 0.29 ) }
    dend_41 { pt3dadd( 35.5019, -46.3068, 5.4281, 0.29 ) }
    dend_41 { pt3dadd( 35.4411, -46.2224, 5.41125, 0.29 ) }
    dend_41 { pt3dadd( 34.5273, -44.9549, 5.15375, 0.29 ) }
    dend_41 { pt3dadd( 34.4795, -44.8826, 5.14076, 0.29 ) }
    dend_41 { pt3dadd( 33.9888, -44.0539, 5.00617, 0.29 ) }
    dend_41 { pt3dadd( 33.8645, -43.8141, 4.97771, 0.29 ) }
    dend_41 { pt3dadd( 33.5107, -43.0423, 4.92743, 0.29 ) }
    dend_41 { pt3dadd( 33.4207, -42.8069, 4.91477, 0.29 ) }
    dend_41 { pt3dadd( 33.1201, -41.8169, 4.8718, 0.29 ) }
    dend_41 { pt3dadd( 33.0992, -41.7508, 4.8678, 0.29 ) }
    dend_41 { pt3dadd( 32.5868, -40.1596, 4.75203, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_41 { pt3dadd( 32.548, -40.0358, 4.74047, 0.29 ) }
    dend_41 { pt3dadd( 32.2295, -39.0138, 4.62587, 0.29 ) }
    dend_41 { pt3dadd( 32.1925, -38.8902, 4.60852, 0.29 ) }
    dend_41 { pt3dadd( 31.5641, -36.6824, 4.21711, 0.29 ) }
    dend_41 { pt3dadd( 31.534, -36.5582, 4.19351, 0.29 ) }
    dend_41 { pt3dadd( 31.4135, -35.9503, 4.06995, 0.29 ) }
    dend_41 { pt3dadd( 31.387, -35.8256, 4.04516, 0.29 ) }
    dend_41 { pt3dadd( 31.1575, -34.9281, 3.85164, 0.29 ) }
    dend_41 { pt3dadd( 31.107, -34.7489, 3.81029, 0.29 ) }
    dend_41 { pt3dadd( 30.6666, -33.3285, 3.46029, 0.29 ) }
    dend_41 { pt3dadd( 30.5837, -33.0902, 3.40184, 0.29 ) }
    dend_41 { pt3dadd( 30.1417, -31.915, 3.12084, 0.29 ) }
    dend_41 { pt3dadd( 29.7588, -30.9332, 2.9667, 0.29 ) }
    dend_41 { pt3dadd( 29.7034, -30.8015, 2.94814, 0.29 ) }
    dend_41 { pt3dadd( 29.2714, -29.831, 2.82926, 0.29 ) }
    dend_41 { pt3dadd( 29.2141, -29.7137, 2.81943, 0.29 ) }
    dend_41 { pt3dadd( 28.5383, -28.2345, 2.73672, 0.29 ) }
    dend_41 { pt3dadd( 28.0627, -26.9352, 2.74978, 0.29 ) }
    dend_41 { pt3dadd( 23.2737, -19.8049, 1.02088, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -74.5118, -72.523, 76.5559, 0.37 ) }
    dend_9 { pt3dadd( -79.9323, -70.7071, 88.8105, 0.37 ) }
    dend_9 { pt3dadd( -85.1299, -70.3355, 101.326, 0.37 ) }
    dend_9 { pt3dadd( -89.3086, -69.4891, 114.172, 0.37 ) }
    dend_9 { pt3dadd( -93.7626, -70.5065, 126.957, 0.37 ) }
    dend_9 { pt3dadd( -96.9668, -72.7226, 139.972, 0.37 ) }
    dend_9 { pt3dadd( -98.1999, -74.4131, 153.38, 0.37 ) }
    dend_9 { pt3dadd( -100.999, -77.7826, 166.246, 0.37 ) }
    dend_9 { pt3dadd( -104.495, -79.8256, 179.213, 0.37 ) }
    dend_9 { pt3dadd( -107.713, -81.6443, 192.282, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -74.5118, -72.523, 76.5559, 0.29 ) }
    dend_8 { pt3dadd( -76.2564, -73.4817, 88.9697, 0.37 ) }
    dend_8 { pt3dadd( -76.9488, -75.7754, 101.322, 0.37 ) }
    dend_8 { pt3dadd( -80.1081, -79.1781, 113.012, 0.37 ) }
    dend_8 { pt3dadd( -83.7574, -81.7229, 124.781, 0.37 ) }
    dend_8 { pt3dadd( -86.8879, -84.099, 136.735, 0.37 ) }
    dend_8 { pt3dadd( -88.281, -86.2645, 149.051, 0.37 ) }
    dend_8 { pt3dadd( -90.2604, -86.719, 161.451, 0.37 ) }
    dend_8 { pt3dadd( -91.2911, -87.0724, 173.965, 0.37 ) }
    dend_8 { pt3dadd( -93.062, -86.7003, 186.381, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_69 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_58, dend_45, dend_24, dend_0, dend_73, dend_70, dend_68, dend_59, dend_49, dend_46, dend_30, dend_25, dend_21, dend_1, dend_77, dend_74, dend_72, dend_71, dend_63, dend_60, dend_55, dend_50, dend_48, dend_47, dend_34, dend_31, dend_27, dend_26, dend_23, dend_22, dend_16, dend_3, dend_2, dend_79, dend_78, dend_76, dend_75, dend_65, dend_64, dend_62, dend_61, dend_57, dend_56, dend_52, dend_51, dend_44, dend_35, dend_33, dend_32, dend_29, dend_28, dend_18, dend_17, dend_11, dend_4, dend_81, dend_80, dend_67, dend_66, dend_54, dend_53, dend_39, dend_36, dend_20, dend_19, dend_13, dend_12, dend_6, dend_5, dend_43, dend_40, dend_38, dend_37, dend_15, dend_14, dend_10, dend_7, dend_42, dend_41, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_77 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_74 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_72 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_71 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_60 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_47 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_22 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_76 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_65 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_64 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_62 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_61 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_56 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_51 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_4 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_80 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_67 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_54 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_53 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_20 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_19 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_13 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_12 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_6 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_5 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_15 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_10 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_7 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_42 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_41 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_9 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_8 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_69 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_70 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_58 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_73 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_68 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_63 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_55 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_57 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_35 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_39 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_78 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_40 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_79 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_75 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_81 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_14 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_37 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_38 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_66 OneSecGrp_SectionRef_63.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_69, dend_69, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_0, dend_0, dend_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_37, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_21 nseg = 3
    dend_77 nseg = 3
    dend_74 nseg = 3
    dend_72 nseg = 9
    dend_71 nseg = 7
    dend_60 nseg = 3
    dend_50 nseg = 3
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_34 nseg = 3
    dend_31 nseg = 5
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_2 nseg = 7
    dend_76 nseg = 3
    dend_65 nseg = 5
    dend_64 nseg = 5
    dend_62 nseg = 3
    dend_61 nseg = 5
    dend_56 nseg = 5
    dend_52 nseg = 3
    dend_51 nseg = 5
    dend_44 nseg = 5
    dend_33 nseg = 3
    dend_32 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_17 nseg = 11
    dend_4 nseg = 3
    dend_80 nseg = 3
    dend_67 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 7
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_6 nseg = 3
    dend_5 nseg = 7
    dend_43 nseg = 3
    dend_15 nseg = 3
    dend_10 nseg = 3
    dend_7 nseg = 3
    dend_42 nseg = 7
    dend_41 nseg = 3
    dend_9 nseg = 7
    dend_8 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_NBC_91e841ee63_0_0


