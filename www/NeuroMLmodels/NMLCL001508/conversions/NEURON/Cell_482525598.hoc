// Cell: Cell_482525598
/*
{
  "id" : "Cell_482525598",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "326.344, 508.279, 37.52, 13.1196", "332.904, 508.279, 37.52, 13.1196", "339.464, 508.279, 37.52, 13.1196" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "332.904, 508.279, 37.52, 1.0", "338.745, 522.095, 37.52, 1.0", "344.587, 535.911, 37.52, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "335.145, 503.456, 38.2847, 0.488", "334.913, 502.375, 38.4653, 0.7246", "334.755, 501.256, 38.4541, 0.8458", "334.835, 500.167, 38.2312, 1.2368", "335.155, 499.154, 37.8221, 1.6146", "334.914, 497.682, 37.242, 1.7128" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "337.304, 505.54, 41.9642, 0.2288", "338.374, 505.539, 41.932, 0.4294", "339.516, 505.574, 41.9073, 0.5428" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "330.03, 511.385, 30.0118, 0.2288", "329.062, 510.93, 28.8123, 0.6346", "328.266, 510.516, 28.2195, 0.567", "328.076, 510.246, 27.2502, 0.579", "328.581, 509.342, 26.2066, 0.6202", "329.202, 508.383, 25.2874, 0.6054", "329.541, 507.298, 24.4423, 0.5626" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "328.031, 509.996, 40.831, 0.4576", "327.089, 509.406, 40.8699, 0.4032", "326.141, 508.767, 40.8836, 0.377", "325.28, 508.014, 40.8957, 0.4374", "324.404, 507.278, 40.91, 0.4794", "323.316, 506.948, 40.9343, 0.4398", "322.187, 507.104, 40.9688, 0.4768", "321.095, 507.356, 40.9587, 0.469", "319.962, 507.393, 40.9534, 0.5962", "318.862, 507.561, 41.1149, 0.6016" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "336.916, 507.327, 46.7855, 0.2288", "337.76, 507.117, 47.2472, 0.2796", "338.137, 507.974, 47.4734, 0.305", "337.81, 509.07, 47.8733, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "344.587, 535.911, 37.52, 1.0", "350.428, 549.727, 37.52, 1.0", "356.269, 563.543, 37.52, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "334.914, 497.682, 37.242, 1.7128", "334.449, 496.803, 36.6624, 1.3856", "334.287, 495.678, 36.2914, 0.9628", "334.29, 494.563, 36.1771, 0.66", "334.371, 493.434, 36.232, 0.5068", "334.718, 492.346, 36.3541, 0.5304", "335.075, 491.267, 36.5364, 0.6812", "335.383, 490.19, 36.7626, 1.1288", "335.534, 489.06, 36.8816, 1.3716" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "334.914, 497.682, 37.242, 1.7128", "335.2, 497.664, 34.8695, 0.2288", "335.683, 497.356, 33.395, 0.5194", "336.371, 496.674, 32.7883, 0.5058", "337.444, 496.296, 32.2781, 0.4114", "338.529, 495.948, 31.8665, 0.3442", "339.67, 495.854, 31.5493, 0.382", "340.655, 495.363, 31.2452, 0.3498", "341.096, 494.486, 30.8862, 0.3306", "341.626, 493.732, 30.4772, 0.3262", "342.678, 493.619, 30.3262, 0.396", "343.722, 493.854, 30.3503, 0.3756", "344.574, 493.586, 30.5544, 0.3778", "345.312, 492.874, 30.763, 0.418", "346.176, 492.235, 30.6922, 0.545", "347.251, 492.004, 30.3705, 0.7536", "348.32, 491.775, 29.7996, 0.5836", "349.229, 491.227, 29.0618, 0.4564", "349.233, 490.417, 28.1014, 0.4518", "349.228, 489.61, 27.0903, 0.4638", "350.224, 489.591, 26.0492, 0.617", "350.66, 490.281, 24.892, 0.4914", "351.535, 490.182, 23.7538, 0.419", "352.536, 489.904, 22.6786, 0.4212" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "339.516, 505.574, 41.9073, 0.5428", "340.448, 505.758, 41.6987, 0.8646", "341.514, 505.967, 41.3322, 0.9172", "342.604, 505.986, 40.8626, 0.9108", "343.695, 505.95, 40.3362, 0.9464", "344.773, 505.738, 39.7998, 0.783", "345.907, 505.796, 39.4156, 0.6766", "346.926, 506.254, 39.2479, 0.6708", "347.954, 506.731, 39.114, 0.6446", "349.046, 506.974, 39.1174, 0.6712", "350.138, 507.279, 39.0832, 0.5832", "351.274, 507.4, 39.0634, 0.6302" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "339.516, 505.574, 41.9073, 0.5428", "340.048, 506.15, 43.5988, 0.2288", "341.027, 506.651, 44.3876, 0.2746", "342.027, 507.052, 44.7555, 0.2746", "343.056, 506.829, 45.2054, 0.2746", "344.083, 506.595, 45.7013, 0.2748", "345.057, 507.107, 46.235, 0.2748", "345.546, 507.365, 46.4929, 0.2752", "346.547, 507.919, 46.7323, 0.2758", "347.482, 507.426, 47.0784, 0.2766", "348.236, 506.758, 47.5913, 0.2782", "348.934, 506.074, 48.246, 0.2814", "350.036, 505.79, 48.8225, 0.287", "351.144, 505.735, 49.3514, 0.2988", "351.607, 506.56, 49.908, 0.3142", "352.035, 507.476, 50.5305, 0.3734", "352.947, 507.658, 51.1006, 0.334", "353.999, 507.33, 51.6645, 0.3002", "355.05, 507.183, 52.2796, 0.275", "356.146, 507.298, 52.8948, 0.2754" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "329.541, 507.298, 24.4423, 0.5626", "329.518, 505.85, 23.5802, 0.5572", "329.377, 504.777, 22.7741, 0.4188", "329.535, 503.77, 21.8876, 0.3256", "328.884, 502.937, 20.9684, 0.275" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "329.541, 507.298, 24.4423, 0.5626", "329.613, 507.128, 21.6552, 0.6864", "330.223, 506.647, 20.8093, 0.4764", "331.324, 506.339, 20.517, 0.38", "332.465, 506.261, 20.2734, 0.401", "333.591, 506.141, 20.0273, 0.3872", "334.665, 505.885, 19.7982, 0.3882", "335.579, 505.324, 19.6246, 0.4892", "336.723, 505.324, 19.4992, 0.4254", "337.867, 505.324, 19.381, 0.38", "338.953, 505.529, 19.201, 0.4008", "340.012, 505.854, 18.9574, 0.3866", "341.102, 506.199, 18.7631, 0.3874", "342.111, 506.739, 18.6063, 0.4878", "343.192, 507.111, 18.4817, 0.422", "344.329, 507.155, 18.3809, 0.3794", "345.473, 507.155, 18.2924, 0.3716", "346.617, 507.155, 18.1927, 0.4692", "347.761, 507.155, 18.0594, 0.5636", "348.895, 507.188, 17.8864, 0.4724", "349.95, 507.478, 17.6145, 0.4518", "350.8, 507.687, 17.1772, 0.3798", "351.804, 507.746, 16.6384, 0.4104", "352.922, 507.746, 16.179, 0.3554", "353.763, 507.147, 15.9754, 0.34", "354.661, 506.544, 15.9536, 0.3486", "355.789, 506.45, 15.9852, 0.4112", "356.682, 506.675, 16.242, 0.5324", "357.737, 507.039, 16.4914, 0.731", "358.781, 507.383, 16.7163, 0.5404", "359.912, 507.326, 16.823, 0.3818", "360.943, 506.944, 16.8325, 0.285", "362.087, 506.926, 16.7644, 0.294", "362.633, 506.768, 16.4828, 0.311", "363.571, 506.909, 16.0538, 0.3406", "364.437, 507.383, 15.6447, 0.4026", "365.581, 507.383, 15.3014, 0.4858", "366.511, 507.603, 15.1407, 0.7938", "366.972, 508.047, 14.7994, 0.6166", "367.508, 509.04, 14.5214, 0.4888", "368.349, 509.77, 14.2876, 0.4238", "369.436, 509.901, 14.0011, 0.6102", "369.912, 509.832, 13.6987, 0.6102", "370.989, 509.673, 12.8568, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "318.862, 507.561, 41.1149, 0.6016", "318.284, 508.323, 41.0194, 0.6864", "317.658, 509.122, 41.3809, 0.4518", "316.843, 509.772, 41.5274, 0.34", "315.773, 509.879, 41.5268, 0.3016", "314.637, 509.915, 41.4313, 0.3242", "313.602, 510.356, 41.2502, 0.3686", "312.69, 511.03, 40.9632, 0.4404", "311.838, 511.521, 40.4404, 0.623", "310.923, 511.844, 39.7443, 0.721", "309.827, 511.916, 39.0992, 0.6994", "308.691, 511.798, 38.5739, 0.7296", "307.569, 511.596, 38.1184, 0.6748", "306.527, 511.805, 37.6317, 0.8814", "305.551, 512.272, 37.1353, 0.9116", "304.604, 512.895, 36.724, 0.6214", "303.52, 513.235, 36.3824, 0.391", "302.424, 512.98, 36.0623, 0.3018", "301.417, 512.537, 35.6958, 0.3248", "300.342, 512.815, 35.474, 0.3692", "299.272, 513.196, 35.3116, 0.443", "298.24, 513.261, 34.9549, 0.6218", "297.16, 513.021, 34.5206, 0.748", "296.034, 512.918, 34.1737, 0.6068", "294.941, 513.196, 33.8691, 0.565", "293.946, 513.615, 33.3964, 0.562", "292.925, 513.808, 32.7754, 0.6532", "291.954, 513.969, 32.0348, 0.5812", "291.09, 514.599, 31.274, 0.7042", "290.527, 515.547, 30.5376, 0.601", "289.702, 516.254, 29.9368, 0.6456", "288.605, 516.085, 29.4711, 0.7266", "287.645, 515.494, 29.0472, 0.8848", "286.583, 515.279, 28.6051, 0.683", "285.534, 515.561, 28.091, 0.6514", "284.544, 515.483, 27.5279, 0.5318", "283.558, 514.944, 26.9805, 0.6066", "283.03, 514.108, 26.3393, 0.6778", "282.687, 513.519, 25.8479, 0.9084", "281.712, 512.946, 25.5116, 0.8574", "280.634, 513.151, 25.3753, 0.7986", "279.594, 513.62, 25.2941, 0.5164", "278.88, 513.881, 24.9099, 0.3752", "277.808, 513.965, 24.5689, 0.319", "276.676, 514.117, 24.2914, 0.36", "275.536, 514.15, 24.045, 0.4182", "274.399, 514.082, 23.8123, 0.6124", "273.335, 513.706, 23.5533, 0.5546", "272.418, 514.353, 23.3825, 0.416", "271.373, 514.745, 23.1039, 0.311", "270.244, 514.622, 22.7312, 0.295", "269.517, 514.018, 22.1724, 0.3124", "269.582, 514.185, 21.2293, 0.3438", "269.653, 513.6, 20.1572, 0.4056", "268.777, 512.965, 19.2189, 0.5046", "267.66, 512.735, 18.4856, 0.7652", "266.563, 512.861, 17.9256, 0.8728", "265.467, 513.143, 17.5459, 0.8348", "264.35, 513.167, 17.3782, 0.5466", "263.546, 512.634, 17.2337, 0.3834", "264.193, 511.813, 17.0008, 0.3372", "263.925, 510.772, 16.6695, 0.3798", "263.203, 509.991, 16.2366, 0.5228", "262.811, 509.026, 15.7892, 0.4764", "262.14, 508.165, 15.3499, 0.5306", "261.229, 507.496, 15.0797, 0.4072", "260.203, 506.996, 14.9218, 0.351", "259.065, 507.047, 14.7851, 0.324", "257.946, 507.207, 14.7162, 0.3558", "256.841, 507.456, 14.6714, 0.4762", "255.743, 507.774, 14.5625, 0.4002", "254.692, 508.14, 14.3251, 0.3384", "253.587, 508.035, 14.035, 0.2994", "252.624, 507.572, 13.6133, 0.3164", "251.88, 506.738, 13.1538, 0.373", "251.115, 505.917, 12.7022, 0.356", "250.296, 505.149, 11.807, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "318.862, 507.561, 41.1149, 0.6016", "318.22, 507.331, 41.5265, 0.5876", "317.497, 506.546, 42.0428, 0.677", "316.942, 505.548, 42.4945, 0.9688", "316.231, 504.7, 42.7745, 0.8978" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "335.534, 489.06, 36.8816, 1.3716", "335.287, 488.377, 36.93, 1.2398", "335.092, 487.25, 36.9396, 0.8466", "334.623, 486.24, 36.8348, 0.6112", "333.848, 485.4, 36.729, 0.5222" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "335.534, 489.06, 36.8816, 1.3716", "335.569, 488.599, 36.7954, 0.2288", "335.651, 487.511, 35.7473, 0.3848", "335.66, 486.405, 35.2946, 0.508", "335.731, 485.278, 34.8088, 0.5656", "336.26, 484.333, 34.2588, 0.8162", "337.257, 483.78, 33.7582, 0.8122", "338.201, 483.263, 33.2147, 0.5612", "339.158, 483.059, 32.5864, 0.364", "340.194, 482.817, 32.0012, 0.299", "340.992, 482.038, 31.5941, 0.3194", "341.429, 481.012, 31.3888, 0.3608", "342.257, 480.302, 31.3328, 0.4196", "343.341, 479.987, 31.2768, 0.6148", "344.438, 479.776, 31.1906, 0.5592", "345.553, 479.68, 31.1321, 0.4244", "346.686, 479.798, 31.1147, 0.3274" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "352.536, 489.904, 22.6786, 0.4212", "351.89, 489.431, 21.8795, 0.4478", "351.788, 488.621, 21.1725, 0.3886", "351.407, 488.083, 20.3333, 0.3486", "350.673, 487.416, 19.728, 0.3906", "349.677, 486.862, 19.2945, 0.3654", "349.344, 486.896, 18.9512, 0.3592", "348.221, 487.005, 18.6178, 0.3812", "347.079, 487.067, 18.3702, 0.4874", "345.991, 487.301, 18.1359, 0.5952", "344.944, 487.66, 17.834, 0.5404", "343.814, 487.693, 17.5375, 0.5324", "342.706, 487.893, 17.2981, 0.75", "341.716, 488.418, 17.1391, 0.7112", "340.664, 488.617, 17.1074, 0.4976", "340.195, 487.826, 17.0957, 0.3304", "339.793, 486.781, 17.0814, 0.284", "339.126, 487.26, 17.0808, 0.2918", "338.351, 488.097, 17.0738, 0.3066", "337.799, 488.16, 17.3678, 0.3334", "336.707, 487.942, 17.5266, 0.3866", "336.125, 487.924, 17.2438, 0.467", "335.257, 488.638, 16.9831, 0.7068", "334.27, 488.943, 16.6404, 0.7086", "333.231, 489.075, 16.177, 0.8038", "332.195, 489.26, 15.7038, 0.5338", "331.356, 489.533, 15.2681, 0.37", "330.225, 489.618, 14.9856, 0.2626", "329.125, 489.921, 14.7879, 0.2542", "327.984, 489.979, 14.6728, 0.2288", "326.84, 489.99, 14.6045, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "352.536, 489.904, 22.6786, 0.4212", "353.141, 489.593, 21.3055, 0.2288", "354.126, 489.086, 19.9648, 0.5878", "355.13, 488.582, 19.4569, 0.5872", "355.66, 487.917, 18.7188, 0.7828", "356.166, 487.402, 17.817, 0.6468", "356.788, 487.338, 16.8356, 0.5282", "357.275, 486.431, 16.2369, 0.3476", "357.966, 485.659, 15.9636, 0.2796", "359.032, 485.376, 15.7612, 0.2288", "359.404, 485.834, 14.7846, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "351.274, 507.4, 39.0634, 0.6302", "351.23, 507.831, 38.8917, 0.8428", "352.079, 508.405, 38.712, 0.6248", "353.211, 508.563, 38.5717, 0.449", "354.328, 508.713, 38.4619, 0.3876", "355.392, 509.095, 38.3967, 0.361", "356.438, 509.518, 38.3664, 0.345", "357.502, 509.881, 38.36, 0.3836", "358.614, 509.943, 38.3023, 0.3526", "359.7, 510.222, 38.3387, 0.3358", "360.637, 510.853, 38.4423, 0.3358", "361.646, 511.378, 38.5339, 0.4134", "362.782, 511.485, 38.6285, 0.4102", "363.904, 511.497, 38.7632, 0.4318", "365.024, 511.578, 38.7825, 0.5668", "366.117, 511.913, 38.7545, 0.5832", "367.174, 512.346, 38.7173, 0.605", "368.167, 512.91, 38.682, 0.4602", "369.252, 513.233, 38.6492, 0.4042", "370.356, 513.047, 38.6232, 0.411", "371.239, 512.322, 38.6123, 0.5754", "372.199, 511.717, 38.5994, 0.5988", "373.307, 511.438, 38.5787, 0.636", "374.432, 511.257, 38.5594, 0.5074", "375.535, 510.996, 38.5585, 0.5408", "376.66, 510.829, 38.4922, 0.4272", "377.752, 510.582, 38.3286, 0.383", "378.872, 510.519, 38.0878, 0.4066", "379.94, 510.256, 37.8221, 0.3976", "380.806, 509.53, 37.5651, 0.407", "381.681, 508.9, 37.3198, 0.5264", "382.792, 508.712, 37.2064, 0.483", "383.914, 508.571, 37.1627, 0.5432", "384.99, 508.197, 37.1216, 0.43", "386.037, 507.738, 37.0549, 0.3956", "387.115, 507.478, 36.9121, 0.394", "388.213, 507.594, 36.6901, 0.5486", "389.327, 507.801, 36.465, 0.5264", "390.438, 507.762, 36.2104, 0.613", "391.517, 507.543, 35.9486, 0.6108", "392.623, 507.378, 35.8193, 0.4816", "393.745, 507.444, 35.7988, 0.391", "394.788, 507.796, 35.7594, 0.4166", "395.761, 508.337, 35.7291, 0.4396", "396.818, 508.674, 35.7126, 0.3718", "397.928, 508.882, 35.6303, 0.3242", "399.05, 509.089, 35.5345, 0.3142", "400.184, 509.152, 35.4659, 0.3734", "401.29, 508.914, 35.4334, 0.334", "402.396, 508.648, 35.4253, 0.3002", "403.529, 508.486, 35.4334, 0.275", "404.577, 508.18, 35.5387, 0.2754", "405.611, 507.753, 35.6815, 0.2764", "406.568, 507.136, 35.7538, 0.2778", "407.298, 506.275, 35.7266, 0.2806", "407.998, 505.389, 35.5933, 0.2856", "408.82, 504.66, 35.3556, 0.2952", "409.754, 504.105, 35.0008, 0.3124", "410.69, 503.475, 34.6794, 0.3464", "411.626, 502.818, 34.4495, 0.3984", "412.624, 502.374, 34.305, 0.5498", "413.647, 502.885, 34.2342, 0.5622", "414.672, 503.389, 34.2224, 0.5164", "415.812, 503.49, 34.2549, 0.537", "416.951, 503.592, 34.3126, 0.7484", "418.062, 503.449, 34.389, 0.9858", "419.144, 503.081, 34.4842, 1.0324", "420.241, 502.795, 34.6142, 0.7418", "421.167, 502.543, 34.8916, 0.66", "421.915, 501.905, 35.2584, 0.5772", "422.271, 500.906, 35.4516, 0.5478", "423.098, 500.116, 35.6258, 0.5766", "424.112, 499.648, 35.8002, 0.913", "425.081, 499.264, 36.092, 0.849", "426.197, 499.113, 36.332, 0.8638", "427.013, 498.794, 36.6108, 0.704", "428.056, 498.386, 36.948, 0.6274", "429.11, 497.968, 37.2579, 0.7944", "430.172, 497.544, 37.5012, 0.7464", "431.177, 497.018, 37.6916, 0.5626", "432.092, 496.331, 37.8619, 0.4534", "433.081, 495.835, 38.0447, 0.4996", "434.187, 495.641, 38.2897, 0.752", "435.294, 495.456, 38.5865, 0.8674", "436.405, 495.291, 38.9192, 0.7342", "437.503, 495.088, 39.254, 0.7996", "438.502, 494.588, 39.44, 0.7766", "439.504, 494.083, 39.5553, 0.7486", "440.518, 493.564, 39.7211, 0.624", "441.48, 493.034, 39.9871, 0.5192", "442.333, 492.485, 40.4362, 0.6266", "443.311, 492.005, 40.9346, 0.5032", "444.355, 491.562, 41.4159, 0.4704", "445.451, 491.264, 41.8141, 0.3718", "446.57, 491.028, 42.1086, 0.3724", "447.695, 490.864, 42.3329, 0.3982", "448.832, 490.844, 42.5342, 0.5564", "449.97, 490.823, 42.7316, 0.5406", "451.063, 490.587, 42.957, 0.6406", "452.149, 490.31, 43.2023, 0.6564", "453.25, 490.019, 43.3818, 0.593", "454.357, 489.725, 43.4899, 0.4674", "455.136, 489.17, 43.3712, 0.5042", "456.183, 489.165, 43.1855, 0.4054", "456.923, 488.977, 43.0889, 0.3482", "457.679, 488.117, 43.104, 0.3162", "458.312, 487.26, 43.3555, 0.3548", "459.027, 486.409, 43.7153, 0.4078", "460.087, 486.064, 44.1843, 0.5978", "461.016, 485.834, 44.8608, 0.503", "461.984, 485.563, 45.6333, 0.4408", "462.932, 485.23, 46.4442, 0.4566", "463.744, 484.728, 47.1313, 0.5396", "464.831, 484.503, 47.5793, 0.4332", "465.941, 484.682, 47.8775, 0.3532", "467.07, 484.693, 48.0665, 0.321", "468.137, 484.489, 48.2236, 0.386", "468.891, 483.722, 48.4484, 0.3584", "469.669, 482.884, 48.6256, 0.3402", "470.311, 481.95, 48.7724, 0.3746", "470.594, 480.858, 48.8818, 0.3358", "470.81, 479.736, 48.9583, 0.3036", "471.087, 478.627, 49.0118, 0.2814", "472.03, 478.051, 49.0563, 0.2874", "472.994, 477.443, 49.124, 0.2992", "473.965, 476.841, 49.1943, 0.315", "474.967, 476.288, 49.278, 0.375", "475.679, 475.621, 49.5365, 0.3368", "476.722, 475.156, 49.7504, 0.3056", "477.591, 474.459, 49.9262, 0.2848", "478.062, 473.425, 50.0702, 0.2938", "478.818, 472.62, 50.1886, 0.31", "479.527, 471.732, 50.2838, 0.3422", "479.82, 470.632, 50.3692, 0.3904", "480.0, 469.595, 50.5652, 0.536", "480.877, 468.871, 50.7707, 0.5318", "481.875, 468.32, 50.9418, 0.4836", "482.567, 467.421, 51.07, 0.3596", "482.959, 466.358, 51.1566, 0.3004", "483.038, 465.224, 51.2039, 0.2754", "483.196, 464.114, 51.2327, 0.2764", "483.846, 463.249, 51.3374, 0.278", "484.767, 462.766, 51.2999, 0.281", "485.49, 461.884, 51.235, 0.286", "486.176, 460.969, 51.165, 0.297", "487.025, 460.25, 51.0779, 0.3108", "487.267, 459.184, 50.9788, 0.3672", "487.874, 458.245, 50.874, 0.322", "488.687, 457.489, 50.7777, 0.2796", "489.809, 457.423, 50.6198, 0.2288", "490.803, 456.987, 50.0405, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "351.274, 507.4, 39.0634, 0.6302", "352.234, 507.494, 39.8093, 0.2288", "353.343, 507.383, 40.3662, 0.5374", "354.463, 507.366, 40.6188, 0.5118", "355.584, 507.379, 40.9119, 0.555", "356.697, 507.46, 41.0782, 0.653", "357.745, 507.889, 41.1925, 0.5202", "358.803, 508.294, 41.249, 0.4254", "359.91, 508.251, 41.4092, 0.4328", "360.998, 508.052, 41.6889, 0.4704", "362.042, 507.597, 42.012, 0.4248", "363.155, 507.34, 42.345, 0.4418", "364.274, 507.15, 42.7188, 0.4392" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "356.146, 507.298, 52.8948, 0.2754", "356.652, 507.305, 53.3988, 0.2764", "357.643, 506.948, 53.8927, 0.278", "358.5, 506.225, 54.3589, 0.281", "359.39, 505.516, 54.7417, 0.2864", "360.338, 504.883, 55.0735, 0.2966", "361.375, 504.585, 55.4389, 0.316", "362.402, 504.177, 55.8312, 0.3474", "363.067, 503.336, 56.2332, 0.4294", "363.546, 502.292, 56.4432, 0.4642", "364.404, 501.582, 56.7017, 0.4126", "365.243, 501.013, 57.1124, 0.4238", "366.151, 500.398, 57.5851, 0.3824", "366.818, 499.477, 58.0258, 0.3794", "367.478, 498.571, 58.3906, 0.473", "368.103, 497.79, 58.8683, 0.3944", "368.154, 497.218, 59.2754, 0.3276", "368.255, 496.083, 59.6512, 0.2784", "368.267, 494.94, 59.9973, 0.2818", "368.267, 493.796, 60.3408, 0.2882", "368.31, 492.737, 60.779, 0.2994", "368.719, 492.245, 61.4202, 0.3228", "369.792, 492.245, 62.1359, 0.3538", "370.892, 491.958, 62.7872, 0.4722", "371.908, 491.794, 63.5247, 0.3934", "372.901, 492.032, 64.2625, 0.3254", "373.826, 491.822, 64.9104, 0.2746", "374.781, 491.233, 65.4951, 0.2746", "375.781, 490.695, 65.9974, 0.2746", "376.882, 490.419, 66.416, 0.2746", "377.782, 489.789, 66.7814, 0.2746", "378.422, 489.322, 67.3722, 0.2746", "379.138, 488.479, 67.9658, 0.2746", "379.894, 487.638, 68.5286, 0.2746", "380.824, 487.027, 68.9528, 0.2746", "381.62, 486.296, 69.3171, 0.2746", "382.225, 485.453, 69.7978, 0.2746", "383.096, 484.938, 70.376, 0.2746", "383.718, 484.187, 71.0279, 0.2746", "383.863, 483.386, 71.874, 0.2746", "384.191, 482.431, 72.6597, 0.2746", "384.946, 481.613, 73.2368, 0.2746", "385.839, 480.898, 73.6182, 0.2746", "386.792, 480.283, 73.8461, 0.2746", "387.639, 479.514, 73.9642, 0.2746", "388.466, 478.724, 74.0102, 0.2746", "389.262, 477.903, 74.0449, 0.2746", "389.963, 477.009, 74.0936, 0.2746", "390.534, 476.018, 74.1602, 0.2746", "390.946, 474.973, 74.2546, 0.2746", "391.088, 473.838, 74.3893, 0.2746", "391.23, 472.703, 74.5788, 0.2746", "391.574, 471.615, 74.8314, 0.2746", "392.013, 470.559, 75.1489, 0.2746", "391.886, 470.789, 75.7162, 0.2746", "392.725, 470.477, 76.526, 0.2746", "393.59, 470.146, 77.4998, 0.2746", "394.43, 469.398, 78.3521, 0.2746", "395.267, 468.619, 79.0796, 0.2746", "395.895, 467.763, 79.8174, 0.2744", "396.441, 466.879, 80.5832, 0.2744", "396.987, 465.995, 81.363, 0.2742", "397.534, 465.109, 82.1514, 0.2736", "398.08, 464.225, 82.9413, 0.2728", "398.874, 463.437, 83.5534, 0.2712", "399.724, 462.67, 83.963, 0.2684", "400.573, 461.904, 84.2092, 0.2626", "401.422, 461.137, 84.3368, 0.2542", "402.272, 460.371, 84.3875, 0.2288", "403.12, 459.604, 84.4052, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "356.146, 507.298, 52.8948, 0.2754", "356.249, 507.41, 53.4792, 0.2288", "356.956, 508.181, 54.9856, 0.2746", "357.752, 508.833, 55.6354, 0.2746", "358.846, 509.085, 56.3282, 0.2746", "359.881, 509.352, 57.0763, 0.2746", "360.295, 509.6, 58.0199, 0.2746", "360.4, 509.662, 58.8493, 0.2746", "361.387, 510.103, 59.6574, 0.2746", "361.704, 510.035, 60.3593, 0.2746", "362.78, 509.804, 61.0641, 0.2746", "363.846, 509.693, 61.7758, 0.2746", "364.886, 509.85, 62.517, 0.2746", "365.936, 510.06, 63.2741, 0.2746", "367.004, 510.373, 63.982, 0.2746", "368.096, 510.64, 64.619, 0.2746", "369.22, 510.84, 65.1414, 0.2746", "370.339, 511.019, 65.5872, 0.2746", "371.411, 511.019, 66.087, 0.2746", "372.482, 511.019, 66.6322, 0.2746", "373.597, 511.227, 67.0653, 0.2746", "374.716, 511.438, 67.4153, 0.2744", "375.838, 511.527, 67.786, 0.2744", "376.961, 511.617, 68.1626, 0.2742", "378.084, 511.629, 68.535, 0.2736", "379.208, 511.629, 68.9074, 0.2728", "380.205, 511.123, 69.2871, 0.2712", "381.198, 510.596, 69.6447, 0.2684", "382.311, 510.342, 69.8748, 0.2626", "383.423, 510.103, 70.0017, 0.2542", "384.489, 510.336, 70.0753, 0.2288", "385.5, 510.56, 70.5116, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "328.884, 502.937, 20.9684, 0.275", "328.496, 502.502, 19.7484, 0.2752", "328.154, 502.119, 18.4108, 0.276", "328.002, 501.022, 17.397, 0.277", "327.984, 499.879, 16.6855, 0.2792", "327.984, 498.735, 16.238, 0.2832", "327.984, 497.591, 15.997, 0.2906", "327.678, 496.51, 15.918, 0.304", "327.225, 495.46, 15.9116, 0.3304", "326.676, 494.461, 15.9076, 0.3722", "326.048, 493.504, 15.9018, 0.485", "325.609, 492.467, 15.8936, 0.5212", "325.347, 491.354, 15.8824, 0.744", "325.063, 490.246, 15.8668, 0.6276", "324.777, 489.151, 15.8446, 0.4662", "324.76, 488.01, 15.8144, 0.3592", "324.431, 487.16, 15.7724, 0.3736", "323.916, 486.429, 15.7111, 0.51", "323.662, 485.315, 15.6232, 0.459", "323.523, 484.182, 15.507, 0.4676", "323.263, 483.095, 15.365, 0.4398", "323.103, 482.616, 15.0024, 0.3722", "322.947, 482.086, 14.6513, 0.324", "322.402, 481.929, 14.2503, 0.319", "321.415, 481.369, 13.9566, 0.358", "320.604, 480.581, 13.7634, 0.4244", "319.951, 479.645, 13.6825, 0.5764", "319.387, 478.656, 13.6959, 0.7172", "318.874, 477.633, 13.7472, 0.976", "318.414, 476.587, 13.8253, 1.0096", "317.99, 475.524, 13.9068, 0.9508", "317.748, 474.45, 14.044, 0.743", "317.772, 473.359, 14.271, 0.6102", "318.064, 472.254, 14.4452, 0.7366", "318.181, 471.121, 14.5687, 0.7648", "317.866, 470.02, 14.6446, 0.6738", "317.507, 468.944, 14.6773, 0.743", "316.726, 468.112, 14.6689, 0.8622", "315.928, 467.293, 14.6317, 0.8964", "315.444, 466.34, 14.4864, 0.7226", "315.238, 465.261, 14.4542, 0.637", "314.712, 464.256, 14.4298, 0.4746", "314.553, 463.203, 14.2811, 0.4188", "314.754, 462.092, 14.1663, 0.4984", "315.314, 461.15, 14.1271, 0.4434", "315.383, 460.052, 14.2299, 0.408", "315.114, 458.968, 14.329, 0.4788", "314.938, 457.841, 14.3987, 0.4054", "314.816, 456.704, 14.4357, 0.3482", "314.694, 455.567, 14.422, 0.3162", "314.836, 454.453, 14.3007, 0.355", "314.991, 453.339, 14.1033, 0.4082", "314.602, 452.264, 13.9499, 0.5984", "314.205, 451.193, 13.8457, 0.5052", "313.831, 450.111, 13.7894, 0.438", "313.463, 449.028, 13.7782, 0.4872", "313.424, 447.917, 13.8071, 0.4206", "313.608, 446.788, 13.8614, 0.3766", "313.696, 445.661, 13.9558, 0.3666", "313.632, 444.535, 14.1285, 0.4604", "313.688, 443.404, 14.2733, 0.546", "313.774, 442.27, 14.3867, 0.445", "313.899, 441.14, 14.5256, 0.375", "314.077, 440.013, 14.7473, 0.3636", "313.914, 438.963, 15.1217, 0.4546", "313.61, 437.943, 15.6439, 0.5354", "313.203, 436.917, 16.2285, 0.4258", "312.903, 435.935, 16.8633, 0.3386", "312.741, 435.079, 17.5963, 0.3002", "312.7, 434.004, 18.0432, 0.3166", "312.551, 432.87, 18.3355, 0.378", "312.587, 432.599, 18.5486, 0.3426", "312.732, 431.483, 18.765, 0.3158", "312.85, 430.361, 18.979, 0.305", "312.801, 429.22, 19.154, 0.3258", "312.74, 428.079, 19.3292, 0.3952", "312.456, 426.973, 19.4902, 0.3736", "312.226, 425.857, 19.6151, 0.3754", "312.151, 424.718, 19.6678, 0.4062", "312.094, 423.599, 19.7098, 0.559", "311.883, 422.574, 19.8713, 0.6052", "311.788, 421.493, 20.069, 0.4702", "312.104, 420.507, 20.0376, 0.3748", "312.212, 419.457, 19.8008, 0.3606", "312.449, 418.727, 19.4765, 0.4614", "312.473, 417.751, 19.264, 0.4888", "311.974, 416.732, 19.0529, 0.6274", "311.375, 415.762, 18.8454, 0.6866", "310.975, 414.756, 18.5825, 0.6124", "310.583, 413.684, 18.3464, 0.6816", "310.28, 412.596, 18.0939, 0.7224", "310.087, 411.49, 17.7962, 0.7644", "310.017, 410.377, 17.5193, 0.5472", "310.205, 409.249, 17.3289, 0.434", "310.393, 408.121, 17.2133, 0.4204", "310.289, 406.986, 17.1461, 0.5864", "309.684, 406.047, 17.115, 0.6508", "309.5, 404.936, 17.1578, 0.5802", "309.992, 404.007, 17.2164, 0.4554", "310.22, 402.939, 17.1945, 0.4248", "310.353, 401.801, 17.1346, 0.5354", "310.374, 400.664, 17.0206, 0.616", "310.299, 399.525, 16.8476, 0.9114", "310.089, 398.409, 16.6362, 0.9802", "309.704, 397.502, 16.2795, 0.9136", "309.516, 396.491, 15.8424, 0.818", "309.926, 395.441, 15.482, 0.7354", "310.533, 394.475, 15.2692, 0.809", "311.066, 393.491, 15.2558, 0.7598", "311.771, 392.694, 15.4496, 0.6544", "312.725, 392.117, 15.6803, 0.5288", "313.843, 391.938, 15.899, 0.6434", "314.872, 391.613, 16.116, 0.5406", "315.678, 390.867, 16.359, 0.507", "316.071, 389.808, 16.5693, 0.5992", "316.596, 388.864, 16.588, 0.706", "317.14, 387.885, 16.6051, 0.5282", "317.283, 386.805, 16.7213, 0.4238", "317.283, 385.674, 16.8414, 0.2796", "317.74, 384.638, 17.0593, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "328.884, 502.937, 20.9684, 0.275", "328.963, 502.581, 19.6596, 0.2288", "330.044, 502.349, 18.9521, 0.3818", "330.161, 501.527, 18.6155, 0.3496", "330.273, 500.46, 18.179, 0.3294", "329.586, 500.288, 17.563, 0.3284" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "316.231, 504.7, 42.7745, 0.8978", "315.733, 503.97, 42.7776, 0.4576", "314.917, 503.993, 43.86, 0.4512", "313.839, 503.933, 44.3265, 0.4978", "312.699, 503.86, 44.6947, 0.5086", "311.59, 504.134, 44.954, 0.666", "310.451, 504.161, 45.0884, 0.749", "309.314, 504.16, 45.1077, 0.7726" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "316.231, 504.7, 42.7745, 0.8978", "316.004, 504.157, 43.0797, 0.7628", "315.587, 503.161, 43.4417, 0.5304", "315.114, 502.172, 43.7996, 0.4692", "314.515, 501.198, 44.0793, 0.6202", "314.077, 500.177, 44.3145, 0.5332", "314.056, 499.037, 44.5133, 0.5512", "313.715, 497.948, 44.6606, 0.3982", "313.103, 496.989, 44.7866, 0.3348", "312.378, 496.379, 45.0632, 0.2918", "311.427, 495.797, 45.3443, 0.3064", "310.488, 495.177, 45.5742, 0.333", "309.673, 494.42, 45.6232, 0.387", "308.885, 493.62, 45.5647, 0.462", "308.163, 492.747, 45.463, 0.7232", "307.855, 491.703, 45.2662, 0.615", "307.391, 490.67, 45.1643, 0.5466", "307.109, 489.788, 45.3169, 0.6924", "306.363, 489.118, 45.5417, 0.5542", "305.413, 488.482, 45.6971, 0.4496", "304.491, 487.878, 45.6966, 0.4366", "303.747, 487.056, 45.5336, 0.448", "303.184, 486.065, 45.3281, 0.5262", "302.633, 485.063, 45.0988, 0.6228", "302.124, 484.134, 44.7336, 0.5802", "301.622, 483.19, 44.31, 0.6604", "301.143, 482.155, 43.9782, 0.7252", "300.742, 481.099, 43.736, 0.564", "300.695, 479.956, 43.5907, 0.4884", "300.648, 478.813, 43.5364, 0.4074" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "333.848, 485.4, 36.729, 0.5222", "333.386, 484.896, 36.6548, 0.503", "332.827, 484.105, 36.6285, 0.4438", "332.175, 483.165, 36.6402, 0.4486", "331.705, 482.131, 36.6582, 0.5906", "331.972, 481.093, 36.8281, 0.6644", "332.431, 480.078, 37.0832, 0.5758", "332.808, 479.001, 37.3066, 0.5916", "332.702, 477.869, 37.494, 0.6632", "332.504, 476.768, 37.7101, 0.8182", "332.498, 475.636, 37.9056, 0.9988", "332.184, 474.54, 37.9719, 0.9348", "331.89, 473.509, 37.8428, 0.9202" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "333.848, 485.4, 36.729, 0.5222", "333.564, 485.399, 37.0532, 0.2288", "333.014, 484.556, 39.0508, 0.7072", "333.065, 483.745, 39.9524, 0.5768", "333.669, 483.426, 41.1334, 0.517", "334.344, 482.729, 42.38, 0.4372" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "346.686, 479.798, 31.1147, 0.3274", "347.151, 479.576, 31.1324, 0.32", "348.1, 478.983, 31.1727, 0.3846", "349.021, 478.338, 31.1377, 0.3544", "350.03, 477.845, 31.0444, 0.339", "351.135, 477.627, 30.9462, 0.3428", "352.278, 477.587, 30.8507, 0.4212", "353.399, 477.405, 30.7644, 0.4478", "354.449, 476.968, 30.6939, 0.3882", "355.46, 476.435, 30.6379, 0.3484", "356.502, 475.989, 30.5505, 0.3898", "357.552, 475.556, 30.4217, 0.3656", "358.435, 474.901, 30.359, 0.3538", "359.152, 474.034, 30.34, 0.3992", "359.96, 473.259, 30.2624, 0.383", "360.945, 472.727, 30.1235, 0.3852", "362.012, 472.334, 30.0009, 0.4612", "363.09, 471.996, 29.9547, 0.4824", "364.184, 471.79, 29.8724, 0.6464", "365.291, 471.932, 29.7562, 0.5704", "366.418, 472.101, 29.6601, 0.4452", "367.559, 472.167, 29.5761, 0.3658", "368.663, 472.408, 29.4624, 0.3934", "369.709, 472.831, 29.2922, 0.5118", "370.783, 472.859, 29.2065, 0.6308", "371.845, 472.49, 29.153, 0.6548", "372.953, 472.24, 29.071, 0.5098", "374.051, 472.41, 28.9114, 0.4748", "375.104, 472.574, 28.6115, 0.4172", "376.207, 472.671, 28.2576, 0.5054", "377.253, 473.081, 27.9625, 0.4072", "378.229, 473.622, 27.8093, 0.3526", "379.226, 474.121, 27.6312, 0.3198", "380.259, 474.593, 27.4476, 0.3842", "381.376, 474.797, 27.2896, 0.3538", "382.485, 474.567, 27.1284, 0.3368", "383.487, 474.027, 26.9352, 0.3434", "384.56, 473.658, 26.677, 0.3988", "385.626, 473.868, 26.3192, 0.5222", "386.693, 474.25, 25.933, 0.651", "387.664, 474.693, 25.4422, 0.6868", "388.666, 475.136, 24.9138, 0.5948", "389.787, 475.319, 24.4678, 0.5078", "390.931, 475.332, 24.1254, 0.399", "392.048, 475.102, 23.8518, 0.399", "393.151, 474.808, 23.6267, 0.3342", "393.854, 474.104, 23.3402, 0.3006", "394.391, 473.107, 23.0891, 0.2758", "395.026, 472.155, 22.8917, 0.2766", "395.964, 471.67, 22.7408, 0.2784", "397.061, 471.375, 22.6162, 0.2818", "398.104, 470.94, 22.4689, 0.2882", "399.193, 470.755, 22.3622, 0.2994", "400.328, 470.818, 22.3233, 0.3232", "401.458, 470.907, 22.3202, 0.3542", "402.531, 471.297, 22.2726, 0.4734", "403.604, 471.687, 22.1892, 0.3952", "404.707, 471.953, 22.048, 0.3288", "405.811, 472.217, 21.8546, 0.2808", "406.912, 472.523, 21.6706, 0.2862", "408.011, 472.838, 21.5124, 0.296", "409.142, 472.998, 21.3718, 0.3146", "409.78, 473.744, 21.1352, 0.3484", "410.29, 474.615, 20.9633, 0.4138", "411.366, 474.931, 20.8608, 0.5226", "412.498, 475.096, 20.813, 0.7846", "413.586, 474.894, 20.8575, 0.976", "414.661, 474.746, 21.0274, 0.7012", "415.793, 474.578, 21.1854, 0.5032", "416.924, 474.411, 21.2999, 0.455", "418.067, 474.408, 21.3598, 0.6452", "419.21, 474.433, 21.3668, 0.7866", "420.282, 474.079, 21.3248, 0.7024", "421.264, 473.519, 21.222, 0.6258", "422.344, 473.492, 20.9922, 0.5544", "423.47, 473.67, 20.7858, 0.7646", "424.57, 473.805, 20.6206, 0.6366", "425.705, 473.657, 20.4907, 0.6246", "426.83, 473.482, 20.3927, 0.6518", "427.838, 472.941, 20.3255, 0.6916", "428.847, 472.401, 20.2807, 0.5878", "429.901, 472.032, 20.151, 0.5724", "430.961, 471.672, 19.9732, 0.8274", "432.061, 471.453, 19.9175, 0.8388", "433.161, 471.233, 19.9506, 0.8108", "434.298, 471.212, 19.9279, 0.5404", "435.435, 471.192, 19.8668, 0.4144", "436.571, 471.182, 19.7809, 0.4178", "437.668, 471.36, 19.6608, 0.418", "438.508, 472.046, 19.4849, 0.446", "439.362, 471.908, 19.5891, 0.5942", "440.466, 471.731, 19.7033, 0.6288", "441.607, 471.656, 19.8159, 0.7148", "442.695, 471.346, 19.8621, 0.5406", "443.761, 471.299, 19.7742, 0.4642", "444.81, 471.676, 19.7571, 0.4992", "445.722, 472.154, 19.6482, 0.6214", "446.708, 472.344, 19.5997, 0.5704", "447.714, 472.296, 19.4452, 0.678", "448.589, 472.939, 19.2388, 0.582", "449.598, 473.404, 19.0232, 0.4662", "450.615, 473.926, 18.8345, 0.4082", "451.612, 474.449, 18.7631, 0.455", "452.604, 474.973, 18.7894, 0.706", "453.332, 475.849, 18.8205, 0.6044", "454.108, 476.666, 18.8182, 0.4238", "455.122, 477.063, 18.6984, 0.2796", "456.236, 477.134, 18.5312, 0.2288", "457.38, 477.134, 18.1966, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "346.686, 479.798, 31.1147, 0.3274", "346.545, 479.542, 30.653, 0.2288", "346.078, 478.698, 29.6176, 0.492", "345.442, 477.843, 29.2687, 0.4306", "345.232, 476.771, 28.9187, 0.3894", "345.615, 475.794, 28.5104, 0.4198", "346.37, 474.943, 28.1204, 0.415", "347.337, 474.334, 27.7508, 0.4752", "348.331, 473.77, 27.3916, 0.4786", "348.65, 473.322, 26.8428, 0.554", "348.799, 472.599, 26.0859, 0.8162", "349.709, 472.554, 25.1913, 0.9346", "350.834, 472.453, 24.4056, 1.1088", "351.918, 472.117, 23.7462, 0.968", "353.023, 472.367, 23.1874, 0.668", "354.1, 472.553, 22.6022, 0.53", "355.233, 472.504, 22.045, 0.5338", "355.251, 471.377, 21.3046, 0.4226", "355.267, 470.389, 20.4341, 0.333", "355.283, 469.4, 19.4776, 0.2886" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "364.274, 507.15, 42.7188, 0.4392", "364.491, 506.433, 43.2272, 0.3714", "364.856, 505.4, 43.7282, 0.3222", "365.59, 504.552, 44.1526, 0.3156", "366.532, 503.973, 44.5724, 0.3514", "367.609, 503.628, 44.9196, 0.4134", "368.633, 503.129, 45.1584, 0.5502", "369.518, 502.409, 45.3046, 0.6964", "370.479, 501.793, 45.4048, 0.8042", "371.553, 501.424, 45.4966, 0.6534", "372.659, 501.161, 45.5202, 0.7006", "373.799, 501.166, 45.5395, 0.5768", "374.931, 501.315, 45.5731, 0.457", "376.008, 500.966, 45.6235, 0.3882", "376.951, 500.324, 45.6994, 0.431", "377.745, 499.521, 45.8441, 0.6002", "378.726, 498.992, 46.0678, 0.7066", "379.824, 498.677, 46.2535, 0.5354", "380.957, 498.524, 46.4022, 0.4052", "382.022, 498.107, 46.5198, 0.4004", "382.992, 497.502, 46.6105, 0.3862", "383.768, 496.663, 46.6785, 0.3864", "384.733, 496.049, 46.7407, 0.486" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "364.274, 507.15, 42.7188, 0.4392", "364.775, 506.965, 42.0997, 0.6864", "365.893, 506.938, 42.3133, 0.561", "367.01, 507.141, 42.3489, 0.4194", "368.09, 507.509, 42.3917, 0.3588", "368.891, 508.289, 42.4934, 0.4102", "369.41, 509.256, 42.4704, 0.397", "370.368, 509.858, 42.4766, 0.4424", "371.458, 509.961, 42.5768, 0.4152", "372.555, 509.653, 42.6401, 0.4474", "373.641, 509.462, 42.6121, 0.566", "374.515, 508.771, 42.6569, 0.7264", "375.328, 507.97, 42.6625, 0.8554", "376.165, 507.222, 42.5617, 0.768", "377.106, 506.598, 42.4054, 0.8198", "378.078, 506.005, 42.3102, 0.563", "379.135, 505.646, 42.2677, 0.4264", "380.247, 505.677, 42.1599, 0.357", "381.332, 506.038, 42.0879, 0.4784", "382.405, 506.419, 42.0479, 0.4048", "383.521, 506.648, 42.0115, 0.3466", "384.622, 506.917, 41.9558, 0.3148", "385.71, 507.159, 41.9465, 0.3452", "386.607, 507.835, 42.042, 0.4256", "387.397, 508.629, 42.2164, 0.4572", "388.206, 509.318, 42.3752, 0.3992", "389.19, 509.641, 42.5662, 0.3994", "390.333, 509.645, 42.7078, 0.335", "391.413, 509.555, 42.6992, 0.302", "392.494, 509.186, 42.6558, 0.2782", "393.579, 508.839, 42.6115, 0.2814", "394.679, 508.594, 42.651, 0.287", "395.771, 508.325, 42.7431, 0.2988", "396.792, 507.814, 42.7935, 0.3142", "397.821, 507.328, 42.8117, 0.3734", "398.923, 507.075, 42.7638, 0.3338", "399.927, 506.65, 42.705, 0.3", "400.708, 505.83, 42.7269, 0.2746", "401.487, 505.011, 42.819, 0.2746", "402.409, 504.377, 42.9363, 0.2746", "403.447, 503.894, 43.0368, 0.2748", "404.531, 503.625, 43.1147, 0.2748", "405.675, 503.625, 43.1595, 0.2752", "406.819, 503.625, 43.1698, 0.2758", "407.955, 503.731, 43.16, 0.2766", "409.087, 503.895, 43.1379, 0.2786", "410.22, 504.057, 43.1029, 0.2822", "411.362, 504.084, 43.0486, 0.2882", "412.481, 504.235, 42.9887, 0.3008", "412.999, 504.608, 42.98, 0.3182", "414.071, 504.608, 42.7773, 0.3812", "415.119, 504.472, 42.4533, 0.3482", "416.104, 503.964, 42.0949, 0.3262", "417.059, 503.379, 41.7757, 0.3254", "417.655, 502.528, 41.4627, 0.3586", "418.484, 501.902, 41.3608, 0.4812", "419.355, 501.758, 41.6268, 0.4096", "420.368, 501.452, 42.0448, 0.3556", "421.513, 501.408, 42.3856, 0.3324", "422.629, 501.26, 42.6037, 0.3714", "423.715, 500.948, 42.6681, 0.5052", "424.826, 500.792, 42.642, 0.4534", "425.964, 500.792, 42.6031, 0.4398", "427.094, 500.891, 42.5194, 0.4744", "428.223, 501.024, 42.4035, 0.7054", "429.351, 501.17, 42.3024, 0.779", "430.482, 501.332, 42.2531, 0.579", "431.617, 501.437, 42.2013, 0.4694", "432.758, 501.496, 42.1201, 0.3714", "433.897, 501.562, 42.0224, 0.3652", "434.988, 501.909, 41.9224, 0.4158", "436.077, 502.257, 41.8163, 0.438", "437.101, 502.723, 41.6506, 0.369", "438.11, 503.214, 41.44, 0.318", "439.2, 503.557, 41.2821, 0.3076", "440.297, 503.87, 41.1802, 0.338", "441.414, 504.042, 41.1748, 0.381", "442.523, 504.258, 41.1981, 0.5254", "443.619, 504.55, 41.1687, 0.481", "444.715, 504.856, 41.104, 0.5388", "445.806, 505.197, 41.0427, 0.4232", "446.897, 505.543, 40.9872, 0.3762", "447.962, 505.936, 40.9402, 0.3938", "449.101, 505.988, 40.9002, 0.3724", "450.04, 506.47, 40.782, 0.3674", "450.701, 507.28, 40.8352, 0.42", "451.618, 507.961, 40.9167, 0.446", "452.522, 508.658, 41.0362, 0.3848", "453.292, 509.49, 41.214, 0.3418", "453.97, 510.171, 41.27, 0.3784", "454.226, 511.116, 41.3095, 0.3388", "455.125, 511.768, 41.4366, 0.3304", "456.008, 512.392, 42.0795, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "329.586, 500.288, 17.563, 0.3284", "330.055, 499.663, 17.0906, 0.3786", "330.713, 498.746, 16.7569, 0.4464", "331.774, 498.356, 16.5519, 0.6962", "332.809, 497.876, 16.4615, 0.5552", "333.891, 497.578, 16.4483, 0.4824", "334.393, 496.927, 16.5399, 0.3468", "334.429, 495.828, 16.7009, 0.3254", "334.77, 494.737, 16.7922, 0.3162", "335.565, 493.951, 16.7622, 0.3776", "336.601, 493.55, 16.6524, 0.3414", "337.73, 493.423, 16.5052, 0.3134", "338.842, 493.47, 16.2716, 0.3008", "339.885, 493.619, 15.8757, 0.3178", "341.006, 493.652, 15.51, 0.3804", "342.15, 493.652, 15.2177, 0.3468", "343.294, 493.652, 14.9859, 0.324", "344.178, 493.066, 14.6437, 0.32", "345.043, 492.331, 14.3984, 0.3548", "345.996, 491.825, 14.226, 0.4434", "347.009, 491.349, 14.159, 0.4904", "348.054, 490.889, 14.1011, 0.4602", "349.101, 490.448, 14.0322, 0.515", "350.185, 490.448, 13.8356, 0.5368", "351.271, 490.424, 13.5324, 0.7368", "352.396, 490.413, 13.274, 0.7892", "353.537, 490.413, 13.118, 0.6034", "354.626, 490.646, 13.0183, 0.4872", "355.636, 491.168, 12.9861, 0.5366", "356.429, 490.481, 13.0561, 0.7152", "357.287, 490.132, 13.2986, 0.624", "358.334, 490.564, 13.5607, 0.6752", "359.284, 491.179, 13.8093, 0.6164", "360.287, 491.677, 14.0767, 0.7948", "361.348, 492.097, 14.3573, 0.876", "362.408, 492.466, 14.6908, 0.6352", "363.477, 492.703, 15.0875, 0.4888", "364.524, 492.703, 15.594, 0.3602", "365.573, 492.74, 16.002, 0.3432", "366.416, 493.408, 16.2938, 0.3802", "367.357, 493.943, 16.6452, 0.3464", "368.306, 493.771, 17.0506, 0.3242", "369.388, 493.555, 17.2838, 0.3142", "370.511, 493.468, 17.3494, 0.3736", "371.648, 493.571, 17.3687, 0.3342", "372.771, 493.725, 17.3527, 0.3006", "373.744, 494.325, 17.3026, 0.276", "374.777, 494.791, 17.2698, 0.277", "375.873, 494.769, 17.2824, 0.2792", "376.985, 494.55, 17.3298, 0.283", "378.113, 494.484, 17.4462, 0.2904", "379.237, 494.418, 17.6285, 0.3034", "380.316, 494.151, 17.8228, 0.3302", "381.339, 493.638, 17.9757, 0.3672", "382.4, 493.255, 18.0466, 0.4972", "383.318, 493.703, 18.0043, 0.4416", "384.134, 494.346, 18.1479, 0.4046", "384.987, 494.922, 18.3428, 0.4722", "386.023, 495.254, 18.3968, 0.393", "387.013, 495.814, 18.4674, 0.3254", "388.132, 496.051, 18.5612, 0.2746", "389.251, 496.288, 18.6788, 0.2746", "390.381, 496.461, 18.8174, 0.2744", "391.357, 496.961, 19.0302, 0.2744", "392.368, 497.282, 19.4233, 0.2742", "393.041, 497.143, 19.8632, 0.2736", "393.165, 496.197, 20.4397, 0.2728", "393.113, 496.048, 21.2442, 0.2712", "393.897, 496.672, 22.0335, 0.2684", "394.957, 496.823, 22.4686, 0.2626", "396.088, 496.823, 22.6965, 0.2542", "397.211, 497.004, 22.8054, 0.2288", "398.32, 497.282, 22.7458, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "329.586, 500.288, 17.563, 0.3284", "328.756, 500.541, 16.2896, 0.2288", "327.84, 501.225, 16.2834, 0.275", "326.758, 501.434, 16.2812, 0.2758", "325.614, 501.434, 16.2775, 0.2766", "324.47, 501.434, 16.2722, 0.2782", "323.326, 501.434, 16.2669, 0.2812", "322.182, 501.434, 16.2596, 0.287", "321.038, 501.421, 16.245, 0.2976", "319.917, 501.29, 16.2145, 0.3168", "318.853, 500.94, 16.1837, 0.355", "317.781, 500.762, 16.2389, 0.415", "316.669, 500.619, 16.1512, 0.5768", "315.572, 500.412, 15.911, 0.6328", "314.558, 500.095, 15.4899, 0.5472", "313.464, 499.845, 15.0147, 0.3928", "312.43, 499.378, 14.5197, 0.3156", "311.472, 498.916, 13.9384, 0.3022", "310.345, 498.913, 13.4179, 0.3304", "309.651, 498.269, 13.0021, 0.356", "308.958, 497.389, 12.672, 0.5338", "308.759, 497.085, 11.2342, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "309.314, 504.16, 45.1077, 0.7726", "308.085, 504.155, 45.1548, 0.763", "306.943, 504.13, 45.1618, 0.5462", "305.837, 503.977, 45.0988, 0.4248", "304.818, 503.472, 45.0892, 0.4376", "303.724, 503.239, 45.1752, 0.451", "302.582, 503.196, 45.2505, 0.527", "301.455, 503.004, 45.309, 0.6482", "300.355, 502.695, 45.3684, 0.5104", "299.233, 502.573, 45.4306, 0.412", "298.129, 502.869, 45.4818, 0.383", "297.047, 503.207, 45.5062, 0.4994", "296.092, 503.751, 45.5342, 0.5766", "295.364, 504.57, 45.7358, 0.705", "294.668, 505.455, 46.03, 0.5586", "293.957, 506.292, 46.4033, 0.5512", "293.018, 506.909, 46.8026, 0.3982", "292.175, 507.572, 47.2688, 0.3342", "291.424, 508.363, 47.7089, 0.2912", "290.489, 509.008, 47.971, 0.305", "289.551, 509.612, 48.1188, 0.3334", "288.541, 510.092, 48.244, 0.373", "287.485, 510.277, 48.3104, 0.5078", "286.371, 510.125, 48.3734, 0.461", "285.241, 510.135, 48.3557, 0.4406", "284.151, 510.317, 48.319, 0.54", "283.084, 510.689, 48.3372, 0.5166", "281.987, 510.997, 48.3445, 0.5638", "280.883, 511.286, 48.309, 0.6702", "279.804, 511.591, 48.186, 0.5464", "278.702, 511.803, 48.0259, 0.5034", "277.585, 511.947, 47.9329, 0.4336", "276.521, 512.218, 47.8134, 0.4832", "275.452, 512.567, 47.6456, 0.6216", "274.411, 513.02, 47.4844, 0.8818", "273.395, 513.526, 47.3026, 0.8912", "272.341, 513.904, 47.0691, 0.6858", "271.26, 513.832, 46.8339, 0.473", "270.155, 513.546, 46.6572, 0.4054", "269.078, 513.7, 46.5668, 0.5234", "268.079, 514.23, 46.5223, 0.4776", "267.099, 514.597, 46.3546, 0.5326", "266.013, 514.659, 46.1266, 0.4106", "264.896, 514.504, 45.9701, 0.359", "263.814, 514.487, 45.7528, 0.3316", "262.88, 514.944, 45.4328, 0.4058", "261.88, 515.454, 45.1741, 0.3934", "260.794, 515.628, 45.1018, 0.4132", "259.685, 515.842, 45.1296, 0.4704", "258.555, 516.017, 45.1797, 0.706", "257.415, 516.017, 45.2469, 0.743", "256.292, 515.819, 45.3155, 0.6932", "255.165, 515.919, 45.3597, 0.4874", "254.156, 516.432, 45.3779, 0.431", "253.264, 517.146, 45.3872, 0.3464", "252.294, 517.747, 45.3978, 0.3242", "251.176, 517.881, 45.4118, 0.3142", "250.031, 517.889, 45.4292, 0.3734", "248.937, 518.174, 45.4709, 0.3338", "247.891, 518.636, 45.5109, 0.3", "246.812, 519.015, 45.5518, 0.2746", "245.79, 519.527, 45.5963, 0.2746", "244.767, 520.038, 45.6484, 0.2746", "243.941, 520.83, 45.7122, 0.2746", "243.456, 521.865, 45.7971, 0.2746", "242.609, 522.625, 45.9203, 0.2746", "241.677, 523.289, 46.0925, 0.2746", "240.914, 524.084, 46.317, 0.2746", "240.781, 525.209, 46.5926, 0.2746", "240.708, 525.921, 47.1223, 0.2746", "240.365, 526.451, 47.9156, 0.2746", "239.996, 527.411, 48.7099, 0.2746", "239.589, 528.478, 49.3338, 0.2746", "239.202, 529.553, 49.8011, 0.2746", "238.999, 530.67, 50.1264, 0.2746", "238.951, 531.811, 50.3325, 0.2746", "238.526, 532.656, 50.5982, 0.2746", "237.581, 533.269, 50.8172, 0.2746", "237.095, 534.262, 50.9961, 0.2746", "236.833, 535.375, 51.1381, 0.2746", "236.331, 536.401, 51.2534, 0.2746", "235.924, 537.45, 51.4018, 0.2746", "235.658, 538.559, 51.5021, 0.2746", "234.835, 539.328, 51.576, 0.2744", "233.941, 540.044, 51.6284, 0.2744", "233.014, 540.713, 51.6611, 0.2742", "232.19, 541.501, 51.6762, 0.2736", "231.297, 542.214, 51.6771, 0.2728", "230.295, 542.759, 51.6771, 0.2712", "229.324, 543.359, 51.6771, 0.2684", "228.297, 543.857, 51.6771, 0.2626", "227.182, 544.001, 51.6771, 0.2542", "226.072, 544.186, 51.6771, 0.2288", "225.218, 544.917, 51.6771, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "309.314, 504.16, 45.1077, 0.7726", "308.425, 504.151, 46.2538, 0.9152", "307.366, 503.888, 46.6617, 0.644", "306.817, 502.915, 46.8502, 0.618", "306.721, 501.861, 47.0537, 0.511", "306.015, 501.031, 47.1649, 0.598", "305.053, 500.465, 47.3362, 0.5164", "304.248, 499.769, 47.6132, 0.6304", "303.267, 499.278, 47.9326, 0.4678", "302.17, 499.131, 48.2012, 0.3802", "301.04, 499.249, 48.3868, 0.324", "299.932, 499.158, 48.4128, 0.3918", "298.831, 498.992, 48.3118, 0.3674", "297.768, 498.742, 48.2544, 0.3644", "296.714, 499.001, 48.2807, 0.3846", "295.658, 499.418, 48.2625, 0.5242", "294.612, 499.664, 48.1295, 0.5148", "293.513, 499.859, 47.971, 0.4284", "292.41, 500.029, 47.8276, 0.375", "291.282, 500.029, 47.847, 0.4412", "290.154, 500.029, 48.0214, 0.4496", "289.045, 500.248, 48.3008, 0.5618", "287.966, 500.463, 48.7511, 0.532", "286.852, 500.348, 49.3027, 0.4842", "285.839, 499.865, 49.9016, 0.3604", "285.285, 500.336, 50.6271, 0.302", "285.491, 501.095, 51.4091, 0.2782", "284.849, 501.577, 52.4289, 0.2814", "284.128, 501.86, 53.5886, 0.2872", "283.213, 501.86, 54.7683, 0.2982", "282.17, 501.594, 55.7606, 0.3176", "281.275, 500.912, 56.5264, 0.3574", "280.631, 500.045, 57.1533, 0.4126", "280.182, 499.081, 57.5243, 0.6066", "279.551, 498.191, 57.699, 0.52", "279.281, 497.282, 57.9984, 0.4666", "278.907, 496.329, 58.4013, 0.536", "277.896, 495.812, 58.7454, 0.5316", "276.794, 495.514, 59.0352, 0.4836", "275.697, 495.22, 59.2886, 0.3592", "274.836, 494.619, 59.3992, 0.3", "273.853, 494.104, 59.598, 0.2746", "272.9, 493.695, 60.02, 0.2746", "271.928, 494.062, 60.5685, 0.2746", "271.08, 494.699, 61.245, 0.2746", "270.233, 495.309, 62.0239, 0.2746", "269.413, 495.978, 62.8516, 0.2746", "268.609, 496.764, 63.5586, 0.2746", "267.886, 497.409, 64.3138, 0.2746", "266.933, 497.711, 64.9057, 0.2746", "265.93, 497.257, 65.3106, 0.2746", "264.96, 496.768, 65.7003, 0.2746", "264.011, 496.208, 66.0845, 0.2746", "262.988, 495.696, 66.4314, 0.2746", "261.928, 495.32, 66.7918, 0.2746", "260.816, 495.13, 67.2395, 0.2746", "259.742, 494.992, 67.7986, 0.2746", "258.772, 494.992, 68.5362, 0.2746", "257.767, 495.037, 69.3588, 0.2746", "256.646, 495.245, 70.0949, 0.2746", "255.525, 495.45, 70.7571, 0.2746", "254.734, 495.394, 71.4638, 0.2746", "253.596, 495.385, 72.0765, 0.2746", "252.454, 495.385, 72.611, 0.2746", "251.955, 495.127, 73.3911, 0.2746", "251.943, 494.469, 74.3638, 0.2746", "251.105, 494.349, 75.1038, 0.2746", "249.972, 494.187, 75.6342, 0.2746", "248.839, 494.026, 75.9976, 0.2746", "247.805, 493.546, 76.2157, 0.2746", "246.783, 493.034, 76.3115, 0.2746", "245.799, 492.451, 76.3566, 0.2746", "244.825, 491.853, 76.4179, 0.2746", "243.932, 491.141, 76.5069, 0.2746", "243.061, 490.398, 76.6354, 0.2746", "242.271, 489.574, 76.8104, 0.2746", "241.501, 488.727, 77.0353, 0.2746", "240.996, 487.712, 77.3097, 0.2746", "240.46, 487.504, 77.945, 0.2746", "239.636, 487.293, 78.7016, 0.2744", "238.577, 486.874, 79.3624, 0.2744", "237.876, 486.039, 79.9484, 0.2742", "237.274, 485.07, 80.479, 0.2736", "236.559, 484.176, 80.969, 0.2728", "235.997, 483.938, 81.7012, 0.2712", "235.91, 483.204, 82.6389, 0.2684", "236.051, 482.149, 83.5898, 0.2626", "236.8, 481.495, 84.5485, 0.2542", "237.491, 480.703, 85.3765, 0.2288", "238.2, 479.818, 86.4335, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "300.648, 478.813, 43.5364, 0.4074", "300.898, 477.562, 42.2845, 0.9152", "301.334, 476.525, 41.79, 0.53", "301.686, 475.52, 41.5178, 0.353", "301.295, 474.459, 41.2107, 0.2786", "300.805, 473.479, 41.0094, 0.2822", "300.255, 472.536, 40.8612, 0.2882", "299.882, 471.75, 40.5096, 0.3012", "300.334, 470.886, 39.9907, 0.3184", "300.798, 469.97, 39.4814, 0.3816", "301.049, 468.947, 39.13, 0.3492", "301.788, 468.133, 38.6896, 0.328", "302.134, 467.143, 38.171, 0.3274", "302.13, 466.055, 37.6398, 0.3684", "301.428, 465.378, 37.0423, 0.4692", "300.721, 464.579, 36.5663, 0.534", "300.374, 463.497, 36.2426, 0.5618", "300.641, 462.404, 36.0038, 0.6034", "300.466, 461.365, 35.6938, 0.5004", "299.864, 460.394, 35.4729, 0.4968", "299.657, 459.286, 35.3125, 0.496", "299.514, 458.151, 35.1789, 0.4656", "299.342, 457.029, 35.0437, 0.5502", "299.123, 455.929, 34.8793, 0.4802", "298.848, 454.837, 34.7346, 0.5374", "298.444, 453.768, 34.662, 0.421", "298.1, 452.688, 34.6646, 0.3716", "298.079, 451.557, 34.7752, 0.386", "298.059, 450.426, 34.9628, 0.3566", "298.053, 449.287, 35.1624, 0.3434", "297.948, 448.201, 35.4138, 0.3496", "297.754, 447.098, 35.6412, 0.4412", "298.202, 446.069, 35.7638, 0.4498", "298.156, 445.006, 35.656, 0.562", "297.538, 444.052, 35.5264, 0.5326", "296.917, 443.108, 35.441, 0.4852", "296.313, 442.161, 35.3766, 0.3624", "295.931, 441.093, 35.2327, 0.306", "295.532, 440.035, 35.0367, 0.2856", "295.041, 439.026, 34.788, 0.2946", "294.567, 438.01, 34.4882, 0.3128", "294.135, 436.98, 34.1589, 0.3414", "293.678, 435.952, 33.894, 0.4188", "293.192, 434.926, 33.782, 0.4432", "292.596, 433.964, 33.7764, 0.3786", "291.903, 433.058, 33.8366, 0.3368", "291.323, 432.077, 33.9156, 0.3384", "290.812, 431.055, 33.9811, 0.4134", "290.377, 429.999, 34.0161, 0.4336", "290.009, 428.917, 34.015, 0.3608", "289.57, 427.865, 33.9886, 0.3028", "288.99, 426.879, 33.9475, 0.2794", "288.555, 425.831, 33.8915, 0.2838", "288.557, 424.771, 33.7378, 0.2914", "288.68, 423.703, 33.584, 0.3054", "288.289, 422.629, 33.4922, 0.3342", "287.924, 421.561, 33.4765, 0.3744", "287.656, 420.515, 33.6137, 0.5118", "287.327, 419.475, 33.7904, 0.4606", "286.857, 418.448, 33.8416, 0.4782", "286.522, 417.372, 33.7781, 0.4236", "286.285, 416.263, 33.6213, 0.5168", "285.932, 415.191, 33.4023, 0.4296", "285.422, 414.169, 33.1545, 0.388", "284.749, 413.28, 32.9199, 0.4158", "283.822, 412.684, 32.6578, 0.4156", "283.307, 411.958, 32.4979, 0.4354", "282.72, 411.003, 32.2748, 0.6022", "282.176, 410.033, 32.0046, 0.5112", "282.105, 408.9, 31.7254, 0.4548", "282.034, 407.766, 31.4434, 0.4894", "281.577, 406.733, 31.2612, 0.5658", "281.111, 405.705, 31.1478, 0.6468", "281.0, 404.641, 30.9254, 0.6358", "280.687, 403.595, 30.6564, 0.4814", "280.803, 402.512, 30.4122, 0.3894", "281.296, 401.583, 30.3475, 0.4188", "281.51, 400.491, 30.2991, 0.4194", "281.044, 399.464, 30.2501, 0.45", "280.245, 398.647, 30.2067, 0.5936", "279.423, 397.899, 30.086, 0.6686", "278.953, 397.166, 29.7338, 0.5912", "278.213, 396.328, 29.4476, 0.5816", "277.213, 395.793, 29.2838, 0.8306", "276.132, 395.427, 29.2314, 0.9124", "275.14, 394.868, 29.2802, 0.6186", "274.22, 394.335, 29.4907, 0.4068", "273.33, 394.253, 30.7068, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "300.648, 478.813, 43.5364, 0.4074", "300.8, 477.423, 43.5761, 0.428", "300.771, 476.299, 43.7228, 0.5526", "300.318, 475.308, 43.967, 0.593", "299.681, 474.361, 44.1661, 0.448", "299.122, 473.368, 44.3338, 0.333", "299.151, 472.344, 44.5746, 0.2882", "299.69, 471.346, 44.7034, 0.2998", "299.73, 470.279, 44.6748, 0.3232", "299.42, 469.201, 44.5376, 0.3544", "298.754, 468.306, 44.3926, 0.4738", "298.395, 467.251, 44.1921, 0.396", "298.064, 466.177, 43.9676, 0.3306", "297.851, 465.061, 43.8841, 0.284", "297.641, 463.946, 43.9208, 0.2922", "297.581, 462.809, 44.018, 0.3068", "297.56, 461.667, 44.1414, 0.3366", "297.508, 460.53, 44.2828, 0.3786", "297.271, 459.422, 44.4494, 0.521", "297.045, 458.312, 44.588, 0.473", "296.862, 457.192, 44.6202, 0.5244", "296.679, 456.07, 44.5777, 0.3954", "296.886, 454.715, 44.5346, 0.3294", "296.782, 453.646, 44.4982, 0.2822", "296.313, 452.603, 44.4769, 0.2882", "296.222, 451.478, 44.4819, 0.3008", "296.222, 450.335, 44.515, 0.318", "295.807, 449.289, 44.562, 0.381", "295.371, 448.272, 44.6779, 0.3476", "295.672, 447.255, 44.8622, 0.3264", "296.169, 446.259, 44.9904, 0.3182", "296.222, 445.134, 45.0178, 0.3812", "296.222, 444.006, 44.9548, 0.348", "296.168, 442.876, 44.8538, 0.3272", "296.003, 441.744, 44.7815, 0.3198", "295.838, 440.612, 44.7527, 0.384", "295.797, 439.476, 44.8154, 0.3532", "295.777, 438.339, 44.952, 0.3366", "295.764, 437.242, 45.1749, 0.3384", "295.602, 436.199, 45.4684, 0.413", "295.459, 435.084, 45.6789, 0.4328", "295.697, 433.988, 45.7377, 0.3594", "295.705, 432.921, 45.5924, 0.3004", "295.391, 431.853, 45.3295, 0.2752", "295.125, 430.769, 45.0178, 0.2758", "295.004, 429.63, 44.7714, 0.2766", "294.885, 428.493, 44.6113, 0.2784", "294.613, 427.387, 44.5382, 0.2818", "294.271, 426.294, 44.541, 0.2882", "293.892, 425.216, 44.5962, 0.2998", "293.468, 424.154, 44.6863, 0.3232", "293.009, 423.111, 44.8182, 0.3546", "292.472, 422.115, 45.0318, 0.474", "292.132, 421.063, 45.3096, 0.3966", "292.101, 419.926, 45.6114, 0.3314", "292.093, 418.784, 45.9035, 0.2856", "291.97, 417.741, 46.2638, 0.295", "291.465, 417.007, 46.7656, 0.3132", "291.042, 415.95, 47.1948, 0.342", "290.732, 414.851, 47.5168, 0.4198", "291.207, 413.812, 47.7649, 0.4458", "291.639, 412.859, 48.0598, 0.383", "291.6, 411.735, 48.1863, 0.3448", "291.23, 410.695, 48.1866, 0.3532", "291.186, 409.602, 48.1099, 0.4418", "291.517, 408.596, 48.2068, 0.481", "291.941, 407.614, 48.5005, 0.474", "292.386, 406.616, 48.9152, 0.3886", "292.853, 405.602, 49.4043, 0.3562", "293.152, 404.522, 49.8977, 0.3686", "293.362, 403.406, 50.3471, 0.4996", "293.692, 402.331, 50.7254, 0.446", "294.166, 401.303, 51.046, 0.4128", "294.39, 400.221, 51.3352, 0.4876", "294.39, 399.114, 51.4836, 0.4224", "294.625, 398.015, 51.5729, 0.3744", "295.144, 397.002, 51.6622, 0.3906", "295.785, 396.094, 51.7891, 0.3668", "296.154, 395.038, 52.0134, 0.3556", "296.678, 394.069, 52.3102, 0.4042", "297.434, 393.227, 52.6523, 0.3858", "298.108, 392.32, 53.0048, 0.4228", "298.616, 391.392, 53.1835, 0.3732", "299.119, 390.592, 53.5016, 0.3984", "299.962, 390.109, 53.8742, 0.333", "300.992, 389.618, 54.164, 0.2982", "302.026, 389.213, 54.4228, 0.2712", "303.003, 388.627, 54.5642, 0.2684", "303.954, 387.996, 54.6325, 0.2626", "304.868, 387.309, 54.64, 0.2542", "305.8, 386.646, 54.6224, 0.2288", "306.752, 386.012, 54.5896, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "331.89, 473.509, 37.8428, 0.9202", "332.067, 472.898, 37.7398, 0.6202", "332.647, 471.923, 37.6513, 0.4728", "333.286, 470.973, 37.5738, 0.5042", "333.72, 469.921, 37.5203, 0.4532", "333.845, 468.791, 37.499, 0.4336", "334.037, 467.664, 37.4987, 0.4898", "334.65, 466.716, 37.4895, 0.6026", "335.384, 465.84, 37.4699, 0.5408", "335.906, 464.829, 37.4506, 0.599", "336.107, 463.728, 37.483, 0.5542", "336.223, 462.621, 37.4114, 0.526", "336.498, 461.543, 37.24, 0.4338", "336.564, 460.492, 36.9401, 0.4586", "336.578, 459.4, 36.7917, 0.4702", "336.65, 458.309, 36.8018, 0.4278", "337.0, 457.23, 36.8015, 0.4312", "337.536, 456.275, 36.7018, 0.4974", "337.805, 455.17, 36.6215, 0.788", "337.52, 454.064, 36.5621, 0.7404", "337.556, 452.921, 36.4977, 0.7522", "337.931, 451.841, 36.4437, 0.5164", "338.134, 451.255, 36.4216, 0.4164", "338.69, 450.267, 36.4269, 0.424", "338.844, 449.133, 36.4398, 0.4172", "339.063, 448.016, 36.4582, 0.5052", "339.587, 447.0, 36.4778, 0.407", "340.091, 445.992, 36.4809, 0.3522", "340.194, 444.87, 36.5711, 0.319", "340.056, 443.75, 36.666, 0.3824", "339.526, 442.737, 36.7699, 0.35", "339.064, 441.709, 36.9309, 0.331", "338.884, 440.613, 37.1694, 0.3268", "338.857, 439.485, 37.4242, 0.3978", "338.854, 438.374, 37.6914, 0.3738", "338.853, 437.238, 37.8451, 0.3998", "338.892, 436.128, 37.84, 0.3354", "339.086, 435.007, 37.7969, 0.3028", "339.313, 433.903, 37.774, 0.2796", "339.517, 432.783, 37.6849, 0.284", "339.641, 431.67, 37.5698, 0.292", "339.487, 430.544, 37.4735, 0.3064", "339.584, 429.407, 37.3926, 0.3358", "339.742, 428.291, 37.275, 0.3776", "339.757, 427.178, 37.0916, 0.5178", "339.618, 426.063, 36.9592, 0.472", "339.165, 425.033, 36.9362, 0.499", "338.616, 424.057, 36.9412, 0.464", "337.982, 423.139, 36.906, 0.5818", "337.324, 422.237, 36.9407, 0.6002", "336.975, 421.182, 36.9858, 0.461", "336.736, 420.092, 36.953, 0.3572", "336.59, 418.984, 36.8816, 0.333", "336.568, 417.884, 36.8973, 0.3848", "336.565, 416.863, 37.1532, 0.4678", "336.565, 415.893, 37.6194, 0.6874", "336.548, 414.827, 38.0299, 0.7766", "336.345, 413.752, 38.2721, 1.111", "336.159, 412.64, 38.4507, 1.3674", "335.932, 411.571, 38.7008, 1.3214", "335.833, 410.498, 39.0286, 1.0198", "336.134, 409.431, 39.3478, 1.0528", "336.368, 408.318, 39.6402, 1.443", "336.217, 407.207, 39.9364, 1.4842", "336.127, 406.095, 40.2419, 1.4424", "336.109, 404.958, 40.4796, 1.2514", "336.041, 403.817, 40.6468, 0.9916", "335.783, 402.706, 40.7663, 0.964", "335.538, 401.625, 40.7767, 0.9996", "335.286, 400.535, 40.7238, 0.8724", "335.206, 399.484, 40.8405, 0.6594", "335.194, 398.492, 41.1751, 0.6118", "335.197, 397.408, 41.5862, 0.8956", "335.408, 396.317, 41.8505, 0.9896", "335.6, 395.211, 41.9852, 0.9722", "335.716, 394.076, 42.0521, 0.7276", "336.107, 393.021, 42.1386, 0.847", "335.999, 391.908, 42.2537, 0.5748", "335.853, 390.79, 42.4077, 0.4084", "335.709, 389.672, 42.5964, 0.287", "335.734, 388.549, 42.6796, 0.2974", "335.807, 387.426, 42.6348, 0.3164", "335.881, 386.301, 42.4903, 0.3554", "335.954, 385.178, 42.2876, 0.4086", "335.891, 384.055, 42.1372, 0.5996", "335.741, 382.93, 42.0916, 0.5062", "335.591, 381.807, 42.135, 0.4462", "335.443, 380.683, 42.2332, 0.472", "335.451, 379.56, 42.2954, 0.5392", "335.6, 378.435, 42.261, 0.5716", "335.75, 377.312, 42.1403, 0.6226", "335.9, 376.188, 41.958, 0.5308", "336.1, 375.07, 41.7687, 0.5788", "336.362, 373.955, 41.6209, 0.5234", "336.624, 372.842, 41.5209, 0.4372", "336.886, 371.728, 41.4632, 0.4242", "337.148, 370.615, 41.4341, 0.3754", "337.262, 369.479, 41.4154, 0.4026", "337.335, 368.338, 41.3972, 0.341", "337.407, 367.197, 41.3781, 0.313", "337.48, 366.055, 41.3619, 0.2984", "337.284, 364.951, 41.3641, 0.3198", "336.905, 363.872, 41.3916, 0.3534", "336.524, 362.794, 41.4422, 0.4454", "336.183, 361.704, 41.5086, 0.4716", "335.906, 360.593, 41.5831, 0.5358", "335.628, 359.484, 41.6651, 0.8056", "335.383, 358.374, 41.7564, 0.8038", "335.539, 357.261, 41.9185, 0.72", "335.694, 356.147, 42.1215, 0.497", "335.849, 355.034, 42.3391, 0.413", "335.995, 353.92, 42.5267, 0.4882", "336.083, 352.805, 42.5368, 0.4226", "336.171, 351.691, 42.4085, 0.3812", "336.259, 350.575, 42.1803, 0.3718", "336.383, 349.447, 41.9572, 0.4848", "336.525, 348.312, 41.7936, 0.5192", "336.857, 347.235, 41.7043, 0.7462", "337.368, 346.211, 41.6931, 0.6026", "337.646, 345.112, 41.7354, 0.5596", "337.768, 344.001, 41.8205, 0.5418", "337.292, 343.049, 42.051, 0.4376", "336.775, 342.079, 42.3245, 0.3606", "336.55, 341.0, 42.4852, 0.3402", "336.485, 339.872, 42.4978, 0.3934", "336.419, 338.744, 42.3917, 0.5096", "336.355, 337.615, 42.1963, 0.6386", "336.29, 336.487, 41.9412, 0.6106", "336.471, 335.359, 41.7371, 0.7114", "336.659, 334.23, 41.6016, 0.8454", "336.846, 333.102, 41.5262, 0.6626", "337.035, 331.974, 41.4952, 0.5866", "337.204, 330.844, 41.4932, 0.542", "337.204, 329.7, 41.5083, 0.68", "337.204, 328.556, 41.5302, 1.008", "337.204, 327.412, 41.5612, 0.8084", "337.204, 326.268, 41.6035, 0.698", "337.204, 325.124, 41.6559, 0.8342", "337.089, 323.998, 41.7432, 1.034", "336.852, 322.891, 41.8804, 0.9752", "336.614, 321.783, 42.0428, 0.8882", "336.377, 320.676, 42.2089, 0.8488", "336.301, 319.55, 42.2962, 0.871", "336.321, 318.413, 42.2736, 0.9072", "336.342, 317.276, 42.1604, 0.9984", "336.361, 316.139, 41.981, 1.0514", "336.382, 315.001, 41.7626, 1.0286", "336.635, 313.906, 41.5492, 1.1128", "337.038, 312.836, 41.3678, 1.1148", "337.442, 311.765, 41.2135, 0.9516", "337.847, 310.695, 41.0757, 0.7716", "338.121, 309.605, 40.931, 0.7592", "338.121, 308.474, 40.7473, 0.7764", "338.121, 307.342, 40.542, 0.8426", "338.121, 306.211, 40.3351, 0.5686", "338.121, 305.08, 40.1481, 0.3874", "338.129, 303.951, 40.045, 0.295", "338.149, 302.824, 40.1027, 0.313", "338.171, 301.697, 40.2856, 0.3418", "338.193, 300.57, 40.5527, 0.4194", "338.213, 299.443, 40.868, 0.4448", "338.223, 298.306, 41.1603, 0.3816", "338.223, 297.162, 41.3874, 0.3416", "338.223, 296.018, 41.5562, 0.3518", "338.223, 294.874, 41.685, 0.4168", "338.379, 293.76, 41.8281, 0.543", "338.651, 292.667, 42.0104, 0.75", "338.925, 291.576, 42.2156, 0.5766", "339.197, 290.483, 42.4236, 0.445", "339.316, 289.379, 42.5407, 0.4224", "339.258, 288.262, 42.4939, 0.45", "339.201, 287.143, 42.3203, 0.3924", "339.143, 286.025, 42.063, 0.3562", "338.944, 284.902, 41.8424, 0.4046", "338.733, 283.777, 41.6794, 0.3908", "338.521, 282.653, 41.5839, 0.4098", "338.308, 281.529, 41.5506, 0.4574", "338.118, 280.402, 41.5624, 0.715", "338.093, 279.258, 41.6046, 0.5984", "338.068, 278.114, 41.6651, 0.5208", "338.043, 276.972, 41.746, 0.6194", "338.02, 275.828, 41.8485, 0.5412", "338.11, 274.706, 42.0412, 0.5184", "338.2, 273.585, 42.2943, 0.5686", "338.29, 272.463, 42.5799, 0.9024", "338.379, 271.342, 42.8694, 1.0364", "338.543, 270.222, 43.0979, 0.8934", "338.788, 269.105, 43.2121, 0.6982", "339.032, 267.989, 43.2194, 0.4544", "339.278, 266.871, 43.1418, 0.3448", "339.457, 265.757, 42.9545, 0.3102", "339.612, 264.644, 42.6782, 0.3416", "339.767, 263.531, 42.3536, 0.3958", "339.922, 262.416, 42.0109, 0.5136", "340.124, 261.295, 41.7273, 0.648", "340.335, 260.171, 41.5106, 0.619", "340.547, 259.046, 41.3493, 0.7724", "340.76, 257.923, 41.2252, 0.7354", "340.971, 256.798, 41.1222, 0.8558", "341.276, 255.961, 40.9475, 0.6198", "341.655, 254.921, 40.705, 0.5802", "341.754, 253.82, 40.4692, 0.4048", "341.705, 252.688, 40.2878, 0.3466", "341.332, 251.65, 40.2237, 0.3152", "340.727, 250.681, 40.3057, 0.3444", "340.017, 249.935, 40.6574, 0.4318", "339.542, 249.05, 41.1855, 0.4316", "339.322, 247.991, 41.781, 0.5318", "339.103, 246.932, 42.3828, 0.4586", "339.135, 245.82, 42.8473, 0.4354", "339.277, 244.686, 43.1287, 0.532", "339.62, 243.61, 43.2482, 0.4932", "339.882, 242.521, 43.1788, 0.5614", "340.131, 241.429, 42.987, 0.4676", "340.379, 240.336, 42.7356, 0.4478", "340.628, 239.242, 42.4763, 0.5782", "340.884, 238.154, 42.3741, 0.4654", "341.144, 237.065, 42.4211, 0.3756", "341.403, 235.977, 42.5785, 0.3156", "341.663, 234.889, 42.8014, 0.376", "341.684, 233.78, 42.889, 0.3386", "341.684, 232.668, 42.8498, 0.3088", "341.684, 231.556, 42.7115, 0.2908", "341.734, 230.447, 42.6028, 0.306", "341.851, 229.341, 42.6488, 0.3272", "341.967, 228.235, 42.826, 0.3978", "342.083, 227.13, 43.1105, 0.3784", "342.198, 225.994, 43.3642, 0.3858", "342.311, 224.855, 43.5627, 0.418", "342.426, 223.717, 43.6943, 0.617", "342.539, 222.578, 43.7643, 0.5376", "342.428, 221.467, 43.797, 0.5074", "342.05, 220.387, 43.8144, 0.5714", "341.863, 219.27, 43.8371, 0.7946", "341.819, 218.128, 43.8701, 1.385", "341.797, 216.985, 43.9174, 1.6238", "341.841, 215.842, 43.9782, 1.4158", "341.885, 214.698, 44.0488, 0.985", "342.36, 213.681, 44.1865, 0.8646", "342.912, 212.753, 44.4094, 0.7792", "343.34, 211.854, 44.6662, 0.6404", "343.407, 210.727, 44.7684, 0.7446", "343.475, 209.6, 44.7482, 0.555", "343.542, 208.473, 44.6373, 0.4596", "343.61, 207.345, 44.4665, 0.4132", "343.469, 206.217, 44.3506, 0.6092", "343.295, 205.088, 44.3192, 0.518", "343.122, 203.96, 44.3783, 0.4986", "342.948, 202.831, 44.5049, 0.42", "342.832, 201.703, 44.6807, 0.4812", "342.995, 200.58, 44.9039, 0.5064", "343.159, 199.458, 45.1455, 0.5232", "343.322, 198.334, 45.3911, 0.4694", "343.487, 197.211, 45.6305, 0.556", "343.532, 196.071, 45.813, 0.4978", "343.55, 194.927, 45.936, 0.5356", "343.568, 193.783, 46.009, 0.5858", "343.588, 192.639, 46.0466, 0.5456", "343.606, 191.495, 46.0611, 0.4318", "343.703, 190.363, 46.0639, 0.4128", "343.992, 189.255, 46.0656, 0.3594", "344.279, 188.148, 46.0678, 0.3494", "344.567, 187.041, 46.0706, 0.3558", "344.854, 185.934, 46.0751, 0.4764", "345.161, 184.831, 46.081, 0.4006", "345.474, 183.732, 46.0894, 0.3388", "345.789, 182.632, 46.1012, 0.3006", "346.103, 181.531, 46.1174, 0.3178", "346.397, 180.427, 46.1401, 0.3802", "346.585, 179.299, 46.1726, 0.3464", "346.773, 178.17, 46.2182, 0.3242", "346.961, 177.042, 46.2809, 0.3142", "347.149, 175.913, 46.3627, 0.3736", "347.278, 174.785, 46.4834, 0.334", "347.257, 173.658, 46.6816, 0.3004", "347.235, 172.531, 46.9294, 0.2752", "347.213, 171.404, 47.2002, 0.2758", "347.193, 170.277, 47.4695, 0.2766", "347.092, 169.154, 47.6616, 0.2784", "346.909, 168.034, 47.7229, 0.2816", "346.726, 166.913, 47.6851, 0.2878", "346.544, 165.793, 47.5874, 0.2992", "346.376, 164.672, 47.4673, 0.32", "346.609, 163.56, 47.4457, 0.3608", "346.841, 162.448, 47.5146, 0.4262", "347.075, 161.336, 47.6552, 0.5956", "347.303, 160.222, 47.8352, 0.6762", "347.495, 159.095, 47.9951, 0.5874", "347.686, 157.967, 48.125, 0.6624", "347.877, 156.839, 48.218, 0.5528", "348.069, 155.711, 48.284, 0.4128", "348.259, 154.584, 48.33, 0.3048", "348.446, 153.455, 48.3605, 0.2834", "348.635, 152.327, 48.3848, 0.2908", "348.823, 151.198, 48.407, 0.306", "349.01, 150.07, 48.4296, 0.3274", "349.231, 148.948, 48.4576, 0.3978", "349.493, 147.835, 48.4963, 0.3798", "349.754, 146.72, 48.5498, 0.3812", "350.016, 145.607, 48.6226, 0.4452", "350.278, 144.493, 48.7166, 0.4932", "350.631, 143.415, 48.876, 0.467", "351.012, 142.348, 49.0988, 0.5218", "351.393, 141.281, 49.3679, 0.579", "351.774, 140.213, 49.6678, 0.6712", "352.035, 139.106, 49.9618, 0.6806", "352.259, 137.986, 50.2407, 0.5674", "352.484, 136.867, 50.5047, 0.5338", "352.707, 135.747, 50.7612, 0.76", "352.989, 134.653, 51.0294, 0.6938", "353.488, 133.656, 51.3596, 0.6404", "353.987, 132.658, 51.7308, 0.4318", "354.486, 131.662, 52.1195, 0.3498", "355.069, 130.696, 52.4555, 0.3206", "355.727, 129.76, 52.6938, 0.3556", "356.385, 128.825, 52.8469, 0.4452", "357.041, 127.888, 52.9298, 0.492", "357.714, 126.962, 52.9659, 0.4718", "358.4, 126.047, 52.976, 0.496", "359.087, 125.132, 52.9788, 0.6988", "359.772, 124.217, 52.9824, 0.7658", "360.444, 123.291, 52.988, 0.5598", "361.101, 122.354, 52.9956, 0.4074", "361.759, 121.418, 53.006, 0.3842", "362.417, 120.483, 53.0205, 0.4566", "362.976, 119.492, 53.041, 0.715", "363.429, 118.441, 53.0709, 0.5912", "363.884, 117.39, 53.1135, 0.5436", "364.336, 116.34, 53.1636, 0.4874", "364.801, 115.299, 53.2311, 0.4554", "365.304, 114.29, 53.3613, 0.5036", "365.813, 113.316, 53.5674, 0.5266", "366.395, 112.458, 53.7723, 0.6644", "367.246, 111.961, 53.6942, 0.917", "367.639, 110.992, 53.587, 0.9412", "367.896, 109.879, 53.5156, 0.8536", "368.139, 108.764, 53.4694, 1.106", "368.327, 107.635, 53.4327, 1.1614", "368.514, 106.507, 53.4229, 1.2082", "368.611, 105.368, 53.4464, 1.107", "368.981, 104.003, 53.4638, 0.9188", "369.018, 102.859, 53.4741, 0.5704", "368.953, 101.721, 53.4943, 0.3808", "368.788, 100.59, 53.5083, 0.3306", "368.927, 99.4893, 53.5044, 0.3752", "369.321, 98.4155, 53.4727, 0.4764", "369.827, 97.4065, 53.4576, 0.5754", "370.489, 96.5685, 53.5237, 0.5008", "371.478, 96.0451, 53.4719, 0.474", "372.026, 95.2462, 53.1952, 0.5682", "372.223, 94.192, 52.7864, 0.733", "372.223, 93.048, 52.4216, 0.8532", "372.534, 92.0187, 51.9756, 0.8358", "373.277, 91.179, 51.5836, 0.5956", "373.699, 90.1417, 51.2596, 0.4728", "374.032, 89.0603, 50.9863, 0.5104", "374.486, 88.1461, 50.9566, 0.6646", "374.748, 87.1415, 50.9737, 0.5406", "375.312, 86.4064, 50.7604, 0.471", "376.079, 85.5665, 50.58, 0.4778", "376.617, 84.5831, 50.444, 0.7472", "376.862, 83.4731, 50.3583, 0.6842", "377.072, 82.3574, 50.3345, 0.5558", "377.302, 81.247, 50.3756, 0.5994", "377.721, 80.1854, 50.4456, 0.4576", "378.132, 79.125, 50.486, 0.3604", "378.338, 78.0931, 50.3118, 0.2924", "378.536, 77.0491, 50.064, 0.307", "378.698, 75.949, 49.9036, 0.337", "378.857, 74.8165, 49.7484, 0.38", "378.646, 73.7484, 49.6104, 0.521", "378.214, 72.8116, 49.3732, 0.4846", "378.033, 71.9126, 49.0162, 0.4888", "377.519, 70.9114, 48.7808, 0.6072", "377.142, 69.9027, 48.7309, 0.7456", "376.754, 68.8375, 48.7413, 0.483", "376.344, 67.7695, 48.9031, 0.2288" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "331.89, 473.509, 37.8428, 0.9202", "331.559, 472.71, 36.6453, 0.2288", "330.794, 471.866, 36.7133, 0.5038", "329.943, 471.144, 36.818, 0.6164", "329.193, 470.344, 36.783, 0.6266" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "334.344, 482.729, 42.38, 0.4372", "334.372, 482.836, 44.6295, 0.2288", "335.108, 482.728, 46.5783, 0.2842", "336.076, 483.075, 47.4018, 0.2926", "337.09, 483.466, 48.2941, 0.3076", "337.529, 484.348, 49.1641, 0.338", "338.157, 484.884, 50.1155, 0.3814", "339.139, 485.255, 51.0479, 0.5232", "340.07, 485.597, 51.9663, 0.4906", "340.991, 486.008, 52.9085, 0.4924", "342.022, 486.246, 53.7947, 0.6502", "343.11, 485.969, 54.546, 0.6502", "344.035, 485.43, 55.2454, 0.4694", "345.149, 485.426, 55.8533, 0.3256", "345.669, 485.982, 56.5597, 0.2748", "346.102, 486.913, 57.1978, 0.2748", "347.175, 487.104, 57.6831, 0.2752", "348.252, 486.731, 58.0493, 0.2758", "349.333, 486.764, 58.373, 0.2766", "350.399, 487.055, 58.7076, 0.2782" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "334.344, 482.729, 42.38, 0.4372", "334.738, 482.338, 43.584, 0.3674", "335.53, 481.67, 44.6928, 0.315", "336.484, 481.126, 45.647, 0.3022", "337.578, 481.005, 46.403, 0.3278", "338.552, 480.522, 46.9938, 0.3628", "339.217, 479.629, 47.5426, 0.4896", "339.699, 478.745, 48.2098, 0.4252", "340.123, 477.739, 48.8933, 0.385", "340.4, 476.676, 49.6138, 0.3824", "341.301, 476.199, 50.323, 0.489", "342.033, 475.561, 51.1286, 0.6008", "342.321, 474.623, 51.9957, 0.5374", "342.176, 473.603, 52.8433, 0.5928", "342.388, 472.516, 53.5671, 0.5424", "343.186, 471.74, 54.152, 0.5038", "344.2, 471.267, 54.6258, 0.3968", "345.291, 470.931, 54.9161, 0.3702", "346.085, 470.119, 55.0488, 0.401", "346.582, 469.13, 55.0038, 0.526", "347.452, 468.392, 54.9366, 0.6594", "348.022, 467.982, 54.9301, 0.696", "348.934, 467.326, 55.0074, 0.643", "349.844, 466.671, 55.1104, 0.4462", "350.754, 466.018, 55.1138, 0.3292", "351.681, 465.38, 55.1085, 0.2816", "352.625, 464.759, 55.1502, 0.2874", "353.465, 463.994, 55.1578, 0.2992", "354.286, 463.207, 55.1424, 0.3152", "355.046, 462.387, 55.1062, 0.3754", "355.792, 461.615, 54.9262, 0.3374", "356.467, 460.778, 54.7834, 0.3068", "357.171, 459.886, 54.6554, 0.287", "357.802, 458.983, 54.4519, 0.2988", "358.447, 458.065, 54.2573, 0.3142", "359.102, 457.128, 54.1425, 0.3734", "359.44, 456.061, 54.2018, 0.3338", "359.791, 454.999, 54.3746, 0.3", "360.383, 454.02, 54.5555, 0.2746", "361.187, 453.352, 54.7411, 0.2746", "361.727, 452.714, 54.9755, 0.2746", "361.9, 451.659, 55.2597, 0.2746", "362.696, 450.84, 55.4649, 0.2746", "363.601, 450.151, 55.6133, 0.2746", "364.609, 449.61, 55.7248, 0.2746", "365.633, 449.1, 55.8068, 0.2746", "366.655, 448.589, 55.8667, 0.2746", "367.739, 448.223, 55.921, 0.2746", "368.828, 447.875, 55.9885, 0.2746", "369.947, 447.768, 56.0927, 0.2746", "371.055, 447.768, 56.2968, 0.2746", "372.185, 447.768, 56.5076, 0.2746", "373.304, 447.619, 56.6745, 0.2746", "374.275, 447.059, 56.8016, 0.2746", "375.211, 446.417, 56.8946, 0.2746", "376.233, 445.938, 56.9598, 0.2746", "377.377, 445.938, 57.008, 0.2746", "378.431, 445.56, 57.0643, 0.2746", "379.422, 444.991, 57.1463, 0.2746", "380.438, 444.467, 57.2631, 0.2746", "381.475, 443.984, 57.4185, 0.2746", "382.556, 443.681, 57.6114, 0.2746", "383.477, 443.452, 57.9074, 0.2746", "383.738, 442.671, 58.483, 0.2746", "384.156, 441.788, 59.1024, 0.2746", "385.045, 441.177, 59.5815, 0.2746", "386.124, 440.799, 59.9292, 0.2746", "386.694, 439.925, 60.1572, 0.2746", "387.587, 439.211, 60.2776, 0.2746", "388.49, 438.51, 60.3162, 0.2746", "389.48, 437.939, 60.3322, 0.2746", "390.477, 437.381, 60.3546, 0.2746", "391.591, 437.119, 60.3854, 0.2746", "392.704, 436.857, 60.4285, 0.2746", "393.663, 436.275, 60.4909, 0.2746", "394.556, 435.561, 60.5774, 0.2744", "395.596, 435.128, 60.695, 0.2744", "396.693, 434.808, 60.8429, 0.2742", "397.721, 434.444, 61.0929, 0.2736", "398.641, 433.975, 61.4958, 0.2728", "399.525, 433.277, 61.8744, 0.2712", "400.201, 432.368, 62.1608, 0.2684", "400.536, 431.279, 62.3616, 0.2626", "400.824, 430.172, 62.4848, 0.2542", "401.223, 429.105, 62.5402, 0.2288", "401.734, 428.082, 62.5506, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "334.344, 482.729, 42.38, 0.4372", "333.255, 483.056, 44.9599, 0.2288", "332.282, 483.087, 46.6502, 0.2826", "331.599, 483.172, 47.4953, 0.2894", "330.696, 483.785, 48.2356, 0.3016", "329.655, 484.002, 48.8429, 0.327", "328.852, 483.861, 49.6163, 0.361", "327.929, 483.373, 50.4031, 0.486", "326.914, 482.866, 51.0622, 0.4184", "325.982, 482.222, 51.6071, 0.372", "325.176, 481.737, 52.2348, 0.3626", "324.178, 481.713, 52.9284, 0.429", "323.066, 481.892, 53.5181, 0.6038", "322.095, 482.37, 54.1069, 0.6774", "321.397, 483.1, 54.7666, 0.6556", "320.974, 484.11, 55.3879, 0.4692", "320.574, 485.121, 55.9591, 0.3732", "320.001, 486.073, 56.4651, 0.3588", "319.06, 486.699, 56.8644, 0.4522", "317.921, 486.786, 57.181, 0.4994", "316.83, 486.956, 57.4969, 0.5106", "315.848, 486.726, 57.8623, 0.4464", "314.856, 486.156, 58.175, 0.512", "314.139, 485.336, 58.529, 0.421", "313.271, 484.812, 59.0078, 0.3718", "312.317, 484.251, 59.4177, 0.386", "311.289, 484.002, 59.6168, 0.358", "310.209, 483.747, 59.8242, 0.3396", "309.167, 483.347, 60.0908, 0.3734", "308.218, 482.736, 60.3364, 0.3338", "307.302, 482.05, 60.5542, 0.3", "306.254, 481.651, 60.8182, 0.2746", "305.159, 481.359, 61.1377, 0.2746", "304.184, 480.859, 61.5194, 0.2746", "303.276, 480.244, 61.9682, 0.2746", "302.232, 479.795, 62.3711, 0.2746", "301.173, 479.361, 62.7236, 0.2746", "300.307, 478.671, 63.1014, 0.2746", "299.484, 477.922, 63.5116, 0.2746", "298.511, 477.321, 63.863, 0.2746", "297.535, 476.727, 64.188, 0.2746", "296.391, 476.694, 64.5212, 0.2746", "295.573, 476.294, 64.9802, 0.2746", "294.551, 475.913, 65.5287, 0.2746", "293.641, 476.119, 66.2875, 0.2746", "292.646, 475.906, 67.0074, 0.2746", "291.721, 475.493, 67.8166, 0.2746", "290.734, 475.338, 68.7467, 0.2746", "289.678, 475.314, 69.7267, 0.2746", "288.652, 475.345, 70.758, 0.2746", "287.65, 475.421, 71.8273, 0.2744", "286.634, 475.544, 72.9081, 0.2744", "285.609, 475.703, 73.9474, 0.2742", "284.528, 475.655, 74.8756, 0.2736", "283.417, 475.49, 75.6806, 0.2728", "282.53, 474.949, 76.3812, 0.2712", "281.586, 474.463, 76.9698, 0.2684", "280.492, 474.386, 77.5578, 0.2626", "279.431, 474.386, 78.2048, 0.2542", "278.432, 474.386, 78.9348, 0.2288", "277.45, 474.386, 80.7472, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "355.283, 469.4, 19.4776, 0.2886", "355.656, 470.393, 18.7964, 0.3002", "356.485, 471.158, 18.2445, 0.3242", "357.539, 471.275, 17.6854, 0.356", "357.281, 471.241, 16.8924, 0.4768", "357.281, 471.681, 15.8875, 0.4014", "357.739, 472.59, 15.1024, 0.3406", "357.739, 473.722, 14.4642, 0.3024", "358.381, 474.188, 13.9569, 0.3286", "359.52, 474.129, 13.6388, 0.3642", "360.447, 473.629, 13.4756, 0.4916", "361.011, 472.636, 13.3944, 0.4302", "361.95, 471.985, 13.3244, 0.3886", "363.055, 472.018, 13.23, 0.418", "363.942, 472.642, 13.1054, 0.4122", "364.453, 473.666, 12.9973, 0.4656", "365.222, 474.513, 12.9021, 0.4828", "366.142, 474.647, 12.8201, 0.4548", "367.19, 474.188, 12.752, 0.4636", "368.29, 473.975, 12.698, 0.644", "369.259, 474.226, 12.4905, 0.6384", "370.084, 474.903, 12.339, 0.4492", "369.449, 475.805, 12.3133, 0.2796", "369.411, 476.945, 12.3575, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "355.283, 469.4, 19.4776, 0.2886", "355.283, 468.525, 19.0434, 0.2288", "355.21, 467.449, 17.4303, 0.4228", "354.649, 466.654, 16.7698, 0.415", "354.369, 467.167, 15.8267, 0.5018", "354.778, 467.286, 14.721, 0.4006", "354.825, 466.165, 13.8079, 0.339", "354.825, 465.021, 13.1368, 0.2998", "354.936, 463.884, 12.6837, 0.3216", "355.374, 462.848, 12.4018, 0.359", "356.052, 461.935, 12.248, 0.4464", "356.715, 461.013, 12.1472, 0.5198", "357.182, 460.033, 11.951, 0.3984", "357.498, 458.96, 11.7359, 0.2796", "357.115, 457.902, 11.3728, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "384.733, 496.049, 46.7407, 0.486", "384.629, 494.987, 46.9297, 0.418", "384.584, 493.874, 47.1058, 0.3736", "384.584, 492.736, 47.1901, 0.3538", "384.578, 491.599, 47.2046, 0.4722", "384.383, 490.474, 47.2352, 0.3934", "384.187, 489.349, 47.2755, 0.3254", "384.409, 488.24, 47.2508, 0.2746", "384.675, 487.139, 47.2058, 0.2746", "385.22, 486.161, 47.2774, 0.2746", "385.792, 485.192, 47.3939, 0.2746", "386.426, 484.243, 47.4538, 0.2746", "387.055, 483.292, 47.4956, 0.2746", "387.68, 482.339, 47.5639, 0.2746", "388.507, 481.559, 47.6084, 0.2746", "389.378, 480.816, 47.6132, 0.2746", "390.207, 480.029, 47.593, 0.2746", "391.028, 479.233, 47.556, 0.2746", "391.911, 478.507, 47.4981, 0.2746", "392.423, 477.496, 47.3651, 0.2746", "392.935, 476.486, 47.1845, 0.2746", "393.494, 475.512, 46.9846, 0.2746", "394.387, 474.797, 46.8297, 0.2746", "395.268, 474.069, 46.7169, 0.2746", "396.064, 473.246, 46.6416, 0.2746", "396.799, 472.388, 46.5984, 0.2746", "397.168, 471.305, 46.5732, 0.2746", "397.537, 470.222, 46.5511, 0.2746", "397.744, 469.098, 46.5189, 0.2746", "398.463, 468.23, 46.4747, 0.2746", "399.28, 467.438, 46.4173, 0.2746", "400.31, 467.004, 46.3476, 0.2746", "401.122, 466.237, 46.2006, 0.2746", "401.918, 465.442, 45.9973, 0.2746", "402.937, 465.074, 45.8091, 0.2746", "403.9, 464.564, 45.6658, 0.2746", "404.45, 463.583, 45.5641, 0.2746", "404.841, 462.509, 45.4997, 0.2746", "405.013, 461.396, 45.4681, 0.2746", "405.642, 460.441, 45.4521, 0.2746", "406.309, 459.531, 45.4367, 0.2746", "407.344, 459.052, 45.4149, 0.2746", "408.092, 458.263, 45.3835, 0.2746", "408.473, 457.19, 45.3404, 0.2746", "408.985, 456.167, 45.2858, 0.2746", "409.419, 455.111, 45.199, 0.2746", "409.839, 454.049, 45.0859, 0.2746", "410.468, 453.188, 44.8711, 0.2746", "410.904, 452.129, 44.709, 0.2746", "411.341, 451.072, 44.5987, 0.2746", "411.878, 450.066, 44.5388, 0.2746", "412.477, 449.092, 44.5301, 0.2746", "412.986, 448.07, 44.5718, 0.2746", "413.304, 446.976, 44.6603, 0.2746", "414.105, 446.349, 44.7751, 0.2746", "414.922, 445.599, 44.9145, 0.2746", "414.629, 444.642, 45.2001, 0.2746", "414.178, 443.674, 45.605, 0.2746", "413.569, 442.751, 45.9928, 0.2746", "412.852, 441.859, 46.2921, 0.2746", "412.191, 440.927, 46.5105, 0.2746", "411.562, 439.971, 46.6584, 0.2746", "410.95, 439.004, 46.7477, 0.2746", "410.35, 438.031, 46.8118, 0.2746", "409.718, 437.078, 46.8815, 0.2746", "409.06, 436.142, 46.9697, 0.2746", "408.541, 435.148, 47.124, 0.2746", "408.14, 434.104, 47.369, 0.2746", "407.811, 433.021, 47.6213, 0.2746", "407.522, 431.914, 47.8416, 0.2746", "407.106, 430.88, 48.0637, 0.2746", "406.443, 429.985, 48.3398, 0.2746", "405.816, 429.046, 48.5901, 0.2746", "405.216, 428.071, 48.7785, 0.2746", "404.578, 427.123, 48.928, 0.2746", "403.909, 426.195, 49.0496, 0.2746", "403.567, 425.149, 49.1543, 0.2746", "403.567, 424.012, 49.2853, 0.2746", "403.567, 422.875, 49.4446, 0.2746", "403.567, 421.739, 49.6241, 0.2746", "403.382, 420.626, 49.7848, 0.2746", "403.042, 419.533, 49.9016, 0.2746", "402.786, 418.427, 49.978, 0.2746", "402.729, 417.284, 50.0192, 0.2746", "402.671, 416.141, 50.0366, 0.2744", "402.65, 414.999, 50.0405, 0.2744", "402.65, 413.855, 50.0405, 0.2742", "402.65, 412.711, 50.0405, 0.2736", "402.65, 411.567, 50.0405, 0.2728", "402.65, 410.423, 50.0405, 0.2712", "402.655, 409.279, 50.0405, 0.2684", "402.82, 408.146, 50.0405, 0.2626", "402.984, 407.015, 50.0405, 0.2542", "403.076, 405.876, 50.0405, 0.2288", "403.109, 404.732, 50.0405, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "384.733, 496.049, 46.7407, 0.486", "385.331, 495.949, 46.6894, 0.2288", "386.436, 495.687, 46.4288, 0.2746", "387.478, 495.238, 46.3142, 0.2746", "388.393, 494.568, 46.1723, 0.2746", "389.271, 493.891, 45.9648, 0.2746", "390.258, 493.61, 45.6652, 0.2746", "391.338, 493.286, 45.4154, 0.2746", "392.387, 493.05, 45.3575, 0.2746", "393.03, 492.294, 45.5087, 0.2746", "393.537, 491.291, 45.7114, 0.2746", "394.176, 490.405, 45.8116, 0.2746", "395.127, 489.933, 45.7878, 0.2746", "396.223, 489.641, 45.7464, 0.2746", "397.337, 489.379, 45.6851, 0.2746", "398.451, 489.116, 45.6268, 0.2746", "399.535, 488.759, 45.6016, 0.2746", "400.608, 488.362, 45.6196, 0.2746", "401.718, 488.139, 45.668, 0.2746", "401.219, 488.39, 45.7388, 0.2746", "402.084, 487.645, 45.8494, 0.2746", "402.949, 486.9, 45.9922, 0.2746", "403.814, 486.155, 46.1594, 0.2746", "404.677, 485.409, 46.3439, 0.2746", "405.542, 484.665, 46.5396, 0.2746", "406.407, 483.92, 46.7412, 0.2746", "407.272, 483.175, 46.9462, 0.2746", "408.136, 482.431, 47.1548, 0.2746", "409.001, 481.686, 47.3698, 0.2746", "409.866, 480.94, 47.5944, 0.2746", "410.73, 480.195, 47.8313, 0.2746", "411.594, 479.45, 48.0805, 0.2746", "412.459, 478.706, 48.3409, 0.2746", "413.486, 478.384, 48.6685, 0.2746", "414.575, 478.224, 49.0641, 0.2748", "415.37, 477.544, 49.4497, 0.2748", "416.024, 476.61, 49.7834, 0.2752", "416.681, 475.674, 50.041, 0.2758", "417.372, 474.773, 50.2505, 0.2766", "418.179, 473.996, 50.479, 0.2784", "418.922, 473.149, 50.6864, 0.2818", "419.592, 472.223, 50.8421, 0.288", "420.127, 471.225, 50.9393, 0.3006", "420.517, 470.152, 50.969, 0.3176", "420.985, 469.118, 50.9695, 0.3798", "421.571, 468.14, 50.9872, 0.3458", "422.454, 467.437, 51.0012, 0.3222", "423.337, 466.839, 50.9404, 0.3156", "423.683, 465.801, 50.8298, 0.3508", "424.408, 465.081, 50.8743, 0.415", "425.291, 464.361, 50.965, 0.5396", "426.149, 463.615, 51.0877, 0.7438", "426.749, 462.642, 51.2126, 0.5652", "427.337, 461.662, 51.3414, 0.4228", "427.718, 460.594, 51.5127, 0.3862", "428.113, 459.534, 51.6978, 0.3588", "428.786, 458.609, 51.8543, 0.341", "429.468, 457.717, 51.9621, 0.376", "430.372, 457.146, 52.0106, 0.3384", "431.46, 457.018, 52.1732, 0.3082", "432.521, 457.315, 52.4485, 0.2898", "433.632, 457.482, 52.7612, 0.3024", "434.572, 458.081, 53.1779, 0.3276", "435.448, 458.726, 53.6788, 0.3672", "436.155, 459.493, 54.2679, 0.4746", "436.978, 460.168, 54.8316, 0.5084", "437.796, 460.954, 55.6004, 0.6864" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "329.193, 470.344, 36.783, 0.6266", "329.562, 469.634, 36.7741, 0.4634", "329.436, 468.58, 36.8648, 0.361", "329.271, 467.458, 36.9477, 0.3402", "329.267, 466.32, 36.9592, 0.399", "329.411, 465.223, 36.8483, 0.4928", "329.665, 464.114, 36.738, 0.7398", "329.757, 462.977, 36.6419, 0.8436", "329.978, 461.856, 36.5674, 0.6948", "329.749, 460.751, 36.5302, 0.7018", "329.316, 459.692, 36.5305, 0.7176", "329.244, 458.561, 36.5739, 0.7302", "329.228, 457.458, 36.7007, 0.6066", "329.148, 456.321, 36.7842, 0.6334", "328.831, 455.226, 36.7856, 0.8132", "328.621, 454.144, 36.6324, 0.7438", "328.446, 453.064, 36.358, 0.5112", "328.714, 451.977, 36.0534, 0.3564", "328.69, 450.837, 35.8207, 0.3268", "328.439, 449.721, 35.681, 0.397", "328.336, 448.591, 35.637, 0.3782", "328.377, 447.469, 35.7258, 0.378", "328.578, 446.367, 35.898, 0.439", "328.708, 445.241, 36.0576, 0.4832", "328.533, 444.121, 36.167, 0.4424", "328.352, 442.997, 36.2261, 0.5054", "328.257, 441.856, 36.2382, 0.4074", "327.98, 440.757, 36.2082, 0.3528", "327.494, 439.726, 36.1435, 0.32", "326.741, 438.943, 35.9979, 0.3846", "325.892, 438.205, 35.8369, 0.3544", "325.293, 437.254, 35.7232, 0.3388", "325.07, 436.152, 35.688, 0.3422", "324.715, 435.113, 35.7683, 0.4204", "324.235, 434.09, 35.8669, 0.4464", "323.908, 433.001, 35.922, 0.3844", "324.065, 431.923, 35.8691, 0.3484", "324.51, 430.89, 35.8204, 0.354", "324.66, 429.781, 35.7342, 0.473", "324.683, 428.643, 35.6191, 0.3944", "324.777, 427.505, 35.5384, 0.3278", "325.216, 426.463, 35.5076, 0.2792", "325.673, 425.415, 35.527, 0.2832", "326.216, 424.409, 35.5866, 0.2904", "326.51, 423.313, 35.6905, 0.305", "326.801, 422.207, 35.8344, 0.3256", "327.192, 421.167, 36.0606, 0.395", "327.491, 420.199, 36.4538, 0.3732", "327.739, 419.212, 36.923, 0.3748", "327.896, 418.145, 37.2078, 0.4036", "327.614, 417.144, 37.24, 0.5606", "327.242, 416.084, 37.2075, 0.5782", "327.224, 414.997, 37.2271, 0.5646", "327.719, 413.988, 37.2686, 0.5364", "328.315, 413.015, 37.2957, 0.498", "328.631, 411.923, 37.3352, 0.5864", "328.454, 410.829, 37.3755, 0.6644", "328.087, 409.756, 37.3615, 0.9968", "328.185, 408.678, 37.2758, 1.1584", "328.353, 407.557, 37.2232, 1.1486", "328.553, 406.447, 37.2921, 1.0308", "328.471, 405.362, 37.5026, 1.0676", "328.612, 404.29, 37.8244, 1.0414", "329.35, 403.478, 38.1332, 0.764", "330.186, 402.698, 38.3821, 0.6742", "330.879, 401.792, 38.561, 0.7342", "331.312, 400.741, 38.6758, 0.892", "331.645, 399.647, 38.7436, 0.7276", "331.92, 398.538, 38.7884, 0.5834", "331.94, 397.4, 38.8436, 0.4518", "331.693, 396.318, 38.9743, 0.4634", "331.078, 395.374, 39.104, 0.617", "330.6, 394.355, 39.1348, 0.716", "330.298, 393.257, 39.1132, 0.6614", "330.482, 392.15, 39.0284, 0.7978", "330.589, 391.012, 38.9379, 0.8136", "330.476, 389.878, 38.8772, 0.8506", "330.417, 388.766, 38.9231, 0.6516", "330.581, 387.649, 38.9015, 0.6676", "330.376, 386.535, 38.8315, 0.6594", "329.989, 385.458, 38.7775, 0.5986", "329.388, 384.485, 38.7296, 0.4772", "328.884, 383.458, 38.6862, 0.5238", "328.551, 382.365, 38.6604, 0.436", "328.29, 381.253, 38.6714, 0.4306", "328.08, 380.136, 38.6392, 0.3458", "327.632, 379.085, 38.5955, 0.322", "327.413, 377.982, 38.4944, 0.3162", "327.413, 376.846, 38.4698, 0.3464", "327.416, 375.707, 38.4891, 0.4338", "327.438, 374.564, 38.5067, 0.443", "327.568, 373.428, 38.5241, 0.5168", "327.931, 372.343, 38.5314, 0.6056", "328.384, 371.298, 38.523, 0.5466", "329.167, 370.482, 38.4846, 0.6084", "329.427, 369.398, 38.4238, 0.5782", "329.026, 368.337, 38.3429, 0.5372", "329.049, 367.206, 38.2236, 0.6182", "329.409, 366.142, 38.0279, 0.6932", "329.824, 365.096, 37.7905, 0.5098", "330.322, 364.073, 37.5721, 0.3626", "330.839, 363.093, 37.3237, 0.2962", "331.094, 362.045, 37.1521, 0.315", "330.84, 361.08, 37.2154, 0.349", "330.483, 359.995, 37.3016, 0.416", "330.244, 358.877, 37.3948, 0.5192", "330.047, 357.752, 37.4875, 0.8142", "329.734, 356.656, 37.5892, 0.8568", "329.498, 355.547, 37.6239, 0.639", "329.586, 354.408, 37.6048, 0.5326", "329.652, 353.28, 37.6107, 0.4916", "329.466, 352.191, 37.6634, 0.574", "329.066, 351.135, 37.6121, 0.8724", "328.648, 350.134, 37.3929, 0.948", "328.373, 349.056, 37.0994, 0.8902", "328.295, 347.928, 36.7875, 0.597", "328.171, 346.8, 36.4949, 0.5022", "328.024, 345.707, 36.2054, 0.4342", "328.298, 344.74, 36.1004, 0.4714", "328.155, 343.626, 36.0458, 0.664", "327.511, 342.694, 35.966, 0.6472", "326.88, 341.776, 35.8112, 0.6028", "326.182, 340.607, 35.7711, 0.5844", "325.465, 339.743, 35.663, 0.4704", "324.782, 338.856, 35.5807, 0.4172", "324.437, 337.813, 35.5239, 0.4654", "324.065, 336.782, 35.3942, 0.5266", "323.437, 335.838, 35.3147, 0.5484", "322.94, 334.882, 35.2058, 0.5778", "322.728, 333.823, 34.974, 0.4566", "322.523, 332.732, 34.7026, 0.3984", "322.424, 331.609, 34.5106, 0.3988", "322.597, 330.487, 34.4126, 0.558", "322.761, 329.366, 34.3717, 0.542", "322.629, 328.276, 34.4554, 0.6504", "322.45, 327.183, 34.6088, 0.639", "322.506, 326.049, 34.7122, 0.7336", "322.835, 324.962, 34.7368, 0.5766", "323.146, 323.886, 34.6436, 0.5254", "323.054, 322.791, 34.4498, 0.6392", "322.736, 321.698, 34.2073, 0.7514", "322.443, 320.607, 33.9461, 0.7532", "322.313, 319.508, 33.6473, 0.8424", "322.094, 318.388, 33.4222, 0.8196", "321.761, 317.293, 33.2819, 0.7766", "321.539, 316.187, 33.1884, 0.6998", "321.758, 315.115, 33.1176, 0.5416", "322.438, 314.259, 33.203, 0.5566", "323.058, 313.418, 33.4188, 0.4576", "323.288, 312.357, 33.5507, 0.4338", "323.251, 311.297, 33.4715, 0.529", "323.042, 310.237, 33.3164, 0.4876", "322.513, 309.236, 33.2147, 0.5514", "322.055, 308.224, 33.1268, 0.4468", "322.087, 307.1, 33.0599, 0.419", "322.401, 305.999, 33.0336, 0.4766", "322.8, 304.93, 33.0394, 0.5114", "323.175, 303.856, 33.0604, 0.695", "323.398, 302.745, 33.1092, 0.6874", "323.601, 301.669, 33.0954, 0.5332", "323.71, 300.586, 32.97, 0.4684", "323.543, 299.467, 32.8754, 0.419", "323.347, 298.348, 32.8084, 0.4418", "323.296, 297.217, 32.7032, 0.6138", "323.3, 296.134, 32.4999, 0.5322", "323.331, 295.057, 32.349, 0.4968", "323.505, 293.984, 32.3739, 0.5536", "323.699, 292.886, 32.4503, 0.749", "323.774, 291.745, 32.4988, 0.6778", "323.91, 290.613, 32.5091, 0.818", "324.154, 289.496, 32.4593, 0.6716", "324.365, 288.41, 32.2627, 0.5424", "324.116, 287.364, 31.9757, 0.5274", "323.624, 286.334, 31.6708, 0.5534", "323.635, 285.276, 31.3037, 0.7986", "324.06, 284.237, 30.9618, 0.7562", "324.359, 283.149, 30.6482, 0.5706", "324.509, 282.019, 30.3192, 0.5168", "324.35, 280.965, 29.8413, 0.3814", "324.342, 280.323, 29.0632, 0.305", "323.877, 279.501, 28.2106, 0.2288", "324.101, 278.51, 26.2741, 0.2288" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "329.193, 470.344, 36.783, 0.6266", "328.061, 469.534, 35.705, 0.2288", "327.033, 469.335, 35.114, 0.5198", "325.94, 469.065, 34.8558, 0.477", "324.826, 468.928, 34.7172, 0.502", "323.693, 468.864, 34.6506, 0.4984", "322.635, 468.543, 34.5013, 0.5068", "321.804, 467.778, 34.3512, 0.4484", "321.194, 466.813, 34.2409, 0.469", "320.639, 465.812, 34.1435, 0.5708", "319.936, 464.91, 34.048, 0.9072", "318.937, 464.361, 33.9601, 1.0426", "317.913, 463.899, 33.8341, 0.9178", "316.872, 463.468, 33.6862, 0.6822", "315.839, 462.977, 33.6045, 0.7214", "314.726, 462.717, 33.5952, 0.7742", "313.654, 462.42, 33.719, 0.9662", "312.624, 461.972, 33.9234, 1.0942", "311.683, 461.374, 34.1877, 1.0666", "310.753, 460.725, 34.4019, 0.9276", "310.19, 459.787, 34.421, 0.8678", "309.3, 459.175, 34.2888, 0.7116", "308.321, 458.665, 34.258, 0.643", "307.257, 458.33, 34.2762, 0.5858", "306.164, 458.078, 34.1981, 0.825", "305.034, 457.958, 34.1079, 0.7382", "303.904, 458.039, 34.011, 0.8646", "302.787, 458.222, 33.9413, 0.8454", "301.665, 458.118, 33.9343, 0.8982", "300.543, 458.018, 33.9511, 0.795", "299.443, 458.059, 34.0281, 0.6648", "298.432, 457.548, 34.0726, 0.586", "297.621, 457.22, 33.9514, 0.5652", "296.768, 456.599, 33.9307, 0.6036", "295.978, 456.2, 34.1564, 0.5302", "295.147, 455.662, 34.3221, 0.4094", "294.213, 455.491, 34.2028, 0.3402", "293.195, 455.177, 33.9559, 0.3748", "292.211, 455.508, 33.8621, 0.3362", "291.098, 455.752, 33.7173, 0.3044", "289.979, 455.975, 33.5283, 0.2826", "288.87, 456.198, 33.3166, 0.2892", "287.77, 456.417, 33.08, 0.303", "286.672, 456.383, 32.8222, 0.3216", "285.576, 456.09, 32.5584, 0.3876", "284.515, 455.696, 32.3467, 0.3602", "283.507, 455.155, 32.2213, 0.3494", "282.533, 454.578, 32.2008, 0.3632", "281.62, 453.93, 32.3156, 0.454", "280.699, 453.289, 32.4234, 0.5342", "279.771, 452.651, 32.4562, 0.4236", "278.821, 452.055, 32.5595, 0.3342", "277.879, 451.452, 32.7264, 0.291", "277.192, 450.537, 32.8574, 0.3052", "276.492, 449.638, 32.9627, 0.3318", "275.468, 449.126, 33.0632, 0.3778", "274.558, 448.495, 33.1649, 0.4808", "273.75, 447.73, 33.259, 0.5844", "272.788, 447.109, 33.3516, 0.5134", "271.795, 446.565, 33.514, 0.5158", "270.803, 446.023, 33.7288, 0.5558", "269.92, 445.374, 34.0259, 0.4582", "269.099, 444.642, 34.3291, 0.4244", "268.417, 443.724, 34.5358, 0.334", "267.745, 442.809, 34.624, 0.3002", "267.091, 441.899, 34.5615, 0.275", "266.34, 441.056, 34.4406, 0.2752", "265.518, 440.259, 34.3221, 0.2758", "264.594, 439.599, 34.2283, 0.2768", "263.603, 439.029, 34.1712, 0.2786", "262.611, 438.459, 34.148, 0.2824", "261.619, 437.889, 34.1505, 0.2888", "260.567, 437.471, 34.1631, 0.3018", "259.453, 437.209, 34.1804, 0.3198", "258.363, 436.89, 34.2059, 0.384", "257.389, 436.291, 34.2426, 0.3532", "256.398, 435.729, 34.291, 0.3366", "255.292, 435.442, 34.3498, 0.3382", "254.173, 435.273, 34.4305, 0.413", "253.251, 434.71, 34.6346, 0.4326", "252.702, 433.771, 34.8312, 0.3592", "252.066, 432.83, 34.9488, 0.3", "251.338, 431.96, 35.0235, 0.2746", "250.505, 431.179, 35.1005, 0.2746", "249.602, 430.488, 35.1588, 0.2746", "248.628, 429.889, 35.1837, 0.2746", "247.618, 429.36, 35.1988, 0.2746", "246.818, 428.624, 35.2092, 0.2746", "246.284, 427.613, 35.208, 0.2746", "246.013, 426.511, 35.1932, 0.2746", "245.412, 425.71, 35.1669, 0.2746", "244.725, 424.795, 35.1302, 0.2746", "244.108, 423.833, 35.0829, 0.2748", "243.213, 423.161, 35.0269, 0.275", "242.094, 423.102, 34.9216, 0.2752", "240.994, 423.057, 34.7276, 0.276", "240.003, 422.522, 34.5708, 0.277", "239.168, 421.777, 34.4652, 0.2792", "238.356, 421.016, 34.4327, 0.283", "237.375, 420.484, 34.524, 0.2902", "236.408, 419.926, 34.6242, 0.3046", "235.455, 419.337, 34.627, 0.3248", "234.426, 418.905, 34.6371, 0.393", "233.358, 418.559, 34.6956, 0.3714", "232.351, 418.036, 34.7197, 0.3652", "231.543, 417.234, 34.6895, 0.4158", "230.604, 416.727, 34.5254, 0.438", "229.545, 416.691, 34.2535, 0.369", "228.404, 416.691, 34.0222, 0.3178", "227.26, 416.691, 33.8097, 0.3086", "226.144, 416.463, 33.607, 0.3326", "225.163, 415.955, 33.3712, 0.4072", "224.47, 415.152, 33.0187, 0.3988", "223.837, 414.248, 32.5886, 0.4096", "223.058, 413.423, 32.1866, 0.5308", "222.284, 412.588, 31.8111, 0.4912", "221.579, 411.694, 31.4216, 0.5576", "221.051, 410.718, 31.0069, 0.4594", "220.743, 409.641, 30.5483, 0.4372", "220.354, 408.836, 29.9373, 0.5354", "219.784, 408.025, 29.2538, 0.4992", "219.03, 407.289, 28.6129, 0.5754", "219.015, 406.246, 28.1912, 0.4796", "218.889, 405.264, 27.7267, 0.5366", "218.178, 404.382, 27.3364, 0.419", "217.335, 403.735, 27.1342, 0.368", "217.066, 402.699, 27.0217, 0.3788", "216.88, 401.93, 26.5054, 0.3442", "216.707, 401.218, 25.7152, 0.3188", "216.106, 400.363, 25.0107, 0.3104", "215.391, 399.47, 24.4454, 0.3358", "214.907, 398.443, 24.0055, 0.4146", "214.482, 397.38, 23.7012, 0.4058", "213.904, 396.426, 23.4758, 0.454", "213.24, 395.532, 23.2448, 0.4604", "212.71, 394.524, 23.0597, 0.4152", "212.198, 393.502, 22.9205, 0.3814", "211.686, 392.478, 22.8242, 0.5338", "211.174, 391.455, 22.7458, 0.2288" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "350.399, 487.055, 58.7076, 0.2782", "350.705, 487.177, 58.9366, 0.2814", "351.766, 487.601, 59.1133, 0.287", "352.838, 487.954, 59.2637, 0.2988", "353.974, 487.82, 59.3944, 0.3142", "355.11, 487.686, 59.5115, 0.3734", "356.239, 487.665, 59.687, 0.3338", "357.367, 487.665, 59.9354, 0.3", "358.502, 487.69, 60.2123, 0.2746", "359.644, 487.747, 60.4752, 0.2746", "360.787, 487.804, 60.7314, 0.2746", "361.874, 488.101, 61.0302, 0.2746", "362.941, 488.482, 61.3858, 0.2746", "364.032, 488.582, 61.8411, 0.2746", "365.05, 488.886, 62.4187, 0.2746", "365.816, 489.29, 62.9213, 0.2746", "366.429, 489.978, 63.5012, 0.2746", "366.146, 490.381, 64.3549, 0.2746", "367.159, 490.914, 65.063, 0.2746", "368.17, 491.448, 65.6681, 0.2746", "369.181, 491.981, 66.2203, 0.2746", "370.124, 492.508, 66.8632, 0.2746", "370.709, 492.992, 67.6724, 0.2746", "371.596, 493.335, 68.6515, 0.2746", "372.563, 493.205, 69.811, 0.2746", "373.388, 493.194, 71.1486, 0.2744", "374.209, 493.194, 72.5732, 0.2744", "375.047, 493.194, 73.9911, 0.2742", "376.053, 493.191, 75.2332, 0.2736", "377.152, 493.236, 76.2395, 0.2728", "378.235, 493.393, 77.0305, 0.2712", "379.299, 493.812, 77.5331, 0.2684", "379.711, 494.789, 77.8151, 0.2626", "379.729, 495.932, 77.9503, 0.2542", "380.023, 497.013, 77.9999, 0.2288", "380.599, 497.984, 77.9422, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "350.399, 487.055, 58.7076, 0.2782", "351.384, 487.477, 59.1164, 0.2288", "351.842, 488.525, 59.7134, 0.2746", "352.715, 488.943, 60.0233, 0.2746", "353.68, 489.222, 60.4769, 0.2746", "354.302, 490.125, 60.8479, 0.2746", "355.361, 490.549, 61.1447, 0.2746", "356.496, 490.697, 61.376, 0.2744", "357.624, 490.711, 61.5499, 0.2744", "358.736, 490.786, 61.7148, 0.2742", "359.844, 491.01, 61.908, 0.2736", "360.922, 491.279, 62.1415, 0.2728", "361.489, 492.272, 62.3473, 0.2712", "362.177, 493.18, 62.5243, 0.2684", "362.942, 494.025, 62.6861, 0.2626", "363.746, 494.806, 62.8936, 0.2542", "364.494, 495.635, 63.1145, 0.2288", "364.998, 496.662, 63.4684, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_618",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_619",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_17", "dend_10", "dend_1", "dend_0", "apic_4", "apic_1", "dend_21", "dend_18", "dend_12", "dend_11", "dend_9", "dend_2", "apic_10", "apic_5", "apic_3", "apic_2", "dend_27", "dend_22", "dend_20", "dend_19", "dend_16", "dend_13", "dend_6", "dend_3", "apic_17", "apic_11", "apic_9", "apic_6", "dend_24", "dend_23", "dend_15", "dend_14", "dend_8", "dend_7", "dend_5", "dend_4", "apic_21", "apic_18", "apic_14", "apic_13", "apic_12", "apic_8", "apic_7", "dend_26", "dend_25", "apic_20", "apic_19", "apic_16", "apic_15" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_10", "dend_1", "dend_0", "dend_21", "dend_18", "dend_12", "dend_11", "dend_9", "dend_2", "dend_27", "dend_22", "dend_20", "dend_19", "dend_16", "dend_13", "dend_6", "dend_3", "dend_24", "dend_23", "dend_15", "dend_14", "dend_8", "dend_7", "dend_5", "dend_4", "dend_26", "dend_25" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_4", "apic_1", "apic_10", "apic_5", "apic_3", "apic_2", "apic_17", "apic_11", "apic_9", "apic_6", "apic_21", "apic_18", "apic_14", "apic_13", "apic_12", "apic_8", "apic_7", "apic_20", "apic_19", "apic_16", "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26001",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "apic_10", "apic_10", "apic_10", "apic_10", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_18", "apic_18", "apic_18", "apic_18", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.4231846"
  }, {
    "group" : "apic",
    "value" : "3.4231846"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "65.16345"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.019749977",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "8.00631E-15",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.21154355",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.004506304",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.887303E-6",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.3543594E-8",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.2144076E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.27032518",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "5.3185865E-4",
    "erev" : "-97.2548"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.0549583E-7",
    "erev" : "-97.2548"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0018183E-7",
    "erev" : "-97.2548"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.1649469E-4",
    "erev" : "-97.2548"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.714471E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.009997822",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_482525598",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_482525598

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_10, id: apic_10, parent: apic_4
create apic_10
public apic_10
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_17, id: apic_17, parent: apic_10
create apic_17
public apic_17
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_9, id: apic_9, parent: apic_5
create apic_9
public apic_9
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_21, id: apic_21, parent: apic_17
create apic_21
public apic_21
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_14, id: apic_14, parent: apic_11
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_20, id: apic_20, parent: apic_18
create apic_20
public apic_20
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_618, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_618
// Group: {name=ModelViewParmSubset_619, groups=[], sections=[apic_0, dend_17, dend_10, dend_1, dend_0, apic_4, apic_1, dend_21, dend_18, dend_12, dend_11, dend_9, dend_2, apic_10, apic_5, apic_3, apic_2, dend_27, dend_22, dend_20, dend_19, dend_16, dend_13, dend_6, dend_3, apic_17, apic_11, apic_9, apic_6, dend_24, dend_23, dend_15, dend_14, dend_8, dend_7, dend_5, dend_4, apic_21, apic_18, apic_14, apic_13, apic_12, apic_8, apic_7, dend_26, dend_25, apic_20, apic_19, apic_16, apic_15]}
objref ModelViewParmSubset_619
// Group: {name=dend, groups=[], sections=[dend_17, dend_10, dend_1, dend_0, dend_21, dend_18, dend_12, dend_11, dend_9, dend_2, dend_27, dend_22, dend_20, dend_19, dend_16, dend_13, dend_6, dend_3, dend_24, dend_23, dend_15, dend_14, dend_8, dend_7, dend_5, dend_4, dend_26, dend_25]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_10, apic_5, apic_3, apic_2, apic_17, apic_11, apic_9, apic_6, apic_21, apic_18, apic_14, apic_13, apic_12, apic_8, apic_7, apic_20, apic_19, apic_16, apic_15]}
objref apic
// Group: {name=OneSecGrp_SectionRef_26001, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_26001
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_482525598
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect apic_0(0), soma_0(0.5)
    connect dend_17(0), soma_0(0.5)
    connect dend_10(0), soma_0(0.5)
    connect dend_1(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_10(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_17(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_9(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_21(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_14(0), apic_11(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_20(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 326.344, 508.279, 37.52, 13.1196 ) }
    soma_0 { pt3dadd( 332.904, 508.279, 37.52, 13.1196 ) }
    soma_0 { pt3dadd( 339.464, 508.279, 37.52, 13.1196 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 332.904, 508.279, 37.52, 1.0 ) }
    axon_0 { pt3dadd( 338.745, 522.095, 37.52, 1.0 ) }
    axon_0 { pt3dadd( 344.587, 535.911, 37.52, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 335.145, 503.456, 38.2847, 0.488 ) }
    apic_0 { pt3dadd( 334.913, 502.375, 38.4653, 0.7246 ) }
    apic_0 { pt3dadd( 334.755, 501.256, 38.4541, 0.8458 ) }
    apic_0 { pt3dadd( 334.835, 500.167, 38.2312, 1.2368 ) }
    apic_0 { pt3dadd( 335.155, 499.154, 37.8221, 1.6146 ) }
    apic_0 { pt3dadd( 334.914, 497.682, 37.242, 1.7128 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 337.304, 505.54, 41.9642, 0.2288 ) }
    dend_17 { pt3dadd( 338.374, 505.539, 41.932, 0.4294 ) }
    dend_17 { pt3dadd( 339.516, 505.574, 41.9073, 0.5428 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 330.03, 511.385, 30.0118, 0.2288 ) }
    dend_10 { pt3dadd( 329.062, 510.93, 28.8123, 0.6346 ) }
    dend_10 { pt3dadd( 328.266, 510.516, 28.2195, 0.567 ) }
    dend_10 { pt3dadd( 328.076, 510.246, 27.2502, 0.579 ) }
    dend_10 { pt3dadd( 328.581, 509.342, 26.2066, 0.6202 ) }
    dend_10 { pt3dadd( 329.202, 508.383, 25.2874, 0.6054 ) }
    dend_10 { pt3dadd( 329.541, 507.298, 24.4423, 0.5626 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 328.031, 509.996, 40.831, 0.4576 ) }
    dend_1 { pt3dadd( 327.089, 509.406, 40.8699, 0.4032 ) }
    dend_1 { pt3dadd( 326.141, 508.767, 40.8836, 0.377 ) }
    dend_1 { pt3dadd( 325.28, 508.014, 40.8957, 0.4374 ) }
    dend_1 { pt3dadd( 324.404, 507.278, 40.91, 0.4794 ) }
    dend_1 { pt3dadd( 323.316, 506.948, 40.9343, 0.4398 ) }
    dend_1 { pt3dadd( 322.187, 507.104, 40.9688, 0.4768 ) }
    dend_1 { pt3dadd( 321.095, 507.356, 40.9587, 0.469 ) }
    dend_1 { pt3dadd( 319.962, 507.393, 40.9534, 0.5962 ) }
    dend_1 { pt3dadd( 318.862, 507.561, 41.1149, 0.6016 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 336.916, 507.327, 46.7855, 0.2288 ) }
    dend_0 { pt3dadd( 337.76, 507.117, 47.2472, 0.2796 ) }
    dend_0 { pt3dadd( 338.137, 507.974, 47.4734, 0.305 ) }
    dend_0 { pt3dadd( 337.81, 509.07, 47.8733, 0.2288 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 36/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 344.587, 535.911, 37.52, 1.0 ) }
    axon_1 { pt3dadd( 350.428, 549.727, 37.52, 1.0 ) }
    axon_1 { pt3dadd( 356.269, 563.543, 37.52, 1.0 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 39/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 334.914, 497.682, 37.242, 1.7128 ) }
    apic_4 { pt3dadd( 334.449, 496.803, 36.6624, 1.3856 ) }
    apic_4 { pt3dadd( 334.287, 495.678, 36.2914, 0.9628 ) }
    apic_4 { pt3dadd( 334.29, 494.563, 36.1771, 0.66 ) }
    apic_4 { pt3dadd( 334.371, 493.434, 36.232, 0.5068 ) }
    apic_4 { pt3dadd( 334.718, 492.346, 36.3541, 0.5304 ) }
    apic_4 { pt3dadd( 335.075, 491.267, 36.5364, 0.6812 ) }
    apic_4 { pt3dadd( 335.383, 490.19, 36.7626, 1.1288 ) }
    apic_4 { pt3dadd( 335.534, 489.06, 36.8816, 1.3716 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 48/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 334.914, 497.682, 37.242, 1.7128 ) }
    apic_1 { pt3dadd( 335.2, 497.664, 34.8695, 0.2288 ) }
    apic_1 { pt3dadd( 335.683, 497.356, 33.395, 0.5194 ) }
    apic_1 { pt3dadd( 336.371, 496.674, 32.7883, 0.5058 ) }
    apic_1 { pt3dadd( 337.444, 496.296, 32.2781, 0.4114 ) }
    apic_1 { pt3dadd( 338.529, 495.948, 31.8665, 0.3442 ) }
    apic_1 { pt3dadd( 339.67, 495.854, 31.5493, 0.382 ) }
    apic_1 { pt3dadd( 340.655, 495.363, 31.2452, 0.3498 ) }
    apic_1 { pt3dadd( 341.096, 494.486, 30.8862, 0.3306 ) }
    apic_1 { pt3dadd( 341.626, 493.732, 30.4772, 0.3262 ) }
    apic_1 { pt3dadd( 342.678, 493.619, 30.3262, 0.396 ) }
    apic_1 { pt3dadd( 343.722, 493.854, 30.3503, 0.3756 ) }
    apic_1 { pt3dadd( 344.574, 493.586, 30.5544, 0.3778 ) }
    apic_1 { pt3dadd( 345.312, 492.874, 30.763, 0.418 ) }
    apic_1 { pt3dadd( 346.176, 492.235, 30.6922, 0.545 ) }
    apic_1 { pt3dadd( 347.251, 492.004, 30.3705, 0.7536 ) }
    apic_1 { pt3dadd( 348.32, 491.775, 29.7996, 0.5836 ) }
    apic_1 { pt3dadd( 349.229, 491.227, 29.0618, 0.4564 ) }
    apic_1 { pt3dadd( 349.233, 490.417, 28.1014, 0.4518 ) }
    apic_1 { pt3dadd( 349.228, 489.61, 27.0903, 0.4638 ) }
    apic_1 { pt3dadd( 350.224, 489.591, 26.0492, 0.617 ) }
    apic_1 { pt3dadd( 350.66, 490.281, 24.892, 0.4914 ) }
    apic_1 { pt3dadd( 351.535, 490.182, 23.7538, 0.419 ) }
    apic_1 { pt3dadd( 352.536, 489.904, 22.6786, 0.4212 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 339.516, 505.574, 41.9073, 0.5428 ) }
    dend_21 { pt3dadd( 340.448, 505.758, 41.6987, 0.8646 ) }
    dend_21 { pt3dadd( 341.514, 505.967, 41.3322, 0.9172 ) }
    dend_21 { pt3dadd( 342.604, 505.986, 40.8626, 0.9108 ) }
    dend_21 { pt3dadd( 343.695, 505.95, 40.3362, 0.9464 ) }
    dend_21 { pt3dadd( 344.773, 505.738, 39.7998, 0.783 ) }
    dend_21 { pt3dadd( 345.907, 505.796, 39.4156, 0.6766 ) }
    dend_21 { pt3dadd( 346.926, 506.254, 39.2479, 0.6708 ) }
    dend_21 { pt3dadd( 347.954, 506.731, 39.114, 0.6446 ) }
    dend_21 { pt3dadd( 349.046, 506.974, 39.1174, 0.6712 ) }
    dend_21 { pt3dadd( 350.138, 507.279, 39.0832, 0.5832 ) }
    dend_21 { pt3dadd( 351.274, 507.4, 39.0634, 0.6302 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 84/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 339.516, 505.574, 41.9073, 0.5428 ) }
    dend_18 { pt3dadd( 340.048, 506.15, 43.5988, 0.2288 ) }
    dend_18 { pt3dadd( 341.027, 506.651, 44.3876, 0.2746 ) }
    dend_18 { pt3dadd( 342.027, 507.052, 44.7555, 0.2746 ) }
    dend_18 { pt3dadd( 343.056, 506.829, 45.2054, 0.2746 ) }
    dend_18 { pt3dadd( 344.083, 506.595, 45.7013, 0.2748 ) }
    dend_18 { pt3dadd( 345.057, 507.107, 46.235, 0.2748 ) }
    dend_18 { pt3dadd( 345.546, 507.365, 46.4929, 0.2752 ) }
    dend_18 { pt3dadd( 346.547, 507.919, 46.7323, 0.2758 ) }
    dend_18 { pt3dadd( 347.482, 507.426, 47.0784, 0.2766 ) }
    dend_18 { pt3dadd( 348.236, 506.758, 47.5913, 0.2782 ) }
    dend_18 { pt3dadd( 348.934, 506.074, 48.246, 0.2814 ) }
    dend_18 { pt3dadd( 350.036, 505.79, 48.8225, 0.287 ) }
    dend_18 { pt3dadd( 351.144, 505.735, 49.3514, 0.2988 ) }
    dend_18 { pt3dadd( 351.607, 506.56, 49.908, 0.3142 ) }
    dend_18 { pt3dadd( 352.035, 507.476, 50.5305, 0.3734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( 352.947, 507.658, 51.1006, 0.334 ) }
    dend_18 { pt3dadd( 353.999, 507.33, 51.6645, 0.3002 ) }
    dend_18 { pt3dadd( 355.05, 507.183, 52.2796, 0.275 ) }
    dend_18 { pt3dadd( 356.146, 507.298, 52.8948, 0.2754 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 4/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 329.541, 507.298, 24.4423, 0.5626 ) }
    dend_12 { pt3dadd( 329.518, 505.85, 23.5802, 0.5572 ) }
    dend_12 { pt3dadd( 329.377, 504.777, 22.7741, 0.4188 ) }
    dend_12 { pt3dadd( 329.535, 503.77, 21.8876, 0.3256 ) }
    dend_12 { pt3dadd( 328.884, 502.937, 20.9684, 0.275 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 9/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 329.541, 507.298, 24.4423, 0.5626 ) }
    dend_11 { pt3dadd( 329.613, 507.128, 21.6552, 0.6864 ) }
    dend_11 { pt3dadd( 330.223, 506.647, 20.8093, 0.4764 ) }
    dend_11 { pt3dadd( 331.324, 506.339, 20.517, 0.38 ) }
    dend_11 { pt3dadd( 332.465, 506.261, 20.2734, 0.401 ) }
    dend_11 { pt3dadd( 333.591, 506.141, 20.0273, 0.3872 ) }
    dend_11 { pt3dadd( 334.665, 505.885, 19.7982, 0.3882 ) }
    dend_11 { pt3dadd( 335.579, 505.324, 19.6246, 0.4892 ) }
    dend_11 { pt3dadd( 336.723, 505.324, 19.4992, 0.4254 ) }
    dend_11 { pt3dadd( 337.867, 505.324, 19.381, 0.38 ) }
    dend_11 { pt3dadd( 338.953, 505.529, 19.201, 0.4008 ) }
    dend_11 { pt3dadd( 340.012, 505.854, 18.9574, 0.3866 ) }
    dend_11 { pt3dadd( 341.102, 506.199, 18.7631, 0.3874 ) }
    dend_11 { pt3dadd( 342.111, 506.739, 18.6063, 0.4878 ) }
    dend_11 { pt3dadd( 343.192, 507.111, 18.4817, 0.422 ) }
    dend_11 { pt3dadd( 344.329, 507.155, 18.3809, 0.3794 ) }
    dend_11 { pt3dadd( 345.473, 507.155, 18.2924, 0.3716 ) }
    dend_11 { pt3dadd( 346.617, 507.155, 18.1927, 0.4692 ) }
    dend_11 { pt3dadd( 347.761, 507.155, 18.0594, 0.5636 ) }
    dend_11 { pt3dadd( 348.895, 507.188, 17.8864, 0.4724 ) }
    dend_11 { pt3dadd( 349.95, 507.478, 17.6145, 0.4518 ) }
    dend_11 { pt3dadd( 350.8, 507.687, 17.1772, 0.3798 ) }
    dend_11 { pt3dadd( 351.804, 507.746, 16.6384, 0.4104 ) }
    dend_11 { pt3dadd( 352.922, 507.746, 16.179, 0.3554 ) }
    dend_11 { pt3dadd( 353.763, 507.147, 15.9754, 0.34 ) }
    dend_11 { pt3dadd( 354.661, 506.544, 15.9536, 0.3486 ) }
    dend_11 { pt3dadd( 355.789, 506.45, 15.9852, 0.4112 ) }
    dend_11 { pt3dadd( 356.682, 506.675, 16.242, 0.5324 ) }
    dend_11 { pt3dadd( 357.737, 507.039, 16.4914, 0.731 ) }
    dend_11 { pt3dadd( 358.781, 507.383, 16.7163, 0.5404 ) }
    dend_11 { pt3dadd( 359.912, 507.326, 16.823, 0.3818 ) }
    dend_11 { pt3dadd( 360.943, 506.944, 16.8325, 0.285 ) }
    dend_11 { pt3dadd( 362.087, 506.926, 16.7644, 0.294 ) }
    dend_11 { pt3dadd( 362.633, 506.768, 16.4828, 0.311 ) }
    dend_11 { pt3dadd( 363.571, 506.909, 16.0538, 0.3406 ) }
    dend_11 { pt3dadd( 364.437, 507.383, 15.6447, 0.4026 ) }
    dend_11 { pt3dadd( 365.581, 507.383, 15.3014, 0.4858 ) }
    dend_11 { pt3dadd( 366.511, 507.603, 15.1407, 0.7938 ) }
    dend_11 { pt3dadd( 366.972, 508.047, 14.7994, 0.6166 ) }
    dend_11 { pt3dadd( 367.508, 509.04, 14.5214, 0.4888 ) }
    dend_11 { pt3dadd( 368.349, 509.77, 14.2876, 0.4238 ) }
    dend_11 { pt3dadd( 369.436, 509.901, 14.0011, 0.6102 ) }
    dend_11 { pt3dadd( 369.912, 509.832, 13.6987, 0.6102 ) }
    dend_11 { pt3dadd( 370.989, 509.673, 12.8568, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 318.862, 507.561, 41.1149, 0.6016 ) }
    dend_9 { pt3dadd( 318.284, 508.323, 41.0194, 0.6864 ) }
    dend_9 { pt3dadd( 317.658, 509.122, 41.3809, 0.4518 ) }
    dend_9 { pt3dadd( 316.843, 509.772, 41.5274, 0.34 ) }
    dend_9 { pt3dadd( 315.773, 509.879, 41.5268, 0.3016 ) }
    dend_9 { pt3dadd( 314.637, 509.915, 41.4313, 0.3242 ) }
    dend_9 { pt3dadd( 313.602, 510.356, 41.2502, 0.3686 ) }
    dend_9 { pt3dadd( 312.69, 511.03, 40.9632, 0.4404 ) }
    dend_9 { pt3dadd( 311.838, 511.521, 40.4404, 0.623 ) }
    dend_9 { pt3dadd( 310.923, 511.844, 39.7443, 0.721 ) }
    dend_9 { pt3dadd( 309.827, 511.916, 39.0992, 0.6994 ) }
    dend_9 { pt3dadd( 308.691, 511.798, 38.5739, 0.7296 ) }
    dend_9 { pt3dadd( 307.569, 511.596, 38.1184, 0.6748 ) }
    dend_9 { pt3dadd( 306.527, 511.805, 37.6317, 0.8814 ) }
    dend_9 { pt3dadd( 305.551, 512.272, 37.1353, 0.9116 ) }
    dend_9 { pt3dadd( 304.604, 512.895, 36.724, 0.6214 ) }
    dend_9 { pt3dadd( 303.52, 513.235, 36.3824, 0.391 ) }
    dend_9 { pt3dadd( 302.424, 512.98, 36.0623, 0.3018 ) }
    dend_9 { pt3dadd( 301.417, 512.537, 35.6958, 0.3248 ) }
    dend_9 { pt3dadd( 300.342, 512.815, 35.474, 0.3692 ) }
    dend_9 { pt3dadd( 299.272, 513.196, 35.3116, 0.443 ) }
    dend_9 { pt3dadd( 298.24, 513.261, 34.9549, 0.6218 ) }
    dend_9 { pt3dadd( 297.16, 513.021, 34.5206, 0.748 ) }
    dend_9 { pt3dadd( 296.034, 512.918, 34.1737, 0.6068 ) }
    dend_9 { pt3dadd( 294.941, 513.196, 33.8691, 0.565 ) }
    dend_9 { pt3dadd( 293.946, 513.615, 33.3964, 0.562 ) }
    dend_9 { pt3dadd( 292.925, 513.808, 32.7754, 0.6532 ) }
    dend_9 { pt3dadd( 291.954, 513.969, 32.0348, 0.5812 ) }
    dend_9 { pt3dadd( 291.09, 514.599, 31.274, 0.7042 ) }
    dend_9 { pt3dadd( 290.527, 515.547, 30.5376, 0.601 ) }
    dend_9 { pt3dadd( 289.702, 516.254, 29.9368, 0.6456 ) }
    dend_9 { pt3dadd( 288.605, 516.085, 29.4711, 0.7266 ) }
    dend_9 { pt3dadd( 287.645, 515.494, 29.0472, 0.8848 ) }
    dend_9 { pt3dadd( 286.583, 515.279, 28.6051, 0.683 ) }
    dend_9 { pt3dadd( 285.534, 515.561, 28.091, 0.6514 ) }
    dend_9 { pt3dadd( 284.544, 515.483, 27.5279, 0.5318 ) }
    dend_9 { pt3dadd( 283.558, 514.944, 26.9805, 0.6066 ) }
    dend_9 { pt3dadd( 283.03, 514.108, 26.3393, 0.6778 ) }
    dend_9 { pt3dadd( 282.687, 513.519, 25.8479, 0.9084 ) }
    dend_9 { pt3dadd( 281.712, 512.946, 25.5116, 0.8574 ) }
    dend_9 { pt3dadd( 280.634, 513.151, 25.3753, 0.7986 ) }
    dend_9 { pt3dadd( 279.594, 513.62, 25.2941, 0.5164 ) }
    dend_9 { pt3dadd( 278.88, 513.881, 24.9099, 0.3752 ) }
    dend_9 { pt3dadd( 277.808, 513.965, 24.5689, 0.319 ) }
    dend_9 { pt3dadd( 276.676, 514.117, 24.2914, 0.36 ) }
    dend_9 { pt3dadd( 275.536, 514.15, 24.045, 0.4182 ) }
    dend_9 { pt3dadd( 274.399, 514.082, 23.8123, 0.6124 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_9 { pt3dadd( 273.335, 513.706, 23.5533, 0.5546 ) }
    dend_9 { pt3dadd( 272.418, 514.353, 23.3825, 0.416 ) }
    dend_9 { pt3dadd( 271.373, 514.745, 23.1039, 0.311 ) }
    dend_9 { pt3dadd( 270.244, 514.622, 22.7312, 0.295 ) }
    dend_9 { pt3dadd( 269.517, 514.018, 22.1724, 0.3124 ) }
    dend_9 { pt3dadd( 269.582, 514.185, 21.2293, 0.3438 ) }
    dend_9 { pt3dadd( 269.653, 513.6, 20.1572, 0.4056 ) }
    dend_9 { pt3dadd( 268.777, 512.965, 19.2189, 0.5046 ) }
    dend_9 { pt3dadd( 267.66, 512.735, 18.4856, 0.7652 ) }
    dend_9 { pt3dadd( 266.563, 512.861, 17.9256, 0.8728 ) }
    dend_9 { pt3dadd( 265.467, 513.143, 17.5459, 0.8348 ) }
    dend_9 { pt3dadd( 264.35, 513.167, 17.3782, 0.5466 ) }
    dend_9 { pt3dadd( 263.546, 512.634, 17.2337, 0.3834 ) }
    dend_9 { pt3dadd( 264.193, 511.813, 17.0008, 0.3372 ) }
    dend_9 { pt3dadd( 263.925, 510.772, 16.6695, 0.3798 ) }
    dend_9 { pt3dadd( 263.203, 509.991, 16.2366, 0.5228 ) }
    dend_9 { pt3dadd( 262.811, 509.026, 15.7892, 0.4764 ) }
    dend_9 { pt3dadd( 262.14, 508.165, 15.3499, 0.5306 ) }
    dend_9 { pt3dadd( 261.229, 507.496, 15.0797, 0.4072 ) }
    dend_9 { pt3dadd( 260.203, 506.996, 14.9218, 0.351 ) }
    dend_9 { pt3dadd( 259.065, 507.047, 14.7851, 0.324 ) }
    dend_9 { pt3dadd( 257.946, 507.207, 14.7162, 0.3558 ) }
    dend_9 { pt3dadd( 256.841, 507.456, 14.6714, 0.4762 ) }
    dend_9 { pt3dadd( 255.743, 507.774, 14.5625, 0.4002 ) }
    dend_9 { pt3dadd( 254.692, 508.14, 14.3251, 0.3384 ) }
    dend_9 { pt3dadd( 253.587, 508.035, 14.035, 0.2994 ) }
    dend_9 { pt3dadd( 252.624, 507.572, 13.6133, 0.3164 ) }
    dend_9 { pt3dadd( 251.88, 506.738, 13.1538, 0.373 ) }
    dend_9 { pt3dadd( 251.115, 505.917, 12.7022, 0.356 ) }
    dend_9 { pt3dadd( 250.296, 505.149, 11.807, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 30/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 318.862, 507.561, 41.1149, 0.6016 ) }
    dend_2 { pt3dadd( 318.22, 507.331, 41.5265, 0.5876 ) }
    dend_2 { pt3dadd( 317.497, 506.546, 42.0428, 0.677 ) }
    dend_2 { pt3dadd( 316.942, 505.548, 42.4945, 0.9688 ) }
    dend_2 { pt3dadd( 316.231, 504.7, 42.7745, 0.8978 ) }
    // Section: apic_10, id: apic_10, parent: apic_4 (entry count 35/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 335.534, 489.06, 36.8816, 1.3716 ) }
    apic_10 { pt3dadd( 335.287, 488.377, 36.93, 1.2398 ) }
    apic_10 { pt3dadd( 335.092, 487.25, 36.9396, 0.8466 ) }
    apic_10 { pt3dadd( 334.623, 486.24, 36.8348, 0.6112 ) }
    apic_10 { pt3dadd( 333.848, 485.4, 36.729, 0.5222 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 40/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 335.534, 489.06, 36.8816, 1.3716 ) }
    apic_5 { pt3dadd( 335.569, 488.599, 36.7954, 0.2288 ) }
    apic_5 { pt3dadd( 335.651, 487.511, 35.7473, 0.3848 ) }
    apic_5 { pt3dadd( 335.66, 486.405, 35.2946, 0.508 ) }
    apic_5 { pt3dadd( 335.731, 485.278, 34.8088, 0.5656 ) }
    apic_5 { pt3dadd( 336.26, 484.333, 34.2588, 0.8162 ) }
    apic_5 { pt3dadd( 337.257, 483.78, 33.7582, 0.8122 ) }
    apic_5 { pt3dadd( 338.201, 483.263, 33.2147, 0.5612 ) }
    apic_5 { pt3dadd( 339.158, 483.059, 32.5864, 0.364 ) }
    apic_5 { pt3dadd( 340.194, 482.817, 32.0012, 0.299 ) }
    apic_5 { pt3dadd( 340.992, 482.038, 31.5941, 0.3194 ) }
    apic_5 { pt3dadd( 341.429, 481.012, 31.3888, 0.3608 ) }
    apic_5 { pt3dadd( 342.257, 480.302, 31.3328, 0.4196 ) }
    apic_5 { pt3dadd( 343.341, 479.987, 31.2768, 0.6148 ) }
    apic_5 { pt3dadd( 344.438, 479.776, 31.1906, 0.5592 ) }
    apic_5 { pt3dadd( 345.553, 479.68, 31.1321, 0.4244 ) }
    apic_5 { pt3dadd( 346.686, 479.798, 31.1147, 0.3274 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 57/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 352.536, 489.904, 22.6786, 0.4212 ) }
    apic_3 { pt3dadd( 351.89, 489.431, 21.8795, 0.4478 ) }
    apic_3 { pt3dadd( 351.788, 488.621, 21.1725, 0.3886 ) }
    apic_3 { pt3dadd( 351.407, 488.083, 20.3333, 0.3486 ) }
    apic_3 { pt3dadd( 350.673, 487.416, 19.728, 0.3906 ) }
    apic_3 { pt3dadd( 349.677, 486.862, 19.2945, 0.3654 ) }
    apic_3 { pt3dadd( 349.344, 486.896, 18.9512, 0.3592 ) }
    apic_3 { pt3dadd( 348.221, 487.005, 18.6178, 0.3812 ) }
    apic_3 { pt3dadd( 347.079, 487.067, 18.3702, 0.4874 ) }
    apic_3 { pt3dadd( 345.991, 487.301, 18.1359, 0.5952 ) }
    apic_3 { pt3dadd( 344.944, 487.66, 17.834, 0.5404 ) }
    apic_3 { pt3dadd( 343.814, 487.693, 17.5375, 0.5324 ) }
    apic_3 { pt3dadd( 342.706, 487.893, 17.2981, 0.75 ) }
    apic_3 { pt3dadd( 341.716, 488.418, 17.1391, 0.7112 ) }
    apic_3 { pt3dadd( 340.664, 488.617, 17.1074, 0.4976 ) }
    apic_3 { pt3dadd( 340.195, 487.826, 17.0957, 0.3304 ) }
    apic_3 { pt3dadd( 339.793, 486.781, 17.0814, 0.284 ) }
    apic_3 { pt3dadd( 339.126, 487.26, 17.0808, 0.2918 ) }
    apic_3 { pt3dadd( 338.351, 488.097, 17.0738, 0.3066 ) }
    apic_3 { pt3dadd( 337.799, 488.16, 17.3678, 0.3334 ) }
    apic_3 { pt3dadd( 336.707, 487.942, 17.5266, 0.3866 ) }
    apic_3 { pt3dadd( 336.125, 487.924, 17.2438, 0.467 ) }
    apic_3 { pt3dadd( 335.257, 488.638, 16.9831, 0.7068 ) }
    apic_3 { pt3dadd( 334.27, 488.943, 16.6404, 0.7086 ) }
    apic_3 { pt3dadd( 333.231, 489.075, 16.177, 0.8038 ) }
    apic_3 { pt3dadd( 332.195, 489.26, 15.7038, 0.5338 ) }
    apic_3 { pt3dadd( 331.356, 489.533, 15.2681, 0.37 ) }
    apic_3 { pt3dadd( 330.225, 489.618, 14.9856, 0.2626 ) }
    apic_3 { pt3dadd( 329.125, 489.921, 14.7879, 0.2542 ) }
    apic_3 { pt3dadd( 327.984, 489.979, 14.6728, 0.2288 ) }
    apic_3 { pt3dadd( 326.84, 489.99, 14.6045, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 88/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 352.536, 489.904, 22.6786, 0.4212 ) }
    apic_2 { pt3dadd( 353.141, 489.593, 21.3055, 0.2288 ) }
    apic_2 { pt3dadd( 354.126, 489.086, 19.9648, 0.5878 ) }
    apic_2 { pt3dadd( 355.13, 488.582, 19.4569, 0.5872 ) }
    apic_2 { pt3dadd( 355.66, 487.917, 18.7188, 0.7828 ) }
    apic_2 { pt3dadd( 356.166, 487.402, 17.817, 0.6468 ) }
    apic_2 { pt3dadd( 356.788, 487.338, 16.8356, 0.5282 ) }
    apic_2 { pt3dadd( 357.275, 486.431, 16.2369, 0.3476 ) }
    apic_2 { pt3dadd( 357.966, 485.659, 15.9636, 0.2796 ) }
    apic_2 { pt3dadd( 359.032, 485.376, 15.7612, 0.2288 ) }
    apic_2 { pt3dadd( 359.404, 485.834, 14.7846, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 351.274, 507.4, 39.0634, 0.6302 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_27 { pt3dadd( 351.23, 507.831, 38.8917, 0.8428 ) }
    dend_27 { pt3dadd( 352.079, 508.405, 38.712, 0.6248 ) }
    dend_27 { pt3dadd( 353.211, 508.563, 38.5717, 0.449 ) }
    dend_27 { pt3dadd( 354.328, 508.713, 38.4619, 0.3876 ) }
    dend_27 { pt3dadd( 355.392, 509.095, 38.3967, 0.361 ) }
    dend_27 { pt3dadd( 356.438, 509.518, 38.3664, 0.345 ) }
    dend_27 { pt3dadd( 357.502, 509.881, 38.36, 0.3836 ) }
    dend_27 { pt3dadd( 358.614, 509.943, 38.3023, 0.3526 ) }
    dend_27 { pt3dadd( 359.7, 510.222, 38.3387, 0.3358 ) }
    dend_27 { pt3dadd( 360.637, 510.853, 38.4423, 0.3358 ) }
    dend_27 { pt3dadd( 361.646, 511.378, 38.5339, 0.4134 ) }
    dend_27 { pt3dadd( 362.782, 511.485, 38.6285, 0.4102 ) }
    dend_27 { pt3dadd( 363.904, 511.497, 38.7632, 0.4318 ) }
    dend_27 { pt3dadd( 365.024, 511.578, 38.7825, 0.5668 ) }
    dend_27 { pt3dadd( 366.117, 511.913, 38.7545, 0.5832 ) }
    dend_27 { pt3dadd( 367.174, 512.346, 38.7173, 0.605 ) }
    dend_27 { pt3dadd( 368.167, 512.91, 38.682, 0.4602 ) }
    dend_27 { pt3dadd( 369.252, 513.233, 38.6492, 0.4042 ) }
    dend_27 { pt3dadd( 370.356, 513.047, 38.6232, 0.411 ) }
    dend_27 { pt3dadd( 371.239, 512.322, 38.6123, 0.5754 ) }
    dend_27 { pt3dadd( 372.199, 511.717, 38.5994, 0.5988 ) }
    dend_27 { pt3dadd( 373.307, 511.438, 38.5787, 0.636 ) }
    dend_27 { pt3dadd( 374.432, 511.257, 38.5594, 0.5074 ) }
    dend_27 { pt3dadd( 375.535, 510.996, 38.5585, 0.5408 ) }
    dend_27 { pt3dadd( 376.66, 510.829, 38.4922, 0.4272 ) }
    dend_27 { pt3dadd( 377.752, 510.582, 38.3286, 0.383 ) }
    dend_27 { pt3dadd( 378.872, 510.519, 38.0878, 0.4066 ) }
    dend_27 { pt3dadd( 379.94, 510.256, 37.8221, 0.3976 ) }
    dend_27 { pt3dadd( 380.806, 509.53, 37.5651, 0.407 ) }
    dend_27 { pt3dadd( 381.681, 508.9, 37.3198, 0.5264 ) }
    dend_27 { pt3dadd( 382.792, 508.712, 37.2064, 0.483 ) }
    dend_27 { pt3dadd( 383.914, 508.571, 37.1627, 0.5432 ) }
    dend_27 { pt3dadd( 384.99, 508.197, 37.1216, 0.43 ) }
    dend_27 { pt3dadd( 386.037, 507.738, 37.0549, 0.3956 ) }
    dend_27 { pt3dadd( 387.115, 507.478, 36.9121, 0.394 ) }
    dend_27 { pt3dadd( 388.213, 507.594, 36.6901, 0.5486 ) }
    dend_27 { pt3dadd( 389.327, 507.801, 36.465, 0.5264 ) }
    dend_27 { pt3dadd( 390.438, 507.762, 36.2104, 0.613 ) }
    dend_27 { pt3dadd( 391.517, 507.543, 35.9486, 0.6108 ) }
    dend_27 { pt3dadd( 392.623, 507.378, 35.8193, 0.4816 ) }
    dend_27 { pt3dadd( 393.745, 507.444, 35.7988, 0.391 ) }
    dend_27 { pt3dadd( 394.788, 507.796, 35.7594, 0.4166 ) }
    dend_27 { pt3dadd( 395.761, 508.337, 35.7291, 0.4396 ) }
    dend_27 { pt3dadd( 396.818, 508.674, 35.7126, 0.3718 ) }
    dend_27 { pt3dadd( 397.928, 508.882, 35.6303, 0.3242 ) }
    dend_27 { pt3dadd( 399.05, 509.089, 35.5345, 0.3142 ) }
    dend_27 { pt3dadd( 400.184, 509.152, 35.4659, 0.3734 ) }
    dend_27 { pt3dadd( 401.29, 508.914, 35.4334, 0.334 ) }
    dend_27 { pt3dadd( 402.396, 508.648, 35.4253, 0.3002 ) }
    dend_27 { pt3dadd( 403.529, 508.486, 35.4334, 0.275 ) }
    dend_27 { pt3dadd( 404.577, 508.18, 35.5387, 0.2754 ) }
    dend_27 { pt3dadd( 405.611, 507.753, 35.6815, 0.2764 ) }
    dend_27 { pt3dadd( 406.568, 507.136, 35.7538, 0.2778 ) }
    dend_27 { pt3dadd( 407.298, 506.275, 35.7266, 0.2806 ) }
    dend_27 { pt3dadd( 407.998, 505.389, 35.5933, 0.2856 ) }
    dend_27 { pt3dadd( 408.82, 504.66, 35.3556, 0.2952 ) }
    dend_27 { pt3dadd( 409.754, 504.105, 35.0008, 0.3124 ) }
    dend_27 { pt3dadd( 410.69, 503.475, 34.6794, 0.3464 ) }
    dend_27 { pt3dadd( 411.626, 502.818, 34.4495, 0.3984 ) }
    dend_27 { pt3dadd( 412.624, 502.374, 34.305, 0.5498 ) }
    dend_27 { pt3dadd( 413.647, 502.885, 34.2342, 0.5622 ) }
    dend_27 { pt3dadd( 414.672, 503.389, 34.2224, 0.5164 ) }
    dend_27 { pt3dadd( 415.812, 503.49, 34.2549, 0.537 ) }
    dend_27 { pt3dadd( 416.951, 503.592, 34.3126, 0.7484 ) }
    dend_27 { pt3dadd( 418.062, 503.449, 34.389, 0.9858 ) }
    dend_27 { pt3dadd( 419.144, 503.081, 34.4842, 1.0324 ) }
    dend_27 { pt3dadd( 420.241, 502.795, 34.6142, 0.7418 ) }
    dend_27 { pt3dadd( 421.167, 502.543, 34.8916, 0.66 ) }
    dend_27 { pt3dadd( 421.915, 501.905, 35.2584, 0.5772 ) }
    dend_27 { pt3dadd( 422.271, 500.906, 35.4516, 0.5478 ) }
    dend_27 { pt3dadd( 423.098, 500.116, 35.6258, 0.5766 ) }
    dend_27 { pt3dadd( 424.112, 499.648, 35.8002, 0.913 ) }
    dend_27 { pt3dadd( 425.081, 499.264, 36.092, 0.849 ) }
    dend_27 { pt3dadd( 426.197, 499.113, 36.332, 0.8638 ) }
    dend_27 { pt3dadd( 427.013, 498.794, 36.6108, 0.704 ) }
    dend_27 { pt3dadd( 428.056, 498.386, 36.948, 0.6274 ) }
    dend_27 { pt3dadd( 429.11, 497.968, 37.2579, 0.7944 ) }
    dend_27 { pt3dadd( 430.172, 497.544, 37.5012, 0.7464 ) }
    dend_27 { pt3dadd( 431.177, 497.018, 37.6916, 0.5626 ) }
    dend_27 { pt3dadd( 432.092, 496.331, 37.8619, 0.4534 ) }
    dend_27 { pt3dadd( 433.081, 495.835, 38.0447, 0.4996 ) }
    dend_27 { pt3dadd( 434.187, 495.641, 38.2897, 0.752 ) }
    dend_27 { pt3dadd( 435.294, 495.456, 38.5865, 0.8674 ) }
    dend_27 { pt3dadd( 436.405, 495.291, 38.9192, 0.7342 ) }
    dend_27 { pt3dadd( 437.503, 495.088, 39.254, 0.7996 ) }
    dend_27 { pt3dadd( 438.502, 494.588, 39.44, 0.7766 ) }
    dend_27 { pt3dadd( 439.504, 494.083, 39.5553, 0.7486 ) }
    dend_27 { pt3dadd( 440.518, 493.564, 39.7211, 0.624 ) }
    dend_27 { pt3dadd( 441.48, 493.034, 39.9871, 0.5192 ) }
    dend_27 { pt3dadd( 442.333, 492.485, 40.4362, 0.6266 ) }
    dend_27 { pt3dadd( 443.311, 492.005, 40.9346, 0.5032 ) }
    dend_27 { pt3dadd( 444.355, 491.562, 41.4159, 0.4704 ) }
    dend_27 { pt3dadd( 445.451, 491.264, 41.8141, 0.3718 ) }
    dend_27 { pt3dadd( 446.57, 491.028, 42.1086, 0.3724 ) }
    dend_27 { pt3dadd( 447.695, 490.864, 42.3329, 0.3982 ) }
    dend_27 { pt3dadd( 448.832, 490.844, 42.5342, 0.5564 ) }
    dend_27 { pt3dadd( 449.97, 490.823, 42.7316, 0.5406 ) }
    dend_27 { pt3dadd( 451.063, 490.587, 42.957, 0.6406 ) }
    dend_27 { pt3dadd( 452.149, 490.31, 43.2023, 0.6564 ) }
    dend_27 { pt3dadd( 453.25, 490.019, 43.3818, 0.593 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( 454.357, 489.725, 43.4899, 0.4674 ) }
    dend_27 { pt3dadd( 455.136, 489.17, 43.3712, 0.5042 ) }
    dend_27 { pt3dadd( 456.183, 489.165, 43.1855, 0.4054 ) }
    dend_27 { pt3dadd( 456.923, 488.977, 43.0889, 0.3482 ) }
    dend_27 { pt3dadd( 457.679, 488.117, 43.104, 0.3162 ) }
    dend_27 { pt3dadd( 458.312, 487.26, 43.3555, 0.3548 ) }
    dend_27 { pt3dadd( 459.027, 486.409, 43.7153, 0.4078 ) }
    dend_27 { pt3dadd( 460.087, 486.064, 44.1843, 0.5978 ) }
    dend_27 { pt3dadd( 461.016, 485.834, 44.8608, 0.503 ) }
    dend_27 { pt3dadd( 461.984, 485.563, 45.6333, 0.4408 ) }
    dend_27 { pt3dadd( 462.932, 485.23, 46.4442, 0.4566 ) }
    dend_27 { pt3dadd( 463.744, 484.728, 47.1313, 0.5396 ) }
    dend_27 { pt3dadd( 464.831, 484.503, 47.5793, 0.4332 ) }
    dend_27 { pt3dadd( 465.941, 484.682, 47.8775, 0.3532 ) }
    dend_27 { pt3dadd( 467.07, 484.693, 48.0665, 0.321 ) }
    dend_27 { pt3dadd( 468.137, 484.489, 48.2236, 0.386 ) }
    dend_27 { pt3dadd( 468.891, 483.722, 48.4484, 0.3584 ) }
    dend_27 { pt3dadd( 469.669, 482.884, 48.6256, 0.3402 ) }
    dend_27 { pt3dadd( 470.311, 481.95, 48.7724, 0.3746 ) }
    dend_27 { pt3dadd( 470.594, 480.858, 48.8818, 0.3358 ) }
    dend_27 { pt3dadd( 470.81, 479.736, 48.9583, 0.3036 ) }
    dend_27 { pt3dadd( 471.087, 478.627, 49.0118, 0.2814 ) }
    dend_27 { pt3dadd( 472.03, 478.051, 49.0563, 0.2874 ) }
    dend_27 { pt3dadd( 472.994, 477.443, 49.124, 0.2992 ) }
    dend_27 { pt3dadd( 473.965, 476.841, 49.1943, 0.315 ) }
    dend_27 { pt3dadd( 474.967, 476.288, 49.278, 0.375 ) }
    dend_27 { pt3dadd( 475.679, 475.621, 49.5365, 0.3368 ) }
    dend_27 { pt3dadd( 476.722, 475.156, 49.7504, 0.3056 ) }
    dend_27 { pt3dadd( 477.591, 474.459, 49.9262, 0.2848 ) }
    dend_27 { pt3dadd( 478.062, 473.425, 50.0702, 0.2938 ) }
    dend_27 { pt3dadd( 478.818, 472.62, 50.1886, 0.31 ) }
    dend_27 { pt3dadd( 479.527, 471.732, 50.2838, 0.3422 ) }
    dend_27 { pt3dadd( 479.82, 470.632, 50.3692, 0.3904 ) }
    dend_27 { pt3dadd( 480.0, 469.595, 50.5652, 0.536 ) }
    dend_27 { pt3dadd( 480.877, 468.871, 50.7707, 0.5318 ) }
    dend_27 { pt3dadd( 481.875, 468.32, 50.9418, 0.4836 ) }
    dend_27 { pt3dadd( 482.567, 467.421, 51.07, 0.3596 ) }
    dend_27 { pt3dadd( 482.959, 466.358, 51.1566, 0.3004 ) }
    dend_27 { pt3dadd( 483.038, 465.224, 51.2039, 0.2754 ) }
    dend_27 { pt3dadd( 483.196, 464.114, 51.2327, 0.2764 ) }
    dend_27 { pt3dadd( 483.846, 463.249, 51.3374, 0.278 ) }
    dend_27 { pt3dadd( 484.767, 462.766, 51.2999, 0.281 ) }
    dend_27 { pt3dadd( 485.49, 461.884, 51.235, 0.286 ) }
    dend_27 { pt3dadd( 486.176, 460.969, 51.165, 0.297 ) }
    dend_27 { pt3dadd( 487.025, 460.25, 51.0779, 0.3108 ) }
    dend_27 { pt3dadd( 487.267, 459.184, 50.9788, 0.3672 ) }
    dend_27 { pt3dadd( 487.874, 458.245, 50.874, 0.322 ) }
    dend_27 { pt3dadd( 488.687, 457.489, 50.7777, 0.2796 ) }
    dend_27 { pt3dadd( 489.809, 457.423, 50.6198, 0.2288 ) }
    dend_27 { pt3dadd( 490.803, 456.987, 50.0405, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 50/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 351.274, 507.4, 39.0634, 0.6302 ) }
    dend_22 { pt3dadd( 352.234, 507.494, 39.8093, 0.2288 ) }
    dend_22 { pt3dadd( 353.343, 507.383, 40.3662, 0.5374 ) }
    dend_22 { pt3dadd( 354.463, 507.366, 40.6188, 0.5118 ) }
    dend_22 { pt3dadd( 355.584, 507.379, 40.9119, 0.555 ) }
    dend_22 { pt3dadd( 356.697, 507.46, 41.0782, 0.653 ) }
    dend_22 { pt3dadd( 357.745, 507.889, 41.1925, 0.5202 ) }
    dend_22 { pt3dadd( 358.803, 508.294, 41.249, 0.4254 ) }
    dend_22 { pt3dadd( 359.91, 508.251, 41.4092, 0.4328 ) }
    dend_22 { pt3dadd( 360.998, 508.052, 41.6889, 0.4704 ) }
    dend_22 { pt3dadd( 362.042, 507.597, 42.012, 0.4248 ) }
    dend_22 { pt3dadd( 363.155, 507.34, 42.345, 0.4418 ) }
    dend_22 { pt3dadd( 364.274, 507.15, 42.7188, 0.4392 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 356.146, 507.298, 52.8948, 0.2754 ) }
    dend_20 { pt3dadd( 356.652, 507.305, 53.3988, 0.2764 ) }
    dend_20 { pt3dadd( 357.643, 506.948, 53.8927, 0.278 ) }
    dend_20 { pt3dadd( 358.5, 506.225, 54.3589, 0.281 ) }
    dend_20 { pt3dadd( 359.39, 505.516, 54.7417, 0.2864 ) }
    dend_20 { pt3dadd( 360.338, 504.883, 55.0735, 0.2966 ) }
    dend_20 { pt3dadd( 361.375, 504.585, 55.4389, 0.316 ) }
    dend_20 { pt3dadd( 362.402, 504.177, 55.8312, 0.3474 ) }
    dend_20 { pt3dadd( 363.067, 503.336, 56.2332, 0.4294 ) }
    dend_20 { pt3dadd( 363.546, 502.292, 56.4432, 0.4642 ) }
    dend_20 { pt3dadd( 364.404, 501.582, 56.7017, 0.4126 ) }
    dend_20 { pt3dadd( 365.243, 501.013, 57.1124, 0.4238 ) }
    dend_20 { pt3dadd( 366.151, 500.398, 57.5851, 0.3824 ) }
    dend_20 { pt3dadd( 366.818, 499.477, 58.0258, 0.3794 ) }
    dend_20 { pt3dadd( 367.478, 498.571, 58.3906, 0.473 ) }
    dend_20 { pt3dadd( 368.103, 497.79, 58.8683, 0.3944 ) }
    dend_20 { pt3dadd( 368.154, 497.218, 59.2754, 0.3276 ) }
    dend_20 { pt3dadd( 368.255, 496.083, 59.6512, 0.2784 ) }
    dend_20 { pt3dadd( 368.267, 494.94, 59.9973, 0.2818 ) }
    dend_20 { pt3dadd( 368.267, 493.796, 60.3408, 0.2882 ) }
    dend_20 { pt3dadd( 368.31, 492.737, 60.779, 0.2994 ) }
    dend_20 { pt3dadd( 368.719, 492.245, 61.4202, 0.3228 ) }
    dend_20 { pt3dadd( 369.792, 492.245, 62.1359, 0.3538 ) }
    dend_20 { pt3dadd( 370.892, 491.958, 62.7872, 0.4722 ) }
    dend_20 { pt3dadd( 371.908, 491.794, 63.5247, 0.3934 ) }
    dend_20 { pt3dadd( 372.901, 492.032, 64.2625, 0.3254 ) }
    dend_20 { pt3dadd( 373.826, 491.822, 64.9104, 0.2746 ) }
    dend_20 { pt3dadd( 374.781, 491.233, 65.4951, 0.2746 ) }
    dend_20 { pt3dadd( 375.781, 490.695, 65.9974, 0.2746 ) }
    dend_20 { pt3dadd( 376.882, 490.419, 66.416, 0.2746 ) }
    dend_20 { pt3dadd( 377.782, 489.789, 66.7814, 0.2746 ) }
    dend_20 { pt3dadd( 378.422, 489.322, 67.3722, 0.2746 ) }
    dend_20 { pt3dadd( 379.138, 488.479, 67.9658, 0.2746 ) }
    dend_20 { pt3dadd( 379.894, 487.638, 68.5286, 0.2746 ) }
    dend_20 { pt3dadd( 380.824, 487.027, 68.9528, 0.2746 ) }
    dend_20 { pt3dadd( 381.62, 486.296, 69.3171, 0.2746 ) }
    dend_20 { pt3dadd( 382.225, 485.453, 69.7978, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_20 { pt3dadd( 383.096, 484.938, 70.376, 0.2746 ) }
    dend_20 { pt3dadd( 383.718, 484.187, 71.0279, 0.2746 ) }
    dend_20 { pt3dadd( 383.863, 483.386, 71.874, 0.2746 ) }
    dend_20 { pt3dadd( 384.191, 482.431, 72.6597, 0.2746 ) }
    dend_20 { pt3dadd( 384.946, 481.613, 73.2368, 0.2746 ) }
    dend_20 { pt3dadd( 385.839, 480.898, 73.6182, 0.2746 ) }
    dend_20 { pt3dadd( 386.792, 480.283, 73.8461, 0.2746 ) }
    dend_20 { pt3dadd( 387.639, 479.514, 73.9642, 0.2746 ) }
    dend_20 { pt3dadd( 388.466, 478.724, 74.0102, 0.2746 ) }
    dend_20 { pt3dadd( 389.262, 477.903, 74.0449, 0.2746 ) }
    dend_20 { pt3dadd( 389.963, 477.009, 74.0936, 0.2746 ) }
    dend_20 { pt3dadd( 390.534, 476.018, 74.1602, 0.2746 ) }
    dend_20 { pt3dadd( 390.946, 474.973, 74.2546, 0.2746 ) }
    dend_20 { pt3dadd( 391.088, 473.838, 74.3893, 0.2746 ) }
    dend_20 { pt3dadd( 391.23, 472.703, 74.5788, 0.2746 ) }
    dend_20 { pt3dadd( 391.574, 471.615, 74.8314, 0.2746 ) }
    dend_20 { pt3dadd( 392.013, 470.559, 75.1489, 0.2746 ) }
    dend_20 { pt3dadd( 391.886, 470.789, 75.7162, 0.2746 ) }
    dend_20 { pt3dadd( 392.725, 470.477, 76.526, 0.2746 ) }
    dend_20 { pt3dadd( 393.59, 470.146, 77.4998, 0.2746 ) }
    dend_20 { pt3dadd( 394.43, 469.398, 78.3521, 0.2746 ) }
    dend_20 { pt3dadd( 395.267, 468.619, 79.0796, 0.2746 ) }
    dend_20 { pt3dadd( 395.895, 467.763, 79.8174, 0.2744 ) }
    dend_20 { pt3dadd( 396.441, 466.879, 80.5832, 0.2744 ) }
    dend_20 { pt3dadd( 396.987, 465.995, 81.363, 0.2742 ) }
    dend_20 { pt3dadd( 397.534, 465.109, 82.1514, 0.2736 ) }
    dend_20 { pt3dadd( 398.08, 464.225, 82.9413, 0.2728 ) }
    dend_20 { pt3dadd( 398.874, 463.437, 83.5534, 0.2712 ) }
    dend_20 { pt3dadd( 399.724, 462.67, 83.963, 0.2684 ) }
    dend_20 { pt3dadd( 400.573, 461.904, 84.2092, 0.2626 ) }
    dend_20 { pt3dadd( 401.422, 461.137, 84.3368, 0.2542 ) }
    dend_20 { pt3dadd( 402.272, 460.371, 84.3875, 0.2288 ) }
    dend_20 { pt3dadd( 403.12, 459.604, 84.4052, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 33/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 356.146, 507.298, 52.8948, 0.2754 ) }
    dend_19 { pt3dadd( 356.249, 507.41, 53.4792, 0.2288 ) }
    dend_19 { pt3dadd( 356.956, 508.181, 54.9856, 0.2746 ) }
    dend_19 { pt3dadd( 357.752, 508.833, 55.6354, 0.2746 ) }
    dend_19 { pt3dadd( 358.846, 509.085, 56.3282, 0.2746 ) }
    dend_19 { pt3dadd( 359.881, 509.352, 57.0763, 0.2746 ) }
    dend_19 { pt3dadd( 360.295, 509.6, 58.0199, 0.2746 ) }
    dend_19 { pt3dadd( 360.4, 509.662, 58.8493, 0.2746 ) }
    dend_19 { pt3dadd( 361.387, 510.103, 59.6574, 0.2746 ) }
    dend_19 { pt3dadd( 361.704, 510.035, 60.3593, 0.2746 ) }
    dend_19 { pt3dadd( 362.78, 509.804, 61.0641, 0.2746 ) }
    dend_19 { pt3dadd( 363.846, 509.693, 61.7758, 0.2746 ) }
    dend_19 { pt3dadd( 364.886, 509.85, 62.517, 0.2746 ) }
    dend_19 { pt3dadd( 365.936, 510.06, 63.2741, 0.2746 ) }
    dend_19 { pt3dadd( 367.004, 510.373, 63.982, 0.2746 ) }
    dend_19 { pt3dadd( 368.096, 510.64, 64.619, 0.2746 ) }
    dend_19 { pt3dadd( 369.22, 510.84, 65.1414, 0.2746 ) }
    dend_19 { pt3dadd( 370.339, 511.019, 65.5872, 0.2746 ) }
    dend_19 { pt3dadd( 371.411, 511.019, 66.087, 0.2746 ) }
    dend_19 { pt3dadd( 372.482, 511.019, 66.6322, 0.2746 ) }
    dend_19 { pt3dadd( 373.597, 511.227, 67.0653, 0.2746 ) }
    dend_19 { pt3dadd( 374.716, 511.438, 67.4153, 0.2744 ) }
    dend_19 { pt3dadd( 375.838, 511.527, 67.786, 0.2744 ) }
    dend_19 { pt3dadd( 376.961, 511.617, 68.1626, 0.2742 ) }
    dend_19 { pt3dadd( 378.084, 511.629, 68.535, 0.2736 ) }
    dend_19 { pt3dadd( 379.208, 511.629, 68.9074, 0.2728 ) }
    dend_19 { pt3dadd( 380.205, 511.123, 69.2871, 0.2712 ) }
    dend_19 { pt3dadd( 381.198, 510.596, 69.6447, 0.2684 ) }
    dend_19 { pt3dadd( 382.311, 510.342, 69.8748, 0.2626 ) }
    dend_19 { pt3dadd( 383.423, 510.103, 70.0017, 0.2542 ) }
    dend_19 { pt3dadd( 384.489, 510.336, 70.0753, 0.2288 ) }
    dend_19 { pt3dadd( 385.5, 510.56, 70.5116, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 65/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 328.884, 502.937, 20.9684, 0.275 ) }
    dend_16 { pt3dadd( 328.496, 502.502, 19.7484, 0.2752 ) }
    dend_16 { pt3dadd( 328.154, 502.119, 18.4108, 0.276 ) }
    dend_16 { pt3dadd( 328.002, 501.022, 17.397, 0.277 ) }
    dend_16 { pt3dadd( 327.984, 499.879, 16.6855, 0.2792 ) }
    dend_16 { pt3dadd( 327.984, 498.735, 16.238, 0.2832 ) }
    dend_16 { pt3dadd( 327.984, 497.591, 15.997, 0.2906 ) }
    dend_16 { pt3dadd( 327.678, 496.51, 15.918, 0.304 ) }
    dend_16 { pt3dadd( 327.225, 495.46, 15.9116, 0.3304 ) }
    dend_16 { pt3dadd( 326.676, 494.461, 15.9076, 0.3722 ) }
    dend_16 { pt3dadd( 326.048, 493.504, 15.9018, 0.485 ) }
    dend_16 { pt3dadd( 325.609, 492.467, 15.8936, 0.5212 ) }
    dend_16 { pt3dadd( 325.347, 491.354, 15.8824, 0.744 ) }
    dend_16 { pt3dadd( 325.063, 490.246, 15.8668, 0.6276 ) }
    dend_16 { pt3dadd( 324.777, 489.151, 15.8446, 0.4662 ) }
    dend_16 { pt3dadd( 324.76, 488.01, 15.8144, 0.3592 ) }
    dend_16 { pt3dadd( 324.431, 487.16, 15.7724, 0.3736 ) }
    dend_16 { pt3dadd( 323.916, 486.429, 15.7111, 0.51 ) }
    dend_16 { pt3dadd( 323.662, 485.315, 15.6232, 0.459 ) }
    dend_16 { pt3dadd( 323.523, 484.182, 15.507, 0.4676 ) }
    dend_16 { pt3dadd( 323.263, 483.095, 15.365, 0.4398 ) }
    dend_16 { pt3dadd( 323.103, 482.616, 15.0024, 0.3722 ) }
    dend_16 { pt3dadd( 322.947, 482.086, 14.6513, 0.324 ) }
    dend_16 { pt3dadd( 322.402, 481.929, 14.2503, 0.319 ) }
    dend_16 { pt3dadd( 321.415, 481.369, 13.9566, 0.358 ) }
    dend_16 { pt3dadd( 320.604, 480.581, 13.7634, 0.4244 ) }
    dend_16 { pt3dadd( 319.951, 479.645, 13.6825, 0.5764 ) }
    dend_16 { pt3dadd( 319.387, 478.656, 13.6959, 0.7172 ) }
    dend_16 { pt3dadd( 318.874, 477.633, 13.7472, 0.976 ) }
    dend_16 { pt3dadd( 318.414, 476.587, 13.8253, 1.0096 ) }
    dend_16 { pt3dadd( 317.99, 475.524, 13.9068, 0.9508 ) }
    dend_16 { pt3dadd( 317.748, 474.45, 14.044, 0.743 ) }
    dend_16 { pt3dadd( 317.772, 473.359, 14.271, 0.6102 ) }
    dend_16 { pt3dadd( 318.064, 472.254, 14.4452, 0.7366 ) }
    dend_16 { pt3dadd( 318.181, 471.121, 14.5687, 0.7648 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 317.866, 470.02, 14.6446, 0.6738 ) }
    dend_16 { pt3dadd( 317.507, 468.944, 14.6773, 0.743 ) }
    dend_16 { pt3dadd( 316.726, 468.112, 14.6689, 0.8622 ) }
    dend_16 { pt3dadd( 315.928, 467.293, 14.6317, 0.8964 ) }
    dend_16 { pt3dadd( 315.444, 466.34, 14.4864, 0.7226 ) }
    dend_16 { pt3dadd( 315.238, 465.261, 14.4542, 0.637 ) }
    dend_16 { pt3dadd( 314.712, 464.256, 14.4298, 0.4746 ) }
    dend_16 { pt3dadd( 314.553, 463.203, 14.2811, 0.4188 ) }
    dend_16 { pt3dadd( 314.754, 462.092, 14.1663, 0.4984 ) }
    dend_16 { pt3dadd( 315.314, 461.15, 14.1271, 0.4434 ) }
    dend_16 { pt3dadd( 315.383, 460.052, 14.2299, 0.408 ) }
    dend_16 { pt3dadd( 315.114, 458.968, 14.329, 0.4788 ) }
    dend_16 { pt3dadd( 314.938, 457.841, 14.3987, 0.4054 ) }
    dend_16 { pt3dadd( 314.816, 456.704, 14.4357, 0.3482 ) }
    dend_16 { pt3dadd( 314.694, 455.567, 14.422, 0.3162 ) }
    dend_16 { pt3dadd( 314.836, 454.453, 14.3007, 0.355 ) }
    dend_16 { pt3dadd( 314.991, 453.339, 14.1033, 0.4082 ) }
    dend_16 { pt3dadd( 314.602, 452.264, 13.9499, 0.5984 ) }
    dend_16 { pt3dadd( 314.205, 451.193, 13.8457, 0.5052 ) }
    dend_16 { pt3dadd( 313.831, 450.111, 13.7894, 0.438 ) }
    dend_16 { pt3dadd( 313.463, 449.028, 13.7782, 0.4872 ) }
    dend_16 { pt3dadd( 313.424, 447.917, 13.8071, 0.4206 ) }
    dend_16 { pt3dadd( 313.608, 446.788, 13.8614, 0.3766 ) }
    dend_16 { pt3dadd( 313.696, 445.661, 13.9558, 0.3666 ) }
    dend_16 { pt3dadd( 313.632, 444.535, 14.1285, 0.4604 ) }
    dend_16 { pt3dadd( 313.688, 443.404, 14.2733, 0.546 ) }
    dend_16 { pt3dadd( 313.774, 442.27, 14.3867, 0.445 ) }
    dend_16 { pt3dadd( 313.899, 441.14, 14.5256, 0.375 ) }
    dend_16 { pt3dadd( 314.077, 440.013, 14.7473, 0.3636 ) }
    dend_16 { pt3dadd( 313.914, 438.963, 15.1217, 0.4546 ) }
    dend_16 { pt3dadd( 313.61, 437.943, 15.6439, 0.5354 ) }
    dend_16 { pt3dadd( 313.203, 436.917, 16.2285, 0.4258 ) }
    dend_16 { pt3dadd( 312.903, 435.935, 16.8633, 0.3386 ) }
    dend_16 { pt3dadd( 312.741, 435.079, 17.5963, 0.3002 ) }
    dend_16 { pt3dadd( 312.7, 434.004, 18.0432, 0.3166 ) }
    dend_16 { pt3dadd( 312.551, 432.87, 18.3355, 0.378 ) }
    dend_16 { pt3dadd( 312.587, 432.599, 18.5486, 0.3426 ) }
    dend_16 { pt3dadd( 312.732, 431.483, 18.765, 0.3158 ) }
    dend_16 { pt3dadd( 312.85, 430.361, 18.979, 0.305 ) }
    dend_16 { pt3dadd( 312.801, 429.22, 19.154, 0.3258 ) }
    dend_16 { pt3dadd( 312.74, 428.079, 19.3292, 0.3952 ) }
    dend_16 { pt3dadd( 312.456, 426.973, 19.4902, 0.3736 ) }
    dend_16 { pt3dadd( 312.226, 425.857, 19.6151, 0.3754 ) }
    dend_16 { pt3dadd( 312.151, 424.718, 19.6678, 0.4062 ) }
    dend_16 { pt3dadd( 312.094, 423.599, 19.7098, 0.559 ) }
    dend_16 { pt3dadd( 311.883, 422.574, 19.8713, 0.6052 ) }
    dend_16 { pt3dadd( 311.788, 421.493, 20.069, 0.4702 ) }
    dend_16 { pt3dadd( 312.104, 420.507, 20.0376, 0.3748 ) }
    dend_16 { pt3dadd( 312.212, 419.457, 19.8008, 0.3606 ) }
    dend_16 { pt3dadd( 312.449, 418.727, 19.4765, 0.4614 ) }
    dend_16 { pt3dadd( 312.473, 417.751, 19.264, 0.4888 ) }
    dend_16 { pt3dadd( 311.974, 416.732, 19.0529, 0.6274 ) }
    dend_16 { pt3dadd( 311.375, 415.762, 18.8454, 0.6866 ) }
    dend_16 { pt3dadd( 310.975, 414.756, 18.5825, 0.6124 ) }
    dend_16 { pt3dadd( 310.583, 413.684, 18.3464, 0.6816 ) }
    dend_16 { pt3dadd( 310.28, 412.596, 18.0939, 0.7224 ) }
    dend_16 { pt3dadd( 310.087, 411.49, 17.7962, 0.7644 ) }
    dend_16 { pt3dadd( 310.017, 410.377, 17.5193, 0.5472 ) }
    dend_16 { pt3dadd( 310.205, 409.249, 17.3289, 0.434 ) }
    dend_16 { pt3dadd( 310.393, 408.121, 17.2133, 0.4204 ) }
    dend_16 { pt3dadd( 310.289, 406.986, 17.1461, 0.5864 ) }
    dend_16 { pt3dadd( 309.684, 406.047, 17.115, 0.6508 ) }
    dend_16 { pt3dadd( 309.5, 404.936, 17.1578, 0.5802 ) }
    dend_16 { pt3dadd( 309.992, 404.007, 17.2164, 0.4554 ) }
    dend_16 { pt3dadd( 310.22, 402.939, 17.1945, 0.4248 ) }
    dend_16 { pt3dadd( 310.353, 401.801, 17.1346, 0.5354 ) }
    dend_16 { pt3dadd( 310.374, 400.664, 17.0206, 0.616 ) }
    dend_16 { pt3dadd( 310.299, 399.525, 16.8476, 0.9114 ) }
    dend_16 { pt3dadd( 310.089, 398.409, 16.6362, 0.9802 ) }
    dend_16 { pt3dadd( 309.704, 397.502, 16.2795, 0.9136 ) }
    dend_16 { pt3dadd( 309.516, 396.491, 15.8424, 0.818 ) }
    dend_16 { pt3dadd( 309.926, 395.441, 15.482, 0.7354 ) }
    dend_16 { pt3dadd( 310.533, 394.475, 15.2692, 0.809 ) }
    dend_16 { pt3dadd( 311.066, 393.491, 15.2558, 0.7598 ) }
    dend_16 { pt3dadd( 311.771, 392.694, 15.4496, 0.6544 ) }
    dend_16 { pt3dadd( 312.725, 392.117, 15.6803, 0.5288 ) }
    dend_16 { pt3dadd( 313.843, 391.938, 15.899, 0.6434 ) }
    dend_16 { pt3dadd( 314.872, 391.613, 16.116, 0.5406 ) }
    dend_16 { pt3dadd( 315.678, 390.867, 16.359, 0.507 ) }
    dend_16 { pt3dadd( 316.071, 389.808, 16.5693, 0.5992 ) }
    dend_16 { pt3dadd( 316.596, 388.864, 16.588, 0.706 ) }
    dend_16 { pt3dadd( 317.14, 387.885, 16.6051, 0.5282 ) }
    dend_16 { pt3dadd( 317.283, 386.805, 16.7213, 0.4238 ) }
    dend_16 { pt3dadd( 317.283, 385.674, 16.8414, 0.2796 ) }
    dend_16 { pt3dadd( 317.74, 384.638, 17.0593, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 85/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 328.884, 502.937, 20.9684, 0.275 ) }
    dend_13 { pt3dadd( 328.963, 502.581, 19.6596, 0.2288 ) }
    dend_13 { pt3dadd( 330.044, 502.349, 18.9521, 0.3818 ) }
    dend_13 { pt3dadd( 330.161, 501.527, 18.6155, 0.3496 ) }
    dend_13 { pt3dadd( 330.273, 500.46, 18.179, 0.3294 ) }
    dend_13 { pt3dadd( 329.586, 500.288, 17.563, 0.3284 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 91/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 316.231, 504.7, 42.7745, 0.8978 ) }
    dend_6 { pt3dadd( 315.733, 503.97, 42.7776, 0.4576 ) }
    dend_6 { pt3dadd( 314.917, 503.993, 43.86, 0.4512 ) }
    dend_6 { pt3dadd( 313.839, 503.933, 44.3265, 0.4978 ) }
    dend_6 { pt3dadd( 312.699, 503.86, 44.6947, 0.5086 ) }
    dend_6 { pt3dadd( 311.59, 504.134, 44.954, 0.666 ) }
    dend_6 { pt3dadd( 310.451, 504.161, 45.0884, 0.749 ) }
    dend_6 { pt3dadd( 309.314, 504.16, 45.1077, 0.7726 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 316.231, 504.7, 42.7745, 0.8978 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( 316.004, 504.157, 43.0797, 0.7628 ) }
    dend_3 { pt3dadd( 315.587, 503.161, 43.4417, 0.5304 ) }
    dend_3 { pt3dadd( 315.114, 502.172, 43.7996, 0.4692 ) }
    dend_3 { pt3dadd( 314.515, 501.198, 44.0793, 0.6202 ) }
    dend_3 { pt3dadd( 314.077, 500.177, 44.3145, 0.5332 ) }
    dend_3 { pt3dadd( 314.056, 499.037, 44.5133, 0.5512 ) }
    dend_3 { pt3dadd( 313.715, 497.948, 44.6606, 0.3982 ) }
    dend_3 { pt3dadd( 313.103, 496.989, 44.7866, 0.3348 ) }
    dend_3 { pt3dadd( 312.378, 496.379, 45.0632, 0.2918 ) }
    dend_3 { pt3dadd( 311.427, 495.797, 45.3443, 0.3064 ) }
    dend_3 { pt3dadd( 310.488, 495.177, 45.5742, 0.333 ) }
    dend_3 { pt3dadd( 309.673, 494.42, 45.6232, 0.387 ) }
    dend_3 { pt3dadd( 308.885, 493.62, 45.5647, 0.462 ) }
    dend_3 { pt3dadd( 308.163, 492.747, 45.463, 0.7232 ) }
    dend_3 { pt3dadd( 307.855, 491.703, 45.2662, 0.615 ) }
    dend_3 { pt3dadd( 307.391, 490.67, 45.1643, 0.5466 ) }
    dend_3 { pt3dadd( 307.109, 489.788, 45.3169, 0.6924 ) }
    dend_3 { pt3dadd( 306.363, 489.118, 45.5417, 0.5542 ) }
    dend_3 { pt3dadd( 305.413, 488.482, 45.6971, 0.4496 ) }
    dend_3 { pt3dadd( 304.491, 487.878, 45.6966, 0.4366 ) }
    dend_3 { pt3dadd( 303.747, 487.056, 45.5336, 0.448 ) }
    dend_3 { pt3dadd( 303.184, 486.065, 45.3281, 0.5262 ) }
    dend_3 { pt3dadd( 302.633, 485.063, 45.0988, 0.6228 ) }
    dend_3 { pt3dadd( 302.124, 484.134, 44.7336, 0.5802 ) }
    dend_3 { pt3dadd( 301.622, 483.19, 44.31, 0.6604 ) }
    dend_3 { pt3dadd( 301.143, 482.155, 43.9782, 0.7252 ) }
    dend_3 { pt3dadd( 300.742, 481.099, 43.736, 0.564 ) }
    dend_3 { pt3dadd( 300.695, 479.956, 43.5907, 0.4884 ) }
    dend_3 { pt3dadd( 300.648, 478.813, 43.5364, 0.4074 ) }
    // Section: apic_17, id: apic_17, parent: apic_10 (entry count 29/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 333.848, 485.4, 36.729, 0.5222 ) }
    apic_17 { pt3dadd( 333.386, 484.896, 36.6548, 0.503 ) }
    apic_17 { pt3dadd( 332.827, 484.105, 36.6285, 0.4438 ) }
    apic_17 { pt3dadd( 332.175, 483.165, 36.6402, 0.4486 ) }
    apic_17 { pt3dadd( 331.705, 482.131, 36.6582, 0.5906 ) }
    apic_17 { pt3dadd( 331.972, 481.093, 36.8281, 0.6644 ) }
    apic_17 { pt3dadd( 332.431, 480.078, 37.0832, 0.5758 ) }
    apic_17 { pt3dadd( 332.808, 479.001, 37.3066, 0.5916 ) }
    apic_17 { pt3dadd( 332.702, 477.869, 37.494, 0.6632 ) }
    apic_17 { pt3dadd( 332.504, 476.768, 37.7101, 0.8182 ) }
    apic_17 { pt3dadd( 332.498, 475.636, 37.9056, 0.9988 ) }
    apic_17 { pt3dadd( 332.184, 474.54, 37.9719, 0.9348 ) }
    apic_17 { pt3dadd( 331.89, 473.509, 37.8428, 0.9202 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 42/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 333.848, 485.4, 36.729, 0.5222 ) }
    apic_11 { pt3dadd( 333.564, 485.399, 37.0532, 0.2288 ) }
    apic_11 { pt3dadd( 333.014, 484.556, 39.0508, 0.7072 ) }
    apic_11 { pt3dadd( 333.065, 483.745, 39.9524, 0.5768 ) }
    apic_11 { pt3dadd( 333.669, 483.426, 41.1334, 0.517 ) }
    apic_11 { pt3dadd( 334.344, 482.729, 42.38, 0.4372 ) }
    // Section: apic_9, id: apic_9, parent: apic_5 (entry count 48/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 346.686, 479.798, 31.1147, 0.3274 ) }
    apic_9 { pt3dadd( 347.151, 479.576, 31.1324, 0.32 ) }
    apic_9 { pt3dadd( 348.1, 478.983, 31.1727, 0.3846 ) }
    apic_9 { pt3dadd( 349.021, 478.338, 31.1377, 0.3544 ) }
    apic_9 { pt3dadd( 350.03, 477.845, 31.0444, 0.339 ) }
    apic_9 { pt3dadd( 351.135, 477.627, 30.9462, 0.3428 ) }
    apic_9 { pt3dadd( 352.278, 477.587, 30.8507, 0.4212 ) }
    apic_9 { pt3dadd( 353.399, 477.405, 30.7644, 0.4478 ) }
    apic_9 { pt3dadd( 354.449, 476.968, 30.6939, 0.3882 ) }
    apic_9 { pt3dadd( 355.46, 476.435, 30.6379, 0.3484 ) }
    apic_9 { pt3dadd( 356.502, 475.989, 30.5505, 0.3898 ) }
    apic_9 { pt3dadd( 357.552, 475.556, 30.4217, 0.3656 ) }
    apic_9 { pt3dadd( 358.435, 474.901, 30.359, 0.3538 ) }
    apic_9 { pt3dadd( 359.152, 474.034, 30.34, 0.3992 ) }
    apic_9 { pt3dadd( 359.96, 473.259, 30.2624, 0.383 ) }
    apic_9 { pt3dadd( 360.945, 472.727, 30.1235, 0.3852 ) }
    apic_9 { pt3dadd( 362.012, 472.334, 30.0009, 0.4612 ) }
    apic_9 { pt3dadd( 363.09, 471.996, 29.9547, 0.4824 ) }
    apic_9 { pt3dadd( 364.184, 471.79, 29.8724, 0.6464 ) }
    apic_9 { pt3dadd( 365.291, 471.932, 29.7562, 0.5704 ) }
    apic_9 { pt3dadd( 366.418, 472.101, 29.6601, 0.4452 ) }
    apic_9 { pt3dadd( 367.559, 472.167, 29.5761, 0.3658 ) }
    apic_9 { pt3dadd( 368.663, 472.408, 29.4624, 0.3934 ) }
    apic_9 { pt3dadd( 369.709, 472.831, 29.2922, 0.5118 ) }
    apic_9 { pt3dadd( 370.783, 472.859, 29.2065, 0.6308 ) }
    apic_9 { pt3dadd( 371.845, 472.49, 29.153, 0.6548 ) }
    apic_9 { pt3dadd( 372.953, 472.24, 29.071, 0.5098 ) }
    apic_9 { pt3dadd( 374.051, 472.41, 28.9114, 0.4748 ) }
    apic_9 { pt3dadd( 375.104, 472.574, 28.6115, 0.4172 ) }
    apic_9 { pt3dadd( 376.207, 472.671, 28.2576, 0.5054 ) }
    apic_9 { pt3dadd( 377.253, 473.081, 27.9625, 0.4072 ) }
    apic_9 { pt3dadd( 378.229, 473.622, 27.8093, 0.3526 ) }
    apic_9 { pt3dadd( 379.226, 474.121, 27.6312, 0.3198 ) }
    apic_9 { pt3dadd( 380.259, 474.593, 27.4476, 0.3842 ) }
    apic_9 { pt3dadd( 381.376, 474.797, 27.2896, 0.3538 ) }
    apic_9 { pt3dadd( 382.485, 474.567, 27.1284, 0.3368 ) }
    apic_9 { pt3dadd( 383.487, 474.027, 26.9352, 0.3434 ) }
    apic_9 { pt3dadd( 384.56, 473.658, 26.677, 0.3988 ) }
    apic_9 { pt3dadd( 385.626, 473.868, 26.3192, 0.5222 ) }
    apic_9 { pt3dadd( 386.693, 474.25, 25.933, 0.651 ) }
    apic_9 { pt3dadd( 387.664, 474.693, 25.4422, 0.6868 ) }
    apic_9 { pt3dadd( 388.666, 475.136, 24.9138, 0.5948 ) }
    apic_9 { pt3dadd( 389.787, 475.319, 24.4678, 0.5078 ) }
    apic_9 { pt3dadd( 390.931, 475.332, 24.1254, 0.399 ) }
    apic_9 { pt3dadd( 392.048, 475.102, 23.8518, 0.399 ) }
    apic_9 { pt3dadd( 393.151, 474.808, 23.6267, 0.3342 ) }
    apic_9 { pt3dadd( 393.854, 474.104, 23.3402, 0.3006 ) }
    apic_9 { pt3dadd( 394.391, 473.107, 23.0891, 0.2758 ) }
    apic_9 { pt3dadd( 395.026, 472.155, 22.8917, 0.2766 ) }
    apic_9 { pt3dadd( 395.964, 471.67, 22.7408, 0.2784 ) }
    apic_9 { pt3dadd( 397.061, 471.375, 22.6162, 0.2818 ) }
    apic_9 { pt3dadd( 398.104, 470.94, 22.4689, 0.2882 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_9 { pt3dadd( 399.193, 470.755, 22.3622, 0.2994 ) }
    apic_9 { pt3dadd( 400.328, 470.818, 22.3233, 0.3232 ) }
    apic_9 { pt3dadd( 401.458, 470.907, 22.3202, 0.3542 ) }
    apic_9 { pt3dadd( 402.531, 471.297, 22.2726, 0.4734 ) }
    apic_9 { pt3dadd( 403.604, 471.687, 22.1892, 0.3952 ) }
    apic_9 { pt3dadd( 404.707, 471.953, 22.048, 0.3288 ) }
    apic_9 { pt3dadd( 405.811, 472.217, 21.8546, 0.2808 ) }
    apic_9 { pt3dadd( 406.912, 472.523, 21.6706, 0.2862 ) }
    apic_9 { pt3dadd( 408.011, 472.838, 21.5124, 0.296 ) }
    apic_9 { pt3dadd( 409.142, 472.998, 21.3718, 0.3146 ) }
    apic_9 { pt3dadd( 409.78, 473.744, 21.1352, 0.3484 ) }
    apic_9 { pt3dadd( 410.29, 474.615, 20.9633, 0.4138 ) }
    apic_9 { pt3dadd( 411.366, 474.931, 20.8608, 0.5226 ) }
    apic_9 { pt3dadd( 412.498, 475.096, 20.813, 0.7846 ) }
    apic_9 { pt3dadd( 413.586, 474.894, 20.8575, 0.976 ) }
    apic_9 { pt3dadd( 414.661, 474.746, 21.0274, 0.7012 ) }
    apic_9 { pt3dadd( 415.793, 474.578, 21.1854, 0.5032 ) }
    apic_9 { pt3dadd( 416.924, 474.411, 21.2999, 0.455 ) }
    apic_9 { pt3dadd( 418.067, 474.408, 21.3598, 0.6452 ) }
    apic_9 { pt3dadd( 419.21, 474.433, 21.3668, 0.7866 ) }
    apic_9 { pt3dadd( 420.282, 474.079, 21.3248, 0.7024 ) }
    apic_9 { pt3dadd( 421.264, 473.519, 21.222, 0.6258 ) }
    apic_9 { pt3dadd( 422.344, 473.492, 20.9922, 0.5544 ) }
    apic_9 { pt3dadd( 423.47, 473.67, 20.7858, 0.7646 ) }
    apic_9 { pt3dadd( 424.57, 473.805, 20.6206, 0.6366 ) }
    apic_9 { pt3dadd( 425.705, 473.657, 20.4907, 0.6246 ) }
    apic_9 { pt3dadd( 426.83, 473.482, 20.3927, 0.6518 ) }
    apic_9 { pt3dadd( 427.838, 472.941, 20.3255, 0.6916 ) }
    apic_9 { pt3dadd( 428.847, 472.401, 20.2807, 0.5878 ) }
    apic_9 { pt3dadd( 429.901, 472.032, 20.151, 0.5724 ) }
    apic_9 { pt3dadd( 430.961, 471.672, 19.9732, 0.8274 ) }
    apic_9 { pt3dadd( 432.061, 471.453, 19.9175, 0.8388 ) }
    apic_9 { pt3dadd( 433.161, 471.233, 19.9506, 0.8108 ) }
    apic_9 { pt3dadd( 434.298, 471.212, 19.9279, 0.5404 ) }
    apic_9 { pt3dadd( 435.435, 471.192, 19.8668, 0.4144 ) }
    apic_9 { pt3dadd( 436.571, 471.182, 19.7809, 0.4178 ) }
    apic_9 { pt3dadd( 437.668, 471.36, 19.6608, 0.418 ) }
    apic_9 { pt3dadd( 438.508, 472.046, 19.4849, 0.446 ) }
    apic_9 { pt3dadd( 439.362, 471.908, 19.5891, 0.5942 ) }
    apic_9 { pt3dadd( 440.466, 471.731, 19.7033, 0.6288 ) }
    apic_9 { pt3dadd( 441.607, 471.656, 19.8159, 0.7148 ) }
    apic_9 { pt3dadd( 442.695, 471.346, 19.8621, 0.5406 ) }
    apic_9 { pt3dadd( 443.761, 471.299, 19.7742, 0.4642 ) }
    apic_9 { pt3dadd( 444.81, 471.676, 19.7571, 0.4992 ) }
    apic_9 { pt3dadd( 445.722, 472.154, 19.6482, 0.6214 ) }
    apic_9 { pt3dadd( 446.708, 472.344, 19.5997, 0.5704 ) }
    apic_9 { pt3dadd( 447.714, 472.296, 19.4452, 0.678 ) }
    apic_9 { pt3dadd( 448.589, 472.939, 19.2388, 0.582 ) }
    apic_9 { pt3dadd( 449.598, 473.404, 19.0232, 0.4662 ) }
    apic_9 { pt3dadd( 450.615, 473.926, 18.8345, 0.4082 ) }
    apic_9 { pt3dadd( 451.612, 474.449, 18.7631, 0.455 ) }
    apic_9 { pt3dadd( 452.604, 474.973, 18.7894, 0.706 ) }
    apic_9 { pt3dadd( 453.332, 475.849, 18.8205, 0.6044 ) }
    apic_9 { pt3dadd( 454.108, 476.666, 18.8182, 0.4238 ) }
    apic_9 { pt3dadd( 455.122, 477.063, 18.6984, 0.2796 ) }
    apic_9 { pt3dadd( 456.236, 477.134, 18.5312, 0.2288 ) }
    apic_9 { pt3dadd( 457.38, 477.134, 18.1966, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 57/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 346.686, 479.798, 31.1147, 0.3274 ) }
    apic_6 { pt3dadd( 346.545, 479.542, 30.653, 0.2288 ) }
    apic_6 { pt3dadd( 346.078, 478.698, 29.6176, 0.492 ) }
    apic_6 { pt3dadd( 345.442, 477.843, 29.2687, 0.4306 ) }
    apic_6 { pt3dadd( 345.232, 476.771, 28.9187, 0.3894 ) }
    apic_6 { pt3dadd( 345.615, 475.794, 28.5104, 0.4198 ) }
    apic_6 { pt3dadd( 346.37, 474.943, 28.1204, 0.415 ) }
    apic_6 { pt3dadd( 347.337, 474.334, 27.7508, 0.4752 ) }
    apic_6 { pt3dadd( 348.331, 473.77, 27.3916, 0.4786 ) }
    apic_6 { pt3dadd( 348.65, 473.322, 26.8428, 0.554 ) }
    apic_6 { pt3dadd( 348.799, 472.599, 26.0859, 0.8162 ) }
    apic_6 { pt3dadd( 349.709, 472.554, 25.1913, 0.9346 ) }
    apic_6 { pt3dadd( 350.834, 472.453, 24.4056, 1.1088 ) }
    apic_6 { pt3dadd( 351.918, 472.117, 23.7462, 0.968 ) }
    apic_6 { pt3dadd( 353.023, 472.367, 23.1874, 0.668 ) }
    apic_6 { pt3dadd( 354.1, 472.553, 22.6022, 0.53 ) }
    apic_6 { pt3dadd( 355.233, 472.504, 22.045, 0.5338 ) }
    apic_6 { pt3dadd( 355.251, 471.377, 21.3046, 0.4226 ) }
    apic_6 { pt3dadd( 355.267, 470.389, 20.4341, 0.333 ) }
    apic_6 { pt3dadd( 355.283, 469.4, 19.4776, 0.2886 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 77/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 364.274, 507.15, 42.7188, 0.4392 ) }
    dend_24 { pt3dadd( 364.491, 506.433, 43.2272, 0.3714 ) }
    dend_24 { pt3dadd( 364.856, 505.4, 43.7282, 0.3222 ) }
    dend_24 { pt3dadd( 365.59, 504.552, 44.1526, 0.3156 ) }
    dend_24 { pt3dadd( 366.532, 503.973, 44.5724, 0.3514 ) }
    dend_24 { pt3dadd( 367.609, 503.628, 44.9196, 0.4134 ) }
    dend_24 { pt3dadd( 368.633, 503.129, 45.1584, 0.5502 ) }
    dend_24 { pt3dadd( 369.518, 502.409, 45.3046, 0.6964 ) }
    dend_24 { pt3dadd( 370.479, 501.793, 45.4048, 0.8042 ) }
    dend_24 { pt3dadd( 371.553, 501.424, 45.4966, 0.6534 ) }
    dend_24 { pt3dadd( 372.659, 501.161, 45.5202, 0.7006 ) }
    dend_24 { pt3dadd( 373.799, 501.166, 45.5395, 0.5768 ) }
    dend_24 { pt3dadd( 374.931, 501.315, 45.5731, 0.457 ) }
    dend_24 { pt3dadd( 376.008, 500.966, 45.6235, 0.3882 ) }
    dend_24 { pt3dadd( 376.951, 500.324, 45.6994, 0.431 ) }
    dend_24 { pt3dadd( 377.745, 499.521, 45.8441, 0.6002 ) }
    dend_24 { pt3dadd( 378.726, 498.992, 46.0678, 0.7066 ) }
    dend_24 { pt3dadd( 379.824, 498.677, 46.2535, 0.5354 ) }
    dend_24 { pt3dadd( 380.957, 498.524, 46.4022, 0.4052 ) }
    dend_24 { pt3dadd( 382.022, 498.107, 46.5198, 0.4004 ) }
    dend_24 { pt3dadd( 382.992, 497.502, 46.6105, 0.3862 ) }
    dend_24 { pt3dadd( 383.768, 496.663, 46.6785, 0.3864 ) }
    dend_24 { pt3dadd( 384.733, 496.049, 46.7407, 0.486 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 0/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 364.274, 507.15, 42.7188, 0.4392 ) }
    dend_23 { pt3dadd( 364.775, 506.965, 42.0997, 0.6864 ) }
    dend_23 { pt3dadd( 365.893, 506.938, 42.3133, 0.561 ) }
    dend_23 { pt3dadd( 367.01, 507.141, 42.3489, 0.4194 ) }
    dend_23 { pt3dadd( 368.09, 507.509, 42.3917, 0.3588 ) }
    dend_23 { pt3dadd( 368.891, 508.289, 42.4934, 0.4102 ) }
    dend_23 { pt3dadd( 369.41, 509.256, 42.4704, 0.397 ) }
    dend_23 { pt3dadd( 370.368, 509.858, 42.4766, 0.4424 ) }
    dend_23 { pt3dadd( 371.458, 509.961, 42.5768, 0.4152 ) }
    dend_23 { pt3dadd( 372.555, 509.653, 42.6401, 0.4474 ) }
    dend_23 { pt3dadd( 373.641, 509.462, 42.6121, 0.566 ) }
    dend_23 { pt3dadd( 374.515, 508.771, 42.6569, 0.7264 ) }
    dend_23 { pt3dadd( 375.328, 507.97, 42.6625, 0.8554 ) }
    dend_23 { pt3dadd( 376.165, 507.222, 42.5617, 0.768 ) }
    dend_23 { pt3dadd( 377.106, 506.598, 42.4054, 0.8198 ) }
    dend_23 { pt3dadd( 378.078, 506.005, 42.3102, 0.563 ) }
    dend_23 { pt3dadd( 379.135, 505.646, 42.2677, 0.4264 ) }
    dend_23 { pt3dadd( 380.247, 505.677, 42.1599, 0.357 ) }
    dend_23 { pt3dadd( 381.332, 506.038, 42.0879, 0.4784 ) }
    dend_23 { pt3dadd( 382.405, 506.419, 42.0479, 0.4048 ) }
    dend_23 { pt3dadd( 383.521, 506.648, 42.0115, 0.3466 ) }
    dend_23 { pt3dadd( 384.622, 506.917, 41.9558, 0.3148 ) }
    dend_23 { pt3dadd( 385.71, 507.159, 41.9465, 0.3452 ) }
    dend_23 { pt3dadd( 386.607, 507.835, 42.042, 0.4256 ) }
    dend_23 { pt3dadd( 387.397, 508.629, 42.2164, 0.4572 ) }
    dend_23 { pt3dadd( 388.206, 509.318, 42.3752, 0.3992 ) }
    dend_23 { pt3dadd( 389.19, 509.641, 42.5662, 0.3994 ) }
    dend_23 { pt3dadd( 390.333, 509.645, 42.7078, 0.335 ) }
    dend_23 { pt3dadd( 391.413, 509.555, 42.6992, 0.302 ) }
    dend_23 { pt3dadd( 392.494, 509.186, 42.6558, 0.2782 ) }
    dend_23 { pt3dadd( 393.579, 508.839, 42.6115, 0.2814 ) }
    dend_23 { pt3dadd( 394.679, 508.594, 42.651, 0.287 ) }
    dend_23 { pt3dadd( 395.771, 508.325, 42.7431, 0.2988 ) }
    dend_23 { pt3dadd( 396.792, 507.814, 42.7935, 0.3142 ) }
    dend_23 { pt3dadd( 397.821, 507.328, 42.8117, 0.3734 ) }
    dend_23 { pt3dadd( 398.923, 507.075, 42.7638, 0.3338 ) }
    dend_23 { pt3dadd( 399.927, 506.65, 42.705, 0.3 ) }
    dend_23 { pt3dadd( 400.708, 505.83, 42.7269, 0.2746 ) }
    dend_23 { pt3dadd( 401.487, 505.011, 42.819, 0.2746 ) }
    dend_23 { pt3dadd( 402.409, 504.377, 42.9363, 0.2746 ) }
    dend_23 { pt3dadd( 403.447, 503.894, 43.0368, 0.2748 ) }
    dend_23 { pt3dadd( 404.531, 503.625, 43.1147, 0.2748 ) }
    dend_23 { pt3dadd( 405.675, 503.625, 43.1595, 0.2752 ) }
    dend_23 { pt3dadd( 406.819, 503.625, 43.1698, 0.2758 ) }
    dend_23 { pt3dadd( 407.955, 503.731, 43.16, 0.2766 ) }
    dend_23 { pt3dadd( 409.087, 503.895, 43.1379, 0.2786 ) }
    dend_23 { pt3dadd( 410.22, 504.057, 43.1029, 0.2822 ) }
    dend_23 { pt3dadd( 411.362, 504.084, 43.0486, 0.2882 ) }
    dend_23 { pt3dadd( 412.481, 504.235, 42.9887, 0.3008 ) }
    dend_23 { pt3dadd( 412.999, 504.608, 42.98, 0.3182 ) }
    dend_23 { pt3dadd( 414.071, 504.608, 42.7773, 0.3812 ) }
    dend_23 { pt3dadd( 415.119, 504.472, 42.4533, 0.3482 ) }
    dend_23 { pt3dadd( 416.104, 503.964, 42.0949, 0.3262 ) }
    dend_23 { pt3dadd( 417.059, 503.379, 41.7757, 0.3254 ) }
    dend_23 { pt3dadd( 417.655, 502.528, 41.4627, 0.3586 ) }
    dend_23 { pt3dadd( 418.484, 501.902, 41.3608, 0.4812 ) }
    dend_23 { pt3dadd( 419.355, 501.758, 41.6268, 0.4096 ) }
    dend_23 { pt3dadd( 420.368, 501.452, 42.0448, 0.3556 ) }
    dend_23 { pt3dadd( 421.513, 501.408, 42.3856, 0.3324 ) }
    dend_23 { pt3dadd( 422.629, 501.26, 42.6037, 0.3714 ) }
    dend_23 { pt3dadd( 423.715, 500.948, 42.6681, 0.5052 ) }
    dend_23 { pt3dadd( 424.826, 500.792, 42.642, 0.4534 ) }
    dend_23 { pt3dadd( 425.964, 500.792, 42.6031, 0.4398 ) }
    dend_23 { pt3dadd( 427.094, 500.891, 42.5194, 0.4744 ) }
    dend_23 { pt3dadd( 428.223, 501.024, 42.4035, 0.7054 ) }
    dend_23 { pt3dadd( 429.351, 501.17, 42.3024, 0.779 ) }
    dend_23 { pt3dadd( 430.482, 501.332, 42.2531, 0.579 ) }
    dend_23 { pt3dadd( 431.617, 501.437, 42.2013, 0.4694 ) }
    dend_23 { pt3dadd( 432.758, 501.496, 42.1201, 0.3714 ) }
    dend_23 { pt3dadd( 433.897, 501.562, 42.0224, 0.3652 ) }
    dend_23 { pt3dadd( 434.988, 501.909, 41.9224, 0.4158 ) }
    dend_23 { pt3dadd( 436.077, 502.257, 41.8163, 0.438 ) }
    dend_23 { pt3dadd( 437.101, 502.723, 41.6506, 0.369 ) }
    dend_23 { pt3dadd( 438.11, 503.214, 41.44, 0.318 ) }
    dend_23 { pt3dadd( 439.2, 503.557, 41.2821, 0.3076 ) }
    dend_23 { pt3dadd( 440.297, 503.87, 41.1802, 0.338 ) }
    dend_23 { pt3dadd( 441.414, 504.042, 41.1748, 0.381 ) }
    dend_23 { pt3dadd( 442.523, 504.258, 41.1981, 0.5254 ) }
    dend_23 { pt3dadd( 443.619, 504.55, 41.1687, 0.481 ) }
    dend_23 { pt3dadd( 444.715, 504.856, 41.104, 0.5388 ) }
    dend_23 { pt3dadd( 445.806, 505.197, 41.0427, 0.4232 ) }
    dend_23 { pt3dadd( 446.897, 505.543, 40.9872, 0.3762 ) }
    dend_23 { pt3dadd( 447.962, 505.936, 40.9402, 0.3938 ) }
    dend_23 { pt3dadd( 449.101, 505.988, 40.9002, 0.3724 ) }
    dend_23 { pt3dadd( 450.04, 506.47, 40.782, 0.3674 ) }
    dend_23 { pt3dadd( 450.701, 507.28, 40.8352, 0.42 ) }
    dend_23 { pt3dadd( 451.618, 507.961, 40.9167, 0.446 ) }
    dend_23 { pt3dadd( 452.522, 508.658, 41.0362, 0.3848 ) }
    dend_23 { pt3dadd( 453.292, 509.49, 41.214, 0.3418 ) }
    dend_23 { pt3dadd( 453.97, 510.171, 41.27, 0.3784 ) }
    dend_23 { pt3dadd( 454.226, 511.116, 41.3095, 0.3388 ) }
    dend_23 { pt3dadd( 455.125, 511.768, 41.4366, 0.3304 ) }
    dend_23 { pt3dadd( 456.008, 512.392, 42.0795, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 329.586, 500.288, 17.563, 0.3284 ) }
    dend_15 { pt3dadd( 330.055, 499.663, 17.0906, 0.3786 ) }
    dend_15 { pt3dadd( 330.713, 498.746, 16.7569, 0.4464 ) }
    dend_15 { pt3dadd( 331.774, 498.356, 16.5519, 0.6962 ) }
    dend_15 { pt3dadd( 332.809, 497.876, 16.4615, 0.5552 ) }
    dend_15 { pt3dadd( 333.891, 497.578, 16.4483, 0.4824 ) }
    dend_15 { pt3dadd( 334.393, 496.927, 16.5399, 0.3468 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_15 { pt3dadd( 334.429, 495.828, 16.7009, 0.3254 ) }
    dend_15 { pt3dadd( 334.77, 494.737, 16.7922, 0.3162 ) }
    dend_15 { pt3dadd( 335.565, 493.951, 16.7622, 0.3776 ) }
    dend_15 { pt3dadd( 336.601, 493.55, 16.6524, 0.3414 ) }
    dend_15 { pt3dadd( 337.73, 493.423, 16.5052, 0.3134 ) }
    dend_15 { pt3dadd( 338.842, 493.47, 16.2716, 0.3008 ) }
    dend_15 { pt3dadd( 339.885, 493.619, 15.8757, 0.3178 ) }
    dend_15 { pt3dadd( 341.006, 493.652, 15.51, 0.3804 ) }
    dend_15 { pt3dadd( 342.15, 493.652, 15.2177, 0.3468 ) }
    dend_15 { pt3dadd( 343.294, 493.652, 14.9859, 0.324 ) }
    dend_15 { pt3dadd( 344.178, 493.066, 14.6437, 0.32 ) }
    dend_15 { pt3dadd( 345.043, 492.331, 14.3984, 0.3548 ) }
    dend_15 { pt3dadd( 345.996, 491.825, 14.226, 0.4434 ) }
    dend_15 { pt3dadd( 347.009, 491.349, 14.159, 0.4904 ) }
    dend_15 { pt3dadd( 348.054, 490.889, 14.1011, 0.4602 ) }
    dend_15 { pt3dadd( 349.101, 490.448, 14.0322, 0.515 ) }
    dend_15 { pt3dadd( 350.185, 490.448, 13.8356, 0.5368 ) }
    dend_15 { pt3dadd( 351.271, 490.424, 13.5324, 0.7368 ) }
    dend_15 { pt3dadd( 352.396, 490.413, 13.274, 0.7892 ) }
    dend_15 { pt3dadd( 353.537, 490.413, 13.118, 0.6034 ) }
    dend_15 { pt3dadd( 354.626, 490.646, 13.0183, 0.4872 ) }
    dend_15 { pt3dadd( 355.636, 491.168, 12.9861, 0.5366 ) }
    dend_15 { pt3dadd( 356.429, 490.481, 13.0561, 0.7152 ) }
    dend_15 { pt3dadd( 357.287, 490.132, 13.2986, 0.624 ) }
    dend_15 { pt3dadd( 358.334, 490.564, 13.5607, 0.6752 ) }
    dend_15 { pt3dadd( 359.284, 491.179, 13.8093, 0.6164 ) }
    dend_15 { pt3dadd( 360.287, 491.677, 14.0767, 0.7948 ) }
    dend_15 { pt3dadd( 361.348, 492.097, 14.3573, 0.876 ) }
    dend_15 { pt3dadd( 362.408, 492.466, 14.6908, 0.6352 ) }
    dend_15 { pt3dadd( 363.477, 492.703, 15.0875, 0.4888 ) }
    dend_15 { pt3dadd( 364.524, 492.703, 15.594, 0.3602 ) }
    dend_15 { pt3dadd( 365.573, 492.74, 16.002, 0.3432 ) }
    dend_15 { pt3dadd( 366.416, 493.408, 16.2938, 0.3802 ) }
    dend_15 { pt3dadd( 367.357, 493.943, 16.6452, 0.3464 ) }
    dend_15 { pt3dadd( 368.306, 493.771, 17.0506, 0.3242 ) }
    dend_15 { pt3dadd( 369.388, 493.555, 17.2838, 0.3142 ) }
    dend_15 { pt3dadd( 370.511, 493.468, 17.3494, 0.3736 ) }
    dend_15 { pt3dadd( 371.648, 493.571, 17.3687, 0.3342 ) }
    dend_15 { pt3dadd( 372.771, 493.725, 17.3527, 0.3006 ) }
    dend_15 { pt3dadd( 373.744, 494.325, 17.3026, 0.276 ) }
    dend_15 { pt3dadd( 374.777, 494.791, 17.2698, 0.277 ) }
    dend_15 { pt3dadd( 375.873, 494.769, 17.2824, 0.2792 ) }
    dend_15 { pt3dadd( 376.985, 494.55, 17.3298, 0.283 ) }
    dend_15 { pt3dadd( 378.113, 494.484, 17.4462, 0.2904 ) }
    dend_15 { pt3dadd( 379.237, 494.418, 17.6285, 0.3034 ) }
    dend_15 { pt3dadd( 380.316, 494.151, 17.8228, 0.3302 ) }
    dend_15 { pt3dadd( 381.339, 493.638, 17.9757, 0.3672 ) }
    dend_15 { pt3dadd( 382.4, 493.255, 18.0466, 0.4972 ) }
    dend_15 { pt3dadd( 383.318, 493.703, 18.0043, 0.4416 ) }
    dend_15 { pt3dadd( 384.134, 494.346, 18.1479, 0.4046 ) }
    dend_15 { pt3dadd( 384.987, 494.922, 18.3428, 0.4722 ) }
    dend_15 { pt3dadd( 386.023, 495.254, 18.3968, 0.393 ) }
    dend_15 { pt3dadd( 387.013, 495.814, 18.4674, 0.3254 ) }
    dend_15 { pt3dadd( 388.132, 496.051, 18.5612, 0.2746 ) }
    dend_15 { pt3dadd( 389.251, 496.288, 18.6788, 0.2746 ) }
    dend_15 { pt3dadd( 390.381, 496.461, 18.8174, 0.2744 ) }
    dend_15 { pt3dadd( 391.357, 496.961, 19.0302, 0.2744 ) }
    dend_15 { pt3dadd( 392.368, 497.282, 19.4233, 0.2742 ) }
    dend_15 { pt3dadd( 393.041, 497.143, 19.8632, 0.2736 ) }
    dend_15 { pt3dadd( 393.165, 496.197, 20.4397, 0.2728 ) }
    dend_15 { pt3dadd( 393.113, 496.048, 21.2442, 0.2712 ) }
    dend_15 { pt3dadd( 393.897, 496.672, 22.0335, 0.2684 ) }
    dend_15 { pt3dadd( 394.957, 496.823, 22.4686, 0.2626 ) }
    dend_15 { pt3dadd( 396.088, 496.823, 22.6965, 0.2542 ) }
    dend_15 { pt3dadd( 397.211, 497.004, 22.8054, 0.2288 ) }
    dend_15 { pt3dadd( 398.32, 497.282, 22.7458, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 329.586, 500.288, 17.563, 0.3284 ) }
    dend_14 { pt3dadd( 328.756, 500.541, 16.2896, 0.2288 ) }
    dend_14 { pt3dadd( 327.84, 501.225, 16.2834, 0.275 ) }
    dend_14 { pt3dadd( 326.758, 501.434, 16.2812, 0.2758 ) }
    dend_14 { pt3dadd( 325.614, 501.434, 16.2775, 0.2766 ) }
    dend_14 { pt3dadd( 324.47, 501.434, 16.2722, 0.2782 ) }
    dend_14 { pt3dadd( 323.326, 501.434, 16.2669, 0.2812 ) }
    dend_14 { pt3dadd( 322.182, 501.434, 16.2596, 0.287 ) }
    dend_14 { pt3dadd( 321.038, 501.421, 16.245, 0.2976 ) }
    dend_14 { pt3dadd( 319.917, 501.29, 16.2145, 0.3168 ) }
    dend_14 { pt3dadd( 318.853, 500.94, 16.1837, 0.355 ) }
    dend_14 { pt3dadd( 317.781, 500.762, 16.2389, 0.415 ) }
    dend_14 { pt3dadd( 316.669, 500.619, 16.1512, 0.5768 ) }
    dend_14 { pt3dadd( 315.572, 500.412, 15.911, 0.6328 ) }
    dend_14 { pt3dadd( 314.558, 500.095, 15.4899, 0.5472 ) }
    dend_14 { pt3dadd( 313.464, 499.845, 15.0147, 0.3928 ) }
    dend_14 { pt3dadd( 312.43, 499.378, 14.5197, 0.3156 ) }
    dend_14 { pt3dadd( 311.472, 498.916, 13.9384, 0.3022 ) }
    dend_14 { pt3dadd( 310.345, 498.913, 13.4179, 0.3304 ) }
    dend_14 { pt3dadd( 309.651, 498.269, 13.0021, 0.356 ) }
    dend_14 { pt3dadd( 308.958, 497.389, 12.672, 0.5338 ) }
    dend_14 { pt3dadd( 308.759, 497.085, 11.2342, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 88/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 309.314, 504.16, 45.1077, 0.7726 ) }
    dend_8 { pt3dadd( 308.085, 504.155, 45.1548, 0.763 ) }
    dend_8 { pt3dadd( 306.943, 504.13, 45.1618, 0.5462 ) }
    dend_8 { pt3dadd( 305.837, 503.977, 45.0988, 0.4248 ) }
    dend_8 { pt3dadd( 304.818, 503.472, 45.0892, 0.4376 ) }
    dend_8 { pt3dadd( 303.724, 503.239, 45.1752, 0.451 ) }
    dend_8 { pt3dadd( 302.582, 503.196, 45.2505, 0.527 ) }
    dend_8 { pt3dadd( 301.455, 503.004, 45.309, 0.6482 ) }
    dend_8 { pt3dadd( 300.355, 502.695, 45.3684, 0.5104 ) }
    dend_8 { pt3dadd( 299.233, 502.573, 45.4306, 0.412 ) }
    dend_8 { pt3dadd( 298.129, 502.869, 45.4818, 0.383 ) }
    dend_8 { pt3dadd( 297.047, 503.207, 45.5062, 0.4994 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 296.092, 503.751, 45.5342, 0.5766 ) }
    dend_8 { pt3dadd( 295.364, 504.57, 45.7358, 0.705 ) }
    dend_8 { pt3dadd( 294.668, 505.455, 46.03, 0.5586 ) }
    dend_8 { pt3dadd( 293.957, 506.292, 46.4033, 0.5512 ) }
    dend_8 { pt3dadd( 293.018, 506.909, 46.8026, 0.3982 ) }
    dend_8 { pt3dadd( 292.175, 507.572, 47.2688, 0.3342 ) }
    dend_8 { pt3dadd( 291.424, 508.363, 47.7089, 0.2912 ) }
    dend_8 { pt3dadd( 290.489, 509.008, 47.971, 0.305 ) }
    dend_8 { pt3dadd( 289.551, 509.612, 48.1188, 0.3334 ) }
    dend_8 { pt3dadd( 288.541, 510.092, 48.244, 0.373 ) }
    dend_8 { pt3dadd( 287.485, 510.277, 48.3104, 0.5078 ) }
    dend_8 { pt3dadd( 286.371, 510.125, 48.3734, 0.461 ) }
    dend_8 { pt3dadd( 285.241, 510.135, 48.3557, 0.4406 ) }
    dend_8 { pt3dadd( 284.151, 510.317, 48.319, 0.54 ) }
    dend_8 { pt3dadd( 283.084, 510.689, 48.3372, 0.5166 ) }
    dend_8 { pt3dadd( 281.987, 510.997, 48.3445, 0.5638 ) }
    dend_8 { pt3dadd( 280.883, 511.286, 48.309, 0.6702 ) }
    dend_8 { pt3dadd( 279.804, 511.591, 48.186, 0.5464 ) }
    dend_8 { pt3dadd( 278.702, 511.803, 48.0259, 0.5034 ) }
    dend_8 { pt3dadd( 277.585, 511.947, 47.9329, 0.4336 ) }
    dend_8 { pt3dadd( 276.521, 512.218, 47.8134, 0.4832 ) }
    dend_8 { pt3dadd( 275.452, 512.567, 47.6456, 0.6216 ) }
    dend_8 { pt3dadd( 274.411, 513.02, 47.4844, 0.8818 ) }
    dend_8 { pt3dadd( 273.395, 513.526, 47.3026, 0.8912 ) }
    dend_8 { pt3dadd( 272.341, 513.904, 47.0691, 0.6858 ) }
    dend_8 { pt3dadd( 271.26, 513.832, 46.8339, 0.473 ) }
    dend_8 { pt3dadd( 270.155, 513.546, 46.6572, 0.4054 ) }
    dend_8 { pt3dadd( 269.078, 513.7, 46.5668, 0.5234 ) }
    dend_8 { pt3dadd( 268.079, 514.23, 46.5223, 0.4776 ) }
    dend_8 { pt3dadd( 267.099, 514.597, 46.3546, 0.5326 ) }
    dend_8 { pt3dadd( 266.013, 514.659, 46.1266, 0.4106 ) }
    dend_8 { pt3dadd( 264.896, 514.504, 45.9701, 0.359 ) }
    dend_8 { pt3dadd( 263.814, 514.487, 45.7528, 0.3316 ) }
    dend_8 { pt3dadd( 262.88, 514.944, 45.4328, 0.4058 ) }
    dend_8 { pt3dadd( 261.88, 515.454, 45.1741, 0.3934 ) }
    dend_8 { pt3dadd( 260.794, 515.628, 45.1018, 0.4132 ) }
    dend_8 { pt3dadd( 259.685, 515.842, 45.1296, 0.4704 ) }
    dend_8 { pt3dadd( 258.555, 516.017, 45.1797, 0.706 ) }
    dend_8 { pt3dadd( 257.415, 516.017, 45.2469, 0.743 ) }
    dend_8 { pt3dadd( 256.292, 515.819, 45.3155, 0.6932 ) }
    dend_8 { pt3dadd( 255.165, 515.919, 45.3597, 0.4874 ) }
    dend_8 { pt3dadd( 254.156, 516.432, 45.3779, 0.431 ) }
    dend_8 { pt3dadd( 253.264, 517.146, 45.3872, 0.3464 ) }
    dend_8 { pt3dadd( 252.294, 517.747, 45.3978, 0.3242 ) }
    dend_8 { pt3dadd( 251.176, 517.881, 45.4118, 0.3142 ) }
    dend_8 { pt3dadd( 250.031, 517.889, 45.4292, 0.3734 ) }
    dend_8 { pt3dadd( 248.937, 518.174, 45.4709, 0.3338 ) }
    dend_8 { pt3dadd( 247.891, 518.636, 45.5109, 0.3 ) }
    dend_8 { pt3dadd( 246.812, 519.015, 45.5518, 0.2746 ) }
    dend_8 { pt3dadd( 245.79, 519.527, 45.5963, 0.2746 ) }
    dend_8 { pt3dadd( 244.767, 520.038, 45.6484, 0.2746 ) }
    dend_8 { pt3dadd( 243.941, 520.83, 45.7122, 0.2746 ) }
    dend_8 { pt3dadd( 243.456, 521.865, 45.7971, 0.2746 ) }
    dend_8 { pt3dadd( 242.609, 522.625, 45.9203, 0.2746 ) }
    dend_8 { pt3dadd( 241.677, 523.289, 46.0925, 0.2746 ) }
    dend_8 { pt3dadd( 240.914, 524.084, 46.317, 0.2746 ) }
    dend_8 { pt3dadd( 240.781, 525.209, 46.5926, 0.2746 ) }
    dend_8 { pt3dadd( 240.708, 525.921, 47.1223, 0.2746 ) }
    dend_8 { pt3dadd( 240.365, 526.451, 47.9156, 0.2746 ) }
    dend_8 { pt3dadd( 239.996, 527.411, 48.7099, 0.2746 ) }
    dend_8 { pt3dadd( 239.589, 528.478, 49.3338, 0.2746 ) }
    dend_8 { pt3dadd( 239.202, 529.553, 49.8011, 0.2746 ) }
    dend_8 { pt3dadd( 238.999, 530.67, 50.1264, 0.2746 ) }
    dend_8 { pt3dadd( 238.951, 531.811, 50.3325, 0.2746 ) }
    dend_8 { pt3dadd( 238.526, 532.656, 50.5982, 0.2746 ) }
    dend_8 { pt3dadd( 237.581, 533.269, 50.8172, 0.2746 ) }
    dend_8 { pt3dadd( 237.095, 534.262, 50.9961, 0.2746 ) }
    dend_8 { pt3dadd( 236.833, 535.375, 51.1381, 0.2746 ) }
    dend_8 { pt3dadd( 236.331, 536.401, 51.2534, 0.2746 ) }
    dend_8 { pt3dadd( 235.924, 537.45, 51.4018, 0.2746 ) }
    dend_8 { pt3dadd( 235.658, 538.559, 51.5021, 0.2746 ) }
    dend_8 { pt3dadd( 234.835, 539.328, 51.576, 0.2744 ) }
    dend_8 { pt3dadd( 233.941, 540.044, 51.6284, 0.2744 ) }
    dend_8 { pt3dadd( 233.014, 540.713, 51.6611, 0.2742 ) }
    dend_8 { pt3dadd( 232.19, 541.501, 51.6762, 0.2736 ) }
    dend_8 { pt3dadd( 231.297, 542.214, 51.6771, 0.2728 ) }
    dend_8 { pt3dadd( 230.295, 542.759, 51.6771, 0.2712 ) }
    dend_8 { pt3dadd( 229.324, 543.359, 51.6771, 0.2684 ) }
    dend_8 { pt3dadd( 228.297, 543.857, 51.6771, 0.2626 ) }
    dend_8 { pt3dadd( 227.182, 544.001, 51.6771, 0.2542 ) }
    dend_8 { pt3dadd( 226.072, 544.186, 51.6771, 0.2288 ) }
    dend_8 { pt3dadd( 225.218, 544.917, 51.6771, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 309.314, 504.16, 45.1077, 0.7726 ) }
    dend_7 { pt3dadd( 308.425, 504.151, 46.2538, 0.9152 ) }
    dend_7 { pt3dadd( 307.366, 503.888, 46.6617, 0.644 ) }
    dend_7 { pt3dadd( 306.817, 502.915, 46.8502, 0.618 ) }
    dend_7 { pt3dadd( 306.721, 501.861, 47.0537, 0.511 ) }
    dend_7 { pt3dadd( 306.015, 501.031, 47.1649, 0.598 ) }
    dend_7 { pt3dadd( 305.053, 500.465, 47.3362, 0.5164 ) }
    dend_7 { pt3dadd( 304.248, 499.769, 47.6132, 0.6304 ) }
    dend_7 { pt3dadd( 303.267, 499.278, 47.9326, 0.4678 ) }
    dend_7 { pt3dadd( 302.17, 499.131, 48.2012, 0.3802 ) }
    dend_7 { pt3dadd( 301.04, 499.249, 48.3868, 0.324 ) }
    dend_7 { pt3dadd( 299.932, 499.158, 48.4128, 0.3918 ) }
    dend_7 { pt3dadd( 298.831, 498.992, 48.3118, 0.3674 ) }
    dend_7 { pt3dadd( 297.768, 498.742, 48.2544, 0.3644 ) }
    dend_7 { pt3dadd( 296.714, 499.001, 48.2807, 0.3846 ) }
    dend_7 { pt3dadd( 295.658, 499.418, 48.2625, 0.5242 ) }
    dend_7 { pt3dadd( 294.612, 499.664, 48.1295, 0.5148 ) }
    dend_7 { pt3dadd( 293.513, 499.859, 47.971, 0.4284 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_7 { pt3dadd( 292.41, 500.029, 47.8276, 0.375 ) }
    dend_7 { pt3dadd( 291.282, 500.029, 47.847, 0.4412 ) }
    dend_7 { pt3dadd( 290.154, 500.029, 48.0214, 0.4496 ) }
    dend_7 { pt3dadd( 289.045, 500.248, 48.3008, 0.5618 ) }
    dend_7 { pt3dadd( 287.966, 500.463, 48.7511, 0.532 ) }
    dend_7 { pt3dadd( 286.852, 500.348, 49.3027, 0.4842 ) }
    dend_7 { pt3dadd( 285.839, 499.865, 49.9016, 0.3604 ) }
    dend_7 { pt3dadd( 285.285, 500.336, 50.6271, 0.302 ) }
    dend_7 { pt3dadd( 285.491, 501.095, 51.4091, 0.2782 ) }
    dend_7 { pt3dadd( 284.849, 501.577, 52.4289, 0.2814 ) }
    dend_7 { pt3dadd( 284.128, 501.86, 53.5886, 0.2872 ) }
    dend_7 { pt3dadd( 283.213, 501.86, 54.7683, 0.2982 ) }
    dend_7 { pt3dadd( 282.17, 501.594, 55.7606, 0.3176 ) }
    dend_7 { pt3dadd( 281.275, 500.912, 56.5264, 0.3574 ) }
    dend_7 { pt3dadd( 280.631, 500.045, 57.1533, 0.4126 ) }
    dend_7 { pt3dadd( 280.182, 499.081, 57.5243, 0.6066 ) }
    dend_7 { pt3dadd( 279.551, 498.191, 57.699, 0.52 ) }
    dend_7 { pt3dadd( 279.281, 497.282, 57.9984, 0.4666 ) }
    dend_7 { pt3dadd( 278.907, 496.329, 58.4013, 0.536 ) }
    dend_7 { pt3dadd( 277.896, 495.812, 58.7454, 0.5316 ) }
    dend_7 { pt3dadd( 276.794, 495.514, 59.0352, 0.4836 ) }
    dend_7 { pt3dadd( 275.697, 495.22, 59.2886, 0.3592 ) }
    dend_7 { pt3dadd( 274.836, 494.619, 59.3992, 0.3 ) }
    dend_7 { pt3dadd( 273.853, 494.104, 59.598, 0.2746 ) }
    dend_7 { pt3dadd( 272.9, 493.695, 60.02, 0.2746 ) }
    dend_7 { pt3dadd( 271.928, 494.062, 60.5685, 0.2746 ) }
    dend_7 { pt3dadd( 271.08, 494.699, 61.245, 0.2746 ) }
    dend_7 { pt3dadd( 270.233, 495.309, 62.0239, 0.2746 ) }
    dend_7 { pt3dadd( 269.413, 495.978, 62.8516, 0.2746 ) }
    dend_7 { pt3dadd( 268.609, 496.764, 63.5586, 0.2746 ) }
    dend_7 { pt3dadd( 267.886, 497.409, 64.3138, 0.2746 ) }
    dend_7 { pt3dadd( 266.933, 497.711, 64.9057, 0.2746 ) }
    dend_7 { pt3dadd( 265.93, 497.257, 65.3106, 0.2746 ) }
    dend_7 { pt3dadd( 264.96, 496.768, 65.7003, 0.2746 ) }
    dend_7 { pt3dadd( 264.011, 496.208, 66.0845, 0.2746 ) }
    dend_7 { pt3dadd( 262.988, 495.696, 66.4314, 0.2746 ) }
    dend_7 { pt3dadd( 261.928, 495.32, 66.7918, 0.2746 ) }
    dend_7 { pt3dadd( 260.816, 495.13, 67.2395, 0.2746 ) }
    dend_7 { pt3dadd( 259.742, 494.992, 67.7986, 0.2746 ) }
    dend_7 { pt3dadd( 258.772, 494.992, 68.5362, 0.2746 ) }
    dend_7 { pt3dadd( 257.767, 495.037, 69.3588, 0.2746 ) }
    dend_7 { pt3dadd( 256.646, 495.245, 70.0949, 0.2746 ) }
    dend_7 { pt3dadd( 255.525, 495.45, 70.7571, 0.2746 ) }
    dend_7 { pt3dadd( 254.734, 495.394, 71.4638, 0.2746 ) }
    dend_7 { pt3dadd( 253.596, 495.385, 72.0765, 0.2746 ) }
    dend_7 { pt3dadd( 252.454, 495.385, 72.611, 0.2746 ) }
    dend_7 { pt3dadd( 251.955, 495.127, 73.3911, 0.2746 ) }
    dend_7 { pt3dadd( 251.943, 494.469, 74.3638, 0.2746 ) }
    dend_7 { pt3dadd( 251.105, 494.349, 75.1038, 0.2746 ) }
    dend_7 { pt3dadd( 249.972, 494.187, 75.6342, 0.2746 ) }
    dend_7 { pt3dadd( 248.839, 494.026, 75.9976, 0.2746 ) }
    dend_7 { pt3dadd( 247.805, 493.546, 76.2157, 0.2746 ) }
    dend_7 { pt3dadd( 246.783, 493.034, 76.3115, 0.2746 ) }
    dend_7 { pt3dadd( 245.799, 492.451, 76.3566, 0.2746 ) }
    dend_7 { pt3dadd( 244.825, 491.853, 76.4179, 0.2746 ) }
    dend_7 { pt3dadd( 243.932, 491.141, 76.5069, 0.2746 ) }
    dend_7 { pt3dadd( 243.061, 490.398, 76.6354, 0.2746 ) }
    dend_7 { pt3dadd( 242.271, 489.574, 76.8104, 0.2746 ) }
    dend_7 { pt3dadd( 241.501, 488.727, 77.0353, 0.2746 ) }
    dend_7 { pt3dadd( 240.996, 487.712, 77.3097, 0.2746 ) }
    dend_7 { pt3dadd( 240.46, 487.504, 77.945, 0.2746 ) }
    dend_7 { pt3dadd( 239.636, 487.293, 78.7016, 0.2744 ) }
    dend_7 { pt3dadd( 238.577, 486.874, 79.3624, 0.2744 ) }
    dend_7 { pt3dadd( 237.876, 486.039, 79.9484, 0.2742 ) }
    dend_7 { pt3dadd( 237.274, 485.07, 80.479, 0.2736 ) }
    dend_7 { pt3dadd( 236.559, 484.176, 80.969, 0.2728 ) }
    dend_7 { pt3dadd( 235.997, 483.938, 81.7012, 0.2712 ) }
    dend_7 { pt3dadd( 235.91, 483.204, 82.6389, 0.2684 ) }
    dend_7 { pt3dadd( 236.051, 482.149, 83.5898, 0.2626 ) }
    dend_7 { pt3dadd( 236.8, 481.495, 84.5485, 0.2542 ) }
    dend_7 { pt3dadd( 237.491, 480.703, 85.3765, 0.2288 ) }
    dend_7 { pt3dadd( 238.2, 479.818, 86.4335, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 72/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 300.648, 478.813, 43.5364, 0.4074 ) }
    dend_5 { pt3dadd( 300.898, 477.562, 42.2845, 0.9152 ) }
    dend_5 { pt3dadd( 301.334, 476.525, 41.79, 0.53 ) }
    dend_5 { pt3dadd( 301.686, 475.52, 41.5178, 0.353 ) }
    dend_5 { pt3dadd( 301.295, 474.459, 41.2107, 0.2786 ) }
    dend_5 { pt3dadd( 300.805, 473.479, 41.0094, 0.2822 ) }
    dend_5 { pt3dadd( 300.255, 472.536, 40.8612, 0.2882 ) }
    dend_5 { pt3dadd( 299.882, 471.75, 40.5096, 0.3012 ) }
    dend_5 { pt3dadd( 300.334, 470.886, 39.9907, 0.3184 ) }
    dend_5 { pt3dadd( 300.798, 469.97, 39.4814, 0.3816 ) }
    dend_5 { pt3dadd( 301.049, 468.947, 39.13, 0.3492 ) }
    dend_5 { pt3dadd( 301.788, 468.133, 38.6896, 0.328 ) }
    dend_5 { pt3dadd( 302.134, 467.143, 38.171, 0.3274 ) }
    dend_5 { pt3dadd( 302.13, 466.055, 37.6398, 0.3684 ) }
    dend_5 { pt3dadd( 301.428, 465.378, 37.0423, 0.4692 ) }
    dend_5 { pt3dadd( 300.721, 464.579, 36.5663, 0.534 ) }
    dend_5 { pt3dadd( 300.374, 463.497, 36.2426, 0.5618 ) }
    dend_5 { pt3dadd( 300.641, 462.404, 36.0038, 0.6034 ) }
    dend_5 { pt3dadd( 300.466, 461.365, 35.6938, 0.5004 ) }
    dend_5 { pt3dadd( 299.864, 460.394, 35.4729, 0.4968 ) }
    dend_5 { pt3dadd( 299.657, 459.286, 35.3125, 0.496 ) }
    dend_5 { pt3dadd( 299.514, 458.151, 35.1789, 0.4656 ) }
    dend_5 { pt3dadd( 299.342, 457.029, 35.0437, 0.5502 ) }
    dend_5 { pt3dadd( 299.123, 455.929, 34.8793, 0.4802 ) }
    dend_5 { pt3dadd( 298.848, 454.837, 34.7346, 0.5374 ) }
    dend_5 { pt3dadd( 298.444, 453.768, 34.662, 0.421 ) }
    dend_5 { pt3dadd( 298.1, 452.688, 34.6646, 0.3716 ) }
    dend_5 { pt3dadd( 298.079, 451.557, 34.7752, 0.386 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 298.059, 450.426, 34.9628, 0.3566 ) }
    dend_5 { pt3dadd( 298.053, 449.287, 35.1624, 0.3434 ) }
    dend_5 { pt3dadd( 297.948, 448.201, 35.4138, 0.3496 ) }
    dend_5 { pt3dadd( 297.754, 447.098, 35.6412, 0.4412 ) }
    dend_5 { pt3dadd( 298.202, 446.069, 35.7638, 0.4498 ) }
    dend_5 { pt3dadd( 298.156, 445.006, 35.656, 0.562 ) }
    dend_5 { pt3dadd( 297.538, 444.052, 35.5264, 0.5326 ) }
    dend_5 { pt3dadd( 296.917, 443.108, 35.441, 0.4852 ) }
    dend_5 { pt3dadd( 296.313, 442.161, 35.3766, 0.3624 ) }
    dend_5 { pt3dadd( 295.931, 441.093, 35.2327, 0.306 ) }
    dend_5 { pt3dadd( 295.532, 440.035, 35.0367, 0.2856 ) }
    dend_5 { pt3dadd( 295.041, 439.026, 34.788, 0.2946 ) }
    dend_5 { pt3dadd( 294.567, 438.01, 34.4882, 0.3128 ) }
    dend_5 { pt3dadd( 294.135, 436.98, 34.1589, 0.3414 ) }
    dend_5 { pt3dadd( 293.678, 435.952, 33.894, 0.4188 ) }
    dend_5 { pt3dadd( 293.192, 434.926, 33.782, 0.4432 ) }
    dend_5 { pt3dadd( 292.596, 433.964, 33.7764, 0.3786 ) }
    dend_5 { pt3dadd( 291.903, 433.058, 33.8366, 0.3368 ) }
    dend_5 { pt3dadd( 291.323, 432.077, 33.9156, 0.3384 ) }
    dend_5 { pt3dadd( 290.812, 431.055, 33.9811, 0.4134 ) }
    dend_5 { pt3dadd( 290.377, 429.999, 34.0161, 0.4336 ) }
    dend_5 { pt3dadd( 290.009, 428.917, 34.015, 0.3608 ) }
    dend_5 { pt3dadd( 289.57, 427.865, 33.9886, 0.3028 ) }
    dend_5 { pt3dadd( 288.99, 426.879, 33.9475, 0.2794 ) }
    dend_5 { pt3dadd( 288.555, 425.831, 33.8915, 0.2838 ) }
    dend_5 { pt3dadd( 288.557, 424.771, 33.7378, 0.2914 ) }
    dend_5 { pt3dadd( 288.68, 423.703, 33.584, 0.3054 ) }
    dend_5 { pt3dadd( 288.289, 422.629, 33.4922, 0.3342 ) }
    dend_5 { pt3dadd( 287.924, 421.561, 33.4765, 0.3744 ) }
    dend_5 { pt3dadd( 287.656, 420.515, 33.6137, 0.5118 ) }
    dend_5 { pt3dadd( 287.327, 419.475, 33.7904, 0.4606 ) }
    dend_5 { pt3dadd( 286.857, 418.448, 33.8416, 0.4782 ) }
    dend_5 { pt3dadd( 286.522, 417.372, 33.7781, 0.4236 ) }
    dend_5 { pt3dadd( 286.285, 416.263, 33.6213, 0.5168 ) }
    dend_5 { pt3dadd( 285.932, 415.191, 33.4023, 0.4296 ) }
    dend_5 { pt3dadd( 285.422, 414.169, 33.1545, 0.388 ) }
    dend_5 { pt3dadd( 284.749, 413.28, 32.9199, 0.4158 ) }
    dend_5 { pt3dadd( 283.822, 412.684, 32.6578, 0.4156 ) }
    dend_5 { pt3dadd( 283.307, 411.958, 32.4979, 0.4354 ) }
    dend_5 { pt3dadd( 282.72, 411.003, 32.2748, 0.6022 ) }
    dend_5 { pt3dadd( 282.176, 410.033, 32.0046, 0.5112 ) }
    dend_5 { pt3dadd( 282.105, 408.9, 31.7254, 0.4548 ) }
    dend_5 { pt3dadd( 282.034, 407.766, 31.4434, 0.4894 ) }
    dend_5 { pt3dadd( 281.577, 406.733, 31.2612, 0.5658 ) }
    dend_5 { pt3dadd( 281.111, 405.705, 31.1478, 0.6468 ) }
    dend_5 { pt3dadd( 281.0, 404.641, 30.9254, 0.6358 ) }
    dend_5 { pt3dadd( 280.687, 403.595, 30.6564, 0.4814 ) }
    dend_5 { pt3dadd( 280.803, 402.512, 30.4122, 0.3894 ) }
    dend_5 { pt3dadd( 281.296, 401.583, 30.3475, 0.4188 ) }
    dend_5 { pt3dadd( 281.51, 400.491, 30.2991, 0.4194 ) }
    dend_5 { pt3dadd( 281.044, 399.464, 30.2501, 0.45 ) }
    dend_5 { pt3dadd( 280.245, 398.647, 30.2067, 0.5936 ) }
    dend_5 { pt3dadd( 279.423, 397.899, 30.086, 0.6686 ) }
    dend_5 { pt3dadd( 278.953, 397.166, 29.7338, 0.5912 ) }
    dend_5 { pt3dadd( 278.213, 396.328, 29.4476, 0.5816 ) }
    dend_5 { pt3dadd( 277.213, 395.793, 29.2838, 0.8306 ) }
    dend_5 { pt3dadd( 276.132, 395.427, 29.2314, 0.9124 ) }
    dend_5 { pt3dadd( 275.14, 394.868, 29.2802, 0.6186 ) }
    dend_5 { pt3dadd( 274.22, 394.335, 29.4907, 0.4068 ) }
    dend_5 { pt3dadd( 273.33, 394.253, 30.7068, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 60/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 300.648, 478.813, 43.5364, 0.4074 ) }
    dend_4 { pt3dadd( 300.8, 477.423, 43.5761, 0.428 ) }
    dend_4 { pt3dadd( 300.771, 476.299, 43.7228, 0.5526 ) }
    dend_4 { pt3dadd( 300.318, 475.308, 43.967, 0.593 ) }
    dend_4 { pt3dadd( 299.681, 474.361, 44.1661, 0.448 ) }
    dend_4 { pt3dadd( 299.122, 473.368, 44.3338, 0.333 ) }
    dend_4 { pt3dadd( 299.151, 472.344, 44.5746, 0.2882 ) }
    dend_4 { pt3dadd( 299.69, 471.346, 44.7034, 0.2998 ) }
    dend_4 { pt3dadd( 299.73, 470.279, 44.6748, 0.3232 ) }
    dend_4 { pt3dadd( 299.42, 469.201, 44.5376, 0.3544 ) }
    dend_4 { pt3dadd( 298.754, 468.306, 44.3926, 0.4738 ) }
    dend_4 { pt3dadd( 298.395, 467.251, 44.1921, 0.396 ) }
    dend_4 { pt3dadd( 298.064, 466.177, 43.9676, 0.3306 ) }
    dend_4 { pt3dadd( 297.851, 465.061, 43.8841, 0.284 ) }
    dend_4 { pt3dadd( 297.641, 463.946, 43.9208, 0.2922 ) }
    dend_4 { pt3dadd( 297.581, 462.809, 44.018, 0.3068 ) }
    dend_4 { pt3dadd( 297.56, 461.667, 44.1414, 0.3366 ) }
    dend_4 { pt3dadd( 297.508, 460.53, 44.2828, 0.3786 ) }
    dend_4 { pt3dadd( 297.271, 459.422, 44.4494, 0.521 ) }
    dend_4 { pt3dadd( 297.045, 458.312, 44.588, 0.473 ) }
    dend_4 { pt3dadd( 296.862, 457.192, 44.6202, 0.5244 ) }
    dend_4 { pt3dadd( 296.679, 456.07, 44.5777, 0.3954 ) }
    dend_4 { pt3dadd( 296.886, 454.715, 44.5346, 0.3294 ) }
    dend_4 { pt3dadd( 296.782, 453.646, 44.4982, 0.2822 ) }
    dend_4 { pt3dadd( 296.313, 452.603, 44.4769, 0.2882 ) }
    dend_4 { pt3dadd( 296.222, 451.478, 44.4819, 0.3008 ) }
    dend_4 { pt3dadd( 296.222, 450.335, 44.515, 0.318 ) }
    dend_4 { pt3dadd( 295.807, 449.289, 44.562, 0.381 ) }
    dend_4 { pt3dadd( 295.371, 448.272, 44.6779, 0.3476 ) }
    dend_4 { pt3dadd( 295.672, 447.255, 44.8622, 0.3264 ) }
    dend_4 { pt3dadd( 296.169, 446.259, 44.9904, 0.3182 ) }
    dend_4 { pt3dadd( 296.222, 445.134, 45.0178, 0.3812 ) }
    dend_4 { pt3dadd( 296.222, 444.006, 44.9548, 0.348 ) }
    dend_4 { pt3dadd( 296.168, 442.876, 44.8538, 0.3272 ) }
    dend_4 { pt3dadd( 296.003, 441.744, 44.7815, 0.3198 ) }
    dend_4 { pt3dadd( 295.838, 440.612, 44.7527, 0.384 ) }
    dend_4 { pt3dadd( 295.797, 439.476, 44.8154, 0.3532 ) }
    dend_4 { pt3dadd( 295.777, 438.339, 44.952, 0.3366 ) }
    dend_4 { pt3dadd( 295.764, 437.242, 45.1749, 0.3384 ) }
    dend_4 { pt3dadd( 295.602, 436.199, 45.4684, 0.413 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( 295.459, 435.084, 45.6789, 0.4328 ) }
    dend_4 { pt3dadd( 295.697, 433.988, 45.7377, 0.3594 ) }
    dend_4 { pt3dadd( 295.705, 432.921, 45.5924, 0.3004 ) }
    dend_4 { pt3dadd( 295.391, 431.853, 45.3295, 0.2752 ) }
    dend_4 { pt3dadd( 295.125, 430.769, 45.0178, 0.2758 ) }
    dend_4 { pt3dadd( 295.004, 429.63, 44.7714, 0.2766 ) }
    dend_4 { pt3dadd( 294.885, 428.493, 44.6113, 0.2784 ) }
    dend_4 { pt3dadd( 294.613, 427.387, 44.5382, 0.2818 ) }
    dend_4 { pt3dadd( 294.271, 426.294, 44.541, 0.2882 ) }
    dend_4 { pt3dadd( 293.892, 425.216, 44.5962, 0.2998 ) }
    dend_4 { pt3dadd( 293.468, 424.154, 44.6863, 0.3232 ) }
    dend_4 { pt3dadd( 293.009, 423.111, 44.8182, 0.3546 ) }
    dend_4 { pt3dadd( 292.472, 422.115, 45.0318, 0.474 ) }
    dend_4 { pt3dadd( 292.132, 421.063, 45.3096, 0.3966 ) }
    dend_4 { pt3dadd( 292.101, 419.926, 45.6114, 0.3314 ) }
    dend_4 { pt3dadd( 292.093, 418.784, 45.9035, 0.2856 ) }
    dend_4 { pt3dadd( 291.97, 417.741, 46.2638, 0.295 ) }
    dend_4 { pt3dadd( 291.465, 417.007, 46.7656, 0.3132 ) }
    dend_4 { pt3dadd( 291.042, 415.95, 47.1948, 0.342 ) }
    dend_4 { pt3dadd( 290.732, 414.851, 47.5168, 0.4198 ) }
    dend_4 { pt3dadd( 291.207, 413.812, 47.7649, 0.4458 ) }
    dend_4 { pt3dadd( 291.639, 412.859, 48.0598, 0.383 ) }
    dend_4 { pt3dadd( 291.6, 411.735, 48.1863, 0.3448 ) }
    dend_4 { pt3dadd( 291.23, 410.695, 48.1866, 0.3532 ) }
    dend_4 { pt3dadd( 291.186, 409.602, 48.1099, 0.4418 ) }
    dend_4 { pt3dadd( 291.517, 408.596, 48.2068, 0.481 ) }
    dend_4 { pt3dadd( 291.941, 407.614, 48.5005, 0.474 ) }
    dend_4 { pt3dadd( 292.386, 406.616, 48.9152, 0.3886 ) }
    dend_4 { pt3dadd( 292.853, 405.602, 49.4043, 0.3562 ) }
    dend_4 { pt3dadd( 293.152, 404.522, 49.8977, 0.3686 ) }
    dend_4 { pt3dadd( 293.362, 403.406, 50.3471, 0.4996 ) }
    dend_4 { pt3dadd( 293.692, 402.331, 50.7254, 0.446 ) }
    dend_4 { pt3dadd( 294.166, 401.303, 51.046, 0.4128 ) }
    dend_4 { pt3dadd( 294.39, 400.221, 51.3352, 0.4876 ) }
    dend_4 { pt3dadd( 294.39, 399.114, 51.4836, 0.4224 ) }
    dend_4 { pt3dadd( 294.625, 398.015, 51.5729, 0.3744 ) }
    dend_4 { pt3dadd( 295.144, 397.002, 51.6622, 0.3906 ) }
    dend_4 { pt3dadd( 295.785, 396.094, 51.7891, 0.3668 ) }
    dend_4 { pt3dadd( 296.154, 395.038, 52.0134, 0.3556 ) }
    dend_4 { pt3dadd( 296.678, 394.069, 52.3102, 0.4042 ) }
    dend_4 { pt3dadd( 297.434, 393.227, 52.6523, 0.3858 ) }
    dend_4 { pt3dadd( 298.108, 392.32, 53.0048, 0.4228 ) }
    dend_4 { pt3dadd( 298.616, 391.392, 53.1835, 0.3732 ) }
    dend_4 { pt3dadd( 299.119, 390.592, 53.5016, 0.3984 ) }
    dend_4 { pt3dadd( 299.962, 390.109, 53.8742, 0.333 ) }
    dend_4 { pt3dadd( 300.992, 389.618, 54.164, 0.2982 ) }
    dend_4 { pt3dadd( 302.026, 389.213, 54.4228, 0.2712 ) }
    dend_4 { pt3dadd( 303.003, 388.627, 54.5642, 0.2684 ) }
    dend_4 { pt3dadd( 303.954, 387.996, 54.6325, 0.2626 ) }
    dend_4 { pt3dadd( 304.868, 387.309, 54.64, 0.2542 ) }
    dend_4 { pt3dadd( 305.8, 386.646, 54.6224, 0.2288 ) }
    dend_4 { pt3dadd( 306.752, 386.012, 54.5896, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_17 (entry count 52/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 331.89, 473.509, 37.8428, 0.9202 ) }
    apic_21 { pt3dadd( 332.067, 472.898, 37.7398, 0.6202 ) }
    apic_21 { pt3dadd( 332.647, 471.923, 37.6513, 0.4728 ) }
    apic_21 { pt3dadd( 333.286, 470.973, 37.5738, 0.5042 ) }
    apic_21 { pt3dadd( 333.72, 469.921, 37.5203, 0.4532 ) }
    apic_21 { pt3dadd( 333.845, 468.791, 37.499, 0.4336 ) }
    apic_21 { pt3dadd( 334.037, 467.664, 37.4987, 0.4898 ) }
    apic_21 { pt3dadd( 334.65, 466.716, 37.4895, 0.6026 ) }
    apic_21 { pt3dadd( 335.384, 465.84, 37.4699, 0.5408 ) }
    apic_21 { pt3dadd( 335.906, 464.829, 37.4506, 0.599 ) }
    apic_21 { pt3dadd( 336.107, 463.728, 37.483, 0.5542 ) }
    apic_21 { pt3dadd( 336.223, 462.621, 37.4114, 0.526 ) }
    apic_21 { pt3dadd( 336.498, 461.543, 37.24, 0.4338 ) }
    apic_21 { pt3dadd( 336.564, 460.492, 36.9401, 0.4586 ) }
    apic_21 { pt3dadd( 336.578, 459.4, 36.7917, 0.4702 ) }
    apic_21 { pt3dadd( 336.65, 458.309, 36.8018, 0.4278 ) }
    apic_21 { pt3dadd( 337.0, 457.23, 36.8015, 0.4312 ) }
    apic_21 { pt3dadd( 337.536, 456.275, 36.7018, 0.4974 ) }
    apic_21 { pt3dadd( 337.805, 455.17, 36.6215, 0.788 ) }
    apic_21 { pt3dadd( 337.52, 454.064, 36.5621, 0.7404 ) }
    apic_21 { pt3dadd( 337.556, 452.921, 36.4977, 0.7522 ) }
    apic_21 { pt3dadd( 337.931, 451.841, 36.4437, 0.5164 ) }
    apic_21 { pt3dadd( 338.134, 451.255, 36.4216, 0.4164 ) }
    apic_21 { pt3dadd( 338.69, 450.267, 36.4269, 0.424 ) }
    apic_21 { pt3dadd( 338.844, 449.133, 36.4398, 0.4172 ) }
    apic_21 { pt3dadd( 339.063, 448.016, 36.4582, 0.5052 ) }
    apic_21 { pt3dadd( 339.587, 447.0, 36.4778, 0.407 ) }
    apic_21 { pt3dadd( 340.091, 445.992, 36.4809, 0.3522 ) }
    apic_21 { pt3dadd( 340.194, 444.87, 36.5711, 0.319 ) }
    apic_21 { pt3dadd( 340.056, 443.75, 36.666, 0.3824 ) }
    apic_21 { pt3dadd( 339.526, 442.737, 36.7699, 0.35 ) }
    apic_21 { pt3dadd( 339.064, 441.709, 36.9309, 0.331 ) }
    apic_21 { pt3dadd( 338.884, 440.613, 37.1694, 0.3268 ) }
    apic_21 { pt3dadd( 338.857, 439.485, 37.4242, 0.3978 ) }
    apic_21 { pt3dadd( 338.854, 438.374, 37.6914, 0.3738 ) }
    apic_21 { pt3dadd( 338.853, 437.238, 37.8451, 0.3998 ) }
    apic_21 { pt3dadd( 338.892, 436.128, 37.84, 0.3354 ) }
    apic_21 { pt3dadd( 339.086, 435.007, 37.7969, 0.3028 ) }
    apic_21 { pt3dadd( 339.313, 433.903, 37.774, 0.2796 ) }
    apic_21 { pt3dadd( 339.517, 432.783, 37.6849, 0.284 ) }
    apic_21 { pt3dadd( 339.641, 431.67, 37.5698, 0.292 ) }
    apic_21 { pt3dadd( 339.487, 430.544, 37.4735, 0.3064 ) }
    apic_21 { pt3dadd( 339.584, 429.407, 37.3926, 0.3358 ) }
    apic_21 { pt3dadd( 339.742, 428.291, 37.275, 0.3776 ) }
    apic_21 { pt3dadd( 339.757, 427.178, 37.0916, 0.5178 ) }
    apic_21 { pt3dadd( 339.618, 426.063, 36.9592, 0.472 ) }
    apic_21 { pt3dadd( 339.165, 425.033, 36.9362, 0.499 ) }
    apic_21 { pt3dadd( 338.616, 424.057, 36.9412, 0.464 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_21 { pt3dadd( 337.982, 423.139, 36.906, 0.5818 ) }
    apic_21 { pt3dadd( 337.324, 422.237, 36.9407, 0.6002 ) }
    apic_21 { pt3dadd( 336.975, 421.182, 36.9858, 0.461 ) }
    apic_21 { pt3dadd( 336.736, 420.092, 36.953, 0.3572 ) }
    apic_21 { pt3dadd( 336.59, 418.984, 36.8816, 0.333 ) }
    apic_21 { pt3dadd( 336.568, 417.884, 36.8973, 0.3848 ) }
    apic_21 { pt3dadd( 336.565, 416.863, 37.1532, 0.4678 ) }
    apic_21 { pt3dadd( 336.565, 415.893, 37.6194, 0.6874 ) }
    apic_21 { pt3dadd( 336.548, 414.827, 38.0299, 0.7766 ) }
    apic_21 { pt3dadd( 336.345, 413.752, 38.2721, 1.111 ) }
    apic_21 { pt3dadd( 336.159, 412.64, 38.4507, 1.3674 ) }
    apic_21 { pt3dadd( 335.932, 411.571, 38.7008, 1.3214 ) }
    apic_21 { pt3dadd( 335.833, 410.498, 39.0286, 1.0198 ) }
    apic_21 { pt3dadd( 336.134, 409.431, 39.3478, 1.0528 ) }
    apic_21 { pt3dadd( 336.368, 408.318, 39.6402, 1.443 ) }
    apic_21 { pt3dadd( 336.217, 407.207, 39.9364, 1.4842 ) }
    apic_21 { pt3dadd( 336.127, 406.095, 40.2419, 1.4424 ) }
    apic_21 { pt3dadd( 336.109, 404.958, 40.4796, 1.2514 ) }
    apic_21 { pt3dadd( 336.041, 403.817, 40.6468, 0.9916 ) }
    apic_21 { pt3dadd( 335.783, 402.706, 40.7663, 0.964 ) }
    apic_21 { pt3dadd( 335.538, 401.625, 40.7767, 0.9996 ) }
    apic_21 { pt3dadd( 335.286, 400.535, 40.7238, 0.8724 ) }
    apic_21 { pt3dadd( 335.206, 399.484, 40.8405, 0.6594 ) }
    apic_21 { pt3dadd( 335.194, 398.492, 41.1751, 0.6118 ) }
    apic_21 { pt3dadd( 335.197, 397.408, 41.5862, 0.8956 ) }
    apic_21 { pt3dadd( 335.408, 396.317, 41.8505, 0.9896 ) }
    apic_21 { pt3dadd( 335.6, 395.211, 41.9852, 0.9722 ) }
    apic_21 { pt3dadd( 335.716, 394.076, 42.0521, 0.7276 ) }
    apic_21 { pt3dadd( 336.107, 393.021, 42.1386, 0.847 ) }
    apic_21 { pt3dadd( 335.999, 391.908, 42.2537, 0.5748 ) }
    apic_21 { pt3dadd( 335.853, 390.79, 42.4077, 0.4084 ) }
    apic_21 { pt3dadd( 335.709, 389.672, 42.5964, 0.287 ) }
    apic_21 { pt3dadd( 335.734, 388.549, 42.6796, 0.2974 ) }
    apic_21 { pt3dadd( 335.807, 387.426, 42.6348, 0.3164 ) }
    apic_21 { pt3dadd( 335.881, 386.301, 42.4903, 0.3554 ) }
    apic_21 { pt3dadd( 335.954, 385.178, 42.2876, 0.4086 ) }
    apic_21 { pt3dadd( 335.891, 384.055, 42.1372, 0.5996 ) }
    apic_21 { pt3dadd( 335.741, 382.93, 42.0916, 0.5062 ) }
    apic_21 { pt3dadd( 335.591, 381.807, 42.135, 0.4462 ) }
    apic_21 { pt3dadd( 335.443, 380.683, 42.2332, 0.472 ) }
    apic_21 { pt3dadd( 335.451, 379.56, 42.2954, 0.5392 ) }
    apic_21 { pt3dadd( 335.6, 378.435, 42.261, 0.5716 ) }
    apic_21 { pt3dadd( 335.75, 377.312, 42.1403, 0.6226 ) }
    apic_21 { pt3dadd( 335.9, 376.188, 41.958, 0.5308 ) }
    apic_21 { pt3dadd( 336.1, 375.07, 41.7687, 0.5788 ) }
    apic_21 { pt3dadd( 336.362, 373.955, 41.6209, 0.5234 ) }
    apic_21 { pt3dadd( 336.624, 372.842, 41.5209, 0.4372 ) }
    apic_21 { pt3dadd( 336.886, 371.728, 41.4632, 0.4242 ) }
    apic_21 { pt3dadd( 337.148, 370.615, 41.4341, 0.3754 ) }
    apic_21 { pt3dadd( 337.262, 369.479, 41.4154, 0.4026 ) }
    apic_21 { pt3dadd( 337.335, 368.338, 41.3972, 0.341 ) }
    apic_21 { pt3dadd( 337.407, 367.197, 41.3781, 0.313 ) }
    apic_21 { pt3dadd( 337.48, 366.055, 41.3619, 0.2984 ) }
    apic_21 { pt3dadd( 337.284, 364.951, 41.3641, 0.3198 ) }
    apic_21 { pt3dadd( 336.905, 363.872, 41.3916, 0.3534 ) }
    apic_21 { pt3dadd( 336.524, 362.794, 41.4422, 0.4454 ) }
    apic_21 { pt3dadd( 336.183, 361.704, 41.5086, 0.4716 ) }
    apic_21 { pt3dadd( 335.906, 360.593, 41.5831, 0.5358 ) }
    apic_21 { pt3dadd( 335.628, 359.484, 41.6651, 0.8056 ) }
    apic_21 { pt3dadd( 335.383, 358.374, 41.7564, 0.8038 ) }
    apic_21 { pt3dadd( 335.539, 357.261, 41.9185, 0.72 ) }
    apic_21 { pt3dadd( 335.694, 356.147, 42.1215, 0.497 ) }
    apic_21 { pt3dadd( 335.849, 355.034, 42.3391, 0.413 ) }
    apic_21 { pt3dadd( 335.995, 353.92, 42.5267, 0.4882 ) }
    apic_21 { pt3dadd( 336.083, 352.805, 42.5368, 0.4226 ) }
    apic_21 { pt3dadd( 336.171, 351.691, 42.4085, 0.3812 ) }
    apic_21 { pt3dadd( 336.259, 350.575, 42.1803, 0.3718 ) }
    apic_21 { pt3dadd( 336.383, 349.447, 41.9572, 0.4848 ) }
    apic_21 { pt3dadd( 336.525, 348.312, 41.7936, 0.5192 ) }
    apic_21 { pt3dadd( 336.857, 347.235, 41.7043, 0.7462 ) }
    apic_21 { pt3dadd( 337.368, 346.211, 41.6931, 0.6026 ) }
    apic_21 { pt3dadd( 337.646, 345.112, 41.7354, 0.5596 ) }
    apic_21 { pt3dadd( 337.768, 344.001, 41.8205, 0.5418 ) }
    apic_21 { pt3dadd( 337.292, 343.049, 42.051, 0.4376 ) }
    apic_21 { pt3dadd( 336.775, 342.079, 42.3245, 0.3606 ) }
    apic_21 { pt3dadd( 336.55, 341.0, 42.4852, 0.3402 ) }
    apic_21 { pt3dadd( 336.485, 339.872, 42.4978, 0.3934 ) }
    apic_21 { pt3dadd( 336.419, 338.744, 42.3917, 0.5096 ) }
    apic_21 { pt3dadd( 336.355, 337.615, 42.1963, 0.6386 ) }
    apic_21 { pt3dadd( 336.29, 336.487, 41.9412, 0.6106 ) }
    apic_21 { pt3dadd( 336.471, 335.359, 41.7371, 0.7114 ) }
    apic_21 { pt3dadd( 336.659, 334.23, 41.6016, 0.8454 ) }
    apic_21 { pt3dadd( 336.846, 333.102, 41.5262, 0.6626 ) }
    apic_21 { pt3dadd( 337.035, 331.974, 41.4952, 0.5866 ) }
    apic_21 { pt3dadd( 337.204, 330.844, 41.4932, 0.542 ) }
    apic_21 { pt3dadd( 337.204, 329.7, 41.5083, 0.68 ) }
    apic_21 { pt3dadd( 337.204, 328.556, 41.5302, 1.008 ) }
    apic_21 { pt3dadd( 337.204, 327.412, 41.5612, 0.8084 ) }
    apic_21 { pt3dadd( 337.204, 326.268, 41.6035, 0.698 ) }
    apic_21 { pt3dadd( 337.204, 325.124, 41.6559, 0.8342 ) }
    apic_21 { pt3dadd( 337.089, 323.998, 41.7432, 1.034 ) }
    apic_21 { pt3dadd( 336.852, 322.891, 41.8804, 0.9752 ) }
    apic_21 { pt3dadd( 336.614, 321.783, 42.0428, 0.8882 ) }
    apic_21 { pt3dadd( 336.377, 320.676, 42.2089, 0.8488 ) }
    apic_21 { pt3dadd( 336.301, 319.55, 42.2962, 0.871 ) }
    apic_21 { pt3dadd( 336.321, 318.413, 42.2736, 0.9072 ) }
    apic_21 { pt3dadd( 336.342, 317.276, 42.1604, 0.9984 ) }
    apic_21 { pt3dadd( 336.361, 316.139, 41.981, 1.0514 ) }
    apic_21 { pt3dadd( 336.382, 315.001, 41.7626, 1.0286 ) }
    apic_21 { pt3dadd( 336.635, 313.906, 41.5492, 1.1128 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_21 { pt3dadd( 337.038, 312.836, 41.3678, 1.1148 ) }
    apic_21 { pt3dadd( 337.442, 311.765, 41.2135, 0.9516 ) }
    apic_21 { pt3dadd( 337.847, 310.695, 41.0757, 0.7716 ) }
    apic_21 { pt3dadd( 338.121, 309.605, 40.931, 0.7592 ) }
    apic_21 { pt3dadd( 338.121, 308.474, 40.7473, 0.7764 ) }
    apic_21 { pt3dadd( 338.121, 307.342, 40.542, 0.8426 ) }
    apic_21 { pt3dadd( 338.121, 306.211, 40.3351, 0.5686 ) }
    apic_21 { pt3dadd( 338.121, 305.08, 40.1481, 0.3874 ) }
    apic_21 { pt3dadd( 338.129, 303.951, 40.045, 0.295 ) }
    apic_21 { pt3dadd( 338.149, 302.824, 40.1027, 0.313 ) }
    apic_21 { pt3dadd( 338.171, 301.697, 40.2856, 0.3418 ) }
    apic_21 { pt3dadd( 338.193, 300.57, 40.5527, 0.4194 ) }
    apic_21 { pt3dadd( 338.213, 299.443, 40.868, 0.4448 ) }
    apic_21 { pt3dadd( 338.223, 298.306, 41.1603, 0.3816 ) }
    apic_21 { pt3dadd( 338.223, 297.162, 41.3874, 0.3416 ) }
    apic_21 { pt3dadd( 338.223, 296.018, 41.5562, 0.3518 ) }
    apic_21 { pt3dadd( 338.223, 294.874, 41.685, 0.4168 ) }
    apic_21 { pt3dadd( 338.379, 293.76, 41.8281, 0.543 ) }
    apic_21 { pt3dadd( 338.651, 292.667, 42.0104, 0.75 ) }
    apic_21 { pt3dadd( 338.925, 291.576, 42.2156, 0.5766 ) }
    apic_21 { pt3dadd( 339.197, 290.483, 42.4236, 0.445 ) }
    apic_21 { pt3dadd( 339.316, 289.379, 42.5407, 0.4224 ) }
    apic_21 { pt3dadd( 339.258, 288.262, 42.4939, 0.45 ) }
    apic_21 { pt3dadd( 339.201, 287.143, 42.3203, 0.3924 ) }
    apic_21 { pt3dadd( 339.143, 286.025, 42.063, 0.3562 ) }
    apic_21 { pt3dadd( 338.944, 284.902, 41.8424, 0.4046 ) }
    apic_21 { pt3dadd( 338.733, 283.777, 41.6794, 0.3908 ) }
    apic_21 { pt3dadd( 338.521, 282.653, 41.5839, 0.4098 ) }
    apic_21 { pt3dadd( 338.308, 281.529, 41.5506, 0.4574 ) }
    apic_21 { pt3dadd( 338.118, 280.402, 41.5624, 0.715 ) }
    apic_21 { pt3dadd( 338.093, 279.258, 41.6046, 0.5984 ) }
    apic_21 { pt3dadd( 338.068, 278.114, 41.6651, 0.5208 ) }
    apic_21 { pt3dadd( 338.043, 276.972, 41.746, 0.6194 ) }
    apic_21 { pt3dadd( 338.02, 275.828, 41.8485, 0.5412 ) }
    apic_21 { pt3dadd( 338.11, 274.706, 42.0412, 0.5184 ) }
    apic_21 { pt3dadd( 338.2, 273.585, 42.2943, 0.5686 ) }
    apic_21 { pt3dadd( 338.29, 272.463, 42.5799, 0.9024 ) }
    apic_21 { pt3dadd( 338.379, 271.342, 42.8694, 1.0364 ) }
    apic_21 { pt3dadd( 338.543, 270.222, 43.0979, 0.8934 ) }
    apic_21 { pt3dadd( 338.788, 269.105, 43.2121, 0.6982 ) }
    apic_21 { pt3dadd( 339.032, 267.989, 43.2194, 0.4544 ) }
    apic_21 { pt3dadd( 339.278, 266.871, 43.1418, 0.3448 ) }
    apic_21 { pt3dadd( 339.457, 265.757, 42.9545, 0.3102 ) }
    apic_21 { pt3dadd( 339.612, 264.644, 42.6782, 0.3416 ) }
    apic_21 { pt3dadd( 339.767, 263.531, 42.3536, 0.3958 ) }
    apic_21 { pt3dadd( 339.922, 262.416, 42.0109, 0.5136 ) }
    apic_21 { pt3dadd( 340.124, 261.295, 41.7273, 0.648 ) }
    apic_21 { pt3dadd( 340.335, 260.171, 41.5106, 0.619 ) }
    apic_21 { pt3dadd( 340.547, 259.046, 41.3493, 0.7724 ) }
    apic_21 { pt3dadd( 340.76, 257.923, 41.2252, 0.7354 ) }
    apic_21 { pt3dadd( 340.971, 256.798, 41.1222, 0.8558 ) }
    apic_21 { pt3dadd( 341.276, 255.961, 40.9475, 0.6198 ) }
    apic_21 { pt3dadd( 341.655, 254.921, 40.705, 0.5802 ) }
    apic_21 { pt3dadd( 341.754, 253.82, 40.4692, 0.4048 ) }
    apic_21 { pt3dadd( 341.705, 252.688, 40.2878, 0.3466 ) }
    apic_21 { pt3dadd( 341.332, 251.65, 40.2237, 0.3152 ) }
    apic_21 { pt3dadd( 340.727, 250.681, 40.3057, 0.3444 ) }
    apic_21 { pt3dadd( 340.017, 249.935, 40.6574, 0.4318 ) }
    apic_21 { pt3dadd( 339.542, 249.05, 41.1855, 0.4316 ) }
    apic_21 { pt3dadd( 339.322, 247.991, 41.781, 0.5318 ) }
    apic_21 { pt3dadd( 339.103, 246.932, 42.3828, 0.4586 ) }
    apic_21 { pt3dadd( 339.135, 245.82, 42.8473, 0.4354 ) }
    apic_21 { pt3dadd( 339.277, 244.686, 43.1287, 0.532 ) }
    apic_21 { pt3dadd( 339.62, 243.61, 43.2482, 0.4932 ) }
    apic_21 { pt3dadd( 339.882, 242.521, 43.1788, 0.5614 ) }
    apic_21 { pt3dadd( 340.131, 241.429, 42.987, 0.4676 ) }
    apic_21 { pt3dadd( 340.379, 240.336, 42.7356, 0.4478 ) }
    apic_21 { pt3dadd( 340.628, 239.242, 42.4763, 0.5782 ) }
    apic_21 { pt3dadd( 340.884, 238.154, 42.3741, 0.4654 ) }
    apic_21 { pt3dadd( 341.144, 237.065, 42.4211, 0.3756 ) }
    apic_21 { pt3dadd( 341.403, 235.977, 42.5785, 0.3156 ) }
    apic_21 { pt3dadd( 341.663, 234.889, 42.8014, 0.376 ) }
    apic_21 { pt3dadd( 341.684, 233.78, 42.889, 0.3386 ) }
    apic_21 { pt3dadd( 341.684, 232.668, 42.8498, 0.3088 ) }
    apic_21 { pt3dadd( 341.684, 231.556, 42.7115, 0.2908 ) }
    apic_21 { pt3dadd( 341.734, 230.447, 42.6028, 0.306 ) }
    apic_21 { pt3dadd( 341.851, 229.341, 42.6488, 0.3272 ) }
    apic_21 { pt3dadd( 341.967, 228.235, 42.826, 0.3978 ) }
    apic_21 { pt3dadd( 342.083, 227.13, 43.1105, 0.3784 ) }
    apic_21 { pt3dadd( 342.198, 225.994, 43.3642, 0.3858 ) }
    apic_21 { pt3dadd( 342.311, 224.855, 43.5627, 0.418 ) }
    apic_21 { pt3dadd( 342.426, 223.717, 43.6943, 0.617 ) }
    apic_21 { pt3dadd( 342.539, 222.578, 43.7643, 0.5376 ) }
    apic_21 { pt3dadd( 342.428, 221.467, 43.797, 0.5074 ) }
    apic_21 { pt3dadd( 342.05, 220.387, 43.8144, 0.5714 ) }
    apic_21 { pt3dadd( 341.863, 219.27, 43.8371, 0.7946 ) }
    apic_21 { pt3dadd( 341.819, 218.128, 43.8701, 1.385 ) }
    apic_21 { pt3dadd( 341.797, 216.985, 43.9174, 1.6238 ) }
    apic_21 { pt3dadd( 341.841, 215.842, 43.9782, 1.4158 ) }
    apic_21 { pt3dadd( 341.885, 214.698, 44.0488, 0.985 ) }
    apic_21 { pt3dadd( 342.36, 213.681, 44.1865, 0.8646 ) }
    apic_21 { pt3dadd( 342.912, 212.753, 44.4094, 0.7792 ) }
    apic_21 { pt3dadd( 343.34, 211.854, 44.6662, 0.6404 ) }
    apic_21 { pt3dadd( 343.407, 210.727, 44.7684, 0.7446 ) }
    apic_21 { pt3dadd( 343.475, 209.6, 44.7482, 0.555 ) }
    apic_21 { pt3dadd( 343.542, 208.473, 44.6373, 0.4596 ) }
    apic_21 { pt3dadd( 343.61, 207.345, 44.4665, 0.4132 ) }
    apic_21 { pt3dadd( 343.469, 206.217, 44.3506, 0.6092 ) }
    apic_21 { pt3dadd( 343.295, 205.088, 44.3192, 0.518 ) }
    apic_21 { pt3dadd( 343.122, 203.96, 44.3783, 0.4986 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_21 { pt3dadd( 342.948, 202.831, 44.5049, 0.42 ) }
    apic_21 { pt3dadd( 342.832, 201.703, 44.6807, 0.4812 ) }
    apic_21 { pt3dadd( 342.995, 200.58, 44.9039, 0.5064 ) }
    apic_21 { pt3dadd( 343.159, 199.458, 45.1455, 0.5232 ) }
    apic_21 { pt3dadd( 343.322, 198.334, 45.3911, 0.4694 ) }
    apic_21 { pt3dadd( 343.487, 197.211, 45.6305, 0.556 ) }
    apic_21 { pt3dadd( 343.532, 196.071, 45.813, 0.4978 ) }
    apic_21 { pt3dadd( 343.55, 194.927, 45.936, 0.5356 ) }
    apic_21 { pt3dadd( 343.568, 193.783, 46.009, 0.5858 ) }
    apic_21 { pt3dadd( 343.588, 192.639, 46.0466, 0.5456 ) }
    apic_21 { pt3dadd( 343.606, 191.495, 46.0611, 0.4318 ) }
    apic_21 { pt3dadd( 343.703, 190.363, 46.0639, 0.4128 ) }
    apic_21 { pt3dadd( 343.992, 189.255, 46.0656, 0.3594 ) }
    apic_21 { pt3dadd( 344.279, 188.148, 46.0678, 0.3494 ) }
    apic_21 { pt3dadd( 344.567, 187.041, 46.0706, 0.3558 ) }
    apic_21 { pt3dadd( 344.854, 185.934, 46.0751, 0.4764 ) }
    apic_21 { pt3dadd( 345.161, 184.831, 46.081, 0.4006 ) }
    apic_21 { pt3dadd( 345.474, 183.732, 46.0894, 0.3388 ) }
    apic_21 { pt3dadd( 345.789, 182.632, 46.1012, 0.3006 ) }
    apic_21 { pt3dadd( 346.103, 181.531, 46.1174, 0.3178 ) }
    apic_21 { pt3dadd( 346.397, 180.427, 46.1401, 0.3802 ) }
    apic_21 { pt3dadd( 346.585, 179.299, 46.1726, 0.3464 ) }
    apic_21 { pt3dadd( 346.773, 178.17, 46.2182, 0.3242 ) }
    apic_21 { pt3dadd( 346.961, 177.042, 46.2809, 0.3142 ) }
    apic_21 { pt3dadd( 347.149, 175.913, 46.3627, 0.3736 ) }
    apic_21 { pt3dadd( 347.278, 174.785, 46.4834, 0.334 ) }
    apic_21 { pt3dadd( 347.257, 173.658, 46.6816, 0.3004 ) }
    apic_21 { pt3dadd( 347.235, 172.531, 46.9294, 0.2752 ) }
    apic_21 { pt3dadd( 347.213, 171.404, 47.2002, 0.2758 ) }
    apic_21 { pt3dadd( 347.193, 170.277, 47.4695, 0.2766 ) }
    apic_21 { pt3dadd( 347.092, 169.154, 47.6616, 0.2784 ) }
    apic_21 { pt3dadd( 346.909, 168.034, 47.7229, 0.2816 ) }
    apic_21 { pt3dadd( 346.726, 166.913, 47.6851, 0.2878 ) }
    apic_21 { pt3dadd( 346.544, 165.793, 47.5874, 0.2992 ) }
    apic_21 { pt3dadd( 346.376, 164.672, 47.4673, 0.32 ) }
    apic_21 { pt3dadd( 346.609, 163.56, 47.4457, 0.3608 ) }
    apic_21 { pt3dadd( 346.841, 162.448, 47.5146, 0.4262 ) }
    apic_21 { pt3dadd( 347.075, 161.336, 47.6552, 0.5956 ) }
    apic_21 { pt3dadd( 347.303, 160.222, 47.8352, 0.6762 ) }
    apic_21 { pt3dadd( 347.495, 159.095, 47.9951, 0.5874 ) }
    apic_21 { pt3dadd( 347.686, 157.967, 48.125, 0.6624 ) }
    apic_21 { pt3dadd( 347.877, 156.839, 48.218, 0.5528 ) }
    apic_21 { pt3dadd( 348.069, 155.711, 48.284, 0.4128 ) }
    apic_21 { pt3dadd( 348.259, 154.584, 48.33, 0.3048 ) }
    apic_21 { pt3dadd( 348.446, 153.455, 48.3605, 0.2834 ) }
    apic_21 { pt3dadd( 348.635, 152.327, 48.3848, 0.2908 ) }
    apic_21 { pt3dadd( 348.823, 151.198, 48.407, 0.306 ) }
    apic_21 { pt3dadd( 349.01, 150.07, 48.4296, 0.3274 ) }
    apic_21 { pt3dadd( 349.231, 148.948, 48.4576, 0.3978 ) }
    apic_21 { pt3dadd( 349.493, 147.835, 48.4963, 0.3798 ) }
    apic_21 { pt3dadd( 349.754, 146.72, 48.5498, 0.3812 ) }
    apic_21 { pt3dadd( 350.016, 145.607, 48.6226, 0.4452 ) }
    apic_21 { pt3dadd( 350.278, 144.493, 48.7166, 0.4932 ) }
    apic_21 { pt3dadd( 350.631, 143.415, 48.876, 0.467 ) }
    apic_21 { pt3dadd( 351.012, 142.348, 49.0988, 0.5218 ) }
    apic_21 { pt3dadd( 351.393, 141.281, 49.3679, 0.579 ) }
    apic_21 { pt3dadd( 351.774, 140.213, 49.6678, 0.6712 ) }
    apic_21 { pt3dadd( 352.035, 139.106, 49.9618, 0.6806 ) }
    apic_21 { pt3dadd( 352.259, 137.986, 50.2407, 0.5674 ) }
    apic_21 { pt3dadd( 352.484, 136.867, 50.5047, 0.5338 ) }
    apic_21 { pt3dadd( 352.707, 135.747, 50.7612, 0.76 ) }
    apic_21 { pt3dadd( 352.989, 134.653, 51.0294, 0.6938 ) }
    apic_21 { pt3dadd( 353.488, 133.656, 51.3596, 0.6404 ) }
    apic_21 { pt3dadd( 353.987, 132.658, 51.7308, 0.4318 ) }
    apic_21 { pt3dadd( 354.486, 131.662, 52.1195, 0.3498 ) }
    apic_21 { pt3dadd( 355.069, 130.696, 52.4555, 0.3206 ) }
    apic_21 { pt3dadd( 355.727, 129.76, 52.6938, 0.3556 ) }
    apic_21 { pt3dadd( 356.385, 128.825, 52.8469, 0.4452 ) }
    apic_21 { pt3dadd( 357.041, 127.888, 52.9298, 0.492 ) }
    apic_21 { pt3dadd( 357.714, 126.962, 52.9659, 0.4718 ) }
    apic_21 { pt3dadd( 358.4, 126.047, 52.976, 0.496 ) }
    apic_21 { pt3dadd( 359.087, 125.132, 52.9788, 0.6988 ) }
    apic_21 { pt3dadd( 359.772, 124.217, 52.9824, 0.7658 ) }
    apic_21 { pt3dadd( 360.444, 123.291, 52.988, 0.5598 ) }
    apic_21 { pt3dadd( 361.101, 122.354, 52.9956, 0.4074 ) }
    apic_21 { pt3dadd( 361.759, 121.418, 53.006, 0.3842 ) }
    apic_21 { pt3dadd( 362.417, 120.483, 53.0205, 0.4566 ) }
    apic_21 { pt3dadd( 362.976, 119.492, 53.041, 0.715 ) }
    apic_21 { pt3dadd( 363.429, 118.441, 53.0709, 0.5912 ) }
    apic_21 { pt3dadd( 363.884, 117.39, 53.1135, 0.5436 ) }
    apic_21 { pt3dadd( 364.336, 116.34, 53.1636, 0.4874 ) }
    apic_21 { pt3dadd( 364.801, 115.299, 53.2311, 0.4554 ) }
    apic_21 { pt3dadd( 365.304, 114.29, 53.3613, 0.5036 ) }
    apic_21 { pt3dadd( 365.813, 113.316, 53.5674, 0.5266 ) }
    apic_21 { pt3dadd( 366.395, 112.458, 53.7723, 0.6644 ) }
    apic_21 { pt3dadd( 367.246, 111.961, 53.6942, 0.917 ) }
    apic_21 { pt3dadd( 367.639, 110.992, 53.587, 0.9412 ) }
    apic_21 { pt3dadd( 367.896, 109.879, 53.5156, 0.8536 ) }
    apic_21 { pt3dadd( 368.139, 108.764, 53.4694, 1.106 ) }
    apic_21 { pt3dadd( 368.327, 107.635, 53.4327, 1.1614 ) }
    apic_21 { pt3dadd( 368.514, 106.507, 53.4229, 1.2082 ) }
    apic_21 { pt3dadd( 368.611, 105.368, 53.4464, 1.107 ) }
    apic_21 { pt3dadd( 368.981, 104.003, 53.4638, 0.9188 ) }
    apic_21 { pt3dadd( 369.018, 102.859, 53.4741, 0.5704 ) }
    apic_21 { pt3dadd( 368.953, 101.721, 53.4943, 0.3808 ) }
    apic_21 { pt3dadd( 368.788, 100.59, 53.5083, 0.3306 ) }
    apic_21 { pt3dadd( 368.927, 99.4893, 53.5044, 0.3752 ) }
    apic_21 { pt3dadd( 369.321, 98.4155, 53.4727, 0.4764 ) }
    apic_21 { pt3dadd( 369.827, 97.4065, 53.4576, 0.5754 ) }
    apic_21 { pt3dadd( 370.489, 96.5685, 53.5237, 0.5008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_21 { pt3dadd( 371.478, 96.0451, 53.4719, 0.474 ) }
    apic_21 { pt3dadd( 372.026, 95.2462, 53.1952, 0.5682 ) }
    apic_21 { pt3dadd( 372.223, 94.192, 52.7864, 0.733 ) }
    apic_21 { pt3dadd( 372.223, 93.048, 52.4216, 0.8532 ) }
    apic_21 { pt3dadd( 372.534, 92.0187, 51.9756, 0.8358 ) }
    apic_21 { pt3dadd( 373.277, 91.179, 51.5836, 0.5956 ) }
    apic_21 { pt3dadd( 373.699, 90.1417, 51.2596, 0.4728 ) }
    apic_21 { pt3dadd( 374.032, 89.0603, 50.9863, 0.5104 ) }
    apic_21 { pt3dadd( 374.486, 88.1461, 50.9566, 0.6646 ) }
    apic_21 { pt3dadd( 374.748, 87.1415, 50.9737, 0.5406 ) }
    apic_21 { pt3dadd( 375.312, 86.4064, 50.7604, 0.471 ) }
    apic_21 { pt3dadd( 376.079, 85.5665, 50.58, 0.4778 ) }
    apic_21 { pt3dadd( 376.617, 84.5831, 50.444, 0.7472 ) }
    apic_21 { pt3dadd( 376.862, 83.4731, 50.3583, 0.6842 ) }
    apic_21 { pt3dadd( 377.072, 82.3574, 50.3345, 0.5558 ) }
    apic_21 { pt3dadd( 377.302, 81.247, 50.3756, 0.5994 ) }
    apic_21 { pt3dadd( 377.721, 80.1854, 50.4456, 0.4576 ) }
    apic_21 { pt3dadd( 378.132, 79.125, 50.486, 0.3604 ) }
    apic_21 { pt3dadd( 378.338, 78.0931, 50.3118, 0.2924 ) }
    apic_21 { pt3dadd( 378.536, 77.0491, 50.064, 0.307 ) }
    apic_21 { pt3dadd( 378.698, 75.949, 49.9036, 0.337 ) }
    apic_21 { pt3dadd( 378.857, 74.8165, 49.7484, 0.38 ) }
    apic_21 { pt3dadd( 378.646, 73.7484, 49.6104, 0.521 ) }
    apic_21 { pt3dadd( 378.214, 72.8116, 49.3732, 0.4846 ) }
    apic_21 { pt3dadd( 378.033, 71.9126, 49.0162, 0.4888 ) }
    apic_21 { pt3dadd( 377.519, 70.9114, 48.7808, 0.6072 ) }
    apic_21 { pt3dadd( 377.142, 69.9027, 48.7309, 0.7456 ) }
    apic_21 { pt3dadd( 376.754, 68.8375, 48.7413, 0.483 ) }
    apic_21 { pt3dadd( 376.344, 67.7695, 48.9031, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 29/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 331.89, 473.509, 37.8428, 0.9202 ) }
    apic_18 { pt3dadd( 331.559, 472.71, 36.6453, 0.2288 ) }
    apic_18 { pt3dadd( 330.794, 471.866, 36.7133, 0.5038 ) }
    apic_18 { pt3dadd( 329.943, 471.144, 36.818, 0.6164 ) }
    apic_18 { pt3dadd( 329.193, 470.344, 36.783, 0.6266 ) }
    // Section: apic_14, id: apic_14, parent: apic_11 (entry count 34/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 334.344, 482.729, 42.38, 0.4372 ) }
    apic_14 { pt3dadd( 334.372, 482.836, 44.6295, 0.2288 ) }
    apic_14 { pt3dadd( 335.108, 482.728, 46.5783, 0.2842 ) }
    apic_14 { pt3dadd( 336.076, 483.075, 47.4018, 0.2926 ) }
    apic_14 { pt3dadd( 337.09, 483.466, 48.2941, 0.3076 ) }
    apic_14 { pt3dadd( 337.529, 484.348, 49.1641, 0.338 ) }
    apic_14 { pt3dadd( 338.157, 484.884, 50.1155, 0.3814 ) }
    apic_14 { pt3dadd( 339.139, 485.255, 51.0479, 0.5232 ) }
    apic_14 { pt3dadd( 340.07, 485.597, 51.9663, 0.4906 ) }
    apic_14 { pt3dadd( 340.991, 486.008, 52.9085, 0.4924 ) }
    apic_14 { pt3dadd( 342.022, 486.246, 53.7947, 0.6502 ) }
    apic_14 { pt3dadd( 343.11, 485.969, 54.546, 0.6502 ) }
    apic_14 { pt3dadd( 344.035, 485.43, 55.2454, 0.4694 ) }
    apic_14 { pt3dadd( 345.149, 485.426, 55.8533, 0.3256 ) }
    apic_14 { pt3dadd( 345.669, 485.982, 56.5597, 0.2748 ) }
    apic_14 { pt3dadd( 346.102, 486.913, 57.1978, 0.2748 ) }
    apic_14 { pt3dadd( 347.175, 487.104, 57.6831, 0.2752 ) }
    apic_14 { pt3dadd( 348.252, 486.731, 58.0493, 0.2758 ) }
    apic_14 { pt3dadd( 349.333, 486.764, 58.373, 0.2766 ) }
    apic_14 { pt3dadd( 350.399, 487.055, 58.7076, 0.2782 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 54/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 334.344, 482.729, 42.38, 0.4372 ) }
    apic_13 { pt3dadd( 334.738, 482.338, 43.584, 0.3674 ) }
    apic_13 { pt3dadd( 335.53, 481.67, 44.6928, 0.315 ) }
    apic_13 { pt3dadd( 336.484, 481.126, 45.647, 0.3022 ) }
    apic_13 { pt3dadd( 337.578, 481.005, 46.403, 0.3278 ) }
    apic_13 { pt3dadd( 338.552, 480.522, 46.9938, 0.3628 ) }
    apic_13 { pt3dadd( 339.217, 479.629, 47.5426, 0.4896 ) }
    apic_13 { pt3dadd( 339.699, 478.745, 48.2098, 0.4252 ) }
    apic_13 { pt3dadd( 340.123, 477.739, 48.8933, 0.385 ) }
    apic_13 { pt3dadd( 340.4, 476.676, 49.6138, 0.3824 ) }
    apic_13 { pt3dadd( 341.301, 476.199, 50.323, 0.489 ) }
    apic_13 { pt3dadd( 342.033, 475.561, 51.1286, 0.6008 ) }
    apic_13 { pt3dadd( 342.321, 474.623, 51.9957, 0.5374 ) }
    apic_13 { pt3dadd( 342.176, 473.603, 52.8433, 0.5928 ) }
    apic_13 { pt3dadd( 342.388, 472.516, 53.5671, 0.5424 ) }
    apic_13 { pt3dadd( 343.186, 471.74, 54.152, 0.5038 ) }
    apic_13 { pt3dadd( 344.2, 471.267, 54.6258, 0.3968 ) }
    apic_13 { pt3dadd( 345.291, 470.931, 54.9161, 0.3702 ) }
    apic_13 { pt3dadd( 346.085, 470.119, 55.0488, 0.401 ) }
    apic_13 { pt3dadd( 346.582, 469.13, 55.0038, 0.526 ) }
    apic_13 { pt3dadd( 347.452, 468.392, 54.9366, 0.6594 ) }
    apic_13 { pt3dadd( 348.022, 467.982, 54.9301, 0.696 ) }
    apic_13 { pt3dadd( 348.934, 467.326, 55.0074, 0.643 ) }
    apic_13 { pt3dadd( 349.844, 466.671, 55.1104, 0.4462 ) }
    apic_13 { pt3dadd( 350.754, 466.018, 55.1138, 0.3292 ) }
    apic_13 { pt3dadd( 351.681, 465.38, 55.1085, 0.2816 ) }
    apic_13 { pt3dadd( 352.625, 464.759, 55.1502, 0.2874 ) }
    apic_13 { pt3dadd( 353.465, 463.994, 55.1578, 0.2992 ) }
    apic_13 { pt3dadd( 354.286, 463.207, 55.1424, 0.3152 ) }
    apic_13 { pt3dadd( 355.046, 462.387, 55.1062, 0.3754 ) }
    apic_13 { pt3dadd( 355.792, 461.615, 54.9262, 0.3374 ) }
    apic_13 { pt3dadd( 356.467, 460.778, 54.7834, 0.3068 ) }
    apic_13 { pt3dadd( 357.171, 459.886, 54.6554, 0.287 ) }
    apic_13 { pt3dadd( 357.802, 458.983, 54.4519, 0.2988 ) }
    apic_13 { pt3dadd( 358.447, 458.065, 54.2573, 0.3142 ) }
    apic_13 { pt3dadd( 359.102, 457.128, 54.1425, 0.3734 ) }
    apic_13 { pt3dadd( 359.44, 456.061, 54.2018, 0.3338 ) }
    apic_13 { pt3dadd( 359.791, 454.999, 54.3746, 0.3 ) }
    apic_13 { pt3dadd( 360.383, 454.02, 54.5555, 0.2746 ) }
    apic_13 { pt3dadd( 361.187, 453.352, 54.7411, 0.2746 ) }
    apic_13 { pt3dadd( 361.727, 452.714, 54.9755, 0.2746 ) }
    apic_13 { pt3dadd( 361.9, 451.659, 55.2597, 0.2746 ) }
    apic_13 { pt3dadd( 362.696, 450.84, 55.4649, 0.2746 ) }
    apic_13 { pt3dadd( 363.601, 450.151, 55.6133, 0.2746 ) }
    apic_13 { pt3dadd( 364.609, 449.61, 55.7248, 0.2746 ) }
    apic_13 { pt3dadd( 365.633, 449.1, 55.8068, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_13 { pt3dadd( 366.655, 448.589, 55.8667, 0.2746 ) }
    apic_13 { pt3dadd( 367.739, 448.223, 55.921, 0.2746 ) }
    apic_13 { pt3dadd( 368.828, 447.875, 55.9885, 0.2746 ) }
    apic_13 { pt3dadd( 369.947, 447.768, 56.0927, 0.2746 ) }
    apic_13 { pt3dadd( 371.055, 447.768, 56.2968, 0.2746 ) }
    apic_13 { pt3dadd( 372.185, 447.768, 56.5076, 0.2746 ) }
    apic_13 { pt3dadd( 373.304, 447.619, 56.6745, 0.2746 ) }
    apic_13 { pt3dadd( 374.275, 447.059, 56.8016, 0.2746 ) }
    apic_13 { pt3dadd( 375.211, 446.417, 56.8946, 0.2746 ) }
    apic_13 { pt3dadd( 376.233, 445.938, 56.9598, 0.2746 ) }
    apic_13 { pt3dadd( 377.377, 445.938, 57.008, 0.2746 ) }
    apic_13 { pt3dadd( 378.431, 445.56, 57.0643, 0.2746 ) }
    apic_13 { pt3dadd( 379.422, 444.991, 57.1463, 0.2746 ) }
    apic_13 { pt3dadd( 380.438, 444.467, 57.2631, 0.2746 ) }
    apic_13 { pt3dadd( 381.475, 443.984, 57.4185, 0.2746 ) }
    apic_13 { pt3dadd( 382.556, 443.681, 57.6114, 0.2746 ) }
    apic_13 { pt3dadd( 383.477, 443.452, 57.9074, 0.2746 ) }
    apic_13 { pt3dadd( 383.738, 442.671, 58.483, 0.2746 ) }
    apic_13 { pt3dadd( 384.156, 441.788, 59.1024, 0.2746 ) }
    apic_13 { pt3dadd( 385.045, 441.177, 59.5815, 0.2746 ) }
    apic_13 { pt3dadd( 386.124, 440.799, 59.9292, 0.2746 ) }
    apic_13 { pt3dadd( 386.694, 439.925, 60.1572, 0.2746 ) }
    apic_13 { pt3dadd( 387.587, 439.211, 60.2776, 0.2746 ) }
    apic_13 { pt3dadd( 388.49, 438.51, 60.3162, 0.2746 ) }
    apic_13 { pt3dadd( 389.48, 437.939, 60.3322, 0.2746 ) }
    apic_13 { pt3dadd( 390.477, 437.381, 60.3546, 0.2746 ) }
    apic_13 { pt3dadd( 391.591, 437.119, 60.3854, 0.2746 ) }
    apic_13 { pt3dadd( 392.704, 436.857, 60.4285, 0.2746 ) }
    apic_13 { pt3dadd( 393.663, 436.275, 60.4909, 0.2746 ) }
    apic_13 { pt3dadd( 394.556, 435.561, 60.5774, 0.2744 ) }
    apic_13 { pt3dadd( 395.596, 435.128, 60.695, 0.2744 ) }
    apic_13 { pt3dadd( 396.693, 434.808, 60.8429, 0.2742 ) }
    apic_13 { pt3dadd( 397.721, 434.444, 61.0929, 0.2736 ) }
    apic_13 { pt3dadd( 398.641, 433.975, 61.4958, 0.2728 ) }
    apic_13 { pt3dadd( 399.525, 433.277, 61.8744, 0.2712 ) }
    apic_13 { pt3dadd( 400.201, 432.368, 62.1608, 0.2684 ) }
    apic_13 { pt3dadd( 400.536, 431.279, 62.3616, 0.2626 ) }
    apic_13 { pt3dadd( 400.824, 430.172, 62.4848, 0.2542 ) }
    apic_13 { pt3dadd( 401.223, 429.105, 62.5402, 0.2288 ) }
    apic_13 { pt3dadd( 401.734, 428.082, 62.5506, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 40/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 334.344, 482.729, 42.38, 0.4372 ) }
    apic_12 { pt3dadd( 333.255, 483.056, 44.9599, 0.2288 ) }
    apic_12 { pt3dadd( 332.282, 483.087, 46.6502, 0.2826 ) }
    apic_12 { pt3dadd( 331.599, 483.172, 47.4953, 0.2894 ) }
    apic_12 { pt3dadd( 330.696, 483.785, 48.2356, 0.3016 ) }
    apic_12 { pt3dadd( 329.655, 484.002, 48.8429, 0.327 ) }
    apic_12 { pt3dadd( 328.852, 483.861, 49.6163, 0.361 ) }
    apic_12 { pt3dadd( 327.929, 483.373, 50.4031, 0.486 ) }
    apic_12 { pt3dadd( 326.914, 482.866, 51.0622, 0.4184 ) }
    apic_12 { pt3dadd( 325.982, 482.222, 51.6071, 0.372 ) }
    apic_12 { pt3dadd( 325.176, 481.737, 52.2348, 0.3626 ) }
    apic_12 { pt3dadd( 324.178, 481.713, 52.9284, 0.429 ) }
    apic_12 { pt3dadd( 323.066, 481.892, 53.5181, 0.6038 ) }
    apic_12 { pt3dadd( 322.095, 482.37, 54.1069, 0.6774 ) }
    apic_12 { pt3dadd( 321.397, 483.1, 54.7666, 0.6556 ) }
    apic_12 { pt3dadd( 320.974, 484.11, 55.3879, 0.4692 ) }
    apic_12 { pt3dadd( 320.574, 485.121, 55.9591, 0.3732 ) }
    apic_12 { pt3dadd( 320.001, 486.073, 56.4651, 0.3588 ) }
    apic_12 { pt3dadd( 319.06, 486.699, 56.8644, 0.4522 ) }
    apic_12 { pt3dadd( 317.921, 486.786, 57.181, 0.4994 ) }
    apic_12 { pt3dadd( 316.83, 486.956, 57.4969, 0.5106 ) }
    apic_12 { pt3dadd( 315.848, 486.726, 57.8623, 0.4464 ) }
    apic_12 { pt3dadd( 314.856, 486.156, 58.175, 0.512 ) }
    apic_12 { pt3dadd( 314.139, 485.336, 58.529, 0.421 ) }
    apic_12 { pt3dadd( 313.271, 484.812, 59.0078, 0.3718 ) }
    apic_12 { pt3dadd( 312.317, 484.251, 59.4177, 0.386 ) }
    apic_12 { pt3dadd( 311.289, 484.002, 59.6168, 0.358 ) }
    apic_12 { pt3dadd( 310.209, 483.747, 59.8242, 0.3396 ) }
    apic_12 { pt3dadd( 309.167, 483.347, 60.0908, 0.3734 ) }
    apic_12 { pt3dadd( 308.218, 482.736, 60.3364, 0.3338 ) }
    apic_12 { pt3dadd( 307.302, 482.05, 60.5542, 0.3 ) }
    apic_12 { pt3dadd( 306.254, 481.651, 60.8182, 0.2746 ) }
    apic_12 { pt3dadd( 305.159, 481.359, 61.1377, 0.2746 ) }
    apic_12 { pt3dadd( 304.184, 480.859, 61.5194, 0.2746 ) }
    apic_12 { pt3dadd( 303.276, 480.244, 61.9682, 0.2746 ) }
    apic_12 { pt3dadd( 302.232, 479.795, 62.3711, 0.2746 ) }
    apic_12 { pt3dadd( 301.173, 479.361, 62.7236, 0.2746 ) }
    apic_12 { pt3dadd( 300.307, 478.671, 63.1014, 0.2746 ) }
    apic_12 { pt3dadd( 299.484, 477.922, 63.5116, 0.2746 ) }
    apic_12 { pt3dadd( 298.511, 477.321, 63.863, 0.2746 ) }
    apic_12 { pt3dadd( 297.535, 476.727, 64.188, 0.2746 ) }
    apic_12 { pt3dadd( 296.391, 476.694, 64.5212, 0.2746 ) }
    apic_12 { pt3dadd( 295.573, 476.294, 64.9802, 0.2746 ) }
    apic_12 { pt3dadd( 294.551, 475.913, 65.5287, 0.2746 ) }
    apic_12 { pt3dadd( 293.641, 476.119, 66.2875, 0.2746 ) }
    apic_12 { pt3dadd( 292.646, 475.906, 67.0074, 0.2746 ) }
    apic_12 { pt3dadd( 291.721, 475.493, 67.8166, 0.2746 ) }
    apic_12 { pt3dadd( 290.734, 475.338, 68.7467, 0.2746 ) }
    apic_12 { pt3dadd( 289.678, 475.314, 69.7267, 0.2746 ) }
    apic_12 { pt3dadd( 288.652, 475.345, 70.758, 0.2746 ) }
    apic_12 { pt3dadd( 287.65, 475.421, 71.8273, 0.2744 ) }
    apic_12 { pt3dadd( 286.634, 475.544, 72.9081, 0.2744 ) }
    apic_12 { pt3dadd( 285.609, 475.703, 73.9474, 0.2742 ) }
    apic_12 { pt3dadd( 284.528, 475.655, 74.8756, 0.2736 ) }
    apic_12 { pt3dadd( 283.417, 475.49, 75.6806, 0.2728 ) }
    apic_12 { pt3dadd( 282.53, 474.949, 76.3812, 0.2712 ) }
    apic_12 { pt3dadd( 281.586, 474.463, 76.9698, 0.2684 ) }
    apic_12 { pt3dadd( 280.492, 474.386, 77.5578, 0.2626 ) }
    apic_12 { pt3dadd( 279.431, 474.386, 78.2048, 0.2542 ) }
    apic_12 { pt3dadd( 278.432, 474.386, 78.9348, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_12 { pt3dadd( 277.45, 474.386, 80.7472, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 1/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 355.283, 469.4, 19.4776, 0.2886 ) }
    apic_8 { pt3dadd( 355.656, 470.393, 18.7964, 0.3002 ) }
    apic_8 { pt3dadd( 356.485, 471.158, 18.2445, 0.3242 ) }
    apic_8 { pt3dadd( 357.539, 471.275, 17.6854, 0.356 ) }
    apic_8 { pt3dadd( 357.281, 471.241, 16.8924, 0.4768 ) }
    apic_8 { pt3dadd( 357.281, 471.681, 15.8875, 0.4014 ) }
    apic_8 { pt3dadd( 357.739, 472.59, 15.1024, 0.3406 ) }
    apic_8 { pt3dadd( 357.739, 473.722, 14.4642, 0.3024 ) }
    apic_8 { pt3dadd( 358.381, 474.188, 13.9569, 0.3286 ) }
    apic_8 { pt3dadd( 359.52, 474.129, 13.6388, 0.3642 ) }
    apic_8 { pt3dadd( 360.447, 473.629, 13.4756, 0.4916 ) }
    apic_8 { pt3dadd( 361.011, 472.636, 13.3944, 0.4302 ) }
    apic_8 { pt3dadd( 361.95, 471.985, 13.3244, 0.3886 ) }
    apic_8 { pt3dadd( 363.055, 472.018, 13.23, 0.418 ) }
    apic_8 { pt3dadd( 363.942, 472.642, 13.1054, 0.4122 ) }
    apic_8 { pt3dadd( 364.453, 473.666, 12.9973, 0.4656 ) }
    apic_8 { pt3dadd( 365.222, 474.513, 12.9021, 0.4828 ) }
    apic_8 { pt3dadd( 366.142, 474.647, 12.8201, 0.4548 ) }
    apic_8 { pt3dadd( 367.19, 474.188, 12.752, 0.4636 ) }
    apic_8 { pt3dadd( 368.29, 473.975, 12.698, 0.644 ) }
    apic_8 { pt3dadd( 369.259, 474.226, 12.4905, 0.6384 ) }
    apic_8 { pt3dadd( 370.084, 474.903, 12.339, 0.4492 ) }
    apic_8 { pt3dadd( 369.449, 475.805, 12.3133, 0.2796 ) }
    apic_8 { pt3dadd( 369.411, 476.945, 12.3575, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 25/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 355.283, 469.4, 19.4776, 0.2886 ) }
    apic_7 { pt3dadd( 355.283, 468.525, 19.0434, 0.2288 ) }
    apic_7 { pt3dadd( 355.21, 467.449, 17.4303, 0.4228 ) }
    apic_7 { pt3dadd( 354.649, 466.654, 16.7698, 0.415 ) }
    apic_7 { pt3dadd( 354.369, 467.167, 15.8267, 0.5018 ) }
    apic_7 { pt3dadd( 354.778, 467.286, 14.721, 0.4006 ) }
    apic_7 { pt3dadd( 354.825, 466.165, 13.8079, 0.339 ) }
    apic_7 { pt3dadd( 354.825, 465.021, 13.1368, 0.2998 ) }
    apic_7 { pt3dadd( 354.936, 463.884, 12.6837, 0.3216 ) }
    apic_7 { pt3dadd( 355.374, 462.848, 12.4018, 0.359 ) }
    apic_7 { pt3dadd( 356.052, 461.935, 12.248, 0.4464 ) }
    apic_7 { pt3dadd( 356.715, 461.013, 12.1472, 0.5198 ) }
    apic_7 { pt3dadd( 357.182, 460.033, 11.951, 0.3984 ) }
    apic_7 { pt3dadd( 357.498, 458.96, 11.7359, 0.2796 ) }
    apic_7 { pt3dadd( 357.115, 457.902, 11.3728, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 40/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 384.733, 496.049, 46.7407, 0.486 ) }
    dend_26 { pt3dadd( 384.629, 494.987, 46.9297, 0.418 ) }
    dend_26 { pt3dadd( 384.584, 493.874, 47.1058, 0.3736 ) }
    dend_26 { pt3dadd( 384.584, 492.736, 47.1901, 0.3538 ) }
    dend_26 { pt3dadd( 384.578, 491.599, 47.2046, 0.4722 ) }
    dend_26 { pt3dadd( 384.383, 490.474, 47.2352, 0.3934 ) }
    dend_26 { pt3dadd( 384.187, 489.349, 47.2755, 0.3254 ) }
    dend_26 { pt3dadd( 384.409, 488.24, 47.2508, 0.2746 ) }
    dend_26 { pt3dadd( 384.675, 487.139, 47.2058, 0.2746 ) }
    dend_26 { pt3dadd( 385.22, 486.161, 47.2774, 0.2746 ) }
    dend_26 { pt3dadd( 385.792, 485.192, 47.3939, 0.2746 ) }
    dend_26 { pt3dadd( 386.426, 484.243, 47.4538, 0.2746 ) }
    dend_26 { pt3dadd( 387.055, 483.292, 47.4956, 0.2746 ) }
    dend_26 { pt3dadd( 387.68, 482.339, 47.5639, 0.2746 ) }
    dend_26 { pt3dadd( 388.507, 481.559, 47.6084, 0.2746 ) }
    dend_26 { pt3dadd( 389.378, 480.816, 47.6132, 0.2746 ) }
    dend_26 { pt3dadd( 390.207, 480.029, 47.593, 0.2746 ) }
    dend_26 { pt3dadd( 391.028, 479.233, 47.556, 0.2746 ) }
    dend_26 { pt3dadd( 391.911, 478.507, 47.4981, 0.2746 ) }
    dend_26 { pt3dadd( 392.423, 477.496, 47.3651, 0.2746 ) }
    dend_26 { pt3dadd( 392.935, 476.486, 47.1845, 0.2746 ) }
    dend_26 { pt3dadd( 393.494, 475.512, 46.9846, 0.2746 ) }
    dend_26 { pt3dadd( 394.387, 474.797, 46.8297, 0.2746 ) }
    dend_26 { pt3dadd( 395.268, 474.069, 46.7169, 0.2746 ) }
    dend_26 { pt3dadd( 396.064, 473.246, 46.6416, 0.2746 ) }
    dend_26 { pt3dadd( 396.799, 472.388, 46.5984, 0.2746 ) }
    dend_26 { pt3dadd( 397.168, 471.305, 46.5732, 0.2746 ) }
    dend_26 { pt3dadd( 397.537, 470.222, 46.5511, 0.2746 ) }
    dend_26 { pt3dadd( 397.744, 469.098, 46.5189, 0.2746 ) }
    dend_26 { pt3dadd( 398.463, 468.23, 46.4747, 0.2746 ) }
    dend_26 { pt3dadd( 399.28, 467.438, 46.4173, 0.2746 ) }
    dend_26 { pt3dadd( 400.31, 467.004, 46.3476, 0.2746 ) }
    dend_26 { pt3dadd( 401.122, 466.237, 46.2006, 0.2746 ) }
    dend_26 { pt3dadd( 401.918, 465.442, 45.9973, 0.2746 ) }
    dend_26 { pt3dadd( 402.937, 465.074, 45.8091, 0.2746 ) }
    dend_26 { pt3dadd( 403.9, 464.564, 45.6658, 0.2746 ) }
    dend_26 { pt3dadd( 404.45, 463.583, 45.5641, 0.2746 ) }
    dend_26 { pt3dadd( 404.841, 462.509, 45.4997, 0.2746 ) }
    dend_26 { pt3dadd( 405.013, 461.396, 45.4681, 0.2746 ) }
    dend_26 { pt3dadd( 405.642, 460.441, 45.4521, 0.2746 ) }
    dend_26 { pt3dadd( 406.309, 459.531, 45.4367, 0.2746 ) }
    dend_26 { pt3dadd( 407.344, 459.052, 45.4149, 0.2746 ) }
    dend_26 { pt3dadd( 408.092, 458.263, 45.3835, 0.2746 ) }
    dend_26 { pt3dadd( 408.473, 457.19, 45.3404, 0.2746 ) }
    dend_26 { pt3dadd( 408.985, 456.167, 45.2858, 0.2746 ) }
    dend_26 { pt3dadd( 409.419, 455.111, 45.199, 0.2746 ) }
    dend_26 { pt3dadd( 409.839, 454.049, 45.0859, 0.2746 ) }
    dend_26 { pt3dadd( 410.468, 453.188, 44.8711, 0.2746 ) }
    dend_26 { pt3dadd( 410.904, 452.129, 44.709, 0.2746 ) }
    dend_26 { pt3dadd( 411.341, 451.072, 44.5987, 0.2746 ) }
    dend_26 { pt3dadd( 411.878, 450.066, 44.5388, 0.2746 ) }
    dend_26 { pt3dadd( 412.477, 449.092, 44.5301, 0.2746 ) }
    dend_26 { pt3dadd( 412.986, 448.07, 44.5718, 0.2746 ) }
    dend_26 { pt3dadd( 413.304, 446.976, 44.6603, 0.2746 ) }
    dend_26 { pt3dadd( 414.105, 446.349, 44.7751, 0.2746 ) }
    dend_26 { pt3dadd( 414.922, 445.599, 44.9145, 0.2746 ) }
    dend_26 { pt3dadd( 414.629, 444.642, 45.2001, 0.2746 ) }
    dend_26 { pt3dadd( 414.178, 443.674, 45.605, 0.2746 ) }
    dend_26 { pt3dadd( 413.569, 442.751, 45.9928, 0.2746 ) }
    dend_26 { pt3dadd( 412.852, 441.859, 46.2921, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 412.191, 440.927, 46.5105, 0.2746 ) }
    dend_26 { pt3dadd( 411.562, 439.971, 46.6584, 0.2746 ) }
    dend_26 { pt3dadd( 410.95, 439.004, 46.7477, 0.2746 ) }
    dend_26 { pt3dadd( 410.35, 438.031, 46.8118, 0.2746 ) }
    dend_26 { pt3dadd( 409.718, 437.078, 46.8815, 0.2746 ) }
    dend_26 { pt3dadd( 409.06, 436.142, 46.9697, 0.2746 ) }
    dend_26 { pt3dadd( 408.541, 435.148, 47.124, 0.2746 ) }
    dend_26 { pt3dadd( 408.14, 434.104, 47.369, 0.2746 ) }
    dend_26 { pt3dadd( 407.811, 433.021, 47.6213, 0.2746 ) }
    dend_26 { pt3dadd( 407.522, 431.914, 47.8416, 0.2746 ) }
    dend_26 { pt3dadd( 407.106, 430.88, 48.0637, 0.2746 ) }
    dend_26 { pt3dadd( 406.443, 429.985, 48.3398, 0.2746 ) }
    dend_26 { pt3dadd( 405.816, 429.046, 48.5901, 0.2746 ) }
    dend_26 { pt3dadd( 405.216, 428.071, 48.7785, 0.2746 ) }
    dend_26 { pt3dadd( 404.578, 427.123, 48.928, 0.2746 ) }
    dend_26 { pt3dadd( 403.909, 426.195, 49.0496, 0.2746 ) }
    dend_26 { pt3dadd( 403.567, 425.149, 49.1543, 0.2746 ) }
    dend_26 { pt3dadd( 403.567, 424.012, 49.2853, 0.2746 ) }
    dend_26 { pt3dadd( 403.567, 422.875, 49.4446, 0.2746 ) }
    dend_26 { pt3dadd( 403.567, 421.739, 49.6241, 0.2746 ) }
    dend_26 { pt3dadd( 403.382, 420.626, 49.7848, 0.2746 ) }
    dend_26 { pt3dadd( 403.042, 419.533, 49.9016, 0.2746 ) }
    dend_26 { pt3dadd( 402.786, 418.427, 49.978, 0.2746 ) }
    dend_26 { pt3dadd( 402.729, 417.284, 50.0192, 0.2746 ) }
    dend_26 { pt3dadd( 402.671, 416.141, 50.0366, 0.2744 ) }
    dend_26 { pt3dadd( 402.65, 414.999, 50.0405, 0.2744 ) }
    dend_26 { pt3dadd( 402.65, 413.855, 50.0405, 0.2742 ) }
    dend_26 { pt3dadd( 402.65, 412.711, 50.0405, 0.2736 ) }
    dend_26 { pt3dadd( 402.65, 411.567, 50.0405, 0.2728 ) }
    dend_26 { pt3dadd( 402.65, 410.423, 50.0405, 0.2712 ) }
    dend_26 { pt3dadd( 402.655, 409.279, 50.0405, 0.2684 ) }
    dend_26 { pt3dadd( 402.82, 408.146, 50.0405, 0.2626 ) }
    dend_26 { pt3dadd( 402.984, 407.015, 50.0405, 0.2542 ) }
    dend_26 { pt3dadd( 403.076, 405.876, 50.0405, 0.2288 ) }
    dend_26 { pt3dadd( 403.109, 404.732, 50.0405, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 384.733, 496.049, 46.7407, 0.486 ) }
    dend_25 { pt3dadd( 385.331, 495.949, 46.6894, 0.2288 ) }
    dend_25 { pt3dadd( 386.436, 495.687, 46.4288, 0.2746 ) }
    dend_25 { pt3dadd( 387.478, 495.238, 46.3142, 0.2746 ) }
    dend_25 { pt3dadd( 388.393, 494.568, 46.1723, 0.2746 ) }
    dend_25 { pt3dadd( 389.271, 493.891, 45.9648, 0.2746 ) }
    dend_25 { pt3dadd( 390.258, 493.61, 45.6652, 0.2746 ) }
    dend_25 { pt3dadd( 391.338, 493.286, 45.4154, 0.2746 ) }
    dend_25 { pt3dadd( 392.387, 493.05, 45.3575, 0.2746 ) }
    dend_25 { pt3dadd( 393.03, 492.294, 45.5087, 0.2746 ) }
    dend_25 { pt3dadd( 393.537, 491.291, 45.7114, 0.2746 ) }
    dend_25 { pt3dadd( 394.176, 490.405, 45.8116, 0.2746 ) }
    dend_25 { pt3dadd( 395.127, 489.933, 45.7878, 0.2746 ) }
    dend_25 { pt3dadd( 396.223, 489.641, 45.7464, 0.2746 ) }
    dend_25 { pt3dadd( 397.337, 489.379, 45.6851, 0.2746 ) }
    dend_25 { pt3dadd( 398.451, 489.116, 45.6268, 0.2746 ) }
    dend_25 { pt3dadd( 399.535, 488.759, 45.6016, 0.2746 ) }
    dend_25 { pt3dadd( 400.608, 488.362, 45.6196, 0.2746 ) }
    dend_25 { pt3dadd( 401.718, 488.139, 45.668, 0.2746 ) }
    dend_25 { pt3dadd( 401.219, 488.39, 45.7388, 0.2746 ) }
    dend_25 { pt3dadd( 402.084, 487.645, 45.8494, 0.2746 ) }
    dend_25 { pt3dadd( 402.949, 486.9, 45.9922, 0.2746 ) }
    dend_25 { pt3dadd( 403.814, 486.155, 46.1594, 0.2746 ) }
    dend_25 { pt3dadd( 404.677, 485.409, 46.3439, 0.2746 ) }
    dend_25 { pt3dadd( 405.542, 484.665, 46.5396, 0.2746 ) }
    dend_25 { pt3dadd( 406.407, 483.92, 46.7412, 0.2746 ) }
    dend_25 { pt3dadd( 407.272, 483.175, 46.9462, 0.2746 ) }
    dend_25 { pt3dadd( 408.136, 482.431, 47.1548, 0.2746 ) }
    dend_25 { pt3dadd( 409.001, 481.686, 47.3698, 0.2746 ) }
    dend_25 { pt3dadd( 409.866, 480.94, 47.5944, 0.2746 ) }
    dend_25 { pt3dadd( 410.73, 480.195, 47.8313, 0.2746 ) }
    dend_25 { pt3dadd( 411.594, 479.45, 48.0805, 0.2746 ) }
    dend_25 { pt3dadd( 412.459, 478.706, 48.3409, 0.2746 ) }
    dend_25 { pt3dadd( 413.486, 478.384, 48.6685, 0.2746 ) }
    dend_25 { pt3dadd( 414.575, 478.224, 49.0641, 0.2748 ) }
    dend_25 { pt3dadd( 415.37, 477.544, 49.4497, 0.2748 ) }
    dend_25 { pt3dadd( 416.024, 476.61, 49.7834, 0.2752 ) }
    dend_25 { pt3dadd( 416.681, 475.674, 50.041, 0.2758 ) }
    dend_25 { pt3dadd( 417.372, 474.773, 50.2505, 0.2766 ) }
    dend_25 { pt3dadd( 418.179, 473.996, 50.479, 0.2784 ) }
    dend_25 { pt3dadd( 418.922, 473.149, 50.6864, 0.2818 ) }
    dend_25 { pt3dadd( 419.592, 472.223, 50.8421, 0.288 ) }
    dend_25 { pt3dadd( 420.127, 471.225, 50.9393, 0.3006 ) }
    dend_25 { pt3dadd( 420.517, 470.152, 50.969, 0.3176 ) }
    dend_25 { pt3dadd( 420.985, 469.118, 50.9695, 0.3798 ) }
    dend_25 { pt3dadd( 421.571, 468.14, 50.9872, 0.3458 ) }
    dend_25 { pt3dadd( 422.454, 467.437, 51.0012, 0.3222 ) }
    dend_25 { pt3dadd( 423.337, 466.839, 50.9404, 0.3156 ) }
    dend_25 { pt3dadd( 423.683, 465.801, 50.8298, 0.3508 ) }
    dend_25 { pt3dadd( 424.408, 465.081, 50.8743, 0.415 ) }
    dend_25 { pt3dadd( 425.291, 464.361, 50.965, 0.5396 ) }
    dend_25 { pt3dadd( 426.149, 463.615, 51.0877, 0.7438 ) }
    dend_25 { pt3dadd( 426.749, 462.642, 51.2126, 0.5652 ) }
    dend_25 { pt3dadd( 427.337, 461.662, 51.3414, 0.4228 ) }
    dend_25 { pt3dadd( 427.718, 460.594, 51.5127, 0.3862 ) }
    dend_25 { pt3dadd( 428.113, 459.534, 51.6978, 0.3588 ) }
    dend_25 { pt3dadd( 428.786, 458.609, 51.8543, 0.341 ) }
    dend_25 { pt3dadd( 429.468, 457.717, 51.9621, 0.376 ) }
    dend_25 { pt3dadd( 430.372, 457.146, 52.0106, 0.3384 ) }
    dend_25 { pt3dadd( 431.46, 457.018, 52.1732, 0.3082 ) }
    dend_25 { pt3dadd( 432.521, 457.315, 52.4485, 0.2898 ) }
    dend_25 { pt3dadd( 433.632, 457.482, 52.7612, 0.3024 ) }
    dend_25 { pt3dadd( 434.572, 458.081, 53.1779, 0.3276 ) }
    dend_25 { pt3dadd( 435.448, 458.726, 53.6788, 0.3672 ) }
    dend_25 { pt3dadd( 436.155, 459.493, 54.2679, 0.4746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( 436.978, 460.168, 54.8316, 0.5084 ) }
    dend_25 { pt3dadd( 437.796, 460.954, 55.6004, 0.6864 ) }
    // Section: apic_20, id: apic_20, parent: apic_18 (entry count 2/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 329.193, 470.344, 36.783, 0.6266 ) }
    apic_20 { pt3dadd( 329.562, 469.634, 36.7741, 0.4634 ) }
    apic_20 { pt3dadd( 329.436, 468.58, 36.8648, 0.361 ) }
    apic_20 { pt3dadd( 329.271, 467.458, 36.9477, 0.3402 ) }
    apic_20 { pt3dadd( 329.267, 466.32, 36.9592, 0.399 ) }
    apic_20 { pt3dadd( 329.411, 465.223, 36.8483, 0.4928 ) }
    apic_20 { pt3dadd( 329.665, 464.114, 36.738, 0.7398 ) }
    apic_20 { pt3dadd( 329.757, 462.977, 36.6419, 0.8436 ) }
    apic_20 { pt3dadd( 329.978, 461.856, 36.5674, 0.6948 ) }
    apic_20 { pt3dadd( 329.749, 460.751, 36.5302, 0.7018 ) }
    apic_20 { pt3dadd( 329.316, 459.692, 36.5305, 0.7176 ) }
    apic_20 { pt3dadd( 329.244, 458.561, 36.5739, 0.7302 ) }
    apic_20 { pt3dadd( 329.228, 457.458, 36.7007, 0.6066 ) }
    apic_20 { pt3dadd( 329.148, 456.321, 36.7842, 0.6334 ) }
    apic_20 { pt3dadd( 328.831, 455.226, 36.7856, 0.8132 ) }
    apic_20 { pt3dadd( 328.621, 454.144, 36.6324, 0.7438 ) }
    apic_20 { pt3dadd( 328.446, 453.064, 36.358, 0.5112 ) }
    apic_20 { pt3dadd( 328.714, 451.977, 36.0534, 0.3564 ) }
    apic_20 { pt3dadd( 328.69, 450.837, 35.8207, 0.3268 ) }
    apic_20 { pt3dadd( 328.439, 449.721, 35.681, 0.397 ) }
    apic_20 { pt3dadd( 328.336, 448.591, 35.637, 0.3782 ) }
    apic_20 { pt3dadd( 328.377, 447.469, 35.7258, 0.378 ) }
    apic_20 { pt3dadd( 328.578, 446.367, 35.898, 0.439 ) }
    apic_20 { pt3dadd( 328.708, 445.241, 36.0576, 0.4832 ) }
    apic_20 { pt3dadd( 328.533, 444.121, 36.167, 0.4424 ) }
    apic_20 { pt3dadd( 328.352, 442.997, 36.2261, 0.5054 ) }
    apic_20 { pt3dadd( 328.257, 441.856, 36.2382, 0.4074 ) }
    apic_20 { pt3dadd( 327.98, 440.757, 36.2082, 0.3528 ) }
    apic_20 { pt3dadd( 327.494, 439.726, 36.1435, 0.32 ) }
    apic_20 { pt3dadd( 326.741, 438.943, 35.9979, 0.3846 ) }
    apic_20 { pt3dadd( 325.892, 438.205, 35.8369, 0.3544 ) }
    apic_20 { pt3dadd( 325.293, 437.254, 35.7232, 0.3388 ) }
    apic_20 { pt3dadd( 325.07, 436.152, 35.688, 0.3422 ) }
    apic_20 { pt3dadd( 324.715, 435.113, 35.7683, 0.4204 ) }
    apic_20 { pt3dadd( 324.235, 434.09, 35.8669, 0.4464 ) }
    apic_20 { pt3dadd( 323.908, 433.001, 35.922, 0.3844 ) }
    apic_20 { pt3dadd( 324.065, 431.923, 35.8691, 0.3484 ) }
    apic_20 { pt3dadd( 324.51, 430.89, 35.8204, 0.354 ) }
    apic_20 { pt3dadd( 324.66, 429.781, 35.7342, 0.473 ) }
    apic_20 { pt3dadd( 324.683, 428.643, 35.6191, 0.3944 ) }
    apic_20 { pt3dadd( 324.777, 427.505, 35.5384, 0.3278 ) }
    apic_20 { pt3dadd( 325.216, 426.463, 35.5076, 0.2792 ) }
    apic_20 { pt3dadd( 325.673, 425.415, 35.527, 0.2832 ) }
    apic_20 { pt3dadd( 326.216, 424.409, 35.5866, 0.2904 ) }
    apic_20 { pt3dadd( 326.51, 423.313, 35.6905, 0.305 ) }
    apic_20 { pt3dadd( 326.801, 422.207, 35.8344, 0.3256 ) }
    apic_20 { pt3dadd( 327.192, 421.167, 36.0606, 0.395 ) }
    apic_20 { pt3dadd( 327.491, 420.199, 36.4538, 0.3732 ) }
    apic_20 { pt3dadd( 327.739, 419.212, 36.923, 0.3748 ) }
    apic_20 { pt3dadd( 327.896, 418.145, 37.2078, 0.4036 ) }
    apic_20 { pt3dadd( 327.614, 417.144, 37.24, 0.5606 ) }
    apic_20 { pt3dadd( 327.242, 416.084, 37.2075, 0.5782 ) }
    apic_20 { pt3dadd( 327.224, 414.997, 37.2271, 0.5646 ) }
    apic_20 { pt3dadd( 327.719, 413.988, 37.2686, 0.5364 ) }
    apic_20 { pt3dadd( 328.315, 413.015, 37.2957, 0.498 ) }
    apic_20 { pt3dadd( 328.631, 411.923, 37.3352, 0.5864 ) }
    apic_20 { pt3dadd( 328.454, 410.829, 37.3755, 0.6644 ) }
    apic_20 { pt3dadd( 328.087, 409.756, 37.3615, 0.9968 ) }
    apic_20 { pt3dadd( 328.185, 408.678, 37.2758, 1.1584 ) }
    apic_20 { pt3dadd( 328.353, 407.557, 37.2232, 1.1486 ) }
    apic_20 { pt3dadd( 328.553, 406.447, 37.2921, 1.0308 ) }
    apic_20 { pt3dadd( 328.471, 405.362, 37.5026, 1.0676 ) }
    apic_20 { pt3dadd( 328.612, 404.29, 37.8244, 1.0414 ) }
    apic_20 { pt3dadd( 329.35, 403.478, 38.1332, 0.764 ) }
    apic_20 { pt3dadd( 330.186, 402.698, 38.3821, 0.6742 ) }
    apic_20 { pt3dadd( 330.879, 401.792, 38.561, 0.7342 ) }
    apic_20 { pt3dadd( 331.312, 400.741, 38.6758, 0.892 ) }
    apic_20 { pt3dadd( 331.645, 399.647, 38.7436, 0.7276 ) }
    apic_20 { pt3dadd( 331.92, 398.538, 38.7884, 0.5834 ) }
    apic_20 { pt3dadd( 331.94, 397.4, 38.8436, 0.4518 ) }
    apic_20 { pt3dadd( 331.693, 396.318, 38.9743, 0.4634 ) }
    apic_20 { pt3dadd( 331.078, 395.374, 39.104, 0.617 ) }
    apic_20 { pt3dadd( 330.6, 394.355, 39.1348, 0.716 ) }
    apic_20 { pt3dadd( 330.298, 393.257, 39.1132, 0.6614 ) }
    apic_20 { pt3dadd( 330.482, 392.15, 39.0284, 0.7978 ) }
    apic_20 { pt3dadd( 330.589, 391.012, 38.9379, 0.8136 ) }
    apic_20 { pt3dadd( 330.476, 389.878, 38.8772, 0.8506 ) }
    apic_20 { pt3dadd( 330.417, 388.766, 38.9231, 0.6516 ) }
    apic_20 { pt3dadd( 330.581, 387.649, 38.9015, 0.6676 ) }
    apic_20 { pt3dadd( 330.376, 386.535, 38.8315, 0.6594 ) }
    apic_20 { pt3dadd( 329.989, 385.458, 38.7775, 0.5986 ) }
    apic_20 { pt3dadd( 329.388, 384.485, 38.7296, 0.4772 ) }
    apic_20 { pt3dadd( 328.884, 383.458, 38.6862, 0.5238 ) }
    apic_20 { pt3dadd( 328.551, 382.365, 38.6604, 0.436 ) }
    apic_20 { pt3dadd( 328.29, 381.253, 38.6714, 0.4306 ) }
    apic_20 { pt3dadd( 328.08, 380.136, 38.6392, 0.3458 ) }
    apic_20 { pt3dadd( 327.632, 379.085, 38.5955, 0.322 ) }
    apic_20 { pt3dadd( 327.413, 377.982, 38.4944, 0.3162 ) }
    apic_20 { pt3dadd( 327.413, 376.846, 38.4698, 0.3464 ) }
    apic_20 { pt3dadd( 327.416, 375.707, 38.4891, 0.4338 ) }
    apic_20 { pt3dadd( 327.438, 374.564, 38.5067, 0.443 ) }
    apic_20 { pt3dadd( 327.568, 373.428, 38.5241, 0.5168 ) }
    apic_20 { pt3dadd( 327.931, 372.343, 38.5314, 0.6056 ) }
    apic_20 { pt3dadd( 328.384, 371.298, 38.523, 0.5466 ) }
    apic_20 { pt3dadd( 329.167, 370.482, 38.4846, 0.6084 ) }
    apic_20 { pt3dadd( 329.427, 369.398, 38.4238, 0.5782 ) }
    apic_20 { pt3dadd( 329.026, 368.337, 38.3429, 0.5372 ) }
    apic_20 { pt3dadd( 329.049, 367.206, 38.2236, 0.6182 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_20 { pt3dadd( 329.409, 366.142, 38.0279, 0.6932 ) }
    apic_20 { pt3dadd( 329.824, 365.096, 37.7905, 0.5098 ) }
    apic_20 { pt3dadd( 330.322, 364.073, 37.5721, 0.3626 ) }
    apic_20 { pt3dadd( 330.839, 363.093, 37.3237, 0.2962 ) }
    apic_20 { pt3dadd( 331.094, 362.045, 37.1521, 0.315 ) }
    apic_20 { pt3dadd( 330.84, 361.08, 37.2154, 0.349 ) }
    apic_20 { pt3dadd( 330.483, 359.995, 37.3016, 0.416 ) }
    apic_20 { pt3dadd( 330.244, 358.877, 37.3948, 0.5192 ) }
    apic_20 { pt3dadd( 330.047, 357.752, 37.4875, 0.8142 ) }
    apic_20 { pt3dadd( 329.734, 356.656, 37.5892, 0.8568 ) }
    apic_20 { pt3dadd( 329.498, 355.547, 37.6239, 0.639 ) }
    apic_20 { pt3dadd( 329.586, 354.408, 37.6048, 0.5326 ) }
    apic_20 { pt3dadd( 329.652, 353.28, 37.6107, 0.4916 ) }
    apic_20 { pt3dadd( 329.466, 352.191, 37.6634, 0.574 ) }
    apic_20 { pt3dadd( 329.066, 351.135, 37.6121, 0.8724 ) }
    apic_20 { pt3dadd( 328.648, 350.134, 37.3929, 0.948 ) }
    apic_20 { pt3dadd( 328.373, 349.056, 37.0994, 0.8902 ) }
    apic_20 { pt3dadd( 328.295, 347.928, 36.7875, 0.597 ) }
    apic_20 { pt3dadd( 328.171, 346.8, 36.4949, 0.5022 ) }
    apic_20 { pt3dadd( 328.024, 345.707, 36.2054, 0.4342 ) }
    apic_20 { pt3dadd( 328.298, 344.74, 36.1004, 0.4714 ) }
    apic_20 { pt3dadd( 328.155, 343.626, 36.0458, 0.664 ) }
    apic_20 { pt3dadd( 327.511, 342.694, 35.966, 0.6472 ) }
    apic_20 { pt3dadd( 326.88, 341.776, 35.8112, 0.6028 ) }
    apic_20 { pt3dadd( 326.182, 340.607, 35.7711, 0.5844 ) }
    apic_20 { pt3dadd( 325.465, 339.743, 35.663, 0.4704 ) }
    apic_20 { pt3dadd( 324.782, 338.856, 35.5807, 0.4172 ) }
    apic_20 { pt3dadd( 324.437, 337.813, 35.5239, 0.4654 ) }
    apic_20 { pt3dadd( 324.065, 336.782, 35.3942, 0.5266 ) }
    apic_20 { pt3dadd( 323.437, 335.838, 35.3147, 0.5484 ) }
    apic_20 { pt3dadd( 322.94, 334.882, 35.2058, 0.5778 ) }
    apic_20 { pt3dadd( 322.728, 333.823, 34.974, 0.4566 ) }
    apic_20 { pt3dadd( 322.523, 332.732, 34.7026, 0.3984 ) }
    apic_20 { pt3dadd( 322.424, 331.609, 34.5106, 0.3988 ) }
    apic_20 { pt3dadd( 322.597, 330.487, 34.4126, 0.558 ) }
    apic_20 { pt3dadd( 322.761, 329.366, 34.3717, 0.542 ) }
    apic_20 { pt3dadd( 322.629, 328.276, 34.4554, 0.6504 ) }
    apic_20 { pt3dadd( 322.45, 327.183, 34.6088, 0.639 ) }
    apic_20 { pt3dadd( 322.506, 326.049, 34.7122, 0.7336 ) }
    apic_20 { pt3dadd( 322.835, 324.962, 34.7368, 0.5766 ) }
    apic_20 { pt3dadd( 323.146, 323.886, 34.6436, 0.5254 ) }
    apic_20 { pt3dadd( 323.054, 322.791, 34.4498, 0.6392 ) }
    apic_20 { pt3dadd( 322.736, 321.698, 34.2073, 0.7514 ) }
    apic_20 { pt3dadd( 322.443, 320.607, 33.9461, 0.7532 ) }
    apic_20 { pt3dadd( 322.313, 319.508, 33.6473, 0.8424 ) }
    apic_20 { pt3dadd( 322.094, 318.388, 33.4222, 0.8196 ) }
    apic_20 { pt3dadd( 321.761, 317.293, 33.2819, 0.7766 ) }
    apic_20 { pt3dadd( 321.539, 316.187, 33.1884, 0.6998 ) }
    apic_20 { pt3dadd( 321.758, 315.115, 33.1176, 0.5416 ) }
    apic_20 { pt3dadd( 322.438, 314.259, 33.203, 0.5566 ) }
    apic_20 { pt3dadd( 323.058, 313.418, 33.4188, 0.4576 ) }
    apic_20 { pt3dadd( 323.288, 312.357, 33.5507, 0.4338 ) }
    apic_20 { pt3dadd( 323.251, 311.297, 33.4715, 0.529 ) }
    apic_20 { pt3dadd( 323.042, 310.237, 33.3164, 0.4876 ) }
    apic_20 { pt3dadd( 322.513, 309.236, 33.2147, 0.5514 ) }
    apic_20 { pt3dadd( 322.055, 308.224, 33.1268, 0.4468 ) }
    apic_20 { pt3dadd( 322.087, 307.1, 33.0599, 0.419 ) }
    apic_20 { pt3dadd( 322.401, 305.999, 33.0336, 0.4766 ) }
    apic_20 { pt3dadd( 322.8, 304.93, 33.0394, 0.5114 ) }
    apic_20 { pt3dadd( 323.175, 303.856, 33.0604, 0.695 ) }
    apic_20 { pt3dadd( 323.398, 302.745, 33.1092, 0.6874 ) }
    apic_20 { pt3dadd( 323.601, 301.669, 33.0954, 0.5332 ) }
    apic_20 { pt3dadd( 323.71, 300.586, 32.97, 0.4684 ) }
    apic_20 { pt3dadd( 323.543, 299.467, 32.8754, 0.419 ) }
    apic_20 { pt3dadd( 323.347, 298.348, 32.8084, 0.4418 ) }
    apic_20 { pt3dadd( 323.296, 297.217, 32.7032, 0.6138 ) }
    apic_20 { pt3dadd( 323.3, 296.134, 32.4999, 0.5322 ) }
    apic_20 { pt3dadd( 323.331, 295.057, 32.349, 0.4968 ) }
    apic_20 { pt3dadd( 323.505, 293.984, 32.3739, 0.5536 ) }
    apic_20 { pt3dadd( 323.699, 292.886, 32.4503, 0.749 ) }
    apic_20 { pt3dadd( 323.774, 291.745, 32.4988, 0.6778 ) }
    apic_20 { pt3dadd( 323.91, 290.613, 32.5091, 0.818 ) }
    apic_20 { pt3dadd( 324.154, 289.496, 32.4593, 0.6716 ) }
    apic_20 { pt3dadd( 324.365, 288.41, 32.2627, 0.5424 ) }
    apic_20 { pt3dadd( 324.116, 287.364, 31.9757, 0.5274 ) }
    apic_20 { pt3dadd( 323.624, 286.334, 31.6708, 0.5534 ) }
    apic_20 { pt3dadd( 323.635, 285.276, 31.3037, 0.7986 ) }
    apic_20 { pt3dadd( 324.06, 284.237, 30.9618, 0.7562 ) }
    apic_20 { pt3dadd( 324.359, 283.149, 30.6482, 0.5706 ) }
    apic_20 { pt3dadd( 324.509, 282.019, 30.3192, 0.5168 ) }
    apic_20 { pt3dadd( 324.35, 280.965, 29.8413, 0.3814 ) }
    apic_20 { pt3dadd( 324.342, 280.323, 29.0632, 0.305 ) }
    apic_20 { pt3dadd( 323.877, 279.501, 28.2106, 0.2288 ) }
    apic_20 { pt3dadd( 324.101, 278.51, 26.2741, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 84/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 329.193, 470.344, 36.783, 0.6266 ) }
    apic_19 { pt3dadd( 328.061, 469.534, 35.705, 0.2288 ) }
    apic_19 { pt3dadd( 327.033, 469.335, 35.114, 0.5198 ) }
    apic_19 { pt3dadd( 325.94, 469.065, 34.8558, 0.477 ) }
    apic_19 { pt3dadd( 324.826, 468.928, 34.7172, 0.502 ) }
    apic_19 { pt3dadd( 323.693, 468.864, 34.6506, 0.4984 ) }
    apic_19 { pt3dadd( 322.635, 468.543, 34.5013, 0.5068 ) }
    apic_19 { pt3dadd( 321.804, 467.778, 34.3512, 0.4484 ) }
    apic_19 { pt3dadd( 321.194, 466.813, 34.2409, 0.469 ) }
    apic_19 { pt3dadd( 320.639, 465.812, 34.1435, 0.5708 ) }
    apic_19 { pt3dadd( 319.936, 464.91, 34.048, 0.9072 ) }
    apic_19 { pt3dadd( 318.937, 464.361, 33.9601, 1.0426 ) }
    apic_19 { pt3dadd( 317.913, 463.899, 33.8341, 0.9178 ) }
    apic_19 { pt3dadd( 316.872, 463.468, 33.6862, 0.6822 ) }
    apic_19 { pt3dadd( 315.839, 462.977, 33.6045, 0.7214 ) }
    apic_19 { pt3dadd( 314.726, 462.717, 33.5952, 0.7742 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_19 { pt3dadd( 313.654, 462.42, 33.719, 0.9662 ) }
    apic_19 { pt3dadd( 312.624, 461.972, 33.9234, 1.0942 ) }
    apic_19 { pt3dadd( 311.683, 461.374, 34.1877, 1.0666 ) }
    apic_19 { pt3dadd( 310.753, 460.725, 34.4019, 0.9276 ) }
    apic_19 { pt3dadd( 310.19, 459.787, 34.421, 0.8678 ) }
    apic_19 { pt3dadd( 309.3, 459.175, 34.2888, 0.7116 ) }
    apic_19 { pt3dadd( 308.321, 458.665, 34.258, 0.643 ) }
    apic_19 { pt3dadd( 307.257, 458.33, 34.2762, 0.5858 ) }
    apic_19 { pt3dadd( 306.164, 458.078, 34.1981, 0.825 ) }
    apic_19 { pt3dadd( 305.034, 457.958, 34.1079, 0.7382 ) }
    apic_19 { pt3dadd( 303.904, 458.039, 34.011, 0.8646 ) }
    apic_19 { pt3dadd( 302.787, 458.222, 33.9413, 0.8454 ) }
    apic_19 { pt3dadd( 301.665, 458.118, 33.9343, 0.8982 ) }
    apic_19 { pt3dadd( 300.543, 458.018, 33.9511, 0.795 ) }
    apic_19 { pt3dadd( 299.443, 458.059, 34.0281, 0.6648 ) }
    apic_19 { pt3dadd( 298.432, 457.548, 34.0726, 0.586 ) }
    apic_19 { pt3dadd( 297.621, 457.22, 33.9514, 0.5652 ) }
    apic_19 { pt3dadd( 296.768, 456.599, 33.9307, 0.6036 ) }
    apic_19 { pt3dadd( 295.978, 456.2, 34.1564, 0.5302 ) }
    apic_19 { pt3dadd( 295.147, 455.662, 34.3221, 0.4094 ) }
    apic_19 { pt3dadd( 294.213, 455.491, 34.2028, 0.3402 ) }
    apic_19 { pt3dadd( 293.195, 455.177, 33.9559, 0.3748 ) }
    apic_19 { pt3dadd( 292.211, 455.508, 33.8621, 0.3362 ) }
    apic_19 { pt3dadd( 291.098, 455.752, 33.7173, 0.3044 ) }
    apic_19 { pt3dadd( 289.979, 455.975, 33.5283, 0.2826 ) }
    apic_19 { pt3dadd( 288.87, 456.198, 33.3166, 0.2892 ) }
    apic_19 { pt3dadd( 287.77, 456.417, 33.08, 0.303 ) }
    apic_19 { pt3dadd( 286.672, 456.383, 32.8222, 0.3216 ) }
    apic_19 { pt3dadd( 285.576, 456.09, 32.5584, 0.3876 ) }
    apic_19 { pt3dadd( 284.515, 455.696, 32.3467, 0.3602 ) }
    apic_19 { pt3dadd( 283.507, 455.155, 32.2213, 0.3494 ) }
    apic_19 { pt3dadd( 282.533, 454.578, 32.2008, 0.3632 ) }
    apic_19 { pt3dadd( 281.62, 453.93, 32.3156, 0.454 ) }
    apic_19 { pt3dadd( 280.699, 453.289, 32.4234, 0.5342 ) }
    apic_19 { pt3dadd( 279.771, 452.651, 32.4562, 0.4236 ) }
    apic_19 { pt3dadd( 278.821, 452.055, 32.5595, 0.3342 ) }
    apic_19 { pt3dadd( 277.879, 451.452, 32.7264, 0.291 ) }
    apic_19 { pt3dadd( 277.192, 450.537, 32.8574, 0.3052 ) }
    apic_19 { pt3dadd( 276.492, 449.638, 32.9627, 0.3318 ) }
    apic_19 { pt3dadd( 275.468, 449.126, 33.0632, 0.3778 ) }
    apic_19 { pt3dadd( 274.558, 448.495, 33.1649, 0.4808 ) }
    apic_19 { pt3dadd( 273.75, 447.73, 33.259, 0.5844 ) }
    apic_19 { pt3dadd( 272.788, 447.109, 33.3516, 0.5134 ) }
    apic_19 { pt3dadd( 271.795, 446.565, 33.514, 0.5158 ) }
    apic_19 { pt3dadd( 270.803, 446.023, 33.7288, 0.5558 ) }
    apic_19 { pt3dadd( 269.92, 445.374, 34.0259, 0.4582 ) }
    apic_19 { pt3dadd( 269.099, 444.642, 34.3291, 0.4244 ) }
    apic_19 { pt3dadd( 268.417, 443.724, 34.5358, 0.334 ) }
    apic_19 { pt3dadd( 267.745, 442.809, 34.624, 0.3002 ) }
    apic_19 { pt3dadd( 267.091, 441.899, 34.5615, 0.275 ) }
    apic_19 { pt3dadd( 266.34, 441.056, 34.4406, 0.2752 ) }
    apic_19 { pt3dadd( 265.518, 440.259, 34.3221, 0.2758 ) }
    apic_19 { pt3dadd( 264.594, 439.599, 34.2283, 0.2768 ) }
    apic_19 { pt3dadd( 263.603, 439.029, 34.1712, 0.2786 ) }
    apic_19 { pt3dadd( 262.611, 438.459, 34.148, 0.2824 ) }
    apic_19 { pt3dadd( 261.619, 437.889, 34.1505, 0.2888 ) }
    apic_19 { pt3dadd( 260.567, 437.471, 34.1631, 0.3018 ) }
    apic_19 { pt3dadd( 259.453, 437.209, 34.1804, 0.3198 ) }
    apic_19 { pt3dadd( 258.363, 436.89, 34.2059, 0.384 ) }
    apic_19 { pt3dadd( 257.389, 436.291, 34.2426, 0.3532 ) }
    apic_19 { pt3dadd( 256.398, 435.729, 34.291, 0.3366 ) }
    apic_19 { pt3dadd( 255.292, 435.442, 34.3498, 0.3382 ) }
    apic_19 { pt3dadd( 254.173, 435.273, 34.4305, 0.413 ) }
    apic_19 { pt3dadd( 253.251, 434.71, 34.6346, 0.4326 ) }
    apic_19 { pt3dadd( 252.702, 433.771, 34.8312, 0.3592 ) }
    apic_19 { pt3dadd( 252.066, 432.83, 34.9488, 0.3 ) }
    apic_19 { pt3dadd( 251.338, 431.96, 35.0235, 0.2746 ) }
    apic_19 { pt3dadd( 250.505, 431.179, 35.1005, 0.2746 ) }
    apic_19 { pt3dadd( 249.602, 430.488, 35.1588, 0.2746 ) }
    apic_19 { pt3dadd( 248.628, 429.889, 35.1837, 0.2746 ) }
    apic_19 { pt3dadd( 247.618, 429.36, 35.1988, 0.2746 ) }
    apic_19 { pt3dadd( 246.818, 428.624, 35.2092, 0.2746 ) }
    apic_19 { pt3dadd( 246.284, 427.613, 35.208, 0.2746 ) }
    apic_19 { pt3dadd( 246.013, 426.511, 35.1932, 0.2746 ) }
    apic_19 { pt3dadd( 245.412, 425.71, 35.1669, 0.2746 ) }
    apic_19 { pt3dadd( 244.725, 424.795, 35.1302, 0.2746 ) }
    apic_19 { pt3dadd( 244.108, 423.833, 35.0829, 0.2748 ) }
    apic_19 { pt3dadd( 243.213, 423.161, 35.0269, 0.275 ) }
    apic_19 { pt3dadd( 242.094, 423.102, 34.9216, 0.2752 ) }
    apic_19 { pt3dadd( 240.994, 423.057, 34.7276, 0.276 ) }
    apic_19 { pt3dadd( 240.003, 422.522, 34.5708, 0.277 ) }
    apic_19 { pt3dadd( 239.168, 421.777, 34.4652, 0.2792 ) }
    apic_19 { pt3dadd( 238.356, 421.016, 34.4327, 0.283 ) }
    apic_19 { pt3dadd( 237.375, 420.484, 34.524, 0.2902 ) }
    apic_19 { pt3dadd( 236.408, 419.926, 34.6242, 0.3046 ) }
    apic_19 { pt3dadd( 235.455, 419.337, 34.627, 0.3248 ) }
    apic_19 { pt3dadd( 234.426, 418.905, 34.6371, 0.393 ) }
    apic_19 { pt3dadd( 233.358, 418.559, 34.6956, 0.3714 ) }
    apic_19 { pt3dadd( 232.351, 418.036, 34.7197, 0.3652 ) }
    apic_19 { pt3dadd( 231.543, 417.234, 34.6895, 0.4158 ) }
    apic_19 { pt3dadd( 230.604, 416.727, 34.5254, 0.438 ) }
    apic_19 { pt3dadd( 229.545, 416.691, 34.2535, 0.369 ) }
    apic_19 { pt3dadd( 228.404, 416.691, 34.0222, 0.3178 ) }
    apic_19 { pt3dadd( 227.26, 416.691, 33.8097, 0.3086 ) }
    apic_19 { pt3dadd( 226.144, 416.463, 33.607, 0.3326 ) }
    apic_19 { pt3dadd( 225.163, 415.955, 33.3712, 0.4072 ) }
    apic_19 { pt3dadd( 224.47, 415.152, 33.0187, 0.3988 ) }
    apic_19 { pt3dadd( 223.837, 414.248, 32.5886, 0.4096 ) }
    apic_19 { pt3dadd( 223.058, 413.423, 32.1866, 0.5308 ) }
    apic_19 { pt3dadd( 222.284, 412.588, 31.8111, 0.4912 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_19 { pt3dadd( 221.579, 411.694, 31.4216, 0.5576 ) }
    apic_19 { pt3dadd( 221.051, 410.718, 31.0069, 0.4594 ) }
    apic_19 { pt3dadd( 220.743, 409.641, 30.5483, 0.4372 ) }
    apic_19 { pt3dadd( 220.354, 408.836, 29.9373, 0.5354 ) }
    apic_19 { pt3dadd( 219.784, 408.025, 29.2538, 0.4992 ) }
    apic_19 { pt3dadd( 219.03, 407.289, 28.6129, 0.5754 ) }
    apic_19 { pt3dadd( 219.015, 406.246, 28.1912, 0.4796 ) }
    apic_19 { pt3dadd( 218.889, 405.264, 27.7267, 0.5366 ) }
    apic_19 { pt3dadd( 218.178, 404.382, 27.3364, 0.419 ) }
    apic_19 { pt3dadd( 217.335, 403.735, 27.1342, 0.368 ) }
    apic_19 { pt3dadd( 217.066, 402.699, 27.0217, 0.3788 ) }
    apic_19 { pt3dadd( 216.88, 401.93, 26.5054, 0.3442 ) }
    apic_19 { pt3dadd( 216.707, 401.218, 25.7152, 0.3188 ) }
    apic_19 { pt3dadd( 216.106, 400.363, 25.0107, 0.3104 ) }
    apic_19 { pt3dadd( 215.391, 399.47, 24.4454, 0.3358 ) }
    apic_19 { pt3dadd( 214.907, 398.443, 24.0055, 0.4146 ) }
    apic_19 { pt3dadd( 214.482, 397.38, 23.7012, 0.4058 ) }
    apic_19 { pt3dadd( 213.904, 396.426, 23.4758, 0.454 ) }
    apic_19 { pt3dadd( 213.24, 395.532, 23.2448, 0.4604 ) }
    apic_19 { pt3dadd( 212.71, 394.524, 23.0597, 0.4152 ) }
    apic_19 { pt3dadd( 212.198, 393.502, 22.9205, 0.3814 ) }
    apic_19 { pt3dadd( 211.686, 392.478, 22.8242, 0.5338 ) }
    apic_19 { pt3dadd( 211.174, 391.455, 22.7458, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 23/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 350.399, 487.055, 58.7076, 0.2782 ) }
    apic_16 { pt3dadd( 350.705, 487.177, 58.9366, 0.2814 ) }
    apic_16 { pt3dadd( 351.766, 487.601, 59.1133, 0.287 ) }
    apic_16 { pt3dadd( 352.838, 487.954, 59.2637, 0.2988 ) }
    apic_16 { pt3dadd( 353.974, 487.82, 59.3944, 0.3142 ) }
    apic_16 { pt3dadd( 355.11, 487.686, 59.5115, 0.3734 ) }
    apic_16 { pt3dadd( 356.239, 487.665, 59.687, 0.3338 ) }
    apic_16 { pt3dadd( 357.367, 487.665, 59.9354, 0.3 ) }
    apic_16 { pt3dadd( 358.502, 487.69, 60.2123, 0.2746 ) }
    apic_16 { pt3dadd( 359.644, 487.747, 60.4752, 0.2746 ) }
    apic_16 { pt3dadd( 360.787, 487.804, 60.7314, 0.2746 ) }
    apic_16 { pt3dadd( 361.874, 488.101, 61.0302, 0.2746 ) }
    apic_16 { pt3dadd( 362.941, 488.482, 61.3858, 0.2746 ) }
    apic_16 { pt3dadd( 364.032, 488.582, 61.8411, 0.2746 ) }
    apic_16 { pt3dadd( 365.05, 488.886, 62.4187, 0.2746 ) }
    apic_16 { pt3dadd( 365.816, 489.29, 62.9213, 0.2746 ) }
    apic_16 { pt3dadd( 366.429, 489.978, 63.5012, 0.2746 ) }
    apic_16 { pt3dadd( 366.146, 490.381, 64.3549, 0.2746 ) }
    apic_16 { pt3dadd( 367.159, 490.914, 65.063, 0.2746 ) }
    apic_16 { pt3dadd( 368.17, 491.448, 65.6681, 0.2746 ) }
    apic_16 { pt3dadd( 369.181, 491.981, 66.2203, 0.2746 ) }
    apic_16 { pt3dadd( 370.124, 492.508, 66.8632, 0.2746 ) }
    apic_16 { pt3dadd( 370.709, 492.992, 67.6724, 0.2746 ) }
    apic_16 { pt3dadd( 371.596, 493.335, 68.6515, 0.2746 ) }
    apic_16 { pt3dadd( 372.563, 493.205, 69.811, 0.2746 ) }
    apic_16 { pt3dadd( 373.388, 493.194, 71.1486, 0.2744 ) }
    apic_16 { pt3dadd( 374.209, 493.194, 72.5732, 0.2744 ) }
    apic_16 { pt3dadd( 375.047, 493.194, 73.9911, 0.2742 ) }
    apic_16 { pt3dadd( 376.053, 493.191, 75.2332, 0.2736 ) }
    apic_16 { pt3dadd( 377.152, 493.236, 76.2395, 0.2728 ) }
    apic_16 { pt3dadd( 378.235, 493.393, 77.0305, 0.2712 ) }
    apic_16 { pt3dadd( 379.299, 493.812, 77.5331, 0.2684 ) }
    apic_16 { pt3dadd( 379.711, 494.789, 77.8151, 0.2626 ) }
    apic_16 { pt3dadd( 379.729, 495.932, 77.9503, 0.2542 ) }
    apic_16 { pt3dadd( 380.023, 497.013, 77.9999, 0.2288 ) }
    apic_16 { pt3dadd( 380.599, 497.984, 77.9422, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 59/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 350.399, 487.055, 58.7076, 0.2782 ) }
    apic_15 { pt3dadd( 351.384, 487.477, 59.1164, 0.2288 ) }
    apic_15 { pt3dadd( 351.842, 488.525, 59.7134, 0.2746 ) }
    apic_15 { pt3dadd( 352.715, 488.943, 60.0233, 0.2746 ) }
    apic_15 { pt3dadd( 353.68, 489.222, 60.4769, 0.2746 ) }
    apic_15 { pt3dadd( 354.302, 490.125, 60.8479, 0.2746 ) }
    apic_15 { pt3dadd( 355.361, 490.549, 61.1447, 0.2746 ) }
    apic_15 { pt3dadd( 356.496, 490.697, 61.376, 0.2744 ) }
    apic_15 { pt3dadd( 357.624, 490.711, 61.5499, 0.2744 ) }
    apic_15 { pt3dadd( 358.736, 490.786, 61.7148, 0.2742 ) }
    apic_15 { pt3dadd( 359.844, 491.01, 61.908, 0.2736 ) }
    apic_15 { pt3dadd( 360.922, 491.279, 62.1415, 0.2728 ) }
    apic_15 { pt3dadd( 361.489, 492.272, 62.3473, 0.2712 ) }
    apic_15 { pt3dadd( 362.177, 493.18, 62.5243, 0.2684 ) }
    apic_15 { pt3dadd( 362.942, 494.025, 62.6861, 0.2626 ) }
    apic_15 { pt3dadd( 363.746, 494.806, 62.8936, 0.2542 ) }
    apic_15 { pt3dadd( 364.494, 495.635, 63.1145, 0.2288 ) }
    apic_15 { pt3dadd( 364.998, 496.662, 63.4684, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_618, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_618 = new SectionList()
    soma_0 ModelViewParmSubset_618.append()
    axon_0 ModelViewParmSubset_618.append()
    axon_1 ModelViewParmSubset_618.append()

    // Group: {name=ModelViewParmSubset_619, groups=[], sections=[apic_0, dend_17, dend_10, dend_1, dend_0, apic_4, apic_1, dend_21, dend_18, dend_12, dend_11, dend_9, dend_2, apic_10, apic_5, apic_3, apic_2, dend_27, dend_22, dend_20, dend_19, dend_16, dend_13, dend_6, dend_3, apic_17, apic_11, apic_9, apic_6, dend_24, dend_23, dend_15, dend_14, dend_8, dend_7, dend_5, dend_4, apic_21, apic_18, apic_14, apic_13, apic_12, apic_8, apic_7, dend_26, dend_25, apic_20, apic_19, apic_16, apic_15]}
    ModelViewParmSubset_619 = new SectionList()
    apic_0 ModelViewParmSubset_619.append()
    dend_17 ModelViewParmSubset_619.append()
    dend_10 ModelViewParmSubset_619.append()
    dend_1 ModelViewParmSubset_619.append()
    dend_0 ModelViewParmSubset_619.append()
    apic_4 ModelViewParmSubset_619.append()
    apic_1 ModelViewParmSubset_619.append()
    dend_21 ModelViewParmSubset_619.append()
    dend_18 ModelViewParmSubset_619.append()
    dend_12 ModelViewParmSubset_619.append()
    dend_11 ModelViewParmSubset_619.append()
    dend_9 ModelViewParmSubset_619.append()
    dend_2 ModelViewParmSubset_619.append()
    apic_10 ModelViewParmSubset_619.append()
    apic_5 ModelViewParmSubset_619.append()
    apic_3 ModelViewParmSubset_619.append()
    apic_2 ModelViewParmSubset_619.append()
    dend_27 ModelViewParmSubset_619.append()
    dend_22 ModelViewParmSubset_619.append()
    dend_20 ModelViewParmSubset_619.append()
    dend_19 ModelViewParmSubset_619.append()
    dend_16 ModelViewParmSubset_619.append()
    dend_13 ModelViewParmSubset_619.append()
    dend_6 ModelViewParmSubset_619.append()
    dend_3 ModelViewParmSubset_619.append()
    apic_17 ModelViewParmSubset_619.append()
    apic_11 ModelViewParmSubset_619.append()
    apic_9 ModelViewParmSubset_619.append()
    apic_6 ModelViewParmSubset_619.append()
    dend_24 ModelViewParmSubset_619.append()
    dend_23 ModelViewParmSubset_619.append()
    dend_15 ModelViewParmSubset_619.append()
    dend_14 ModelViewParmSubset_619.append()
    dend_8 ModelViewParmSubset_619.append()
    dend_7 ModelViewParmSubset_619.append()
    dend_5 ModelViewParmSubset_619.append()
    dend_4 ModelViewParmSubset_619.append()
    apic_21 ModelViewParmSubset_619.append()
    apic_18 ModelViewParmSubset_619.append()
    apic_14 ModelViewParmSubset_619.append()
    apic_13 ModelViewParmSubset_619.append()
    apic_12 ModelViewParmSubset_619.append()
    apic_8 ModelViewParmSubset_619.append()
    apic_7 ModelViewParmSubset_619.append()
    dend_26 ModelViewParmSubset_619.append()
    dend_25 ModelViewParmSubset_619.append()
    apic_20 ModelViewParmSubset_619.append()
    apic_19 ModelViewParmSubset_619.append()
    apic_16 ModelViewParmSubset_619.append()
    apic_15 ModelViewParmSubset_619.append()

    // Group: {name=dend, groups=[], sections=[dend_17, dend_10, dend_1, dend_0, dend_21, dend_18, dend_12, dend_11, dend_9, dend_2, dend_27, dend_22, dend_20, dend_19, dend_16, dend_13, dend_6, dend_3, dend_24, dend_23, dend_15, dend_14, dend_8, dend_7, dend_5, dend_4, dend_26, dend_25]}
    dend = new SectionList()
    dend_17 dend.append()
    dend_10 dend.append()
    dend_1 dend.append()
    dend_0 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_2 dend.append()
    dend_27 dend.append()
    dend_22 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_4, apic_1, apic_10, apic_5, apic_3, apic_2, apic_17, apic_11, apic_9, apic_6, apic_21, apic_18, apic_14, apic_13, apic_12, apic_8, apic_7, apic_20, apic_19, apic_16, apic_15]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_4 apic.append()
    apic_1 apic.append()
    apic_10 apic.append()
    apic_5 apic.append()
    apic_3 apic.append()
    apic_2 apic.append()
    apic_17 apic.append()
    apic_11 apic.append()
    apic_9 apic.append()
    apic_6 apic.append()
    apic_21 apic.append()
    apic_18 apic.append()
    apic_14 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_8 apic.append()
    apic_7 apic.append()
    apic_20 apic.append()
    apic_19 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()

    // Group: {name=OneSecGrp_SectionRef_26001, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_26001 = new SectionList()
    soma_0 OneSecGrp_SectionRef_26001.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.4231846  // units: uF/cm2
    forsec apic cm = 3.4231846  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 65.16345  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.019749977  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 8.00631E-15  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.21154355  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.004506304  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 2.887303E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.3543594E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 2.2144076E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.27032518  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 5.3185865E-4  // units: S cm-2
        e_pas_nml2 = -97.2548  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.0549583E-7  // units: S cm-2
        e_pas_nml2 = -97.2548  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0018183E-7  // units: S cm-2
        e_pas_nml2 = -97.2548  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.1649469E-4  // units: S cm-2
        e_pas_nml2 = -97.2548  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 8.714471E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.009997822  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_482525598
    forsec soma {
        insert CaDynamics_482525598
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_9 nseg = 5
    dend_27 nseg = 9
    dend_20 nseg = 5
    dend_16 nseg = 7
    apic_9 nseg = 7
    dend_23 nseg = 5
    dend_15 nseg = 5
    dend_8 nseg = 5
    dend_7 nseg = 5
    dend_5 nseg = 5
    dend_4 nseg = 5
    apic_21 nseg = 21
    apic_13 nseg = 5
    apic_12 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 3
    apic_20 nseg = 11
    apic_19 nseg = 7
    apic_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_482525598


