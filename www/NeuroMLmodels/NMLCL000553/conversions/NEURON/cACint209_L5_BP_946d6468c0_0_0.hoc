// Cell: cACint209_L5_BP_946d6468c0_0_0
/*
{
  "id" : "cACint209_L5_BP_946d6468c0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.98788, 8.18459, 2.82073, 0.83", "-5.6937, 10.2818, 3.2288, 1.11", "-7.28907, 11.5176, 3.44108, 0.83", "-8.83903, 12.7077, 3.63127, 0.83", "-9.75672, 13.3863, 3.73549, 1.11", "-12.6306, 15.507, 4.06952, 1.11", "-17.7706, 19.1376, 4.65999, 0.83", "-19.6224, 20.3957, 4.85497, 0.83", "-21.0888, 21.3624, 4.97609, 0.83", "-22.5188, 22.3205, 5.08092, 0.83", "-23.6828, 23.1101, 5.13749, 0.55", "-24.5578, 23.6447, 5.1949, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.13056, 6.03878, -6.08636, 0.55", "6.12293, 6.46977, -6.53129, 0.55", "7.27903, 6.57857, -7.12003, 0.83", "9.10877, 6.69435, -8.21365, 0.55", "9.99203, 6.75024, -8.74156, 1.38", "12.1637, 6.88766, -10.0396, 0.55", "13.0887, 6.84113, -10.6589, 0.83", "17.8733, 5.9877, -14.1387, 0.55", "18.3362, 5.87294, -14.5216, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.691086, -11.1015, 3.4528, 1.11", "-0.75265, -16.5334, 5.40012, 1.11", "-0.777723, -18.7456, 6.19319, 0.83", "-0.811035, -21.6846, 7.24683, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.880508, 9.77349, -1.37002, 1.11", "0.969263, 11.6904, -1.3545, 1.11", "1.10524, 14.8178, -1.21497, 1.38", "1.11582, 14.992, -1.20406, 1.38", "1.37644, 17.1463, -1.04666, 0.83", "1.74392, 19.4238, -0.757947, 0.83", "2.37723, 21.9939, -0.11955, 0.83", "2.73771, 22.9681, 0.243298, 0.83", "3.09332, 23.673, 0.577776, 1.11", "4.1331, 25.3891, 1.44114, 0.55", "5.34228, 27.1796, 2.47268, 0.83", "6.92577, 29.0193, 3.64322, 0.55", "7.73319, 29.7827, 4.17349, 0.83", "8.86194, 30.8163, 5.00149, 0.55", "10.2604, 32.1312, 6.12341, 0.55", "12.2141, 34.1107, 7.83869, 0.55", "14.3673, 36.3738, 9.73267, 0.55", "15.7256, 37.8427, 11.1494, 0.55", "17.3907, 39.7, 13.1513, 0.55", "17.7367, 40.0723, 13.6057, 0.83", "18.6504, 41.0563, 14.888, 0.55", "19.4192, 41.8231, 15.8944, 0.83", "21.1902, 43.9201, 18.2811, 0.55", "21.8571, 44.6859, 18.9773, 0.83", "22.481, 45.2497, 19.4484, 0.55", "23.0997, 45.7346, 19.8088, 0.83", "24.4712, 46.6352, 20.4604, 0.83", "26.2848, 47.8616, 21.1582, 0.83", "27.3974, 48.6729, 21.4643, 0.55", "28.246, 49.3755, 21.7026, 0.55", "30.4704, 51.1908, 22.2933, 0.83", "31.9068, 52.3549, 22.6162, 0.55", "34.0871, 54.0599, 23.0164, 0.55", "36.0839, 55.4885, 23.3022, 0.55", "37.8696, 56.6983, 23.5092, 0.55", "40.1251, 58.1148, 23.667, 0.55", "41.5029, 58.8075, 23.7182, 0.55", "42.4418, 59.1961, 23.6397, 0.55", "43.6876, 59.4839, 23.4293, 0.55", "45.5446, 59.61, 22.962, 0.55", "46.7016, 59.5413, 22.6256, 0.55", "48.3934, 59.3947, 22.2532, 0.55", "51.6187, 59.2182, 21.8333, 0.55", "54.1515, 59.1968, 21.6848, 0.55", "56.8377, 59.3021, 21.6882, 0.55", "58.5615, 59.4285, 21.8268, 0.55", "63.0436, 60.1622, 22.4825, 0.55", "65.6979, 60.8004, 23.0706, 0.55", "67.6901, 61.4091, 23.6983, 0.55", "68.9017, 61.9797, 24.1269, 0.55", "70.3064, 62.8303, 24.6171, 0.55", "72.6829, 64.5095, 25.235, 0.55", "73.2274, 64.9141, 25.3012, 0.55", "74.7884, 65.9953, 25.3881, 0.55", "76.2233, 67.1481, 25.4627, 0.83", "77.0062, 67.7877, 25.4909, 0.55", "78.1786, 68.8863, 25.4868, 0.83", "84.3669, 74.7525, 27.096, 0.83", "89.7485, 81.4893, 28.0711, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-24.5578, 23.6447, 5.1949, 0.55", "-25.5341, 24.2605, 4.63231, 0.55", "-26.5958, 24.9302, 4.02056, 0.55", "-27.877, 25.7382, 3.28231, 0.55", "-28.9349, 26.4055, 2.67271, 0.83", "-29.8214, 26.9647, 2.16188, 0.55", "-31.467, 28.0025, 1.21368, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-24.5578, 23.6447, 5.1949, 0.55", "-26.6129, 23.9269, 5.27065, 0.55", "-28.7575, 24.2003, 5.57134, 0.55", "-31.1783, 24.5173, 5.97084, 0.55", "-34.6238, 24.9986, 6.87142, 0.55", "-37.4643, 25.3553, 7.84484, 0.55", "-40.4169, 25.7066, 9.00327, 0.55", "-43.2012, 25.9054, 10.4743, 0.55", "-45.5388, 25.8743, 12.0294, 0.55", "-48.3765, 25.6764, 14.3442, 0.55", "-49.5692, 25.525, 15.5597, 0.55", "-50.8447, 25.3575, 16.9393, 0.55", "-53.1055, 24.8396, 19.2906, 0.55", "-54.3495, 24.5268, 20.3228, 0.55", "-55.6516, 24.1525, 21.4037, 0.55", "-57.2339, 23.6962, 22.51, 0.55", "-58.9652, 23.2302, 23.6538, 0.55", "-61.4467, 22.5474, 25.2289, 0.55", "-64.8343, 21.8168, 26.9679, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "18.3362, 5.87294, -14.5216, 0.55", "24.1472, 6.90079, -15.7402, 0.55", "27.4623, 7.38694, -16.9339, 0.55", "30.7157, 7.73207, -18.1847, 0.55", "32.9281, 7.88074, -19.0543, 0.55", "36.1532, 8.0197, -20.3141, 0.55", "42.8231, 8.2181, -23.1582, 0.55", "50.3716, 8.48747, -26.896, 0.55", "53.9981, 8.43727, -29.003, 0.55", "55.9315, 8.38593, -30.2687, 0.55", "58.0505, 8.35591, -31.7419, 0.55", "61.8192, 8.19321, -34.3752, 0.55", "63.1768, 8.06127, -35.3926, 0.55", "68.9309, 7.73226, -40.1287, 0.55", "73.0042, 7.62227, -43.7782, 0.55", "75.3534, 7.6175, -45.937, 0.55", "77.6938, 7.59138, -48.0922, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "18.3362, 5.87294, -14.5216, 0.83", "19.8039, 6.55287, -14.4707, 0.83", "20.6419, 6.9467, -14.4775, 0.55", "21.876, 7.56774, -14.5814, 0.83", "22.7075, 8.00886, -14.6715, 0.55", "23.8581, 8.64301, -14.7754, 0.83", "25.2459, 9.42273, -14.8489, 0.55", "25.9391, 9.76321, -14.8669, 0.55", "27.5129, 10.3288, -14.8356, 0.83", "28.9264, 10.6517, -14.6576, 0.55", "29.7174, 10.8125, -14.487, 0.83", "30.91, 11.0591, -14.1078, 0.55", "32.6316, 11.4079, -13.3501, 0.55", "35.011, 11.7575, -12.2002, 0.55", "37.2742, 11.9896, -10.9669, 0.55", "39.0658, 12.1503, -9.96201, 0.55", "42.0212, 12.4258, -8.28841, 0.55", "44.1916, 12.6788, -7.00905, 0.55", "45.5153, 12.9276, -6.17403, 0.55", "47.981, 13.6157, -4.57714, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.811035, -21.6846, 7.24683, 0.83", "-0.818595, -24.0828, 7.15485, 0.83", "-0.825961, -26.4193, 7.06524, 0.83", "-0.834185, -29.028, 6.96518, 0.83", "-0.83848, -30.3903, 6.91293, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.811035, -21.6846, 7.24683, 0.55", "-0.0996855, -23.7869, 8.79292, 0.55", "0.502184, -26.3687, 10.7793, 0.55", "0.758287, -29.7674, 13.4783, 0.55", "0.76188, -31.0912, 14.5562, 0.83", "0.429425, -34.478, 17.6704, 0.55", "0.111343, -36.2311, 19.3008, 0.55", "-0.590752, -39.6422, 22.6107, 0.83", "-1.27082, -42.1792, 25.2181, 0.55", "-2.01506, -44.2774, 27.3221, 0.55", "-3.50812, -48.254, 31.2283, 0.55", "-4.69201, -51.4235, 34.3048, 0.55", "-5.59253, -53.9627, 36.8106, 0.55", "-6.39404, -56.6546, 39.3978, 0.28", "-6.63049, -57.7732, 40.4398, 0.55", "-7.00435, -59.8379, 42.2512, 0.28", "-7.11007, -63.0491, 44.6121, 0.55", "-10.0898, -73.8075, 52.8465, 0.55", "-13.4369, -83.759, 61.9124, 0.55", "-16.3498, -91.9281, 72.7386, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-31.467, 28.0025, 1.21368, 0.55", "-35.3697, 28.5115, 3.52819, 0.55", "-36.9996, 28.6423, 4.71535, 0.83", "-38.8908, 28.7075, 6.37236, 0.55", "-40.3297, 28.7626, 7.77851, 0.83", "-44.1023, 29.0469, 11.4219, 0.55", "-45.53, 29.1802, 12.8122, 0.28", "-47.8978, 29.4393, 15.3423, 0.55", "-51.0758, 29.8062, 18.7204, 0.55", "-53.4958, 30.0806, 21.1672, 0.55", "-56.7353, 30.4418, 24.3261, 0.28", "-57.5835, 30.5379, 25.0388, 0.55", "-59.3431, 30.7556, 26.443, 0.28", "-60.5449, 30.9311, 27.2774, 0.55", "-63.0119, 31.2623, 28.759, 0.28", "-64.465, 31.3706, 29.5541, 0.55", "-67.0281, 31.3692, 30.9871, 0.28", "-68.7534, 31.3539, 31.8874, 0.55", "-78.9776, 30.5979, 42.2389, 0.55", "-88.2361, 28.4934, 53.2892, 0.55", "-97.1215, 25.0193, 64.2999, 0.55", "-105.993, 19.857, 74.6387, 0.55", "-113.187, 15.33, 86.4714, 0.55", "-121.476, 11.3179, 97.7613, 0.55", "-129.898, 9.68078, 109.535, 0.55", "-138.291, 6.89018, 121.113, 0.55", "-146.391, 5.07327, 133.085, 0.55", "-153.806, 3.05594, 145.463, 0.55", "-159.794, -0.591305, 158.234, 0.55", "-165.896, -2.88891, 171.262, 0.55", "-172.215, -6.64009, 183.842, 0.55", "-176.832, -10.9972, 196.955, 0.55", "-178.991, -14.363, 210.965, 0.55", "-181.117, -20.4031, 224.051, 0.55", "-181.168, -26.7266, 237.176, 0.55", "-181.976, -32.4357, 250.556, 0.55", "-184.317, -37.0845, 264.163, 0.55", "-189.655, -39.4589, 277.51, 0.55", "-193.75, -43.4467, 290.911, 0.55", "-195.081, -45.0286, 305.332, 0.55", "-198.73, -45.5311, 319.428, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-31.467, 28.0025, 1.21368, 0.55", "-32.2494, 28.4791, 0.127345, 0.55", "-32.8183, 29.003, -1.05724, 0.55", "-33.3358, 29.6347, -2.29814, 0.55", "-33.6599, 30.0302, -3.07517, 0.55", "-34.251, 30.7518, -4.49257, 0.83", "-34.6835, 31.2797, -5.52956, 0.55", "-35.1477, 32.0062, -7.04178, 0.83", "-35.2898, 32.4845, -7.87608, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-64.8343, 21.8168, 26.9679, 0.28", "-65.6834, 19.5795, 27.8716, 0.28", "-66.1239, 18.5774, 28.2082, 0.28", "-66.6961, 17.1428, 28.6228, 0.55", "-67.1572, 15.8889, 28.9842, 0.28", "-67.8254, 13.991, 29.5456, 0.55", "-69.6306, 8.46159, 31.2279, 0.28", "-70.24, 6.46005, 31.6732, 0.55", "-71.182, 3.33555, 32.2703, 0.28", "-71.7357, 1.43401, 32.553, 0.55", "-72.1253, 0.110691, 32.7239, 0.28", "-72.5659, -1.40288, 32.9283, 0.55", "-73.8365, -6.39191, 33.6531, 0.28", "-74.2526, -7.92422, 33.8372, 0.55", "-75.0562, -10.3726, 33.9688, 0.28", "-75.7662, -12.0049, 34.0034, 0.28", "-76.4216, -13.1225, 34.0491, 0.55", "-78.7026, -16.2603, 34.3716, 0.28", "-79.7623, -17.531, 34.5619, 0.55", "-82.3961, -20.5034, 34.9257, 0.28", "-85.0492, -23.179, 35.2947, 0.28", "-87.9637, -25.8032, 35.6642, 0.28", "-89.3011, -26.8124, 35.8659, 0.55", "-95.1612, -36.3412, 37.7044, 0.55", "-101.216, -45.0982, 41.5994, 0.55", "-107.61, -54.1867, 43.8417, 0.55", "-114.543, -63.0755, 45.0407, 0.55", "-121.948, -71.6597, 45.1228, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-64.8343, 21.8168, 26.9679, 0.55", "-65.5266, 21.76, 27.2381, 0.55", "-67.4255, 21.6795, 28.2524, 0.55", "-68.1289, 21.642, 28.6782, 0.55", "-69.772, 21.5085, 29.7211, 0.55", "-72.3291, 21.2916, 31.1889, 0.55", "-73.6675, 21.2147, 31.9148, 0.28", "-75.7545, 21.0344, 33.0161, 0.55", "-77.3134, 20.8496, 33.7862, 0.55", "-77.9709, 20.7674, 34.1142, 0.28", "-81.9158, 20.2709, 36.0766, 0.55", "-83.7756, 19.9148, 36.904, 0.28", "-86.3149, 19.3789, 37.8737, 0.28", "-88.5348, 18.9104, 38.5719, 0.55", "-96.9256, 18.9306, 42.7891, 0.55", "-104.794, 19.0158, 47.9146, 0.55", "-111.895, 18.4653, 54.0354, 0.55", "-118.762, 19.634, 60.333, 0.55", "-124.146, 20.9884, 67.9078, 0.55", "-128.012, 23.2283, 76.1678, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "77.6938, 7.59138, -48.0922, 0.55", "81.5919, 8.95972, -50.7755, 0.55", "82.8074, 9.38565, -51.7127, 0.55", "84.3127, 9.86979, -52.8929, 0.55", "87.0369, 10.8059, -55.1832, 0.55", "89.8428, 11.7209, -57.688, 0.55", "91.1787, 12.0601, -58.9336, 0.83", "92.253, 12.3163, -60.0698, 0.55", "93.0339, 12.4915, -61.0271, 0.83", "94.8225, 12.7454, -63.5914, 0.55", "96.2438, 12.8292, -65.7867, 0.55", "97.8741, 12.8678, -68.234, 0.55", "99.7096, 12.9839, -70.9684, 0.55", "100.93, 13.0509, -72.85, 0.55", "102.305, 13.1477, -75.0208, 0.55", "103.51, 13.3214, -76.9598, 0.55", "104.294, 13.5564, -78.2453, 0.55", "105.271, 14.2571, -80.7082, 0.55", "105.782, 14.6809, -82.2568, 0.55", "106.163, 15.2512, -84.3111, 0.55", "106.615, 16.1757, -87.8057, 0.55", "106.693, 16.364, -88.6049, 0.28", "107.71, 18.5311, -98.3872, 0.28", "108.094, 19.1592, -101.264, 0.83", "109.636, 21.1662, -111.583, 0.83", "110.408, 21.9084, -116.481, 0.83", "110.788, 22.1168, -118.514, 0.55", "111.258, 22.2818, -120.516, 0.55", "112.718, 22.3307, -124.363, 0.55", "114.348, 22.237, -127.816, 0.28", "114.883, 21.9619, -128.164, 0.55", "116.092, 21.1931, -128.44, 0.28", "116.86, 20.7074, -128.471, 0.55", "117.656, 20.1534, -128.441, 0.28", "118.63, 19.5094, -128.337, 0.55", "120.116, 18.7021, -128.293, 0.28", "121.296, 18.0414, -128.314, 0.55", "122.634, 17.4464, -128.395, 0.28", "124.456, 16.7281, -128.655, 0.55", "126.516, 16.0298, -129.039, 0.55", "128.336, 15.4976, -129.48, 0.28", "130.863, 14.8538, -130.209, 0.55", "135.275, 14.0883, -131.845, 0.55", "137.26, 13.9594, -132.737, 0.55", "138.126, 13.9806, -133.186, 0.83", "139.78, 14.1061, -134.173, 0.55", "140.943, 14.2683, -134.9, 0.83", "144.1, 14.791, -136.849, 0.55", "145.984, 15.0242, -138.144, 0.28", "146.761, 15.0363, -138.632, 0.55", "148.819, 14.7795, -139.849, 0.28", "149.517, 14.6053, -140.264, 0.55", "150.921, 14.0432, -140.947, 0.28", "152.297, 13.2033, -141.468, 0.55", "155.017, 11.0799, -142.095, 0.28", "156.249, 9.96703, -142.274, 0.55", "158.038, 8.14635, -142.493, 0.28", "160.302, 5.8056, -142.675, 0.55", "161.948, 4.12036, -142.764, 0.55", "164.836, 1.26544, -142.817, 0.28", "166.044, 0.208552, -142.913, 0.55", "168.175, -1.35952, -143.257, 0.28", "170.362, -2.67727, -143.664, 0.55", "171.613, -3.17728, -143.985, 0.28", "172.799, -3.44251, -144.283, 0.55", "176.217, -3.85606, -145.32, 0.28", "178.715, -3.98735, -146.016, 0.28", "180.94, -3.95376, -146.577, 0.55", "183.418, -3.80106, -147.272, 0.28", "184.055, -3.74089, -147.412, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "77.6938, 7.59138, -48.0922, 0.55", "77.7629, 5.99461, -50.4709, 0.55", "77.6497, 4.61892, -52.3411, 0.28", "77.544, 3.29499, -53.9135, 0.55", "77.512, 0.466283, -57.2981, 0.28", "77.5035, 0.303618, -57.5415, 0.55", "77.4935, -0.511987, -58.9147, 0.28", "77.3918, -1.09951, -60.1929, 0.55", "77.225, -1.64915, -61.635, 0.28", "76.955, -2.36181, -63.661, 0.55", "76.2744, -4.18032, -68.6834, 0.55", "75.616, -5.80507, -73.3127, 0.55", "75.0633, -7.09697, -77.0138, 0.55", "74.4721, -8.37735, -80.6035, 0.55", "74.3171, -8.72003, -81.5039, 0.28", "74.1721, -9.11574, -82.4113, 0.55", "74.0645, -9.72169, -83.5908, 0.28", "74.0532, -10.9137, -85.5695, 0.55", "74.3227, -13.4847, -88.8806, 0.55", "74.4837, -14.9405, -90.5088, 0.28", "74.5394, -16.3643, -92.2296, 0.55", "74.4266, -18.2788, -94.7129, 0.28", "74.201, -19.7762, -96.7501, 0.55", "73.7297, -21.9858, -99.7886, 0.28", "73.2657, -24.3196, -102.841, 0.55", "72.5294, -27.678, -107.305, 0.28", "72.0819, -29.4538, -109.687, 0.55", "71.5825, -31.2361, -112.176, 0.28", "71.1191, -32.741, -114.497, 0.28", "70.6366, -34.5394, -117.64, 0.55", "70.371, -36.2707, -120.509, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "47.981, 13.6157, -4.57714, 0.55", "50.4815, 12.8757, -4.26982, 0.55", "52.2865, 12.304, -4.23408, 0.55", "56.2217, 11.0518, -4.3743, 0.55", "57.9786, 10.4863, -4.60524, 0.55", "59.8972, 9.93196, -4.94814, 0.55", "62.4713, 9.2739, -5.58527, 0.55", "65.1633, 8.56343, -6.53634, 0.55", "66.5655, 8.20755, -7.20606, 0.55", "69.3951, 7.57079, -8.97195, 0.55", "70.6978, 7.29817, -9.82628, 0.55", "73.737, 6.61626, -11.9241, 0.55", "75.7835, 6.06357, -13.3456, 0.55", "77.2918, 5.63105, -14.321, 0.83", "79.689, 4.83904, -15.8706, 0.55", "82.0236, 3.92047, -17.317, 0.83", "83.9938, 3.02719, -18.489, 0.55", "85.7565, 2.23823, -19.427, 0.55", "86.7691, 1.82363, -19.8908, 0.83", "89.141, 0.834735, -20.8394, 0.28", "90.3326, 0.37722, -21.2206, 0.28", "91.4704, -0.128303, -21.6685, 0.28", "92.7056, -0.638694, -22.1511, 0.28", "94.6857, -1.40682, -22.9581, 0.28", "95.4853, -1.71098, -23.2555, 0.55", "97.4112, -2.46072, -23.7652, 0.55", "100.883, -3.88462, -24.5075, 0.55", "101.841, -4.31462, -24.6746, 0.55", "102.696, -4.73612, -24.7916, 0.83", "104.568, -5.62603, -24.8756, 0.55", "106.198, -6.4022, -24.9209, 0.55", "107.739, -7.13046, -24.9548, 0.55", "108.927, -7.7083, -25.0207, 0.55", "110.786, -8.74005, -25.2511, 0.55", "112.938, -10.131, -25.695, 0.55", "116.204, -12.6411, -26.7259, 0.55", "117.945, -14.2816, -27.4813, 0.55", "119.403, -15.9771, -28.287, 0.28", "119.818, -16.5884, -28.5818, 0.55", "120.678, -18.2684, -29.3681, 0.28", "121.345, -20.126, -30.1893, 0.55", "121.887, -22.4481, -31.0093, 0.55", "122.263, -23.9916, -31.4784, 0.28", "122.406, -24.5434, -31.6189, 0.55", "122.786, -25.9207, -31.9517, 0.28", "123.32, -27.7259, -32.3464, 0.55", "124.774, -32.1157, -33.2074, 0.55", "125.546, -34.3414, -33.6004, 0.55", "126.267, -36.3864, -33.9447, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "47.981, 13.6157, -4.57714, 0.55", "50.2238, 12.948, -3.29578, 0.55", "50.9403, 12.748, -2.9194, 0.55", "53.5867, 11.9433, -1.6684, 0.55", "56.5514, 11.0758, -0.209757, 0.55", "60.3562, 9.9142, 1.7425, 0.55", "61.4068, 9.59732, 2.27624, 0.55", "63.2813, 8.97537, 3.18751, 0.55", "65.3378, 8.36675, 4.13984, 0.55", "67.7311, 7.76142, 5.18313, 0.55", "69.991, 7.21466, 6.18669, 0.55", "71.2347, 6.98676, 6.71191, 0.55", "72.7002, 6.75578, 7.34419, 0.55", "74.5179, 6.52779, 8.12069, 0.83", "77.4757, 6.27923, 9.12622, 0.55", "79.4186, 6.08909, 9.67935, 0.83", "82.0943, 5.75932, 10.3151, 0.55", "82.9093, 5.62476, 10.4809, 0.55", "85.4182, 5.12175, 10.8952, 0.55", "89.86, 4.06395, 11.3605, 0.55", "93.0833, 3.16327, 11.5554, 0.55", "95.6225, 2.31851, 11.7107, 0.55", "98.1984, 1.29621, 11.888, 0.55", "98.7384, 1.0669, 11.9212, 0.28", "99.8272, 0.563619, 11.9664, 0.83", "104.291, -1.57385, 12.1463, 0.55", "107.409, -3.03822, 12.2183, 0.55", "109.983, -4.21065, 12.3661, 0.55", "111.52, -4.92206, 12.4657, 0.83", "112.733, -5.46723, 12.5542, 0.28", "113.833, -5.95543, 12.6257, 0.55", "122.779, -8.43764, 15.2579, 0.55", "131.916, -11.5135, 15.6705, 0.55", "141.205, -13.7548, 17.0096, 0.55", "149.47, -17.9827, 19.6421, 0.55", "157.01, -23.4677, 22.1269, 0.55", "164.871, -29.032, 21.5258, 0.55", "172.348, -34.6309, 19.1053, 0.55", "180.856, -38.5732, 16.8278, 0.55", "189.289, -42.922, 15.0683, 0.55", "198.195, -46.1214, 13.1859, 0.55", "207.213, -49.5047, 12.5989, 0.55", "215.444, -54.4769, 11.798, 0.55", "224.218, -58.4203, 12.5675, 0.55", "232.906, -61.6835, 15.2079, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.83848, -30.3903, 6.91293, 1.38", "2.30702, -33.171, 6.79708, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.83848, -30.3903, 6.91293, 0.55", "-1.69785, -32.1471, 6.29591, 0.55", "-2.61199, -34.3666, 5.63476, 0.55", "-3.36212, -35.8603, 5.11317, 0.55", "-3.90664, -37.1074, 4.54979, 0.55", "-4.99371, -39.702, 3.14905, 0.55", "-5.74221, -41.4436, 2.1275, 0.55", "-6.37694, -43.0028, 1.17947, 0.55", "-8.03428, -46.8217, -1.26729, 0.55", "-10.0643, -51.264, -4.19179, 0.55", "-11.6131, -54.6368, -6.50594, 0.55", "-12.5773, -56.8434, -8.00257, 0.55", "-13.6741, -59.4768, -9.70659, 0.55", "-15.0371, -63.2033, -11.8088, 0.55", "-15.8007, -65.799, -12.9789, 0.55", "-16.7872, -69.489, -14.2363, 0.55", "-17.55, -72.908, -15.1503, 0.55", "-18.2383, -77.1209, -15.9953, 0.55", "-18.8064, -82.0151, -16.6693, 0.55", "-19.0084, -85.7075, -16.9077, 0.55", "-19.0802, -87.5296, -16.86, 0.55", "-19.1813, -91.7791, -16.4136, 0.55", "-19.2802, -95.7469, -15.8712, 0.55", "-19.389, -99.7197, -14.9669, 0.55", "-19.5435, -102.004, -14.3612, 0.55", "-20.1388, -109.066, -12.2535, 0.55", "-20.1908, -109.586, -12.0929, 0.55", "-20.5067, -112.767, -11.0115, 0.55", "-21.3624, -118.495, -9.12429, 0.55", "-21.5911, -120.41, -8.5912, 0.55", "-21.7084, -123.406, -8.21364, 0.55", "-21.5808, -124.512, -8.26144, 0.55", "-20.605, -128.218, -8.89536, 0.55", "-19.5654, -130.592, -9.64063, 0.55", "-17.3652, -134.346, -11.401, 0.55", "-14.3064, -138.906, -13.7388, 0.28", "-13.443, -140.028, -14.4338, 0.55", "-12.038, -141.726, -15.6105, 0.28", "-11.8199, -141.982, -15.8007, 0.55", "-10.7066, -143.388, -16.7464, 0.28", "-10.4227, -143.871, -16.9947, 0.55", "-9.28535, -146.402, -17.9167, 0.28", "-8.93208, -147.268, -18.2413, 0.55", "-8.02043, -149.78, -19.0814, 0.28", "-7.73233, -150.57, -19.3415, 0.55", "-6.78257, -153.301, -20.2156, 0.28", "-6.33655, -154.556, -20.6191, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.3498, -91.9281, 72.7386, 0.55", "-19.2945, -97.2654, 78.1101, 0.55", "-22.9454, -101.833, 83.751, 0.55", "-26.4533, -106.939, 89.0073, 0.55", "-30.1103, -112.058, 94.1484, 0.55", "-33.0502, -118.145, 98.6565, 0.55", "-35.8615, -123.988, 103.551, 0.55", "-37.9923, -131.131, 106.784, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-16.3498, -91.9281, 72.7386, 0.55", "-16.014, -100.17, 80.9299, 0.55", "-14.943, -109.668, 87.5457, 0.55", "-15.7151, -119.366, 93.9093, 0.55", "-16.9913, -129.667, 99.1434, 0.55", "-17.8267, -139.894, 104.606, 0.55", "-18.6838, -149.697, 110.794, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-35.2898, 32.4845, -7.87608, 0.83", "-35.1291, 33.7547, -10.2189, 0.83", "-34.7906, 36.9122, -15.5247, 0.55", "-34.6136, 38.3104, -17.662, 0.83", "-34.3917, 39.8377, -19.8164, 0.55", "-34.1105, 41.4777, -21.7483, 0.55", "-33.9367, 42.3321, -22.5906, 0.28", "-33.8323, 42.9429, -22.9737, 0.55", "-33.325, 45.0894, -23.7914, 0.28", "-33.0749, 46.0166, -24.0978, 0.55", "-32.2204, 49.2761, -25.0216, 0.28", "-31.5947, 51.887, -25.6531, 0.55", "-30.7914, 56.0143, -26.4771, 0.28", "-30.1994, 59.671, -27.1096, 0.28", "-29.9783, 61.7385, -27.4032, 0.55", "-29.8641, 64.2041, -27.723, 0.28", "-29.8823, 65.3915, -27.846, 0.55", "-30.0965, 68.1697, -28.228, 0.28", "-30.3775, 70.0103, -28.5531, 0.28", "-30.7017, 71.8089, -28.9186, 0.28", "-30.8379, 72.7552, -29.1219, 0.55", "-31.2038, 76.5454, -30.0689, 0.28", "-31.5045, 81.0034, -31.2988, 0.55", "-31.587, 82.5398, -31.7337, 0.55", "-31.6879, 84.0899, -32.1323, 0.55", "-32.0868, 87.3851, -32.9998, 0.55", "-32.4967, 89.5486, -33.5896, 0.28", "-32.7487, 90.3725, -33.8061, 0.55", "-33.5777, 92.6264, -34.3176, 0.28", "-34.5748, 95.0115, -34.9361, 0.55", "-36.3493, 98.4339, -35.8968, 0.28", "-37.2522, 99.8632, -36.3145, 0.28", "-38.7987, 101.824, -37.0424, 0.55", "-40.5678, 103.851, -37.8819, 0.28", "-40.897, 104.169, -38.0205, 0.55", "-42.0996, 105.184, -38.4774, 0.28", "-46.2637, 108.451, -39.909, 0.55", "-52.165, 112.433, -41.9792, 0.28", "-53.2772, 113.085, -42.4068, 0.55", "-56.3552, 114.753, -43.5998, 0.28", "-57.6568, 115.429, -44.1293, 0.28", "-58.8024, 115.976, -44.6328, 0.55", "-62.2529, 117.148, -46.2458, 0.28", "-64.6993, 117.771, -47.2379, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-35.2898, 32.4845, -7.87608, 0.55", "-35.4276, 33.9236, -8.27277, 0.55", "-35.5202, 34.7871, -8.42461, 0.28", "-35.6895, 35.4363, -8.36897, 0.55", "-36.078, 36.927, -8.2412, 0.28", "-36.3509, 37.9741, -8.15145, 0.55", "-36.854, 39.9044, -7.98599, 0.28", "-37.2004, 40.9721, -7.71582, 0.55", "-38.613, 43.6881, -6.16459, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-121.948, -71.6597, 45.1228, 0.55", "-125.157, -77.43, 46.9765, 0.55", "-127.303, -83.7747, 48.4524, 0.55", "-129.228, -90.3571, 48.4212, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-121.948, -71.6597, 45.1228, 0.55", "-127.417, -79.9945, 46.0108, 0.55", "-132.134, -88.8178, 45.73, 0.55", "-136.478, -97.8215, 45.2369, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-128.012, 23.2283, 76.1678, 0.55", "-136.701, 26.0639, 84.9913, 0.55", "-146.62, 29.3852, 92.2, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-128.012, 23.2283, 76.1678, 0.55", "-134.775, 23.345, 81.8666, 0.55", "-142.14, 24.4266, 86.644, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "70.371, -36.2707, -120.509, 0.28", "76.2352, -38.1295, -134.885, 0.28", "76.8236, -38.405, -136.194, 0.55", "77.8169, -38.8703, -138.404, 0.28", "78.6533, -39.2621, -140.265, 0.28", "79.7604, -39.7806, -142.729, 0.55", "81.2201, -40.4644, -145.977, 0.55", "83.3537, -42.3552, -148.124, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "70.371, -36.2707, -120.509, 0.55", "70.5845, -36.6099, -121.645, 0.55", "70.622, -36.7308, -122.147, 0.28", "70.6607, -36.9147, -123.016, 0.55", "70.746, -37.3199, -124.931, 0.28", "70.8051, -37.6008, -126.258, 0.55", "70.9052, -38.0765, -128.507, 0.28", "71.0152, -38.5476, -131.378, 0.28", "71.0364, -38.7352, -132.71, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "126.267, -36.3864, -33.9447, 0.28", "127.166, -37.9766, -33.7514, 0.28", "128.297, -40.0866, -33.3281, 0.28", "129.01, -41.4584, -33.0, 0.55", "129.45, -42.2229, -32.784, 0.28", "129.684, -42.6345, -32.6639, 0.28", "130.841, -44.6646, -32.1009, 0.55", "131.112, -45.1216, -31.9197, 0.28", "131.74, -46.3246, -31.3637, 0.55", "132.273, -47.3662, -30.9213, 0.28", "132.745, -48.2153, -30.5779, 0.55", "133.293, -49.225, -30.2269, 0.55", "134.159, -50.8141, -29.8617, 0.55", "134.367, -51.2026, -29.7855, 0.55", "135.102, -52.6483, -29.5159, 0.28", "135.382, -53.2362, -29.4205, 0.55", "135.782, -53.9906, -29.302, 0.28", "136.344, -55.0577, -29.1809, 0.55", "137.278, -56.7266, -29.2273, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "126.267, -36.3864, -33.9447, 0.55", "123.712, -36.1088, -33.8182, 0.55", "121.636, -35.8834, -33.7154, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.30702, -33.171, 6.79708, 0.83", "2.44277, -33.3954, 6.8126, 0.83", "3.91131, -35.3506, 7.15623, 0.83", "5.22978, -37.0628, 7.33832, 0.55", "6.28165, -38.4287, 7.48359, 0.55", "8.51742, -41.3321, 7.79235, 0.83", "11.2292, -44.8537, 8.16687, 0.55", "12.6891, -46.6918, 8.41456, 0.83", "15.2002, -49.593, 9.00542, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.30702, -33.171, 6.79708, 0.55", "2.54984, -34.1762, 3.96509, 0.55", "2.81048, -35.2551, 0.925291, 0.55", "3.11816, -36.5288, -2.66322, 0.55", "3.49179, -38.0755, -7.02083, 0.55", "3.70382, -38.9531, -9.49362, 0.55", "3.74641, -39.1294, -9.99037, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.6838, -149.697, 110.794, 0.55", "-18.7009, -156.66, 115.722, 0.55", "-17.5998, -164.096, 119.754, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.6838, -149.697, 110.794, 0.55", "-19.2109, -159.643, 116.626, 0.55", "-20.3537, -169.43, 122.636, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-38.613, 43.6881, -6.16459, 0.28", "-40.029, 44.9282, -4.76965, 0.28", "-40.5721, 45.3895, -4.17326, 0.55", "-42.132, 46.7219, -2.40747, 0.28", "-42.8962, 47.3931, -1.61861, 0.55", "-44.9718, 49.2198, 0.433655, 0.28", "-47.0814, 51.0765, 2.51951, 0.55", "-50.5761, 53.9516, 5.98215, 0.28", "-51.3203, 54.5701, 6.72105, 0.55", "-52.9493, 56.0443, 8.29742, 0.28", "-53.5847, 56.6611, 8.92172, 0.55", "-60.5537, 60.5553, 13.8868, 0.55", "-67.872, 65.6939, 16.7884, 0.55", "-74.4043, 70.9475, 21.0442, 0.55", "-79.7108, 77.3628, 25.4109, 0.55", "-85.8863, 83.4834, 28.9864, 0.55", "-92.9381, 88.0746, 33.1787, 0.55", "-99.5693, 91.8067, 38.6997, 0.55", "-105.512, 94.4727, 45.4788, 0.55", "-111.437, 97.7028, 52.0243, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-38.613, 43.6881, -6.16459, 0.55", "-42.3821, 42.5421, -4.61547, 0.55", "-44.342, 41.8807, -3.81222, 0.28", "-45.8006, 41.3886, -3.21447, 0.55", "-47.0162, 40.9784, -2.71628, 0.28", "-47.8677, 40.6911, -2.36733, 0.55", "-50.2156, 39.8988, -1.4051, 0.28", "-51.7786, 39.2328, -0.959924, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-129.228, -90.3571, 48.4212, 0.55", "-132.23, -100.38, 50.7283, 0.55", "-134.537, -110.308, 54.0288, 0.55", "-136.87, -120.684, 55.3265, 0.55", "-139.64, -130.602, 58.2842, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-129.228, -90.3571, 48.4212, 0.55", "-134.623, -96.1678, 45.2678, 0.55", "-140.152, -101.076, 41.0087, 0.55", "-145.806, -106.732, 38.0322, 0.55", "-152.907, -111.04, 36.0763, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-136.478, -97.8215, 45.2369, 0.55", "-141.782, -103.417, 41.9419, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-136.478, -97.8215, 45.2369, 0.55", "-138.65, -105.671, 50.8132, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "83.3537, -42.3552, -148.124, 0.28", "85.4392, -43.3088, -149.912, 0.28", "86.408, -43.7517, -150.742, 0.55", "88.2553, -44.5963, -152.325, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "83.3537, -42.3552, -148.124, 0.55", "82.495, -42.8855, -150.132, 0.55", "80.7771, -43.9462, -154.149, 0.28", "80.2176, -44.2916, -155.458, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "71.0364, -38.7352, -132.71, 0.28", "71.2918, -40.4885, -137.226, 0.28", "71.4182, -41.3567, -139.463, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "71.0364, -38.7352, -132.71, 0.55", "68.4719, -39.0023, -132.103, 0.55", "61.321, -39.7473, -130.41, 0.28", "59.6222, -39.9243, -130.008, 0.55", "54.9752, -40.4084, -128.908, 0.28", "51.9798, -40.7204, -128.199, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.2002, -49.593, 9.00542, 0.83", "15.2672, -49.888, 8.98915, 0.83", "16.1821, -53.7374, 8.89352, 0.83", "16.5844, -56.6405, 8.96021, 0.83", "16.7249, -59.4525, 9.27645, 0.83", "16.7292, -63.1973, 9.95295, 0.83", "16.5874, -67.5176, 10.8684, 0.83", "16.4025, -72.3295, 12.1443, 0.83", "16.1843, -76.995, 13.5976, 0.83", "15.5717, -82.7657, 15.1824, 0.83", "15.1749, -85.4373, 15.7358, 0.83", "14.892, -87.4521, 16.0264, 0.83", "14.2842, -91.3292, 16.4894, 0.83", "13.8539, -94.8013, 16.7316, 0.83", "13.4772, -102.199, 16.5141, 0.83", "13.4131, -106.261, 15.8885, 0.83", "13.4012, -110.015, 15.046, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.2002, -49.593, 9.00542, 0.55", "14.3118, -52.0962, 9.101, 0.55", "13.6183, -53.9077, 9.29632, 0.55", "13.1839, -55.0565, 9.53805, 0.55", "12.5558, -56.836, 10.1, 0.55", "11.361, -60.3375, 11.4501, 0.55", "10.3829, -62.9723, 12.7549, 0.55", "9.56039, -65.0704, 14.0242, 0.55", "8.65118, -67.1853, 15.4468, 0.55", "7.86593, -68.935, 16.7155, 0.28", "7.16576, -70.3537, 17.958, 0.55", "5.76526, -72.9184, 20.5745, 0.55", "4.78823, -74.4881, 22.3357, 0.55", "4.23261, -75.369, 23.3117, 0.55", "3.53391, -76.4165, 24.3979, 0.83", "1.47207, -79.5384, 27.404, 0.28", "0.795876, -80.5732, 28.3707, 0.55", "-0.355357, -82.4398, 30.0647, 0.28", "-0.717353, -83.0125, 30.6293, 0.55", "-1.48675, -84.3518, 31.9415, 0.28", "-1.90879, -85.1165, 32.6315, 0.55", "-3.31563, -87.6623, 34.1718, 0.55", "-5.88733, -94.197, 41.2762, 0.55", "-8.09181, -100.343, 48.8363, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.74641, -39.1294, -9.99037, 0.55", "4.04274, -40.343, -13.9251, 0.55", "4.09477, -40.6355, -15.0623, 0.55", "4.16603, -41.3749, -17.8659, 0.55", "4.16654, -42.8673, -23.8798, 0.28", "4.13367, -43.0762, -24.7474, 0.55", "3.92238, -44.0313, -28.2917, 0.55", "3.36125, -45.3616, -32.9005, 0.55", "3.1164, -45.8274, -34.6419, 0.28", "2.8407, -46.1541, -36.1222, 0.28", "2.15429, -46.6855, -38.4567, 0.55", "1.37593, -47.2076, -41.3754, 0.28", "0.676461, -47.4835, -44.1159, 0.55", "0.0951765, -47.5468, -46.216, 0.55", "-0.286081, -47.4825, -47.6937, 0.55", "-1.34095, -47.1202, -52.1189, 0.55", "-2.53139, -46.4772, -56.7356, 0.55", "-3.06125, -46.1247, -58.6185, 0.28", "-3.54167, -45.8126, -60.4264, 0.55", "-4.52125, -45.3825, -64.0654, 0.28", "-4.85588, -45.2685, -65.2817, 0.83", "-5.58088, -45.0399, -67.4625, 0.28", "-6.22778, -44.9915, -68.9031, 0.55", "-7.19062, -44.9951, -70.9639, 0.28", "-7.59463, -44.9875, -71.7663, 0.55", "-8.39974, -45.0064, -73.1958, 0.55", "-9.70031, -44.8114, -75.302, 0.55", "-10.6187, -44.5967, -76.6217, 0.28", "-11.441, -44.2804, -77.6224, 0.55", "-12.4212, -43.7341, -78.8119, 0.28", "-12.5786, -43.6253, -79.0138, 0.55", "-13.7732, -42.5539, -81.1474, 0.28", "-14.5257, -41.7365, -82.8163, 0.55", "-15.3299, -40.5078, -85.226, 0.83", "-15.8607, -39.4469, -87.3486, 0.28", "-15.9667, -39.1737, -87.9279, 0.55", "-16.6412, -37.1178, -92.5032, 0.28", "-16.7167, -36.7647, -93.3452, 0.55", "-16.8709, -35.5988, -95.9111, 0.28", "-16.9082, -35.2988, -96.5758, 0.55", "-17.0626, -34.5216, -98.2256, 0.28", "-17.2104, -33.9644, -99.3577, 0.55", "-17.7416, -32.7356, -101.69, 0.28", "-18.0816, -32.0861, -103.043, 0.55", "-18.8864, -30.8543, -105.84, 0.28", "-19.1312, -30.5265, -106.664, 0.55", "-19.5375, -30.0998, -107.927, 0.28", "-19.9142, -29.7434, -108.965, 0.55", "-20.778, -29.0357, -111.036, 0.28", "-21.0509, -28.8369, -111.646, 0.55", "-23.2292, -27.2852, -116.035, 0.28", "-24.0957, -26.6405, -117.481, 0.55", "-25.7739, -25.3691, -119.936, 0.28", "-26.5604, -24.7496, -121.016, 0.55", "-28.4742, -23.3578, -123.373, 0.28", "-29.2045, -22.8952, -124.204, 0.55", "-31.9591, -21.5675, -127.057, 0.28", "-33.1028, -21.2103, -128.232, 0.55", "-34.7255, -21.068, -129.882, 0.55", "-35.7395, -21.0693, -130.872, 0.55", "-37.9461, -21.1552, -132.723, 0.28", "-40.2299, -21.2758, -134.411, 0.28", "-42.177, -21.3709, -135.766, 0.55", "-44.7738, -21.257, -137.184, 0.28", "-46.189, -21.0341, -137.739, 0.55", "-49.7975, -19.9792, -138.796, 0.28", "-51.9178, -19.1108, -139.002, 0.55", "-53.4361, -18.382, -138.929, 0.28", "-55.3031, -17.5683, -138.578, 0.55", "-57.7423, -16.4969, -137.967, 0.28", "-58.663, -16.1259, -137.743, 0.55", "-63.2325, -14.5155, -136.933, 0.28", "-64.7669, -14.0178, -136.671, 0.55", "-68.4411, -12.9418, -135.988, 0.28", "-70.4364, -12.3753, -135.619, 0.55", "-72.0761, -11.9118, -135.317, 0.55", "-74.0182, -11.3687, -134.992, 0.28", "-74.9746, -11.0925, -134.938, 0.55", "-78.1175, -10.0797, -134.898, 0.28", "-79.7834, -9.3944, -134.852, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.74641, -39.1294, -9.99037, 0.55", "4.78938, -39.2115, -10.4126, 0.55", "5.84511, -39.1707, -10.8083, 0.55", "7.1793, -39.0218, -11.235, 0.55", "8.27481, -38.8103, -11.5363, 0.55", "15.5253, -36.6646, -12.9808, 0.55", "17.1532, -36.0043, -13.3249, 0.55", "19.5506, -34.8633, -13.879, 0.55", "21.2449, -34.0012, -14.2811, 0.55", "22.8879, -33.068, -14.638, 0.28", "25.3997, -31.4921, -15.0692, 0.55", "29.1163, -29.0313, -15.5128, 0.28", "29.4552, -28.8807, -15.6283, 0.55", "31.5435, -28.368, -16.9512, 0.28", "32.8108, -28.1446, -18.0798, 0.55", "34.0807, -28.0443, -19.43, 0.55", "36.3421, -28.0349, -21.8852, 0.55", "40.7964, -28.0606, -26.6901, 0.55", "43.8472, -28.117, -29.8622, 0.55", "44.9298, -28.1467, -30.9283, 0.55", "52.2013, -28.2443, -37.7664, 0.55", "54.2438, -28.2228, -39.5349, 0.55", "55.4636, -28.2017, -40.4408, 0.55", "58.4965, -28.2141, -42.3018, 0.55", "66.0666, -28.6269, -46.3293, 0.55", "68.1592, -28.8215, -47.3244, 0.28", "69.3981, -28.9811, -47.7992, 0.55", "71.2538, -29.2916, -48.4661, 0.28", "72.0428, -29.4918, -48.6807, 0.55", "74.5159, -30.3926, -48.7138, 0.28", "76.0378, -31.663, -47.8042, 0.55", "76.9181, -32.5791, -47.1969, 0.28", "77.6631, -33.6009, -46.5373, 0.55", "78.2802, -34.7257, -45.8898, 0.28", "78.5593, -35.3091, -45.6176, 0.55", "79.1695, -36.8441, -44.9219, 0.28", "79.3715, -37.3036, -44.7966, 0.55", "80.6165, -39.9362, -44.2085, 0.28", "81.3232, -41.1487, -44.0445, 0.55", "83.102, -43.7259, -43.8766, 0.28", "83.8602, -44.6699, -43.8778, 0.55", "86.5795, -47.7555, -43.9618, 0.28", "87.2662, -48.5047, -44.0064, 0.55", "89.4411, -50.8811, -44.265, 0.28", "89.8945, -51.4415, -44.3105, 0.55", "91.0422, -52.927, -44.4521, 0.28", "91.77, -53.7866, -44.5999, 0.55", "92.5541, -54.6269, -44.7829, 0.55", "94.1109, -56.3037, -45.1365, 0.28", "95.2367, -57.3304, -45.3944, 0.55", "98.8802, -59.8384, -46.2104, 0.28", "100.331, -60.6348, -46.5596, 0.55", "101.333, -61.1342, -46.7815, 0.28", "102.349, -61.5823, -46.9885, 0.55", "105.486, -62.8149, -47.5643, 0.28", "107.846, -63.7747, -47.9505, 0.55", "111.786, -65.6309, -48.3786, 0.28", "113.026, -66.2074, -48.508, 0.55", "115.341, -67.2595, -48.5978, 0.28", "116.092, -67.6038, -48.5793, 0.55", "117.233, -68.1536, -48.3781, 0.28", "118.203, -68.6144, -48.1295, 0.55", "120.71, -69.7405, -47.2266, 0.28", "123.562, -70.918, -46.1475, 0.28", "124.955, -71.451, -45.5112, 0.28", "126.403, -71.942, -44.9453, 0.55", "128.523, -72.5623, -44.1245, 0.28", "129.455, -72.8242, -43.7417, 0.83", "131.788, -73.5253, -42.6852, 0.28", "132.829, -73.8521, -42.278, 0.55", "137.517, -75.4593, -40.6767, 0.28", "139.953, -76.2877, -40.0385, 0.28", "141.776, -76.8887, -39.6713, 0.55", "142.891, -77.2582, -39.5555, 0.55", "145.94, -78.2722, -39.4328, 0.28", "148.835, -79.3288, -39.4091, 0.55", "151.471, -80.3595, -39.3891, 0.28", "153.9, -81.3199, -39.4674, 0.55", "155.904, -82.094, -39.5227, 0.28", "157.514, -82.6308, -39.4994, 0.55", "161.335, -83.7421, -39.302, 0.28", "163.243, -84.3033, -39.1394, 0.55", "166.069, -85.1535, -38.8117, 0.28", "168.361, -85.7906, -38.4995, 0.55", "173.728, -87.0719, -37.7713, 0.28", "175.971, -87.4823, -37.5915, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.5998, -164.096, 119.754, 0.55", "-18.1401, -175.016, 124.653, 0.55", "-18.3821, -186.825, 126.66, 0.55", "-18.8282, -198.195, 130.409, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.5998, -164.096, 119.754, 0.55", "-16.7684, -171.672, 124.744, 0.55", "-16.6772, -178.069, 131.228, 0.55", "-16.0735, -183.044, 138.835, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-20.3537, -169.43, 122.636, 0.55", "-19.8719, -177.417, 128.074, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-20.3537, -169.43, 122.636, 0.55", "-22.3835, -182.711, 130.242, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "13.4012, -110.015, 15.046, 0.83", "14.5106, -113.641, 15.9382, 0.83", "15.5495, -116.67, 16.9426, 0.83", "16.5821, -119.681, 17.941, 0.83", "17.5627, -122.54, 18.8892, 0.83", "19.074, -126.947, 20.3503, 0.83", "20.5743, -131.322, 21.8009, 0.83", "21.741, -134.173, 23.1826, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "13.4012, -110.015, 15.046, 0.55", "15.0769, -111.954, 15.4849, 0.55", "16.4254, -113.482, 15.5447, 0.55", "17.393, -114.622, 15.4598, 0.55", "18.353, -115.989, 15.1402, 0.83", "19.3794, -117.562, 14.5621, 0.55", "20.3833, -119.1, 13.9967, 0.83", "21.4099, -120.785, 13.2072, 0.55", "22.0226, -121.767, 12.6574, 0.83", "23.9242, -124.967, 10.6028, 0.55", "25.2446, -127.509, 8.79111, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.09181, -100.343, 48.8363, 0.55", "-11.0436, -106.324, 52.9037, 0.55", "-15.1091, -111.639, 56.9351, 0.55", "-19.7933, -116.255, 61.1512, 0.55", "-25.206, -120.019, 65.3426, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.09181, -100.343, 48.8363, 0.55", "-11.5739, -107.437, 54.3267, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "21.741, -134.173, 23.1826, 0.55", "21.9013, -136.348, 23.8784, 0.55", "22.1477, -139.113, 24.8625, 0.55", "22.387, -141.725, 25.7784, 0.55", "22.5488, -143.584, 26.3943, 0.55", "22.8241, -146.907, 27.4302, 0.55", "23.8267, -156.23, 30.1766, 0.55", "24.2938, -159.385, 31.012, 0.55", "24.6769, -161.609, 31.4992, 0.55", "25.2171, -164.147, 31.8724, 0.55", "25.6749, -166.114, 31.9834, 0.55", "26.9494, -170.692, 32.1189, 0.55", "27.8051, -174.184, 32.1687, 0.55", "28.3972, -176.469, 32.2897, 0.55", "29.7897, -182.396, 32.8818, 0.55", "30.6305, -186.383, 33.4366, 0.55", "31.6207, -191.521, 34.4349, 0.55", "32.6339, -197.339, 36.0221, 0.55", "33.3775, -201.198, 37.3793, 0.55", "33.8444, -203.47, 38.2615, 0.55", "34.2403, -205.572, 39.0535, 0.55", "34.8354, -208.225, 39.9547, 0.55", "36.3741, -214.635, 41.6817, 0.55", "37.0866, -217.103, 42.2955, 0.55", "37.825, -219.862, 42.9347, 0.55", "38.9102, -224.009, 43.8603, 0.55", "39.5914, -227.219, 44.5418, 0.55", "40.088, -230.293, 45.0817, 0.55", "40.4394, -233.243, 45.5457, 0.55", "40.7198, -236.129, 46.0184, 0.55", "40.9392, -238.181, 46.3405, 0.55", "41.3637, -241.536, 46.7672, 0.55", "41.9441, -245.572, 46.9701, 0.55", "42.3323, -247.525, 46.9504, 0.55", "42.7431, -249.238, 46.8184, 0.55", "43.7343, -252.447, 46.4471, 0.55", "44.3663, -254.485, 46.1497, 0.55", "45.1332, -256.993, 45.8844, 0.55", "45.566, -258.765, 45.7729, 0.55", "46.5402, -263.385, 45.6205, 0.55", "47.0897, -266.856, 45.7061, 0.55", "47.6791, -272.242, 46.216, 0.55", "47.9969, -275.706, 46.8809, 0.55", "48.2565, -279.348, 47.6788, 0.28", "48.3028, -280.817, 48.0415, 0.28", "48.2691, -284.385, 49.2173, 0.28", "48.1041, -287.684, 50.5353, 0.28", "48.0754, -291.99, 52.8546, 0.28", "50.204, -301.493, 56.2435, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "21.741, -134.173, 23.1826, 0.55", "23.0274, -134.539, 24.2662, 0.55", "25.5795, -135.557, 26.7101, 0.55", "27.7387, -136.601, 28.9301, 0.28", "30.0178, -137.806, 31.3933, 0.55", "31.274, -138.581, 33.0892, 0.28", "33.3079, -139.986, 36.2783, 0.55", "33.9752, -140.763, 37.9372, 0.28", "34.1683, -141.043, 38.6103, 0.28", "34.4882, -141.425, 39.7761, 0.55", "35.8764, -142.611, 44.0877, 0.28", "36.5003, -143.06, 45.8725, 0.55", "38.7019, -144.344, 50.8577, 0.28", "40.0, -144.951, 53.4205, 0.28", "41.731, -145.743, 56.4743, 0.55", "44.551, -147.0, 60.7094, 0.28", "44.9709, -147.165, 61.2295, 0.55", "47.1539, -147.973, 63.6253, 0.28", "47.3689, -148.05, 63.8184, 0.55", "49.2509, -149.04, 65.6051, 0.28", "50.1155, -149.598, 66.5186, 0.55", "57.1354, -153.62, 74.0631, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.206, -120.019, 65.3426, 0.55", "-29.2738, -123.673, 72.6688, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-25.206, -120.019, 65.3426, 0.55", "-30.5731, -127.232, 68.9423, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_BP_946d6468c0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.98788, 8.18459, 2.82073, 0.83 ) }
    dend_43 { pt3dadd( -5.6937, 10.2818, 3.2288, 1.11 ) }
    dend_43 { pt3dadd( -7.28907, 11.5176, 3.44108, 0.83 ) }
    dend_43 { pt3dadd( -8.83903, 12.7077, 3.63127, 0.83 ) }
    dend_43 { pt3dadd( -9.75672, 13.3863, 3.73549, 1.11 ) }
    dend_43 { pt3dadd( -12.6306, 15.507, 4.06952, 1.11 ) }
    dend_43 { pt3dadd( -17.7706, 19.1376, 4.65999, 0.83 ) }
    dend_43 { pt3dadd( -19.6224, 20.3957, 4.85497, 0.83 ) }
    dend_43 { pt3dadd( -21.0888, 21.3624, 4.97609, 0.83 ) }
    dend_43 { pt3dadd( -22.5188, 22.3205, 5.08092, 0.83 ) }
    dend_43 { pt3dadd( -23.6828, 23.1101, 5.13749, 0.55 ) }
    dend_43 { pt3dadd( -24.5578, 23.6447, 5.1949, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.13056, 6.03878, -6.08636, 0.55 ) }
    dend_28 { pt3dadd( 6.12293, 6.46977, -6.53129, 0.55 ) }
    dend_28 { pt3dadd( 7.27903, 6.57857, -7.12003, 0.83 ) }
    dend_28 { pt3dadd( 9.10877, 6.69435, -8.21365, 0.55 ) }
    dend_28 { pt3dadd( 9.99203, 6.75024, -8.74156, 1.38 ) }
    dend_28 { pt3dadd( 12.1637, 6.88766, -10.0396, 0.55 ) }
    dend_28 { pt3dadd( 13.0887, 6.84113, -10.6589, 0.83 ) }
    dend_28 { pt3dadd( 17.8733, 5.9877, -14.1387, 0.55 ) }
    dend_28 { pt3dadd( 18.3362, 5.87294, -14.5216, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.691086, -11.1015, 3.4528, 1.11 ) }
    dend_1 { pt3dadd( -0.75265, -16.5334, 5.40012, 1.11 ) }
    dend_1 { pt3dadd( -0.777723, -18.7456, 6.19319, 0.83 ) }
    dend_1 { pt3dadd( -0.811035, -21.6846, 7.24683, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.880508, 9.77349, -1.37002, 1.11 ) }
    dend_0 { pt3dadd( 0.969263, 11.6904, -1.3545, 1.11 ) }
    dend_0 { pt3dadd( 1.10524, 14.8178, -1.21497, 1.38 ) }
    dend_0 { pt3dadd( 1.11582, 14.992, -1.20406, 1.38 ) }
    dend_0 { pt3dadd( 1.37644, 17.1463, -1.04666, 0.83 ) }
    dend_0 { pt3dadd( 1.74392, 19.4238, -0.757947, 0.83 ) }
    dend_0 { pt3dadd( 2.37723, 21.9939, -0.11955, 0.83 ) }
    dend_0 { pt3dadd( 2.73771, 22.9681, 0.243298, 0.83 ) }
    dend_0 { pt3dadd( 3.09332, 23.673, 0.577776, 1.11 ) }
    dend_0 { pt3dadd( 4.1331, 25.3891, 1.44114, 0.55 ) }
    dend_0 { pt3dadd( 5.34228, 27.1796, 2.47268, 0.83 ) }
    dend_0 { pt3dadd( 6.92577, 29.0193, 3.64322, 0.55 ) }
    dend_0 { pt3dadd( 7.73319, 29.7827, 4.17349, 0.83 ) }
    dend_0 { pt3dadd( 8.86194, 30.8163, 5.00149, 0.55 ) }
    dend_0 { pt3dadd( 10.2604, 32.1312, 6.12341, 0.55 ) }
    dend_0 { pt3dadd( 12.2141, 34.1107, 7.83869, 0.55 ) }
    dend_0 { pt3dadd( 14.3673, 36.3738, 9.73267, 0.55 ) }
    dend_0 { pt3dadd( 15.7256, 37.8427, 11.1494, 0.55 ) }
    dend_0 { pt3dadd( 17.3907, 39.7, 13.1513, 0.55 ) }
    dend_0 { pt3dadd( 17.7367, 40.0723, 13.6057, 0.83 ) }
    dend_0 { pt3dadd( 18.6504, 41.0563, 14.888, 0.55 ) }
    dend_0 { pt3dadd( 19.4192, 41.8231, 15.8944, 0.83 ) }
    dend_0 { pt3dadd( 21.1902, 43.9201, 18.2811, 0.55 ) }
    dend_0 { pt3dadd( 21.8571, 44.6859, 18.9773, 0.83 ) }
    dend_0 { pt3dadd( 22.481, 45.2497, 19.4484, 0.55 ) }
    dend_0 { pt3dadd( 23.0997, 45.7346, 19.8088, 0.83 ) }
    dend_0 { pt3dadd( 24.4712, 46.6352, 20.4604, 0.83 ) }
    dend_0 { pt3dadd( 26.2848, 47.8616, 21.1582, 0.83 ) }
    dend_0 { pt3dadd( 27.3974, 48.6729, 21.4643, 0.55 ) }
    dend_0 { pt3dadd( 28.246, 49.3755, 21.7026, 0.55 ) }
    dend_0 { pt3dadd( 30.4704, 51.1908, 22.2933, 0.83 ) }
    dend_0 { pt3dadd( 31.9068, 52.3549, 22.6162, 0.55 ) }
    dend_0 { pt3dadd( 34.0871, 54.0599, 23.0164, 0.55 ) }
    dend_0 { pt3dadd( 36.0839, 55.4885, 23.3022, 0.55 ) }
    dend_0 { pt3dadd( 37.8696, 56.6983, 23.5092, 0.55 ) }
    dend_0 { pt3dadd( 40.1251, 58.1148, 23.667, 0.55 ) }
    dend_0 { pt3dadd( 41.5029, 58.8075, 23.7182, 0.55 ) }
    dend_0 { pt3dadd( 42.4418, 59.1961, 23.6397, 0.55 ) }
    dend_0 { pt3dadd( 43.6876, 59.4839, 23.4293, 0.55 ) }
    dend_0 { pt3dadd( 45.5446, 59.61, 22.962, 0.55 ) }
    dend_0 { pt3dadd( 46.7016, 59.5413, 22.6256, 0.55 ) }
    dend_0 { pt3dadd( 48.3934, 59.3947, 22.2532, 0.55 ) }
    dend_0 { pt3dadd( 51.6187, 59.2182, 21.8333, 0.55 ) }
    dend_0 { pt3dadd( 54.1515, 59.1968, 21.6848, 0.55 ) }
    dend_0 { pt3dadd( 56.8377, 59.3021, 21.6882, 0.55 ) }
    dend_0 { pt3dadd( 58.5615, 59.4285, 21.8268, 0.55 ) }
    dend_0 { pt3dadd( 63.0436, 60.1622, 22.4825, 0.55 ) }
    dend_0 { pt3dadd( 65.6979, 60.8004, 23.0706, 0.55 ) }
    dend_0 { pt3dadd( 67.6901, 61.4091, 23.6983, 0.55 ) }
    dend_0 { pt3dadd( 68.9017, 61.9797, 24.1269, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 70.3064, 62.8303, 24.6171, 0.55 ) }
    dend_0 { pt3dadd( 72.6829, 64.5095, 25.235, 0.55 ) }
    dend_0 { pt3dadd( 73.2274, 64.9141, 25.3012, 0.55 ) }
    dend_0 { pt3dadd( 74.7884, 65.9953, 25.3881, 0.55 ) }
    dend_0 { pt3dadd( 76.2233, 67.1481, 25.4627, 0.83 ) }
    dend_0 { pt3dadd( 77.0062, 67.7877, 25.4909, 0.55 ) }
    dend_0 { pt3dadd( 78.1786, 68.8863, 25.4868, 0.83 ) }
    dend_0 { pt3dadd( 84.3669, 74.7525, 27.096, 0.83 ) }
    dend_0 { pt3dadd( 89.7485, 81.4893, 28.0711, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -24.5578, 23.6447, 5.1949, 0.55 ) }
    dend_55 { pt3dadd( -25.5341, 24.2605, 4.63231, 0.55 ) }
    dend_55 { pt3dadd( -26.5958, 24.9302, 4.02056, 0.55 ) }
    dend_55 { pt3dadd( -27.877, 25.7382, 3.28231, 0.55 ) }
    dend_55 { pt3dadd( -28.9349, 26.4055, 2.67271, 0.83 ) }
    dend_55 { pt3dadd( -29.8214, 26.9647, 2.16188, 0.55 ) }
    dend_55 { pt3dadd( -31.467, 28.0025, 1.21368, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -24.5578, 23.6447, 5.1949, 0.55 ) }
    dend_44 { pt3dadd( -26.6129, 23.9269, 5.27065, 0.55 ) }
    dend_44 { pt3dadd( -28.7575, 24.2003, 5.57134, 0.55 ) }
    dend_44 { pt3dadd( -31.1783, 24.5173, 5.97084, 0.55 ) }
    dend_44 { pt3dadd( -34.6238, 24.9986, 6.87142, 0.55 ) }
    dend_44 { pt3dadd( -37.4643, 25.3553, 7.84484, 0.55 ) }
    dend_44 { pt3dadd( -40.4169, 25.7066, 9.00327, 0.55 ) }
    dend_44 { pt3dadd( -43.2012, 25.9054, 10.4743, 0.55 ) }
    dend_44 { pt3dadd( -45.5388, 25.8743, 12.0294, 0.55 ) }
    dend_44 { pt3dadd( -48.3765, 25.6764, 14.3442, 0.55 ) }
    dend_44 { pt3dadd( -49.5692, 25.525, 15.5597, 0.55 ) }
    dend_44 { pt3dadd( -50.8447, 25.3575, 16.9393, 0.55 ) }
    dend_44 { pt3dadd( -53.1055, 24.8396, 19.2906, 0.55 ) }
    dend_44 { pt3dadd( -54.3495, 24.5268, 20.3228, 0.55 ) }
    dend_44 { pt3dadd( -55.6516, 24.1525, 21.4037, 0.55 ) }
    dend_44 { pt3dadd( -57.2339, 23.6962, 22.51, 0.55 ) }
    dend_44 { pt3dadd( -58.9652, 23.2302, 23.6538, 0.55 ) }
    dend_44 { pt3dadd( -61.4467, 22.5474, 25.2289, 0.55 ) }
    dend_44 { pt3dadd( -64.8343, 21.8168, 26.9679, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 18.3362, 5.87294, -14.5216, 0.55 ) }
    dend_34 { pt3dadd( 24.1472, 6.90079, -15.7402, 0.55 ) }
    dend_34 { pt3dadd( 27.4623, 7.38694, -16.9339, 0.55 ) }
    dend_34 { pt3dadd( 30.7157, 7.73207, -18.1847, 0.55 ) }
    dend_34 { pt3dadd( 32.9281, 7.88074, -19.0543, 0.55 ) }
    dend_34 { pt3dadd( 36.1532, 8.0197, -20.3141, 0.55 ) }
    dend_34 { pt3dadd( 42.8231, 8.2181, -23.1582, 0.55 ) }
    dend_34 { pt3dadd( 50.3716, 8.48747, -26.896, 0.55 ) }
    dend_34 { pt3dadd( 53.9981, 8.43727, -29.003, 0.55 ) }
    dend_34 { pt3dadd( 55.9315, 8.38593, -30.2687, 0.55 ) }
    dend_34 { pt3dadd( 58.0505, 8.35591, -31.7419, 0.55 ) }
    dend_34 { pt3dadd( 61.8192, 8.19321, -34.3752, 0.55 ) }
    dend_34 { pt3dadd( 63.1768, 8.06127, -35.3926, 0.55 ) }
    dend_34 { pt3dadd( 68.9309, 7.73226, -40.1287, 0.55 ) }
    dend_34 { pt3dadd( 73.0042, 7.62227, -43.7782, 0.55 ) }
    dend_34 { pt3dadd( 75.3534, 7.6175, -45.937, 0.55 ) }
    dend_34 { pt3dadd( 77.6938, 7.59138, -48.0922, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 18.3362, 5.87294, -14.5216, 0.83 ) }
    dend_29 { pt3dadd( 19.8039, 6.55287, -14.4707, 0.83 ) }
    dend_29 { pt3dadd( 20.6419, 6.9467, -14.4775, 0.55 ) }
    dend_29 { pt3dadd( 21.876, 7.56774, -14.5814, 0.83 ) }
    dend_29 { pt3dadd( 22.7075, 8.00886, -14.6715, 0.55 ) }
    dend_29 { pt3dadd( 23.8581, 8.64301, -14.7754, 0.83 ) }
    dend_29 { pt3dadd( 25.2459, 9.42273, -14.8489, 0.55 ) }
    dend_29 { pt3dadd( 25.9391, 9.76321, -14.8669, 0.55 ) }
    dend_29 { pt3dadd( 27.5129, 10.3288, -14.8356, 0.83 ) }
    dend_29 { pt3dadd( 28.9264, 10.6517, -14.6576, 0.55 ) }
    dend_29 { pt3dadd( 29.7174, 10.8125, -14.487, 0.83 ) }
    dend_29 { pt3dadd( 30.91, 11.0591, -14.1078, 0.55 ) }
    dend_29 { pt3dadd( 32.6316, 11.4079, -13.3501, 0.55 ) }
    dend_29 { pt3dadd( 35.011, 11.7575, -12.2002, 0.55 ) }
    dend_29 { pt3dadd( 37.2742, 11.9896, -10.9669, 0.55 ) }
    dend_29 { pt3dadd( 39.0658, 12.1503, -9.96201, 0.55 ) }
    dend_29 { pt3dadd( 42.0212, 12.4258, -8.28841, 0.55 ) }
    dend_29 { pt3dadd( 44.1916, 12.6788, -7.00905, 0.55 ) }
    dend_29 { pt3dadd( 45.5153, 12.9276, -6.17403, 0.55 ) }
    dend_29 { pt3dadd( 47.981, 13.6157, -4.57714, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.811035, -21.6846, 7.24683, 0.83 ) }
    dend_11 { pt3dadd( -0.818595, -24.0828, 7.15485, 0.83 ) }
    dend_11 { pt3dadd( -0.825961, -26.4193, 7.06524, 0.83 ) }
    dend_11 { pt3dadd( -0.834185, -29.028, 6.96518, 0.83 ) }
    dend_11 { pt3dadd( -0.83848, -30.3903, 6.91293, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.811035, -21.6846, 7.24683, 0.55 ) }
    dend_2 { pt3dadd( -0.0996855, -23.7869, 8.79292, 0.55 ) }
    dend_2 { pt3dadd( 0.502184, -26.3687, 10.7793, 0.55 ) }
    dend_2 { pt3dadd( 0.758287, -29.7674, 13.4783, 0.55 ) }
    dend_2 { pt3dadd( 0.76188, -31.0912, 14.5562, 0.83 ) }
    dend_2 { pt3dadd( 0.429425, -34.478, 17.6704, 0.55 ) }
    dend_2 { pt3dadd( 0.111343, -36.2311, 19.3008, 0.55 ) }
    dend_2 { pt3dadd( -0.590752, -39.6422, 22.6107, 0.83 ) }
    dend_2 { pt3dadd( -1.27082, -42.1792, 25.2181, 0.55 ) }
    dend_2 { pt3dadd( -2.01506, -44.2774, 27.3221, 0.55 ) }
    dend_2 { pt3dadd( -3.50812, -48.254, 31.2283, 0.55 ) }
    dend_2 { pt3dadd( -4.69201, -51.4235, 34.3048, 0.55 ) }
    dend_2 { pt3dadd( -5.59253, -53.9627, 36.8106, 0.55 ) }
    dend_2 { pt3dadd( -6.39404, -56.6546, 39.3978, 0.28 ) }
    dend_2 { pt3dadd( -6.63049, -57.7732, 40.4398, 0.55 ) }
    dend_2 { pt3dadd( -7.00435, -59.8379, 42.2512, 0.28 ) }
    dend_2 { pt3dadd( -7.11007, -63.0491, 44.6121, 0.55 ) }
    dend_2 { pt3dadd( -10.0898, -73.8075, 52.8465, 0.55 ) }
    dend_2 { pt3dadd( -13.4369, -83.759, 61.9124, 0.55 ) }
    dend_2 { pt3dadd( -16.3498, -91.9281, 72.7386, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -31.467, 28.0025, 1.21368, 0.55 ) }
    dend_61 { pt3dadd( -35.3697, 28.5115, 3.52819, 0.55 ) }
    dend_61 { pt3dadd( -36.9996, 28.6423, 4.71535, 0.83 ) }
    dend_61 { pt3dadd( -38.8908, 28.7075, 6.37236, 0.55 ) }
    dend_61 { pt3dadd( -40.3297, 28.7626, 7.77851, 0.83 ) }
    dend_61 { pt3dadd( -44.1023, 29.0469, 11.4219, 0.55 ) }
    dend_61 { pt3dadd( -45.53, 29.1802, 12.8122, 0.28 ) }
    dend_61 { pt3dadd( -47.8978, 29.4393, 15.3423, 0.55 ) }
    dend_61 { pt3dadd( -51.0758, 29.8062, 18.7204, 0.55 ) }
    dend_61 { pt3dadd( -53.4958, 30.0806, 21.1672, 0.55 ) }
    dend_61 { pt3dadd( -56.7353, 30.4418, 24.3261, 0.28 ) }
    dend_61 { pt3dadd( -57.5835, 30.5379, 25.0388, 0.55 ) }
    dend_61 { pt3dadd( -59.3431, 30.7556, 26.443, 0.28 ) }
    dend_61 { pt3dadd( -60.5449, 30.9311, 27.2774, 0.55 ) }
    dend_61 { pt3dadd( -63.0119, 31.2623, 28.759, 0.28 ) }
    dend_61 { pt3dadd( -64.465, 31.3706, 29.5541, 0.55 ) }
    dend_61 { pt3dadd( -67.0281, 31.3692, 30.9871, 0.28 ) }
    dend_61 { pt3dadd( -68.7534, 31.3539, 31.8874, 0.55 ) }
    dend_61 { pt3dadd( -78.9776, 30.5979, 42.2389, 0.55 ) }
    dend_61 { pt3dadd( -88.2361, 28.4934, 53.2892, 0.55 ) }
    dend_61 { pt3dadd( -97.1215, 25.0193, 64.2999, 0.55 ) }
    dend_61 { pt3dadd( -105.993, 19.857, 74.6387, 0.55 ) }
    dend_61 { pt3dadd( -113.187, 15.33, 86.4714, 0.55 ) }
    dend_61 { pt3dadd( -121.476, 11.3179, 97.7613, 0.55 ) }
    dend_61 { pt3dadd( -129.898, 9.68078, 109.535, 0.55 ) }
    dend_61 { pt3dadd( -138.291, 6.89018, 121.113, 0.55 ) }
    dend_61 { pt3dadd( -146.391, 5.07327, 133.085, 0.55 ) }
    dend_61 { pt3dadd( -153.806, 3.05594, 145.463, 0.55 ) }
    dend_61 { pt3dadd( -159.794, -0.591305, 158.234, 0.55 ) }
    dend_61 { pt3dadd( -165.896, -2.88891, 171.262, 0.55 ) }
    dend_61 { pt3dadd( -172.215, -6.64009, 183.842, 0.55 ) }
    dend_61 { pt3dadd( -176.832, -10.9972, 196.955, 0.55 ) }
    dend_61 { pt3dadd( -178.991, -14.363, 210.965, 0.55 ) }
    dend_61 { pt3dadd( -181.117, -20.4031, 224.051, 0.55 ) }
    dend_61 { pt3dadd( -181.168, -26.7266, 237.176, 0.55 ) }
    dend_61 { pt3dadd( -181.976, -32.4357, 250.556, 0.55 ) }
    dend_61 { pt3dadd( -184.317, -37.0845, 264.163, 0.55 ) }
    dend_61 { pt3dadd( -189.655, -39.4589, 277.51, 0.55 ) }
    dend_61 { pt3dadd( -193.75, -43.4467, 290.911, 0.55 ) }
    dend_61 { pt3dadd( -195.081, -45.0286, 305.332, 0.55 ) }
    dend_61 { pt3dadd( -198.73, -45.5311, 319.428, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -31.467, 28.0025, 1.21368, 0.55 ) }
    dend_56 { pt3dadd( -32.2494, 28.4791, 0.127345, 0.55 ) }
    dend_56 { pt3dadd( -32.8183, 29.003, -1.05724, 0.55 ) }
    dend_56 { pt3dadd( -33.3358, 29.6347, -2.29814, 0.55 ) }
    dend_56 { pt3dadd( -33.6599, 30.0302, -3.07517, 0.55 ) }
    dend_56 { pt3dadd( -34.251, 30.7518, -4.49257, 0.83 ) }
    dend_56 { pt3dadd( -34.6835, 31.2797, -5.52956, 0.55 ) }
    dend_56 { pt3dadd( -35.1477, 32.0062, -7.04178, 0.83 ) }
    dend_56 { pt3dadd( -35.2898, 32.4845, -7.87608, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -64.8343, 21.8168, 26.9679, 0.28 ) }
    dend_48 { pt3dadd( -65.6834, 19.5795, 27.8716, 0.28 ) }
    dend_48 { pt3dadd( -66.1239, 18.5774, 28.2082, 0.28 ) }
    dend_48 { pt3dadd( -66.6961, 17.1428, 28.6228, 0.55 ) }
    dend_48 { pt3dadd( -67.1572, 15.8889, 28.9842, 0.28 ) }
    dend_48 { pt3dadd( -67.8254, 13.991, 29.5456, 0.55 ) }
    dend_48 { pt3dadd( -69.6306, 8.46159, 31.2279, 0.28 ) }
    dend_48 { pt3dadd( -70.24, 6.46005, 31.6732, 0.55 ) }
    dend_48 { pt3dadd( -71.182, 3.33555, 32.2703, 0.28 ) }
    dend_48 { pt3dadd( -71.7357, 1.43401, 32.553, 0.55 ) }
    dend_48 { pt3dadd( -72.1253, 0.110691, 32.7239, 0.28 ) }
    dend_48 { pt3dadd( -72.5659, -1.40288, 32.9283, 0.55 ) }
    dend_48 { pt3dadd( -73.8365, -6.39191, 33.6531, 0.28 ) }
    dend_48 { pt3dadd( -74.2526, -7.92422, 33.8372, 0.55 ) }
    dend_48 { pt3dadd( -75.0562, -10.3726, 33.9688, 0.28 ) }
    dend_48 { pt3dadd( -75.7662, -12.0049, 34.0034, 0.28 ) }
    dend_48 { pt3dadd( -76.4216, -13.1225, 34.0491, 0.55 ) }
    dend_48 { pt3dadd( -78.7026, -16.2603, 34.3716, 0.28 ) }
    dend_48 { pt3dadd( -79.7623, -17.531, 34.5619, 0.55 ) }
    dend_48 { pt3dadd( -82.3961, -20.5034, 34.9257, 0.28 ) }
    dend_48 { pt3dadd( -85.0492, -23.179, 35.2947, 0.28 ) }
    dend_48 { pt3dadd( -87.9637, -25.8032, 35.6642, 0.28 ) }
    dend_48 { pt3dadd( -89.3011, -26.8124, 35.8659, 0.55 ) }
    dend_48 { pt3dadd( -95.1612, -36.3412, 37.7044, 0.55 ) }
    dend_48 { pt3dadd( -101.216, -45.0982, 41.5994, 0.55 ) }
    dend_48 { pt3dadd( -107.61, -54.1867, 43.8417, 0.55 ) }
    dend_48 { pt3dadd( -114.543, -63.0755, 45.0407, 0.55 ) }
    dend_48 { pt3dadd( -121.948, -71.6597, 45.1228, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -64.8343, 21.8168, 26.9679, 0.55 ) }
    dend_45 { pt3dadd( -65.5266, 21.76, 27.2381, 0.55 ) }
    dend_45 { pt3dadd( -67.4255, 21.6795, 28.2524, 0.55 ) }
    dend_45 { pt3dadd( -68.1289, 21.642, 28.6782, 0.55 ) }
    dend_45 { pt3dadd( -69.772, 21.5085, 29.7211, 0.55 ) }
    dend_45 { pt3dadd( -72.3291, 21.2916, 31.1889, 0.55 ) }
    dend_45 { pt3dadd( -73.6675, 21.2147, 31.9148, 0.28 ) }
    dend_45 { pt3dadd( -75.7545, 21.0344, 33.0161, 0.55 ) }
    dend_45 { pt3dadd( -77.3134, 20.8496, 33.7862, 0.55 ) }
    dend_45 { pt3dadd( -77.9709, 20.7674, 34.1142, 0.28 ) }
    dend_45 { pt3dadd( -81.9158, 20.2709, 36.0766, 0.55 ) }
    dend_45 { pt3dadd( -83.7756, 19.9148, 36.904, 0.28 ) }
    dend_45 { pt3dadd( -86.3149, 19.3789, 37.8737, 0.28 ) }
    dend_45 { pt3dadd( -88.5348, 18.9104, 38.5719, 0.55 ) }
    dend_45 { pt3dadd( -96.9256, 18.9306, 42.7891, 0.55 ) }
    dend_45 { pt3dadd( -104.794, 19.0158, 47.9146, 0.55 ) }
    dend_45 { pt3dadd( -111.895, 18.4653, 54.0354, 0.55 ) }
    dend_45 { pt3dadd( -118.762, 19.634, 60.333, 0.55 ) }
    dend_45 { pt3dadd( -124.146, 20.9884, 67.9078, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -128.012, 23.2283, 76.1678, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 77.6938, 7.59138, -48.0922, 0.55 ) }
    dend_42 { pt3dadd( 81.5919, 8.95972, -50.7755, 0.55 ) }
    dend_42 { pt3dadd( 82.8074, 9.38565, -51.7127, 0.55 ) }
    dend_42 { pt3dadd( 84.3127, 9.86979, -52.8929, 0.55 ) }
    dend_42 { pt3dadd( 87.0369, 10.8059, -55.1832, 0.55 ) }
    dend_42 { pt3dadd( 89.8428, 11.7209, -57.688, 0.55 ) }
    dend_42 { pt3dadd( 91.1787, 12.0601, -58.9336, 0.83 ) }
    dend_42 { pt3dadd( 92.253, 12.3163, -60.0698, 0.55 ) }
    dend_42 { pt3dadd( 93.0339, 12.4915, -61.0271, 0.83 ) }
    dend_42 { pt3dadd( 94.8225, 12.7454, -63.5914, 0.55 ) }
    dend_42 { pt3dadd( 96.2438, 12.8292, -65.7867, 0.55 ) }
    dend_42 { pt3dadd( 97.8741, 12.8678, -68.234, 0.55 ) }
    dend_42 { pt3dadd( 99.7096, 12.9839, -70.9684, 0.55 ) }
    dend_42 { pt3dadd( 100.93, 13.0509, -72.85, 0.55 ) }
    dend_42 { pt3dadd( 102.305, 13.1477, -75.0208, 0.55 ) }
    dend_42 { pt3dadd( 103.51, 13.3214, -76.9598, 0.55 ) }
    dend_42 { pt3dadd( 104.294, 13.5564, -78.2453, 0.55 ) }
    dend_42 { pt3dadd( 105.271, 14.2571, -80.7082, 0.55 ) }
    dend_42 { pt3dadd( 105.782, 14.6809, -82.2568, 0.55 ) }
    dend_42 { pt3dadd( 106.163, 15.2512, -84.3111, 0.55 ) }
    dend_42 { pt3dadd( 106.615, 16.1757, -87.8057, 0.55 ) }
    dend_42 { pt3dadd( 106.693, 16.364, -88.6049, 0.28 ) }
    dend_42 { pt3dadd( 107.71, 18.5311, -98.3872, 0.28 ) }
    dend_42 { pt3dadd( 108.094, 19.1592, -101.264, 0.83 ) }
    dend_42 { pt3dadd( 109.636, 21.1662, -111.583, 0.83 ) }
    dend_42 { pt3dadd( 110.408, 21.9084, -116.481, 0.83 ) }
    dend_42 { pt3dadd( 110.788, 22.1168, -118.514, 0.55 ) }
    dend_42 { pt3dadd( 111.258, 22.2818, -120.516, 0.55 ) }
    dend_42 { pt3dadd( 112.718, 22.3307, -124.363, 0.55 ) }
    dend_42 { pt3dadd( 114.348, 22.237, -127.816, 0.28 ) }
    dend_42 { pt3dadd( 114.883, 21.9619, -128.164, 0.55 ) }
    dend_42 { pt3dadd( 116.092, 21.1931, -128.44, 0.28 ) }
    dend_42 { pt3dadd( 116.86, 20.7074, -128.471, 0.55 ) }
    dend_42 { pt3dadd( 117.656, 20.1534, -128.441, 0.28 ) }
    dend_42 { pt3dadd( 118.63, 19.5094, -128.337, 0.55 ) }
    dend_42 { pt3dadd( 120.116, 18.7021, -128.293, 0.28 ) }
    dend_42 { pt3dadd( 121.296, 18.0414, -128.314, 0.55 ) }
    dend_42 { pt3dadd( 122.634, 17.4464, -128.395, 0.28 ) }
    dend_42 { pt3dadd( 124.456, 16.7281, -128.655, 0.55 ) }
    dend_42 { pt3dadd( 126.516, 16.0298, -129.039, 0.55 ) }
    dend_42 { pt3dadd( 128.336, 15.4976, -129.48, 0.28 ) }
    dend_42 { pt3dadd( 130.863, 14.8538, -130.209, 0.55 ) }
    dend_42 { pt3dadd( 135.275, 14.0883, -131.845, 0.55 ) }
    dend_42 { pt3dadd( 137.26, 13.9594, -132.737, 0.55 ) }
    dend_42 { pt3dadd( 138.126, 13.9806, -133.186, 0.83 ) }
    dend_42 { pt3dadd( 139.78, 14.1061, -134.173, 0.55 ) }
    dend_42 { pt3dadd( 140.943, 14.2683, -134.9, 0.83 ) }
    dend_42 { pt3dadd( 144.1, 14.791, -136.849, 0.55 ) }
    dend_42 { pt3dadd( 145.984, 15.0242, -138.144, 0.28 ) }
    dend_42 { pt3dadd( 146.761, 15.0363, -138.632, 0.55 ) }
    dend_42 { pt3dadd( 148.819, 14.7795, -139.849, 0.28 ) }
    dend_42 { pt3dadd( 149.517, 14.6053, -140.264, 0.55 ) }
    dend_42 { pt3dadd( 150.921, 14.0432, -140.947, 0.28 ) }
    dend_42 { pt3dadd( 152.297, 13.2033, -141.468, 0.55 ) }
    dend_42 { pt3dadd( 155.017, 11.0799, -142.095, 0.28 ) }
    dend_42 { pt3dadd( 156.249, 9.96703, -142.274, 0.55 ) }
    dend_42 { pt3dadd( 158.038, 8.14635, -142.493, 0.28 ) }
    dend_42 { pt3dadd( 160.302, 5.8056, -142.675, 0.55 ) }
    dend_42 { pt3dadd( 161.948, 4.12036, -142.764, 0.55 ) }
    dend_42 { pt3dadd( 164.836, 1.26544, -142.817, 0.28 ) }
    dend_42 { pt3dadd( 166.044, 0.208552, -142.913, 0.55 ) }
    dend_42 { pt3dadd( 168.175, -1.35952, -143.257, 0.28 ) }
    dend_42 { pt3dadd( 170.362, -2.67727, -143.664, 0.55 ) }
    dend_42 { pt3dadd( 171.613, -3.17728, -143.985, 0.28 ) }
    dend_42 { pt3dadd( 172.799, -3.44251, -144.283, 0.55 ) }
    dend_42 { pt3dadd( 176.217, -3.85606, -145.32, 0.28 ) }
    dend_42 { pt3dadd( 178.715, -3.98735, -146.016, 0.28 ) }
    dend_42 { pt3dadd( 180.94, -3.95376, -146.577, 0.55 ) }
    dend_42 { pt3dadd( 183.418, -3.80106, -147.272, 0.28 ) }
    dend_42 { pt3dadd( 184.055, -3.74089, -147.412, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 77.6938, 7.59138, -48.0922, 0.55 ) }
    dend_35 { pt3dadd( 77.7629, 5.99461, -50.4709, 0.55 ) }
    dend_35 { pt3dadd( 77.6497, 4.61892, -52.3411, 0.28 ) }
    dend_35 { pt3dadd( 77.544, 3.29499, -53.9135, 0.55 ) }
    dend_35 { pt3dadd( 77.512, 0.466283, -57.2981, 0.28 ) }
    dend_35 { pt3dadd( 77.5035, 0.303618, -57.5415, 0.55 ) }
    dend_35 { pt3dadd( 77.4935, -0.511987, -58.9147, 0.28 ) }
    dend_35 { pt3dadd( 77.3918, -1.09951, -60.1929, 0.55 ) }
    dend_35 { pt3dadd( 77.225, -1.64915, -61.635, 0.28 ) }
    dend_35 { pt3dadd( 76.955, -2.36181, -63.661, 0.55 ) }
    dend_35 { pt3dadd( 76.2744, -4.18032, -68.6834, 0.55 ) }
    dend_35 { pt3dadd( 75.616, -5.80507, -73.3127, 0.55 ) }
    dend_35 { pt3dadd( 75.0633, -7.09697, -77.0138, 0.55 ) }
    dend_35 { pt3dadd( 74.4721, -8.37735, -80.6035, 0.55 ) }
    dend_35 { pt3dadd( 74.3171, -8.72003, -81.5039, 0.28 ) }
    dend_35 { pt3dadd( 74.1721, -9.11574, -82.4113, 0.55 ) }
    dend_35 { pt3dadd( 74.0645, -9.72169, -83.5908, 0.28 ) }
    dend_35 { pt3dadd( 74.0532, -10.9137, -85.5695, 0.55 ) }
    dend_35 { pt3dadd( 74.3227, -13.4847, -88.8806, 0.55 ) }
    dend_35 { pt3dadd( 74.4837, -14.9405, -90.5088, 0.28 ) }
    dend_35 { pt3dadd( 74.5394, -16.3643, -92.2296, 0.55 ) }
    dend_35 { pt3dadd( 74.4266, -18.2788, -94.7129, 0.28 ) }
    dend_35 { pt3dadd( 74.201, -19.7762, -96.7501, 0.55 ) }
    dend_35 { pt3dadd( 73.7297, -21.9858, -99.7886, 0.28 ) }
    dend_35 { pt3dadd( 73.2657, -24.3196, -102.841, 0.55 ) }
    dend_35 { pt3dadd( 72.5294, -27.678, -107.305, 0.28 ) }
    dend_35 { pt3dadd( 72.0819, -29.4538, -109.687, 0.55 ) }
    dend_35 { pt3dadd( 71.5825, -31.2361, -112.176, 0.28 ) }
    dend_35 { pt3dadd( 71.1191, -32.741, -114.497, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 70.6366, -34.5394, -117.64, 0.55 ) }
    dend_35 { pt3dadd( 70.371, -36.2707, -120.509, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 47.981, 13.6157, -4.57714, 0.55 ) }
    dend_31 { pt3dadd( 50.4815, 12.8757, -4.26982, 0.55 ) }
    dend_31 { pt3dadd( 52.2865, 12.304, -4.23408, 0.55 ) }
    dend_31 { pt3dadd( 56.2217, 11.0518, -4.3743, 0.55 ) }
    dend_31 { pt3dadd( 57.9786, 10.4863, -4.60524, 0.55 ) }
    dend_31 { pt3dadd( 59.8972, 9.93196, -4.94814, 0.55 ) }
    dend_31 { pt3dadd( 62.4713, 9.2739, -5.58527, 0.55 ) }
    dend_31 { pt3dadd( 65.1633, 8.56343, -6.53634, 0.55 ) }
    dend_31 { pt3dadd( 66.5655, 8.20755, -7.20606, 0.55 ) }
    dend_31 { pt3dadd( 69.3951, 7.57079, -8.97195, 0.55 ) }
    dend_31 { pt3dadd( 70.6978, 7.29817, -9.82628, 0.55 ) }
    dend_31 { pt3dadd( 73.737, 6.61626, -11.9241, 0.55 ) }
    dend_31 { pt3dadd( 75.7835, 6.06357, -13.3456, 0.55 ) }
    dend_31 { pt3dadd( 77.2918, 5.63105, -14.321, 0.83 ) }
    dend_31 { pt3dadd( 79.689, 4.83904, -15.8706, 0.55 ) }
    dend_31 { pt3dadd( 82.0236, 3.92047, -17.317, 0.83 ) }
    dend_31 { pt3dadd( 83.9938, 3.02719, -18.489, 0.55 ) }
    dend_31 { pt3dadd( 85.7565, 2.23823, -19.427, 0.55 ) }
    dend_31 { pt3dadd( 86.7691, 1.82363, -19.8908, 0.83 ) }
    dend_31 { pt3dadd( 89.141, 0.834735, -20.8394, 0.28 ) }
    dend_31 { pt3dadd( 90.3326, 0.37722, -21.2206, 0.28 ) }
    dend_31 { pt3dadd( 91.4704, -0.128303, -21.6685, 0.28 ) }
    dend_31 { pt3dadd( 92.7056, -0.638694, -22.1511, 0.28 ) }
    dend_31 { pt3dadd( 94.6857, -1.40682, -22.9581, 0.28 ) }
    dend_31 { pt3dadd( 95.4853, -1.71098, -23.2555, 0.55 ) }
    dend_31 { pt3dadd( 97.4112, -2.46072, -23.7652, 0.55 ) }
    dend_31 { pt3dadd( 100.883, -3.88462, -24.5075, 0.55 ) }
    dend_31 { pt3dadd( 101.841, -4.31462, -24.6746, 0.55 ) }
    dend_31 { pt3dadd( 102.696, -4.73612, -24.7916, 0.83 ) }
    dend_31 { pt3dadd( 104.568, -5.62603, -24.8756, 0.55 ) }
    dend_31 { pt3dadd( 106.198, -6.4022, -24.9209, 0.55 ) }
    dend_31 { pt3dadd( 107.739, -7.13046, -24.9548, 0.55 ) }
    dend_31 { pt3dadd( 108.927, -7.7083, -25.0207, 0.55 ) }
    dend_31 { pt3dadd( 110.786, -8.74005, -25.2511, 0.55 ) }
    dend_31 { pt3dadd( 112.938, -10.131, -25.695, 0.55 ) }
    dend_31 { pt3dadd( 116.204, -12.6411, -26.7259, 0.55 ) }
    dend_31 { pt3dadd( 117.945, -14.2816, -27.4813, 0.55 ) }
    dend_31 { pt3dadd( 119.403, -15.9771, -28.287, 0.28 ) }
    dend_31 { pt3dadd( 119.818, -16.5884, -28.5818, 0.55 ) }
    dend_31 { pt3dadd( 120.678, -18.2684, -29.3681, 0.28 ) }
    dend_31 { pt3dadd( 121.345, -20.126, -30.1893, 0.55 ) }
    dend_31 { pt3dadd( 121.887, -22.4481, -31.0093, 0.55 ) }
    dend_31 { pt3dadd( 122.263, -23.9916, -31.4784, 0.28 ) }
    dend_31 { pt3dadd( 122.406, -24.5434, -31.6189, 0.55 ) }
    dend_31 { pt3dadd( 122.786, -25.9207, -31.9517, 0.28 ) }
    dend_31 { pt3dadd( 123.32, -27.7259, -32.3464, 0.55 ) }
    dend_31 { pt3dadd( 124.774, -32.1157, -33.2074, 0.55 ) }
    dend_31 { pt3dadd( 125.546, -34.3414, -33.6004, 0.55 ) }
    dend_31 { pt3dadd( 126.267, -36.3864, -33.9447, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 47.981, 13.6157, -4.57714, 0.55 ) }
    dend_30 { pt3dadd( 50.2238, 12.948, -3.29578, 0.55 ) }
    dend_30 { pt3dadd( 50.9403, 12.748, -2.9194, 0.55 ) }
    dend_30 { pt3dadd( 53.5867, 11.9433, -1.6684, 0.55 ) }
    dend_30 { pt3dadd( 56.5514, 11.0758, -0.209757, 0.55 ) }
    dend_30 { pt3dadd( 60.3562, 9.9142, 1.7425, 0.55 ) }
    dend_30 { pt3dadd( 61.4068, 9.59732, 2.27624, 0.55 ) }
    dend_30 { pt3dadd( 63.2813, 8.97537, 3.18751, 0.55 ) }
    dend_30 { pt3dadd( 65.3378, 8.36675, 4.13984, 0.55 ) }
    dend_30 { pt3dadd( 67.7311, 7.76142, 5.18313, 0.55 ) }
    dend_30 { pt3dadd( 69.991, 7.21466, 6.18669, 0.55 ) }
    dend_30 { pt3dadd( 71.2347, 6.98676, 6.71191, 0.55 ) }
    dend_30 { pt3dadd( 72.7002, 6.75578, 7.34419, 0.55 ) }
    dend_30 { pt3dadd( 74.5179, 6.52779, 8.12069, 0.83 ) }
    dend_30 { pt3dadd( 77.4757, 6.27923, 9.12622, 0.55 ) }
    dend_30 { pt3dadd( 79.4186, 6.08909, 9.67935, 0.83 ) }
    dend_30 { pt3dadd( 82.0943, 5.75932, 10.3151, 0.55 ) }
    dend_30 { pt3dadd( 82.9093, 5.62476, 10.4809, 0.55 ) }
    dend_30 { pt3dadd( 85.4182, 5.12175, 10.8952, 0.55 ) }
    dend_30 { pt3dadd( 89.86, 4.06395, 11.3605, 0.55 ) }
    dend_30 { pt3dadd( 93.0833, 3.16327, 11.5554, 0.55 ) }
    dend_30 { pt3dadd( 95.6225, 2.31851, 11.7107, 0.55 ) }
    dend_30 { pt3dadd( 98.1984, 1.29621, 11.888, 0.55 ) }
    dend_30 { pt3dadd( 98.7384, 1.0669, 11.9212, 0.28 ) }
    dend_30 { pt3dadd( 99.8272, 0.563619, 11.9664, 0.83 ) }
    dend_30 { pt3dadd( 104.291, -1.57385, 12.1463, 0.55 ) }
    dend_30 { pt3dadd( 107.409, -3.03822, 12.2183, 0.55 ) }
    dend_30 { pt3dadd( 109.983, -4.21065, 12.3661, 0.55 ) }
    dend_30 { pt3dadd( 111.52, -4.92206, 12.4657, 0.83 ) }
    dend_30 { pt3dadd( 112.733, -5.46723, 12.5542, 0.28 ) }
    dend_30 { pt3dadd( 113.833, -5.95543, 12.6257, 0.55 ) }
    dend_30 { pt3dadd( 122.779, -8.43764, 15.2579, 0.55 ) }
    dend_30 { pt3dadd( 131.916, -11.5135, 15.6705, 0.55 ) }
    dend_30 { pt3dadd( 141.205, -13.7548, 17.0096, 0.55 ) }
    dend_30 { pt3dadd( 149.47, -17.9827, 19.6421, 0.55 ) }
    dend_30 { pt3dadd( 157.01, -23.4677, 22.1269, 0.55 ) }
    dend_30 { pt3dadd( 164.871, -29.032, 21.5258, 0.55 ) }
    dend_30 { pt3dadd( 172.348, -34.6309, 19.1053, 0.55 ) }
    dend_30 { pt3dadd( 180.856, -38.5732, 16.8278, 0.55 ) }
    dend_30 { pt3dadd( 189.289, -42.922, 15.0683, 0.55 ) }
    dend_30 { pt3dadd( 198.195, -46.1214, 13.1859, 0.55 ) }
    dend_30 { pt3dadd( 207.213, -49.5047, 12.5989, 0.55 ) }
    dend_30 { pt3dadd( 215.444, -54.4769, 11.798, 0.55 ) }
    dend_30 { pt3dadd( 224.218, -58.4203, 12.5675, 0.55 ) }
    dend_30 { pt3dadd( 232.906, -61.6835, 15.2079, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.83848, -30.3903, 6.91293, 1.38 ) }
    dend_13 { pt3dadd( 2.30702, -33.171, 6.79708, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.83848, -30.3903, 6.91293, 0.55 ) }
    dend_12 { pt3dadd( -1.69785, -32.1471, 6.29591, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -2.61199, -34.3666, 5.63476, 0.55 ) }
    dend_12 { pt3dadd( -3.36212, -35.8603, 5.11317, 0.55 ) }
    dend_12 { pt3dadd( -3.90664, -37.1074, 4.54979, 0.55 ) }
    dend_12 { pt3dadd( -4.99371, -39.702, 3.14905, 0.55 ) }
    dend_12 { pt3dadd( -5.74221, -41.4436, 2.1275, 0.55 ) }
    dend_12 { pt3dadd( -6.37694, -43.0028, 1.17947, 0.55 ) }
    dend_12 { pt3dadd( -8.03428, -46.8217, -1.26729, 0.55 ) }
    dend_12 { pt3dadd( -10.0643, -51.264, -4.19179, 0.55 ) }
    dend_12 { pt3dadd( -11.6131, -54.6368, -6.50594, 0.55 ) }
    dend_12 { pt3dadd( -12.5773, -56.8434, -8.00257, 0.55 ) }
    dend_12 { pt3dadd( -13.6741, -59.4768, -9.70659, 0.55 ) }
    dend_12 { pt3dadd( -15.0371, -63.2033, -11.8088, 0.55 ) }
    dend_12 { pt3dadd( -15.8007, -65.799, -12.9789, 0.55 ) }
    dend_12 { pt3dadd( -16.7872, -69.489, -14.2363, 0.55 ) }
    dend_12 { pt3dadd( -17.55, -72.908, -15.1503, 0.55 ) }
    dend_12 { pt3dadd( -18.2383, -77.1209, -15.9953, 0.55 ) }
    dend_12 { pt3dadd( -18.8064, -82.0151, -16.6693, 0.55 ) }
    dend_12 { pt3dadd( -19.0084, -85.7075, -16.9077, 0.55 ) }
    dend_12 { pt3dadd( -19.0802, -87.5296, -16.86, 0.55 ) }
    dend_12 { pt3dadd( -19.1813, -91.7791, -16.4136, 0.55 ) }
    dend_12 { pt3dadd( -19.2802, -95.7469, -15.8712, 0.55 ) }
    dend_12 { pt3dadd( -19.389, -99.7197, -14.9669, 0.55 ) }
    dend_12 { pt3dadd( -19.5435, -102.004, -14.3612, 0.55 ) }
    dend_12 { pt3dadd( -20.1388, -109.066, -12.2535, 0.55 ) }
    dend_12 { pt3dadd( -20.1908, -109.586, -12.0929, 0.55 ) }
    dend_12 { pt3dadd( -20.5067, -112.767, -11.0115, 0.55 ) }
    dend_12 { pt3dadd( -21.3624, -118.495, -9.12429, 0.55 ) }
    dend_12 { pt3dadd( -21.5911, -120.41, -8.5912, 0.55 ) }
    dend_12 { pt3dadd( -21.7084, -123.406, -8.21364, 0.55 ) }
    dend_12 { pt3dadd( -21.5808, -124.512, -8.26144, 0.55 ) }
    dend_12 { pt3dadd( -20.605, -128.218, -8.89536, 0.55 ) }
    dend_12 { pt3dadd( -19.5654, -130.592, -9.64063, 0.55 ) }
    dend_12 { pt3dadd( -17.3652, -134.346, -11.401, 0.55 ) }
    dend_12 { pt3dadd( -14.3064, -138.906, -13.7388, 0.28 ) }
    dend_12 { pt3dadd( -13.443, -140.028, -14.4338, 0.55 ) }
    dend_12 { pt3dadd( -12.038, -141.726, -15.6105, 0.28 ) }
    dend_12 { pt3dadd( -11.8199, -141.982, -15.8007, 0.55 ) }
    dend_12 { pt3dadd( -10.7066, -143.388, -16.7464, 0.28 ) }
    dend_12 { pt3dadd( -10.4227, -143.871, -16.9947, 0.55 ) }
    dend_12 { pt3dadd( -9.28535, -146.402, -17.9167, 0.28 ) }
    dend_12 { pt3dadd( -8.93208, -147.268, -18.2413, 0.55 ) }
    dend_12 { pt3dadd( -8.02043, -149.78, -19.0814, 0.28 ) }
    dend_12 { pt3dadd( -7.73233, -150.57, -19.3415, 0.55 ) }
    dend_12 { pt3dadd( -6.78257, -153.301, -20.2156, 0.28 ) }
    dend_12 { pt3dadd( -6.33655, -154.556, -20.6191, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.3498, -91.9281, 72.7386, 0.55 ) }
    dend_10 { pt3dadd( -19.2945, -97.2654, 78.1101, 0.55 ) }
    dend_10 { pt3dadd( -22.9454, -101.833, 83.751, 0.55 ) }
    dend_10 { pt3dadd( -26.4533, -106.939, 89.0073, 0.55 ) }
    dend_10 { pt3dadd( -30.1103, -112.058, 94.1484, 0.55 ) }
    dend_10 { pt3dadd( -33.0502, -118.145, 98.6565, 0.55 ) }
    dend_10 { pt3dadd( -35.8615, -123.988, 103.551, 0.55 ) }
    dend_10 { pt3dadd( -37.9923, -131.131, 106.784, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -16.3498, -91.9281, 72.7386, 0.55 ) }
    dend_3 { pt3dadd( -16.014, -100.17, 80.9299, 0.55 ) }
    dend_3 { pt3dadd( -14.943, -109.668, 87.5457, 0.55 ) }
    dend_3 { pt3dadd( -15.7151, -119.366, 93.9093, 0.55 ) }
    dend_3 { pt3dadd( -16.9913, -129.667, 99.1434, 0.55 ) }
    dend_3 { pt3dadd( -17.8267, -139.894, 104.606, 0.55 ) }
    dend_3 { pt3dadd( -18.6838, -149.697, 110.794, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -35.2898, 32.4845, -7.87608, 0.83 ) }
    dend_60 { pt3dadd( -35.1291, 33.7547, -10.2189, 0.83 ) }
    dend_60 { pt3dadd( -34.7906, 36.9122, -15.5247, 0.55 ) }
    dend_60 { pt3dadd( -34.6136, 38.3104, -17.662, 0.83 ) }
    dend_60 { pt3dadd( -34.3917, 39.8377, -19.8164, 0.55 ) }
    dend_60 { pt3dadd( -34.1105, 41.4777, -21.7483, 0.55 ) }
    dend_60 { pt3dadd( -33.9367, 42.3321, -22.5906, 0.28 ) }
    dend_60 { pt3dadd( -33.8323, 42.9429, -22.9737, 0.55 ) }
    dend_60 { pt3dadd( -33.325, 45.0894, -23.7914, 0.28 ) }
    dend_60 { pt3dadd( -33.0749, 46.0166, -24.0978, 0.55 ) }
    dend_60 { pt3dadd( -32.2204, 49.2761, -25.0216, 0.28 ) }
    dend_60 { pt3dadd( -31.5947, 51.887, -25.6531, 0.55 ) }
    dend_60 { pt3dadd( -30.7914, 56.0143, -26.4771, 0.28 ) }
    dend_60 { pt3dadd( -30.1994, 59.671, -27.1096, 0.28 ) }
    dend_60 { pt3dadd( -29.9783, 61.7385, -27.4032, 0.55 ) }
    dend_60 { pt3dadd( -29.8641, 64.2041, -27.723, 0.28 ) }
    dend_60 { pt3dadd( -29.8823, 65.3915, -27.846, 0.55 ) }
    dend_60 { pt3dadd( -30.0965, 68.1697, -28.228, 0.28 ) }
    dend_60 { pt3dadd( -30.3775, 70.0103, -28.5531, 0.28 ) }
    dend_60 { pt3dadd( -30.7017, 71.8089, -28.9186, 0.28 ) }
    dend_60 { pt3dadd( -30.8379, 72.7552, -29.1219, 0.55 ) }
    dend_60 { pt3dadd( -31.2038, 76.5454, -30.0689, 0.28 ) }
    dend_60 { pt3dadd( -31.5045, 81.0034, -31.2988, 0.55 ) }
    dend_60 { pt3dadd( -31.587, 82.5398, -31.7337, 0.55 ) }
    dend_60 { pt3dadd( -31.6879, 84.0899, -32.1323, 0.55 ) }
    dend_60 { pt3dadd( -32.0868, 87.3851, -32.9998, 0.55 ) }
    dend_60 { pt3dadd( -32.4967, 89.5486, -33.5896, 0.28 ) }
    dend_60 { pt3dadd( -32.7487, 90.3725, -33.8061, 0.55 ) }
    dend_60 { pt3dadd( -33.5777, 92.6264, -34.3176, 0.28 ) }
    dend_60 { pt3dadd( -34.5748, 95.0115, -34.9361, 0.55 ) }
    dend_60 { pt3dadd( -36.3493, 98.4339, -35.8968, 0.28 ) }
    dend_60 { pt3dadd( -37.2522, 99.8632, -36.3145, 0.28 ) }
    dend_60 { pt3dadd( -38.7987, 101.824, -37.0424, 0.55 ) }
    dend_60 { pt3dadd( -40.5678, 103.851, -37.8819, 0.28 ) }
    dend_60 { pt3dadd( -40.897, 104.169, -38.0205, 0.55 ) }
    dend_60 { pt3dadd( -42.0996, 105.184, -38.4774, 0.28 ) }
    dend_60 { pt3dadd( -46.2637, 108.451, -39.909, 0.55 ) }
    dend_60 { pt3dadd( -52.165, 112.433, -41.9792, 0.28 ) }
    dend_60 { pt3dadd( -53.2772, 113.085, -42.4068, 0.55 ) }
    dend_60 { pt3dadd( -56.3552, 114.753, -43.5998, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -57.6568, 115.429, -44.1293, 0.28 ) }
    dend_60 { pt3dadd( -58.8024, 115.976, -44.6328, 0.55 ) }
    dend_60 { pt3dadd( -62.2529, 117.148, -46.2458, 0.28 ) }
    dend_60 { pt3dadd( -64.6993, 117.771, -47.2379, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -35.2898, 32.4845, -7.87608, 0.55 ) }
    dend_57 { pt3dadd( -35.4276, 33.9236, -8.27277, 0.55 ) }
    dend_57 { pt3dadd( -35.5202, 34.7871, -8.42461, 0.28 ) }
    dend_57 { pt3dadd( -35.6895, 35.4363, -8.36897, 0.55 ) }
    dend_57 { pt3dadd( -36.078, 36.927, -8.2412, 0.28 ) }
    dend_57 { pt3dadd( -36.3509, 37.9741, -8.15145, 0.55 ) }
    dend_57 { pt3dadd( -36.854, 39.9044, -7.98599, 0.28 ) }
    dend_57 { pt3dadd( -37.2004, 40.9721, -7.71582, 0.55 ) }
    dend_57 { pt3dadd( -38.613, 43.6881, -6.16459, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -121.948, -71.6597, 45.1228, 0.55 ) }
    dend_52 { pt3dadd( -125.157, -77.43, 46.9765, 0.55 ) }
    dend_52 { pt3dadd( -127.303, -83.7747, 48.4524, 0.55 ) }
    dend_52 { pt3dadd( -129.228, -90.3571, 48.4212, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -121.948, -71.6597, 45.1228, 0.55 ) }
    dend_49 { pt3dadd( -127.417, -79.9945, 46.0108, 0.55 ) }
    dend_49 { pt3dadd( -132.134, -88.8178, 45.73, 0.55 ) }
    dend_49 { pt3dadd( -136.478, -97.8215, 45.2369, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -128.012, 23.2283, 76.1678, 0.55 ) }
    dend_47 { pt3dadd( -136.701, 26.0639, 84.9913, 0.55 ) }
    dend_47 { pt3dadd( -146.62, 29.3852, 92.2, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -128.012, 23.2283, 76.1678, 0.55 ) }
    dend_46 { pt3dadd( -134.775, 23.345, 81.8666, 0.55 ) }
    dend_46 { pt3dadd( -142.14, 24.4266, 86.644, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 70.371, -36.2707, -120.509, 0.28 ) }
    dend_39 { pt3dadd( 76.2352, -38.1295, -134.885, 0.28 ) }
    dend_39 { pt3dadd( 76.8236, -38.405, -136.194, 0.55 ) }
    dend_39 { pt3dadd( 77.8169, -38.8703, -138.404, 0.28 ) }
    dend_39 { pt3dadd( 78.6533, -39.2621, -140.265, 0.28 ) }
    dend_39 { pt3dadd( 79.7604, -39.7806, -142.729, 0.55 ) }
    dend_39 { pt3dadd( 81.2201, -40.4644, -145.977, 0.55 ) }
    dend_39 { pt3dadd( 83.3537, -42.3552, -148.124, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 70.371, -36.2707, -120.509, 0.55 ) }
    dend_36 { pt3dadd( 70.5845, -36.6099, -121.645, 0.55 ) }
    dend_36 { pt3dadd( 70.622, -36.7308, -122.147, 0.28 ) }
    dend_36 { pt3dadd( 70.6607, -36.9147, -123.016, 0.55 ) }
    dend_36 { pt3dadd( 70.746, -37.3199, -124.931, 0.28 ) }
    dend_36 { pt3dadd( 70.8051, -37.6008, -126.258, 0.55 ) }
    dend_36 { pt3dadd( 70.9052, -38.0765, -128.507, 0.28 ) }
    dend_36 { pt3dadd( 71.0152, -38.5476, -131.378, 0.28 ) }
    dend_36 { pt3dadd( 71.0364, -38.7352, -132.71, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 126.267, -36.3864, -33.9447, 0.28 ) }
    dend_33 { pt3dadd( 127.166, -37.9766, -33.7514, 0.28 ) }
    dend_33 { pt3dadd( 128.297, -40.0866, -33.3281, 0.28 ) }
    dend_33 { pt3dadd( 129.01, -41.4584, -33.0, 0.55 ) }
    dend_33 { pt3dadd( 129.45, -42.2229, -32.784, 0.28 ) }
    dend_33 { pt3dadd( 129.684, -42.6345, -32.6639, 0.28 ) }
    dend_33 { pt3dadd( 130.841, -44.6646, -32.1009, 0.55 ) }
    dend_33 { pt3dadd( 131.112, -45.1216, -31.9197, 0.28 ) }
    dend_33 { pt3dadd( 131.74, -46.3246, -31.3637, 0.55 ) }
    dend_33 { pt3dadd( 132.273, -47.3662, -30.9213, 0.28 ) }
    dend_33 { pt3dadd( 132.745, -48.2153, -30.5779, 0.55 ) }
    dend_33 { pt3dadd( 133.293, -49.225, -30.2269, 0.55 ) }
    dend_33 { pt3dadd( 134.159, -50.8141, -29.8617, 0.55 ) }
    dend_33 { pt3dadd( 134.367, -51.2026, -29.7855, 0.55 ) }
    dend_33 { pt3dadd( 135.102, -52.6483, -29.5159, 0.28 ) }
    dend_33 { pt3dadd( 135.382, -53.2362, -29.4205, 0.55 ) }
    dend_33 { pt3dadd( 135.782, -53.9906, -29.302, 0.28 ) }
    dend_33 { pt3dadd( 136.344, -55.0577, -29.1809, 0.55 ) }
    dend_33 { pt3dadd( 137.278, -56.7266, -29.2273, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 126.267, -36.3864, -33.9447, 0.55 ) }
    dend_32 { pt3dadd( 123.712, -36.1088, -33.8182, 0.55 ) }
    dend_32 { pt3dadd( 121.636, -35.8834, -33.7154, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.30702, -33.171, 6.79708, 0.83 ) }
    dend_17 { pt3dadd( 2.44277, -33.3954, 6.8126, 0.83 ) }
    dend_17 { pt3dadd( 3.91131, -35.3506, 7.15623, 0.83 ) }
    dend_17 { pt3dadd( 5.22978, -37.0628, 7.33832, 0.55 ) }
    dend_17 { pt3dadd( 6.28165, -38.4287, 7.48359, 0.55 ) }
    dend_17 { pt3dadd( 8.51742, -41.3321, 7.79235, 0.83 ) }
    dend_17 { pt3dadd( 11.2292, -44.8537, 8.16687, 0.55 ) }
    dend_17 { pt3dadd( 12.6891, -46.6918, 8.41456, 0.83 ) }
    dend_17 { pt3dadd( 15.2002, -49.593, 9.00542, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.30702, -33.171, 6.79708, 0.55 ) }
    dend_14 { pt3dadd( 2.54984, -34.1762, 3.96509, 0.55 ) }
    dend_14 { pt3dadd( 2.81048, -35.2551, 0.925291, 0.55 ) }
    dend_14 { pt3dadd( 3.11816, -36.5288, -2.66322, 0.55 ) }
    dend_14 { pt3dadd( 3.49179, -38.0755, -7.02083, 0.55 ) }
    dend_14 { pt3dadd( 3.70382, -38.9531, -9.49362, 0.55 ) }
    dend_14 { pt3dadd( 3.74641, -39.1294, -9.99037, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.6838, -149.697, 110.794, 0.55 ) }
    dend_7 { pt3dadd( -18.7009, -156.66, 115.722, 0.55 ) }
    dend_7 { pt3dadd( -17.5998, -164.096, 119.754, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.6838, -149.697, 110.794, 0.55 ) }
    dend_4 { pt3dadd( -19.2109, -159.643, 116.626, 0.55 ) }
    dend_4 { pt3dadd( -20.3537, -169.43, 122.636, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -38.613, 43.6881, -6.16459, 0.28 ) }
    dend_59 { pt3dadd( -40.029, 44.9282, -4.76965, 0.28 ) }
    dend_59 { pt3dadd( -40.5721, 45.3895, -4.17326, 0.55 ) }
    dend_59 { pt3dadd( -42.132, 46.7219, -2.40747, 0.28 ) }
    dend_59 { pt3dadd( -42.8962, 47.3931, -1.61861, 0.55 ) }
    dend_59 { pt3dadd( -44.9718, 49.2198, 0.433655, 0.28 ) }
    dend_59 { pt3dadd( -47.0814, 51.0765, 2.51951, 0.55 ) }
    dend_59 { pt3dadd( -50.5761, 53.9516, 5.98215, 0.28 ) }
    dend_59 { pt3dadd( -51.3203, 54.5701, 6.72105, 0.55 ) }
    dend_59 { pt3dadd( -52.9493, 56.0443, 8.29742, 0.28 ) }
    dend_59 { pt3dadd( -53.5847, 56.6611, 8.92172, 0.55 ) }
    dend_59 { pt3dadd( -60.5537, 60.5553, 13.8868, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -67.872, 65.6939, 16.7884, 0.55 ) }
    dend_59 { pt3dadd( -74.4043, 70.9475, 21.0442, 0.55 ) }
    dend_59 { pt3dadd( -79.7108, 77.3628, 25.4109, 0.55 ) }
    dend_59 { pt3dadd( -85.8863, 83.4834, 28.9864, 0.55 ) }
    dend_59 { pt3dadd( -92.9381, 88.0746, 33.1787, 0.55 ) }
    dend_59 { pt3dadd( -99.5693, 91.8067, 38.6997, 0.55 ) }
    dend_59 { pt3dadd( -105.512, 94.4727, 45.4788, 0.55 ) }
    dend_59 { pt3dadd( -111.437, 97.7028, 52.0243, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -38.613, 43.6881, -6.16459, 0.55 ) }
    dend_58 { pt3dadd( -42.3821, 42.5421, -4.61547, 0.55 ) }
    dend_58 { pt3dadd( -44.342, 41.8807, -3.81222, 0.28 ) }
    dend_58 { pt3dadd( -45.8006, 41.3886, -3.21447, 0.55 ) }
    dend_58 { pt3dadd( -47.0162, 40.9784, -2.71628, 0.28 ) }
    dend_58 { pt3dadd( -47.8677, 40.6911, -2.36733, 0.55 ) }
    dend_58 { pt3dadd( -50.2156, 39.8988, -1.4051, 0.28 ) }
    dend_58 { pt3dadd( -51.7786, 39.2328, -0.959924, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -129.228, -90.3571, 48.4212, 0.55 ) }
    dend_54 { pt3dadd( -132.23, -100.38, 50.7283, 0.55 ) }
    dend_54 { pt3dadd( -134.537, -110.308, 54.0288, 0.55 ) }
    dend_54 { pt3dadd( -136.87, -120.684, 55.3265, 0.55 ) }
    dend_54 { pt3dadd( -139.64, -130.602, 58.2842, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -129.228, -90.3571, 48.4212, 0.55 ) }
    dend_53 { pt3dadd( -134.623, -96.1678, 45.2678, 0.55 ) }
    dend_53 { pt3dadd( -140.152, -101.076, 41.0087, 0.55 ) }
    dend_53 { pt3dadd( -145.806, -106.732, 38.0322, 0.55 ) }
    dend_53 { pt3dadd( -152.907, -111.04, 36.0763, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -136.478, -97.8215, 45.2369, 0.55 ) }
    dend_51 { pt3dadd( -141.782, -103.417, 41.9419, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -136.478, -97.8215, 45.2369, 0.55 ) }
    dend_50 { pt3dadd( -138.65, -105.671, 50.8132, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 83.3537, -42.3552, -148.124, 0.28 ) }
    dend_41 { pt3dadd( 85.4392, -43.3088, -149.912, 0.28 ) }
    dend_41 { pt3dadd( 86.408, -43.7517, -150.742, 0.55 ) }
    dend_41 { pt3dadd( 88.2553, -44.5963, -152.325, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 83.3537, -42.3552, -148.124, 0.55 ) }
    dend_40 { pt3dadd( 82.495, -42.8855, -150.132, 0.55 ) }
    dend_40 { pt3dadd( 80.7771, -43.9462, -154.149, 0.28 ) }
    dend_40 { pt3dadd( 80.2176, -44.2916, -155.458, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 71.0364, -38.7352, -132.71, 0.28 ) }
    dend_38 { pt3dadd( 71.2918, -40.4885, -137.226, 0.28 ) }
    dend_38 { pt3dadd( 71.4182, -41.3567, -139.463, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 71.0364, -38.7352, -132.71, 0.55 ) }
    dend_37 { pt3dadd( 68.4719, -39.0023, -132.103, 0.55 ) }
    dend_37 { pt3dadd( 61.321, -39.7473, -130.41, 0.28 ) }
    dend_37 { pt3dadd( 59.6222, -39.9243, -130.008, 0.55 ) }
    dend_37 { pt3dadd( 54.9752, -40.4084, -128.908, 0.28 ) }
    dend_37 { pt3dadd( 51.9798, -40.7204, -128.199, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.2002, -49.593, 9.00542, 0.83 ) }
    dend_23 { pt3dadd( 15.2672, -49.888, 8.98915, 0.83 ) }
    dend_23 { pt3dadd( 16.1821, -53.7374, 8.89352, 0.83 ) }
    dend_23 { pt3dadd( 16.5844, -56.6405, 8.96021, 0.83 ) }
    dend_23 { pt3dadd( 16.7249, -59.4525, 9.27645, 0.83 ) }
    dend_23 { pt3dadd( 16.7292, -63.1973, 9.95295, 0.83 ) }
    dend_23 { pt3dadd( 16.5874, -67.5176, 10.8684, 0.83 ) }
    dend_23 { pt3dadd( 16.4025, -72.3295, 12.1443, 0.83 ) }
    dend_23 { pt3dadd( 16.1843, -76.995, 13.5976, 0.83 ) }
    dend_23 { pt3dadd( 15.5717, -82.7657, 15.1824, 0.83 ) }
    dend_23 { pt3dadd( 15.1749, -85.4373, 15.7358, 0.83 ) }
    dend_23 { pt3dadd( 14.892, -87.4521, 16.0264, 0.83 ) }
    dend_23 { pt3dadd( 14.2842, -91.3292, 16.4894, 0.83 ) }
    dend_23 { pt3dadd( 13.8539, -94.8013, 16.7316, 0.83 ) }
    dend_23 { pt3dadd( 13.4772, -102.199, 16.5141, 0.83 ) }
    dend_23 { pt3dadd( 13.4131, -106.261, 15.8885, 0.83 ) }
    dend_23 { pt3dadd( 13.4012, -110.015, 15.046, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.2002, -49.593, 9.00542, 0.55 ) }
    dend_18 { pt3dadd( 14.3118, -52.0962, 9.101, 0.55 ) }
    dend_18 { pt3dadd( 13.6183, -53.9077, 9.29632, 0.55 ) }
    dend_18 { pt3dadd( 13.1839, -55.0565, 9.53805, 0.55 ) }
    dend_18 { pt3dadd( 12.5558, -56.836, 10.1, 0.55 ) }
    dend_18 { pt3dadd( 11.361, -60.3375, 11.4501, 0.55 ) }
    dend_18 { pt3dadd( 10.3829, -62.9723, 12.7549, 0.55 ) }
    dend_18 { pt3dadd( 9.56039, -65.0704, 14.0242, 0.55 ) }
    dend_18 { pt3dadd( 8.65118, -67.1853, 15.4468, 0.55 ) }
    dend_18 { pt3dadd( 7.86593, -68.935, 16.7155, 0.28 ) }
    dend_18 { pt3dadd( 7.16576, -70.3537, 17.958, 0.55 ) }
    dend_18 { pt3dadd( 5.76526, -72.9184, 20.5745, 0.55 ) }
    dend_18 { pt3dadd( 4.78823, -74.4881, 22.3357, 0.55 ) }
    dend_18 { pt3dadd( 4.23261, -75.369, 23.3117, 0.55 ) }
    dend_18 { pt3dadd( 3.53391, -76.4165, 24.3979, 0.83 ) }
    dend_18 { pt3dadd( 1.47207, -79.5384, 27.404, 0.28 ) }
    dend_18 { pt3dadd( 0.795876, -80.5732, 28.3707, 0.55 ) }
    dend_18 { pt3dadd( -0.355357, -82.4398, 30.0647, 0.28 ) }
    dend_18 { pt3dadd( -0.717353, -83.0125, 30.6293, 0.55 ) }
    dend_18 { pt3dadd( -1.48675, -84.3518, 31.9415, 0.28 ) }
    dend_18 { pt3dadd( -1.90879, -85.1165, 32.6315, 0.55 ) }
    dend_18 { pt3dadd( -3.31563, -87.6623, 34.1718, 0.55 ) }
    dend_18 { pt3dadd( -5.88733, -94.197, 41.2762, 0.55 ) }
    dend_18 { pt3dadd( -8.09181, -100.343, 48.8363, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.74641, -39.1294, -9.99037, 0.55 ) }
    dend_16 { pt3dadd( 4.04274, -40.343, -13.9251, 0.55 ) }
    dend_16 { pt3dadd( 4.09477, -40.6355, -15.0623, 0.55 ) }
    dend_16 { pt3dadd( 4.16603, -41.3749, -17.8659, 0.55 ) }
    dend_16 { pt3dadd( 4.16654, -42.8673, -23.8798, 0.28 ) }
    dend_16 { pt3dadd( 4.13367, -43.0762, -24.7474, 0.55 ) }
    dend_16 { pt3dadd( 3.92238, -44.0313, -28.2917, 0.55 ) }
    dend_16 { pt3dadd( 3.36125, -45.3616, -32.9005, 0.55 ) }
    dend_16 { pt3dadd( 3.1164, -45.8274, -34.6419, 0.28 ) }
    dend_16 { pt3dadd( 2.8407, -46.1541, -36.1222, 0.28 ) }
    dend_16 { pt3dadd( 2.15429, -46.6855, -38.4567, 0.55 ) }
    dend_16 { pt3dadd( 1.37593, -47.2076, -41.3754, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 0.676461, -47.4835, -44.1159, 0.55 ) }
    dend_16 { pt3dadd( 0.0951765, -47.5468, -46.216, 0.55 ) }
    dend_16 { pt3dadd( -0.286081, -47.4825, -47.6937, 0.55 ) }
    dend_16 { pt3dadd( -1.34095, -47.1202, -52.1189, 0.55 ) }
    dend_16 { pt3dadd( -2.53139, -46.4772, -56.7356, 0.55 ) }
    dend_16 { pt3dadd( -3.06125, -46.1247, -58.6185, 0.28 ) }
    dend_16 { pt3dadd( -3.54167, -45.8126, -60.4264, 0.55 ) }
    dend_16 { pt3dadd( -4.52125, -45.3825, -64.0654, 0.28 ) }
    dend_16 { pt3dadd( -4.85588, -45.2685, -65.2817, 0.83 ) }
    dend_16 { pt3dadd( -5.58088, -45.0399, -67.4625, 0.28 ) }
    dend_16 { pt3dadd( -6.22778, -44.9915, -68.9031, 0.55 ) }
    dend_16 { pt3dadd( -7.19062, -44.9951, -70.9639, 0.28 ) }
    dend_16 { pt3dadd( -7.59463, -44.9875, -71.7663, 0.55 ) }
    dend_16 { pt3dadd( -8.39974, -45.0064, -73.1958, 0.55 ) }
    dend_16 { pt3dadd( -9.70031, -44.8114, -75.302, 0.55 ) }
    dend_16 { pt3dadd( -10.6187, -44.5967, -76.6217, 0.28 ) }
    dend_16 { pt3dadd( -11.441, -44.2804, -77.6224, 0.55 ) }
    dend_16 { pt3dadd( -12.4212, -43.7341, -78.8119, 0.28 ) }
    dend_16 { pt3dadd( -12.5786, -43.6253, -79.0138, 0.55 ) }
    dend_16 { pt3dadd( -13.7732, -42.5539, -81.1474, 0.28 ) }
    dend_16 { pt3dadd( -14.5257, -41.7365, -82.8163, 0.55 ) }
    dend_16 { pt3dadd( -15.3299, -40.5078, -85.226, 0.83 ) }
    dend_16 { pt3dadd( -15.8607, -39.4469, -87.3486, 0.28 ) }
    dend_16 { pt3dadd( -15.9667, -39.1737, -87.9279, 0.55 ) }
    dend_16 { pt3dadd( -16.6412, -37.1178, -92.5032, 0.28 ) }
    dend_16 { pt3dadd( -16.7167, -36.7647, -93.3452, 0.55 ) }
    dend_16 { pt3dadd( -16.8709, -35.5988, -95.9111, 0.28 ) }
    dend_16 { pt3dadd( -16.9082, -35.2988, -96.5758, 0.55 ) }
    dend_16 { pt3dadd( -17.0626, -34.5216, -98.2256, 0.28 ) }
    dend_16 { pt3dadd( -17.2104, -33.9644, -99.3577, 0.55 ) }
    dend_16 { pt3dadd( -17.7416, -32.7356, -101.69, 0.28 ) }
    dend_16 { pt3dadd( -18.0816, -32.0861, -103.043, 0.55 ) }
    dend_16 { pt3dadd( -18.8864, -30.8543, -105.84, 0.28 ) }
    dend_16 { pt3dadd( -19.1312, -30.5265, -106.664, 0.55 ) }
    dend_16 { pt3dadd( -19.5375, -30.0998, -107.927, 0.28 ) }
    dend_16 { pt3dadd( -19.9142, -29.7434, -108.965, 0.55 ) }
    dend_16 { pt3dadd( -20.778, -29.0357, -111.036, 0.28 ) }
    dend_16 { pt3dadd( -21.0509, -28.8369, -111.646, 0.55 ) }
    dend_16 { pt3dadd( -23.2292, -27.2852, -116.035, 0.28 ) }
    dend_16 { pt3dadd( -24.0957, -26.6405, -117.481, 0.55 ) }
    dend_16 { pt3dadd( -25.7739, -25.3691, -119.936, 0.28 ) }
    dend_16 { pt3dadd( -26.5604, -24.7496, -121.016, 0.55 ) }
    dend_16 { pt3dadd( -28.4742, -23.3578, -123.373, 0.28 ) }
    dend_16 { pt3dadd( -29.2045, -22.8952, -124.204, 0.55 ) }
    dend_16 { pt3dadd( -31.9591, -21.5675, -127.057, 0.28 ) }
    dend_16 { pt3dadd( -33.1028, -21.2103, -128.232, 0.55 ) }
    dend_16 { pt3dadd( -34.7255, -21.068, -129.882, 0.55 ) }
    dend_16 { pt3dadd( -35.7395, -21.0693, -130.872, 0.55 ) }
    dend_16 { pt3dadd( -37.9461, -21.1552, -132.723, 0.28 ) }
    dend_16 { pt3dadd( -40.2299, -21.2758, -134.411, 0.28 ) }
    dend_16 { pt3dadd( -42.177, -21.3709, -135.766, 0.55 ) }
    dend_16 { pt3dadd( -44.7738, -21.257, -137.184, 0.28 ) }
    dend_16 { pt3dadd( -46.189, -21.0341, -137.739, 0.55 ) }
    dend_16 { pt3dadd( -49.7975, -19.9792, -138.796, 0.28 ) }
    dend_16 { pt3dadd( -51.9178, -19.1108, -139.002, 0.55 ) }
    dend_16 { pt3dadd( -53.4361, -18.382, -138.929, 0.28 ) }
    dend_16 { pt3dadd( -55.3031, -17.5683, -138.578, 0.55 ) }
    dend_16 { pt3dadd( -57.7423, -16.4969, -137.967, 0.28 ) }
    dend_16 { pt3dadd( -58.663, -16.1259, -137.743, 0.55 ) }
    dend_16 { pt3dadd( -63.2325, -14.5155, -136.933, 0.28 ) }
    dend_16 { pt3dadd( -64.7669, -14.0178, -136.671, 0.55 ) }
    dend_16 { pt3dadd( -68.4411, -12.9418, -135.988, 0.28 ) }
    dend_16 { pt3dadd( -70.4364, -12.3753, -135.619, 0.55 ) }
    dend_16 { pt3dadd( -72.0761, -11.9118, -135.317, 0.55 ) }
    dend_16 { pt3dadd( -74.0182, -11.3687, -134.992, 0.28 ) }
    dend_16 { pt3dadd( -74.9746, -11.0925, -134.938, 0.55 ) }
    dend_16 { pt3dadd( -78.1175, -10.0797, -134.898, 0.28 ) }
    dend_16 { pt3dadd( -79.7834, -9.3944, -134.852, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.74641, -39.1294, -9.99037, 0.55 ) }
    dend_15 { pt3dadd( 4.78938, -39.2115, -10.4126, 0.55 ) }
    dend_15 { pt3dadd( 5.84511, -39.1707, -10.8083, 0.55 ) }
    dend_15 { pt3dadd( 7.1793, -39.0218, -11.235, 0.55 ) }
    dend_15 { pt3dadd( 8.27481, -38.8103, -11.5363, 0.55 ) }
    dend_15 { pt3dadd( 15.5253, -36.6646, -12.9808, 0.55 ) }
    dend_15 { pt3dadd( 17.1532, -36.0043, -13.3249, 0.55 ) }
    dend_15 { pt3dadd( 19.5506, -34.8633, -13.879, 0.55 ) }
    dend_15 { pt3dadd( 21.2449, -34.0012, -14.2811, 0.55 ) }
    dend_15 { pt3dadd( 22.8879, -33.068, -14.638, 0.28 ) }
    dend_15 { pt3dadd( 25.3997, -31.4921, -15.0692, 0.55 ) }
    dend_15 { pt3dadd( 29.1163, -29.0313, -15.5128, 0.28 ) }
    dend_15 { pt3dadd( 29.4552, -28.8807, -15.6283, 0.55 ) }
    dend_15 { pt3dadd( 31.5435, -28.368, -16.9512, 0.28 ) }
    dend_15 { pt3dadd( 32.8108, -28.1446, -18.0798, 0.55 ) }
    dend_15 { pt3dadd( 34.0807, -28.0443, -19.43, 0.55 ) }
    dend_15 { pt3dadd( 36.3421, -28.0349, -21.8852, 0.55 ) }
    dend_15 { pt3dadd( 40.7964, -28.0606, -26.6901, 0.55 ) }
    dend_15 { pt3dadd( 43.8472, -28.117, -29.8622, 0.55 ) }
    dend_15 { pt3dadd( 44.9298, -28.1467, -30.9283, 0.55 ) }
    dend_15 { pt3dadd( 52.2013, -28.2443, -37.7664, 0.55 ) }
    dend_15 { pt3dadd( 54.2438, -28.2228, -39.5349, 0.55 ) }
    dend_15 { pt3dadd( 55.4636, -28.2017, -40.4408, 0.55 ) }
    dend_15 { pt3dadd( 58.4965, -28.2141, -42.3018, 0.55 ) }
    dend_15 { pt3dadd( 66.0666, -28.6269, -46.3293, 0.55 ) }
    dend_15 { pt3dadd( 68.1592, -28.8215, -47.3244, 0.28 ) }
    dend_15 { pt3dadd( 69.3981, -28.9811, -47.7992, 0.55 ) }
    dend_15 { pt3dadd( 71.2538, -29.2916, -48.4661, 0.28 ) }
    dend_15 { pt3dadd( 72.0428, -29.4918, -48.6807, 0.55 ) }
    dend_15 { pt3dadd( 74.5159, -30.3926, -48.7138, 0.28 ) }
    dend_15 { pt3dadd( 76.0378, -31.663, -47.8042, 0.55 ) }
    dend_15 { pt3dadd( 76.9181, -32.5791, -47.1969, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 77.6631, -33.6009, -46.5373, 0.55 ) }
    dend_15 { pt3dadd( 78.2802, -34.7257, -45.8898, 0.28 ) }
    dend_15 { pt3dadd( 78.5593, -35.3091, -45.6176, 0.55 ) }
    dend_15 { pt3dadd( 79.1695, -36.8441, -44.9219, 0.28 ) }
    dend_15 { pt3dadd( 79.3715, -37.3036, -44.7966, 0.55 ) }
    dend_15 { pt3dadd( 80.6165, -39.9362, -44.2085, 0.28 ) }
    dend_15 { pt3dadd( 81.3232, -41.1487, -44.0445, 0.55 ) }
    dend_15 { pt3dadd( 83.102, -43.7259, -43.8766, 0.28 ) }
    dend_15 { pt3dadd( 83.8602, -44.6699, -43.8778, 0.55 ) }
    dend_15 { pt3dadd( 86.5795, -47.7555, -43.9618, 0.28 ) }
    dend_15 { pt3dadd( 87.2662, -48.5047, -44.0064, 0.55 ) }
    dend_15 { pt3dadd( 89.4411, -50.8811, -44.265, 0.28 ) }
    dend_15 { pt3dadd( 89.8945, -51.4415, -44.3105, 0.55 ) }
    dend_15 { pt3dadd( 91.0422, -52.927, -44.4521, 0.28 ) }
    dend_15 { pt3dadd( 91.77, -53.7866, -44.5999, 0.55 ) }
    dend_15 { pt3dadd( 92.5541, -54.6269, -44.7829, 0.55 ) }
    dend_15 { pt3dadd( 94.1109, -56.3037, -45.1365, 0.28 ) }
    dend_15 { pt3dadd( 95.2367, -57.3304, -45.3944, 0.55 ) }
    dend_15 { pt3dadd( 98.8802, -59.8384, -46.2104, 0.28 ) }
    dend_15 { pt3dadd( 100.331, -60.6348, -46.5596, 0.55 ) }
    dend_15 { pt3dadd( 101.333, -61.1342, -46.7815, 0.28 ) }
    dend_15 { pt3dadd( 102.349, -61.5823, -46.9885, 0.55 ) }
    dend_15 { pt3dadd( 105.486, -62.8149, -47.5643, 0.28 ) }
    dend_15 { pt3dadd( 107.846, -63.7747, -47.9505, 0.55 ) }
    dend_15 { pt3dadd( 111.786, -65.6309, -48.3786, 0.28 ) }
    dend_15 { pt3dadd( 113.026, -66.2074, -48.508, 0.55 ) }
    dend_15 { pt3dadd( 115.341, -67.2595, -48.5978, 0.28 ) }
    dend_15 { pt3dadd( 116.092, -67.6038, -48.5793, 0.55 ) }
    dend_15 { pt3dadd( 117.233, -68.1536, -48.3781, 0.28 ) }
    dend_15 { pt3dadd( 118.203, -68.6144, -48.1295, 0.55 ) }
    dend_15 { pt3dadd( 120.71, -69.7405, -47.2266, 0.28 ) }
    dend_15 { pt3dadd( 123.562, -70.918, -46.1475, 0.28 ) }
    dend_15 { pt3dadd( 124.955, -71.451, -45.5112, 0.28 ) }
    dend_15 { pt3dadd( 126.403, -71.942, -44.9453, 0.55 ) }
    dend_15 { pt3dadd( 128.523, -72.5623, -44.1245, 0.28 ) }
    dend_15 { pt3dadd( 129.455, -72.8242, -43.7417, 0.83 ) }
    dend_15 { pt3dadd( 131.788, -73.5253, -42.6852, 0.28 ) }
    dend_15 { pt3dadd( 132.829, -73.8521, -42.278, 0.55 ) }
    dend_15 { pt3dadd( 137.517, -75.4593, -40.6767, 0.28 ) }
    dend_15 { pt3dadd( 139.953, -76.2877, -40.0385, 0.28 ) }
    dend_15 { pt3dadd( 141.776, -76.8887, -39.6713, 0.55 ) }
    dend_15 { pt3dadd( 142.891, -77.2582, -39.5555, 0.55 ) }
    dend_15 { pt3dadd( 145.94, -78.2722, -39.4328, 0.28 ) }
    dend_15 { pt3dadd( 148.835, -79.3288, -39.4091, 0.55 ) }
    dend_15 { pt3dadd( 151.471, -80.3595, -39.3891, 0.28 ) }
    dend_15 { pt3dadd( 153.9, -81.3199, -39.4674, 0.55 ) }
    dend_15 { pt3dadd( 155.904, -82.094, -39.5227, 0.28 ) }
    dend_15 { pt3dadd( 157.514, -82.6308, -39.4994, 0.55 ) }
    dend_15 { pt3dadd( 161.335, -83.7421, -39.302, 0.28 ) }
    dend_15 { pt3dadd( 163.243, -84.3033, -39.1394, 0.55 ) }
    dend_15 { pt3dadd( 166.069, -85.1535, -38.8117, 0.28 ) }
    dend_15 { pt3dadd( 168.361, -85.7906, -38.4995, 0.55 ) }
    dend_15 { pt3dadd( 173.728, -87.0719, -37.7713, 0.28 ) }
    dend_15 { pt3dadd( 175.971, -87.4823, -37.5915, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.5998, -164.096, 119.754, 0.55 ) }
    dend_9 { pt3dadd( -18.1401, -175.016, 124.653, 0.55 ) }
    dend_9 { pt3dadd( -18.3821, -186.825, 126.66, 0.55 ) }
    dend_9 { pt3dadd( -18.8282, -198.195, 130.409, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.5998, -164.096, 119.754, 0.55 ) }
    dend_8 { pt3dadd( -16.7684, -171.672, 124.744, 0.55 ) }
    dend_8 { pt3dadd( -16.6772, -178.069, 131.228, 0.55 ) }
    dend_8 { pt3dadd( -16.0735, -183.044, 138.835, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -20.3537, -169.43, 122.636, 0.55 ) }
    dend_6 { pt3dadd( -19.8719, -177.417, 128.074, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -20.3537, -169.43, 122.636, 0.55 ) }
    dend_5 { pt3dadd( -22.3835, -182.711, 130.242, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 13.4012, -110.015, 15.046, 0.83 ) }
    dend_25 { pt3dadd( 14.5106, -113.641, 15.9382, 0.83 ) }
    dend_25 { pt3dadd( 15.5495, -116.67, 16.9426, 0.83 ) }
    dend_25 { pt3dadd( 16.5821, -119.681, 17.941, 0.83 ) }
    dend_25 { pt3dadd( 17.5627, -122.54, 18.8892, 0.83 ) }
    dend_25 { pt3dadd( 19.074, -126.947, 20.3503, 0.83 ) }
    dend_25 { pt3dadd( 20.5743, -131.322, 21.8009, 0.83 ) }
    dend_25 { pt3dadd( 21.741, -134.173, 23.1826, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 13.4012, -110.015, 15.046, 0.55 ) }
    dend_24 { pt3dadd( 15.0769, -111.954, 15.4849, 0.55 ) }
    dend_24 { pt3dadd( 16.4254, -113.482, 15.5447, 0.55 ) }
    dend_24 { pt3dadd( 17.393, -114.622, 15.4598, 0.55 ) }
    dend_24 { pt3dadd( 18.353, -115.989, 15.1402, 0.83 ) }
    dend_24 { pt3dadd( 19.3794, -117.562, 14.5621, 0.55 ) }
    dend_24 { pt3dadd( 20.3833, -119.1, 13.9967, 0.83 ) }
    dend_24 { pt3dadd( 21.4099, -120.785, 13.2072, 0.55 ) }
    dend_24 { pt3dadd( 22.0226, -121.767, 12.6574, 0.83 ) }
    dend_24 { pt3dadd( 23.9242, -124.967, 10.6028, 0.55 ) }
    dend_24 { pt3dadd( 25.2446, -127.509, 8.79111, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.09181, -100.343, 48.8363, 0.55 ) }
    dend_20 { pt3dadd( -11.0436, -106.324, 52.9037, 0.55 ) }
    dend_20 { pt3dadd( -15.1091, -111.639, 56.9351, 0.55 ) }
    dend_20 { pt3dadd( -19.7933, -116.255, 61.1512, 0.55 ) }
    dend_20 { pt3dadd( -25.206, -120.019, 65.3426, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.09181, -100.343, 48.8363, 0.55 ) }
    dend_19 { pt3dadd( -11.5739, -107.437, 54.3267, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 21.741, -134.173, 23.1826, 0.55 ) }
    dend_27 { pt3dadd( 21.9013, -136.348, 23.8784, 0.55 ) }
    dend_27 { pt3dadd( 22.1477, -139.113, 24.8625, 0.55 ) }
    dend_27 { pt3dadd( 22.387, -141.725, 25.7784, 0.55 ) }
    dend_27 { pt3dadd( 22.5488, -143.584, 26.3943, 0.55 ) }
    dend_27 { pt3dadd( 22.8241, -146.907, 27.4302, 0.55 ) }
    dend_27 { pt3dadd( 23.8267, -156.23, 30.1766, 0.55 ) }
    dend_27 { pt3dadd( 24.2938, -159.385, 31.012, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 24.6769, -161.609, 31.4992, 0.55 ) }
    dend_27 { pt3dadd( 25.2171, -164.147, 31.8724, 0.55 ) }
    dend_27 { pt3dadd( 25.6749, -166.114, 31.9834, 0.55 ) }
    dend_27 { pt3dadd( 26.9494, -170.692, 32.1189, 0.55 ) }
    dend_27 { pt3dadd( 27.8051, -174.184, 32.1687, 0.55 ) }
    dend_27 { pt3dadd( 28.3972, -176.469, 32.2897, 0.55 ) }
    dend_27 { pt3dadd( 29.7897, -182.396, 32.8818, 0.55 ) }
    dend_27 { pt3dadd( 30.6305, -186.383, 33.4366, 0.55 ) }
    dend_27 { pt3dadd( 31.6207, -191.521, 34.4349, 0.55 ) }
    dend_27 { pt3dadd( 32.6339, -197.339, 36.0221, 0.55 ) }
    dend_27 { pt3dadd( 33.3775, -201.198, 37.3793, 0.55 ) }
    dend_27 { pt3dadd( 33.8444, -203.47, 38.2615, 0.55 ) }
    dend_27 { pt3dadd( 34.2403, -205.572, 39.0535, 0.55 ) }
    dend_27 { pt3dadd( 34.8354, -208.225, 39.9547, 0.55 ) }
    dend_27 { pt3dadd( 36.3741, -214.635, 41.6817, 0.55 ) }
    dend_27 { pt3dadd( 37.0866, -217.103, 42.2955, 0.55 ) }
    dend_27 { pt3dadd( 37.825, -219.862, 42.9347, 0.55 ) }
    dend_27 { pt3dadd( 38.9102, -224.009, 43.8603, 0.55 ) }
    dend_27 { pt3dadd( 39.5914, -227.219, 44.5418, 0.55 ) }
    dend_27 { pt3dadd( 40.088, -230.293, 45.0817, 0.55 ) }
    dend_27 { pt3dadd( 40.4394, -233.243, 45.5457, 0.55 ) }
    dend_27 { pt3dadd( 40.7198, -236.129, 46.0184, 0.55 ) }
    dend_27 { pt3dadd( 40.9392, -238.181, 46.3405, 0.55 ) }
    dend_27 { pt3dadd( 41.3637, -241.536, 46.7672, 0.55 ) }
    dend_27 { pt3dadd( 41.9441, -245.572, 46.9701, 0.55 ) }
    dend_27 { pt3dadd( 42.3323, -247.525, 46.9504, 0.55 ) }
    dend_27 { pt3dadd( 42.7431, -249.238, 46.8184, 0.55 ) }
    dend_27 { pt3dadd( 43.7343, -252.447, 46.4471, 0.55 ) }
    dend_27 { pt3dadd( 44.3663, -254.485, 46.1497, 0.55 ) }
    dend_27 { pt3dadd( 45.1332, -256.993, 45.8844, 0.55 ) }
    dend_27 { pt3dadd( 45.566, -258.765, 45.7729, 0.55 ) }
    dend_27 { pt3dadd( 46.5402, -263.385, 45.6205, 0.55 ) }
    dend_27 { pt3dadd( 47.0897, -266.856, 45.7061, 0.55 ) }
    dend_27 { pt3dadd( 47.6791, -272.242, 46.216, 0.55 ) }
    dend_27 { pt3dadd( 47.9969, -275.706, 46.8809, 0.55 ) }
    dend_27 { pt3dadd( 48.2565, -279.348, 47.6788, 0.28 ) }
    dend_27 { pt3dadd( 48.3028, -280.817, 48.0415, 0.28 ) }
    dend_27 { pt3dadd( 48.2691, -284.385, 49.2173, 0.28 ) }
    dend_27 { pt3dadd( 48.1041, -287.684, 50.5353, 0.28 ) }
    dend_27 { pt3dadd( 48.0754, -291.99, 52.8546, 0.28 ) }
    dend_27 { pt3dadd( 50.204, -301.493, 56.2435, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 21.741, -134.173, 23.1826, 0.55 ) }
    dend_26 { pt3dadd( 23.0274, -134.539, 24.2662, 0.55 ) }
    dend_26 { pt3dadd( 25.5795, -135.557, 26.7101, 0.55 ) }
    dend_26 { pt3dadd( 27.7387, -136.601, 28.9301, 0.28 ) }
    dend_26 { pt3dadd( 30.0178, -137.806, 31.3933, 0.55 ) }
    dend_26 { pt3dadd( 31.274, -138.581, 33.0892, 0.28 ) }
    dend_26 { pt3dadd( 33.3079, -139.986, 36.2783, 0.55 ) }
    dend_26 { pt3dadd( 33.9752, -140.763, 37.9372, 0.28 ) }
    dend_26 { pt3dadd( 34.1683, -141.043, 38.6103, 0.28 ) }
    dend_26 { pt3dadd( 34.4882, -141.425, 39.7761, 0.55 ) }
    dend_26 { pt3dadd( 35.8764, -142.611, 44.0877, 0.28 ) }
    dend_26 { pt3dadd( 36.5003, -143.06, 45.8725, 0.55 ) }
    dend_26 { pt3dadd( 38.7019, -144.344, 50.8577, 0.28 ) }
    dend_26 { pt3dadd( 40.0, -144.951, 53.4205, 0.28 ) }
    dend_26 { pt3dadd( 41.731, -145.743, 56.4743, 0.55 ) }
    dend_26 { pt3dadd( 44.551, -147.0, 60.7094, 0.28 ) }
    dend_26 { pt3dadd( 44.9709, -147.165, 61.2295, 0.55 ) }
    dend_26 { pt3dadd( 47.1539, -147.973, 63.6253, 0.28 ) }
    dend_26 { pt3dadd( 47.3689, -148.05, 63.8184, 0.55 ) }
    dend_26 { pt3dadd( 49.2509, -149.04, 65.6051, 0.28 ) }
    dend_26 { pt3dadd( 50.1155, -149.598, 66.5186, 0.55 ) }
    dend_26 { pt3dadd( 57.1354, -153.62, 74.0631, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.206, -120.019, 65.3426, 0.55 ) }
    dend_22 { pt3dadd( -29.2738, -123.673, 72.6688, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -25.206, -120.019, 65.3426, 0.55 ) }
    dend_21 { pt3dadd( -30.5731, -127.232, 68.9423, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 19
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 11
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_BP_946d6468c0_0_0


