// Cell: cACint209_L23_NBC_f831ad7a1f_0_0
/*
{
  "id" : "cACint209_L23_NBC_f831ad7a1f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.75681, 7.93669, -3.00698, 2.63904", "-6.11415, 7.12684, -2.72405, 4.23664", "-5.47148, 6.31698, -2.44112, 6.10767", "-4.82882, 5.50713, -2.15818, 7.7632", "-4.18616, 4.69727, -1.87525, 10.2402", "-3.5435, 3.88742, -1.59232, 11.8064", "-2.90084, 3.07757, -1.30939, 12.5995", "-2.25818, 2.26771, -1.02645, 13.3962", "-1.61552, 1.45786, -0.74352, 14.1996", "-0.972859, 0.648002, -0.460588, 14.817", "-0.330198, -0.161852, -0.177655, 15.467", "0.312463, -0.971706, 0.105278, 16.407", "0.955124, -1.78156, 0.38821, 17.1741", "1.59778, -2.59142, 0.671143, 17.2738", "2.24045, -3.40127, 0.954075, 17.3386", "2.88311, -4.21112, 1.23701, 17.3694", "3.52577, -5.02098, 1.51994, 15.6873", "4.16843, -5.83083, 1.80287, 14.1508", "4.81109, -6.64069, 2.08581, 12.6795", "5.45375, -7.45054, 2.36874, 9.91553", "6.09641, -8.2604, 2.65167, 5.27854" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-1.51781, -10.5212, 2.68779, 3.6", "-0.761088, -13.1471, 4.69132, 3.6", "0.132114, -16.7696, 7.83529, 1.66", "1.14735, -20.4181, 11.083, 1.66", "2.36386, -24.2526, 14.5731, 1.38", "4.21152, -29.8523, 19.493, 1.38", "5.26353, -33.1278, 22.2537, 1.38", "6.99593, -38.1469, 26.5119, 0.83", "8.74559, -42.9152, 30.5146, 1.11", "9.89528, -45.8091, 32.8818, 0.83", "11.2969, -49.1225, 35.3581, 0.83", "12.8182, -52.3786, 37.4865, 0.83", "14.0853, -55.0357, 39.139, 0.83", "14.6503, -56.0969, 39.8201, 0.83", "16.0927, -58.9834, 41.7275, 0.83", "16.6845, -60.1503, 42.5437, 0.83", "17.8098, -62.1134, 44.1633, 0.83", "19.0792, -64.1855, 46.0497, 0.83", "21.2165, -68.2745, 49.9396, 0.83", "22.4953, -70.8584, 52.3699, 0.83", "26.8357, -77.6497, 60.212, 0.83", "30.434, -84.6968, 68.1786, 0.83", "35.7895, -91.0423, 75.8038, 0.83", "41.611, -96.763, 83.6326, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-8.94782, 4.26083, -7.77221, 1.11", "-8.81988, 6.38316, -7.66304, 1.11", "-8.87115, 8.55104, -7.55762, 0.83", "-9.13453, 11.0225, -7.21849, 0.83", "-9.36242, 12.4683, -7.03279, 1.66", "-9.88668, 15.0661, -6.69479, 1.94", "-10.4912, 17.5119, -6.44333, 0.83", "-10.9152, 18.8303, -6.32827, 0.83", "-12.2339, 22.059, -6.14986, 1.38", "-13.2205, 23.9189, -6.25996, 0.55", "-13.6091, 24.6199, -6.37132, 0.55", "-14.4147, 26.0887, -6.98711, 0.55", "-14.5886, 26.4299, -7.17934, 0.55", "-15.3394, 27.9839, -8.25529, 0.55", "-16.3785, 30.2643, -10.2243, 1.66", "-17.1349, 32.1653, -11.8128, 1.66", "-17.9434, 34.6021, -13.7864, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-5.06781, -2.32267, 12.3478, 1.94", "-6.97984, -2.96176, 16.5045, 1.94", "-8.74525, -3.55184, 20.3425, 1.66", "-14.0332, -5.31932, 31.8387, 1.38", "-15.6108, -5.8466, 35.2683, 1.38", "-18.1252, -6.68705, 40.7347, 1.11", "-21.8758, -7.94067, 48.8886, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-6.57781, 2.74083, -8.27221, 1.11", "-7.77711, 0.454403, -7.69435, 1.11", "-9.31206, -2.76644, -7.12825, 0.83", "-10.916, -6.06655, -6.83119, 0.83", "-13.2573, -10.4807, -6.83674, 0.55", "-13.9699, -11.7706, -6.91724, 0.55", "-15.5188, -14.8324, -7.40829, 0.55", "-16.1314, -16.1814, -7.84282, 0.55", "-17.2137, -18.4268, -8.98117, 0.83", "-18.1313, -20.2598, -10.3355, 0.55", "-18.6431, -21.2157, -11.1751, 0.55", "-20.4619, -24.5494, -13.978, 1.11", "-21.2325, -26.0722, -15.1783, 0.55", "-22.1092, -27.9342, -16.6687, 0.55", "-23.0404, -30.1453, -18.4467, 0.55", "-23.4792, -31.125, -19.2505, 0.55", "-24.4394, -33.0277, -20.9049, 1.11", "-25.5258, -34.9111, -22.531, 0.55", "-26.6469, -36.9073, -24.177, 0.55", "-28.6821, -40.3486, -27.021, 1.38", "-30.1171, -42.3577, -28.7539, 0.55", "-31.6351, -44.0897, -30.3469, 0.55", "-32.8899, -45.2944, -31.5438, 0.55", "-34.5873, -46.7458, -33.0366, 0.55", "-37.4716, -48.9497, -35.363, 1.94", "-39.2614, -50.1283, -36.6753, 0.55", "-41.179, -51.3409, -38.003, 0.83", "-43.1984, -52.5491, -39.3166, 0.28", "-44.0556, -53.0617, -39.8915, 0.55", "-45.8557, -54.2476, -41.2229, 0.28", "-46.9044, -55.1203, -42.0548, 0.28", "-48.5543, -56.7997, -43.7009, 1.94", "-49.953, -58.3912, -45.3217, 0.28", "-51.2081, -59.9041, -46.8533, 0.55", "-52.9296, -62.0869, -49.1698, 0.28", "-53.7173, -63.149, -50.3209, 0.83", "-55.8423, -65.9898, -53.4774, 0.28", "-57.0893, -67.7685, -55.607, 0.83", "-57.5542, -68.4944, -56.4706, 0.28", "-58.3126, -69.6439, -57.8089, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.177811, 4.62183, -8.24221, 1.38", "-2.35791, 4.94958, -8.48099, 1.38", "-5.14133, 5.22329, -8.91107, 0.83", "-9.88463, 5.3491, -9.841, 0.83", "-14.1962, 5.14076, -10.7797, 0.83", "-18.6196, 4.66628, -11.9395, 0.83", "-20.3078, 4.41366, -12.4226, 0.55", "-23.3346, 3.63319, -13.3774, 0.83", "-25.494, 2.82645, -14.0695, 0.55", "-28.3108, 1.59008, -15.0395, 0.83", "-30.9109, 0.532089, -16.0215, 0.55", "-31.8117, 0.215279, -16.3925, 0.55", "-34.2236, -0.417525, -17.4324, 0.83", "-36.2096, -0.778165, -18.3116, 0.55", "-39.4073, -1.24918, -19.899, 0.55", "-41.9663, -1.67009, -21.4024, 0.83", "-44.1524, -2.21703, -22.8795, 0.55", "-46.1184, -3.04756, -24.547, 0.28", "-47.1824, -3.67928, -25.6415, 0.28", "-47.7613, -4.1596, -26.3185, 0.55", "-48.7281, -5.3045, -27.4205, 0.55", "-50.1011, -7.01027, -29.0834, 0.83", "-51.3262, -8.23814, -30.2526, 0.55", "-52.9139, -9.52347, -31.5346, 0.55", "-53.6621, -10.1034, -32.1546, 0.55", "-56.076, -11.8341, -34.1346, 1.11", "-59.6187, -14.1156, -36.9344, 0.55", "-62.7585, -15.8656, -39.2978, 0.55", "-64.7255, -16.9404, -40.789, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.28781, 3.99482, -7.77221, 1.38", "-8.43284, 5.82069, -7.77221, 1.38", "-9.23578, 7.10106, -7.77221, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.01219, 4.82133, -4.12221, 0.83", "1.70535, 6.28767, -4.31322, 0.83", "3.3483, 8.64248, -5.08019, 0.83", "5.27461, 10.8531, -6.01673, 0.83", "5.92091, 11.6094, -6.37486, 0.83", "7.34364, 13.2775, -7.25505, 0.83", "9.33328, 15.4909, -8.46392, 1.38", "11.1953, 17.2891, -9.60503, 0.83", "12.7719, 18.6155, -10.5553, 0.83", "15.5714, 20.8528, -12.3081, 1.38", "16.7822, 21.8961, -13.1062, 1.11", "18.409, 23.441, -14.1922, 1.11", "20.2513, 25.237, -15.3124, 1.11", "22.0606, 27.0406, -16.3338, 1.38", "23.851, 28.8246, -17.3955, 0.83", "24.7097, 29.6327, -17.8766, 0.83", "26.009, 30.9502, -18.6526, 0.83", "27.0998, 32.1255, -19.3373, 0.83", "28.6663, 33.7173, -20.2587, 1.94", "30.4167, 35.3523, -21.2963, 0.83", "32.7138, 37.3752, -22.6964, 0.83", "34.9434, 39.1207, -24.089, 1.66", "36.1731, 40.0016, -24.5317, 0.83", "37.868, 41.0507, -24.2541, 0.83", "40.0102, 42.0147, -22.8706, 0.55", "40.9057, 42.2917, -22.0658, 0.83", "42.601, 42.6614, -20.4118, 0.83", "52.2675, 44.2843, -10.9176, 2.22", "54.0791, 44.5405, -9.19482, 0.55", "54.9865, 44.6582, -8.37717, 0.55", "56.7132, 44.8363, -6.92424, 1.11", "60.1849, 45.1285, -4.59125, 0.55", "61.7052, 45.2347, -4.4113, 0.55", "63.1702, 45.3225, -5.01132, 1.11", "64.8015, 45.5233, -5.61666, 0.55", "65.9947, 45.7988, -6.01798, 0.28", "66.5925, 45.9803, -6.18875, 0.55", "68.1503, 46.4786, -6.47303, 0.28", "68.8765, 46.7061, -6.62874, 0.83", "70.9688, 47.3824, -7.11248, 0.28", "72.142, 47.7375, -7.38915, 1.11", "74.3065, 48.3384, -7.78725, 0.28", "75.4633, 48.6707, -7.83944, 0.83", "77.073, 49.0904, -7.73892, 0.28", "77.9082, 49.2656, -7.63112, 0.55", "79.1884, 49.5013, -7.3799, 0.28", "80.9903, 49.8096, -6.95471, 1.11", "84.5729, 50.4703, -5.93252, 0.28", "86.2161, 50.7763, -5.46029, 1.11", "87.6775, 51.0308, -5.06126, 0.55", "88.7238, 51.1886, -4.85177, 0.83", "89.8315, 51.301, -4.75925, 0.28", "90.5168, 51.3034, -4.79923, 0.83", "91.6774, 51.2311, -4.99404, 0.28", "92.4509, 51.1694, -5.0736, 0.55", "93.7545, 51.0055, -5.14441, 0.28", "94.6266, 50.8843, -5.1213, 0.55", "96.8394, 50.5883, -4.90208, 0.28", "98.0449, 50.4138, -4.7389, 0.83", "98.9493, 50.3083, -4.55564, 0.28", "99.5781, 50.2713, -4.39326, 0.55", "100.945, 50.286, -3.92143, 0.28", "101.584, 50.3412, -3.67804, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.3378, 3.47233, -8.95221, 3.05", "-11.5632, 3.72973, -9.81819, 3.05", "-15.012, 4.45417, -12.2553, 2.22", "-19.0496, 5.30229, -15.1085, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.22219, 5.04932, 2.17779, 2.77", "9.32908, 6.13802, 3.89443, 2.77", "10.4791, 7.26918, 5.67799, 2.77", "12.8396, 9.59087, 9.33878, 3.6", "13.4066, 10.1486, 10.2181, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.09641, -8.2604, 2.65167, 0.83", "15.4206, -20.0103, 2.65167, 0.83", "24.7447, -31.7602, 2.65167, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "41.611, -96.763, 83.6326, 0.55", "45.4929, -105.678, 92.3468, 0.55", "50.753, -115.059, 99.6466, 0.55", "55.6727, -125.864, 104.613, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "41.611, -96.763, 83.6326, 0.28", "44.2552, -101.828, 88.274, 0.55", "47.1866, -106.308, 93.3861, 0.55", "50.4871, -111.337, 97.6346, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-17.9434, 34.6021, -13.7864, 0.55", "-18.3222, 35.5056, -13.8052, 0.55", "-18.9479, 37.1855, -14.1114, 0.55", "-19.3787, 38.2885, -14.3711, 1.38", "-20.5553, 41.3475, -15.2293, 0.55", "-20.9966, 42.6176, -15.71, 0.55", "-21.7648, 44.8658, -16.6437, 1.38", "-22.9796, 48.2482, -18.2121, 0.55", "-23.6704, 50.1832, -19.1829, 0.55", "-24.3741, 52.2458, -20.2628, 1.38", "-25.4744, 55.7537, -22.1992, 0.55", "-26.1436, 57.7228, -23.2899, 0.28", "-26.491, 58.6822, -23.7916, 0.55", "-26.9499, 59.8668, -24.34, 0.28", "-27.2564, 60.7142, -24.8162, 0.83", "-27.7593, 62.1162, -25.7392, 0.28", "-28.209, 63.4362, -26.8586, 0.83", "-28.6911, 64.8924, -28.3847, 0.28", "-29.2833, 66.5712, -30.3762, 1.11", "-30.5628, 69.574, -34.6184, 0.28", "-31.258, 70.9873, -36.8961, 0.83", "-32.4966, 73.0798, -40.8271, 1.66", "-32.9918, 73.8246, -42.4004, 0.28", "-33.2776, 74.1632, -43.2279, 1.11", "-34.7517, 75.5413, -46.9948, 0.55", "-35.3638, 75.9678, -48.2603, 1.38", "-37.3571, 77.1526, -51.9674, 0.28", "-37.5824, 77.2816, -52.3544, 0.55", "-38.7287, 77.9652, -54.3299, 0.28", "-39.1772, 78.2409, -55.142, 0.83", "-40.0703, 78.7574, -56.7162, 0.28", "-40.1895, 78.8065, -56.9158, 0.55", "-41.7564, 79.2465, -59.3911, 0.28", "-42.6445, 79.4791, -60.7726, 0.83", "-45.1456, 80.1951, -64.6307, 0.28", "-46.2593, 80.5436, -66.3344, 1.11", "-48.523, 81.457, -69.6632, 0.55", "-49.1106, 81.7513, -70.4874, 0.55", "-50.219, 82.4595, -71.9331, 0.83", "-51.9816, 83.896, -74.1068, 0.28", "-52.3811, 84.3109, -74.555, 0.55", "-54.4151, 86.9528, -76.8292, 0.28", "-54.9868, 87.8229, -77.4378, 1.66", "-56.0537, 89.512, -78.5406, 0.28", "-56.2901, 89.8936, -78.782, 0.55", "-57.1359, 91.2861, -79.6107, 0.28", "-57.5486, 91.9953, -80.0807, 0.83", "-58.2123, 93.1184, -80.8936, 0.28", "-58.3494, 93.3416, -81.0831, 0.55", "-59.1285, 94.5734, -82.2816, 0.28", "-59.5849, 95.2608, -82.999, 0.55", "-60.5571, 96.5355, -84.5811, 0.28", "-60.9398, 97.1287, -85.627, 0.28", "-61.3289, 97.8163, -87.0761, 0.83", "-61.8171, 98.7135, -89.1518, 0.55", "-61.968, 98.9825, -89.8255, 0.55", "-62.5636, 100.006, -92.5471, 0.83", "-64.0296, 102.264, -98.839, 0.28", "-64.2266, 102.567, -99.6841, 0.83", "-64.7599, 103.338, -101.767, 0.28", "-64.9978, 103.668, -102.652, 0.55", "-65.7237, 104.684, -105.18, 0.28", "-66.263, 105.378, -106.729, 0.83", "-66.9947, 106.144, -108.267, 0.28", "-67.5522, 106.758, -109.485, 0.28", "-68.1069, 107.392, -110.771, 0.55", "-69.2767, 108.767, -113.609, 0.28", "-69.4443, 108.951, -114.001, 0.55", "-70.4076, 109.888, -116.14, 0.28", "-70.6387, 110.081, -116.61, 0.55", "-71.6388, 110.819, -118.464, 0.28", "-72.1858, 111.15, -119.281, 0.55", "-73.575, 111.854, -120.826, 0.28", "-73.9135, 111.999, -121.153, 0.55", "-74.7037, 112.274, -121.856, 0.28", "-75.3804, 112.497, -122.428, 0.55", "-78.5605, 113.519, -124.926, 0.28", "-80.7208, 114.218, -126.579, 0.55", "-84.169, 115.293, -129.097, 0.28", "-85.2366, 115.612, -129.866, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-17.9434, 34.6021, -13.7864, 0.28", "-18.9767, 35.744, -13.9842, 0.28", "-19.9649, 36.8741, -14.223, 0.83", "-20.7481, 37.8971, -14.4458, 0.28", "-22.7863, 40.4796, -15.0532, 0.55", "-23.9621, 42.0624, -15.4132, 0.55", "-25.255, 43.8016, -15.8327, 0.55", "-26.4392, 45.4561, -16.214, 1.38", "-28.0582, 47.6241, -16.7461, 0.55", "-29.9813, 50.039, -17.4322, 0.83", "-31.0492, 51.3088, -17.7793, 0.28", "-32.111, 52.64, -18.0764, 0.83", "-33.2527, 54.0971, -18.3425, 0.55", "-35.1231, 56.5725, -18.7912, 1.94", "-36.7309, 58.8038, -19.154, 0.28", "-37.6119, 60.4564, -19.4854, 0.83", "-38.5242, 62.6246, -19.9382, 0.28", "-38.7593, 63.8524, -20.2336, 0.83", "-38.845, 65.0375, -20.565, 0.28", "-38.8358, 66.7757, -21.0612, 0.83", "-38.746, 71.1549, -22.375, 0.55", "-38.7592, 73.1944, -23.0095, 1.94", "-38.975, 77.9598, -24.3534, 0.55", "-39.1914, 80.0929, -24.9172, 0.55", "-39.6821, 82.5814, -25.5052, 1.11", "-40.3838, 84.8358, -25.9854, 0.28", "-41.0737, 86.2796, -26.2339, 0.55", "-42.4256, 88.4794, -26.6472, 0.55", "-43.8919, 90.3148, -26.9565, 0.55", "-45.4376, 92.1368, -27.2659, 0.55", "-46.376, 93.1387, -27.4559, 0.55", "-47.6744, 94.4042, -27.6591, 1.11", "-48.9609, 95.6741, -27.9123, 0.28", "-49.9649, 96.7741, -28.1384, 0.55", "-51.2175, 98.3814, -28.4439, 0.28", "-51.8072, 99.2821, -28.593, 0.55", "-52.7059, 100.908, -28.7925, 0.28", "-53.6597, 103.125, -29.0515, 0.83", "-54.4372, 105.375, -29.2944, 0.28", "-54.8008, 106.597, -29.3614, 0.55", "-55.2336, 108.168, -29.4189, 0.28", "-55.7239, 109.949, -29.4713, 2.22", "-56.6367, 113.229, -29.5243, 0.28", "-56.8076, 113.771, -29.5399, 0.55", "-57.743, 116.486, -29.7761, 0.28", "-58.1705, 117.786, -29.9823, 0.83", "-59.046, 120.269, -30.5702, 0.28", "-59.5018, 121.449, -30.9257, 0.83", "-60.4374, 123.765, -31.7004, 0.28", "-61.0644, 125.27, -32.2685, 0.83", "-62.029, 127.586, -33.3119, 0.28", "-62.6087, 129.006, -33.9448, 1.38", "-63.4992, 131.166, -34.8678, 0.28", "-63.934, 132.156, -35.268, 0.55", "-64.3129, 132.955, -35.5428, 0.55", "-65.3329, 135.084, -36.2234, 0.28", "-65.496, 135.394, -36.3075, 0.55", "-66.0101, 136.424, -36.5556, 0.28", "-66.2805, 136.922, -36.6173, 0.55", "-67.3493, 138.755, -36.7458, 0.28", "-67.6356, 139.242, -36.7612, 0.55", "-69.1406, 141.721, -36.7085, 0.28", "-69.6757, 142.594, -36.6955, 0.55", "-71.6624, 145.866, -36.6414, 0.28", "-71.9566, 146.346, -36.6093, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-21.8758, -7.94067, 48.8886, 1.11", "-23.6626, -6.94679, 49.1477, 1.11", "-26.8565, -4.96451, 49.63, 0.83", "-29.2188, -3.35222, 49.9636, 0.83", "-32.5827, -1.13181, 50.5799, 1.11", "-37.5838, 1.90834, 51.5776, 0.83", "-38.9236, 2.67147, 51.9114, 0.55", "-41.1051, 3.80545, 52.6785, 0.83", "-43.9415, 5.08903, 53.9026, 0.83", "-47.8983, 6.59024, 55.793, 1.11", "-49.9475, 7.24356, 56.8355, 0.83", "-53.8987, 8.37041, 58.9421, 1.11", "-58.302, 9.65121, 61.3314, 0.83", "-60.6379, 10.2357, 62.6039, 0.83", "-62.3583, 10.6551, 63.5738, 0.83", "-63.8806, 11.1728, 64.3771, 0.55", "-65.5971, 11.94, 65.2593, 0.83", "-68.1471, 13.3115, 66.0242, 0.55", "-69.9946, 15.6372, 65.987, 0.55", "-79.3178, 22.1834, 71.686, 0.55", "-88.9503, 27.8312, 77.9234, 0.55", "-100.386, 31.6518, 82.3991, 0.55", "-112.104, 35.2541, 86.3047, 0.55", "-123.591, 37.7698, 91.6355, 0.55", "-134.746, 40.5913, 97.4769, 0.55", "-145.779, 44.479, 102.826, 0.55", "-157.297, 48.088, 107.29, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-21.8758, -7.94067, 48.8886, 1.11", "-23.1348, -8.97138, 50.348, 1.11", "-24.8974, -10.1365, 52.4209, 0.83", "-25.7125, -10.4702, 53.4132, 0.83", "-27.6454, -10.379, 55.7896, 0.83", "-30.0148, -9.51437, 58.525, 0.83", "-30.841, -8.90969, 59.3782, 0.83", "-32.2889, -7.7141, 60.4928, 0.83", "-34.5581, -5.64535, 61.8131, 0.83", "-37.0786, -3.06263, 63.0192, 0.83", "-38.4101, -1.59787, 63.5017, 0.83", "-41.1137, 1.48167, 64.2272, 0.83", "-43.1264, 3.75501, 64.6806, 0.55", "-44.1773, 4.83172, 64.839, 0.55", "-45.553, 6.02807, 64.9568, 0.55", "-47.0964, 7.27453, 64.9285, 0.55", "-48.6812, 8.39309, 64.8959, 0.55", "-56.4363, 11.8793, 68.6626, 0.55", "-63.0162, 15.3541, 74.2497, 0.55", "-69.6224, 16.977, 80.6862, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-58.3126, -69.6439, -57.8089, 0.28", "-59.245, -68.4627, -58.4229, 0.28", "-59.8836, -67.6537, -58.8433, 0.55", "-60.9354, -66.3212, -59.5359, 0.28", "-61.9319, -65.0588, -60.192, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-58.3126, -69.6439, -57.8089, 0.28", "-59.3072, -70.2871, -58.3193, 0.28", "-59.6471, -70.5243, -58.4978, 0.55", "-60.9409, -71.4185, -58.9962, 0.28", "-61.7763, -72.0691, -59.3291, 0.83", "-62.81, -72.9848, -59.8064, 0.28", "-63.4296, -73.6172, -60.155, 0.55", "-63.8565, -74.1125, -60.4359, 0.28", "-64.9691, -75.6397, -61.338, 2.77", "-66.4502, -78.0116, -62.789, 0.28", "-67.1664, -79.299, -63.6079, 0.83", "-67.9279, -80.9053, -64.6102, 0.28", "-68.2428, -81.6945, -65.0621, 0.55", "-68.8601, -83.4334, -66.0434, 0.28", "-69.0597, -84.0153, -66.4089, 0.55", "-69.2684, -84.5435, -66.7271, 0.28", "-69.877, -85.6972, -67.369, 0.83", "-70.7684, -86.9388, -68.0518, 0.28", "-71.668, -87.906, -68.6084, 0.83", "-73.5128, -89.3872, -69.5354, 0.55", "-74.3786, -89.9444, -69.9057, 0.28", "-76.101, -90.8417, -70.5574, 0.55", "-77.4265, -91.3622, -71.0168, 0.55", "-79.1713, -91.8801, -71.3544, 0.28", "-80.6874, -92.2708, -71.4619, 0.83", "-82.0301, -92.5882, -71.4272, 0.55", "-83.2085, -92.8363, -71.3752, 0.28", "-85.3953, -93.2824, -71.3389, 0.55", "-88.9515, -94.0903, -71.3629, 0.28", "-91.1057, -94.5818, -71.4553, 0.83", "-93.0109, -95.0728, -71.6481, 0.28", "-94.2771, -95.4484, -71.8538, 0.55", "-96.4867, -96.1403, -72.3063, 0.28", "-97.3343, -96.4373, -72.5464, 0.83", "-98.0457, -96.7058, -72.8763, 0.28", "-99.7935, -97.3671, -73.7458, 0.28", "-100.511, -97.6517, -74.1536, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-64.7255, -16.9404, -40.789, 0.28", "-65.862, -18.4035, -41.8491, 0.28", "-67.3244, -20.2772, -43.1505, 0.83", "-69.268, -22.6972, -44.7498, 0.28", "-69.92, -23.4499, -45.2392, 0.55", "-71.0512, -24.669, -46.0021, 0.28", "-71.7663, -25.4135, -46.4759, 0.55", "-72.3899, -26.0167, -46.8635, 0.28", "-73.2549, -26.7793, -47.3111, 0.55", "-74.5376, -27.8184, -47.884, 0.28", "-75.6934, -28.7174, -48.3346, 0.55", "-77.7681, -30.2797, -49.1174, 0.28", "-78.7242, -30.9865, -49.4674, 0.55", "-79.4706, -31.5462, -49.7509, 0.28", "-80.1454, -32.0658, -49.9953, 0.55", "-82.3217, -33.7604, -50.7966, 0.28", "-83.4039, -34.5455, -51.0047, 0.55", "-85.0289, -35.6496, -51.024, 0.28", "-86.0383, -36.3108, -50.9424, 0.55", "-86.9001, -36.93, -51.0817, 0.28", "-88.3697, -38.0938, -51.6971, 0.83", "-91.6519, -40.9774, -53.7615, 0.28", "-92.1484, -41.4409, -54.1324, 0.83", "-92.733, -42.01, -54.6699, 0.28", "-98.2315, -47.047, -59.519, 0.55", "-99.2238, -47.9462, -60.4072, 0.28", "-99.9038, -48.5398, -60.9951, 0.55", "-100.892, -49.3629, -61.858, 0.28", "-101.619, -49.9368, -62.4244, 0.55", "-104.073, -51.6298, -63.5755, 0.28", "-104.678, -51.9143, -63.4988, 0.55", "-106.506, -52.6971, -63.1734, 0.28", "-107.543, -53.0989, -62.9456, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-64.7255, -16.9404, -40.789, 0.28", "-68.8496, -14.8194, -42.3211, 0.28", "-70.5127, -14.1958, -42.8466, 0.55", "-72.629, -13.516, -43.4903, 0.28", "-73.1767, -13.3636, -43.6353, 0.55", "-75.7527, -12.7037, -44.2454, 0.28", "-76.8475, -12.4523, -44.4796, 0.83", "-81.1941, -11.773, -45.2674, 0.28", "-82.6596, -11.5732, -45.4989, 0.83", "-87.0847, -10.9652, -45.9911, 0.28", "-90.1458, -10.469, -46.2126, 0.28", "-92.2814, -10.0941, -46.3025, 0.55", "-94.3356, -9.70708, -46.3594, 0.28", "-94.8174, -9.61178, -46.3627, 0.55", "-97.6884, -9.03458, -46.2737, 0.28", "-99.1125, -8.70786, -46.1518, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-9.23578, 7.10106, -7.77221, 1.11", "-7.09351, 7.67703, -9.65013, 1.11", "-4.86267, 8.87694, -12.1245, 1.38", "-0.300617, 12.9294, -18.971, 2.49", "1.23003, 15.3641, -22.5959, 2.49", "1.97053, 17.0581, -24.8231, 1.11", "2.78124, 18.8793, -26.9286, 1.11", "4.14913, 24.3387, -32.0776, 1.11", "4.4869, 27.4619, -34.5748, 1.11", "4.47844, 29.2473, -35.72, 1.11", "4.05864, 33.0379, -38.4461, 1.11", "3.59912, 36.6414, -41.1362, 1.38", "4.07997, 41.7143, -45.1178, 1.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.23578, 7.10106, -7.77221, 0.83", "-10.61, 7.92732, -7.74021, 0.83" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "101.584, 50.3412, -3.67804, 0.28", "103.365, 50.1517, -3.12699, 0.28", "104.327, 50.0822, -2.92238, 0.55", "106.407, 49.9318, -2.48019, 0.28", "108.292, 49.7956, -2.0794, 0.28", "109.284, 49.7238, -1.86837, 0.55", "110.821, 49.6127, -1.54162, 0.28", "112.02, 49.6047, -1.29688, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "101.584, 50.3412, -3.67804, 0.28", "104.16, 52.1854, -5.16573, 0.28", "105.184, 52.9646, -5.74484, 1.11", "107.296, 54.7108, -6.95621, 0.28", "108.484, 55.697, -7.65142, 0.55", "111.063, 57.8936, -9.21418, 0.28", "112.755, 59.4376, -10.2274, 1.38", "114.372, 61.0769, -11.1935, 0.28", "115.235, 61.9909, -11.7427, 0.83", "118.254, 65.3505, -13.6761, 0.28", "119.465, 66.7065, -14.4427, 1.38", "121.799, 69.4055, -15.9874, 0.28", "124.07, 72.1196, -17.5129, 0.28", "126.744, 75.2692, -19.3526, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-19.0496, 5.30229, -15.1085, 1.38", "-22.4367, 6.52291, -14.0081, 1.38", "-28.4497, 8.71996, -12.5566, 1.38", "-32.1543, 10.3649, -11.837, 1.11", "-36.3198, 12.2378, -11.1066, 1.11", "-39.2653, 13.4463, -10.5282, 1.11", "-42.9943, 14.8578, -9.86807, 1.11", "-48.2215, 16.9414, -9.14768, 1.11", "-52.3615, 18.6155, -8.88842, 1.11", "-54.6968, 19.4556, -8.70895, 1.11", "-59.8377, 21.0603, -8.1621, 1.11", "-63.7678, 22.3436, -7.63384, 2.49" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-19.0496, 5.30229, -15.1085, 1.38", "-25.7026, 5.78851, -13.5618, 1.38", "-27.7048, 5.87608, -13.3691, 1.38", "-31.4968, 5.85998, -13.8304, 1.38", "-36.5475, 5.71863, -15.1932, 1.66", "-39.2618, 5.7446, -16.1377, 0.55", "-39.9312, 5.78068, -16.4109, 0.55", "-44.5222, 6.17216, -18.288, 0.55", "-47.1883, 6.63202, -19.8626, 1.11", "-49.6548, 7.23139, -21.7172, 0.83", "-51.9527, 7.82452, -23.616, 0.55", "-54.1008, 8.27822, -25.3363, 0.55", "-55.6553, 8.6085, -26.4587, 0.55", "-58.7575, 9.20883, -28.4871, 2.22", "-60.9798, 9.46181, -29.945, 0.83", "-62.3919, 9.4819, -30.9242, 0.83", "-64.8181, 9.21309, -32.6074, 0.83", "-66.0546, 8.96832, -33.4294, 0.83", "-68.9805, 8.21672, -35.3171, 0.28", "-71.4369, 7.43418, -36.834, 0.83", "-73.5811, 6.74092, -38.0484, 0.55", "-75.4059, 6.1614, -38.9889, 0.55", "-78.283, 5.31795, -40.3331, 0.83", "-79.7784, 4.88286, -40.9683, 0.28", "-81.3461, 4.44275, -41.5632, 0.55", "-83.1354, 3.92262, -42.2592, 0.28", "-84.5491, 3.50716, -42.7673, 0.55", "-86.9635, 2.87005, -43.5152, 0.28", "-88.101, 2.59751, -43.8151, 0.55", "-90.101, 2.21184, -44.2689, 0.28", "-91.6141, 2.06082, -44.5586, 1.11", "-93.2482, 2.05941, -44.773, 0.28", "-94.017, 2.16607, -44.7749, 0.28", "-95.5704, 2.55789, -44.554, 0.55", "-96.4628, 2.87229, -44.3601, 0.55", "-98.1018, 3.62204, -43.8665, 0.28", "-98.5682, 3.86066, -43.7239, 0.55", "-99.815, 4.5322, -43.475, 0.28", "-100.03, 4.64195, -43.4548, 0.55", "-101.352, 5.20319, -43.6307, 0.28", "-101.902, 5.37889, -43.8205, 0.28", "-102.533, 5.53311, -44.1361, 0.55", "-103.904, 5.78063, -44.892, 0.28", "-104.659, 5.85062, -45.3246, 0.83", "-107.355, 5.9038, -46.9016, 0.28", "-108.177, 5.85316, -47.3752, 0.55", "-110.33, 5.54916, -48.5222, 0.28", "-112.073, 5.17467, -49.3287, 0.55", "-114.404, 4.5252, -50.171, 0.28", "-115.098, 4.32608, -50.3621, 0.28", "-116.424, 3.9287, -50.5908, 0.83", "-118.48, 3.34473, -50.8763, 0.28", "-119.824, 3.00037, -51.0368, 0.83", "-121.775, 2.64697, -51.2968, 0.28", "-123.142, 2.41587, -51.4885, 0.55", "-124.726, 2.20221, -51.7238, 0.55", "-126.219, 2.05298, -51.9741, 0.83", "-128.082, 1.9452, -52.3158, 1.38", "-130.12, 1.85029, -52.7676, 0.55", "-132.261, 1.69033, -53.3462, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.4066, 10.1486, 10.2181, 1.38", "18.0612, 14.5642, 9.39622, 1.38", "20.8936, 17.419, 8.75752, 1.66", "24.2788, 21.0591, 8.13692, 1.66", "30.3667, 27.3332, 7.32059, 1.11", "33.9138, 30.6562, 7.02524, 1.38", "36.396, 32.8125, 6.9013, 1.11", "38.5779, 34.4021, 6.8497, 1.66", "42.6543, 37.2837, 6.98324, 1.38", "46.1697, 39.8584, 7.00807, 1.38", "49.8686, 42.5773, 6.94961, 1.38", "51.8844, 44.0323, 6.9949, 1.38", "55.171, 46.217, 7.03909, 0.55", "59.5321, 48.9996, 6.81701, 1.11", "64.1597, 52.2334, 5.87295, 0.83", "66.5713, 54.4971, 5.04696, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "13.4066, 10.1486, 10.2181, 2.22", "16.1927, 12.4293, 13.5106, 2.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "24.7447, -31.7602, 2.65167, 0.28", "34.0689, -43.5101, 2.65167, 0.28", "43.393, -55.26, 2.65167, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "4.07997, 41.7143, -45.1178, 1.11", "0.904033, 48.7308, -48.7488, 1.11", "-0.925345, 52.7724, -50.8403, 1.11", "-3.22734, 57.8581, -53.4722, 1.11", "-5.53289, 62.9517, -56.1081, 1.11", "-6.98313, 66.1556, -57.7661, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-10.61, 7.92732, -7.74021, 0.83", "-12.3934, 11.6714, -5.39285, 0.83", "-12.8989, 13.7814, -4.34279, 0.83", "-13.4987, 17.0342, -2.65943, 0.83", "-13.6211, 18.6544, -1.82671, 0.83", "-13.5908, 21.8448, -0.632755, 0.83", "-13.3675, 25.0001, 0.308348, 0.83", "-13.1413, 27.6836, 1.11225, 0.83", "-12.6649, 31.214, 1.99628, 0.55", "-12.044, 33.7171, 2.47194, 0.83", "-10.7544, 38.2884, 2.95511, 0.55", "-10.499, 39.3185, 2.92922, 0.28", "-10.2639, 40.7867, 2.73173, 0.55", "-10.1541, 43.2561, 2.26141, 0.28", "-10.204, 44.1196, 2.07393, 0.55", "-10.8327, 48.0615, 1.50787, 0.55", "-11.4078, 50.9495, 1.32201, 0.28", "-12.0308, 54.1931, 1.2258, 0.55", "-12.2993, 55.81, 1.21341, 0.28", "-12.64, 58.5542, 1.23151, 0.55", "-12.8368, 60.9735, 1.23447, 0.28", "-12.8575, 62.1925, 1.24668, 0.55", "-12.7649, 64.7068, 1.25174, 0.55", "-12.747, 66.4935, 1.13698, 0.55", "-12.7163, 68.2027, 0.914689, 0.55", "-12.6528, 71.1595, 0.145617, 0.28", "-12.6136, 72.8614, -0.470483, 0.83", "-12.5781, 75.3962, -1.48693, 0.83", "-12.609, 77.693, -2.47887, 0.28", "-12.6111, 79.0975, -3.04662, 0.55", "-12.6019, 81.4876, -3.80122, 0.28", "-12.7455, 83.7693, -4.54722, 0.83", "-12.9402, 85.7349, -5.2624, 0.28", "-13.1067, 87.2999, -5.8498, 0.83", "-13.3636, 90.3269, -7.02076, 0.28", "-13.6182, 93.0944, -8.1763, 0.55", "-14.2039, 99.1149, -10.521, 0.28", "-14.3732, 100.993, -11.2388, 0.28", "-14.4665, 103.228, -12.1124, 0.55", "-14.4574, 106.119, -13.2439, 0.28", "-14.4334, 107.911, -13.9551, 0.55", "-14.3844, 111.066, -15.1563, 0.28", "-14.3325, 113.079, -15.7201, 0.28", "-14.4478, 115.515, -16.5027, 0.55", "-14.664, 117.589, -17.2737, 0.28", "-15.0025, 119.956, -18.2484, 0.55", "-15.4359, 122.096, -19.247, 0.55", "-15.901, 123.678, -20.1646, 0.55", "-16.9669, 126.54, -21.8642, 0.28", "-17.7262, 128.238, -22.8678, 0.55", "-18.197, 129.251, -23.4913, 0.28", "-18.5325, 129.998, -23.9719, 0.55", "-19.2085, 131.657, -25.1493, 0.28", "-19.7388, 132.663, -25.9094, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.61, 7.92732, -7.74021, 0.55", "-12.0652, 9.50869, -8.46279, 0.55", "-13.6335, 11.6605, -10.0213, 0.83", "-14.7453, 13.2945, -11.3072, 0.55", "-16.2843, 15.547, -13.0124, 0.55", "-18.8261, 19.4614, -15.7276, 0.83", "-20.8514, 22.8338, -18.1529, 0.83", "-22.5033, 26.0714, -20.6077, 0.28", "-23.7183, 28.6027, -22.619, 0.55", "-25.0296, 31.0281, -24.6673, 0.83", "-26.7502, 33.3637, -26.7079, 0.83", "-29.6258, 35.8492, -28.8682, 0.28", "-30.2984, 36.2514, -29.2183, 0.83", "-33.0046, 37.3834, -30.2777, 0.55", "-36.5349, 38.5141, -31.6057, 0.55", "-39.7317, 39.3641, -32.6854, 0.55", "-42.7316, 39.9743, -33.6174, 0.83", "-46.3468, 40.554, -34.7387, 0.28", "-48.137, 40.8902, -35.357, 0.28", "-50.9539, 41.6214, -36.484, 0.55", "-53.076, 42.2836, -37.427, 0.55", "-56.5029, 43.4348, -39.1488, 0.55", "-60.6834, 44.9114, -41.315, 0.55", "-64.2552, 46.2749, -43.3946, 0.55", "-66.1075, 47.0642, -44.6221, 0.28", "-66.5092, 47.2508, -44.9407, 0.83", "-69.1405, 48.9963, -47.5975, 0.28", "-69.4274, 49.2666, -47.9563, 0.55", "-70.2694, 50.1833, -49.1245, 0.28", "-70.8518, 50.7513, -49.9943, 0.55", "-72.7933, 52.54, -52.8638, 0.28", "-74.5801, 54.1642, -55.4084, 0.83", "-76.7218, 56.3191, -58.2772, 0.28", "-78.1514, 57.8982, -60.1399, 0.55", "-80.0292, 60.1143, -62.5147, 0.28", "-80.7064, 60.9372, -63.3677, 0.83", "-83.3411, 64.2179, -66.5064, 0.55", "-85.6157, 66.9516, -69.0928, 0.55", "-87.0768, 68.9647, -70.7977, 0.55", "-88.8292, 71.645, -72.8837, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-63.7678, 22.3436, -7.63384, 0.83", "-67.7629, 21.4976, -7.04097, 0.83", "-69.5007, 21.1529, -6.9321, 0.55", "-71.4634, 20.7984, -6.87429, 1.11", "-74.0751, 20.2823, -6.9465, 0.83", "-76.6807, 19.8108, -7.07505, 0.83", "-81.1728, 19.1201, -7.35299, 1.38", "-84.2155, 18.6827, -7.64117, 0.83", "-86.8168, 18.2996, -7.9658, 0.83", "-90.5926, 17.7399, -8.56757, 1.38", "-94.1117, 17.2089, -9.32073, 0.55", "-95.9469, 16.9361, -9.78642, 0.55", "-98.2865, 16.5478, -10.3815, 1.38", "-103.041, 15.6257, -11.5293, 0.83", "-105.483, 15.1425, -12.0913, 1.66", "-110.52, 14.0917, -13.2754, 0.28", "-112.832, 13.5268, -13.8697, 1.11", "-114.723, 13.0259, -14.3649, 0.28", "-115.648, 12.7925, -14.6089, 0.55", "-117.673, 12.2621, -15.0372, 0.28", "-120.656, 11.5744, -15.4642, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-63.7678, 22.3436, -7.63384, 0.83", "-65.813, 24.6371, -7.97263, 0.83", "-66.5962, 25.4848, -8.1162, 0.83", "-68.5151, 27.2854, -8.45993, 1.11", "-69.8967, 28.4009, -8.72221, 0.83", "-71.9258, 29.8695, -9.08801, 1.11", "-73.6983, 31.0602, -9.40062, 0.83", "-74.9206, 31.7213, -9.66803, 0.83", "-77.3005, 32.8365, -10.1197, 1.94", "-79.155, 33.6421, -10.3596, 1.11", "-80.2977, 34.1068, -10.4418, 0.83", "-81.5872, 34.6464, -10.4835, 1.38", "-84.142, 35.6535, -10.5024, 0.83", "-86.0937, 36.5002, -10.5121, 0.83", "-88.8389, 37.8312, -10.5034, 2.77", "-91.2196, 39.1167, -10.3692, 0.55", "-92.3962, 39.8112, -10.207, 0.55", "-94.0303, 40.8158, -9.87197, 0.83", "-95.0055, 41.4396, -9.66304, 0.55", "-96.554, 42.402, -9.37926, 0.55", "-99.2281, 44.1251, -8.91961, 1.94", "-102.217, 46.0212, -8.21186, 0.83", "-103.202, 46.629, -7.84499, 0.83", "-105.4, 47.8737, -6.63175, 1.11", "-106.746, 48.3983, -5.55561, 0.55", "-108.169, 48.7055, -4.09947, 0.55", "-110.084, 48.7958, -1.8697, 0.83", "-112.811, 48.5973, 1.51059, 0.83", "-115.135, 48.3285, 4.58229, 2.77", "-118.413, 47.7837, 9.05786, 0.83", "-119.484, 47.5574, 10.4885, 1.11", "-120.332, 47.3575, 11.5565, 0.28", "-121.64, 47.1296, 12.9501, 1.11", "-123.419, 47.0241, 14.3559, 0.28", "-124.642, 47.1508, 15.091, 0.83", "-126.679, 47.7689, 15.9706, 0.28", "-127.295, 48.0474, 16.1948, 0.55", "-128.654, 48.9314, 16.6195, 0.55", "-130.241, 50.2937, 16.9796, 0.55", "-131.522, 51.5836, 17.1197, 0.55", "-132.694, 53.0417, 17.1088, 1.11", "-133.407, 54.0953, 17.0076, 0.28", "-134.808, 56.3951, 16.722, 1.66", "-135.42, 57.4807, 16.553, 0.28", "-136.05, 58.6448, 16.3297, 0.55", "-137.035, 60.3206, 15.9671, 0.28", "-137.584, 61.09, 15.8343, 0.83", "-138.249, 61.8784, 15.8393, 0.28", "-138.745, 62.4217, 15.8634, 0.28", "-139.775, 63.4859, 15.9717, 0.55", "-140.83, 64.5283, 16.1766, 0.28", "-142.858, 66.346, 16.7756, 1.11", "-145.76, 68.8615, 17.746, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "66.5713, 54.4971, 5.04696, 0.55", "67.2483, 55.1287, 3.8909, 0.55", "67.837, 55.7712, 2.70375, 0.55", "68.4108, 56.4352, 1.49022, 0.55", "70.1231, 58.3071, -1.96928, 1.11", "72.1162, 60.4705, -5.86332, 0.28", "72.8943, 61.2633, -7.35218, 1.38", "74.4874, 62.8663, -10.6413, 0.28", "74.6126, 62.9934, -10.9167, 0.83", "75.1668, 63.5737, -12.1588, 0.55", "75.9684, 64.5305, -13.981, 0.55", "77.2471, 66.1951, -16.9026, 0.55", "77.9938, 67.2084, -18.559, 0.55", "78.6367, 68.201, -19.9807, 0.28", "78.9733, 68.8176, -20.7849, 0.55", "79.4492, 70.002, -22.0911, 0.28", "79.682, 70.7351, -22.7731, 0.55", "80.0279, 72.3084, -23.8405, 1.38", "80.5824, 75.1454, -25.3658, 0.28", "80.7092, 75.8788, -25.6928, 0.55", "80.9939, 77.895, -26.4578, 0.28", "81.114, 78.5543, -26.7146, 0.55", "81.4963, 80.2819, -27.4104, 0.28", "81.8263, 81.3833, -27.8195, 0.55", "82.2823, 82.5215, -28.1628, 0.28", "82.5001, 82.9611, -28.2983, 0.83", "84.5963, 86.394, -29.361, 0.28", "85.5803, 87.7928, -29.851, 1.11", "86.7732, 89.2695, -30.4494, 0.28", "87.5356, 90.1504, -30.8574, 0.55", "88.4763, 91.171, -31.3538, 0.28", "89.0128, 91.7338, -31.65, 0.55", "91.1799, 93.9394, -32.8388, 0.28", "91.6185, 94.3852, -33.1347, 0.55", "92.9097, 95.7889, -34.3448, 0.28", "93.3632, 96.3053, -34.8248, 0.55", "93.8899, 96.987, -35.4531, 0.28", "94.1251, 97.3345, -35.7489, 0.28", "94.2288, 97.5024, -35.871, 0.55", "95.4971, 99.6063, -37.2487, 0.28", "96.336, 100.992, -38.1429, 1.38", "97.1817, 102.387, -39.1106, 0.28", "97.5142, 102.885, -39.5253, 0.55", "97.9896, 103.557, -40.1831, 0.28", "98.536, 104.251, -40.9531, 0.55", "99.8701, 105.701, -42.7688, 0.28", "100.371, 106.142, -43.5544, 0.55", "101.768, 107.096, -45.8224, 0.28", "102.337, 107.455, -46.7779, 0.83", "103.132, 107.918, -48.168, 0.28", "103.595, 108.141, -48.954, 0.55", "105.748, 108.826, -52.3298, 0.28", "106.279, 108.945, -53.1334, 1.11" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "66.5713, 54.4971, 5.04696, 0.28", "69.416, 55.2028, 5.0432, 0.28", "72.061, 55.7594, 5.16506, 0.55", "74.0857, 56.1887, 5.3052, 0.83", "76.1584, 56.6824, 5.33517, 0.83", "78.1969, 57.191, 5.30023, 0.28", "80.0116, 57.6623, 5.25412, 0.55", "81.8401, 58.1844, 5.19287, 0.28", "83.1003, 58.5882, 5.11508, 1.11", "86.1629, 59.6686, 4.74921, 0.28", "86.8792, 59.9842, 4.63027, 0.28", "88.2418, 60.657, 4.3327, 0.55", "90.6123, 61.9714, 3.72439, 0.28", "91.094, 62.2681, 3.58741, 0.55", "92.9499, 63.4429, 3.25101, 0.28", "94.1858, 64.2775, 3.13675, 0.83", "95.2102, 65.0721, 2.926, 0.83", "96.3098, 66.0048, 2.59012, 0.28", "97.0685, 66.7471, 2.27947, 0.55", "98.993, 68.8567, 1.35081, 0.28", "100.241, 70.3583, 0.716719, 0.83", "102.639, 73.4349, -0.574157, 0.28", "103.103, 74.0755, -0.821489, 0.83", "104.555, 76.12, -1.56666, 0.28", "105.004, 76.7706, -1.78423, 0.83", "106.411, 78.997, -2.56463, 0.28", "106.714, 79.4765, -2.65354, 0.55", "107.362, 80.4365, -2.68606, 0.28", "107.69, 80.9051, -2.65552, 0.55", "108.851, 82.4148, -2.37976, 0.28", "110.405, 84.2415, -1.88763, 0.83", "111.602, 85.5314, -1.41598, 0.28", "112.342, 86.2274, -1.07028, 0.55", "114.008, 87.5661, -0.436583, 0.28", "114.614, 87.9527, -0.250039, 0.83", "115.956, 88.5611, 0.0434543, 0.28", "116.992, 88.917, 0.306574, 0.55", "118.294, 89.2935, 0.407724, 0.28", "121.23, 90.0731, 0.354106, 1.94", "123.992, 90.7457, 0.142665, 0.28", "126.053, 91.2164, -0.0495687, 0.28", "128.703, 91.8029, -0.36442, 0.55", "132.596, 92.6072, -0.848951, 0.28", "133.745, 92.8614, -0.994407, 1.66", "142.475, 96.6041, -1.82569, 1.66", "150.768, 100.736, -4.05155, 1.66", "158.938, 105.235, -5.91937, 1.66", "166.229, 110.77, -8.33075, 1.66", "171.603, 117.582, -11.9404, 1.66", "176.945, 123.99, -16.3398, 1.66", "182.939, 130.742, -18.9266, 1.66", "187.578, 138.326, -21.7574, 1.66", "192.932, 145.89, -22.6335, 1.66", "198.661, 153.095, -24.264, 1.66", "204.506, 160.275, -25.5335, 1.66", "210.218, 167.634, -25.6345, 1.66", "215.215, 175.445, -25.5294, 1.66", "219.108, 183.702, -24.3157, 1.66", "223.431, 191.508, -21.9372, 1.66", "227.149, 199.467, -19.1679, 1.66", "229.736, 207.882, -16.624, 1.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.1927, 12.4293, 13.5106, 2.22", "18.7304, 11.1536, 15.4222, 2.22", "20.066, 10.9754, 17.0227, 0.83", "21.732, 11.3695, 19.2824, 0.83", "22.8832, 12.2957, 22.2758, 0.83", "24.6839, 13.5913, 27.1368, 0.83", "25.6176, 14.1378, 29.5117, 1.38", "26.9427, 14.7967, 32.8795, 1.66", "28.2449, 15.4282, 36.3943, 2.22", "32.7709, 17.1524, 48.4822, 0.83", "33.632, 17.3003, 50.7069, 1.11", "34.3694, 16.9603, 52.4576, 0.55", "35.2049, 16.3009, 54.2455, 0.55", "36.554, 14.6719, 56.8244, 0.55", "37.8941, 12.4656, 59.1302, 0.83", "38.3396, 11.1647, 59.4852, 0.55", "39.5498, 5.86189, 61.0605, 0.55", "43.2276, 3.14282, 72.0785, 0.55", "46.5878, 2.6774, 83.5549, 0.55", "50.5338, 4.00756, 94.7715, 0.55", "53.7483, 4.47603, 106.292, 0.55", "55.5251, 2.59734, 117.957, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "16.1927, 12.4293, 13.5106, 1.38", "20.2353, 11.5991, 16.4105, 1.38", "23.9956, 11.069, 18.6893, 0.83", "26.8364, 10.5563, 20.3632, 1.11", "31.7749, 9.4873, 23.3255, 0.83", "36.2356, 8.36516, 26.0823, 1.11", "40.1074, 7.30415, 28.3681, 0.83", "43.3407, 6.18823, 30.0893, 0.83", "48.7262, 4.10837, 32.6811, 1.11", "50.7238, 3.2394, 33.6211, 0.83", "52.5654, 2.22563, 34.5356, 1.11", "56.1436, 0.083059, 36.1921, 0.83", "60.6596, -2.89229, 38.3637, 1.11", "61.9678, -3.78677, 38.9966, 0.83", "63.0755, -4.43722, 39.582, 0.83", "64.6462, -5.26518, 40.5186, 0.83", "67.7576, -6.76767, 42.6662, 1.38", "70.138, -7.89678, 44.6543, 0.83", "73.8867, -9.59828, 48.0801, 0.83", "77.8175, -11.2557, 51.6593, 0.55", "78.0691, -11.3483, 51.8781, 0.83", "80.0051, -12.0338, 53.4862, 0.83", "82.0579, -12.8285, 55.0079, 0.55", "83.2732, -13.3447, 55.7608, 0.55", "85.1154, -14.0982, 56.6791, 0.55", "87.9552, -15.2109, 57.8313, 0.55", "90.7262, -16.2143, 58.9597, 0.55", "94.7825, -17.5569, 60.5991, 0.55", "97.7791, -18.4302, 61.773, 0.83", "102.143, -19.562, 63.4331, 0.83", "105.774, -20.4995, 64.821, 0.55", "107.711, -20.8831, 65.5053, 0.55", "109.003, -21.0281, 65.9094, 0.55", "111.929, -21.0903, 66.802, 1.38", "114.316, -21.0585, 67.4181, 0.55", "115.693, -21.0332, 67.7149, 0.55", "120.201, -21.0478, 68.6039, 0.55", "124.279, -21.0513, 69.3131, 0.55", "127.919, -21.1466, 69.938, 0.83", "131.915, -21.3536, 70.6163, 0.55", "135.258, -21.6975, 71.213, 1.11", "138.294, -22.1779, 71.842, 0.55", "139.919, -22.563, 72.2362, 0.55", "142.206, -23.3349, 72.8737, 0.55", "144.173, -24.2673, 73.5967, 0.55", "146.543, -25.8461, 74.9278, 0.83", "148.453, -27.3491, 76.1864, 0.55", "150.5, -29.2209, 77.6583, 0.55", "153.144, -31.9759, 79.7555, 0.55", "154.498, -33.5768, 80.9479, 0.83", "156.289, -36.0541, 82.7235, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.98313, 66.1556, -57.7661, 0.83", "-6.91704, 69.3965, -58.912, 0.83", "-7.11537, 72.4838, -59.9547, 0.83", "-7.33977, 74.7401, -60.5118, 0.55", "-7.55914, 76.9639, -60.9161, 0.83", "-7.79004, 78.9273, -61.2186, 0.55", "-8.06897, 80.8596, -61.4925, 0.55", "-8.4802, 82.6169, -61.7123, 0.55", "-9.157, 85.4607, -61.8539, 0.55", "-9.57525, 87.1488, -61.9108, 0.83", "-10.1093, 89.5672, -61.9227, 0.83", "-10.5806, 91.5297, -61.9208, 0.83", "-11.0452, 93.226, -61.939, 0.83", "-11.885, 96.2672, -62.017, 0.83", "-12.7337, 99.1144, -62.1695, 0.83", "-13.2624, 101.043, -62.2877, 0.55", "-13.6355, 102.848, -62.3732, 0.55", "-13.8488, 104.663, -62.4452, 0.55", "-13.9819, 107.798, -62.5893, 0.83", "-13.9299, 108.977, -62.6379, 0.83", "-13.6708, 111.21, -62.7157, 0.55", "-13.3615, 113.585, -62.8012, 0.55", "-13.0783, 115.602, -62.8345, 0.55", "-12.7882, 117.814, -62.8471, 0.55", "-12.493, 120.816, -62.8252, 0.55", "-12.3308, 122.506, -62.861, 0.55", "-12.1724, 124.314, -62.9381, 0.83", "-12.0241, 125.935, -63.0498, 0.83", "-11.8203, 128.259, -63.2944, 0.83", "-11.5733, 130.364, -63.5444, 0.83", "-11.2949, 132.794, -63.86, 0.83", "-10.9315, 135.307, -64.1593, 0.55", "-10.5172, 137.896, -64.4235, 0.55", "-10.1276, 140.346, -64.6098, 0.55", "-9.88251, 142.461, -64.7007, 0.55", "-9.68818, 144.324, -64.7408, 0.55", "-9.45725, 146.886, -64.7055, 0.55", "-9.29729, 148.938, -64.6277, 0.55", "-9.08548, 151.318, -64.4847, 0.55", "-8.91632, 154.13, -64.2585, 0.55", "-8.8976, 155.917, -64.1215, 0.55", "-8.91175, 157.289, -64.011, 0.55", "-9.02009, 159.27, -63.849, 0.55", "-9.22945, 163.629, -63.4584, 0.55", "-9.30553, 165.503, -63.2723, 0.55", "-9.31995, 167.543, -63.0495, 0.55", "-9.32751, 169.771, -62.7912, 0.55", "-9.29421, 170.96, -62.6784, 0.28", "-9.14835, 172.811, -62.5522, 0.83", "-8.96406, 174.776, -62.4127, 0.55", "-8.65747, 176.908, -62.2631, 0.55", "-8.4061, 178.28, -62.1875, 0.55", "-8.00557, 180.504, -62.1152, 0.55", "-7.82676, 181.543, -62.1025, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-6.98313, 66.1556, -57.7661, 0.83", "-6.83906, 67.6512, -58.0796, 0.83", "-6.76812, 69.9848, -58.6547, 0.83", "-6.78079, 71.1651, -58.9241, 0.28", "-6.764, 71.6459, -59.0213, 0.55", "-6.50514, 73.9303, -59.4648, 0.28", "-6.35032, 75.2255, -59.7368, 0.83", "-6.28616, 76.4404, -60.164, 0.83", "-6.26698, 78.684, -61.1082, 0.55", "-6.16093, 80.1923, -61.8179, 0.55", "-5.85538, 82.4256, -62.9657, 0.55", "-5.59279, 84.2116, -63.9653, 0.55", "-5.01078, 88.1914, -66.3746, 0.55", "-4.75601, 89.7009, -67.3676, 0.55", "-4.269, 93.0419, -69.6668, 0.55", "-3.93568, 96.0322, -71.6731, 0.55", "-3.78358, 97.8251, -72.8209, 0.55", "-3.60995, 98.97, -73.4532, 0.55", "-3.16972, 101.188, -74.5123, 0.55", "-2.76763, 103.79, -75.7175, 0.55", "-2.60933, 105.527, -76.3848, 0.55", "-2.49788, 106.741, -76.7703, 0.28", "-2.00241, 109.911, -77.6526, 0.55", "-1.71286, 111.858, -78.2327, 0.28", "-1.60399, 112.794, -78.4945, 0.83", "-1.42613, 114.518, -78.9575, 0.83", "-1.34053, 116.168, -79.4558, 0.55", "-1.2629, 118.718, -80.3589, 0.55", "-1.44318, 120.669, -81.2226, 0.55", "-1.67158, 122.465, -82.0551, 0.55", "-1.80111, 123.633, -82.6397, 0.28", "-1.92505, 125.239, -83.5364, 0.55", "-1.95113, 127.408, -84.845, 0.28", "-2.04984, 129.756, -86.3024, 0.55", "-2.03556, 131.075, -87.1303, 0.55", "-1.93523, 132.7, -88.2521, 0.55", "-1.74929, 134.165, -89.2949, 0.55", "-1.42657, 135.887, -90.3749, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-88.8292, 71.645, -72.8837, 0.28", "-95.3677, 71.3845, -69.8533, 0.28", "-97.6668, 71.2567, -68.9278, 0.55", "-100.158, 71.195, -68.0475, 0.55", "-102.498, 71.137, -67.2206, 0.55", "-104.964, 71.0759, -66.349, 0.55", "-107.28, 71.0185, -65.5306, 0.83", "-109.127, 70.8971, -65.3002, 0.28", "-111.124, 70.8349, -64.8913, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-88.8292, 71.645, -72.8837, 0.55", "-88.8859, 74.5574, -73.8195, 0.55", "-89.0817, 76.4376, -74.5797, 0.28", "-89.346, 78.8335, -75.5618, 0.55", "-89.7656, 81.5066, -76.5951, 0.55", "-90.0154, 82.6166, -76.9884, 0.55", "-91.3134, 88.3844, -79.0324, 0.83", "-91.9124, 90.637, -79.8502, 0.28", "-93.0034, 94.436, -81.2274, 0.55", "-94.0304, 97.6167, -82.327, 0.55", "-95.0586, 100.118, -83.1609, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-145.76, 68.8615, 17.746, 0.83", "-145.696, 69.6042, 18.0863, 0.83", "-145.657, 71.6373, 19.216, 0.83", "-145.775, 73.1997, 20.6327, 0.55", "-146.028, 75.0975, 22.5384, 0.55", "-146.47, 77.5578, 25.085, 0.55", "-146.626, 78.3714, 25.9278, 0.55", "-146.878, 79.6342, 27.3781, 1.11", "-147.651, 82.5727, 31.3883, 0.28", "-147.852, 83.0459, 32.1442, 0.55", "-148.24, 83.7202, 33.4164, 0.28", "-148.496, 84.1407, 34.0997, 0.55", "-150.598, 89.6504, 41.623, 0.55", "-153.695, 95.7977, 48.2151, 0.55", "-157.456, 101.257, 55.1326, 0.55", "-163.369, 105.276, 61.6679, 0.55", "-168.854, 109.551, 68.3857, 0.55", "-174.99, 114.039, 74.3592, 0.55", "-180.801, 118.886, 80.3415, 0.55", "-187.319, 122.481, 86.5839, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-145.76, 68.8615, 17.746, 0.55", "-147.568, 71.0113, 17.4461, 0.55", "-149.02, 72.3211, 17.3876, 0.55", "-150.349, 73.2542, 17.5033, 0.28", "-151.205, 73.7591, 17.707, 0.55", "-153.197, 74.6699, 18.3588, 0.28", "-154.791, 75.2008, 19.0417, 0.55", "-158.458, 76.0652, 20.8436, 0.55", "-160.98, 76.4903, 22.272, 0.55", "-163.487, 76.6594, 23.8768, 1.11", "-165.535, 76.5734, 25.3652, 0.28", "-167.396, 76.1631, 26.9587, 0.55", "-175.584, 79.299, 32.1606, 0.55", "-183.623, 81.7353, 37.9602, 0.55", "-191.964, 84.2055, 43.2975, 0.55", "-199.561, 86.782, 49.6098, 0.55", "-207.588, 90.1881, 54.8824, 0.55", "-216.927, 91.9689, 58.6019, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "55.5251, 2.59734, 117.957, 0.83", "58.6058, 2.10494, 127.55, 0.83", "61.8508, -0.194505, 136.786, 0.83", "65.5828, -1.96197, 145.97, 0.83", "68.5982, -2.72305, 155.563, 0.83", "70.3762, -5.65499, 164.989, 0.83", "70.9067, -7.88673, 174.773, 0.83", "69.268, -11.8586, 183.771, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "55.5251, 2.59734, 117.957, 0.55", "61.8141, 0.681897, 130.695, 0.83", "66.0068, -1.16359, 144.284, 0.83", "71.1365, -3.76511, 157.404, 0.83", "76.0282, -7.9023, 170.174, 0.83", "82.0844, -11.6729, 182.559, 0.83", "85.4414, -17.13, 195.286, 0.83", "88.3883, -23.1831, 207.818, 0.83", "90.4967, -27.8237, 221.163, 0.83", "93.9154, -34.8427, 232.995, 0.83", "98.3049, -40.5184, 245.287, 0.83", "101.486, -46.8458, 257.608, 0.83", "106.716, -52.2567, 269.696, 0.83", "111.543, -58.7266, 281.369, 0.83", "116.348, -65.9488, 292.552, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "156.289, -36.0541, 82.7235, 0.55", "156.19, -35.1598, 88.4479, 0.55", "156.168, -34.9619, 89.7145, 0.28", "156.152, -34.8141, 90.6609, 0.55", "156.228, -35.7805, 100.14, 0.55", "156.754, -36.61, 109.635, 0.55", "156.216, -36.9509, 119.152, 0.55", "157.455, -38.4172, 128.499, 0.55", "158.937, -37.9782, 137.993, 0.55", "159.998, -37.0418, 147.515, 0.55", "160.94, -37.3115, 157.044, 0.55", "162.051, -35.7607, 166.501, 0.55", "164.686, -35.2253, 175.768, 0.55", "168.58, -33.2346, 184.43, 0.55", "173.336, -30.6448, 192.498, 0.55", "179.325, -28.4233, 199.821, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "156.289, -36.0541, 82.7235, 0.28", "156.925, -36.6043, 83.4335, 0.28", "157.551, -37.1451, 84.1314, 0.55", "158.434, -37.9078, 85.1156, 0.28", "159.21, -38.5786, 85.9812, 0.83", "164.063, -42.1459, 90.9242, 0.83", "168.041, -46.3082, 96.1207, 0.83", "172.573, -50.251, 101.055, 0.83", "176.728, -53.0843, 107.027, 0.83", "180.625, -55.8911, 113.181, 0.83", "183.68, -59.2576, 119.491, 0.83", "186.741, -62.6615, 125.775, 0.83", "189.948, -66.1463, 131.94, 0.83", "192.55, -70.1902, 138.007, 0.83", "194.549, -73.3613, 144.815, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-7.82676, 181.543, -62.1025, 0.28", "-7.53668, 182.985, -61.8162, 0.28", "-7.35321, 184.369, -61.6224, 0.83", "-7.28671, 185.114, -61.5594, 0.28", "-7.26077, 185.87, -61.5143, 0.28", "-7.26435, 186.999, -61.4558, 0.55", "-7.23827, 187.847, -61.4091, 0.28", "-7.22615, 188.805, -61.3797, 0.83", "-7.18839, 190.151, -61.3502, 0.28", "-7.11377, 191.143, -61.3475, 0.28", "-6.96024, 192.242, -61.33, 0.28", "-6.64116, 193.549, -61.1849, 0.55", "-6.26445, 194.585, -60.9816, 0.28", "-5.8211, 195.454, -60.7153, 0.55", "-5.15213, 196.417, -60.2901, 0.28", "-3.81925, 197.847, -59.1913, 0.55", "-2.23909, 199.202, -57.545, 0.28", "-1.53923, 199.762, -56.6217, 0.55", "-1.04854, 200.084, -55.9392, 0.28", "-0.724698, 200.26, -55.4463, 0.28", "0.721383, 200.888, -52.9594, 0.55", "1.22873, 201.062, -51.9767, 0.28", "1.78388, 201.475, -50.6956, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-7.82676, 181.543, -62.1025, 0.28", "-8.52057, 182.749, -62.9357, 0.28", "-8.90195, 183.323, -63.354, 0.83", "-9.70094, 184.46, -64.1746, 0.28", "-10.6071, 185.803, -65.11, 1.11", "-12.2227, 188.483, -66.8105, 0.28", "-12.795, 189.535, -67.4592, 0.55", "-13.4353, 190.784, -68.3282, 0.28", "-13.6291, 191.225, -68.6433, 0.28", "-13.9394, 191.933, -69.2071, 0.55", "-14.5237, 193.026, -70.05, 0.28", "-15.0104, 193.781, -70.6148, 0.55", "-16.2726, 195.604, -72.0423, 0.28", "-16.7493, 196.245, -72.5475, 0.83", "-18.137, 198.068, -73.9896, 0.28", "-19.4201, 199.788, -75.3102, 0.55", "-20.0518, 200.689, -75.9552, 0.28", "-20.4204, 201.314, -76.2966, 0.55", "-21.25, 203.15, -77.0204, 0.28", "-21.7664, 204.62, -77.3912, 0.55", "-21.9963, 205.846, -77.4599, 0.28", "-22.0352, 206.862, -77.3876, 0.55", "-21.9873, 208.401, -77.1634, 0.28", "-21.9878, 208.436, -77.1592, 0.55", "-22.1592, 209.857, -76.9805, 0.28", "-22.3216, 210.63, -76.8667, 0.55", "-22.7488, 211.912, -76.7849, 0.28", "-23.157, 212.86, -76.8922, 0.55", "-24.4506, 215.097, -77.8778, 0.28", "-24.8527, 215.662, -78.2516, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-1.42657, 135.887, -90.3749, 0.28", "-0.151301, 138.268, -92.4319, 0.28", "0.906693, 140.389, -94.1445, 0.55", "2.98765, 145.011, -97.6355, 0.55", "3.72342, 146.984, -99.0509, 0.28", "4.18486, 148.297, -99.8697, 0.55", "4.91983, 150.555, -101.246, 0.28", "5.50241, 152.842, -102.517, 0.55", "5.70792, 153.993, -103.104, 0.55", "5.97975, 156.2, -104.063, 0.28", "6.27557, 159.174, -105.529, 0.55", "6.61861, 162.143, -107.211, 0.28", "6.90903, 163.648, -108.22, 0.55", "7.22194, 165.064, -109.242, 0.55", "7.98442, 167.499, -111.645, 0.55", "8.69618, 169.082, -113.656, 0.28", "8.78071, 169.261, -113.909, 0.83", "9.56168, 170.876, -116.139, 0.28", "10.2873, 172.468, -118.191, 0.55", "11.8309, 176.603, -122.753, 0.28", "12.6722, 179.092, -125.059, 0.55", "13.6394, 181.93, -127.432, 0.28", "14.5367, 184.123, -129.11, 0.55", "15.5966, 186.383, -130.654, 0.55", "16.8719, 188.981, -132.141, 0.28", "17.5891, 190.475, -132.765, 0.55", "19.3559, 193.617, -134.041, 0.55", "22.2197, 198.135, -136.287, 0.55", "23.9401, 200.743, -137.788, 0.55", "25.0563, 202.354, -138.861, 0.55", "26.4238, 204.373, -140.248, 0.28", "27.7476, 206.742, -141.77, 0.55", "29.3467, 210.281, -143.657, 0.55", "29.8141, 211.38, -144.147, 0.55", "30.4909, 213.102, -144.837, 0.55", "31.4411, 215.588, -145.752, 0.55", "32.333, 217.975, -146.478, 0.55", "33.3424, 220.82, -147.203, 0.55", "35.0722, 225.587, -148.196, 0.55", "35.7375, 227.584, -148.604, 0.28", "36.4063, 229.659, -149.017, 0.55", "37.171, 231.839, -149.434, 0.55", "37.8507, 233.605, -149.731, 0.28", "38.6357, 235.829, -150.15, 0.55", "39.1716, 237.559, -150.559, 0.55", "40.0777, 240.417, -151.368, 0.55", "40.6819, 242.767, -152.079, 0.28", "41.0107, 244.368, -152.58, 0.28", "41.6181, 247.596, -153.641, 0.55", "42.205, 250.861, -154.705, 0.28", "42.6379, 253.366, -155.503, 0.55", "43.163, 257.234, -156.624, 0.28", "43.3172, 258.577, -157.01, 0.55", "43.4823, 260.263, -157.433, 0.28", "43.711, 262.177, -157.881, 0.28", "43.8969, 263.683, -158.143, 0.55", "43.9521, 264.888, -158.393, 0.28", "44.1291, 266.578, -158.835, 0.28", "44.2897, 268.095, -159.234, 0.55", "44.3882, 271.305, -160.053, 0.28", "44.0823, 274.007, -160.904, 0.55", "43.6657, 276.092, -161.61, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-1.42657, 135.887, -90.3749, 0.28", "-1.01469, 137.072, -90.3595, 0.28", "-0.726372, 137.977, -90.3395, 0.83", "-0.386251, 139.287, -90.3156, 0.55", "-0.024343, 141.005, -90.2069, 0.55", "0.306863, 143.159, -89.8987, 0.55", "0.438933, 144.288, -89.6697, 0.28", "0.586243, 145.326, -89.4371, 0.55", "0.745843, 146.527, -89.1332, 0.55", "0.880453, 148.758, -88.454, 0.55", "0.828753, 150.594, -87.7672, 0.28", "0.649873, 151.735, -87.2321, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-95.0586, 100.118, -83.1609, 0.28", "-96.512, 99.6615, -84.5067, 0.28", "-97.3773, 99.39, -85.3079, 0.28", "-98.636, 98.995, -86.4734, 0.28", "-100.195, 98.5057, -87.9172, 0.55", "-102.585, 97.756, -90.1296, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-95.0586, 100.118, -83.1609, 0.28", "-95.6762, 101.303, -85.756, 0.28", "-96.0607, 102.443, -88.5836, 0.55", "-96.1814, 103.045, -90.303, 0.55", "-96.1714, 103.685, -92.1748, 0.28", "-95.9793, 105.354, -96.8678, 0.83", "-95.7125, 107.538, -102.927, 0.28", "-95.6163, 107.854, -103.944, 0.55", "-95.0493, 108.845, -107.28, 0.28", "-94.4315, 109.592, -110.1, 0.55", "-94.1151, 109.877, -111.246, 0.55", "-93.1888, 110.523, -113.848, 0.28" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-187.319, 122.481, 86.5839, 0.83", "-190.501, 127.239, 91.9414, 0.83", "-193.916, 132.802, 96.2071, 0.83", "-195.927, 139.129, 100.166, 0.83", "-196.834, 145.125, 104.968, 0.83", "-197.507, 150.611, 110.422, 0.83", "-196.994, 155.274, 116.67, 0.83", "-195.956, 160.412, 122.42, 0.83", "-193.526, 166.301, 126.807, 0.83", "-190.152, 172.019, 130.815, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-187.319, 122.481, 86.5839, 0.55", "-191.834, 128.299, 94.5232, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-216.927, 91.9689, 58.6019, 0.83", "-224.541, 94.6306, 63.0169, 0.83", "-232.14, 98.6239, 66.1858, 0.83", "-239.534, 103.328, 68.6913, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-216.927, 91.9689, 58.6019, 0.55", "-228.058, 94.3737, 64.092, 0.83", "-239.178, 99.1377, 67.5734, 0.83", "-249.828, 105.024, 70.6213, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "69.268, -11.8586, 183.771, 0.55", "72.5657, -15.7103, 194.089, 0.55", "75.8073, -18.3078, 204.853, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "69.268, -11.8586, 183.771, 0.28", "70.241, -11.7904, 192.069, 0.55", "70.9557, -10.8795, 200.35, 0.55", "71.7165, -8.55196, 208.345, 0.55", "72.8923, -5.47546, 216.017, 0.55", "74.8832, -3.88069, 223.98, 0.55", "77.7123, -2.69647, 231.759, 0.55", "80.3034, 0.012615, 239.209, 0.55", "82.628, 2.71704, 246.752, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "116.348, -65.9488, 292.552, 0.55", "116.52, -69.1051, 301.969, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "116.348, -65.9488, 292.552, 0.28", "121.5, -69.9257, 301.207, 0.55", "126.35, -73.5643, 310.199, 0.55", "130.987, -75.453, 319.878, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "179.325, -28.4233, 199.821, 0.83", "180.812, -27.9557, 208.029, 0.83", "180.54, -27.338, 216.335, 0.83", "179.571, -26.0315, 224.526, 0.83", "178.138, -24.2969, 232.577, 0.83", "176.714, -24.0444, 240.754, 0.83", "176.004, -23.7956, 249.034, 0.83", "175.687, -22.9466, 257.327, 0.83", "175.606, -22.4128, 265.643, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "179.325, -28.4233, 199.821, 0.55", "181.084, -29.0957, 209.656, 0.83", "182.771, -30.2563, 219.437, 0.83", "184.957, -32.5402, 228.883, 0.83", "186.016, -35.0065, 238.435, 0.83", "188.225, -36.7614, 248.011, 0.83", "190.41, -39.6621, 257.26, 0.83", "193.973, -43.2837, 265.819, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "194.549, -73.3613, 144.815, 0.55", "199.297, -76.6986, 153.198, 0.55", "203.607, -80.9588, 161.347, 0.55", "206.716, -84.3539, 170.39, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "194.549, -73.3613, 144.815, 0.28", "198.116, -76.8822, 150.653, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "0.649873, 151.735, -87.2321, 0.28", "0.828043, 154.099, -87.1159, 0.28", "0.834583, 155.617, -86.8314, 0.55", "0.776583, 156.435, -86.6388, 0.28", "0.706043, 156.929, -86.5244, 0.55", "0.418643, 158.412, -86.0712, 0.28", "0.269413, 159.401, -85.8201, 0.55", "0.0654271, 161.308, -85.0981, 0.28", "-0.0174429, 161.949, -84.8578, 0.55", "-0.419689, 164.119, -84.1018, 0.28", "-0.816329, 165.522, -83.761, 0.55", "-1.79245, 168.071, -83.2537, 0.28", "-2.54698, 169.953, -82.9501, 0.55", "-3.01422, 171.301, -82.8389, 0.28", "-3.12053, 171.606, -82.8209, 0.55", "-4.34875, 173.769, -82.9068, 0.28", "-5.23657, 174.994, -83.0976, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.649873, 151.735, -87.2321, 0.28", "2.69256, 151.58, -88.152, 0.28", "2.92775, 151.579, -88.2506, 0.55", "4.70268, 151.756, -88.8935, 0.28", "6.63454, 151.949, -89.5934, 0.55", "10.2326, 152.309, -90.8968, 0.28", "11.971, 152.483, -91.5265, 0.28", "12.8442, 152.527, -91.8887, 0.28", "14.5262, 152.714, -92.6252, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-93.1888, 110.523, -113.848, 0.28", "-90.8184, 111.769, -116.258, 0.28", "-89.3065, 112.564, -117.795, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-93.1888, 110.523, -113.848, 0.55", "-94.0157, 111.733, -115.331, 0.55", "-95.9887, 114.711, -119.159, 0.55", "-96.8824, 116.23, -121.237, 0.55", "-97.56, 117.333, -122.859, 0.28", "-98.2372, 118.501, -124.742, 0.55", "-99.1222, 120.135, -127.619, 0.55", "-99.5633, 120.992, -129.196, 0.55", "-100.185, 122.083, -131.258, 0.28", "-100.74, 123.329, -133.904, 0.55", "-101.31, 124.723, -137.282, 0.28", "-101.647, 125.513, -139.494, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "75.8073, -18.3078, 204.853, 0.83", "77.8089, -20.3787, 211.922, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "75.8073, -18.3078, 204.853, 0.55", "77.9857, -20.5995, 212.189, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_64", "dend_61", "dend_58", "dend_55", "dend_35", "dend_32", "dend_21", "dend_0", "dend_69", "dend_68", "dend_66", "dend_65", "dend_63", "dend_62", "dend_60", "dend_59", "dend_57", "dend_56", "dend_45", "dend_36", "dend_34", "dend_33", "dend_23", "dend_22", "dend_18", "dend_1", "dend_46", "dend_44", "dend_37", "dend_31", "dend_24", "dend_20", "dend_19", "dend_9", "dend_2", "dend_52", "dend_47", "dend_43", "dend_38", "dend_28", "dend_25", "dend_13", "dend_10", "dend_6", "dend_3", "dend_54", "dend_53", "dend_51", "dend_48", "dend_42", "dend_39", "dend_30", "dend_29", "dend_27", "dend_26", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_50", "dend_49", "dend_41", "dend_40", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_64", "dend_61", "dend_58", "dend_55", "dend_35", "dend_32", "dend_21", "dend_0", "dend_69", "dend_68", "dend_66", "dend_65", "dend_63", "dend_62", "dend_60", "dend_59", "dend_57", "dend_56", "dend_45", "dend_36", "dend_34", "dend_33", "dend_23", "dend_22", "dend_18", "dend_1", "dend_46", "dend_44", "dend_37", "dend_31", "dend_24", "dend_20", "dend_19", "dend_9", "dend_2", "dend_52", "dend_47", "dend_43", "dend_38", "dend_28", "dend_25", "dend_13", "dend_10", "dend_6", "dend_3", "dend_54", "dend_53", "dend_51", "dend_48", "dend_42", "dend_39", "dend_30", "dend_29", "dend_27", "dend_26", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_50", "dend_49", "dend_41", "dend_40", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_64", "dend_61", "dend_58", "dend_55", "dend_35", "dend_32", "dend_21", "dend_0", "axon_0", "dend_69", "dend_68", "dend_66", "dend_65", "dend_63", "dend_62", "dend_60", "dend_59", "dend_57", "dend_56", "dend_45", "dend_36", "dend_34", "dend_33", "dend_23", "dend_22", "dend_18", "dend_1", "axon_1", "dend_46", "dend_44", "dend_37", "dend_31", "dend_24", "dend_20", "dend_19", "dend_9", "dend_2", "dend_52", "dend_47", "dend_43", "dend_38", "dend_28", "dend_25", "dend_13", "dend_10", "dend_6", "dend_3", "dend_54", "dend_53", "dend_51", "dend_48", "dend_42", "dend_39", "dend_30", "dend_29", "dend_27", "dend_26", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_50", "dend_49", "dend_41", "dend_40", "dend_17", "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_4", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_17", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_NBC_f831ad7a1f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_35
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_0
create dend_18
public dend_18
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_23
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, axon_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, axon_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_63
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_17, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.49999995020322374)
    connect dend_64(0), soma_0(0.49999995020322374)
    connect dend_61(0), soma_0(0.49999995020322374)
    connect dend_58(0), soma_0(0.49999995020322374)
    connect dend_55(0), soma_0(0.49999995020322374)
    connect dend_35(0), soma_0(0.49999995020322374)
    connect dend_32(0), soma_0(0.49999995020322374)
    connect dend_21(0), soma_0(0.49999995020322374)
    connect dend_0(0), soma_0(0.49999995020322374)
    connect axon_0(0), soma_0(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_45(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.75681, 7.93669, -3.00698, 2.63904 ) }
    soma_0 { pt3dadd( -6.11415, 7.12684, -2.72405, 4.23664 ) }
    soma_0 { pt3dadd( -5.47148, 6.31698, -2.44112, 6.10767 ) }
    soma_0 { pt3dadd( -4.82882, 5.50713, -2.15818, 7.7632 ) }
    soma_0 { pt3dadd( -4.18616, 4.69727, -1.87525, 10.2402 ) }
    soma_0 { pt3dadd( -3.5435, 3.88742, -1.59232, 11.8064 ) }
    soma_0 { pt3dadd( -2.90084, 3.07757, -1.30939, 12.5995 ) }
    soma_0 { pt3dadd( -2.25818, 2.26771, -1.02645, 13.3962 ) }
    soma_0 { pt3dadd( -1.61552, 1.45786, -0.74352, 14.1996 ) }
    soma_0 { pt3dadd( -0.972859, 0.648002, -0.460588, 14.817 ) }
    soma_0 { pt3dadd( -0.330198, -0.161852, -0.177655, 15.467 ) }
    soma_0 { pt3dadd( 0.312463, -0.971706, 0.105278, 16.407 ) }
    soma_0 { pt3dadd( 0.955124, -1.78156, 0.38821, 17.1741 ) }
    soma_0 { pt3dadd( 1.59778, -2.59142, 0.671143, 17.2738 ) }
    soma_0 { pt3dadd( 2.24045, -3.40127, 0.954075, 17.3386 ) }
    soma_0 { pt3dadd( 2.88311, -4.21112, 1.23701, 17.3694 ) }
    soma_0 { pt3dadd( 3.52577, -5.02098, 1.51994, 15.6873 ) }
    soma_0 { pt3dadd( 4.16843, -5.83083, 1.80287, 14.1508 ) }
    soma_0 { pt3dadd( 4.81109, -6.64069, 2.08581, 12.6795 ) }
    soma_0 { pt3dadd( 5.45375, -7.45054, 2.36874, 9.91553 ) }
    soma_0 { pt3dadd( 6.09641, -8.2604, 2.65167, 5.27854 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -1.51781, -10.5212, 2.68779, 3.6 ) }
    dend_67 { pt3dadd( -0.761088, -13.1471, 4.69132, 3.6 ) }
    dend_67 { pt3dadd( 0.132114, -16.7696, 7.83529, 1.66 ) }
    dend_67 { pt3dadd( 1.14735, -20.4181, 11.083, 1.66 ) }
    dend_67 { pt3dadd( 2.36386, -24.2526, 14.5731, 1.38 ) }
    dend_67 { pt3dadd( 4.21152, -29.8523, 19.493, 1.38 ) }
    dend_67 { pt3dadd( 5.26353, -33.1278, 22.2537, 1.38 ) }
    dend_67 { pt3dadd( 6.99593, -38.1469, 26.5119, 0.83 ) }
    dend_67 { pt3dadd( 8.74559, -42.9152, 30.5146, 1.11 ) }
    dend_67 { pt3dadd( 9.89528, -45.8091, 32.8818, 0.83 ) }
    dend_67 { pt3dadd( 11.2969, -49.1225, 35.3581, 0.83 ) }
    dend_67 { pt3dadd( 12.8182, -52.3786, 37.4865, 0.83 ) }
    dend_67 { pt3dadd( 14.0853, -55.0357, 39.139, 0.83 ) }
    dend_67 { pt3dadd( 14.6503, -56.0969, 39.8201, 0.83 ) }
    dend_67 { pt3dadd( 16.0927, -58.9834, 41.7275, 0.83 ) }
    dend_67 { pt3dadd( 16.6845, -60.1503, 42.5437, 0.83 ) }
    dend_67 { pt3dadd( 17.8098, -62.1134, 44.1633, 0.83 ) }
    dend_67 { pt3dadd( 19.0792, -64.1855, 46.0497, 0.83 ) }
    dend_67 { pt3dadd( 21.2165, -68.2745, 49.9396, 0.83 ) }
    dend_67 { pt3dadd( 22.4953, -70.8584, 52.3699, 0.83 ) }
    dend_67 { pt3dadd( 26.8357, -77.6497, 60.212, 0.83 ) }
    dend_67 { pt3dadd( 30.434, -84.6968, 68.1786, 0.83 ) }
    dend_67 { pt3dadd( 35.7895, -91.0423, 75.8038, 0.83 ) }
    dend_67 { pt3dadd( 41.611, -96.763, 83.6326, 0.83 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 45/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -8.94782, 4.26083, -7.77221, 1.11 ) }
    dend_64 { pt3dadd( -8.81988, 6.38316, -7.66304, 1.11 ) }
    dend_64 { pt3dadd( -8.87115, 8.55104, -7.55762, 0.83 ) }
    dend_64 { pt3dadd( -9.13453, 11.0225, -7.21849, 0.83 ) }
    dend_64 { pt3dadd( -9.36242, 12.4683, -7.03279, 1.66 ) }
    dend_64 { pt3dadd( -9.88668, 15.0661, -6.69479, 1.94 ) }
    dend_64 { pt3dadd( -10.4912, 17.5119, -6.44333, 0.83 ) }
    dend_64 { pt3dadd( -10.9152, 18.8303, -6.32827, 0.83 ) }
    dend_64 { pt3dadd( -12.2339, 22.059, -6.14986, 1.38 ) }
    dend_64 { pt3dadd( -13.2205, 23.9189, -6.25996, 0.55 ) }
    dend_64 { pt3dadd( -13.6091, 24.6199, -6.37132, 0.55 ) }
    dend_64 { pt3dadd( -14.4147, 26.0887, -6.98711, 0.55 ) }
    dend_64 { pt3dadd( -14.5886, 26.4299, -7.17934, 0.55 ) }
    dend_64 { pt3dadd( -15.3394, 27.9839, -8.25529, 0.55 ) }
    dend_64 { pt3dadd( -16.3785, 30.2643, -10.2243, 1.66 ) }
    dend_64 { pt3dadd( -17.1349, 32.1653, -11.8128, 1.66 ) }
    dend_64 { pt3dadd( -17.9434, 34.6021, -13.7864, 0.83 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -5.06781, -2.32267, 12.3478, 1.94 ) }
    dend_61 { pt3dadd( -6.97984, -2.96176, 16.5045, 1.94 ) }
    dend_61 { pt3dadd( -8.74525, -3.55184, 20.3425, 1.66 ) }
    dend_61 { pt3dadd( -14.0332, -5.31932, 31.8387, 1.38 ) }
    dend_61 { pt3dadd( -15.6108, -5.8466, 35.2683, 1.38 ) }
    dend_61 { pt3dadd( -18.1252, -6.68705, 40.7347, 1.11 ) }
    dend_61 { pt3dadd( -21.8758, -7.94067, 48.8886, 1.94 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -6.57781, 2.74083, -8.27221, 1.11 ) }
    dend_58 { pt3dadd( -7.77711, 0.454403, -7.69435, 1.11 ) }
    dend_58 { pt3dadd( -9.31206, -2.76644, -7.12825, 0.83 ) }
    dend_58 { pt3dadd( -10.916, -6.06655, -6.83119, 0.83 ) }
    dend_58 { pt3dadd( -13.2573, -10.4807, -6.83674, 0.55 ) }
    dend_58 { pt3dadd( -13.9699, -11.7706, -6.91724, 0.55 ) }
    dend_58 { pt3dadd( -15.5188, -14.8324, -7.40829, 0.55 ) }
    dend_58 { pt3dadd( -16.1314, -16.1814, -7.84282, 0.55 ) }
    dend_58 { pt3dadd( -17.2137, -18.4268, -8.98117, 0.83 ) }
    dend_58 { pt3dadd( -18.1313, -20.2598, -10.3355, 0.55 ) }
    dend_58 { pt3dadd( -18.6431, -21.2157, -11.1751, 0.55 ) }
    dend_58 { pt3dadd( -20.4619, -24.5494, -13.978, 1.11 ) }
    dend_58 { pt3dadd( -21.2325, -26.0722, -15.1783, 0.55 ) }
    dend_58 { pt3dadd( -22.1092, -27.9342, -16.6687, 0.55 ) }
    dend_58 { pt3dadd( -23.0404, -30.1453, -18.4467, 0.55 ) }
    dend_58 { pt3dadd( -23.4792, -31.125, -19.2505, 0.55 ) }
    dend_58 { pt3dadd( -24.4394, -33.0277, -20.9049, 1.11 ) }
    dend_58 { pt3dadd( -25.5258, -34.9111, -22.531, 0.55 ) }
    dend_58 { pt3dadd( -26.6469, -36.9073, -24.177, 0.55 ) }
    dend_58 { pt3dadd( -28.6821, -40.3486, -27.021, 1.38 ) }
    dend_58 { pt3dadd( -30.1171, -42.3577, -28.7539, 0.55 ) }
    dend_58 { pt3dadd( -31.6351, -44.0897, -30.3469, 0.55 ) }
    dend_58 { pt3dadd( -32.8899, -45.2944, -31.5438, 0.55 ) }
    dend_58 { pt3dadd( -34.5873, -46.7458, -33.0366, 0.55 ) }
    dend_58 { pt3dadd( -37.4716, -48.9497, -35.363, 1.94 ) }
    dend_58 { pt3dadd( -39.2614, -50.1283, -36.6753, 0.55 ) }
    dend_58 { pt3dadd( -41.179, -51.3409, -38.003, 0.83 ) }
    dend_58 { pt3dadd( -43.1984, -52.5491, -39.3166, 0.28 ) }
    dend_58 { pt3dadd( -44.0556, -53.0617, -39.8915, 0.55 ) }
    dend_58 { pt3dadd( -45.8557, -54.2476, -41.2229, 0.28 ) }
    dend_58 { pt3dadd( -46.9044, -55.1203, -42.0548, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_58 { pt3dadd( -48.5543, -56.7997, -43.7009, 1.94 ) }
    dend_58 { pt3dadd( -49.953, -58.3912, -45.3217, 0.28 ) }
    dend_58 { pt3dadd( -51.2081, -59.9041, -46.8533, 0.55 ) }
    dend_58 { pt3dadd( -52.9296, -62.0869, -49.1698, 0.28 ) }
    dend_58 { pt3dadd( -53.7173, -63.149, -50.3209, 0.83 ) }
    dend_58 { pt3dadd( -55.8423, -65.9898, -53.4774, 0.28 ) }
    dend_58 { pt3dadd( -57.0893, -67.7685, -55.607, 0.83 ) }
    dend_58 { pt3dadd( -57.5542, -68.4944, -56.4706, 0.28 ) }
    dend_58 { pt3dadd( -58.3126, -69.6439, -57.8089, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 9/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.177811, 4.62183, -8.24221, 1.38 ) }
    dend_55 { pt3dadd( -2.35791, 4.94958, -8.48099, 1.38 ) }
    dend_55 { pt3dadd( -5.14133, 5.22329, -8.91107, 0.83 ) }
    dend_55 { pt3dadd( -9.88463, 5.3491, -9.841, 0.83 ) }
    dend_55 { pt3dadd( -14.1962, 5.14076, -10.7797, 0.83 ) }
    dend_55 { pt3dadd( -18.6196, 4.66628, -11.9395, 0.83 ) }
    dend_55 { pt3dadd( -20.3078, 4.41366, -12.4226, 0.55 ) }
    dend_55 { pt3dadd( -23.3346, 3.63319, -13.3774, 0.83 ) }
    dend_55 { pt3dadd( -25.494, 2.82645, -14.0695, 0.55 ) }
    dend_55 { pt3dadd( -28.3108, 1.59008, -15.0395, 0.83 ) }
    dend_55 { pt3dadd( -30.9109, 0.532089, -16.0215, 0.55 ) }
    dend_55 { pt3dadd( -31.8117, 0.215279, -16.3925, 0.55 ) }
    dend_55 { pt3dadd( -34.2236, -0.417525, -17.4324, 0.83 ) }
    dend_55 { pt3dadd( -36.2096, -0.778165, -18.3116, 0.55 ) }
    dend_55 { pt3dadd( -39.4073, -1.24918, -19.899, 0.55 ) }
    dend_55 { pt3dadd( -41.9663, -1.67009, -21.4024, 0.83 ) }
    dend_55 { pt3dadd( -44.1524, -2.21703, -22.8795, 0.55 ) }
    dend_55 { pt3dadd( -46.1184, -3.04756, -24.547, 0.28 ) }
    dend_55 { pt3dadd( -47.1824, -3.67928, -25.6415, 0.28 ) }
    dend_55 { pt3dadd( -47.7613, -4.1596, -26.3185, 0.55 ) }
    dend_55 { pt3dadd( -48.7281, -5.3045, -27.4205, 0.55 ) }
    dend_55 { pt3dadd( -50.1011, -7.01027, -29.0834, 0.83 ) }
    dend_55 { pt3dadd( -51.3262, -8.23814, -30.2526, 0.55 ) }
    dend_55 { pt3dadd( -52.9139, -9.52347, -31.5346, 0.55 ) }
    dend_55 { pt3dadd( -53.6621, -10.1034, -32.1546, 0.55 ) }
    dend_55 { pt3dadd( -56.076, -11.8341, -34.1346, 1.11 ) }
    dend_55 { pt3dadd( -59.6187, -14.1156, -36.9344, 0.55 ) }
    dend_55 { pt3dadd( -62.7585, -15.8656, -39.2978, 0.55 ) }
    dend_55 { pt3dadd( -64.7255, -16.9404, -40.789, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 38/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.28781, 3.99482, -7.77221, 1.38 ) }
    dend_35 { pt3dadd( -8.43284, 5.82069, -7.77221, 1.38 ) }
    dend_35 { pt3dadd( -9.23578, 7.10106, -7.77221, 1.38 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.01219, 4.82133, -4.12221, 0.83 ) }
    dend_32 { pt3dadd( 1.70535, 6.28767, -4.31322, 0.83 ) }
    dend_32 { pt3dadd( 3.3483, 8.64248, -5.08019, 0.83 ) }
    dend_32 { pt3dadd( 5.27461, 10.8531, -6.01673, 0.83 ) }
    dend_32 { pt3dadd( 5.92091, 11.6094, -6.37486, 0.83 ) }
    dend_32 { pt3dadd( 7.34364, 13.2775, -7.25505, 0.83 ) }
    dend_32 { pt3dadd( 9.33328, 15.4909, -8.46392, 1.38 ) }
    dend_32 { pt3dadd( 11.1953, 17.2891, -9.60503, 0.83 ) }
    dend_32 { pt3dadd( 12.7719, 18.6155, -10.5553, 0.83 ) }
    dend_32 { pt3dadd( 15.5714, 20.8528, -12.3081, 1.38 ) }
    dend_32 { pt3dadd( 16.7822, 21.8961, -13.1062, 1.11 ) }
    dend_32 { pt3dadd( 18.409, 23.441, -14.1922, 1.11 ) }
    dend_32 { pt3dadd( 20.2513, 25.237, -15.3124, 1.11 ) }
    dend_32 { pt3dadd( 22.0606, 27.0406, -16.3338, 1.38 ) }
    dend_32 { pt3dadd( 23.851, 28.8246, -17.3955, 0.83 ) }
    dend_32 { pt3dadd( 24.7097, 29.6327, -17.8766, 0.83 ) }
    dend_32 { pt3dadd( 26.009, 30.9502, -18.6526, 0.83 ) }
    dend_32 { pt3dadd( 27.0998, 32.1255, -19.3373, 0.83 ) }
    dend_32 { pt3dadd( 28.6663, 33.7173, -20.2587, 1.94 ) }
    dend_32 { pt3dadd( 30.4167, 35.3523, -21.2963, 0.83 ) }
    dend_32 { pt3dadd( 32.7138, 37.3752, -22.6964, 0.83 ) }
    dend_32 { pt3dadd( 34.9434, 39.1207, -24.089, 1.66 ) }
    dend_32 { pt3dadd( 36.1731, 40.0016, -24.5317, 0.83 ) }
    dend_32 { pt3dadd( 37.868, 41.0507, -24.2541, 0.83 ) }
    dend_32 { pt3dadd( 40.0102, 42.0147, -22.8706, 0.55 ) }
    dend_32 { pt3dadd( 40.9057, 42.2917, -22.0658, 0.83 ) }
    dend_32 { pt3dadd( 42.601, 42.6614, -20.4118, 0.83 ) }
    dend_32 { pt3dadd( 52.2675, 44.2843, -10.9176, 2.22 ) }
    dend_32 { pt3dadd( 54.0791, 44.5405, -9.19482, 0.55 ) }
    dend_32 { pt3dadd( 54.9865, 44.6582, -8.37717, 0.55 ) }
    dend_32 { pt3dadd( 56.7132, 44.8363, -6.92424, 1.11 ) }
    dend_32 { pt3dadd( 60.1849, 45.1285, -4.59125, 0.55 ) }
    dend_32 { pt3dadd( 61.7052, 45.2347, -4.4113, 0.55 ) }
    dend_32 { pt3dadd( 63.1702, 45.3225, -5.01132, 1.11 ) }
    dend_32 { pt3dadd( 64.8015, 45.5233, -5.61666, 0.55 ) }
    dend_32 { pt3dadd( 65.9947, 45.7988, -6.01798, 0.28 ) }
    dend_32 { pt3dadd( 66.5925, 45.9803, -6.18875, 0.55 ) }
    dend_32 { pt3dadd( 68.1503, 46.4786, -6.47303, 0.28 ) }
    dend_32 { pt3dadd( 68.8765, 46.7061, -6.62874, 0.83 ) }
    dend_32 { pt3dadd( 70.9688, 47.3824, -7.11248, 0.28 ) }
    dend_32 { pt3dadd( 72.142, 47.7375, -7.38915, 1.11 ) }
    dend_32 { pt3dadd( 74.3065, 48.3384, -7.78725, 0.28 ) }
    dend_32 { pt3dadd( 75.4633, 48.6707, -7.83944, 0.83 ) }
    dend_32 { pt3dadd( 77.073, 49.0904, -7.73892, 0.28 ) }
    dend_32 { pt3dadd( 77.9082, 49.2656, -7.63112, 0.55 ) }
    dend_32 { pt3dadd( 79.1884, 49.5013, -7.3799, 0.28 ) }
    dend_32 { pt3dadd( 80.9903, 49.8096, -6.95471, 1.11 ) }
    dend_32 { pt3dadd( 84.5729, 50.4703, -5.93252, 0.28 ) }
    dend_32 { pt3dadd( 86.2161, 50.7763, -5.46029, 1.11 ) }
    dend_32 { pt3dadd( 87.6775, 51.0308, -5.06126, 0.55 ) }
    dend_32 { pt3dadd( 88.7238, 51.1886, -4.85177, 0.83 ) }
    dend_32 { pt3dadd( 89.8315, 51.301, -4.75925, 0.28 ) }
    dend_32 { pt3dadd( 90.5168, 51.3034, -4.79923, 0.83 ) }
    dend_32 { pt3dadd( 91.6774, 51.2311, -4.99404, 0.28 ) }
    dend_32 { pt3dadd( 92.4509, 51.1694, -5.0736, 0.55 ) }
    dend_32 { pt3dadd( 93.7545, 51.0055, -5.14441, 0.28 ) }
    dend_32 { pt3dadd( 94.6266, 50.8843, -5.1213, 0.55 ) }
    dend_32 { pt3dadd( 96.8394, 50.5883, -4.90208, 0.28 ) }
    dend_32 { pt3dadd( 98.0449, 50.4138, -4.7389, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( 98.9493, 50.3083, -4.55564, 0.28 ) }
    dend_32 { pt3dadd( 99.5781, 50.2713, -4.39326, 0.55 ) }
    dend_32 { pt3dadd( 100.945, 50.286, -3.92143, 0.28 ) }
    dend_32 { pt3dadd( 101.584, 50.3412, -3.67804, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.3378, 3.47233, -8.95221, 3.05 ) }
    dend_21 { pt3dadd( -11.5632, 3.72973, -9.81819, 3.05 ) }
    dend_21 { pt3dadd( -15.012, 4.45417, -12.2553, 2.22 ) }
    dend_21 { pt3dadd( -19.0496, 5.30229, -15.1085, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.22219, 5.04932, 2.17779, 2.77 ) }
    dend_0 { pt3dadd( 9.32908, 6.13802, 3.89443, 2.77 ) }
    dend_0 { pt3dadd( 10.4791, 7.26918, 5.67799, 2.77 ) }
    dend_0 { pt3dadd( 12.8396, 9.59087, 9.33878, 3.6 ) }
    dend_0 { pt3dadd( 13.4066, 10.1486, 10.2181, 3.6 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 13/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.09641, -8.2604, 2.65167, 0.83 ) }
    axon_0 { pt3dadd( 15.4206, -20.0103, 2.65167, 0.83 ) }
    axon_0 { pt3dadd( 24.7447, -31.7602, 2.65167, 0.83 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 16/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 41.611, -96.763, 83.6326, 0.55 ) }
    dend_69 { pt3dadd( 45.4929, -105.678, 92.3468, 0.55 ) }
    dend_69 { pt3dadd( 50.753, -115.059, 99.6466, 0.55 ) }
    dend_69 { pt3dadd( 55.6727, -125.864, 104.613, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 20/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 41.611, -96.763, 83.6326, 0.28 ) }
    dend_68 { pt3dadd( 44.2552, -101.828, 88.274, 0.55 ) }
    dend_68 { pt3dadd( 47.1866, -106.308, 93.3861, 0.55 ) }
    dend_68 { pt3dadd( 50.4871, -111.337, 97.6346, 0.55 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 24/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -17.9434, 34.6021, -13.7864, 0.55 ) }
    dend_66 { pt3dadd( -18.3222, 35.5056, -13.8052, 0.55 ) }
    dend_66 { pt3dadd( -18.9479, 37.1855, -14.1114, 0.55 ) }
    dend_66 { pt3dadd( -19.3787, 38.2885, -14.3711, 1.38 ) }
    dend_66 { pt3dadd( -20.5553, 41.3475, -15.2293, 0.55 ) }
    dend_66 { pt3dadd( -20.9966, 42.6176, -15.71, 0.55 ) }
    dend_66 { pt3dadd( -21.7648, 44.8658, -16.6437, 1.38 ) }
    dend_66 { pt3dadd( -22.9796, 48.2482, -18.2121, 0.55 ) }
    dend_66 { pt3dadd( -23.6704, 50.1832, -19.1829, 0.55 ) }
    dend_66 { pt3dadd( -24.3741, 52.2458, -20.2628, 1.38 ) }
    dend_66 { pt3dadd( -25.4744, 55.7537, -22.1992, 0.55 ) }
    dend_66 { pt3dadd( -26.1436, 57.7228, -23.2899, 0.28 ) }
    dend_66 { pt3dadd( -26.491, 58.6822, -23.7916, 0.55 ) }
    dend_66 { pt3dadd( -26.9499, 59.8668, -24.34, 0.28 ) }
    dend_66 { pt3dadd( -27.2564, 60.7142, -24.8162, 0.83 ) }
    dend_66 { pt3dadd( -27.7593, 62.1162, -25.7392, 0.28 ) }
    dend_66 { pt3dadd( -28.209, 63.4362, -26.8586, 0.83 ) }
    dend_66 { pt3dadd( -28.6911, 64.8924, -28.3847, 0.28 ) }
    dend_66 { pt3dadd( -29.2833, 66.5712, -30.3762, 1.11 ) }
    dend_66 { pt3dadd( -30.5628, 69.574, -34.6184, 0.28 ) }
    dend_66 { pt3dadd( -31.258, 70.9873, -36.8961, 0.83 ) }
    dend_66 { pt3dadd( -32.4966, 73.0798, -40.8271, 1.66 ) }
    dend_66 { pt3dadd( -32.9918, 73.8246, -42.4004, 0.28 ) }
    dend_66 { pt3dadd( -33.2776, 74.1632, -43.2279, 1.11 ) }
    dend_66 { pt3dadd( -34.7517, 75.5413, -46.9948, 0.55 ) }
    dend_66 { pt3dadd( -35.3638, 75.9678, -48.2603, 1.38 ) }
    dend_66 { pt3dadd( -37.3571, 77.1526, -51.9674, 0.28 ) }
    dend_66 { pt3dadd( -37.5824, 77.2816, -52.3544, 0.55 ) }
    dend_66 { pt3dadd( -38.7287, 77.9652, -54.3299, 0.28 ) }
    dend_66 { pt3dadd( -39.1772, 78.2409, -55.142, 0.83 ) }
    dend_66 { pt3dadd( -40.0703, 78.7574, -56.7162, 0.28 ) }
    dend_66 { pt3dadd( -40.1895, 78.8065, -56.9158, 0.55 ) }
    dend_66 { pt3dadd( -41.7564, 79.2465, -59.3911, 0.28 ) }
    dend_66 { pt3dadd( -42.6445, 79.4791, -60.7726, 0.83 ) }
    dend_66 { pt3dadd( -45.1456, 80.1951, -64.6307, 0.28 ) }
    dend_66 { pt3dadd( -46.2593, 80.5436, -66.3344, 1.11 ) }
    dend_66 { pt3dadd( -48.523, 81.457, -69.6632, 0.55 ) }
    dend_66 { pt3dadd( -49.1106, 81.7513, -70.4874, 0.55 ) }
    dend_66 { pt3dadd( -50.219, 82.4595, -71.9331, 0.83 ) }
    dend_66 { pt3dadd( -51.9816, 83.896, -74.1068, 0.28 ) }
    dend_66 { pt3dadd( -52.3811, 84.3109, -74.555, 0.55 ) }
    dend_66 { pt3dadd( -54.4151, 86.9528, -76.8292, 0.28 ) }
    dend_66 { pt3dadd( -54.9868, 87.8229, -77.4378, 1.66 ) }
    dend_66 { pt3dadd( -56.0537, 89.512, -78.5406, 0.28 ) }
    dend_66 { pt3dadd( -56.2901, 89.8936, -78.782, 0.55 ) }
    dend_66 { pt3dadd( -57.1359, 91.2861, -79.6107, 0.28 ) }
    dend_66 { pt3dadd( -57.5486, 91.9953, -80.0807, 0.83 ) }
    dend_66 { pt3dadd( -58.2123, 93.1184, -80.8936, 0.28 ) }
    dend_66 { pt3dadd( -58.3494, 93.3416, -81.0831, 0.55 ) }
    dend_66 { pt3dadd( -59.1285, 94.5734, -82.2816, 0.28 ) }
    dend_66 { pt3dadd( -59.5849, 95.2608, -82.999, 0.55 ) }
    dend_66 { pt3dadd( -60.5571, 96.5355, -84.5811, 0.28 ) }
    dend_66 { pt3dadd( -60.9398, 97.1287, -85.627, 0.28 ) }
    dend_66 { pt3dadd( -61.3289, 97.8163, -87.0761, 0.83 ) }
    dend_66 { pt3dadd( -61.8171, 98.7135, -89.1518, 0.55 ) }
    dend_66 { pt3dadd( -61.968, 98.9825, -89.8255, 0.55 ) }
    dend_66 { pt3dadd( -62.5636, 100.006, -92.5471, 0.83 ) }
    dend_66 { pt3dadd( -64.0296, 102.264, -98.839, 0.28 ) }
    dend_66 { pt3dadd( -64.2266, 102.567, -99.6841, 0.83 ) }
    dend_66 { pt3dadd( -64.7599, 103.338, -101.767, 0.28 ) }
    dend_66 { pt3dadd( -64.9978, 103.668, -102.652, 0.55 ) }
    dend_66 { pt3dadd( -65.7237, 104.684, -105.18, 0.28 ) }
    dend_66 { pt3dadd( -66.263, 105.378, -106.729, 0.83 ) }
    dend_66 { pt3dadd( -66.9947, 106.144, -108.267, 0.28 ) }
    dend_66 { pt3dadd( -67.5522, 106.758, -109.485, 0.28 ) }
    dend_66 { pt3dadd( -68.1069, 107.392, -110.771, 0.55 ) }
    dend_66 { pt3dadd( -69.2767, 108.767, -113.609, 0.28 ) }
    dend_66 { pt3dadd( -69.4443, 108.951, -114.001, 0.55 ) }
    dend_66 { pt3dadd( -70.4076, 109.888, -116.14, 0.28 ) }
    dend_66 { pt3dadd( -70.6387, 110.081, -116.61, 0.55 ) }
    dend_66 { pt3dadd( -71.6388, 110.819, -118.464, 0.28 ) }
    dend_66 { pt3dadd( -72.1858, 111.15, -119.281, 0.55 ) }
    dend_66 { pt3dadd( -73.575, 111.854, -120.826, 0.28 ) }
    dend_66 { pt3dadd( -73.9135, 111.999, -121.153, 0.55 ) }
    dend_66 { pt3dadd( -74.7037, 112.274, -121.856, 0.28 ) }
    dend_66 { pt3dadd( -75.3804, 112.497, -122.428, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_66 { pt3dadd( -78.5605, 113.519, -124.926, 0.28 ) }
    dend_66 { pt3dadd( -80.7208, 114.218, -126.579, 0.55 ) }
    dend_66 { pt3dadd( -84.169, 115.293, -129.097, 0.28 ) }
    dend_66 { pt3dadd( -85.2366, 115.612, -129.866, 0.83 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 4/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -17.9434, 34.6021, -13.7864, 0.28 ) }
    dend_65 { pt3dadd( -18.9767, 35.744, -13.9842, 0.28 ) }
    dend_65 { pt3dadd( -19.9649, 36.8741, -14.223, 0.83 ) }
    dend_65 { pt3dadd( -20.7481, 37.8971, -14.4458, 0.28 ) }
    dend_65 { pt3dadd( -22.7863, 40.4796, -15.0532, 0.55 ) }
    dend_65 { pt3dadd( -23.9621, 42.0624, -15.4132, 0.55 ) }
    dend_65 { pt3dadd( -25.255, 43.8016, -15.8327, 0.55 ) }
    dend_65 { pt3dadd( -26.4392, 45.4561, -16.214, 1.38 ) }
    dend_65 { pt3dadd( -28.0582, 47.6241, -16.7461, 0.55 ) }
    dend_65 { pt3dadd( -29.9813, 50.039, -17.4322, 0.83 ) }
    dend_65 { pt3dadd( -31.0492, 51.3088, -17.7793, 0.28 ) }
    dend_65 { pt3dadd( -32.111, 52.64, -18.0764, 0.83 ) }
    dend_65 { pt3dadd( -33.2527, 54.0971, -18.3425, 0.55 ) }
    dend_65 { pt3dadd( -35.1231, 56.5725, -18.7912, 1.94 ) }
    dend_65 { pt3dadd( -36.7309, 58.8038, -19.154, 0.28 ) }
    dend_65 { pt3dadd( -37.6119, 60.4564, -19.4854, 0.83 ) }
    dend_65 { pt3dadd( -38.5242, 62.6246, -19.9382, 0.28 ) }
    dend_65 { pt3dadd( -38.7593, 63.8524, -20.2336, 0.83 ) }
    dend_65 { pt3dadd( -38.845, 65.0375, -20.565, 0.28 ) }
    dend_65 { pt3dadd( -38.8358, 66.7757, -21.0612, 0.83 ) }
    dend_65 { pt3dadd( -38.746, 71.1549, -22.375, 0.55 ) }
    dend_65 { pt3dadd( -38.7592, 73.1944, -23.0095, 1.94 ) }
    dend_65 { pt3dadd( -38.975, 77.9598, -24.3534, 0.55 ) }
    dend_65 { pt3dadd( -39.1914, 80.0929, -24.9172, 0.55 ) }
    dend_65 { pt3dadd( -39.6821, 82.5814, -25.5052, 1.11 ) }
    dend_65 { pt3dadd( -40.3838, 84.8358, -25.9854, 0.28 ) }
    dend_65 { pt3dadd( -41.0737, 86.2796, -26.2339, 0.55 ) }
    dend_65 { pt3dadd( -42.4256, 88.4794, -26.6472, 0.55 ) }
    dend_65 { pt3dadd( -43.8919, 90.3148, -26.9565, 0.55 ) }
    dend_65 { pt3dadd( -45.4376, 92.1368, -27.2659, 0.55 ) }
    dend_65 { pt3dadd( -46.376, 93.1387, -27.4559, 0.55 ) }
    dend_65 { pt3dadd( -47.6744, 94.4042, -27.6591, 1.11 ) }
    dend_65 { pt3dadd( -48.9609, 95.6741, -27.9123, 0.28 ) }
    dend_65 { pt3dadd( -49.9649, 96.7741, -28.1384, 0.55 ) }
    dend_65 { pt3dadd( -51.2175, 98.3814, -28.4439, 0.28 ) }
    dend_65 { pt3dadd( -51.8072, 99.2821, -28.593, 0.55 ) }
    dend_65 { pt3dadd( -52.7059, 100.908, -28.7925, 0.28 ) }
    dend_65 { pt3dadd( -53.6597, 103.125, -29.0515, 0.83 ) }
    dend_65 { pt3dadd( -54.4372, 105.375, -29.2944, 0.28 ) }
    dend_65 { pt3dadd( -54.8008, 106.597, -29.3614, 0.55 ) }
    dend_65 { pt3dadd( -55.2336, 108.168, -29.4189, 0.28 ) }
    dend_65 { pt3dadd( -55.7239, 109.949, -29.4713, 2.22 ) }
    dend_65 { pt3dadd( -56.6367, 113.229, -29.5243, 0.28 ) }
    dend_65 { pt3dadd( -56.8076, 113.771, -29.5399, 0.55 ) }
    dend_65 { pt3dadd( -57.743, 116.486, -29.7761, 0.28 ) }
    dend_65 { pt3dadd( -58.1705, 117.786, -29.9823, 0.83 ) }
    dend_65 { pt3dadd( -59.046, 120.269, -30.5702, 0.28 ) }
    dend_65 { pt3dadd( -59.5018, 121.449, -30.9257, 0.83 ) }
    dend_65 { pt3dadd( -60.4374, 123.765, -31.7004, 0.28 ) }
    dend_65 { pt3dadd( -61.0644, 125.27, -32.2685, 0.83 ) }
    dend_65 { pt3dadd( -62.029, 127.586, -33.3119, 0.28 ) }
    dend_65 { pt3dadd( -62.6087, 129.006, -33.9448, 1.38 ) }
    dend_65 { pt3dadd( -63.4992, 131.166, -34.8678, 0.28 ) }
    dend_65 { pt3dadd( -63.934, 132.156, -35.268, 0.55 ) }
    dend_65 { pt3dadd( -64.3129, 132.955, -35.5428, 0.55 ) }
    dend_65 { pt3dadd( -65.3329, 135.084, -36.2234, 0.28 ) }
    dend_65 { pt3dadd( -65.496, 135.394, -36.3075, 0.55 ) }
    dend_65 { pt3dadd( -66.0101, 136.424, -36.5556, 0.28 ) }
    dend_65 { pt3dadd( -66.2805, 136.922, -36.6173, 0.55 ) }
    dend_65 { pt3dadd( -67.3493, 138.755, -36.7458, 0.28 ) }
    dend_65 { pt3dadd( -67.6356, 139.242, -36.7612, 0.55 ) }
    dend_65 { pt3dadd( -69.1406, 141.721, -36.7085, 0.28 ) }
    dend_65 { pt3dadd( -69.6757, 142.594, -36.6955, 0.55 ) }
    dend_65 { pt3dadd( -71.6624, 145.866, -36.6414, 0.28 ) }
    dend_65 { pt3dadd( -71.9566, 146.346, -36.6093, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 69/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -21.8758, -7.94067, 48.8886, 1.11 ) }
    dend_63 { pt3dadd( -23.6626, -6.94679, 49.1477, 1.11 ) }
    dend_63 { pt3dadd( -26.8565, -4.96451, 49.63, 0.83 ) }
    dend_63 { pt3dadd( -29.2188, -3.35222, 49.9636, 0.83 ) }
    dend_63 { pt3dadd( -32.5827, -1.13181, 50.5799, 1.11 ) }
    dend_63 { pt3dadd( -37.5838, 1.90834, 51.5776, 0.83 ) }
    dend_63 { pt3dadd( -38.9236, 2.67147, 51.9114, 0.55 ) }
    dend_63 { pt3dadd( -41.1051, 3.80545, 52.6785, 0.83 ) }
    dend_63 { pt3dadd( -43.9415, 5.08903, 53.9026, 0.83 ) }
    dend_63 { pt3dadd( -47.8983, 6.59024, 55.793, 1.11 ) }
    dend_63 { pt3dadd( -49.9475, 7.24356, 56.8355, 0.83 ) }
    dend_63 { pt3dadd( -53.8987, 8.37041, 58.9421, 1.11 ) }
    dend_63 { pt3dadd( -58.302, 9.65121, 61.3314, 0.83 ) }
    dend_63 { pt3dadd( -60.6379, 10.2357, 62.6039, 0.83 ) }
    dend_63 { pt3dadd( -62.3583, 10.6551, 63.5738, 0.83 ) }
    dend_63 { pt3dadd( -63.8806, 11.1728, 64.3771, 0.55 ) }
    dend_63 { pt3dadd( -65.5971, 11.94, 65.2593, 0.83 ) }
    dend_63 { pt3dadd( -68.1471, 13.3115, 66.0242, 0.55 ) }
    dend_63 { pt3dadd( -69.9946, 15.6372, 65.987, 0.55 ) }
    dend_63 { pt3dadd( -79.3178, 22.1834, 71.686, 0.55 ) }
    dend_63 { pt3dadd( -88.9503, 27.8312, 77.9234, 0.55 ) }
    dend_63 { pt3dadd( -100.386, 31.6518, 82.3991, 0.55 ) }
    dend_63 { pt3dadd( -112.104, 35.2541, 86.3047, 0.55 ) }
    dend_63 { pt3dadd( -123.591, 37.7698, 91.6355, 0.55 ) }
    dend_63 { pt3dadd( -134.746, 40.5913, 97.4769, 0.55 ) }
    dend_63 { pt3dadd( -145.779, 44.479, 102.826, 0.55 ) }
    dend_63 { pt3dadd( -157.297, 48.088, 107.29, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -21.8758, -7.94067, 48.8886, 1.11 ) }
    dend_62 { pt3dadd( -23.1348, -8.97138, 50.348, 1.11 ) }
    dend_62 { pt3dadd( -24.8974, -10.1365, 52.4209, 0.83 ) }
    dend_62 { pt3dadd( -25.7125, -10.4702, 53.4132, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_62 { pt3dadd( -27.6454, -10.379, 55.7896, 0.83 ) }
    dend_62 { pt3dadd( -30.0148, -9.51437, 58.525, 0.83 ) }
    dend_62 { pt3dadd( -30.841, -8.90969, 59.3782, 0.83 ) }
    dend_62 { pt3dadd( -32.2889, -7.7141, 60.4928, 0.83 ) }
    dend_62 { pt3dadd( -34.5581, -5.64535, 61.8131, 0.83 ) }
    dend_62 { pt3dadd( -37.0786, -3.06263, 63.0192, 0.83 ) }
    dend_62 { pt3dadd( -38.4101, -1.59787, 63.5017, 0.83 ) }
    dend_62 { pt3dadd( -41.1137, 1.48167, 64.2272, 0.83 ) }
    dend_62 { pt3dadd( -43.1264, 3.75501, 64.6806, 0.55 ) }
    dend_62 { pt3dadd( -44.1773, 4.83172, 64.839, 0.55 ) }
    dend_62 { pt3dadd( -45.553, 6.02807, 64.9568, 0.55 ) }
    dend_62 { pt3dadd( -47.0964, 7.27453, 64.9285, 0.55 ) }
    dend_62 { pt3dadd( -48.6812, 8.39309, 64.8959, 0.55 ) }
    dend_62 { pt3dadd( -56.4363, 11.8793, 68.6626, 0.55 ) }
    dend_62 { pt3dadd( -63.0162, 15.3541, 74.2497, 0.55 ) }
    dend_62 { pt3dadd( -69.6224, 16.977, 80.6862, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -58.3126, -69.6439, -57.8089, 0.28 ) }
    dend_60 { pt3dadd( -59.245, -68.4627, -58.4229, 0.28 ) }
    dend_60 { pt3dadd( -59.8836, -67.6537, -58.8433, 0.55 ) }
    dend_60 { pt3dadd( -60.9354, -66.3212, -59.5359, 0.28 ) }
    dend_60 { pt3dadd( -61.9319, -65.0588, -60.192, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -58.3126, -69.6439, -57.8089, 0.28 ) }
    dend_59 { pt3dadd( -59.3072, -70.2871, -58.3193, 0.28 ) }
    dend_59 { pt3dadd( -59.6471, -70.5243, -58.4978, 0.55 ) }
    dend_59 { pt3dadd( -60.9409, -71.4185, -58.9962, 0.28 ) }
    dend_59 { pt3dadd( -61.7763, -72.0691, -59.3291, 0.83 ) }
    dend_59 { pt3dadd( -62.81, -72.9848, -59.8064, 0.28 ) }
    dend_59 { pt3dadd( -63.4296, -73.6172, -60.155, 0.55 ) }
    dend_59 { pt3dadd( -63.8565, -74.1125, -60.4359, 0.28 ) }
    dend_59 { pt3dadd( -64.9691, -75.6397, -61.338, 2.77 ) }
    dend_59 { pt3dadd( -66.4502, -78.0116, -62.789, 0.28 ) }
    dend_59 { pt3dadd( -67.1664, -79.299, -63.6079, 0.83 ) }
    dend_59 { pt3dadd( -67.9279, -80.9053, -64.6102, 0.28 ) }
    dend_59 { pt3dadd( -68.2428, -81.6945, -65.0621, 0.55 ) }
    dend_59 { pt3dadd( -68.8601, -83.4334, -66.0434, 0.28 ) }
    dend_59 { pt3dadd( -69.0597, -84.0153, -66.4089, 0.55 ) }
    dend_59 { pt3dadd( -69.2684, -84.5435, -66.7271, 0.28 ) }
    dend_59 { pt3dadd( -69.877, -85.6972, -67.369, 0.83 ) }
    dend_59 { pt3dadd( -70.7684, -86.9388, -68.0518, 0.28 ) }
    dend_59 { pt3dadd( -71.668, -87.906, -68.6084, 0.83 ) }
    dend_59 { pt3dadd( -73.5128, -89.3872, -69.5354, 0.55 ) }
    dend_59 { pt3dadd( -74.3786, -89.9444, -69.9057, 0.28 ) }
    dend_59 { pt3dadd( -76.101, -90.8417, -70.5574, 0.55 ) }
    dend_59 { pt3dadd( -77.4265, -91.3622, -71.0168, 0.55 ) }
    dend_59 { pt3dadd( -79.1713, -91.8801, -71.3544, 0.28 ) }
    dend_59 { pt3dadd( -80.6874, -92.2708, -71.4619, 0.83 ) }
    dend_59 { pt3dadd( -82.0301, -92.5882, -71.4272, 0.55 ) }
    dend_59 { pt3dadd( -83.2085, -92.8363, -71.3752, 0.28 ) }
    dend_59 { pt3dadd( -85.3953, -93.2824, -71.3389, 0.55 ) }
    dend_59 { pt3dadd( -88.9515, -94.0903, -71.3629, 0.28 ) }
    dend_59 { pt3dadd( -91.1057, -94.5818, -71.4553, 0.83 ) }
    dend_59 { pt3dadd( -93.0109, -95.0728, -71.6481, 0.28 ) }
    dend_59 { pt3dadd( -94.2771, -95.4484, -71.8538, 0.55 ) }
    dend_59 { pt3dadd( -96.4867, -96.1403, -72.3063, 0.28 ) }
    dend_59 { pt3dadd( -97.3343, -96.4373, -72.5464, 0.83 ) }
    dend_59 { pt3dadd( -98.0457, -96.7058, -72.8763, 0.28 ) }
    dend_59 { pt3dadd( -99.7935, -97.3671, -73.7458, 0.28 ) }
    dend_59 { pt3dadd( -100.511, -97.6517, -74.1536, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 58/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -64.7255, -16.9404, -40.789, 0.28 ) }
    dend_57 { pt3dadd( -65.862, -18.4035, -41.8491, 0.28 ) }
    dend_57 { pt3dadd( -67.3244, -20.2772, -43.1505, 0.83 ) }
    dend_57 { pt3dadd( -69.268, -22.6972, -44.7498, 0.28 ) }
    dend_57 { pt3dadd( -69.92, -23.4499, -45.2392, 0.55 ) }
    dend_57 { pt3dadd( -71.0512, -24.669, -46.0021, 0.28 ) }
    dend_57 { pt3dadd( -71.7663, -25.4135, -46.4759, 0.55 ) }
    dend_57 { pt3dadd( -72.3899, -26.0167, -46.8635, 0.28 ) }
    dend_57 { pt3dadd( -73.2549, -26.7793, -47.3111, 0.55 ) }
    dend_57 { pt3dadd( -74.5376, -27.8184, -47.884, 0.28 ) }
    dend_57 { pt3dadd( -75.6934, -28.7174, -48.3346, 0.55 ) }
    dend_57 { pt3dadd( -77.7681, -30.2797, -49.1174, 0.28 ) }
    dend_57 { pt3dadd( -78.7242, -30.9865, -49.4674, 0.55 ) }
    dend_57 { pt3dadd( -79.4706, -31.5462, -49.7509, 0.28 ) }
    dend_57 { pt3dadd( -80.1454, -32.0658, -49.9953, 0.55 ) }
    dend_57 { pt3dadd( -82.3217, -33.7604, -50.7966, 0.28 ) }
    dend_57 { pt3dadd( -83.4039, -34.5455, -51.0047, 0.55 ) }
    dend_57 { pt3dadd( -85.0289, -35.6496, -51.024, 0.28 ) }
    dend_57 { pt3dadd( -86.0383, -36.3108, -50.9424, 0.55 ) }
    dend_57 { pt3dadd( -86.9001, -36.93, -51.0817, 0.28 ) }
    dend_57 { pt3dadd( -88.3697, -38.0938, -51.6971, 0.83 ) }
    dend_57 { pt3dadd( -91.6519, -40.9774, -53.7615, 0.28 ) }
    dend_57 { pt3dadd( -92.1484, -41.4409, -54.1324, 0.83 ) }
    dend_57 { pt3dadd( -92.733, -42.01, -54.6699, 0.28 ) }
    dend_57 { pt3dadd( -98.2315, -47.047, -59.519, 0.55 ) }
    dend_57 { pt3dadd( -99.2238, -47.9462, -60.4072, 0.28 ) }
    dend_57 { pt3dadd( -99.9038, -48.5398, -60.9951, 0.55 ) }
    dend_57 { pt3dadd( -100.892, -49.3629, -61.858, 0.28 ) }
    dend_57 { pt3dadd( -101.619, -49.9368, -62.4244, 0.55 ) }
    dend_57 { pt3dadd( -104.073, -51.6298, -63.5755, 0.28 ) }
    dend_57 { pt3dadd( -104.678, -51.9143, -63.4988, 0.55 ) }
    dend_57 { pt3dadd( -106.506, -52.6971, -63.1734, 0.28 ) }
    dend_57 { pt3dadd( -107.543, -53.0989, -62.9456, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 91/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -64.7255, -16.9404, -40.789, 0.28 ) }
    dend_56 { pt3dadd( -68.8496, -14.8194, -42.3211, 0.28 ) }
    dend_56 { pt3dadd( -70.5127, -14.1958, -42.8466, 0.55 ) }
    dend_56 { pt3dadd( -72.629, -13.516, -43.4903, 0.28 ) }
    dend_56 { pt3dadd( -73.1767, -13.3636, -43.6353, 0.55 ) }
    dend_56 { pt3dadd( -75.7527, -12.7037, -44.2454, 0.28 ) }
    dend_56 { pt3dadd( -76.8475, -12.4523, -44.4796, 0.83 ) }
    dend_56 { pt3dadd( -81.1941, -11.773, -45.2674, 0.28 ) }
    dend_56 { pt3dadd( -82.6596, -11.5732, -45.4989, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_56 { pt3dadd( -87.0847, -10.9652, -45.9911, 0.28 ) }
    dend_56 { pt3dadd( -90.1458, -10.469, -46.2126, 0.28 ) }
    dend_56 { pt3dadd( -92.2814, -10.0941, -46.3025, 0.55 ) }
    dend_56 { pt3dadd( -94.3356, -9.70708, -46.3594, 0.28 ) }
    dend_56 { pt3dadd( -94.8174, -9.61178, -46.3627, 0.55 ) }
    dend_56 { pt3dadd( -97.6884, -9.03458, -46.2737, 0.28 ) }
    dend_56 { pt3dadd( -99.1125, -8.70786, -46.1518, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_35 (entry count 7/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -9.23578, 7.10106, -7.77221, 1.11 ) }
    dend_45 { pt3dadd( -7.09351, 7.67703, -9.65013, 1.11 ) }
    dend_45 { pt3dadd( -4.86267, 8.87694, -12.1245, 1.38 ) }
    dend_45 { pt3dadd( -0.300617, 12.9294, -18.971, 2.49 ) }
    dend_45 { pt3dadd( 1.23003, 15.3641, -22.5959, 2.49 ) }
    dend_45 { pt3dadd( 1.97053, 17.0581, -24.8231, 1.11 ) }
    dend_45 { pt3dadd( 2.78124, 18.8793, -26.9286, 1.11 ) }
    dend_45 { pt3dadd( 4.14913, 24.3387, -32.0776, 1.11 ) }
    dend_45 { pt3dadd( 4.4869, 27.4619, -34.5748, 1.11 ) }
    dend_45 { pt3dadd( 4.47844, 29.2473, -35.72, 1.11 ) }
    dend_45 { pt3dadd( 4.05864, 33.0379, -38.4461, 1.11 ) }
    dend_45 { pt3dadd( 3.59912, 36.6414, -41.1362, 1.38 ) }
    dend_45 { pt3dadd( 4.07997, 41.7143, -45.1178, 1.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.23578, 7.10106, -7.77221, 0.83 ) }
    dend_36 { pt3dadd( -10.61, 7.92732, -7.74021, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 22/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 101.584, 50.3412, -3.67804, 0.28 ) }
    dend_34 { pt3dadd( 103.365, 50.1517, -3.12699, 0.28 ) }
    dend_34 { pt3dadd( 104.327, 50.0822, -2.92238, 0.55 ) }
    dend_34 { pt3dadd( 106.407, 49.9318, -2.48019, 0.28 ) }
    dend_34 { pt3dadd( 108.292, 49.7956, -2.0794, 0.28 ) }
    dend_34 { pt3dadd( 109.284, 49.7238, -1.86837, 0.55 ) }
    dend_34 { pt3dadd( 110.821, 49.6127, -1.54162, 0.28 ) }
    dend_34 { pt3dadd( 112.02, 49.6047, -1.29688, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 30/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 101.584, 50.3412, -3.67804, 0.28 ) }
    dend_33 { pt3dadd( 104.16, 52.1854, -5.16573, 0.28 ) }
    dend_33 { pt3dadd( 105.184, 52.9646, -5.74484, 1.11 ) }
    dend_33 { pt3dadd( 107.296, 54.7108, -6.95621, 0.28 ) }
    dend_33 { pt3dadd( 108.484, 55.697, -7.65142, 0.55 ) }
    dend_33 { pt3dadd( 111.063, 57.8936, -9.21418, 0.28 ) }
    dend_33 { pt3dadd( 112.755, 59.4376, -10.2274, 1.38 ) }
    dend_33 { pt3dadd( 114.372, 61.0769, -11.1935, 0.28 ) }
    dend_33 { pt3dadd( 115.235, 61.9909, -11.7427, 0.83 ) }
    dend_33 { pt3dadd( 118.254, 65.3505, -13.6761, 0.28 ) }
    dend_33 { pt3dadd( 119.465, 66.7065, -14.4427, 1.38 ) }
    dend_33 { pt3dadd( 121.799, 69.4055, -15.9874, 0.28 ) }
    dend_33 { pt3dadd( 124.07, 72.1196, -17.5129, 0.28 ) }
    dend_33 { pt3dadd( 126.744, 75.2692, -19.3526, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 44/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -19.0496, 5.30229, -15.1085, 1.38 ) }
    dend_23 { pt3dadd( -22.4367, 6.52291, -14.0081, 1.38 ) }
    dend_23 { pt3dadd( -28.4497, 8.71996, -12.5566, 1.38 ) }
    dend_23 { pt3dadd( -32.1543, 10.3649, -11.837, 1.11 ) }
    dend_23 { pt3dadd( -36.3198, 12.2378, -11.1066, 1.11 ) }
    dend_23 { pt3dadd( -39.2653, 13.4463, -10.5282, 1.11 ) }
    dend_23 { pt3dadd( -42.9943, 14.8578, -9.86807, 1.11 ) }
    dend_23 { pt3dadd( -48.2215, 16.9414, -9.14768, 1.11 ) }
    dend_23 { pt3dadd( -52.3615, 18.6155, -8.88842, 1.11 ) }
    dend_23 { pt3dadd( -54.6968, 19.4556, -8.70895, 1.11 ) }
    dend_23 { pt3dadd( -59.8377, 21.0603, -8.1621, 1.11 ) }
    dend_23 { pt3dadd( -63.7678, 22.3436, -7.63384, 2.49 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -19.0496, 5.30229, -15.1085, 1.38 ) }
    dend_22 { pt3dadd( -25.7026, 5.78851, -13.5618, 1.38 ) }
    dend_22 { pt3dadd( -27.7048, 5.87608, -13.3691, 1.38 ) }
    dend_22 { pt3dadd( -31.4968, 5.85998, -13.8304, 1.38 ) }
    dend_22 { pt3dadd( -36.5475, 5.71863, -15.1932, 1.66 ) }
    dend_22 { pt3dadd( -39.2618, 5.7446, -16.1377, 0.55 ) }
    dend_22 { pt3dadd( -39.9312, 5.78068, -16.4109, 0.55 ) }
    dend_22 { pt3dadd( -44.5222, 6.17216, -18.288, 0.55 ) }
    dend_22 { pt3dadd( -47.1883, 6.63202, -19.8626, 1.11 ) }
    dend_22 { pt3dadd( -49.6548, 7.23139, -21.7172, 0.83 ) }
    dend_22 { pt3dadd( -51.9527, 7.82452, -23.616, 0.55 ) }
    dend_22 { pt3dadd( -54.1008, 8.27822, -25.3363, 0.55 ) }
    dend_22 { pt3dadd( -55.6553, 8.6085, -26.4587, 0.55 ) }
    dend_22 { pt3dadd( -58.7575, 9.20883, -28.4871, 2.22 ) }
    dend_22 { pt3dadd( -60.9798, 9.46181, -29.945, 0.83 ) }
    dend_22 { pt3dadd( -62.3919, 9.4819, -30.9242, 0.83 ) }
    dend_22 { pt3dadd( -64.8181, 9.21309, -32.6074, 0.83 ) }
    dend_22 { pt3dadd( -66.0546, 8.96832, -33.4294, 0.83 ) }
    dend_22 { pt3dadd( -68.9805, 8.21672, -35.3171, 0.28 ) }
    dend_22 { pt3dadd( -71.4369, 7.43418, -36.834, 0.83 ) }
    dend_22 { pt3dadd( -73.5811, 6.74092, -38.0484, 0.55 ) }
    dend_22 { pt3dadd( -75.4059, 6.1614, -38.9889, 0.55 ) }
    dend_22 { pt3dadd( -78.283, 5.31795, -40.3331, 0.83 ) }
    dend_22 { pt3dadd( -79.7784, 4.88286, -40.9683, 0.28 ) }
    dend_22 { pt3dadd( -81.3461, 4.44275, -41.5632, 0.55 ) }
    dend_22 { pt3dadd( -83.1354, 3.92262, -42.2592, 0.28 ) }
    dend_22 { pt3dadd( -84.5491, 3.50716, -42.7673, 0.55 ) }
    dend_22 { pt3dadd( -86.9635, 2.87005, -43.5152, 0.28 ) }
    dend_22 { pt3dadd( -88.101, 2.59751, -43.8151, 0.55 ) }
    dend_22 { pt3dadd( -90.101, 2.21184, -44.2689, 0.28 ) }
    dend_22 { pt3dadd( -91.6141, 2.06082, -44.5586, 1.11 ) }
    dend_22 { pt3dadd( -93.2482, 2.05941, -44.773, 0.28 ) }
    dend_22 { pt3dadd( -94.017, 2.16607, -44.7749, 0.28 ) }
    dend_22 { pt3dadd( -95.5704, 2.55789, -44.554, 0.55 ) }
    dend_22 { pt3dadd( -96.4628, 2.87229, -44.3601, 0.55 ) }
    dend_22 { pt3dadd( -98.1018, 3.62204, -43.8665, 0.28 ) }
    dend_22 { pt3dadd( -98.5682, 3.86066, -43.7239, 0.55 ) }
    dend_22 { pt3dadd( -99.815, 4.5322, -43.475, 0.28 ) }
    dend_22 { pt3dadd( -100.03, 4.64195, -43.4548, 0.55 ) }
    dend_22 { pt3dadd( -101.352, 5.20319, -43.6307, 0.28 ) }
    dend_22 { pt3dadd( -101.902, 5.37889, -43.8205, 0.28 ) }
    dend_22 { pt3dadd( -102.533, 5.53311, -44.1361, 0.55 ) }
    dend_22 { pt3dadd( -103.904, 5.78063, -44.892, 0.28 ) }
    dend_22 { pt3dadd( -104.659, 5.85062, -45.3246, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -107.355, 5.9038, -46.9016, 0.28 ) }
    dend_22 { pt3dadd( -108.177, 5.85316, -47.3752, 0.55 ) }
    dend_22 { pt3dadd( -110.33, 5.54916, -48.5222, 0.28 ) }
    dend_22 { pt3dadd( -112.073, 5.17467, -49.3287, 0.55 ) }
    dend_22 { pt3dadd( -114.404, 4.5252, -50.171, 0.28 ) }
    dend_22 { pt3dadd( -115.098, 4.32608, -50.3621, 0.28 ) }
    dend_22 { pt3dadd( -116.424, 3.9287, -50.5908, 0.83 ) }
    dend_22 { pt3dadd( -118.48, 3.34473, -50.8763, 0.28 ) }
    dend_22 { pt3dadd( -119.824, 3.00037, -51.0368, 0.83 ) }
    dend_22 { pt3dadd( -121.775, 2.64697, -51.2968, 0.28 ) }
    dend_22 { pt3dadd( -123.142, 2.41587, -51.4885, 0.55 ) }
    dend_22 { pt3dadd( -124.726, 2.20221, -51.7238, 0.55 ) }
    dend_22 { pt3dadd( -126.219, 2.05298, -51.9741, 0.83 ) }
    dend_22 { pt3dadd( -128.082, 1.9452, -52.3158, 1.38 ) }
    dend_22 { pt3dadd( -130.12, 1.85029, -52.7676, 0.55 ) }
    dend_22 { pt3dadd( -132.261, 1.69033, -53.3462, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_0 (entry count 16/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.4066, 10.1486, 10.2181, 1.38 ) }
    dend_18 { pt3dadd( 18.0612, 14.5642, 9.39622, 1.38 ) }
    dend_18 { pt3dadd( 20.8936, 17.419, 8.75752, 1.66 ) }
    dend_18 { pt3dadd( 24.2788, 21.0591, 8.13692, 1.66 ) }
    dend_18 { pt3dadd( 30.3667, 27.3332, 7.32059, 1.11 ) }
    dend_18 { pt3dadd( 33.9138, 30.6562, 7.02524, 1.38 ) }
    dend_18 { pt3dadd( 36.396, 32.8125, 6.9013, 1.11 ) }
    dend_18 { pt3dadd( 38.5779, 34.4021, 6.8497, 1.66 ) }
    dend_18 { pt3dadd( 42.6543, 37.2837, 6.98324, 1.38 ) }
    dend_18 { pt3dadd( 46.1697, 39.8584, 7.00807, 1.38 ) }
    dend_18 { pt3dadd( 49.8686, 42.5773, 6.94961, 1.38 ) }
    dend_18 { pt3dadd( 51.8844, 44.0323, 6.9949, 1.38 ) }
    dend_18 { pt3dadd( 55.171, 46.217, 7.03909, 0.55 ) }
    dend_18 { pt3dadd( 59.5321, 48.9996, 6.81701, 1.11 ) }
    dend_18 { pt3dadd( 64.1597, 52.2334, 5.87295, 0.83 ) }
    dend_18 { pt3dadd( 66.5713, 54.4971, 5.04696, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 32/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 13.4066, 10.1486, 10.2181, 2.22 ) }
    dend_1 { pt3dadd( 16.1927, 12.4293, 13.5106, 2.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 34/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 24.7447, -31.7602, 2.65167, 0.28 ) }
    axon_1 { pt3dadd( 34.0689, -43.5101, 2.65167, 0.28 ) }
    axon_1 { pt3dadd( 43.393, -55.26, 2.65167, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 37/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 4.07997, 41.7143, -45.1178, 1.11 ) }
    dend_46 { pt3dadd( 0.904033, 48.7308, -48.7488, 1.11 ) }
    dend_46 { pt3dadd( -0.925345, 52.7724, -50.8403, 1.11 ) }
    dend_46 { pt3dadd( -3.22734, 57.8581, -53.4722, 1.11 ) }
    dend_46 { pt3dadd( -5.53289, 62.9517, -56.1081, 1.11 ) }
    dend_46 { pt3dadd( -6.98313, 66.1556, -57.7661, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 43/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -10.61, 7.92732, -7.74021, 0.83 ) }
    dend_44 { pt3dadd( -12.3934, 11.6714, -5.39285, 0.83 ) }
    dend_44 { pt3dadd( -12.8989, 13.7814, -4.34279, 0.83 ) }
    dend_44 { pt3dadd( -13.4987, 17.0342, -2.65943, 0.83 ) }
    dend_44 { pt3dadd( -13.6211, 18.6544, -1.82671, 0.83 ) }
    dend_44 { pt3dadd( -13.5908, 21.8448, -0.632755, 0.83 ) }
    dend_44 { pt3dadd( -13.3675, 25.0001, 0.308348, 0.83 ) }
    dend_44 { pt3dadd( -13.1413, 27.6836, 1.11225, 0.83 ) }
    dend_44 { pt3dadd( -12.6649, 31.214, 1.99628, 0.55 ) }
    dend_44 { pt3dadd( -12.044, 33.7171, 2.47194, 0.83 ) }
    dend_44 { pt3dadd( -10.7544, 38.2884, 2.95511, 0.55 ) }
    dend_44 { pt3dadd( -10.499, 39.3185, 2.92922, 0.28 ) }
    dend_44 { pt3dadd( -10.2639, 40.7867, 2.73173, 0.55 ) }
    dend_44 { pt3dadd( -10.1541, 43.2561, 2.26141, 0.28 ) }
    dend_44 { pt3dadd( -10.204, 44.1196, 2.07393, 0.55 ) }
    dend_44 { pt3dadd( -10.8327, 48.0615, 1.50787, 0.55 ) }
    dend_44 { pt3dadd( -11.4078, 50.9495, 1.32201, 0.28 ) }
    dend_44 { pt3dadd( -12.0308, 54.1931, 1.2258, 0.55 ) }
    dend_44 { pt3dadd( -12.2993, 55.81, 1.21341, 0.28 ) }
    dend_44 { pt3dadd( -12.64, 58.5542, 1.23151, 0.55 ) }
    dend_44 { pt3dadd( -12.8368, 60.9735, 1.23447, 0.28 ) }
    dend_44 { pt3dadd( -12.8575, 62.1925, 1.24668, 0.55 ) }
    dend_44 { pt3dadd( -12.7649, 64.7068, 1.25174, 0.55 ) }
    dend_44 { pt3dadd( -12.747, 66.4935, 1.13698, 0.55 ) }
    dend_44 { pt3dadd( -12.7163, 68.2027, 0.914689, 0.55 ) }
    dend_44 { pt3dadd( -12.6528, 71.1595, 0.145617, 0.28 ) }
    dend_44 { pt3dadd( -12.6136, 72.8614, -0.470483, 0.83 ) }
    dend_44 { pt3dadd( -12.5781, 75.3962, -1.48693, 0.83 ) }
    dend_44 { pt3dadd( -12.609, 77.693, -2.47887, 0.28 ) }
    dend_44 { pt3dadd( -12.6111, 79.0975, -3.04662, 0.55 ) }
    dend_44 { pt3dadd( -12.6019, 81.4876, -3.80122, 0.28 ) }
    dend_44 { pt3dadd( -12.7455, 83.7693, -4.54722, 0.83 ) }
    dend_44 { pt3dadd( -12.9402, 85.7349, -5.2624, 0.28 ) }
    dend_44 { pt3dadd( -13.1067, 87.2999, -5.8498, 0.83 ) }
    dend_44 { pt3dadd( -13.3636, 90.3269, -7.02076, 0.28 ) }
    dend_44 { pt3dadd( -13.6182, 93.0944, -8.1763, 0.55 ) }
    dend_44 { pt3dadd( -14.2039, 99.1149, -10.521, 0.28 ) }
    dend_44 { pt3dadd( -14.3732, 100.993, -11.2388, 0.28 ) }
    dend_44 { pt3dadd( -14.4665, 103.228, -12.1124, 0.55 ) }
    dend_44 { pt3dadd( -14.4574, 106.119, -13.2439, 0.28 ) }
    dend_44 { pt3dadd( -14.4334, 107.911, -13.9551, 0.55 ) }
    dend_44 { pt3dadd( -14.3844, 111.066, -15.1563, 0.28 ) }
    dend_44 { pt3dadd( -14.3325, 113.079, -15.7201, 0.28 ) }
    dend_44 { pt3dadd( -14.4478, 115.515, -16.5027, 0.55 ) }
    dend_44 { pt3dadd( -14.664, 117.589, -17.2737, 0.28 ) }
    dend_44 { pt3dadd( -15.0025, 119.956, -18.2484, 0.55 ) }
    dend_44 { pt3dadd( -15.4359, 122.096, -19.247, 0.55 ) }
    dend_44 { pt3dadd( -15.901, 123.678, -20.1646, 0.55 ) }
    dend_44 { pt3dadd( -16.9669, 126.54, -21.8642, 0.28 ) }
    dend_44 { pt3dadd( -17.7262, 128.238, -22.8678, 0.55 ) }
    dend_44 { pt3dadd( -18.197, 129.251, -23.4913, 0.28 ) }
    dend_44 { pt3dadd( -18.5325, 129.998, -23.9719, 0.55 ) }
    dend_44 { pt3dadd( -19.2085, 131.657, -25.1493, 0.28 ) }
    dend_44 { pt3dadd( -19.7388, 132.663, -25.9094, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 97/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.61, 7.92732, -7.74021, 0.55 ) }
    dend_37 { pt3dadd( -12.0652, 9.50869, -8.46279, 0.55 ) }
    dend_37 { pt3dadd( -13.6335, 11.6605, -10.0213, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -14.7453, 13.2945, -11.3072, 0.55 ) }
    dend_37 { pt3dadd( -16.2843, 15.547, -13.0124, 0.55 ) }
    dend_37 { pt3dadd( -18.8261, 19.4614, -15.7276, 0.83 ) }
    dend_37 { pt3dadd( -20.8514, 22.8338, -18.1529, 0.83 ) }
    dend_37 { pt3dadd( -22.5033, 26.0714, -20.6077, 0.28 ) }
    dend_37 { pt3dadd( -23.7183, 28.6027, -22.619, 0.55 ) }
    dend_37 { pt3dadd( -25.0296, 31.0281, -24.6673, 0.83 ) }
    dend_37 { pt3dadd( -26.7502, 33.3637, -26.7079, 0.83 ) }
    dend_37 { pt3dadd( -29.6258, 35.8492, -28.8682, 0.28 ) }
    dend_37 { pt3dadd( -30.2984, 36.2514, -29.2183, 0.83 ) }
    dend_37 { pt3dadd( -33.0046, 37.3834, -30.2777, 0.55 ) }
    dend_37 { pt3dadd( -36.5349, 38.5141, -31.6057, 0.55 ) }
    dend_37 { pt3dadd( -39.7317, 39.3641, -32.6854, 0.55 ) }
    dend_37 { pt3dadd( -42.7316, 39.9743, -33.6174, 0.83 ) }
    dend_37 { pt3dadd( -46.3468, 40.554, -34.7387, 0.28 ) }
    dend_37 { pt3dadd( -48.137, 40.8902, -35.357, 0.28 ) }
    dend_37 { pt3dadd( -50.9539, 41.6214, -36.484, 0.55 ) }
    dend_37 { pt3dadd( -53.076, 42.2836, -37.427, 0.55 ) }
    dend_37 { pt3dadd( -56.5029, 43.4348, -39.1488, 0.55 ) }
    dend_37 { pt3dadd( -60.6834, 44.9114, -41.315, 0.55 ) }
    dend_37 { pt3dadd( -64.2552, 46.2749, -43.3946, 0.55 ) }
    dend_37 { pt3dadd( -66.1075, 47.0642, -44.6221, 0.28 ) }
    dend_37 { pt3dadd( -66.5092, 47.2508, -44.9407, 0.83 ) }
    dend_37 { pt3dadd( -69.1405, 48.9963, -47.5975, 0.28 ) }
    dend_37 { pt3dadd( -69.4274, 49.2666, -47.9563, 0.55 ) }
    dend_37 { pt3dadd( -70.2694, 50.1833, -49.1245, 0.28 ) }
    dend_37 { pt3dadd( -70.8518, 50.7513, -49.9943, 0.55 ) }
    dend_37 { pt3dadd( -72.7933, 52.54, -52.8638, 0.28 ) }
    dend_37 { pt3dadd( -74.5801, 54.1642, -55.4084, 0.83 ) }
    dend_37 { pt3dadd( -76.7218, 56.3191, -58.2772, 0.28 ) }
    dend_37 { pt3dadd( -78.1514, 57.8982, -60.1399, 0.55 ) }
    dend_37 { pt3dadd( -80.0292, 60.1143, -62.5147, 0.28 ) }
    dend_37 { pt3dadd( -80.7064, 60.9372, -63.3677, 0.83 ) }
    dend_37 { pt3dadd( -83.3411, 64.2179, -66.5064, 0.55 ) }
    dend_37 { pt3dadd( -85.6157, 66.9516, -69.0928, 0.55 ) }
    dend_37 { pt3dadd( -87.0768, 68.9647, -70.7977, 0.55 ) }
    dend_37 { pt3dadd( -88.8292, 71.645, -72.8837, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_23 (entry count 37/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -63.7678, 22.3436, -7.63384, 0.83 ) }
    dend_31 { pt3dadd( -67.7629, 21.4976, -7.04097, 0.83 ) }
    dend_31 { pt3dadd( -69.5007, 21.1529, -6.9321, 0.55 ) }
    dend_31 { pt3dadd( -71.4634, 20.7984, -6.87429, 1.11 ) }
    dend_31 { pt3dadd( -74.0751, 20.2823, -6.9465, 0.83 ) }
    dend_31 { pt3dadd( -76.6807, 19.8108, -7.07505, 0.83 ) }
    dend_31 { pt3dadd( -81.1728, 19.1201, -7.35299, 1.38 ) }
    dend_31 { pt3dadd( -84.2155, 18.6827, -7.64117, 0.83 ) }
    dend_31 { pt3dadd( -86.8168, 18.2996, -7.9658, 0.83 ) }
    dend_31 { pt3dadd( -90.5926, 17.7399, -8.56757, 1.38 ) }
    dend_31 { pt3dadd( -94.1117, 17.2089, -9.32073, 0.55 ) }
    dend_31 { pt3dadd( -95.9469, 16.9361, -9.78642, 0.55 ) }
    dend_31 { pt3dadd( -98.2865, 16.5478, -10.3815, 1.38 ) }
    dend_31 { pt3dadd( -103.041, 15.6257, -11.5293, 0.83 ) }
    dend_31 { pt3dadd( -105.483, 15.1425, -12.0913, 1.66 ) }
    dend_31 { pt3dadd( -110.52, 14.0917, -13.2754, 0.28 ) }
    dend_31 { pt3dadd( -112.832, 13.5268, -13.8697, 1.11 ) }
    dend_31 { pt3dadd( -114.723, 13.0259, -14.3649, 0.28 ) }
    dend_31 { pt3dadd( -115.648, 12.7925, -14.6089, 0.55 ) }
    dend_31 { pt3dadd( -117.673, 12.2621, -15.0372, 0.28 ) }
    dend_31 { pt3dadd( -120.656, 11.5744, -15.4642, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -63.7678, 22.3436, -7.63384, 0.83 ) }
    dend_24 { pt3dadd( -65.813, 24.6371, -7.97263, 0.83 ) }
    dend_24 { pt3dadd( -66.5962, 25.4848, -8.1162, 0.83 ) }
    dend_24 { pt3dadd( -68.5151, 27.2854, -8.45993, 1.11 ) }
    dend_24 { pt3dadd( -69.8967, 28.4009, -8.72221, 0.83 ) }
    dend_24 { pt3dadd( -71.9258, 29.8695, -9.08801, 1.11 ) }
    dend_24 { pt3dadd( -73.6983, 31.0602, -9.40062, 0.83 ) }
    dend_24 { pt3dadd( -74.9206, 31.7213, -9.66803, 0.83 ) }
    dend_24 { pt3dadd( -77.3005, 32.8365, -10.1197, 1.94 ) }
    dend_24 { pt3dadd( -79.155, 33.6421, -10.3596, 1.11 ) }
    dend_24 { pt3dadd( -80.2977, 34.1068, -10.4418, 0.83 ) }
    dend_24 { pt3dadd( -81.5872, 34.6464, -10.4835, 1.38 ) }
    dend_24 { pt3dadd( -84.142, 35.6535, -10.5024, 0.83 ) }
    dend_24 { pt3dadd( -86.0937, 36.5002, -10.5121, 0.83 ) }
    dend_24 { pt3dadd( -88.8389, 37.8312, -10.5034, 2.77 ) }
    dend_24 { pt3dadd( -91.2196, 39.1167, -10.3692, 0.55 ) }
    dend_24 { pt3dadd( -92.3962, 39.8112, -10.207, 0.55 ) }
    dend_24 { pt3dadd( -94.0303, 40.8158, -9.87197, 0.83 ) }
    dend_24 { pt3dadd( -95.0055, 41.4396, -9.66304, 0.55 ) }
    dend_24 { pt3dadd( -96.554, 42.402, -9.37926, 0.55 ) }
    dend_24 { pt3dadd( -99.2281, 44.1251, -8.91961, 1.94 ) }
    dend_24 { pt3dadd( -102.217, 46.0212, -8.21186, 0.83 ) }
    dend_24 { pt3dadd( -103.202, 46.629, -7.84499, 0.83 ) }
    dend_24 { pt3dadd( -105.4, 47.8737, -6.63175, 1.11 ) }
    dend_24 { pt3dadd( -106.746, 48.3983, -5.55561, 0.55 ) }
    dend_24 { pt3dadd( -108.169, 48.7055, -4.09947, 0.55 ) }
    dend_24 { pt3dadd( -110.084, 48.7958, -1.8697, 0.83 ) }
    dend_24 { pt3dadd( -112.811, 48.5973, 1.51059, 0.83 ) }
    dend_24 { pt3dadd( -115.135, 48.3285, 4.58229, 2.77 ) }
    dend_24 { pt3dadd( -118.413, 47.7837, 9.05786, 0.83 ) }
    dend_24 { pt3dadd( -119.484, 47.5574, 10.4885, 1.11 ) }
    dend_24 { pt3dadd( -120.332, 47.3575, 11.5565, 0.28 ) }
    dend_24 { pt3dadd( -121.64, 47.1296, 12.9501, 1.11 ) }
    dend_24 { pt3dadd( -123.419, 47.0241, 14.3559, 0.28 ) }
    dend_24 { pt3dadd( -124.642, 47.1508, 15.091, 0.83 ) }
    dend_24 { pt3dadd( -126.679, 47.7689, 15.9706, 0.28 ) }
    dend_24 { pt3dadd( -127.295, 48.0474, 16.1948, 0.55 ) }
    dend_24 { pt3dadd( -128.654, 48.9314, 16.6195, 0.55 ) }
    dend_24 { pt3dadd( -130.241, 50.2937, 16.9796, 0.55 ) }
    dend_24 { pt3dadd( -131.522, 51.5836, 17.1197, 0.55 ) }
    dend_24 { pt3dadd( -132.694, 53.0417, 17.1088, 1.11 ) }
    dend_24 { pt3dadd( -133.407, 54.0953, 17.0076, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( -134.808, 56.3951, 16.722, 1.66 ) }
    dend_24 { pt3dadd( -135.42, 57.4807, 16.553, 0.28 ) }
    dend_24 { pt3dadd( -136.05, 58.6448, 16.3297, 0.55 ) }
    dend_24 { pt3dadd( -137.035, 60.3206, 15.9671, 0.28 ) }
    dend_24 { pt3dadd( -137.584, 61.09, 15.8343, 0.83 ) }
    dend_24 { pt3dadd( -138.249, 61.8784, 15.8393, 0.28 ) }
    dend_24 { pt3dadd( -138.745, 62.4217, 15.8634, 0.28 ) }
    dend_24 { pt3dadd( -139.775, 63.4859, 15.9717, 0.55 ) }
    dend_24 { pt3dadd( -140.83, 64.5283, 16.1766, 0.28 ) }
    dend_24 { pt3dadd( -142.858, 66.346, 16.7756, 1.11 ) }
    dend_24 { pt3dadd( -145.76, 68.8615, 17.746, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 66.5713, 54.4971, 5.04696, 0.55 ) }
    dend_20 { pt3dadd( 67.2483, 55.1287, 3.8909, 0.55 ) }
    dend_20 { pt3dadd( 67.837, 55.7712, 2.70375, 0.55 ) }
    dend_20 { pt3dadd( 68.4108, 56.4352, 1.49022, 0.55 ) }
    dend_20 { pt3dadd( 70.1231, 58.3071, -1.96928, 1.11 ) }
    dend_20 { pt3dadd( 72.1162, 60.4705, -5.86332, 0.28 ) }
    dend_20 { pt3dadd( 72.8943, 61.2633, -7.35218, 1.38 ) }
    dend_20 { pt3dadd( 74.4874, 62.8663, -10.6413, 0.28 ) }
    dend_20 { pt3dadd( 74.6126, 62.9934, -10.9167, 0.83 ) }
    dend_20 { pt3dadd( 75.1668, 63.5737, -12.1588, 0.55 ) }
    dend_20 { pt3dadd( 75.9684, 64.5305, -13.981, 0.55 ) }
    dend_20 { pt3dadd( 77.2471, 66.1951, -16.9026, 0.55 ) }
    dend_20 { pt3dadd( 77.9938, 67.2084, -18.559, 0.55 ) }
    dend_20 { pt3dadd( 78.6367, 68.201, -19.9807, 0.28 ) }
    dend_20 { pt3dadd( 78.9733, 68.8176, -20.7849, 0.55 ) }
    dend_20 { pt3dadd( 79.4492, 70.002, -22.0911, 0.28 ) }
    dend_20 { pt3dadd( 79.682, 70.7351, -22.7731, 0.55 ) }
    dend_20 { pt3dadd( 80.0279, 72.3084, -23.8405, 1.38 ) }
    dend_20 { pt3dadd( 80.5824, 75.1454, -25.3658, 0.28 ) }
    dend_20 { pt3dadd( 80.7092, 75.8788, -25.6928, 0.55 ) }
    dend_20 { pt3dadd( 80.9939, 77.895, -26.4578, 0.28 ) }
    dend_20 { pt3dadd( 81.114, 78.5543, -26.7146, 0.55 ) }
    dend_20 { pt3dadd( 81.4963, 80.2819, -27.4104, 0.28 ) }
    dend_20 { pt3dadd( 81.8263, 81.3833, -27.8195, 0.55 ) }
    dend_20 { pt3dadd( 82.2823, 82.5215, -28.1628, 0.28 ) }
    dend_20 { pt3dadd( 82.5001, 82.9611, -28.2983, 0.83 ) }
    dend_20 { pt3dadd( 84.5963, 86.394, -29.361, 0.28 ) }
    dend_20 { pt3dadd( 85.5803, 87.7928, -29.851, 1.11 ) }
    dend_20 { pt3dadd( 86.7732, 89.2695, -30.4494, 0.28 ) }
    dend_20 { pt3dadd( 87.5356, 90.1504, -30.8574, 0.55 ) }
    dend_20 { pt3dadd( 88.4763, 91.171, -31.3538, 0.28 ) }
    dend_20 { pt3dadd( 89.0128, 91.7338, -31.65, 0.55 ) }
    dend_20 { pt3dadd( 91.1799, 93.9394, -32.8388, 0.28 ) }
    dend_20 { pt3dadd( 91.6185, 94.3852, -33.1347, 0.55 ) }
    dend_20 { pt3dadd( 92.9097, 95.7889, -34.3448, 0.28 ) }
    dend_20 { pt3dadd( 93.3632, 96.3053, -34.8248, 0.55 ) }
    dend_20 { pt3dadd( 93.8899, 96.987, -35.4531, 0.28 ) }
    dend_20 { pt3dadd( 94.1251, 97.3345, -35.7489, 0.28 ) }
    dend_20 { pt3dadd( 94.2288, 97.5024, -35.871, 0.55 ) }
    dend_20 { pt3dadd( 95.4971, 99.6063, -37.2487, 0.28 ) }
    dend_20 { pt3dadd( 96.336, 100.992, -38.1429, 1.38 ) }
    dend_20 { pt3dadd( 97.1817, 102.387, -39.1106, 0.28 ) }
    dend_20 { pt3dadd( 97.5142, 102.885, -39.5253, 0.55 ) }
    dend_20 { pt3dadd( 97.9896, 103.557, -40.1831, 0.28 ) }
    dend_20 { pt3dadd( 98.536, 104.251, -40.9531, 0.55 ) }
    dend_20 { pt3dadd( 99.8701, 105.701, -42.7688, 0.28 ) }
    dend_20 { pt3dadd( 100.371, 106.142, -43.5544, 0.55 ) }
    dend_20 { pt3dadd( 101.768, 107.096, -45.8224, 0.28 ) }
    dend_20 { pt3dadd( 102.337, 107.455, -46.7779, 0.83 ) }
    dend_20 { pt3dadd( 103.132, 107.918, -48.168, 0.28 ) }
    dend_20 { pt3dadd( 103.595, 108.141, -48.954, 0.55 ) }
    dend_20 { pt3dadd( 105.748, 108.826, -52.3298, 0.28 ) }
    dend_20 { pt3dadd( 106.279, 108.945, -53.1334, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 64/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 66.5713, 54.4971, 5.04696, 0.28 ) }
    dend_19 { pt3dadd( 69.416, 55.2028, 5.0432, 0.28 ) }
    dend_19 { pt3dadd( 72.061, 55.7594, 5.16506, 0.55 ) }
    dend_19 { pt3dadd( 74.0857, 56.1887, 5.3052, 0.83 ) }
    dend_19 { pt3dadd( 76.1584, 56.6824, 5.33517, 0.83 ) }
    dend_19 { pt3dadd( 78.1969, 57.191, 5.30023, 0.28 ) }
    dend_19 { pt3dadd( 80.0116, 57.6623, 5.25412, 0.55 ) }
    dend_19 { pt3dadd( 81.8401, 58.1844, 5.19287, 0.28 ) }
    dend_19 { pt3dadd( 83.1003, 58.5882, 5.11508, 1.11 ) }
    dend_19 { pt3dadd( 86.1629, 59.6686, 4.74921, 0.28 ) }
    dend_19 { pt3dadd( 86.8792, 59.9842, 4.63027, 0.28 ) }
    dend_19 { pt3dadd( 88.2418, 60.657, 4.3327, 0.55 ) }
    dend_19 { pt3dadd( 90.6123, 61.9714, 3.72439, 0.28 ) }
    dend_19 { pt3dadd( 91.094, 62.2681, 3.58741, 0.55 ) }
    dend_19 { pt3dadd( 92.9499, 63.4429, 3.25101, 0.28 ) }
    dend_19 { pt3dadd( 94.1858, 64.2775, 3.13675, 0.83 ) }
    dend_19 { pt3dadd( 95.2102, 65.0721, 2.926, 0.83 ) }
    dend_19 { pt3dadd( 96.3098, 66.0048, 2.59012, 0.28 ) }
    dend_19 { pt3dadd( 97.0685, 66.7471, 2.27947, 0.55 ) }
    dend_19 { pt3dadd( 98.993, 68.8567, 1.35081, 0.28 ) }
    dend_19 { pt3dadd( 100.241, 70.3583, 0.716719, 0.83 ) }
    dend_19 { pt3dadd( 102.639, 73.4349, -0.574157, 0.28 ) }
    dend_19 { pt3dadd( 103.103, 74.0755, -0.821489, 0.83 ) }
    dend_19 { pt3dadd( 104.555, 76.12, -1.56666, 0.28 ) }
    dend_19 { pt3dadd( 105.004, 76.7706, -1.78423, 0.83 ) }
    dend_19 { pt3dadd( 106.411, 78.997, -2.56463, 0.28 ) }
    dend_19 { pt3dadd( 106.714, 79.4765, -2.65354, 0.55 ) }
    dend_19 { pt3dadd( 107.362, 80.4365, -2.68606, 0.28 ) }
    dend_19 { pt3dadd( 107.69, 80.9051, -2.65552, 0.55 ) }
    dend_19 { pt3dadd( 108.851, 82.4148, -2.37976, 0.28 ) }
    dend_19 { pt3dadd( 110.405, 84.2415, -1.88763, 0.83 ) }
    dend_19 { pt3dadd( 111.602, 85.5314, -1.41598, 0.28 ) }
    dend_19 { pt3dadd( 112.342, 86.2274, -1.07028, 0.55 ) }
    dend_19 { pt3dadd( 114.008, 87.5661, -0.436583, 0.28 ) }
    dend_19 { pt3dadd( 114.614, 87.9527, -0.250039, 0.83 ) }
    dend_19 { pt3dadd( 115.956, 88.5611, 0.0434543, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_19 { pt3dadd( 116.992, 88.917, 0.306574, 0.55 ) }
    dend_19 { pt3dadd( 118.294, 89.2935, 0.407724, 0.28 ) }
    dend_19 { pt3dadd( 121.23, 90.0731, 0.354106, 1.94 ) }
    dend_19 { pt3dadd( 123.992, 90.7457, 0.142665, 0.28 ) }
    dend_19 { pt3dadd( 126.053, 91.2164, -0.0495687, 0.28 ) }
    dend_19 { pt3dadd( 128.703, 91.8029, -0.36442, 0.55 ) }
    dend_19 { pt3dadd( 132.596, 92.6072, -0.848951, 0.28 ) }
    dend_19 { pt3dadd( 133.745, 92.8614, -0.994407, 1.66 ) }
    dend_19 { pt3dadd( 142.475, 96.6041, -1.82569, 1.66 ) }
    dend_19 { pt3dadd( 150.768, 100.736, -4.05155, 1.66 ) }
    dend_19 { pt3dadd( 158.938, 105.235, -5.91937, 1.66 ) }
    dend_19 { pt3dadd( 166.229, 110.77, -8.33075, 1.66 ) }
    dend_19 { pt3dadd( 171.603, 117.582, -11.9404, 1.66 ) }
    dend_19 { pt3dadd( 176.945, 123.99, -16.3398, 1.66 ) }
    dend_19 { pt3dadd( 182.939, 130.742, -18.9266, 1.66 ) }
    dend_19 { pt3dadd( 187.578, 138.326, -21.7574, 1.66 ) }
    dend_19 { pt3dadd( 192.932, 145.89, -22.6335, 1.66 ) }
    dend_19 { pt3dadd( 198.661, 153.095, -24.264, 1.66 ) }
    dend_19 { pt3dadd( 204.506, 160.275, -25.5335, 1.66 ) }
    dend_19 { pt3dadd( 210.218, 167.634, -25.6345, 1.66 ) }
    dend_19 { pt3dadd( 215.215, 175.445, -25.5294, 1.66 ) }
    dend_19 { pt3dadd( 219.108, 183.702, -24.3157, 1.66 ) }
    dend_19 { pt3dadd( 223.431, 191.508, -21.9372, 1.66 ) }
    dend_19 { pt3dadd( 227.149, 199.467, -19.1679, 1.66 ) }
    dend_19 { pt3dadd( 229.736, 207.882, -16.624, 1.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 25/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.1927, 12.4293, 13.5106, 2.22 ) }
    dend_9 { pt3dadd( 18.7304, 11.1536, 15.4222, 2.22 ) }
    dend_9 { pt3dadd( 20.066, 10.9754, 17.0227, 0.83 ) }
    dend_9 { pt3dadd( 21.732, 11.3695, 19.2824, 0.83 ) }
    dend_9 { pt3dadd( 22.8832, 12.2957, 22.2758, 0.83 ) }
    dend_9 { pt3dadd( 24.6839, 13.5913, 27.1368, 0.83 ) }
    dend_9 { pt3dadd( 25.6176, 14.1378, 29.5117, 1.38 ) }
    dend_9 { pt3dadd( 26.9427, 14.7967, 32.8795, 1.66 ) }
    dend_9 { pt3dadd( 28.2449, 15.4282, 36.3943, 2.22 ) }
    dend_9 { pt3dadd( 32.7709, 17.1524, 48.4822, 0.83 ) }
    dend_9 { pt3dadd( 33.632, 17.3003, 50.7069, 1.11 ) }
    dend_9 { pt3dadd( 34.3694, 16.9603, 52.4576, 0.55 ) }
    dend_9 { pt3dadd( 35.2049, 16.3009, 54.2455, 0.55 ) }
    dend_9 { pt3dadd( 36.554, 14.6719, 56.8244, 0.55 ) }
    dend_9 { pt3dadd( 37.8941, 12.4656, 59.1302, 0.83 ) }
    dend_9 { pt3dadd( 38.3396, 11.1647, 59.4852, 0.55 ) }
    dend_9 { pt3dadd( 39.5498, 5.86189, 61.0605, 0.55 ) }
    dend_9 { pt3dadd( 43.2276, 3.14282, 72.0785, 0.55 ) }
    dend_9 { pt3dadd( 46.5878, 2.6774, 83.5549, 0.55 ) }
    dend_9 { pt3dadd( 50.5338, 4.00756, 94.7715, 0.55 ) }
    dend_9 { pt3dadd( 53.7483, 4.47603, 106.292, 0.55 ) }
    dend_9 { pt3dadd( 55.5251, 2.59734, 117.957, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 16.1927, 12.4293, 13.5106, 1.38 ) }
    dend_2 { pt3dadd( 20.2353, 11.5991, 16.4105, 1.38 ) }
    dend_2 { pt3dadd( 23.9956, 11.069, 18.6893, 0.83 ) }
    dend_2 { pt3dadd( 26.8364, 10.5563, 20.3632, 1.11 ) }
    dend_2 { pt3dadd( 31.7749, 9.4873, 23.3255, 0.83 ) }
    dend_2 { pt3dadd( 36.2356, 8.36516, 26.0823, 1.11 ) }
    dend_2 { pt3dadd( 40.1074, 7.30415, 28.3681, 0.83 ) }
    dend_2 { pt3dadd( 43.3407, 6.18823, 30.0893, 0.83 ) }
    dend_2 { pt3dadd( 48.7262, 4.10837, 32.6811, 1.11 ) }
    dend_2 { pt3dadd( 50.7238, 3.2394, 33.6211, 0.83 ) }
    dend_2 { pt3dadd( 52.5654, 2.22563, 34.5356, 1.11 ) }
    dend_2 { pt3dadd( 56.1436, 0.083059, 36.1921, 0.83 ) }
    dend_2 { pt3dadd( 60.6596, -2.89229, 38.3637, 1.11 ) }
    dend_2 { pt3dadd( 61.9678, -3.78677, 38.9966, 0.83 ) }
    dend_2 { pt3dadd( 63.0755, -4.43722, 39.582, 0.83 ) }
    dend_2 { pt3dadd( 64.6462, -5.26518, 40.5186, 0.83 ) }
    dend_2 { pt3dadd( 67.7576, -6.76767, 42.6662, 1.38 ) }
    dend_2 { pt3dadd( 70.138, -7.89678, 44.6543, 0.83 ) }
    dend_2 { pt3dadd( 73.8867, -9.59828, 48.0801, 0.83 ) }
    dend_2 { pt3dadd( 77.8175, -11.2557, 51.6593, 0.55 ) }
    dend_2 { pt3dadd( 78.0691, -11.3483, 51.8781, 0.83 ) }
    dend_2 { pt3dadd( 80.0051, -12.0338, 53.4862, 0.83 ) }
    dend_2 { pt3dadd( 82.0579, -12.8285, 55.0079, 0.55 ) }
    dend_2 { pt3dadd( 83.2732, -13.3447, 55.7608, 0.55 ) }
    dend_2 { pt3dadd( 85.1154, -14.0982, 56.6791, 0.55 ) }
    dend_2 { pt3dadd( 87.9552, -15.2109, 57.8313, 0.55 ) }
    dend_2 { pt3dadd( 90.7262, -16.2143, 58.9597, 0.55 ) }
    dend_2 { pt3dadd( 94.7825, -17.5569, 60.5991, 0.55 ) }
    dend_2 { pt3dadd( 97.7791, -18.4302, 61.773, 0.83 ) }
    dend_2 { pt3dadd( 102.143, -19.562, 63.4331, 0.83 ) }
    dend_2 { pt3dadd( 105.774, -20.4995, 64.821, 0.55 ) }
    dend_2 { pt3dadd( 107.711, -20.8831, 65.5053, 0.55 ) }
    dend_2 { pt3dadd( 109.003, -21.0281, 65.9094, 0.55 ) }
    dend_2 { pt3dadd( 111.929, -21.0903, 66.802, 1.38 ) }
    dend_2 { pt3dadd( 114.316, -21.0585, 67.4181, 0.55 ) }
    dend_2 { pt3dadd( 115.693, -21.0332, 67.7149, 0.55 ) }
    dend_2 { pt3dadd( 120.201, -21.0478, 68.6039, 0.55 ) }
    dend_2 { pt3dadd( 124.279, -21.0513, 69.3131, 0.55 ) }
    dend_2 { pt3dadd( 127.919, -21.1466, 69.938, 0.83 ) }
    dend_2 { pt3dadd( 131.915, -21.3536, 70.6163, 0.55 ) }
    dend_2 { pt3dadd( 135.258, -21.6975, 71.213, 1.11 ) }
    dend_2 { pt3dadd( 138.294, -22.1779, 71.842, 0.55 ) }
    dend_2 { pt3dadd( 139.919, -22.563, 72.2362, 0.55 ) }
    dend_2 { pt3dadd( 142.206, -23.3349, 72.8737, 0.55 ) }
    dend_2 { pt3dadd( 144.173, -24.2673, 73.5967, 0.55 ) }
    dend_2 { pt3dadd( 146.543, -25.8461, 74.9278, 0.83 ) }
    dend_2 { pt3dadd( 148.453, -27.3491, 76.1864, 0.55 ) }
    dend_2 { pt3dadd( 150.5, -29.2209, 77.6583, 0.55 ) }
    dend_2 { pt3dadd( 153.144, -31.9759, 79.7555, 0.55 ) }
    dend_2 { pt3dadd( 154.498, -33.5768, 80.9479, 0.83 ) }
    dend_2 { pt3dadd( 156.289, -36.0541, 82.7235, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.98313, 66.1556, -57.7661, 0.83 ) }
    dend_52 { pt3dadd( -6.91704, 69.3965, -58.912, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -7.11537, 72.4838, -59.9547, 0.83 ) }
    dend_52 { pt3dadd( -7.33977, 74.7401, -60.5118, 0.55 ) }
    dend_52 { pt3dadd( -7.55914, 76.9639, -60.9161, 0.83 ) }
    dend_52 { pt3dadd( -7.79004, 78.9273, -61.2186, 0.55 ) }
    dend_52 { pt3dadd( -8.06897, 80.8596, -61.4925, 0.55 ) }
    dend_52 { pt3dadd( -8.4802, 82.6169, -61.7123, 0.55 ) }
    dend_52 { pt3dadd( -9.157, 85.4607, -61.8539, 0.55 ) }
    dend_52 { pt3dadd( -9.57525, 87.1488, -61.9108, 0.83 ) }
    dend_52 { pt3dadd( -10.1093, 89.5672, -61.9227, 0.83 ) }
    dend_52 { pt3dadd( -10.5806, 91.5297, -61.9208, 0.83 ) }
    dend_52 { pt3dadd( -11.0452, 93.226, -61.939, 0.83 ) }
    dend_52 { pt3dadd( -11.885, 96.2672, -62.017, 0.83 ) }
    dend_52 { pt3dadd( -12.7337, 99.1144, -62.1695, 0.83 ) }
    dend_52 { pt3dadd( -13.2624, 101.043, -62.2877, 0.55 ) }
    dend_52 { pt3dadd( -13.6355, 102.848, -62.3732, 0.55 ) }
    dend_52 { pt3dadd( -13.8488, 104.663, -62.4452, 0.55 ) }
    dend_52 { pt3dadd( -13.9819, 107.798, -62.5893, 0.83 ) }
    dend_52 { pt3dadd( -13.9299, 108.977, -62.6379, 0.83 ) }
    dend_52 { pt3dadd( -13.6708, 111.21, -62.7157, 0.55 ) }
    dend_52 { pt3dadd( -13.3615, 113.585, -62.8012, 0.55 ) }
    dend_52 { pt3dadd( -13.0783, 115.602, -62.8345, 0.55 ) }
    dend_52 { pt3dadd( -12.7882, 117.814, -62.8471, 0.55 ) }
    dend_52 { pt3dadd( -12.493, 120.816, -62.8252, 0.55 ) }
    dend_52 { pt3dadd( -12.3308, 122.506, -62.861, 0.55 ) }
    dend_52 { pt3dadd( -12.1724, 124.314, -62.9381, 0.83 ) }
    dend_52 { pt3dadd( -12.0241, 125.935, -63.0498, 0.83 ) }
    dend_52 { pt3dadd( -11.8203, 128.259, -63.2944, 0.83 ) }
    dend_52 { pt3dadd( -11.5733, 130.364, -63.5444, 0.83 ) }
    dend_52 { pt3dadd( -11.2949, 132.794, -63.86, 0.83 ) }
    dend_52 { pt3dadd( -10.9315, 135.307, -64.1593, 0.55 ) }
    dend_52 { pt3dadd( -10.5172, 137.896, -64.4235, 0.55 ) }
    dend_52 { pt3dadd( -10.1276, 140.346, -64.6098, 0.55 ) }
    dend_52 { pt3dadd( -9.88251, 142.461, -64.7007, 0.55 ) }
    dend_52 { pt3dadd( -9.68818, 144.324, -64.7408, 0.55 ) }
    dend_52 { pt3dadd( -9.45725, 146.886, -64.7055, 0.55 ) }
    dend_52 { pt3dadd( -9.29729, 148.938, -64.6277, 0.55 ) }
    dend_52 { pt3dadd( -9.08548, 151.318, -64.4847, 0.55 ) }
    dend_52 { pt3dadd( -8.91632, 154.13, -64.2585, 0.55 ) }
    dend_52 { pt3dadd( -8.8976, 155.917, -64.1215, 0.55 ) }
    dend_52 { pt3dadd( -8.91175, 157.289, -64.011, 0.55 ) }
    dend_52 { pt3dadd( -9.02009, 159.27, -63.849, 0.55 ) }
    dend_52 { pt3dadd( -9.22945, 163.629, -63.4584, 0.55 ) }
    dend_52 { pt3dadd( -9.30553, 165.503, -63.2723, 0.55 ) }
    dend_52 { pt3dadd( -9.31995, 167.543, -63.0495, 0.55 ) }
    dend_52 { pt3dadd( -9.32751, 169.771, -62.7912, 0.55 ) }
    dend_52 { pt3dadd( -9.29421, 170.96, -62.6784, 0.28 ) }
    dend_52 { pt3dadd( -9.14835, 172.811, -62.5522, 0.83 ) }
    dend_52 { pt3dadd( -8.96406, 174.776, -62.4127, 0.55 ) }
    dend_52 { pt3dadd( -8.65747, 176.908, -62.2631, 0.55 ) }
    dend_52 { pt3dadd( -8.4061, 178.28, -62.1875, 0.55 ) }
    dend_52 { pt3dadd( -8.00557, 180.504, -62.1152, 0.55 ) }
    dend_52 { pt3dadd( -7.82676, 181.543, -62.1025, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -6.98313, 66.1556, -57.7661, 0.83 ) }
    dend_47 { pt3dadd( -6.83906, 67.6512, -58.0796, 0.83 ) }
    dend_47 { pt3dadd( -6.76812, 69.9848, -58.6547, 0.83 ) }
    dend_47 { pt3dadd( -6.78079, 71.1651, -58.9241, 0.28 ) }
    dend_47 { pt3dadd( -6.764, 71.6459, -59.0213, 0.55 ) }
    dend_47 { pt3dadd( -6.50514, 73.9303, -59.4648, 0.28 ) }
    dend_47 { pt3dadd( -6.35032, 75.2255, -59.7368, 0.83 ) }
    dend_47 { pt3dadd( -6.28616, 76.4404, -60.164, 0.83 ) }
    dend_47 { pt3dadd( -6.26698, 78.684, -61.1082, 0.55 ) }
    dend_47 { pt3dadd( -6.16093, 80.1923, -61.8179, 0.55 ) }
    dend_47 { pt3dadd( -5.85538, 82.4256, -62.9657, 0.55 ) }
    dend_47 { pt3dadd( -5.59279, 84.2116, -63.9653, 0.55 ) }
    dend_47 { pt3dadd( -5.01078, 88.1914, -66.3746, 0.55 ) }
    dend_47 { pt3dadd( -4.75601, 89.7009, -67.3676, 0.55 ) }
    dend_47 { pt3dadd( -4.269, 93.0419, -69.6668, 0.55 ) }
    dend_47 { pt3dadd( -3.93568, 96.0322, -71.6731, 0.55 ) }
    dend_47 { pt3dadd( -3.78358, 97.8251, -72.8209, 0.55 ) }
    dend_47 { pt3dadd( -3.60995, 98.97, -73.4532, 0.55 ) }
    dend_47 { pt3dadd( -3.16972, 101.188, -74.5123, 0.55 ) }
    dend_47 { pt3dadd( -2.76763, 103.79, -75.7175, 0.55 ) }
    dend_47 { pt3dadd( -2.60933, 105.527, -76.3848, 0.55 ) }
    dend_47 { pt3dadd( -2.49788, 106.741, -76.7703, 0.28 ) }
    dend_47 { pt3dadd( -2.00241, 109.911, -77.6526, 0.55 ) }
    dend_47 { pt3dadd( -1.71286, 111.858, -78.2327, 0.28 ) }
    dend_47 { pt3dadd( -1.60399, 112.794, -78.4945, 0.83 ) }
    dend_47 { pt3dadd( -1.42613, 114.518, -78.9575, 0.83 ) }
    dend_47 { pt3dadd( -1.34053, 116.168, -79.4558, 0.55 ) }
    dend_47 { pt3dadd( -1.2629, 118.718, -80.3589, 0.55 ) }
    dend_47 { pt3dadd( -1.44318, 120.669, -81.2226, 0.55 ) }
    dend_47 { pt3dadd( -1.67158, 122.465, -82.0551, 0.55 ) }
    dend_47 { pt3dadd( -1.80111, 123.633, -82.6397, 0.28 ) }
    dend_47 { pt3dadd( -1.92505, 125.239, -83.5364, 0.55 ) }
    dend_47 { pt3dadd( -1.95113, 127.408, -84.845, 0.28 ) }
    dend_47 { pt3dadd( -2.04984, 129.756, -86.3024, 0.55 ) }
    dend_47 { pt3dadd( -2.03556, 131.075, -87.1303, 0.55 ) }
    dend_47 { pt3dadd( -1.93523, 132.7, -88.2521, 0.55 ) }
    dend_47 { pt3dadd( -1.74929, 134.165, -89.2949, 0.55 ) }
    dend_47 { pt3dadd( -1.42657, 135.887, -90.3749, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 90/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -88.8292, 71.645, -72.8837, 0.28 ) }
    dend_43 { pt3dadd( -95.3677, 71.3845, -69.8533, 0.28 ) }
    dend_43 { pt3dadd( -97.6668, 71.2567, -68.9278, 0.55 ) }
    dend_43 { pt3dadd( -100.158, 71.195, -68.0475, 0.55 ) }
    dend_43 { pt3dadd( -102.498, 71.137, -67.2206, 0.55 ) }
    dend_43 { pt3dadd( -104.964, 71.0759, -66.349, 0.55 ) }
    dend_43 { pt3dadd( -107.28, 71.0185, -65.5306, 0.83 ) }
    dend_43 { pt3dadd( -109.127, 70.8971, -65.3002, 0.28 ) }
    dend_43 { pt3dadd( -111.124, 70.8349, -64.8913, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 99/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -88.8292, 71.645, -72.8837, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -88.8859, 74.5574, -73.8195, 0.55 ) }
    dend_38 { pt3dadd( -89.0817, 76.4376, -74.5797, 0.28 ) }
    dend_38 { pt3dadd( -89.346, 78.8335, -75.5618, 0.55 ) }
    dend_38 { pt3dadd( -89.7656, 81.5066, -76.5951, 0.55 ) }
    dend_38 { pt3dadd( -90.0154, 82.6166, -76.9884, 0.55 ) }
    dend_38 { pt3dadd( -91.3134, 88.3844, -79.0324, 0.83 ) }
    dend_38 { pt3dadd( -91.9124, 90.637, -79.8502, 0.28 ) }
    dend_38 { pt3dadd( -93.0034, 94.436, -81.2274, 0.55 ) }
    dend_38 { pt3dadd( -94.0304, 97.6167, -82.327, 0.55 ) }
    dend_38 { pt3dadd( -95.0586, 100.118, -83.1609, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 10/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -145.76, 68.8615, 17.746, 0.83 ) }
    dend_28 { pt3dadd( -145.696, 69.6042, 18.0863, 0.83 ) }
    dend_28 { pt3dadd( -145.657, 71.6373, 19.216, 0.83 ) }
    dend_28 { pt3dadd( -145.775, 73.1997, 20.6327, 0.55 ) }
    dend_28 { pt3dadd( -146.028, 75.0975, 22.5384, 0.55 ) }
    dend_28 { pt3dadd( -146.47, 77.5578, 25.085, 0.55 ) }
    dend_28 { pt3dadd( -146.626, 78.3714, 25.9278, 0.55 ) }
    dend_28 { pt3dadd( -146.878, 79.6342, 27.3781, 1.11 ) }
    dend_28 { pt3dadd( -147.651, 82.5727, 31.3883, 0.28 ) }
    dend_28 { pt3dadd( -147.852, 83.0459, 32.1442, 0.55 ) }
    dend_28 { pt3dadd( -148.24, 83.7202, 33.4164, 0.28 ) }
    dend_28 { pt3dadd( -148.496, 84.1407, 34.0997, 0.55 ) }
    dend_28 { pt3dadd( -150.598, 89.6504, 41.623, 0.55 ) }
    dend_28 { pt3dadd( -153.695, 95.7977, 48.2151, 0.55 ) }
    dend_28 { pt3dadd( -157.456, 101.257, 55.1326, 0.55 ) }
    dend_28 { pt3dadd( -163.369, 105.276, 61.6679, 0.55 ) }
    dend_28 { pt3dadd( -168.854, 109.551, 68.3857, 0.55 ) }
    dend_28 { pt3dadd( -174.99, 114.039, 74.3592, 0.55 ) }
    dend_28 { pt3dadd( -180.801, 118.886, 80.3415, 0.55 ) }
    dend_28 { pt3dadd( -187.319, 122.481, 86.5839, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -145.76, 68.8615, 17.746, 0.55 ) }
    dend_25 { pt3dadd( -147.568, 71.0113, 17.4461, 0.55 ) }
    dend_25 { pt3dadd( -149.02, 72.3211, 17.3876, 0.55 ) }
    dend_25 { pt3dadd( -150.349, 73.2542, 17.5033, 0.28 ) }
    dend_25 { pt3dadd( -151.205, 73.7591, 17.707, 0.55 ) }
    dend_25 { pt3dadd( -153.197, 74.6699, 18.3588, 0.28 ) }
    dend_25 { pt3dadd( -154.791, 75.2008, 19.0417, 0.55 ) }
    dend_25 { pt3dadd( -158.458, 76.0652, 20.8436, 0.55 ) }
    dend_25 { pt3dadd( -160.98, 76.4903, 22.272, 0.55 ) }
    dend_25 { pt3dadd( -163.487, 76.6594, 23.8768, 1.11 ) }
    dend_25 { pt3dadd( -165.535, 76.5734, 25.3652, 0.28 ) }
    dend_25 { pt3dadd( -167.396, 76.1631, 26.9587, 0.55 ) }
    dend_25 { pt3dadd( -175.584, 79.299, 32.1606, 0.55 ) }
    dend_25 { pt3dadd( -183.623, 81.7353, 37.9602, 0.55 ) }
    dend_25 { pt3dadd( -191.964, 84.2055, 43.2975, 0.55 ) }
    dend_25 { pt3dadd( -199.561, 86.782, 49.6098, 0.55 ) }
    dend_25 { pt3dadd( -207.588, 90.1881, 54.8824, 0.55 ) }
    dend_25 { pt3dadd( -216.927, 91.9689, 58.6019, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 55.5251, 2.59734, 117.957, 0.83 ) }
    dend_13 { pt3dadd( 58.6058, 2.10494, 127.55, 0.83 ) }
    dend_13 { pt3dadd( 61.8508, -0.194505, 136.786, 0.83 ) }
    dend_13 { pt3dadd( 65.5828, -1.96197, 145.97, 0.83 ) }
    dend_13 { pt3dadd( 68.5982, -2.72305, 155.563, 0.83 ) }
    dend_13 { pt3dadd( 70.3762, -5.65499, 164.989, 0.83 ) }
    dend_13 { pt3dadd( 70.9067, -7.88673, 174.773, 0.83 ) }
    dend_13 { pt3dadd( 69.268, -11.8586, 183.771, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 56/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 55.5251, 2.59734, 117.957, 0.55 ) }
    dend_10 { pt3dadd( 61.8141, 0.681897, 130.695, 0.83 ) }
    dend_10 { pt3dadd( 66.0068, -1.16359, 144.284, 0.83 ) }
    dend_10 { pt3dadd( 71.1365, -3.76511, 157.404, 0.83 ) }
    dend_10 { pt3dadd( 76.0282, -7.9023, 170.174, 0.83 ) }
    dend_10 { pt3dadd( 82.0844, -11.6729, 182.559, 0.83 ) }
    dend_10 { pt3dadd( 85.4414, -17.13, 195.286, 0.83 ) }
    dend_10 { pt3dadd( 88.3883, -23.1831, 207.818, 0.83 ) }
    dend_10 { pt3dadd( 90.4967, -27.8237, 221.163, 0.83 ) }
    dend_10 { pt3dadd( 93.9154, -34.8427, 232.995, 0.83 ) }
    dend_10 { pt3dadd( 98.3049, -40.5184, 245.287, 0.83 ) }
    dend_10 { pt3dadd( 101.486, -46.8458, 257.608, 0.83 ) }
    dend_10 { pt3dadd( 106.716, -52.2567, 269.696, 0.83 ) }
    dend_10 { pt3dadd( 111.543, -58.7266, 281.369, 0.83 ) }
    dend_10 { pt3dadd( 116.348, -65.9488, 292.552, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 71/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 156.289, -36.0541, 82.7235, 0.55 ) }
    dend_6 { pt3dadd( 156.19, -35.1598, 88.4479, 0.55 ) }
    dend_6 { pt3dadd( 156.168, -34.9619, 89.7145, 0.28 ) }
    dend_6 { pt3dadd( 156.152, -34.8141, 90.6609, 0.55 ) }
    dend_6 { pt3dadd( 156.228, -35.7805, 100.14, 0.55 ) }
    dend_6 { pt3dadd( 156.754, -36.61, 109.635, 0.55 ) }
    dend_6 { pt3dadd( 156.216, -36.9509, 119.152, 0.55 ) }
    dend_6 { pt3dadd( 157.455, -38.4172, 128.499, 0.55 ) }
    dend_6 { pt3dadd( 158.937, -37.9782, 137.993, 0.55 ) }
    dend_6 { pt3dadd( 159.998, -37.0418, 147.515, 0.55 ) }
    dend_6 { pt3dadd( 160.94, -37.3115, 157.044, 0.55 ) }
    dend_6 { pt3dadd( 162.051, -35.7607, 166.501, 0.55 ) }
    dend_6 { pt3dadd( 164.686, -35.2253, 175.768, 0.55 ) }
    dend_6 { pt3dadd( 168.58, -33.2346, 184.43, 0.55 ) }
    dend_6 { pt3dadd( 173.336, -30.6448, 192.498, 0.55 ) }
    dend_6 { pt3dadd( 179.325, -28.4233, 199.821, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 156.289, -36.0541, 82.7235, 0.28 ) }
    dend_3 { pt3dadd( 156.925, -36.6043, 83.4335, 0.28 ) }
    dend_3 { pt3dadd( 157.551, -37.1451, 84.1314, 0.55 ) }
    dend_3 { pt3dadd( 158.434, -37.9078, 85.1156, 0.28 ) }
    dend_3 { pt3dadd( 159.21, -38.5786, 85.9812, 0.83 ) }
    dend_3 { pt3dadd( 164.063, -42.1459, 90.9242, 0.83 ) }
    dend_3 { pt3dadd( 168.041, -46.3082, 96.1207, 0.83 ) }
    dend_3 { pt3dadd( 172.573, -50.251, 101.055, 0.83 ) }
    dend_3 { pt3dadd( 176.728, -53.0843, 107.027, 0.83 ) }
    dend_3 { pt3dadd( 180.625, -55.8911, 113.181, 0.83 ) }
    dend_3 { pt3dadd( 183.68, -59.2576, 119.491, 0.83 ) }
    dend_3 { pt3dadd( 186.741, -62.6615, 125.775, 0.83 ) }
    dend_3 { pt3dadd( 189.948, -66.1463, 131.94, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 192.55, -70.1902, 138.007, 0.83 ) }
    dend_3 { pt3dadd( 194.549, -73.3613, 144.815, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 2/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -7.82676, 181.543, -62.1025, 0.28 ) }
    dend_54 { pt3dadd( -7.53668, 182.985, -61.8162, 0.28 ) }
    dend_54 { pt3dadd( -7.35321, 184.369, -61.6224, 0.83 ) }
    dend_54 { pt3dadd( -7.28671, 185.114, -61.5594, 0.28 ) }
    dend_54 { pt3dadd( -7.26077, 185.87, -61.5143, 0.28 ) }
    dend_54 { pt3dadd( -7.26435, 186.999, -61.4558, 0.55 ) }
    dend_54 { pt3dadd( -7.23827, 187.847, -61.4091, 0.28 ) }
    dend_54 { pt3dadd( -7.22615, 188.805, -61.3797, 0.83 ) }
    dend_54 { pt3dadd( -7.18839, 190.151, -61.3502, 0.28 ) }
    dend_54 { pt3dadd( -7.11377, 191.143, -61.3475, 0.28 ) }
    dend_54 { pt3dadd( -6.96024, 192.242, -61.33, 0.28 ) }
    dend_54 { pt3dadd( -6.64116, 193.549, -61.1849, 0.55 ) }
    dend_54 { pt3dadd( -6.26445, 194.585, -60.9816, 0.28 ) }
    dend_54 { pt3dadd( -5.8211, 195.454, -60.7153, 0.55 ) }
    dend_54 { pt3dadd( -5.15213, 196.417, -60.2901, 0.28 ) }
    dend_54 { pt3dadd( -3.81925, 197.847, -59.1913, 0.55 ) }
    dend_54 { pt3dadd( -2.23909, 199.202, -57.545, 0.28 ) }
    dend_54 { pt3dadd( -1.53923, 199.762, -56.6217, 0.55 ) }
    dend_54 { pt3dadd( -1.04854, 200.084, -55.9392, 0.28 ) }
    dend_54 { pt3dadd( -0.724698, 200.26, -55.4463, 0.28 ) }
    dend_54 { pt3dadd( 0.721383, 200.888, -52.9594, 0.55 ) }
    dend_54 { pt3dadd( 1.22873, 201.062, -51.9767, 0.28 ) }
    dend_54 { pt3dadd( 1.78388, 201.475, -50.6956, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 25/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -7.82676, 181.543, -62.1025, 0.28 ) }
    dend_53 { pt3dadd( -8.52057, 182.749, -62.9357, 0.28 ) }
    dend_53 { pt3dadd( -8.90195, 183.323, -63.354, 0.83 ) }
    dend_53 { pt3dadd( -9.70094, 184.46, -64.1746, 0.28 ) }
    dend_53 { pt3dadd( -10.6071, 185.803, -65.11, 1.11 ) }
    dend_53 { pt3dadd( -12.2227, 188.483, -66.8105, 0.28 ) }
    dend_53 { pt3dadd( -12.795, 189.535, -67.4592, 0.55 ) }
    dend_53 { pt3dadd( -13.4353, 190.784, -68.3282, 0.28 ) }
    dend_53 { pt3dadd( -13.6291, 191.225, -68.6433, 0.28 ) }
    dend_53 { pt3dadd( -13.9394, 191.933, -69.2071, 0.55 ) }
    dend_53 { pt3dadd( -14.5237, 193.026, -70.05, 0.28 ) }
    dend_53 { pt3dadd( -15.0104, 193.781, -70.6148, 0.55 ) }
    dend_53 { pt3dadd( -16.2726, 195.604, -72.0423, 0.28 ) }
    dend_53 { pt3dadd( -16.7493, 196.245, -72.5475, 0.83 ) }
    dend_53 { pt3dadd( -18.137, 198.068, -73.9896, 0.28 ) }
    dend_53 { pt3dadd( -19.4201, 199.788, -75.3102, 0.55 ) }
    dend_53 { pt3dadd( -20.0518, 200.689, -75.9552, 0.28 ) }
    dend_53 { pt3dadd( -20.4204, 201.314, -76.2966, 0.55 ) }
    dend_53 { pt3dadd( -21.25, 203.15, -77.0204, 0.28 ) }
    dend_53 { pt3dadd( -21.7664, 204.62, -77.3912, 0.55 ) }
    dend_53 { pt3dadd( -21.9963, 205.846, -77.4599, 0.28 ) }
    dend_53 { pt3dadd( -22.0352, 206.862, -77.3876, 0.55 ) }
    dend_53 { pt3dadd( -21.9873, 208.401, -77.1634, 0.28 ) }
    dend_53 { pt3dadd( -21.9878, 208.436, -77.1592, 0.55 ) }
    dend_53 { pt3dadd( -22.1592, 209.857, -76.9805, 0.28 ) }
    dend_53 { pt3dadd( -22.3216, 210.63, -76.8667, 0.55 ) }
    dend_53 { pt3dadd( -22.7488, 211.912, -76.7849, 0.28 ) }
    dend_53 { pt3dadd( -23.157, 212.86, -76.8922, 0.55 ) }
    dend_53 { pt3dadd( -24.4506, 215.097, -77.8778, 0.28 ) }
    dend_53 { pt3dadd( -24.8527, 215.662, -78.2516, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -1.42657, 135.887, -90.3749, 0.28 ) }
    dend_51 { pt3dadd( -0.151301, 138.268, -92.4319, 0.28 ) }
    dend_51 { pt3dadd( 0.906693, 140.389, -94.1445, 0.55 ) }
    dend_51 { pt3dadd( 2.98765, 145.011, -97.6355, 0.55 ) }
    dend_51 { pt3dadd( 3.72342, 146.984, -99.0509, 0.28 ) }
    dend_51 { pt3dadd( 4.18486, 148.297, -99.8697, 0.55 ) }
    dend_51 { pt3dadd( 4.91983, 150.555, -101.246, 0.28 ) }
    dend_51 { pt3dadd( 5.50241, 152.842, -102.517, 0.55 ) }
    dend_51 { pt3dadd( 5.70792, 153.993, -103.104, 0.55 ) }
    dend_51 { pt3dadd( 5.97975, 156.2, -104.063, 0.28 ) }
    dend_51 { pt3dadd( 6.27557, 159.174, -105.529, 0.55 ) }
    dend_51 { pt3dadd( 6.61861, 162.143, -107.211, 0.28 ) }
    dend_51 { pt3dadd( 6.90903, 163.648, -108.22, 0.55 ) }
    dend_51 { pt3dadd( 7.22194, 165.064, -109.242, 0.55 ) }
    dend_51 { pt3dadd( 7.98442, 167.499, -111.645, 0.55 ) }
    dend_51 { pt3dadd( 8.69618, 169.082, -113.656, 0.28 ) }
    dend_51 { pt3dadd( 8.78071, 169.261, -113.909, 0.83 ) }
    dend_51 { pt3dadd( 9.56168, 170.876, -116.139, 0.28 ) }
    dend_51 { pt3dadd( 10.2873, 172.468, -118.191, 0.55 ) }
    dend_51 { pt3dadd( 11.8309, 176.603, -122.753, 0.28 ) }
    dend_51 { pt3dadd( 12.6722, 179.092, -125.059, 0.55 ) }
    dend_51 { pt3dadd( 13.6394, 181.93, -127.432, 0.28 ) }
    dend_51 { pt3dadd( 14.5367, 184.123, -129.11, 0.55 ) }
    dend_51 { pt3dadd( 15.5966, 186.383, -130.654, 0.55 ) }
    dend_51 { pt3dadd( 16.8719, 188.981, -132.141, 0.28 ) }
    dend_51 { pt3dadd( 17.5891, 190.475, -132.765, 0.55 ) }
    dend_51 { pt3dadd( 19.3559, 193.617, -134.041, 0.55 ) }
    dend_51 { pt3dadd( 22.2197, 198.135, -136.287, 0.55 ) }
    dend_51 { pt3dadd( 23.9401, 200.743, -137.788, 0.55 ) }
    dend_51 { pt3dadd( 25.0563, 202.354, -138.861, 0.55 ) }
    dend_51 { pt3dadd( 26.4238, 204.373, -140.248, 0.28 ) }
    dend_51 { pt3dadd( 27.7476, 206.742, -141.77, 0.55 ) }
    dend_51 { pt3dadd( 29.3467, 210.281, -143.657, 0.55 ) }
    dend_51 { pt3dadd( 29.8141, 211.38, -144.147, 0.55 ) }
    dend_51 { pt3dadd( 30.4909, 213.102, -144.837, 0.55 ) }
    dend_51 { pt3dadd( 31.4411, 215.588, -145.752, 0.55 ) }
    dend_51 { pt3dadd( 32.333, 217.975, -146.478, 0.55 ) }
    dend_51 { pt3dadd( 33.3424, 220.82, -147.203, 0.55 ) }
    dend_51 { pt3dadd( 35.0722, 225.587, -148.196, 0.55 ) }
    dend_51 { pt3dadd( 35.7375, 227.584, -148.604, 0.28 ) }
    dend_51 { pt3dadd( 36.4063, 229.659, -149.017, 0.55 ) }
    dend_51 { pt3dadd( 37.171, 231.839, -149.434, 0.55 ) }
    dend_51 { pt3dadd( 37.8507, 233.605, -149.731, 0.28 ) }
    dend_51 { pt3dadd( 38.6357, 235.829, -150.15, 0.55 ) }
    dend_51 { pt3dadd( 39.1716, 237.559, -150.559, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 40.0777, 240.417, -151.368, 0.55 ) }
    dend_51 { pt3dadd( 40.6819, 242.767, -152.079, 0.28 ) }
    dend_51 { pt3dadd( 41.0107, 244.368, -152.58, 0.28 ) }
    dend_51 { pt3dadd( 41.6181, 247.596, -153.641, 0.55 ) }
    dend_51 { pt3dadd( 42.205, 250.861, -154.705, 0.28 ) }
    dend_51 { pt3dadd( 42.6379, 253.366, -155.503, 0.55 ) }
    dend_51 { pt3dadd( 43.163, 257.234, -156.624, 0.28 ) }
    dend_51 { pt3dadd( 43.3172, 258.577, -157.01, 0.55 ) }
    dend_51 { pt3dadd( 43.4823, 260.263, -157.433, 0.28 ) }
    dend_51 { pt3dadd( 43.711, 262.177, -157.881, 0.28 ) }
    dend_51 { pt3dadd( 43.8969, 263.683, -158.143, 0.55 ) }
    dend_51 { pt3dadd( 43.9521, 264.888, -158.393, 0.28 ) }
    dend_51 { pt3dadd( 44.1291, 266.578, -158.835, 0.28 ) }
    dend_51 { pt3dadd( 44.2897, 268.095, -159.234, 0.55 ) }
    dend_51 { pt3dadd( 44.3882, 271.305, -160.053, 0.28 ) }
    dend_51 { pt3dadd( 44.0823, 274.007, -160.904, 0.55 ) }
    dend_51 { pt3dadd( 43.6657, 276.092, -161.61, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 17/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -1.42657, 135.887, -90.3749, 0.28 ) }
    dend_48 { pt3dadd( -1.01469, 137.072, -90.3595, 0.28 ) }
    dend_48 { pt3dadd( -0.726372, 137.977, -90.3395, 0.83 ) }
    dend_48 { pt3dadd( -0.386251, 139.287, -90.3156, 0.55 ) }
    dend_48 { pt3dadd( -0.024343, 141.005, -90.2069, 0.55 ) }
    dend_48 { pt3dadd( 0.306863, 143.159, -89.8987, 0.55 ) }
    dend_48 { pt3dadd( 0.438933, 144.288, -89.6697, 0.28 ) }
    dend_48 { pt3dadd( 0.586243, 145.326, -89.4371, 0.55 ) }
    dend_48 { pt3dadd( 0.745843, 146.527, -89.1332, 0.55 ) }
    dend_48 { pt3dadd( 0.880453, 148.758, -88.454, 0.55 ) }
    dend_48 { pt3dadd( 0.828753, 150.594, -87.7672, 0.28 ) }
    dend_48 { pt3dadd( 0.649873, 151.735, -87.2321, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 29/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -95.0586, 100.118, -83.1609, 0.28 ) }
    dend_42 { pt3dadd( -96.512, 99.6615, -84.5067, 0.28 ) }
    dend_42 { pt3dadd( -97.3773, 99.39, -85.3079, 0.28 ) }
    dend_42 { pt3dadd( -98.636, 98.995, -86.4734, 0.28 ) }
    dend_42 { pt3dadd( -100.195, 98.5057, -87.9172, 0.55 ) }
    dend_42 { pt3dadd( -102.585, 97.756, -90.1296, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 35/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -95.0586, 100.118, -83.1609, 0.28 ) }
    dend_39 { pt3dadd( -95.6762, 101.303, -85.756, 0.28 ) }
    dend_39 { pt3dadd( -96.0607, 102.443, -88.5836, 0.55 ) }
    dend_39 { pt3dadd( -96.1814, 103.045, -90.303, 0.55 ) }
    dend_39 { pt3dadd( -96.1714, 103.685, -92.1748, 0.28 ) }
    dend_39 { pt3dadd( -95.9793, 105.354, -96.8678, 0.83 ) }
    dend_39 { pt3dadd( -95.7125, 107.538, -102.927, 0.28 ) }
    dend_39 { pt3dadd( -95.6163, 107.854, -103.944, 0.55 ) }
    dend_39 { pt3dadd( -95.0493, 108.845, -107.28, 0.28 ) }
    dend_39 { pt3dadd( -94.4315, 109.592, -110.1, 0.55 ) }
    dend_39 { pt3dadd( -94.1151, 109.877, -111.246, 0.55 ) }
    dend_39 { pt3dadd( -93.1888, 110.523, -113.848, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 47/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -187.319, 122.481, 86.5839, 0.83 ) }
    dend_30 { pt3dadd( -190.501, 127.239, 91.9414, 0.83 ) }
    dend_30 { pt3dadd( -193.916, 132.802, 96.2071, 0.83 ) }
    dend_30 { pt3dadd( -195.927, 139.129, 100.166, 0.83 ) }
    dend_30 { pt3dadd( -196.834, 145.125, 104.968, 0.83 ) }
    dend_30 { pt3dadd( -197.507, 150.611, 110.422, 0.83 ) }
    dend_30 { pt3dadd( -196.994, 155.274, 116.67, 0.83 ) }
    dend_30 { pt3dadd( -195.956, 160.412, 122.42, 0.83 ) }
    dend_30 { pt3dadd( -193.526, 166.301, 126.807, 0.83 ) }
    dend_30 { pt3dadd( -190.152, 172.019, 130.815, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -187.319, 122.481, 86.5839, 0.55 ) }
    dend_29 { pt3dadd( -191.834, 128.299, 94.5232, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -216.927, 91.9689, 58.6019, 0.83 ) }
    dend_27 { pt3dadd( -224.541, 94.6306, 63.0169, 0.83 ) }
    dend_27 { pt3dadd( -232.14, 98.6239, 66.1858, 0.83 ) }
    dend_27 { pt3dadd( -239.534, 103.328, 68.6913, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 63/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -216.927, 91.9689, 58.6019, 0.55 ) }
    dend_26 { pt3dadd( -228.058, 94.3737, 64.092, 0.83 ) }
    dend_26 { pt3dadd( -239.178, 99.1377, 67.5734, 0.83 ) }
    dend_26 { pt3dadd( -249.828, 105.024, 70.6213, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 69.268, -11.8586, 183.771, 0.55 ) }
    dend_15 { pt3dadd( 72.5657, -15.7103, 194.089, 0.55 ) }
    dend_15 { pt3dadd( 75.8073, -18.3078, 204.853, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 70/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 69.268, -11.8586, 183.771, 0.28 ) }
    dend_14 { pt3dadd( 70.241, -11.7904, 192.069, 0.55 ) }
    dend_14 { pt3dadd( 70.9557, -10.8795, 200.35, 0.55 ) }
    dend_14 { pt3dadd( 71.7165, -8.55196, 208.345, 0.55 ) }
    dend_14 { pt3dadd( 72.8923, -5.47546, 216.017, 0.55 ) }
    dend_14 { pt3dadd( 74.8832, -3.88069, 223.98, 0.55 ) }
    dend_14 { pt3dadd( 77.7123, -2.69647, 231.759, 0.55 ) }
    dend_14 { pt3dadd( 80.3034, 0.012615, 239.209, 0.55 ) }
    dend_14 { pt3dadd( 82.628, 2.71704, 246.752, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 116.348, -65.9488, 292.552, 0.55 ) }
    dend_12 { pt3dadd( 116.52, -69.1051, 301.969, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 81/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 116.348, -65.9488, 292.552, 0.28 ) }
    dend_11 { pt3dadd( 121.5, -69.9257, 301.207, 0.55 ) }
    dend_11 { pt3dadd( 126.35, -73.5643, 310.199, 0.55 ) }
    dend_11 { pt3dadd( 130.987, -75.453, 319.878, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 85/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 179.325, -28.4233, 199.821, 0.83 ) }
    dend_8 { pt3dadd( 180.812, -27.9557, 208.029, 0.83 ) }
    dend_8 { pt3dadd( 180.54, -27.338, 216.335, 0.83 ) }
    dend_8 { pt3dadd( 179.571, -26.0315, 224.526, 0.83 ) }
    dend_8 { pt3dadd( 178.138, -24.2969, 232.577, 0.83 ) }
    dend_8 { pt3dadd( 176.714, -24.0444, 240.754, 0.83 ) }
    dend_8 { pt3dadd( 176.004, -23.7956, 249.034, 0.83 ) }
    dend_8 { pt3dadd( 175.687, -22.9466, 257.327, 0.83 ) }
    dend_8 { pt3dadd( 175.606, -22.4128, 265.643, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 179.325, -28.4233, 199.821, 0.55 ) }
    dend_7 { pt3dadd( 181.084, -29.0957, 209.656, 0.83 ) }
    dend_7 { pt3dadd( 182.771, -30.2563, 219.437, 0.83 ) }
    dend_7 { pt3dadd( 184.957, -32.5402, 228.883, 0.83 ) }
    dend_7 { pt3dadd( 186.016, -35.0065, 238.435, 0.83 ) }
    dend_7 { pt3dadd( 188.225, -36.7614, 248.011, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 190.41, -39.6621, 257.26, 0.83 ) }
    dend_7 { pt3dadd( 193.973, -43.2837, 265.819, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 194.549, -73.3613, 144.815, 0.55 ) }
    dend_5 { pt3dadd( 199.297, -76.6986, 153.198, 0.55 ) }
    dend_5 { pt3dadd( 203.607, -80.9588, 161.347, 0.55 ) }
    dend_5 { pt3dadd( 206.716, -84.3539, 170.39, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 194.549, -73.3613, 144.815, 0.28 ) }
    dend_4 { pt3dadd( 198.116, -76.8822, 150.653, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 8/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 0.649873, 151.735, -87.2321, 0.28 ) }
    dend_50 { pt3dadd( 0.828043, 154.099, -87.1159, 0.28 ) }
    dend_50 { pt3dadd( 0.834583, 155.617, -86.8314, 0.55 ) }
    dend_50 { pt3dadd( 0.776583, 156.435, -86.6388, 0.28 ) }
    dend_50 { pt3dadd( 0.706043, 156.929, -86.5244, 0.55 ) }
    dend_50 { pt3dadd( 0.418643, 158.412, -86.0712, 0.28 ) }
    dend_50 { pt3dadd( 0.269413, 159.401, -85.8201, 0.55 ) }
    dend_50 { pt3dadd( 0.0654271, 161.308, -85.0981, 0.28 ) }
    dend_50 { pt3dadd( -0.0174429, 161.949, -84.8578, 0.55 ) }
    dend_50 { pt3dadd( -0.419689, 164.119, -84.1018, 0.28 ) }
    dend_50 { pt3dadd( -0.816329, 165.522, -83.761, 0.55 ) }
    dend_50 { pt3dadd( -1.79245, 168.071, -83.2537, 0.28 ) }
    dend_50 { pt3dadd( -2.54698, 169.953, -82.9501, 0.55 ) }
    dend_50 { pt3dadd( -3.01422, 171.301, -82.8389, 0.28 ) }
    dend_50 { pt3dadd( -3.12053, 171.606, -82.8209, 0.55 ) }
    dend_50 { pt3dadd( -4.34875, 173.769, -82.9068, 0.28 ) }
    dend_50 { pt3dadd( -5.23657, 174.994, -83.0976, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 25/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.649873, 151.735, -87.2321, 0.28 ) }
    dend_49 { pt3dadd( 2.69256, 151.58, -88.152, 0.28 ) }
    dend_49 { pt3dadd( 2.92775, 151.579, -88.2506, 0.55 ) }
    dend_49 { pt3dadd( 4.70268, 151.756, -88.8935, 0.28 ) }
    dend_49 { pt3dadd( 6.63454, 151.949, -89.5934, 0.55 ) }
    dend_49 { pt3dadd( 10.2326, 152.309, -90.8968, 0.28 ) }
    dend_49 { pt3dadd( 11.971, 152.483, -91.5265, 0.28 ) }
    dend_49 { pt3dadd( 12.8442, 152.527, -91.8887, 0.28 ) }
    dend_49 { pt3dadd( 14.5262, 152.714, -92.6252, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 34/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -93.1888, 110.523, -113.848, 0.28 ) }
    dend_41 { pt3dadd( -90.8184, 111.769, -116.258, 0.28 ) }
    dend_41 { pt3dadd( -89.3065, 112.564, -117.795, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -93.1888, 110.523, -113.848, 0.55 ) }
    dend_40 { pt3dadd( -94.0157, 111.733, -115.331, 0.55 ) }
    dend_40 { pt3dadd( -95.9887, 114.711, -119.159, 0.55 ) }
    dend_40 { pt3dadd( -96.8824, 116.23, -121.237, 0.55 ) }
    dend_40 { pt3dadd( -97.56, 117.333, -122.859, 0.28 ) }
    dend_40 { pt3dadd( -98.2372, 118.501, -124.742, 0.55 ) }
    dend_40 { pt3dadd( -99.1222, 120.135, -127.619, 0.55 ) }
    dend_40 { pt3dadd( -99.5633, 120.992, -129.196, 0.55 ) }
    dend_40 { pt3dadd( -100.185, 122.083, -131.258, 0.28 ) }
    dend_40 { pt3dadd( -100.74, 123.329, -133.904, 0.55 ) }
    dend_40 { pt3dadd( -101.31, 124.723, -137.282, 0.28 ) }
    dend_40 { pt3dadd( -101.647, 125.513, -139.494, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 49/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 75.8073, -18.3078, 204.853, 0.83 ) }
    dend_17 { pt3dadd( 77.8089, -20.3787, 211.922, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 75.8073, -18.3078, 204.853, 0.55 ) }
    dend_16 { pt3dadd( 77.9857, -20.5995, 212.189, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, axon_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, axon_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
    ModelViewParmSubset_5 = new SectionList()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_61 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_58 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_55 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_66 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_65 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_63 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_59 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_57 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_45 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_18 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_44 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_52 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_28 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_6 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_53 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_51 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_30 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_14 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_8 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_7 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_35 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_1 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_64 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_60 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_56 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_68 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_43 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_69 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_33 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_42 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_39 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_49 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_15 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_17 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_16 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_4 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_29 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_27 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_26 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_5 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_12 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_11 OneSecGrp_SectionRef_63.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_17, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_17 all.append()
    dend_16 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 7
    dend_61 nseg = 3
    dend_58 nseg = 5
    dend_55 nseg = 3
    dend_32 nseg = 7
    dend_66 nseg = 9
    dend_65 nseg = 7
    dend_63 nseg = 9
    dend_62 nseg = 3
    dend_59 nseg = 3
    dend_57 nseg = 3
    dend_45 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 7
    dend_18 nseg = 3
    dend_44 nseg = 7
    dend_37 nseg = 7
    dend_31 nseg = 3
    dend_24 nseg = 5
    dend_20 nseg = 5
    dend_19 nseg = 13
    dend_9 nseg = 7
    dend_2 nseg = 9
    dend_52 nseg = 5
    dend_47 nseg = 3
    dend_28 nseg = 5
    dend_25 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 9
    dend_6 nseg = 7
    dend_3 nseg = 5
    dend_53 nseg = 3
    dend_51 nseg = 9
    dend_30 nseg = 3
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_NBC_f831ad7a1f_0_0


