// Cell: cIR216_L6_DBC_64c3ef1172_0_0
/*
{
  "id" : "cIR216_L6_DBC_64c3ef1172_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.01289, -8.8572, 1.11", "2.56298, -1.44753, -8.91232, 1.11", "2.60522, -2.25963, -9.03998, 1.11", "2.63172, -2.71822, -9.12846, 1.03", "2.66588, -3.32262, -9.251, 1.03", "2.69547, -4.0621, -9.48546, 1.03", "2.69603, -4.66099, -9.7292, 1.18", "2.67606, -5.23966, -10.0145, 1.18", "2.6346, -5.82535, -10.3652, 1.4", "2.58341, -6.1634, -10.6527, 1.55", "2.34592, -7.26057, -11.8136, 1.25", "2.20235, -7.81909, -12.5715, 1.25", "2.14114, -8.05804, -12.9705, 1.47", "2.04197, -8.59479, -13.963, 1.69", "1.93945, -9.66947, -16.0175, 1.69", "1.93955, -9.68379, -16.0446, 1.69", "2.04464, -10.6121, -17.6937, 1.33", "2.16077, -11.239, -18.7095, 1.11", "2.27963, -11.8268, -19.5346, 1.25", "2.39236, -12.4005, -20.1382, 1.4", "2.44063, -12.7926, -20.411, 1.4", "2.441, -13.2905, -20.6988, 1.33", "2.33488, -13.9627, -20.9682, 1.18", "2.17408, -14.471, -21.1701, 1.18", "1.90756, -15.0761, -21.4583, 1.33", "1.54887, -15.8461, -21.8809, 1.03", "1.30245, -16.4243, -22.2143, 1.25", "1.17487, -16.7868, -22.4261, 1.62", "0.94528, -17.6232, -22.9072, 1.62", "0.832307, -18.2234, -23.2265, 1.03", "0.739104, -19.2199, -23.6816, 1.03", "0.728515, -19.9762, -23.9631, 1.18", "0.760904, -20.6845, -24.1859, 1.18", "0.782319, -20.9313, -24.2548, 1.55", "0.825504, -21.3483, -24.3456, 1.55", "0.87717, -21.9188, -24.4727, 1.69", "0.914284, -22.5089, -24.6485, 1.84", "0.934378, -23.0464, -24.8639, 1.47", "0.952842, -23.7815, -25.1973, 1.18", "0.953038, -24.4138, -25.5136, 1.18", "0.937629, -25.1352, -25.9074, 1.18", "0.935947, -25.9373, -26.3094, 1.33", "0.973038, -26.6037, -26.5699, 1.03", "1.02732, -27.1142, -26.7568, 1.03", "1.10645, -27.6488, -26.9267, 1.03", "1.21187, -28.3211, -27.1257, 1.33", "1.39581, -29.6981, -27.5301, 1.33", "1.51581, -30.9077, -27.9253, 1.33", "1.57545, -31.7692, -28.2489, 1.18", "1.60608, -32.2603, -28.4599, 1.4", "1.67244, -33.1614, -28.9291, 1.4", "1.74425, -34.1039, -29.5133, 1.33", "1.81058, -34.9357, -30.1423, 1.18", "1.81404, -34.9668, -30.1678, 1.18", "1.89914, -35.5193, -30.6173, 1.47", "2.06419, -36.3111, -31.2798, 1.84", "2.20475, -36.7931, -31.6719, 1.62", "2.41836, -37.3726, -32.1251, 1.55", "2.6807, -38.0489, -32.6507, 1.33", "2.88449, -38.6345, -33.1203, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -9.61039, 0.0228061, 3.68", "-0.49335, -9.67471, 0.0228061, 3.68", "-0.343649, -10.198, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 10.1686, 0.142806, 2.43", "1.44144, 10.8897, 0.142806, 2.43", "2.12652, 12.2329, 0.142806, 2.14", "2.60416, 13.1996, 0.147565, 1.92", "2.7827, 13.5718, 0.150494, 1.92", "3.04462, 14.1032, 0.155473, 1.92", "3.22112, 14.4503, 0.158884, 1.92", "3.50022, 14.9704, 0.164741, 1.92", "3.72578, 15.3777, 0.169457, 1.99", "4.06484, 15.9889, 0.175699, 1.99", "4.56361, 16.9373, 0.183732, 1.99", "4.97322, 17.7262, 0.189207, 1.99", "5.40594, 18.5987, 0.193635, 1.99", "5.88039, 19.6349, 0.176167, 2.21", "6.28083, 20.6318, 0.140649, 2.21", "6.53331, 21.3797, 0.0910049, 1.99", "6.62003, 21.7056, 0.0550481, 1.99", "6.77539, 22.4341, -0.0472708, 1.99", "6.9251, 23.3688, -0.19461, 2.06", "7.06264, 24.5381, -0.411479, 1.92", "7.1658, 25.6683, -0.65762, 1.92", "7.26893, 26.9306, -0.983168, 1.99", "7.31506, 27.593, -1.18143, 2.14", "7.38873, 28.7017, -1.52984, 2.14", "7.47429, 30.0681, -1.97455, 1.99", "7.51407, 30.9004, -2.27405, 2.06", "7.53061, 31.8956, -2.65303, 2.43", "7.53221, 32.6681, -2.98074, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.551708", "3.17833, 25.5615, -0.593792, 0.551708", "5.07001, 40.4418, -0.593792, 0.551708" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "2.88449, -38.6345, -33.1203, 0.52", "1.88033, -39.8244, -34.6274, 0.52", "1.22167, -40.8224, -35.7924, 0.52", "0.885338, -41.6213, -36.6705, 0.52", "0.609883, -42.8432, -37.9704, 0.52", "0.56038, -43.4583, -38.6224, 1.11", "0.554868, -44.2108, -39.3762, 1.4", "0.680938, -44.8021, -39.9007, 1.69", "1.07351, -45.9277, -40.8144, 1.62", "1.48006, -46.854, -41.5332, 1.4", "2.07446, -48.0934, -42.4385, 0.88", "2.44811, -48.8752, -43.0052, 0.66", "2.96389, -50.0038, -43.7613, 0.66", "3.26263, -50.684, -44.2145, 0.88", "3.59589, -51.4889, -44.7078, 1.11", "3.89684, -52.1646, -45.0806, 1.18", "4.22408, -52.8158, -45.4077, 1.18", "4.50427, -53.3123, -45.6895, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "2.88449, -38.6345, -33.1203, 0.66", "2.74558, -39.5741, -32.6558, 0.66", "2.55759, -40.258, -32.2353, 0.52", "2.53892, -40.3079, -32.2045, 0.52", "2.16085, -41.1732, -31.6569, 0.74", "1.77983, -42.0074, -31.1641, 0.88", "1.49202, -42.6349, -30.7809, 0.74", "1.08842, -43.4735, -30.2054, 0.37", "0.815908, -44.0898, -29.7529, 1.18", "0.570201, -44.7979, -29.2258, 1.4", "0.361586, -45.5985, -28.6237, 0.96", "0.288429, -46.4325, -27.9007, 0.74", "0.365002, -47.2534, -27.0789, 0.29", "0.5494, -48.006, -26.279, 0.74", "0.729541, -48.5023, -25.7309, 0.96", "0.744361, -48.5371, -25.6944, 0.96", "1.3253, -49.9178, -24.4, 0.59", "1.53426, -50.5544, -23.9489, 1.11", "1.65215, -51.0844, -23.6574, 1.25", "1.69064, -51.6343, -23.4393, 1.18", "1.64066, -52.6225, -23.1069, 0.81", "1.52175, -53.4885, -22.8685, 0.59", "1.30306, -54.425, -22.687, 0.44", "1.28409, -54.492, -22.6734, 0.44", "1.03115, -55.2012, -22.488, 0.29", "0.567235, -56.2713, -22.1586, 0.29", "0.258458, -56.9287, -21.9377, 0.81", "0.0310725, -57.4495, -21.7672, 1.33", "-0.187735, -58.0325, -21.6314, 1.33", "-0.482425, -59.0156, -21.554, 0.96", "-0.623571, -59.7031, -21.6073, 0.81", "-0.714438, -60.4408, -21.7667, 0.81", "-0.774216, -61.3379, -22.0371, 0.74", "-0.797271, -62.5316, -22.4644, 0.44", "-0.785369, -63.5985, -22.924, 0.66", "-0.767501, -64.2857, -23.2662, 0.74", "-0.765241, -64.91, -23.5795, 1.03", "-0.800257, -65.6433, -23.9286, 1.25", "-0.882435, -66.419, -24.2441, 1.11", "-1.02726, -67.3749, -24.5546, 0.59", "-1.1619, -68.156, -24.7701, 0.59", "-1.31729, -68.9788, -25.0053, 0.66", "-1.43119, -69.576, -25.1722, 0.66", "-1.58352, -70.4875, -25.4023, 0.52", "-1.69917, -71.33, -25.6141, 0.52", "-1.76084, -72.0667, -25.7851, 0.59", "-1.79243, -73.0098, -26.0379, 1.25", "-1.78922, -73.3705, -26.1485, 1.4", "-1.75966, -74.0199, -26.363, 1.4", "-1.69847, -74.9664, -26.636, 0.88", "-1.65697, -75.5718, -26.775, 0.52", "-1.62017, -76.6273, -26.9574, 0.52", "-1.62947, -77.294, -26.9552, 0.52", "-1.63384, -77.3634, -26.9427, 0.52", "-1.71355, -78.4008, -26.5491, 0.52", "-1.71639, -78.4552, -26.5217, 0.52", "-1.72877, -78.8983, -26.272, 0.96", "-1.70646, -80.0793, -25.5664, 1.33", "-1.65447, -80.9702, -25.0865, 0.66", "-1.58969, -81.8362, -24.6916, 0.59", "-1.51911, -82.6762, -24.3925, 0.74", "-1.51462, -82.7438, -24.3724, 0.74", "-1.48499, -83.4591, -24.2126, 0.74", "-1.49736, -84.0354, -24.1383, 1.03", "-1.55807, -84.5111, -24.0796, 1.25", "-1.69528, -85.1255, -24.0166, 1.18", "-1.86816, -85.6959, -23.9573, 0.59", "-2.0807, -86.2797, -23.9003, 0.29", "-2.28937, -86.7696, -23.8576, 0.29", "-2.46051, -87.1449, -23.8262, 0.81", "-2.60937, -87.4698, -23.8016, 1.11", "-2.82026, -87.9767, -23.7719, 1.11", "-3.01975, -88.6148, -23.7464, 0.59", "-3.02863, -88.6832, -23.7457, 0.59", "-2.98362, -89.2757, -23.7571, 0.44", "-2.96614, -89.3334, -23.7601, 0.44", "-2.67362, -89.8992, -23.8046, 0.44", "-2.35592, -90.3625, -23.8634, 0.81", "-1.98885, -90.8331, -23.9362, 1.11", "-1.75828, -91.1286, -23.9976, 1.11", "-1.44456, -91.545, -24.1083, 0.88", "-1.18283, -91.934, -24.2219, 0.66", "-0.874965, -92.4539, -24.3831, 0.66", "-0.599715, -92.9982, -24.5491, 0.44", "-0.346555, -93.5945, -24.7187, 0.29", "-0.116304, -94.2813, -24.8903, 0.88", "0.016364, -94.8135, -24.9965, 0.88", "0.0885032, -95.2486, -25.0594, 0.88", "0.150866, -95.871, -25.1133, 0.74", "0.185086, -96.5011, -25.1416, 0.37", "0.20522, -97.0921, -25.1406, 0.29", "0.230792, -97.9562, -25.1221, 0.29", "0.25475, -98.6618, -25.1075, 0.81", "0.289555, -99.3121, -25.0966, 1.03", "0.296761, -99.3821, -25.0961, 1.03", "0.393036, -99.9329, -25.0987, 1.18", "0.527976, -100.546, -25.1074, 1.33", "0.66175, -101.078, -25.1193, 1.33", "0.880332, -101.888, -25.1481, 0.59", "1.09486, -102.688, -25.1823, 0.44", "1.27825, -103.402, -25.2153, 0.44", "1.44198, -104.057, -25.2454, 0.81", "1.61816, -104.793, -25.2781, 1.11", "1.75957, -105.474, -25.3047, 1.11", "1.8163, -105.906, -25.3165, 1.25", "1.83327, -106.602, -25.3233, 1.11", "1.77328, -107.476, -25.3376, 0.66", "1.69087, -108.104, -25.3525, 0.37", "1.5635, -108.711, -25.3679, 0.29", "1.37139, -109.584, -25.3932, 0.37", "1.27668, -110.199, -25.4538, 0.52", "1.25927, -110.842, -25.5393, 0.88", "1.30703, -111.271, -25.6073, 1.03", "1.35232, -111.454, -25.6398, 1.03", "1.64805, -112.393, -25.7376, 0.74", "2.00938, -113.455, -25.7882, 0.59", "2.28171, -114.294, -25.7978, 0.59", "2.42219, -114.743, -25.7644, 1.4", "2.5788, -115.252, -25.7031, 1.77", "2.99369, -116.659, -25.4361, 0.81", "3.18853, -117.381, -25.2448, 0.81", "3.44447, -118.375, -24.8773, 0.81", "3.71392, -119.342, -24.4825, 1.11", "3.86731, -119.817, -24.2718, 1.11", "4.14619, -120.562, -23.9281, 0.88", "4.18122, -120.65, -23.8857, 0.88", "4.43599, -121.392, -23.5044, 0.59", "4.61772, -122.173, -23.1163, 0.59", "4.72631, -122.793, -22.8417, 0.52", "4.79852, -123.327, -22.6142, 0.52", "4.94258, -124.59, -22.142, 0.74", "4.99824, -125.173, -21.9411, 1.33", "5.04136, -125.937, -21.7126, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.343649, -10.198, 0.0228061, 2.73", "-0.18353, -11.3497, -0.0206627, 2.73", "-0.0346266, -12.5274, -0.0619362, 2.14", "0.0679071, -13.4551, -0.091286, 2.14", "0.17196, -14.5171, -0.122031, 2.28", "0.259076, -15.5318, -0.162279, 2.14", "0.367303, -16.8476, -0.222913, 1.92", "0.427128, -17.8143, -0.282386, 2.06", "0.482284, -19.1584, -0.379644, 1.84", "0.490071, -20.4117, -0.495286, 1.84", "0.470002, -21.3568, -0.597453, 1.84", "0.406135, -22.547, -0.751202, 1.92", "0.287484, -23.6896, -0.937813, 1.92", "0.127078, -24.6311, -1.11973, 1.92", "-0.115567, -25.5762, -1.31247, 1.84", "-0.444895, -26.5869, -1.52168, 1.84", "-0.686783, -27.195, -1.64849, 1.77", "-1.2602, -28.4612, -1.92256, 1.69", "-1.91397, -29.7842, -2.20651, 1.69", "-2.4883, -30.8621, -2.4456, 1.84", "-2.51061, -30.9, -2.45327, 1.84", "-2.84638, -31.3947, -2.55444, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.343649, -10.198, 0.0228061, 0.96", "-0.553057, -11.3264, -0.610068, 0.96", "-0.797341, -12.4599, -1.11861, 1.25", "-1.1424, -13.7978, -1.59798, 0.96", "-1.39743, -14.6692, -1.80102, 1.25", "-1.60402, -15.2852, -1.89813, 1.47", "-1.88947, -16.0811, -1.99225, 1.11", "-2.29285, -17.1032, -2.01199, 0.96", "-2.74297, -18.079, -1.93841, 1.11", "-3.40876, -19.3129, -1.7805, 1.11", "-3.89838, -20.1121, -1.68161, 1.11", "-3.94024, -20.1735, -1.67446, 1.11", "-4.52327, -20.9149, -1.59927, 0.96", "-4.5513, -20.9458, -1.5981, 0.96", "-5.13554, -21.4788, -1.62898, 1.03", "-5.57562, -21.8448, -1.69939, 1.25", "-5.61828, -21.8827, -1.70706, 1.25", "-6.2165, -22.4413, -1.82257, 0.88", "-6.78434, -23.0082, -1.94439, 0.88", "-7.50723, -23.7784, -2.13425, 1.11", "-8.07465, -24.4389, -2.30555, 1.11", "-8.61301, -25.111, -2.48659, 1.25", "-8.66318, -25.1833, -2.50494, 1.25", "-9.12917, -26.0014, -2.71529, 0.96", "-9.54114, -26.8573, -2.92212, 0.96", "-9.84327, -27.5741, -3.08639, 1.03", "-9.86433, -27.6253, -3.09732, 1.03", "-10.2333, -28.5174, -3.27136, 1.03", "-10.5187, -29.2143, -3.38664, 1.03", "-10.7653, -29.836, -3.45298, 1.25", "-11.0176, -30.4924, -3.48501, 1.62", "-11.4096, -31.4775, -3.49803, 1.25", "-11.7096, -32.2013, -3.48461, 1.18", "-11.9498, -32.7239, -3.43521, 1.18", "-12.2633, -33.3598, -3.32253, 1.33", "-12.6611, -34.0865, -3.1513, 1.33", "-13.0336, -34.7201, -2.99096, 1.03", "-13.0564, -34.756, -2.98134, 1.03", "-13.4889, -35.421, -2.85627, 0.81", "-13.8207, -35.9333, -2.83326, 0.66", "-14.1615, -36.456, -2.91551, 0.81", "-14.5867, -37.1092, -3.16019, 1.03", "-14.8099, -37.4676, -3.34885, 1.33", "-15.0692, -37.9514, -3.6539, 1.62", "-15.3242, -38.5237, -4.04987, 1.55", "-15.5652, -39.167, -4.4775, 1.18", "-15.8184, -39.9362, -4.93471, 0.96", "-15.8315, -39.9792, -4.95689, 0.96", "-16.1077, -40.9782, -5.4006, 0.88", "-16.3322, -41.8401, -5.70295, 0.88", "-16.5014, -42.595, -5.90004, 1.18", "-16.6465, -43.3568, -6.05812, 1.4", "-16.8086, -44.2054, -6.2145, 1.4", "-16.9443, -44.7928, -6.33265, 1.18", "-17.1445, -45.4658, -6.47282, 0.96", "-17.3768, -46.0702, -6.62676, 1.11", "-17.7641, -46.8248, -6.89825, 0.88", "-18.1037, -47.4033, -7.13682, 0.74", "-18.5141, -47.9759, -7.40542, 0.96", "-18.8372, -48.3476, -7.61539, 1.25", "-19.3328, -48.8036, -7.932, 1.33", "-19.9924, -49.2705, -8.32141, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.53221, 32.6681, -2.98074, 1.4", "7.03686, 33.9522, -3.29965, 1.4", "6.75787, 34.8464, -3.46111, 1.4", "6.4187, 36.1444, -3.50957, 1.25", "6.37464, 36.3479, -3.48235, 1.25", "6.25759, 36.9638, -3.34359, 1.03", "6.12633, 37.7047, -3.1465, 1.03", "6.04641, 38.4183, -2.88196, 1.18", "5.94586, 39.5331, -2.27979, 1.33", "5.87477, 40.5447, -1.57772, 1.33", "5.83667, 41.2542, -1.05627, 1.47", "5.8244, 41.7775, -0.669796, 1.47", "5.83512, 42.5039, -0.171478, 1.47", "5.91585, 44.0812, 0.775827, 1.4", "6.00346, 45.0762, 1.27211, 1.4", "6.08133, 45.7352, 1.54057, 1.4", "6.21836, 46.6486, 1.8549, 1.62", "6.39746, 47.7111, 2.1402, 1.18", "6.56014, 48.5799, 2.28143, 1.18", "6.57411, 48.6499, 2.28408, 1.18", "6.77857, 49.8111, 2.29516, 1.18", "6.91705, 50.743, 2.30977, 1.47", "6.95333, 51.0354, 2.31569, 1.47", "7.06785, 52.0268, 2.33829, 1.4", "7.1895, 53.0766, 2.36435, 1.33", "7.33171, 54.3353, 2.39814, 1.33", "7.4543, 55.5192, 2.43507, 1.62", "7.5241, 56.3808, 2.46577, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.53221, 32.6681, -2.98074, 1.18", "8.649, 32.8878, -2.7141, 1.18", "9.68971, 33.0426, -2.29352, 0.96", "10.2588, 33.1165, -2.04881, 1.25", "10.3241, 33.1277, -2.01553, 1.25", "11.271, 33.3222, -1.52723, 1.25", "12.1515, 33.5502, -1.07947, 1.25", "13.7421, 33.9944, -0.273953, 1.18", "14.4791, 34.2378, 0.0906701, 0.81", "15.4979, 34.6415, 0.604474, 0.96", "16.2801, 35.0338, 0.967109, 0.96", "16.8974, 35.4649, 1.20155, 0.96", "16.9394, 35.5006, 1.20969, 0.96", "17.6208, 36.1274, 1.17846, 0.96", "17.6666, 36.1715, 1.1722, 0.96", "18.2706, 36.7502, 1.02994, 1.18", "19.0539, 37.4972, 0.839031, 1.4", "19.705, 38.0889, 0.684644, 1.33", "19.7801, 38.1542, 0.671851, 1.33", "20.5215, 38.749, 0.60345, 1.18", "20.6507, 38.8373, 0.612367, 1.18", "21.2273, 39.176, 0.734383, 1.18", "21.383, 39.2537, 0.798559, 1.18", "22.1744, 39.6186, 1.23282, 0.96", "22.9375, 39.9675, 1.70854, 0.96", "23.9908, 40.4858, 2.4692, 1.03", "24.0686, 40.531, 2.52696, 1.03", "25.2238, 41.3481, 3.38575, 1.03", "25.2968, 41.4028, 3.44136, 1.03", "25.7098, 41.7561, 3.76643, 1.03", "26.2559, 42.314, 4.20705, 1.18", "26.9326, 43.1704, 4.64791, 1.4", "27.4763, 43.9149, 4.92675, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "4.50427, -53.3123, -45.6895, 0.52", "3.64136, -53.8043, -46.5278, 0.52", "2.53639, -54.4765, -47.5064, 0.52", "2.11338, -54.7901, -47.9146, 0.96", "1.24073, -55.6223, -48.9204, 1.33", "0.789507, -56.1687, -49.5231, 0.81", "0.273231, -57.0001, -50.3428, 0.52", "0.258516, -57.0518, -50.3814, 0.52", "0.337211, -58.3055, -51.2295, 0.88", "0.630282, -59.2609, -51.862, 1.25", "0.904054, -59.7953, -52.2192, 1.47", "1.37764, -60.5199, -52.7397, 1.47", "2.00472, -61.3369, -53.3383, 0.88", "2.96657, -62.5226, -54.2317, 0.88", "3.47245, -63.1174, -54.7294, 0.37", "4.00205, -63.8053, -55.3558, 0.66", "4.03769, -63.863, -55.4154, 0.66", "4.19488, -64.2433, -55.8309, 0.96", "4.37887, -65.2558, -56.8849, 1.11", "4.29416, -66.6856, -58.1868, 0.44", "4.14835, -67.4501, -58.8165, 0.44", "3.87152, -68.5874, -59.7235, 0.52", "3.71345, -69.2141, -60.2249, 0.74", "3.49779, -69.9068, -60.7492, 0.74", "3.18169, -70.7724, -61.3991, 1.03", "2.70948, -72.222, -62.5144, 0.88", "2.35738, -73.6321, -63.6477, 1.18", "2.1567, -75.0012, -64.8454, 0.96", "2.1423, -76.1251, -66.0432, 0.59", "2.23753, -77.3754, -67.5802, 0.29", "2.36909, -78.2987, -68.839, 0.88", "2.40989, -78.5699, -69.2382, 1.47", "2.57296, -79.6963, -70.9257, 1.33", "2.75862, -81.3712, -73.4175, 0.52", "2.77902, -81.8162, -74.0473, 0.29", "2.73057, -82.2007, -74.4944, 0.96", "2.42967, -83.2653, -75.5603, 1.77", "2.29594, -83.7144, -75.9856, 1.77", "1.96824, -84.7068, -76.8108, 1.11", "1.77001, -85.5274, -77.5703, 0.37", "1.74952, -86.0947, -78.3073, 0.29", "1.84231, -86.935, -79.6128, 0.74", "2.16798, -88.1568, -81.6916, 1.33", "2.18184, -88.1938, -81.7601, 1.33", "2.75197, -89.3286, -84.1186, 1.55", "3.55417, -90.7633, -87.2914, 0.96", "3.5724, -90.798, -87.3682, 0.96", "3.75318, -91.2369, -88.2579, 1.18", "3.7628, -91.2713, -88.3164, 1.18", "3.96402, -92.6564, -90.2619, 0.44", "3.87401, -93.3846, -90.9908, 0.37", "3.74414, -93.996, -91.6825, 0.52", "3.6615, -94.4746, -92.3392, 0.81", "3.58033, -95.0467, -93.1602, 1.33", "3.5518, -95.4391, -93.7275, 0.96", "3.58586, -96.6949, -95.5295, 1.25", "3.96685, -99.3394, -99.3276, 0.52", "4.27371, -100.589, -101.161, 0.44", "4.49757, -101.218, -102.088, 0.59", "4.98875, -102.277, -103.637, 0.59", "5.59212, -103.305, -105.063, 0.74", "5.98528, -103.85, -105.721, 1.18", "6.02437, -103.902, -105.766, 1.18", "6.46512, -104.417, -106.162, 1.47", "6.51237, -104.467, -106.2, 1.47", "7.5841, -105.665, -106.9, 1.18", "7.62954, -105.726, -106.929, 1.18", "8.03095, -106.423, -107.221, 1.18", "8.50485, -107.601, -107.736, 0.52", "8.66965, -108.366, -108.089, 0.29", "8.76144, -109.234, -108.529, 0.29", "8.78212, -109.825, -108.849, 0.88", "8.7768, -110.629, -109.339, 1.11", "8.69719, -112.157, -110.344, 0.81", "8.65041, -113.129, -111.096, 0.37", "8.66955, -114.157, -112.239, 0.29", "8.69845, -114.628, -112.913, 0.96", "8.70153, -114.672, -112.995, 0.96", "8.70943, -115.048, -113.84, 1.18", "8.61872, -115.827, -115.812, 1.11", "8.22324, -117.145, -119.391, 0.44", "8.01802, -117.539, -120.509, 0.74", "7.55639, -118.208, -122.32, 0.59", "7.2395, -118.599, -123.286, 0.81", "6.696, -119.15, -124.477, 0.44", "6.28497, -119.554, -125.047, 0.59", "6.23817, -119.608, -125.084, 0.59", "5.69815, -120.431, -125.486, 0.52", "5.34859, -121.104, -125.741, 1.03", "5.01743, -121.913, -126.041, 1.4", "4.57608, -123.162, -126.467, 1.33", "4.30554, -124.035, -126.829, 1.11", "4.13725, -124.908, -127.332, 0.59", "4.13319, -124.973, -127.378, 0.59", "4.19015, -125.568, -127.9, 0.44", "4.43948, -126.525, -128.932, 0.44", "4.85084, -127.587, -130.262, 0.74", "5.52793, -129.094, -132.298, 0.74", "5.69596, -129.455, -132.786, 1.25", "6.1855, -130.569, -134.308, 1.55", "6.67925, -131.762, -135.972, 1.77", "7.18173, -133.206, -138.045, 0.74", "7.33114, -133.966, -139.085, 0.52", "7.33586, -134.477, -139.741, 0.52", "7.20345, -135.548, -141.098, 0.96", "7.06792, -135.995, -141.614, 1.18", "6.52943, -137.065, -142.804, 0.52", "6.16833, -137.575, -143.381, 0.52", "5.9071, -137.875, -143.748, 0.66", "5.86468, -137.916, -143.801, 0.66", "5.49276, -138.211, -144.196, 0.44", "4.50556, -138.873, -145.118, 0.29", "4.44441, -138.903, -145.16, 0.29", "3.96703, -139.087, -145.456, 0.52", "3.47421, -139.258, -145.71, 0.81", "2.86758, -139.485, -145.939, 0.96", "2.26021, -139.724, -146.091, 1.11", "1.40872, -140.102, -146.194, 0.29", "1.29981, -140.156, -146.203, 0.29", "0.348857, -140.637, -146.24, 0.29", "-0.523792, -141.064, -146.252, 0.88", "-0.839821, -141.215, -146.247, 1.03", "-1.55668, -141.518, -146.237, 1.18", "-2.64026, -141.886, -146.262, 0.29", "-3.91874, -142.221, -146.353, 0.29", "-4.44082, -142.32, -146.433, 0.59", "-4.51773, -142.333, -146.453, 0.59", "-5.39884, -142.485, -146.763, 0.59", "-6.2527, -142.683, -147.154, 1.11", "-6.96912, -142.918, -147.553, 1.4", "-7.8334, -143.291, -148.099, 0.96", "-8.70372, -143.77, -148.677, 0.59", "-9.71176, -144.442, -149.356, 0.37", "-10.4777, -145.062, -149.867, 0.37", "-10.9504, -145.477, -150.138, 0.74", "-11.0059, -145.529, -150.165, 0.74", "-11.5691, -146.104, -150.359, 0.74", "-12.0149, -146.574, -150.474, 1.03", "-12.5367, -147.13, -150.566, 1.33", "-13.3251, -147.877, -150.669, 1.47", "-14.2079, -148.648, -150.779, 0.37", "-15.2888, -149.565, -150.917, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "4.50427, -53.3123, -45.6895, 0.52", "5.0409, -53.933, -44.6593, 0.52", "5.66383, -54.7252, -43.5866, 0.44", "5.97978, -55.1769, -43.1056, 0.88", "6.00442, -55.2171, -43.0714, 0.88", "6.20889, -55.5834, -42.8075, 1.03", "6.4223, -56.0064, -42.549, 0.81", "6.65593, -56.5855, -42.3599, 0.29", "6.87811, -57.2372, -42.2379, 0.22", "7.02973, -57.7363, -42.1604, 0.52", "7.10054, -58.0052, -42.119, 0.74", "7.24803, -58.7059, -42.0145, 0.29", "7.34175, -59.3207, -41.921, 0.29", "7.40294, -59.9314, -41.8333, 0.74", "7.42207, -60.2796, -41.7794, 1.03", "7.4378, -60.712, -41.7106, 0.96", "7.44168, -61.1683, -41.6392, 0.59", "7.44799, -61.8146, -41.5172, 0.22", "7.4688, -62.2119, -41.4272, 0.37", "7.48338, -62.3122, -41.4022, 0.37", "7.59903, -62.7206, -41.3063, 0.37", "7.62088, -62.7702, -41.2965, 0.37", "8.03665, -63.4939, -41.2632, 0.29", "8.35907, -63.981, -41.2986, 0.88", "8.56572, -64.2879, -41.3412, 1.18", "8.9626, -64.8993, -41.4531, 0.29", "9.33059, -65.48, -41.5852, 0.29", "9.86922, -66.3763, -41.7645, 0.52", "10.095, -66.7821, -41.8363, 0.81", "10.4421, -67.4425, -41.9118, 0.22", "10.5932, -67.7551, -41.9267, 0.59", "10.6227, -67.8232, -41.9265, 0.59", "11.0381, -68.8995, -41.885, 0.44", "11.3091, -69.6595, -41.8293, 0.66", "11.4867, -70.1739, -41.8029, 0.59", "11.6349, -70.6058, -41.8048, 0.44", "11.875, -71.3138, -41.8485, 0.96", "12.0816, -71.8517, -41.9489, 1.33", "12.3424, -72.3911, -42.1492, 0.59", "12.3746, -72.4426, -42.1738, 0.59", "12.7209, -72.8761, -42.4399, 0.59", "12.7498, -72.9092, -42.4653, 0.59", "13.3363, -73.6122, -43.1063, 0.29", "13.585, -73.9547, -43.4461, 0.44", "13.7805, -74.2781, -43.7376, 0.44", "14.0359, -74.7681, -44.1379, 0.44", "14.3062, -75.4073, -44.591, 1.33", "14.6042, -76.1798, -45.0801, 1.11", "14.8475, -76.903, -45.4775, 0.52", "15.0887, -77.5631, -45.8336, 0.29", "15.1062, -77.6104, -45.8578, 0.29", "15.2833, -78.0181, -46.0243, 0.29", "15.6362, -78.5463, -46.173, 0.29", "15.8866, -78.7944, -46.1924, 0.96", "16.2319, -78.9925, -46.1735, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "5.04136, -125.937, -21.7126, 0.29", "4.15595, -126.503, -20.8228, 0.29", "3.64268, -126.936, -20.2072, 0.29", "3.48837, -127.075, -20.0193, 0.74", "3.44903, -127.111, -19.9722, 0.74", "3.19052, -127.341, -19.6836, 0.74", "2.58248, -127.802, -19.1568, 0.29", "2.07858, -128.162, -18.8615, 0.29", "1.81825, -128.314, -18.7562, 0.74", "1.58058, -128.425, -18.6951, 1.11", "1.17538, -128.607, -18.6132, 1.11", "0.102271, -129.078, -18.4608, 0.29", "-0.246696, -129.246, -18.4163, 0.37", "-0.720137, -129.532, -18.2901, 0.37", "-1.22206, -129.913, -18.0695, 0.66", "-1.70055, -130.366, -17.7785, 0.52", "-1.96856, -130.662, -17.5736, 0.96", "-2.4333, -131.229, -17.1597, 1.33", "-3.12509, -132.033, -16.5805, 0.59", "-3.43398, -132.387, -16.3023, 0.37", "-3.68172, -132.663, -16.0744, 0.22", "-4.12541, -133.136, -15.6872, 0.22", "-4.50609, -133.543, -15.3679, 0.66", "-4.99116, -134.096, -14.9968, 0.66", "-5.71182, -135.023, -14.4822, 0.52", "-5.80957, -135.167, -14.4085, 0.29", "-6.06554, -135.594, -14.2284, 0.74", "-6.16743, -135.794, -14.1362, 0.74", "-6.60796, -136.743, -13.6946, 0.37", "-6.96232, -137.573, -13.335, 0.44", "-7.14532, -137.984, -13.1853, 0.59", "-7.47028, -138.692, -12.9307, 0.52", "-8.19477, -140.141, -12.4046, 0.37", "-8.54431, -140.759, -12.175, 0.37", "-8.98042, -141.428, -11.9258, 0.29", "-9.55358, -142.211, -11.6286, 0.59", "-9.67159, -142.367, -11.5748, 0.88", "-10.0661, -142.843, -11.4337, 0.66", "-10.5633, -143.379, -11.3495, 0.15", "-11.149, -143.907, -11.2387, 0.15", "-11.1983, -143.942, -11.2291, 0.15", "-11.8033, -144.306, -11.1562, 0.59", "-12.2151, -144.559, -11.1439, 0.88", "-12.2603, -144.589, -11.1463, 0.88", "-12.5936, -144.841, -11.1887, 0.88", "-13.094, -145.282, -11.2887, 0.88", "-13.8265, -146.075, -11.4885, 0.29", "-14.1777, -146.525, -11.604, 0.29", "-14.4542, -146.961, -11.7094, 0.66", "-14.6635, -147.341, -11.7859, 0.81", "-14.9207, -147.922, -11.8805, 0.66", "-15.2056, -148.702, -11.9705, 0.29", "-15.3363, -149.11, -11.9971, 0.81", "-15.4346, -149.408, -12.0102, 0.81", "-15.707, -150.106, -12.0147, 0.22", "-15.9173, -150.571, -11.9645, 0.22", "-16.0513, -150.85, -11.902, 0.81", "-16.1765, -151.079, -11.8287, 0.96", "-16.6012, -151.764, -11.4709, 0.22", "-16.8735, -152.119, -11.0996, 0.22", "-17.247, -152.507, -10.3948, 0.74", "-17.3746, -152.623, -10.1233, 1.18", "-17.5949, -152.808, -9.62301, 0.74", "-18.1153, -153.201, -8.41987, 0.59", "-18.8304, -153.702, -6.77623, 0.44", "-19.4087, -154.144, -5.48595, 0.37", "-19.4387, -154.17, -5.42603, 0.37", "-19.6037, -154.326, -5.12077, 0.66", "-19.7395, -154.525, -4.82865, 0.74", "-20.0422, -155.154, -4.11447, 0.29", "-20.2322, -155.659, -3.62055, 0.29", "-20.4222, -156.162, -3.09651, 0.29", "-20.4664, -156.291, -2.95358, 0.74", "-20.8185, -157.584, -1.37991, 0.66", "-20.9182, -158.162, -0.589697, 0.22", "-20.9234, -158.318, -0.319271, 0.22", "-20.9107, -158.613, 0.394682, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "5.04136, -125.937, -21.7126, 0.37", "5.24747, -127.342, -22.9722, 0.37", "5.37598, -128.116, -23.5985, 0.37", "5.38398, -128.163, -23.6311, 0.37", "5.46261, -128.667, -23.9417, 0.81", "5.58056, -129.422, -24.3667, 0.88", "5.63026, -129.738, -24.5308, 0.88", "5.74144, -130.383, -24.8081, 0.52", "5.84839, -131.122, -25.1054, 0.52", "5.90194, -131.811, -25.3953, 0.52", "5.89474, -132.199, -25.5564, 0.96", "5.86188, -132.542, -25.6894, 0.96", "5.70699, -133.479, -26.0583, 0.37", "5.56996, -134.043, -26.2753, 0.29", "5.37915, -134.605, -26.494, 0.59", "5.15239, -135.133, -26.6808, 0.96", "4.96296, -135.519, -26.7988, 1.18", "4.93621, -135.57, -26.8106, 1.18", "4.76679, -135.88, -26.8764, 1.18", "4.49516, -136.441, -27.0182, 1.03", "4.2341, -137.097, -27.1884, 0.59", "4.09634, -137.533, -27.2859, 0.52", "3.9966, -137.894, -27.3447, 0.66", "3.74888, -138.815, -27.425, 0.29", "3.58073, -139.454, -27.4184, 0.44", "3.51, -139.746, -27.38, 0.52", "3.28223, -140.678, -27.1725, 0.66", "3.13801, -141.208, -27.0201, 0.37", "2.95758, -141.799, -26.8206, 0.88", "2.83737, -142.138, -26.6916, 1.18", "2.5766, -142.805, -26.451, 0.96", "2.39674, -143.278, -26.3049, 0.66", "2.28525, -143.628, -26.2099, 1.03", "2.14535, -144.283, -26.0355, 0.52", "2.06594, -145.095, -25.8268, 0.52", "2.07338, -145.64, -25.7033, 1.11", "2.14498, -146.172, -25.5987, 1.11", "2.32671, -147.009, -25.4622, 0.74", "2.45131, -147.478, -25.399, 0.44", "2.66028, -148.189, -25.319, 0.59", "2.93327, -149.16, -25.2362, 0.59", "3.14036, -150.094, -25.1794, 0.59", "3.27211, -150.892, -25.1419, 0.52", "3.3192, -151.407, -25.127, 1.18", "3.332, -151.741, -25.1144, 1.33", "3.30607, -152.647, -25.0731, 1.18", "3.24254, -153.373, -25.0257, 0.88", "3.16948, -153.958, -24.9805, 0.52", "3.0968, -154.612, -24.9329, 0.66", "3.0952, -154.679, -24.9268, 0.66", "3.15004, -155.23, -24.8767, 0.81", "3.24811, -155.859, -24.8189, 0.44", "3.39152, -156.536, -24.7555, 0.44", "3.60414, -157.36, -24.6748, 0.44", "3.93981, -158.399, -24.5665, 0.37", "4.1872, -159.074, -24.4898, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-2.84638, -31.3947, -2.55444, 1.03", "-4.76085, -31.9346, -1.98703, 1.03", "-6.03719, -32.4981, -1.39738, 1.03", "-7.57499, -33.4003, -0.582143, 0.96", "-8.58677, -34.1523, -0.0278345, 0.96", "-8.71836, -34.2608, 0.0452313, 0.96", "-11.2991, -36.6809, 1.46246, 0.81", "-12.2205, -37.8078, 2.01932, 1.11", "-13.1156, -39.0364, 2.57767, 1.11", "-14.2624, -40.6761, 3.28815, 1.03", "-14.3202, -40.7543, 3.32116, 1.03", "-15.5669, -42.2878, 4.01335, 1.03", "-16.4851, -43.3475, 4.45068, 1.25", "-17.2576, -44.2211, 4.89379, 1.4", "-17.7824, -44.802, 5.2416, 1.4", "-18.7651, -45.9514, 6.0328, 1.25", "-19.7504, -47.3166, 6.95376, 1.11", "-20.2544, -48.1817, 7.50608, 1.11", "-20.7629, -49.3362, 8.16037, 1.03", "-20.8233, -49.5075, 8.23856, 1.03", "-21.2408, -50.7707, 8.62704, 0.81", "-21.6931, -52.1543, 8.8672, 0.96", "-22.1838, -53.6645, 8.99627, 0.96", "-22.7232, -55.379, 9.08401, 0.81", "-23.0687, -56.64, 9.07646, 0.74", "-23.5462, -58.5297, 8.98487, 0.81", "-23.7699, -59.5603, 8.88622, 1.11", "-24.0152, -61.0426, 8.7122, 1.11", "-24.1376, -62.1663, 8.56254, 1.11", "-24.2825, -64.3481, 8.26211, 0.88", "-24.313, -65.4452, 8.15477, 1.11", "-24.3132, -66.7333, 8.04577, 1.11", "-24.3076, -67.7304, 7.94592, 1.33", "-24.3188, -68.7648, 7.84151, 0.96", "-24.3579, -70.002, 7.72284, 1.11", "-24.3935, -71.5131, 7.58812, 1.11", "-24.3947, -72.7735, 7.44679, 1.4", "-24.399, -73.8795, 7.29555, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-2.84638, -31.3947, -2.55444, 1.47", "-2.86797, -32.8083, -2.54756, 1.47", "-2.88127, -33.6794, -2.54332, 1.47", "-2.91026, -35.5773, -2.53407, 1.47", "-2.92958, -36.8431, -2.52791, 1.62", "-2.95324, -38.3922, -2.52036, 1.92", "-2.97612, -39.8908, -2.51306, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-19.9924, -49.2705, -8.32141, 0.88", "-21.5995, -49.3699, -8.19558, 0.88", "-22.0798, -49.427, -8.19229, 1.11", "-22.629, -49.5212, -8.24347, 0.88", "-23.3157, -49.6531, -8.33166, 0.81", "-24.1155, -49.8509, -8.46952, 0.74", "-24.872, -50.0933, -8.61693, 0.96", "-25.6046, -50.4133, -8.83323, 0.96", "-26.5891, -50.9485, -9.13549, 0.81", "-26.634, -50.9789, -9.14913, 0.81", "-27.4157, -51.6096, -9.38244, 0.74", "-28.0794, -52.2166, -9.57454, 0.74", "-28.3153, -52.4404, -9.63268, 1.03", "-28.7664, -52.8548, -9.72848, 1.11", "-29.5358, -53.5066, -9.85719, 1.11", "-29.596, -53.5526, -9.86798, 1.11", "-30.5052, -54.1502, -10.0307, 0.88", "-31.5818, -54.7978, -10.2358, 0.88", "-32.0592, -55.0662, -10.3307, 1.25", "-32.6607, -55.3758, -10.4566, 1.25", "-33.4907, -55.7716, -10.6386, 1.4", "-34.1034, -56.0625, -10.7711, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-19.9924, -49.2705, -8.32141, 0.74", "-19.7357, -49.8206, -9.49579, 0.74", "-19.4196, -50.5466, -11.0654, 0.44", "-19.3977, -50.5985, -11.1713, 0.44", "-19.1607, -51.1347, -12.1567, 0.44", "-18.7141, -52.1068, -13.8354, 1.03", "-17.8708, -54.0897, -17.0496, 1.03", "-17.6282, -54.7384, -18.0859, 1.33", "-17.3452, -55.6689, -19.5039, 1.11", "-17.1979, -56.3328, -20.5568, 0.59", "-17.0585, -57.3321, -22.1765, 0.44", "-17.025, -58.6602, -24.2051, 0.44", "-17.0787, -59.5408, -25.5446, 0.88", "-17.1543, -59.9484, -26.2181, 1.25", "-17.639, -61.5366, -28.9147, 1.25", "-17.6558, -61.5777, -28.9867, 1.25", "-17.7417, -61.7681, -29.2925, 1.25", "-17.7587, -61.813, -29.3504, 1.25", "-18.0782, -63.3538, -30.6206, 0.74", "-18.1898, -64.2866, -31.2131, 0.74", "-18.1962, -64.3599, -31.2476, 0.74", "-18.2525, -65.0219, -31.6194, 0.74", "-18.3455, -65.9523, -32.3045, 0.81", "-18.4603, -66.7361, -32.9616, 0.81", "-18.811, -68.3124, -34.4925, 0.44", "-18.829, -68.3672, -34.5519, 0.44", "-19.2026, -69.3244, -35.6471, 0.74", "-19.7565, -70.6022, -37.2129, 0.88", "-20.0108, -71.2062, -37.952, 1.03", "-20.395, -72.1814, -39.0752, 1.03", "-20.5941, -72.8106, -39.6763, 1.18", "-20.6074, -72.8669, -39.723, 1.18", "-20.7323, -74.1873, -40.5461, 0.52", "-20.6036, -75.1505, -40.9668, 0.44", "-20.4073, -75.656, -41.1759, 0.81", "-20.1763, -76.0734, -41.3397, 0.88", "-20.0896, -76.22, -41.4065, 0.88", "-19.7082, -76.9124, -41.7322, 0.74", "-19.2997, -77.7658, -42.1363, 0.44", "-18.9799, -78.6524, -42.5761, 0.59", "-18.6836, -79.8729, -43.1407, 0.52", "-18.5301, -80.8431, -43.5799, 0.88", "-18.4665, -81.5079, -43.8664, 1.18", "-18.4402, -82.4657, -44.2908, 0.52", "-18.4766, -83.0972, -44.5644, 0.44", "-18.5884, -84.0287, -44.9271, 0.44", "-18.7262, -84.8531, -45.22, 0.74", "-18.8197, -85.3175, -45.3793, 0.74", "-19.1534, -86.8034, -45.916, 0.59", "-19.4245, -87.8906, -46.3005, 0.66", "-19.5802, -88.5064, -46.536, 1.18", "-19.809, -89.4501, -46.8976, 1.33", "-19.9926, -90.3792, -47.2201, 1.11", "-20.0015, -90.4558, -47.2476, 1.11", "-20.0245, -91.3263, -47.5386, 0.96", "-19.9709, -92.4651, -47.9282, 0.66", "-19.9095, -93.3353, -48.2619, 0.37", "-19.8827, -94.177, -48.6063, 0.29", "-19.9217, -95.6549, -49.2805, 1.03", "-19.9746, -96.3896, -49.634, 1.33", "-20.0301, -96.9794, -49.9256, 1.47", "-20.194, -98.4935, -50.6165, 0.37", "-20.2842, -99.4148, -51.0513, 0.37", "-20.4171, -100.693, -51.6179, 0.29", "-20.4577, -101.172, -51.7985, 0.44", "-20.5051, -101.898, -52.036, 0.59", "-20.5573, -103.044, -52.3527, 0.59", "-20.5807, -104.497, -52.699, 0.74", "-20.5616, -105.57, -52.9335, 0.59", "-20.5571, -106.536, -53.1153, 0.44", "-20.5601, -107.834, -53.369, 0.44", "-20.5563, -107.92, -53.4127, 0.44", "-20.4515, -108.763, -54.0843, 0.96", "-20.3448, -109.252, -54.5663, 1.4", "-20.3279, -109.31, -54.6279, 1.4", "-20.1487, -109.855, -55.2177, 1.18", "-19.0451, -113.242, -58.8525, 0.59", "-18.8273, -113.956, -59.5898, 0.88", "-18.6448, -114.626, -60.2562, 1.03", "-18.4767, -115.366, -60.962, 0.52", "-18.3453, -116.225, -61.6793, 0.37", "-18.2967, -117.096, -62.2491, 0.37", "-18.2981, -117.163, -62.2679, 0.37", "-18.3056, -117.463, -62.3482, 1.03", "-18.3141, -118.104, -62.4929, 1.03", "-18.264, -119.092, -62.7075, 0.44", "-18.0758, -120.147, -63.016, 0.37", "-17.7576, -121.181, -63.3734, 0.88", "-17.5349, -121.79, -63.6459, 1.25", "-17.3622, -122.244, -63.8791, 1.25", "-17.0352, -123.111, -64.3946, 0.81", "-16.4928, -124.719, -65.4212, 0.29", "-16.3831, -125.143, -65.6879, 0.29", "-16.2126, -126.134, -66.3266, 0.37", "-16.1144, -127.044, -66.9328, 0.37", "-16.062, -127.974, -67.5257, 0.66", "-16.0622, -128.749, -67.9605, 1.25", "-16.0605, -129.555, -68.3237, 1.4", "-15.9937, -130.991, -68.9027, 0.81", "-15.8448, -132.298, -69.3599, 0.59", "-15.718, -133.023, -69.5909, 0.29", "-15.5118, -133.957, -69.8518, 0.29", "-15.2375, -135.039, -70.3357, 0.29", "-15.1362, -135.411, -70.5675, 1.03", "-15.117, -135.476, -70.6156, 1.03", "-14.9357, -136.065, -71.0975, 1.4", "-14.6916, -136.92, -71.8452, 1.4", "-13.9951, -139.492, -74.1502, 0.52", "-13.761, -140.541, -75.0502, 0.74", "-13.7418, -140.65, -75.1368, 0.74", "-13.6235, -141.479, -75.7388, 0.52", "-13.5447, -142.321, -76.2817, 0.52", "-13.5292, -143.029, -76.6173, 0.74", "-13.5563, -144.018, -76.9424, 0.66", "-13.5935, -145.621, -77.6779, 0.59", "-13.5917, -145.68, -77.715, 0.59", "-13.5359, -146.376, -78.2223, 0.52", "-13.4407, -147.126, -78.7922, 1.18", "-13.2416, -148.395, -79.7558, 1.62", "-12.8505, -150.298, -81.2385, 1.18", "-12.5435, -151.58, -82.1902, 0.52", "-12.2962, -152.552, -82.8652, 0.37", "-12.0501, -153.47, -83.4421, 0.74", "-11.9471, -153.903, -83.6722, 1.11", "-11.7665, -155.214, -84.1468, 0.88", "-11.7948, -155.968, -84.3086, 0.81", "-12.0195, -156.929, -84.4878, 0.44", "-12.3225, -157.661, -84.6356, 0.59", "-12.7535, -158.431, -84.842, 0.59", "-13.3259, -159.306, -85.1007, 0.37", "-14.0716, -160.358, -85.4004, 0.29", "-14.5655, -161.053, -85.6211, 0.81", "-14.981, -161.686, -85.8479, 1.11", "-15.6818, -162.87, -86.2839, 1.4", "-15.9889, -163.448, -86.4896, 1.33", "-16.4308, -164.398, -86.7869, 0.81", "-16.8145, -165.316, -87.0056, 0.52", "-17.2956, -166.537, -87.2046, 0.44", "-17.6305, -167.455, -87.3013, 0.37", "-17.9734, -168.519, -87.2909, 0.37", "-18.2489, -169.525, -87.2255, 0.66", "-18.4736, -170.585, -87.0971, 0.96", "-18.587, -171.406, -86.9533, 1.03", "-18.6418, -172.229, -86.7695, 1.25", "-18.5651, -173.743, -86.4261, 0.81", "-18.4791, -174.396, -86.2884, 0.52", "-18.3351, -175.303, -86.1488, 0.52", "-18.2393, -175.974, -86.0862, 0.29", "-18.1661, -176.958, -86.0509, 0.29", "-18.1874, -178.306, -86.13, 0.29", "-18.3356, -179.162, -86.2733, 0.81", "-18.6211, -180.038, -86.4563, 1.11", "-18.9588, -180.748, -86.6329, 1.11", "-19.3848, -181.447, -86.8237, 0.74", "-19.9259, -182.158, -87.0401, 0.37", "-20.7297, -183.104, -87.3781, 0.29", "-20.9766, -183.431, -87.4922, 0.74", "-21.0243, -183.511, -87.5174, 0.74", "-21.2438, -184.052, -87.7212, 0.96", "-21.2805, -184.189, -87.7745, 0.96", "-21.5201, -185.425, -88.2251, 0.29", "-21.6843, -186.222, -88.5097, 0.29", "-21.8262, -186.777, -88.6917, 0.81", "-22.2093, -187.941, -89.0376, 1.03", "-22.5055, -188.628, -89.2168, 0.81", "-22.9959, -189.505, -89.4313, 0.29", "-23.6434, -190.404, -89.6278, 0.29", "-24.0481, -190.859, -89.7284, 0.44", "-24.5641, -191.394, -89.8367, 0.44", "-25.2294, -191.998, -89.9294, 0.66", "-26.0035, -192.61, -90.0464, 0.96", "-26.4178, -192.889, -90.1192, 1.4", "-27.5643, -193.592, -90.3591, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.5241, 56.3808, 2.46577, 1.11", "7.14128, 58.2385, 2.66161, 1.11", "7.01345, 58.7764, 2.70885, 0.96", "6.80791, 59.4737, 2.75806, 0.96", "6.5542, 60.2529, 2.80651, 0.96", "6.2221, 61.1634, 2.85906, 0.96", "5.68362, 62.5402, 2.93509, 0.96", "5.64769, 62.6095, 2.93591, 0.96", "5.03921, 63.6729, 2.95049, 1.11", "4.977, 63.7729, 2.95244, 1.11", "4.44239, 64.5853, 2.97254, 1.11", "4.39064, 64.6585, 2.97508, 1.11", "3.80902, 65.4598, 3.00832, 1.33", "3.28026, 66.2022, 3.03711, 1.18", "2.73773, 67.036, 3.06507, 0.96", "2.69387, 67.116, 3.06706, 0.96", "2.37182, 67.8009, 3.08243, 0.88", "2.01668, 68.7131, 3.09812, 0.88", "1.99611, 68.7871, 3.09899, 0.88", "1.78086, 69.9617, 3.10621, 0.88", "1.6601, 71.1154, 3.1065, 1.11", "1.65512, 71.2257, 3.10637, 1.11", "1.66947, 72.1849, 3.10314, 1.11", "1.71574, 72.9997, 3.10275, 1.33", "1.75948, 73.5066, 3.1043, 1.33", "1.89396, 74.4178, 3.07035, 1.18", "2.0662, 75.3106, 3.00636, 1.18", "2.09268, 75.4147, 2.99004, 1.18", "2.3711, 76.2877, 2.79115, 1.11", "2.69818, 77.1595, 2.54488, 1.11", "3.07393, 78.0278, 2.26066, 1.03", "3.4283, 78.8135, 1.97631, 0.88", "3.93516, 80.0247, 1.51556, 0.88", "3.98275, 80.1687, 1.46251, 0.88", "4.23404, 81.1867, 1.17515, 0.88", "4.2441, 81.2625, 1.16292, 0.88", "4.21974, 82.09, 1.15908, 0.88", "4.04261, 83.1711, 1.27047, 0.88", "3.82239, 83.9453, 1.41459, 0.88", "3.38934, 85.1334, 1.63487, 0.96", "3.27908, 85.3598, 1.67574, 0.96", "2.91975, 86.0204, 1.78148, 1.47", "2.56631, 86.6411, 1.88148, 1.62", "2.07138, 87.4622, 2.02851, 1.11", "1.57895, 88.2763, 2.15895, 1.11", "0.958889, 89.303, 2.28688, 1.11", "0.466562, 90.1943, 2.40889, 0.96", "0.0478859, 91.038, 2.5361, 0.96", "-0.438552, 92.0503, 2.69411, 0.96", "-0.472885, 92.1336, 2.70619, 0.96", "-0.684163, 92.7468, 2.76212, 0.96", "-0.998386, 93.8557, 2.73474, 1.18", "-1.02531, 93.9613, 2.72201, 1.18", "-1.36153, 95.3042, 2.47525, 1.18", "-1.69831, 96.6864, 2.1724, 1.03", "-1.94508, 97.6736, 1.95528, 0.88", "-2.28561, 99.0104, 1.65017, 1.03", "-2.52457, 99.9356, 1.43955, 1.03", "-2.64852, 100.459, 1.33702, 1.03", "-2.67161, 100.599, 1.31626, 1.03", "-2.79869, 101.469, 1.24809, 1.03", "-2.8207, 101.633, 1.24834, 1.03", "-2.9415, 102.412, 1.34322, 1.03", "-3.17231, 103.738, 1.55161, 1.18", "-3.38643, 104.911, 1.79061, 1.18", "-3.52428, 105.628, 1.96096, 1.18", "-3.68041, 106.403, 2.17112, 1.18", "-4.02067, 108.02, 2.62956, 1.18", "-4.26032, 109.159, 2.99375, 1.18", "-4.49736, 110.323, 3.38897, 1.18", "-4.51204, 110.398, 3.41303, 1.18", "-4.64021, 111.078, 3.59183, 1.18", "-4.87303, 112.319, 3.8292, 1.47", "-5.02048, 113.172, 3.9261, 1.47", "-5.17042, 114.02, 3.99866, 1.33", "-5.38285, 115.293, 4.06953, 1.03", "-5.68189, 117.049, 4.1516, 0.96", "-5.9299, 118.489, 4.20399, 0.96", "-6.11287, 119.513, 4.20767, 0.96", "-6.27377, 120.377, 4.18054, 1.11", "-6.36383, 120.883, 4.15833, 1.11", "-6.5246, 121.917, 4.09378, 1.25", "-6.58062, 122.384, 4.05823, 1.25", "-6.72941, 123.557, 3.94327, 1.03", "-6.75945, 123.734, 3.92428, 1.03", "-6.85606, 124.272, 3.88818, 1.03", "-6.95948, 124.808, 3.87603, 1.03", "-7.06315, 125.448, 3.92692, 1.03", "-7.22025, 126.495, 4.10333, 1.03", "-7.31536, 127.271, 4.29594, 1.03", "-7.39393, 127.988, 4.54892, 1.03", "-7.40789, 128.128, 4.60993, 1.03", "-7.50548, 129.223, 5.14532, 1.03", "-7.51176, 129.292, 5.18227, 1.03", "-7.65081, 130.496, 5.83143, 1.03", "-7.82673, 131.741, 6.44184, 1.03", "-7.8442, 131.849, 6.48443, 1.03", "-7.94594, 132.693, 6.74758, 1.03", "-7.95085, 132.77, 6.76768, 1.03", "-7.92742, 134.176, 7.08841, 1.03", "-7.91243, 134.338, 7.11823, 1.03", "-7.79257, 135.306, 7.24506, 1.25", "-7.61586, 136.723, 7.42145, 1.25", "-7.45848, 137.916, 7.56519, 1.25", "-7.35166, 139.001, 7.68678, 0.88", "-7.29725, 140.073, 7.77256, 0.74", "-7.32232, 140.972, 7.79704, 1.18", "-7.47681, 142.39, 7.76281, 1.4", "-7.51152, 142.554, 7.75036, 1.4", "-7.84277, 143.69, 7.60922, 1.4", "-8.28248, 144.917, 7.44341, 1.18", "-8.71508, 146.035, 7.28122, 1.03", "-8.74359, 146.107, 7.26973, 1.03", "-9.16921, 147.143, 7.08728, 1.03", "-9.38567, 147.68, 6.99598, 0.88", "-9.95405, 149.187, 6.77048, 1.11", "-9.98183, 149.262, 6.76541, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.5241, 56.3808, 2.46577, 0.52", "7.00914, 57.5908, 1.44031, 0.52", "6.4975, 58.4785, 0.651202, 0.74", "5.97169, 59.1121, -0.00345558, 0.74", "5.75772, 59.3283, -0.245966, 0.74", "5.35426, 59.6784, -0.807483, 0.74", "4.70675, 60.1765, -1.89329, 0.44", "4.3423, 60.4026, -2.55552, 0.81", "3.70474, 60.7838, -3.80583, 0.81", "3.67224, 60.8057, -3.88074, 0.81", "2.56022, 61.706, -6.62948, 1.03", "1.83853, 62.4483, -8.61498, 0.81", "1.64289, 62.7106, -9.20656, 0.81", "1.22606, 63.3564, -10.42, 0.88", "0.717886, 64.1723, -11.7074, 0.81", "0.2555, 64.7868, -12.6067, 0.81", "-0.501727, 65.5829, -13.6526, 0.59", "-0.961051, 65.9258, -14.1975, 0.59", "-1.77963, 66.2758, -15.1629, 0.88", "-2.72114, 66.4917, -17.0551, 0.88", "-3.37671, 66.5505, -18.8741, 0.88", "-3.67292, 66.5465, -19.8882, 1.25", "-4.17996, 66.5008, -21.856, 1.25", "-4.74796, 66.4366, -24.2855, 1.11", "-6.38676, 66.3418, -32.3412, 1.03", "-6.79309, 66.3616, -34.6687, 0.66", "-6.80491, 66.3668, -34.7626, 0.66", "-6.96221, 66.5675, -36.6074, 0.52", "-7.00201, 66.7182, -37.4435, 0.52", "-7.00282, 67.078, -38.6893, 0.52", "-6.98753, 67.1254, -38.7719, 0.52", "-6.29629, 68.3939, -40.7918, 1.25", "-6.14498, 68.6783, -41.253, 1.69", "-6.11339, 68.7329, -41.3422, 1.69", "-5.96719, 69.0276, -41.8343, 1.69", "-5.58595, 70.4016, -44.1944, 0.88", "-5.57117, 71.8252, -46.4187, 0.59", "-5.70752, 72.348, -47.1887, 0.81", "-5.72679, 72.4058, -47.2791, 0.81", "-5.89467, 72.9293, -48.1604, 1.11", "-6.2274, 74.0201, -50.0118, 1.11", "-6.40193, 74.6298, -50.9969, 0.96", "-6.6251, 75.7998, -52.9095, 0.88", "-6.78832, 77.2542, -55.1442, 0.81", "-6.80755, 78.5505, -57.0895, 0.52", "-6.73865, 78.9392, -57.7366, 0.52", "-6.54745, 79.4319, -58.5663, 0.59", "-6.48676, 79.5307, -58.7297, 0.59", "-5.95633, 80.2028, -59.7559, 0.59", "-4.99423, 81.3083, -61.3785, 0.81", "-3.5489, 82.7733, -63.6438, 1.4", "-3.03199, 83.2159, -64.4472, 1.62", "-2.2523, 83.749, -65.5933, 1.84", "-2.2002, 83.7787, -65.6661, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "27.4763, 43.9149, 4.92675, 1.18", "27.6219, 45.2096, 6.94121, 1.18", "27.7676, 46.0936, 7.94701, 0.96", "27.7869, 46.1694, 8.00495, 0.96", "28.1975, 47.2739, 8.57514, 0.74", "28.2333, 47.3563, 8.60545, 0.74", "28.5561, 48.0019, 8.7754, 0.88", "29.1038, 48.908, 8.88198, 0.88", "29.7329, 49.8215, 8.98942, 0.59", "30.387, 50.6149, 9.19886, 0.52", "30.9492, 51.1848, 9.44109, 0.81", "31.7171, 51.9328, 9.81035, 0.52", "32.9925, 53.0726, 10.5332, 0.88", "33.1944, 53.2391, 10.6809, 0.88", "34.3488, 54.0828, 11.7456, 1.33", "34.5307, 54.1994, 11.9579, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "27.4763, 43.9149, 4.92675, 1.11", "29.8633, 42.7811, 3.14695, 1.11", "30.6741, 42.4642, 2.67188, 1.03", "31.6066, 42.1219, 2.20492, 0.88", "33.319, 41.5215, 1.53939, 0.59", "34.284, 41.1615, 1.20581, 0.81", "35.1476, 40.8215, 0.915003, 0.81", "35.8877, 40.5435, 0.723193, 1.03", "36.2066, 40.4475, 0.617533, 1.03", "37.3254, 40.1531, 0.110912, 1.03", "38.9687, 39.6433, -0.795387, 0.66", "40.2309, 39.1657, -1.62491, 0.81", "41.4074, 38.6132, -2.50798, 0.59", "42.4843, 38.0052, -3.42276, 0.96", "43.9516, 37.0374, -4.77773, 0.59", "44.9373, 36.2754, -5.77297, 0.59", "45.8576, 35.4761, -6.6805, 0.96", "46.6734, 34.7181, -7.39221, 0.81", "47.4704, 33.9573, -7.94261, 0.81", "47.9587, 33.5247, -8.1683, 0.96", "49.0722, 32.761, -8.48945, 0.37", "50.1267, 32.2884, -8.71182, 0.37", "51.4104, 31.9358, -8.91135, 0.44", "52.2743, 31.8053, -9.03813, 0.81", "53.2887, 31.7177, -9.18615, 1.03", "54.7894, 31.5891, -9.42594, 0.52", "55.3272, 31.5043, -9.53142, 0.44", "55.3976, 31.4821, -9.55324, 0.44", "56.8005, 30.7321, -10.059, 0.44", "57.2789, 30.3937, -10.2363, 0.88", "58.098, 29.6958, -10.491, 1.03", "59.16, 28.7213, -10.68, 1.03", "60.1127, 27.8661, -10.7702, 0.96", "61.1094, 27.0717, -10.7662, 0.52", "61.169, 27.0287, -10.7595, 0.52", "61.906, 26.6163, -10.6161, 0.59", "62.8955, 26.24, -10.3185, 0.59", "63.61, 26.0603, -10.0256, 0.29", "64.6596, 25.8678, -9.54003, 0.29", "64.7267, 25.8562, -9.50911, 0.29", "65.558, 25.6683, -9.12858, 0.66", "66.2272, 25.4793, -8.82436, 0.81", "67.0507, 25.1399, -8.43458, 0.88", "67.1662, 25.0722, -8.36693, 0.88", "67.7845, 24.61, -7.95933, 1.03", "68.2809, 24.2159, -7.63362, 1.03", "68.3319, 24.1735, -7.6018, 1.03", "68.9829, 23.6222, -7.19701, 0.81", "70.0606, 22.7331, -6.55082, 0.37", "70.6555, 22.2791, -6.22296, 0.66", "71.1614, 21.9147, -5.96805, 0.66", "71.9016, 21.4092, -5.66951, 0.52", "72.5278, 21.0107, -5.49496, 0.52", "73.4501, 20.4408, -5.33455, 0.96", "74.1437, 19.9857, -5.28214, 1.25", "74.9955, 19.3966, -5.24127, 1.03", "75.913, 18.7245, -5.21762, 0.81", "76.8968, 18.014, -5.21254, 0.66", "77.4023, 17.6777, -5.20894, 0.74", "77.9914, 17.3144, -5.1923, 0.74", "78.8611, 16.8213, -5.11281, 0.37", "78.9167, 16.7934, -5.10263, 0.37", "79.6756, 16.4527, -4.89301, 0.29", "80.7853, 16.0141, -4.66662, 0.66", "81.6004, 15.7076, -4.56403, 1.03", "82.4649, 15.3764, -4.49811, 0.74", "83.4841, 14.9552, -4.45934, 0.74", "84.116, 14.6555, -4.4466, 0.96", "85.6206, 13.8178, -4.43883, 1.18", "86.1997, 13.4693, -4.44613, 0.96", "86.9434, 13.0065, -4.45135, 0.44", "87.0148, 12.9614, -4.45135, 0.44", "87.9036, 12.3791, -4.4575, 0.66", "88.4907, 11.9924, -4.47605, 0.81", "88.7794, 11.8048, -4.50815, 0.81", "89.4758, 11.3786, -4.64722, 0.66", "89.7205, 11.239, -4.70186, 0.66", "90.6222, 10.7528, -4.85949, 0.66", "91.6532, 10.2353, -4.99788, 0.44", "93.2231, 9.44221, -5.12896, 0.37", "94.0365, 9.00427, -5.16278, 0.88", "95.1788, 8.3568, -5.10792, 0.88", "96.0851, 7.84773, -4.97475, 1.03", "96.7923, 7.4625, -4.78911, 1.03", "97.4522, 7.13574, -4.55188, 0.74", "98.2574, 6.7788, -4.2055, 0.52", "99.2862, 6.35913, -3.77816, 0.52", "100.162, 6.00355, -3.43077, 0.29", "100.239, 5.97087, -3.40695, 0.29", "100.939, 5.61682, -3.21241, 0.29", "101.544, 5.23756, -3.08482, 0.59", "101.633, 5.1696, -3.07173, 0.59", "102.289, 4.51713, -3.05771, 0.88", "102.887, 3.75855, -3.07123, 0.74", "103.435, 2.92929, -3.16276, 0.44", "103.839, 2.2034, -3.29253, 0.29", "104.041, 1.78819, -3.39011, 0.59", "104.298, 1.14119, -3.57274, 0.44", "104.467, 0.582272, -3.76481, 0.44", "104.666, -0.493436, -4.15016, 0.81", "104.671, -0.560833, -4.17534, 0.81", "104.65, -1.20268, -4.37659, 1.03", "104.586, -1.97516, -4.57873, 0.88", "104.579, -2.04446, -4.59245, 0.88", "104.513, -3.02398, -4.72368, 0.59", "104.49, -3.71782, -4.75964, 0.59", "104.509, -4.49746, -4.76781, 0.88", "104.525, -4.71247, -4.76253, 0.88", "104.682, -5.76496, -4.67778, 0.37", "104.823, -6.39583, -4.60763, 0.74", "105.0, -7.00006, -4.52125, 0.96", "105.268, -7.8417, -4.43278, 0.96", "105.289, -7.90899, -4.42726, 0.96", "105.541, -8.63704, -4.40744, 1.25", "105.951, -9.62232, -4.40505, 0.44", "106.265, -10.2291, -4.44909, 0.37", "106.809, -11.1188, -4.55454, 0.96", "107.334, -11.8689, -4.65734, 0.96", "108.179, -12.9244, -4.83307, 0.74", "108.902, -13.7232, -5.01547, 0.74", "109.847, -14.6598, -5.25432, 0.29", "110.326, -15.1157, -5.34686, 0.52", "111.052, -15.8194, -5.43746, 0.88", "111.659, -16.4338, -5.48322, 1.03", "112.656, -17.5418, -5.48032, 0.29", "113.047, -18.0392, -5.40401, 0.88", "113.706, -18.957, -5.02454, 0.81", "114.056, -19.4421, -4.6588, 0.96", "114.42, -19.9179, -4.09539, 0.59", "114.454, -19.9598, -4.02849, 0.59", "115.121, -20.722, -2.54109, 0.52", "115.506, -21.1523, -1.71913, 0.52", "115.972, -21.6761, -0.849479, 0.88", "116.004, -21.7152, -0.796468, 0.88", "116.179, -21.9576, -0.523273, 1.03", "116.549, -22.5559, 0.0172856, 1.03", "116.879, -23.2519, 0.497051, 0.44", "117.161, -24.0524, 0.987618, 0.44", "117.395, -24.8283, 1.43171, 0.44", "117.634, -25.6161, 1.90013, 0.52", "117.818, -26.188, 2.24858, 0.44", "118.111, -27.0263, 2.76462, 0.44", "118.328, -27.5976, 3.10399, 0.81", "118.589, -28.2128, 3.43079, 0.81", "118.948, -28.953, 3.80719, 0.37", "119.339, -29.6928, 4.14285, 0.81", "119.606, -30.165, 4.35168, 0.88", "119.815, -30.5205, 4.49852, 0.88", "120.16, -31.1318, 4.75898, 0.66", "120.669, -32.0667, 5.16252, 0.44", "121.122, -32.8515, 5.50622, 0.29", "121.522, -33.4473, 5.73777, 0.59", "121.934, -34.0069, 5.92449, 0.74", "122.026, -34.1275, 5.9575, 0.74", "122.476, -34.7128, 6.03985, 0.59", "123.144, -35.6143, 6.02144, 0.44", "123.84, -36.6169, 5.92316, 0.44", "124.157, -37.1284, 5.84903, 0.44", "124.541, -37.8384, 5.73424, 0.74", "125.003, -38.8046, 5.57153, 0.74", "125.43, -39.8362, 5.3942, 0.29", "125.593, -40.2749, 5.31722, 0.96", "125.773, -40.7569, 5.25143, 0.96", "126.063, -41.4402, 5.16911, 0.81", "126.096, -41.5067, 5.16528, 0.81", "126.386, -42.0164, 5.20022, 0.96", "126.857, -42.7511, 5.27071, 0.52", "127.208, -43.263, 5.31796, 0.52", "127.243, -43.3137, 5.32285, 0.52", "127.688, -44.0255, 5.35337, 0.44", "128.179, -44.8753, 5.3593, 0.59", "128.862, -46.1374, 5.351, 0.29", "129.099, -46.5926, 5.34687, 0.96", "129.476, -47.3496, 5.33144, 1.33", "130.089, -48.6316, 5.30798, 0.29", "130.629, -49.7804, 5.29842, 0.29", "130.93, -50.4304, 5.30499, 0.88", "130.96, -50.498, 5.31069, 0.88", "131.266, -51.257, 5.43005, 0.88", "131.681, -52.4208, 5.71603, 0.29", "131.95, -53.2914, 6.0222, 0.29", "132.016, -53.5639, 6.13924, 0.66", "132.197, -54.5375, 6.58486, 0.66", "132.309, -55.2491, 6.92765, 0.66", "132.4, -55.896, 7.25408, 0.96", "132.471, -56.5051, 7.5498, 0.74", "132.536, -57.1941, 7.88314, 0.52", "132.613, -58.056, 8.31999, 0.44", "132.64, -58.2678, 8.4264, 0.44", "132.792, -59.1597, 8.84525, 0.37", "133.017, -60.2277, 9.31954, 0.37", "133.279, -61.3686, 9.79506, 0.74", "133.569, -62.3189, 10.1148, 0.29", "133.967, -63.2433, 10.3833, 0.29", "134.496, -64.2104, 10.5786, 0.74", "134.78, -64.5968, 10.6172, 1.03", "134.831, -64.65, 10.6166, 1.03", "135.969, -65.6752, 10.5092, 0.22", "136.93, -66.4892, 10.3739, 0.22", "137.515, -66.9743, 10.2944, 0.81", "138.13, -67.505, 10.2378, 0.81", "138.184, -67.5549, 10.2333, 0.81", "138.979, -68.4042, 10.2053, 0.29", "139.499, -69.1084, 10.1578, 0.44", "139.558, -69.1945, 10.1396, 0.44", "139.926, -69.6961, 10.0012, 0.44", "139.974, -69.7607, 9.97185, 0.44", "140.502, -70.5203, 9.57482, 0.52", "141.305, -71.7776, 8.78201, 0.52", "141.82, -72.5641, 8.19007, 0.66", "142.185, -73.0662, 7.74124, 0.59", "143.074, -74.2122, 6.57597, 0.37", "143.475, -74.7192, 6.05296, 0.29", "144.298, -75.7462, 4.97481, 0.74", "145.249, -76.9673, 3.7698, 0.81", "146.425, -78.5418, 2.26489, 0.29", "146.84, -79.1107, 1.69377, 0.66", "147.365, -79.8123, 0.991762, 0.29", "147.946, -80.5878, 0.222133, 0.59", "148.299, -81.0774, -0.245908, 0.74", "149.099, -82.2787, -1.34154, 1.33", "150.376, -84.2546, -3.1099, 0.29", "150.621, -84.6175, -3.43592, 0.59", "150.798, -84.8626, -3.65412, 0.59", "151.708, -86.0237, -4.57749, 0.52", "152.158, -86.5434, -4.93143, 0.74", "152.512, -86.9172, -5.10257, 0.74", "153.25, -87.6252, -5.27612, 0.37", "154.368, -88.6384, -5.5212, 0.37", "155.185, -89.3419, -5.64096, 0.37", "155.612, -89.6964, -5.66591, 0.66", "156.024, -90.0353, -5.69524, 0.88", "156.358, -90.3137, -5.72778, 0.88", "157.762, -91.5023, -5.8801, 0.29", "158.931, -92.5434, -6.03248, 0.22", "159.159, -92.761, -6.06635, 0.66", "159.966, -93.5822, -6.19984, 0.22", "160.269, -93.9223, -6.27173, 0.52", "160.789, -94.5859, -6.42183, 0.29", "161.033, -94.9684, -6.49981, 0.74", "161.255, -95.3936, -6.60448, 0.74", "161.661, -96.2747, -6.84932, 0.22", "162.1, -97.3423, -7.15439, 0.37", "162.295, -97.8227, -7.32463, 0.37", "162.495, -98.3544, -7.53343, 0.59", "162.672, -98.8138, -7.70923, 0.59", "162.963, -99.6012, -8.00883, 0.22", "163.097, -99.9523, -8.13161, 0.52", "163.623, -101.162, -8.51202, 0.29", "163.915, -101.757, -8.72951, 1.11", "164.247, -102.38, -8.98716, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-15.2888, -149.565, -150.917, 0.29", "-15.4636, -150.853, -151.173, 0.29", "-15.6173, -151.652, -151.33, 0.29", "-15.9057, -152.6, -151.407, 0.22", "-16.1724, -153.17, -151.362, 0.74", "-16.4196, -153.59, -151.249, 0.88", "-16.4539, -153.647, -151.229, 0.88", "-16.7088, -153.974, -151.06, 0.88", "-17.4818, -154.836, -150.493, 0.29", "-18.1551, -155.541, -149.906, 0.29", "-18.815, -156.231, -149.244, 0.88", "-19.2117, -156.641, -148.818, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-15.2888, -149.565, -150.917, 0.59", "-15.9348, -150.6, -154.154, 0.59", "-16.11, -150.881, -154.99, 0.37", "-16.3643, -151.211, -155.974, 0.37", "-16.724, -151.653, -157.235, 0.96", "-17.0712, -152.092, -158.406, 1.33", "-17.7774, -153.048, -160.787, 0.59", "-17.943, -153.331, -161.343, 0.29", "-18.1611, -153.773, -162.206, 0.29", "-18.2577, -154.083, -162.827, 0.88", "-18.2963, -154.278, -163.239, 0.88", "-18.3413, -154.688, -164.117, 0.66", "-18.3489, -155.21, -165.223, 0.88", "-18.3111, -156.029, -166.917, 1.4", "-18.1995, -157.614, -170.21, 0.59", "-18.1924, -158.311, -171.738, 0.59", "-18.193, -158.58, -172.349, 0.52", "-18.1883, -158.759, -172.759, 1.03", "-18.1887, -159.014, -173.335, 0.88", "-18.25, -159.929, -175.389, 0.22", "-18.3857, -160.493, -176.644, 0.59", "-18.6139, -161.072, -178.117, 0.74", "-18.8618, -161.578, -179.559, 0.44", "-19.0286, -161.865, -180.399, 0.74", "-19.3539, -162.42, -181.906, 1.11", "-19.5406, -162.733, -182.633, 0.96", "-20.2889, -163.899, -185.004, 0.74", "-20.3087, -163.924, -185.05, 0.74", "-20.6769, -164.341, -185.779, 0.74", "-21.2042, -164.988, -186.795, 0.74", "-21.7522, -165.701, -187.734, 0.37", "-22.0347, -166.109, -188.225, 1.03", "-22.3202, -166.56, -188.67, 1.18", "-23.1094, -167.821, -189.931, 0.29", "-23.3756, -168.24, -190.358, 0.59", "-23.5966, -168.58, -190.675, 0.59", "-23.9098, -169.115, -191.08, 0.44", "-24.1473, -169.555, -191.354, 0.29", "-24.1744, -169.605, -191.379, 0.29", "-24.4056, -169.997, -191.536, 0.59", "-24.5982, -170.419, -191.857, 0.59", "-24.6879, -170.812, -192.292, 0.44", "-24.6878, -171.216, -192.856, 0.29", "-24.6293, -171.677, -193.639, 0.88", "-24.5125, -172.173, -194.609, 1.11", "-24.1683, -173.286, -197.024, 0.74", "-23.9674, -173.913, -198.425, 0.59", "-23.7489, -174.617, -200.021, 0.29", "-23.5529, -175.377, -201.746, 0.74", "-23.3804, -176.397, -204.014, 1.03", "-23.3616, -177.422, -206.166, 0.52", "-23.4522, -177.821, -206.878, 0.44", "-23.5738, -178.097, -207.296, 0.88", "-23.9148, -178.623, -207.913, 1.11", "-24.1788, -178.932, -208.152, 1.11", "-24.7678, -179.497, -208.408, 0.59", "-25.4289, -180.103, -208.587, 0.44", "-25.8005, -180.467, -208.707, 0.66", "-26.4365, -181.177, -208.944, 0.59", "-26.8342, -181.747, -209.327, 0.37", "-27.1345, -182.247, -209.806, 0.44", "-27.4581, -182.85, -210.531, 0.66", "-27.6799, -183.312, -211.166, 0.81", "-27.8673, -183.746, -211.816, 0.88", "-28.8164, -185.869, -215.273, 0.52", "-28.9824, -186.176, -215.828, 0.29", "-29.0936, -186.338, -216.157, 0.59", "-29.2576, -186.5, -216.518, 0.59", "-29.7582, -186.818, -217.232, 0.37", "-30.3802, -187.057, -217.75, 0.37", "-31.1575, -187.232, -217.981, 0.37", "-31.2239, -187.246, -218.001, 0.37", "-32.2292, -187.424, -218.284, 0.22", "-32.6355, -187.467, -218.385, 0.37", "-33.0242, -187.468, -218.455, 0.37", "-33.9338, -187.415, -218.625, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "16.2319, -78.9925, -46.1735, 0.29", "17.0892, -79.3155, -46.4949, 0.29", "17.4676, -79.4915, -46.6402, 0.37", "17.5287, -79.5256, -46.661, 0.37", "18.2535, -80.0326, -46.9225, 0.22", "18.3155, -80.0786, -46.945, 0.22", "18.7115, -80.3873, -47.0847, 0.52", "18.7599, -80.4339, -47.1021, 0.52", "19.1565, -80.8427, -47.2077, 0.52", "19.858, -81.5575, -47.3378, 0.22", "19.9074, -81.6067, -47.3436, 0.22", "20.13, -81.8302, -47.3695, 0.37", "20.5266, -82.2282, -47.4146, 0.22", "21.3295, -83.0343, -47.49, 0.96", "21.3795, -83.0859, -47.4922, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "16.2319, -78.9925, -46.1735, 0.37", "17.2831, -80.668, -47.5949, 0.37", "17.924, -81.8842, -48.5826, 0.66", "18.2045, -82.4945, -49.0496, 0.88", "18.4728, -83.1727, -49.5328, 1.18", "19.1993, -85.3278, -50.9654, 0.44", "19.3747, -85.9165, -51.3258, 0.29", "19.5416, -86.8525, -51.8141, 0.88", "19.606, -87.4, -52.05, 1.11", "19.6784, -88.1036, -52.2916, 0.66", "19.7607, -89.0284, -52.4911, 0.37", "19.8619, -89.8847, -52.4989, 0.52", "19.8975, -90.0506, -52.4863, 0.52", "20.2367, -91.0548, -52.3536, 0.59", "20.5025, -91.6912, -52.2455, 0.66", "20.5679, -91.83, -52.2083, 0.66", "20.9428, -92.6297, -51.9509, 0.37", "21.3028, -93.5414, -51.4934, 0.37", "21.5546, -94.2329, -51.0787, 0.37", "21.8123, -94.9582, -50.6041, 0.96", "22.2271, -96.0498, -49.843, 1.25", "22.639, -97.0031, -49.174, 0.96", "23.6901, -99.3003, -47.4363, 0.52", "24.1373, -100.237, -46.6971, 0.59", "24.4163, -100.793, -46.2498, 0.74", "24.7868, -101.485, -45.7048, 0.74", "25.4266, -102.579, -44.9368, 0.29", "26.0368, -103.54, -44.3284, 0.66", "26.0797, -103.609, -44.3009, 0.66", "26.3901, -104.223, -44.1055, 0.29", "26.6483, -104.882, -43.95, 0.74", "26.8575, -105.596, -43.8469, 0.88", "26.8794, -105.677, -43.8383, 0.88", "27.1599, -106.593, -43.7771, 0.37", "27.4933, -107.571, -43.6898, 0.59", "27.707, -108.138, -43.6275, 0.88", "28.106, -109.107, -43.5067, 0.29", "28.4316, -109.854, -43.3781, 0.22", "28.5855, -110.197, -43.3088, 0.81", "28.8517, -110.76, -43.1755, 1.18", "28.8904, -110.836, -43.1558, 1.18", "29.3344, -111.692, -42.9163, 1.03", "29.8656, -112.886, -42.4916, 0.29", "30.2423, -114.008, -42.0662, 0.22", "30.2655, -114.119, -42.0185, 0.22", "30.3727, -114.963, -41.6372, 0.29", "30.4457, -115.685, -41.309, 1.18", "30.6033, -117.168, -40.581, 0.74", "30.6947, -117.929, -40.202, 0.52", "30.8381, -118.899, -39.6547, 0.29", "30.9616, -119.7, -39.141, 0.52", "31.1027, -120.51, -38.5425, 0.96", "31.3695, -121.59, -37.7204, 1.18", "31.6819, -122.604, -36.8902, 1.03", "32.1178, -123.967, -35.7183, 0.74", "32.5521, -125.431, -34.4748, 0.66", "32.7673, -126.339, -33.7458, 1.03", "33.007, -127.611, -32.8242, 0.88", "33.2507, -129.079, -31.9276, 0.74", "33.4354, -130.195, -31.3887, 0.74", "33.6146, -131.241, -31.0428, 0.74", "33.8345, -132.503, -30.7731, 0.52", "34.0161, -133.524, -30.6185, 0.52", "34.2142, -134.595, -30.4977, 0.44", "34.431, -135.617, -30.4365, 0.74", "34.6181, -136.368, -30.3924, 0.96", "34.8059, -137.049, -30.3488, 0.96", "35.2123, -138.446, -30.2579, 0.37", "35.5898, -139.617, -30.1817, 0.37", "35.6135, -139.684, -30.1771, 0.37", "36.0016, -140.557, -30.1102, 0.66", "36.3117, -141.207, -30.0613, 0.88", "36.7451, -142.034, -30.006, 0.59", "37.2039, -142.807, -29.9777, 0.22", "37.2564, -142.877, -29.9726, 0.22", "37.9408, -143.69, -29.893, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "4.1872, -159.074, -24.4898, 0.52", "5.57286, -158.822, -25.3931, 0.52", "6.26126, -158.761, -25.8802, 0.52", "6.96859, -158.764, -26.5101, 0.66", "7.67179, -158.82, -27.235, 0.59", "8.51982, -158.942, -28.1582, 0.29", "8.76364, -159.002, -28.4644, 0.59", "9.01435, -159.11, -28.8999, 0.59", "9.67048, -159.478, -30.1921, 0.29", "10.0203, -159.718, -30.9291, 0.88", "10.1602, -159.827, -31.2587, 0.88", "10.7695, -160.287, -33.1233, 0.29", "11.0979, -160.5, -34.3876, 0.59", "11.1971, -160.546, -34.9753, 0.44", "11.2035, -160.547, -35.0373, 0.44", "11.2859, -160.501, -36.4578, 0.44", "11.3507, -160.288, -38.9623, 0.29", "11.3521, -160.215, -39.479, 0.29", "11.4045, -159.809, -41.6943, 0.29", "11.4043, -159.797, -41.7642, 0.29", "11.4051, -159.785, -41.8273, 0.44", "11.4087, -159.763, -41.9513, 0.44", "11.438, -159.592, -42.8915, 0.29", "11.4619, -159.443, -43.6808, 0.81", "11.651, -158.234, -49.9226, 0.29", "11.6871, -157.971, -51.2631, 0.22", "11.7167, -157.709, -52.6851, 0.44", "11.7293, -157.269, -55.4662, 0.29", "11.7222, -157.194, -56.0132, 0.88", "11.7157, -157.163, -56.4005, 0.88", "11.7169, -157.16, -56.4628, 0.88", "11.7218, -157.111, -59.5797, 0.29", "11.6487, -157.062, -62.6597, 0.52", "11.6461, -157.061, -62.7214, 0.52", "11.4499, -156.977, -66.7658, 0.22", "11.3974, -156.946, -67.7075, 0.37", "11.2848, -156.868, -69.5233, 0.96", "11.1065, -156.698, -71.8991, 0.22", "11.0739, -156.653, -72.2924, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "4.1872, -159.074, -24.4898, 0.81", "4.24598, -159.701, -24.6587, 0.81", "4.32092, -160.285, -24.8048, 1.03", "4.45916, -161.146, -25.0077, 0.96", "4.61229, -161.912, -25.1798, 0.74", "4.7854, -162.582, -25.2507, 0.29", "4.90483, -162.997, -25.2598, 0.29", "5.00781, -163.303, -25.2346, 0.52", "5.09969, -163.579, -25.1743, 0.52", "5.21257, -163.936, -25.0531, 0.52", "5.57647, -165.175, -24.6003, 0.29", "5.73284, -165.73, -24.4129, 0.52", "5.83431, -166.066, -24.3021, 0.81", "6.05903, -166.701, -24.0869, 0.88", "6.28596, -167.196, -23.934, 1.18", "6.6256, -167.823, -23.7619, 1.4", "7.19662, -168.711, -23.5777, 0.52", "7.78894, -169.486, -23.4344, 0.52", "8.55008, -170.372, -23.3073, 0.52", "9.36342, -171.256, -23.2194, 0.74", "9.4119, -171.308, -23.2157, 0.74", "9.95146, -171.944, -23.2123, 0.29", "10.4853, -172.692, -23.2592, 0.29", "10.9824, -173.539, -23.3781, 0.66", "11.2086, -174.019, -23.4674, 0.88", "11.4551, -174.686, -23.5893, 0.88", "11.8015, -175.718, -23.8206, 0.29", "11.9405, -176.152, -23.9369, 0.88", "11.9592, -176.217, -23.9621, 0.88", "12.0923, -176.662, -24.1764, 1.03", "12.1155, -176.732, -24.2132, 1.03", "12.4815, -177.774, -24.7486, 0.74", "12.8035, -178.517, -25.1115, 0.88", "13.2827, -179.506, -25.5761, 1.18", "13.5297, -179.991, -25.7822, 1.18", "13.8307, -180.551, -25.9917, 0.66", "14.254, -181.295, -26.2241, 0.29", "14.6996, -182.029, -26.3906, 0.29", "15.008, -182.529, -26.4724, 0.59", "15.4033, -183.153, -26.5287, 0.74", "15.7922, -183.782, -26.5737, 0.74", "16.0188, -184.165, -26.5495, 0.74", "16.2294, -184.573, -26.479, 0.88", "16.5485, -185.241, -26.3121, 0.81", "16.9555, -186.052, -26.0652, 0.81", "17.3781, -186.837, -25.7847, 0.59", "18.191, -188.235, -25.2368, 0.37", "18.5777, -188.842, -24.9826, 0.52", "18.927, -189.323, -24.7774, 0.44", "19.2806, -189.73, -24.6109, 0.52", "19.387, -189.836, -24.5752, 0.52", "19.8007, -190.208, -24.5372, 0.37", "19.9118, -190.313, -24.5556, 0.37", "20.3201, -190.778, -24.6318, 0.81", "20.5356, -191.161, -24.7002, 0.96", "20.5557, -191.218, -24.7154, 0.96", "20.6277, -191.577, -24.8241, 0.81", "20.7009, -192.324, -25.1019, 0.52", "20.7314, -192.829, -25.2988, 0.52", "20.7775, -193.714, -25.6517, 0.29", "20.8353, -194.623, -26.0065, 0.74", "20.8829, -195.249, -26.2452, 0.88", "20.9852, -196.151, -26.5339, 0.52", "21.1243, -197.056, -26.7535, 0.52", "21.2532, -197.715, -26.8432, 0.74", "21.4091, -198.341, -26.8611, 0.44", "21.45, -198.485, -26.8525, 0.44", "21.7629, -199.626, -26.7197, 0.44", "21.9191, -200.312, -26.5857, 0.22", "22.0057, -200.978, -26.4373, 0.22", "22.0148, -201.477, -26.3571, 0.74", "22.0106, -201.547, -26.3515, 0.74", "21.944, -202.118, -26.3518, 0.96", "21.9314, -202.189, -26.3591, 0.96", "21.8394, -202.858, -26.4451, 0.96", "21.7951, -203.991, -26.6611, 0.44", "21.8219, -204.58, -26.7308, 0.52", "21.8292, -204.649, -26.7356, 0.52", "21.9048, -205.226, -26.7692, 0.81", "22.0319, -206.022, -26.829, 0.74", "22.2481, -207.156, -26.9182, 0.37", "22.5093, -208.599, -27.0033, 0.37", "22.5945, -209.137, -27.0083, 1.18", "22.7337, -210.127, -26.9869, 0.96", "22.8657, -211.191, -26.9367, 0.52", "22.9921, -212.411, -26.8504, 0.52", "23.1256, -213.781, -26.7119, 0.74", "23.2929, -215.212, -26.5844, 0.81", "23.3043, -215.29, -26.5732, 0.81", "23.4177, -215.915, -26.4182, 1.03", "23.4328, -215.992, -26.3927, 1.03", "23.5993, -216.695, -26.1354, 0.52", "23.7825, -217.365, -25.9065, 0.37", "23.9717, -218.009, -25.7339, 0.88", "24.1744, -218.705, -25.5586, 0.96", "24.341, -219.242, -25.4275, 0.74", "24.5517, -219.873, -25.2939, 0.22", "24.7974, -220.503, -25.1695, 0.22", "25.07, -221.021, -25.0822, 0.74", "25.3175, -221.366, -25.0365, 1.03", "25.6779, -221.756, -25.0016, 1.03", "26.2146, -222.205, -24.9344, 0.59", "27.0267, -222.786, -24.8224, 0.37", "27.8564, -223.346, -24.6975, 0.22", "28.461, -223.776, -24.5992, 0.81", "28.9287, -224.138, -24.5256, 0.81", "29.7171, -224.835, -24.4122, 0.29", "30.0921, -225.2, -24.3668, 0.59", "30.4525, -225.594, -24.3478, 0.74", "30.9541, -226.231, -24.3414, 0.74", "31.3757, -226.825, -24.3721, 0.52", "32.0314, -227.798, -24.5685, 0.22", "32.3503, -228.309, -24.7332, 0.22", "32.5693, -228.674, -24.8653, 0.74", "32.8406, -229.163, -25.0578, 0.74", "33.4464, -230.342, -25.5511, 0.22", "34.008, -231.624, -26.085, 0.81", "34.2076, -232.166, -26.2933, 0.81", "34.5151, -233.109, -26.6048, 0.22", "34.7497, -233.887, -26.8082, 0.22", "34.8458, -234.225, -26.8764, 0.81", "34.9809, -234.729, -26.9411, 1.03", "35.3035, -235.908, -27.0007, 0.29", "35.4238, -236.336, -27.0237, 0.29", "35.693, -237.319, -27.0776, 0.29", "35.9193, -238.166, -27.1052, 0.15", "36.0042, -238.508, -27.1151, 0.52", "36.0772, -238.794, -27.1238, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-24.399, -73.8795, 7.29555, 0.96", "-24.4243, -74.5267, 6.9046, 0.96", "-24.4593, -75.2123, 6.51836, 0.96", "-24.5071, -75.982, 6.12452, 0.96", "-24.5643, -76.7813, 5.75071, 0.81", "-24.6468, -77.5825, 5.37786, 0.66", "-24.73, -78.2603, 5.07474, 0.66", "-24.7416, -78.3376, 5.04431, 0.66", "-24.826, -78.8439, 4.85177, 0.88", "-24.8762, -79.1787, 4.72392, 1.03", "-24.9433, -80.0329, 4.33375, 0.74", "-24.9354, -80.5469, 4.05538, 0.74", "-24.8752, -81.0914, 3.71477, 0.74", "-24.7489, -81.7659, 3.26021, 0.96", "-24.639, -82.1639, 2.97427, 1.03", "-24.4664, -82.6986, 2.60598, 1.03", "-24.2428, -83.3772, 2.19933, 0.88", "-24.1196, -83.8352, 1.96958, 0.88", "-24.1019, -83.9823, 1.92256, 0.88", "-24.1211, -84.358, 1.92293, 0.59", "-24.323, -85.0988, 2.12197, 0.52", "-24.5885, -85.6607, 2.39793, 0.74", "-24.8126, -86.0301, 2.67536, 0.66", "-25.1251, -86.4812, 3.08003, 0.52", "-25.6065, -87.147, 3.75096, 0.52", "-25.8444, -87.4702, 4.09886, 0.74", "-26.1515, -87.8895, 4.54746, 1.03", "-26.5443, -88.454, 5.09553, 1.03", "-26.8228, -88.8715, 5.45238, 1.03", "-27.2186, -89.502, 5.90711, 0.74", "-27.4878, -89.9368, 6.14879, 0.66", "-27.76, -90.4365, 6.39086, 0.52", "-27.9704, -90.9055, 6.5858, 0.52", "-27.9847, -90.9426, 6.59833, 0.52", "-28.1034, -91.3416, 6.73498, 0.66", "-28.1905, -91.7404, 6.86743, 0.81", "-28.2882, -92.2962, 7.07522, 0.52", "-28.4251, -92.9785, 7.30969, 0.52", "-28.4693, -93.1145, 7.33951, 0.81", "-28.6853, -93.5452, 7.37931, 0.81", "-28.9424, -93.8865, 7.37093, 0.96", "-29.4051, -94.3079, 7.30222, 1.03", "-30.1051, -94.7555, 7.19831, 1.18", "-30.9829, -95.2086, 7.08531, 0.81", "-31.4139, -95.4016, 7.03245, 0.88", "-31.9501, -95.6103, 6.98163, 1.18", "-32.5026, -95.8199, 6.9527, 1.55", "-33.2637, -96.142, 6.97895, 0.66", "-33.5854, -96.3193, 7.03333, 0.66", "-33.8495, -96.5277, 7.11812, 0.52", "-34.2771, -96.9818, 7.29872, 0.52", "-34.582, -97.4218, 7.45962, 0.37", "-34.8672, -98.0262, 7.68943, 0.37", "-35.0174, -98.4773, 7.85119, 0.74", "-35.1572, -99.0086, 8.05249, 1.25", "-35.1654, -99.0404, 8.06567, 1.25", "-35.297, -99.4998, 8.26677, 1.18", "-35.5274, -100.157, 8.57478, 1.03", "-35.7042, -100.552, 8.76195, 0.66", "-35.9415, -101.006, 8.97349, 0.37", "-36.2817, -101.578, 9.21989, 0.37", "-36.5341, -101.963, 9.37476, 0.44", "-36.5618, -102.0, 9.38878, 0.44", "-36.9395, -102.433, 9.53598, 0.37", "-37.2248, -102.751, 9.63763, 0.59", "-37.4031, -102.953, 9.69379, 0.59", "-37.7109, -103.327, 9.77507, 0.44", "-37.9633, -103.649, 9.83519, 0.66", "-38.2435, -104.016, 9.90124, 0.88", "-38.5518, -104.436, 9.97207, 0.88", "-38.9896, -105.026, 10.0623, 0.66", "-39.3348, -105.494, 10.1184, 0.96", "-39.5933, -105.831, 10.155, 1.18", "-40.1474, -106.496, 10.2501, 0.88", "-40.3741, -106.732, 10.2997, 0.96", "-40.9086, -107.181, 10.4505, 0.59", "-40.9384, -107.198, 10.4615, 0.59", "-41.5097, -107.427, 10.7357, 0.59", "-41.9964, -107.556, 11.0018, 0.52", "-42.3413, -107.622, 11.2081, 0.52", "-42.6783, -107.699, 11.4509, 0.74", "-43.0166, -107.794, 11.7298, 0.96", "-43.3445, -107.904, 12.0068, 0.81", "-43.9195, -108.146, 12.4959, 0.96", "-44.2964, -108.337, 12.804, 0.96", "-44.8665, -108.659, 13.2688, 0.44", "-45.2155, -108.877, 13.5458, 0.44", "-45.6009, -109.133, 13.8312, 0.66", "-45.9387, -109.346, 14.0517, 0.59", "-46.3479, -109.598, 14.296, 0.59", "-46.3874, -109.621, 14.3165, 0.59", "-46.7344, -109.811, 14.4567, 0.88", "-47.3687, -110.195, 14.691, 0.96", "-47.8434, -110.52, 14.8502, 0.37", "-47.91, -110.577, 14.8753, 0.37", "-48.3165, -111.027, 15.052, 0.37", "-48.604, -111.435, 15.1973, 0.29", "-48.8422, -111.882, 15.3407, 0.29", "-48.9984, -112.238, 15.4507, 0.52", "-49.3231, -112.997, 15.6926, 1.03", "-49.4961, -113.368, 15.8173, 1.25", "-49.6492, -113.657, 15.9173, 1.25", "-49.9784, -114.145, 16.1117, 0.88", "-50.3389, -114.555, 16.2955, 0.74", "-50.7559, -114.928, 16.4664, 0.74", "-51.1131, -115.19, 16.5827, 0.96", "-51.6189, -115.526, 16.7384, 0.66", "-52.062, -115.802, 16.8435, 0.74", "-52.3308, -115.971, 16.896, 1.03", "-52.7144, -116.231, 16.9559, 1.4", "-52.7444, -116.254, 16.9597, 1.4", "-53.0273, -116.53, 16.9861, 1.4", "-53.5285, -117.189, 17.0226, 0.52", "-53.7757, -117.602, 17.0262, 0.81", "-53.938, -117.9, 17.0308, 0.88", "-54.0932, -118.21, 17.042, 0.52", "-54.3297, -118.668, 17.0675, 0.44", "-54.533, -119.061, 17.0982, 0.44", "-54.7225, -119.388, 17.1528, 0.44", "-54.9586, -119.697, 17.2165, 0.66", "-55.0178, -119.755, 17.2428, 0.66", "-55.2602, -119.935, 17.3832, 0.88", "-55.307, -119.962, 17.4147, 0.88", "-55.6029, -120.133, 17.6337, 0.96", "-55.771, -120.246, 17.7638, 0.66", "-56.1846, -120.557, 18.0819, 0.52", "-56.4696, -120.784, 18.2922, 0.44", "-56.6831, -120.97, 18.4389, 0.74", "-56.96, -121.225, 18.6124, 0.81", "-57.3142, -121.602, 18.8075, 0.52", "-57.3454, -121.638, 18.8193, 0.52", "-57.5598, -121.894, 18.8642, 0.81", "-57.8815, -122.312, 18.9054, 0.96", "-58.0634, -122.568, 18.915, 1.11", "-58.3339, -122.951, 18.9271, 0.81", "-58.706, -123.441, 18.9316, 0.66", "-58.7294, -123.468, 18.9315, 0.66", "-59.105, -123.844, 18.9536, 0.52", "-59.4792, -124.124, 19.0218, 0.37", "-59.767, -124.273, 19.142, 0.29", "-60.2092, -124.437, 19.4237, 0.66", "-60.453, -124.519, 19.6182, 0.74", "-60.9179, -124.72, 20.0523, 0.29", "-61.1253, -124.832, 20.2659, 0.66", "-61.4038, -125.03, 20.5639, 0.88", "-61.6733, -125.265, 20.8465, 0.88", "-61.8266, -125.415, 21.0021, 0.88", "-62.29, -125.878, 21.4195, 0.58", "-62.6081, -126.19, 21.6558, 0.81", "-62.9015, -126.474, 21.8516, 1.11", "-63.1749, -126.733, 22.0103, 0.74", "-63.4844, -127.023, 22.1898, 0.88", "-63.795, -127.283, 22.3658, 0.81", "-64.1064, -127.507, 22.5337, 0.74", "-64.6065, -127.837, 22.8129, 0.44", "-65.0701, -128.129, 23.0765, 0.74", "-65.4409, -128.347, 23.2946, 0.88", "-65.9139, -128.587, 23.6382, 0.52", "-66.167, -128.709, 23.8643, 0.59", "-66.6112, -128.921, 24.3259, 0.59", "-66.6338, -128.933, 24.3521, 0.59", "-66.8522, -129.085, 24.6186, 0.66", "-67.48, -129.677, 25.3226, 0.59", "-67.7702, -130.029, 25.6231, 0.59", "-67.9696, -130.3, 25.7882, 0.81", "-68.2791, -130.745, 25.9925, 0.52", "-68.6302, -131.242, 26.1578, 0.66", "-69.0503, -131.834, 26.2766, 0.44", "-69.3136, -132.212, 26.3033, 1.11", "-69.8272, -132.936, 26.3294, 0.59", "-69.851, -132.97, 26.3314, 0.59", "-70.1332, -133.364, 26.3685, 0.44", "-70.2656, -133.536, 26.397, 0.44", "-70.6714, -134.028, 26.5596, 0.44", "-70.9372, -134.307, 26.7096, 0.37", "-71.2212, -134.555, 26.9209, 0.29", "-71.4482, -134.74, 27.1358, 0.66", "-71.6596, -134.89, 27.3722, 1.03", "-71.9181, -135.049, 27.6758, 1.03", "-72.1109, -135.148, 27.9041, 0.81", "-72.4484, -135.329, 28.288, 0.52", "-72.8311, -135.585, 28.6863, 0.66", "-73.0478, -135.778, 28.8964, 0.29", "-73.158, -135.895, 28.9934, 0.59", "-73.3683, -136.12, 29.1486, 0.81", "-73.6238, -136.371, 29.315, 0.81", "-73.9682, -136.643, 29.5077, 0.52", "-74.4184, -136.934, 29.7159, 0.74", "-74.4494, -136.951, 29.7305, 0.74", "-74.9189, -137.184, 29.9539, 0.44", "-75.2536, -137.343, 30.1079, 0.74", "-75.6209, -137.518, 30.2724, 1.11", "-76.1645, -137.793, 30.5094, 0.59", "-76.4889, -137.987, 30.6455, 0.66", "-76.8144, -138.23, 30.7752, 0.81", "-77.1911, -138.594, 30.9149, 0.52", "-77.4313, -138.865, 30.9992, 0.66", "-77.644, -139.118, 31.0732, 0.66", "-77.8658, -139.36, 31.1349, 0.44", "-77.896, -139.389, 31.1421, 0.44", "-78.3802, -139.743, 31.2514, 0.37", "-78.4623, -139.782, 31.2713, 0.37", "-79.0231, -139.898, 31.4239, 0.37", "-79.548, -139.903, 31.547, 0.29", "-79.865, -139.874, 31.6152, 0.37", "-80.1963, -139.833, 31.6973, 0.44", "-80.6553, -139.74, 31.8082, 0.37", "-81.2814, -139.59, 31.9618, 0.29", "-81.9716, -139.372, 32.1401, 0.22", "-82.1093, -139.322, 32.1843, 0.44", "-82.7522, -139.079, 32.3596, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-24.399, -73.8795, 7.29555, 0.74", "-25.0724, -74.4307, 7.49523, 0.74", "-25.8944, -75.1077, 7.73842, 0.44", "-26.705, -75.7634, 7.97546, 0.59", "-27.7218, -76.5577, 8.22082, 0.37", "-28.5009, -77.1735, 8.4076, 0.59", "-28.8372, -77.4365, 8.48738, 0.88", "-28.9138, -77.4942, 8.50237, 0.88", "-29.2429, -77.7343, 8.55066, 1.11", "-29.9889, -78.1856, 8.6271, 0.88", "-30.9107, -78.6013, 8.69439, 0.37", "-31.4853, -78.7978, 8.71964, 0.66", "-32.3818, -79.045, 8.71414, 0.81", "-33.2121, -79.265, 8.69233, 0.74", "-34.3674, -79.5536, 8.6473, 0.88", "-35.1815, -79.7496, 8.61592, 0.74", "-36.431, -80.0691, 8.5123, 0.52", "-37.9154, -80.526, 8.37743, 0.52", "-38.8061, -80.8666, 8.34204, 0.74", "-38.8846, -80.9049, 8.34895, 0.74", "-39.568, -81.3738, 8.8941, 0.88", "-40.365, -82.0337, 10.0727, 1.03", "-40.8193, -82.4347, 10.9231, 1.18", "-41.4522, -82.9876, 12.2772, 0.96", "-42.3011, -83.7037, 14.232, 1.18", "-44.7696, -85.6704, 19.9589, 0.66", "-45.1107, -85.9495, 20.8211, 0.66", "-45.4664, -86.2508, 21.7463, 0.81", "-45.8147, -86.5469, 22.5918, 0.81", "-45.8599, -86.5879, 22.6889, 0.81", "-46.3989, -87.1663, 23.7465, 0.88", "-47.271, -88.1987, 25.4929, 0.88", "-47.7301, -88.8401, 26.72, 0.74", "-47.9179, -89.1344, 27.3161, 0.96", "-48.6981, -90.4474, 29.9528, 0.44", "-49.3568, -91.6059, 32.2597, 1.25", "-50.2237, -93.2348, 35.4327, 0.59", "-50.7724, -94.2008, 37.2496, 0.96", "-50.8002, -94.2485, 37.3339, 0.96", "-51.1998, -94.9052, 38.3413, 0.59", "-51.6608, -95.5906, 39.1615, 0.52", "-52.5949, -96.9147, 40.3941, 0.81", "-53.7752, -98.6526, 41.6606, 0.44", "-54.3791, -99.5508, 42.2514, 0.59", "-54.8996, -100.375, 42.8205, 0.74", "-55.4165, -101.271, 43.5342, 0.44", "-55.9668, -102.316, 44.4333, 0.44", "-56.5484, -103.507, 45.4676, 0.29", "-56.9957, -104.59, 46.4369, 0.44", "-57.4753, -105.964, 47.8112, 0.81", "-57.9214, -107.535, 49.5793, 1.03", "-57.9319, -107.588, 49.6469, 1.03", "-64.1265, -116.438, 58.0687, 1.03", "-71.0599, -125.068, 66.1605, 1.03", "-77.2134, -135.227, 72.7825, 1.03", "-85.1648, -144.628, 78.6912, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-2.97612, -39.8908, -2.51306, 1.4", "-2.19863, -40.6632, -2.7681, 1.4", "-0.964368, -41.8614, -3.32819, 1.11", "0.466105, -43.3835, -4.27278, 0.96", "1.50837, -44.6307, -5.21296, 0.96", "2.28467, -45.7082, -6.14689, 1.11", "3.12375, -46.9712, -7.27642, 1.25", "4.1351, -48.6484, -8.87239, 1.18", "5.18812, -50.6354, -10.745, 1.18", "5.91688, -52.3048, -12.2126, 1.03", "6.67257, -54.5332, -13.9417, 0.88", "6.95059, -55.6229, -14.6339, 0.96", "7.35159, -57.644, -15.6477, 1.11", "7.66747, -59.7921, -16.4426, 1.11", "7.82027, -61.2964, -16.7941, 0.96", "7.92003, -63.3024, -17.0746, 1.11", "7.85545, -66.0803, -17.3204, 1.18", "7.72144, -67.4493, -17.446, 1.18", "7.47883, -68.9855, -17.6007, 1.18", "6.91841, -71.9092, -17.9292, 0.96", "6.51223, -73.8604, -18.176, 1.03", "5.84648, -76.8581, -18.6331, 1.03", "5.32113, -79.0206, -19.024, 1.33", "4.93989, -80.6049, -19.358, 1.55", "4.65389, -81.9049, -19.6921, 1.33", "4.24626, -83.9753, -20.3065, 1.03", "3.98571, -85.7099, -20.836, 1.33", "3.82021, -87.2475, -21.3073, 1.33", "3.54378, -90.1581, -22.146, 1.25", "3.2022, -93.2959, -23.0701, 1.03", "2.96696, -95.0757, -23.6027, 0.96", "2.58694, -97.317, -24.2794, 0.96", "2.29003, -98.6966, -24.6882, 0.96", "1.79643, -100.733, -25.3207, 0.96", "1.20127, -102.635, -25.9188, 1.11", "0.808512, -103.556, -26.198, 1.25", "-0.0858777, -105.15, -26.7336, 1.4", "-0.81798, -106.1, -27.1119, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.97612, -39.8908, -2.51306, 1.11", "-3.75779, -42.0916, -0.344741, 1.11", "-3.86948, -42.6039, -0.00433516, 1.11", "-4.01078, -43.4366, 0.457603, 1.03", "-4.15146, -44.7177, 1.02601, 1.11", "-4.1551, -44.7773, 1.04643, 1.11", "-4.20741, -45.8549, 1.34748, 1.11", "-4.19122, -47.0795, 1.52158, 1.11", "-4.19025, -47.1437, 1.53029, 1.11", "-4.1787, -48.2447, 1.6658, 1.11", "-4.17166, -49.6112, 1.79705, 1.03", "-4.17993, -50.4927, 1.86617, 1.33", "-4.23436, -51.5415, 1.93356, 1.18", "-4.41938, -52.8625, 1.99628, 0.88", "-4.43191, -52.926, 1.99837, 0.88", "-4.84229, -54.3595, 2.04622, 0.88", "-5.25633, -55.4837, 2.07815, 0.88", "-5.69514, -56.4608, 2.09563, 1.11", "-6.35323, -57.7697, 2.17075, 0.88", "-6.3804, -57.8192, 2.17703, 0.88", "-6.86888, -58.7374, 2.34656, 0.88", "-6.95695, -58.9047, 2.39047, 0.88", "-7.27899, -59.6903, 2.63926, 0.96", "-7.72347, -61.2918, 3.1833, 0.81", "-7.81454, -61.7734, 3.34401, 1.18", "-7.93754, -62.5763, 3.59244, 0.96", "-7.95152, -62.699, 3.62523, 0.96", "-8.04599, -63.8573, 3.89461, 0.74", "-8.08139, -64.6679, 3.98789, 0.96", "-8.10236, -65.3598, 3.97065, 1.03", "-8.10365, -65.4857, 3.9509, 1.03", "-8.0994, -66.3072, 3.74716, 1.33", "-8.07551, -67.1421, 3.472, 1.55", "-8.0148, -68.4111, 2.96455, 1.25", "-7.90571, -69.3612, 2.549, 1.4", "-7.69942, -70.6945, 1.96237, 1.55", "-7.53461, -71.6485, 1.54473, 1.11", "-7.29745, -72.8562, 1.00824, 0.74", "-7.28556, -72.9222, 0.981253, 0.74", "-7.15789, -73.7597, 0.672396, 0.74", "-7.08345, -74.3574, 0.520956, 0.96", "-7.07598, -74.4406, 0.511997, 0.96", "-7.01835, -75.5664, 0.45933, 1.11", "-6.93345, -76.5079, 0.465823, 1.11", "-6.78804, -77.7732, 0.392811, 1.25", "-6.54189, -79.6956, 0.206417, 0.96", "-6.32379, -81.0463, 0.0123745, 0.96", "-6.1399, -82.0228, -0.157411, 1.11", "-5.71298, -83.9828, -0.545568, 1.11", "-5.26145, -85.8438, -0.987412, 1.25", "-5.12498, -86.3966, -1.13649, 1.55", "-4.87913, -87.5172, -1.53088, 1.47", "-4.86913, -87.5772, -1.54829, 1.47", "-4.81212, -88.2808, -1.68106, 0.88", "-4.86286, -89.2243, -1.67014, 0.59", "-4.97004, -90.1872, -1.46345, 0.74", "-5.07081, -90.8678, -1.26519, 1.03", "-5.29529, -92.2018, -0.831072, 1.03", "-5.39857, -92.7855, -0.63947, 1.25", "-5.63873, -94.1232, -0.192477, 1.25", "-5.8197, -95.1422, 0.153031, 0.74", "-5.96898, -95.9846, 0.388467, 0.74", "-6.10537, -96.8514, 0.497838, 0.96", "-6.11183, -96.9071, 0.493622, 0.96", "-6.17648, -97.8979, 0.298163, 1.18", "-6.17697, -97.9684, 0.276925, 1.18", "-6.11564, -99.2283, -0.133853, 1.33", "-5.98678, -100.734, -0.592566, 1.03", "-5.8727, -101.967, -0.921276, 0.88", "-5.83582, -102.432, -1.02956, 1.33", "-5.78493, -103.379, -1.21499, 1.33", "-5.77126, -104.441, -1.36969, 1.55", "-5.83466, -105.487, -1.43771, 1.33", "-5.99776, -106.436, -1.44292, 1.11", "-6.28794, -107.447, -1.42566, 0.66", "-6.67305, -108.435, -1.40117, 0.66", "-7.1376, -109.38, -1.36961, 0.74", "-7.69558, -110.371, -1.32703, 0.59", "-8.07071, -111.033, -1.28573, 0.88", "-8.39721, -111.707, -1.23694, 0.96", "-8.60802, -112.367, -1.185, 0.88", "-8.61289, -112.429, -1.17422, 0.88", "-8.5159, -113.316, -0.963137, 0.74", "-8.34706, -114.163, -0.743972, 1.25", "-8.15727, -115.084, -0.4876, 1.25", "-7.99258, -116.108, -0.196248, 1.03", "-7.87071, -117.825, 0.287509, 0.74", "-7.89568, -118.798, 0.55464, 0.59", "-7.98942, -119.37, 0.701873, 0.81", "-8.25644, -120.169, 0.872185, 0.88", "-8.67989, -121.094, 1.01838, 1.03", "-9.0501, -121.876, 1.08652, 1.11", "-9.12845, -122.053, 1.07614, 1.11", "-9.45641, -122.929, 0.92678, 0.96", "-9.76501, -123.925, 0.682463, 1.11", "-10.0015, -124.927, 0.37783, 0.96", "-10.2642, -126.394, -0.11947, 1.18", "-10.5238, -127.966, -0.599302, 1.03", "-10.7879, -129.58, -1.05516, 0.96", "-10.8028, -129.692, -1.08361, 0.96", "-10.9155, -130.866, -1.31955, 0.96", "-10.9669, -131.724, -1.38798, 1.4", "-10.9892, -133.399, -1.28076, 1.11", "-10.986, -133.482, -1.2649, 1.11", "-10.9167, -134.457, -1.02649, 1.25", "-10.8081, -135.726, -0.721907, 1.11", "-10.6537, -137.121, -0.412214, 0.88", "-10.548, -137.887, -0.273143, 1.18", "-10.3242, -139.103, -0.125344, 1.25", "-10.1851, -139.934, -0.0360656, 1.4", "-10.1758, -140.004, -0.0304873, 1.4", "-10.0726, -141.233, 0.0467917, 1.03", "-10.0714, -141.424, 0.0534826, 1.03", "-10.1544, -142.47, 0.102401, 0.74", "-10.3226, -143.367, 0.201788, 0.74", "-10.5433, -144.064, 0.312906, 0.96", "-10.9776, -145.095, 0.509675, 0.88", "-11.4748, -146.022, 0.716097, 0.88", "-11.9533, -146.812, 0.903474, 0.88", "-12.6692, -147.845, 1.16932, 1.11", "-13.1792, -148.566, 1.35514, 1.25", "-13.6471, -149.255, 1.51746, 1.4", "-13.7796, -149.463, 1.54842, 1.4", "-14.0873, -150.053, 1.59402, 1.4", "-14.16, -150.231, 1.5727, 1.4", "-14.47, -151.289, 1.2354, 1.25", "-14.6429, -152.092, 0.911167, 1.18", "-14.7371, -152.809, 0.559085, 0.96", "-14.8246, -153.827, 0.008829, 0.96", "-14.914, -155.546, -1.06456, 0.81", "-14.9412, -156.987, -2.08465, 0.81", "-14.9521, -157.631, -2.58699, 1.03", "-15.0075, -159.154, -3.78376, 1.03", "-15.0115, -159.227, -3.83952, 1.03", "-15.1063, -160.502, -4.73928, 1.55", "-15.254, -162.026, -5.63947, 0.88", "-15.4257, -163.467, -6.40129, 0.81", "-15.5876, -164.586, -6.97233, 0.81", "-15.7254, -165.408, -7.36132, 0.96", "-15.8684, -166.27, -7.73602, 0.96", "-16.0073, -167.146, -8.05615, 0.74", "-16.2209, -168.582, -8.53131, 1.25", "-16.3658, -169.964, -8.97755, 0.81", "-16.3711, -170.025, -8.99626, 0.81", "-16.4739, -171.021, -9.21299, 0.81", "-16.5804, -171.8, -9.31136, 1.18", "-16.5986, -171.92, -9.31294, 1.18", "-16.7331, -172.759, -9.23518, 1.18", "-16.9382, -174.223, -9.02102, 0.81", "-17.1317, -175.658, -8.81376, 0.81", "-17.2334, -176.436, -8.69883, 1.11", "-17.4056, -177.741, -8.5318, 1.11", "-17.4222, -177.876, -8.51202, 1.11", "-17.5484, -179.01, -8.24163, 0.96", "-17.5936, -179.564, -8.07457, 1.25", "-17.5982, -179.624, -8.0554, 1.25", "-17.6809, -180.664, -7.68402, 1.25", "-17.8609, -182.332, -7.05851, 1.03", "-18.1101, -184.332, -6.29911, 0.81", "-18.1938, -185.023, -6.0432, 1.11", "-18.3152, -186.222, -5.64598, 0.96", "-18.3335, -186.418, -5.5919, 0.96", "-18.4199, -187.44, -5.36751, 0.81", "-18.427, -187.524, -5.36012, 0.81", "-18.5605, -188.952, -5.37125, 0.96", "-18.6397, -189.87, -5.38006, 1.18", "-18.7136, -190.855, -5.39073, 1.03", "-18.7195, -190.92, -5.3914, 1.03", "-18.8524, -192.051, -5.40116, 0.74", "-19.0722, -193.578, -5.43472, 0.74", "-19.2059, -194.412, -5.49598, 0.81", "-19.2184, -194.494, -5.50499, 0.81", "-19.31, -195.301, -5.61798, 0.81", "-19.391, -196.507, -5.81096, 0.81", "-19.3872, -197.918, -6.09433, 1.03", "-19.3349, -199.123, -6.36953, 1.03", "-19.3329, -199.184, -6.38378, 1.03", "-19.338, -200.013, -6.5692, 1.25", "-19.3628, -200.795, -6.74068, 0.96", "-19.4528, -201.838, -6.93191, 0.81", "-19.5552, -202.505, -7.02836, 1.11", "-19.7285, -203.502, -7.13885, 1.33", "-19.9085, -204.471, -7.25541, 1.33", "-19.9211, -204.541, -7.26576, 1.33", "-20.125, -205.868, -7.4753, 0.74", "-20.2539, -207.256, -7.73086, 0.96", "-20.2485, -208.416, -7.97244, 0.96", "-20.2374, -208.529, -7.99311, 0.96", "-20.0434, -209.709, -8.16911, 0.96", "-19.8479, -210.768, -8.23587, 0.81", "-19.6386, -211.906, -8.20891, 0.66", "-19.4798, -213.02, -8.09056, 0.66", "-19.3909, -214.082, -7.9231, 1.33", "-19.376, -214.97, -7.72254, 1.33", "-19.4664, -216.569, -7.25448, 1.11", "-19.5663, -217.712, -6.88494, 1.18", "-19.6335, -218.351, -6.67287, 1.4", "-19.7168, -219.34, -6.38829, 1.11", "-19.7336, -220.501, -6.14206, 0.59", "-19.6759, -221.255, -6.03477, 0.52", "-19.5013, -222.288, -5.9632, 0.88", "-19.2558, -223.308, -5.95084, 1.18", "-18.975, -224.416, -5.98958, 1.03", "-18.614, -225.817, -6.10537, 0.96", "-18.2916, -227.206, -6.31374, 0.81", "-18.14, -228.026, -6.46549, 1.11", "-18.0377, -228.979, -6.6738, 1.69", "-17.9957, -230.045, -6.94462, 1.18", "-17.9997, -230.115, -6.95986, 1.18", "-18.1506, -231.222, -7.12061, 0.59", "-18.1605, -231.284, -7.11554, 0.59", "-18.2881, -232.218, -6.83011, 1.03", "-18.299, -232.324, -6.78192, 1.03", "-18.3415, -233.689, -6.06723, 1.25", "-18.3353, -234.274, -5.75264, 1.25", "-18.2874, -235.669, -5.00242, 0.96", "-18.2701, -236.465, -4.61917, 0.66", "-18.2652, -237.174, -4.32743, 0.66", "-18.2779, -237.79, -4.13841, 0.37", "-18.3214, -238.633, -4.06064, 0.52", "-18.4338, -239.614, -4.10956, 0.81", "-18.5949, -240.393, -4.24766, 1.11", "-18.7972, -241.165, -4.45747, 1.4", "-19.0639, -242.122, -4.76273, 1.4", "-19.5655, -243.789, -5.35605, 0.81", "-19.8309, -244.731, -5.7259, 0.66", "-20.0294, -245.634, -6.10033, 0.52", "-20.1753, -246.868, -6.60314, 0.37", "-20.2001, -247.554, -6.87459, 0.88", "-20.1996, -247.614, -6.89494, 0.88", "-20.2044, -248.247, -7.03161, 1.25", "-20.2436, -248.984, -7.16013, 1.25", "-20.3495, -249.82, -7.26923, 0.88", "-20.6806, -251.232, -7.38826, 0.66", "-21.1136, -252.548, -7.48827, 0.66", "-21.6186, -253.79, -7.591, 0.88", "-22.0326, -254.678, -7.70496, 0.88", "-22.3984, -255.414, -7.85046, 1.11", "-22.7189, -256.084, -8.01084, 1.18", "-22.9436, -256.608, -8.12198, 1.18", "-23.5096, -258.183, -8.45232, 0.88", "-23.886, -259.528, -8.71907, 1.25", "-24.1941, -261.011, -8.9738, 0.74", "-24.3855, -262.229, -9.14425, 0.59", "-24.5482, -263.625, -9.28831, 1.03", "-24.6216, -264.468, -9.31749, 0.74", "-24.6811, -265.432, -9.24508, 0.59", "-24.7, -265.627, -9.21004, 0.59", "-24.8657, -266.617, -8.96859, 0.74", "-24.8846, -266.679, -8.96011, 0.74", "-25.2228, -267.581, -8.98521, 0.59", "-25.2501, -267.65, -8.99224, 0.59", "-25.6873, -268.841, -9.17379, 0.74", "-26.0761, -270.047, -9.39314, 0.59", "-26.4687, -271.616, -9.7301, 0.59", "-26.757, -273.041, -10.0803, 0.59", "-26.8921, -274.051, -10.3656, 0.59", "-26.9612, -274.941, -10.6372, 0.81", "-26.9611, -275.13, -10.7004, 0.81", "-26.887, -275.882, -10.9584, 0.81", "-26.8777, -275.934, -10.9699, 0.81", "-26.7751, -276.845, -11.0499, 0.81", "-26.775, -276.901, -11.0465, 0.81", "-26.8435, -277.855, -10.9179, 0.66", "-26.8476, -277.911, -10.9092, 0.66", "-26.9344, -279.014, -10.7146, 0.66", "-26.9793, -280.367, -10.4752, 0.44", "-26.9819, -282.168, -10.1483, 0.66", "-26.874, -283.724, -9.83056, 0.96", "-26.6943, -285.043, -9.53252, 0.96", "-26.6752, -285.141, -9.5098, 0.96", "-26.3071, -286.417, -9.1958, 0.81", "-26.2625, -286.537, -9.16784, 0.81", "-25.7025, -287.849, -8.93845, 0.74", "-25.6766, -287.908, -8.92743, 0.74", "-25.4624, -288.526, -8.82093, 0.96", "-25.4284, -288.651, -8.81221, 0.96", "-25.2422, -289.717, -8.78195, 0.96", "-25.1516, -290.475, -8.80093, 0.96", "-25.1501, -290.539, -8.8086, 0.96", "-25.1289, -291.505, -8.9317, 0.52", "-25.1077, -292.569, -9.08515, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-34.1034, -56.0625, -10.7711, 0.74", "-34.7083, -55.9409, -10.4478, 0.74", "-34.7626, -55.9369, -10.4049, 0.74", "-35.5083, -55.9628, -9.68501, 0.52", "-35.8982, -55.9957, -9.30167, 0.44", "-36.5499, -56.0586, -8.69311, 0.44", "-37.1814, -56.1225, -8.14546, 0.96", "-38.3467, -56.3042, -7.17789, 0.74", "-39.0563, -56.4401, -6.64753, 0.74", "-39.408, -56.5296, -6.42211, 0.74", "-39.9153, -56.6551, -6.14784, 0.59", "-40.361, -56.7442, -5.95199, 0.52", "-40.9957, -56.8425, -5.73511, 0.52", "-41.4255, -56.8959, -5.62929, 0.88", "-42.1416, -56.9588, -5.46401, 0.59", "-43.2306, -57.0059, -5.15057, 0.96", "-44.4457, -57.0218, -4.73833, 1.33", "-44.9094, -57.0186, -4.55949, 1.33", "-45.6576, -57.0107, -4.2539, 0.44", "-46.0998, -56.9953, -4.07588, 0.44", "-47.058, -56.9397, -3.7333, 0.44", "-47.1065, -56.9372, -3.71995, 0.44", "-47.8781, -56.8805, -3.57425, 0.81", "-48.412, -56.8326, -3.42664, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-34.1034, -56.0625, -10.7711, 0.59", "-35.3106, -57.1063, -11.1882, 0.59", "-35.9531, -57.6969, -11.3644, 0.52", "-36.3355, -58.0496, -11.473, 0.88", "-37.0607, -58.6702, -11.7357, 0.88", "-37.5748, -59.0782, -12.0344, 0.88", "-38.0411, -59.4128, -12.3686, 1.03", "-38.7134, -59.7779, -12.9113, 0.59", "-39.2919, -59.9813, -13.5069, 0.44", "-40.0545, -60.081, -14.399, 0.74", "-41.3365, -59.9585, -16.0804, 0.44", "-41.66, -59.8589, -16.5102, 0.44", "-42.0275, -59.7011, -16.9834, 0.44", "-42.4545, -59.4888, -17.4862, 0.74", "-42.7494, -59.3485, -17.7735, 0.96", "-42.8017, -59.3308, -17.8081, 0.96", "-43.3693, -59.2172, -18.0436, 0.88", "-44.5829, -59.0306, -18.5387, 0.44", "-44.954, -58.9699, -18.6877, 0.44", "-45.0118, -58.9565, -18.7195, 0.44", "-45.4263, -58.8222, -18.9807, 0.44", "-46.0332, -58.5661, -19.4093, 0.44", "-46.428, -58.3511, -19.7012, 0.81", "-46.7845, -58.1076, -19.991, 1.33", "-47.9465, -57.259, -20.992, 1.33", "-48.4307, -56.9161, -21.3974, 1.25", "-48.9916, -56.539, -21.8521, 0.96", "-49.5966, -56.1719, -22.3411, 0.88", "-50.2985, -55.7776, -22.877, 0.74", "-50.8496, -55.4899, -23.2588, 0.74", "-51.6165, -55.1085, -23.7462, 0.66", "-52.0324, -54.9054, -24.0337, 0.52", "-52.7122, -54.5676, -24.5074, 0.29", "-53.1507, -54.3274, -24.8816, 0.37", "-53.1991, -54.2971, -24.9286, 0.37", "-53.9013, -53.7173, -25.7705, 0.88", "-54.1071, -53.4816, -26.1223, 1.25", "-54.3769, -53.1416, -26.694, 1.18", "-54.8968, -52.5292, -27.7951, 0.66", "-54.9243, -52.5012, -27.849, 0.66", "-55.2989, -52.1701, -28.4773, 0.74", "-56.126, -51.568, -29.6431, 0.88", "-56.7518, -51.1679, -30.4583, 0.52", "-57.2503, -50.9243, -30.9923, 0.88", "-57.8291, -50.7473, -31.4525, 1.03", "-58.4705, -50.6145, -31.8927, 1.33", "-59.0655, -50.5434, -32.2255, 0.88", "-59.1258, -50.5372, -32.2548, 0.88", "-59.8992, -50.4547, -32.6632, 0.59", "-60.8758, -50.3482, -33.2816, 0.52", "-60.9844, -50.3339, -33.36, 0.52", "-61.3152, -50.2671, -33.6203, 0.81", "-62.3761, -49.9179, -34.6305, 0.29", "-62.4188, -49.9022, -34.6772, 0.29", "-62.7735, -49.7603, -35.1907, 0.29", "-62.9095, -49.7074, -35.4159, 0.88", "-63.0637, -49.6718, -35.7065, 1.18", "-63.7848, -49.6046, -37.1528, 0.37", "-64.2311, -49.6277, -38.028, 0.74", "-64.8446, -49.7462, -39.2292, 1.03", "-64.875, -49.7557, -39.2863, 1.03", "-65.5574, -50.0196, -40.467, 0.44", "-65.7445, -50.0948, -40.7545, 1.18", "-66.0929, -50.221, -41.1826, 1.47", "-66.9921, -50.4911, -42.4588, 0.81", "-67.3697, -50.5872, -43.0168, 0.52", "-67.9032, -50.709, -43.8237, 0.37", "-68.2205, -50.774, -44.3001, 0.37", "-68.6264, -50.8603, -44.9179, 1.18", "-70.6999, -51.3429, -48.165, 0.81", "-70.771, -51.3604, -48.2754, 0.81", "-71.1673, -51.4734, -48.8942, 0.81", "-71.4505, -51.5535, -49.2993, 0.88", "-71.7495, -51.6519, -49.7081, 0.81", "-72.4494, -51.9194, -50.5239, 0.29", "-72.619, -51.9811, -50.6534, 0.29", "-72.9063, -52.1134, -50.9216, 0.29", "-73.4248, -52.4103, -51.4679, 1.18", "-74.5203, -53.2014, -52.6572, 0.59", "-74.8639, -53.5069, -53.0098, 1.33", "-74.9066, -53.5512, -53.0497, 1.33", "-75.7294, -54.4671, -53.7522, 0.74", "-76.1415, -54.9618, -54.0795, 0.66", "-76.617, -55.5611, -54.4718, 0.37", "-77.1046, -56.1614, -54.8333, 0.88", "-77.6107, -56.7812, -55.2252, 1.03", "-78.0297, -57.2979, -55.5757, 0.88", "-78.064, -57.3424, -55.606, 0.88", "-78.8799, -58.5415, -56.4687, 0.74", "-79.2588, -59.1475, -57.008, 0.44", "-79.4622, -59.4733, -57.3422, 1.47", "-79.8904, -60.1152, -58.0981, 1.03", "-80.1553, -60.4466, -58.552, 0.74", "-80.4127, -60.678, -58.9216, 0.74", "-81.4616, -61.2918, -60.201, 0.52", "-81.9807, -61.5014, -60.8308, 0.66", "-82.4614, -61.6764, -61.4403, 0.37", "-82.8081, -61.8257, -61.9813, 0.29", "-83.1195, -61.9758, -62.5318, 0.29", "-83.4747, -62.1685, -63.2223, 0.74", "-83.9553, -62.4808, -64.2342, 0.96", "-84.5768, -62.9118, -65.6569, 0.96", "-85.4565, -63.5026, -67.8043, 0.88", "-85.4776, -63.5142, -67.8543, 0.88", "-85.8683, -63.6763, -68.7447, 0.88", "-86.0591, -63.7247, -69.1354, 1.03", "-86.3917, -63.7765, -69.7151, 1.03", "-86.9615, -63.8637, -70.5435, 0.74", "-87.6183, -64.0299, -71.4077, 0.37", "-87.6551, -64.046, -71.4616, 0.37", "-88.3406, -64.4521, -72.5481, 0.37", "-88.9342, -64.8905, -73.5828, 0.37", "-89.4722, -65.3397, -74.5445, 0.88", "-89.9963, -65.7705, -75.4292, 1.18", "-90.7691, -66.3747, -76.8515, 0.59", "-90.7995, -66.3936, -76.9084, 0.59", "-91.4976, -66.6526, -78.1772, 0.44", "-91.7004, -66.6812, -78.603, 0.37", "-92.0468, -66.66, -79.4197, 0.37", "-92.831, -66.4871, -81.2996, 1.03", "-93.2336, -66.3568, -82.2331, 1.03", "-93.5849, -66.2535, -82.9904, 1.25", "-94.4604, -66.0833, -84.8817, 1.18", "-94.487, -66.0849, -84.9416, 1.18", "-94.8953, -66.2051, -85.7984, 0.59", "-95.1542, -66.3295, -86.2719, 0.74", "-95.4448, -66.512, -86.7773, 0.74", "-96.413, -67.2183, -88.4546, 0.88", "-97.2701, -67.9551, -90.3457, 0.52", "-97.4863, -68.1663, -90.9066, 1.18", "-97.8293, -68.5578, -91.9868, 1.55", "-97.9951, -68.7614, -92.5626, 1.25", "-98.5831, -69.5066, -94.6336, 0.74", "-99.6951, -70.9584, -98.522, 0.74", "-99.8251, -71.1387, -99.0048, 1.4", "-100.43, -72.0075, -101.415, 0.74", "-100.462, -72.0515, -101.545, 0.74", "-100.668, -72.2965, -102.341, 0.59", "-100.689, -72.3142, -102.403, 0.59", "-101.627, -72.8169, -104.238, 0.59", "-101.683, -72.8417, -104.331, 0.59", "-102.25, -73.044, -105.174, 0.66", "-102.583, -73.1563, -105.676, 0.88", "-103.77, -73.512, -107.474, 0.44", "-103.931, -73.559, -107.689, 1.03", "-104.862, -73.8226, -108.612, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-27.5643, -193.592, -90.3591, 0.29", "-28.2616, -193.914, -90.3895, 0.29", "-28.692, -194.099, -90.3998, 0.29", "-29.3258, -194.35, -90.4568, 0.22", "-29.6041, -194.471, -90.4872, 0.81", "-29.8756, -194.598, -90.5178, 0.81", "-30.1087, -194.712, -90.5607, 0.81", "-30.5064, -194.914, -90.6645, 0.52", "-31.2879, -195.336, -90.9251, 0.22", "-31.8076, -195.64, -91.1183, 0.22", "-32.0497, -195.792, -91.2165, 0.81", "-32.7373, -196.247, -91.5071, 0.96", "-32.9069, -196.365, -91.5943, 1.11", "-33.4776, -196.788, -91.9708, 0.22", "-33.7585, -197.002, -92.1707, 0.22", "-33.9168, -197.121, -92.2874, 0.74", "-34.0929, -197.259, -92.4228, 0.96", "-34.7315, -197.784, -92.9494, 0.59", "-35.3313, -198.281, -93.4791, 0.29", "-35.7583, -198.622, -93.9052, 0.22", "-35.8725, -198.709, -94.0226, 0.37", "-36.4086, -199.091, -94.5716, 0.22", "-36.8533, -199.4, -95.0293, 0.81", "-37.0459, -199.534, -95.2219, 1.03", "-37.7265, -200.019, -95.9856, 0.37", "-37.9647, -200.19, -96.2725, 0.52", "-38.5238, -200.595, -96.9508, 0.29", "-38.746, -200.755, -97.2053, 0.66", "-38.9292, -200.892, -97.4061, 0.81", "-39.7296, -201.527, -98.3542, 0.29", "-39.9273, -201.701, -98.5985, 0.44", "-39.9527, -201.725, -98.6341, 0.44", "-40.1845, -201.957, -98.9677, 0.59", "-40.4687, -202.284, -99.4425, 1.03", "-40.9128, -202.914, -100.38, 1.03", "-41.2167, -203.465, -101.209, 0.29", "-41.4583, -203.972, -101.989, 0.88", "-41.5431, -204.154, -102.271, 1.25", "-42.1128, -205.336, -104.108, 0.29", "-42.4742, -206.073, -105.247, 0.37", "-42.747, -206.616, -106.05, 0.81", "-43.0117, -207.115, -106.782, 0.44", "-43.1921, -207.423, -107.217, 0.37", "-43.4722, -207.863, -107.8, 0.37", "-43.8942, -208.439, -108.443, 0.37", "-44.2536, -208.885, -108.876, 0.37", "-44.5459, -209.253, -109.201, 1.11", "-44.7361, -209.496, -109.406, 1.25", "-45.2094, -210.061, -109.908, 0.81", "-45.6623, -210.56, -110.339, 0.52", "-45.8903, -210.78, -110.499, 0.52", "-45.923, -210.809, -110.522, 0.52", "-46.3338, -211.173, -110.803, 0.52", "-47.0627, -211.786, -111.312, 0.44", "-47.4081, -212.069, -111.543, 0.44", "-47.995, -212.551, -111.998, 0.74", "-48.7407, -213.184, -112.631, 0.74", "-48.7662, -213.206, -112.654, 0.74", "-49.3677, -213.786, -113.234, 0.37", "-49.5953, -214.008, -113.462, 0.81", "-50.3705, -214.693, -114.251, 0.29", "-50.6428, -214.906, -114.523, 0.29", "-50.9079, -215.112, -114.748, 0.88", "-51.0151, -215.199, -114.839, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-27.5643, -193.592, -90.3591, 0.59", "-27.3183, -195.159, -91.0155, 0.59", "-27.2148, -195.813, -91.2551, 0.59", "-27.1814, -195.995, -91.3172, 0.81", "-27.0877, -196.415, -91.4521, 0.81", "-26.9332, -197.022, -91.6407, 0.15", "-26.77, -197.575, -91.8082, 0.15", "-26.7529, -197.614, -91.8128, 0.15", "-26.6429, -197.843, -91.8461, 0.59", "-26.475, -198.181, -91.9004, 0.88", "-26.433, -198.268, -91.9147, 0.88", "-26.3106, -198.576, -91.96, 0.88", "-26.1028, -199.234, -92.0238, 0.52", "-25.9807, -199.782, -92.0517, 0.44", "-25.9369, -200.094, -92.056, 0.74", "-25.9064, -200.492, -92.0487, 0.44", "-25.8856, -201.047, -91.9993, 0.29", "-25.8965, -201.431, -91.9398, 0.88", "-25.9033, -201.786, -91.8711, 0.96", "-25.8841, -202.333, -91.7591, 0.81", "-25.8183, -202.957, -91.6434, 0.29", "-25.6991, -203.603, -91.5583, 0.44", "-25.5743, -204.056, -91.5156, 0.22", "-25.3121, -204.766, -91.4886, 0.22", "-25.0997, -205.187, -91.4964, 0.59", "-24.7902, -205.652, -91.5078, 0.81", "-24.4762, -206.048, -91.5242, 0.81", "-24.225, -206.349, -91.5423, 0.88", "-23.7844, -206.921, -91.5503, 0.37", "-23.4469, -207.52, -91.5181, 0.59", "-23.2072, -208.126, -91.4708, 0.96", "-23.0872, -208.566, -91.4292, 0.59", "-23.0043, -209.107, -91.3753, 0.29", "-22.9852, -209.871, -91.3538, 0.29", "-23.0489, -210.71, -91.3743, 0.74", "-23.1114, -211.201, -91.4139, 0.96", "-23.1201, -211.274, -91.4221, 0.96", "-23.1549, -211.667, -91.4648, 0.96", "-23.1991, -212.39, -91.5385, 0.44", "-23.2146, -212.888, -91.5819, 0.29", "-23.2524, -213.563, -91.5798, 0.59", "-23.3141, -214.121, -91.5195, 1.03", "-23.3422, -214.293, -91.4888, 1.11", "-23.405, -214.633, -91.4071, 0.96", "-23.4848, -215.039, -91.2887, 0.96", "-23.6177, -215.649, -91.1011, 0.37", "-23.7576, -216.248, -90.9221, 0.22", "-23.8402, -216.632, -90.8241, 0.44", "-23.9552, -217.284, -90.6699, 0.44", "-23.9984, -217.741, -90.5776, 0.66", "-23.993, -218.203, -90.5098, 0.88", "-23.9599, -218.688, -90.4672, 0.29", "-23.8961, -219.227, -90.3742, 0.29", "-23.8864, -219.287, -90.3603, 0.29", "-23.8016, -219.799, -90.2144, 0.29", "-23.7022, -220.454, -90.0178, 0.29", "-23.5987, -221.196, -89.7915, 0.29", "-23.4966, -222.135, -89.4424, 0.59", "-23.4897, -222.374, -89.3402, 0.74", "-23.5114, -223.001, -89.0629, 0.29", "-23.5572, -223.493, -88.8478, 0.29", "-23.5597, -223.54, -88.8304, 0.29", "-23.5344, -224.112, -88.6999, 0.81", "-23.4991, -224.465, -88.678, 1.25", "-23.4499, -224.851, -88.689, 0.88", "-23.3287, -225.489, -88.7602, 0.52", "-23.1332, -226.263, -88.8617, 0.29", "-23.0228, -226.649, -88.9193, 0.66", "-22.8453, -227.151, -89.0143, 0.74", "-22.4727, -227.97, -89.1767, 0.22", "-22.2215, -228.441, -89.2706, 0.22", "-21.9244, -228.908, -89.3392, 0.88", "-21.8936, -228.954, -89.3413, 0.88", "-21.6022, -229.368, -89.3233, 0.81", "-21.2846, -229.81, -89.2892, 0.74", "-21.2577, -229.852, -89.2844, 0.74", "-20.9753, -230.479, -89.2247, 0.29", "-20.7758, -231.105, -89.1827, 0.74", "-20.7319, -231.324, -89.1651, 0.81", "-20.6976, -231.959, -89.1209, 0.22", "-20.7225, -232.28, -89.1024, 0.66", "-20.772, -232.609, -89.0933, 0.74", "-20.7823, -232.651, -89.094, 0.74", "-20.9312, -233.133, -89.1062, 0.74", "-21.143, -233.695, -89.1179, 0.22", "-21.3694, -234.152, -89.1687, 0.22", "-21.3889, -234.188, -89.1758, 0.22", "-21.5197, -234.446, -89.252, 0.66", "-21.5381, -234.495, -89.2707, 0.66", "-21.6037, -234.756, -89.3944, 0.66", "-21.7396, -235.483, -89.7318, 0.52", "-21.7487, -235.519, -89.7545, 0.52", "-21.8904, -236.006, -90.0614, 0.22", "-22.0186, -236.405, -90.3016, 1.03", "-22.0976, -236.649, -90.4538, 1.11", "-22.2363, -237.098, -90.7232, 0.88", "-22.6668, -238.545, -91.5075, 0.22", "-22.7664, -238.893, -91.6887, 0.88", "-22.8783, -239.268, -91.8829, 0.59", "-23.0306, -239.828, -92.1612, 0.52", "-23.1338, -240.332, -92.3917, 0.81", "-23.181, -240.697, -92.5923, 0.81", "-23.2556, -241.46, -93.1251, 0.29", "-23.2581, -241.492, -93.152, 0.29", "-23.2748, -241.759, -93.4318, 0.96", "-23.288, -242.018, -93.7487, 1.25", "-23.3168, -243.16, -95.3355, 0.52", "-23.3147, -243.898, -96.4479, 0.44", "-23.3011, -244.097, -96.7626, 0.66", "-23.2281, -244.681, -97.6926, 0.52", "-23.1009, -245.304, -98.6908, 0.29", "-23.0564, -245.452, -98.9222, 0.59", "-23.0286, -245.515, -99.0066, 0.59", "-22.6864, -246.127, -99.7486, 0.22", "-22.6662, -246.162, -99.7894, 0.22", "-22.4916, -246.413, -100.021, 0.59", "-22.4273, -246.49, -100.077, 0.59", "-22.3398, -246.593, -100.156, 0.59", "-22.3108, -246.626, -100.18, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-9.98183, 149.262, 6.76541, 0.29", "-10.8154, 149.909, 6.03202, 0.29", "-11.416, 150.343, 5.58554, 0.29", "-12.2664, 150.934, 5.01239, 0.66", "-13.0002, 151.451, 4.49301, 0.29", "-13.3666, 151.711, 4.22961, 0.37", "-14.1241, 152.255, 3.68737, 0.37", "-14.9217, 152.843, 3.16555, 0.59", "-15.321, 153.141, 2.90281, 0.81", "-16.0055, 153.652, 2.46898, 0.37", "-16.2268, 153.832, 2.34529, 0.88", "-16.5416, 154.119, 2.1608, 1.03", "-16.9327, 154.527, 1.92639, 0.81", "-17.2408, 154.882, 1.7506, 0.37", "-17.2786, 154.933, 1.73292, 0.37", "-17.6539, 155.539, 1.60534, 0.37", "-17.6913, 155.613, 1.59198, 0.37", "-17.9773, 156.21, 1.57728, 0.37", "-18.001, 156.263, 1.58323, 0.37", "-18.3685, 157.057, 1.74684, 0.22", "-18.5771, 157.495, 1.8557, 0.74", "-18.601, 157.547, 1.87038, 0.74", "-19.1483, 158.753, 2.20652, 0.29", "-19.2559, 158.996, 2.28244, 0.66", "-19.4065, 159.329, 2.38812, 0.66", "-19.684, 159.917, 2.57513, 0.37", "-19.8695, 160.34, 2.69531, 0.29", "-20.0326, 160.77, 2.78426, 0.29", "-20.2238, 161.409, 2.85838, 0.96", "-20.2401, 161.463, 2.86464, 0.96", "-20.3315, 161.812, 2.90768, 0.66", "-20.4565, 162.346, 2.97442, 0.29", "-20.5842, 162.874, 3.02234, 0.29", "-20.5974, 162.929, 3.02336, 0.29", "-20.7214, 163.471, 2.9959, 1.11", "-20.7986, 163.99, 2.97092, 1.47", "-20.81, 164.132, 2.96507, 1.47", "-20.84, 164.854, 2.93568, 0.66", "-20.853, 165.416, 2.9176, 0.37", "-20.8678, 166.123, 2.89811, 0.37", "-20.859, 167.226, 2.80228, 0.29", "-20.8434, 168.394, 2.64721, 0.29", "-20.8407, 168.514, 2.63042, 0.29", "-20.8025, 169.264, 2.51877, 0.96", "-20.7779, 169.668, 2.4526, 1.18", "-20.6961, 170.99, 2.15264, 0.37", "-20.6878, 171.428, 1.99432, 0.37", "-24.6393, 178.238, -0.0178609, 0.37", "-26.7961, 185.625, -2.44983, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.98183, 149.262, 6.76541, 1.03", "-10.0461, 149.657, 6.89316, 1.03", "-10.2301, 150.605, 7.16101, 1.4", "-10.4462, 151.798, 7.44506, 1.4", "-10.4583, 151.872, 7.46078, 1.4", "-10.6095, 152.957, 7.65963, 1.25", "-10.731, 154.104, 7.87137, 0.81", "-10.7363, 154.179, 7.88861, 0.81", "-10.7736, 155.027, 8.09869, 0.96", "-10.7767, 155.327, 8.16678, 0.96", "-10.7745, 156.169, 8.36946, 1.18", "-10.7448, 157.133, 8.6261, 0.96", "-10.7202, 158.497, 8.92741, 1.18", "-10.7215, 158.609, 8.94723, 1.18", "-10.7524, 159.526, 9.04489, 1.18", "-10.7874, 160.573, 9.04457, 0.96", "-10.7906, 160.667, 9.03436, 0.96", "-10.8091, 161.939, 8.79487, 1.47", "-10.8081, 162.013, 8.77661, 1.47", "-10.7318, 163.184, 8.51909, 1.18", "-10.5709, 164.39, 8.27068, 0.81", "-10.5417, 164.524, 8.25078, 0.81", "-10.3425, 165.355, 8.26928, 0.74", "-10.3272, 165.421, 8.28517, 0.74", "-10.2572, 165.984, 8.48556, 0.74", "-10.2602, 166.055, 8.51731, 0.74", "-10.3769, 166.641, 8.77701, 0.81", "-10.7738, 167.928, 9.27961, 1.18", "-10.9753, 168.445, 9.46066, 1.4", "-11.3661, 169.377, 9.75639, 0.96", "-11.7611, 170.278, 10.0162, 0.96", "-12.1132, 171.081, 10.2141, 0.96", "-12.5453, 172.085, 10.3875, 0.96", "-12.573, 172.155, 10.4008, 0.96", "-12.7585, 172.679, 10.5474, 0.96", "-12.8788, 173.067, 10.6811, 1.18", "-12.9278, 173.251, 10.7559, 1.18", "-13.1204, 174.017, 11.074, 1.18", "-13.4975, 175.563, 11.6751, 0.96", "-13.8112, 176.831, 12.1686, 0.66", "-13.9664, 177.438, 12.4059, 0.66", "-14.1817, 178.25, 12.6974, 0.88", "-14.3947, 179.076, 12.9674, 0.88", "-14.5899, 179.862, 13.1954, 1.03", "-14.7886, 180.715, 13.378, 1.03", "-14.803, 180.779, 13.3927, 1.03", "-14.968, 181.509, 13.5415, 1.11", "-15.1458, 182.282, 13.6662, 1.11", "-15.1724, 182.392, 13.6817, 1.11", "-15.4595, 183.527, 13.8032, 0.96", "-15.6656, 184.319, 13.9063, 0.96", "-15.9283, 185.392, 14.0762, 1.4", "-16.1005, 186.144, 14.2116, 1.03", "-16.2866, 187.081, 14.3786, 1.25", "-16.4495, 188.234, 14.5798, 0.88", "-16.5162, 189.31, 14.7644, 0.88", "-16.5096, 190.243, 14.9348, 0.88", "-16.4893, 190.458, 14.9748, 0.88", "-16.3773, 191.23, 15.1028, 0.88", "-16.2281, 192.289, 15.2346, 0.81", "-16.1067, 193.269, 15.3081, 0.81", "-16.1035, 193.336, 15.3088, 0.81", "-16.1296, 193.99, 15.3522, 0.96", "-16.2787, 195.113, 15.4673, 0.96", "-16.5248, 196.317, 15.6224, 1.03", "-16.5392, 196.375, 15.6309, 1.03", "-16.955, 197.839, 15.8589, 1.03", "-17.2985, 199.052, 16.043, 1.03", "-17.6159, 200.263, 16.2213, 1.03", "-17.7107, 200.718, 16.2868, 1.03", "-17.7871, 201.288, 16.3596, 1.03", "-17.8631, 202.205, 16.4543, 0.88", "-17.873, 203.325, 16.5246, 0.88", "-17.8284, 204.288, 16.5281, 1.11", "-17.7855, 204.683, 16.5119, 1.11", "-17.6592, 205.74, 16.424, 1.11", "-17.6389, 205.882, 16.4068, 1.11", "-17.5209, 206.619, 16.2931, 0.96", "-17.5131, 206.674, 16.2824, 0.96", "-17.4016, 207.847, 16.0396, 0.88", "-17.3547, 208.738, 15.8544, 0.66", "-17.3514, 208.874, 15.8285, 0.66", "-17.3253, 209.703, 15.6956, 0.66", "-17.3216, 209.779, 15.6867, 0.66", "-17.2342, 210.655, 15.6379, 0.96", "-17.213, 210.789, 15.6406, 0.96", "-17.0149, 211.649, 15.6565, 0.96", "-16.9732, 211.808, 15.6592, 0.96", "-16.8502, 212.265, 15.6684, 0.96", "-16.6287, 213.136, 15.7381, 0.96", "-16.4742, 213.767, 15.8165, 1.18", "-16.3197, 214.51, 15.9255, 0.74", "-16.1931, 215.392, 16.0648, 0.74", "-16.1492, 216.069, 16.171, 1.18", "-16.2086, 217.122, 16.326, 0.66", "-16.3552, 217.912, 16.4292, 0.66", "-16.6227, 218.86, 16.5334, 0.66", "-16.9607, 219.79, 16.6199, 1.18", "-17.2392, 220.46, 16.6492, 1.18", "-17.8207, 221.769, 16.6358, 0.96", "-18.2233, 222.663, 16.6149, 0.96", "-18.5059, 223.313, 16.6197, 0.66", "-18.527, 223.366, 16.6216, 0.66", "-18.8909, 224.42, 16.6906, 0.59", "-19.0927, 225.094, 16.752, 1.03", "-19.4343, 226.33, 16.9701, 0.81", "-19.6202, 226.989, 17.1266, 1.03", "-19.66, 227.118, 17.1611, 1.03", "-19.9313, 227.924, 17.3822, 1.03", "-20.034, 228.195, 17.4603, 1.03", "-20.4733, 229.287, 17.7402, 0.96", "-20.8508, 230.273, 17.9313, 0.96", "-21.0945, 231.027, 18.0598, 0.96", "-21.2963, 231.792, 18.1724, 1.11", "-21.4002, 232.35, 18.2368, 1.33", "-21.4097, 232.426, 18.2423, 1.33", "-21.4437, 233.452, 18.2486, 0.88", "-21.4087, 234.241, 18.2576, 1.11", "-21.3889, 234.385, 18.2664, 1.11", "-21.2378, 235.01, 18.3369, 1.11", "-21.2162, 235.073, 18.3467, 1.11", "-20.9522, 235.705, 18.5314, 0.88", "-20.9248, 235.763, 18.5539, 0.81", "-20.6275, 236.403, 18.8087, 1.03", "-20.4208, 236.87, 19.002, 1.03", "-20.1161, 237.647, 19.3167, 0.81", "-19.7364, 238.827, 19.764, 0.74", "-19.525, 239.688, 20.061, 0.74", "-19.3681, 240.562, 20.3577, 0.88", "-19.3066, 241.052, 20.5141, 0.88", "-19.2645, 241.783, 20.7471, 0.88", "-19.2597, 242.266, 20.8896, 0.88", "-19.2417, 242.931, 21.0481, 0.88", "-19.1634, 243.88, 21.2666, 0.88", "-19.086, 244.366, 21.3928, 0.88", "-19.0572, 244.504, 21.4279, 0.88", "-18.8429, 245.355, 21.6438, 0.88", "-18.6099, 246.248, 21.8517, 0.88", "-18.346, 247.226, 22.0552, 0.44", "-18.1365, 248.12, 22.2404, 0.81", "-18.025, 248.795, 22.3916, 1.25", "-17.9286, 249.644, 22.5915, 0.96", "-17.8842, 250.746, 22.8562, 1.33", "-17.8926, 251.087, 22.9372, 1.47", "-17.9978, 252.517, 23.2445, 1.11", "-18.0953, 253.38, 23.3952, 0.96", "-18.1039, 253.446, 23.406, 0.96", "-18.1922, 254.208, 23.5024, 0.96", "-18.1973, 254.268, 23.5073, 0.96", "-18.2261, 255.242, 23.5525, 0.96", "-18.2205, 255.378, 23.5496, 0.96", "-18.1099, 256.645, 23.4978, 0.96", "-17.9297, 258.091, 23.3639, 0.96", "-17.7279, 259.387, 23.1958, 0.96", "-17.5938, 260.169, 23.1065, 0.96", "-17.4573, 260.865, 23.031, 0.96", "-17.2568, 261.81, 22.9411, 1.11", "-16.9337, 263.218, 22.8277, 1.11", "-16.9203, 263.276, 22.8284, 1.11", "-16.6453, 264.527, 23.0248, 1.11", "-16.6334, 264.591, 23.0428, 1.11", "-16.5007, 265.395, 23.3582, 1.11", "-16.3975, 266.054, 23.6582, 1.18", "-16.2464, 267.177, 24.2211, 0.88", "-16.139, 267.967, 24.581, 0.66", "-16.1317, 268.031, 24.6053, 0.66", "-16.119, 268.638, 24.8048, 0.81", "-16.1576, 269.42, 25.0158, 0.81", "-16.1629, 269.488, 25.0291, 0.81", "-16.2286, 270.226, 25.109, 0.66", "-16.289, 271.003, 25.1618, 1.18", "-16.3738, 272.235, 25.2314, 1.03", "-16.4198, 273.014, 25.2653, 0.88", "-16.4564, 274.004, 25.2734, 0.74", "-16.4696, 275.133, 25.2491, 1.25", "-16.4661, 275.733, 25.2148, 1.03", "-16.4599, 275.876, 25.2041, 1.03", "-16.3848, 276.865, 25.0909, 1.03", "-16.3356, 277.664, 25.0561, 1.03", "-16.3287, 277.732, 25.0615, 1.03", "-16.1858, 278.743, 25.2663, 1.25", "-16.173, 278.806, 25.2878, 1.25", "-15.9124, 279.835, 25.727, 1.4", "-15.4447, 281.412, 26.5355, 0.74", "-15.1492, 282.372, 27.0641, 0.59", "-15.1224, 282.455, 27.1103, 0.59", "-14.7256, 283.577, 27.7235, 0.59", "-14.5075, 284.212, 28.0251, 0.81", "-14.4882, 284.272, 28.0482, 0.81", "-14.2954, 285.02, 28.1876, 0.81", "-14.2594, 285.221, 28.2079, 0.81", "-14.1419, 286.057, 28.2548, 1.03", "-14.0469, 286.895, 28.2608, 1.25", "-13.9594, 287.534, 28.3059, 1.25", "-13.9501, 287.59, 28.3124, 1.25", "-13.8067, 288.403, 28.4903, 0.96", "-13.5929, 289.581, 28.8279, 0.74", "-13.5093, 290.108, 29.04, 0.74", "-13.3395, 291.283, 29.6008, 0.88", "-13.2715, 291.867, 29.8986, 0.74", "-13.1571, 293.093, 30.5307, 0.74", "-13.122, 293.708, 30.8487, 0.74", "-13.1063, 294.93, 31.4559, 0.96", "-13.1237, 295.658, 31.7773, 1.03", "-13.1744, 296.389, 32.0352, 1.03", "-13.2281, 297.119, 32.2441, 1.18", "-13.2633, 297.917, 32.3858, 0.59", "-13.2676, 298.391, 32.4437, 0.37", "-13.2517, 298.773, 32.4598, 0.81", "-13.2211, 299.171, 32.4648, 0.81", "-13.1605, 299.915, 32.4544, 0.81", "-13.1349, 300.608, 32.4268, 0.81", "-13.163, 301.186, 32.3899, 0.88", "-13.2429, 301.65, 32.3527, 0.81", "-13.4639, 302.4, 32.2839, 0.74", "-13.7542, 303.137, 32.2116, 0.74", "-14.1281, 303.89, 32.1353, 0.96", "-14.5419, 304.642, 32.0664, 0.44", "-14.9523, 305.354, 32.0116, 0.44", "-15.3387, 306.031, 31.9759, 0.96", "-15.3771, 306.1, 31.9746, 0.96", "-15.6278, 306.608, 31.9688, 0.96", "-15.9027, 307.256, 31.9655, 0.96", "-15.9699, 307.449, 31.9749, 0.96", "-16.1944, 308.039, 32.0277, 0.81", "-16.2713, 308.234, 32.0669, 0.81", "-16.6306, 309.091, 32.2944, 0.81", "-16.6555, 309.15, 32.3129, 0.81", "-16.9777, 309.934, 32.5809, 0.96", "-17.3163, 310.834, 32.8912, 0.81", "-17.716, 312.006, 33.3059, 0.81", "-17.7336, 312.068, 33.3269, 0.81", "-17.8888, 312.878, 33.5705, 0.81", "-17.8956, 312.943, 33.585, 0.81", "-17.8845, 313.726, 33.6105, 0.59", "-17.8767, 313.827, 33.6074, 0.59", "-17.8288, 314.381, 33.5319, 0.59", "-17.7541, 315.168, 33.4087, 0.59", "-17.6528, 316.093, 33.2271, 0.81", "-17.4863, 317.428, 32.9269, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.2002, 83.7787, -65.6661, 0.52", "-0.783624, 84.9835, -67.0543, 0.52", "-0.749602, 85.018, -67.0898, 0.52", "-0.129, 85.8269, -67.7795, 0.44", "-0.0949044, 85.8841, -67.8216, 0.44", "0.215266, 86.389, -68.2059, 0.88", "0.545685, 86.8587, -68.566, 1.11", "0.577803, 86.9089, -68.5996, 1.11", "1.03341, 87.4957, -68.9983, 1.03", "1.78274, 88.3019, -69.5561, 0.37", "2.82041, 89.1764, -70.2697, 0.44", "3.42128, 89.5866, -70.6493, 0.44", "3.51847, 89.6493, -70.7102, 0.44", "4.02444, 90.0094, -71.0896, 0.44", "4.07847, 90.0601, -71.1463, 0.44", "4.65738, 90.8377, -71.9962, 0.96", "4.78502, 91.1313, -72.2795, 1.33", "5.00344, 91.8148, -72.8855, 1.18", "5.27579, 92.8461, -73.7392, 0.81", "5.50597, 93.9625, -74.5636, 0.37", "5.51865, 94.0266, -74.6064, 0.37", "5.63026, 94.6735, -74.9627, 0.66", "5.7297, 95.1001, -75.1837, 0.88", "5.76741, 95.2414, -75.2436, 0.88", "5.95826, 95.891, -75.4939, 0.88", "6.19718, 96.7036, -75.8173, 0.74", "6.37294, 97.4124, -76.1179, 0.59", "6.57136, 98.4052, -76.5582, 1.03", "6.66459, 99.169, -76.8992, 0.29", "6.71983, 100.056, -77.268, 0.81", "6.71712, 100.513, -77.4398, 0.88", "6.67637, 101.045, -77.6038, 0.96", "6.62205, 101.574, -77.765, 0.66", "6.5062, 102.514, -78.0131, 0.22", "6.41532, 103.391, -78.2304, 1.62", "6.36431, 103.998, -78.3581, 1.99", "6.32295, 104.541, -78.4582, 1.77", "6.22036, 105.67, -78.6337, 1.25", "6.12371, 106.507, -78.7255, 0.81", "6.03661, 107.148, -78.764, 0.66", "5.92398, 107.829, -78.7807, 0.81", "5.78178, 108.636, -78.7644, 0.29", "5.59656, 109.591, -78.6968, 0.29", "5.48747, 110.086, -78.6179, 0.44", "5.47408, 110.151, -78.6067, 0.44", "5.32609, 110.899, -78.4895, 0.59", "5.23835, 111.405, -78.4253, 1.11", "5.1514, 111.968, -78.3766, 1.11", "5.04727, 112.69, -78.328, 0.88", "4.89746, 113.735, -78.2773, 0.52", "4.73082, 114.903, -78.2286, 0.52", "4.58342, 115.98, -78.1902, 0.66", "4.47302, 116.873, -78.1664, 0.29", "4.38832, 117.735, -78.155, 0.81", "4.3846, 117.805, -78.1555, 0.81", "4.39454, 118.262, -78.1684, 1.03", "4.41476, 118.423, -78.1779, 1.03", "4.51465, 118.971, -78.2317, 1.03", "4.64623, 119.579, -78.307, 0.96", "4.74416, 120.116, -78.3896, 0.66", "4.80993, 120.814, -78.5101, 0.52", "4.78879, 121.293, -78.6031, 0.44", "4.65571, 122.181, -78.7878, 0.44", "4.61437, 122.318, -78.817, 0.44", "4.38867, 122.822, -78.9166, 0.37", "4.03295, 123.436, -79.0198, 0.37", "3.52566, 124.212, -79.1088, 1.03", "3.48987, 124.269, -79.1139, 1.03", "3.2118, 124.771, -79.1485, 1.18", "2.97053, 125.282, -79.175, 0.59", "2.7429, 125.884, -79.1948, 0.37", "2.55467, 126.557, -79.208, 0.29", "2.36373, 127.465, -79.1857, 0.22", "2.27878, 127.899, -79.1649, 0.44", "2.2536, 128.044, -79.1559, 0.44", "2.13887, 128.645, -79.0513, 0.44", "2.12554, 128.708, -79.0304, 0.44", "1.92295, 129.583, -78.6519, 0.74", "1.74828, 130.269, -78.3159, 1.33", "1.53058, 131.117, -77.8758, 1.4", "1.19444, 132.439, -77.1812, 0.52", "0.97561, 133.296, -76.7412, 0.59", "0.812375, 133.934, -76.4395, 0.74", "0.706358, 134.374, -76.2596, 0.74", "0.689363, 134.447, -76.2358, 0.74", "0.567817, 134.976, -76.1251, 0.44", "0.399738, 135.724, -76.0918, 0.52", "0.299864, 136.22, -76.0954, 0.66", "0.215649, 136.668, -76.0804, 0.44", "0.104848, 137.288, -76.0422, 0.22", "-0.0570516, 138.153, -75.9738, 0.66", "-0.145566, 138.582, -75.9474, 0.88", "-0.280458, 139.181, -75.9196, 0.29", "-0.460424, 139.902, -75.894, 0.22", "-0.589769, 140.382, -75.8842, 0.37", "-0.727989, 140.874, -75.9029, 0.52", "-0.938266, 141.621, -76.0008, 0.29", "-1.04198, 142.013, -76.0638, 0.59", "-1.07456, 142.164, -76.084, 0.59", "-1.12469, 142.582, -76.1218, 0.59", "-1.12766, 142.649, -76.1235, 0.59", "-1.13044, 143.272, -76.1071, 0.59", "-1.12357, 144.192, -76.0135, 0.44", "-1.12639, 144.947, -75.9187, 0.59", "-1.13889, 145.572, -75.8352, 1.03", "-1.16949, 146.195, -75.7507, 1.03", "-1.22844, 146.819, -75.6715, 0.81", "-1.32369, 147.473, -75.5976, 0.59", "-1.46518, 148.161, -75.5432, 0.37", "-1.71151, 149.13, -75.5071, 0.37", "-1.92947, 149.924, -75.4902, 0.37", "-2.11078, 150.564, -75.4876, 0.44", "-2.30137, 151.237, -75.4982, 0.44", "-2.46301, 151.873, -75.5051, 0.29", "-2.65234, 152.699, -75.4929, 0.29", "-2.7655, 153.342, -75.4639, 0.81", "-2.8406, 153.963, -75.3954, 1.11", "-2.8905, 154.592, -75.2949, 0.81", "-2.94622, 155.516, -75.1156, 0.52", "-2.94931, 155.582, -75.1011, 0.52", "-3.01388, 156.402, -74.9109, 0.52", "-3.13296, 157.288, -74.715, 0.29", "-3.24436, 157.896, -74.5915, 0.59", "-3.40361, 158.501, -74.498, 0.81", "-3.44892, 158.627, -74.487, 0.81", "-3.6524, 159.186, -74.4546, 0.81", "-3.83231, 159.729, -74.4405, 0.66", "-3.85356, 159.802, -74.4413, 0.66", "-4.03289, 160.484, -74.4452, 0.44", "-4.24159, 161.302, -74.4493, 0.37", "-4.42858, 162.063, -74.4534, 0.37", "-4.62984, 162.887, -74.4595, 0.52", "-4.80158, 163.553, -74.4682, 0.37", "-4.95748, 164.082, -74.4818, 0.37", "-5.13092, 164.635, -74.5022, 0.81", "-5.30732, 165.149, -74.5292, 0.88", "-5.47999, 165.593, -74.5565, 0.59", "-5.58718, 165.858, -74.5736, 0.44", "-5.87101, 166.662, -74.6174, 0.37", "-6.14537, 167.628, -74.6568, 0.37", "-6.23433, 168.114, -74.685, 0.66", "-6.24239, 168.19, -74.6904, 0.66", "-6.2428, 168.945, -74.7433, 0.74", "-6.2257, 169.329, -74.7718, 0.88", "-6.12759, 170.207, -74.8442, 0.59", "-5.98676, 171.08, -74.9307, 0.29", "-5.97109, 171.155, -74.9387, 0.29", "-5.68389, 172.331, -75.0731, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.2002, 83.7787, -65.6661, 0.59", "-1.9439, 84.5457, -65.5626, 0.59", "-1.76476, 85.0982, -65.4722, 0.29", "-1.62216, 85.5606, -65.3952, 0.29", "-1.44416, 86.1712, -65.2949, 0.29", "-1.06414, 87.5789, -65.0626, 0.29", "-0.833986, 88.4932, -64.9157, 0.74", "-0.711523, 89.096, -64.8236, 0.74", "-0.605805, 89.7222, -64.7408, 0.52", "-0.551852, 90.1033, -64.7031, 0.44", "-0.492717, 90.5774, -64.668, 0.29", "-0.43081, 91.1379, -64.6501, 0.29", "-0.343826, 91.8787, -64.652, 0.66", "-0.272919, 92.3577, -64.6472, 0.96", "-0.18104, 92.7968, -64.6354, 0.66", "-0.139312, 92.9571, -64.6289, 0.66", "0.00550816, 93.4379, -64.604, 0.44", "0.149226, 93.9329, -64.5657, 0.29", "0.281899, 94.4231, -64.5181, 0.22", "0.459773, 95.2302, -64.3686, 0.29", "0.469646, 95.2963, -64.3527, 0.29", "0.535127, 95.9234, -64.1818, 0.37", "0.563276, 96.6112, -63.9847, 0.66", "0.558574, 97.0922, -63.8427, 0.96", "0.539864, 98.1889, -63.5335, 0.81", "0.546029, 98.8819, -63.3534, 0.59", "0.551226, 98.9568, -63.3374, 0.59", "0.657268, 99.7563, -63.2096, 0.59", "0.756128, 100.253, -63.1598, 0.66", "1.03442, 101.295, -63.1146, 0.22", "1.21351, 101.807, -63.1326, 0.22", "1.47921, 102.432, -63.1593, 0.74", "1.71575, 102.959, -63.182, 0.81", "1.74855, 103.031, -63.1848, 0.81", "1.9885, 103.614, -63.2016, 0.88", "2.16579, 104.086, -63.205, 0.81", "2.36728, 104.662, -63.2105, 0.29", "2.64464, 105.666, -63.2112, 0.29", "2.97336, 107.109, -63.2075, 0.74", "3.09853, 107.814, -63.2039, 1.11", "3.17314, 108.439, -63.2004, 0.88", "3.24461, 109.476, -63.1822, 0.22", "3.28, 110.564, -63.1548, 0.22", "3.28125, 110.673, -63.1552, 0.22", "3.28059, 110.948, -63.1783, 0.22", "3.28531, 111.574, -63.2646, 0.74", "3.28512, 111.967, -63.3289, 1.11", "3.26974, 112.717, -63.495, 1.25", "3.25703, 113.572, -63.708, 0.74", "3.22354, 114.726, -64.0289, 0.22", "3.19582, 115.42, -64.228, 0.37", "3.14999, 116.347, -64.4908, 0.37", "3.07968, 117.67, -64.8403, 0.52", "3.05394, 118.208, -64.9677, 0.88", "3.01082, 119.34, -65.184, 1.03", "3.00061, 120.051, -65.298, 0.66", "3.00617, 120.846, -65.4116, 0.29", "3.03556, 121.729, -65.5155, 0.22", "3.07478, 122.475, -65.5662, 0.22", "3.11941, 123.189, -65.6033, 0.44", "3.16119, 123.663, -65.6174, 0.59", "3.24258, 124.343, -65.649, 0.37", "3.34487, 125.006, -65.6882, 0.29", "3.49978, 125.783, -65.7438, 0.44", "3.68684, 126.509, -65.8319, 0.29", "3.95547, 127.299, -66.021, 0.66", "4.11825, 127.782, -66.1671, 1.03", "4.22033, 128.086, -66.2734, 1.25", "4.39938, 128.695, -66.4967, 0.44", "4.61676, 129.634, -66.8433, 0.52", "4.79825, 130.749, -67.2474, 0.29", "4.9501, 132.084, -67.707, 0.29", "4.9612, 132.182, -67.7375, 0.29", "5.03013, 132.789, -67.9257, 0.29", "5.17575, 133.625, -68.1748, 0.81", "5.19552, 133.699, -68.193, 0.81", "5.37605, 134.171, -68.3164, 0.88", "5.6999, 134.853, -68.5885, 0.88", "5.97084, 135.448, -68.851, 0.44", "6.31415, 136.246, -69.2229, 0.22", "6.58968, 137.03, -69.6436, 0.22", "6.86711, 138.029, -70.2146, 0.81", "7.02369, 138.842, -70.6887, 0.88", "7.08799, 139.418, -71.0063, 0.96", "7.12096, 139.914, -71.2606, 0.96", "7.13373, 141.147, -71.8802, 0.44", "7.13589, 141.216, -71.913, 0.44", "7.19534, 141.887, -72.1673, 0.44", "7.31484, 142.822, -72.472, 0.66", "7.33753, 142.978, -72.5202, 0.66", "7.39394, 143.41, -72.6812, 0.88", "7.48887, 144.149, -72.9691, 0.52", "7.57854, 144.809, -73.2708, 0.37", "7.74463, 146.306, -74.0493, 1.11", "7.76562, 146.664, -74.2469, 1.25", "7.7729, 148.091, -75.0238, 0.22", "7.76721, 148.159, -75.0603, 0.22", "7.65784, 148.661, -75.3405, 0.22", "7.46186, 149.278, -75.6752, 0.22", "7.30408, 149.683, -75.8496, 0.74", "7.14228, 150.064, -76.0, 1.03", "6.89044, 150.647, -76.1864, 0.81", "6.47432, 151.655, -76.5213, 0.52", "6.32478, 152.009, -76.6805, 0.37", "6.05842, 152.686, -77.0603, 0.29", "5.83452, 153.374, -77.4805, 0.59", "5.74363, 153.791, -77.7423, 0.96", "5.69673, 154.199, -77.9971, 1.11", "5.65046, 155.451, -78.6841, 0.37", "5.64976, 155.519, -78.7198, 0.37", "5.64065, 156.276, -79.0454, 0.29", "5.62543, 157.059, -79.2546, 0.29", "5.61878, 157.134, -79.2637, 0.29", "5.49462, 157.922, -79.2528, 0.37", "5.42902, 158.32, -79.2064, 0.59", "5.28951, 159.129, -79.1014, 0.74", "5.16246, 159.791, -79.0061, 0.52", "4.98239, 160.798, -78.8605, 0.22", "4.89249, 161.503, -78.7717, 0.22", "4.83899, 162.068, -78.7395, 0.22", "4.77701, 162.895, -78.7472, 0.74", "4.7393, 163.609, -78.7987, 0.88", "4.70973, 164.256, -78.8782, 0.74", "4.68054, 165.054, -78.9988, 0.66", "4.60302, 166.391, -79.2161, 0.29", "4.51833, 167.291, -79.3638, 0.29", "4.4708, 167.763, -79.446, 0.44", "4.45587, 167.927, -79.474, 0.44", "4.42633, 168.398, -79.5443, 0.44", "4.42245, 168.849, -79.5926, 0.29", "4.46382, 169.299, -79.6125, 0.74", "4.58602, 169.93, -79.6426, 0.96", "4.66961, 170.25, -79.6612, 0.88", "4.9, 171.017, -79.7121, 0.29", "5.07305, 171.538, -79.7498, 0.44", "5.30552, 172.205, -79.799, 0.29", "5.61458, 173.183, -79.859, 0.37", "5.7448, 173.599, -79.8824, 0.59", "5.94997, 174.205, -79.9204, 0.74", "6.07668, 174.585, -79.9437, 0.52", "6.2361, 175.057, -79.9616, 0.37", "6.61308, 176.174, -79.9509, 0.52", "6.92676, 177.092, -79.9097, 0.44", "7.40046, 178.437, -79.8225, 0.88", "7.59978, 178.973, -79.7824, 1.25", "7.7983, 179.512, -79.7385, 1.03", "8.10993, 180.36, -79.6632, 0.29", "8.36762, 181.097, -79.5936, 0.44", "8.58624, 181.945, -79.5277, 0.37", "8.73552, 182.77, -79.4869, 0.74", "8.85112, 183.636, -79.4829, 0.74", "8.85631, 183.712, -79.4859, 0.74", "8.86682, 184.582, -79.5428, 0.74", "8.84211, 185.544, -79.6017, 0.22", "8.82694, 186.042, -79.631, 0.52", "8.81374, 186.6, -79.6594, 0.96", "8.80911, 187.47, -79.6966, 0.22", "8.82779, 188.177, -79.7195, 0.66", "8.87419, 188.817, -79.7317, 1.03", "8.98716, 189.701, -79.6923, 0.81", "9.12074, 190.659, -79.6111, 0.52", "9.18902, 191.203, -79.5582, 0.44", "9.3022, 192.333, -79.4388, 0.37", "9.37011, 193.334, -79.3268, 0.88", "9.43062, 194.431, -79.2048, 1.25", "9.46917, 195.074, -79.1392, 0.88", "9.54054, 195.94, -79.0692, 0.44", "9.61967, 196.881, -79.0155, 0.59", "9.67002, 197.441, -79.0006, 0.81", "9.7339, 198.06, -79.0083, 0.59", "9.83395, 198.84, -79.0501, 0.37", "10.0566, 200.1, -79.0993, 0.52", "10.2148, 200.905, -79.1065, 0.37", "10.279, 201.277, -79.1062, 0.74", "10.3379, 201.835, -79.0951, 0.88", "10.3352, 202.144, -79.0936, 0.88", "10.2779, 202.702, -79.1546, 1.11", "10.2203, 203.27, -79.2793, 1.03", "10.1762, 203.806, -79.433, 0.37", "10.141, 204.447, -79.6423, 0.37", "10.1357, 205.406, -80.0106, 0.66", "10.1886, 206.868, -80.5946, 0.29", "10.2568, 207.833, -80.9773, 0.52", "10.2631, 207.897, -81.0018, 0.52", "10.3316, 208.431, -81.1881, 0.66", "10.4742, 209.365, -81.4533, 0.37", "10.6457, 210.424, -81.6637, 0.66", "10.763, 211.204, -81.7591, 0.59", "10.8379, 211.766, -81.7935, 0.74", "10.9381, 212.513, -81.799, 0.37", "11.101, 213.52, -81.6763, 0.59", "11.1289, 213.669, -81.6418, 0.59", "11.2486, 214.25, -81.4819, 0.37", "11.5012, 215.399, -81.14, 0.29", "11.716, 216.388, -80.8609, 0.52", "12.0545, 217.971, -80.4304, 0.22", "12.2799, 218.948, -80.1987, 0.52", "12.3872, 219.467, -80.0994, 0.81", "12.4804, 220.075, -80.0177, 0.52", "12.5876, 221.162, -79.9662, 0.74", "12.5888, 221.239, -79.9682, 0.74", "12.494, 222.255, -80.0618, 1.33", "12.3722, 223.045, -80.1159, 0.88", "12.1853, 223.939, -80.148, 0.66", "11.9571, 224.8, -80.1378, 0.52", "11.6525, 225.801, -80.1029, 0.52", "11.3809, 226.615, -80.0702, 0.52", "11.0317, 227.522, -80.026, 0.29", "10.7995, 228.156, -79.9982, 0.52", "10.5761, 228.748, -79.9647, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "34.5307, 54.1994, 11.9579, 0.59", "35.4913, 55.1108, 8.79219, 0.59", "36.0704, 55.5984, 7.27725, 0.74", "36.0971, 55.6194, 7.21637, 0.74", "36.3931, 55.8489, 6.63047, 0.74", "36.9307, 56.212, 5.73404, 0.96", "36.9675, 56.2321, 5.6783, 0.96", "37.4851, 56.394, 5.20658, 0.96", "37.5359, 56.4074, 5.16052, 0.96", "38.4901, 56.6808, 4.22853, 0.52", "39.0962, 56.872, 3.59256, 0.52", "39.9052, 57.1412, 2.72318, 0.81", "40.3505, 57.2971, 2.25633, 0.88", "41.1143, 57.5564, 1.41649, 0.52", "41.3477, 57.637, 1.17228, 0.74", "41.4325, 57.6727, 1.06735, 0.74", "41.7145, 57.8382, 0.644354, 0.29", "42.0476, 58.0865, 0.0968499, 0.59", "42.5531, 58.5763, -0.980425, 0.74", "42.8188, 58.8668, -1.60386, 0.59", "43.4096, 59.5905, -3.15335, 1.03", "43.4455, 59.6378, -3.24893, 1.03", "43.5563, 59.7997, -3.56023, 0.74", "43.9979, 60.5377, -4.82235, 0.44", "44.174, 60.85, -5.27078, 0.59", "44.5349, 61.428, -6.0603, 0.66", "44.8109, 61.772, -6.477, 0.74", "44.8438, 61.8091, -6.5229, 0.74", "44.9743, 61.9441, -6.68544, 0.74", "45.0092, 61.9763, -6.71989, 0.74", "45.6968, 62.742, -7.58511, 0.29", "45.8449, 63.0127, -7.88251, 0.66", "45.8701, 63.107, -7.98778, 0.66", "45.9117, 63.3297, -8.2743, 0.88", "45.9116, 63.3725, -8.33878, 0.88", "45.8159, 64.2194, -9.65212, 0.29", "45.663, 64.9549, -10.8155, 0.29", "45.4298, 65.8298, -12.2344, 1.11", "45.1749, 66.6519, -13.5923, 0.96", "44.6291, 68.2204, -16.1479, 0.66", "44.5122, 68.5274, -16.6356, 0.66", "44.4688, 68.6307, -16.7901, 0.66", "44.2463, 69.1834, -17.5519, 0.59", "44.2122, 69.2855, -17.6683, 0.59", "43.996, 70.2155, -18.4249, 0.52", "43.9952, 70.2585, -18.4503, 0.52", "44.0312, 70.7312, -18.7309, 0.96", "44.1197, 71.2899, -19.046, 1.11", "44.4089, 72.4427, -19.6325, 0.29", "44.4263, 72.4921, -19.6616, 0.29", "44.6014, 72.8116, -19.9249, 0.52", "44.6257, 72.8491, -19.9635, 0.52", "44.7204, 72.9771, -20.1168, 0.74", "44.746, 73.0162, -20.1655, 0.74", "45.1316, 73.7185, -20.9005, 0.74", "45.4184, 74.4046, -21.5004, 0.59", "45.4351, 74.4559, -21.5397, 0.59", "45.5834, 74.9338, -21.8565, 0.29", "45.811, 75.7329, -22.2971, 0.29", "45.975, 76.3991, -22.6154, 0.88", "46.0576, 76.7854, -22.7462, 1.11", "46.0688, 76.8396, -22.762, 1.11", "46.205, 77.3786, -22.9259, 0.88", "46.2747, 77.5887, -23.0115, 0.52", "46.6374, 78.3762, -23.3933, 0.37", "46.9908, 79.0321, -23.7766, 0.22", "47.0212, 79.0838, -23.8092, 0.22", "47.2144, 79.4208, -24.0121, 0.74", "47.6008, 80.2132, -24.4982, 0.88", "47.7933, 80.6027, -24.7347, 0.22", "47.9894, 80.9549, -24.981, 0.29", "48.0191, 81.0009, -25.0197, 0.29", "48.2343, 81.3446, -25.4083, 0.29", "48.6155, 81.9624, -26.3569, 0.88", "48.7555, 82.168, -26.7287, 1.18", "49.1775, 82.7467, -27.9134, 0.29", "49.3667, 82.9919, -28.4492, 0.88", "50.0207, 83.8245, -30.2451, 1.33", "50.5753, 84.488, -31.6922, 0.52", "50.7704, 84.7183, -32.1728, 1.25", "50.7908, 84.7453, -32.2219, 1.25", "51.2517, 85.4591, -33.2895, 0.29", "51.4818, 85.8446, -33.7713, 0.29", "51.722, 86.2293, -34.1082, 0.59", "51.8557, 86.4555, -34.2759, 0.96", "52.1279, 86.916, -34.6225, 0.96", "52.5863, 87.6075, -35.1872, 0.59", "52.6204, 87.6512, -35.2252, 0.59", "52.8938, 87.9779, -35.5208, 0.29", "53.2881, 88.4492, -35.9181, 0.44", "53.5327, 88.74, -36.1448, 0.66", "53.8899, 89.2087, -36.4729, 0.29", "54.1283, 89.5182, -36.662, 0.22", "54.4381, 89.9346, -36.9144, 0.66", "54.6042, 90.1561, -37.0485, 0.74", "54.7768, 90.3924, -37.1814, 0.59", "55.3966, 91.1782, -37.6481, 0.22", "55.6834, 91.4605, -37.8742, 0.44", "55.7306, 91.4926, -37.9136, 0.44", "56.0076, 91.6228, -38.1388, 0.59", "56.0511, 91.6405, -38.1756, 0.59", "56.4763, 91.7906, -38.5334, 0.59", "57.1724, 92.0199, -39.0911, 0.22", "57.5466, 92.1796, -39.3924, 0.59", "57.7944, 92.301, -39.586, 0.66", "58.2461, 92.5839, -39.9828, 0.66", "58.2858, 92.6136, -40.0187, 0.66", "58.7927, 93.0747, -40.5043, 0.22", "59.1496, 93.4359, -40.8374, 0.66", "59.3065, 93.6034, -40.987, 0.96", "60.127, 94.4991, -41.7602, 0.22", "60.3998, 94.8195, -42.0559, 0.22", "60.7563, 95.3233, -42.6036, 0.59", "60.8973, 95.5813, -42.9284, 0.96", "60.9573, 95.704, -43.1002, 1.18", "60.9728, 95.7358, -43.148, 1.18", "61.4218, 96.4719, -44.3654, 0.44", "61.8347, 96.9985, -45.3415, 0.37", "62.1776, 97.3532, -46.0531, 0.29", "62.406, 97.5542, -46.4621, 0.44", "62.5819, 97.7039, -46.7518, 0.44", "63.1311, 98.1255, -47.4892, 0.22", "63.5941, 98.3932, -47.9412, 0.81", "63.6855, 98.438, -48.0184, 0.81", "63.9871, 98.5593, -48.2668, 0.96", "65.141, 98.9806, -49.229, 0.37", "65.8035, 99.2359, -49.7858, 0.37", "66.4133, 99.5208, -50.3682, 0.29", "66.4465, 99.5363, -50.4042, 0.29", "66.8654, 99.7238, -50.8825, 0.29", "67.1905, 99.8615, -51.2519, 0.74", "67.6303, 100.021, -51.6634, 1.03", "68.438, 100.329, -52.3861, 0.88", "69.5991, 100.754, -53.1926, 0.29", "70.0267, 100.88, -53.4172, 0.44", "70.6601, 101.019, -53.6677, 0.29", "71.7173, 101.155, -53.9611, 1.33", "72.1132, 101.168, -54.0244, 1.69", "73.461, 101.144, -54.0959, 0.29", "74.0531, 101.12, -54.0865, 0.29", "74.4115, 101.095, -54.0904, 0.66", "74.4646, 101.09, -54.0943, 0.66", "74.849, 101.05, -54.1737, 0.66", "75.5043, 100.966, -54.3717, 0.22", "75.8935, 100.884, -54.5378, 0.44", "75.9567, 100.869, -54.5624, 0.44", "76.4253, 100.738, -54.7315, 0.44", "76.4696, 100.726, -54.7544, 0.44", "77.0232, 100.603, -55.0943, 0.29", "77.6004, 100.485, -55.5361, 0.29", "78.0119, 100.407, -55.8972, 0.74", "78.2341, 100.369, -56.1042, 0.96", "79.3668, 100.212, -57.2606, 0.37", "79.6112, 100.193, -57.5311, 1.03", "80.1797, 100.221, -58.2672, 1.03", "80.4162, 100.264, -58.6322, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "34.5307, 54.1994, 11.9579, 0.88", "36.345, 54.9115, 13.7611, 0.88", "37.2204, 55.3493, 14.5142, 0.66", "37.6854, 55.6464, 14.9139, 0.66", "37.7266, 55.6789, 14.9499, 0.66", "38.1679, 56.1191, 15.3491, 0.66", "38.2045, 56.1613, 15.3822, 0.66", "38.5845, 56.7994, 15.7168, 0.74", "39.1076, 57.8492, 16.3137, 0.44", "39.3272, 58.3201, 16.615, 0.37", "39.6353, 58.9887, 17.0713, 0.37", "39.7763, 59.3009, 17.2923, 0.59", "40.1093, 60.046, 17.8122, 0.59", "40.354, 60.5878, 18.1758, 0.59", "40.4809, 60.8386, 18.3109, 0.88", "40.5162, 60.8919, 18.3417, 0.88", "40.9074, 61.3464, 18.6861, 1.18", "40.9889, 61.4273, 18.7645, 1.18", "41.2401, 61.6597, 19.0304, 0.88", "41.7825, 62.1518, 19.6304, 0.44", "42.4194, 62.7254, 20.3069, 0.74", "43.2608, 63.4644, 21.1831, 1.33", "44.0235, 64.1385, 21.9644, 0.96", "44.7975, 64.8432, 22.7455, 0.52", "45.2595, 65.2944, 23.2116, 0.44", "45.8533, 65.9051, 23.8339, 0.37", "46.4077, 66.5385, 24.4848, 0.37", "46.7472, 66.9594, 24.9487, 0.37", "46.8268, 67.0697, 25.0857, 0.37", "47.063, 67.4217, 25.6103, 0.59", "47.4947, 68.1653, 26.9226, 0.88", "47.7441, 68.7042, 28.0002, 0.88", "47.883, 69.1228, 28.8608, 0.52", "47.9531, 69.3707, 29.3995, 0.52", "47.9592, 69.3949, 29.4474, 0.52", "48.014, 69.6421, 29.8135, 0.52", "48.025, 69.6949, 29.8442, 0.52", "48.1403, 70.0856, 29.9304, 0.74", "48.1704, 70.1735, 29.939, 0.74", "48.3922, 70.7162, 29.9744, 0.37", "48.7427, 71.5235, 30.0146, 0.44", "49.0474, 72.202, 29.9956, 0.44", "49.2985, 72.7616, 29.9522, 0.74", "49.3504, 72.8746, 29.938, 0.74", "49.6583, 73.5998, 29.8239, 0.74", "49.6814, 73.6569, 29.8132, 0.74", "50.0015, 74.5173, 29.6492, 0.66", "50.022, 74.5774, 29.6392, 0.66", "50.2069, 75.1, 29.5734, 0.74", "50.5357, 76.0375, 29.498, 0.29", "50.7406, 76.5976, 29.5096, 0.44", "50.985, 77.2399, 29.5836, 0.22", "51.1666, 77.7129, 29.6956, 0.66", "51.2975, 78.0704, 29.8006, 0.66", "51.3182, 78.1351, 29.8255, 0.66", "51.5944, 78.9334, 30.2035, 0.44", "51.6158, 78.9893, 30.2259, 0.44", "51.7402, 79.2737, 30.3139, 0.52", "51.8168, 79.4513, 30.3495, 0.52", "51.9591, 79.8065, 30.3883, 0.52", "52.2415, 80.6045, 30.4385, 0.29", "52.4638, 81.3781, 30.4803, 0.29", "52.4746, 81.4299, 30.4865, 0.29", "52.5575, 82.0037, 30.584, 0.44", "52.5701, 82.2007, 30.6292, 0.44", "52.5668, 82.7965, 30.8405, 0.44", "52.5165, 83.3382, 31.0966, 0.59", "52.4953, 83.7987, 31.3783, 0.74", "52.4989, 83.8579, 31.4169, 0.74", "52.5904, 84.2924, 31.7028, 0.74", "52.8833, 84.9018, 32.2037, 0.52", "52.9125, 84.9429, 32.2415, 0.52", "53.2821, 85.4119, 32.6636, 0.44", "53.493, 85.671, 32.9154, 0.29", "53.8006, 86.0941, 33.3273, 0.29", "54.4134, 86.9789, 34.3146, 0.29", "54.6178, 87.3098, 34.6835, 0.37", "54.8852, 87.771, 35.1829, 0.44", "55.2456, 88.4505, 35.9033, 0.96", "55.476, 88.8736, 36.3398, 1.25", "56.1439, 89.9224, 37.3854, 0.52", "56.4565, 90.3678, 37.7661, 0.52", "56.7684, 90.7315, 38.065, 0.66", "56.8145, 90.7752, 38.0995, 0.66", "57.2864, 91.1911, 38.3631, 0.44", "57.9966, 91.8046, 38.6928, 0.29", "58.2078, 92.0273, 38.7881, 0.52", "58.5291, 92.4082, 38.9827, 0.52", "58.9102, 92.8985, 39.2503, 0.44", "59.2005, 93.2796, 39.4414, 0.29", "59.4575, 93.5907, 39.6237, 0.52", "60.0248, 94.2229, 39.9778, 0.88", "60.3197, 94.5219, 40.1455, 0.52", "60.9921, 95.1358, 40.4821, 0.44", "61.5321, 95.592, 40.7115, 0.59", "62.5289, 96.3195, 41.0997, 0.29", "63.2705, 96.7952, 41.3713, 0.29", "67.3055, 103.259, 45.9078, 0.29", "70.0974, 110.874, 49.2882, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-82.7522, -139.079, 32.3596, 0.29", "-82.9013, -140.079, 32.7156, 0.29", "-82.9521, -140.42, 32.8369, 0.74", "-83.0471, -141.057, 33.0638, 0.29", "-83.1364, -141.656, 33.2771, 0.29", "-83.2578, -142.471, 33.5671, 0.37", "-84.8671, -150.952, 35.3478, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-82.7522, -139.079, 32.3596, 0.37", "-83.0362, -139.199, 33.1501, 0.37", "-83.2073, -139.262, 33.549, 0.37", "-83.5242, -139.358, 34.2849, 0.44", "-83.7549, -139.426, 34.7897, 0.37", "-84.2244, -139.578, 35.7675, 0.88", "-84.3808, -139.646, 36.1262, 1.11", "-84.5718, -139.739, 36.5616, 0.81", "-84.9961, -140.019, 37.6391, 0.29", "-85.1378, -140.115, 37.9769, 0.29", "-85.2613, -140.202, 38.283, 0.74", "-85.7005, -140.48, 39.2653, 0.44", "-85.8356, -140.56, 39.5724, 0.44", "-86.1489, -140.701, 40.2206, 0.29", "-86.4654, -140.863, 40.9593, 0.29", "-86.6304, -140.965, 41.5373, 0.59", "-86.7304, -141.026, 41.9566, 0.66", "-86.8733, -141.103, 42.5836, 0.44", "-86.9863, -141.174, 43.2017, 0.37", "-87.2148, -141.355, 44.783, 0.66", "-87.4072, -141.554, 46.3562, 0.81", "-87.4571, -141.594, 46.7, 0.88", "-87.4953, -141.627, 47.0099, 0.88", "-87.5017, -141.632, 47.0628, 0.88", "-87.6365, -141.714, 47.9508, 0.52", "-87.7946, -141.714, 48.358, 0.52", "-88.4333, -141.72, 49.5317, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-0.81798, -106.1, -27.1119, 0.74", "-0.915176, -107.089, -27.5814, 0.74", "-0.913113, -107.897, -27.9431, 0.74", "-0.8532, -109.009, -28.4009, 0.88", "-0.792828, -109.692, -28.6647, 0.88", "-0.693858, -110.811, -29.0972, 0.81", "-0.559593, -112.329, -29.684, 0.88", "-0.402504, -113.261, -30.0093, 0.88", "-0.247035, -113.914, -30.2317, 1.33", "-0.0464659, -114.606, -30.4386, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.81798, -106.1, -27.1119, 0.59", "-0.783504, -106.719, -27.2421, 0.59", "-0.719749, -107.529, -27.5439, 0.52", "-0.620717, -108.344, -27.8761, 0.44", "-0.52164, -109.05, -28.1725, 0.44", "-0.359485, -110.009, -28.5483, 0.59", "-0.135585, -111.158, -28.9956, 0.74", "0.0635401, -112.02, -29.3571, 0.59", "0.230951, -112.646, -29.627, 0.59", "0.246308, -112.696, -29.6468, 0.59", "0.565735, -113.667, -29.9577, 0.59", "0.923274, -114.709, -30.1496, 0.74", "1.13959, -115.302, -30.2035, 0.74", "1.5034, -116.264, -30.251, 0.66", "1.84947, -117.15, -30.2738, 0.59", "1.89783, -117.26, -30.2666, 0.59", "2.34048, -118.08, -30.0996, 0.59", "2.53011, -118.368, -29.9921, 0.81", "2.56592, -118.419, -29.9698, 0.81", "2.91076, -118.897, -29.7575, 0.81", "3.55682, -119.809, -29.4414, 0.66", "4.01691, -120.522, -29.2604, 0.66", "4.39541, -121.218, -29.1078, 0.66", "4.75605, -121.995, -28.9193, 0.81", "5.00157, -122.611, -28.7686, 0.96", "5.30614, -123.525, -28.5568, 0.52", "5.51159, -124.241, -28.4093, 0.52", "5.74984, -125.177, -28.1789, 0.81", "5.94711, -125.927, -27.9652, 0.81", "6.12871, -126.614, -27.7525, 0.81", "6.14272, -126.674, -27.7338, 0.81", "6.3375, -127.595, -27.4759, 0.81", "6.3598, -127.703, -27.4535, 0.81", "6.54982, -128.786, -27.2961, 0.81", "6.65068, -129.605, -27.1986, 0.81", "6.71013, -130.373, -27.1028, 0.66", "6.71235, -130.437, -27.0919, 0.66", "6.70758, -131.248, -26.9268, 0.37", "6.70575, -132.209, -26.7128, 0.66", "6.7041, -132.652, -26.6049, 0.96", "6.7157, -133.526, -26.3425, 0.74", "6.73822, -134.578, -25.9869, 0.96", "6.75191, -135.383, -25.7242, 0.81", "6.76712, -136.334, -25.4287, 0.74", "6.76753, -136.38, -25.4184, 0.74", "6.78358, -137.378, -25.286, 0.74", "6.78757, -137.435, -25.2845, 0.74", "6.97375, -138.417, -25.4495, 0.44", "7.10751, -138.925, -25.5844, 0.44", "7.42903, -139.958, -25.937, 1.4", "7.68477, -140.618, -26.2186, 1.18", "8.0717, -141.429, -26.6537, 1.03", "8.82889, -142.757, -27.4234, 0.66", "9.16331, -143.253, -27.7139, 0.66", "9.24556, -143.365, -27.7765, 0.66", "10.0286, -144.371, -28.2889, 0.81", "10.6204, -145.113, -28.694, 0.96", "11.4106, -146.074, -29.2391, 0.74", "12.0354, -146.798, -29.6178, 0.74", "12.5227, -147.348, -29.8927, 0.96", "12.8868, -147.767, -30.0696, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-25.1077, -292.569, -9.08515, 0.29", "-24.0737, -292.559, -9.4328, 0.29", "-23.4469, -292.554, -9.64354, 0.29", "-22.2229, -292.543, -10.055, 0.22", "-21.6236, -292.537, -10.2565, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-25.1077, -292.569, -9.08515, 0.59", "-25.3817, -293.623, -9.14819, 0.59", "-25.4027, -293.692, -9.15117, 0.59", "-25.7749, -294.775, -9.17097, 0.52", "-26.1619, -295.869, -9.17945, 0.66", "-26.4968, -296.904, -9.18164, 0.66", "-26.8262, -297.977, -9.18116, 0.81", "-26.8968, -298.194, -9.17452, 0.81", "-27.185, -299.282, -9.08877, 0.81", "-27.2118, -299.427, -9.07075, 0.81", "-27.2393, -300.698, -8.80411, 0.81", "-27.2365, -300.776, -8.79177, 0.81", "-27.2105, -301.924, -8.79738, 0.59", "-27.2194, -303.067, -8.92698, 0.37", "-27.2466, -303.762, -9.14176, 0.74", "-27.4311, -305.128, -9.96529, 0.81", "-27.6727, -306.551, -11.1212, 0.52", "-27.9413, -308.246, -12.7517, 0.52", "-27.9488, -308.289, -12.7981, 0.52", "-28.1983, -309.51, -14.4232, 0.96", "-28.4763, -310.945, -16.7134, 1.69", "-28.5534, -311.478, -17.7184, 0.37", "-28.5817, -312.144, -19.1868, 0.37", "-28.5578, -312.434, -19.8805, 0.66", "-28.334, -313.763, -23.1454, 1.25", "-28.0919, -314.642, -25.4174, 0.44", "-27.8875, -315.179, -26.8193, 0.81", "-27.458, -316.206, -29.4879, 0.37", "-27.2507, -316.608, -30.5093, 0.29", "-26.8669, -317.174, -31.8632, 0.29", "-26.632, -317.46, -32.4146, 0.96", "-26.3465, -317.767, -32.9515, 0.96", "-25.6954, -318.476, -34.0249, 0.44", "-25.4596, -318.718, -34.4367, 0.81", "-25.1444, -319.015, -35.0464, 1.03", "-25.1081, -319.048, -35.1151, 1.03", "-24.129, -319.999, -36.9037, 0.37", "-23.4683, -320.682, -38.0918, 1.4", "-22.418, -322.053, -40.3492, 0.37", "-22.1479, -322.489, -41.0108, 0.66", "-21.7712, -323.173, -41.9505, 0.29", "-21.4359, -323.787, -42.6738, 0.96", "-21.2747, -324.084, -42.9567, 0.96", "-20.0138, -326.468, -44.8015, 0.37", "-19.8412, -326.813, -44.9952, 0.59", "-19.3586, -327.76, -45.5484, 0.29", "-18.8375, -328.708, -46.202, 0.96", "-18.8066, -328.759, -46.2403, 0.96", "-18.4781, -329.199, -46.4609, 1.33", "-18.426, -329.249, -46.4486, 1.33", "-18.0709, -329.596, -46.339, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-48.412, -56.8326, -3.42664, 0.29", "-48.2441, -57.722, -2.79601, 0.29", "-48.1246, -58.3558, -2.34667, 0.37", "-48.0142, -58.9408, -1.93188, 0.37", "-47.8561, -59.7787, -1.33778, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-48.412, -56.8326, -3.42664, 0.37", "-49.6765, -57.4893, -3.09654, 0.37", "-50.5502, -57.8454, -2.76066, 0.37", "-51.5478, -58.1528, -2.33993, 0.81", "-52.2235, -58.2966, -1.93474, 1.25", "-52.7299, -58.3777, -1.5806, 1.25", "-54.8845, -58.7256, -0.0482364, 0.44", "-55.0325, -58.7414, 0.0645096, 0.44", "-55.532, -58.7796, 0.447044, 0.74", "-57.5086, -58.949, 1.89678, 0.52", "-58.5494, -59.101, 2.59648, 0.59", "-59.3319, -59.3144, 2.97603, 0.44", "-59.9724, -59.6016, 3.11048, 0.29", "-60.6603, -59.9876, 3.16396, 0.29", "-61.5232, -60.602, 3.10791, 1.11", "-62.0599, -61.069, 2.99125, 1.33", "-63.3212, -62.4255, 2.64499, 0.74", "-63.939, -63.2347, 2.47774, 0.74", "-64.2656, -63.7591, 2.39815, 1.11", "-64.63, -64.4142, 2.35208, 0.88", "-65.0413, -65.2201, 2.35837, 0.66", "-65.4949, -66.1745, 2.42721, 0.37", "-65.7492, -66.8166, 2.52565, 0.37", "-66.1014, -67.8174, 2.68447, 0.37", "-66.4379, -68.9313, 2.85983, 0.37", "-66.6605, -69.7622, 2.98561, 0.29", "-66.8335, -70.5581, 3.12864, 0.59", "-66.986, -71.366, 3.31776, 0.81", "-66.9936, -71.432, 3.3339, 0.81", "-67.0329, -72.3309, 3.59061, 0.74", "-67.0223, -72.9018, 3.75763, 1.11", "-66.9709, -74.1585, 4.15332, 0.59", "-66.953, -74.7312, 4.34531, 1.03", "-66.9527, -75.8388, 4.75501, 0.52", "-66.9783, -76.7599, 5.10796, 0.74", "-67.0164, -77.4078, 5.355, 0.66", "-67.1105, -78.5836, 5.79241, 0.44", "-67.2528, -79.6204, 6.16897, 0.44", "-67.5039, -80.6926, 6.55855, 0.44", "-67.6591, -81.1186, 6.71253, 0.81", "-68.0133, -81.878, 6.96501, 1.18", "-68.179, -82.1605, 7.05983, 1.33", "-68.9489, -83.2923, 7.46463, 0.44", "-69.5879, -84.1749, 7.77462, 0.59", "-70.0956, -84.8097, 8.09046, 0.81", "-70.3609, -85.098, 8.27489, 0.81", "-71.0492, -85.7061, 8.80535, 0.37", "-71.8259, -86.276, 9.39466, 0.74", "-72.1467, -86.468, 9.63341, 0.96", "-73.9433, -87.4267, 11.0137, 0.59", "-74.7277, -87.7975, 11.6125, 0.81", "-76.2972, -88.4484, 12.7982, 0.52", "-77.2544, -88.7743, 13.4944, 0.52", "-78.0998, -89.0123, 14.0527, 0.74", "-84.6625, -96.7778, 19.743, 0.74", "-91.5969, -104.96, 24.2174, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-104.862, -73.8226, -108.612, 0.52", "-104.441, -75.112, -109.434, 0.52", "-103.927, -76.6061, -110.353, 0.88", "-103.65, -77.3063, -110.755, 0.88", "-103.129, -78.4684, -111.415, 0.37", "-102.889, -78.9751, -111.687, 0.29", "-102.676, -79.4461, -111.923, 0.88", "-102.631, -79.5431, -111.967, 0.88", "-102.296, -80.3233, -112.212, 0.88", "-101.899, -81.3657, -112.478, 0.29", "-101.658, -82.0965, -112.594, 0.29", "-101.477, -82.7764, -112.683, 0.22", "-101.318, -83.561, -112.763, 0.22", "-101.27, -83.9436, -112.792, 0.81", "-101.241, -84.643, -112.824, 1.25", "-101.232, -85.7962, -112.831, 0.37", "-101.242, -86.8757, -112.838, 0.22", "-101.255, -87.5359, -112.843, 0.66", "-101.28, -88.1587, -112.849, 0.81", "-101.362, -89.411, -112.862, 0.22", "-101.424, -90.0223, -112.87, 0.88", "-101.473, -90.3613, -112.876, 1.03", "-101.536, -90.8718, -112.888, 1.03", "-101.58, -91.4076, -112.9, 0.74", "-101.58, -91.4944, -112.902, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-104.862, -73.8226, -108.612, 0.22", "-106.716, -74.022, -110.956, 0.22", "-107.464, -74.1471, -111.819, 0.22", "-108.279, -74.3091, -112.654, 0.81", "-108.723, -74.4106, -113.053, 1.11", "-109.277, -74.5511, -113.482, 1.03", "-110.846, -74.9626, -114.57, 0.22", "-111.141, -75.0581, -114.716, 0.66", "-111.802, -75.2949, -115.03, 0.96", "-112.565, -75.5288, -115.339, 0.29", "-113.439, -75.7326, -115.687, 0.29", "-113.772, -75.7842, -115.806, 0.96", "-114.442, -75.8406, -116.047, 1.18", "-114.506, -75.8418, -116.076, 1.18", "-115.323, -75.8124, -116.505, 0.88", "-115.445, -75.8064, -116.572, 0.88", "-115.957, -75.8, -116.842, 0.66", "-117.188, -75.8977, -117.534, 0.29", "-117.421, -75.9272, -117.662, 0.29", "-118.387, -76.091, -118.19, 0.29", "-118.887, -76.1699, -118.544, 0.59", "-119.285, -76.2131, -118.859, 0.59", "-120.46, -76.3002, -119.892, 0.29", "-120.781, -76.3099, -120.18, 1.03", "-121.245, -76.2871, -120.688, 1.33", "-122.603, -76.0496, -122.555, 0.29", "-122.845, -75.9791, -122.91, 0.29", "-122.889, -75.9623, -122.98, 0.29", "-123.27, -75.8357, -123.638, 0.59", "-124.173, -75.6362, -125.257, 0.81", "-124.785, -75.6158, -126.45, 0.52", "-125.095, -75.6859, -127.08, 1.11", "-125.648, -75.9206, -128.304, 1.4", "-126.451, -76.3194, -130.162, 0.29", "-126.634, -76.4352, -130.614, 0.88", "-127.381, -77.0851, -132.46, 0.52", "-127.947, -77.7313, -133.942, 0.81", "-128.142, -78.015, -134.518, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-17.4863, 317.428, 32.9269, 0.37", "-17.2401, 317.422, 32.6477, 0.37", "-16.7668, 317.37, 32.1089, 0.66", "-16.735, 317.364, 32.0743, 0.66", "-16.5036, 317.319, 31.823, 0.29", "-16.4662, 317.311, 31.7829, 0.29", "-15.8585, 317.224, 31.0738, 0.29", "-15.8283, 317.221, 31.0379, 0.29", "-15.6827, 317.227, 30.8729, 0.66", "-15.5147, 317.242, 30.6708, 0.52", "-15.4853, 317.247, 30.6322, 0.52", "-14.9431, 317.415, 29.9261, 0.22", "-14.6716, 317.581, 29.5948, 0.22", "-14.5268, 317.678, 29.4114, 0.29", "-9.60691, 319.264, 25.1621, 0.29", "-4.83515, 321.993, 21.4161, 0.29", "-1.0942, 325.178, 16.9642, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.4863, 317.428, 32.9269, 0.29", "-17.3705, 318.728, 32.7498, 0.29", "-17.3568, 319.166, 32.7005, 0.29", "-17.3567, 319.224, 32.6996, 0.29", "-17.3692, 319.894, 32.7298, 0.29", "-17.3711, 319.944, 32.7341, 0.29", "-17.4049, 320.846, 32.8824, 0.29", "-17.411, 320.892, 32.8978, 0.29", "-17.4393, 321.452, 33.102, 0.52", "-17.4377, 321.564, 33.1399, 0.52", "-17.423, 321.8, 33.2024, 0.52", "-17.3757, 322.373, 33.3162, 0.22", "-17.3299, 322.933, 33.3802, 0.22", "-17.284, 323.491, 33.4203, 0.44", "-17.25, 323.918, 33.4189, 0.44", "-17.203, 324.524, 33.3999, 0.22", "-17.1991, 324.584, 33.395, 0.22", "-17.1835, 325.425, 33.2453, 0.22", "-17.9842, 333.61, 33.3563, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-5.68389, 172.331, -75.0731, 0.66", "-5.78792, 173.037, -75.0812, 0.66", "-5.85447, 173.713, -75.0771, 0.29", "-5.85915, 173.785, -75.0758, 0.29", "-5.88934, 174.493, -75.0575, 0.29", "-5.96641, 175.711, -75.0363, 0.29", "-6.0193, 176.235, -75.0349, 0.52", "-6.04149, 176.408, -75.0361, 0.52", "-6.07555, 176.658, -75.0398, 0.52", "-6.14743, 177.115, -75.0503, 0.37", "-6.27597, 177.743, -75.0758, 0.37", "-6.60555, 178.66, -75.1662, 0.88", "-6.6594, 178.783, -75.1797, 0.88", "-6.8876, 179.274, -75.232, 1.03", "-7.10238, 179.749, -75.2753, 1.18", "-7.31934, 180.272, -75.3109, 0.66", "-7.55803, 180.929, -75.3377, 0.52", "-7.65812, 181.251, -75.3428, 0.59", "-7.73486, 181.608, -75.3399, 0.44", "-7.8439, 182.592, -75.3058, 0.29", "-7.85482, 182.976, -75.2866, 0.37", "-7.85217, 183.05, -75.2864, 0.37", "-7.8362, 183.487, -75.3074, 0.22", "-7.86256, 184.342, -75.3562, 0.59", "-7.90076, 184.786, -75.382, 0.88", "-8.00353, 185.526, -75.4216, 0.52", "-8.17272, 186.451, -75.4658, 0.29", "-8.32556, 187.128, -75.4926, 0.29", "-8.58072, 188.025, -75.5244, 0.59", "-8.60656, 188.095, -75.5221, 0.59", "-8.80303, 188.569, -75.4721, 0.29", "-8.84699, 188.669, -75.4525, 0.29", "-9.10387, 189.424, -75.237, 0.52", "-9.19043, 189.779, -75.1554, 0.66", "-9.36657, 190.638, -75.02, 0.52", "-9.38079, 190.71, -75.0102, 0.52", "-9.48189, 191.227, -74.9576, 0.29", "-9.70394, 192.478, -74.9471, 0.29", "-9.85075, 193.388, -75.0305, 0.66", "-9.91086, 193.715, -75.0683, 0.88", "-9.9249, 193.786, -75.0783, 0.88", "-10.0999, 194.434, -75.1628, 0.52", "-10.3978, 195.265, -75.2661, 0.52", "-10.6795, 195.957, -75.3375, 0.29", "-11.0262, 196.871, -75.3946, 0.29", "-11.2792, 197.583, -75.4096, 1.03", "-11.5323, 198.348, -75.4015, 0.74", "-11.7967, 199.217, -75.3199, 0.29", "-12.1328, 200.441, -75.1248, 0.44", "-12.2811, 201.08, -75.0007, 0.37", "-12.4261, 201.838, -74.8429, 0.37", "-12.5533, 202.654, -74.6276, 0.96", "-12.6631, 203.757, -74.2745, 0.37", "-12.7083, 204.493, -74.0018, 0.37", "-12.731, 205.139, -73.734, 0.59", "-12.7286, 205.492, -73.5896, 0.88", "-12.7208, 205.705, -73.5081, 0.88", "-12.6757, 206.384, -73.2727, 0.59", "-12.6704, 206.443, -73.2563, 0.52", "-12.509, 207.924, -72.86, 0.15", "-12.4276, 208.604, -72.7047, 0.59", "-12.4185, 208.675, -72.6894, 0.59", "-12.3142, 209.207, -72.5756, 0.59", "-12.2962, 209.276, -72.5617, 0.59", "-12.1261, 209.839, -72.4552, 0.88", "-11.8712, 210.637, -72.3309, 1.18", "-11.7635, 210.996, -72.2776, 1.18", "-11.4229, 212.368, -72.0785, 0.15", "-11.2367, 213.389, -71.9428, 0.15", "-11.18, 213.952, -71.8801, 0.52", "-11.1639, 214.618, -71.8193, 0.66", "-11.188, 215.005, -71.7943, 0.74", "-11.3011, 215.782, -71.7654, 0.29", "-11.4497, 216.516, -71.7525, 0.37", "-11.6209, 217.464, -71.6725, 0.29", "-11.6317, 217.545, -71.6606, 0.29", "-11.6519, 218.626, -71.4148, 0.52", "-11.6449, 218.695, -71.3943, 0.52", "-11.4354, 219.625, -71.0585, 0.81", "-11.1307, 220.579, -70.6577, 0.37", "-11.1073, 220.642, -70.6277, 0.37", "-10.7984, 221.61, -70.2028, 0.29", "-10.6792, 222.061, -70.0222, 0.37", "-10.6676, 222.12, -70.0029, 0.37", "-10.5693, 222.764, -69.8434, 0.37", "-10.4462, 223.794, -69.5564, 0.29", "-10.3086, 224.926, -69.16, 0.37", "-10.2606, 225.345, -68.9993, 0.88", "-10.1859, 225.81, -68.8093, 0.96", "-9.92503, 226.898, -68.2772, 0.52", "-9.49033, 228.212, -67.5404, 0.66", "-9.29064, 228.694, -67.228, 0.66", "-8.9887, 229.293, -66.7863, 0.29", "-8.62449, 229.959, -66.2621, 0.44", "-8.19389, 230.721, -65.6354, 1.11", "-7.85355, 231.331, -65.1299, 1.11", "-7.3281, 232.289, -64.3853, 1.11", "-7.11279, 232.699, -64.0386, 1.55", "-6.75468, 233.356, -63.4149, 1.55", "-6.70821, 233.436, -63.3274, 1.55", "-6.43436, 233.879, -62.7426, 1.55", "-6.41184, 233.912, -62.6927, 1.55", "-6.04923, 234.385, -61.8809, 2.06", "-6.02335, 234.419, -61.8185, 2.06", "-5.30913, 235.273, -60.0708, 0.52", "-4.8734, 235.76, -59.0219, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.68389, 172.331, -75.0731, 0.74", "-5.367, 171.417, -74.8681, 0.74", "-5.3522, 171.367, -74.8585, 0.74", "-5.18626, 170.735, -74.7523, 0.37", "-4.97686, 169.815, -74.6142, 0.22", "-4.89654, 169.372, -74.557, 0.37", "-4.80979, 168.824, -74.4978, 0.15", "-4.71452, 167.978, -74.4391, 0.15", "-4.67484, 167.602, -74.4136, 0.44", "-4.64116, 167.191, -74.3874, 0.44", "-4.60781, 166.392, -74.3495, 0.22", "-4.58416, 165.467, -74.3395, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "80.4162, 100.264, -58.6322, 0.22", "81.3393, 100.717, -60.214, 0.22", "81.6656, 100.877, -60.7731, 0.74", "81.8388, 100.962, -61.0699, 0.74", "83.1997, 101.63, -63.402, 0.29", "83.5339, 101.794, -63.9747, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "80.4162, 100.264, -58.6322, 0.22", "81.1565, 99.9456, -59.1603, 0.22", "81.6823, 99.7669, -59.579, 0.66", "82.0293, 99.6638, -59.861, 0.66", "82.4391, 99.5689, -60.185, 0.52", "83.2523, 99.4871, -60.8295, 0.22", "83.6462, 99.5047, -61.1283, 0.22", "84.2219, 99.6714, -61.5131, 0.59", "84.5141, 99.7943, -61.6826, 0.74", "84.9363, 99.9896, -61.8859, 0.74", "85.7987, 100.416, -62.2144, 0.29", "86.5394, 100.805, -62.419, 0.29", "87.4541, 101.299, -62.637, 0.59", "87.8797, 101.528, -62.7145, 0.52", "88.7209, 101.977, -62.8515, 0.22", "89.1893, 102.198, -62.9132, 0.29", "89.8462, 102.425, -62.9608, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "70.0974, 110.874, 49.2882, 0.29", "75.0992, 119.271, 54.7179, 0.29", "78.4446, 128.895, 59.0963, 0.29", "81.6816, 138.35, 63.9182, 0.29", "84.0033, 147.263, 70.1417, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "70.0974, 110.874, 49.2882, 0.44", "74.5715, 116.629, 53.2063, 0.29", "79.0697, 122.555, 56.8241, 0.29", "83.3134, 129.292, 59.0003, 0.29", "85.7743, 136.678, 61.5073, 0.29", "87.5919, 144.618, 62.3573, 0.29", "89.4034, 152.458, 63.8039, 0.29", "90.8132, 160.099, 66.2742, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-84.8671, -150.952, 35.3478, 0.29", "-85.1649, -156.888, 38.1519, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-84.8671, -150.952, 35.3478, 0.44", "-90.1987, -158.022, 35.2362, 0.29", "-94.4651, -165.522, 33.3198, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-88.4333, -141.72, 49.5317, 0.66", "-88.1704, -140.754, 50.494, 0.66", "-87.9829, -140.148, 50.9867, 0.29", "-87.7816, -139.447, 51.462, 0.29", "-87.7691, -139.388, 51.4953, 0.29", "-87.5845, -138.253, 52.0685, 0.52", "-87.5563, -138.028, 52.1727, 0.74", "-87.4757, -137.128, 52.4729, 0.37", "-87.4215, -136.347, 52.7019, 0.37", "-87.4048, -135.572, 52.9105, 0.29", "-87.3972, -135.093, 53.0137, 0.59", "-87.3907, -134.558, 53.0892, 0.59", "-87.3362, -133.939, 53.1507, 0.59", "-87.1818, -133.119, 53.1894, 0.52", "-87.0011, -132.517, 53.1862, 0.96", "-86.7202, -131.804, 53.1575, 0.37", "-86.5189, -131.362, 53.1197, 0.29", "-86.0958, -130.532, 53.0155, 0.29", "-85.7438, -129.858, 52.9246, 0.29", "-85.5159, -129.418, 52.8667, 0.52", "-85.4904, -129.357, 52.8615, 0.52", "-85.3679, -128.988, 52.8471, 0.52", "-85.1859, -128.264, 52.8575, 0.37", "-85.0124, -127.43, 52.8917, 0.37", "-85.0011, -127.363, 52.8965, 0.37", "-84.8087, -126.024, 53.0182, 0.37", "-84.671, -124.822, 53.1571, 0.37", "-84.537, -123.327, 53.3606, 0.37", "-84.5271, -123.204, 53.3788, 0.37", "-84.4126, -122.043, 53.5223, 0.37", "-84.4058, -121.985, 53.5285, 0.37", "-84.2957, -121.241, 53.5906, 0.88", "-84.2699, -121.091, 53.5982, 0.88", "-84.0558, -120.163, 53.5932, 0.29", "-83.7309, -119.001, 53.5461, 0.29", "-83.4864, -118.262, 53.4876, 0.44", "-83.2953, -117.714, 53.4403, 0.44", "-83.075, -117.066, 53.3673, 0.29", "-83.0489, -116.982, 53.3578, 0.29", "-82.7284, -116.052, 53.2142, 0.66", "-82.6323, -115.826, 53.1801, 0.66", "-82.447, -115.436, 53.121, 0.59", "-81.9642, -114.458, 52.9987, 0.37", "-81.9315, -114.398, 52.9951, 0.37", "-81.1541, -113.045, 53.0039, 0.37", "-80.6912, -112.272, 53.0818, 0.37", "-80.3581, -111.753, 53.1542, 0.37", "-80.2168, -111.556, 53.1961, 0.88", "-79.728, -110.971, 53.416, 0.74", "-79.6884, -110.92, 53.4415, 0.74", "-79.4917, -110.547, 53.8123, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-88.4333, -141.72, 49.5317, 0.52", "-89.2376, -142.394, 49.8955, 0.52", "-90.0069, -142.967, 50.2544, 0.29", "-90.7528, -143.489, 50.608, 0.29", "-91.913, -144.258, 51.1715, 0.44", "-92.8893, -144.902, 51.6504, 0.37", "-93.317, -145.184, 51.8611, 0.66", "-93.7016, -145.406, 52.0577, 0.88", "-94.215, -145.641, 52.2829, 0.88", "-95.0014, -145.944, 52.5733, 0.44", "-95.9958, -146.305, 52.8741, 0.44", "-96.0681, -146.329, 52.8929, 0.44", "-96.9572, -146.614, 53.1036, 0.44", "-98.4189, -147.045, 53.4369, 0.29", "-99.3329, -147.286, 53.6483, 0.29", "-100.44, -147.538, 53.987, 0.29", "-100.522, -147.554, 54.0198, 0.74", "-100.59, -147.567, 54.0534, 0.74", "-101.294, -147.735, 54.4077, 0.74", "-101.905, -147.934, 54.7306, 0.74", "-103.197, -148.417, 55.3332, 0.29", "-103.924, -148.728, 55.5892, 0.29", "-104.961, -149.209, 55.8698, 0.29", "-106.336, -149.894, 56.1387, 0.29", "-106.98, -150.248, 56.2624, 0.59", "-107.289, -150.418, 56.3238, 0.59", "-108.204, -150.888, 56.5231, 0.37", "-108.338, -150.945, 56.6005, 0.37", "-108.916, -151.103, 57.2434, 0.37", "-109.78, -151.237, 58.4273, 0.29", "-110.233, -151.327, 59.2801, 0.29", "-110.537, -151.406, 60.003, 0.59", "-111.05, -151.639, 61.5546, 0.59", "-111.298, -151.815, 62.4512, 0.59", "-111.435, -152.018, 63.1929, 0.59", "-111.74, -152.826, 65.2842, 0.44", "-111.748, -152.855, 65.3418, 0.44", "-111.865, -153.34, 66.1768, 0.44", "-111.876, -153.374, 66.2305, 0.44", "-112.155, -154.065, 67.3017, 0.59", "-112.405, -154.474, 67.9416, 0.59", "-112.904, -154.959, 68.7172, 0.29", "-112.942, -154.991, 68.7737, 0.29", "-113.922, -155.62, 70.0081, 0.44", "-114.399, -155.878, 70.4954, 0.96", "-114.919, -156.117, 70.93, 1.33", "-115.615, -156.428, 71.4667, 0.88", "-116.805, -156.979, 72.2811, 0.44", "-117.778, -157.432, 72.8585, 0.44", "-118.886, -157.926, 73.4045, 0.52", "-119.692, -158.247, 73.7905, 0.52", "-119.76, -158.271, 73.8221, 0.52", "-120.823, -158.562, 74.2961, 0.37", "-121.614, -158.722, 74.6295, 0.37", "-122.415, -158.828, 75.0328, 0.37", "-123.475, -158.882, 75.6806, 0.52", "-123.811, -158.879, 75.8976, 0.96", "-124.187, -158.86, 76.1315, 0.96", "-124.69, -158.81, 76.43, 0.96", "-125.371, -158.761, 76.8106, 0.81", "-126.553, -158.768, 77.4224, 0.37", "-126.611, -158.774, 77.4504, 0.37", "-127.623, -158.936, 77.9122, 0.37", "-128.214, -159.06, 78.1711, 0.59", "-128.651, -159.158, 78.3577, 0.66", "-129.334, -159.307, 78.6446, 0.52", "-130.216, -159.453, 78.9641, 0.29", "-130.3, -159.462, 78.9954, 0.29", "-131.111, -159.508, 79.3187, 0.29", "-131.899, -159.561, 79.6725, 0.44", "-132.42, -159.611, 79.9239, 0.44", "-133.46, -159.746, 80.4573, 0.44", "-134.49, -159.929, 81.0131, 0.37", "-134.943, -160.031, 81.3033, 0.37", "-136.135, -160.352, 82.3175, 0.37", "-136.627, -160.507, 82.8649, 0.37", "-137.072, -160.664, 83.5018, 0.37", "-137.411, -160.777, 84.1377, 0.37", "-137.902, -160.894, 85.2663, 0.37", "-138.403, -160.938, 86.5547, 0.37", "-138.552, -160.939, 86.9876, 0.81", "-138.669, -160.966, 87.3026, 1.11", "-138.926, -161.089, 87.9215, 1.11", "-138.957, -161.107, 87.9762, 1.11", "-139.503, -161.464, 88.7559, 0.59", "-140.348, -162.075, 89.8908, 0.44", "-140.887, -162.476, 90.6695, 0.66", "-140.923, -162.502, 90.7214, 0.66", "-141.317, -162.752, 91.2417, 0.66", "-141.996, -163.088, 92.0434, 0.44", "-142.075, -163.125, 92.1395, 0.44", "-142.737, -163.435, 92.9086, 0.37", "-143.425, -163.792, 93.7188, 0.37", "-144.07, -164.154, 94.4589, 0.88", "-144.523, -164.425, 94.9555, 1.18", "-145.872, -165.215, 96.4011, 0.37", "-146.473, -165.554, 97.0633, 0.29", "-146.851, -165.757, 97.4915, 0.81", "-146.905, -165.784, 97.558, 0.81", "-147.122, -165.898, 97.8632, 0.81", "-148.008, -166.356, 99.1447, 0.37", "-148.344, -166.51, 99.6264, 0.74", "-148.698, -166.688, 100.156, 0.74", "-149.346, -167.01, 101.114, 0.81", "-150.229, -167.471, 102.404, 0.29", "-150.53, -167.638, 102.842, 0.29", "-150.566, -167.661, 102.891, 0.29", "-150.998, -167.927, 103.428, 0.74", "-151.336, -168.127, 103.843, 0.81", "-152.204, -168.545, 104.869, 0.37", "-152.253, -168.564, 104.927, 0.37", "-152.768, -168.762, 105.569, 0.29", "-153.167, -168.915, 106.087, 0.29", "-153.746, -169.138, 106.916, 0.52", "-154.22, -169.34, 107.647, 0.88", "-154.389, -169.396, 107.922, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-0.0464659, -114.606, -30.4386, 0.96", "-0.337937, -116.779, -29.7648, 0.96", "-0.47565, -118.125, -29.3405, 0.96", "-0.553824, -119.294, -28.981, 1.03", "-0.567124, -119.993, -28.7776, 1.25", "-0.561893, -120.879, -28.5284, 1.11", "-0.515301, -122.16, -28.1421, 0.74", "-0.393635, -123.196, -27.8798, 0.96", "-0.2535, -123.944, -27.6693, 0.74", "0.0284333, -125.092, -27.3513, 0.59", "0.0461709, -125.152, -27.3381, 0.59", "0.475135, -126.53, -27.1228, 0.59", "0.843466, -127.751, -27.086, 0.59", "0.858041, -127.805, -27.0912, 0.59", "1.07825, -128.925, -27.2307, 0.88", "1.22642, -130.025, -27.3957, 0.88", "1.29145, -130.689, -27.5076, 0.88", "1.34616, -131.762, -27.6794, 0.66", "1.36283, -132.876, -27.7403, 0.52", "1.36922, -133.972, -27.6838, 1.11", "1.36373, -134.488, -27.5992, 1.11", "1.35274, -135.294, -27.4138, 0.88", "1.36794, -136.369, -27.1439, 0.81", "1.40862, -137.343, -26.9098, 0.88", "1.48285, -138.067, -26.8051, 1.03", "1.65406, -139.194, -26.7546, 0.74", "1.81087, -140.035, -26.763, 0.59", "2.03975, -141.009, -26.8207, 0.52", "2.25486, -141.763, -26.9259, 0.74", "2.68782, -143.089, -27.1799, 0.66", "3.00838, -144.014, -27.3757, 0.74", "3.28989, -144.817, -27.5342, 0.81", "3.53125, -145.572, -27.6377, 1.11", "3.76843, -146.391, -27.6981, 0.88", "3.78499, -146.453, -27.705, 0.88", "4.03387, -147.386, -27.9118, 0.59", "4.28998, -148.331, -28.2276, 0.59", "4.55084, -149.292, -28.6102, 0.81", "4.87557, -150.466, -29.1049, 1.03", "5.53675, -152.591, -30.0559, 1.03", "6.07125, -154.141, -30.7635, 0.81", "6.56729, -155.416, -31.3677, 0.59", "6.59016, -155.472, -31.3945, 0.59", "6.96138, -156.405, -31.806, 0.74", "7.37038, -157.474, -32.1633, 0.66", "7.76678, -158.548, -32.3593, 0.66", "8.14944, -159.629, -32.4994, 0.66", "8.44532, -160.572, -32.6112, 0.96", "8.621, -161.348, -32.712, 1.18", "8.7252, -162.312, -32.8763, 1.03", "8.69075, -163.152, -33.067, 0.88", "8.53129, -164.123, -33.3626, 0.66", "8.3764, -164.722, -33.5696, 0.74", "8.03331, -165.874, -33.9959, 0.74", "7.75027, -166.763, -34.3134, 0.81", "7.35777, -167.983, -34.7074, 0.81", "7.0593, -169.065, -34.9944, 1.03", "6.90822, -169.836, -35.1398, 1.11", "6.83207, -170.678, -35.2524, 0.81", "6.84003, -172.009, -35.3502, 0.66", "6.93391, -173.064, -35.3479, 0.81", "7.07903, -173.816, -35.3065, 0.81", "7.30195, -174.581, -35.25, 0.81", "7.49719, -175.088, -35.2074, 1.03", "7.52573, -175.147, -35.2019, 1.03", "7.97527, -175.881, -35.1245, 0.74", "8.54263, -176.68, -35.0923, 0.44", "8.74216, -176.946, -35.0991, 0.74", "8.78313, -176.998, -35.1062, 0.74", "9.10313, -177.431, -35.1876, 0.74", "9.1444, -177.491, -35.1995, 0.74", "9.89871, -178.718, -35.3958, 0.59", "10.1062, -179.097, -35.444, 0.88", "10.5036, -179.939, -35.5293, 0.88", "10.9431, -181.045, -35.6071, 0.66", "11.1932, -181.828, -35.6389, 0.74", "11.4565, -182.864, -35.6913, 0.88", "11.5858, -183.593, -35.7706, 0.44", "11.6746, -184.251, -35.9173, 0.44", "11.7391, -185.006, -36.153, 0.52", "11.7831, -185.617, -36.4231, 0.81", "11.8736, -186.69, -36.9789, 1.03", "12.0253, -187.893, -37.6493, 0.88", "12.2343, -189.029, -38.2665, 0.59", "12.387, -189.648, -38.5877, 0.74", "12.7437, -190.762, -39.0688, 0.52", "12.9851, -191.373, -39.2507, 0.52", "13.3645, -192.184, -39.3301, 0.81", "13.6918, -192.781, -39.2894, 1.03", "13.93, -193.162, -39.2204, 1.03", "14.6261, -194.2, -38.975, 0.52", "14.8935, -194.604, -38.8754, 0.66", "15.3205, -195.286, -38.7427, 0.66", "15.3576, -195.351, -38.7336, 0.66", "15.6936, -195.978, -38.6755, 0.81", "16.1095, -196.805, -38.6388, 0.59", "16.6063, -197.841, -38.6474, 0.37", "16.8715, -198.385, -38.6528, 0.88", "17.223, -199.027, -38.6733, 1.18", "17.2578, -199.082, -38.6751, 1.18", "17.6257, -199.572, -38.7616, 1.11", "18.0524, -200.081, -38.9508, 0.96", "18.0938, -200.128, -38.9744, 0.96", "18.8532, -201.036, -39.4968, 0.59", "19.285, -201.602, -39.8306, 0.81", "20.2334, -203.059, -40.6307, 0.59", "20.6172, -203.785, -40.9911, 0.88", "20.8189, -204.298, -41.2126, 0.88", "20.9807, -204.88, -41.4155, 0.81", "21.0981, -205.686, -41.6166, 0.59", "21.1499, -206.536, -41.7446, 0.66", "21.1598, -207.523, -41.7879, 1.03", "21.1705, -208.144, -41.804, 1.33", "21.1834, -208.675, -41.8287, 1.18", "21.2126, -209.389, -41.9065, 0.81", "21.3075, -210.304, -42.1213, 0.59", "21.4987, -211.173, -42.3978, 0.74", "21.6749, -211.705, -42.5638, 0.96", "21.6954, -211.754, -42.5772, 0.96", "22.1634, -212.717, -42.7934, 0.96", "23.0089, -214.238, -43.075, 0.74", "23.6972, -215.326, -43.2378, 0.74", "24.3551, -216.299, -43.343, 0.88", "24.9148, -217.166, -43.3189, 0.88", "25.4525, -218.065, -43.1691, 0.59", "25.7657, -218.728, -42.9018, 0.59", "25.9313, -219.329, -42.528, 0.59", "25.9345, -219.373, -42.4967, 0.59", "25.7332, -221.245, -41.203, 0.52", "25.5172, -222.046, -40.6668, 0.52", "24.9314, -223.591, -39.8291, 1.18", "24.5324, -224.513, -39.4552, 1.18", "24.197, -225.329, -39.2837, 0.52", "23.8196, -226.548, -39.3367, 0.52", "23.63, -227.526, -39.6063, 0.66", "23.4773, -229.114, -40.2373, 0.66", "23.5019, -230.018, -40.7211, 0.66", "23.7003, -231.591, -41.6423, 0.66", "24.1039, -233.256, -42.6626, 0.74", "24.3194, -233.843, -43.0271, 1.03", "24.5706, -234.377, -43.3499, 1.03", "25.1581, -235.444, -43.9412, 0.66", "25.5997, -236.178, -44.3418, 0.37", "26.0137, -236.849, -44.6403, 0.74", "26.3721, -237.438, -44.8497, 1.03", "26.4057, -237.489, -44.8677, 1.03", "26.5771, -237.709, -44.9241, 1.25", "26.6303, -237.764, -44.9222, 1.25", "26.9922, -238.1, -44.8675, 1.25", "27.0367, -238.146, -44.8571, 1.25", "27.3692, -238.544, -44.7679, 1.25", "27.6702, -238.973, -44.6792, 1.25", "28.3308, -240.099, -44.4178, 0.59", "28.8254, -240.982, -44.1942, 0.59", "29.351, -241.973, -43.9298, 0.66", "29.758, -242.727, -43.7154, 0.66", "30.2925, -243.676, -43.4251, 0.59", "30.7452, -244.44, -43.1716, 0.44", "31.2009, -245.074, -42.9241, 0.29", "31.2413, -245.112, -42.9049, 0.29", "31.9512, -245.492, -42.5991, 0.59", "32.6474, -245.788, -42.3225, 0.74", "32.7058, -245.812, -42.296, 0.74", "33.5563, -246.181, -41.8861, 0.74", "33.6075, -246.207, -41.8545, 0.74", "34.782, -246.839, -40.9497, 0.59", "35.3531, -247.164, -40.4379, 0.81", "36.2253, -247.719, -39.5565, 0.66", "36.2731, -247.75, -39.507, 0.66", "37.1233, -248.281, -38.5705, 1.03", "37.7445, -248.621, -37.8132, 1.47", "38.0366, -248.777, -37.37, 1.55", "38.6238, -249.1, -36.3486, 0.29", "39.0252, -249.335, -35.5907, 0.59", "39.6052, -249.693, -34.4729, 0.81", "40.28, -250.134, -33.1186, 1.18", "41.1276, -250.74, -31.3906, 0.44", "41.6861, -251.163, -30.2228, 0.59", "41.7145, -251.186, -30.165, 0.59", "42.0493, -251.519, -29.5298, 0.81", "42.0749, -251.549, -29.4906, 0.81", "42.4908, -252.061, -29.012, 0.37", "42.9866, -252.64, -28.5695, 0.88", "43.3503, -253.106, -28.2571, 1.33", "43.6957, -253.612, -27.9537, 1.47", "44.4034, -254.739, -27.396, 0.88", "44.4363, -254.792, -27.3738, 0.88", "44.7509, -255.299, -27.2065, 1.03", "45.2781, -256.139, -27.0303, 0.44", "45.8294, -257.009, -26.9205, 0.44", "46.3083, -257.772, -26.8971, 0.66", "46.3436, -257.826, -26.9006, 0.66", "46.6836, -258.323, -26.9192, 0.44", "47.0696, -258.862, -26.9274, 0.81", "47.3188, -259.18, -26.9153, 0.96", "47.6986, -259.657, -26.8687, 1.11", "48.1663, -260.278, -26.7637, 0.29", "48.5477, -260.803, -26.6776, 0.22", "48.585, -260.858, -26.6691, 0.22", "49.0605, -261.515, -26.5618, 1.47", "49.1005, -261.565, -26.5528, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-0.0464659, -114.606, -30.4386, 0.44", "-0.0308843, -115.672, -31.4073, 0.44", "0.0272341, -116.733, -32.3812, 0.59", "0.307979, -119.501, -34.896, 0.59", "0.484621, -120.781, -36.0296, 0.81", "0.758898, -122.401, -37.4447, 0.81", "1.04616, -123.916, -38.7368, 0.88", "1.23298, -124.785, -39.4448, 1.03", "1.58725, -126.07, -40.4552, 0.52", "1.7999, -126.649, -40.8514, 0.88", "2.14841, -127.572, -41.4672, 0.88", "2.30656, -128.085, -41.7768, 0.88", "2.31082, -128.151, -41.8144, 0.88", "2.06945, -129.066, -42.4195, 0.44", "1.78812, -129.692, -42.9185, 0.74", "1.49062, -130.417, -43.5619, 0.74", "1.20274, -131.325, -44.4326, 0.96", "0.969431, -132.569, -45.7141, 0.96", "0.929769, -133.833, -47.0226, 0.96", "1.02834, -135.076, -48.3258, 0.96", "1.29691, -136.499, -49.7348, 0.88", "1.67708, -137.863, -50.9864, 0.88", "2.07616, -139.081, -51.9889, 0.59", "2.50924, -140.32, -52.9278, 0.59", "2.82268, -141.288, -53.6062, 0.96", "3.08594, -142.276, -54.2454, 1.25", "3.26796, -143.248, -54.8313, 1.33", "3.48021, -144.663, -55.6143, 0.96", "3.63014, -145.75, -56.1903, 0.81", "3.81611, -146.936, -56.8384, 0.88", "3.98941, -147.489, -57.1337, 1.11", "4.01267, -147.535, -57.1626, 1.11", "4.51939, -148.205, -57.6099, 1.11", "5.01213, -148.67, -57.9004, 1.25", "5.13024, -148.765, -57.9682, 1.25", "5.94776, -149.396, -58.5412, 1.33", "6.74186, -150.077, -59.286, 1.03", "7.15079, -150.51, -59.8155, 0.59", "7.41621, -150.874, -60.3082, 0.81", "7.88855, -151.879, -61.7786, 0.81", "8.05676, -152.679, -62.9865, 1.11", "8.03734, -153.537, -64.2673, 0.88", "7.88826, -154.57, -65.7284, 0.59", "7.777, -155.183, -66.5822, 0.81", "7.5879, -156.231, -68.0612, 0.96", "7.47672, -157.116, -69.2502, 0.81", "7.43457, -158.307, -70.7077, 0.37", "7.52722, -159.404, -71.9272, 1.03", "7.85673, -160.968, -73.4554, 0.96", "8.36069, -162.544, -74.8445, 1.18", "8.83755, -163.696, -75.7982, 1.18", "9.41238, -164.893, -76.7553, 1.18", "10.0033, -166.021, -77.6344, 0.81", "10.689, -167.269, -78.5473, 0.66", "11.0803, -167.966, -79.0094, 0.96", "11.8676, -169.306, -79.8353, 1.25", "11.9026, -169.364, -79.8729, 1.25", "12.5939, -170.393, -80.5286, 1.11", "13.1246, -171.196, -80.9535, 0.81", "13.4578, -171.741, -81.1866, 1.25", "13.8337, -172.43, -81.3879, 1.25", "14.1437, -173.139, -81.4892, 0.66", "14.3507, -173.877, -81.6182, 0.59", "14.4146, -174.826, -81.7976, 0.59", "14.3646, -175.289, -81.9161, 0.88", "14.3508, -175.359, -81.9376, 0.88", "14.1685, -176.246, -82.2756, 0.88", "13.976, -177.83, -82.9738, 0.59", "13.9946, -178.526, -83.3369, 0.44", "14.0151, -178.65, -83.4028, 0.44", "14.1763, -179.279, -83.7332, 0.74", "14.4769, -180.262, -84.209, 0.96", "14.7527, -181.085, -84.6206, 0.96", "15.176, -182.337, -85.1823, 0.59", "15.3736, -182.999, -85.4819, 0.88", "15.3905, -183.066, -85.5113, 0.88", "15.5535, -183.777, -85.8072, 0.96", "15.8582, -185.427, -86.4899, 0.59", "16.0202, -186.366, -86.8894, 1.03", "16.1707, -187.094, -87.1929, 1.18", "16.4625, -188.305, -87.7119, 0.88", "16.7151, -189.344, -88.1432, 0.74", "16.9803, -190.464, -88.5855, 0.66", "17.2716, -191.892, -89.0791, 0.52", "17.3964, -192.769, -89.3753, 0.81", "17.4477, -193.684, -89.6805, 0.37", "17.3832, -194.463, -89.9326, 0.37", "17.2765, -195.02, -90.11, 0.88", "17.1196, -195.547, -90.2781, 1.18", "16.8542, -196.173, -90.4847, 1.33", "16.3806, -197.241, -90.8827, 0.88", "15.9077, -198.413, -91.3825, 0.74", "15.882, -198.479, -91.4125, 0.74", "15.2994, -200.035, -92.1581, 0.52", "14.9393, -201.022, -92.6498, 0.66", "14.3124, -202.811, -93.5527, 0.59", "14.0074, -203.827, -94.0414, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "12.8868, -147.767, -30.0696, 0.37", "13.6865, -148.051, -29.4844, 0.37", "14.557, -148.431, -28.8483, 0.59", "15.0925, -148.67, -28.4758, 0.59", "16.0659, -149.078, -27.8374, 0.59", "16.1973, -149.132, -27.7542, 0.59", "16.9186, -149.406, -27.3429, 0.22", "17.3159, -149.517, -27.2007, 0.44", "18.0027, -149.645, -27.1096, 0.44", "18.5477, -149.723, -27.1208, 0.81", "18.6415, -149.728, -27.1309, 0.81", "19.3268, -149.691, -27.2624, 0.96", "20.8782, -149.485, -27.7242, 0.52", "21.3925, -149.401, -27.8958, 0.52", "21.4633, -149.389, -27.9204, 0.52", "22.3421, -149.227, -28.2263, 0.44", "23.9502, -148.907, -28.748, 0.74", "25.4542, -148.588, -29.2559, 0.29", "26.1034, -148.434, -29.4659, 0.29", "26.5449, -148.343, -29.6086, 0.59", "26.6071, -148.334, -29.6292, 0.59", "27.0757, -148.316, -29.8108, 1.18", "28.5414, -148.382, -30.3322, 1.11", "29.3527, -148.471, -30.6378, 0.37", "30.4844, -148.637, -31.075, 0.29", "31.7887, -148.86, -31.549, 1.11", "33.5186, -149.17, -32.1183, 0.66", "34.618, -149.384, -32.4486, 0.44", "36.0337, -149.667, -32.8604, 1.18", "36.5745, -149.773, -33.0307, 1.62", "37.379, -149.901, -33.2772, 1.18", "38.3136, -150.009, -33.5197, 0.74", "38.3787, -150.015, -33.5336, 0.74", "40.1087, -150.107, -34.0355, 0.59", "40.1725, -150.108, -34.0555, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "12.8868, -147.767, -30.0696, 0.59", "12.6291, -149.68, -29.4992, 0.59", "12.469, -150.64, -28.9082, 0.66", "12.3843, -151.12, -28.4776, 1.03", "12.3421, -151.299, -28.3015, 1.03", "12.2019, -151.642, -27.8579, 1.03", "11.7526, -152.532, -26.5518, 0.74", "10.8986, -153.779, -24.3046, 1.03", "10.3389, -154.498, -22.5949, 1.11", "10.1051, -154.802, -21.8498, 0.74", "9.05178, -156.131, -18.7114, 0.74", "9.01014, -156.182, -18.5936, 0.74", "8.55399, -156.754, -17.36, 0.66", "6.87806, -159.371, -12.8181, 0.66", "6.48801, -160.178, -11.7015, 0.52", "6.14708, -161.231, -10.5561, 0.74", "6.13615, -161.292, -10.5096, 0.74", "6.03817, -162.173, -9.9757, 0.88", "5.94506, -164.445, -8.97138, 0.52", "5.94627, -165.548, -8.71031, 0.52", "5.97882, -166.704, -8.42709, 0.52", "6.04571, -167.824, -8.17352, 0.44", "6.08419, -168.692, -8.00367, 0.37", "6.13575, -170.217, -7.70846, 0.37", "6.20004, -171.432, -7.50492, 0.59", "6.24727, -172.147, -7.35507, 0.88", "6.25327, -172.222, -7.33188, 0.88", "6.31854, -172.844, -7.08807, 0.96", "6.46943, -174.505, -6.16159, 0.44", "6.55737, -175.389, -5.56839, 0.59", "6.56287, -175.442, -5.52413, 0.59", "6.73765, -176.735, -4.43826, 0.81", "6.78865, -177.183, -4.06894, 0.96", "6.97218, -179.094, -2.55717, 0.52", "6.99889, -179.547, -2.23069, 0.74", "7.03774, -181.099, -1.21806, 0.52", "7.07225, -182.109, -0.694065, 0.74", "7.09803, -183.032, -0.302761, 0.44", "7.08428, -183.835, 0.05057, 0.29", "7.05167, -184.341, 0.300241, 0.37", "6.94774, -185.08, 0.818881, 0.59", "6.81121, -185.962, 1.57171, 0.59", "6.65052, -187.377, 2.95421, 0.81", "6.62926, -188.848, 4.5611, 0.44", "6.77155, -190.218, 6.23809, 0.88", "7.11929, -191.669, 8.20867, 0.74", "7.38682, -192.195, 9.02077, 0.29", "8.01481, -192.843, 10.1615, 0.37", "9.05963, -193.136, 10.803, 0.37", "10.0588, -193.156, 11.0136, 0.66", "10.1408, -193.15, 11.0195, 0.66", "11.4579, -192.982, 10.9676, 0.29", "11.5501, -192.968, 10.9649, 0.29", "12.9944, -192.691, 11.0004, 0.15", "14.3729, -192.368, 10.9609, 0.15", "15.0242, -200.206, 18.7015, 0.15", "14.5907, -208.106, 26.3797, 0.15", "15.8131, -216.893, 32.8175, 0.15", "19.0711, -223.95, 40.7454, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-18.0709, -329.596, -46.339, 1.18", "-17.4174, -330.58, -46.3649, 1.18", "-16.719, -331.563, -46.3778, 0.96", "-16.4158, -331.975, -46.3922, 1.47", "-16.0515, -332.467, -46.4242, 1.84", "-15.6058, -333.065, -46.474, 1.33", "-15.001, -333.891, -46.5668, 0.74", "-14.9688, -333.937, -46.5763, 0.74", "-14.5495, -334.534, -46.7205, 0.81", "-14.2176, -335.013, -46.8606, 0.44", "-14.1891, -335.059, -46.8788, 0.44", "-13.786, -335.836, -47.2341, 0.29", "-13.463, -336.535, -47.6132, 0.44", "-13.2694, -336.971, -47.8587, 0.81", "-13.0628, -337.381, -48.0896, 0.81", "-12.5804, -338.155, -48.5285, 0.37", "-12.544, -338.203, -48.5528, 0.37", "-12.1025, -338.72, -48.7766, 0.81", "-11.6342, -339.258, -48.9601, 1.11", "-10.9922, -340.037, -49.1521, 1.11", "-10.2211, -341.076, -49.3166, 0.29", "-9.69095, -341.902, -49.3756, 0.29", "-9.36736, -342.515, -49.3718, 0.66", "-9.06233, -343.303, -49.3065, 0.88", "-8.87925, -343.984, -49.2164, 1.03", "-8.81596, -344.561, -49.1154, 1.03", "-8.82629, -345.245, -48.9434, 0.74", "-8.90538, -346.204, -48.6526, 0.22", "-8.95848, -346.817, -48.4272, 0.74", "-8.96246, -346.874, -48.4014, 0.74", "-8.98544, -347.425, -48.1312, 0.74", "-8.98865, -347.476, -48.1054, 0.74", "-9.0434, -348.125, -47.7923, 0.29", "-9.08058, -348.592, -47.6146, 0.29", "-9.10552, -349.202, -47.4314, 1.03", "-9.13178, -349.828, -47.3233, 1.4", "-9.16728, -350.53, -47.2745, 0.52", "-9.21446, -350.977, -47.2711, 0.29", "-9.38779, -351.706, -47.357, 0.37", "-9.56514, -352.157, -47.4785, 0.66", "-9.94847, -352.85, -47.8077, 0.37", "-10.175, -353.161, -48.0444, 0.96", "-10.4131, -353.462, -48.3211, 0.96", "-11.054, -354.209, -49.077, 0.37", "-11.6725, -354.904, -49.8488, 0.74", "-12.3197, -355.655, -50.7365, 1.25", "-13.3977, -357.006, -52.4573, 0.29", "-13.748, -357.459, -53.0695, 0.29", "-13.7728, -357.493, -53.1182, 0.29", "-14.071, -357.977, -53.8276, 0.88", "-14.1835, -358.203, -54.1675, 1.18", "-14.3937, -358.863, -55.1785, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-18.0709, -329.596, -46.339, 0.44", "-17.4127, -330.266, -46.4782, 0.44", "-16.6156, -331.102, -46.6246, 0.44", "-16.5706, -331.153, -46.6315, 0.44", "-16.2599, -331.518, -46.6739, 0.29", "-15.8757, -331.956, -46.7229, 0.81", "-15.4291, -332.437, -46.7781, 1.11", "-15.3945, -332.477, -46.7796, 1.11", "-14.906, -333.052, -46.8115, 0.44", "-14.8692, -333.097, -46.8148, 0.44", "-14.4252, -333.675, -46.8717, 0.37", "-14.1262, -334.101, -46.9107, 0.37", "-13.6605, -334.838, -46.9738, 0.29", "-13.3956, -335.264, -47.0185, 0.74", "-13.2398, -335.512, -47.0491, 0.81", "-13.1724, -335.619, -47.0688, 0.81", "-12.7874, -336.225, -47.2096, 0.44", "-12.4363, -336.751, -47.3533, 0.29", "-12.0253, -337.3, -47.5281, 0.52", "-11.781, -337.596, -47.6321, 0.52", "-11.1396, -338.357, -47.9352, 0.29", "-10.6901, -338.9, -48.1901, 0.59", "-10.6569, -338.943, -48.2156, 0.59", "-10.4727, -339.24, -48.3864, 0.59", "-10.4476, -339.286, -48.4129, 0.59", "-10.0152, -340.18, -48.9372, 0.81", "-9.80364, -340.688, -49.2379, 1.03", "-9.53869, -341.423, -49.7045, 0.59", "-9.26933, -342.228, -50.2223, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-91.5969, -104.96, 24.2174, 0.37", "-96.935, -112.421, 28.0206, 0.37", "-104.429, -118.143, 31.438, 0.37", "-113.104, -122.304, 34.519, 0.37", "-120.583, -127.668, 38.5752, 0.37", "-127.959, -132.888, 43.0165, 0.37", "-134.903, -139.257, 46.3369, 0.37", "-140.822, -146.496, 49.6989, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-91.5969, -104.96, 24.2174, 0.29", "-96.0642, -110.403, 27.2522, 0.37", "-99.7492, -116.49, 29.9701, 0.37", "-103.289, -122.89, 31.9968, 0.37", "-107.152, -128.792, 34.9103, 0.37", "-111.818, -134.616, 36.5221, 0.37", "-116.369, -140.161, 39.2058, 0.37", "-120.834, -145.109, 43.0725, 0.37", "-125.411, -149.883, 47.0524, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "84.0033, 147.263, 70.1417, 0.29", "86.9439, 154.505, 74.5443, 0.29", "90.5261, 160.887, 79.8289, 0.29", "93.2925, 167.463, 85.3207, 0.29", "96.8404, 173.738, 90.764, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "84.0033, 147.263, 70.1417, 0.44", "87.8662, 158.362, 75.7153, 0.29", "90.1348, 169.795, 81.4211, 0.29", "92.7601, 180.198, 88.8514, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-94.4651, -165.522, 33.3198, 0.29", "-99.6803, -171.915, 32.4522, 0.29", "-105.58, -177.555, 30.6461, 0.29", "-111.246, -183.037, 27.8154, 0.29", "-117.376, -188.64, 26.8953, 0.29", "-123.408, -194.345, 26.0299, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-94.4651, -165.522, 33.3198, 0.44", "-98.9134, -174.868, 32.2416, 0.29", "-102.688, -184.473, 31.1127, 0.29", "-105.347, -194.443, 30.9116, 0.29", "-108.71, -204.207, 31.1802, 0.29", "-112.226, -213.864, 32.158, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-79.4917, -110.547, 53.8123, 0.22", "-78.5515, -110.196, 53.7763, 0.22", "-78.1317, -110.04, 53.7473, 0.52", "-77.8382, -109.932, 53.7055, 0.74", "-76.9349, -109.62, 53.5213, 0.37", "-75.9448, -109.272, 53.2712, 0.37", "-75.5791, -109.143, 53.1787, 0.37", "-75.4292, -109.092, 53.1294, 0.37", "-74.7158, -108.871, 52.8787, 0.37", "-74.3935, -108.776, 52.7458, 0.88", "-73.9606, -108.633, 52.4784, 0.88", "-66.5925, -107.257, 51.1175, 0.88", "-59.7067, -104.46, 49.7145, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-79.4917, -110.547, 53.8123, 0.44", "-79.3586, -109.346, 54.0518, 0.44", "-79.1816, -108.19, 54.2613, 0.37", "-79.1699, -108.138, 54.2717, 0.37", "-78.9557, -107.231, 54.4889, 0.37", "-78.9336, -107.14, 54.5178, 0.37", "-78.6692, -106.066, 54.9122, 0.37", "-78.652, -106.01, 54.9382, 0.37", "-78.4548, -105.34, 55.3143, 0.29", "-78.2802, -104.629, 55.7471, 0.29", "-78.1552, -103.981, 56.1814, 0.29", "-78.1358, -103.826, 56.2921, 0.66", "-78.1344, -103.709, 56.3776, 0.66", "-78.1579, -103.3, 56.6441, 0.66", "-78.253, -102.626, 57.0304, 0.29", "-78.3137, -102.336, 57.1883, 0.44", "-78.3433, -102.228, 57.2473, 0.44", "-78.5096, -101.715, 57.5585, 0.37", "-78.708, -101.158, 57.926, 0.37", "-78.7263, -101.109, 57.9605, 0.37", "-79.0782, -100.223, 58.6373, 0.29", "-79.28, -99.695, 59.0487, 0.44", "-79.3319, -99.541, 59.1734, 0.44", "-79.4749, -99.0534, 59.5918, 0.44", "-79.5992, -98.5733, 60.0047, 0.29", "-79.6219, -98.4701, 60.0926, 0.29", "-79.6676, -98.1702, 60.341, 0.44", "-79.7112, -97.8378, 60.6151, 0.44", "-79.7173, -97.7811, 60.6603, 0.44", "-79.7497, -97.3778, 60.9616, 0.44", "-79.7491, -96.9404, 61.269, 0.44", "-79.744, -96.8859, 61.3017, 0.44", "-79.6743, -96.3787, 61.5676, 0.37", "-79.638, -96.1282, 61.6868, 0.37", "-79.5453, -95.473, 61.964, 0.44", "-79.4556, -94.8871, 62.1869, 0.44", "-79.3899, -94.2277, 62.3702, 0.44", "-79.3279, -93.2888, 62.5784, 0.44", "-79.3035, -92.4128, 62.7483, 0.74", "-79.3161, -91.2327, 62.9522, 0.81", "-79.3432, -90.7421, 63.0243, 0.74", "-79.523, -88.9998, 63.2276, 0.29", "-79.5306, -88.945, 63.2329, 0.29", "-79.5889, -88.5461, 63.2603, 0.29", "-79.6034, -88.4109, 63.2704, 0.29", "-79.6115, -88.086, 63.3199, 0.44", "-79.6084, -88.0254, 63.3316, 0.44", "-79.5526, -87.5992, 63.436, 0.44", "-79.4485, -86.9053, 63.5831, 0.88", "-79.2823, -85.9271, 63.7603, 0.52", "-79.1472, -85.1648, 63.8927, 0.52", "-79.044, -84.5463, 63.9892, 0.44", "-78.9435, -83.8645, 64.0969, 0.29", "-78.8772, -83.3519, 64.1774, 0.59", "-78.8564, -83.1533, 64.2111, 0.59", "-78.8189, -82.653, 64.3098, 0.59", "-78.7834, -82.1558, 64.411, 0.29", "-78.7259, -81.4806, 64.5632, 0.29", "-78.7182, -81.4106, 64.5781, 0.29", "-78.6645, -80.8995, 64.6799, 0.59", "-78.6553, -80.8191, 64.695, 0.59", "-78.5841, -80.2498, 64.8073, 0.66", "-78.4954, -79.6228, 64.9365, 0.66", "-78.3954, -78.9567, 65.068, 0.29", "-78.2506, -78.0262, 65.2497, 0.29", "-78.2382, -77.9564, 65.2623, 0.29", "-77.9864, -76.79, 65.4996, 0.29", "-77.9543, -76.6594, 65.5302, 0.29", "-77.7603, -75.9299, 65.7282, 0.52", "-77.7259, -75.8044, 65.7686, 0.52", "-77.5121, -75.0649, 66.0402, 0.81", "-77.3301, -74.3626, 66.3192, 0.52", "-77.1966, -73.7901, 66.5657, 0.52", "-77.0951, -73.2567, 66.7957, 0.74", "-77.0035, -72.615, 67.0629, 0.88", "-76.9751, -72.3689, 67.1429, 0.88", "-76.8902, -71.5561, 67.2763, 0.88", "-76.882, -71.4929, 67.2769, 0.88", "-76.8054, -71.0461, 67.2365, 0.66", "-76.6343, -70.3707, 67.1604, 0.44", "-76.2996, -69.3892, 67.0785, 0.37", "-75.9308, -68.4412, 67.0496, 0.29", "-75.6563, -67.8074, 67.0504, 0.29", "-75.6302, -67.7494, 67.054, 0.29", "-75.1546, -66.7015, 67.2014, 0.29", "-74.5654, -65.405, 67.4801, 0.29", "-74.245, -64.6549, 67.7114, 0.37", "-74.1997, -64.5347, 67.7546, 0.37", "-73.9974, -63.8938, 67.9786, 0.37", "-73.8001, -63.2562, 68.1917, 0.37", "-73.7662, -63.1392, 68.2279, 0.37", "-73.5163, -62.257, 68.5338, 0.52", "-73.2696, -61.364, 68.8731, 0.44", "-73.0166, -60.4277, 69.2505, 1.11", "-72.6657, -59.178, 69.7549, 0.29", "-72.6452, -59.1147, 69.7824, 0.29", "-72.3045, -58.1744, 70.1911, 0.29", "-72.094, -57.6439, 70.4155, 0.29", "-72.0751, -57.5978, 70.4342, 0.29", "-71.6862, -56.645, 70.7912, 0.37", "-71.1266, -55.2112, 71.2754, 0.37", "-70.717, -54.1898, 71.5881, 0.37", "-70.3705, -53.3699, 71.8076, 0.81", "-70.1411, -52.8271, 71.9429, 1.03", "-69.7724, -51.9049, 72.162, 0.29", "-69.5423, -51.2721, 72.3026, 0.29", "-69.4113, -50.8356, 72.3828, 0.44", "-69.3955, -50.7772, 72.3952, 0.44", "-69.3215, -50.4635, 72.4732, 0.44", "-69.1458, -49.6922, 72.7215, 0.29", "-69.1202, -49.578, 72.7653, 0.29", "-68.9107, -48.6337, 73.1681, 0.29", "-68.8993, -48.577, 73.1945, 0.29", "-68.7087, -47.5559, 73.695, 0.29", "-68.6002, -46.9592, 73.9934, 0.66", "-68.5176, -46.5282, 74.2047, 0.74", "-68.4927, -46.416, 74.2538, 0.74", "-68.2166, -45.3597, 74.644, 0.29", "-68.1854, -45.25, 74.6771, 0.29", "-67.9976, -44.575, 74.8316, 0.29", "-67.8727, -44.0981, 74.9215, 0.74", "-67.6601, -43.3401, 75.0415, 0.22", "-67.3292, -42.2461, 75.1813, 0.22", "-66.9789, -41.2502, 75.2544, 1.03", "-66.6042, -40.2474, 75.3042, 0.29", "-66.5307, -40.0592, 75.3105, 0.29", "-66.1202, -39.0425, 75.3315, 0.29", "-66.0418, -38.8565, 75.3327, 0.29", "-65.3341, -37.2728, 75.3114, 0.29", "-65.2619, -37.1156, 75.3106, 0.29", "-64.7779, -36.0094, 75.2951, 0.29", "-64.752, -35.9419, 75.2945, 0.29", "-64.4713, -35.0564, 75.2992, 0.44", "-64.4551, -34.9948, 75.3, 0.44", "-64.3116, -34.238, 75.3255, 0.44", "-64.1726, -33.4504, 75.3496, 0.74", "-64.1637, -33.3874, 75.3522, 0.74", "-64.1145, -33.0177, 75.3734, 1.03", "-64.0306, -32.339, 75.4399, 0.59", "-63.9005, -31.6564, 75.6106, 0.29", "-63.8672, -31.5349, 75.6608, 0.29", "-63.7307, -31.1342, 75.896, 0.29", "-63.71, -31.0765, 75.9343, 0.29", "-63.4875, -30.4773, 76.3724, 0.88", "-63.1754, -29.6033, 77.0141, 0.88", "-63.1425, -29.5038, 77.0832, 0.88", "-63.0081, -29.0805, 77.3547, 0.66", "-62.8464, -28.6646, 77.6131, 0.29", "-62.658, -28.2332, 77.8663, 0.29", "-62.2701, -27.3979, 78.317, 0.29", "-62.069, -26.9702, 78.5184, 0.44", "-62.038, -26.9117, 78.5473, 0.44", "-61.4955, -26.0874, 79.0363, 0.37", "-61.1211, -25.5415, 79.4021, 0.29", "-61.0918, -25.4951, 79.4351, 0.29", "-60.8713, -25.1165, 79.7112, 0.74", "-60.8537, -25.076, 79.7399, 0.74", "-60.5082, -24.0061, 80.4799, 0.29", "-60.3, -22.9979, 81.1301, 0.29", "-60.1358, -22.1517, 81.6798, 0.22", "-60.106, -21.9886, 81.7875, 0.22", "-59.9244, -20.8655, 82.5189, 0.29", "-59.9156, -20.8048, 82.557, 0.29", "-59.8027, -19.8085, 83.1402, 0.29", "-59.6776, -18.9764, 83.6551, 0.29", "-59.5133, -18.1361, 84.2027, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-154.389, -169.396, 107.922, 0.37", "-154.762, -169.992, 107.595, 0.37", "-155.627, -171.243, 106.992, 0.37", "-156.351, -172.309, 106.544, 0.29", "-156.799, -172.938, 106.272, 0.44", "-157.239, -173.566, 106.011, 0.44", "-158.095, -174.809, 105.52, 0.29", "-158.42, -175.265, 105.36, 0.37", "-158.891, -175.914, 105.192, 0.37", "-159.894, -177.21, 104.803, 0.37", "-160.365, -177.811, 104.601, 0.37", "-160.69, -178.238, 104.444, 0.66", "-160.735, -178.297, 104.424, 0.66", "-161.052, -178.678, 104.289, 0.74", "-161.935, -179.617, 103.96, 0.37", "-162.493, -180.164, 103.811, 0.37", "-162.561, -180.219, 103.792, 0.37", "-163.093, -180.607, 103.634, 0.37", "-167.904, -189.889, 101.337, 0.37", "-170.879, -199.953, 99.5775, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-154.389, -169.396, 107.922, 0.29", "-155.195, -169.236, 108.647, 0.29", "-155.885, -169.128, 109.417, 0.52", "-156.86, -169.053, 110.519, 0.44", "-157.205, -169.074, 110.9, 0.29", "-157.869, -169.179, 111.584, 0.29", "-158.406, -169.279, 112.161, 0.44", "-159.669, -169.568, 113.612, 0.29", "-160.204, -169.69, 114.201, 0.29", "-160.982, -169.886, 115.045, 0.29", "-161.701, -170.071, 115.89, 0.29", "-162.448, -170.249, 116.807, 0.29", "-162.484, -170.258, 116.851, 0.29", "-163.146, -170.364, 117.613, 0.44", "-164.077, -170.389, 118.797, 0.44", "-164.164, -170.375, 118.918, 0.44", "-164.634, -170.288, 119.617, 0.66", "-165.173, -170.273, 120.271, 0.66", "-171.351, -170.603, 127.712, 0.66", "-175.712, -170.58, 136.351, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "49.1005, -261.565, -26.5528, 0.52", "48.2052, -262.199, -26.7507, 0.52", "47.5168, -262.719, -26.9211, 0.29", "46.8, -263.323, -27.1271, 0.22", "46.4312, -263.647, -27.2202, 0.52", "46.0986, -263.944, -27.2966, 0.74", "45.6762, -264.328, -27.3905, 0.81", "45.2832, -264.685, -27.4807, 0.66", "44.732, -265.202, -27.629, 0.29", "44.1118, -265.868, -27.7813, 0.29", "44.0733, -265.912, -27.7905, 0.29", "43.9539, -266.055, -27.8192, 0.66", "43.6089, -266.463, -27.9004, 0.81", "43.1752, -266.965, -28.0075, 0.22", "42.8044, -267.398, -28.1148, 0.22", "42.6416, -267.616, -28.1887, 0.52", "42.4438, -267.89, -28.2801, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "49.1005, -261.565, -26.5528, 1.18", "49.4196, -262.445, -26.192, 1.18", "49.5304, -262.852, -26.0407, 1.4", "49.6365, -263.626, -25.7471, 0.37", "49.5832, -264.336, -25.4708, 0.44", "49.4385, -264.925, -25.2632, 0.66", "49.0876, -265.757, -24.9727, 0.66", "48.8428, -266.177, -24.844, 0.66", "48.224, -267.125, -24.58, 0.59", "47.3779, -268.348, -24.2645, 0.37", "46.8764, -269.071, -24.0818, 1.55", "46.0628, -270.373, -23.7542, 0.37", "45.6492, -271.203, -23.5617, 0.44", "45.3603, -272.045, -23.3706, 0.44", "45.2898, -272.527, -23.2782, 0.88", "45.3007, -272.978, -23.2046, 1.03", "45.3719, -273.862, -23.0867, 0.37", "45.4468, -274.549, -23.0434, 0.37", "45.47, -274.89, -23.0267, 0.88", "45.488, -275.352, -23.009, 0.96", "45.4882, -276.113, -22.9951, 0.96", "45.4787, -277.056, -22.9829, 0.29", "45.4497, -278.02, -22.8964, 0.29", "45.4352, -278.367, -22.8406, 0.66", "45.4019, -278.767, -22.7323, 0.88", "45.395, -278.826, -22.7108, 0.88", "45.3256, -279.315, -22.4917, 0.74", "45.0719, -280.534, -21.9016, 0.29", "44.9014, -281.176, -21.6049, 0.29", "44.723, -282.038, -21.2328, 1.11", "44.681, -282.465, -21.0528, 1.11", "44.6819, -282.524, -21.0291, 1.11", "44.746, -283.03, -20.8472, 1.11", "45.0067, -284.206, -20.4114, 0.29", "45.2594, -285.2, -20.0237, 0.29", "45.4785, -286.069, -19.6885, 0.29", "45.5858, -286.554, -19.4973, 0.81", "45.6793, -287.145, -19.2491, 0.96", "45.7634, -288.286, -18.641, 0.96", "45.7472, -288.958, -18.2364, 0.37", "45.6654, -289.623, -17.8182, 0.88", "45.5647, -290.16, -17.4844, 0.88", "45.3325, -291.224, -16.8473, 0.59", "45.0063, -292.661, -16.0671, 0.44", "44.8933, -293.23, -15.8107, 0.59", "44.8057, -293.69, -15.6425, 0.59", "44.6849, -294.418, -15.4623, 0.88", "44.6151, -295.073, -15.3731, 0.29", "44.5741, -295.835, -15.3447, 0.29", "44.549, -296.626, -15.3282, 0.37", "44.5226, -297.492, -15.2664, 0.96", "44.5002, -298.12, -15.1992, 1.33", "44.4348, -299.165, -15.0079, 0.37", "44.3531, -299.913, -14.8337, 0.52", "44.1983, -300.882, -14.5761, 0.44", "44.1017, -301.391, -14.4281, 0.29", "43.9983, -301.942, -14.2565, 0.88", "43.8021, -302.919, -13.9626, 0.74", "43.6719, -303.56, -13.7434, 0.29", "43.595, -304.161, -13.5235, 0.59", "43.5344, -304.812, -13.2923, 0.74", "43.4757, -305.34, -13.0781, 0.88", "43.4665, -305.405, -13.0514, 0.88", "43.2097, -306.718, -12.5639, 0.52", "43.0452, -307.23, -12.3872, 0.52", "42.6757, -307.983, -12.1414, 0.52", "42.2417, -308.756, -11.9146, 0.96", "41.993, -309.157, -11.776, 1.33", "41.64, -309.729, -11.5484, 0.59", "41.2019, -310.458, -11.2576, 0.37", "40.6348, -311.51, -10.8008, 0.44", "40.3629, -312.139, -10.5337, 0.66", "39.9909, -313.307, -10.0928, 0.96", "39.7008, -314.499, -9.65726, 0.44", "39.5906, -315.111, -9.45009, 1.03", "39.5234, -315.843, -9.23113, 1.18", "39.5068, -316.848, -9.02962, 0.29", "39.5411, -317.803, -8.94737, 0.29", "39.5546, -317.944, -8.95295, 0.88", "39.5874, -318.282, -8.99186, 1.25", "39.6225, -318.977, -9.06409, 0.66", "39.6173, -319.737, -9.13543, 0.59", "39.5588, -320.789, -9.21899, 0.52", "39.4939, -321.411, -9.27113, 0.52", "39.3788, -322.303, -9.33947, 0.52", "39.2406, -323.144, -9.36934, 0.37", "39.1022, -323.921, -9.4143, 0.29", "39.0551, -324.228, -9.43616, 0.74", "39.0356, -324.412, -9.45272, 0.74", "39.0144, -324.92, -9.5218, 0.74", "39.0392, -325.741, -9.67168, 0.81", "39.1305, -326.998, -9.99674, 0.81", "39.2269, -327.816, -10.2157, 0.81", "39.3638, -328.726, -10.4495, 0.81", "39.3737, -328.785, -10.4638, 0.81", "39.5217, -329.587, -10.6475, 0.59", "39.7264, -330.59, -10.8578, 0.44", "39.852, -331.237, -10.9337, 0.44", "40.0051, -331.982, -10.986, 0.29", "40.1225, -332.615, -11.0021, 0.74", "40.174, -332.993, -11.0072, 0.96", "40.1763, -333.054, -11.0044, 0.96", "40.1265, -333.697, -10.9568, 0.52", "39.9406, -334.633, -10.8655, 0.52", "39.7051, -335.507, -10.7496, 0.52", "39.5443, -336.086, -10.6551, 0.59", "39.2935, -337.086, -10.4641, 0.74", "39.1783, -337.639, -10.3441, 0.52", "39.0109, -338.656, -10.1211, 0.37", "39.0041, -338.718, -10.1078, 0.37", "39.0074, -339.654, -9.91331, 0.44", "39.0954, -340.328, -9.79069, 0.37", "39.2164, -340.799, -9.7381, 0.74", "39.4246, -341.516, -9.68806, 0.29", "39.4387, -341.566, -9.68858, 0.29", "39.5181, -341.902, -9.6988, 0.44", "39.5259, -341.953, -9.70245, 0.44", "39.5598, -342.41, -9.75138, 0.44", "39.5907, -343.307, -9.84021, 0.22", "39.6065, -343.943, -9.86318, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "14.0074, -203.827, -94.0414, 0.29", "13.3151, -203.539, -94.7669, 0.29", "13.2229, -203.503, -94.8519, 0.29", "12.7787, -203.319, -95.2214, 0.29", "11.7014, -202.827, -96.043, 0.29", "11.3164, -202.627, -96.3508, 0.59", "10.2554, -201.996, -97.2033, 0.59", "9.68498, -201.584, -97.6674, 0.37", "9.39116, -201.33, -97.923, 0.66", "9.09195, -201.037, -98.2043, 0.88", "8.09293, -199.96, -99.1965, 0.22", "7.73409, -199.537, -99.5824, 0.44", "7.44626, -199.153, -99.9093, 0.59", "6.98913, -198.494, -100.533, 0.29", "6.59269, -197.925, -101.122, 0.74", "6.12375, -197.273, -101.863, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "14.0074, -203.827, -94.0414, 0.52", "13.6253, -205.497, -96.3674, 0.52", "13.609, -205.545, -96.4193, 0.52", "13.4437, -206.004, -96.8236, 0.52", "12.8856, -207.63, -98.0453, 1.33", "12.673, -208.262, -98.48, 1.77", "12.3949, -209.203, -99.0438, 0.66", "12.0519, -210.384, -99.5513, 0.66", "11.6747, -211.975, -100.237, 0.66", "11.5508, -212.849, -100.635, 0.88", "11.5485, -213.078, -100.737, 0.88", "11.6688, -214.499, -101.386, 0.88", "11.6774, -214.554, -101.413, 0.88", "12.0818, -216.281, -102.232, 0.66", "12.5025, -217.622, -102.918, 0.44", "12.7884, -218.432, -103.387, 0.96", "13.2218, -219.58, -104.107, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-125.411, -149.883, 47.0524, 0.29", "-129.178, -153.279, 55.4867, 0.29", "-133.452, -156.148, 63.9063, 0.29", "-137.908, -159.335, 72.0973, 0.29", "-143.242, -164.665, 78.2727, 0.29", "-147.892, -169.816, 85.1235, 0.29", "-152.323, -174.751, 92.2872, 0.29", "-156.908, -179.315, 99.628, 0.29", "-161.212, -184.413, 106.741, 0.29", "-165.197, -189.908, 113.707, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-125.411, -149.883, 47.0524, 0.44", "-130.513, -156.363, 45.5973, 0.29", "-136.401, -162.01, 43.4213, 0.29", "-141.88, -168.059, 41.3708, 0.29", "-146.218, -174.693, 38.6569, 0.29", "-149.43, -181.541, 35.0648, 0.29", "-151.924, -188.283, 30.7376, 0.29", "-154.729, -194.351, 25.572, 0.29", "-158.413, -199.898, 20.3186, 0.29", "-161.164, -206.664, 16.1992, 0.29", "-164.151, -213.999, 13.6517, 0.29", "-167.718, -221.42, 12.6731, 0.29", "-172.714, -228.082, 13.1035, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "96.8404, 173.738, 90.764, 0.29", "100.098, 183.42, 97.165, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "96.8404, 173.738, 90.764, 0.44", "99.4696, 179.613, 95.2245, 0.29", "102.545, 185.091, 99.9464, 0.29", "105.267, 190.635, 104.801, 0.29", "108.274, 195.492, 110.264, 0.29", "109.796, 200.907, 115.773, 0.29", "111.422, 205.696, 121.864, 0.29", "111.658, 211.283, 127.403, 0.29", "111.589, 216.47, 133.365, 0.29", "111.069, 220.405, 140.293, 0.29", "111.576, 224.554, 147.073, 0.29", "113.95, 228.066, 153.848, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-59.5133, -18.1361, 84.2027, 0.22", "-60.0345, -18.1726, 84.7665, 0.22", "-60.8963, -18.2328, 85.6987, 0.22", "-61.2736, -18.2592, 86.1068, 0.52", "-61.5052, -18.2754, 86.3573, 0.74", "-65.6334, -17.912, 92.4928, 0.74", "-69.4725, -18.1391, 98.8248, 0.74", "-72.169, -17.9213, 105.704, 0.74", "-74.4466, -18.9163, 112.682, 0.74", "-75.8042, -18.966, 119.939, 0.74", "-75.7715, -19.6711, 127.29, 0.74", "-74.2661, -20.4463, 134.466, 0.74", "-72.4366, -20.6786, 141.583, 0.74", "-70.9019, -20.243, 148.736, 0.74", "-68.837, -20.6971, 155.783, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-59.5133, -18.1361, 84.2027, 0.44", "-58.8478, -17.0581, 84.7774, 0.44", "-58.3854, -16.2643, 85.1968, 0.66", "-58.3053, -16.1161, 85.2767, 0.66", "-58.068, -15.6661, 85.5184, 0.59", "-57.5213, -14.6284, 86.0565, 0.29", "-56.6225, -12.958, 86.8684, 0.29", "-56.5239, -12.7865, 86.9573, 0.29", "-55.8028, -11.6169, 87.6052, 0.52", "-55.746, -11.5298, 87.655, 0.52", "-54.9484, -10.3631, 88.3397, 0.52", "-53.9313, -8.96048, 89.1555, 1.03", "-52.595, -7.27335, 90.1142, 0.29", "-52.5351, -7.20138, 90.1546, 0.29", "-51.6526, -6.25724, 90.6678, 0.29", "-50.9904, -5.59909, 90.982, 0.52", "-50.2746, -4.93683, 91.258, 0.52", "-49.4712, -4.20576, 91.4926, 0.96", "-49.4104, -4.14864, 91.5061, 0.96", "-47.5918, -2.42775, 91.9123, 0.29", "-46.0919, -0.992489, 92.2583, 0.29", "-46.012, -0.911552, 92.2806, 0.29", "-44.8009, 0.453465, 92.7284, 0.29", "-44.4488, 0.926988, 92.9117, 0.59", "-44.2972, 1.16869, 93.0203, 0.59", "-43.9908, 1.83732, 93.3836, 0.52", "-43.7122, 2.54061, 93.8208, 0.66", "-43.4247, 3.28192, 94.2893, 0.66", "-43.0014, 4.42842, 95.0381, 0.29", "-42.9241, 4.59486, 95.1544, 0.29", "-42.5428, 5.28745, 95.6592, 0.29", "-42.1673, 5.7703, 96.0847, 0.52", "-42.1109, 5.82813, 96.1426, 0.52", "-41.2071, 6.61115, 96.9523, 0.37", "-40.0374, 7.50817, 97.909, 0.59", "-39.4398, 7.94926, 98.3536, 0.96", "-37.7223, 9.17223, 99.5477, 0.37", "-37.6143, 9.24211, 99.6156, 0.37", "-36.3238, 10.0372, 100.348, 0.37", "-36.2419, 10.0849, 100.388, 0.37", "-35.3116, 10.6729, 100.805, 0.37", "-35.0794, 10.859, 100.916, 0.37", "-33.7186, 12.3973, 101.698, 0.59", "-33.4883, 12.6909, 101.852, 0.88", "-33.4342, 12.7681, 101.891, 0.88", "-33.0117, 13.4101, 102.195, 0.88", "-31.5349, 15.7971, 103.227, 0.29", "-30.3159, 17.9665, 103.99, 0.29", "-30.1506, 18.2862, 104.082, 0.29", "-28.7667, 20.8524, 104.865, 0.29", "-28.5764, 21.2058, 104.987, 0.29", "-27.6773, 22.87, 105.61, 0.37", "-26.5861, 24.8983, 106.482, 0.37", "-26.03, 25.8386, 107.006, 0.37", "-25.1511, 27.2053, 107.95, 0.29", "-24.3033, 28.4833, 109.038, 0.29", "-24.2056, 28.6213, 109.175, 0.29", "-23.7568, 29.1645, 109.927, 0.29", "-22.6169, 30.1981, 112.034, 1.18", "-22.3851, 30.3899, 112.452, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "13.2218, -219.58, -104.107, 0.88", "12.8221, -220.451, -104.623, 0.88", "12.5548, -221.077, -104.947, 1.47", "12.328, -221.699, -105.228, 1.69", "11.9444, -222.987, -105.73, 0.59", "11.9338, -223.031, -105.747, 0.59", "11.7739, -223.831, -106.047, 0.29", "11.6906, -224.468, -106.26, 0.44", "11.6609, -225.027, -106.49, 0.66", "11.6779, -225.64, -106.835, 1.11", "11.7294, -226.24, -107.205, 1.47", "11.7511, -226.545, -107.407, 1.47", "11.7535, -226.593, -107.44, 1.47", "11.7487, -228.016, -108.381, 1.11", "11.6367, -229.301, -109.124, 0.59", "11.5568, -229.965, -109.429, 0.81", "11.4806, -230.58, -109.64, 1.11", "11.4187, -231.216, -109.797, 1.25", "11.3442, -232.153, -109.936, 0.66", "11.2678, -233.224, -109.961, 0.52", "11.211, -234.247, -109.929, 1.03", "11.1905, -234.75, -109.928, 1.25", "11.175, -235.812, -109.956, 0.66", "11.1743, -236.13, -109.983, 0.44", "11.1906, -236.545, -110.044, 0.96", "11.215, -236.907, -110.118, 1.25", "11.2669, -237.842, -110.346, 1.11", "11.3013, -238.581, -110.554, 0.96", "11.34, -239.386, -110.759, 0.66", "11.3723, -240.231, -110.936, 0.59", "11.3742, -240.289, -110.946, 0.59", "11.3687, -240.938, -111.016, 0.59", "11.2649, -241.801, -111.028, 0.52", "11.0314, -242.63, -110.977, 0.81", "10.7455, -243.229, -110.893, 1.03", "10.6955, -243.304, -110.88, 1.03", "10.2915, -243.842, -110.778, 1.03", "9.6659, -244.529, -110.622, 0.52", "9.27384, -244.895, -110.524, 1.11", "8.81001, -245.277, -110.464, 1.33", "8.76261, -245.314, -110.458, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "13.2218, -219.58, -104.107, 0.52", "14.046, -219.967, -103.561, 0.52", "15.5436, -220.669, -102.492, 0.29", "16.4263, -221.101, -101.872, 0.59", "16.951, -221.363, -101.472, 0.96", "18.5485, -222.17, -100.24, 0.22", "19.6434, -222.713, -99.4097, 0.59", "19.7021, -222.741, -99.3649, 0.59", "20.5162, -223.134, -98.8072, 0.52", "21.7079, -223.798, -97.9676, 0.37", "22.2139, -224.125, -97.6283, 0.81", "22.6214, -224.419, -97.4055, 0.96", "23.6554, -225.208, -96.9117, 0.37", "24.6215, -225.937, -96.6179, 0.37", "25.5651, -226.652, -96.519, 0.44", "26.1227, -227.073, -96.5734, 0.44", "26.8767, -227.645, -96.6605, 0.22", "27.4186, -228.034, -96.7294, 0.44", "29.4649, -229.369, -97.0139, 0.37", "30.2862, -229.86, -97.1285, 0.52", "31.2127, -230.376, -97.2547, 0.59", "32.2651, -230.92, -97.3405, 0.81", "33.3532, -231.456, -97.3535, 0.29", "34.3207, -231.896, -97.274, 0.52", "34.8368, -232.111, -97.1684, 0.81", "35.3753, -232.29, -97.0766, 1.11", "35.6087, -232.352, -97.0476, 1.11", "36.0776, -232.452, -97.016, 0.96", "36.9376, -232.573, -96.8728, 0.59", "38.3295, -232.657, -96.4135, 0.29", "39.0045, -232.694, -96.1274, 0.52", "39.5253, -232.724, -95.876, 0.66", "39.5934, -232.731, -95.8404, 0.66", "41.2765, -232.967, -94.8698, 0.52", "42.5422, -233.196, -94.0897, 0.74", "43.7829, -233.444, -93.3084, 0.22", "44.1242, -233.527, -93.1117, 0.74", "44.7483, -233.716, -92.7741, 0.81", "46.135, -234.234, -92.1065, 0.22", "46.5695, -234.445, -91.9489, 0.66", "46.9781, -234.675, -91.8197, 0.74", "47.9538, -235.31, -91.4927, 0.22", "48.7831, -235.924, -91.1778, 0.66", "49.0673, -236.158, -91.0651, 0.81", "49.5621, -236.637, -90.8677, 0.52", "49.6057, -236.681, -90.8498, 0.52", "50.2732, -237.385, -90.6017, 0.22", "51.151, -238.361, -90.3383, 0.74", "51.6393, -238.87, -90.3004, 0.81", "51.7475, -238.975, -90.3026, 0.81", "52.2933, -239.456, -90.3754, 0.59", "52.8474, -239.892, -90.5624, 0.29", "53.448, -240.346, -90.8695, 1.03", "54.3505, -241.095, -91.4548, 1.03", "54.5122, -241.249, -91.572, 1.25", "55.0765, -241.905, -92.0018, 0.66", "55.939, -243.109, -92.6838, 0.52", "56.4259, -243.921, -93.0514, 0.37", "56.7546, -244.603, -93.3005, 0.29", "56.9997, -245.307, -93.4642, 0.29", "57.3358, -246.555, -93.6602, 0.29", "57.4316, -246.993, -93.7175, 0.81", "57.5603, -247.601, -93.7788, 1.03", "57.5817, -247.673, -93.788, 1.03", "57.9789, -248.663, -93.947, 0.59", "58.4308, -249.586, -94.0597, 0.44", "58.9614, -250.622, -94.1401, 0.88", "59.1149, -250.916, -94.1519, 1.25", "59.4006, -251.432, -94.1241, 1.55", "59.7954, -252.082, -94.0301, 0.29", "60.4705, -253.085, -93.5898, 0.29", "61.0514, -253.921, -93.0483, 0.29", "61.0869, -253.974, -93.0096, 0.29", "61.6208, -254.799, -92.402, 1.47", "62.0685, -255.517, -91.8816, 1.77", "63.2417, -257.395, -90.5301, 0.37", "63.6463, -258.039, -90.0647, 0.22", "64.1814, -258.885, -89.43, 0.29", "64.417, -259.284, -89.1496, 0.52", "64.6988, -259.836, -88.8207, 0.66", "64.7254, -259.901, -88.7887, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-68.837, -20.6971, 155.783, 0.37", "-70.2871, -22.4101, 170.899, 0.37", "-73.7736, -24.8046, 185.622, 0.37", "-74.344, -28.1663, 200.542, 0.37", "-76.5646, -32.8148, 214.983, 0.37", "-82.5696, -37.9095, 228.132, 0.37", "-86.6058, -44.0509, 241.585, 0.37", "-90.2846, -51.8597, 254.227, 0.37", "-91.6495, -62.4456, 265.138, 0.37", "-94.9612, -74.8423, 273.108, 0.37", "-100.216, -87.5837, 278.95, 0.37", "-104.16, -101.05, 284.124, 0.37", "-107.998, -114.548, 289.306, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-68.837, -20.6971, 155.783, 0.29", "-69.7693, -21.0358, 163.346, 0.37", "-71.1784, -21.0909, 170.841, 0.37", "-73.2098, -21.6005, 178.191, 0.37", "-73.3953, -21.658, 185.798, 0.37", "-72.859, -22.3559, 193.367, 0.37", "-72.878, -23.8325, 200.867, 0.37", "-74.111, -24.014, 208.391, 0.37", "-76.495, -22.8598, 215.523, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-22.3851, 30.3899, 112.452, 0.59", "-20.3342, 30.5644, 112.148, 0.59", "-20.2424, 30.5706, 112.135, 0.59", "-18.3818, 30.8235, 111.908, 0.29", "-17.4132, 31.062, 111.792, 0.29", "-17.3235, 31.0889, 111.782, 0.29", "-15.4107, 31.8415, 111.54, 0.29", "-15.3521, 31.8752, 111.533, 0.29", "-13.7889, 32.9244, 111.313, 0.29", "-12.1324, 34.2064, 110.98, 0.29", "-12.0014, 34.314, 110.948, 0.29", "-10.632, 35.4462, 110.537, 0.74", "-9.4759, 36.3641, 110.16, 0.29", "-9.13234, 36.585, 110.057, 0.29", "-7.39767, 37.5842, 109.501, 0.29", "-6.56352, 37.9958, 109.233, 0.29", "-5.17039, 38.581, 108.796, 0.29", "-3.38366, 39.1, 108.283, 0.29", "-1.8123, 39.4267, 107.86, 0.88", "7.8426, 45.2431, 107.81, 0.88", "17.597, 50.4063, 109.968, 0.88", "27.0797, 56.288, 111.238, 0.88", "36.7083, 62.1296, 111.419, 0.88", "46.8367, 67.1379, 111.69, 0.88", "56.4813, 72.8566, 112.595, 0.88", "66.6289, 77.8123, 113.013, 0.88", "77.3101, 81.6868, 112.33, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-22.3851, 30.3899, 112.452, 0.59", "-22.1531, 31.369, 113.483, 0.59", "-21.8849, 32.2275, 114.393, 0.59", "-21.5439, 33.0466, 115.284, 0.37", "-21.0652, 34.0859, 116.41, 0.29", "-20.5206, 35.0396, 117.458, 0.29", "-20.4792, 35.1054, 117.531, 0.29", "-19.8788, 35.9122, 118.434, 0.29", "-19.3198, 36.6051, 119.238, 0.66", "-18.9691, 37.0584, 119.721, 0.81", "-18.2724, 38.1473, 120.727, 0.29", "-18.2295, 38.2193, 120.792, 0.29", "-17.7218, 39.2355, 121.618, 0.29", "-17.6935, 39.3079, 121.669, 0.29", "-17.3117, 40.5473, 122.4, 0.52", "-17.1067, 41.435, 122.878, 0.74", "-17.0953, 41.5278, 122.927, 0.74", "-16.9705, 42.3513, 123.421, 0.74", "-16.9571, 42.4288, 123.471, 0.74", "-16.7863, 43.5209, 124.26, 0.29", "-16.6263, 44.6328, 125.141, 0.29", "-16.4391, 46.1125, 126.379, 0.29", "-16.271, 47.4009, 127.415, 0.29", "-16.2445, 47.5484, 127.527, 0.29", "-15.9337, 48.7965, 128.323, 0.29", "-15.9108, 48.875, 128.367, 0.29", "-15.4435, 50.1803, 128.942, 0.29", "-14.6591, 52.1851, 129.659, 0.29", "-13.6492, 54.8632, 130.507, 0.29", "-12.7116, 57.317, 131.249, 0.29", "-12.6472, 57.4798, 131.302, 0.29", "-11.6985, 59.8848, 132.14, 0.29", "-11.6313, 60.0567, 132.204, 0.29", "-10.6027, 62.8209, 133.333, 0.29", "-10.5715, 62.9127, 133.375, 0.29", "-9.82277, 65.3436, 134.641, 0.29", "-9.80002, 65.4322, 134.693, 0.29", "-9.50049, 67.2411, 135.892, 0.29", "-9.44624, 67.7125, 136.201, 0.74", "-9.43891, 67.8008, 136.259, 0.74", "-9.42056, 68.4041, 136.638, 0.59", "-9.58936, 69.9905, 137.535, 0.29", "-9.75961, 70.9438, 138.116, 0.88", "-9.9809, 71.5193, 138.541, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "8.76261, -245.314, -110.458, 0.52", "8.05795, -246.223, -110.277, 0.52", "7.52328, -246.955, -110.143, 0.37", "7.03609, -247.669, -109.985, 0.29", "6.65187, -248.212, -109.852, 0.66", "6.31225, -248.684, -109.733, 0.66", "6.2646, -248.749, -109.716, 0.66", "5.95018, -249.192, -109.605, 0.59", "5.37442, -249.964, -109.423, 0.29", "4.78458, -250.776, -109.246, 0.29", "4.54994, -251.118, -109.179, 0.66", "4.18927, -251.685, -109.082, 0.96", "3.92559, -252.166, -109.011, 1.18", "3.43448, -253.18, -108.892, 0.29", "3.14901, -253.85, -108.839, 0.29", "2.99053, -254.249, -108.806, 0.52", "2.92904, -254.386, -108.774, 0.52", "2.65073, -254.882, -108.573, 0.22", "2.35495, -255.279, -108.335, 0.44", "2.05683, -255.602, -108.046, 0.66", "1.64211, -255.994, -107.66, 0.66", "0.613519, -256.907, -106.76, 0.29", "0.316651, -257.175, -106.512, 0.96", "0.0160313, -257.469, -106.266, 1.25", "-0.932274, -258.56, -105.469, 0.52", "-1.46945, -259.29, -105.029, 0.52", "-1.88402, -259.922, -104.725, 0.29", "-2.24634, -260.485, -104.533, 0.37", "-2.6456, -261.07, -104.359, 0.44", "-2.96438, -261.454, -104.264, 0.44", "-3.52206, -261.993, -104.182, 0.22", "-3.87712, -262.255, -104.136, 0.37", "-4.50771, -262.625, -104.006, 0.59", "-5.36493, -263.049, -103.792, 1.18", "-6.17976, -263.419, -103.524, 0.74", "-6.25192, -263.451, -103.495, 0.74", "-7.39791, -263.992, -102.957, 0.37", "-8.46827, -264.576, -102.364, 0.29", "-8.72057, -264.725, -102.183, 0.59", "-9.3028, -265.052, -101.625, 0.74", "-9.3644, -265.083, -101.548, 0.74", "-9.66046, -265.213, -101.055, 0.74", "-9.68854, -265.22, -101.001, 0.74", "-10.2176, -265.3, -99.9676, 0.29", "-10.8322, -265.354, -98.7544, 0.59", "-11.3481, -265.372, -97.7144, 0.96", "-12.2342, -265.387, -95.8837, 0.59", "-12.5924, -265.382, -95.1154, 0.29", "-12.6236, -265.383, -95.0476, 0.29", "-13.1824, -265.419, -93.7749, 0.88", "-13.662, -265.449, -92.5988, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.76261, -245.314, -110.458, 0.52", "8.83109, -246.205, -111.314, 0.52", "8.83329, -246.253, -111.354, 0.52", "8.84063, -246.972, -111.913, 0.66", "8.81102, -248.549, -113.025, 0.44", "8.74606, -249.721, -113.824, 0.37", "8.68561, -250.364, -114.231, 0.66", "8.57673, -251.086, -114.622, 0.88", "8.41511, -251.9, -115.038, 0.88", "8.23808, -252.627, -115.376, 0.88", "7.99791, -253.621, -115.808, 0.59", "7.81956, -254.532, -116.228, 0.37", "7.68524, -255.488, -116.72, 0.37", "7.62306, -256.52, -117.308, 0.74", "7.63042, -256.964, -117.566, 1.11", "7.73197, -258.529, -118.557, 0.74", "7.80144, -259.27, -119.043, 0.44", "7.80569, -259.322, -119.077, 0.44", "7.87309, -260.424, -119.772, 1.03", "7.8813, -261.012, -120.088, 1.33", "7.78543, -262.325, -120.669, 0.66", "7.6022, -263.508, -121.041, 0.66", "7.37263, -264.677, -121.348, 0.88", "7.36182, -264.739, -121.36, 0.88", "7.21153, -265.654, -121.494, 1.11", "7.02015, -267.029, -121.643, 1.03", "6.90833, -268.057, -121.686, 0.52", "6.90127, -268.119, -121.693, 0.52", "6.75658, -269.166, -121.925, 0.88", "6.64652, -269.836, -122.116, 0.96", "6.52738, -270.427, -122.365, 0.96", "6.36436, -271.028, -122.719, 0.66", "5.76051, -272.702, -123.845, 0.44", "5.5164, -273.311, -124.272, 0.96", "5.25811, -273.863, -124.686, 1.25", "4.71066, -274.99, -125.558, 1.11", "4.22042, -275.965, -126.382, 0.74", "3.94746, -276.469, -126.841, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-9.9809, 71.5193, 138.541, 0.29", "-11.0637, 71.7529, 139.685, 0.29", "-11.1281, 71.7625, 139.754, 0.29", "-12.0279, 71.9542, 140.505, 0.29", "-12.1017, 71.9713, 140.562, 0.29", "-12.9338, 72.2201, 141.224, 0.66", "-13.5591, 72.4359, 141.738, 0.81", "-13.6125, 72.4554, 141.783, 0.81", "-15.1276, 73.0508, 143.237, 0.29", "-15.2595, 73.1068, 143.376, 0.29", "-16.256, 73.5736, 144.543, 0.29", "-17.3349, 74.1502, 145.953, 0.29", "-17.3786, 74.1758, 146.019, 0.29", "-18.1986, 74.6689, 147.45, 0.44", "-18.2305, 74.6916, 147.523, 0.44", "-18.4785, 74.8899, 148.112, 0.44", "-18.5062, 74.9156, 148.183, 0.44", "-18.9818, 75.468, 149.455, 0.29", "-19.0469, 75.5461, 149.597, 0.29", "-19.5325, 76.1496, 150.473, 0.29", "-19.7722, 76.461, 150.906, 0.59", "-19.8424, 76.5573, 151.033, 0.59", "-20.0566, 76.8413, 151.415, 0.59", "-20.5905, 77.5281, 152.346, 0.37", "-20.6707, 77.6228, 152.483, 0.37", "-21.1405, 78.1535, 153.174, 0.37", "-21.1808, 78.1994, 153.229, 0.37", "-21.7604, 78.8133, 153.963, 0.37", "-21.8554, 78.9087, 154.077, 0.37", "-22.4834, 79.4722, 154.831, 0.37", "-23.3155, 80.139, 155.839, 0.22", "-23.4215, 80.2105, 155.973, 0.22", "-23.9944, 80.5389, 156.736, 0.22", "-24.04, 80.5595, 156.802, 0.22", "-24.5127, 80.5929, 157.789, 0.81", "-24.6448, 80.5515, 158.149, 0.81", "-24.9927, 80.3489, 159.159, 0.22", "-25.0217, 80.3284, 159.235, 0.22", "-25.3336, 80.0384, 160.081, 0.22", "-26.2519, 79.1798, 162.4, 0.22", "-26.3167, 79.1204, 162.555, 0.22", "-26.7875, 78.6985, 163.653, 0.22", "-27.2487, 78.2962, 164.691, 0.22", "-27.9723, 77.7182, 166.257, 0.22", "-28.5115, 77.3414, 167.364, 0.22", "-28.5558, 77.3215, 167.445, 0.22", "-29.2058, 77.2093, 168.699, 0.52", "-29.3872, 77.2726, 169.084, 0.81", "-29.4541, 77.3343, 169.232, 0.81", "-29.6252, 77.5496, 169.569, 0.81", "-29.6677, 77.6017, 169.633, 0.81", "-30.402, 78.3961, 170.512, 0.37", "-30.8478, 78.864, 170.961, 0.59", "-30.8961, 78.9131, 171.006, 0.59", "-31.5019, 79.5494, 171.553, 0.44", "-32.6461, 80.6617, 172.33, 0.29", "-32.7654, 80.7726, 172.396, 0.29", "-33.5729, 81.4034, 172.644, 0.29", "-33.6302, 81.445, 172.657, 0.29", "-34.5239, 82.058, 172.825, 0.29", "-36.2101, 83.1189, 172.901, 0.29", "-36.2695, 83.1532, 172.901, 0.29", "-38.4297, 84.242, 172.847, 0.29", "-38.4927, 84.2698, 172.845, 0.29", "-39.1286, 84.5319, 172.856, 0.66", "-42.0189, 85.5935, 172.992, 0.37", "-42.1949, 85.6523, 173.013, 0.37", "-43.1499, 85.9354, 173.188, 0.29", "-44.0176, 86.1609, 173.469, 0.15", "-44.5264, 86.2823, 173.673, 0.74", "-44.7393, 86.3216, 173.794, 0.74", "-45.978, 86.4604, 174.796, 0.37", "-46.5546, 86.553, 175.285, 0.29", "-47.2802, 86.7182, 175.99, 0.29", "-47.3581, 86.7381, 176.076, 0.29", "-48.2522, 86.9783, 177.242, 0.29", "-48.346, 87.0089, 177.39, 0.29", "-48.7978, 87.1917, 178.272, 0.29", "-49.2331, 87.3891, 179.128, 0.29", "-49.2748, 87.4057, 179.198, 0.29", "-49.9743, 87.6713, 180.237, 0.29", "-50.729, 87.9385, 181.161, 0.29", "-50.8858, 87.9867, 181.33, 0.29", "-51.6977, 88.2594, 182.045, 0.29", "-52.6436, 88.6531, 182.795, 0.52", "-53.1253, 88.8984, 183.17, 0.66", "-54.2414, 89.569, 184.015, 0.29", "-55.4819, 90.3952, 184.951, 1.11", "-56.7806, 91.2869, 185.852, 0.29", "-57.4933, 91.7983, 186.318, 0.29", "-58.0996, 92.2505, 186.723, 0.74", "-58.2325, 92.3493, 186.808, 0.74", "-58.6107, 92.6323, 187.039, 0.74", "-60.6259, 94.0069, 188.163, 0.29", "-60.7206, 94.0631, 188.217, 0.29", "-61.4598, 94.4708, 188.623, 0.29", "-61.5141, 94.5016, 188.654, 0.29", "-62.4249, 95.0405, 189.184, 0.59", "-64.0699, 96.1266, 190.25, 0.29", "-64.1293, 96.1772, 190.301, 0.29", "-64.5341, 96.5969, 190.692, 0.29", "-64.7264, 96.8858, 190.919, 0.59", "-64.7604, 96.9542, 190.97, 0.59", "-64.9794, 97.5589, 191.395, 0.59", "-65.1531, 98.194, 191.835, 0.29", "-65.3329, 98.7046, 192.214, 0.29", "-65.9732, 100.162, 193.383, 0.29", "-66.0001, 100.21, 193.427, 0.29", "-66.4066, 100.821, 194.054, 0.29", "-66.6053, 101.06, 194.339, 0.29", "-67.1943, 101.597, 195.131, 0.52", "-67.4573, 101.78, 195.485, 0.59", "-68.2182, 102.185, 196.552, 0.22", "-68.4333, 102.301, 196.833, 0.22", "-68.8735, 102.584, 197.402, 0.22", "-69.2854, 102.916, 197.939, 0.81", "-69.569, 103.18, 198.305, 1.03", "-70.0371, 103.624, 198.886, 0.52", "-70.9172, 104.44, 199.934, 0.29", "-71.9405, 105.354, 201.126, 0.22", "-72.9237, 106.285, 202.267, 0.22", "-73.0397, 106.403, 202.403, 0.22", "-73.5214, 106.911, 202.972, 0.74", "-73.7792, 107.18, 203.285, 0.74", "-74.0696, 107.467, 203.702, 0.74", "-82.1588, 111.913, 210.374, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-9.9809, 71.5193, 138.541, 0.29", "-9.70725, 72.5531, 138.681, 0.29", "-9.26083, 74.3918, 138.854, 0.29", "-9.24251, 74.4693, 138.861, 0.29", "-8.84628, 76.2059, 139.013, 0.29", "-8.82771, 76.2927, 139.023, 0.29", "-8.31558, 78.8663, 139.366, 0.52", "-8.05594, 80.3046, 139.611, 0.52", "-7.90148, 81.3394, 139.82, 0.52", "-7.87008, 81.6313, 139.886, 0.52", "-7.71502, 82.8564, 140.292, 0.52", "-7.58663, 83.7585, 140.707, 0.81", "-7.56359, 83.9178, 140.82, 0.81", "-7.4499, 84.5488, 141.401, 0.66", "-7.35868, 85.1361, 142.023, 0.37", "-7.09973, 86.8758, 144.002, 0.37", "-7.09451, 86.9372, 144.072, 0.37", "-7.08906, 87.5608, 144.761, 0.52", "-7.09712, 87.6544, 144.853, 0.52", "-7.28351, 88.8629, 145.929, 0.44", "-7.31488, 89.0064, 146.043, 0.44", "-7.66173, 90.0644, 146.766, 0.44", "-7.75731, 90.3897, 146.979, 0.44", "-8.1481, 92.0537, 147.994, 0.44", "-8.16328, 92.1325, 148.041, 0.44", "-8.27999, 92.9484, 148.498, 0.52", "-8.29999, 93.1235, 148.585, 0.52", "-8.39306, 94.211, 149.091, 0.37", "-8.47556, 95.4885, 149.625, 0.74", "-8.47941, 95.5738, 149.659, 0.74", "-8.50267, 96.1659, 149.895, 0.74", "-8.51302, 98.9491, 151.058, 0.52", "-8.51113, 99.0336, 151.095, 0.52", "-8.3858, 101.304, 152.108, 0.52", "-8.17452, 103.977, 153.345, 0.52", "-8.16388, 104.084, 153.396, 0.52", "-7.95274, 105.792, 154.246, 0.88", "-7.89533, 106.157, 154.439, 0.88", "-7.56445, 108.206, 155.509, 0.52", "-7.34582, 109.511, 156.177, 0.52", "-7.29406, 109.75, 156.304, 0.52", "-7.06923, 110.959, 156.914, 0.52", "-7.02716, 111.298, 157.08, 0.52", "-6.9557, 112.135, 157.52, 0.59", "-6.90083, 113.105, 158.04, 0.37", "-6.83699, 114.663, 158.883, 0.44", "-6.77892, 116.358, 159.781, 0.22", "-6.74295, 117.886, 160.583, 0.22", "-6.7181, 118.534, 160.927, 0.37", "-6.65507, 120.037, 161.734, 0.22", "-6.6476, 120.189, 161.814, 0.22", "-6.51794, 121.443, 162.513, 0.22", "-6.5003, 121.52, 162.561, 0.22", "-6.13583, 122.763, 163.316, 0.22", "-6.11527, 122.83, 163.355, 0.22", "-5.60393, 124.455, 164.324, 0.22", "-5.0323, 126.289, 165.384, 0.66", "-4.81967, 126.995, 165.782, 0.96", "-4.41187, 128.291, 166.519, 0.22", "-4.06419, 129.406, 167.152, 0.22", "-4.03602, 129.493, 167.203, 0.22", "-3.82313, 130.134, 167.586, 0.59", "-3.69853, 130.701, 167.904, 0.88", "-3.47773, 132.046, 168.656, 0.44", "-3.38759, 132.857, 169.102, 0.29", "-3.36866, 133.111, 169.231, 0.29", "-3.33835, 133.717, 169.509, 0.29", "-3.33156, 135.294, 170.048, 0.74", "-3.35583, 136.071, 170.239, 0.29", "-3.40971, 136.886, 170.392, 0.44", "-3.44482, 137.546, 170.509, 0.59", "-3.44771, 137.636, 170.527, 0.59", "-3.45894, 139.588, 170.94, 0.22", "-3.45191, 139.874, 171.013, 0.22", "-3.33276, 141.455, 171.528, 0.22", "-3.32095, 141.538, 171.559, 0.22", "-3.12649, 142.449, 171.943, 0.44", "-3.10023, 142.541, 171.986, 0.44", "-2.91315, 143.002, 172.24, 0.44", "-2.20203, 144.492, 173.049, 0.29", "-1.87328, 145.03, 173.34, 0.44", "-1.77476, 145.18, 173.423, 0.44", "-1.26316, 145.853, 173.802, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "3.94746, -276.469, -126.841, 0.29", "3.27392, -276.629, -126.663, 0.29", "2.46692, -276.94, -126.48, 0.29", "2.3204, -277.006, -126.448, 0.59", "1.79917, -277.252, -126.338, 0.66", "1.69399, -277.299, -126.326, 0.66", "1.14533, -277.531, -126.284, 0.66", "0.180723, -277.975, -126.239, 0.22", "-0.214676, -278.168, -126.224, 0.66", "-0.679381, -278.395, -126.212, 0.66", "-1.92515, -278.996, -126.195, 0.22", "-2.64972, -279.335, -126.192, 0.22", "-3.66466, -279.792, -126.201, 0.22", "-4.37557, -280.082, -126.209, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.94746, -276.469, -126.841, 0.29", "4.04921, -277.875, -127.251, 0.29", "4.16057, -278.734, -127.55, 0.29", "4.19681, -279.159, -127.695, 0.74", "4.21623, -279.535, -127.84, 0.88", "4.21905, -279.627, -127.878, 0.88", "4.215, -280.281, -128.132, 0.88", "4.23662, -281.422, -128.505, 0.22", "4.23443, -282.072, -128.723, 0.22", "4.22047, -282.82, -128.997, 0.88", "4.22216, -282.881, -129.019, 0.88", "4.27996, -283.66, -129.29, 0.74", "4.44669, -284.623, -129.595, 0.37", "4.46972, -284.682, -129.61, 0.37", "5.24043, -285.938, -129.792, 0.29", "5.68388, -286.517, -129.825, 0.59", "5.82023, -286.673, -129.828, 0.59", "6.50783, -287.369, -129.823, 0.88", "7.55332, -288.328, -129.629, 0.74", "8.7992, -289.4, -129.265, 0.29", "9.46662, -289.945, -129.022, 0.74", "9.51582, -289.986, -129.003, 0.74", "9.91786, -290.315, -128.825, 0.74", "11.731, -291.738, -127.851, 0.44", "12.3209, -292.19, -127.449, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-1.26316, 145.853, 173.802, 0.29", "-0.594707, 145.541, 173.076, 0.29", "-0.522747, 145.502, 172.989, 0.29", "-0.305797, 145.381, 172.715, 0.29", "-0.270828, 145.361, 172.671, 0.29", "0.22966, 145.082, 172.038, 0.29", "0.446698, 144.96, 171.763, 0.81", "0.656659, 144.837, 171.423, 1.03", "0.685482, 144.817, 171.375, 1.03", "4.07329, 141.497, 164.751, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-1.26316, 145.853, 173.802, 0.44", "-1.01821, 146.685, 174.245, 0.44", "-0.740127, 147.618, 174.728, 0.37", "-0.171634, 149.294, 175.638, 0.29", "0.339623, 150.767, 176.482, 0.29", "0.579091, 151.427, 176.859, 0.74", "0.699158, 151.75, 177.043, 0.74", "0.861878, 152.168, 177.267, 0.44", "1.28316, 153.123, 177.754, 0.37", "1.77145, 154.115, 178.23, 0.29", "2.27591, 155.11, 178.694, 0.29", "2.33024, 155.208, 178.74, 0.29", "3.09547, 156.556, 179.369, 0.29", "3.24374, 156.813, 179.485, 0.29", "3.72114, 157.657, 179.844, 0.29", "3.74667, 157.698, 179.863, 0.29", "4.18101, 158.477, 180.302, 0.29", "4.34904, 158.898, 180.591, 0.44", "4.37108, 158.985, 180.66, 0.44", "4.42229, 159.3, 180.921, 0.29", "4.42729, 159.354, 180.966, 0.29", "4.45013, 160.224, 181.618, 0.29", "4.41509, 161.754, 182.662, 0.29", "4.41225, 161.933, 182.779, 0.29", "4.40927, 162.489, 183.13, 0.74", "4.41431, 162.951, 183.414, 0.88", "4.42986, 163.88, 183.975, 0.52", "4.44855, 164.721, 184.479, 0.37", "4.47894, 165.874, 185.198, 0.29", "4.48549, 166.053, 185.315, 0.29", "4.55593, 167.492, 186.297, 0.29", "4.5642, 167.611, 186.382, 0.29", "4.66657, 168.559, 187.123, 0.29", "4.71487, 168.913, 187.427, 0.52", "4.76091, 169.179, 187.687, 0.66", "4.77777, 169.257, 187.771, 0.66", "4.8571, 169.518, 188.108, 0.66", "4.86928, 169.564, 188.168, 0.66", "4.95196, 170.032, 188.764, 0.29", "4.9686, 170.18, 188.95, 0.22", "4.99436, 170.454, 189.304, 0.52", "5.01195, 170.61, 189.497, 0.52", "5.05894, 171.007, 189.967, 0.29", "5.12668, 171.558, 190.566, 0.29", "5.27239, 172.42, 191.458, 0.29", "5.2839, 172.472, 191.512, 0.29", "5.51534, 173.347, 192.403, 0.29", "5.53939, 173.426, 192.483, 0.29", "5.8585, 174.376, 193.409, 0.29", "6.13298, 175.182, 194.149, 0.29", "6.16775, 175.307, 194.245, 0.29", "6.26905, 175.75, 194.545, 0.29", "6.276, 175.788, 194.568, 0.29", "6.36859, 176.41, 194.891, 0.88", "6.39055, 176.604, 194.977, 0.88", "6.48487, 177.536, 195.355, 0.22", "6.57039, 178.464, 195.697, 0.22", "6.58299, 178.607, 195.748, 0.22", "6.67509, 179.636, 196.101, 0.22", "6.67923, 179.68, 196.116, 0.22", "6.73449, 181.098, 196.534, 0.52", "6.73456, 182.138, 196.819, 0.29", "6.71053, 182.614, 196.934, 0.37", "6.7032, 182.71, 196.956, 0.37", "6.64968, 183.247, 197.073, 0.37", "6.41344, 184.924, 197.378, 0.22", "6.25184, 185.933, 197.55, 0.22", "6.24516, 185.986, 197.56, 0.22", "6.18856, 186.516, 197.658, 0.52", "6.12659, 187.256, 197.804, 0.66", "5.99879, 188.768, 198.068, 0.15", "5.92815, 190.005, 198.282, 0.15", "5.86724, 190.641, 198.362, 0.29", "5.86079, 190.694, 198.368, 0.29", "5.80387, 191.082, 198.409, 0.29", "5.60351, 192.285, 198.542, 0.44", "5.52456, 192.621, 198.559, 0.44", "5.27599, 193.465, 198.613, 0.22", "5.14575, 193.915, 198.66, 0.52", "5.13154, 193.967, 198.667, 0.52", "5.0394, 194.341, 198.737, 0.88", "4.61177, 196.47, 199.306, 0.29", "4.2853, 198.227, 199.824, 0.29", "4.21049, 198.832, 200.019, 0.29", "4.20833, 198.883, 200.036, 0.29", "4.25434, 199.879, 200.38, 0.29", "4.40654, 200.735, 200.685, 0.29", "4.42075, 200.774, 200.7, 0.29", "4.9542, 201.941, 201.052, 0.29", "5.38489, 202.811, 201.286, 0.59", "5.6086, 203.243, 201.392, 0.59", "5.99057, 203.993, 201.579, 0.22", "6.40637, 204.841, 201.804, 0.22", "6.45489, 204.946, 201.835, 0.22", "7.01714, 206.25, 202.254, 0.22", "7.0581, 206.351, 202.289, 0.22", "7.84456, 208.404, 203.048, 0.22", "7.86299, 208.457, 203.07, 0.22", "8.24069, 209.678, 203.612, 0.22", "8.27896, 209.82, 203.68, 0.22", "8.32343, 210.023, 203.79, 0.59", "8.40119, 210.442, 204.028, 0.59", "8.49704, 211.515, 204.602, 0.29", "8.51441, 212.01, 204.854, 0.59", "8.50534, 212.794, 205.236, 0.52", "8.4937, 213.481, 205.553, 0.74", "8.48008, 214.081, 205.814, 0.74", "8.46447, 215.295, 206.287, 0.22", "8.46408, 215.816, 206.461, 0.44", "8.47444, 216.281, 206.607, 0.74", "8.49023, 216.549, 206.692, 1.03", "8.49351, 216.591, 206.706, 1.03", "8.56325, 217.153, 206.922, 1.03", "8.5747, 217.199, 206.946, 1.03", "8.76177, 217.952, 207.338, 0.37", "8.94001, 218.702, 207.724, 0.29", "11.1749, 225.08, 210.66, 0.29", "13.1668, 230.895, 214.756, 0.29", "15.5131, 236.492, 218.974, 0.29", "18.5815, 241.45, 223.551, 0.29", "22.4645, 245.925, 228.037, 0.29", "26.2073, 249.271, 233.601, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "4.07329, 141.497, 164.751, 0.22", "8.64976, 136.152, 156.334, 0.22", "13.9029, 130.227, 148.727, 0.22", "19.8323, 125.231, 140.886, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "4.07329, 141.497, 164.751, 0.22", "7.84456, 138.564, 158.334, 0.22", "11.6789, 135.609, 151.965, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "axon_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "axon_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_DBC_64c3ef1172_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_92, dend_25, dend_0, axon_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, axon_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.01289, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.56298, -1.44753, -8.91232, 1.11 ) }
    dend_92 { pt3dadd( 2.60522, -2.25963, -9.03998, 1.11 ) }
    dend_92 { pt3dadd( 2.63172, -2.71822, -9.12846, 1.03 ) }
    dend_92 { pt3dadd( 2.66588, -3.32262, -9.251, 1.03 ) }
    dend_92 { pt3dadd( 2.69547, -4.0621, -9.48546, 1.03 ) }
    dend_92 { pt3dadd( 2.69603, -4.66099, -9.7292, 1.18 ) }
    dend_92 { pt3dadd( 2.67606, -5.23966, -10.0145, 1.18 ) }
    dend_92 { pt3dadd( 2.6346, -5.82535, -10.3652, 1.4 ) }
    dend_92 { pt3dadd( 2.58341, -6.1634, -10.6527, 1.55 ) }
    dend_92 { pt3dadd( 2.34592, -7.26057, -11.8136, 1.25 ) }
    dend_92 { pt3dadd( 2.20235, -7.81909, -12.5715, 1.25 ) }
    dend_92 { pt3dadd( 2.14114, -8.05804, -12.9705, 1.47 ) }
    dend_92 { pt3dadd( 2.04197, -8.59479, -13.963, 1.69 ) }
    dend_92 { pt3dadd( 1.93945, -9.66947, -16.0175, 1.69 ) }
    dend_92 { pt3dadd( 1.93955, -9.68379, -16.0446, 1.69 ) }
    dend_92 { pt3dadd( 2.04464, -10.6121, -17.6937, 1.33 ) }
    dend_92 { pt3dadd( 2.16077, -11.239, -18.7095, 1.11 ) }
    dend_92 { pt3dadd( 2.27963, -11.8268, -19.5346, 1.25 ) }
    dend_92 { pt3dadd( 2.39236, -12.4005, -20.1382, 1.4 ) }
    dend_92 { pt3dadd( 2.44063, -12.7926, -20.411, 1.4 ) }
    dend_92 { pt3dadd( 2.441, -13.2905, -20.6988, 1.33 ) }
    dend_92 { pt3dadd( 2.33488, -13.9627, -20.9682, 1.18 ) }
    dend_92 { pt3dadd( 2.17408, -14.471, -21.1701, 1.18 ) }
    dend_92 { pt3dadd( 1.90756, -15.0761, -21.4583, 1.33 ) }
    dend_92 { pt3dadd( 1.54887, -15.8461, -21.8809, 1.03 ) }
    dend_92 { pt3dadd( 1.30245, -16.4243, -22.2143, 1.25 ) }
    dend_92 { pt3dadd( 1.17487, -16.7868, -22.4261, 1.62 ) }
    dend_92 { pt3dadd( 0.94528, -17.6232, -22.9072, 1.62 ) }
    dend_92 { pt3dadd( 0.832307, -18.2234, -23.2265, 1.03 ) }
    dend_92 { pt3dadd( 0.739104, -19.2199, -23.6816, 1.03 ) }
    dend_92 { pt3dadd( 0.728515, -19.9762, -23.9631, 1.18 ) }
    dend_92 { pt3dadd( 0.760904, -20.6845, -24.1859, 1.18 ) }
    dend_92 { pt3dadd( 0.782319, -20.9313, -24.2548, 1.55 ) }
    dend_92 { pt3dadd( 0.825504, -21.3483, -24.3456, 1.55 ) }
    dend_92 { pt3dadd( 0.87717, -21.9188, -24.4727, 1.69 ) }
    dend_92 { pt3dadd( 0.914284, -22.5089, -24.6485, 1.84 ) }
    dend_92 { pt3dadd( 0.934378, -23.0464, -24.8639, 1.47 ) }
    dend_92 { pt3dadd( 0.952842, -23.7815, -25.1973, 1.18 ) }
    dend_92 { pt3dadd( 0.953038, -24.4138, -25.5136, 1.18 ) }
    dend_92 { pt3dadd( 0.937629, -25.1352, -25.9074, 1.18 ) }
    dend_92 { pt3dadd( 0.935947, -25.9373, -26.3094, 1.33 ) }
    dend_92 { pt3dadd( 0.973038, -26.6037, -26.5699, 1.03 ) }
    dend_92 { pt3dadd( 1.02732, -27.1142, -26.7568, 1.03 ) }
    dend_92 { pt3dadd( 1.10645, -27.6488, -26.9267, 1.03 ) }
    dend_92 { pt3dadd( 1.21187, -28.3211, -27.1257, 1.33 ) }
    dend_92 { pt3dadd( 1.39581, -29.6981, -27.5301, 1.33 ) }
    dend_92 { pt3dadd( 1.51581, -30.9077, -27.9253, 1.33 ) }
    dend_92 { pt3dadd( 1.57545, -31.7692, -28.2489, 1.18 ) }
    dend_92 { pt3dadd( 1.60608, -32.2603, -28.4599, 1.4 ) }
    dend_92 { pt3dadd( 1.67244, -33.1614, -28.9291, 1.4 ) }
    dend_92 { pt3dadd( 1.74425, -34.1039, -29.5133, 1.33 ) }
    dend_92 { pt3dadd( 1.81058, -34.9357, -30.1423, 1.18 ) }
    dend_92 { pt3dadd( 1.81404, -34.9668, -30.1678, 1.18 ) }
    dend_92 { pt3dadd( 1.89914, -35.5193, -30.6173, 1.47 ) }
    dend_92 { pt3dadd( 2.06419, -36.3111, -31.2798, 1.84 ) }
    dend_92 { pt3dadd( 2.20475, -36.7931, -31.6719, 1.62 ) }
    dend_92 { pt3dadd( 2.41836, -37.3726, -32.1251, 1.55 ) }
    dend_92 { pt3dadd( 2.6807, -38.0489, -32.6507, 1.33 ) }
    dend_92 { pt3dadd( 2.88449, -38.6345, -33.1203, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -9.61039, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.49335, -9.67471, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.343649, -10.198, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 10.1686, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.44144, 10.8897, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.12652, 12.2329, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.60416, 13.1996, 0.147565, 1.92 ) }
    dend_0 { pt3dadd( 2.7827, 13.5718, 0.150494, 1.92 ) }
    dend_0 { pt3dadd( 3.04462, 14.1032, 0.155473, 1.92 ) }
    dend_0 { pt3dadd( 3.22112, 14.4503, 0.158884, 1.92 ) }
    dend_0 { pt3dadd( 3.50022, 14.9704, 0.164741, 1.92 ) }
    dend_0 { pt3dadd( 3.72578, 15.3777, 0.169457, 1.99 ) }
    dend_0 { pt3dadd( 4.06484, 15.9889, 0.175699, 1.99 ) }
    dend_0 { pt3dadd( 4.56361, 16.9373, 0.183732, 1.99 ) }
    dend_0 { pt3dadd( 4.97322, 17.7262, 0.189207, 1.99 ) }
    dend_0 { pt3dadd( 5.40594, 18.5987, 0.193635, 1.99 ) }
    dend_0 { pt3dadd( 5.88039, 19.6349, 0.176167, 2.21 ) }
    dend_0 { pt3dadd( 6.28083, 20.6318, 0.140649, 2.21 ) }
    dend_0 { pt3dadd( 6.53331, 21.3797, 0.0910049, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 6.62003, 21.7056, 0.0550481, 1.99 ) }
    dend_0 { pt3dadd( 6.77539, 22.4341, -0.0472708, 1.99 ) }
    dend_0 { pt3dadd( 6.9251, 23.3688, -0.19461, 2.06 ) }
    dend_0 { pt3dadd( 7.06264, 24.5381, -0.411479, 1.92 ) }
    dend_0 { pt3dadd( 7.1658, 25.6683, -0.65762, 1.92 ) }
    dend_0 { pt3dadd( 7.26893, 26.9306, -0.983168, 1.99 ) }
    dend_0 { pt3dadd( 7.31506, 27.593, -1.18143, 2.14 ) }
    dend_0 { pt3dadd( 7.38873, 28.7017, -1.52984, 2.14 ) }
    dend_0 { pt3dadd( 7.47429, 30.0681, -1.97455, 1.99 ) }
    dend_0 { pt3dadd( 7.51407, 30.9004, -2.27405, 2.06 ) }
    dend_0 { pt3dadd( 7.53061, 31.8956, -2.65303, 2.43 ) }
    dend_0 { pt3dadd( 7.53221, 32.6681, -2.98074, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.551708 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.551708 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.551708 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 2.88449, -38.6345, -33.1203, 0.52 ) }
    dend_98 { pt3dadd( 1.88033, -39.8244, -34.6274, 0.52 ) }
    dend_98 { pt3dadd( 1.22167, -40.8224, -35.7924, 0.52 ) }
    dend_98 { pt3dadd( 0.885338, -41.6213, -36.6705, 0.52 ) }
    dend_98 { pt3dadd( 0.609883, -42.8432, -37.9704, 0.52 ) }
    dend_98 { pt3dadd( 0.56038, -43.4583, -38.6224, 1.11 ) }
    dend_98 { pt3dadd( 0.554868, -44.2108, -39.3762, 1.4 ) }
    dend_98 { pt3dadd( 0.680938, -44.8021, -39.9007, 1.69 ) }
    dend_98 { pt3dadd( 1.07351, -45.9277, -40.8144, 1.62 ) }
    dend_98 { pt3dadd( 1.48006, -46.854, -41.5332, 1.4 ) }
    dend_98 { pt3dadd( 2.07446, -48.0934, -42.4385, 0.88 ) }
    dend_98 { pt3dadd( 2.44811, -48.8752, -43.0052, 0.66 ) }
    dend_98 { pt3dadd( 2.96389, -50.0038, -43.7613, 0.66 ) }
    dend_98 { pt3dadd( 3.26263, -50.684, -44.2145, 0.88 ) }
    dend_98 { pt3dadd( 3.59589, -51.4889, -44.7078, 1.11 ) }
    dend_98 { pt3dadd( 3.89684, -52.1646, -45.0806, 1.18 ) }
    dend_98 { pt3dadd( 4.22408, -52.8158, -45.4077, 1.18 ) }
    dend_98 { pt3dadd( 4.50427, -53.3123, -45.6895, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 2.88449, -38.6345, -33.1203, 0.66 ) }
    dend_93 { pt3dadd( 2.74558, -39.5741, -32.6558, 0.66 ) }
    dend_93 { pt3dadd( 2.55759, -40.258, -32.2353, 0.52 ) }
    dend_93 { pt3dadd( 2.53892, -40.3079, -32.2045, 0.52 ) }
    dend_93 { pt3dadd( 2.16085, -41.1732, -31.6569, 0.74 ) }
    dend_93 { pt3dadd( 1.77983, -42.0074, -31.1641, 0.88 ) }
    dend_93 { pt3dadd( 1.49202, -42.6349, -30.7809, 0.74 ) }
    dend_93 { pt3dadd( 1.08842, -43.4735, -30.2054, 0.37 ) }
    dend_93 { pt3dadd( 0.815908, -44.0898, -29.7529, 1.18 ) }
    dend_93 { pt3dadd( 0.570201, -44.7979, -29.2258, 1.4 ) }
    dend_93 { pt3dadd( 0.361586, -45.5985, -28.6237, 0.96 ) }
    dend_93 { pt3dadd( 0.288429, -46.4325, -27.9007, 0.74 ) }
    dend_93 { pt3dadd( 0.365002, -47.2534, -27.0789, 0.29 ) }
    dend_93 { pt3dadd( 0.5494, -48.006, -26.279, 0.74 ) }
    dend_93 { pt3dadd( 0.729541, -48.5023, -25.7309, 0.96 ) }
    dend_93 { pt3dadd( 0.744361, -48.5371, -25.6944, 0.96 ) }
    dend_93 { pt3dadd( 1.3253, -49.9178, -24.4, 0.59 ) }
    dend_93 { pt3dadd( 1.53426, -50.5544, -23.9489, 1.11 ) }
    dend_93 { pt3dadd( 1.65215, -51.0844, -23.6574, 1.25 ) }
    dend_93 { pt3dadd( 1.69064, -51.6343, -23.4393, 1.18 ) }
    dend_93 { pt3dadd( 1.64066, -52.6225, -23.1069, 0.81 ) }
    dend_93 { pt3dadd( 1.52175, -53.4885, -22.8685, 0.59 ) }
    dend_93 { pt3dadd( 1.30306, -54.425, -22.687, 0.44 ) }
    dend_93 { pt3dadd( 1.28409, -54.492, -22.6734, 0.44 ) }
    dend_93 { pt3dadd( 1.03115, -55.2012, -22.488, 0.29 ) }
    dend_93 { pt3dadd( 0.567235, -56.2713, -22.1586, 0.29 ) }
    dend_93 { pt3dadd( 0.258458, -56.9287, -21.9377, 0.81 ) }
    dend_93 { pt3dadd( 0.0310725, -57.4495, -21.7672, 1.33 ) }
    dend_93 { pt3dadd( -0.187735, -58.0325, -21.6314, 1.33 ) }
    dend_93 { pt3dadd( -0.482425, -59.0156, -21.554, 0.96 ) }
    dend_93 { pt3dadd( -0.623571, -59.7031, -21.6073, 0.81 ) }
    dend_93 { pt3dadd( -0.714438, -60.4408, -21.7667, 0.81 ) }
    dend_93 { pt3dadd( -0.774216, -61.3379, -22.0371, 0.74 ) }
    dend_93 { pt3dadd( -0.797271, -62.5316, -22.4644, 0.44 ) }
    dend_93 { pt3dadd( -0.785369, -63.5985, -22.924, 0.66 ) }
    dend_93 { pt3dadd( -0.767501, -64.2857, -23.2662, 0.74 ) }
    dend_93 { pt3dadd( -0.765241, -64.91, -23.5795, 1.03 ) }
    dend_93 { pt3dadd( -0.800257, -65.6433, -23.9286, 1.25 ) }
    dend_93 { pt3dadd( -0.882435, -66.419, -24.2441, 1.11 ) }
    dend_93 { pt3dadd( -1.02726, -67.3749, -24.5546, 0.59 ) }
    dend_93 { pt3dadd( -1.1619, -68.156, -24.7701, 0.59 ) }
    dend_93 { pt3dadd( -1.31729, -68.9788, -25.0053, 0.66 ) }
    dend_93 { pt3dadd( -1.43119, -69.576, -25.1722, 0.66 ) }
    dend_93 { pt3dadd( -1.58352, -70.4875, -25.4023, 0.52 ) }
    dend_93 { pt3dadd( -1.69917, -71.33, -25.6141, 0.52 ) }
    dend_93 { pt3dadd( -1.76084, -72.0667, -25.7851, 0.59 ) }
    dend_93 { pt3dadd( -1.79243, -73.0098, -26.0379, 1.25 ) }
    dend_93 { pt3dadd( -1.78922, -73.3705, -26.1485, 1.4 ) }
    dend_93 { pt3dadd( -1.75966, -74.0199, -26.363, 1.4 ) }
    dend_93 { pt3dadd( -1.69847, -74.9664, -26.636, 0.88 ) }
    dend_93 { pt3dadd( -1.65697, -75.5718, -26.775, 0.52 ) }
    dend_93 { pt3dadd( -1.62017, -76.6273, -26.9574, 0.52 ) }
    dend_93 { pt3dadd( -1.62947, -77.294, -26.9552, 0.52 ) }
    dend_93 { pt3dadd( -1.63384, -77.3634, -26.9427, 0.52 ) }
    dend_93 { pt3dadd( -1.71355, -78.4008, -26.5491, 0.52 ) }
    dend_93 { pt3dadd( -1.71639, -78.4552, -26.5217, 0.52 ) }
    dend_93 { pt3dadd( -1.72877, -78.8983, -26.272, 0.96 ) }
    dend_93 { pt3dadd( -1.70646, -80.0793, -25.5664, 1.33 ) }
    dend_93 { pt3dadd( -1.65447, -80.9702, -25.0865, 0.66 ) }
    dend_93 { pt3dadd( -1.58969, -81.8362, -24.6916, 0.59 ) }
    dend_93 { pt3dadd( -1.51911, -82.6762, -24.3925, 0.74 ) }
    dend_93 { pt3dadd( -1.51462, -82.7438, -24.3724, 0.74 ) }
    dend_93 { pt3dadd( -1.48499, -83.4591, -24.2126, 0.74 ) }
    dend_93 { pt3dadd( -1.49736, -84.0354, -24.1383, 1.03 ) }
    dend_93 { pt3dadd( -1.55807, -84.5111, -24.0796, 1.25 ) }
    dend_93 { pt3dadd( -1.69528, -85.1255, -24.0166, 1.18 ) }
    dend_93 { pt3dadd( -1.86816, -85.6959, -23.9573, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( -2.0807, -86.2797, -23.9003, 0.29 ) }
    dend_93 { pt3dadd( -2.28937, -86.7696, -23.8576, 0.29 ) }
    dend_93 { pt3dadd( -2.46051, -87.1449, -23.8262, 0.81 ) }
    dend_93 { pt3dadd( -2.60937, -87.4698, -23.8016, 1.11 ) }
    dend_93 { pt3dadd( -2.82026, -87.9767, -23.7719, 1.11 ) }
    dend_93 { pt3dadd( -3.01975, -88.6148, -23.7464, 0.59 ) }
    dend_93 { pt3dadd( -3.02863, -88.6832, -23.7457, 0.59 ) }
    dend_93 { pt3dadd( -2.98362, -89.2757, -23.7571, 0.44 ) }
    dend_93 { pt3dadd( -2.96614, -89.3334, -23.7601, 0.44 ) }
    dend_93 { pt3dadd( -2.67362, -89.8992, -23.8046, 0.44 ) }
    dend_93 { pt3dadd( -2.35592, -90.3625, -23.8634, 0.81 ) }
    dend_93 { pt3dadd( -1.98885, -90.8331, -23.9362, 1.11 ) }
    dend_93 { pt3dadd( -1.75828, -91.1286, -23.9976, 1.11 ) }
    dend_93 { pt3dadd( -1.44456, -91.545, -24.1083, 0.88 ) }
    dend_93 { pt3dadd( -1.18283, -91.934, -24.2219, 0.66 ) }
    dend_93 { pt3dadd( -0.874965, -92.4539, -24.3831, 0.66 ) }
    dend_93 { pt3dadd( -0.599715, -92.9982, -24.5491, 0.44 ) }
    dend_93 { pt3dadd( -0.346555, -93.5945, -24.7187, 0.29 ) }
    dend_93 { pt3dadd( -0.116304, -94.2813, -24.8903, 0.88 ) }
    dend_93 { pt3dadd( 0.016364, -94.8135, -24.9965, 0.88 ) }
    dend_93 { pt3dadd( 0.0885032, -95.2486, -25.0594, 0.88 ) }
    dend_93 { pt3dadd( 0.150866, -95.871, -25.1133, 0.74 ) }
    dend_93 { pt3dadd( 0.185086, -96.5011, -25.1416, 0.37 ) }
    dend_93 { pt3dadd( 0.20522, -97.0921, -25.1406, 0.29 ) }
    dend_93 { pt3dadd( 0.230792, -97.9562, -25.1221, 0.29 ) }
    dend_93 { pt3dadd( 0.25475, -98.6618, -25.1075, 0.81 ) }
    dend_93 { pt3dadd( 0.289555, -99.3121, -25.0966, 1.03 ) }
    dend_93 { pt3dadd( 0.296761, -99.3821, -25.0961, 1.03 ) }
    dend_93 { pt3dadd( 0.393036, -99.9329, -25.0987, 1.18 ) }
    dend_93 { pt3dadd( 0.527976, -100.546, -25.1074, 1.33 ) }
    dend_93 { pt3dadd( 0.66175, -101.078, -25.1193, 1.33 ) }
    dend_93 { pt3dadd( 0.880332, -101.888, -25.1481, 0.59 ) }
    dend_93 { pt3dadd( 1.09486, -102.688, -25.1823, 0.44 ) }
    dend_93 { pt3dadd( 1.27825, -103.402, -25.2153, 0.44 ) }
    dend_93 { pt3dadd( 1.44198, -104.057, -25.2454, 0.81 ) }
    dend_93 { pt3dadd( 1.61816, -104.793, -25.2781, 1.11 ) }
    dend_93 { pt3dadd( 1.75957, -105.474, -25.3047, 1.11 ) }
    dend_93 { pt3dadd( 1.8163, -105.906, -25.3165, 1.25 ) }
    dend_93 { pt3dadd( 1.83327, -106.602, -25.3233, 1.11 ) }
    dend_93 { pt3dadd( 1.77328, -107.476, -25.3376, 0.66 ) }
    dend_93 { pt3dadd( 1.69087, -108.104, -25.3525, 0.37 ) }
    dend_93 { pt3dadd( 1.5635, -108.711, -25.3679, 0.29 ) }
    dend_93 { pt3dadd( 1.37139, -109.584, -25.3932, 0.37 ) }
    dend_93 { pt3dadd( 1.27668, -110.199, -25.4538, 0.52 ) }
    dend_93 { pt3dadd( 1.25927, -110.842, -25.5393, 0.88 ) }
    dend_93 { pt3dadd( 1.30703, -111.271, -25.6073, 1.03 ) }
    dend_93 { pt3dadd( 1.35232, -111.454, -25.6398, 1.03 ) }
    dend_93 { pt3dadd( 1.64805, -112.393, -25.7376, 0.74 ) }
    dend_93 { pt3dadd( 2.00938, -113.455, -25.7882, 0.59 ) }
    dend_93 { pt3dadd( 2.28171, -114.294, -25.7978, 0.59 ) }
    dend_93 { pt3dadd( 2.42219, -114.743, -25.7644, 1.4 ) }
    dend_93 { pt3dadd( 2.5788, -115.252, -25.7031, 1.77 ) }
    dend_93 { pt3dadd( 2.99369, -116.659, -25.4361, 0.81 ) }
    dend_93 { pt3dadd( 3.18853, -117.381, -25.2448, 0.81 ) }
    dend_93 { pt3dadd( 3.44447, -118.375, -24.8773, 0.81 ) }
    dend_93 { pt3dadd( 3.71392, -119.342, -24.4825, 1.11 ) }
    dend_93 { pt3dadd( 3.86731, -119.817, -24.2718, 1.11 ) }
    dend_93 { pt3dadd( 4.14619, -120.562, -23.9281, 0.88 ) }
    dend_93 { pt3dadd( 4.18122, -120.65, -23.8857, 0.88 ) }
    dend_93 { pt3dadd( 4.43599, -121.392, -23.5044, 0.59 ) }
    dend_93 { pt3dadd( 4.61772, -122.173, -23.1163, 0.59 ) }
    dend_93 { pt3dadd( 4.72631, -122.793, -22.8417, 0.52 ) }
    dend_93 { pt3dadd( 4.79852, -123.327, -22.6142, 0.52 ) }
    dend_93 { pt3dadd( 4.94258, -124.59, -22.142, 0.74 ) }
    dend_93 { pt3dadd( 4.99824, -125.173, -21.9411, 1.33 ) }
    dend_93 { pt3dadd( 5.04136, -125.937, -21.7126, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.343649, -10.198, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( -0.18353, -11.3497, -0.0206627, 2.73 ) }
    dend_41 { pt3dadd( -0.0346266, -12.5274, -0.0619362, 2.14 ) }
    dend_41 { pt3dadd( 0.0679071, -13.4551, -0.091286, 2.14 ) }
    dend_41 { pt3dadd( 0.17196, -14.5171, -0.122031, 2.28 ) }
    dend_41 { pt3dadd( 0.259076, -15.5318, -0.162279, 2.14 ) }
    dend_41 { pt3dadd( 0.367303, -16.8476, -0.222913, 1.92 ) }
    dend_41 { pt3dadd( 0.427128, -17.8143, -0.282386, 2.06 ) }
    dend_41 { pt3dadd( 0.482284, -19.1584, -0.379644, 1.84 ) }
    dend_41 { pt3dadd( 0.490071, -20.4117, -0.495286, 1.84 ) }
    dend_41 { pt3dadd( 0.470002, -21.3568, -0.597453, 1.84 ) }
    dend_41 { pt3dadd( 0.406135, -22.547, -0.751202, 1.92 ) }
    dend_41 { pt3dadd( 0.287484, -23.6896, -0.937813, 1.92 ) }
    dend_41 { pt3dadd( 0.127078, -24.6311, -1.11973, 1.92 ) }
    dend_41 { pt3dadd( -0.115567, -25.5762, -1.31247, 1.84 ) }
    dend_41 { pt3dadd( -0.444895, -26.5869, -1.52168, 1.84 ) }
    dend_41 { pt3dadd( -0.686783, -27.195, -1.64849, 1.77 ) }
    dend_41 { pt3dadd( -1.2602, -28.4612, -1.92256, 1.69 ) }
    dend_41 { pt3dadd( -1.91397, -29.7842, -2.20651, 1.69 ) }
    dend_41 { pt3dadd( -2.4883, -30.8621, -2.4456, 1.84 ) }
    dend_41 { pt3dadd( -2.51061, -30.9, -2.45327, 1.84 ) }
    dend_41 { pt3dadd( -2.84638, -31.3947, -2.55444, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.343649, -10.198, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.553057, -11.3264, -0.610068, 0.96 ) }
    dend_26 { pt3dadd( -0.797341, -12.4599, -1.11861, 1.25 ) }
    dend_26 { pt3dadd( -1.1424, -13.7978, -1.59798, 0.96 ) }
    dend_26 { pt3dadd( -1.39743, -14.6692, -1.80102, 1.25 ) }
    dend_26 { pt3dadd( -1.60402, -15.2852, -1.89813, 1.47 ) }
    dend_26 { pt3dadd( -1.88947, -16.0811, -1.99225, 1.11 ) }
    dend_26 { pt3dadd( -2.29285, -17.1032, -2.01199, 0.96 ) }
    dend_26 { pt3dadd( -2.74297, -18.079, -1.93841, 1.11 ) }
    dend_26 { pt3dadd( -3.40876, -19.3129, -1.7805, 1.11 ) }
    dend_26 { pt3dadd( -3.89838, -20.1121, -1.68161, 1.11 ) }
    dend_26 { pt3dadd( -3.94024, -20.1735, -1.67446, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -4.52327, -20.9149, -1.59927, 0.96 ) }
    dend_26 { pt3dadd( -4.5513, -20.9458, -1.5981, 0.96 ) }
    dend_26 { pt3dadd( -5.13554, -21.4788, -1.62898, 1.03 ) }
    dend_26 { pt3dadd( -5.57562, -21.8448, -1.69939, 1.25 ) }
    dend_26 { pt3dadd( -5.61828, -21.8827, -1.70706, 1.25 ) }
    dend_26 { pt3dadd( -6.2165, -22.4413, -1.82257, 0.88 ) }
    dend_26 { pt3dadd( -6.78434, -23.0082, -1.94439, 0.88 ) }
    dend_26 { pt3dadd( -7.50723, -23.7784, -2.13425, 1.11 ) }
    dend_26 { pt3dadd( -8.07465, -24.4389, -2.30555, 1.11 ) }
    dend_26 { pt3dadd( -8.61301, -25.111, -2.48659, 1.25 ) }
    dend_26 { pt3dadd( -8.66318, -25.1833, -2.50494, 1.25 ) }
    dend_26 { pt3dadd( -9.12917, -26.0014, -2.71529, 0.96 ) }
    dend_26 { pt3dadd( -9.54114, -26.8573, -2.92212, 0.96 ) }
    dend_26 { pt3dadd( -9.84327, -27.5741, -3.08639, 1.03 ) }
    dend_26 { pt3dadd( -9.86433, -27.6253, -3.09732, 1.03 ) }
    dend_26 { pt3dadd( -10.2333, -28.5174, -3.27136, 1.03 ) }
    dend_26 { pt3dadd( -10.5187, -29.2143, -3.38664, 1.03 ) }
    dend_26 { pt3dadd( -10.7653, -29.836, -3.45298, 1.25 ) }
    dend_26 { pt3dadd( -11.0176, -30.4924, -3.48501, 1.62 ) }
    dend_26 { pt3dadd( -11.4096, -31.4775, -3.49803, 1.25 ) }
    dend_26 { pt3dadd( -11.7096, -32.2013, -3.48461, 1.18 ) }
    dend_26 { pt3dadd( -11.9498, -32.7239, -3.43521, 1.18 ) }
    dend_26 { pt3dadd( -12.2633, -33.3598, -3.32253, 1.33 ) }
    dend_26 { pt3dadd( -12.6611, -34.0865, -3.1513, 1.33 ) }
    dend_26 { pt3dadd( -13.0336, -34.7201, -2.99096, 1.03 ) }
    dend_26 { pt3dadd( -13.0564, -34.756, -2.98134, 1.03 ) }
    dend_26 { pt3dadd( -13.4889, -35.421, -2.85627, 0.81 ) }
    dend_26 { pt3dadd( -13.8207, -35.9333, -2.83326, 0.66 ) }
    dend_26 { pt3dadd( -14.1615, -36.456, -2.91551, 0.81 ) }
    dend_26 { pt3dadd( -14.5867, -37.1092, -3.16019, 1.03 ) }
    dend_26 { pt3dadd( -14.8099, -37.4676, -3.34885, 1.33 ) }
    dend_26 { pt3dadd( -15.0692, -37.9514, -3.6539, 1.62 ) }
    dend_26 { pt3dadd( -15.3242, -38.5237, -4.04987, 1.55 ) }
    dend_26 { pt3dadd( -15.5652, -39.167, -4.4775, 1.18 ) }
    dend_26 { pt3dadd( -15.8184, -39.9362, -4.93471, 0.96 ) }
    dend_26 { pt3dadd( -15.8315, -39.9792, -4.95689, 0.96 ) }
    dend_26 { pt3dadd( -16.1077, -40.9782, -5.4006, 0.88 ) }
    dend_26 { pt3dadd( -16.3322, -41.8401, -5.70295, 0.88 ) }
    dend_26 { pt3dadd( -16.5014, -42.595, -5.90004, 1.18 ) }
    dend_26 { pt3dadd( -16.6465, -43.3568, -6.05812, 1.4 ) }
    dend_26 { pt3dadd( -16.8086, -44.2054, -6.2145, 1.4 ) }
    dend_26 { pt3dadd( -16.9443, -44.7928, -6.33265, 1.18 ) }
    dend_26 { pt3dadd( -17.1445, -45.4658, -6.47282, 0.96 ) }
    dend_26 { pt3dadd( -17.3768, -46.0702, -6.62676, 1.11 ) }
    dend_26 { pt3dadd( -17.7641, -46.8248, -6.89825, 0.88 ) }
    dend_26 { pt3dadd( -18.1037, -47.4033, -7.13682, 0.74 ) }
    dend_26 { pt3dadd( -18.5141, -47.9759, -7.40542, 0.96 ) }
    dend_26 { pt3dadd( -18.8372, -48.3476, -7.61539, 1.25 ) }
    dend_26 { pt3dadd( -19.3328, -48.8036, -7.932, 1.33 ) }
    dend_26 { pt3dadd( -19.9924, -49.2705, -8.32141, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.53221, 32.6681, -2.98074, 1.4 ) }
    dend_14 { pt3dadd( 7.03686, 33.9522, -3.29965, 1.4 ) }
    dend_14 { pt3dadd( 6.75787, 34.8464, -3.46111, 1.4 ) }
    dend_14 { pt3dadd( 6.4187, 36.1444, -3.50957, 1.25 ) }
    dend_14 { pt3dadd( 6.37464, 36.3479, -3.48235, 1.25 ) }
    dend_14 { pt3dadd( 6.25759, 36.9638, -3.34359, 1.03 ) }
    dend_14 { pt3dadd( 6.12633, 37.7047, -3.1465, 1.03 ) }
    dend_14 { pt3dadd( 6.04641, 38.4183, -2.88196, 1.18 ) }
    dend_14 { pt3dadd( 5.94586, 39.5331, -2.27979, 1.33 ) }
    dend_14 { pt3dadd( 5.87477, 40.5447, -1.57772, 1.33 ) }
    dend_14 { pt3dadd( 5.83667, 41.2542, -1.05627, 1.47 ) }
    dend_14 { pt3dadd( 5.8244, 41.7775, -0.669796, 1.47 ) }
    dend_14 { pt3dadd( 5.83512, 42.5039, -0.171478, 1.47 ) }
    dend_14 { pt3dadd( 5.91585, 44.0812, 0.775827, 1.4 ) }
    dend_14 { pt3dadd( 6.00346, 45.0762, 1.27211, 1.4 ) }
    dend_14 { pt3dadd( 6.08133, 45.7352, 1.54057, 1.4 ) }
    dend_14 { pt3dadd( 6.21836, 46.6486, 1.8549, 1.62 ) }
    dend_14 { pt3dadd( 6.39746, 47.7111, 2.1402, 1.18 ) }
    dend_14 { pt3dadd( 6.56014, 48.5799, 2.28143, 1.18 ) }
    dend_14 { pt3dadd( 6.57411, 48.6499, 2.28408, 1.18 ) }
    dend_14 { pt3dadd( 6.77857, 49.8111, 2.29516, 1.18 ) }
    dend_14 { pt3dadd( 6.91705, 50.743, 2.30977, 1.47 ) }
    dend_14 { pt3dadd( 6.95333, 51.0354, 2.31569, 1.47 ) }
    dend_14 { pt3dadd( 7.06785, 52.0268, 2.33829, 1.4 ) }
    dend_14 { pt3dadd( 7.1895, 53.0766, 2.36435, 1.33 ) }
    dend_14 { pt3dadd( 7.33171, 54.3353, 2.39814, 1.33 ) }
    dend_14 { pt3dadd( 7.4543, 55.5192, 2.43507, 1.62 ) }
    dend_14 { pt3dadd( 7.5241, 56.3808, 2.46577, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.53221, 32.6681, -2.98074, 1.18 ) }
    dend_1 { pt3dadd( 8.649, 32.8878, -2.7141, 1.18 ) }
    dend_1 { pt3dadd( 9.68971, 33.0426, -2.29352, 0.96 ) }
    dend_1 { pt3dadd( 10.2588, 33.1165, -2.04881, 1.25 ) }
    dend_1 { pt3dadd( 10.3241, 33.1277, -2.01553, 1.25 ) }
    dend_1 { pt3dadd( 11.271, 33.3222, -1.52723, 1.25 ) }
    dend_1 { pt3dadd( 12.1515, 33.5502, -1.07947, 1.25 ) }
    dend_1 { pt3dadd( 13.7421, 33.9944, -0.273953, 1.18 ) }
    dend_1 { pt3dadd( 14.4791, 34.2378, 0.0906701, 0.81 ) }
    dend_1 { pt3dadd( 15.4979, 34.6415, 0.604474, 0.96 ) }
    dend_1 { pt3dadd( 16.2801, 35.0338, 0.967109, 0.96 ) }
    dend_1 { pt3dadd( 16.8974, 35.4649, 1.20155, 0.96 ) }
    dend_1 { pt3dadd( 16.9394, 35.5006, 1.20969, 0.96 ) }
    dend_1 { pt3dadd( 17.6208, 36.1274, 1.17846, 0.96 ) }
    dend_1 { pt3dadd( 17.6666, 36.1715, 1.1722, 0.96 ) }
    dend_1 { pt3dadd( 18.2706, 36.7502, 1.02994, 1.18 ) }
    dend_1 { pt3dadd( 19.0539, 37.4972, 0.839031, 1.4 ) }
    dend_1 { pt3dadd( 19.705, 38.0889, 0.684644, 1.33 ) }
    dend_1 { pt3dadd( 19.7801, 38.1542, 0.671851, 1.33 ) }
    dend_1 { pt3dadd( 20.5215, 38.749, 0.60345, 1.18 ) }
    dend_1 { pt3dadd( 20.6507, 38.8373, 0.612367, 1.18 ) }
    dend_1 { pt3dadd( 21.2273, 39.176, 0.734383, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 21.383, 39.2537, 0.798559, 1.18 ) }
    dend_1 { pt3dadd( 22.1744, 39.6186, 1.23282, 0.96 ) }
    dend_1 { pt3dadd( 22.9375, 39.9675, 1.70854, 0.96 ) }
    dend_1 { pt3dadd( 23.9908, 40.4858, 2.4692, 1.03 ) }
    dend_1 { pt3dadd( 24.0686, 40.531, 2.52696, 1.03 ) }
    dend_1 { pt3dadd( 25.2238, 41.3481, 3.38575, 1.03 ) }
    dend_1 { pt3dadd( 25.2968, 41.4028, 3.44136, 1.03 ) }
    dend_1 { pt3dadd( 25.7098, 41.7561, 3.76643, 1.03 ) }
    dend_1 { pt3dadd( 26.2559, 42.314, 4.20705, 1.18 ) }
    dend_1 { pt3dadd( 26.9326, 43.1704, 4.64791, 1.4 ) }
    dend_1 { pt3dadd( 27.4763, 43.9149, 4.92675, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 4.50427, -53.3123, -45.6895, 0.52 ) }
    dend_102 { pt3dadd( 3.64136, -53.8043, -46.5278, 0.52 ) }
    dend_102 { pt3dadd( 2.53639, -54.4765, -47.5064, 0.52 ) }
    dend_102 { pt3dadd( 2.11338, -54.7901, -47.9146, 0.96 ) }
    dend_102 { pt3dadd( 1.24073, -55.6223, -48.9204, 1.33 ) }
    dend_102 { pt3dadd( 0.789507, -56.1687, -49.5231, 0.81 ) }
    dend_102 { pt3dadd( 0.273231, -57.0001, -50.3428, 0.52 ) }
    dend_102 { pt3dadd( 0.258516, -57.0518, -50.3814, 0.52 ) }
    dend_102 { pt3dadd( 0.337211, -58.3055, -51.2295, 0.88 ) }
    dend_102 { pt3dadd( 0.630282, -59.2609, -51.862, 1.25 ) }
    dend_102 { pt3dadd( 0.904054, -59.7953, -52.2192, 1.47 ) }
    dend_102 { pt3dadd( 1.37764, -60.5199, -52.7397, 1.47 ) }
    dend_102 { pt3dadd( 2.00472, -61.3369, -53.3383, 0.88 ) }
    dend_102 { pt3dadd( 2.96657, -62.5226, -54.2317, 0.88 ) }
    dend_102 { pt3dadd( 3.47245, -63.1174, -54.7294, 0.37 ) }
    dend_102 { pt3dadd( 4.00205, -63.8053, -55.3558, 0.66 ) }
    dend_102 { pt3dadd( 4.03769, -63.863, -55.4154, 0.66 ) }
    dend_102 { pt3dadd( 4.19488, -64.2433, -55.8309, 0.96 ) }
    dend_102 { pt3dadd( 4.37887, -65.2558, -56.8849, 1.11 ) }
    dend_102 { pt3dadd( 4.29416, -66.6856, -58.1868, 0.44 ) }
    dend_102 { pt3dadd( 4.14835, -67.4501, -58.8165, 0.44 ) }
    dend_102 { pt3dadd( 3.87152, -68.5874, -59.7235, 0.52 ) }
    dend_102 { pt3dadd( 3.71345, -69.2141, -60.2249, 0.74 ) }
    dend_102 { pt3dadd( 3.49779, -69.9068, -60.7492, 0.74 ) }
    dend_102 { pt3dadd( 3.18169, -70.7724, -61.3991, 1.03 ) }
    dend_102 { pt3dadd( 2.70948, -72.222, -62.5144, 0.88 ) }
    dend_102 { pt3dadd( 2.35738, -73.6321, -63.6477, 1.18 ) }
    dend_102 { pt3dadd( 2.1567, -75.0012, -64.8454, 0.96 ) }
    dend_102 { pt3dadd( 2.1423, -76.1251, -66.0432, 0.59 ) }
    dend_102 { pt3dadd( 2.23753, -77.3754, -67.5802, 0.29 ) }
    dend_102 { pt3dadd( 2.36909, -78.2987, -68.839, 0.88 ) }
    dend_102 { pt3dadd( 2.40989, -78.5699, -69.2382, 1.47 ) }
    dend_102 { pt3dadd( 2.57296, -79.6963, -70.9257, 1.33 ) }
    dend_102 { pt3dadd( 2.75862, -81.3712, -73.4175, 0.52 ) }
    dend_102 { pt3dadd( 2.77902, -81.8162, -74.0473, 0.29 ) }
    dend_102 { pt3dadd( 2.73057, -82.2007, -74.4944, 0.96 ) }
    dend_102 { pt3dadd( 2.42967, -83.2653, -75.5603, 1.77 ) }
    dend_102 { pt3dadd( 2.29594, -83.7144, -75.9856, 1.77 ) }
    dend_102 { pt3dadd( 1.96824, -84.7068, -76.8108, 1.11 ) }
    dend_102 { pt3dadd( 1.77001, -85.5274, -77.5703, 0.37 ) }
    dend_102 { pt3dadd( 1.74952, -86.0947, -78.3073, 0.29 ) }
    dend_102 { pt3dadd( 1.84231, -86.935, -79.6128, 0.74 ) }
    dend_102 { pt3dadd( 2.16798, -88.1568, -81.6916, 1.33 ) }
    dend_102 { pt3dadd( 2.18184, -88.1938, -81.7601, 1.33 ) }
    dend_102 { pt3dadd( 2.75197, -89.3286, -84.1186, 1.55 ) }
    dend_102 { pt3dadd( 3.55417, -90.7633, -87.2914, 0.96 ) }
    dend_102 { pt3dadd( 3.5724, -90.798, -87.3682, 0.96 ) }
    dend_102 { pt3dadd( 3.75318, -91.2369, -88.2579, 1.18 ) }
    dend_102 { pt3dadd( 3.7628, -91.2713, -88.3164, 1.18 ) }
    dend_102 { pt3dadd( 3.96402, -92.6564, -90.2619, 0.44 ) }
    dend_102 { pt3dadd( 3.87401, -93.3846, -90.9908, 0.37 ) }
    dend_102 { pt3dadd( 3.74414, -93.996, -91.6825, 0.52 ) }
    dend_102 { pt3dadd( 3.6615, -94.4746, -92.3392, 0.81 ) }
    dend_102 { pt3dadd( 3.58033, -95.0467, -93.1602, 1.33 ) }
    dend_102 { pt3dadd( 3.5518, -95.4391, -93.7275, 0.96 ) }
    dend_102 { pt3dadd( 3.58586, -96.6949, -95.5295, 1.25 ) }
    dend_102 { pt3dadd( 3.96685, -99.3394, -99.3276, 0.52 ) }
    dend_102 { pt3dadd( 4.27371, -100.589, -101.161, 0.44 ) }
    dend_102 { pt3dadd( 4.49757, -101.218, -102.088, 0.59 ) }
    dend_102 { pt3dadd( 4.98875, -102.277, -103.637, 0.59 ) }
    dend_102 { pt3dadd( 5.59212, -103.305, -105.063, 0.74 ) }
    dend_102 { pt3dadd( 5.98528, -103.85, -105.721, 1.18 ) }
    dend_102 { pt3dadd( 6.02437, -103.902, -105.766, 1.18 ) }
    dend_102 { pt3dadd( 6.46512, -104.417, -106.162, 1.47 ) }
    dend_102 { pt3dadd( 6.51237, -104.467, -106.2, 1.47 ) }
    dend_102 { pt3dadd( 7.5841, -105.665, -106.9, 1.18 ) }
    dend_102 { pt3dadd( 7.62954, -105.726, -106.929, 1.18 ) }
    dend_102 { pt3dadd( 8.03095, -106.423, -107.221, 1.18 ) }
    dend_102 { pt3dadd( 8.50485, -107.601, -107.736, 0.52 ) }
    dend_102 { pt3dadd( 8.66965, -108.366, -108.089, 0.29 ) }
    dend_102 { pt3dadd( 8.76144, -109.234, -108.529, 0.29 ) }
    dend_102 { pt3dadd( 8.78212, -109.825, -108.849, 0.88 ) }
    dend_102 { pt3dadd( 8.7768, -110.629, -109.339, 1.11 ) }
    dend_102 { pt3dadd( 8.69719, -112.157, -110.344, 0.81 ) }
    dend_102 { pt3dadd( 8.65041, -113.129, -111.096, 0.37 ) }
    dend_102 { pt3dadd( 8.66955, -114.157, -112.239, 0.29 ) }
    dend_102 { pt3dadd( 8.69845, -114.628, -112.913, 0.96 ) }
    dend_102 { pt3dadd( 8.70153, -114.672, -112.995, 0.96 ) }
    dend_102 { pt3dadd( 8.70943, -115.048, -113.84, 1.18 ) }
    dend_102 { pt3dadd( 8.61872, -115.827, -115.812, 1.11 ) }
    dend_102 { pt3dadd( 8.22324, -117.145, -119.391, 0.44 ) }
    dend_102 { pt3dadd( 8.01802, -117.539, -120.509, 0.74 ) }
    dend_102 { pt3dadd( 7.55639, -118.208, -122.32, 0.59 ) }
    dend_102 { pt3dadd( 7.2395, -118.599, -123.286, 0.81 ) }
    dend_102 { pt3dadd( 6.696, -119.15, -124.477, 0.44 ) }
    dend_102 { pt3dadd( 6.28497, -119.554, -125.047, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( 6.23817, -119.608, -125.084, 0.59 ) }
    dend_102 { pt3dadd( 5.69815, -120.431, -125.486, 0.52 ) }
    dend_102 { pt3dadd( 5.34859, -121.104, -125.741, 1.03 ) }
    dend_102 { pt3dadd( 5.01743, -121.913, -126.041, 1.4 ) }
    dend_102 { pt3dadd( 4.57608, -123.162, -126.467, 1.33 ) }
    dend_102 { pt3dadd( 4.30554, -124.035, -126.829, 1.11 ) }
    dend_102 { pt3dadd( 4.13725, -124.908, -127.332, 0.59 ) }
    dend_102 { pt3dadd( 4.13319, -124.973, -127.378, 0.59 ) }
    dend_102 { pt3dadd( 4.19015, -125.568, -127.9, 0.44 ) }
    dend_102 { pt3dadd( 4.43948, -126.525, -128.932, 0.44 ) }
    dend_102 { pt3dadd( 4.85084, -127.587, -130.262, 0.74 ) }
    dend_102 { pt3dadd( 5.52793, -129.094, -132.298, 0.74 ) }
    dend_102 { pt3dadd( 5.69596, -129.455, -132.786, 1.25 ) }
    dend_102 { pt3dadd( 6.1855, -130.569, -134.308, 1.55 ) }
    dend_102 { pt3dadd( 6.67925, -131.762, -135.972, 1.77 ) }
    dend_102 { pt3dadd( 7.18173, -133.206, -138.045, 0.74 ) }
    dend_102 { pt3dadd( 7.33114, -133.966, -139.085, 0.52 ) }
    dend_102 { pt3dadd( 7.33586, -134.477, -139.741, 0.52 ) }
    dend_102 { pt3dadd( 7.20345, -135.548, -141.098, 0.96 ) }
    dend_102 { pt3dadd( 7.06792, -135.995, -141.614, 1.18 ) }
    dend_102 { pt3dadd( 6.52943, -137.065, -142.804, 0.52 ) }
    dend_102 { pt3dadd( 6.16833, -137.575, -143.381, 0.52 ) }
    dend_102 { pt3dadd( 5.9071, -137.875, -143.748, 0.66 ) }
    dend_102 { pt3dadd( 5.86468, -137.916, -143.801, 0.66 ) }
    dend_102 { pt3dadd( 5.49276, -138.211, -144.196, 0.44 ) }
    dend_102 { pt3dadd( 4.50556, -138.873, -145.118, 0.29 ) }
    dend_102 { pt3dadd( 4.44441, -138.903, -145.16, 0.29 ) }
    dend_102 { pt3dadd( 3.96703, -139.087, -145.456, 0.52 ) }
    dend_102 { pt3dadd( 3.47421, -139.258, -145.71, 0.81 ) }
    dend_102 { pt3dadd( 2.86758, -139.485, -145.939, 0.96 ) }
    dend_102 { pt3dadd( 2.26021, -139.724, -146.091, 1.11 ) }
    dend_102 { pt3dadd( 1.40872, -140.102, -146.194, 0.29 ) }
    dend_102 { pt3dadd( 1.29981, -140.156, -146.203, 0.29 ) }
    dend_102 { pt3dadd( 0.348857, -140.637, -146.24, 0.29 ) }
    dend_102 { pt3dadd( -0.523792, -141.064, -146.252, 0.88 ) }
    dend_102 { pt3dadd( -0.839821, -141.215, -146.247, 1.03 ) }
    dend_102 { pt3dadd( -1.55668, -141.518, -146.237, 1.18 ) }
    dend_102 { pt3dadd( -2.64026, -141.886, -146.262, 0.29 ) }
    dend_102 { pt3dadd( -3.91874, -142.221, -146.353, 0.29 ) }
    dend_102 { pt3dadd( -4.44082, -142.32, -146.433, 0.59 ) }
    dend_102 { pt3dadd( -4.51773, -142.333, -146.453, 0.59 ) }
    dend_102 { pt3dadd( -5.39884, -142.485, -146.763, 0.59 ) }
    dend_102 { pt3dadd( -6.2527, -142.683, -147.154, 1.11 ) }
    dend_102 { pt3dadd( -6.96912, -142.918, -147.553, 1.4 ) }
    dend_102 { pt3dadd( -7.8334, -143.291, -148.099, 0.96 ) }
    dend_102 { pt3dadd( -8.70372, -143.77, -148.677, 0.59 ) }
    dend_102 { pt3dadd( -9.71176, -144.442, -149.356, 0.37 ) }
    dend_102 { pt3dadd( -10.4777, -145.062, -149.867, 0.37 ) }
    dend_102 { pt3dadd( -10.9504, -145.477, -150.138, 0.74 ) }
    dend_102 { pt3dadd( -11.0059, -145.529, -150.165, 0.74 ) }
    dend_102 { pt3dadd( -11.5691, -146.104, -150.359, 0.74 ) }
    dend_102 { pt3dadd( -12.0149, -146.574, -150.474, 1.03 ) }
    dend_102 { pt3dadd( -12.5367, -147.13, -150.566, 1.33 ) }
    dend_102 { pt3dadd( -13.3251, -147.877, -150.669, 1.47 ) }
    dend_102 { pt3dadd( -14.2079, -148.648, -150.779, 0.37 ) }
    dend_102 { pt3dadd( -15.2888, -149.565, -150.917, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 4.50427, -53.3123, -45.6895, 0.52 ) }
    dend_99 { pt3dadd( 5.0409, -53.933, -44.6593, 0.52 ) }
    dend_99 { pt3dadd( 5.66383, -54.7252, -43.5866, 0.44 ) }
    dend_99 { pt3dadd( 5.97978, -55.1769, -43.1056, 0.88 ) }
    dend_99 { pt3dadd( 6.00442, -55.2171, -43.0714, 0.88 ) }
    dend_99 { pt3dadd( 6.20889, -55.5834, -42.8075, 1.03 ) }
    dend_99 { pt3dadd( 6.4223, -56.0064, -42.549, 0.81 ) }
    dend_99 { pt3dadd( 6.65593, -56.5855, -42.3599, 0.29 ) }
    dend_99 { pt3dadd( 6.87811, -57.2372, -42.2379, 0.22 ) }
    dend_99 { pt3dadd( 7.02973, -57.7363, -42.1604, 0.52 ) }
    dend_99 { pt3dadd( 7.10054, -58.0052, -42.119, 0.74 ) }
    dend_99 { pt3dadd( 7.24803, -58.7059, -42.0145, 0.29 ) }
    dend_99 { pt3dadd( 7.34175, -59.3207, -41.921, 0.29 ) }
    dend_99 { pt3dadd( 7.40294, -59.9314, -41.8333, 0.74 ) }
    dend_99 { pt3dadd( 7.42207, -60.2796, -41.7794, 1.03 ) }
    dend_99 { pt3dadd( 7.4378, -60.712, -41.7106, 0.96 ) }
    dend_99 { pt3dadd( 7.44168, -61.1683, -41.6392, 0.59 ) }
    dend_99 { pt3dadd( 7.44799, -61.8146, -41.5172, 0.22 ) }
    dend_99 { pt3dadd( 7.4688, -62.2119, -41.4272, 0.37 ) }
    dend_99 { pt3dadd( 7.48338, -62.3122, -41.4022, 0.37 ) }
    dend_99 { pt3dadd( 7.59903, -62.7206, -41.3063, 0.37 ) }
    dend_99 { pt3dadd( 7.62088, -62.7702, -41.2965, 0.37 ) }
    dend_99 { pt3dadd( 8.03665, -63.4939, -41.2632, 0.29 ) }
    dend_99 { pt3dadd( 8.35907, -63.981, -41.2986, 0.88 ) }
    dend_99 { pt3dadd( 8.56572, -64.2879, -41.3412, 1.18 ) }
    dend_99 { pt3dadd( 8.9626, -64.8993, -41.4531, 0.29 ) }
    dend_99 { pt3dadd( 9.33059, -65.48, -41.5852, 0.29 ) }
    dend_99 { pt3dadd( 9.86922, -66.3763, -41.7645, 0.52 ) }
    dend_99 { pt3dadd( 10.095, -66.7821, -41.8363, 0.81 ) }
    dend_99 { pt3dadd( 10.4421, -67.4425, -41.9118, 0.22 ) }
    dend_99 { pt3dadd( 10.5932, -67.7551, -41.9267, 0.59 ) }
    dend_99 { pt3dadd( 10.6227, -67.8232, -41.9265, 0.59 ) }
    dend_99 { pt3dadd( 11.0381, -68.8995, -41.885, 0.44 ) }
    dend_99 { pt3dadd( 11.3091, -69.6595, -41.8293, 0.66 ) }
    dend_99 { pt3dadd( 11.4867, -70.1739, -41.8029, 0.59 ) }
    dend_99 { pt3dadd( 11.6349, -70.6058, -41.8048, 0.44 ) }
    dend_99 { pt3dadd( 11.875, -71.3138, -41.8485, 0.96 ) }
    dend_99 { pt3dadd( 12.0816, -71.8517, -41.9489, 1.33 ) }
    dend_99 { pt3dadd( 12.3424, -72.3911, -42.1492, 0.59 ) }
    dend_99 { pt3dadd( 12.3746, -72.4426, -42.1738, 0.59 ) }
    dend_99 { pt3dadd( 12.7209, -72.8761, -42.4399, 0.59 ) }
    dend_99 { pt3dadd( 12.7498, -72.9092, -42.4653, 0.59 ) }
    dend_99 { pt3dadd( 13.3363, -73.6122, -43.1063, 0.29 ) }
    dend_99 { pt3dadd( 13.585, -73.9547, -43.4461, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 13.7805, -74.2781, -43.7376, 0.44 ) }
    dend_99 { pt3dadd( 14.0359, -74.7681, -44.1379, 0.44 ) }
    dend_99 { pt3dadd( 14.3062, -75.4073, -44.591, 1.33 ) }
    dend_99 { pt3dadd( 14.6042, -76.1798, -45.0801, 1.11 ) }
    dend_99 { pt3dadd( 14.8475, -76.903, -45.4775, 0.52 ) }
    dend_99 { pt3dadd( 15.0887, -77.5631, -45.8336, 0.29 ) }
    dend_99 { pt3dadd( 15.1062, -77.6104, -45.8578, 0.29 ) }
    dend_99 { pt3dadd( 15.2833, -78.0181, -46.0243, 0.29 ) }
    dend_99 { pt3dadd( 15.6362, -78.5463, -46.173, 0.29 ) }
    dend_99 { pt3dadd( 15.8866, -78.7944, -46.1924, 0.96 ) }
    dend_99 { pt3dadd( 16.2319, -78.9925, -46.1735, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 5.04136, -125.937, -21.7126, 0.29 ) }
    dend_97 { pt3dadd( 4.15595, -126.503, -20.8228, 0.29 ) }
    dend_97 { pt3dadd( 3.64268, -126.936, -20.2072, 0.29 ) }
    dend_97 { pt3dadd( 3.48837, -127.075, -20.0193, 0.74 ) }
    dend_97 { pt3dadd( 3.44903, -127.111, -19.9722, 0.74 ) }
    dend_97 { pt3dadd( 3.19052, -127.341, -19.6836, 0.74 ) }
    dend_97 { pt3dadd( 2.58248, -127.802, -19.1568, 0.29 ) }
    dend_97 { pt3dadd( 2.07858, -128.162, -18.8615, 0.29 ) }
    dend_97 { pt3dadd( 1.81825, -128.314, -18.7562, 0.74 ) }
    dend_97 { pt3dadd( 1.58058, -128.425, -18.6951, 1.11 ) }
    dend_97 { pt3dadd( 1.17538, -128.607, -18.6132, 1.11 ) }
    dend_97 { pt3dadd( 0.102271, -129.078, -18.4608, 0.29 ) }
    dend_97 { pt3dadd( -0.246696, -129.246, -18.4163, 0.37 ) }
    dend_97 { pt3dadd( -0.720137, -129.532, -18.2901, 0.37 ) }
    dend_97 { pt3dadd( -1.22206, -129.913, -18.0695, 0.66 ) }
    dend_97 { pt3dadd( -1.70055, -130.366, -17.7785, 0.52 ) }
    dend_97 { pt3dadd( -1.96856, -130.662, -17.5736, 0.96 ) }
    dend_97 { pt3dadd( -2.4333, -131.229, -17.1597, 1.33 ) }
    dend_97 { pt3dadd( -3.12509, -132.033, -16.5805, 0.59 ) }
    dend_97 { pt3dadd( -3.43398, -132.387, -16.3023, 0.37 ) }
    dend_97 { pt3dadd( -3.68172, -132.663, -16.0744, 0.22 ) }
    dend_97 { pt3dadd( -4.12541, -133.136, -15.6872, 0.22 ) }
    dend_97 { pt3dadd( -4.50609, -133.543, -15.3679, 0.66 ) }
    dend_97 { pt3dadd( -4.99116, -134.096, -14.9968, 0.66 ) }
    dend_97 { pt3dadd( -5.71182, -135.023, -14.4822, 0.52 ) }
    dend_97 { pt3dadd( -5.80957, -135.167, -14.4085, 0.29 ) }
    dend_97 { pt3dadd( -6.06554, -135.594, -14.2284, 0.74 ) }
    dend_97 { pt3dadd( -6.16743, -135.794, -14.1362, 0.74 ) }
    dend_97 { pt3dadd( -6.60796, -136.743, -13.6946, 0.37 ) }
    dend_97 { pt3dadd( -6.96232, -137.573, -13.335, 0.44 ) }
    dend_97 { pt3dadd( -7.14532, -137.984, -13.1853, 0.59 ) }
    dend_97 { pt3dadd( -7.47028, -138.692, -12.9307, 0.52 ) }
    dend_97 { pt3dadd( -8.19477, -140.141, -12.4046, 0.37 ) }
    dend_97 { pt3dadd( -8.54431, -140.759, -12.175, 0.37 ) }
    dend_97 { pt3dadd( -8.98042, -141.428, -11.9258, 0.29 ) }
    dend_97 { pt3dadd( -9.55358, -142.211, -11.6286, 0.59 ) }
    dend_97 { pt3dadd( -9.67159, -142.367, -11.5748, 0.88 ) }
    dend_97 { pt3dadd( -10.0661, -142.843, -11.4337, 0.66 ) }
    dend_97 { pt3dadd( -10.5633, -143.379, -11.3495, 0.15 ) }
    dend_97 { pt3dadd( -11.149, -143.907, -11.2387, 0.15 ) }
    dend_97 { pt3dadd( -11.1983, -143.942, -11.2291, 0.15 ) }
    dend_97 { pt3dadd( -11.8033, -144.306, -11.1562, 0.59 ) }
    dend_97 { pt3dadd( -12.2151, -144.559, -11.1439, 0.88 ) }
    dend_97 { pt3dadd( -12.2603, -144.589, -11.1463, 0.88 ) }
    dend_97 { pt3dadd( -12.5936, -144.841, -11.1887, 0.88 ) }
    dend_97 { pt3dadd( -13.094, -145.282, -11.2887, 0.88 ) }
    dend_97 { pt3dadd( -13.8265, -146.075, -11.4885, 0.29 ) }
    dend_97 { pt3dadd( -14.1777, -146.525, -11.604, 0.29 ) }
    dend_97 { pt3dadd( -14.4542, -146.961, -11.7094, 0.66 ) }
    dend_97 { pt3dadd( -14.6635, -147.341, -11.7859, 0.81 ) }
    dend_97 { pt3dadd( -14.9207, -147.922, -11.8805, 0.66 ) }
    dend_97 { pt3dadd( -15.2056, -148.702, -11.9705, 0.29 ) }
    dend_97 { pt3dadd( -15.3363, -149.11, -11.9971, 0.81 ) }
    dend_97 { pt3dadd( -15.4346, -149.408, -12.0102, 0.81 ) }
    dend_97 { pt3dadd( -15.707, -150.106, -12.0147, 0.22 ) }
    dend_97 { pt3dadd( -15.9173, -150.571, -11.9645, 0.22 ) }
    dend_97 { pt3dadd( -16.0513, -150.85, -11.902, 0.81 ) }
    dend_97 { pt3dadd( -16.1765, -151.079, -11.8287, 0.96 ) }
    dend_97 { pt3dadd( -16.6012, -151.764, -11.4709, 0.22 ) }
    dend_97 { pt3dadd( -16.8735, -152.119, -11.0996, 0.22 ) }
    dend_97 { pt3dadd( -17.247, -152.507, -10.3948, 0.74 ) }
    dend_97 { pt3dadd( -17.3746, -152.623, -10.1233, 1.18 ) }
    dend_97 { pt3dadd( -17.5949, -152.808, -9.62301, 0.74 ) }
    dend_97 { pt3dadd( -18.1153, -153.201, -8.41987, 0.59 ) }
    dend_97 { pt3dadd( -18.8304, -153.702, -6.77623, 0.44 ) }
    dend_97 { pt3dadd( -19.4087, -154.144, -5.48595, 0.37 ) }
    dend_97 { pt3dadd( -19.4387, -154.17, -5.42603, 0.37 ) }
    dend_97 { pt3dadd( -19.6037, -154.326, -5.12077, 0.66 ) }
    dend_97 { pt3dadd( -19.7395, -154.525, -4.82865, 0.74 ) }
    dend_97 { pt3dadd( -20.0422, -155.154, -4.11447, 0.29 ) }
    dend_97 { pt3dadd( -20.2322, -155.659, -3.62055, 0.29 ) }
    dend_97 { pt3dadd( -20.4222, -156.162, -3.09651, 0.29 ) }
    dend_97 { pt3dadd( -20.4664, -156.291, -2.95358, 0.74 ) }
    dend_97 { pt3dadd( -20.8185, -157.584, -1.37991, 0.66 ) }
    dend_97 { pt3dadd( -20.9182, -158.162, -0.589697, 0.22 ) }
    dend_97 { pt3dadd( -20.9234, -158.318, -0.319271, 0.22 ) }
    dend_97 { pt3dadd( -20.9107, -158.613, 0.394682, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 5.04136, -125.937, -21.7126, 0.37 ) }
    dend_94 { pt3dadd( 5.24747, -127.342, -22.9722, 0.37 ) }
    dend_94 { pt3dadd( 5.37598, -128.116, -23.5985, 0.37 ) }
    dend_94 { pt3dadd( 5.38398, -128.163, -23.6311, 0.37 ) }
    dend_94 { pt3dadd( 5.46261, -128.667, -23.9417, 0.81 ) }
    dend_94 { pt3dadd( 5.58056, -129.422, -24.3667, 0.88 ) }
    dend_94 { pt3dadd( 5.63026, -129.738, -24.5308, 0.88 ) }
    dend_94 { pt3dadd( 5.74144, -130.383, -24.8081, 0.52 ) }
    dend_94 { pt3dadd( 5.84839, -131.122, -25.1054, 0.52 ) }
    dend_94 { pt3dadd( 5.90194, -131.811, -25.3953, 0.52 ) }
    dend_94 { pt3dadd( 5.89474, -132.199, -25.5564, 0.96 ) }
    dend_94 { pt3dadd( 5.86188, -132.542, -25.6894, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( 5.70699, -133.479, -26.0583, 0.37 ) }
    dend_94 { pt3dadd( 5.56996, -134.043, -26.2753, 0.29 ) }
    dend_94 { pt3dadd( 5.37915, -134.605, -26.494, 0.59 ) }
    dend_94 { pt3dadd( 5.15239, -135.133, -26.6808, 0.96 ) }
    dend_94 { pt3dadd( 4.96296, -135.519, -26.7988, 1.18 ) }
    dend_94 { pt3dadd( 4.93621, -135.57, -26.8106, 1.18 ) }
    dend_94 { pt3dadd( 4.76679, -135.88, -26.8764, 1.18 ) }
    dend_94 { pt3dadd( 4.49516, -136.441, -27.0182, 1.03 ) }
    dend_94 { pt3dadd( 4.2341, -137.097, -27.1884, 0.59 ) }
    dend_94 { pt3dadd( 4.09634, -137.533, -27.2859, 0.52 ) }
    dend_94 { pt3dadd( 3.9966, -137.894, -27.3447, 0.66 ) }
    dend_94 { pt3dadd( 3.74888, -138.815, -27.425, 0.29 ) }
    dend_94 { pt3dadd( 3.58073, -139.454, -27.4184, 0.44 ) }
    dend_94 { pt3dadd( 3.51, -139.746, -27.38, 0.52 ) }
    dend_94 { pt3dadd( 3.28223, -140.678, -27.1725, 0.66 ) }
    dend_94 { pt3dadd( 3.13801, -141.208, -27.0201, 0.37 ) }
    dend_94 { pt3dadd( 2.95758, -141.799, -26.8206, 0.88 ) }
    dend_94 { pt3dadd( 2.83737, -142.138, -26.6916, 1.18 ) }
    dend_94 { pt3dadd( 2.5766, -142.805, -26.451, 0.96 ) }
    dend_94 { pt3dadd( 2.39674, -143.278, -26.3049, 0.66 ) }
    dend_94 { pt3dadd( 2.28525, -143.628, -26.2099, 1.03 ) }
    dend_94 { pt3dadd( 2.14535, -144.283, -26.0355, 0.52 ) }
    dend_94 { pt3dadd( 2.06594, -145.095, -25.8268, 0.52 ) }
    dend_94 { pt3dadd( 2.07338, -145.64, -25.7033, 1.11 ) }
    dend_94 { pt3dadd( 2.14498, -146.172, -25.5987, 1.11 ) }
    dend_94 { pt3dadd( 2.32671, -147.009, -25.4622, 0.74 ) }
    dend_94 { pt3dadd( 2.45131, -147.478, -25.399, 0.44 ) }
    dend_94 { pt3dadd( 2.66028, -148.189, -25.319, 0.59 ) }
    dend_94 { pt3dadd( 2.93327, -149.16, -25.2362, 0.59 ) }
    dend_94 { pt3dadd( 3.14036, -150.094, -25.1794, 0.59 ) }
    dend_94 { pt3dadd( 3.27211, -150.892, -25.1419, 0.52 ) }
    dend_94 { pt3dadd( 3.3192, -151.407, -25.127, 1.18 ) }
    dend_94 { pt3dadd( 3.332, -151.741, -25.1144, 1.33 ) }
    dend_94 { pt3dadd( 3.30607, -152.647, -25.0731, 1.18 ) }
    dend_94 { pt3dadd( 3.24254, -153.373, -25.0257, 0.88 ) }
    dend_94 { pt3dadd( 3.16948, -153.958, -24.9805, 0.52 ) }
    dend_94 { pt3dadd( 3.0968, -154.612, -24.9329, 0.66 ) }
    dend_94 { pt3dadd( 3.0952, -154.679, -24.9268, 0.66 ) }
    dend_94 { pt3dadd( 3.15004, -155.23, -24.8767, 0.81 ) }
    dend_94 { pt3dadd( 3.24811, -155.859, -24.8189, 0.44 ) }
    dend_94 { pt3dadd( 3.39152, -156.536, -24.7555, 0.44 ) }
    dend_94 { pt3dadd( 3.60414, -157.36, -24.6748, 0.44 ) }
    dend_94 { pt3dadd( 3.93981, -158.399, -24.5665, 0.37 ) }
    dend_94 { pt3dadd( 4.1872, -159.074, -24.4898, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -2.84638, -31.3947, -2.55444, 1.03 ) }
    dend_65 { pt3dadd( -4.76085, -31.9346, -1.98703, 1.03 ) }
    dend_65 { pt3dadd( -6.03719, -32.4981, -1.39738, 1.03 ) }
    dend_65 { pt3dadd( -7.57499, -33.4003, -0.582143, 0.96 ) }
    dend_65 { pt3dadd( -8.58677, -34.1523, -0.0278345, 0.96 ) }
    dend_65 { pt3dadd( -8.71836, -34.2608, 0.0452313, 0.96 ) }
    dend_65 { pt3dadd( -11.2991, -36.6809, 1.46246, 0.81 ) }
    dend_65 { pt3dadd( -12.2205, -37.8078, 2.01932, 1.11 ) }
    dend_65 { pt3dadd( -13.1156, -39.0364, 2.57767, 1.11 ) }
    dend_65 { pt3dadd( -14.2624, -40.6761, 3.28815, 1.03 ) }
    dend_65 { pt3dadd( -14.3202, -40.7543, 3.32116, 1.03 ) }
    dend_65 { pt3dadd( -15.5669, -42.2878, 4.01335, 1.03 ) }
    dend_65 { pt3dadd( -16.4851, -43.3475, 4.45068, 1.25 ) }
    dend_65 { pt3dadd( -17.2576, -44.2211, 4.89379, 1.4 ) }
    dend_65 { pt3dadd( -17.7824, -44.802, 5.2416, 1.4 ) }
    dend_65 { pt3dadd( -18.7651, -45.9514, 6.0328, 1.25 ) }
    dend_65 { pt3dadd( -19.7504, -47.3166, 6.95376, 1.11 ) }
    dend_65 { pt3dadd( -20.2544, -48.1817, 7.50608, 1.11 ) }
    dend_65 { pt3dadd( -20.7629, -49.3362, 8.16037, 1.03 ) }
    dend_65 { pt3dadd( -20.8233, -49.5075, 8.23856, 1.03 ) }
    dend_65 { pt3dadd( -21.2408, -50.7707, 8.62704, 0.81 ) }
    dend_65 { pt3dadd( -21.6931, -52.1543, 8.8672, 0.96 ) }
    dend_65 { pt3dadd( -22.1838, -53.6645, 8.99627, 0.96 ) }
    dend_65 { pt3dadd( -22.7232, -55.379, 9.08401, 0.81 ) }
    dend_65 { pt3dadd( -23.0687, -56.64, 9.07646, 0.74 ) }
    dend_65 { pt3dadd( -23.5462, -58.5297, 8.98487, 0.81 ) }
    dend_65 { pt3dadd( -23.7699, -59.5603, 8.88622, 1.11 ) }
    dend_65 { pt3dadd( -24.0152, -61.0426, 8.7122, 1.11 ) }
    dend_65 { pt3dadd( -24.1376, -62.1663, 8.56254, 1.11 ) }
    dend_65 { pt3dadd( -24.2825, -64.3481, 8.26211, 0.88 ) }
    dend_65 { pt3dadd( -24.313, -65.4452, 8.15477, 1.11 ) }
    dend_65 { pt3dadd( -24.3132, -66.7333, 8.04577, 1.11 ) }
    dend_65 { pt3dadd( -24.3076, -67.7304, 7.94592, 1.33 ) }
    dend_65 { pt3dadd( -24.3188, -68.7648, 7.84151, 0.96 ) }
    dend_65 { pt3dadd( -24.3579, -70.002, 7.72284, 1.11 ) }
    dend_65 { pt3dadd( -24.3935, -71.5131, 7.58812, 1.11 ) }
    dend_65 { pt3dadd( -24.3947, -72.7735, 7.44679, 1.4 ) }
    dend_65 { pt3dadd( -24.399, -73.8795, 7.29555, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -2.84638, -31.3947, -2.55444, 1.47 ) }
    dend_42 { pt3dadd( -2.86797, -32.8083, -2.54756, 1.47 ) }
    dend_42 { pt3dadd( -2.88127, -33.6794, -2.54332, 1.47 ) }
    dend_42 { pt3dadd( -2.91026, -35.5773, -2.53407, 1.47 ) }
    dend_42 { pt3dadd( -2.92958, -36.8431, -2.52791, 1.62 ) }
    dend_42 { pt3dadd( -2.95324, -38.3922, -2.52036, 1.92 ) }
    dend_42 { pt3dadd( -2.97612, -39.8908, -2.51306, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -19.9924, -49.2705, -8.32141, 0.88 ) }
    dend_30 { pt3dadd( -21.5995, -49.3699, -8.19558, 0.88 ) }
    dend_30 { pt3dadd( -22.0798, -49.427, -8.19229, 1.11 ) }
    dend_30 { pt3dadd( -22.629, -49.5212, -8.24347, 0.88 ) }
    dend_30 { pt3dadd( -23.3157, -49.6531, -8.33166, 0.81 ) }
    dend_30 { pt3dadd( -24.1155, -49.8509, -8.46952, 0.74 ) }
    dend_30 { pt3dadd( -24.872, -50.0933, -8.61693, 0.96 ) }
    dend_30 { pt3dadd( -25.6046, -50.4133, -8.83323, 0.96 ) }
    dend_30 { pt3dadd( -26.5891, -50.9485, -9.13549, 0.81 ) }
    dend_30 { pt3dadd( -26.634, -50.9789, -9.14913, 0.81 ) }
    dend_30 { pt3dadd( -27.4157, -51.6096, -9.38244, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -28.0794, -52.2166, -9.57454, 0.74 ) }
    dend_30 { pt3dadd( -28.3153, -52.4404, -9.63268, 1.03 ) }
    dend_30 { pt3dadd( -28.7664, -52.8548, -9.72848, 1.11 ) }
    dend_30 { pt3dadd( -29.5358, -53.5066, -9.85719, 1.11 ) }
    dend_30 { pt3dadd( -29.596, -53.5526, -9.86798, 1.11 ) }
    dend_30 { pt3dadd( -30.5052, -54.1502, -10.0307, 0.88 ) }
    dend_30 { pt3dadd( -31.5818, -54.7978, -10.2358, 0.88 ) }
    dend_30 { pt3dadd( -32.0592, -55.0662, -10.3307, 1.25 ) }
    dend_30 { pt3dadd( -32.6607, -55.3758, -10.4566, 1.25 ) }
    dend_30 { pt3dadd( -33.4907, -55.7716, -10.6386, 1.4 ) }
    dend_30 { pt3dadd( -34.1034, -56.0625, -10.7711, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -19.9924, -49.2705, -8.32141, 0.74 ) }
    dend_27 { pt3dadd( -19.7357, -49.8206, -9.49579, 0.74 ) }
    dend_27 { pt3dadd( -19.4196, -50.5466, -11.0654, 0.44 ) }
    dend_27 { pt3dadd( -19.3977, -50.5985, -11.1713, 0.44 ) }
    dend_27 { pt3dadd( -19.1607, -51.1347, -12.1567, 0.44 ) }
    dend_27 { pt3dadd( -18.7141, -52.1068, -13.8354, 1.03 ) }
    dend_27 { pt3dadd( -17.8708, -54.0897, -17.0496, 1.03 ) }
    dend_27 { pt3dadd( -17.6282, -54.7384, -18.0859, 1.33 ) }
    dend_27 { pt3dadd( -17.3452, -55.6689, -19.5039, 1.11 ) }
    dend_27 { pt3dadd( -17.1979, -56.3328, -20.5568, 0.59 ) }
    dend_27 { pt3dadd( -17.0585, -57.3321, -22.1765, 0.44 ) }
    dend_27 { pt3dadd( -17.025, -58.6602, -24.2051, 0.44 ) }
    dend_27 { pt3dadd( -17.0787, -59.5408, -25.5446, 0.88 ) }
    dend_27 { pt3dadd( -17.1543, -59.9484, -26.2181, 1.25 ) }
    dend_27 { pt3dadd( -17.639, -61.5366, -28.9147, 1.25 ) }
    dend_27 { pt3dadd( -17.6558, -61.5777, -28.9867, 1.25 ) }
    dend_27 { pt3dadd( -17.7417, -61.7681, -29.2925, 1.25 ) }
    dend_27 { pt3dadd( -17.7587, -61.813, -29.3504, 1.25 ) }
    dend_27 { pt3dadd( -18.0782, -63.3538, -30.6206, 0.74 ) }
    dend_27 { pt3dadd( -18.1898, -64.2866, -31.2131, 0.74 ) }
    dend_27 { pt3dadd( -18.1962, -64.3599, -31.2476, 0.74 ) }
    dend_27 { pt3dadd( -18.2525, -65.0219, -31.6194, 0.74 ) }
    dend_27 { pt3dadd( -18.3455, -65.9523, -32.3045, 0.81 ) }
    dend_27 { pt3dadd( -18.4603, -66.7361, -32.9616, 0.81 ) }
    dend_27 { pt3dadd( -18.811, -68.3124, -34.4925, 0.44 ) }
    dend_27 { pt3dadd( -18.829, -68.3672, -34.5519, 0.44 ) }
    dend_27 { pt3dadd( -19.2026, -69.3244, -35.6471, 0.74 ) }
    dend_27 { pt3dadd( -19.7565, -70.6022, -37.2129, 0.88 ) }
    dend_27 { pt3dadd( -20.0108, -71.2062, -37.952, 1.03 ) }
    dend_27 { pt3dadd( -20.395, -72.1814, -39.0752, 1.03 ) }
    dend_27 { pt3dadd( -20.5941, -72.8106, -39.6763, 1.18 ) }
    dend_27 { pt3dadd( -20.6074, -72.8669, -39.723, 1.18 ) }
    dend_27 { pt3dadd( -20.7323, -74.1873, -40.5461, 0.52 ) }
    dend_27 { pt3dadd( -20.6036, -75.1505, -40.9668, 0.44 ) }
    dend_27 { pt3dadd( -20.4073, -75.656, -41.1759, 0.81 ) }
    dend_27 { pt3dadd( -20.1763, -76.0734, -41.3397, 0.88 ) }
    dend_27 { pt3dadd( -20.0896, -76.22, -41.4065, 0.88 ) }
    dend_27 { pt3dadd( -19.7082, -76.9124, -41.7322, 0.74 ) }
    dend_27 { pt3dadd( -19.2997, -77.7658, -42.1363, 0.44 ) }
    dend_27 { pt3dadd( -18.9799, -78.6524, -42.5761, 0.59 ) }
    dend_27 { pt3dadd( -18.6836, -79.8729, -43.1407, 0.52 ) }
    dend_27 { pt3dadd( -18.5301, -80.8431, -43.5799, 0.88 ) }
    dend_27 { pt3dadd( -18.4665, -81.5079, -43.8664, 1.18 ) }
    dend_27 { pt3dadd( -18.4402, -82.4657, -44.2908, 0.52 ) }
    dend_27 { pt3dadd( -18.4766, -83.0972, -44.5644, 0.44 ) }
    dend_27 { pt3dadd( -18.5884, -84.0287, -44.9271, 0.44 ) }
    dend_27 { pt3dadd( -18.7262, -84.8531, -45.22, 0.74 ) }
    dend_27 { pt3dadd( -18.8197, -85.3175, -45.3793, 0.74 ) }
    dend_27 { pt3dadd( -19.1534, -86.8034, -45.916, 0.59 ) }
    dend_27 { pt3dadd( -19.4245, -87.8906, -46.3005, 0.66 ) }
    dend_27 { pt3dadd( -19.5802, -88.5064, -46.536, 1.18 ) }
    dend_27 { pt3dadd( -19.809, -89.4501, -46.8976, 1.33 ) }
    dend_27 { pt3dadd( -19.9926, -90.3792, -47.2201, 1.11 ) }
    dend_27 { pt3dadd( -20.0015, -90.4558, -47.2476, 1.11 ) }
    dend_27 { pt3dadd( -20.0245, -91.3263, -47.5386, 0.96 ) }
    dend_27 { pt3dadd( -19.9709, -92.4651, -47.9282, 0.66 ) }
    dend_27 { pt3dadd( -19.9095, -93.3353, -48.2619, 0.37 ) }
    dend_27 { pt3dadd( -19.8827, -94.177, -48.6063, 0.29 ) }
    dend_27 { pt3dadd( -19.9217, -95.6549, -49.2805, 1.03 ) }
    dend_27 { pt3dadd( -19.9746, -96.3896, -49.634, 1.33 ) }
    dend_27 { pt3dadd( -20.0301, -96.9794, -49.9256, 1.47 ) }
    dend_27 { pt3dadd( -20.194, -98.4935, -50.6165, 0.37 ) }
    dend_27 { pt3dadd( -20.2842, -99.4148, -51.0513, 0.37 ) }
    dend_27 { pt3dadd( -20.4171, -100.693, -51.6179, 0.29 ) }
    dend_27 { pt3dadd( -20.4577, -101.172, -51.7985, 0.44 ) }
    dend_27 { pt3dadd( -20.5051, -101.898, -52.036, 0.59 ) }
    dend_27 { pt3dadd( -20.5573, -103.044, -52.3527, 0.59 ) }
    dend_27 { pt3dadd( -20.5807, -104.497, -52.699, 0.74 ) }
    dend_27 { pt3dadd( -20.5616, -105.57, -52.9335, 0.59 ) }
    dend_27 { pt3dadd( -20.5571, -106.536, -53.1153, 0.44 ) }
    dend_27 { pt3dadd( -20.5601, -107.834, -53.369, 0.44 ) }
    dend_27 { pt3dadd( -20.5563, -107.92, -53.4127, 0.44 ) }
    dend_27 { pt3dadd( -20.4515, -108.763, -54.0843, 0.96 ) }
    dend_27 { pt3dadd( -20.3448, -109.252, -54.5663, 1.4 ) }
    dend_27 { pt3dadd( -20.3279, -109.31, -54.6279, 1.4 ) }
    dend_27 { pt3dadd( -20.1487, -109.855, -55.2177, 1.18 ) }
    dend_27 { pt3dadd( -19.0451, -113.242, -58.8525, 0.59 ) }
    dend_27 { pt3dadd( -18.8273, -113.956, -59.5898, 0.88 ) }
    dend_27 { pt3dadd( -18.6448, -114.626, -60.2562, 1.03 ) }
    dend_27 { pt3dadd( -18.4767, -115.366, -60.962, 0.52 ) }
    dend_27 { pt3dadd( -18.3453, -116.225, -61.6793, 0.37 ) }
    dend_27 { pt3dadd( -18.2967, -117.096, -62.2491, 0.37 ) }
    dend_27 { pt3dadd( -18.2981, -117.163, -62.2679, 0.37 ) }
    dend_27 { pt3dadd( -18.3056, -117.463, -62.3482, 1.03 ) }
    dend_27 { pt3dadd( -18.3141, -118.104, -62.4929, 1.03 ) }
    dend_27 { pt3dadd( -18.264, -119.092, -62.7075, 0.44 ) }
    dend_27 { pt3dadd( -18.0758, -120.147, -63.016, 0.37 ) }
    dend_27 { pt3dadd( -17.7576, -121.181, -63.3734, 0.88 ) }
    dend_27 { pt3dadd( -17.5349, -121.79, -63.6459, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -17.3622, -122.244, -63.8791, 1.25 ) }
    dend_27 { pt3dadd( -17.0352, -123.111, -64.3946, 0.81 ) }
    dend_27 { pt3dadd( -16.4928, -124.719, -65.4212, 0.29 ) }
    dend_27 { pt3dadd( -16.3831, -125.143, -65.6879, 0.29 ) }
    dend_27 { pt3dadd( -16.2126, -126.134, -66.3266, 0.37 ) }
    dend_27 { pt3dadd( -16.1144, -127.044, -66.9328, 0.37 ) }
    dend_27 { pt3dadd( -16.062, -127.974, -67.5257, 0.66 ) }
    dend_27 { pt3dadd( -16.0622, -128.749, -67.9605, 1.25 ) }
    dend_27 { pt3dadd( -16.0605, -129.555, -68.3237, 1.4 ) }
    dend_27 { pt3dadd( -15.9937, -130.991, -68.9027, 0.81 ) }
    dend_27 { pt3dadd( -15.8448, -132.298, -69.3599, 0.59 ) }
    dend_27 { pt3dadd( -15.718, -133.023, -69.5909, 0.29 ) }
    dend_27 { pt3dadd( -15.5118, -133.957, -69.8518, 0.29 ) }
    dend_27 { pt3dadd( -15.2375, -135.039, -70.3357, 0.29 ) }
    dend_27 { pt3dadd( -15.1362, -135.411, -70.5675, 1.03 ) }
    dend_27 { pt3dadd( -15.117, -135.476, -70.6156, 1.03 ) }
    dend_27 { pt3dadd( -14.9357, -136.065, -71.0975, 1.4 ) }
    dend_27 { pt3dadd( -14.6916, -136.92, -71.8452, 1.4 ) }
    dend_27 { pt3dadd( -13.9951, -139.492, -74.1502, 0.52 ) }
    dend_27 { pt3dadd( -13.761, -140.541, -75.0502, 0.74 ) }
    dend_27 { pt3dadd( -13.7418, -140.65, -75.1368, 0.74 ) }
    dend_27 { pt3dadd( -13.6235, -141.479, -75.7388, 0.52 ) }
    dend_27 { pt3dadd( -13.5447, -142.321, -76.2817, 0.52 ) }
    dend_27 { pt3dadd( -13.5292, -143.029, -76.6173, 0.74 ) }
    dend_27 { pt3dadd( -13.5563, -144.018, -76.9424, 0.66 ) }
    dend_27 { pt3dadd( -13.5935, -145.621, -77.6779, 0.59 ) }
    dend_27 { pt3dadd( -13.5917, -145.68, -77.715, 0.59 ) }
    dend_27 { pt3dadd( -13.5359, -146.376, -78.2223, 0.52 ) }
    dend_27 { pt3dadd( -13.4407, -147.126, -78.7922, 1.18 ) }
    dend_27 { pt3dadd( -13.2416, -148.395, -79.7558, 1.62 ) }
    dend_27 { pt3dadd( -12.8505, -150.298, -81.2385, 1.18 ) }
    dend_27 { pt3dadd( -12.5435, -151.58, -82.1902, 0.52 ) }
    dend_27 { pt3dadd( -12.2962, -152.552, -82.8652, 0.37 ) }
    dend_27 { pt3dadd( -12.0501, -153.47, -83.4421, 0.74 ) }
    dend_27 { pt3dadd( -11.9471, -153.903, -83.6722, 1.11 ) }
    dend_27 { pt3dadd( -11.7665, -155.214, -84.1468, 0.88 ) }
    dend_27 { pt3dadd( -11.7948, -155.968, -84.3086, 0.81 ) }
    dend_27 { pt3dadd( -12.0195, -156.929, -84.4878, 0.44 ) }
    dend_27 { pt3dadd( -12.3225, -157.661, -84.6356, 0.59 ) }
    dend_27 { pt3dadd( -12.7535, -158.431, -84.842, 0.59 ) }
    dend_27 { pt3dadd( -13.3259, -159.306, -85.1007, 0.37 ) }
    dend_27 { pt3dadd( -14.0716, -160.358, -85.4004, 0.29 ) }
    dend_27 { pt3dadd( -14.5655, -161.053, -85.6211, 0.81 ) }
    dend_27 { pt3dadd( -14.981, -161.686, -85.8479, 1.11 ) }
    dend_27 { pt3dadd( -15.6818, -162.87, -86.2839, 1.4 ) }
    dend_27 { pt3dadd( -15.9889, -163.448, -86.4896, 1.33 ) }
    dend_27 { pt3dadd( -16.4308, -164.398, -86.7869, 0.81 ) }
    dend_27 { pt3dadd( -16.8145, -165.316, -87.0056, 0.52 ) }
    dend_27 { pt3dadd( -17.2956, -166.537, -87.2046, 0.44 ) }
    dend_27 { pt3dadd( -17.6305, -167.455, -87.3013, 0.37 ) }
    dend_27 { pt3dadd( -17.9734, -168.519, -87.2909, 0.37 ) }
    dend_27 { pt3dadd( -18.2489, -169.525, -87.2255, 0.66 ) }
    dend_27 { pt3dadd( -18.4736, -170.585, -87.0971, 0.96 ) }
    dend_27 { pt3dadd( -18.587, -171.406, -86.9533, 1.03 ) }
    dend_27 { pt3dadd( -18.6418, -172.229, -86.7695, 1.25 ) }
    dend_27 { pt3dadd( -18.5651, -173.743, -86.4261, 0.81 ) }
    dend_27 { pt3dadd( -18.4791, -174.396, -86.2884, 0.52 ) }
    dend_27 { pt3dadd( -18.3351, -175.303, -86.1488, 0.52 ) }
    dend_27 { pt3dadd( -18.2393, -175.974, -86.0862, 0.29 ) }
    dend_27 { pt3dadd( -18.1661, -176.958, -86.0509, 0.29 ) }
    dend_27 { pt3dadd( -18.1874, -178.306, -86.13, 0.29 ) }
    dend_27 { pt3dadd( -18.3356, -179.162, -86.2733, 0.81 ) }
    dend_27 { pt3dadd( -18.6211, -180.038, -86.4563, 1.11 ) }
    dend_27 { pt3dadd( -18.9588, -180.748, -86.6329, 1.11 ) }
    dend_27 { pt3dadd( -19.3848, -181.447, -86.8237, 0.74 ) }
    dend_27 { pt3dadd( -19.9259, -182.158, -87.0401, 0.37 ) }
    dend_27 { pt3dadd( -20.7297, -183.104, -87.3781, 0.29 ) }
    dend_27 { pt3dadd( -20.9766, -183.431, -87.4922, 0.74 ) }
    dend_27 { pt3dadd( -21.0243, -183.511, -87.5174, 0.74 ) }
    dend_27 { pt3dadd( -21.2438, -184.052, -87.7212, 0.96 ) }
    dend_27 { pt3dadd( -21.2805, -184.189, -87.7745, 0.96 ) }
    dend_27 { pt3dadd( -21.5201, -185.425, -88.2251, 0.29 ) }
    dend_27 { pt3dadd( -21.6843, -186.222, -88.5097, 0.29 ) }
    dend_27 { pt3dadd( -21.8262, -186.777, -88.6917, 0.81 ) }
    dend_27 { pt3dadd( -22.2093, -187.941, -89.0376, 1.03 ) }
    dend_27 { pt3dadd( -22.5055, -188.628, -89.2168, 0.81 ) }
    dend_27 { pt3dadd( -22.9959, -189.505, -89.4313, 0.29 ) }
    dend_27 { pt3dadd( -23.6434, -190.404, -89.6278, 0.29 ) }
    dend_27 { pt3dadd( -24.0481, -190.859, -89.7284, 0.44 ) }
    dend_27 { pt3dadd( -24.5641, -191.394, -89.8367, 0.44 ) }
    dend_27 { pt3dadd( -25.2294, -191.998, -89.9294, 0.66 ) }
    dend_27 { pt3dadd( -26.0035, -192.61, -90.0464, 0.96 ) }
    dend_27 { pt3dadd( -26.4178, -192.889, -90.1192, 1.4 ) }
    dend_27 { pt3dadd( -27.5643, -193.592, -90.3591, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.5241, 56.3808, 2.46577, 1.11 ) }
    dend_20 { pt3dadd( 7.14128, 58.2385, 2.66161, 1.11 ) }
    dend_20 { pt3dadd( 7.01345, 58.7764, 2.70885, 0.96 ) }
    dend_20 { pt3dadd( 6.80791, 59.4737, 2.75806, 0.96 ) }
    dend_20 { pt3dadd( 6.5542, 60.2529, 2.80651, 0.96 ) }
    dend_20 { pt3dadd( 6.2221, 61.1634, 2.85906, 0.96 ) }
    dend_20 { pt3dadd( 5.68362, 62.5402, 2.93509, 0.96 ) }
    dend_20 { pt3dadd( 5.64769, 62.6095, 2.93591, 0.96 ) }
    dend_20 { pt3dadd( 5.03921, 63.6729, 2.95049, 1.11 ) }
    dend_20 { pt3dadd( 4.977, 63.7729, 2.95244, 1.11 ) }
    dend_20 { pt3dadd( 4.44239, 64.5853, 2.97254, 1.11 ) }
    dend_20 { pt3dadd( 4.39064, 64.6585, 2.97508, 1.11 ) }
    dend_20 { pt3dadd( 3.80902, 65.4598, 3.00832, 1.33 ) }
    dend_20 { pt3dadd( 3.28026, 66.2022, 3.03711, 1.18 ) }
    dend_20 { pt3dadd( 2.73773, 67.036, 3.06507, 0.96 ) }
    dend_20 { pt3dadd( 2.69387, 67.116, 3.06706, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 2.37182, 67.8009, 3.08243, 0.88 ) }
    dend_20 { pt3dadd( 2.01668, 68.7131, 3.09812, 0.88 ) }
    dend_20 { pt3dadd( 1.99611, 68.7871, 3.09899, 0.88 ) }
    dend_20 { pt3dadd( 1.78086, 69.9617, 3.10621, 0.88 ) }
    dend_20 { pt3dadd( 1.6601, 71.1154, 3.1065, 1.11 ) }
    dend_20 { pt3dadd( 1.65512, 71.2257, 3.10637, 1.11 ) }
    dend_20 { pt3dadd( 1.66947, 72.1849, 3.10314, 1.11 ) }
    dend_20 { pt3dadd( 1.71574, 72.9997, 3.10275, 1.33 ) }
    dend_20 { pt3dadd( 1.75948, 73.5066, 3.1043, 1.33 ) }
    dend_20 { pt3dadd( 1.89396, 74.4178, 3.07035, 1.18 ) }
    dend_20 { pt3dadd( 2.0662, 75.3106, 3.00636, 1.18 ) }
    dend_20 { pt3dadd( 2.09268, 75.4147, 2.99004, 1.18 ) }
    dend_20 { pt3dadd( 2.3711, 76.2877, 2.79115, 1.11 ) }
    dend_20 { pt3dadd( 2.69818, 77.1595, 2.54488, 1.11 ) }
    dend_20 { pt3dadd( 3.07393, 78.0278, 2.26066, 1.03 ) }
    dend_20 { pt3dadd( 3.4283, 78.8135, 1.97631, 0.88 ) }
    dend_20 { pt3dadd( 3.93516, 80.0247, 1.51556, 0.88 ) }
    dend_20 { pt3dadd( 3.98275, 80.1687, 1.46251, 0.88 ) }
    dend_20 { pt3dadd( 4.23404, 81.1867, 1.17515, 0.88 ) }
    dend_20 { pt3dadd( 4.2441, 81.2625, 1.16292, 0.88 ) }
    dend_20 { pt3dadd( 4.21974, 82.09, 1.15908, 0.88 ) }
    dend_20 { pt3dadd( 4.04261, 83.1711, 1.27047, 0.88 ) }
    dend_20 { pt3dadd( 3.82239, 83.9453, 1.41459, 0.88 ) }
    dend_20 { pt3dadd( 3.38934, 85.1334, 1.63487, 0.96 ) }
    dend_20 { pt3dadd( 3.27908, 85.3598, 1.67574, 0.96 ) }
    dend_20 { pt3dadd( 2.91975, 86.0204, 1.78148, 1.47 ) }
    dend_20 { pt3dadd( 2.56631, 86.6411, 1.88148, 1.62 ) }
    dend_20 { pt3dadd( 2.07138, 87.4622, 2.02851, 1.11 ) }
    dend_20 { pt3dadd( 1.57895, 88.2763, 2.15895, 1.11 ) }
    dend_20 { pt3dadd( 0.958889, 89.303, 2.28688, 1.11 ) }
    dend_20 { pt3dadd( 0.466562, 90.1943, 2.40889, 0.96 ) }
    dend_20 { pt3dadd( 0.0478859, 91.038, 2.5361, 0.96 ) }
    dend_20 { pt3dadd( -0.438552, 92.0503, 2.69411, 0.96 ) }
    dend_20 { pt3dadd( -0.472885, 92.1336, 2.70619, 0.96 ) }
    dend_20 { pt3dadd( -0.684163, 92.7468, 2.76212, 0.96 ) }
    dend_20 { pt3dadd( -0.998386, 93.8557, 2.73474, 1.18 ) }
    dend_20 { pt3dadd( -1.02531, 93.9613, 2.72201, 1.18 ) }
    dend_20 { pt3dadd( -1.36153, 95.3042, 2.47525, 1.18 ) }
    dend_20 { pt3dadd( -1.69831, 96.6864, 2.1724, 1.03 ) }
    dend_20 { pt3dadd( -1.94508, 97.6736, 1.95528, 0.88 ) }
    dend_20 { pt3dadd( -2.28561, 99.0104, 1.65017, 1.03 ) }
    dend_20 { pt3dadd( -2.52457, 99.9356, 1.43955, 1.03 ) }
    dend_20 { pt3dadd( -2.64852, 100.459, 1.33702, 1.03 ) }
    dend_20 { pt3dadd( -2.67161, 100.599, 1.31626, 1.03 ) }
    dend_20 { pt3dadd( -2.79869, 101.469, 1.24809, 1.03 ) }
    dend_20 { pt3dadd( -2.8207, 101.633, 1.24834, 1.03 ) }
    dend_20 { pt3dadd( -2.9415, 102.412, 1.34322, 1.03 ) }
    dend_20 { pt3dadd( -3.17231, 103.738, 1.55161, 1.18 ) }
    dend_20 { pt3dadd( -3.38643, 104.911, 1.79061, 1.18 ) }
    dend_20 { pt3dadd( -3.52428, 105.628, 1.96096, 1.18 ) }
    dend_20 { pt3dadd( -3.68041, 106.403, 2.17112, 1.18 ) }
    dend_20 { pt3dadd( -4.02067, 108.02, 2.62956, 1.18 ) }
    dend_20 { pt3dadd( -4.26032, 109.159, 2.99375, 1.18 ) }
    dend_20 { pt3dadd( -4.49736, 110.323, 3.38897, 1.18 ) }
    dend_20 { pt3dadd( -4.51204, 110.398, 3.41303, 1.18 ) }
    dend_20 { pt3dadd( -4.64021, 111.078, 3.59183, 1.18 ) }
    dend_20 { pt3dadd( -4.87303, 112.319, 3.8292, 1.47 ) }
    dend_20 { pt3dadd( -5.02048, 113.172, 3.9261, 1.47 ) }
    dend_20 { pt3dadd( -5.17042, 114.02, 3.99866, 1.33 ) }
    dend_20 { pt3dadd( -5.38285, 115.293, 4.06953, 1.03 ) }
    dend_20 { pt3dadd( -5.68189, 117.049, 4.1516, 0.96 ) }
    dend_20 { pt3dadd( -5.9299, 118.489, 4.20399, 0.96 ) }
    dend_20 { pt3dadd( -6.11287, 119.513, 4.20767, 0.96 ) }
    dend_20 { pt3dadd( -6.27377, 120.377, 4.18054, 1.11 ) }
    dend_20 { pt3dadd( -6.36383, 120.883, 4.15833, 1.11 ) }
    dend_20 { pt3dadd( -6.5246, 121.917, 4.09378, 1.25 ) }
    dend_20 { pt3dadd( -6.58062, 122.384, 4.05823, 1.25 ) }
    dend_20 { pt3dadd( -6.72941, 123.557, 3.94327, 1.03 ) }
    dend_20 { pt3dadd( -6.75945, 123.734, 3.92428, 1.03 ) }
    dend_20 { pt3dadd( -6.85606, 124.272, 3.88818, 1.03 ) }
    dend_20 { pt3dadd( -6.95948, 124.808, 3.87603, 1.03 ) }
    dend_20 { pt3dadd( -7.06315, 125.448, 3.92692, 1.03 ) }
    dend_20 { pt3dadd( -7.22025, 126.495, 4.10333, 1.03 ) }
    dend_20 { pt3dadd( -7.31536, 127.271, 4.29594, 1.03 ) }
    dend_20 { pt3dadd( -7.39393, 127.988, 4.54892, 1.03 ) }
    dend_20 { pt3dadd( -7.40789, 128.128, 4.60993, 1.03 ) }
    dend_20 { pt3dadd( -7.50548, 129.223, 5.14532, 1.03 ) }
    dend_20 { pt3dadd( -7.51176, 129.292, 5.18227, 1.03 ) }
    dend_20 { pt3dadd( -7.65081, 130.496, 5.83143, 1.03 ) }
    dend_20 { pt3dadd( -7.82673, 131.741, 6.44184, 1.03 ) }
    dend_20 { pt3dadd( -7.8442, 131.849, 6.48443, 1.03 ) }
    dend_20 { pt3dadd( -7.94594, 132.693, 6.74758, 1.03 ) }
    dend_20 { pt3dadd( -7.95085, 132.77, 6.76768, 1.03 ) }
    dend_20 { pt3dadd( -7.92742, 134.176, 7.08841, 1.03 ) }
    dend_20 { pt3dadd( -7.91243, 134.338, 7.11823, 1.03 ) }
    dend_20 { pt3dadd( -7.79257, 135.306, 7.24506, 1.25 ) }
    dend_20 { pt3dadd( -7.61586, 136.723, 7.42145, 1.25 ) }
    dend_20 { pt3dadd( -7.45848, 137.916, 7.56519, 1.25 ) }
    dend_20 { pt3dadd( -7.35166, 139.001, 7.68678, 0.88 ) }
    dend_20 { pt3dadd( -7.29725, 140.073, 7.77256, 0.74 ) }
    dend_20 { pt3dadd( -7.32232, 140.972, 7.79704, 1.18 ) }
    dend_20 { pt3dadd( -7.47681, 142.39, 7.76281, 1.4 ) }
    dend_20 { pt3dadd( -7.51152, 142.554, 7.75036, 1.4 ) }
    dend_20 { pt3dadd( -7.84277, 143.69, 7.60922, 1.4 ) }
    dend_20 { pt3dadd( -8.28248, 144.917, 7.44341, 1.18 ) }
    dend_20 { pt3dadd( -8.71508, 146.035, 7.28122, 1.03 ) }
    dend_20 { pt3dadd( -8.74359, 146.107, 7.26973, 1.03 ) }
    dend_20 { pt3dadd( -9.16921, 147.143, 7.08728, 1.03 ) }
    dend_20 { pt3dadd( -9.38567, 147.68, 6.99598, 0.88 ) }
    dend_20 { pt3dadd( -9.95405, 149.187, 6.77048, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -9.98183, 149.262, 6.76541, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.5241, 56.3808, 2.46577, 0.52 ) }
    dend_15 { pt3dadd( 7.00914, 57.5908, 1.44031, 0.52 ) }
    dend_15 { pt3dadd( 6.4975, 58.4785, 0.651202, 0.74 ) }
    dend_15 { pt3dadd( 5.97169, 59.1121, -0.00345558, 0.74 ) }
    dend_15 { pt3dadd( 5.75772, 59.3283, -0.245966, 0.74 ) }
    dend_15 { pt3dadd( 5.35426, 59.6784, -0.807483, 0.74 ) }
    dend_15 { pt3dadd( 4.70675, 60.1765, -1.89329, 0.44 ) }
    dend_15 { pt3dadd( 4.3423, 60.4026, -2.55552, 0.81 ) }
    dend_15 { pt3dadd( 3.70474, 60.7838, -3.80583, 0.81 ) }
    dend_15 { pt3dadd( 3.67224, 60.8057, -3.88074, 0.81 ) }
    dend_15 { pt3dadd( 2.56022, 61.706, -6.62948, 1.03 ) }
    dend_15 { pt3dadd( 1.83853, 62.4483, -8.61498, 0.81 ) }
    dend_15 { pt3dadd( 1.64289, 62.7106, -9.20656, 0.81 ) }
    dend_15 { pt3dadd( 1.22606, 63.3564, -10.42, 0.88 ) }
    dend_15 { pt3dadd( 0.717886, 64.1723, -11.7074, 0.81 ) }
    dend_15 { pt3dadd( 0.2555, 64.7868, -12.6067, 0.81 ) }
    dend_15 { pt3dadd( -0.501727, 65.5829, -13.6526, 0.59 ) }
    dend_15 { pt3dadd( -0.961051, 65.9258, -14.1975, 0.59 ) }
    dend_15 { pt3dadd( -1.77963, 66.2758, -15.1629, 0.88 ) }
    dend_15 { pt3dadd( -2.72114, 66.4917, -17.0551, 0.88 ) }
    dend_15 { pt3dadd( -3.37671, 66.5505, -18.8741, 0.88 ) }
    dend_15 { pt3dadd( -3.67292, 66.5465, -19.8882, 1.25 ) }
    dend_15 { pt3dadd( -4.17996, 66.5008, -21.856, 1.25 ) }
    dend_15 { pt3dadd( -4.74796, 66.4366, -24.2855, 1.11 ) }
    dend_15 { pt3dadd( -6.38676, 66.3418, -32.3412, 1.03 ) }
    dend_15 { pt3dadd( -6.79309, 66.3616, -34.6687, 0.66 ) }
    dend_15 { pt3dadd( -6.80491, 66.3668, -34.7626, 0.66 ) }
    dend_15 { pt3dadd( -6.96221, 66.5675, -36.6074, 0.52 ) }
    dend_15 { pt3dadd( -7.00201, 66.7182, -37.4435, 0.52 ) }
    dend_15 { pt3dadd( -7.00282, 67.078, -38.6893, 0.52 ) }
    dend_15 { pt3dadd( -6.98753, 67.1254, -38.7719, 0.52 ) }
    dend_15 { pt3dadd( -6.29629, 68.3939, -40.7918, 1.25 ) }
    dend_15 { pt3dadd( -6.14498, 68.6783, -41.253, 1.69 ) }
    dend_15 { pt3dadd( -6.11339, 68.7329, -41.3422, 1.69 ) }
    dend_15 { pt3dadd( -5.96719, 69.0276, -41.8343, 1.69 ) }
    dend_15 { pt3dadd( -5.58595, 70.4016, -44.1944, 0.88 ) }
    dend_15 { pt3dadd( -5.57117, 71.8252, -46.4187, 0.59 ) }
    dend_15 { pt3dadd( -5.70752, 72.348, -47.1887, 0.81 ) }
    dend_15 { pt3dadd( -5.72679, 72.4058, -47.2791, 0.81 ) }
    dend_15 { pt3dadd( -5.89467, 72.9293, -48.1604, 1.11 ) }
    dend_15 { pt3dadd( -6.2274, 74.0201, -50.0118, 1.11 ) }
    dend_15 { pt3dadd( -6.40193, 74.6298, -50.9969, 0.96 ) }
    dend_15 { pt3dadd( -6.6251, 75.7998, -52.9095, 0.88 ) }
    dend_15 { pt3dadd( -6.78832, 77.2542, -55.1442, 0.81 ) }
    dend_15 { pt3dadd( -6.80755, 78.5505, -57.0895, 0.52 ) }
    dend_15 { pt3dadd( -6.73865, 78.9392, -57.7366, 0.52 ) }
    dend_15 { pt3dadd( -6.54745, 79.4319, -58.5663, 0.59 ) }
    dend_15 { pt3dadd( -6.48676, 79.5307, -58.7297, 0.59 ) }
    dend_15 { pt3dadd( -5.95633, 80.2028, -59.7559, 0.59 ) }
    dend_15 { pt3dadd( -4.99423, 81.3083, -61.3785, 0.81 ) }
    dend_15 { pt3dadd( -3.5489, 82.7733, -63.6438, 1.4 ) }
    dend_15 { pt3dadd( -3.03199, 83.2159, -64.4472, 1.62 ) }
    dend_15 { pt3dadd( -2.2523, 83.749, -65.5933, 1.84 ) }
    dend_15 { pt3dadd( -2.2002, 83.7787, -65.6661, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 27.4763, 43.9149, 4.92675, 1.18 ) }
    dend_3 { pt3dadd( 27.6219, 45.2096, 6.94121, 1.18 ) }
    dend_3 { pt3dadd( 27.7676, 46.0936, 7.94701, 0.96 ) }
    dend_3 { pt3dadd( 27.7869, 46.1694, 8.00495, 0.96 ) }
    dend_3 { pt3dadd( 28.1975, 47.2739, 8.57514, 0.74 ) }
    dend_3 { pt3dadd( 28.2333, 47.3563, 8.60545, 0.74 ) }
    dend_3 { pt3dadd( 28.5561, 48.0019, 8.7754, 0.88 ) }
    dend_3 { pt3dadd( 29.1038, 48.908, 8.88198, 0.88 ) }
    dend_3 { pt3dadd( 29.7329, 49.8215, 8.98942, 0.59 ) }
    dend_3 { pt3dadd( 30.387, 50.6149, 9.19886, 0.52 ) }
    dend_3 { pt3dadd( 30.9492, 51.1848, 9.44109, 0.81 ) }
    dend_3 { pt3dadd( 31.7171, 51.9328, 9.81035, 0.52 ) }
    dend_3 { pt3dadd( 32.9925, 53.0726, 10.5332, 0.88 ) }
    dend_3 { pt3dadd( 33.1944, 53.2391, 10.6809, 0.88 ) }
    dend_3 { pt3dadd( 34.3488, 54.0828, 11.7456, 1.33 ) }
    dend_3 { pt3dadd( 34.5307, 54.1994, 11.9579, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 27.4763, 43.9149, 4.92675, 1.11 ) }
    dend_2 { pt3dadd( 29.8633, 42.7811, 3.14695, 1.11 ) }
    dend_2 { pt3dadd( 30.6741, 42.4642, 2.67188, 1.03 ) }
    dend_2 { pt3dadd( 31.6066, 42.1219, 2.20492, 0.88 ) }
    dend_2 { pt3dadd( 33.319, 41.5215, 1.53939, 0.59 ) }
    dend_2 { pt3dadd( 34.284, 41.1615, 1.20581, 0.81 ) }
    dend_2 { pt3dadd( 35.1476, 40.8215, 0.915003, 0.81 ) }
    dend_2 { pt3dadd( 35.8877, 40.5435, 0.723193, 1.03 ) }
    dend_2 { pt3dadd( 36.2066, 40.4475, 0.617533, 1.03 ) }
    dend_2 { pt3dadd( 37.3254, 40.1531, 0.110912, 1.03 ) }
    dend_2 { pt3dadd( 38.9687, 39.6433, -0.795387, 0.66 ) }
    dend_2 { pt3dadd( 40.2309, 39.1657, -1.62491, 0.81 ) }
    dend_2 { pt3dadd( 41.4074, 38.6132, -2.50798, 0.59 ) }
    dend_2 { pt3dadd( 42.4843, 38.0052, -3.42276, 0.96 ) }
    dend_2 { pt3dadd( 43.9516, 37.0374, -4.77773, 0.59 ) }
    dend_2 { pt3dadd( 44.9373, 36.2754, -5.77297, 0.59 ) }
    dend_2 { pt3dadd( 45.8576, 35.4761, -6.6805, 0.96 ) }
    dend_2 { pt3dadd( 46.6734, 34.7181, -7.39221, 0.81 ) }
    dend_2 { pt3dadd( 47.4704, 33.9573, -7.94261, 0.81 ) }
    dend_2 { pt3dadd( 47.9587, 33.5247, -8.1683, 0.96 ) }
    dend_2 { pt3dadd( 49.0722, 32.761, -8.48945, 0.37 ) }
    dend_2 { pt3dadd( 50.1267, 32.2884, -8.71182, 0.37 ) }
    dend_2 { pt3dadd( 51.4104, 31.9358, -8.91135, 0.44 ) }
    dend_2 { pt3dadd( 52.2743, 31.8053, -9.03813, 0.81 ) }
    dend_2 { pt3dadd( 53.2887, 31.7177, -9.18615, 1.03 ) }
    dend_2 { pt3dadd( 54.7894, 31.5891, -9.42594, 0.52 ) }
    dend_2 { pt3dadd( 55.3272, 31.5043, -9.53142, 0.44 ) }
    dend_2 { pt3dadd( 55.3976, 31.4821, -9.55324, 0.44 ) }
    dend_2 { pt3dadd( 56.8005, 30.7321, -10.059, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 57.2789, 30.3937, -10.2363, 0.88 ) }
    dend_2 { pt3dadd( 58.098, 29.6958, -10.491, 1.03 ) }
    dend_2 { pt3dadd( 59.16, 28.7213, -10.68, 1.03 ) }
    dend_2 { pt3dadd( 60.1127, 27.8661, -10.7702, 0.96 ) }
    dend_2 { pt3dadd( 61.1094, 27.0717, -10.7662, 0.52 ) }
    dend_2 { pt3dadd( 61.169, 27.0287, -10.7595, 0.52 ) }
    dend_2 { pt3dadd( 61.906, 26.6163, -10.6161, 0.59 ) }
    dend_2 { pt3dadd( 62.8955, 26.24, -10.3185, 0.59 ) }
    dend_2 { pt3dadd( 63.61, 26.0603, -10.0256, 0.29 ) }
    dend_2 { pt3dadd( 64.6596, 25.8678, -9.54003, 0.29 ) }
    dend_2 { pt3dadd( 64.7267, 25.8562, -9.50911, 0.29 ) }
    dend_2 { pt3dadd( 65.558, 25.6683, -9.12858, 0.66 ) }
    dend_2 { pt3dadd( 66.2272, 25.4793, -8.82436, 0.81 ) }
    dend_2 { pt3dadd( 67.0507, 25.1399, -8.43458, 0.88 ) }
    dend_2 { pt3dadd( 67.1662, 25.0722, -8.36693, 0.88 ) }
    dend_2 { pt3dadd( 67.7845, 24.61, -7.95933, 1.03 ) }
    dend_2 { pt3dadd( 68.2809, 24.2159, -7.63362, 1.03 ) }
    dend_2 { pt3dadd( 68.3319, 24.1735, -7.6018, 1.03 ) }
    dend_2 { pt3dadd( 68.9829, 23.6222, -7.19701, 0.81 ) }
    dend_2 { pt3dadd( 70.0606, 22.7331, -6.55082, 0.37 ) }
    dend_2 { pt3dadd( 70.6555, 22.2791, -6.22296, 0.66 ) }
    dend_2 { pt3dadd( 71.1614, 21.9147, -5.96805, 0.66 ) }
    dend_2 { pt3dadd( 71.9016, 21.4092, -5.66951, 0.52 ) }
    dend_2 { pt3dadd( 72.5278, 21.0107, -5.49496, 0.52 ) }
    dend_2 { pt3dadd( 73.4501, 20.4408, -5.33455, 0.96 ) }
    dend_2 { pt3dadd( 74.1437, 19.9857, -5.28214, 1.25 ) }
    dend_2 { pt3dadd( 74.9955, 19.3966, -5.24127, 1.03 ) }
    dend_2 { pt3dadd( 75.913, 18.7245, -5.21762, 0.81 ) }
    dend_2 { pt3dadd( 76.8968, 18.014, -5.21254, 0.66 ) }
    dend_2 { pt3dadd( 77.4023, 17.6777, -5.20894, 0.74 ) }
    dend_2 { pt3dadd( 77.9914, 17.3144, -5.1923, 0.74 ) }
    dend_2 { pt3dadd( 78.8611, 16.8213, -5.11281, 0.37 ) }
    dend_2 { pt3dadd( 78.9167, 16.7934, -5.10263, 0.37 ) }
    dend_2 { pt3dadd( 79.6756, 16.4527, -4.89301, 0.29 ) }
    dend_2 { pt3dadd( 80.7853, 16.0141, -4.66662, 0.66 ) }
    dend_2 { pt3dadd( 81.6004, 15.7076, -4.56403, 1.03 ) }
    dend_2 { pt3dadd( 82.4649, 15.3764, -4.49811, 0.74 ) }
    dend_2 { pt3dadd( 83.4841, 14.9552, -4.45934, 0.74 ) }
    dend_2 { pt3dadd( 84.116, 14.6555, -4.4466, 0.96 ) }
    dend_2 { pt3dadd( 85.6206, 13.8178, -4.43883, 1.18 ) }
    dend_2 { pt3dadd( 86.1997, 13.4693, -4.44613, 0.96 ) }
    dend_2 { pt3dadd( 86.9434, 13.0065, -4.45135, 0.44 ) }
    dend_2 { pt3dadd( 87.0148, 12.9614, -4.45135, 0.44 ) }
    dend_2 { pt3dadd( 87.9036, 12.3791, -4.4575, 0.66 ) }
    dend_2 { pt3dadd( 88.4907, 11.9924, -4.47605, 0.81 ) }
    dend_2 { pt3dadd( 88.7794, 11.8048, -4.50815, 0.81 ) }
    dend_2 { pt3dadd( 89.4758, 11.3786, -4.64722, 0.66 ) }
    dend_2 { pt3dadd( 89.7205, 11.239, -4.70186, 0.66 ) }
    dend_2 { pt3dadd( 90.6222, 10.7528, -4.85949, 0.66 ) }
    dend_2 { pt3dadd( 91.6532, 10.2353, -4.99788, 0.44 ) }
    dend_2 { pt3dadd( 93.2231, 9.44221, -5.12896, 0.37 ) }
    dend_2 { pt3dadd( 94.0365, 9.00427, -5.16278, 0.88 ) }
    dend_2 { pt3dadd( 95.1788, 8.3568, -5.10792, 0.88 ) }
    dend_2 { pt3dadd( 96.0851, 7.84773, -4.97475, 1.03 ) }
    dend_2 { pt3dadd( 96.7923, 7.4625, -4.78911, 1.03 ) }
    dend_2 { pt3dadd( 97.4522, 7.13574, -4.55188, 0.74 ) }
    dend_2 { pt3dadd( 98.2574, 6.7788, -4.2055, 0.52 ) }
    dend_2 { pt3dadd( 99.2862, 6.35913, -3.77816, 0.52 ) }
    dend_2 { pt3dadd( 100.162, 6.00355, -3.43077, 0.29 ) }
    dend_2 { pt3dadd( 100.239, 5.97087, -3.40695, 0.29 ) }
    dend_2 { pt3dadd( 100.939, 5.61682, -3.21241, 0.29 ) }
    dend_2 { pt3dadd( 101.544, 5.23756, -3.08482, 0.59 ) }
    dend_2 { pt3dadd( 101.633, 5.1696, -3.07173, 0.59 ) }
    dend_2 { pt3dadd( 102.289, 4.51713, -3.05771, 0.88 ) }
    dend_2 { pt3dadd( 102.887, 3.75855, -3.07123, 0.74 ) }
    dend_2 { pt3dadd( 103.435, 2.92929, -3.16276, 0.44 ) }
    dend_2 { pt3dadd( 103.839, 2.2034, -3.29253, 0.29 ) }
    dend_2 { pt3dadd( 104.041, 1.78819, -3.39011, 0.59 ) }
    dend_2 { pt3dadd( 104.298, 1.14119, -3.57274, 0.44 ) }
    dend_2 { pt3dadd( 104.467, 0.582272, -3.76481, 0.44 ) }
    dend_2 { pt3dadd( 104.666, -0.493436, -4.15016, 0.81 ) }
    dend_2 { pt3dadd( 104.671, -0.560833, -4.17534, 0.81 ) }
    dend_2 { pt3dadd( 104.65, -1.20268, -4.37659, 1.03 ) }
    dend_2 { pt3dadd( 104.586, -1.97516, -4.57873, 0.88 ) }
    dend_2 { pt3dadd( 104.579, -2.04446, -4.59245, 0.88 ) }
    dend_2 { pt3dadd( 104.513, -3.02398, -4.72368, 0.59 ) }
    dend_2 { pt3dadd( 104.49, -3.71782, -4.75964, 0.59 ) }
    dend_2 { pt3dadd( 104.509, -4.49746, -4.76781, 0.88 ) }
    dend_2 { pt3dadd( 104.525, -4.71247, -4.76253, 0.88 ) }
    dend_2 { pt3dadd( 104.682, -5.76496, -4.67778, 0.37 ) }
    dend_2 { pt3dadd( 104.823, -6.39583, -4.60763, 0.74 ) }
    dend_2 { pt3dadd( 105.0, -7.00006, -4.52125, 0.96 ) }
    dend_2 { pt3dadd( 105.268, -7.8417, -4.43278, 0.96 ) }
    dend_2 { pt3dadd( 105.289, -7.90899, -4.42726, 0.96 ) }
    dend_2 { pt3dadd( 105.541, -8.63704, -4.40744, 1.25 ) }
    dend_2 { pt3dadd( 105.951, -9.62232, -4.40505, 0.44 ) }
    dend_2 { pt3dadd( 106.265, -10.2291, -4.44909, 0.37 ) }
    dend_2 { pt3dadd( 106.809, -11.1188, -4.55454, 0.96 ) }
    dend_2 { pt3dadd( 107.334, -11.8689, -4.65734, 0.96 ) }
    dend_2 { pt3dadd( 108.179, -12.9244, -4.83307, 0.74 ) }
    dend_2 { pt3dadd( 108.902, -13.7232, -5.01547, 0.74 ) }
    dend_2 { pt3dadd( 109.847, -14.6598, -5.25432, 0.29 ) }
    dend_2 { pt3dadd( 110.326, -15.1157, -5.34686, 0.52 ) }
    dend_2 { pt3dadd( 111.052, -15.8194, -5.43746, 0.88 ) }
    dend_2 { pt3dadd( 111.659, -16.4338, -5.48322, 1.03 ) }
    dend_2 { pt3dadd( 112.656, -17.5418, -5.48032, 0.29 ) }
    dend_2 { pt3dadd( 113.047, -18.0392, -5.40401, 0.88 ) }
    dend_2 { pt3dadd( 113.706, -18.957, -5.02454, 0.81 ) }
    dend_2 { pt3dadd( 114.056, -19.4421, -4.6588, 0.96 ) }
    dend_2 { pt3dadd( 114.42, -19.9179, -4.09539, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 114.454, -19.9598, -4.02849, 0.59 ) }
    dend_2 { pt3dadd( 115.121, -20.722, -2.54109, 0.52 ) }
    dend_2 { pt3dadd( 115.506, -21.1523, -1.71913, 0.52 ) }
    dend_2 { pt3dadd( 115.972, -21.6761, -0.849479, 0.88 ) }
    dend_2 { pt3dadd( 116.004, -21.7152, -0.796468, 0.88 ) }
    dend_2 { pt3dadd( 116.179, -21.9576, -0.523273, 1.03 ) }
    dend_2 { pt3dadd( 116.549, -22.5559, 0.0172856, 1.03 ) }
    dend_2 { pt3dadd( 116.879, -23.2519, 0.497051, 0.44 ) }
    dend_2 { pt3dadd( 117.161, -24.0524, 0.987618, 0.44 ) }
    dend_2 { pt3dadd( 117.395, -24.8283, 1.43171, 0.44 ) }
    dend_2 { pt3dadd( 117.634, -25.6161, 1.90013, 0.52 ) }
    dend_2 { pt3dadd( 117.818, -26.188, 2.24858, 0.44 ) }
    dend_2 { pt3dadd( 118.111, -27.0263, 2.76462, 0.44 ) }
    dend_2 { pt3dadd( 118.328, -27.5976, 3.10399, 0.81 ) }
    dend_2 { pt3dadd( 118.589, -28.2128, 3.43079, 0.81 ) }
    dend_2 { pt3dadd( 118.948, -28.953, 3.80719, 0.37 ) }
    dend_2 { pt3dadd( 119.339, -29.6928, 4.14285, 0.81 ) }
    dend_2 { pt3dadd( 119.606, -30.165, 4.35168, 0.88 ) }
    dend_2 { pt3dadd( 119.815, -30.5205, 4.49852, 0.88 ) }
    dend_2 { pt3dadd( 120.16, -31.1318, 4.75898, 0.66 ) }
    dend_2 { pt3dadd( 120.669, -32.0667, 5.16252, 0.44 ) }
    dend_2 { pt3dadd( 121.122, -32.8515, 5.50622, 0.29 ) }
    dend_2 { pt3dadd( 121.522, -33.4473, 5.73777, 0.59 ) }
    dend_2 { pt3dadd( 121.934, -34.0069, 5.92449, 0.74 ) }
    dend_2 { pt3dadd( 122.026, -34.1275, 5.9575, 0.74 ) }
    dend_2 { pt3dadd( 122.476, -34.7128, 6.03985, 0.59 ) }
    dend_2 { pt3dadd( 123.144, -35.6143, 6.02144, 0.44 ) }
    dend_2 { pt3dadd( 123.84, -36.6169, 5.92316, 0.44 ) }
    dend_2 { pt3dadd( 124.157, -37.1284, 5.84903, 0.44 ) }
    dend_2 { pt3dadd( 124.541, -37.8384, 5.73424, 0.74 ) }
    dend_2 { pt3dadd( 125.003, -38.8046, 5.57153, 0.74 ) }
    dend_2 { pt3dadd( 125.43, -39.8362, 5.3942, 0.29 ) }
    dend_2 { pt3dadd( 125.593, -40.2749, 5.31722, 0.96 ) }
    dend_2 { pt3dadd( 125.773, -40.7569, 5.25143, 0.96 ) }
    dend_2 { pt3dadd( 126.063, -41.4402, 5.16911, 0.81 ) }
    dend_2 { pt3dadd( 126.096, -41.5067, 5.16528, 0.81 ) }
    dend_2 { pt3dadd( 126.386, -42.0164, 5.20022, 0.96 ) }
    dend_2 { pt3dadd( 126.857, -42.7511, 5.27071, 0.52 ) }
    dend_2 { pt3dadd( 127.208, -43.263, 5.31796, 0.52 ) }
    dend_2 { pt3dadd( 127.243, -43.3137, 5.32285, 0.52 ) }
    dend_2 { pt3dadd( 127.688, -44.0255, 5.35337, 0.44 ) }
    dend_2 { pt3dadd( 128.179, -44.8753, 5.3593, 0.59 ) }
    dend_2 { pt3dadd( 128.862, -46.1374, 5.351, 0.29 ) }
    dend_2 { pt3dadd( 129.099, -46.5926, 5.34687, 0.96 ) }
    dend_2 { pt3dadd( 129.476, -47.3496, 5.33144, 1.33 ) }
    dend_2 { pt3dadd( 130.089, -48.6316, 5.30798, 0.29 ) }
    dend_2 { pt3dadd( 130.629, -49.7804, 5.29842, 0.29 ) }
    dend_2 { pt3dadd( 130.93, -50.4304, 5.30499, 0.88 ) }
    dend_2 { pt3dadd( 130.96, -50.498, 5.31069, 0.88 ) }
    dend_2 { pt3dadd( 131.266, -51.257, 5.43005, 0.88 ) }
    dend_2 { pt3dadd( 131.681, -52.4208, 5.71603, 0.29 ) }
    dend_2 { pt3dadd( 131.95, -53.2914, 6.0222, 0.29 ) }
    dend_2 { pt3dadd( 132.016, -53.5639, 6.13924, 0.66 ) }
    dend_2 { pt3dadd( 132.197, -54.5375, 6.58486, 0.66 ) }
    dend_2 { pt3dadd( 132.309, -55.2491, 6.92765, 0.66 ) }
    dend_2 { pt3dadd( 132.4, -55.896, 7.25408, 0.96 ) }
    dend_2 { pt3dadd( 132.471, -56.5051, 7.5498, 0.74 ) }
    dend_2 { pt3dadd( 132.536, -57.1941, 7.88314, 0.52 ) }
    dend_2 { pt3dadd( 132.613, -58.056, 8.31999, 0.44 ) }
    dend_2 { pt3dadd( 132.64, -58.2678, 8.4264, 0.44 ) }
    dend_2 { pt3dadd( 132.792, -59.1597, 8.84525, 0.37 ) }
    dend_2 { pt3dadd( 133.017, -60.2277, 9.31954, 0.37 ) }
    dend_2 { pt3dadd( 133.279, -61.3686, 9.79506, 0.74 ) }
    dend_2 { pt3dadd( 133.569, -62.3189, 10.1148, 0.29 ) }
    dend_2 { pt3dadd( 133.967, -63.2433, 10.3833, 0.29 ) }
    dend_2 { pt3dadd( 134.496, -64.2104, 10.5786, 0.74 ) }
    dend_2 { pt3dadd( 134.78, -64.5968, 10.6172, 1.03 ) }
    dend_2 { pt3dadd( 134.831, -64.65, 10.6166, 1.03 ) }
    dend_2 { pt3dadd( 135.969, -65.6752, 10.5092, 0.22 ) }
    dend_2 { pt3dadd( 136.93, -66.4892, 10.3739, 0.22 ) }
    dend_2 { pt3dadd( 137.515, -66.9743, 10.2944, 0.81 ) }
    dend_2 { pt3dadd( 138.13, -67.505, 10.2378, 0.81 ) }
    dend_2 { pt3dadd( 138.184, -67.5549, 10.2333, 0.81 ) }
    dend_2 { pt3dadd( 138.979, -68.4042, 10.2053, 0.29 ) }
    dend_2 { pt3dadd( 139.499, -69.1084, 10.1578, 0.44 ) }
    dend_2 { pt3dadd( 139.558, -69.1945, 10.1396, 0.44 ) }
    dend_2 { pt3dadd( 139.926, -69.6961, 10.0012, 0.44 ) }
    dend_2 { pt3dadd( 139.974, -69.7607, 9.97185, 0.44 ) }
    dend_2 { pt3dadd( 140.502, -70.5203, 9.57482, 0.52 ) }
    dend_2 { pt3dadd( 141.305, -71.7776, 8.78201, 0.52 ) }
    dend_2 { pt3dadd( 141.82, -72.5641, 8.19007, 0.66 ) }
    dend_2 { pt3dadd( 142.185, -73.0662, 7.74124, 0.59 ) }
    dend_2 { pt3dadd( 143.074, -74.2122, 6.57597, 0.37 ) }
    dend_2 { pt3dadd( 143.475, -74.7192, 6.05296, 0.29 ) }
    dend_2 { pt3dadd( 144.298, -75.7462, 4.97481, 0.74 ) }
    dend_2 { pt3dadd( 145.249, -76.9673, 3.7698, 0.81 ) }
    dend_2 { pt3dadd( 146.425, -78.5418, 2.26489, 0.29 ) }
    dend_2 { pt3dadd( 146.84, -79.1107, 1.69377, 0.66 ) }
    dend_2 { pt3dadd( 147.365, -79.8123, 0.991762, 0.29 ) }
    dend_2 { pt3dadd( 147.946, -80.5878, 0.222133, 0.59 ) }
    dend_2 { pt3dadd( 148.299, -81.0774, -0.245908, 0.74 ) }
    dend_2 { pt3dadd( 149.099, -82.2787, -1.34154, 1.33 ) }
    dend_2 { pt3dadd( 150.376, -84.2546, -3.1099, 0.29 ) }
    dend_2 { pt3dadd( 150.621, -84.6175, -3.43592, 0.59 ) }
    dend_2 { pt3dadd( 150.798, -84.8626, -3.65412, 0.59 ) }
    dend_2 { pt3dadd( 151.708, -86.0237, -4.57749, 0.52 ) }
    dend_2 { pt3dadd( 152.158, -86.5434, -4.93143, 0.74 ) }
    dend_2 { pt3dadd( 152.512, -86.9172, -5.10257, 0.74 ) }
    dend_2 { pt3dadd( 153.25, -87.6252, -5.27612, 0.37 ) }
    dend_2 { pt3dadd( 154.368, -88.6384, -5.5212, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 155.185, -89.3419, -5.64096, 0.37 ) }
    dend_2 { pt3dadd( 155.612, -89.6964, -5.66591, 0.66 ) }
    dend_2 { pt3dadd( 156.024, -90.0353, -5.69524, 0.88 ) }
    dend_2 { pt3dadd( 156.358, -90.3137, -5.72778, 0.88 ) }
    dend_2 { pt3dadd( 157.762, -91.5023, -5.8801, 0.29 ) }
    dend_2 { pt3dadd( 158.931, -92.5434, -6.03248, 0.22 ) }
    dend_2 { pt3dadd( 159.159, -92.761, -6.06635, 0.66 ) }
    dend_2 { pt3dadd( 159.966, -93.5822, -6.19984, 0.22 ) }
    dend_2 { pt3dadd( 160.269, -93.9223, -6.27173, 0.52 ) }
    dend_2 { pt3dadd( 160.789, -94.5859, -6.42183, 0.29 ) }
    dend_2 { pt3dadd( 161.033, -94.9684, -6.49981, 0.74 ) }
    dend_2 { pt3dadd( 161.255, -95.3936, -6.60448, 0.74 ) }
    dend_2 { pt3dadd( 161.661, -96.2747, -6.84932, 0.22 ) }
    dend_2 { pt3dadd( 162.1, -97.3423, -7.15439, 0.37 ) }
    dend_2 { pt3dadd( 162.295, -97.8227, -7.32463, 0.37 ) }
    dend_2 { pt3dadd( 162.495, -98.3544, -7.53343, 0.59 ) }
    dend_2 { pt3dadd( 162.672, -98.8138, -7.70923, 0.59 ) }
    dend_2 { pt3dadd( 162.963, -99.6012, -8.00883, 0.22 ) }
    dend_2 { pt3dadd( 163.097, -99.9523, -8.13161, 0.52 ) }
    dend_2 { pt3dadd( 163.623, -101.162, -8.51202, 0.29 ) }
    dend_2 { pt3dadd( 163.915, -101.757, -8.72951, 1.11 ) }
    dend_2 { pt3dadd( 164.247, -102.38, -8.98716, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -15.2888, -149.565, -150.917, 0.29 ) }
    dend_104 { pt3dadd( -15.4636, -150.853, -151.173, 0.29 ) }
    dend_104 { pt3dadd( -15.6173, -151.652, -151.33, 0.29 ) }
    dend_104 { pt3dadd( -15.9057, -152.6, -151.407, 0.22 ) }
    dend_104 { pt3dadd( -16.1724, -153.17, -151.362, 0.74 ) }
    dend_104 { pt3dadd( -16.4196, -153.59, -151.249, 0.88 ) }
    dend_104 { pt3dadd( -16.4539, -153.647, -151.229, 0.88 ) }
    dend_104 { pt3dadd( -16.7088, -153.974, -151.06, 0.88 ) }
    dend_104 { pt3dadd( -17.4818, -154.836, -150.493, 0.29 ) }
    dend_104 { pt3dadd( -18.1551, -155.541, -149.906, 0.29 ) }
    dend_104 { pt3dadd( -18.815, -156.231, -149.244, 0.88 ) }
    dend_104 { pt3dadd( -19.2117, -156.641, -148.818, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -15.2888, -149.565, -150.917, 0.59 ) }
    dend_103 { pt3dadd( -15.9348, -150.6, -154.154, 0.59 ) }
    dend_103 { pt3dadd( -16.11, -150.881, -154.99, 0.37 ) }
    dend_103 { pt3dadd( -16.3643, -151.211, -155.974, 0.37 ) }
    dend_103 { pt3dadd( -16.724, -151.653, -157.235, 0.96 ) }
    dend_103 { pt3dadd( -17.0712, -152.092, -158.406, 1.33 ) }
    dend_103 { pt3dadd( -17.7774, -153.048, -160.787, 0.59 ) }
    dend_103 { pt3dadd( -17.943, -153.331, -161.343, 0.29 ) }
    dend_103 { pt3dadd( -18.1611, -153.773, -162.206, 0.29 ) }
    dend_103 { pt3dadd( -18.2577, -154.083, -162.827, 0.88 ) }
    dend_103 { pt3dadd( -18.2963, -154.278, -163.239, 0.88 ) }
    dend_103 { pt3dadd( -18.3413, -154.688, -164.117, 0.66 ) }
    dend_103 { pt3dadd( -18.3489, -155.21, -165.223, 0.88 ) }
    dend_103 { pt3dadd( -18.3111, -156.029, -166.917, 1.4 ) }
    dend_103 { pt3dadd( -18.1995, -157.614, -170.21, 0.59 ) }
    dend_103 { pt3dadd( -18.1924, -158.311, -171.738, 0.59 ) }
    dend_103 { pt3dadd( -18.193, -158.58, -172.349, 0.52 ) }
    dend_103 { pt3dadd( -18.1883, -158.759, -172.759, 1.03 ) }
    dend_103 { pt3dadd( -18.1887, -159.014, -173.335, 0.88 ) }
    dend_103 { pt3dadd( -18.25, -159.929, -175.389, 0.22 ) }
    dend_103 { pt3dadd( -18.3857, -160.493, -176.644, 0.59 ) }
    dend_103 { pt3dadd( -18.6139, -161.072, -178.117, 0.74 ) }
    dend_103 { pt3dadd( -18.8618, -161.578, -179.559, 0.44 ) }
    dend_103 { pt3dadd( -19.0286, -161.865, -180.399, 0.74 ) }
    dend_103 { pt3dadd( -19.3539, -162.42, -181.906, 1.11 ) }
    dend_103 { pt3dadd( -19.5406, -162.733, -182.633, 0.96 ) }
    dend_103 { pt3dadd( -20.2889, -163.899, -185.004, 0.74 ) }
    dend_103 { pt3dadd( -20.3087, -163.924, -185.05, 0.74 ) }
    dend_103 { pt3dadd( -20.6769, -164.341, -185.779, 0.74 ) }
    dend_103 { pt3dadd( -21.2042, -164.988, -186.795, 0.74 ) }
    dend_103 { pt3dadd( -21.7522, -165.701, -187.734, 0.37 ) }
    dend_103 { pt3dadd( -22.0347, -166.109, -188.225, 1.03 ) }
    dend_103 { pt3dadd( -22.3202, -166.56, -188.67, 1.18 ) }
    dend_103 { pt3dadd( -23.1094, -167.821, -189.931, 0.29 ) }
    dend_103 { pt3dadd( -23.3756, -168.24, -190.358, 0.59 ) }
    dend_103 { pt3dadd( -23.5966, -168.58, -190.675, 0.59 ) }
    dend_103 { pt3dadd( -23.9098, -169.115, -191.08, 0.44 ) }
    dend_103 { pt3dadd( -24.1473, -169.555, -191.354, 0.29 ) }
    dend_103 { pt3dadd( -24.1744, -169.605, -191.379, 0.29 ) }
    dend_103 { pt3dadd( -24.4056, -169.997, -191.536, 0.59 ) }
    dend_103 { pt3dadd( -24.5982, -170.419, -191.857, 0.59 ) }
    dend_103 { pt3dadd( -24.6879, -170.812, -192.292, 0.44 ) }
    dend_103 { pt3dadd( -24.6878, -171.216, -192.856, 0.29 ) }
    dend_103 { pt3dadd( -24.6293, -171.677, -193.639, 0.88 ) }
    dend_103 { pt3dadd( -24.5125, -172.173, -194.609, 1.11 ) }
    dend_103 { pt3dadd( -24.1683, -173.286, -197.024, 0.74 ) }
    dend_103 { pt3dadd( -23.9674, -173.913, -198.425, 0.59 ) }
    dend_103 { pt3dadd( -23.7489, -174.617, -200.021, 0.29 ) }
    dend_103 { pt3dadd( -23.5529, -175.377, -201.746, 0.74 ) }
    dend_103 { pt3dadd( -23.3804, -176.397, -204.014, 1.03 ) }
    dend_103 { pt3dadd( -23.3616, -177.422, -206.166, 0.52 ) }
    dend_103 { pt3dadd( -23.4522, -177.821, -206.878, 0.44 ) }
    dend_103 { pt3dadd( -23.5738, -178.097, -207.296, 0.88 ) }
    dend_103 { pt3dadd( -23.9148, -178.623, -207.913, 1.11 ) }
    dend_103 { pt3dadd( -24.1788, -178.932, -208.152, 1.11 ) }
    dend_103 { pt3dadd( -24.7678, -179.497, -208.408, 0.59 ) }
    dend_103 { pt3dadd( -25.4289, -180.103, -208.587, 0.44 ) }
    dend_103 { pt3dadd( -25.8005, -180.467, -208.707, 0.66 ) }
    dend_103 { pt3dadd( -26.4365, -181.177, -208.944, 0.59 ) }
    dend_103 { pt3dadd( -26.8342, -181.747, -209.327, 0.37 ) }
    dend_103 { pt3dadd( -27.1345, -182.247, -209.806, 0.44 ) }
    dend_103 { pt3dadd( -27.4581, -182.85, -210.531, 0.66 ) }
    dend_103 { pt3dadd( -27.6799, -183.312, -211.166, 0.81 ) }
    dend_103 { pt3dadd( -27.8673, -183.746, -211.816, 0.88 ) }
    dend_103 { pt3dadd( -28.8164, -185.869, -215.273, 0.52 ) }
    dend_103 { pt3dadd( -28.9824, -186.176, -215.828, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -29.0936, -186.338, -216.157, 0.59 ) }
    dend_103 { pt3dadd( -29.2576, -186.5, -216.518, 0.59 ) }
    dend_103 { pt3dadd( -29.7582, -186.818, -217.232, 0.37 ) }
    dend_103 { pt3dadd( -30.3802, -187.057, -217.75, 0.37 ) }
    dend_103 { pt3dadd( -31.1575, -187.232, -217.981, 0.37 ) }
    dend_103 { pt3dadd( -31.2239, -187.246, -218.001, 0.37 ) }
    dend_103 { pt3dadd( -32.2292, -187.424, -218.284, 0.22 ) }
    dend_103 { pt3dadd( -32.6355, -187.467, -218.385, 0.37 ) }
    dend_103 { pt3dadd( -33.0242, -187.468, -218.455, 0.37 ) }
    dend_103 { pt3dadd( -33.9338, -187.415, -218.625, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 16.2319, -78.9925, -46.1735, 0.29 ) }
    dend_101 { pt3dadd( 17.0892, -79.3155, -46.4949, 0.29 ) }
    dend_101 { pt3dadd( 17.4676, -79.4915, -46.6402, 0.37 ) }
    dend_101 { pt3dadd( 17.5287, -79.5256, -46.661, 0.37 ) }
    dend_101 { pt3dadd( 18.2535, -80.0326, -46.9225, 0.22 ) }
    dend_101 { pt3dadd( 18.3155, -80.0786, -46.945, 0.22 ) }
    dend_101 { pt3dadd( 18.7115, -80.3873, -47.0847, 0.52 ) }
    dend_101 { pt3dadd( 18.7599, -80.4339, -47.1021, 0.52 ) }
    dend_101 { pt3dadd( 19.1565, -80.8427, -47.2077, 0.52 ) }
    dend_101 { pt3dadd( 19.858, -81.5575, -47.3378, 0.22 ) }
    dend_101 { pt3dadd( 19.9074, -81.6067, -47.3436, 0.22 ) }
    dend_101 { pt3dadd( 20.13, -81.8302, -47.3695, 0.37 ) }
    dend_101 { pt3dadd( 20.5266, -82.2282, -47.4146, 0.22 ) }
    dend_101 { pt3dadd( 21.3295, -83.0343, -47.49, 0.96 ) }
    dend_101 { pt3dadd( 21.3795, -83.0859, -47.4922, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 16.2319, -78.9925, -46.1735, 0.37 ) }
    dend_100 { pt3dadd( 17.2831, -80.668, -47.5949, 0.37 ) }
    dend_100 { pt3dadd( 17.924, -81.8842, -48.5826, 0.66 ) }
    dend_100 { pt3dadd( 18.2045, -82.4945, -49.0496, 0.88 ) }
    dend_100 { pt3dadd( 18.4728, -83.1727, -49.5328, 1.18 ) }
    dend_100 { pt3dadd( 19.1993, -85.3278, -50.9654, 0.44 ) }
    dend_100 { pt3dadd( 19.3747, -85.9165, -51.3258, 0.29 ) }
    dend_100 { pt3dadd( 19.5416, -86.8525, -51.8141, 0.88 ) }
    dend_100 { pt3dadd( 19.606, -87.4, -52.05, 1.11 ) }
    dend_100 { pt3dadd( 19.6784, -88.1036, -52.2916, 0.66 ) }
    dend_100 { pt3dadd( 19.7607, -89.0284, -52.4911, 0.37 ) }
    dend_100 { pt3dadd( 19.8619, -89.8847, -52.4989, 0.52 ) }
    dend_100 { pt3dadd( 19.8975, -90.0506, -52.4863, 0.52 ) }
    dend_100 { pt3dadd( 20.2367, -91.0548, -52.3536, 0.59 ) }
    dend_100 { pt3dadd( 20.5025, -91.6912, -52.2455, 0.66 ) }
    dend_100 { pt3dadd( 20.5679, -91.83, -52.2083, 0.66 ) }
    dend_100 { pt3dadd( 20.9428, -92.6297, -51.9509, 0.37 ) }
    dend_100 { pt3dadd( 21.3028, -93.5414, -51.4934, 0.37 ) }
    dend_100 { pt3dadd( 21.5546, -94.2329, -51.0787, 0.37 ) }
    dend_100 { pt3dadd( 21.8123, -94.9582, -50.6041, 0.96 ) }
    dend_100 { pt3dadd( 22.2271, -96.0498, -49.843, 1.25 ) }
    dend_100 { pt3dadd( 22.639, -97.0031, -49.174, 0.96 ) }
    dend_100 { pt3dadd( 23.6901, -99.3003, -47.4363, 0.52 ) }
    dend_100 { pt3dadd( 24.1373, -100.237, -46.6971, 0.59 ) }
    dend_100 { pt3dadd( 24.4163, -100.793, -46.2498, 0.74 ) }
    dend_100 { pt3dadd( 24.7868, -101.485, -45.7048, 0.74 ) }
    dend_100 { pt3dadd( 25.4266, -102.579, -44.9368, 0.29 ) }
    dend_100 { pt3dadd( 26.0368, -103.54, -44.3284, 0.66 ) }
    dend_100 { pt3dadd( 26.0797, -103.609, -44.3009, 0.66 ) }
    dend_100 { pt3dadd( 26.3901, -104.223, -44.1055, 0.29 ) }
    dend_100 { pt3dadd( 26.6483, -104.882, -43.95, 0.74 ) }
    dend_100 { pt3dadd( 26.8575, -105.596, -43.8469, 0.88 ) }
    dend_100 { pt3dadd( 26.8794, -105.677, -43.8383, 0.88 ) }
    dend_100 { pt3dadd( 27.1599, -106.593, -43.7771, 0.37 ) }
    dend_100 { pt3dadd( 27.4933, -107.571, -43.6898, 0.59 ) }
    dend_100 { pt3dadd( 27.707, -108.138, -43.6275, 0.88 ) }
    dend_100 { pt3dadd( 28.106, -109.107, -43.5067, 0.29 ) }
    dend_100 { pt3dadd( 28.4316, -109.854, -43.3781, 0.22 ) }
    dend_100 { pt3dadd( 28.5855, -110.197, -43.3088, 0.81 ) }
    dend_100 { pt3dadd( 28.8517, -110.76, -43.1755, 1.18 ) }
    dend_100 { pt3dadd( 28.8904, -110.836, -43.1558, 1.18 ) }
    dend_100 { pt3dadd( 29.3344, -111.692, -42.9163, 1.03 ) }
    dend_100 { pt3dadd( 29.8656, -112.886, -42.4916, 0.29 ) }
    dend_100 { pt3dadd( 30.2423, -114.008, -42.0662, 0.22 ) }
    dend_100 { pt3dadd( 30.2655, -114.119, -42.0185, 0.22 ) }
    dend_100 { pt3dadd( 30.3727, -114.963, -41.6372, 0.29 ) }
    dend_100 { pt3dadd( 30.4457, -115.685, -41.309, 1.18 ) }
    dend_100 { pt3dadd( 30.6033, -117.168, -40.581, 0.74 ) }
    dend_100 { pt3dadd( 30.6947, -117.929, -40.202, 0.52 ) }
    dend_100 { pt3dadd( 30.8381, -118.899, -39.6547, 0.29 ) }
    dend_100 { pt3dadd( 30.9616, -119.7, -39.141, 0.52 ) }
    dend_100 { pt3dadd( 31.1027, -120.51, -38.5425, 0.96 ) }
    dend_100 { pt3dadd( 31.3695, -121.59, -37.7204, 1.18 ) }
    dend_100 { pt3dadd( 31.6819, -122.604, -36.8902, 1.03 ) }
    dend_100 { pt3dadd( 32.1178, -123.967, -35.7183, 0.74 ) }
    dend_100 { pt3dadd( 32.5521, -125.431, -34.4748, 0.66 ) }
    dend_100 { pt3dadd( 32.7673, -126.339, -33.7458, 1.03 ) }
    dend_100 { pt3dadd( 33.007, -127.611, -32.8242, 0.88 ) }
    dend_100 { pt3dadd( 33.2507, -129.079, -31.9276, 0.74 ) }
    dend_100 { pt3dadd( 33.4354, -130.195, -31.3887, 0.74 ) }
    dend_100 { pt3dadd( 33.6146, -131.241, -31.0428, 0.74 ) }
    dend_100 { pt3dadd( 33.8345, -132.503, -30.7731, 0.52 ) }
    dend_100 { pt3dadd( 34.0161, -133.524, -30.6185, 0.52 ) }
    dend_100 { pt3dadd( 34.2142, -134.595, -30.4977, 0.44 ) }
    dend_100 { pt3dadd( 34.431, -135.617, -30.4365, 0.74 ) }
    dend_100 { pt3dadd( 34.6181, -136.368, -30.3924, 0.96 ) }
    dend_100 { pt3dadd( 34.8059, -137.049, -30.3488, 0.96 ) }
    dend_100 { pt3dadd( 35.2123, -138.446, -30.2579, 0.37 ) }
    dend_100 { pt3dadd( 35.5898, -139.617, -30.1817, 0.37 ) }
    dend_100 { pt3dadd( 35.6135, -139.684, -30.1771, 0.37 ) }
    dend_100 { pt3dadd( 36.0016, -140.557, -30.1102, 0.66 ) }
    dend_100 { pt3dadd( 36.3117, -141.207, -30.0613, 0.88 ) }
    dend_100 { pt3dadd( 36.7451, -142.034, -30.006, 0.59 ) }
    dend_100 { pt3dadd( 37.2039, -142.807, -29.9777, 0.22 ) }
    dend_100 { pt3dadd( 37.2564, -142.877, -29.9726, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 37.9408, -143.69, -29.893, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 4.1872, -159.074, -24.4898, 0.52 ) }
    dend_96 { pt3dadd( 5.57286, -158.822, -25.3931, 0.52 ) }
    dend_96 { pt3dadd( 6.26126, -158.761, -25.8802, 0.52 ) }
    dend_96 { pt3dadd( 6.96859, -158.764, -26.5101, 0.66 ) }
    dend_96 { pt3dadd( 7.67179, -158.82, -27.235, 0.59 ) }
    dend_96 { pt3dadd( 8.51982, -158.942, -28.1582, 0.29 ) }
    dend_96 { pt3dadd( 8.76364, -159.002, -28.4644, 0.59 ) }
    dend_96 { pt3dadd( 9.01435, -159.11, -28.8999, 0.59 ) }
    dend_96 { pt3dadd( 9.67048, -159.478, -30.1921, 0.29 ) }
    dend_96 { pt3dadd( 10.0203, -159.718, -30.9291, 0.88 ) }
    dend_96 { pt3dadd( 10.1602, -159.827, -31.2587, 0.88 ) }
    dend_96 { pt3dadd( 10.7695, -160.287, -33.1233, 0.29 ) }
    dend_96 { pt3dadd( 11.0979, -160.5, -34.3876, 0.59 ) }
    dend_96 { pt3dadd( 11.1971, -160.546, -34.9753, 0.44 ) }
    dend_96 { pt3dadd( 11.2035, -160.547, -35.0373, 0.44 ) }
    dend_96 { pt3dadd( 11.2859, -160.501, -36.4578, 0.44 ) }
    dend_96 { pt3dadd( 11.3507, -160.288, -38.9623, 0.29 ) }
    dend_96 { pt3dadd( 11.3521, -160.215, -39.479, 0.29 ) }
    dend_96 { pt3dadd( 11.4045, -159.809, -41.6943, 0.29 ) }
    dend_96 { pt3dadd( 11.4043, -159.797, -41.7642, 0.29 ) }
    dend_96 { pt3dadd( 11.4051, -159.785, -41.8273, 0.44 ) }
    dend_96 { pt3dadd( 11.4087, -159.763, -41.9513, 0.44 ) }
    dend_96 { pt3dadd( 11.438, -159.592, -42.8915, 0.29 ) }
    dend_96 { pt3dadd( 11.4619, -159.443, -43.6808, 0.81 ) }
    dend_96 { pt3dadd( 11.651, -158.234, -49.9226, 0.29 ) }
    dend_96 { pt3dadd( 11.6871, -157.971, -51.2631, 0.22 ) }
    dend_96 { pt3dadd( 11.7167, -157.709, -52.6851, 0.44 ) }
    dend_96 { pt3dadd( 11.7293, -157.269, -55.4662, 0.29 ) }
    dend_96 { pt3dadd( 11.7222, -157.194, -56.0132, 0.88 ) }
    dend_96 { pt3dadd( 11.7157, -157.163, -56.4005, 0.88 ) }
    dend_96 { pt3dadd( 11.7169, -157.16, -56.4628, 0.88 ) }
    dend_96 { pt3dadd( 11.7218, -157.111, -59.5797, 0.29 ) }
    dend_96 { pt3dadd( 11.6487, -157.062, -62.6597, 0.52 ) }
    dend_96 { pt3dadd( 11.6461, -157.061, -62.7214, 0.52 ) }
    dend_96 { pt3dadd( 11.4499, -156.977, -66.7658, 0.22 ) }
    dend_96 { pt3dadd( 11.3974, -156.946, -67.7075, 0.37 ) }
    dend_96 { pt3dadd( 11.2848, -156.868, -69.5233, 0.96 ) }
    dend_96 { pt3dadd( 11.1065, -156.698, -71.8991, 0.22 ) }
    dend_96 { pt3dadd( 11.0739, -156.653, -72.2924, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 4.1872, -159.074, -24.4898, 0.81 ) }
    dend_95 { pt3dadd( 4.24598, -159.701, -24.6587, 0.81 ) }
    dend_95 { pt3dadd( 4.32092, -160.285, -24.8048, 1.03 ) }
    dend_95 { pt3dadd( 4.45916, -161.146, -25.0077, 0.96 ) }
    dend_95 { pt3dadd( 4.61229, -161.912, -25.1798, 0.74 ) }
    dend_95 { pt3dadd( 4.7854, -162.582, -25.2507, 0.29 ) }
    dend_95 { pt3dadd( 4.90483, -162.997, -25.2598, 0.29 ) }
    dend_95 { pt3dadd( 5.00781, -163.303, -25.2346, 0.52 ) }
    dend_95 { pt3dadd( 5.09969, -163.579, -25.1743, 0.52 ) }
    dend_95 { pt3dadd( 5.21257, -163.936, -25.0531, 0.52 ) }
    dend_95 { pt3dadd( 5.57647, -165.175, -24.6003, 0.29 ) }
    dend_95 { pt3dadd( 5.73284, -165.73, -24.4129, 0.52 ) }
    dend_95 { pt3dadd( 5.83431, -166.066, -24.3021, 0.81 ) }
    dend_95 { pt3dadd( 6.05903, -166.701, -24.0869, 0.88 ) }
    dend_95 { pt3dadd( 6.28596, -167.196, -23.934, 1.18 ) }
    dend_95 { pt3dadd( 6.6256, -167.823, -23.7619, 1.4 ) }
    dend_95 { pt3dadd( 7.19662, -168.711, -23.5777, 0.52 ) }
    dend_95 { pt3dadd( 7.78894, -169.486, -23.4344, 0.52 ) }
    dend_95 { pt3dadd( 8.55008, -170.372, -23.3073, 0.52 ) }
    dend_95 { pt3dadd( 9.36342, -171.256, -23.2194, 0.74 ) }
    dend_95 { pt3dadd( 9.4119, -171.308, -23.2157, 0.74 ) }
    dend_95 { pt3dadd( 9.95146, -171.944, -23.2123, 0.29 ) }
    dend_95 { pt3dadd( 10.4853, -172.692, -23.2592, 0.29 ) }
    dend_95 { pt3dadd( 10.9824, -173.539, -23.3781, 0.66 ) }
    dend_95 { pt3dadd( 11.2086, -174.019, -23.4674, 0.88 ) }
    dend_95 { pt3dadd( 11.4551, -174.686, -23.5893, 0.88 ) }
    dend_95 { pt3dadd( 11.8015, -175.718, -23.8206, 0.29 ) }
    dend_95 { pt3dadd( 11.9405, -176.152, -23.9369, 0.88 ) }
    dend_95 { pt3dadd( 11.9592, -176.217, -23.9621, 0.88 ) }
    dend_95 { pt3dadd( 12.0923, -176.662, -24.1764, 1.03 ) }
    dend_95 { pt3dadd( 12.1155, -176.732, -24.2132, 1.03 ) }
    dend_95 { pt3dadd( 12.4815, -177.774, -24.7486, 0.74 ) }
    dend_95 { pt3dadd( 12.8035, -178.517, -25.1115, 0.88 ) }
    dend_95 { pt3dadd( 13.2827, -179.506, -25.5761, 1.18 ) }
    dend_95 { pt3dadd( 13.5297, -179.991, -25.7822, 1.18 ) }
    dend_95 { pt3dadd( 13.8307, -180.551, -25.9917, 0.66 ) }
    dend_95 { pt3dadd( 14.254, -181.295, -26.2241, 0.29 ) }
    dend_95 { pt3dadd( 14.6996, -182.029, -26.3906, 0.29 ) }
    dend_95 { pt3dadd( 15.008, -182.529, -26.4724, 0.59 ) }
    dend_95 { pt3dadd( 15.4033, -183.153, -26.5287, 0.74 ) }
    dend_95 { pt3dadd( 15.7922, -183.782, -26.5737, 0.74 ) }
    dend_95 { pt3dadd( 16.0188, -184.165, -26.5495, 0.74 ) }
    dend_95 { pt3dadd( 16.2294, -184.573, -26.479, 0.88 ) }
    dend_95 { pt3dadd( 16.5485, -185.241, -26.3121, 0.81 ) }
    dend_95 { pt3dadd( 16.9555, -186.052, -26.0652, 0.81 ) }
    dend_95 { pt3dadd( 17.3781, -186.837, -25.7847, 0.59 ) }
    dend_95 { pt3dadd( 18.191, -188.235, -25.2368, 0.37 ) }
    dend_95 { pt3dadd( 18.5777, -188.842, -24.9826, 0.52 ) }
    dend_95 { pt3dadd( 18.927, -189.323, -24.7774, 0.44 ) }
    dend_95 { pt3dadd( 19.2806, -189.73, -24.6109, 0.52 ) }
    dend_95 { pt3dadd( 19.387, -189.836, -24.5752, 0.52 ) }
    dend_95 { pt3dadd( 19.8007, -190.208, -24.5372, 0.37 ) }
    dend_95 { pt3dadd( 19.9118, -190.313, -24.5556, 0.37 ) }
    dend_95 { pt3dadd( 20.3201, -190.778, -24.6318, 0.81 ) }
    dend_95 { pt3dadd( 20.5356, -191.161, -24.7002, 0.96 ) }
    dend_95 { pt3dadd( 20.5557, -191.218, -24.7154, 0.96 ) }
    dend_95 { pt3dadd( 20.6277, -191.577, -24.8241, 0.81 ) }
    dend_95 { pt3dadd( 20.7009, -192.324, -25.1019, 0.52 ) }
    dend_95 { pt3dadd( 20.7314, -192.829, -25.2988, 0.52 ) }
    dend_95 { pt3dadd( 20.7775, -193.714, -25.6517, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( 20.8353, -194.623, -26.0065, 0.74 ) }
    dend_95 { pt3dadd( 20.8829, -195.249, -26.2452, 0.88 ) }
    dend_95 { pt3dadd( 20.9852, -196.151, -26.5339, 0.52 ) }
    dend_95 { pt3dadd( 21.1243, -197.056, -26.7535, 0.52 ) }
    dend_95 { pt3dadd( 21.2532, -197.715, -26.8432, 0.74 ) }
    dend_95 { pt3dadd( 21.4091, -198.341, -26.8611, 0.44 ) }
    dend_95 { pt3dadd( 21.45, -198.485, -26.8525, 0.44 ) }
    dend_95 { pt3dadd( 21.7629, -199.626, -26.7197, 0.44 ) }
    dend_95 { pt3dadd( 21.9191, -200.312, -26.5857, 0.22 ) }
    dend_95 { pt3dadd( 22.0057, -200.978, -26.4373, 0.22 ) }
    dend_95 { pt3dadd( 22.0148, -201.477, -26.3571, 0.74 ) }
    dend_95 { pt3dadd( 22.0106, -201.547, -26.3515, 0.74 ) }
    dend_95 { pt3dadd( 21.944, -202.118, -26.3518, 0.96 ) }
    dend_95 { pt3dadd( 21.9314, -202.189, -26.3591, 0.96 ) }
    dend_95 { pt3dadd( 21.8394, -202.858, -26.4451, 0.96 ) }
    dend_95 { pt3dadd( 21.7951, -203.991, -26.6611, 0.44 ) }
    dend_95 { pt3dadd( 21.8219, -204.58, -26.7308, 0.52 ) }
    dend_95 { pt3dadd( 21.8292, -204.649, -26.7356, 0.52 ) }
    dend_95 { pt3dadd( 21.9048, -205.226, -26.7692, 0.81 ) }
    dend_95 { pt3dadd( 22.0319, -206.022, -26.829, 0.74 ) }
    dend_95 { pt3dadd( 22.2481, -207.156, -26.9182, 0.37 ) }
    dend_95 { pt3dadd( 22.5093, -208.599, -27.0033, 0.37 ) }
    dend_95 { pt3dadd( 22.5945, -209.137, -27.0083, 1.18 ) }
    dend_95 { pt3dadd( 22.7337, -210.127, -26.9869, 0.96 ) }
    dend_95 { pt3dadd( 22.8657, -211.191, -26.9367, 0.52 ) }
    dend_95 { pt3dadd( 22.9921, -212.411, -26.8504, 0.52 ) }
    dend_95 { pt3dadd( 23.1256, -213.781, -26.7119, 0.74 ) }
    dend_95 { pt3dadd( 23.2929, -215.212, -26.5844, 0.81 ) }
    dend_95 { pt3dadd( 23.3043, -215.29, -26.5732, 0.81 ) }
    dend_95 { pt3dadd( 23.4177, -215.915, -26.4182, 1.03 ) }
    dend_95 { pt3dadd( 23.4328, -215.992, -26.3927, 1.03 ) }
    dend_95 { pt3dadd( 23.5993, -216.695, -26.1354, 0.52 ) }
    dend_95 { pt3dadd( 23.7825, -217.365, -25.9065, 0.37 ) }
    dend_95 { pt3dadd( 23.9717, -218.009, -25.7339, 0.88 ) }
    dend_95 { pt3dadd( 24.1744, -218.705, -25.5586, 0.96 ) }
    dend_95 { pt3dadd( 24.341, -219.242, -25.4275, 0.74 ) }
    dend_95 { pt3dadd( 24.5517, -219.873, -25.2939, 0.22 ) }
    dend_95 { pt3dadd( 24.7974, -220.503, -25.1695, 0.22 ) }
    dend_95 { pt3dadd( 25.07, -221.021, -25.0822, 0.74 ) }
    dend_95 { pt3dadd( 25.3175, -221.366, -25.0365, 1.03 ) }
    dend_95 { pt3dadd( 25.6779, -221.756, -25.0016, 1.03 ) }
    dend_95 { pt3dadd( 26.2146, -222.205, -24.9344, 0.59 ) }
    dend_95 { pt3dadd( 27.0267, -222.786, -24.8224, 0.37 ) }
    dend_95 { pt3dadd( 27.8564, -223.346, -24.6975, 0.22 ) }
    dend_95 { pt3dadd( 28.461, -223.776, -24.5992, 0.81 ) }
    dend_95 { pt3dadd( 28.9287, -224.138, -24.5256, 0.81 ) }
    dend_95 { pt3dadd( 29.7171, -224.835, -24.4122, 0.29 ) }
    dend_95 { pt3dadd( 30.0921, -225.2, -24.3668, 0.59 ) }
    dend_95 { pt3dadd( 30.4525, -225.594, -24.3478, 0.74 ) }
    dend_95 { pt3dadd( 30.9541, -226.231, -24.3414, 0.74 ) }
    dend_95 { pt3dadd( 31.3757, -226.825, -24.3721, 0.52 ) }
    dend_95 { pt3dadd( 32.0314, -227.798, -24.5685, 0.22 ) }
    dend_95 { pt3dadd( 32.3503, -228.309, -24.7332, 0.22 ) }
    dend_95 { pt3dadd( 32.5693, -228.674, -24.8653, 0.74 ) }
    dend_95 { pt3dadd( 32.8406, -229.163, -25.0578, 0.74 ) }
    dend_95 { pt3dadd( 33.4464, -230.342, -25.5511, 0.22 ) }
    dend_95 { pt3dadd( 34.008, -231.624, -26.085, 0.81 ) }
    dend_95 { pt3dadd( 34.2076, -232.166, -26.2933, 0.81 ) }
    dend_95 { pt3dadd( 34.5151, -233.109, -26.6048, 0.22 ) }
    dend_95 { pt3dadd( 34.7497, -233.887, -26.8082, 0.22 ) }
    dend_95 { pt3dadd( 34.8458, -234.225, -26.8764, 0.81 ) }
    dend_95 { pt3dadd( 34.9809, -234.729, -26.9411, 1.03 ) }
    dend_95 { pt3dadd( 35.3035, -235.908, -27.0007, 0.29 ) }
    dend_95 { pt3dadd( 35.4238, -236.336, -27.0237, 0.29 ) }
    dend_95 { pt3dadd( 35.693, -237.319, -27.0776, 0.29 ) }
    dend_95 { pt3dadd( 35.9193, -238.166, -27.1052, 0.15 ) }
    dend_95 { pt3dadd( 36.0042, -238.508, -27.1151, 0.52 ) }
    dend_95 { pt3dadd( 36.0772, -238.794, -27.1238, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -24.399, -73.8795, 7.29555, 0.96 ) }
    dend_67 { pt3dadd( -24.4243, -74.5267, 6.9046, 0.96 ) }
    dend_67 { pt3dadd( -24.4593, -75.2123, 6.51836, 0.96 ) }
    dend_67 { pt3dadd( -24.5071, -75.982, 6.12452, 0.96 ) }
    dend_67 { pt3dadd( -24.5643, -76.7813, 5.75071, 0.81 ) }
    dend_67 { pt3dadd( -24.6468, -77.5825, 5.37786, 0.66 ) }
    dend_67 { pt3dadd( -24.73, -78.2603, 5.07474, 0.66 ) }
    dend_67 { pt3dadd( -24.7416, -78.3376, 5.04431, 0.66 ) }
    dend_67 { pt3dadd( -24.826, -78.8439, 4.85177, 0.88 ) }
    dend_67 { pt3dadd( -24.8762, -79.1787, 4.72392, 1.03 ) }
    dend_67 { pt3dadd( -24.9433, -80.0329, 4.33375, 0.74 ) }
    dend_67 { pt3dadd( -24.9354, -80.5469, 4.05538, 0.74 ) }
    dend_67 { pt3dadd( -24.8752, -81.0914, 3.71477, 0.74 ) }
    dend_67 { pt3dadd( -24.7489, -81.7659, 3.26021, 0.96 ) }
    dend_67 { pt3dadd( -24.639, -82.1639, 2.97427, 1.03 ) }
    dend_67 { pt3dadd( -24.4664, -82.6986, 2.60598, 1.03 ) }
    dend_67 { pt3dadd( -24.2428, -83.3772, 2.19933, 0.88 ) }
    dend_67 { pt3dadd( -24.1196, -83.8352, 1.96958, 0.88 ) }
    dend_67 { pt3dadd( -24.1019, -83.9823, 1.92256, 0.88 ) }
    dend_67 { pt3dadd( -24.1211, -84.358, 1.92293, 0.59 ) }
    dend_67 { pt3dadd( -24.323, -85.0988, 2.12197, 0.52 ) }
    dend_67 { pt3dadd( -24.5885, -85.6607, 2.39793, 0.74 ) }
    dend_67 { pt3dadd( -24.8126, -86.0301, 2.67536, 0.66 ) }
    dend_67 { pt3dadd( -25.1251, -86.4812, 3.08003, 0.52 ) }
    dend_67 { pt3dadd( -25.6065, -87.147, 3.75096, 0.52 ) }
    dend_67 { pt3dadd( -25.8444, -87.4702, 4.09886, 0.74 ) }
    dend_67 { pt3dadd( -26.1515, -87.8895, 4.54746, 1.03 ) }
    dend_67 { pt3dadd( -26.5443, -88.454, 5.09553, 1.03 ) }
    dend_67 { pt3dadd( -26.8228, -88.8715, 5.45238, 1.03 ) }
    dend_67 { pt3dadd( -27.2186, -89.502, 5.90711, 0.74 ) }
    dend_67 { pt3dadd( -27.4878, -89.9368, 6.14879, 0.66 ) }
    dend_67 { pt3dadd( -27.76, -90.4365, 6.39086, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -27.9704, -90.9055, 6.5858, 0.52 ) }
    dend_67 { pt3dadd( -27.9847, -90.9426, 6.59833, 0.52 ) }
    dend_67 { pt3dadd( -28.1034, -91.3416, 6.73498, 0.66 ) }
    dend_67 { pt3dadd( -28.1905, -91.7404, 6.86743, 0.81 ) }
    dend_67 { pt3dadd( -28.2882, -92.2962, 7.07522, 0.52 ) }
    dend_67 { pt3dadd( -28.4251, -92.9785, 7.30969, 0.52 ) }
    dend_67 { pt3dadd( -28.4693, -93.1145, 7.33951, 0.81 ) }
    dend_67 { pt3dadd( -28.6853, -93.5452, 7.37931, 0.81 ) }
    dend_67 { pt3dadd( -28.9424, -93.8865, 7.37093, 0.96 ) }
    dend_67 { pt3dadd( -29.4051, -94.3079, 7.30222, 1.03 ) }
    dend_67 { pt3dadd( -30.1051, -94.7555, 7.19831, 1.18 ) }
    dend_67 { pt3dadd( -30.9829, -95.2086, 7.08531, 0.81 ) }
    dend_67 { pt3dadd( -31.4139, -95.4016, 7.03245, 0.88 ) }
    dend_67 { pt3dadd( -31.9501, -95.6103, 6.98163, 1.18 ) }
    dend_67 { pt3dadd( -32.5026, -95.8199, 6.9527, 1.55 ) }
    dend_67 { pt3dadd( -33.2637, -96.142, 6.97895, 0.66 ) }
    dend_67 { pt3dadd( -33.5854, -96.3193, 7.03333, 0.66 ) }
    dend_67 { pt3dadd( -33.8495, -96.5277, 7.11812, 0.52 ) }
    dend_67 { pt3dadd( -34.2771, -96.9818, 7.29872, 0.52 ) }
    dend_67 { pt3dadd( -34.582, -97.4218, 7.45962, 0.37 ) }
    dend_67 { pt3dadd( -34.8672, -98.0262, 7.68943, 0.37 ) }
    dend_67 { pt3dadd( -35.0174, -98.4773, 7.85119, 0.74 ) }
    dend_67 { pt3dadd( -35.1572, -99.0086, 8.05249, 1.25 ) }
    dend_67 { pt3dadd( -35.1654, -99.0404, 8.06567, 1.25 ) }
    dend_67 { pt3dadd( -35.297, -99.4998, 8.26677, 1.18 ) }
    dend_67 { pt3dadd( -35.5274, -100.157, 8.57478, 1.03 ) }
    dend_67 { pt3dadd( -35.7042, -100.552, 8.76195, 0.66 ) }
    dend_67 { pt3dadd( -35.9415, -101.006, 8.97349, 0.37 ) }
    dend_67 { pt3dadd( -36.2817, -101.578, 9.21989, 0.37 ) }
    dend_67 { pt3dadd( -36.5341, -101.963, 9.37476, 0.44 ) }
    dend_67 { pt3dadd( -36.5618, -102.0, 9.38878, 0.44 ) }
    dend_67 { pt3dadd( -36.9395, -102.433, 9.53598, 0.37 ) }
    dend_67 { pt3dadd( -37.2248, -102.751, 9.63763, 0.59 ) }
    dend_67 { pt3dadd( -37.4031, -102.953, 9.69379, 0.59 ) }
    dend_67 { pt3dadd( -37.7109, -103.327, 9.77507, 0.44 ) }
    dend_67 { pt3dadd( -37.9633, -103.649, 9.83519, 0.66 ) }
    dend_67 { pt3dadd( -38.2435, -104.016, 9.90124, 0.88 ) }
    dend_67 { pt3dadd( -38.5518, -104.436, 9.97207, 0.88 ) }
    dend_67 { pt3dadd( -38.9896, -105.026, 10.0623, 0.66 ) }
    dend_67 { pt3dadd( -39.3348, -105.494, 10.1184, 0.96 ) }
    dend_67 { pt3dadd( -39.5933, -105.831, 10.155, 1.18 ) }
    dend_67 { pt3dadd( -40.1474, -106.496, 10.2501, 0.88 ) }
    dend_67 { pt3dadd( -40.3741, -106.732, 10.2997, 0.96 ) }
    dend_67 { pt3dadd( -40.9086, -107.181, 10.4505, 0.59 ) }
    dend_67 { pt3dadd( -40.9384, -107.198, 10.4615, 0.59 ) }
    dend_67 { pt3dadd( -41.5097, -107.427, 10.7357, 0.59 ) }
    dend_67 { pt3dadd( -41.9964, -107.556, 11.0018, 0.52 ) }
    dend_67 { pt3dadd( -42.3413, -107.622, 11.2081, 0.52 ) }
    dend_67 { pt3dadd( -42.6783, -107.699, 11.4509, 0.74 ) }
    dend_67 { pt3dadd( -43.0166, -107.794, 11.7298, 0.96 ) }
    dend_67 { pt3dadd( -43.3445, -107.904, 12.0068, 0.81 ) }
    dend_67 { pt3dadd( -43.9195, -108.146, 12.4959, 0.96 ) }
    dend_67 { pt3dadd( -44.2964, -108.337, 12.804, 0.96 ) }
    dend_67 { pt3dadd( -44.8665, -108.659, 13.2688, 0.44 ) }
    dend_67 { pt3dadd( -45.2155, -108.877, 13.5458, 0.44 ) }
    dend_67 { pt3dadd( -45.6009, -109.133, 13.8312, 0.66 ) }
    dend_67 { pt3dadd( -45.9387, -109.346, 14.0517, 0.59 ) }
    dend_67 { pt3dadd( -46.3479, -109.598, 14.296, 0.59 ) }
    dend_67 { pt3dadd( -46.3874, -109.621, 14.3165, 0.59 ) }
    dend_67 { pt3dadd( -46.7344, -109.811, 14.4567, 0.88 ) }
    dend_67 { pt3dadd( -47.3687, -110.195, 14.691, 0.96 ) }
    dend_67 { pt3dadd( -47.8434, -110.52, 14.8502, 0.37 ) }
    dend_67 { pt3dadd( -47.91, -110.577, 14.8753, 0.37 ) }
    dend_67 { pt3dadd( -48.3165, -111.027, 15.052, 0.37 ) }
    dend_67 { pt3dadd( -48.604, -111.435, 15.1973, 0.29 ) }
    dend_67 { pt3dadd( -48.8422, -111.882, 15.3407, 0.29 ) }
    dend_67 { pt3dadd( -48.9984, -112.238, 15.4507, 0.52 ) }
    dend_67 { pt3dadd( -49.3231, -112.997, 15.6926, 1.03 ) }
    dend_67 { pt3dadd( -49.4961, -113.368, 15.8173, 1.25 ) }
    dend_67 { pt3dadd( -49.6492, -113.657, 15.9173, 1.25 ) }
    dend_67 { pt3dadd( -49.9784, -114.145, 16.1117, 0.88 ) }
    dend_67 { pt3dadd( -50.3389, -114.555, 16.2955, 0.74 ) }
    dend_67 { pt3dadd( -50.7559, -114.928, 16.4664, 0.74 ) }
    dend_67 { pt3dadd( -51.1131, -115.19, 16.5827, 0.96 ) }
    dend_67 { pt3dadd( -51.6189, -115.526, 16.7384, 0.66 ) }
    dend_67 { pt3dadd( -52.062, -115.802, 16.8435, 0.74 ) }
    dend_67 { pt3dadd( -52.3308, -115.971, 16.896, 1.03 ) }
    dend_67 { pt3dadd( -52.7144, -116.231, 16.9559, 1.4 ) }
    dend_67 { pt3dadd( -52.7444, -116.254, 16.9597, 1.4 ) }
    dend_67 { pt3dadd( -53.0273, -116.53, 16.9861, 1.4 ) }
    dend_67 { pt3dadd( -53.5285, -117.189, 17.0226, 0.52 ) }
    dend_67 { pt3dadd( -53.7757, -117.602, 17.0262, 0.81 ) }
    dend_67 { pt3dadd( -53.938, -117.9, 17.0308, 0.88 ) }
    dend_67 { pt3dadd( -54.0932, -118.21, 17.042, 0.52 ) }
    dend_67 { pt3dadd( -54.3297, -118.668, 17.0675, 0.44 ) }
    dend_67 { pt3dadd( -54.533, -119.061, 17.0982, 0.44 ) }
    dend_67 { pt3dadd( -54.7225, -119.388, 17.1528, 0.44 ) }
    dend_67 { pt3dadd( -54.9586, -119.697, 17.2165, 0.66 ) }
    dend_67 { pt3dadd( -55.0178, -119.755, 17.2428, 0.66 ) }
    dend_67 { pt3dadd( -55.2602, -119.935, 17.3832, 0.88 ) }
    dend_67 { pt3dadd( -55.307, -119.962, 17.4147, 0.88 ) }
    dend_67 { pt3dadd( -55.6029, -120.133, 17.6337, 0.96 ) }
    dend_67 { pt3dadd( -55.771, -120.246, 17.7638, 0.66 ) }
    dend_67 { pt3dadd( -56.1846, -120.557, 18.0819, 0.52 ) }
    dend_67 { pt3dadd( -56.4696, -120.784, 18.2922, 0.44 ) }
    dend_67 { pt3dadd( -56.6831, -120.97, 18.4389, 0.74 ) }
    dend_67 { pt3dadd( -56.96, -121.225, 18.6124, 0.81 ) }
    dend_67 { pt3dadd( -57.3142, -121.602, 18.8075, 0.52 ) }
    dend_67 { pt3dadd( -57.3454, -121.638, 18.8193, 0.52 ) }
    dend_67 { pt3dadd( -57.5598, -121.894, 18.8642, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -57.8815, -122.312, 18.9054, 0.96 ) }
    dend_67 { pt3dadd( -58.0634, -122.568, 18.915, 1.11 ) }
    dend_67 { pt3dadd( -58.3339, -122.951, 18.9271, 0.81 ) }
    dend_67 { pt3dadd( -58.706, -123.441, 18.9316, 0.66 ) }
    dend_67 { pt3dadd( -58.7294, -123.468, 18.9315, 0.66 ) }
    dend_67 { pt3dadd( -59.105, -123.844, 18.9536, 0.52 ) }
    dend_67 { pt3dadd( -59.4792, -124.124, 19.0218, 0.37 ) }
    dend_67 { pt3dadd( -59.767, -124.273, 19.142, 0.29 ) }
    dend_67 { pt3dadd( -60.2092, -124.437, 19.4237, 0.66 ) }
    dend_67 { pt3dadd( -60.453, -124.519, 19.6182, 0.74 ) }
    dend_67 { pt3dadd( -60.9179, -124.72, 20.0523, 0.29 ) }
    dend_67 { pt3dadd( -61.1253, -124.832, 20.2659, 0.66 ) }
    dend_67 { pt3dadd( -61.4038, -125.03, 20.5639, 0.88 ) }
    dend_67 { pt3dadd( -61.6733, -125.265, 20.8465, 0.88 ) }
    dend_67 { pt3dadd( -61.8266, -125.415, 21.0021, 0.88 ) }
    dend_67 { pt3dadd( -62.29, -125.878, 21.4195, 0.58 ) }
    dend_67 { pt3dadd( -62.6081, -126.19, 21.6558, 0.81 ) }
    dend_67 { pt3dadd( -62.9015, -126.474, 21.8516, 1.11 ) }
    dend_67 { pt3dadd( -63.1749, -126.733, 22.0103, 0.74 ) }
    dend_67 { pt3dadd( -63.4844, -127.023, 22.1898, 0.88 ) }
    dend_67 { pt3dadd( -63.795, -127.283, 22.3658, 0.81 ) }
    dend_67 { pt3dadd( -64.1064, -127.507, 22.5337, 0.74 ) }
    dend_67 { pt3dadd( -64.6065, -127.837, 22.8129, 0.44 ) }
    dend_67 { pt3dadd( -65.0701, -128.129, 23.0765, 0.74 ) }
    dend_67 { pt3dadd( -65.4409, -128.347, 23.2946, 0.88 ) }
    dend_67 { pt3dadd( -65.9139, -128.587, 23.6382, 0.52 ) }
    dend_67 { pt3dadd( -66.167, -128.709, 23.8643, 0.59 ) }
    dend_67 { pt3dadd( -66.6112, -128.921, 24.3259, 0.59 ) }
    dend_67 { pt3dadd( -66.6338, -128.933, 24.3521, 0.59 ) }
    dend_67 { pt3dadd( -66.8522, -129.085, 24.6186, 0.66 ) }
    dend_67 { pt3dadd( -67.48, -129.677, 25.3226, 0.59 ) }
    dend_67 { pt3dadd( -67.7702, -130.029, 25.6231, 0.59 ) }
    dend_67 { pt3dadd( -67.9696, -130.3, 25.7882, 0.81 ) }
    dend_67 { pt3dadd( -68.2791, -130.745, 25.9925, 0.52 ) }
    dend_67 { pt3dadd( -68.6302, -131.242, 26.1578, 0.66 ) }
    dend_67 { pt3dadd( -69.0503, -131.834, 26.2766, 0.44 ) }
    dend_67 { pt3dadd( -69.3136, -132.212, 26.3033, 1.11 ) }
    dend_67 { pt3dadd( -69.8272, -132.936, 26.3294, 0.59 ) }
    dend_67 { pt3dadd( -69.851, -132.97, 26.3314, 0.59 ) }
    dend_67 { pt3dadd( -70.1332, -133.364, 26.3685, 0.44 ) }
    dend_67 { pt3dadd( -70.2656, -133.536, 26.397, 0.44 ) }
    dend_67 { pt3dadd( -70.6714, -134.028, 26.5596, 0.44 ) }
    dend_67 { pt3dadd( -70.9372, -134.307, 26.7096, 0.37 ) }
    dend_67 { pt3dadd( -71.2212, -134.555, 26.9209, 0.29 ) }
    dend_67 { pt3dadd( -71.4482, -134.74, 27.1358, 0.66 ) }
    dend_67 { pt3dadd( -71.6596, -134.89, 27.3722, 1.03 ) }
    dend_67 { pt3dadd( -71.9181, -135.049, 27.6758, 1.03 ) }
    dend_67 { pt3dadd( -72.1109, -135.148, 27.9041, 0.81 ) }
    dend_67 { pt3dadd( -72.4484, -135.329, 28.288, 0.52 ) }
    dend_67 { pt3dadd( -72.8311, -135.585, 28.6863, 0.66 ) }
    dend_67 { pt3dadd( -73.0478, -135.778, 28.8964, 0.29 ) }
    dend_67 { pt3dadd( -73.158, -135.895, 28.9934, 0.59 ) }
    dend_67 { pt3dadd( -73.3683, -136.12, 29.1486, 0.81 ) }
    dend_67 { pt3dadd( -73.6238, -136.371, 29.315, 0.81 ) }
    dend_67 { pt3dadd( -73.9682, -136.643, 29.5077, 0.52 ) }
    dend_67 { pt3dadd( -74.4184, -136.934, 29.7159, 0.74 ) }
    dend_67 { pt3dadd( -74.4494, -136.951, 29.7305, 0.74 ) }
    dend_67 { pt3dadd( -74.9189, -137.184, 29.9539, 0.44 ) }
    dend_67 { pt3dadd( -75.2536, -137.343, 30.1079, 0.74 ) }
    dend_67 { pt3dadd( -75.6209, -137.518, 30.2724, 1.11 ) }
    dend_67 { pt3dadd( -76.1645, -137.793, 30.5094, 0.59 ) }
    dend_67 { pt3dadd( -76.4889, -137.987, 30.6455, 0.66 ) }
    dend_67 { pt3dadd( -76.8144, -138.23, 30.7752, 0.81 ) }
    dend_67 { pt3dadd( -77.1911, -138.594, 30.9149, 0.52 ) }
    dend_67 { pt3dadd( -77.4313, -138.865, 30.9992, 0.66 ) }
    dend_67 { pt3dadd( -77.644, -139.118, 31.0732, 0.66 ) }
    dend_67 { pt3dadd( -77.8658, -139.36, 31.1349, 0.44 ) }
    dend_67 { pt3dadd( -77.896, -139.389, 31.1421, 0.44 ) }
    dend_67 { pt3dadd( -78.3802, -139.743, 31.2514, 0.37 ) }
    dend_67 { pt3dadd( -78.4623, -139.782, 31.2713, 0.37 ) }
    dend_67 { pt3dadd( -79.0231, -139.898, 31.4239, 0.37 ) }
    dend_67 { pt3dadd( -79.548, -139.903, 31.547, 0.29 ) }
    dend_67 { pt3dadd( -79.865, -139.874, 31.6152, 0.37 ) }
    dend_67 { pt3dadd( -80.1963, -139.833, 31.6973, 0.44 ) }
    dend_67 { pt3dadd( -80.6553, -139.74, 31.8082, 0.37 ) }
    dend_67 { pt3dadd( -81.2814, -139.59, 31.9618, 0.29 ) }
    dend_67 { pt3dadd( -81.9716, -139.372, 32.1401, 0.22 ) }
    dend_67 { pt3dadd( -82.1093, -139.322, 32.1843, 0.44 ) }
    dend_67 { pt3dadd( -82.7522, -139.079, 32.3596, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -24.399, -73.8795, 7.29555, 0.74 ) }
    dend_66 { pt3dadd( -25.0724, -74.4307, 7.49523, 0.74 ) }
    dend_66 { pt3dadd( -25.8944, -75.1077, 7.73842, 0.44 ) }
    dend_66 { pt3dadd( -26.705, -75.7634, 7.97546, 0.59 ) }
    dend_66 { pt3dadd( -27.7218, -76.5577, 8.22082, 0.37 ) }
    dend_66 { pt3dadd( -28.5009, -77.1735, 8.4076, 0.59 ) }
    dend_66 { pt3dadd( -28.8372, -77.4365, 8.48738, 0.88 ) }
    dend_66 { pt3dadd( -28.9138, -77.4942, 8.50237, 0.88 ) }
    dend_66 { pt3dadd( -29.2429, -77.7343, 8.55066, 1.11 ) }
    dend_66 { pt3dadd( -29.9889, -78.1856, 8.6271, 0.88 ) }
    dend_66 { pt3dadd( -30.9107, -78.6013, 8.69439, 0.37 ) }
    dend_66 { pt3dadd( -31.4853, -78.7978, 8.71964, 0.66 ) }
    dend_66 { pt3dadd( -32.3818, -79.045, 8.71414, 0.81 ) }
    dend_66 { pt3dadd( -33.2121, -79.265, 8.69233, 0.74 ) }
    dend_66 { pt3dadd( -34.3674, -79.5536, 8.6473, 0.88 ) }
    dend_66 { pt3dadd( -35.1815, -79.7496, 8.61592, 0.74 ) }
    dend_66 { pt3dadd( -36.431, -80.0691, 8.5123, 0.52 ) }
    dend_66 { pt3dadd( -37.9154, -80.526, 8.37743, 0.52 ) }
    dend_66 { pt3dadd( -38.8061, -80.8666, 8.34204, 0.74 ) }
    dend_66 { pt3dadd( -38.8846, -80.9049, 8.34895, 0.74 ) }
    dend_66 { pt3dadd( -39.568, -81.3738, 8.8941, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -40.365, -82.0337, 10.0727, 1.03 ) }
    dend_66 { pt3dadd( -40.8193, -82.4347, 10.9231, 1.18 ) }
    dend_66 { pt3dadd( -41.4522, -82.9876, 12.2772, 0.96 ) }
    dend_66 { pt3dadd( -42.3011, -83.7037, 14.232, 1.18 ) }
    dend_66 { pt3dadd( -44.7696, -85.6704, 19.9589, 0.66 ) }
    dend_66 { pt3dadd( -45.1107, -85.9495, 20.8211, 0.66 ) }
    dend_66 { pt3dadd( -45.4664, -86.2508, 21.7463, 0.81 ) }
    dend_66 { pt3dadd( -45.8147, -86.5469, 22.5918, 0.81 ) }
    dend_66 { pt3dadd( -45.8599, -86.5879, 22.6889, 0.81 ) }
    dend_66 { pt3dadd( -46.3989, -87.1663, 23.7465, 0.88 ) }
    dend_66 { pt3dadd( -47.271, -88.1987, 25.4929, 0.88 ) }
    dend_66 { pt3dadd( -47.7301, -88.8401, 26.72, 0.74 ) }
    dend_66 { pt3dadd( -47.9179, -89.1344, 27.3161, 0.96 ) }
    dend_66 { pt3dadd( -48.6981, -90.4474, 29.9528, 0.44 ) }
    dend_66 { pt3dadd( -49.3568, -91.6059, 32.2597, 1.25 ) }
    dend_66 { pt3dadd( -50.2237, -93.2348, 35.4327, 0.59 ) }
    dend_66 { pt3dadd( -50.7724, -94.2008, 37.2496, 0.96 ) }
    dend_66 { pt3dadd( -50.8002, -94.2485, 37.3339, 0.96 ) }
    dend_66 { pt3dadd( -51.1998, -94.9052, 38.3413, 0.59 ) }
    dend_66 { pt3dadd( -51.6608, -95.5906, 39.1615, 0.52 ) }
    dend_66 { pt3dadd( -52.5949, -96.9147, 40.3941, 0.81 ) }
    dend_66 { pt3dadd( -53.7752, -98.6526, 41.6606, 0.44 ) }
    dend_66 { pt3dadd( -54.3791, -99.5508, 42.2514, 0.59 ) }
    dend_66 { pt3dadd( -54.8996, -100.375, 42.8205, 0.74 ) }
    dend_66 { pt3dadd( -55.4165, -101.271, 43.5342, 0.44 ) }
    dend_66 { pt3dadd( -55.9668, -102.316, 44.4333, 0.44 ) }
    dend_66 { pt3dadd( -56.5484, -103.507, 45.4676, 0.29 ) }
    dend_66 { pt3dadd( -56.9957, -104.59, 46.4369, 0.44 ) }
    dend_66 { pt3dadd( -57.4753, -105.964, 47.8112, 0.81 ) }
    dend_66 { pt3dadd( -57.9214, -107.535, 49.5793, 1.03 ) }
    dend_66 { pt3dadd( -57.9319, -107.588, 49.6469, 1.03 ) }
    dend_66 { pt3dadd( -64.1265, -116.438, 58.0687, 1.03 ) }
    dend_66 { pt3dadd( -71.0599, -125.068, 66.1605, 1.03 ) }
    dend_66 { pt3dadd( -77.2134, -135.227, 72.7825, 1.03 ) }
    dend_66 { pt3dadd( -85.1648, -144.628, 78.6912, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -2.97612, -39.8908, -2.51306, 1.4 ) }
    dend_48 { pt3dadd( -2.19863, -40.6632, -2.7681, 1.4 ) }
    dend_48 { pt3dadd( -0.964368, -41.8614, -3.32819, 1.11 ) }
    dend_48 { pt3dadd( 0.466105, -43.3835, -4.27278, 0.96 ) }
    dend_48 { pt3dadd( 1.50837, -44.6307, -5.21296, 0.96 ) }
    dend_48 { pt3dadd( 2.28467, -45.7082, -6.14689, 1.11 ) }
    dend_48 { pt3dadd( 3.12375, -46.9712, -7.27642, 1.25 ) }
    dend_48 { pt3dadd( 4.1351, -48.6484, -8.87239, 1.18 ) }
    dend_48 { pt3dadd( 5.18812, -50.6354, -10.745, 1.18 ) }
    dend_48 { pt3dadd( 5.91688, -52.3048, -12.2126, 1.03 ) }
    dend_48 { pt3dadd( 6.67257, -54.5332, -13.9417, 0.88 ) }
    dend_48 { pt3dadd( 6.95059, -55.6229, -14.6339, 0.96 ) }
    dend_48 { pt3dadd( 7.35159, -57.644, -15.6477, 1.11 ) }
    dend_48 { pt3dadd( 7.66747, -59.7921, -16.4426, 1.11 ) }
    dend_48 { pt3dadd( 7.82027, -61.2964, -16.7941, 0.96 ) }
    dend_48 { pt3dadd( 7.92003, -63.3024, -17.0746, 1.11 ) }
    dend_48 { pt3dadd( 7.85545, -66.0803, -17.3204, 1.18 ) }
    dend_48 { pt3dadd( 7.72144, -67.4493, -17.446, 1.18 ) }
    dend_48 { pt3dadd( 7.47883, -68.9855, -17.6007, 1.18 ) }
    dend_48 { pt3dadd( 6.91841, -71.9092, -17.9292, 0.96 ) }
    dend_48 { pt3dadd( 6.51223, -73.8604, -18.176, 1.03 ) }
    dend_48 { pt3dadd( 5.84648, -76.8581, -18.6331, 1.03 ) }
    dend_48 { pt3dadd( 5.32113, -79.0206, -19.024, 1.33 ) }
    dend_48 { pt3dadd( 4.93989, -80.6049, -19.358, 1.55 ) }
    dend_48 { pt3dadd( 4.65389, -81.9049, -19.6921, 1.33 ) }
    dend_48 { pt3dadd( 4.24626, -83.9753, -20.3065, 1.03 ) }
    dend_48 { pt3dadd( 3.98571, -85.7099, -20.836, 1.33 ) }
    dend_48 { pt3dadd( 3.82021, -87.2475, -21.3073, 1.33 ) }
    dend_48 { pt3dadd( 3.54378, -90.1581, -22.146, 1.25 ) }
    dend_48 { pt3dadd( 3.2022, -93.2959, -23.0701, 1.03 ) }
    dend_48 { pt3dadd( 2.96696, -95.0757, -23.6027, 0.96 ) }
    dend_48 { pt3dadd( 2.58694, -97.317, -24.2794, 0.96 ) }
    dend_48 { pt3dadd( 2.29003, -98.6966, -24.6882, 0.96 ) }
    dend_48 { pt3dadd( 1.79643, -100.733, -25.3207, 0.96 ) }
    dend_48 { pt3dadd( 1.20127, -102.635, -25.9188, 1.11 ) }
    dend_48 { pt3dadd( 0.808512, -103.556, -26.198, 1.25 ) }
    dend_48 { pt3dadd( -0.0858777, -105.15, -26.7336, 1.4 ) }
    dend_48 { pt3dadd( -0.81798, -106.1, -27.1119, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.97612, -39.8908, -2.51306, 1.11 ) }
    dend_43 { pt3dadd( -3.75779, -42.0916, -0.344741, 1.11 ) }
    dend_43 { pt3dadd( -3.86948, -42.6039, -0.00433516, 1.11 ) }
    dend_43 { pt3dadd( -4.01078, -43.4366, 0.457603, 1.03 ) }
    dend_43 { pt3dadd( -4.15146, -44.7177, 1.02601, 1.11 ) }
    dend_43 { pt3dadd( -4.1551, -44.7773, 1.04643, 1.11 ) }
    dend_43 { pt3dadd( -4.20741, -45.8549, 1.34748, 1.11 ) }
    dend_43 { pt3dadd( -4.19122, -47.0795, 1.52158, 1.11 ) }
    dend_43 { pt3dadd( -4.19025, -47.1437, 1.53029, 1.11 ) }
    dend_43 { pt3dadd( -4.1787, -48.2447, 1.6658, 1.11 ) }
    dend_43 { pt3dadd( -4.17166, -49.6112, 1.79705, 1.03 ) }
    dend_43 { pt3dadd( -4.17993, -50.4927, 1.86617, 1.33 ) }
    dend_43 { pt3dadd( -4.23436, -51.5415, 1.93356, 1.18 ) }
    dend_43 { pt3dadd( -4.41938, -52.8625, 1.99628, 0.88 ) }
    dend_43 { pt3dadd( -4.43191, -52.926, 1.99837, 0.88 ) }
    dend_43 { pt3dadd( -4.84229, -54.3595, 2.04622, 0.88 ) }
    dend_43 { pt3dadd( -5.25633, -55.4837, 2.07815, 0.88 ) }
    dend_43 { pt3dadd( -5.69514, -56.4608, 2.09563, 1.11 ) }
    dend_43 { pt3dadd( -6.35323, -57.7697, 2.17075, 0.88 ) }
    dend_43 { pt3dadd( -6.3804, -57.8192, 2.17703, 0.88 ) }
    dend_43 { pt3dadd( -6.86888, -58.7374, 2.34656, 0.88 ) }
    dend_43 { pt3dadd( -6.95695, -58.9047, 2.39047, 0.88 ) }
    dend_43 { pt3dadd( -7.27899, -59.6903, 2.63926, 0.96 ) }
    dend_43 { pt3dadd( -7.72347, -61.2918, 3.1833, 0.81 ) }
    dend_43 { pt3dadd( -7.81454, -61.7734, 3.34401, 1.18 ) }
    dend_43 { pt3dadd( -7.93754, -62.5763, 3.59244, 0.96 ) }
    dend_43 { pt3dadd( -7.95152, -62.699, 3.62523, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -8.04599, -63.8573, 3.89461, 0.74 ) }
    dend_43 { pt3dadd( -8.08139, -64.6679, 3.98789, 0.96 ) }
    dend_43 { pt3dadd( -8.10236, -65.3598, 3.97065, 1.03 ) }
    dend_43 { pt3dadd( -8.10365, -65.4857, 3.9509, 1.03 ) }
    dend_43 { pt3dadd( -8.0994, -66.3072, 3.74716, 1.33 ) }
    dend_43 { pt3dadd( -8.07551, -67.1421, 3.472, 1.55 ) }
    dend_43 { pt3dadd( -8.0148, -68.4111, 2.96455, 1.25 ) }
    dend_43 { pt3dadd( -7.90571, -69.3612, 2.549, 1.4 ) }
    dend_43 { pt3dadd( -7.69942, -70.6945, 1.96237, 1.55 ) }
    dend_43 { pt3dadd( -7.53461, -71.6485, 1.54473, 1.11 ) }
    dend_43 { pt3dadd( -7.29745, -72.8562, 1.00824, 0.74 ) }
    dend_43 { pt3dadd( -7.28556, -72.9222, 0.981253, 0.74 ) }
    dend_43 { pt3dadd( -7.15789, -73.7597, 0.672396, 0.74 ) }
    dend_43 { pt3dadd( -7.08345, -74.3574, 0.520956, 0.96 ) }
    dend_43 { pt3dadd( -7.07598, -74.4406, 0.511997, 0.96 ) }
    dend_43 { pt3dadd( -7.01835, -75.5664, 0.45933, 1.11 ) }
    dend_43 { pt3dadd( -6.93345, -76.5079, 0.465823, 1.11 ) }
    dend_43 { pt3dadd( -6.78804, -77.7732, 0.392811, 1.25 ) }
    dend_43 { pt3dadd( -6.54189, -79.6956, 0.206417, 0.96 ) }
    dend_43 { pt3dadd( -6.32379, -81.0463, 0.0123745, 0.96 ) }
    dend_43 { pt3dadd( -6.1399, -82.0228, -0.157411, 1.11 ) }
    dend_43 { pt3dadd( -5.71298, -83.9828, -0.545568, 1.11 ) }
    dend_43 { pt3dadd( -5.26145, -85.8438, -0.987412, 1.25 ) }
    dend_43 { pt3dadd( -5.12498, -86.3966, -1.13649, 1.55 ) }
    dend_43 { pt3dadd( -4.87913, -87.5172, -1.53088, 1.47 ) }
    dend_43 { pt3dadd( -4.86913, -87.5772, -1.54829, 1.47 ) }
    dend_43 { pt3dadd( -4.81212, -88.2808, -1.68106, 0.88 ) }
    dend_43 { pt3dadd( -4.86286, -89.2243, -1.67014, 0.59 ) }
    dend_43 { pt3dadd( -4.97004, -90.1872, -1.46345, 0.74 ) }
    dend_43 { pt3dadd( -5.07081, -90.8678, -1.26519, 1.03 ) }
    dend_43 { pt3dadd( -5.29529, -92.2018, -0.831072, 1.03 ) }
    dend_43 { pt3dadd( -5.39857, -92.7855, -0.63947, 1.25 ) }
    dend_43 { pt3dadd( -5.63873, -94.1232, -0.192477, 1.25 ) }
    dend_43 { pt3dadd( -5.8197, -95.1422, 0.153031, 0.74 ) }
    dend_43 { pt3dadd( -5.96898, -95.9846, 0.388467, 0.74 ) }
    dend_43 { pt3dadd( -6.10537, -96.8514, 0.497838, 0.96 ) }
    dend_43 { pt3dadd( -6.11183, -96.9071, 0.493622, 0.96 ) }
    dend_43 { pt3dadd( -6.17648, -97.8979, 0.298163, 1.18 ) }
    dend_43 { pt3dadd( -6.17697, -97.9684, 0.276925, 1.18 ) }
    dend_43 { pt3dadd( -6.11564, -99.2283, -0.133853, 1.33 ) }
    dend_43 { pt3dadd( -5.98678, -100.734, -0.592566, 1.03 ) }
    dend_43 { pt3dadd( -5.8727, -101.967, -0.921276, 0.88 ) }
    dend_43 { pt3dadd( -5.83582, -102.432, -1.02956, 1.33 ) }
    dend_43 { pt3dadd( -5.78493, -103.379, -1.21499, 1.33 ) }
    dend_43 { pt3dadd( -5.77126, -104.441, -1.36969, 1.55 ) }
    dend_43 { pt3dadd( -5.83466, -105.487, -1.43771, 1.33 ) }
    dend_43 { pt3dadd( -5.99776, -106.436, -1.44292, 1.11 ) }
    dend_43 { pt3dadd( -6.28794, -107.447, -1.42566, 0.66 ) }
    dend_43 { pt3dadd( -6.67305, -108.435, -1.40117, 0.66 ) }
    dend_43 { pt3dadd( -7.1376, -109.38, -1.36961, 0.74 ) }
    dend_43 { pt3dadd( -7.69558, -110.371, -1.32703, 0.59 ) }
    dend_43 { pt3dadd( -8.07071, -111.033, -1.28573, 0.88 ) }
    dend_43 { pt3dadd( -8.39721, -111.707, -1.23694, 0.96 ) }
    dend_43 { pt3dadd( -8.60802, -112.367, -1.185, 0.88 ) }
    dend_43 { pt3dadd( -8.61289, -112.429, -1.17422, 0.88 ) }
    dend_43 { pt3dadd( -8.5159, -113.316, -0.963137, 0.74 ) }
    dend_43 { pt3dadd( -8.34706, -114.163, -0.743972, 1.25 ) }
    dend_43 { pt3dadd( -8.15727, -115.084, -0.4876, 1.25 ) }
    dend_43 { pt3dadd( -7.99258, -116.108, -0.196248, 1.03 ) }
    dend_43 { pt3dadd( -7.87071, -117.825, 0.287509, 0.74 ) }
    dend_43 { pt3dadd( -7.89568, -118.798, 0.55464, 0.59 ) }
    dend_43 { pt3dadd( -7.98942, -119.37, 0.701873, 0.81 ) }
    dend_43 { pt3dadd( -8.25644, -120.169, 0.872185, 0.88 ) }
    dend_43 { pt3dadd( -8.67989, -121.094, 1.01838, 1.03 ) }
    dend_43 { pt3dadd( -9.0501, -121.876, 1.08652, 1.11 ) }
    dend_43 { pt3dadd( -9.12845, -122.053, 1.07614, 1.11 ) }
    dend_43 { pt3dadd( -9.45641, -122.929, 0.92678, 0.96 ) }
    dend_43 { pt3dadd( -9.76501, -123.925, 0.682463, 1.11 ) }
    dend_43 { pt3dadd( -10.0015, -124.927, 0.37783, 0.96 ) }
    dend_43 { pt3dadd( -10.2642, -126.394, -0.11947, 1.18 ) }
    dend_43 { pt3dadd( -10.5238, -127.966, -0.599302, 1.03 ) }
    dend_43 { pt3dadd( -10.7879, -129.58, -1.05516, 0.96 ) }
    dend_43 { pt3dadd( -10.8028, -129.692, -1.08361, 0.96 ) }
    dend_43 { pt3dadd( -10.9155, -130.866, -1.31955, 0.96 ) }
    dend_43 { pt3dadd( -10.9669, -131.724, -1.38798, 1.4 ) }
    dend_43 { pt3dadd( -10.9892, -133.399, -1.28076, 1.11 ) }
    dend_43 { pt3dadd( -10.986, -133.482, -1.2649, 1.11 ) }
    dend_43 { pt3dadd( -10.9167, -134.457, -1.02649, 1.25 ) }
    dend_43 { pt3dadd( -10.8081, -135.726, -0.721907, 1.11 ) }
    dend_43 { pt3dadd( -10.6537, -137.121, -0.412214, 0.88 ) }
    dend_43 { pt3dadd( -10.548, -137.887, -0.273143, 1.18 ) }
    dend_43 { pt3dadd( -10.3242, -139.103, -0.125344, 1.25 ) }
    dend_43 { pt3dadd( -10.1851, -139.934, -0.0360656, 1.4 ) }
    dend_43 { pt3dadd( -10.1758, -140.004, -0.0304873, 1.4 ) }
    dend_43 { pt3dadd( -10.0726, -141.233, 0.0467917, 1.03 ) }
    dend_43 { pt3dadd( -10.0714, -141.424, 0.0534826, 1.03 ) }
    dend_43 { pt3dadd( -10.1544, -142.47, 0.102401, 0.74 ) }
    dend_43 { pt3dadd( -10.3226, -143.367, 0.201788, 0.74 ) }
    dend_43 { pt3dadd( -10.5433, -144.064, 0.312906, 0.96 ) }
    dend_43 { pt3dadd( -10.9776, -145.095, 0.509675, 0.88 ) }
    dend_43 { pt3dadd( -11.4748, -146.022, 0.716097, 0.88 ) }
    dend_43 { pt3dadd( -11.9533, -146.812, 0.903474, 0.88 ) }
    dend_43 { pt3dadd( -12.6692, -147.845, 1.16932, 1.11 ) }
    dend_43 { pt3dadd( -13.1792, -148.566, 1.35514, 1.25 ) }
    dend_43 { pt3dadd( -13.6471, -149.255, 1.51746, 1.4 ) }
    dend_43 { pt3dadd( -13.7796, -149.463, 1.54842, 1.4 ) }
    dend_43 { pt3dadd( -14.0873, -150.053, 1.59402, 1.4 ) }
    dend_43 { pt3dadd( -14.16, -150.231, 1.5727, 1.4 ) }
    dend_43 { pt3dadd( -14.47, -151.289, 1.2354, 1.25 ) }
    dend_43 { pt3dadd( -14.6429, -152.092, 0.911167, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -14.7371, -152.809, 0.559085, 0.96 ) }
    dend_43 { pt3dadd( -14.8246, -153.827, 0.008829, 0.96 ) }
    dend_43 { pt3dadd( -14.914, -155.546, -1.06456, 0.81 ) }
    dend_43 { pt3dadd( -14.9412, -156.987, -2.08465, 0.81 ) }
    dend_43 { pt3dadd( -14.9521, -157.631, -2.58699, 1.03 ) }
    dend_43 { pt3dadd( -15.0075, -159.154, -3.78376, 1.03 ) }
    dend_43 { pt3dadd( -15.0115, -159.227, -3.83952, 1.03 ) }
    dend_43 { pt3dadd( -15.1063, -160.502, -4.73928, 1.55 ) }
    dend_43 { pt3dadd( -15.254, -162.026, -5.63947, 0.88 ) }
    dend_43 { pt3dadd( -15.4257, -163.467, -6.40129, 0.81 ) }
    dend_43 { pt3dadd( -15.5876, -164.586, -6.97233, 0.81 ) }
    dend_43 { pt3dadd( -15.7254, -165.408, -7.36132, 0.96 ) }
    dend_43 { pt3dadd( -15.8684, -166.27, -7.73602, 0.96 ) }
    dend_43 { pt3dadd( -16.0073, -167.146, -8.05615, 0.74 ) }
    dend_43 { pt3dadd( -16.2209, -168.582, -8.53131, 1.25 ) }
    dend_43 { pt3dadd( -16.3658, -169.964, -8.97755, 0.81 ) }
    dend_43 { pt3dadd( -16.3711, -170.025, -8.99626, 0.81 ) }
    dend_43 { pt3dadd( -16.4739, -171.021, -9.21299, 0.81 ) }
    dend_43 { pt3dadd( -16.5804, -171.8, -9.31136, 1.18 ) }
    dend_43 { pt3dadd( -16.5986, -171.92, -9.31294, 1.18 ) }
    dend_43 { pt3dadd( -16.7331, -172.759, -9.23518, 1.18 ) }
    dend_43 { pt3dadd( -16.9382, -174.223, -9.02102, 0.81 ) }
    dend_43 { pt3dadd( -17.1317, -175.658, -8.81376, 0.81 ) }
    dend_43 { pt3dadd( -17.2334, -176.436, -8.69883, 1.11 ) }
    dend_43 { pt3dadd( -17.4056, -177.741, -8.5318, 1.11 ) }
    dend_43 { pt3dadd( -17.4222, -177.876, -8.51202, 1.11 ) }
    dend_43 { pt3dadd( -17.5484, -179.01, -8.24163, 0.96 ) }
    dend_43 { pt3dadd( -17.5936, -179.564, -8.07457, 1.25 ) }
    dend_43 { pt3dadd( -17.5982, -179.624, -8.0554, 1.25 ) }
    dend_43 { pt3dadd( -17.6809, -180.664, -7.68402, 1.25 ) }
    dend_43 { pt3dadd( -17.8609, -182.332, -7.05851, 1.03 ) }
    dend_43 { pt3dadd( -18.1101, -184.332, -6.29911, 0.81 ) }
    dend_43 { pt3dadd( -18.1938, -185.023, -6.0432, 1.11 ) }
    dend_43 { pt3dadd( -18.3152, -186.222, -5.64598, 0.96 ) }
    dend_43 { pt3dadd( -18.3335, -186.418, -5.5919, 0.96 ) }
    dend_43 { pt3dadd( -18.4199, -187.44, -5.36751, 0.81 ) }
    dend_43 { pt3dadd( -18.427, -187.524, -5.36012, 0.81 ) }
    dend_43 { pt3dadd( -18.5605, -188.952, -5.37125, 0.96 ) }
    dend_43 { pt3dadd( -18.6397, -189.87, -5.38006, 1.18 ) }
    dend_43 { pt3dadd( -18.7136, -190.855, -5.39073, 1.03 ) }
    dend_43 { pt3dadd( -18.7195, -190.92, -5.3914, 1.03 ) }
    dend_43 { pt3dadd( -18.8524, -192.051, -5.40116, 0.74 ) }
    dend_43 { pt3dadd( -19.0722, -193.578, -5.43472, 0.74 ) }
    dend_43 { pt3dadd( -19.2059, -194.412, -5.49598, 0.81 ) }
    dend_43 { pt3dadd( -19.2184, -194.494, -5.50499, 0.81 ) }
    dend_43 { pt3dadd( -19.31, -195.301, -5.61798, 0.81 ) }
    dend_43 { pt3dadd( -19.391, -196.507, -5.81096, 0.81 ) }
    dend_43 { pt3dadd( -19.3872, -197.918, -6.09433, 1.03 ) }
    dend_43 { pt3dadd( -19.3349, -199.123, -6.36953, 1.03 ) }
    dend_43 { pt3dadd( -19.3329, -199.184, -6.38378, 1.03 ) }
    dend_43 { pt3dadd( -19.338, -200.013, -6.5692, 1.25 ) }
    dend_43 { pt3dadd( -19.3628, -200.795, -6.74068, 0.96 ) }
    dend_43 { pt3dadd( -19.4528, -201.838, -6.93191, 0.81 ) }
    dend_43 { pt3dadd( -19.5552, -202.505, -7.02836, 1.11 ) }
    dend_43 { pt3dadd( -19.7285, -203.502, -7.13885, 1.33 ) }
    dend_43 { pt3dadd( -19.9085, -204.471, -7.25541, 1.33 ) }
    dend_43 { pt3dadd( -19.9211, -204.541, -7.26576, 1.33 ) }
    dend_43 { pt3dadd( -20.125, -205.868, -7.4753, 0.74 ) }
    dend_43 { pt3dadd( -20.2539, -207.256, -7.73086, 0.96 ) }
    dend_43 { pt3dadd( -20.2485, -208.416, -7.97244, 0.96 ) }
    dend_43 { pt3dadd( -20.2374, -208.529, -7.99311, 0.96 ) }
    dend_43 { pt3dadd( -20.0434, -209.709, -8.16911, 0.96 ) }
    dend_43 { pt3dadd( -19.8479, -210.768, -8.23587, 0.81 ) }
    dend_43 { pt3dadd( -19.6386, -211.906, -8.20891, 0.66 ) }
    dend_43 { pt3dadd( -19.4798, -213.02, -8.09056, 0.66 ) }
    dend_43 { pt3dadd( -19.3909, -214.082, -7.9231, 1.33 ) }
    dend_43 { pt3dadd( -19.376, -214.97, -7.72254, 1.33 ) }
    dend_43 { pt3dadd( -19.4664, -216.569, -7.25448, 1.11 ) }
    dend_43 { pt3dadd( -19.5663, -217.712, -6.88494, 1.18 ) }
    dend_43 { pt3dadd( -19.6335, -218.351, -6.67287, 1.4 ) }
    dend_43 { pt3dadd( -19.7168, -219.34, -6.38829, 1.11 ) }
    dend_43 { pt3dadd( -19.7336, -220.501, -6.14206, 0.59 ) }
    dend_43 { pt3dadd( -19.6759, -221.255, -6.03477, 0.52 ) }
    dend_43 { pt3dadd( -19.5013, -222.288, -5.9632, 0.88 ) }
    dend_43 { pt3dadd( -19.2558, -223.308, -5.95084, 1.18 ) }
    dend_43 { pt3dadd( -18.975, -224.416, -5.98958, 1.03 ) }
    dend_43 { pt3dadd( -18.614, -225.817, -6.10537, 0.96 ) }
    dend_43 { pt3dadd( -18.2916, -227.206, -6.31374, 0.81 ) }
    dend_43 { pt3dadd( -18.14, -228.026, -6.46549, 1.11 ) }
    dend_43 { pt3dadd( -18.0377, -228.979, -6.6738, 1.69 ) }
    dend_43 { pt3dadd( -17.9957, -230.045, -6.94462, 1.18 ) }
    dend_43 { pt3dadd( -17.9997, -230.115, -6.95986, 1.18 ) }
    dend_43 { pt3dadd( -18.1506, -231.222, -7.12061, 0.59 ) }
    dend_43 { pt3dadd( -18.1605, -231.284, -7.11554, 0.59 ) }
    dend_43 { pt3dadd( -18.2881, -232.218, -6.83011, 1.03 ) }
    dend_43 { pt3dadd( -18.299, -232.324, -6.78192, 1.03 ) }
    dend_43 { pt3dadd( -18.3415, -233.689, -6.06723, 1.25 ) }
    dend_43 { pt3dadd( -18.3353, -234.274, -5.75264, 1.25 ) }
    dend_43 { pt3dadd( -18.2874, -235.669, -5.00242, 0.96 ) }
    dend_43 { pt3dadd( -18.2701, -236.465, -4.61917, 0.66 ) }
    dend_43 { pt3dadd( -18.2652, -237.174, -4.32743, 0.66 ) }
    dend_43 { pt3dadd( -18.2779, -237.79, -4.13841, 0.37 ) }
    dend_43 { pt3dadd( -18.3214, -238.633, -4.06064, 0.52 ) }
    dend_43 { pt3dadd( -18.4338, -239.614, -4.10956, 0.81 ) }
    dend_43 { pt3dadd( -18.5949, -240.393, -4.24766, 1.11 ) }
    dend_43 { pt3dadd( -18.7972, -241.165, -4.45747, 1.4 ) }
    dend_43 { pt3dadd( -19.0639, -242.122, -4.76273, 1.4 ) }
    dend_43 { pt3dadd( -19.5655, -243.789, -5.35605, 0.81 ) }
    dend_43 { pt3dadd( -19.8309, -244.731, -5.7259, 0.66 ) }
    dend_43 { pt3dadd( -20.0294, -245.634, -6.10033, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -20.1753, -246.868, -6.60314, 0.37 ) }
    dend_43 { pt3dadd( -20.2001, -247.554, -6.87459, 0.88 ) }
    dend_43 { pt3dadd( -20.1996, -247.614, -6.89494, 0.88 ) }
    dend_43 { pt3dadd( -20.2044, -248.247, -7.03161, 1.25 ) }
    dend_43 { pt3dadd( -20.2436, -248.984, -7.16013, 1.25 ) }
    dend_43 { pt3dadd( -20.3495, -249.82, -7.26923, 0.88 ) }
    dend_43 { pt3dadd( -20.6806, -251.232, -7.38826, 0.66 ) }
    dend_43 { pt3dadd( -21.1136, -252.548, -7.48827, 0.66 ) }
    dend_43 { pt3dadd( -21.6186, -253.79, -7.591, 0.88 ) }
    dend_43 { pt3dadd( -22.0326, -254.678, -7.70496, 0.88 ) }
    dend_43 { pt3dadd( -22.3984, -255.414, -7.85046, 1.11 ) }
    dend_43 { pt3dadd( -22.7189, -256.084, -8.01084, 1.18 ) }
    dend_43 { pt3dadd( -22.9436, -256.608, -8.12198, 1.18 ) }
    dend_43 { pt3dadd( -23.5096, -258.183, -8.45232, 0.88 ) }
    dend_43 { pt3dadd( -23.886, -259.528, -8.71907, 1.25 ) }
    dend_43 { pt3dadd( -24.1941, -261.011, -8.9738, 0.74 ) }
    dend_43 { pt3dadd( -24.3855, -262.229, -9.14425, 0.59 ) }
    dend_43 { pt3dadd( -24.5482, -263.625, -9.28831, 1.03 ) }
    dend_43 { pt3dadd( -24.6216, -264.468, -9.31749, 0.74 ) }
    dend_43 { pt3dadd( -24.6811, -265.432, -9.24508, 0.59 ) }
    dend_43 { pt3dadd( -24.7, -265.627, -9.21004, 0.59 ) }
    dend_43 { pt3dadd( -24.8657, -266.617, -8.96859, 0.74 ) }
    dend_43 { pt3dadd( -24.8846, -266.679, -8.96011, 0.74 ) }
    dend_43 { pt3dadd( -25.2228, -267.581, -8.98521, 0.59 ) }
    dend_43 { pt3dadd( -25.2501, -267.65, -8.99224, 0.59 ) }
    dend_43 { pt3dadd( -25.6873, -268.841, -9.17379, 0.74 ) }
    dend_43 { pt3dadd( -26.0761, -270.047, -9.39314, 0.59 ) }
    dend_43 { pt3dadd( -26.4687, -271.616, -9.7301, 0.59 ) }
    dend_43 { pt3dadd( -26.757, -273.041, -10.0803, 0.59 ) }
    dend_43 { pt3dadd( -26.8921, -274.051, -10.3656, 0.59 ) }
    dend_43 { pt3dadd( -26.9612, -274.941, -10.6372, 0.81 ) }
    dend_43 { pt3dadd( -26.9611, -275.13, -10.7004, 0.81 ) }
    dend_43 { pt3dadd( -26.887, -275.882, -10.9584, 0.81 ) }
    dend_43 { pt3dadd( -26.8777, -275.934, -10.9699, 0.81 ) }
    dend_43 { pt3dadd( -26.7751, -276.845, -11.0499, 0.81 ) }
    dend_43 { pt3dadd( -26.775, -276.901, -11.0465, 0.81 ) }
    dend_43 { pt3dadd( -26.8435, -277.855, -10.9179, 0.66 ) }
    dend_43 { pt3dadd( -26.8476, -277.911, -10.9092, 0.66 ) }
    dend_43 { pt3dadd( -26.9344, -279.014, -10.7146, 0.66 ) }
    dend_43 { pt3dadd( -26.9793, -280.367, -10.4752, 0.44 ) }
    dend_43 { pt3dadd( -26.9819, -282.168, -10.1483, 0.66 ) }
    dend_43 { pt3dadd( -26.874, -283.724, -9.83056, 0.96 ) }
    dend_43 { pt3dadd( -26.6943, -285.043, -9.53252, 0.96 ) }
    dend_43 { pt3dadd( -26.6752, -285.141, -9.5098, 0.96 ) }
    dend_43 { pt3dadd( -26.3071, -286.417, -9.1958, 0.81 ) }
    dend_43 { pt3dadd( -26.2625, -286.537, -9.16784, 0.81 ) }
    dend_43 { pt3dadd( -25.7025, -287.849, -8.93845, 0.74 ) }
    dend_43 { pt3dadd( -25.6766, -287.908, -8.92743, 0.74 ) }
    dend_43 { pt3dadd( -25.4624, -288.526, -8.82093, 0.96 ) }
    dend_43 { pt3dadd( -25.4284, -288.651, -8.81221, 0.96 ) }
    dend_43 { pt3dadd( -25.2422, -289.717, -8.78195, 0.96 ) }
    dend_43 { pt3dadd( -25.1516, -290.475, -8.80093, 0.96 ) }
    dend_43 { pt3dadd( -25.1501, -290.539, -8.8086, 0.96 ) }
    dend_43 { pt3dadd( -25.1289, -291.505, -8.9317, 0.52 ) }
    dend_43 { pt3dadd( -25.1077, -292.569, -9.08515, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -34.1034, -56.0625, -10.7711, 0.74 ) }
    dend_34 { pt3dadd( -34.7083, -55.9409, -10.4478, 0.74 ) }
    dend_34 { pt3dadd( -34.7626, -55.9369, -10.4049, 0.74 ) }
    dend_34 { pt3dadd( -35.5083, -55.9628, -9.68501, 0.52 ) }
    dend_34 { pt3dadd( -35.8982, -55.9957, -9.30167, 0.44 ) }
    dend_34 { pt3dadd( -36.5499, -56.0586, -8.69311, 0.44 ) }
    dend_34 { pt3dadd( -37.1814, -56.1225, -8.14546, 0.96 ) }
    dend_34 { pt3dadd( -38.3467, -56.3042, -7.17789, 0.74 ) }
    dend_34 { pt3dadd( -39.0563, -56.4401, -6.64753, 0.74 ) }
    dend_34 { pt3dadd( -39.408, -56.5296, -6.42211, 0.74 ) }
    dend_34 { pt3dadd( -39.9153, -56.6551, -6.14784, 0.59 ) }
    dend_34 { pt3dadd( -40.361, -56.7442, -5.95199, 0.52 ) }
    dend_34 { pt3dadd( -40.9957, -56.8425, -5.73511, 0.52 ) }
    dend_34 { pt3dadd( -41.4255, -56.8959, -5.62929, 0.88 ) }
    dend_34 { pt3dadd( -42.1416, -56.9588, -5.46401, 0.59 ) }
    dend_34 { pt3dadd( -43.2306, -57.0059, -5.15057, 0.96 ) }
    dend_34 { pt3dadd( -44.4457, -57.0218, -4.73833, 1.33 ) }
    dend_34 { pt3dadd( -44.9094, -57.0186, -4.55949, 1.33 ) }
    dend_34 { pt3dadd( -45.6576, -57.0107, -4.2539, 0.44 ) }
    dend_34 { pt3dadd( -46.0998, -56.9953, -4.07588, 0.44 ) }
    dend_34 { pt3dadd( -47.058, -56.9397, -3.7333, 0.44 ) }
    dend_34 { pt3dadd( -47.1065, -56.9372, -3.71995, 0.44 ) }
    dend_34 { pt3dadd( -47.8781, -56.8805, -3.57425, 0.81 ) }
    dend_34 { pt3dadd( -48.412, -56.8326, -3.42664, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -34.1034, -56.0625, -10.7711, 0.59 ) }
    dend_31 { pt3dadd( -35.3106, -57.1063, -11.1882, 0.59 ) }
    dend_31 { pt3dadd( -35.9531, -57.6969, -11.3644, 0.52 ) }
    dend_31 { pt3dadd( -36.3355, -58.0496, -11.473, 0.88 ) }
    dend_31 { pt3dadd( -37.0607, -58.6702, -11.7357, 0.88 ) }
    dend_31 { pt3dadd( -37.5748, -59.0782, -12.0344, 0.88 ) }
    dend_31 { pt3dadd( -38.0411, -59.4128, -12.3686, 1.03 ) }
    dend_31 { pt3dadd( -38.7134, -59.7779, -12.9113, 0.59 ) }
    dend_31 { pt3dadd( -39.2919, -59.9813, -13.5069, 0.44 ) }
    dend_31 { pt3dadd( -40.0545, -60.081, -14.399, 0.74 ) }
    dend_31 { pt3dadd( -41.3365, -59.9585, -16.0804, 0.44 ) }
    dend_31 { pt3dadd( -41.66, -59.8589, -16.5102, 0.44 ) }
    dend_31 { pt3dadd( -42.0275, -59.7011, -16.9834, 0.44 ) }
    dend_31 { pt3dadd( -42.4545, -59.4888, -17.4862, 0.74 ) }
    dend_31 { pt3dadd( -42.7494, -59.3485, -17.7735, 0.96 ) }
    dend_31 { pt3dadd( -42.8017, -59.3308, -17.8081, 0.96 ) }
    dend_31 { pt3dadd( -43.3693, -59.2172, -18.0436, 0.88 ) }
    dend_31 { pt3dadd( -44.5829, -59.0306, -18.5387, 0.44 ) }
    dend_31 { pt3dadd( -44.954, -58.9699, -18.6877, 0.44 ) }
    dend_31 { pt3dadd( -45.0118, -58.9565, -18.7195, 0.44 ) }
    dend_31 { pt3dadd( -45.4263, -58.8222, -18.9807, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -46.0332, -58.5661, -19.4093, 0.44 ) }
    dend_31 { pt3dadd( -46.428, -58.3511, -19.7012, 0.81 ) }
    dend_31 { pt3dadd( -46.7845, -58.1076, -19.991, 1.33 ) }
    dend_31 { pt3dadd( -47.9465, -57.259, -20.992, 1.33 ) }
    dend_31 { pt3dadd( -48.4307, -56.9161, -21.3974, 1.25 ) }
    dend_31 { pt3dadd( -48.9916, -56.539, -21.8521, 0.96 ) }
    dend_31 { pt3dadd( -49.5966, -56.1719, -22.3411, 0.88 ) }
    dend_31 { pt3dadd( -50.2985, -55.7776, -22.877, 0.74 ) }
    dend_31 { pt3dadd( -50.8496, -55.4899, -23.2588, 0.74 ) }
    dend_31 { pt3dadd( -51.6165, -55.1085, -23.7462, 0.66 ) }
    dend_31 { pt3dadd( -52.0324, -54.9054, -24.0337, 0.52 ) }
    dend_31 { pt3dadd( -52.7122, -54.5676, -24.5074, 0.29 ) }
    dend_31 { pt3dadd( -53.1507, -54.3274, -24.8816, 0.37 ) }
    dend_31 { pt3dadd( -53.1991, -54.2971, -24.9286, 0.37 ) }
    dend_31 { pt3dadd( -53.9013, -53.7173, -25.7705, 0.88 ) }
    dend_31 { pt3dadd( -54.1071, -53.4816, -26.1223, 1.25 ) }
    dend_31 { pt3dadd( -54.3769, -53.1416, -26.694, 1.18 ) }
    dend_31 { pt3dadd( -54.8968, -52.5292, -27.7951, 0.66 ) }
    dend_31 { pt3dadd( -54.9243, -52.5012, -27.849, 0.66 ) }
    dend_31 { pt3dadd( -55.2989, -52.1701, -28.4773, 0.74 ) }
    dend_31 { pt3dadd( -56.126, -51.568, -29.6431, 0.88 ) }
    dend_31 { pt3dadd( -56.7518, -51.1679, -30.4583, 0.52 ) }
    dend_31 { pt3dadd( -57.2503, -50.9243, -30.9923, 0.88 ) }
    dend_31 { pt3dadd( -57.8291, -50.7473, -31.4525, 1.03 ) }
    dend_31 { pt3dadd( -58.4705, -50.6145, -31.8927, 1.33 ) }
    dend_31 { pt3dadd( -59.0655, -50.5434, -32.2255, 0.88 ) }
    dend_31 { pt3dadd( -59.1258, -50.5372, -32.2548, 0.88 ) }
    dend_31 { pt3dadd( -59.8992, -50.4547, -32.6632, 0.59 ) }
    dend_31 { pt3dadd( -60.8758, -50.3482, -33.2816, 0.52 ) }
    dend_31 { pt3dadd( -60.9844, -50.3339, -33.36, 0.52 ) }
    dend_31 { pt3dadd( -61.3152, -50.2671, -33.6203, 0.81 ) }
    dend_31 { pt3dadd( -62.3761, -49.9179, -34.6305, 0.29 ) }
    dend_31 { pt3dadd( -62.4188, -49.9022, -34.6772, 0.29 ) }
    dend_31 { pt3dadd( -62.7735, -49.7603, -35.1907, 0.29 ) }
    dend_31 { pt3dadd( -62.9095, -49.7074, -35.4159, 0.88 ) }
    dend_31 { pt3dadd( -63.0637, -49.6718, -35.7065, 1.18 ) }
    dend_31 { pt3dadd( -63.7848, -49.6046, -37.1528, 0.37 ) }
    dend_31 { pt3dadd( -64.2311, -49.6277, -38.028, 0.74 ) }
    dend_31 { pt3dadd( -64.8446, -49.7462, -39.2292, 1.03 ) }
    dend_31 { pt3dadd( -64.875, -49.7557, -39.2863, 1.03 ) }
    dend_31 { pt3dadd( -65.5574, -50.0196, -40.467, 0.44 ) }
    dend_31 { pt3dadd( -65.7445, -50.0948, -40.7545, 1.18 ) }
    dend_31 { pt3dadd( -66.0929, -50.221, -41.1826, 1.47 ) }
    dend_31 { pt3dadd( -66.9921, -50.4911, -42.4588, 0.81 ) }
    dend_31 { pt3dadd( -67.3697, -50.5872, -43.0168, 0.52 ) }
    dend_31 { pt3dadd( -67.9032, -50.709, -43.8237, 0.37 ) }
    dend_31 { pt3dadd( -68.2205, -50.774, -44.3001, 0.37 ) }
    dend_31 { pt3dadd( -68.6264, -50.8603, -44.9179, 1.18 ) }
    dend_31 { pt3dadd( -70.6999, -51.3429, -48.165, 0.81 ) }
    dend_31 { pt3dadd( -70.771, -51.3604, -48.2754, 0.81 ) }
    dend_31 { pt3dadd( -71.1673, -51.4734, -48.8942, 0.81 ) }
    dend_31 { pt3dadd( -71.4505, -51.5535, -49.2993, 0.88 ) }
    dend_31 { pt3dadd( -71.7495, -51.6519, -49.7081, 0.81 ) }
    dend_31 { pt3dadd( -72.4494, -51.9194, -50.5239, 0.29 ) }
    dend_31 { pt3dadd( -72.619, -51.9811, -50.6534, 0.29 ) }
    dend_31 { pt3dadd( -72.9063, -52.1134, -50.9216, 0.29 ) }
    dend_31 { pt3dadd( -73.4248, -52.4103, -51.4679, 1.18 ) }
    dend_31 { pt3dadd( -74.5203, -53.2014, -52.6572, 0.59 ) }
    dend_31 { pt3dadd( -74.8639, -53.5069, -53.0098, 1.33 ) }
    dend_31 { pt3dadd( -74.9066, -53.5512, -53.0497, 1.33 ) }
    dend_31 { pt3dadd( -75.7294, -54.4671, -53.7522, 0.74 ) }
    dend_31 { pt3dadd( -76.1415, -54.9618, -54.0795, 0.66 ) }
    dend_31 { pt3dadd( -76.617, -55.5611, -54.4718, 0.37 ) }
    dend_31 { pt3dadd( -77.1046, -56.1614, -54.8333, 0.88 ) }
    dend_31 { pt3dadd( -77.6107, -56.7812, -55.2252, 1.03 ) }
    dend_31 { pt3dadd( -78.0297, -57.2979, -55.5757, 0.88 ) }
    dend_31 { pt3dadd( -78.064, -57.3424, -55.606, 0.88 ) }
    dend_31 { pt3dadd( -78.8799, -58.5415, -56.4687, 0.74 ) }
    dend_31 { pt3dadd( -79.2588, -59.1475, -57.008, 0.44 ) }
    dend_31 { pt3dadd( -79.4622, -59.4733, -57.3422, 1.47 ) }
    dend_31 { pt3dadd( -79.8904, -60.1152, -58.0981, 1.03 ) }
    dend_31 { pt3dadd( -80.1553, -60.4466, -58.552, 0.74 ) }
    dend_31 { pt3dadd( -80.4127, -60.678, -58.9216, 0.74 ) }
    dend_31 { pt3dadd( -81.4616, -61.2918, -60.201, 0.52 ) }
    dend_31 { pt3dadd( -81.9807, -61.5014, -60.8308, 0.66 ) }
    dend_31 { pt3dadd( -82.4614, -61.6764, -61.4403, 0.37 ) }
    dend_31 { pt3dadd( -82.8081, -61.8257, -61.9813, 0.29 ) }
    dend_31 { pt3dadd( -83.1195, -61.9758, -62.5318, 0.29 ) }
    dend_31 { pt3dadd( -83.4747, -62.1685, -63.2223, 0.74 ) }
    dend_31 { pt3dadd( -83.9553, -62.4808, -64.2342, 0.96 ) }
    dend_31 { pt3dadd( -84.5768, -62.9118, -65.6569, 0.96 ) }
    dend_31 { pt3dadd( -85.4565, -63.5026, -67.8043, 0.88 ) }
    dend_31 { pt3dadd( -85.4776, -63.5142, -67.8543, 0.88 ) }
    dend_31 { pt3dadd( -85.8683, -63.6763, -68.7447, 0.88 ) }
    dend_31 { pt3dadd( -86.0591, -63.7247, -69.1354, 1.03 ) }
    dend_31 { pt3dadd( -86.3917, -63.7765, -69.7151, 1.03 ) }
    dend_31 { pt3dadd( -86.9615, -63.8637, -70.5435, 0.74 ) }
    dend_31 { pt3dadd( -87.6183, -64.0299, -71.4077, 0.37 ) }
    dend_31 { pt3dadd( -87.6551, -64.046, -71.4616, 0.37 ) }
    dend_31 { pt3dadd( -88.3406, -64.4521, -72.5481, 0.37 ) }
    dend_31 { pt3dadd( -88.9342, -64.8905, -73.5828, 0.37 ) }
    dend_31 { pt3dadd( -89.4722, -65.3397, -74.5445, 0.88 ) }
    dend_31 { pt3dadd( -89.9963, -65.7705, -75.4292, 1.18 ) }
    dend_31 { pt3dadd( -90.7691, -66.3747, -76.8515, 0.59 ) }
    dend_31 { pt3dadd( -90.7995, -66.3936, -76.9084, 0.59 ) }
    dend_31 { pt3dadd( -91.4976, -66.6526, -78.1772, 0.44 ) }
    dend_31 { pt3dadd( -91.7004, -66.6812, -78.603, 0.37 ) }
    dend_31 { pt3dadd( -92.0468, -66.66, -79.4197, 0.37 ) }
    dend_31 { pt3dadd( -92.831, -66.4871, -81.2996, 1.03 ) }
    dend_31 { pt3dadd( -93.2336, -66.3568, -82.2331, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -93.5849, -66.2535, -82.9904, 1.25 ) }
    dend_31 { pt3dadd( -94.4604, -66.0833, -84.8817, 1.18 ) }
    dend_31 { pt3dadd( -94.487, -66.0849, -84.9416, 1.18 ) }
    dend_31 { pt3dadd( -94.8953, -66.2051, -85.7984, 0.59 ) }
    dend_31 { pt3dadd( -95.1542, -66.3295, -86.2719, 0.74 ) }
    dend_31 { pt3dadd( -95.4448, -66.512, -86.7773, 0.74 ) }
    dend_31 { pt3dadd( -96.413, -67.2183, -88.4546, 0.88 ) }
    dend_31 { pt3dadd( -97.2701, -67.9551, -90.3457, 0.52 ) }
    dend_31 { pt3dadd( -97.4863, -68.1663, -90.9066, 1.18 ) }
    dend_31 { pt3dadd( -97.8293, -68.5578, -91.9868, 1.55 ) }
    dend_31 { pt3dadd( -97.9951, -68.7614, -92.5626, 1.25 ) }
    dend_31 { pt3dadd( -98.5831, -69.5066, -94.6336, 0.74 ) }
    dend_31 { pt3dadd( -99.6951, -70.9584, -98.522, 0.74 ) }
    dend_31 { pt3dadd( -99.8251, -71.1387, -99.0048, 1.4 ) }
    dend_31 { pt3dadd( -100.43, -72.0075, -101.415, 0.74 ) }
    dend_31 { pt3dadd( -100.462, -72.0515, -101.545, 0.74 ) }
    dend_31 { pt3dadd( -100.668, -72.2965, -102.341, 0.59 ) }
    dend_31 { pt3dadd( -100.689, -72.3142, -102.403, 0.59 ) }
    dend_31 { pt3dadd( -101.627, -72.8169, -104.238, 0.59 ) }
    dend_31 { pt3dadd( -101.683, -72.8417, -104.331, 0.59 ) }
    dend_31 { pt3dadd( -102.25, -73.044, -105.174, 0.66 ) }
    dend_31 { pt3dadd( -102.583, -73.1563, -105.676, 0.88 ) }
    dend_31 { pt3dadd( -103.77, -73.512, -107.474, 0.44 ) }
    dend_31 { pt3dadd( -103.931, -73.559, -107.689, 1.03 ) }
    dend_31 { pt3dadd( -104.862, -73.8226, -108.612, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -27.5643, -193.592, -90.3591, 0.29 ) }
    dend_29 { pt3dadd( -28.2616, -193.914, -90.3895, 0.29 ) }
    dend_29 { pt3dadd( -28.692, -194.099, -90.3998, 0.29 ) }
    dend_29 { pt3dadd( -29.3258, -194.35, -90.4568, 0.22 ) }
    dend_29 { pt3dadd( -29.6041, -194.471, -90.4872, 0.81 ) }
    dend_29 { pt3dadd( -29.8756, -194.598, -90.5178, 0.81 ) }
    dend_29 { pt3dadd( -30.1087, -194.712, -90.5607, 0.81 ) }
    dend_29 { pt3dadd( -30.5064, -194.914, -90.6645, 0.52 ) }
    dend_29 { pt3dadd( -31.2879, -195.336, -90.9251, 0.22 ) }
    dend_29 { pt3dadd( -31.8076, -195.64, -91.1183, 0.22 ) }
    dend_29 { pt3dadd( -32.0497, -195.792, -91.2165, 0.81 ) }
    dend_29 { pt3dadd( -32.7373, -196.247, -91.5071, 0.96 ) }
    dend_29 { pt3dadd( -32.9069, -196.365, -91.5943, 1.11 ) }
    dend_29 { pt3dadd( -33.4776, -196.788, -91.9708, 0.22 ) }
    dend_29 { pt3dadd( -33.7585, -197.002, -92.1707, 0.22 ) }
    dend_29 { pt3dadd( -33.9168, -197.121, -92.2874, 0.74 ) }
    dend_29 { pt3dadd( -34.0929, -197.259, -92.4228, 0.96 ) }
    dend_29 { pt3dadd( -34.7315, -197.784, -92.9494, 0.59 ) }
    dend_29 { pt3dadd( -35.3313, -198.281, -93.4791, 0.29 ) }
    dend_29 { pt3dadd( -35.7583, -198.622, -93.9052, 0.22 ) }
    dend_29 { pt3dadd( -35.8725, -198.709, -94.0226, 0.37 ) }
    dend_29 { pt3dadd( -36.4086, -199.091, -94.5716, 0.22 ) }
    dend_29 { pt3dadd( -36.8533, -199.4, -95.0293, 0.81 ) }
    dend_29 { pt3dadd( -37.0459, -199.534, -95.2219, 1.03 ) }
    dend_29 { pt3dadd( -37.7265, -200.019, -95.9856, 0.37 ) }
    dend_29 { pt3dadd( -37.9647, -200.19, -96.2725, 0.52 ) }
    dend_29 { pt3dadd( -38.5238, -200.595, -96.9508, 0.29 ) }
    dend_29 { pt3dadd( -38.746, -200.755, -97.2053, 0.66 ) }
    dend_29 { pt3dadd( -38.9292, -200.892, -97.4061, 0.81 ) }
    dend_29 { pt3dadd( -39.7296, -201.527, -98.3542, 0.29 ) }
    dend_29 { pt3dadd( -39.9273, -201.701, -98.5985, 0.44 ) }
    dend_29 { pt3dadd( -39.9527, -201.725, -98.6341, 0.44 ) }
    dend_29 { pt3dadd( -40.1845, -201.957, -98.9677, 0.59 ) }
    dend_29 { pt3dadd( -40.4687, -202.284, -99.4425, 1.03 ) }
    dend_29 { pt3dadd( -40.9128, -202.914, -100.38, 1.03 ) }
    dend_29 { pt3dadd( -41.2167, -203.465, -101.209, 0.29 ) }
    dend_29 { pt3dadd( -41.4583, -203.972, -101.989, 0.88 ) }
    dend_29 { pt3dadd( -41.5431, -204.154, -102.271, 1.25 ) }
    dend_29 { pt3dadd( -42.1128, -205.336, -104.108, 0.29 ) }
    dend_29 { pt3dadd( -42.4742, -206.073, -105.247, 0.37 ) }
    dend_29 { pt3dadd( -42.747, -206.616, -106.05, 0.81 ) }
    dend_29 { pt3dadd( -43.0117, -207.115, -106.782, 0.44 ) }
    dend_29 { pt3dadd( -43.1921, -207.423, -107.217, 0.37 ) }
    dend_29 { pt3dadd( -43.4722, -207.863, -107.8, 0.37 ) }
    dend_29 { pt3dadd( -43.8942, -208.439, -108.443, 0.37 ) }
    dend_29 { pt3dadd( -44.2536, -208.885, -108.876, 0.37 ) }
    dend_29 { pt3dadd( -44.5459, -209.253, -109.201, 1.11 ) }
    dend_29 { pt3dadd( -44.7361, -209.496, -109.406, 1.25 ) }
    dend_29 { pt3dadd( -45.2094, -210.061, -109.908, 0.81 ) }
    dend_29 { pt3dadd( -45.6623, -210.56, -110.339, 0.52 ) }
    dend_29 { pt3dadd( -45.8903, -210.78, -110.499, 0.52 ) }
    dend_29 { pt3dadd( -45.923, -210.809, -110.522, 0.52 ) }
    dend_29 { pt3dadd( -46.3338, -211.173, -110.803, 0.52 ) }
    dend_29 { pt3dadd( -47.0627, -211.786, -111.312, 0.44 ) }
    dend_29 { pt3dadd( -47.4081, -212.069, -111.543, 0.44 ) }
    dend_29 { pt3dadd( -47.995, -212.551, -111.998, 0.74 ) }
    dend_29 { pt3dadd( -48.7407, -213.184, -112.631, 0.74 ) }
    dend_29 { pt3dadd( -48.7662, -213.206, -112.654, 0.74 ) }
    dend_29 { pt3dadd( -49.3677, -213.786, -113.234, 0.37 ) }
    dend_29 { pt3dadd( -49.5953, -214.008, -113.462, 0.81 ) }
    dend_29 { pt3dadd( -50.3705, -214.693, -114.251, 0.29 ) }
    dend_29 { pt3dadd( -50.6428, -214.906, -114.523, 0.29 ) }
    dend_29 { pt3dadd( -50.9079, -215.112, -114.748, 0.88 ) }
    dend_29 { pt3dadd( -51.0151, -215.199, -114.839, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -27.5643, -193.592, -90.3591, 0.59 ) }
    dend_28 { pt3dadd( -27.3183, -195.159, -91.0155, 0.59 ) }
    dend_28 { pt3dadd( -27.2148, -195.813, -91.2551, 0.59 ) }
    dend_28 { pt3dadd( -27.1814, -195.995, -91.3172, 0.81 ) }
    dend_28 { pt3dadd( -27.0877, -196.415, -91.4521, 0.81 ) }
    dend_28 { pt3dadd( -26.9332, -197.022, -91.6407, 0.15 ) }
    dend_28 { pt3dadd( -26.77, -197.575, -91.8082, 0.15 ) }
    dend_28 { pt3dadd( -26.7529, -197.614, -91.8128, 0.15 ) }
    dend_28 { pt3dadd( -26.6429, -197.843, -91.8461, 0.59 ) }
    dend_28 { pt3dadd( -26.475, -198.181, -91.9004, 0.88 ) }
    dend_28 { pt3dadd( -26.433, -198.268, -91.9147, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( -26.3106, -198.576, -91.96, 0.88 ) }
    dend_28 { pt3dadd( -26.1028, -199.234, -92.0238, 0.52 ) }
    dend_28 { pt3dadd( -25.9807, -199.782, -92.0517, 0.44 ) }
    dend_28 { pt3dadd( -25.9369, -200.094, -92.056, 0.74 ) }
    dend_28 { pt3dadd( -25.9064, -200.492, -92.0487, 0.44 ) }
    dend_28 { pt3dadd( -25.8856, -201.047, -91.9993, 0.29 ) }
    dend_28 { pt3dadd( -25.8965, -201.431, -91.9398, 0.88 ) }
    dend_28 { pt3dadd( -25.9033, -201.786, -91.8711, 0.96 ) }
    dend_28 { pt3dadd( -25.8841, -202.333, -91.7591, 0.81 ) }
    dend_28 { pt3dadd( -25.8183, -202.957, -91.6434, 0.29 ) }
    dend_28 { pt3dadd( -25.6991, -203.603, -91.5583, 0.44 ) }
    dend_28 { pt3dadd( -25.5743, -204.056, -91.5156, 0.22 ) }
    dend_28 { pt3dadd( -25.3121, -204.766, -91.4886, 0.22 ) }
    dend_28 { pt3dadd( -25.0997, -205.187, -91.4964, 0.59 ) }
    dend_28 { pt3dadd( -24.7902, -205.652, -91.5078, 0.81 ) }
    dend_28 { pt3dadd( -24.4762, -206.048, -91.5242, 0.81 ) }
    dend_28 { pt3dadd( -24.225, -206.349, -91.5423, 0.88 ) }
    dend_28 { pt3dadd( -23.7844, -206.921, -91.5503, 0.37 ) }
    dend_28 { pt3dadd( -23.4469, -207.52, -91.5181, 0.59 ) }
    dend_28 { pt3dadd( -23.2072, -208.126, -91.4708, 0.96 ) }
    dend_28 { pt3dadd( -23.0872, -208.566, -91.4292, 0.59 ) }
    dend_28 { pt3dadd( -23.0043, -209.107, -91.3753, 0.29 ) }
    dend_28 { pt3dadd( -22.9852, -209.871, -91.3538, 0.29 ) }
    dend_28 { pt3dadd( -23.0489, -210.71, -91.3743, 0.74 ) }
    dend_28 { pt3dadd( -23.1114, -211.201, -91.4139, 0.96 ) }
    dend_28 { pt3dadd( -23.1201, -211.274, -91.4221, 0.96 ) }
    dend_28 { pt3dadd( -23.1549, -211.667, -91.4648, 0.96 ) }
    dend_28 { pt3dadd( -23.1991, -212.39, -91.5385, 0.44 ) }
    dend_28 { pt3dadd( -23.2146, -212.888, -91.5819, 0.29 ) }
    dend_28 { pt3dadd( -23.2524, -213.563, -91.5798, 0.59 ) }
    dend_28 { pt3dadd( -23.3141, -214.121, -91.5195, 1.03 ) }
    dend_28 { pt3dadd( -23.3422, -214.293, -91.4888, 1.11 ) }
    dend_28 { pt3dadd( -23.405, -214.633, -91.4071, 0.96 ) }
    dend_28 { pt3dadd( -23.4848, -215.039, -91.2887, 0.96 ) }
    dend_28 { pt3dadd( -23.6177, -215.649, -91.1011, 0.37 ) }
    dend_28 { pt3dadd( -23.7576, -216.248, -90.9221, 0.22 ) }
    dend_28 { pt3dadd( -23.8402, -216.632, -90.8241, 0.44 ) }
    dend_28 { pt3dadd( -23.9552, -217.284, -90.6699, 0.44 ) }
    dend_28 { pt3dadd( -23.9984, -217.741, -90.5776, 0.66 ) }
    dend_28 { pt3dadd( -23.993, -218.203, -90.5098, 0.88 ) }
    dend_28 { pt3dadd( -23.9599, -218.688, -90.4672, 0.29 ) }
    dend_28 { pt3dadd( -23.8961, -219.227, -90.3742, 0.29 ) }
    dend_28 { pt3dadd( -23.8864, -219.287, -90.3603, 0.29 ) }
    dend_28 { pt3dadd( -23.8016, -219.799, -90.2144, 0.29 ) }
    dend_28 { pt3dadd( -23.7022, -220.454, -90.0178, 0.29 ) }
    dend_28 { pt3dadd( -23.5987, -221.196, -89.7915, 0.29 ) }
    dend_28 { pt3dadd( -23.4966, -222.135, -89.4424, 0.59 ) }
    dend_28 { pt3dadd( -23.4897, -222.374, -89.3402, 0.74 ) }
    dend_28 { pt3dadd( -23.5114, -223.001, -89.0629, 0.29 ) }
    dend_28 { pt3dadd( -23.5572, -223.493, -88.8478, 0.29 ) }
    dend_28 { pt3dadd( -23.5597, -223.54, -88.8304, 0.29 ) }
    dend_28 { pt3dadd( -23.5344, -224.112, -88.6999, 0.81 ) }
    dend_28 { pt3dadd( -23.4991, -224.465, -88.678, 1.25 ) }
    dend_28 { pt3dadd( -23.4499, -224.851, -88.689, 0.88 ) }
    dend_28 { pt3dadd( -23.3287, -225.489, -88.7602, 0.52 ) }
    dend_28 { pt3dadd( -23.1332, -226.263, -88.8617, 0.29 ) }
    dend_28 { pt3dadd( -23.0228, -226.649, -88.9193, 0.66 ) }
    dend_28 { pt3dadd( -22.8453, -227.151, -89.0143, 0.74 ) }
    dend_28 { pt3dadd( -22.4727, -227.97, -89.1767, 0.22 ) }
    dend_28 { pt3dadd( -22.2215, -228.441, -89.2706, 0.22 ) }
    dend_28 { pt3dadd( -21.9244, -228.908, -89.3392, 0.88 ) }
    dend_28 { pt3dadd( -21.8936, -228.954, -89.3413, 0.88 ) }
    dend_28 { pt3dadd( -21.6022, -229.368, -89.3233, 0.81 ) }
    dend_28 { pt3dadd( -21.2846, -229.81, -89.2892, 0.74 ) }
    dend_28 { pt3dadd( -21.2577, -229.852, -89.2844, 0.74 ) }
    dend_28 { pt3dadd( -20.9753, -230.479, -89.2247, 0.29 ) }
    dend_28 { pt3dadd( -20.7758, -231.105, -89.1827, 0.74 ) }
    dend_28 { pt3dadd( -20.7319, -231.324, -89.1651, 0.81 ) }
    dend_28 { pt3dadd( -20.6976, -231.959, -89.1209, 0.22 ) }
    dend_28 { pt3dadd( -20.7225, -232.28, -89.1024, 0.66 ) }
    dend_28 { pt3dadd( -20.772, -232.609, -89.0933, 0.74 ) }
    dend_28 { pt3dadd( -20.7823, -232.651, -89.094, 0.74 ) }
    dend_28 { pt3dadd( -20.9312, -233.133, -89.1062, 0.74 ) }
    dend_28 { pt3dadd( -21.143, -233.695, -89.1179, 0.22 ) }
    dend_28 { pt3dadd( -21.3694, -234.152, -89.1687, 0.22 ) }
    dend_28 { pt3dadd( -21.3889, -234.188, -89.1758, 0.22 ) }
    dend_28 { pt3dadd( -21.5197, -234.446, -89.252, 0.66 ) }
    dend_28 { pt3dadd( -21.5381, -234.495, -89.2707, 0.66 ) }
    dend_28 { pt3dadd( -21.6037, -234.756, -89.3944, 0.66 ) }
    dend_28 { pt3dadd( -21.7396, -235.483, -89.7318, 0.52 ) }
    dend_28 { pt3dadd( -21.7487, -235.519, -89.7545, 0.52 ) }
    dend_28 { pt3dadd( -21.8904, -236.006, -90.0614, 0.22 ) }
    dend_28 { pt3dadd( -22.0186, -236.405, -90.3016, 1.03 ) }
    dend_28 { pt3dadd( -22.0976, -236.649, -90.4538, 1.11 ) }
    dend_28 { pt3dadd( -22.2363, -237.098, -90.7232, 0.88 ) }
    dend_28 { pt3dadd( -22.6668, -238.545, -91.5075, 0.22 ) }
    dend_28 { pt3dadd( -22.7664, -238.893, -91.6887, 0.88 ) }
    dend_28 { pt3dadd( -22.8783, -239.268, -91.8829, 0.59 ) }
    dend_28 { pt3dadd( -23.0306, -239.828, -92.1612, 0.52 ) }
    dend_28 { pt3dadd( -23.1338, -240.332, -92.3917, 0.81 ) }
    dend_28 { pt3dadd( -23.181, -240.697, -92.5923, 0.81 ) }
    dend_28 { pt3dadd( -23.2556, -241.46, -93.1251, 0.29 ) }
    dend_28 { pt3dadd( -23.2581, -241.492, -93.152, 0.29 ) }
    dend_28 { pt3dadd( -23.2748, -241.759, -93.4318, 0.96 ) }
    dend_28 { pt3dadd( -23.288, -242.018, -93.7487, 1.25 ) }
    dend_28 { pt3dadd( -23.3168, -243.16, -95.3355, 0.52 ) }
    dend_28 { pt3dadd( -23.3147, -243.898, -96.4479, 0.44 ) }
    dend_28 { pt3dadd( -23.3011, -244.097, -96.7626, 0.66 ) }
    dend_28 { pt3dadd( -23.2281, -244.681, -97.6926, 0.52 ) }
    dend_28 { pt3dadd( -23.1009, -245.304, -98.6908, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( -23.0564, -245.452, -98.9222, 0.59 ) }
    dend_28 { pt3dadd( -23.0286, -245.515, -99.0066, 0.59 ) }
    dend_28 { pt3dadd( -22.6864, -246.127, -99.7486, 0.22 ) }
    dend_28 { pt3dadd( -22.6662, -246.162, -99.7894, 0.22 ) }
    dend_28 { pt3dadd( -22.4916, -246.413, -100.021, 0.59 ) }
    dend_28 { pt3dadd( -22.4273, -246.49, -100.077, 0.59 ) }
    dend_28 { pt3dadd( -22.3398, -246.593, -100.156, 0.59 ) }
    dend_28 { pt3dadd( -22.3108, -246.626, -100.18, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -9.98183, 149.262, 6.76541, 0.29 ) }
    dend_24 { pt3dadd( -10.8154, 149.909, 6.03202, 0.29 ) }
    dend_24 { pt3dadd( -11.416, 150.343, 5.58554, 0.29 ) }
    dend_24 { pt3dadd( -12.2664, 150.934, 5.01239, 0.66 ) }
    dend_24 { pt3dadd( -13.0002, 151.451, 4.49301, 0.29 ) }
    dend_24 { pt3dadd( -13.3666, 151.711, 4.22961, 0.37 ) }
    dend_24 { pt3dadd( -14.1241, 152.255, 3.68737, 0.37 ) }
    dend_24 { pt3dadd( -14.9217, 152.843, 3.16555, 0.59 ) }
    dend_24 { pt3dadd( -15.321, 153.141, 2.90281, 0.81 ) }
    dend_24 { pt3dadd( -16.0055, 153.652, 2.46898, 0.37 ) }
    dend_24 { pt3dadd( -16.2268, 153.832, 2.34529, 0.88 ) }
    dend_24 { pt3dadd( -16.5416, 154.119, 2.1608, 1.03 ) }
    dend_24 { pt3dadd( -16.9327, 154.527, 1.92639, 0.81 ) }
    dend_24 { pt3dadd( -17.2408, 154.882, 1.7506, 0.37 ) }
    dend_24 { pt3dadd( -17.2786, 154.933, 1.73292, 0.37 ) }
    dend_24 { pt3dadd( -17.6539, 155.539, 1.60534, 0.37 ) }
    dend_24 { pt3dadd( -17.6913, 155.613, 1.59198, 0.37 ) }
    dend_24 { pt3dadd( -17.9773, 156.21, 1.57728, 0.37 ) }
    dend_24 { pt3dadd( -18.001, 156.263, 1.58323, 0.37 ) }
    dend_24 { pt3dadd( -18.3685, 157.057, 1.74684, 0.22 ) }
    dend_24 { pt3dadd( -18.5771, 157.495, 1.8557, 0.74 ) }
    dend_24 { pt3dadd( -18.601, 157.547, 1.87038, 0.74 ) }
    dend_24 { pt3dadd( -19.1483, 158.753, 2.20652, 0.29 ) }
    dend_24 { pt3dadd( -19.2559, 158.996, 2.28244, 0.66 ) }
    dend_24 { pt3dadd( -19.4065, 159.329, 2.38812, 0.66 ) }
    dend_24 { pt3dadd( -19.684, 159.917, 2.57513, 0.37 ) }
    dend_24 { pt3dadd( -19.8695, 160.34, 2.69531, 0.29 ) }
    dend_24 { pt3dadd( -20.0326, 160.77, 2.78426, 0.29 ) }
    dend_24 { pt3dadd( -20.2238, 161.409, 2.85838, 0.96 ) }
    dend_24 { pt3dadd( -20.2401, 161.463, 2.86464, 0.96 ) }
    dend_24 { pt3dadd( -20.3315, 161.812, 2.90768, 0.66 ) }
    dend_24 { pt3dadd( -20.4565, 162.346, 2.97442, 0.29 ) }
    dend_24 { pt3dadd( -20.5842, 162.874, 3.02234, 0.29 ) }
    dend_24 { pt3dadd( -20.5974, 162.929, 3.02336, 0.29 ) }
    dend_24 { pt3dadd( -20.7214, 163.471, 2.9959, 1.11 ) }
    dend_24 { pt3dadd( -20.7986, 163.99, 2.97092, 1.47 ) }
    dend_24 { pt3dadd( -20.81, 164.132, 2.96507, 1.47 ) }
    dend_24 { pt3dadd( -20.84, 164.854, 2.93568, 0.66 ) }
    dend_24 { pt3dadd( -20.853, 165.416, 2.9176, 0.37 ) }
    dend_24 { pt3dadd( -20.8678, 166.123, 2.89811, 0.37 ) }
    dend_24 { pt3dadd( -20.859, 167.226, 2.80228, 0.29 ) }
    dend_24 { pt3dadd( -20.8434, 168.394, 2.64721, 0.29 ) }
    dend_24 { pt3dadd( -20.8407, 168.514, 2.63042, 0.29 ) }
    dend_24 { pt3dadd( -20.8025, 169.264, 2.51877, 0.96 ) }
    dend_24 { pt3dadd( -20.7779, 169.668, 2.4526, 1.18 ) }
    dend_24 { pt3dadd( -20.6961, 170.99, 2.15264, 0.37 ) }
    dend_24 { pt3dadd( -20.6878, 171.428, 1.99432, 0.37 ) }
    dend_24 { pt3dadd( -24.6393, 178.238, -0.0178609, 0.37 ) }
    dend_24 { pt3dadd( -26.7961, 185.625, -2.44983, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.98183, 149.262, 6.76541, 1.03 ) }
    dend_21 { pt3dadd( -10.0461, 149.657, 6.89316, 1.03 ) }
    dend_21 { pt3dadd( -10.2301, 150.605, 7.16101, 1.4 ) }
    dend_21 { pt3dadd( -10.4462, 151.798, 7.44506, 1.4 ) }
    dend_21 { pt3dadd( -10.4583, 151.872, 7.46078, 1.4 ) }
    dend_21 { pt3dadd( -10.6095, 152.957, 7.65963, 1.25 ) }
    dend_21 { pt3dadd( -10.731, 154.104, 7.87137, 0.81 ) }
    dend_21 { pt3dadd( -10.7363, 154.179, 7.88861, 0.81 ) }
    dend_21 { pt3dadd( -10.7736, 155.027, 8.09869, 0.96 ) }
    dend_21 { pt3dadd( -10.7767, 155.327, 8.16678, 0.96 ) }
    dend_21 { pt3dadd( -10.7745, 156.169, 8.36946, 1.18 ) }
    dend_21 { pt3dadd( -10.7448, 157.133, 8.6261, 0.96 ) }
    dend_21 { pt3dadd( -10.7202, 158.497, 8.92741, 1.18 ) }
    dend_21 { pt3dadd( -10.7215, 158.609, 8.94723, 1.18 ) }
    dend_21 { pt3dadd( -10.7524, 159.526, 9.04489, 1.18 ) }
    dend_21 { pt3dadd( -10.7874, 160.573, 9.04457, 0.96 ) }
    dend_21 { pt3dadd( -10.7906, 160.667, 9.03436, 0.96 ) }
    dend_21 { pt3dadd( -10.8091, 161.939, 8.79487, 1.47 ) }
    dend_21 { pt3dadd( -10.8081, 162.013, 8.77661, 1.47 ) }
    dend_21 { pt3dadd( -10.7318, 163.184, 8.51909, 1.18 ) }
    dend_21 { pt3dadd( -10.5709, 164.39, 8.27068, 0.81 ) }
    dend_21 { pt3dadd( -10.5417, 164.524, 8.25078, 0.81 ) }
    dend_21 { pt3dadd( -10.3425, 165.355, 8.26928, 0.74 ) }
    dend_21 { pt3dadd( -10.3272, 165.421, 8.28517, 0.74 ) }
    dend_21 { pt3dadd( -10.2572, 165.984, 8.48556, 0.74 ) }
    dend_21 { pt3dadd( -10.2602, 166.055, 8.51731, 0.74 ) }
    dend_21 { pt3dadd( -10.3769, 166.641, 8.77701, 0.81 ) }
    dend_21 { pt3dadd( -10.7738, 167.928, 9.27961, 1.18 ) }
    dend_21 { pt3dadd( -10.9753, 168.445, 9.46066, 1.4 ) }
    dend_21 { pt3dadd( -11.3661, 169.377, 9.75639, 0.96 ) }
    dend_21 { pt3dadd( -11.7611, 170.278, 10.0162, 0.96 ) }
    dend_21 { pt3dadd( -12.1132, 171.081, 10.2141, 0.96 ) }
    dend_21 { pt3dadd( -12.5453, 172.085, 10.3875, 0.96 ) }
    dend_21 { pt3dadd( -12.573, 172.155, 10.4008, 0.96 ) }
    dend_21 { pt3dadd( -12.7585, 172.679, 10.5474, 0.96 ) }
    dend_21 { pt3dadd( -12.8788, 173.067, 10.6811, 1.18 ) }
    dend_21 { pt3dadd( -12.9278, 173.251, 10.7559, 1.18 ) }
    dend_21 { pt3dadd( -13.1204, 174.017, 11.074, 1.18 ) }
    dend_21 { pt3dadd( -13.4975, 175.563, 11.6751, 0.96 ) }
    dend_21 { pt3dadd( -13.8112, 176.831, 12.1686, 0.66 ) }
    dend_21 { pt3dadd( -13.9664, 177.438, 12.4059, 0.66 ) }
    dend_21 { pt3dadd( -14.1817, 178.25, 12.6974, 0.88 ) }
    dend_21 { pt3dadd( -14.3947, 179.076, 12.9674, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -14.5899, 179.862, 13.1954, 1.03 ) }
    dend_21 { pt3dadd( -14.7886, 180.715, 13.378, 1.03 ) }
    dend_21 { pt3dadd( -14.803, 180.779, 13.3927, 1.03 ) }
    dend_21 { pt3dadd( -14.968, 181.509, 13.5415, 1.11 ) }
    dend_21 { pt3dadd( -15.1458, 182.282, 13.6662, 1.11 ) }
    dend_21 { pt3dadd( -15.1724, 182.392, 13.6817, 1.11 ) }
    dend_21 { pt3dadd( -15.4595, 183.527, 13.8032, 0.96 ) }
    dend_21 { pt3dadd( -15.6656, 184.319, 13.9063, 0.96 ) }
    dend_21 { pt3dadd( -15.9283, 185.392, 14.0762, 1.4 ) }
    dend_21 { pt3dadd( -16.1005, 186.144, 14.2116, 1.03 ) }
    dend_21 { pt3dadd( -16.2866, 187.081, 14.3786, 1.25 ) }
    dend_21 { pt3dadd( -16.4495, 188.234, 14.5798, 0.88 ) }
    dend_21 { pt3dadd( -16.5162, 189.31, 14.7644, 0.88 ) }
    dend_21 { pt3dadd( -16.5096, 190.243, 14.9348, 0.88 ) }
    dend_21 { pt3dadd( -16.4893, 190.458, 14.9748, 0.88 ) }
    dend_21 { pt3dadd( -16.3773, 191.23, 15.1028, 0.88 ) }
    dend_21 { pt3dadd( -16.2281, 192.289, 15.2346, 0.81 ) }
    dend_21 { pt3dadd( -16.1067, 193.269, 15.3081, 0.81 ) }
    dend_21 { pt3dadd( -16.1035, 193.336, 15.3088, 0.81 ) }
    dend_21 { pt3dadd( -16.1296, 193.99, 15.3522, 0.96 ) }
    dend_21 { pt3dadd( -16.2787, 195.113, 15.4673, 0.96 ) }
    dend_21 { pt3dadd( -16.5248, 196.317, 15.6224, 1.03 ) }
    dend_21 { pt3dadd( -16.5392, 196.375, 15.6309, 1.03 ) }
    dend_21 { pt3dadd( -16.955, 197.839, 15.8589, 1.03 ) }
    dend_21 { pt3dadd( -17.2985, 199.052, 16.043, 1.03 ) }
    dend_21 { pt3dadd( -17.6159, 200.263, 16.2213, 1.03 ) }
    dend_21 { pt3dadd( -17.7107, 200.718, 16.2868, 1.03 ) }
    dend_21 { pt3dadd( -17.7871, 201.288, 16.3596, 1.03 ) }
    dend_21 { pt3dadd( -17.8631, 202.205, 16.4543, 0.88 ) }
    dend_21 { pt3dadd( -17.873, 203.325, 16.5246, 0.88 ) }
    dend_21 { pt3dadd( -17.8284, 204.288, 16.5281, 1.11 ) }
    dend_21 { pt3dadd( -17.7855, 204.683, 16.5119, 1.11 ) }
    dend_21 { pt3dadd( -17.6592, 205.74, 16.424, 1.11 ) }
    dend_21 { pt3dadd( -17.6389, 205.882, 16.4068, 1.11 ) }
    dend_21 { pt3dadd( -17.5209, 206.619, 16.2931, 0.96 ) }
    dend_21 { pt3dadd( -17.5131, 206.674, 16.2824, 0.96 ) }
    dend_21 { pt3dadd( -17.4016, 207.847, 16.0396, 0.88 ) }
    dend_21 { pt3dadd( -17.3547, 208.738, 15.8544, 0.66 ) }
    dend_21 { pt3dadd( -17.3514, 208.874, 15.8285, 0.66 ) }
    dend_21 { pt3dadd( -17.3253, 209.703, 15.6956, 0.66 ) }
    dend_21 { pt3dadd( -17.3216, 209.779, 15.6867, 0.66 ) }
    dend_21 { pt3dadd( -17.2342, 210.655, 15.6379, 0.96 ) }
    dend_21 { pt3dadd( -17.213, 210.789, 15.6406, 0.96 ) }
    dend_21 { pt3dadd( -17.0149, 211.649, 15.6565, 0.96 ) }
    dend_21 { pt3dadd( -16.9732, 211.808, 15.6592, 0.96 ) }
    dend_21 { pt3dadd( -16.8502, 212.265, 15.6684, 0.96 ) }
    dend_21 { pt3dadd( -16.6287, 213.136, 15.7381, 0.96 ) }
    dend_21 { pt3dadd( -16.4742, 213.767, 15.8165, 1.18 ) }
    dend_21 { pt3dadd( -16.3197, 214.51, 15.9255, 0.74 ) }
    dend_21 { pt3dadd( -16.1931, 215.392, 16.0648, 0.74 ) }
    dend_21 { pt3dadd( -16.1492, 216.069, 16.171, 1.18 ) }
    dend_21 { pt3dadd( -16.2086, 217.122, 16.326, 0.66 ) }
    dend_21 { pt3dadd( -16.3552, 217.912, 16.4292, 0.66 ) }
    dend_21 { pt3dadd( -16.6227, 218.86, 16.5334, 0.66 ) }
    dend_21 { pt3dadd( -16.9607, 219.79, 16.6199, 1.18 ) }
    dend_21 { pt3dadd( -17.2392, 220.46, 16.6492, 1.18 ) }
    dend_21 { pt3dadd( -17.8207, 221.769, 16.6358, 0.96 ) }
    dend_21 { pt3dadd( -18.2233, 222.663, 16.6149, 0.96 ) }
    dend_21 { pt3dadd( -18.5059, 223.313, 16.6197, 0.66 ) }
    dend_21 { pt3dadd( -18.527, 223.366, 16.6216, 0.66 ) }
    dend_21 { pt3dadd( -18.8909, 224.42, 16.6906, 0.59 ) }
    dend_21 { pt3dadd( -19.0927, 225.094, 16.752, 1.03 ) }
    dend_21 { pt3dadd( -19.4343, 226.33, 16.9701, 0.81 ) }
    dend_21 { pt3dadd( -19.6202, 226.989, 17.1266, 1.03 ) }
    dend_21 { pt3dadd( -19.66, 227.118, 17.1611, 1.03 ) }
    dend_21 { pt3dadd( -19.9313, 227.924, 17.3822, 1.03 ) }
    dend_21 { pt3dadd( -20.034, 228.195, 17.4603, 1.03 ) }
    dend_21 { pt3dadd( -20.4733, 229.287, 17.7402, 0.96 ) }
    dend_21 { pt3dadd( -20.8508, 230.273, 17.9313, 0.96 ) }
    dend_21 { pt3dadd( -21.0945, 231.027, 18.0598, 0.96 ) }
    dend_21 { pt3dadd( -21.2963, 231.792, 18.1724, 1.11 ) }
    dend_21 { pt3dadd( -21.4002, 232.35, 18.2368, 1.33 ) }
    dend_21 { pt3dadd( -21.4097, 232.426, 18.2423, 1.33 ) }
    dend_21 { pt3dadd( -21.4437, 233.452, 18.2486, 0.88 ) }
    dend_21 { pt3dadd( -21.4087, 234.241, 18.2576, 1.11 ) }
    dend_21 { pt3dadd( -21.3889, 234.385, 18.2664, 1.11 ) }
    dend_21 { pt3dadd( -21.2378, 235.01, 18.3369, 1.11 ) }
    dend_21 { pt3dadd( -21.2162, 235.073, 18.3467, 1.11 ) }
    dend_21 { pt3dadd( -20.9522, 235.705, 18.5314, 0.88 ) }
    dend_21 { pt3dadd( -20.9248, 235.763, 18.5539, 0.81 ) }
    dend_21 { pt3dadd( -20.6275, 236.403, 18.8087, 1.03 ) }
    dend_21 { pt3dadd( -20.4208, 236.87, 19.002, 1.03 ) }
    dend_21 { pt3dadd( -20.1161, 237.647, 19.3167, 0.81 ) }
    dend_21 { pt3dadd( -19.7364, 238.827, 19.764, 0.74 ) }
    dend_21 { pt3dadd( -19.525, 239.688, 20.061, 0.74 ) }
    dend_21 { pt3dadd( -19.3681, 240.562, 20.3577, 0.88 ) }
    dend_21 { pt3dadd( -19.3066, 241.052, 20.5141, 0.88 ) }
    dend_21 { pt3dadd( -19.2645, 241.783, 20.7471, 0.88 ) }
    dend_21 { pt3dadd( -19.2597, 242.266, 20.8896, 0.88 ) }
    dend_21 { pt3dadd( -19.2417, 242.931, 21.0481, 0.88 ) }
    dend_21 { pt3dadd( -19.1634, 243.88, 21.2666, 0.88 ) }
    dend_21 { pt3dadd( -19.086, 244.366, 21.3928, 0.88 ) }
    dend_21 { pt3dadd( -19.0572, 244.504, 21.4279, 0.88 ) }
    dend_21 { pt3dadd( -18.8429, 245.355, 21.6438, 0.88 ) }
    dend_21 { pt3dadd( -18.6099, 246.248, 21.8517, 0.88 ) }
    dend_21 { pt3dadd( -18.346, 247.226, 22.0552, 0.44 ) }
    dend_21 { pt3dadd( -18.1365, 248.12, 22.2404, 0.81 ) }
    dend_21 { pt3dadd( -18.025, 248.795, 22.3916, 1.25 ) }
    dend_21 { pt3dadd( -17.9286, 249.644, 22.5915, 0.96 ) }
    dend_21 { pt3dadd( -17.8842, 250.746, 22.8562, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( -17.8926, 251.087, 22.9372, 1.47 ) }
    dend_21 { pt3dadd( -17.9978, 252.517, 23.2445, 1.11 ) }
    dend_21 { pt3dadd( -18.0953, 253.38, 23.3952, 0.96 ) }
    dend_21 { pt3dadd( -18.1039, 253.446, 23.406, 0.96 ) }
    dend_21 { pt3dadd( -18.1922, 254.208, 23.5024, 0.96 ) }
    dend_21 { pt3dadd( -18.1973, 254.268, 23.5073, 0.96 ) }
    dend_21 { pt3dadd( -18.2261, 255.242, 23.5525, 0.96 ) }
    dend_21 { pt3dadd( -18.2205, 255.378, 23.5496, 0.96 ) }
    dend_21 { pt3dadd( -18.1099, 256.645, 23.4978, 0.96 ) }
    dend_21 { pt3dadd( -17.9297, 258.091, 23.3639, 0.96 ) }
    dend_21 { pt3dadd( -17.7279, 259.387, 23.1958, 0.96 ) }
    dend_21 { pt3dadd( -17.5938, 260.169, 23.1065, 0.96 ) }
    dend_21 { pt3dadd( -17.4573, 260.865, 23.031, 0.96 ) }
    dend_21 { pt3dadd( -17.2568, 261.81, 22.9411, 1.11 ) }
    dend_21 { pt3dadd( -16.9337, 263.218, 22.8277, 1.11 ) }
    dend_21 { pt3dadd( -16.9203, 263.276, 22.8284, 1.11 ) }
    dend_21 { pt3dadd( -16.6453, 264.527, 23.0248, 1.11 ) }
    dend_21 { pt3dadd( -16.6334, 264.591, 23.0428, 1.11 ) }
    dend_21 { pt3dadd( -16.5007, 265.395, 23.3582, 1.11 ) }
    dend_21 { pt3dadd( -16.3975, 266.054, 23.6582, 1.18 ) }
    dend_21 { pt3dadd( -16.2464, 267.177, 24.2211, 0.88 ) }
    dend_21 { pt3dadd( -16.139, 267.967, 24.581, 0.66 ) }
    dend_21 { pt3dadd( -16.1317, 268.031, 24.6053, 0.66 ) }
    dend_21 { pt3dadd( -16.119, 268.638, 24.8048, 0.81 ) }
    dend_21 { pt3dadd( -16.1576, 269.42, 25.0158, 0.81 ) }
    dend_21 { pt3dadd( -16.1629, 269.488, 25.0291, 0.81 ) }
    dend_21 { pt3dadd( -16.2286, 270.226, 25.109, 0.66 ) }
    dend_21 { pt3dadd( -16.289, 271.003, 25.1618, 1.18 ) }
    dend_21 { pt3dadd( -16.3738, 272.235, 25.2314, 1.03 ) }
    dend_21 { pt3dadd( -16.4198, 273.014, 25.2653, 0.88 ) }
    dend_21 { pt3dadd( -16.4564, 274.004, 25.2734, 0.74 ) }
    dend_21 { pt3dadd( -16.4696, 275.133, 25.2491, 1.25 ) }
    dend_21 { pt3dadd( -16.4661, 275.733, 25.2148, 1.03 ) }
    dend_21 { pt3dadd( -16.4599, 275.876, 25.2041, 1.03 ) }
    dend_21 { pt3dadd( -16.3848, 276.865, 25.0909, 1.03 ) }
    dend_21 { pt3dadd( -16.3356, 277.664, 25.0561, 1.03 ) }
    dend_21 { pt3dadd( -16.3287, 277.732, 25.0615, 1.03 ) }
    dend_21 { pt3dadd( -16.1858, 278.743, 25.2663, 1.25 ) }
    dend_21 { pt3dadd( -16.173, 278.806, 25.2878, 1.25 ) }
    dend_21 { pt3dadd( -15.9124, 279.835, 25.727, 1.4 ) }
    dend_21 { pt3dadd( -15.4447, 281.412, 26.5355, 0.74 ) }
    dend_21 { pt3dadd( -15.1492, 282.372, 27.0641, 0.59 ) }
    dend_21 { pt3dadd( -15.1224, 282.455, 27.1103, 0.59 ) }
    dend_21 { pt3dadd( -14.7256, 283.577, 27.7235, 0.59 ) }
    dend_21 { pt3dadd( -14.5075, 284.212, 28.0251, 0.81 ) }
    dend_21 { pt3dadd( -14.4882, 284.272, 28.0482, 0.81 ) }
    dend_21 { pt3dadd( -14.2954, 285.02, 28.1876, 0.81 ) }
    dend_21 { pt3dadd( -14.2594, 285.221, 28.2079, 0.81 ) }
    dend_21 { pt3dadd( -14.1419, 286.057, 28.2548, 1.03 ) }
    dend_21 { pt3dadd( -14.0469, 286.895, 28.2608, 1.25 ) }
    dend_21 { pt3dadd( -13.9594, 287.534, 28.3059, 1.25 ) }
    dend_21 { pt3dadd( -13.9501, 287.59, 28.3124, 1.25 ) }
    dend_21 { pt3dadd( -13.8067, 288.403, 28.4903, 0.96 ) }
    dend_21 { pt3dadd( -13.5929, 289.581, 28.8279, 0.74 ) }
    dend_21 { pt3dadd( -13.5093, 290.108, 29.04, 0.74 ) }
    dend_21 { pt3dadd( -13.3395, 291.283, 29.6008, 0.88 ) }
    dend_21 { pt3dadd( -13.2715, 291.867, 29.8986, 0.74 ) }
    dend_21 { pt3dadd( -13.1571, 293.093, 30.5307, 0.74 ) }
    dend_21 { pt3dadd( -13.122, 293.708, 30.8487, 0.74 ) }
    dend_21 { pt3dadd( -13.1063, 294.93, 31.4559, 0.96 ) }
    dend_21 { pt3dadd( -13.1237, 295.658, 31.7773, 1.03 ) }
    dend_21 { pt3dadd( -13.1744, 296.389, 32.0352, 1.03 ) }
    dend_21 { pt3dadd( -13.2281, 297.119, 32.2441, 1.18 ) }
    dend_21 { pt3dadd( -13.2633, 297.917, 32.3858, 0.59 ) }
    dend_21 { pt3dadd( -13.2676, 298.391, 32.4437, 0.37 ) }
    dend_21 { pt3dadd( -13.2517, 298.773, 32.4598, 0.81 ) }
    dend_21 { pt3dadd( -13.2211, 299.171, 32.4648, 0.81 ) }
    dend_21 { pt3dadd( -13.1605, 299.915, 32.4544, 0.81 ) }
    dend_21 { pt3dadd( -13.1349, 300.608, 32.4268, 0.81 ) }
    dend_21 { pt3dadd( -13.163, 301.186, 32.3899, 0.88 ) }
    dend_21 { pt3dadd( -13.2429, 301.65, 32.3527, 0.81 ) }
    dend_21 { pt3dadd( -13.4639, 302.4, 32.2839, 0.74 ) }
    dend_21 { pt3dadd( -13.7542, 303.137, 32.2116, 0.74 ) }
    dend_21 { pt3dadd( -14.1281, 303.89, 32.1353, 0.96 ) }
    dend_21 { pt3dadd( -14.5419, 304.642, 32.0664, 0.44 ) }
    dend_21 { pt3dadd( -14.9523, 305.354, 32.0116, 0.44 ) }
    dend_21 { pt3dadd( -15.3387, 306.031, 31.9759, 0.96 ) }
    dend_21 { pt3dadd( -15.3771, 306.1, 31.9746, 0.96 ) }
    dend_21 { pt3dadd( -15.6278, 306.608, 31.9688, 0.96 ) }
    dend_21 { pt3dadd( -15.9027, 307.256, 31.9655, 0.96 ) }
    dend_21 { pt3dadd( -15.9699, 307.449, 31.9749, 0.96 ) }
    dend_21 { pt3dadd( -16.1944, 308.039, 32.0277, 0.81 ) }
    dend_21 { pt3dadd( -16.2713, 308.234, 32.0669, 0.81 ) }
    dend_21 { pt3dadd( -16.6306, 309.091, 32.2944, 0.81 ) }
    dend_21 { pt3dadd( -16.6555, 309.15, 32.3129, 0.81 ) }
    dend_21 { pt3dadd( -16.9777, 309.934, 32.5809, 0.96 ) }
    dend_21 { pt3dadd( -17.3163, 310.834, 32.8912, 0.81 ) }
    dend_21 { pt3dadd( -17.716, 312.006, 33.3059, 0.81 ) }
    dend_21 { pt3dadd( -17.7336, 312.068, 33.3269, 0.81 ) }
    dend_21 { pt3dadd( -17.8888, 312.878, 33.5705, 0.81 ) }
    dend_21 { pt3dadd( -17.8956, 312.943, 33.585, 0.81 ) }
    dend_21 { pt3dadd( -17.8845, 313.726, 33.6105, 0.59 ) }
    dend_21 { pt3dadd( -17.8767, 313.827, 33.6074, 0.59 ) }
    dend_21 { pt3dadd( -17.8288, 314.381, 33.5319, 0.59 ) }
    dend_21 { pt3dadd( -17.7541, 315.168, 33.4087, 0.59 ) }
    dend_21 { pt3dadd( -17.6528, 316.093, 33.2271, 0.81 ) }
    dend_21 { pt3dadd( -17.4863, 317.428, 32.9269, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.2002, 83.7787, -65.6661, 0.52 ) }
    dend_17 { pt3dadd( -0.783624, 84.9835, -67.0543, 0.52 ) }
    dend_17 { pt3dadd( -0.749602, 85.018, -67.0898, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( -0.129, 85.8269, -67.7795, 0.44 ) }
    dend_17 { pt3dadd( -0.0949044, 85.8841, -67.8216, 0.44 ) }
    dend_17 { pt3dadd( 0.215266, 86.389, -68.2059, 0.88 ) }
    dend_17 { pt3dadd( 0.545685, 86.8587, -68.566, 1.11 ) }
    dend_17 { pt3dadd( 0.577803, 86.9089, -68.5996, 1.11 ) }
    dend_17 { pt3dadd( 1.03341, 87.4957, -68.9983, 1.03 ) }
    dend_17 { pt3dadd( 1.78274, 88.3019, -69.5561, 0.37 ) }
    dend_17 { pt3dadd( 2.82041, 89.1764, -70.2697, 0.44 ) }
    dend_17 { pt3dadd( 3.42128, 89.5866, -70.6493, 0.44 ) }
    dend_17 { pt3dadd( 3.51847, 89.6493, -70.7102, 0.44 ) }
    dend_17 { pt3dadd( 4.02444, 90.0094, -71.0896, 0.44 ) }
    dend_17 { pt3dadd( 4.07847, 90.0601, -71.1463, 0.44 ) }
    dend_17 { pt3dadd( 4.65738, 90.8377, -71.9962, 0.96 ) }
    dend_17 { pt3dadd( 4.78502, 91.1313, -72.2795, 1.33 ) }
    dend_17 { pt3dadd( 5.00344, 91.8148, -72.8855, 1.18 ) }
    dend_17 { pt3dadd( 5.27579, 92.8461, -73.7392, 0.81 ) }
    dend_17 { pt3dadd( 5.50597, 93.9625, -74.5636, 0.37 ) }
    dend_17 { pt3dadd( 5.51865, 94.0266, -74.6064, 0.37 ) }
    dend_17 { pt3dadd( 5.63026, 94.6735, -74.9627, 0.66 ) }
    dend_17 { pt3dadd( 5.7297, 95.1001, -75.1837, 0.88 ) }
    dend_17 { pt3dadd( 5.76741, 95.2414, -75.2436, 0.88 ) }
    dend_17 { pt3dadd( 5.95826, 95.891, -75.4939, 0.88 ) }
    dend_17 { pt3dadd( 6.19718, 96.7036, -75.8173, 0.74 ) }
    dend_17 { pt3dadd( 6.37294, 97.4124, -76.1179, 0.59 ) }
    dend_17 { pt3dadd( 6.57136, 98.4052, -76.5582, 1.03 ) }
    dend_17 { pt3dadd( 6.66459, 99.169, -76.8992, 0.29 ) }
    dend_17 { pt3dadd( 6.71983, 100.056, -77.268, 0.81 ) }
    dend_17 { pt3dadd( 6.71712, 100.513, -77.4398, 0.88 ) }
    dend_17 { pt3dadd( 6.67637, 101.045, -77.6038, 0.96 ) }
    dend_17 { pt3dadd( 6.62205, 101.574, -77.765, 0.66 ) }
    dend_17 { pt3dadd( 6.5062, 102.514, -78.0131, 0.22 ) }
    dend_17 { pt3dadd( 6.41532, 103.391, -78.2304, 1.62 ) }
    dend_17 { pt3dadd( 6.36431, 103.998, -78.3581, 1.99 ) }
    dend_17 { pt3dadd( 6.32295, 104.541, -78.4582, 1.77 ) }
    dend_17 { pt3dadd( 6.22036, 105.67, -78.6337, 1.25 ) }
    dend_17 { pt3dadd( 6.12371, 106.507, -78.7255, 0.81 ) }
    dend_17 { pt3dadd( 6.03661, 107.148, -78.764, 0.66 ) }
    dend_17 { pt3dadd( 5.92398, 107.829, -78.7807, 0.81 ) }
    dend_17 { pt3dadd( 5.78178, 108.636, -78.7644, 0.29 ) }
    dend_17 { pt3dadd( 5.59656, 109.591, -78.6968, 0.29 ) }
    dend_17 { pt3dadd( 5.48747, 110.086, -78.6179, 0.44 ) }
    dend_17 { pt3dadd( 5.47408, 110.151, -78.6067, 0.44 ) }
    dend_17 { pt3dadd( 5.32609, 110.899, -78.4895, 0.59 ) }
    dend_17 { pt3dadd( 5.23835, 111.405, -78.4253, 1.11 ) }
    dend_17 { pt3dadd( 5.1514, 111.968, -78.3766, 1.11 ) }
    dend_17 { pt3dadd( 5.04727, 112.69, -78.328, 0.88 ) }
    dend_17 { pt3dadd( 4.89746, 113.735, -78.2773, 0.52 ) }
    dend_17 { pt3dadd( 4.73082, 114.903, -78.2286, 0.52 ) }
    dend_17 { pt3dadd( 4.58342, 115.98, -78.1902, 0.66 ) }
    dend_17 { pt3dadd( 4.47302, 116.873, -78.1664, 0.29 ) }
    dend_17 { pt3dadd( 4.38832, 117.735, -78.155, 0.81 ) }
    dend_17 { pt3dadd( 4.3846, 117.805, -78.1555, 0.81 ) }
    dend_17 { pt3dadd( 4.39454, 118.262, -78.1684, 1.03 ) }
    dend_17 { pt3dadd( 4.41476, 118.423, -78.1779, 1.03 ) }
    dend_17 { pt3dadd( 4.51465, 118.971, -78.2317, 1.03 ) }
    dend_17 { pt3dadd( 4.64623, 119.579, -78.307, 0.96 ) }
    dend_17 { pt3dadd( 4.74416, 120.116, -78.3896, 0.66 ) }
    dend_17 { pt3dadd( 4.80993, 120.814, -78.5101, 0.52 ) }
    dend_17 { pt3dadd( 4.78879, 121.293, -78.6031, 0.44 ) }
    dend_17 { pt3dadd( 4.65571, 122.181, -78.7878, 0.44 ) }
    dend_17 { pt3dadd( 4.61437, 122.318, -78.817, 0.44 ) }
    dend_17 { pt3dadd( 4.38867, 122.822, -78.9166, 0.37 ) }
    dend_17 { pt3dadd( 4.03295, 123.436, -79.0198, 0.37 ) }
    dend_17 { pt3dadd( 3.52566, 124.212, -79.1088, 1.03 ) }
    dend_17 { pt3dadd( 3.48987, 124.269, -79.1139, 1.03 ) }
    dend_17 { pt3dadd( 3.2118, 124.771, -79.1485, 1.18 ) }
    dend_17 { pt3dadd( 2.97053, 125.282, -79.175, 0.59 ) }
    dend_17 { pt3dadd( 2.7429, 125.884, -79.1948, 0.37 ) }
    dend_17 { pt3dadd( 2.55467, 126.557, -79.208, 0.29 ) }
    dend_17 { pt3dadd( 2.36373, 127.465, -79.1857, 0.22 ) }
    dend_17 { pt3dadd( 2.27878, 127.899, -79.1649, 0.44 ) }
    dend_17 { pt3dadd( 2.2536, 128.044, -79.1559, 0.44 ) }
    dend_17 { pt3dadd( 2.13887, 128.645, -79.0513, 0.44 ) }
    dend_17 { pt3dadd( 2.12554, 128.708, -79.0304, 0.44 ) }
    dend_17 { pt3dadd( 1.92295, 129.583, -78.6519, 0.74 ) }
    dend_17 { pt3dadd( 1.74828, 130.269, -78.3159, 1.33 ) }
    dend_17 { pt3dadd( 1.53058, 131.117, -77.8758, 1.4 ) }
    dend_17 { pt3dadd( 1.19444, 132.439, -77.1812, 0.52 ) }
    dend_17 { pt3dadd( 0.97561, 133.296, -76.7412, 0.59 ) }
    dend_17 { pt3dadd( 0.812375, 133.934, -76.4395, 0.74 ) }
    dend_17 { pt3dadd( 0.706358, 134.374, -76.2596, 0.74 ) }
    dend_17 { pt3dadd( 0.689363, 134.447, -76.2358, 0.74 ) }
    dend_17 { pt3dadd( 0.567817, 134.976, -76.1251, 0.44 ) }
    dend_17 { pt3dadd( 0.399738, 135.724, -76.0918, 0.52 ) }
    dend_17 { pt3dadd( 0.299864, 136.22, -76.0954, 0.66 ) }
    dend_17 { pt3dadd( 0.215649, 136.668, -76.0804, 0.44 ) }
    dend_17 { pt3dadd( 0.104848, 137.288, -76.0422, 0.22 ) }
    dend_17 { pt3dadd( -0.0570516, 138.153, -75.9738, 0.66 ) }
    dend_17 { pt3dadd( -0.145566, 138.582, -75.9474, 0.88 ) }
    dend_17 { pt3dadd( -0.280458, 139.181, -75.9196, 0.29 ) }
    dend_17 { pt3dadd( -0.460424, 139.902, -75.894, 0.22 ) }
    dend_17 { pt3dadd( -0.589769, 140.382, -75.8842, 0.37 ) }
    dend_17 { pt3dadd( -0.727989, 140.874, -75.9029, 0.52 ) }
    dend_17 { pt3dadd( -0.938266, 141.621, -76.0008, 0.29 ) }
    dend_17 { pt3dadd( -1.04198, 142.013, -76.0638, 0.59 ) }
    dend_17 { pt3dadd( -1.07456, 142.164, -76.084, 0.59 ) }
    dend_17 { pt3dadd( -1.12469, 142.582, -76.1218, 0.59 ) }
    dend_17 { pt3dadd( -1.12766, 142.649, -76.1235, 0.59 ) }
    dend_17 { pt3dadd( -1.13044, 143.272, -76.1071, 0.59 ) }
    dend_17 { pt3dadd( -1.12357, 144.192, -76.0135, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( -1.12639, 144.947, -75.9187, 0.59 ) }
    dend_17 { pt3dadd( -1.13889, 145.572, -75.8352, 1.03 ) }
    dend_17 { pt3dadd( -1.16949, 146.195, -75.7507, 1.03 ) }
    dend_17 { pt3dadd( -1.22844, 146.819, -75.6715, 0.81 ) }
    dend_17 { pt3dadd( -1.32369, 147.473, -75.5976, 0.59 ) }
    dend_17 { pt3dadd( -1.46518, 148.161, -75.5432, 0.37 ) }
    dend_17 { pt3dadd( -1.71151, 149.13, -75.5071, 0.37 ) }
    dend_17 { pt3dadd( -1.92947, 149.924, -75.4902, 0.37 ) }
    dend_17 { pt3dadd( -2.11078, 150.564, -75.4876, 0.44 ) }
    dend_17 { pt3dadd( -2.30137, 151.237, -75.4982, 0.44 ) }
    dend_17 { pt3dadd( -2.46301, 151.873, -75.5051, 0.29 ) }
    dend_17 { pt3dadd( -2.65234, 152.699, -75.4929, 0.29 ) }
    dend_17 { pt3dadd( -2.7655, 153.342, -75.4639, 0.81 ) }
    dend_17 { pt3dadd( -2.8406, 153.963, -75.3954, 1.11 ) }
    dend_17 { pt3dadd( -2.8905, 154.592, -75.2949, 0.81 ) }
    dend_17 { pt3dadd( -2.94622, 155.516, -75.1156, 0.52 ) }
    dend_17 { pt3dadd( -2.94931, 155.582, -75.1011, 0.52 ) }
    dend_17 { pt3dadd( -3.01388, 156.402, -74.9109, 0.52 ) }
    dend_17 { pt3dadd( -3.13296, 157.288, -74.715, 0.29 ) }
    dend_17 { pt3dadd( -3.24436, 157.896, -74.5915, 0.59 ) }
    dend_17 { pt3dadd( -3.40361, 158.501, -74.498, 0.81 ) }
    dend_17 { pt3dadd( -3.44892, 158.627, -74.487, 0.81 ) }
    dend_17 { pt3dadd( -3.6524, 159.186, -74.4546, 0.81 ) }
    dend_17 { pt3dadd( -3.83231, 159.729, -74.4405, 0.66 ) }
    dend_17 { pt3dadd( -3.85356, 159.802, -74.4413, 0.66 ) }
    dend_17 { pt3dadd( -4.03289, 160.484, -74.4452, 0.44 ) }
    dend_17 { pt3dadd( -4.24159, 161.302, -74.4493, 0.37 ) }
    dend_17 { pt3dadd( -4.42858, 162.063, -74.4534, 0.37 ) }
    dend_17 { pt3dadd( -4.62984, 162.887, -74.4595, 0.52 ) }
    dend_17 { pt3dadd( -4.80158, 163.553, -74.4682, 0.37 ) }
    dend_17 { pt3dadd( -4.95748, 164.082, -74.4818, 0.37 ) }
    dend_17 { pt3dadd( -5.13092, 164.635, -74.5022, 0.81 ) }
    dend_17 { pt3dadd( -5.30732, 165.149, -74.5292, 0.88 ) }
    dend_17 { pt3dadd( -5.47999, 165.593, -74.5565, 0.59 ) }
    dend_17 { pt3dadd( -5.58718, 165.858, -74.5736, 0.44 ) }
    dend_17 { pt3dadd( -5.87101, 166.662, -74.6174, 0.37 ) }
    dend_17 { pt3dadd( -6.14537, 167.628, -74.6568, 0.37 ) }
    dend_17 { pt3dadd( -6.23433, 168.114, -74.685, 0.66 ) }
    dend_17 { pt3dadd( -6.24239, 168.19, -74.6904, 0.66 ) }
    dend_17 { pt3dadd( -6.2428, 168.945, -74.7433, 0.74 ) }
    dend_17 { pt3dadd( -6.2257, 169.329, -74.7718, 0.88 ) }
    dend_17 { pt3dadd( -6.12759, 170.207, -74.8442, 0.59 ) }
    dend_17 { pt3dadd( -5.98676, 171.08, -74.9307, 0.29 ) }
    dend_17 { pt3dadd( -5.97109, 171.155, -74.9387, 0.29 ) }
    dend_17 { pt3dadd( -5.68389, 172.331, -75.0731, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.2002, 83.7787, -65.6661, 0.59 ) }
    dend_16 { pt3dadd( -1.9439, 84.5457, -65.5626, 0.59 ) }
    dend_16 { pt3dadd( -1.76476, 85.0982, -65.4722, 0.29 ) }
    dend_16 { pt3dadd( -1.62216, 85.5606, -65.3952, 0.29 ) }
    dend_16 { pt3dadd( -1.44416, 86.1712, -65.2949, 0.29 ) }
    dend_16 { pt3dadd( -1.06414, 87.5789, -65.0626, 0.29 ) }
    dend_16 { pt3dadd( -0.833986, 88.4932, -64.9157, 0.74 ) }
    dend_16 { pt3dadd( -0.711523, 89.096, -64.8236, 0.74 ) }
    dend_16 { pt3dadd( -0.605805, 89.7222, -64.7408, 0.52 ) }
    dend_16 { pt3dadd( -0.551852, 90.1033, -64.7031, 0.44 ) }
    dend_16 { pt3dadd( -0.492717, 90.5774, -64.668, 0.29 ) }
    dend_16 { pt3dadd( -0.43081, 91.1379, -64.6501, 0.29 ) }
    dend_16 { pt3dadd( -0.343826, 91.8787, -64.652, 0.66 ) }
    dend_16 { pt3dadd( -0.272919, 92.3577, -64.6472, 0.96 ) }
    dend_16 { pt3dadd( -0.18104, 92.7968, -64.6354, 0.66 ) }
    dend_16 { pt3dadd( -0.139312, 92.9571, -64.6289, 0.66 ) }
    dend_16 { pt3dadd( 0.00550816, 93.4379, -64.604, 0.44 ) }
    dend_16 { pt3dadd( 0.149226, 93.9329, -64.5657, 0.29 ) }
    dend_16 { pt3dadd( 0.281899, 94.4231, -64.5181, 0.22 ) }
    dend_16 { pt3dadd( 0.459773, 95.2302, -64.3686, 0.29 ) }
    dend_16 { pt3dadd( 0.469646, 95.2963, -64.3527, 0.29 ) }
    dend_16 { pt3dadd( 0.535127, 95.9234, -64.1818, 0.37 ) }
    dend_16 { pt3dadd( 0.563276, 96.6112, -63.9847, 0.66 ) }
    dend_16 { pt3dadd( 0.558574, 97.0922, -63.8427, 0.96 ) }
    dend_16 { pt3dadd( 0.539864, 98.1889, -63.5335, 0.81 ) }
    dend_16 { pt3dadd( 0.546029, 98.8819, -63.3534, 0.59 ) }
    dend_16 { pt3dadd( 0.551226, 98.9568, -63.3374, 0.59 ) }
    dend_16 { pt3dadd( 0.657268, 99.7563, -63.2096, 0.59 ) }
    dend_16 { pt3dadd( 0.756128, 100.253, -63.1598, 0.66 ) }
    dend_16 { pt3dadd( 1.03442, 101.295, -63.1146, 0.22 ) }
    dend_16 { pt3dadd( 1.21351, 101.807, -63.1326, 0.22 ) }
    dend_16 { pt3dadd( 1.47921, 102.432, -63.1593, 0.74 ) }
    dend_16 { pt3dadd( 1.71575, 102.959, -63.182, 0.81 ) }
    dend_16 { pt3dadd( 1.74855, 103.031, -63.1848, 0.81 ) }
    dend_16 { pt3dadd( 1.9885, 103.614, -63.2016, 0.88 ) }
    dend_16 { pt3dadd( 2.16579, 104.086, -63.205, 0.81 ) }
    dend_16 { pt3dadd( 2.36728, 104.662, -63.2105, 0.29 ) }
    dend_16 { pt3dadd( 2.64464, 105.666, -63.2112, 0.29 ) }
    dend_16 { pt3dadd( 2.97336, 107.109, -63.2075, 0.74 ) }
    dend_16 { pt3dadd( 3.09853, 107.814, -63.2039, 1.11 ) }
    dend_16 { pt3dadd( 3.17314, 108.439, -63.2004, 0.88 ) }
    dend_16 { pt3dadd( 3.24461, 109.476, -63.1822, 0.22 ) }
    dend_16 { pt3dadd( 3.28, 110.564, -63.1548, 0.22 ) }
    dend_16 { pt3dadd( 3.28125, 110.673, -63.1552, 0.22 ) }
    dend_16 { pt3dadd( 3.28059, 110.948, -63.1783, 0.22 ) }
    dend_16 { pt3dadd( 3.28531, 111.574, -63.2646, 0.74 ) }
    dend_16 { pt3dadd( 3.28512, 111.967, -63.3289, 1.11 ) }
    dend_16 { pt3dadd( 3.26974, 112.717, -63.495, 1.25 ) }
    dend_16 { pt3dadd( 3.25703, 113.572, -63.708, 0.74 ) }
    dend_16 { pt3dadd( 3.22354, 114.726, -64.0289, 0.22 ) }
    dend_16 { pt3dadd( 3.19582, 115.42, -64.228, 0.37 ) }
    dend_16 { pt3dadd( 3.14999, 116.347, -64.4908, 0.37 ) }
    dend_16 { pt3dadd( 3.07968, 117.67, -64.8403, 0.52 ) }
    dend_16 { pt3dadd( 3.05394, 118.208, -64.9677, 0.88 ) }
    dend_16 { pt3dadd( 3.01082, 119.34, -65.184, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( 3.00061, 120.051, -65.298, 0.66 ) }
    dend_16 { pt3dadd( 3.00617, 120.846, -65.4116, 0.29 ) }
    dend_16 { pt3dadd( 3.03556, 121.729, -65.5155, 0.22 ) }
    dend_16 { pt3dadd( 3.07478, 122.475, -65.5662, 0.22 ) }
    dend_16 { pt3dadd( 3.11941, 123.189, -65.6033, 0.44 ) }
    dend_16 { pt3dadd( 3.16119, 123.663, -65.6174, 0.59 ) }
    dend_16 { pt3dadd( 3.24258, 124.343, -65.649, 0.37 ) }
    dend_16 { pt3dadd( 3.34487, 125.006, -65.6882, 0.29 ) }
    dend_16 { pt3dadd( 3.49978, 125.783, -65.7438, 0.44 ) }
    dend_16 { pt3dadd( 3.68684, 126.509, -65.8319, 0.29 ) }
    dend_16 { pt3dadd( 3.95547, 127.299, -66.021, 0.66 ) }
    dend_16 { pt3dadd( 4.11825, 127.782, -66.1671, 1.03 ) }
    dend_16 { pt3dadd( 4.22033, 128.086, -66.2734, 1.25 ) }
    dend_16 { pt3dadd( 4.39938, 128.695, -66.4967, 0.44 ) }
    dend_16 { pt3dadd( 4.61676, 129.634, -66.8433, 0.52 ) }
    dend_16 { pt3dadd( 4.79825, 130.749, -67.2474, 0.29 ) }
    dend_16 { pt3dadd( 4.9501, 132.084, -67.707, 0.29 ) }
    dend_16 { pt3dadd( 4.9612, 132.182, -67.7375, 0.29 ) }
    dend_16 { pt3dadd( 5.03013, 132.789, -67.9257, 0.29 ) }
    dend_16 { pt3dadd( 5.17575, 133.625, -68.1748, 0.81 ) }
    dend_16 { pt3dadd( 5.19552, 133.699, -68.193, 0.81 ) }
    dend_16 { pt3dadd( 5.37605, 134.171, -68.3164, 0.88 ) }
    dend_16 { pt3dadd( 5.6999, 134.853, -68.5885, 0.88 ) }
    dend_16 { pt3dadd( 5.97084, 135.448, -68.851, 0.44 ) }
    dend_16 { pt3dadd( 6.31415, 136.246, -69.2229, 0.22 ) }
    dend_16 { pt3dadd( 6.58968, 137.03, -69.6436, 0.22 ) }
    dend_16 { pt3dadd( 6.86711, 138.029, -70.2146, 0.81 ) }
    dend_16 { pt3dadd( 7.02369, 138.842, -70.6887, 0.88 ) }
    dend_16 { pt3dadd( 7.08799, 139.418, -71.0063, 0.96 ) }
    dend_16 { pt3dadd( 7.12096, 139.914, -71.2606, 0.96 ) }
    dend_16 { pt3dadd( 7.13373, 141.147, -71.8802, 0.44 ) }
    dend_16 { pt3dadd( 7.13589, 141.216, -71.913, 0.44 ) }
    dend_16 { pt3dadd( 7.19534, 141.887, -72.1673, 0.44 ) }
    dend_16 { pt3dadd( 7.31484, 142.822, -72.472, 0.66 ) }
    dend_16 { pt3dadd( 7.33753, 142.978, -72.5202, 0.66 ) }
    dend_16 { pt3dadd( 7.39394, 143.41, -72.6812, 0.88 ) }
    dend_16 { pt3dadd( 7.48887, 144.149, -72.9691, 0.52 ) }
    dend_16 { pt3dadd( 7.57854, 144.809, -73.2708, 0.37 ) }
    dend_16 { pt3dadd( 7.74463, 146.306, -74.0493, 1.11 ) }
    dend_16 { pt3dadd( 7.76562, 146.664, -74.2469, 1.25 ) }
    dend_16 { pt3dadd( 7.7729, 148.091, -75.0238, 0.22 ) }
    dend_16 { pt3dadd( 7.76721, 148.159, -75.0603, 0.22 ) }
    dend_16 { pt3dadd( 7.65784, 148.661, -75.3405, 0.22 ) }
    dend_16 { pt3dadd( 7.46186, 149.278, -75.6752, 0.22 ) }
    dend_16 { pt3dadd( 7.30408, 149.683, -75.8496, 0.74 ) }
    dend_16 { pt3dadd( 7.14228, 150.064, -76.0, 1.03 ) }
    dend_16 { pt3dadd( 6.89044, 150.647, -76.1864, 0.81 ) }
    dend_16 { pt3dadd( 6.47432, 151.655, -76.5213, 0.52 ) }
    dend_16 { pt3dadd( 6.32478, 152.009, -76.6805, 0.37 ) }
    dend_16 { pt3dadd( 6.05842, 152.686, -77.0603, 0.29 ) }
    dend_16 { pt3dadd( 5.83452, 153.374, -77.4805, 0.59 ) }
    dend_16 { pt3dadd( 5.74363, 153.791, -77.7423, 0.96 ) }
    dend_16 { pt3dadd( 5.69673, 154.199, -77.9971, 1.11 ) }
    dend_16 { pt3dadd( 5.65046, 155.451, -78.6841, 0.37 ) }
    dend_16 { pt3dadd( 5.64976, 155.519, -78.7198, 0.37 ) }
    dend_16 { pt3dadd( 5.64065, 156.276, -79.0454, 0.29 ) }
    dend_16 { pt3dadd( 5.62543, 157.059, -79.2546, 0.29 ) }
    dend_16 { pt3dadd( 5.61878, 157.134, -79.2637, 0.29 ) }
    dend_16 { pt3dadd( 5.49462, 157.922, -79.2528, 0.37 ) }
    dend_16 { pt3dadd( 5.42902, 158.32, -79.2064, 0.59 ) }
    dend_16 { pt3dadd( 5.28951, 159.129, -79.1014, 0.74 ) }
    dend_16 { pt3dadd( 5.16246, 159.791, -79.0061, 0.52 ) }
    dend_16 { pt3dadd( 4.98239, 160.798, -78.8605, 0.22 ) }
    dend_16 { pt3dadd( 4.89249, 161.503, -78.7717, 0.22 ) }
    dend_16 { pt3dadd( 4.83899, 162.068, -78.7395, 0.22 ) }
    dend_16 { pt3dadd( 4.77701, 162.895, -78.7472, 0.74 ) }
    dend_16 { pt3dadd( 4.7393, 163.609, -78.7987, 0.88 ) }
    dend_16 { pt3dadd( 4.70973, 164.256, -78.8782, 0.74 ) }
    dend_16 { pt3dadd( 4.68054, 165.054, -78.9988, 0.66 ) }
    dend_16 { pt3dadd( 4.60302, 166.391, -79.2161, 0.29 ) }
    dend_16 { pt3dadd( 4.51833, 167.291, -79.3638, 0.29 ) }
    dend_16 { pt3dadd( 4.4708, 167.763, -79.446, 0.44 ) }
    dend_16 { pt3dadd( 4.45587, 167.927, -79.474, 0.44 ) }
    dend_16 { pt3dadd( 4.42633, 168.398, -79.5443, 0.44 ) }
    dend_16 { pt3dadd( 4.42245, 168.849, -79.5926, 0.29 ) }
    dend_16 { pt3dadd( 4.46382, 169.299, -79.6125, 0.74 ) }
    dend_16 { pt3dadd( 4.58602, 169.93, -79.6426, 0.96 ) }
    dend_16 { pt3dadd( 4.66961, 170.25, -79.6612, 0.88 ) }
    dend_16 { pt3dadd( 4.9, 171.017, -79.7121, 0.29 ) }
    dend_16 { pt3dadd( 5.07305, 171.538, -79.7498, 0.44 ) }
    dend_16 { pt3dadd( 5.30552, 172.205, -79.799, 0.29 ) }
    dend_16 { pt3dadd( 5.61458, 173.183, -79.859, 0.37 ) }
    dend_16 { pt3dadd( 5.7448, 173.599, -79.8824, 0.59 ) }
    dend_16 { pt3dadd( 5.94997, 174.205, -79.9204, 0.74 ) }
    dend_16 { pt3dadd( 6.07668, 174.585, -79.9437, 0.52 ) }
    dend_16 { pt3dadd( 6.2361, 175.057, -79.9616, 0.37 ) }
    dend_16 { pt3dadd( 6.61308, 176.174, -79.9509, 0.52 ) }
    dend_16 { pt3dadd( 6.92676, 177.092, -79.9097, 0.44 ) }
    dend_16 { pt3dadd( 7.40046, 178.437, -79.8225, 0.88 ) }
    dend_16 { pt3dadd( 7.59978, 178.973, -79.7824, 1.25 ) }
    dend_16 { pt3dadd( 7.7983, 179.512, -79.7385, 1.03 ) }
    dend_16 { pt3dadd( 8.10993, 180.36, -79.6632, 0.29 ) }
    dend_16 { pt3dadd( 8.36762, 181.097, -79.5936, 0.44 ) }
    dend_16 { pt3dadd( 8.58624, 181.945, -79.5277, 0.37 ) }
    dend_16 { pt3dadd( 8.73552, 182.77, -79.4869, 0.74 ) }
    dend_16 { pt3dadd( 8.85112, 183.636, -79.4829, 0.74 ) }
    dend_16 { pt3dadd( 8.85631, 183.712, -79.4859, 0.74 ) }
    dend_16 { pt3dadd( 8.86682, 184.582, -79.5428, 0.74 ) }
    dend_16 { pt3dadd( 8.84211, 185.544, -79.6017, 0.22 ) }
    dend_16 { pt3dadd( 8.82694, 186.042, -79.631, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( 8.81374, 186.6, -79.6594, 0.96 ) }
    dend_16 { pt3dadd( 8.80911, 187.47, -79.6966, 0.22 ) }
    dend_16 { pt3dadd( 8.82779, 188.177, -79.7195, 0.66 ) }
    dend_16 { pt3dadd( 8.87419, 188.817, -79.7317, 1.03 ) }
    dend_16 { pt3dadd( 8.98716, 189.701, -79.6923, 0.81 ) }
    dend_16 { pt3dadd( 9.12074, 190.659, -79.6111, 0.52 ) }
    dend_16 { pt3dadd( 9.18902, 191.203, -79.5582, 0.44 ) }
    dend_16 { pt3dadd( 9.3022, 192.333, -79.4388, 0.37 ) }
    dend_16 { pt3dadd( 9.37011, 193.334, -79.3268, 0.88 ) }
    dend_16 { pt3dadd( 9.43062, 194.431, -79.2048, 1.25 ) }
    dend_16 { pt3dadd( 9.46917, 195.074, -79.1392, 0.88 ) }
    dend_16 { pt3dadd( 9.54054, 195.94, -79.0692, 0.44 ) }
    dend_16 { pt3dadd( 9.61967, 196.881, -79.0155, 0.59 ) }
    dend_16 { pt3dadd( 9.67002, 197.441, -79.0006, 0.81 ) }
    dend_16 { pt3dadd( 9.7339, 198.06, -79.0083, 0.59 ) }
    dend_16 { pt3dadd( 9.83395, 198.84, -79.0501, 0.37 ) }
    dend_16 { pt3dadd( 10.0566, 200.1, -79.0993, 0.52 ) }
    dend_16 { pt3dadd( 10.2148, 200.905, -79.1065, 0.37 ) }
    dend_16 { pt3dadd( 10.279, 201.277, -79.1062, 0.74 ) }
    dend_16 { pt3dadd( 10.3379, 201.835, -79.0951, 0.88 ) }
    dend_16 { pt3dadd( 10.3352, 202.144, -79.0936, 0.88 ) }
    dend_16 { pt3dadd( 10.2779, 202.702, -79.1546, 1.11 ) }
    dend_16 { pt3dadd( 10.2203, 203.27, -79.2793, 1.03 ) }
    dend_16 { pt3dadd( 10.1762, 203.806, -79.433, 0.37 ) }
    dend_16 { pt3dadd( 10.141, 204.447, -79.6423, 0.37 ) }
    dend_16 { pt3dadd( 10.1357, 205.406, -80.0106, 0.66 ) }
    dend_16 { pt3dadd( 10.1886, 206.868, -80.5946, 0.29 ) }
    dend_16 { pt3dadd( 10.2568, 207.833, -80.9773, 0.52 ) }
    dend_16 { pt3dadd( 10.2631, 207.897, -81.0018, 0.52 ) }
    dend_16 { pt3dadd( 10.3316, 208.431, -81.1881, 0.66 ) }
    dend_16 { pt3dadd( 10.4742, 209.365, -81.4533, 0.37 ) }
    dend_16 { pt3dadd( 10.6457, 210.424, -81.6637, 0.66 ) }
    dend_16 { pt3dadd( 10.763, 211.204, -81.7591, 0.59 ) }
    dend_16 { pt3dadd( 10.8379, 211.766, -81.7935, 0.74 ) }
    dend_16 { pt3dadd( 10.9381, 212.513, -81.799, 0.37 ) }
    dend_16 { pt3dadd( 11.101, 213.52, -81.6763, 0.59 ) }
    dend_16 { pt3dadd( 11.1289, 213.669, -81.6418, 0.59 ) }
    dend_16 { pt3dadd( 11.2486, 214.25, -81.4819, 0.37 ) }
    dend_16 { pt3dadd( 11.5012, 215.399, -81.14, 0.29 ) }
    dend_16 { pt3dadd( 11.716, 216.388, -80.8609, 0.52 ) }
    dend_16 { pt3dadd( 12.0545, 217.971, -80.4304, 0.22 ) }
    dend_16 { pt3dadd( 12.2799, 218.948, -80.1987, 0.52 ) }
    dend_16 { pt3dadd( 12.3872, 219.467, -80.0994, 0.81 ) }
    dend_16 { pt3dadd( 12.4804, 220.075, -80.0177, 0.52 ) }
    dend_16 { pt3dadd( 12.5876, 221.162, -79.9662, 0.74 ) }
    dend_16 { pt3dadd( 12.5888, 221.239, -79.9682, 0.74 ) }
    dend_16 { pt3dadd( 12.494, 222.255, -80.0618, 1.33 ) }
    dend_16 { pt3dadd( 12.3722, 223.045, -80.1159, 0.88 ) }
    dend_16 { pt3dadd( 12.1853, 223.939, -80.148, 0.66 ) }
    dend_16 { pt3dadd( 11.9571, 224.8, -80.1378, 0.52 ) }
    dend_16 { pt3dadd( 11.6525, 225.801, -80.1029, 0.52 ) }
    dend_16 { pt3dadd( 11.3809, 226.615, -80.0702, 0.52 ) }
    dend_16 { pt3dadd( 11.0317, 227.522, -80.026, 0.29 ) }
    dend_16 { pt3dadd( 10.7995, 228.156, -79.9982, 0.52 ) }
    dend_16 { pt3dadd( 10.5761, 228.748, -79.9647, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 34.5307, 54.1994, 11.9579, 0.59 ) }
    dend_11 { pt3dadd( 35.4913, 55.1108, 8.79219, 0.59 ) }
    dend_11 { pt3dadd( 36.0704, 55.5984, 7.27725, 0.74 ) }
    dend_11 { pt3dadd( 36.0971, 55.6194, 7.21637, 0.74 ) }
    dend_11 { pt3dadd( 36.3931, 55.8489, 6.63047, 0.74 ) }
    dend_11 { pt3dadd( 36.9307, 56.212, 5.73404, 0.96 ) }
    dend_11 { pt3dadd( 36.9675, 56.2321, 5.6783, 0.96 ) }
    dend_11 { pt3dadd( 37.4851, 56.394, 5.20658, 0.96 ) }
    dend_11 { pt3dadd( 37.5359, 56.4074, 5.16052, 0.96 ) }
    dend_11 { pt3dadd( 38.4901, 56.6808, 4.22853, 0.52 ) }
    dend_11 { pt3dadd( 39.0962, 56.872, 3.59256, 0.52 ) }
    dend_11 { pt3dadd( 39.9052, 57.1412, 2.72318, 0.81 ) }
    dend_11 { pt3dadd( 40.3505, 57.2971, 2.25633, 0.88 ) }
    dend_11 { pt3dadd( 41.1143, 57.5564, 1.41649, 0.52 ) }
    dend_11 { pt3dadd( 41.3477, 57.637, 1.17228, 0.74 ) }
    dend_11 { pt3dadd( 41.4325, 57.6727, 1.06735, 0.74 ) }
    dend_11 { pt3dadd( 41.7145, 57.8382, 0.644354, 0.29 ) }
    dend_11 { pt3dadd( 42.0476, 58.0865, 0.0968499, 0.59 ) }
    dend_11 { pt3dadd( 42.5531, 58.5763, -0.980425, 0.74 ) }
    dend_11 { pt3dadd( 42.8188, 58.8668, -1.60386, 0.59 ) }
    dend_11 { pt3dadd( 43.4096, 59.5905, -3.15335, 1.03 ) }
    dend_11 { pt3dadd( 43.4455, 59.6378, -3.24893, 1.03 ) }
    dend_11 { pt3dadd( 43.5563, 59.7997, -3.56023, 0.74 ) }
    dend_11 { pt3dadd( 43.9979, 60.5377, -4.82235, 0.44 ) }
    dend_11 { pt3dadd( 44.174, 60.85, -5.27078, 0.59 ) }
    dend_11 { pt3dadd( 44.5349, 61.428, -6.0603, 0.66 ) }
    dend_11 { pt3dadd( 44.8109, 61.772, -6.477, 0.74 ) }
    dend_11 { pt3dadd( 44.8438, 61.8091, -6.5229, 0.74 ) }
    dend_11 { pt3dadd( 44.9743, 61.9441, -6.68544, 0.74 ) }
    dend_11 { pt3dadd( 45.0092, 61.9763, -6.71989, 0.74 ) }
    dend_11 { pt3dadd( 45.6968, 62.742, -7.58511, 0.29 ) }
    dend_11 { pt3dadd( 45.8449, 63.0127, -7.88251, 0.66 ) }
    dend_11 { pt3dadd( 45.8701, 63.107, -7.98778, 0.66 ) }
    dend_11 { pt3dadd( 45.9117, 63.3297, -8.2743, 0.88 ) }
    dend_11 { pt3dadd( 45.9116, 63.3725, -8.33878, 0.88 ) }
    dend_11 { pt3dadd( 45.8159, 64.2194, -9.65212, 0.29 ) }
    dend_11 { pt3dadd( 45.663, 64.9549, -10.8155, 0.29 ) }
    dend_11 { pt3dadd( 45.4298, 65.8298, -12.2344, 1.11 ) }
    dend_11 { pt3dadd( 45.1749, 66.6519, -13.5923, 0.96 ) }
    dend_11 { pt3dadd( 44.6291, 68.2204, -16.1479, 0.66 ) }
    dend_11 { pt3dadd( 44.5122, 68.5274, -16.6356, 0.66 ) }
    dend_11 { pt3dadd( 44.4688, 68.6307, -16.7901, 0.66 ) }
    dend_11 { pt3dadd( 44.2463, 69.1834, -17.5519, 0.59 ) }
    dend_11 { pt3dadd( 44.2122, 69.2855, -17.6683, 0.59 ) }
    dend_11 { pt3dadd( 43.996, 70.2155, -18.4249, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 43.9952, 70.2585, -18.4503, 0.52 ) }
    dend_11 { pt3dadd( 44.0312, 70.7312, -18.7309, 0.96 ) }
    dend_11 { pt3dadd( 44.1197, 71.2899, -19.046, 1.11 ) }
    dend_11 { pt3dadd( 44.4089, 72.4427, -19.6325, 0.29 ) }
    dend_11 { pt3dadd( 44.4263, 72.4921, -19.6616, 0.29 ) }
    dend_11 { pt3dadd( 44.6014, 72.8116, -19.9249, 0.52 ) }
    dend_11 { pt3dadd( 44.6257, 72.8491, -19.9635, 0.52 ) }
    dend_11 { pt3dadd( 44.7204, 72.9771, -20.1168, 0.74 ) }
    dend_11 { pt3dadd( 44.746, 73.0162, -20.1655, 0.74 ) }
    dend_11 { pt3dadd( 45.1316, 73.7185, -20.9005, 0.74 ) }
    dend_11 { pt3dadd( 45.4184, 74.4046, -21.5004, 0.59 ) }
    dend_11 { pt3dadd( 45.4351, 74.4559, -21.5397, 0.59 ) }
    dend_11 { pt3dadd( 45.5834, 74.9338, -21.8565, 0.29 ) }
    dend_11 { pt3dadd( 45.811, 75.7329, -22.2971, 0.29 ) }
    dend_11 { pt3dadd( 45.975, 76.3991, -22.6154, 0.88 ) }
    dend_11 { pt3dadd( 46.0576, 76.7854, -22.7462, 1.11 ) }
    dend_11 { pt3dadd( 46.0688, 76.8396, -22.762, 1.11 ) }
    dend_11 { pt3dadd( 46.205, 77.3786, -22.9259, 0.88 ) }
    dend_11 { pt3dadd( 46.2747, 77.5887, -23.0115, 0.52 ) }
    dend_11 { pt3dadd( 46.6374, 78.3762, -23.3933, 0.37 ) }
    dend_11 { pt3dadd( 46.9908, 79.0321, -23.7766, 0.22 ) }
    dend_11 { pt3dadd( 47.0212, 79.0838, -23.8092, 0.22 ) }
    dend_11 { pt3dadd( 47.2144, 79.4208, -24.0121, 0.74 ) }
    dend_11 { pt3dadd( 47.6008, 80.2132, -24.4982, 0.88 ) }
    dend_11 { pt3dadd( 47.7933, 80.6027, -24.7347, 0.22 ) }
    dend_11 { pt3dadd( 47.9894, 80.9549, -24.981, 0.29 ) }
    dend_11 { pt3dadd( 48.0191, 81.0009, -25.0197, 0.29 ) }
    dend_11 { pt3dadd( 48.2343, 81.3446, -25.4083, 0.29 ) }
    dend_11 { pt3dadd( 48.6155, 81.9624, -26.3569, 0.88 ) }
    dend_11 { pt3dadd( 48.7555, 82.168, -26.7287, 1.18 ) }
    dend_11 { pt3dadd( 49.1775, 82.7467, -27.9134, 0.29 ) }
    dend_11 { pt3dadd( 49.3667, 82.9919, -28.4492, 0.88 ) }
    dend_11 { pt3dadd( 50.0207, 83.8245, -30.2451, 1.33 ) }
    dend_11 { pt3dadd( 50.5753, 84.488, -31.6922, 0.52 ) }
    dend_11 { pt3dadd( 50.7704, 84.7183, -32.1728, 1.25 ) }
    dend_11 { pt3dadd( 50.7908, 84.7453, -32.2219, 1.25 ) }
    dend_11 { pt3dadd( 51.2517, 85.4591, -33.2895, 0.29 ) }
    dend_11 { pt3dadd( 51.4818, 85.8446, -33.7713, 0.29 ) }
    dend_11 { pt3dadd( 51.722, 86.2293, -34.1082, 0.59 ) }
    dend_11 { pt3dadd( 51.8557, 86.4555, -34.2759, 0.96 ) }
    dend_11 { pt3dadd( 52.1279, 86.916, -34.6225, 0.96 ) }
    dend_11 { pt3dadd( 52.5863, 87.6075, -35.1872, 0.59 ) }
    dend_11 { pt3dadd( 52.6204, 87.6512, -35.2252, 0.59 ) }
    dend_11 { pt3dadd( 52.8938, 87.9779, -35.5208, 0.29 ) }
    dend_11 { pt3dadd( 53.2881, 88.4492, -35.9181, 0.44 ) }
    dend_11 { pt3dadd( 53.5327, 88.74, -36.1448, 0.66 ) }
    dend_11 { pt3dadd( 53.8899, 89.2087, -36.4729, 0.29 ) }
    dend_11 { pt3dadd( 54.1283, 89.5182, -36.662, 0.22 ) }
    dend_11 { pt3dadd( 54.4381, 89.9346, -36.9144, 0.66 ) }
    dend_11 { pt3dadd( 54.6042, 90.1561, -37.0485, 0.74 ) }
    dend_11 { pt3dadd( 54.7768, 90.3924, -37.1814, 0.59 ) }
    dend_11 { pt3dadd( 55.3966, 91.1782, -37.6481, 0.22 ) }
    dend_11 { pt3dadd( 55.6834, 91.4605, -37.8742, 0.44 ) }
    dend_11 { pt3dadd( 55.7306, 91.4926, -37.9136, 0.44 ) }
    dend_11 { pt3dadd( 56.0076, 91.6228, -38.1388, 0.59 ) }
    dend_11 { pt3dadd( 56.0511, 91.6405, -38.1756, 0.59 ) }
    dend_11 { pt3dadd( 56.4763, 91.7906, -38.5334, 0.59 ) }
    dend_11 { pt3dadd( 57.1724, 92.0199, -39.0911, 0.22 ) }
    dend_11 { pt3dadd( 57.5466, 92.1796, -39.3924, 0.59 ) }
    dend_11 { pt3dadd( 57.7944, 92.301, -39.586, 0.66 ) }
    dend_11 { pt3dadd( 58.2461, 92.5839, -39.9828, 0.66 ) }
    dend_11 { pt3dadd( 58.2858, 92.6136, -40.0187, 0.66 ) }
    dend_11 { pt3dadd( 58.7927, 93.0747, -40.5043, 0.22 ) }
    dend_11 { pt3dadd( 59.1496, 93.4359, -40.8374, 0.66 ) }
    dend_11 { pt3dadd( 59.3065, 93.6034, -40.987, 0.96 ) }
    dend_11 { pt3dadd( 60.127, 94.4991, -41.7602, 0.22 ) }
    dend_11 { pt3dadd( 60.3998, 94.8195, -42.0559, 0.22 ) }
    dend_11 { pt3dadd( 60.7563, 95.3233, -42.6036, 0.59 ) }
    dend_11 { pt3dadd( 60.8973, 95.5813, -42.9284, 0.96 ) }
    dend_11 { pt3dadd( 60.9573, 95.704, -43.1002, 1.18 ) }
    dend_11 { pt3dadd( 60.9728, 95.7358, -43.148, 1.18 ) }
    dend_11 { pt3dadd( 61.4218, 96.4719, -44.3654, 0.44 ) }
    dend_11 { pt3dadd( 61.8347, 96.9985, -45.3415, 0.37 ) }
    dend_11 { pt3dadd( 62.1776, 97.3532, -46.0531, 0.29 ) }
    dend_11 { pt3dadd( 62.406, 97.5542, -46.4621, 0.44 ) }
    dend_11 { pt3dadd( 62.5819, 97.7039, -46.7518, 0.44 ) }
    dend_11 { pt3dadd( 63.1311, 98.1255, -47.4892, 0.22 ) }
    dend_11 { pt3dadd( 63.5941, 98.3932, -47.9412, 0.81 ) }
    dend_11 { pt3dadd( 63.6855, 98.438, -48.0184, 0.81 ) }
    dend_11 { pt3dadd( 63.9871, 98.5593, -48.2668, 0.96 ) }
    dend_11 { pt3dadd( 65.141, 98.9806, -49.229, 0.37 ) }
    dend_11 { pt3dadd( 65.8035, 99.2359, -49.7858, 0.37 ) }
    dend_11 { pt3dadd( 66.4133, 99.5208, -50.3682, 0.29 ) }
    dend_11 { pt3dadd( 66.4465, 99.5363, -50.4042, 0.29 ) }
    dend_11 { pt3dadd( 66.8654, 99.7238, -50.8825, 0.29 ) }
    dend_11 { pt3dadd( 67.1905, 99.8615, -51.2519, 0.74 ) }
    dend_11 { pt3dadd( 67.6303, 100.021, -51.6634, 1.03 ) }
    dend_11 { pt3dadd( 68.438, 100.329, -52.3861, 0.88 ) }
    dend_11 { pt3dadd( 69.5991, 100.754, -53.1926, 0.29 ) }
    dend_11 { pt3dadd( 70.0267, 100.88, -53.4172, 0.44 ) }
    dend_11 { pt3dadd( 70.6601, 101.019, -53.6677, 0.29 ) }
    dend_11 { pt3dadd( 71.7173, 101.155, -53.9611, 1.33 ) }
    dend_11 { pt3dadd( 72.1132, 101.168, -54.0244, 1.69 ) }
    dend_11 { pt3dadd( 73.461, 101.144, -54.0959, 0.29 ) }
    dend_11 { pt3dadd( 74.0531, 101.12, -54.0865, 0.29 ) }
    dend_11 { pt3dadd( 74.4115, 101.095, -54.0904, 0.66 ) }
    dend_11 { pt3dadd( 74.4646, 101.09, -54.0943, 0.66 ) }
    dend_11 { pt3dadd( 74.849, 101.05, -54.1737, 0.66 ) }
    dend_11 { pt3dadd( 75.5043, 100.966, -54.3717, 0.22 ) }
    dend_11 { pt3dadd( 75.8935, 100.884, -54.5378, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 75.9567, 100.869, -54.5624, 0.44 ) }
    dend_11 { pt3dadd( 76.4253, 100.738, -54.7315, 0.44 ) }
    dend_11 { pt3dadd( 76.4696, 100.726, -54.7544, 0.44 ) }
    dend_11 { pt3dadd( 77.0232, 100.603, -55.0943, 0.29 ) }
    dend_11 { pt3dadd( 77.6004, 100.485, -55.5361, 0.29 ) }
    dend_11 { pt3dadd( 78.0119, 100.407, -55.8972, 0.74 ) }
    dend_11 { pt3dadd( 78.2341, 100.369, -56.1042, 0.96 ) }
    dend_11 { pt3dadd( 79.3668, 100.212, -57.2606, 0.37 ) }
    dend_11 { pt3dadd( 79.6112, 100.193, -57.5311, 1.03 ) }
    dend_11 { pt3dadd( 80.1797, 100.221, -58.2672, 1.03 ) }
    dend_11 { pt3dadd( 80.4162, 100.264, -58.6322, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 34.5307, 54.1994, 11.9579, 0.88 ) }
    dend_4 { pt3dadd( 36.345, 54.9115, 13.7611, 0.88 ) }
    dend_4 { pt3dadd( 37.2204, 55.3493, 14.5142, 0.66 ) }
    dend_4 { pt3dadd( 37.6854, 55.6464, 14.9139, 0.66 ) }
    dend_4 { pt3dadd( 37.7266, 55.6789, 14.9499, 0.66 ) }
    dend_4 { pt3dadd( 38.1679, 56.1191, 15.3491, 0.66 ) }
    dend_4 { pt3dadd( 38.2045, 56.1613, 15.3822, 0.66 ) }
    dend_4 { pt3dadd( 38.5845, 56.7994, 15.7168, 0.74 ) }
    dend_4 { pt3dadd( 39.1076, 57.8492, 16.3137, 0.44 ) }
    dend_4 { pt3dadd( 39.3272, 58.3201, 16.615, 0.37 ) }
    dend_4 { pt3dadd( 39.6353, 58.9887, 17.0713, 0.37 ) }
    dend_4 { pt3dadd( 39.7763, 59.3009, 17.2923, 0.59 ) }
    dend_4 { pt3dadd( 40.1093, 60.046, 17.8122, 0.59 ) }
    dend_4 { pt3dadd( 40.354, 60.5878, 18.1758, 0.59 ) }
    dend_4 { pt3dadd( 40.4809, 60.8386, 18.3109, 0.88 ) }
    dend_4 { pt3dadd( 40.5162, 60.8919, 18.3417, 0.88 ) }
    dend_4 { pt3dadd( 40.9074, 61.3464, 18.6861, 1.18 ) }
    dend_4 { pt3dadd( 40.9889, 61.4273, 18.7645, 1.18 ) }
    dend_4 { pt3dadd( 41.2401, 61.6597, 19.0304, 0.88 ) }
    dend_4 { pt3dadd( 41.7825, 62.1518, 19.6304, 0.44 ) }
    dend_4 { pt3dadd( 42.4194, 62.7254, 20.3069, 0.74 ) }
    dend_4 { pt3dadd( 43.2608, 63.4644, 21.1831, 1.33 ) }
    dend_4 { pt3dadd( 44.0235, 64.1385, 21.9644, 0.96 ) }
    dend_4 { pt3dadd( 44.7975, 64.8432, 22.7455, 0.52 ) }
    dend_4 { pt3dadd( 45.2595, 65.2944, 23.2116, 0.44 ) }
    dend_4 { pt3dadd( 45.8533, 65.9051, 23.8339, 0.37 ) }
    dend_4 { pt3dadd( 46.4077, 66.5385, 24.4848, 0.37 ) }
    dend_4 { pt3dadd( 46.7472, 66.9594, 24.9487, 0.37 ) }
    dend_4 { pt3dadd( 46.8268, 67.0697, 25.0857, 0.37 ) }
    dend_4 { pt3dadd( 47.063, 67.4217, 25.6103, 0.59 ) }
    dend_4 { pt3dadd( 47.4947, 68.1653, 26.9226, 0.88 ) }
    dend_4 { pt3dadd( 47.7441, 68.7042, 28.0002, 0.88 ) }
    dend_4 { pt3dadd( 47.883, 69.1228, 28.8608, 0.52 ) }
    dend_4 { pt3dadd( 47.9531, 69.3707, 29.3995, 0.52 ) }
    dend_4 { pt3dadd( 47.9592, 69.3949, 29.4474, 0.52 ) }
    dend_4 { pt3dadd( 48.014, 69.6421, 29.8135, 0.52 ) }
    dend_4 { pt3dadd( 48.025, 69.6949, 29.8442, 0.52 ) }
    dend_4 { pt3dadd( 48.1403, 70.0856, 29.9304, 0.74 ) }
    dend_4 { pt3dadd( 48.1704, 70.1735, 29.939, 0.74 ) }
    dend_4 { pt3dadd( 48.3922, 70.7162, 29.9744, 0.37 ) }
    dend_4 { pt3dadd( 48.7427, 71.5235, 30.0146, 0.44 ) }
    dend_4 { pt3dadd( 49.0474, 72.202, 29.9956, 0.44 ) }
    dend_4 { pt3dadd( 49.2985, 72.7616, 29.9522, 0.74 ) }
    dend_4 { pt3dadd( 49.3504, 72.8746, 29.938, 0.74 ) }
    dend_4 { pt3dadd( 49.6583, 73.5998, 29.8239, 0.74 ) }
    dend_4 { pt3dadd( 49.6814, 73.6569, 29.8132, 0.74 ) }
    dend_4 { pt3dadd( 50.0015, 74.5173, 29.6492, 0.66 ) }
    dend_4 { pt3dadd( 50.022, 74.5774, 29.6392, 0.66 ) }
    dend_4 { pt3dadd( 50.2069, 75.1, 29.5734, 0.74 ) }
    dend_4 { pt3dadd( 50.5357, 76.0375, 29.498, 0.29 ) }
    dend_4 { pt3dadd( 50.7406, 76.5976, 29.5096, 0.44 ) }
    dend_4 { pt3dadd( 50.985, 77.2399, 29.5836, 0.22 ) }
    dend_4 { pt3dadd( 51.1666, 77.7129, 29.6956, 0.66 ) }
    dend_4 { pt3dadd( 51.2975, 78.0704, 29.8006, 0.66 ) }
    dend_4 { pt3dadd( 51.3182, 78.1351, 29.8255, 0.66 ) }
    dend_4 { pt3dadd( 51.5944, 78.9334, 30.2035, 0.44 ) }
    dend_4 { pt3dadd( 51.6158, 78.9893, 30.2259, 0.44 ) }
    dend_4 { pt3dadd( 51.7402, 79.2737, 30.3139, 0.52 ) }
    dend_4 { pt3dadd( 51.8168, 79.4513, 30.3495, 0.52 ) }
    dend_4 { pt3dadd( 51.9591, 79.8065, 30.3883, 0.52 ) }
    dend_4 { pt3dadd( 52.2415, 80.6045, 30.4385, 0.29 ) }
    dend_4 { pt3dadd( 52.4638, 81.3781, 30.4803, 0.29 ) }
    dend_4 { pt3dadd( 52.4746, 81.4299, 30.4865, 0.29 ) }
    dend_4 { pt3dadd( 52.5575, 82.0037, 30.584, 0.44 ) }
    dend_4 { pt3dadd( 52.5701, 82.2007, 30.6292, 0.44 ) }
    dend_4 { pt3dadd( 52.5668, 82.7965, 30.8405, 0.44 ) }
    dend_4 { pt3dadd( 52.5165, 83.3382, 31.0966, 0.59 ) }
    dend_4 { pt3dadd( 52.4953, 83.7987, 31.3783, 0.74 ) }
    dend_4 { pt3dadd( 52.4989, 83.8579, 31.4169, 0.74 ) }
    dend_4 { pt3dadd( 52.5904, 84.2924, 31.7028, 0.74 ) }
    dend_4 { pt3dadd( 52.8833, 84.9018, 32.2037, 0.52 ) }
    dend_4 { pt3dadd( 52.9125, 84.9429, 32.2415, 0.52 ) }
    dend_4 { pt3dadd( 53.2821, 85.4119, 32.6636, 0.44 ) }
    dend_4 { pt3dadd( 53.493, 85.671, 32.9154, 0.29 ) }
    dend_4 { pt3dadd( 53.8006, 86.0941, 33.3273, 0.29 ) }
    dend_4 { pt3dadd( 54.4134, 86.9789, 34.3146, 0.29 ) }
    dend_4 { pt3dadd( 54.6178, 87.3098, 34.6835, 0.37 ) }
    dend_4 { pt3dadd( 54.8852, 87.771, 35.1829, 0.44 ) }
    dend_4 { pt3dadd( 55.2456, 88.4505, 35.9033, 0.96 ) }
    dend_4 { pt3dadd( 55.476, 88.8736, 36.3398, 1.25 ) }
    dend_4 { pt3dadd( 56.1439, 89.9224, 37.3854, 0.52 ) }
    dend_4 { pt3dadd( 56.4565, 90.3678, 37.7661, 0.52 ) }
    dend_4 { pt3dadd( 56.7684, 90.7315, 38.065, 0.66 ) }
    dend_4 { pt3dadd( 56.8145, 90.7752, 38.0995, 0.66 ) }
    dend_4 { pt3dadd( 57.2864, 91.1911, 38.3631, 0.44 ) }
    dend_4 { pt3dadd( 57.9966, 91.8046, 38.6928, 0.29 ) }
    dend_4 { pt3dadd( 58.2078, 92.0273, 38.7881, 0.52 ) }
    dend_4 { pt3dadd( 58.5291, 92.4082, 38.9827, 0.52 ) }
    dend_4 { pt3dadd( 58.9102, 92.8985, 39.2503, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 59.2005, 93.2796, 39.4414, 0.29 ) }
    dend_4 { pt3dadd( 59.4575, 93.5907, 39.6237, 0.52 ) }
    dend_4 { pt3dadd( 60.0248, 94.2229, 39.9778, 0.88 ) }
    dend_4 { pt3dadd( 60.3197, 94.5219, 40.1455, 0.52 ) }
    dend_4 { pt3dadd( 60.9921, 95.1358, 40.4821, 0.44 ) }
    dend_4 { pt3dadd( 61.5321, 95.592, 40.7115, 0.59 ) }
    dend_4 { pt3dadd( 62.5289, 96.3195, 41.0997, 0.29 ) }
    dend_4 { pt3dadd( 63.2705, 96.7952, 41.3713, 0.29 ) }
    dend_4 { pt3dadd( 67.3055, 103.259, 45.9078, 0.29 ) }
    dend_4 { pt3dadd( 70.0974, 110.874, 49.2882, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -82.7522, -139.079, 32.3596, 0.29 ) }
    dend_87 { pt3dadd( -82.9013, -140.079, 32.7156, 0.29 ) }
    dend_87 { pt3dadd( -82.9521, -140.42, 32.8369, 0.74 ) }
    dend_87 { pt3dadd( -83.0471, -141.057, 33.0638, 0.29 ) }
    dend_87 { pt3dadd( -83.1364, -141.656, 33.2771, 0.29 ) }
    dend_87 { pt3dadd( -83.2578, -142.471, 33.5671, 0.37 ) }
    dend_87 { pt3dadd( -84.8671, -150.952, 35.3478, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -82.7522, -139.079, 32.3596, 0.37 ) }
    dend_68 { pt3dadd( -83.0362, -139.199, 33.1501, 0.37 ) }
    dend_68 { pt3dadd( -83.2073, -139.262, 33.549, 0.37 ) }
    dend_68 { pt3dadd( -83.5242, -139.358, 34.2849, 0.44 ) }
    dend_68 { pt3dadd( -83.7549, -139.426, 34.7897, 0.37 ) }
    dend_68 { pt3dadd( -84.2244, -139.578, 35.7675, 0.88 ) }
    dend_68 { pt3dadd( -84.3808, -139.646, 36.1262, 1.11 ) }
    dend_68 { pt3dadd( -84.5718, -139.739, 36.5616, 0.81 ) }
    dend_68 { pt3dadd( -84.9961, -140.019, 37.6391, 0.29 ) }
    dend_68 { pt3dadd( -85.1378, -140.115, 37.9769, 0.29 ) }
    dend_68 { pt3dadd( -85.2613, -140.202, 38.283, 0.74 ) }
    dend_68 { pt3dadd( -85.7005, -140.48, 39.2653, 0.44 ) }
    dend_68 { pt3dadd( -85.8356, -140.56, 39.5724, 0.44 ) }
    dend_68 { pt3dadd( -86.1489, -140.701, 40.2206, 0.29 ) }
    dend_68 { pt3dadd( -86.4654, -140.863, 40.9593, 0.29 ) }
    dend_68 { pt3dadd( -86.6304, -140.965, 41.5373, 0.59 ) }
    dend_68 { pt3dadd( -86.7304, -141.026, 41.9566, 0.66 ) }
    dend_68 { pt3dadd( -86.8733, -141.103, 42.5836, 0.44 ) }
    dend_68 { pt3dadd( -86.9863, -141.174, 43.2017, 0.37 ) }
    dend_68 { pt3dadd( -87.2148, -141.355, 44.783, 0.66 ) }
    dend_68 { pt3dadd( -87.4072, -141.554, 46.3562, 0.81 ) }
    dend_68 { pt3dadd( -87.4571, -141.594, 46.7, 0.88 ) }
    dend_68 { pt3dadd( -87.4953, -141.627, 47.0099, 0.88 ) }
    dend_68 { pt3dadd( -87.5017, -141.632, 47.0628, 0.88 ) }
    dend_68 { pt3dadd( -87.6365, -141.714, 47.9508, 0.52 ) }
    dend_68 { pt3dadd( -87.7946, -141.714, 48.358, 0.52 ) }
    dend_68 { pt3dadd( -88.4333, -141.72, 49.5317, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -0.81798, -106.1, -27.1119, 0.74 ) }
    dend_52 { pt3dadd( -0.915176, -107.089, -27.5814, 0.74 ) }
    dend_52 { pt3dadd( -0.913113, -107.897, -27.9431, 0.74 ) }
    dend_52 { pt3dadd( -0.8532, -109.009, -28.4009, 0.88 ) }
    dend_52 { pt3dadd( -0.792828, -109.692, -28.6647, 0.88 ) }
    dend_52 { pt3dadd( -0.693858, -110.811, -29.0972, 0.81 ) }
    dend_52 { pt3dadd( -0.559593, -112.329, -29.684, 0.88 ) }
    dend_52 { pt3dadd( -0.402504, -113.261, -30.0093, 0.88 ) }
    dend_52 { pt3dadd( -0.247035, -113.914, -30.2317, 1.33 ) }
    dend_52 { pt3dadd( -0.0464659, -114.606, -30.4386, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.81798, -106.1, -27.1119, 0.59 ) }
    dend_49 { pt3dadd( -0.783504, -106.719, -27.2421, 0.59 ) }
    dend_49 { pt3dadd( -0.719749, -107.529, -27.5439, 0.52 ) }
    dend_49 { pt3dadd( -0.620717, -108.344, -27.8761, 0.44 ) }
    dend_49 { pt3dadd( -0.52164, -109.05, -28.1725, 0.44 ) }
    dend_49 { pt3dadd( -0.359485, -110.009, -28.5483, 0.59 ) }
    dend_49 { pt3dadd( -0.135585, -111.158, -28.9956, 0.74 ) }
    dend_49 { pt3dadd( 0.0635401, -112.02, -29.3571, 0.59 ) }
    dend_49 { pt3dadd( 0.230951, -112.646, -29.627, 0.59 ) }
    dend_49 { pt3dadd( 0.246308, -112.696, -29.6468, 0.59 ) }
    dend_49 { pt3dadd( 0.565735, -113.667, -29.9577, 0.59 ) }
    dend_49 { pt3dadd( 0.923274, -114.709, -30.1496, 0.74 ) }
    dend_49 { pt3dadd( 1.13959, -115.302, -30.2035, 0.74 ) }
    dend_49 { pt3dadd( 1.5034, -116.264, -30.251, 0.66 ) }
    dend_49 { pt3dadd( 1.84947, -117.15, -30.2738, 0.59 ) }
    dend_49 { pt3dadd( 1.89783, -117.26, -30.2666, 0.59 ) }
    dend_49 { pt3dadd( 2.34048, -118.08, -30.0996, 0.59 ) }
    dend_49 { pt3dadd( 2.53011, -118.368, -29.9921, 0.81 ) }
    dend_49 { pt3dadd( 2.56592, -118.419, -29.9698, 0.81 ) }
    dend_49 { pt3dadd( 2.91076, -118.897, -29.7575, 0.81 ) }
    dend_49 { pt3dadd( 3.55682, -119.809, -29.4414, 0.66 ) }
    dend_49 { pt3dadd( 4.01691, -120.522, -29.2604, 0.66 ) }
    dend_49 { pt3dadd( 4.39541, -121.218, -29.1078, 0.66 ) }
    dend_49 { pt3dadd( 4.75605, -121.995, -28.9193, 0.81 ) }
    dend_49 { pt3dadd( 5.00157, -122.611, -28.7686, 0.96 ) }
    dend_49 { pt3dadd( 5.30614, -123.525, -28.5568, 0.52 ) }
    dend_49 { pt3dadd( 5.51159, -124.241, -28.4093, 0.52 ) }
    dend_49 { pt3dadd( 5.74984, -125.177, -28.1789, 0.81 ) }
    dend_49 { pt3dadd( 5.94711, -125.927, -27.9652, 0.81 ) }
    dend_49 { pt3dadd( 6.12871, -126.614, -27.7525, 0.81 ) }
    dend_49 { pt3dadd( 6.14272, -126.674, -27.7338, 0.81 ) }
    dend_49 { pt3dadd( 6.3375, -127.595, -27.4759, 0.81 ) }
    dend_49 { pt3dadd( 6.3598, -127.703, -27.4535, 0.81 ) }
    dend_49 { pt3dadd( 6.54982, -128.786, -27.2961, 0.81 ) }
    dend_49 { pt3dadd( 6.65068, -129.605, -27.1986, 0.81 ) }
    dend_49 { pt3dadd( 6.71013, -130.373, -27.1028, 0.66 ) }
    dend_49 { pt3dadd( 6.71235, -130.437, -27.0919, 0.66 ) }
    dend_49 { pt3dadd( 6.70758, -131.248, -26.9268, 0.37 ) }
    dend_49 { pt3dadd( 6.70575, -132.209, -26.7128, 0.66 ) }
    dend_49 { pt3dadd( 6.7041, -132.652, -26.6049, 0.96 ) }
    dend_49 { pt3dadd( 6.7157, -133.526, -26.3425, 0.74 ) }
    dend_49 { pt3dadd( 6.73822, -134.578, -25.9869, 0.96 ) }
    dend_49 { pt3dadd( 6.75191, -135.383, -25.7242, 0.81 ) }
    dend_49 { pt3dadd( 6.76712, -136.334, -25.4287, 0.74 ) }
    dend_49 { pt3dadd( 6.76753, -136.38, -25.4184, 0.74 ) }
    dend_49 { pt3dadd( 6.78358, -137.378, -25.286, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 6.78757, -137.435, -25.2845, 0.74 ) }
    dend_49 { pt3dadd( 6.97375, -138.417, -25.4495, 0.44 ) }
    dend_49 { pt3dadd( 7.10751, -138.925, -25.5844, 0.44 ) }
    dend_49 { pt3dadd( 7.42903, -139.958, -25.937, 1.4 ) }
    dend_49 { pt3dadd( 7.68477, -140.618, -26.2186, 1.18 ) }
    dend_49 { pt3dadd( 8.0717, -141.429, -26.6537, 1.03 ) }
    dend_49 { pt3dadd( 8.82889, -142.757, -27.4234, 0.66 ) }
    dend_49 { pt3dadd( 9.16331, -143.253, -27.7139, 0.66 ) }
    dend_49 { pt3dadd( 9.24556, -143.365, -27.7765, 0.66 ) }
    dend_49 { pt3dadd( 10.0286, -144.371, -28.2889, 0.81 ) }
    dend_49 { pt3dadd( 10.6204, -145.113, -28.694, 0.96 ) }
    dend_49 { pt3dadd( 11.4106, -146.074, -29.2391, 0.74 ) }
    dend_49 { pt3dadd( 12.0354, -146.798, -29.6178, 0.74 ) }
    dend_49 { pt3dadd( 12.5227, -147.348, -29.8927, 0.96 ) }
    dend_49 { pt3dadd( 12.8868, -147.767, -30.0696, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -25.1077, -292.569, -9.08515, 0.29 ) }
    dend_47 { pt3dadd( -24.0737, -292.559, -9.4328, 0.29 ) }
    dend_47 { pt3dadd( -23.4469, -292.554, -9.64354, 0.29 ) }
    dend_47 { pt3dadd( -22.2229, -292.543, -10.055, 0.22 ) }
    dend_47 { pt3dadd( -21.6236, -292.537, -10.2565, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -25.1077, -292.569, -9.08515, 0.59 ) }
    dend_44 { pt3dadd( -25.3817, -293.623, -9.14819, 0.59 ) }
    dend_44 { pt3dadd( -25.4027, -293.692, -9.15117, 0.59 ) }
    dend_44 { pt3dadd( -25.7749, -294.775, -9.17097, 0.52 ) }
    dend_44 { pt3dadd( -26.1619, -295.869, -9.17945, 0.66 ) }
    dend_44 { pt3dadd( -26.4968, -296.904, -9.18164, 0.66 ) }
    dend_44 { pt3dadd( -26.8262, -297.977, -9.18116, 0.81 ) }
    dend_44 { pt3dadd( -26.8968, -298.194, -9.17452, 0.81 ) }
    dend_44 { pt3dadd( -27.185, -299.282, -9.08877, 0.81 ) }
    dend_44 { pt3dadd( -27.2118, -299.427, -9.07075, 0.81 ) }
    dend_44 { pt3dadd( -27.2393, -300.698, -8.80411, 0.81 ) }
    dend_44 { pt3dadd( -27.2365, -300.776, -8.79177, 0.81 ) }
    dend_44 { pt3dadd( -27.2105, -301.924, -8.79738, 0.59 ) }
    dend_44 { pt3dadd( -27.2194, -303.067, -8.92698, 0.37 ) }
    dend_44 { pt3dadd( -27.2466, -303.762, -9.14176, 0.74 ) }
    dend_44 { pt3dadd( -27.4311, -305.128, -9.96529, 0.81 ) }
    dend_44 { pt3dadd( -27.6727, -306.551, -11.1212, 0.52 ) }
    dend_44 { pt3dadd( -27.9413, -308.246, -12.7517, 0.52 ) }
    dend_44 { pt3dadd( -27.9488, -308.289, -12.7981, 0.52 ) }
    dend_44 { pt3dadd( -28.1983, -309.51, -14.4232, 0.96 ) }
    dend_44 { pt3dadd( -28.4763, -310.945, -16.7134, 1.69 ) }
    dend_44 { pt3dadd( -28.5534, -311.478, -17.7184, 0.37 ) }
    dend_44 { pt3dadd( -28.5817, -312.144, -19.1868, 0.37 ) }
    dend_44 { pt3dadd( -28.5578, -312.434, -19.8805, 0.66 ) }
    dend_44 { pt3dadd( -28.334, -313.763, -23.1454, 1.25 ) }
    dend_44 { pt3dadd( -28.0919, -314.642, -25.4174, 0.44 ) }
    dend_44 { pt3dadd( -27.8875, -315.179, -26.8193, 0.81 ) }
    dend_44 { pt3dadd( -27.458, -316.206, -29.4879, 0.37 ) }
    dend_44 { pt3dadd( -27.2507, -316.608, -30.5093, 0.29 ) }
    dend_44 { pt3dadd( -26.8669, -317.174, -31.8632, 0.29 ) }
    dend_44 { pt3dadd( -26.632, -317.46, -32.4146, 0.96 ) }
    dend_44 { pt3dadd( -26.3465, -317.767, -32.9515, 0.96 ) }
    dend_44 { pt3dadd( -25.6954, -318.476, -34.0249, 0.44 ) }
    dend_44 { pt3dadd( -25.4596, -318.718, -34.4367, 0.81 ) }
    dend_44 { pt3dadd( -25.1444, -319.015, -35.0464, 1.03 ) }
    dend_44 { pt3dadd( -25.1081, -319.048, -35.1151, 1.03 ) }
    dend_44 { pt3dadd( -24.129, -319.999, -36.9037, 0.37 ) }
    dend_44 { pt3dadd( -23.4683, -320.682, -38.0918, 1.4 ) }
    dend_44 { pt3dadd( -22.418, -322.053, -40.3492, 0.37 ) }
    dend_44 { pt3dadd( -22.1479, -322.489, -41.0108, 0.66 ) }
    dend_44 { pt3dadd( -21.7712, -323.173, -41.9505, 0.29 ) }
    dend_44 { pt3dadd( -21.4359, -323.787, -42.6738, 0.96 ) }
    dend_44 { pt3dadd( -21.2747, -324.084, -42.9567, 0.96 ) }
    dend_44 { pt3dadd( -20.0138, -326.468, -44.8015, 0.37 ) }
    dend_44 { pt3dadd( -19.8412, -326.813, -44.9952, 0.59 ) }
    dend_44 { pt3dadd( -19.3586, -327.76, -45.5484, 0.29 ) }
    dend_44 { pt3dadd( -18.8375, -328.708, -46.202, 0.96 ) }
    dend_44 { pt3dadd( -18.8066, -328.759, -46.2403, 0.96 ) }
    dend_44 { pt3dadd( -18.4781, -329.199, -46.4609, 1.33 ) }
    dend_44 { pt3dadd( -18.426, -329.249, -46.4486, 1.33 ) }
    dend_44 { pt3dadd( -18.0709, -329.596, -46.339, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -48.412, -56.8326, -3.42664, 0.29 ) }
    dend_40 { pt3dadd( -48.2441, -57.722, -2.79601, 0.29 ) }
    dend_40 { pt3dadd( -48.1246, -58.3558, -2.34667, 0.37 ) }
    dend_40 { pt3dadd( -48.0142, -58.9408, -1.93188, 0.37 ) }
    dend_40 { pt3dadd( -47.8561, -59.7787, -1.33778, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -48.412, -56.8326, -3.42664, 0.37 ) }
    dend_35 { pt3dadd( -49.6765, -57.4893, -3.09654, 0.37 ) }
    dend_35 { pt3dadd( -50.5502, -57.8454, -2.76066, 0.37 ) }
    dend_35 { pt3dadd( -51.5478, -58.1528, -2.33993, 0.81 ) }
    dend_35 { pt3dadd( -52.2235, -58.2966, -1.93474, 1.25 ) }
    dend_35 { pt3dadd( -52.7299, -58.3777, -1.5806, 1.25 ) }
    dend_35 { pt3dadd( -54.8845, -58.7256, -0.0482364, 0.44 ) }
    dend_35 { pt3dadd( -55.0325, -58.7414, 0.0645096, 0.44 ) }
    dend_35 { pt3dadd( -55.532, -58.7796, 0.447044, 0.74 ) }
    dend_35 { pt3dadd( -57.5086, -58.949, 1.89678, 0.52 ) }
    dend_35 { pt3dadd( -58.5494, -59.101, 2.59648, 0.59 ) }
    dend_35 { pt3dadd( -59.3319, -59.3144, 2.97603, 0.44 ) }
    dend_35 { pt3dadd( -59.9724, -59.6016, 3.11048, 0.29 ) }
    dend_35 { pt3dadd( -60.6603, -59.9876, 3.16396, 0.29 ) }
    dend_35 { pt3dadd( -61.5232, -60.602, 3.10791, 1.11 ) }
    dend_35 { pt3dadd( -62.0599, -61.069, 2.99125, 1.33 ) }
    dend_35 { pt3dadd( -63.3212, -62.4255, 2.64499, 0.74 ) }
    dend_35 { pt3dadd( -63.939, -63.2347, 2.47774, 0.74 ) }
    dend_35 { pt3dadd( -64.2656, -63.7591, 2.39815, 1.11 ) }
    dend_35 { pt3dadd( -64.63, -64.4142, 2.35208, 0.88 ) }
    dend_35 { pt3dadd( -65.0413, -65.2201, 2.35837, 0.66 ) }
    dend_35 { pt3dadd( -65.4949, -66.1745, 2.42721, 0.37 ) }
    dend_35 { pt3dadd( -65.7492, -66.8166, 2.52565, 0.37 ) }
    dend_35 { pt3dadd( -66.1014, -67.8174, 2.68447, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -66.4379, -68.9313, 2.85983, 0.37 ) }
    dend_35 { pt3dadd( -66.6605, -69.7622, 2.98561, 0.29 ) }
    dend_35 { pt3dadd( -66.8335, -70.5581, 3.12864, 0.59 ) }
    dend_35 { pt3dadd( -66.986, -71.366, 3.31776, 0.81 ) }
    dend_35 { pt3dadd( -66.9936, -71.432, 3.3339, 0.81 ) }
    dend_35 { pt3dadd( -67.0329, -72.3309, 3.59061, 0.74 ) }
    dend_35 { pt3dadd( -67.0223, -72.9018, 3.75763, 1.11 ) }
    dend_35 { pt3dadd( -66.9709, -74.1585, 4.15332, 0.59 ) }
    dend_35 { pt3dadd( -66.953, -74.7312, 4.34531, 1.03 ) }
    dend_35 { pt3dadd( -66.9527, -75.8388, 4.75501, 0.52 ) }
    dend_35 { pt3dadd( -66.9783, -76.7599, 5.10796, 0.74 ) }
    dend_35 { pt3dadd( -67.0164, -77.4078, 5.355, 0.66 ) }
    dend_35 { pt3dadd( -67.1105, -78.5836, 5.79241, 0.44 ) }
    dend_35 { pt3dadd( -67.2528, -79.6204, 6.16897, 0.44 ) }
    dend_35 { pt3dadd( -67.5039, -80.6926, 6.55855, 0.44 ) }
    dend_35 { pt3dadd( -67.6591, -81.1186, 6.71253, 0.81 ) }
    dend_35 { pt3dadd( -68.0133, -81.878, 6.96501, 1.18 ) }
    dend_35 { pt3dadd( -68.179, -82.1605, 7.05983, 1.33 ) }
    dend_35 { pt3dadd( -68.9489, -83.2923, 7.46463, 0.44 ) }
    dend_35 { pt3dadd( -69.5879, -84.1749, 7.77462, 0.59 ) }
    dend_35 { pt3dadd( -70.0956, -84.8097, 8.09046, 0.81 ) }
    dend_35 { pt3dadd( -70.3609, -85.098, 8.27489, 0.81 ) }
    dend_35 { pt3dadd( -71.0492, -85.7061, 8.80535, 0.37 ) }
    dend_35 { pt3dadd( -71.8259, -86.276, 9.39466, 0.74 ) }
    dend_35 { pt3dadd( -72.1467, -86.468, 9.63341, 0.96 ) }
    dend_35 { pt3dadd( -73.9433, -87.4267, 11.0137, 0.59 ) }
    dend_35 { pt3dadd( -74.7277, -87.7975, 11.6125, 0.81 ) }
    dend_35 { pt3dadd( -76.2972, -88.4484, 12.7982, 0.52 ) }
    dend_35 { pt3dadd( -77.2544, -88.7743, 13.4944, 0.52 ) }
    dend_35 { pt3dadd( -78.0998, -89.0123, 14.0527, 0.74 ) }
    dend_35 { pt3dadd( -84.6625, -96.7778, 19.743, 0.74 ) }
    dend_35 { pt3dadd( -91.5969, -104.96, 24.2174, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -104.862, -73.8226, -108.612, 0.52 ) }
    dend_33 { pt3dadd( -104.441, -75.112, -109.434, 0.52 ) }
    dend_33 { pt3dadd( -103.927, -76.6061, -110.353, 0.88 ) }
    dend_33 { pt3dadd( -103.65, -77.3063, -110.755, 0.88 ) }
    dend_33 { pt3dadd( -103.129, -78.4684, -111.415, 0.37 ) }
    dend_33 { pt3dadd( -102.889, -78.9751, -111.687, 0.29 ) }
    dend_33 { pt3dadd( -102.676, -79.4461, -111.923, 0.88 ) }
    dend_33 { pt3dadd( -102.631, -79.5431, -111.967, 0.88 ) }
    dend_33 { pt3dadd( -102.296, -80.3233, -112.212, 0.88 ) }
    dend_33 { pt3dadd( -101.899, -81.3657, -112.478, 0.29 ) }
    dend_33 { pt3dadd( -101.658, -82.0965, -112.594, 0.29 ) }
    dend_33 { pt3dadd( -101.477, -82.7764, -112.683, 0.22 ) }
    dend_33 { pt3dadd( -101.318, -83.561, -112.763, 0.22 ) }
    dend_33 { pt3dadd( -101.27, -83.9436, -112.792, 0.81 ) }
    dend_33 { pt3dadd( -101.241, -84.643, -112.824, 1.25 ) }
    dend_33 { pt3dadd( -101.232, -85.7962, -112.831, 0.37 ) }
    dend_33 { pt3dadd( -101.242, -86.8757, -112.838, 0.22 ) }
    dend_33 { pt3dadd( -101.255, -87.5359, -112.843, 0.66 ) }
    dend_33 { pt3dadd( -101.28, -88.1587, -112.849, 0.81 ) }
    dend_33 { pt3dadd( -101.362, -89.411, -112.862, 0.22 ) }
    dend_33 { pt3dadd( -101.424, -90.0223, -112.87, 0.88 ) }
    dend_33 { pt3dadd( -101.473, -90.3613, -112.876, 1.03 ) }
    dend_33 { pt3dadd( -101.536, -90.8718, -112.888, 1.03 ) }
    dend_33 { pt3dadd( -101.58, -91.4076, -112.9, 0.74 ) }
    dend_33 { pt3dadd( -101.58, -91.4944, -112.902, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -104.862, -73.8226, -108.612, 0.22 ) }
    dend_32 { pt3dadd( -106.716, -74.022, -110.956, 0.22 ) }
    dend_32 { pt3dadd( -107.464, -74.1471, -111.819, 0.22 ) }
    dend_32 { pt3dadd( -108.279, -74.3091, -112.654, 0.81 ) }
    dend_32 { pt3dadd( -108.723, -74.4106, -113.053, 1.11 ) }
    dend_32 { pt3dadd( -109.277, -74.5511, -113.482, 1.03 ) }
    dend_32 { pt3dadd( -110.846, -74.9626, -114.57, 0.22 ) }
    dend_32 { pt3dadd( -111.141, -75.0581, -114.716, 0.66 ) }
    dend_32 { pt3dadd( -111.802, -75.2949, -115.03, 0.96 ) }
    dend_32 { pt3dadd( -112.565, -75.5288, -115.339, 0.29 ) }
    dend_32 { pt3dadd( -113.439, -75.7326, -115.687, 0.29 ) }
    dend_32 { pt3dadd( -113.772, -75.7842, -115.806, 0.96 ) }
    dend_32 { pt3dadd( -114.442, -75.8406, -116.047, 1.18 ) }
    dend_32 { pt3dadd( -114.506, -75.8418, -116.076, 1.18 ) }
    dend_32 { pt3dadd( -115.323, -75.8124, -116.505, 0.88 ) }
    dend_32 { pt3dadd( -115.445, -75.8064, -116.572, 0.88 ) }
    dend_32 { pt3dadd( -115.957, -75.8, -116.842, 0.66 ) }
    dend_32 { pt3dadd( -117.188, -75.8977, -117.534, 0.29 ) }
    dend_32 { pt3dadd( -117.421, -75.9272, -117.662, 0.29 ) }
    dend_32 { pt3dadd( -118.387, -76.091, -118.19, 0.29 ) }
    dend_32 { pt3dadd( -118.887, -76.1699, -118.544, 0.59 ) }
    dend_32 { pt3dadd( -119.285, -76.2131, -118.859, 0.59 ) }
    dend_32 { pt3dadd( -120.46, -76.3002, -119.892, 0.29 ) }
    dend_32 { pt3dadd( -120.781, -76.3099, -120.18, 1.03 ) }
    dend_32 { pt3dadd( -121.245, -76.2871, -120.688, 1.33 ) }
    dend_32 { pt3dadd( -122.603, -76.0496, -122.555, 0.29 ) }
    dend_32 { pt3dadd( -122.845, -75.9791, -122.91, 0.29 ) }
    dend_32 { pt3dadd( -122.889, -75.9623, -122.98, 0.29 ) }
    dend_32 { pt3dadd( -123.27, -75.8357, -123.638, 0.59 ) }
    dend_32 { pt3dadd( -124.173, -75.6362, -125.257, 0.81 ) }
    dend_32 { pt3dadd( -124.785, -75.6158, -126.45, 0.52 ) }
    dend_32 { pt3dadd( -125.095, -75.6859, -127.08, 1.11 ) }
    dend_32 { pt3dadd( -125.648, -75.9206, -128.304, 1.4 ) }
    dend_32 { pt3dadd( -126.451, -76.3194, -130.162, 0.29 ) }
    dend_32 { pt3dadd( -126.634, -76.4352, -130.614, 0.88 ) }
    dend_32 { pt3dadd( -127.381, -77.0851, -132.46, 0.52 ) }
    dend_32 { pt3dadd( -127.947, -77.7313, -133.942, 0.81 ) }
    dend_32 { pt3dadd( -128.142, -78.015, -134.518, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -17.4863, 317.428, 32.9269, 0.37 ) }
    dend_23 { pt3dadd( -17.2401, 317.422, 32.6477, 0.37 ) }
    dend_23 { pt3dadd( -16.7668, 317.37, 32.1089, 0.66 ) }
    dend_23 { pt3dadd( -16.735, 317.364, 32.0743, 0.66 ) }
    dend_23 { pt3dadd( -16.5036, 317.319, 31.823, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( -16.4662, 317.311, 31.7829, 0.29 ) }
    dend_23 { pt3dadd( -15.8585, 317.224, 31.0738, 0.29 ) }
    dend_23 { pt3dadd( -15.8283, 317.221, 31.0379, 0.29 ) }
    dend_23 { pt3dadd( -15.6827, 317.227, 30.8729, 0.66 ) }
    dend_23 { pt3dadd( -15.5147, 317.242, 30.6708, 0.52 ) }
    dend_23 { pt3dadd( -15.4853, 317.247, 30.6322, 0.52 ) }
    dend_23 { pt3dadd( -14.9431, 317.415, 29.9261, 0.22 ) }
    dend_23 { pt3dadd( -14.6716, 317.581, 29.5948, 0.22 ) }
    dend_23 { pt3dadd( -14.5268, 317.678, 29.4114, 0.29 ) }
    dend_23 { pt3dadd( -9.60691, 319.264, 25.1621, 0.29 ) }
    dend_23 { pt3dadd( -4.83515, 321.993, 21.4161, 0.29 ) }
    dend_23 { pt3dadd( -1.0942, 325.178, 16.9642, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.4863, 317.428, 32.9269, 0.29 ) }
    dend_22 { pt3dadd( -17.3705, 318.728, 32.7498, 0.29 ) }
    dend_22 { pt3dadd( -17.3568, 319.166, 32.7005, 0.29 ) }
    dend_22 { pt3dadd( -17.3567, 319.224, 32.6996, 0.29 ) }
    dend_22 { pt3dadd( -17.3692, 319.894, 32.7298, 0.29 ) }
    dend_22 { pt3dadd( -17.3711, 319.944, 32.7341, 0.29 ) }
    dend_22 { pt3dadd( -17.4049, 320.846, 32.8824, 0.29 ) }
    dend_22 { pt3dadd( -17.411, 320.892, 32.8978, 0.29 ) }
    dend_22 { pt3dadd( -17.4393, 321.452, 33.102, 0.52 ) }
    dend_22 { pt3dadd( -17.4377, 321.564, 33.1399, 0.52 ) }
    dend_22 { pt3dadd( -17.423, 321.8, 33.2024, 0.52 ) }
    dend_22 { pt3dadd( -17.3757, 322.373, 33.3162, 0.22 ) }
    dend_22 { pt3dadd( -17.3299, 322.933, 33.3802, 0.22 ) }
    dend_22 { pt3dadd( -17.284, 323.491, 33.4203, 0.44 ) }
    dend_22 { pt3dadd( -17.25, 323.918, 33.4189, 0.44 ) }
    dend_22 { pt3dadd( -17.203, 324.524, 33.3999, 0.22 ) }
    dend_22 { pt3dadd( -17.1991, 324.584, 33.395, 0.22 ) }
    dend_22 { pt3dadd( -17.1835, 325.425, 33.2453, 0.22 ) }
    dend_22 { pt3dadd( -17.9842, 333.61, 33.3563, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -5.68389, 172.331, -75.0731, 0.66 ) }
    dend_19 { pt3dadd( -5.78792, 173.037, -75.0812, 0.66 ) }
    dend_19 { pt3dadd( -5.85447, 173.713, -75.0771, 0.29 ) }
    dend_19 { pt3dadd( -5.85915, 173.785, -75.0758, 0.29 ) }
    dend_19 { pt3dadd( -5.88934, 174.493, -75.0575, 0.29 ) }
    dend_19 { pt3dadd( -5.96641, 175.711, -75.0363, 0.29 ) }
    dend_19 { pt3dadd( -6.0193, 176.235, -75.0349, 0.52 ) }
    dend_19 { pt3dadd( -6.04149, 176.408, -75.0361, 0.52 ) }
    dend_19 { pt3dadd( -6.07555, 176.658, -75.0398, 0.52 ) }
    dend_19 { pt3dadd( -6.14743, 177.115, -75.0503, 0.37 ) }
    dend_19 { pt3dadd( -6.27597, 177.743, -75.0758, 0.37 ) }
    dend_19 { pt3dadd( -6.60555, 178.66, -75.1662, 0.88 ) }
    dend_19 { pt3dadd( -6.6594, 178.783, -75.1797, 0.88 ) }
    dend_19 { pt3dadd( -6.8876, 179.274, -75.232, 1.03 ) }
    dend_19 { pt3dadd( -7.10238, 179.749, -75.2753, 1.18 ) }
    dend_19 { pt3dadd( -7.31934, 180.272, -75.3109, 0.66 ) }
    dend_19 { pt3dadd( -7.55803, 180.929, -75.3377, 0.52 ) }
    dend_19 { pt3dadd( -7.65812, 181.251, -75.3428, 0.59 ) }
    dend_19 { pt3dadd( -7.73486, 181.608, -75.3399, 0.44 ) }
    dend_19 { pt3dadd( -7.8439, 182.592, -75.3058, 0.29 ) }
    dend_19 { pt3dadd( -7.85482, 182.976, -75.2866, 0.37 ) }
    dend_19 { pt3dadd( -7.85217, 183.05, -75.2864, 0.37 ) }
    dend_19 { pt3dadd( -7.8362, 183.487, -75.3074, 0.22 ) }
    dend_19 { pt3dadd( -7.86256, 184.342, -75.3562, 0.59 ) }
    dend_19 { pt3dadd( -7.90076, 184.786, -75.382, 0.88 ) }
    dend_19 { pt3dadd( -8.00353, 185.526, -75.4216, 0.52 ) }
    dend_19 { pt3dadd( -8.17272, 186.451, -75.4658, 0.29 ) }
    dend_19 { pt3dadd( -8.32556, 187.128, -75.4926, 0.29 ) }
    dend_19 { pt3dadd( -8.58072, 188.025, -75.5244, 0.59 ) }
    dend_19 { pt3dadd( -8.60656, 188.095, -75.5221, 0.59 ) }
    dend_19 { pt3dadd( -8.80303, 188.569, -75.4721, 0.29 ) }
    dend_19 { pt3dadd( -8.84699, 188.669, -75.4525, 0.29 ) }
    dend_19 { pt3dadd( -9.10387, 189.424, -75.237, 0.52 ) }
    dend_19 { pt3dadd( -9.19043, 189.779, -75.1554, 0.66 ) }
    dend_19 { pt3dadd( -9.36657, 190.638, -75.02, 0.52 ) }
    dend_19 { pt3dadd( -9.38079, 190.71, -75.0102, 0.52 ) }
    dend_19 { pt3dadd( -9.48189, 191.227, -74.9576, 0.29 ) }
    dend_19 { pt3dadd( -9.70394, 192.478, -74.9471, 0.29 ) }
    dend_19 { pt3dadd( -9.85075, 193.388, -75.0305, 0.66 ) }
    dend_19 { pt3dadd( -9.91086, 193.715, -75.0683, 0.88 ) }
    dend_19 { pt3dadd( -9.9249, 193.786, -75.0783, 0.88 ) }
    dend_19 { pt3dadd( -10.0999, 194.434, -75.1628, 0.52 ) }
    dend_19 { pt3dadd( -10.3978, 195.265, -75.2661, 0.52 ) }
    dend_19 { pt3dadd( -10.6795, 195.957, -75.3375, 0.29 ) }
    dend_19 { pt3dadd( -11.0262, 196.871, -75.3946, 0.29 ) }
    dend_19 { pt3dadd( -11.2792, 197.583, -75.4096, 1.03 ) }
    dend_19 { pt3dadd( -11.5323, 198.348, -75.4015, 0.74 ) }
    dend_19 { pt3dadd( -11.7967, 199.217, -75.3199, 0.29 ) }
    dend_19 { pt3dadd( -12.1328, 200.441, -75.1248, 0.44 ) }
    dend_19 { pt3dadd( -12.2811, 201.08, -75.0007, 0.37 ) }
    dend_19 { pt3dadd( -12.4261, 201.838, -74.8429, 0.37 ) }
    dend_19 { pt3dadd( -12.5533, 202.654, -74.6276, 0.96 ) }
    dend_19 { pt3dadd( -12.6631, 203.757, -74.2745, 0.37 ) }
    dend_19 { pt3dadd( -12.7083, 204.493, -74.0018, 0.37 ) }
    dend_19 { pt3dadd( -12.731, 205.139, -73.734, 0.59 ) }
    dend_19 { pt3dadd( -12.7286, 205.492, -73.5896, 0.88 ) }
    dend_19 { pt3dadd( -12.7208, 205.705, -73.5081, 0.88 ) }
    dend_19 { pt3dadd( -12.6757, 206.384, -73.2727, 0.59 ) }
    dend_19 { pt3dadd( -12.6704, 206.443, -73.2563, 0.52 ) }
    dend_19 { pt3dadd( -12.509, 207.924, -72.86, 0.15 ) }
    dend_19 { pt3dadd( -12.4276, 208.604, -72.7047, 0.59 ) }
    dend_19 { pt3dadd( -12.4185, 208.675, -72.6894, 0.59 ) }
    dend_19 { pt3dadd( -12.3142, 209.207, -72.5756, 0.59 ) }
    dend_19 { pt3dadd( -12.2962, 209.276, -72.5617, 0.59 ) }
    dend_19 { pt3dadd( -12.1261, 209.839, -72.4552, 0.88 ) }
    dend_19 { pt3dadd( -11.8712, 210.637, -72.3309, 1.18 ) }
    dend_19 { pt3dadd( -11.7635, 210.996, -72.2776, 1.18 ) }
    dend_19 { pt3dadd( -11.4229, 212.368, -72.0785, 0.15 ) }
    dend_19 { pt3dadd( -11.2367, 213.389, -71.9428, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( -11.18, 213.952, -71.8801, 0.52 ) }
    dend_19 { pt3dadd( -11.1639, 214.618, -71.8193, 0.66 ) }
    dend_19 { pt3dadd( -11.188, 215.005, -71.7943, 0.74 ) }
    dend_19 { pt3dadd( -11.3011, 215.782, -71.7654, 0.29 ) }
    dend_19 { pt3dadd( -11.4497, 216.516, -71.7525, 0.37 ) }
    dend_19 { pt3dadd( -11.6209, 217.464, -71.6725, 0.29 ) }
    dend_19 { pt3dadd( -11.6317, 217.545, -71.6606, 0.29 ) }
    dend_19 { pt3dadd( -11.6519, 218.626, -71.4148, 0.52 ) }
    dend_19 { pt3dadd( -11.6449, 218.695, -71.3943, 0.52 ) }
    dend_19 { pt3dadd( -11.4354, 219.625, -71.0585, 0.81 ) }
    dend_19 { pt3dadd( -11.1307, 220.579, -70.6577, 0.37 ) }
    dend_19 { pt3dadd( -11.1073, 220.642, -70.6277, 0.37 ) }
    dend_19 { pt3dadd( -10.7984, 221.61, -70.2028, 0.29 ) }
    dend_19 { pt3dadd( -10.6792, 222.061, -70.0222, 0.37 ) }
    dend_19 { pt3dadd( -10.6676, 222.12, -70.0029, 0.37 ) }
    dend_19 { pt3dadd( -10.5693, 222.764, -69.8434, 0.37 ) }
    dend_19 { pt3dadd( -10.4462, 223.794, -69.5564, 0.29 ) }
    dend_19 { pt3dadd( -10.3086, 224.926, -69.16, 0.37 ) }
    dend_19 { pt3dadd( -10.2606, 225.345, -68.9993, 0.88 ) }
    dend_19 { pt3dadd( -10.1859, 225.81, -68.8093, 0.96 ) }
    dend_19 { pt3dadd( -9.92503, 226.898, -68.2772, 0.52 ) }
    dend_19 { pt3dadd( -9.49033, 228.212, -67.5404, 0.66 ) }
    dend_19 { pt3dadd( -9.29064, 228.694, -67.228, 0.66 ) }
    dend_19 { pt3dadd( -8.9887, 229.293, -66.7863, 0.29 ) }
    dend_19 { pt3dadd( -8.62449, 229.959, -66.2621, 0.44 ) }
    dend_19 { pt3dadd( -8.19389, 230.721, -65.6354, 1.11 ) }
    dend_19 { pt3dadd( -7.85355, 231.331, -65.1299, 1.11 ) }
    dend_19 { pt3dadd( -7.3281, 232.289, -64.3853, 1.11 ) }
    dend_19 { pt3dadd( -7.11279, 232.699, -64.0386, 1.55 ) }
    dend_19 { pt3dadd( -6.75468, 233.356, -63.4149, 1.55 ) }
    dend_19 { pt3dadd( -6.70821, 233.436, -63.3274, 1.55 ) }
    dend_19 { pt3dadd( -6.43436, 233.879, -62.7426, 1.55 ) }
    dend_19 { pt3dadd( -6.41184, 233.912, -62.6927, 1.55 ) }
    dend_19 { pt3dadd( -6.04923, 234.385, -61.8809, 2.06 ) }
    dend_19 { pt3dadd( -6.02335, 234.419, -61.8185, 2.06 ) }
    dend_19 { pt3dadd( -5.30913, 235.273, -60.0708, 0.52 ) }
    dend_19 { pt3dadd( -4.8734, 235.76, -59.0219, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.68389, 172.331, -75.0731, 0.74 ) }
    dend_18 { pt3dadd( -5.367, 171.417, -74.8681, 0.74 ) }
    dend_18 { pt3dadd( -5.3522, 171.367, -74.8585, 0.74 ) }
    dend_18 { pt3dadd( -5.18626, 170.735, -74.7523, 0.37 ) }
    dend_18 { pt3dadd( -4.97686, 169.815, -74.6142, 0.22 ) }
    dend_18 { pt3dadd( -4.89654, 169.372, -74.557, 0.37 ) }
    dend_18 { pt3dadd( -4.80979, 168.824, -74.4978, 0.15 ) }
    dend_18 { pt3dadd( -4.71452, 167.978, -74.4391, 0.15 ) }
    dend_18 { pt3dadd( -4.67484, 167.602, -74.4136, 0.44 ) }
    dend_18 { pt3dadd( -4.64116, 167.191, -74.3874, 0.44 ) }
    dend_18 { pt3dadd( -4.60781, 166.392, -74.3495, 0.22 ) }
    dend_18 { pt3dadd( -4.58416, 165.467, -74.3395, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 80.4162, 100.264, -58.6322, 0.22 ) }
    dend_13 { pt3dadd( 81.3393, 100.717, -60.214, 0.22 ) }
    dend_13 { pt3dadd( 81.6656, 100.877, -60.7731, 0.74 ) }
    dend_13 { pt3dadd( 81.8388, 100.962, -61.0699, 0.74 ) }
    dend_13 { pt3dadd( 83.1997, 101.63, -63.402, 0.29 ) }
    dend_13 { pt3dadd( 83.5339, 101.794, -63.9747, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 80.4162, 100.264, -58.6322, 0.22 ) }
    dend_12 { pt3dadd( 81.1565, 99.9456, -59.1603, 0.22 ) }
    dend_12 { pt3dadd( 81.6823, 99.7669, -59.579, 0.66 ) }
    dend_12 { pt3dadd( 82.0293, 99.6638, -59.861, 0.66 ) }
    dend_12 { pt3dadd( 82.4391, 99.5689, -60.185, 0.52 ) }
    dend_12 { pt3dadd( 83.2523, 99.4871, -60.8295, 0.22 ) }
    dend_12 { pt3dadd( 83.6462, 99.5047, -61.1283, 0.22 ) }
    dend_12 { pt3dadd( 84.2219, 99.6714, -61.5131, 0.59 ) }
    dend_12 { pt3dadd( 84.5141, 99.7943, -61.6826, 0.74 ) }
    dend_12 { pt3dadd( 84.9363, 99.9896, -61.8859, 0.74 ) }
    dend_12 { pt3dadd( 85.7987, 100.416, -62.2144, 0.29 ) }
    dend_12 { pt3dadd( 86.5394, 100.805, -62.419, 0.29 ) }
    dend_12 { pt3dadd( 87.4541, 101.299, -62.637, 0.59 ) }
    dend_12 { pt3dadd( 87.8797, 101.528, -62.7145, 0.52 ) }
    dend_12 { pt3dadd( 88.7209, 101.977, -62.8515, 0.22 ) }
    dend_12 { pt3dadd( 89.1893, 102.198, -62.9132, 0.29 ) }
    dend_12 { pt3dadd( 89.8462, 102.425, -62.9608, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 70.0974, 110.874, 49.2882, 0.29 ) }
    dend_6 { pt3dadd( 75.0992, 119.271, 54.7179, 0.29 ) }
    dend_6 { pt3dadd( 78.4446, 128.895, 59.0963, 0.29 ) }
    dend_6 { pt3dadd( 81.6816, 138.35, 63.9182, 0.29 ) }
    dend_6 { pt3dadd( 84.0033, 147.263, 70.1417, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 70.0974, 110.874, 49.2882, 0.44 ) }
    dend_5 { pt3dadd( 74.5715, 116.629, 53.2063, 0.29 ) }
    dend_5 { pt3dadd( 79.0697, 122.555, 56.8241, 0.29 ) }
    dend_5 { pt3dadd( 83.3134, 129.292, 59.0003, 0.29 ) }
    dend_5 { pt3dadd( 85.7743, 136.678, 61.5073, 0.29 ) }
    dend_5 { pt3dadd( 87.5919, 144.618, 62.3573, 0.29 ) }
    dend_5 { pt3dadd( 89.4034, 152.458, 63.8039, 0.29 ) }
    dend_5 { pt3dadd( 90.8132, 160.099, 66.2742, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -84.8671, -150.952, 35.3478, 0.29 ) }
    dend_91 { pt3dadd( -85.1649, -156.888, 38.1519, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -84.8671, -150.952, 35.3478, 0.44 ) }
    dend_88 { pt3dadd( -90.1987, -158.022, 35.2362, 0.29 ) }
    dend_88 { pt3dadd( -94.4651, -165.522, 33.3198, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -88.4333, -141.72, 49.5317, 0.66 ) }
    dend_72 { pt3dadd( -88.1704, -140.754, 50.494, 0.66 ) }
    dend_72 { pt3dadd( -87.9829, -140.148, 50.9867, 0.29 ) }
    dend_72 { pt3dadd( -87.7816, -139.447, 51.462, 0.29 ) }
    dend_72 { pt3dadd( -87.7691, -139.388, 51.4953, 0.29 ) }
    dend_72 { pt3dadd( -87.5845, -138.253, 52.0685, 0.52 ) }
    dend_72 { pt3dadd( -87.5563, -138.028, 52.1727, 0.74 ) }
    dend_72 { pt3dadd( -87.4757, -137.128, 52.4729, 0.37 ) }
    dend_72 { pt3dadd( -87.4215, -136.347, 52.7019, 0.37 ) }
    dend_72 { pt3dadd( -87.4048, -135.572, 52.9105, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -87.3972, -135.093, 53.0137, 0.59 ) }
    dend_72 { pt3dadd( -87.3907, -134.558, 53.0892, 0.59 ) }
    dend_72 { pt3dadd( -87.3362, -133.939, 53.1507, 0.59 ) }
    dend_72 { pt3dadd( -87.1818, -133.119, 53.1894, 0.52 ) }
    dend_72 { pt3dadd( -87.0011, -132.517, 53.1862, 0.96 ) }
    dend_72 { pt3dadd( -86.7202, -131.804, 53.1575, 0.37 ) }
    dend_72 { pt3dadd( -86.5189, -131.362, 53.1197, 0.29 ) }
    dend_72 { pt3dadd( -86.0958, -130.532, 53.0155, 0.29 ) }
    dend_72 { pt3dadd( -85.7438, -129.858, 52.9246, 0.29 ) }
    dend_72 { pt3dadd( -85.5159, -129.418, 52.8667, 0.52 ) }
    dend_72 { pt3dadd( -85.4904, -129.357, 52.8615, 0.52 ) }
    dend_72 { pt3dadd( -85.3679, -128.988, 52.8471, 0.52 ) }
    dend_72 { pt3dadd( -85.1859, -128.264, 52.8575, 0.37 ) }
    dend_72 { pt3dadd( -85.0124, -127.43, 52.8917, 0.37 ) }
    dend_72 { pt3dadd( -85.0011, -127.363, 52.8965, 0.37 ) }
    dend_72 { pt3dadd( -84.8087, -126.024, 53.0182, 0.37 ) }
    dend_72 { pt3dadd( -84.671, -124.822, 53.1571, 0.37 ) }
    dend_72 { pt3dadd( -84.537, -123.327, 53.3606, 0.37 ) }
    dend_72 { pt3dadd( -84.5271, -123.204, 53.3788, 0.37 ) }
    dend_72 { pt3dadd( -84.4126, -122.043, 53.5223, 0.37 ) }
    dend_72 { pt3dadd( -84.4058, -121.985, 53.5285, 0.37 ) }
    dend_72 { pt3dadd( -84.2957, -121.241, 53.5906, 0.88 ) }
    dend_72 { pt3dadd( -84.2699, -121.091, 53.5982, 0.88 ) }
    dend_72 { pt3dadd( -84.0558, -120.163, 53.5932, 0.29 ) }
    dend_72 { pt3dadd( -83.7309, -119.001, 53.5461, 0.29 ) }
    dend_72 { pt3dadd( -83.4864, -118.262, 53.4876, 0.44 ) }
    dend_72 { pt3dadd( -83.2953, -117.714, 53.4403, 0.44 ) }
    dend_72 { pt3dadd( -83.075, -117.066, 53.3673, 0.29 ) }
    dend_72 { pt3dadd( -83.0489, -116.982, 53.3578, 0.29 ) }
    dend_72 { pt3dadd( -82.7284, -116.052, 53.2142, 0.66 ) }
    dend_72 { pt3dadd( -82.6323, -115.826, 53.1801, 0.66 ) }
    dend_72 { pt3dadd( -82.447, -115.436, 53.121, 0.59 ) }
    dend_72 { pt3dadd( -81.9642, -114.458, 52.9987, 0.37 ) }
    dend_72 { pt3dadd( -81.9315, -114.398, 52.9951, 0.37 ) }
    dend_72 { pt3dadd( -81.1541, -113.045, 53.0039, 0.37 ) }
    dend_72 { pt3dadd( -80.6912, -112.272, 53.0818, 0.37 ) }
    dend_72 { pt3dadd( -80.3581, -111.753, 53.1542, 0.37 ) }
    dend_72 { pt3dadd( -80.2168, -111.556, 53.1961, 0.88 ) }
    dend_72 { pt3dadd( -79.728, -110.971, 53.416, 0.74 ) }
    dend_72 { pt3dadd( -79.6884, -110.92, 53.4415, 0.74 ) }
    dend_72 { pt3dadd( -79.4917, -110.547, 53.8123, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -88.4333, -141.72, 49.5317, 0.52 ) }
    dend_69 { pt3dadd( -89.2376, -142.394, 49.8955, 0.52 ) }
    dend_69 { pt3dadd( -90.0069, -142.967, 50.2544, 0.29 ) }
    dend_69 { pt3dadd( -90.7528, -143.489, 50.608, 0.29 ) }
    dend_69 { pt3dadd( -91.913, -144.258, 51.1715, 0.44 ) }
    dend_69 { pt3dadd( -92.8893, -144.902, 51.6504, 0.37 ) }
    dend_69 { pt3dadd( -93.317, -145.184, 51.8611, 0.66 ) }
    dend_69 { pt3dadd( -93.7016, -145.406, 52.0577, 0.88 ) }
    dend_69 { pt3dadd( -94.215, -145.641, 52.2829, 0.88 ) }
    dend_69 { pt3dadd( -95.0014, -145.944, 52.5733, 0.44 ) }
    dend_69 { pt3dadd( -95.9958, -146.305, 52.8741, 0.44 ) }
    dend_69 { pt3dadd( -96.0681, -146.329, 52.8929, 0.44 ) }
    dend_69 { pt3dadd( -96.9572, -146.614, 53.1036, 0.44 ) }
    dend_69 { pt3dadd( -98.4189, -147.045, 53.4369, 0.29 ) }
    dend_69 { pt3dadd( -99.3329, -147.286, 53.6483, 0.29 ) }
    dend_69 { pt3dadd( -100.44, -147.538, 53.987, 0.29 ) }
    dend_69 { pt3dadd( -100.522, -147.554, 54.0198, 0.74 ) }
    dend_69 { pt3dadd( -100.59, -147.567, 54.0534, 0.74 ) }
    dend_69 { pt3dadd( -101.294, -147.735, 54.4077, 0.74 ) }
    dend_69 { pt3dadd( -101.905, -147.934, 54.7306, 0.74 ) }
    dend_69 { pt3dadd( -103.197, -148.417, 55.3332, 0.29 ) }
    dend_69 { pt3dadd( -103.924, -148.728, 55.5892, 0.29 ) }
    dend_69 { pt3dadd( -104.961, -149.209, 55.8698, 0.29 ) }
    dend_69 { pt3dadd( -106.336, -149.894, 56.1387, 0.29 ) }
    dend_69 { pt3dadd( -106.98, -150.248, 56.2624, 0.59 ) }
    dend_69 { pt3dadd( -107.289, -150.418, 56.3238, 0.59 ) }
    dend_69 { pt3dadd( -108.204, -150.888, 56.5231, 0.37 ) }
    dend_69 { pt3dadd( -108.338, -150.945, 56.6005, 0.37 ) }
    dend_69 { pt3dadd( -108.916, -151.103, 57.2434, 0.37 ) }
    dend_69 { pt3dadd( -109.78, -151.237, 58.4273, 0.29 ) }
    dend_69 { pt3dadd( -110.233, -151.327, 59.2801, 0.29 ) }
    dend_69 { pt3dadd( -110.537, -151.406, 60.003, 0.59 ) }
    dend_69 { pt3dadd( -111.05, -151.639, 61.5546, 0.59 ) }
    dend_69 { pt3dadd( -111.298, -151.815, 62.4512, 0.59 ) }
    dend_69 { pt3dadd( -111.435, -152.018, 63.1929, 0.59 ) }
    dend_69 { pt3dadd( -111.74, -152.826, 65.2842, 0.44 ) }
    dend_69 { pt3dadd( -111.748, -152.855, 65.3418, 0.44 ) }
    dend_69 { pt3dadd( -111.865, -153.34, 66.1768, 0.44 ) }
    dend_69 { pt3dadd( -111.876, -153.374, 66.2305, 0.44 ) }
    dend_69 { pt3dadd( -112.155, -154.065, 67.3017, 0.59 ) }
    dend_69 { pt3dadd( -112.405, -154.474, 67.9416, 0.59 ) }
    dend_69 { pt3dadd( -112.904, -154.959, 68.7172, 0.29 ) }
    dend_69 { pt3dadd( -112.942, -154.991, 68.7737, 0.29 ) }
    dend_69 { pt3dadd( -113.922, -155.62, 70.0081, 0.44 ) }
    dend_69 { pt3dadd( -114.399, -155.878, 70.4954, 0.96 ) }
    dend_69 { pt3dadd( -114.919, -156.117, 70.93, 1.33 ) }
    dend_69 { pt3dadd( -115.615, -156.428, 71.4667, 0.88 ) }
    dend_69 { pt3dadd( -116.805, -156.979, 72.2811, 0.44 ) }
    dend_69 { pt3dadd( -117.778, -157.432, 72.8585, 0.44 ) }
    dend_69 { pt3dadd( -118.886, -157.926, 73.4045, 0.52 ) }
    dend_69 { pt3dadd( -119.692, -158.247, 73.7905, 0.52 ) }
    dend_69 { pt3dadd( -119.76, -158.271, 73.8221, 0.52 ) }
    dend_69 { pt3dadd( -120.823, -158.562, 74.2961, 0.37 ) }
    dend_69 { pt3dadd( -121.614, -158.722, 74.6295, 0.37 ) }
    dend_69 { pt3dadd( -122.415, -158.828, 75.0328, 0.37 ) }
    dend_69 { pt3dadd( -123.475, -158.882, 75.6806, 0.52 ) }
    dend_69 { pt3dadd( -123.811, -158.879, 75.8976, 0.96 ) }
    dend_69 { pt3dadd( -124.187, -158.86, 76.1315, 0.96 ) }
    dend_69 { pt3dadd( -124.69, -158.81, 76.43, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -125.371, -158.761, 76.8106, 0.81 ) }
    dend_69 { pt3dadd( -126.553, -158.768, 77.4224, 0.37 ) }
    dend_69 { pt3dadd( -126.611, -158.774, 77.4504, 0.37 ) }
    dend_69 { pt3dadd( -127.623, -158.936, 77.9122, 0.37 ) }
    dend_69 { pt3dadd( -128.214, -159.06, 78.1711, 0.59 ) }
    dend_69 { pt3dadd( -128.651, -159.158, 78.3577, 0.66 ) }
    dend_69 { pt3dadd( -129.334, -159.307, 78.6446, 0.52 ) }
    dend_69 { pt3dadd( -130.216, -159.453, 78.9641, 0.29 ) }
    dend_69 { pt3dadd( -130.3, -159.462, 78.9954, 0.29 ) }
    dend_69 { pt3dadd( -131.111, -159.508, 79.3187, 0.29 ) }
    dend_69 { pt3dadd( -131.899, -159.561, 79.6725, 0.44 ) }
    dend_69 { pt3dadd( -132.42, -159.611, 79.9239, 0.44 ) }
    dend_69 { pt3dadd( -133.46, -159.746, 80.4573, 0.44 ) }
    dend_69 { pt3dadd( -134.49, -159.929, 81.0131, 0.37 ) }
    dend_69 { pt3dadd( -134.943, -160.031, 81.3033, 0.37 ) }
    dend_69 { pt3dadd( -136.135, -160.352, 82.3175, 0.37 ) }
    dend_69 { pt3dadd( -136.627, -160.507, 82.8649, 0.37 ) }
    dend_69 { pt3dadd( -137.072, -160.664, 83.5018, 0.37 ) }
    dend_69 { pt3dadd( -137.411, -160.777, 84.1377, 0.37 ) }
    dend_69 { pt3dadd( -137.902, -160.894, 85.2663, 0.37 ) }
    dend_69 { pt3dadd( -138.403, -160.938, 86.5547, 0.37 ) }
    dend_69 { pt3dadd( -138.552, -160.939, 86.9876, 0.81 ) }
    dend_69 { pt3dadd( -138.669, -160.966, 87.3026, 1.11 ) }
    dend_69 { pt3dadd( -138.926, -161.089, 87.9215, 1.11 ) }
    dend_69 { pt3dadd( -138.957, -161.107, 87.9762, 1.11 ) }
    dend_69 { pt3dadd( -139.503, -161.464, 88.7559, 0.59 ) }
    dend_69 { pt3dadd( -140.348, -162.075, 89.8908, 0.44 ) }
    dend_69 { pt3dadd( -140.887, -162.476, 90.6695, 0.66 ) }
    dend_69 { pt3dadd( -140.923, -162.502, 90.7214, 0.66 ) }
    dend_69 { pt3dadd( -141.317, -162.752, 91.2417, 0.66 ) }
    dend_69 { pt3dadd( -141.996, -163.088, 92.0434, 0.44 ) }
    dend_69 { pt3dadd( -142.075, -163.125, 92.1395, 0.44 ) }
    dend_69 { pt3dadd( -142.737, -163.435, 92.9086, 0.37 ) }
    dend_69 { pt3dadd( -143.425, -163.792, 93.7188, 0.37 ) }
    dend_69 { pt3dadd( -144.07, -164.154, 94.4589, 0.88 ) }
    dend_69 { pt3dadd( -144.523, -164.425, 94.9555, 1.18 ) }
    dend_69 { pt3dadd( -145.872, -165.215, 96.4011, 0.37 ) }
    dend_69 { pt3dadd( -146.473, -165.554, 97.0633, 0.29 ) }
    dend_69 { pt3dadd( -146.851, -165.757, 97.4915, 0.81 ) }
    dend_69 { pt3dadd( -146.905, -165.784, 97.558, 0.81 ) }
    dend_69 { pt3dadd( -147.122, -165.898, 97.8632, 0.81 ) }
    dend_69 { pt3dadd( -148.008, -166.356, 99.1447, 0.37 ) }
    dend_69 { pt3dadd( -148.344, -166.51, 99.6264, 0.74 ) }
    dend_69 { pt3dadd( -148.698, -166.688, 100.156, 0.74 ) }
    dend_69 { pt3dadd( -149.346, -167.01, 101.114, 0.81 ) }
    dend_69 { pt3dadd( -150.229, -167.471, 102.404, 0.29 ) }
    dend_69 { pt3dadd( -150.53, -167.638, 102.842, 0.29 ) }
    dend_69 { pt3dadd( -150.566, -167.661, 102.891, 0.29 ) }
    dend_69 { pt3dadd( -150.998, -167.927, 103.428, 0.74 ) }
    dend_69 { pt3dadd( -151.336, -168.127, 103.843, 0.81 ) }
    dend_69 { pt3dadd( -152.204, -168.545, 104.869, 0.37 ) }
    dend_69 { pt3dadd( -152.253, -168.564, 104.927, 0.37 ) }
    dend_69 { pt3dadd( -152.768, -168.762, 105.569, 0.29 ) }
    dend_69 { pt3dadd( -153.167, -168.915, 106.087, 0.29 ) }
    dend_69 { pt3dadd( -153.746, -169.138, 106.916, 0.52 ) }
    dend_69 { pt3dadd( -154.22, -169.34, 107.647, 0.88 ) }
    dend_69 { pt3dadd( -154.389, -169.396, 107.922, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -0.0464659, -114.606, -30.4386, 0.96 ) }
    dend_62 { pt3dadd( -0.337937, -116.779, -29.7648, 0.96 ) }
    dend_62 { pt3dadd( -0.47565, -118.125, -29.3405, 0.96 ) }
    dend_62 { pt3dadd( -0.553824, -119.294, -28.981, 1.03 ) }
    dend_62 { pt3dadd( -0.567124, -119.993, -28.7776, 1.25 ) }
    dend_62 { pt3dadd( -0.561893, -120.879, -28.5284, 1.11 ) }
    dend_62 { pt3dadd( -0.515301, -122.16, -28.1421, 0.74 ) }
    dend_62 { pt3dadd( -0.393635, -123.196, -27.8798, 0.96 ) }
    dend_62 { pt3dadd( -0.2535, -123.944, -27.6693, 0.74 ) }
    dend_62 { pt3dadd( 0.0284333, -125.092, -27.3513, 0.59 ) }
    dend_62 { pt3dadd( 0.0461709, -125.152, -27.3381, 0.59 ) }
    dend_62 { pt3dadd( 0.475135, -126.53, -27.1228, 0.59 ) }
    dend_62 { pt3dadd( 0.843466, -127.751, -27.086, 0.59 ) }
    dend_62 { pt3dadd( 0.858041, -127.805, -27.0912, 0.59 ) }
    dend_62 { pt3dadd( 1.07825, -128.925, -27.2307, 0.88 ) }
    dend_62 { pt3dadd( 1.22642, -130.025, -27.3957, 0.88 ) }
    dend_62 { pt3dadd( 1.29145, -130.689, -27.5076, 0.88 ) }
    dend_62 { pt3dadd( 1.34616, -131.762, -27.6794, 0.66 ) }
    dend_62 { pt3dadd( 1.36283, -132.876, -27.7403, 0.52 ) }
    dend_62 { pt3dadd( 1.36922, -133.972, -27.6838, 1.11 ) }
    dend_62 { pt3dadd( 1.36373, -134.488, -27.5992, 1.11 ) }
    dend_62 { pt3dadd( 1.35274, -135.294, -27.4138, 0.88 ) }
    dend_62 { pt3dadd( 1.36794, -136.369, -27.1439, 0.81 ) }
    dend_62 { pt3dadd( 1.40862, -137.343, -26.9098, 0.88 ) }
    dend_62 { pt3dadd( 1.48285, -138.067, -26.8051, 1.03 ) }
    dend_62 { pt3dadd( 1.65406, -139.194, -26.7546, 0.74 ) }
    dend_62 { pt3dadd( 1.81087, -140.035, -26.763, 0.59 ) }
    dend_62 { pt3dadd( 2.03975, -141.009, -26.8207, 0.52 ) }
    dend_62 { pt3dadd( 2.25486, -141.763, -26.9259, 0.74 ) }
    dend_62 { pt3dadd( 2.68782, -143.089, -27.1799, 0.66 ) }
    dend_62 { pt3dadd( 3.00838, -144.014, -27.3757, 0.74 ) }
    dend_62 { pt3dadd( 3.28989, -144.817, -27.5342, 0.81 ) }
    dend_62 { pt3dadd( 3.53125, -145.572, -27.6377, 1.11 ) }
    dend_62 { pt3dadd( 3.76843, -146.391, -27.6981, 0.88 ) }
    dend_62 { pt3dadd( 3.78499, -146.453, -27.705, 0.88 ) }
    dend_62 { pt3dadd( 4.03387, -147.386, -27.9118, 0.59 ) }
    dend_62 { pt3dadd( 4.28998, -148.331, -28.2276, 0.59 ) }
    dend_62 { pt3dadd( 4.55084, -149.292, -28.6102, 0.81 ) }
    dend_62 { pt3dadd( 4.87557, -150.466, -29.1049, 1.03 ) }
    dend_62 { pt3dadd( 5.53675, -152.591, -30.0559, 1.03 ) }
    dend_62 { pt3dadd( 6.07125, -154.141, -30.7635, 0.81 ) }
    dend_62 { pt3dadd( 6.56729, -155.416, -31.3677, 0.59 ) }
    dend_62 { pt3dadd( 6.59016, -155.472, -31.3945, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 6.96138, -156.405, -31.806, 0.74 ) }
    dend_62 { pt3dadd( 7.37038, -157.474, -32.1633, 0.66 ) }
    dend_62 { pt3dadd( 7.76678, -158.548, -32.3593, 0.66 ) }
    dend_62 { pt3dadd( 8.14944, -159.629, -32.4994, 0.66 ) }
    dend_62 { pt3dadd( 8.44532, -160.572, -32.6112, 0.96 ) }
    dend_62 { pt3dadd( 8.621, -161.348, -32.712, 1.18 ) }
    dend_62 { pt3dadd( 8.7252, -162.312, -32.8763, 1.03 ) }
    dend_62 { pt3dadd( 8.69075, -163.152, -33.067, 0.88 ) }
    dend_62 { pt3dadd( 8.53129, -164.123, -33.3626, 0.66 ) }
    dend_62 { pt3dadd( 8.3764, -164.722, -33.5696, 0.74 ) }
    dend_62 { pt3dadd( 8.03331, -165.874, -33.9959, 0.74 ) }
    dend_62 { pt3dadd( 7.75027, -166.763, -34.3134, 0.81 ) }
    dend_62 { pt3dadd( 7.35777, -167.983, -34.7074, 0.81 ) }
    dend_62 { pt3dadd( 7.0593, -169.065, -34.9944, 1.03 ) }
    dend_62 { pt3dadd( 6.90822, -169.836, -35.1398, 1.11 ) }
    dend_62 { pt3dadd( 6.83207, -170.678, -35.2524, 0.81 ) }
    dend_62 { pt3dadd( 6.84003, -172.009, -35.3502, 0.66 ) }
    dend_62 { pt3dadd( 6.93391, -173.064, -35.3479, 0.81 ) }
    dend_62 { pt3dadd( 7.07903, -173.816, -35.3065, 0.81 ) }
    dend_62 { pt3dadd( 7.30195, -174.581, -35.25, 0.81 ) }
    dend_62 { pt3dadd( 7.49719, -175.088, -35.2074, 1.03 ) }
    dend_62 { pt3dadd( 7.52573, -175.147, -35.2019, 1.03 ) }
    dend_62 { pt3dadd( 7.97527, -175.881, -35.1245, 0.74 ) }
    dend_62 { pt3dadd( 8.54263, -176.68, -35.0923, 0.44 ) }
    dend_62 { pt3dadd( 8.74216, -176.946, -35.0991, 0.74 ) }
    dend_62 { pt3dadd( 8.78313, -176.998, -35.1062, 0.74 ) }
    dend_62 { pt3dadd( 9.10313, -177.431, -35.1876, 0.74 ) }
    dend_62 { pt3dadd( 9.1444, -177.491, -35.1995, 0.74 ) }
    dend_62 { pt3dadd( 9.89871, -178.718, -35.3958, 0.59 ) }
    dend_62 { pt3dadd( 10.1062, -179.097, -35.444, 0.88 ) }
    dend_62 { pt3dadd( 10.5036, -179.939, -35.5293, 0.88 ) }
    dend_62 { pt3dadd( 10.9431, -181.045, -35.6071, 0.66 ) }
    dend_62 { pt3dadd( 11.1932, -181.828, -35.6389, 0.74 ) }
    dend_62 { pt3dadd( 11.4565, -182.864, -35.6913, 0.88 ) }
    dend_62 { pt3dadd( 11.5858, -183.593, -35.7706, 0.44 ) }
    dend_62 { pt3dadd( 11.6746, -184.251, -35.9173, 0.44 ) }
    dend_62 { pt3dadd( 11.7391, -185.006, -36.153, 0.52 ) }
    dend_62 { pt3dadd( 11.7831, -185.617, -36.4231, 0.81 ) }
    dend_62 { pt3dadd( 11.8736, -186.69, -36.9789, 1.03 ) }
    dend_62 { pt3dadd( 12.0253, -187.893, -37.6493, 0.88 ) }
    dend_62 { pt3dadd( 12.2343, -189.029, -38.2665, 0.59 ) }
    dend_62 { pt3dadd( 12.387, -189.648, -38.5877, 0.74 ) }
    dend_62 { pt3dadd( 12.7437, -190.762, -39.0688, 0.52 ) }
    dend_62 { pt3dadd( 12.9851, -191.373, -39.2507, 0.52 ) }
    dend_62 { pt3dadd( 13.3645, -192.184, -39.3301, 0.81 ) }
    dend_62 { pt3dadd( 13.6918, -192.781, -39.2894, 1.03 ) }
    dend_62 { pt3dadd( 13.93, -193.162, -39.2204, 1.03 ) }
    dend_62 { pt3dadd( 14.6261, -194.2, -38.975, 0.52 ) }
    dend_62 { pt3dadd( 14.8935, -194.604, -38.8754, 0.66 ) }
    dend_62 { pt3dadd( 15.3205, -195.286, -38.7427, 0.66 ) }
    dend_62 { pt3dadd( 15.3576, -195.351, -38.7336, 0.66 ) }
    dend_62 { pt3dadd( 15.6936, -195.978, -38.6755, 0.81 ) }
    dend_62 { pt3dadd( 16.1095, -196.805, -38.6388, 0.59 ) }
    dend_62 { pt3dadd( 16.6063, -197.841, -38.6474, 0.37 ) }
    dend_62 { pt3dadd( 16.8715, -198.385, -38.6528, 0.88 ) }
    dend_62 { pt3dadd( 17.223, -199.027, -38.6733, 1.18 ) }
    dend_62 { pt3dadd( 17.2578, -199.082, -38.6751, 1.18 ) }
    dend_62 { pt3dadd( 17.6257, -199.572, -38.7616, 1.11 ) }
    dend_62 { pt3dadd( 18.0524, -200.081, -38.9508, 0.96 ) }
    dend_62 { pt3dadd( 18.0938, -200.128, -38.9744, 0.96 ) }
    dend_62 { pt3dadd( 18.8532, -201.036, -39.4968, 0.59 ) }
    dend_62 { pt3dadd( 19.285, -201.602, -39.8306, 0.81 ) }
    dend_62 { pt3dadd( 20.2334, -203.059, -40.6307, 0.59 ) }
    dend_62 { pt3dadd( 20.6172, -203.785, -40.9911, 0.88 ) }
    dend_62 { pt3dadd( 20.8189, -204.298, -41.2126, 0.88 ) }
    dend_62 { pt3dadd( 20.9807, -204.88, -41.4155, 0.81 ) }
    dend_62 { pt3dadd( 21.0981, -205.686, -41.6166, 0.59 ) }
    dend_62 { pt3dadd( 21.1499, -206.536, -41.7446, 0.66 ) }
    dend_62 { pt3dadd( 21.1598, -207.523, -41.7879, 1.03 ) }
    dend_62 { pt3dadd( 21.1705, -208.144, -41.804, 1.33 ) }
    dend_62 { pt3dadd( 21.1834, -208.675, -41.8287, 1.18 ) }
    dend_62 { pt3dadd( 21.2126, -209.389, -41.9065, 0.81 ) }
    dend_62 { pt3dadd( 21.3075, -210.304, -42.1213, 0.59 ) }
    dend_62 { pt3dadd( 21.4987, -211.173, -42.3978, 0.74 ) }
    dend_62 { pt3dadd( 21.6749, -211.705, -42.5638, 0.96 ) }
    dend_62 { pt3dadd( 21.6954, -211.754, -42.5772, 0.96 ) }
    dend_62 { pt3dadd( 22.1634, -212.717, -42.7934, 0.96 ) }
    dend_62 { pt3dadd( 23.0089, -214.238, -43.075, 0.74 ) }
    dend_62 { pt3dadd( 23.6972, -215.326, -43.2378, 0.74 ) }
    dend_62 { pt3dadd( 24.3551, -216.299, -43.343, 0.88 ) }
    dend_62 { pt3dadd( 24.9148, -217.166, -43.3189, 0.88 ) }
    dend_62 { pt3dadd( 25.4525, -218.065, -43.1691, 0.59 ) }
    dend_62 { pt3dadd( 25.7657, -218.728, -42.9018, 0.59 ) }
    dend_62 { pt3dadd( 25.9313, -219.329, -42.528, 0.59 ) }
    dend_62 { pt3dadd( 25.9345, -219.373, -42.4967, 0.59 ) }
    dend_62 { pt3dadd( 25.7332, -221.245, -41.203, 0.52 ) }
    dend_62 { pt3dadd( 25.5172, -222.046, -40.6668, 0.52 ) }
    dend_62 { pt3dadd( 24.9314, -223.591, -39.8291, 1.18 ) }
    dend_62 { pt3dadd( 24.5324, -224.513, -39.4552, 1.18 ) }
    dend_62 { pt3dadd( 24.197, -225.329, -39.2837, 0.52 ) }
    dend_62 { pt3dadd( 23.8196, -226.548, -39.3367, 0.52 ) }
    dend_62 { pt3dadd( 23.63, -227.526, -39.6063, 0.66 ) }
    dend_62 { pt3dadd( 23.4773, -229.114, -40.2373, 0.66 ) }
    dend_62 { pt3dadd( 23.5019, -230.018, -40.7211, 0.66 ) }
    dend_62 { pt3dadd( 23.7003, -231.591, -41.6423, 0.66 ) }
    dend_62 { pt3dadd( 24.1039, -233.256, -42.6626, 0.74 ) }
    dend_62 { pt3dadd( 24.3194, -233.843, -43.0271, 1.03 ) }
    dend_62 { pt3dadd( 24.5706, -234.377, -43.3499, 1.03 ) }
    dend_62 { pt3dadd( 25.1581, -235.444, -43.9412, 0.66 ) }
    dend_62 { pt3dadd( 25.5997, -236.178, -44.3418, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 26.0137, -236.849, -44.6403, 0.74 ) }
    dend_62 { pt3dadd( 26.3721, -237.438, -44.8497, 1.03 ) }
    dend_62 { pt3dadd( 26.4057, -237.489, -44.8677, 1.03 ) }
    dend_62 { pt3dadd( 26.5771, -237.709, -44.9241, 1.25 ) }
    dend_62 { pt3dadd( 26.6303, -237.764, -44.9222, 1.25 ) }
    dend_62 { pt3dadd( 26.9922, -238.1, -44.8675, 1.25 ) }
    dend_62 { pt3dadd( 27.0367, -238.146, -44.8571, 1.25 ) }
    dend_62 { pt3dadd( 27.3692, -238.544, -44.7679, 1.25 ) }
    dend_62 { pt3dadd( 27.6702, -238.973, -44.6792, 1.25 ) }
    dend_62 { pt3dadd( 28.3308, -240.099, -44.4178, 0.59 ) }
    dend_62 { pt3dadd( 28.8254, -240.982, -44.1942, 0.59 ) }
    dend_62 { pt3dadd( 29.351, -241.973, -43.9298, 0.66 ) }
    dend_62 { pt3dadd( 29.758, -242.727, -43.7154, 0.66 ) }
    dend_62 { pt3dadd( 30.2925, -243.676, -43.4251, 0.59 ) }
    dend_62 { pt3dadd( 30.7452, -244.44, -43.1716, 0.44 ) }
    dend_62 { pt3dadd( 31.2009, -245.074, -42.9241, 0.29 ) }
    dend_62 { pt3dadd( 31.2413, -245.112, -42.9049, 0.29 ) }
    dend_62 { pt3dadd( 31.9512, -245.492, -42.5991, 0.59 ) }
    dend_62 { pt3dadd( 32.6474, -245.788, -42.3225, 0.74 ) }
    dend_62 { pt3dadd( 32.7058, -245.812, -42.296, 0.74 ) }
    dend_62 { pt3dadd( 33.5563, -246.181, -41.8861, 0.74 ) }
    dend_62 { pt3dadd( 33.6075, -246.207, -41.8545, 0.74 ) }
    dend_62 { pt3dadd( 34.782, -246.839, -40.9497, 0.59 ) }
    dend_62 { pt3dadd( 35.3531, -247.164, -40.4379, 0.81 ) }
    dend_62 { pt3dadd( 36.2253, -247.719, -39.5565, 0.66 ) }
    dend_62 { pt3dadd( 36.2731, -247.75, -39.507, 0.66 ) }
    dend_62 { pt3dadd( 37.1233, -248.281, -38.5705, 1.03 ) }
    dend_62 { pt3dadd( 37.7445, -248.621, -37.8132, 1.47 ) }
    dend_62 { pt3dadd( 38.0366, -248.777, -37.37, 1.55 ) }
    dend_62 { pt3dadd( 38.6238, -249.1, -36.3486, 0.29 ) }
    dend_62 { pt3dadd( 39.0252, -249.335, -35.5907, 0.59 ) }
    dend_62 { pt3dadd( 39.6052, -249.693, -34.4729, 0.81 ) }
    dend_62 { pt3dadd( 40.28, -250.134, -33.1186, 1.18 ) }
    dend_62 { pt3dadd( 41.1276, -250.74, -31.3906, 0.44 ) }
    dend_62 { pt3dadd( 41.6861, -251.163, -30.2228, 0.59 ) }
    dend_62 { pt3dadd( 41.7145, -251.186, -30.165, 0.59 ) }
    dend_62 { pt3dadd( 42.0493, -251.519, -29.5298, 0.81 ) }
    dend_62 { pt3dadd( 42.0749, -251.549, -29.4906, 0.81 ) }
    dend_62 { pt3dadd( 42.4908, -252.061, -29.012, 0.37 ) }
    dend_62 { pt3dadd( 42.9866, -252.64, -28.5695, 0.88 ) }
    dend_62 { pt3dadd( 43.3503, -253.106, -28.2571, 1.33 ) }
    dend_62 { pt3dadd( 43.6957, -253.612, -27.9537, 1.47 ) }
    dend_62 { pt3dadd( 44.4034, -254.739, -27.396, 0.88 ) }
    dend_62 { pt3dadd( 44.4363, -254.792, -27.3738, 0.88 ) }
    dend_62 { pt3dadd( 44.7509, -255.299, -27.2065, 1.03 ) }
    dend_62 { pt3dadd( 45.2781, -256.139, -27.0303, 0.44 ) }
    dend_62 { pt3dadd( 45.8294, -257.009, -26.9205, 0.44 ) }
    dend_62 { pt3dadd( 46.3083, -257.772, -26.8971, 0.66 ) }
    dend_62 { pt3dadd( 46.3436, -257.826, -26.9006, 0.66 ) }
    dend_62 { pt3dadd( 46.6836, -258.323, -26.9192, 0.44 ) }
    dend_62 { pt3dadd( 47.0696, -258.862, -26.9274, 0.81 ) }
    dend_62 { pt3dadd( 47.3188, -259.18, -26.9153, 0.96 ) }
    dend_62 { pt3dadd( 47.6986, -259.657, -26.8687, 1.11 ) }
    dend_62 { pt3dadd( 48.1663, -260.278, -26.7637, 0.29 ) }
    dend_62 { pt3dadd( 48.5477, -260.803, -26.6776, 0.22 ) }
    dend_62 { pt3dadd( 48.585, -260.858, -26.6691, 0.22 ) }
    dend_62 { pt3dadd( 49.0605, -261.515, -26.5618, 1.47 ) }
    dend_62 { pt3dadd( 49.1005, -261.565, -26.5528, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -0.0464659, -114.606, -30.4386, 0.44 ) }
    dend_53 { pt3dadd( -0.0308843, -115.672, -31.4073, 0.44 ) }
    dend_53 { pt3dadd( 0.0272341, -116.733, -32.3812, 0.59 ) }
    dend_53 { pt3dadd( 0.307979, -119.501, -34.896, 0.59 ) }
    dend_53 { pt3dadd( 0.484621, -120.781, -36.0296, 0.81 ) }
    dend_53 { pt3dadd( 0.758898, -122.401, -37.4447, 0.81 ) }
    dend_53 { pt3dadd( 1.04616, -123.916, -38.7368, 0.88 ) }
    dend_53 { pt3dadd( 1.23298, -124.785, -39.4448, 1.03 ) }
    dend_53 { pt3dadd( 1.58725, -126.07, -40.4552, 0.52 ) }
    dend_53 { pt3dadd( 1.7999, -126.649, -40.8514, 0.88 ) }
    dend_53 { pt3dadd( 2.14841, -127.572, -41.4672, 0.88 ) }
    dend_53 { pt3dadd( 2.30656, -128.085, -41.7768, 0.88 ) }
    dend_53 { pt3dadd( 2.31082, -128.151, -41.8144, 0.88 ) }
    dend_53 { pt3dadd( 2.06945, -129.066, -42.4195, 0.44 ) }
    dend_53 { pt3dadd( 1.78812, -129.692, -42.9185, 0.74 ) }
    dend_53 { pt3dadd( 1.49062, -130.417, -43.5619, 0.74 ) }
    dend_53 { pt3dadd( 1.20274, -131.325, -44.4326, 0.96 ) }
    dend_53 { pt3dadd( 0.969431, -132.569, -45.7141, 0.96 ) }
    dend_53 { pt3dadd( 0.929769, -133.833, -47.0226, 0.96 ) }
    dend_53 { pt3dadd( 1.02834, -135.076, -48.3258, 0.96 ) }
    dend_53 { pt3dadd( 1.29691, -136.499, -49.7348, 0.88 ) }
    dend_53 { pt3dadd( 1.67708, -137.863, -50.9864, 0.88 ) }
    dend_53 { pt3dadd( 2.07616, -139.081, -51.9889, 0.59 ) }
    dend_53 { pt3dadd( 2.50924, -140.32, -52.9278, 0.59 ) }
    dend_53 { pt3dadd( 2.82268, -141.288, -53.6062, 0.96 ) }
    dend_53 { pt3dadd( 3.08594, -142.276, -54.2454, 1.25 ) }
    dend_53 { pt3dadd( 3.26796, -143.248, -54.8313, 1.33 ) }
    dend_53 { pt3dadd( 3.48021, -144.663, -55.6143, 0.96 ) }
    dend_53 { pt3dadd( 3.63014, -145.75, -56.1903, 0.81 ) }
    dend_53 { pt3dadd( 3.81611, -146.936, -56.8384, 0.88 ) }
    dend_53 { pt3dadd( 3.98941, -147.489, -57.1337, 1.11 ) }
    dend_53 { pt3dadd( 4.01267, -147.535, -57.1626, 1.11 ) }
    dend_53 { pt3dadd( 4.51939, -148.205, -57.6099, 1.11 ) }
    dend_53 { pt3dadd( 5.01213, -148.67, -57.9004, 1.25 ) }
    dend_53 { pt3dadd( 5.13024, -148.765, -57.9682, 1.25 ) }
    dend_53 { pt3dadd( 5.94776, -149.396, -58.5412, 1.33 ) }
    dend_53 { pt3dadd( 6.74186, -150.077, -59.286, 1.03 ) }
    dend_53 { pt3dadd( 7.15079, -150.51, -59.8155, 0.59 ) }
    dend_53 { pt3dadd( 7.41621, -150.874, -60.3082, 0.81 ) }
    dend_53 { pt3dadd( 7.88855, -151.879, -61.7786, 0.81 ) }
    dend_53 { pt3dadd( 8.05676, -152.679, -62.9865, 1.11 ) }
    dend_53 { pt3dadd( 8.03734, -153.537, -64.2673, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( 7.88826, -154.57, -65.7284, 0.59 ) }
    dend_53 { pt3dadd( 7.777, -155.183, -66.5822, 0.81 ) }
    dend_53 { pt3dadd( 7.5879, -156.231, -68.0612, 0.96 ) }
    dend_53 { pt3dadd( 7.47672, -157.116, -69.2502, 0.81 ) }
    dend_53 { pt3dadd( 7.43457, -158.307, -70.7077, 0.37 ) }
    dend_53 { pt3dadd( 7.52722, -159.404, -71.9272, 1.03 ) }
    dend_53 { pt3dadd( 7.85673, -160.968, -73.4554, 0.96 ) }
    dend_53 { pt3dadd( 8.36069, -162.544, -74.8445, 1.18 ) }
    dend_53 { pt3dadd( 8.83755, -163.696, -75.7982, 1.18 ) }
    dend_53 { pt3dadd( 9.41238, -164.893, -76.7553, 1.18 ) }
    dend_53 { pt3dadd( 10.0033, -166.021, -77.6344, 0.81 ) }
    dend_53 { pt3dadd( 10.689, -167.269, -78.5473, 0.66 ) }
    dend_53 { pt3dadd( 11.0803, -167.966, -79.0094, 0.96 ) }
    dend_53 { pt3dadd( 11.8676, -169.306, -79.8353, 1.25 ) }
    dend_53 { pt3dadd( 11.9026, -169.364, -79.8729, 1.25 ) }
    dend_53 { pt3dadd( 12.5939, -170.393, -80.5286, 1.11 ) }
    dend_53 { pt3dadd( 13.1246, -171.196, -80.9535, 0.81 ) }
    dend_53 { pt3dadd( 13.4578, -171.741, -81.1866, 1.25 ) }
    dend_53 { pt3dadd( 13.8337, -172.43, -81.3879, 1.25 ) }
    dend_53 { pt3dadd( 14.1437, -173.139, -81.4892, 0.66 ) }
    dend_53 { pt3dadd( 14.3507, -173.877, -81.6182, 0.59 ) }
    dend_53 { pt3dadd( 14.4146, -174.826, -81.7976, 0.59 ) }
    dend_53 { pt3dadd( 14.3646, -175.289, -81.9161, 0.88 ) }
    dend_53 { pt3dadd( 14.3508, -175.359, -81.9376, 0.88 ) }
    dend_53 { pt3dadd( 14.1685, -176.246, -82.2756, 0.88 ) }
    dend_53 { pt3dadd( 13.976, -177.83, -82.9738, 0.59 ) }
    dend_53 { pt3dadd( 13.9946, -178.526, -83.3369, 0.44 ) }
    dend_53 { pt3dadd( 14.0151, -178.65, -83.4028, 0.44 ) }
    dend_53 { pt3dadd( 14.1763, -179.279, -83.7332, 0.74 ) }
    dend_53 { pt3dadd( 14.4769, -180.262, -84.209, 0.96 ) }
    dend_53 { pt3dadd( 14.7527, -181.085, -84.6206, 0.96 ) }
    dend_53 { pt3dadd( 15.176, -182.337, -85.1823, 0.59 ) }
    dend_53 { pt3dadd( 15.3736, -182.999, -85.4819, 0.88 ) }
    dend_53 { pt3dadd( 15.3905, -183.066, -85.5113, 0.88 ) }
    dend_53 { pt3dadd( 15.5535, -183.777, -85.8072, 0.96 ) }
    dend_53 { pt3dadd( 15.8582, -185.427, -86.4899, 0.59 ) }
    dend_53 { pt3dadd( 16.0202, -186.366, -86.8894, 1.03 ) }
    dend_53 { pt3dadd( 16.1707, -187.094, -87.1929, 1.18 ) }
    dend_53 { pt3dadd( 16.4625, -188.305, -87.7119, 0.88 ) }
    dend_53 { pt3dadd( 16.7151, -189.344, -88.1432, 0.74 ) }
    dend_53 { pt3dadd( 16.9803, -190.464, -88.5855, 0.66 ) }
    dend_53 { pt3dadd( 17.2716, -191.892, -89.0791, 0.52 ) }
    dend_53 { pt3dadd( 17.3964, -192.769, -89.3753, 0.81 ) }
    dend_53 { pt3dadd( 17.4477, -193.684, -89.6805, 0.37 ) }
    dend_53 { pt3dadd( 17.3832, -194.463, -89.9326, 0.37 ) }
    dend_53 { pt3dadd( 17.2765, -195.02, -90.11, 0.88 ) }
    dend_53 { pt3dadd( 17.1196, -195.547, -90.2781, 1.18 ) }
    dend_53 { pt3dadd( 16.8542, -196.173, -90.4847, 1.33 ) }
    dend_53 { pt3dadd( 16.3806, -197.241, -90.8827, 0.88 ) }
    dend_53 { pt3dadd( 15.9077, -198.413, -91.3825, 0.74 ) }
    dend_53 { pt3dadd( 15.882, -198.479, -91.4125, 0.74 ) }
    dend_53 { pt3dadd( 15.2994, -200.035, -92.1581, 0.52 ) }
    dend_53 { pt3dadd( 14.9393, -201.022, -92.6498, 0.66 ) }
    dend_53 { pt3dadd( 14.3124, -202.811, -93.5527, 0.59 ) }
    dend_53 { pt3dadd( 14.0074, -203.827, -94.0414, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 12.8868, -147.767, -30.0696, 0.37 ) }
    dend_51 { pt3dadd( 13.6865, -148.051, -29.4844, 0.37 ) }
    dend_51 { pt3dadd( 14.557, -148.431, -28.8483, 0.59 ) }
    dend_51 { pt3dadd( 15.0925, -148.67, -28.4758, 0.59 ) }
    dend_51 { pt3dadd( 16.0659, -149.078, -27.8374, 0.59 ) }
    dend_51 { pt3dadd( 16.1973, -149.132, -27.7542, 0.59 ) }
    dend_51 { pt3dadd( 16.9186, -149.406, -27.3429, 0.22 ) }
    dend_51 { pt3dadd( 17.3159, -149.517, -27.2007, 0.44 ) }
    dend_51 { pt3dadd( 18.0027, -149.645, -27.1096, 0.44 ) }
    dend_51 { pt3dadd( 18.5477, -149.723, -27.1208, 0.81 ) }
    dend_51 { pt3dadd( 18.6415, -149.728, -27.1309, 0.81 ) }
    dend_51 { pt3dadd( 19.3268, -149.691, -27.2624, 0.96 ) }
    dend_51 { pt3dadd( 20.8782, -149.485, -27.7242, 0.52 ) }
    dend_51 { pt3dadd( 21.3925, -149.401, -27.8958, 0.52 ) }
    dend_51 { pt3dadd( 21.4633, -149.389, -27.9204, 0.52 ) }
    dend_51 { pt3dadd( 22.3421, -149.227, -28.2263, 0.44 ) }
    dend_51 { pt3dadd( 23.9502, -148.907, -28.748, 0.74 ) }
    dend_51 { pt3dadd( 25.4542, -148.588, -29.2559, 0.29 ) }
    dend_51 { pt3dadd( 26.1034, -148.434, -29.4659, 0.29 ) }
    dend_51 { pt3dadd( 26.5449, -148.343, -29.6086, 0.59 ) }
    dend_51 { pt3dadd( 26.6071, -148.334, -29.6292, 0.59 ) }
    dend_51 { pt3dadd( 27.0757, -148.316, -29.8108, 1.18 ) }
    dend_51 { pt3dadd( 28.5414, -148.382, -30.3322, 1.11 ) }
    dend_51 { pt3dadd( 29.3527, -148.471, -30.6378, 0.37 ) }
    dend_51 { pt3dadd( 30.4844, -148.637, -31.075, 0.29 ) }
    dend_51 { pt3dadd( 31.7887, -148.86, -31.549, 1.11 ) }
    dend_51 { pt3dadd( 33.5186, -149.17, -32.1183, 0.66 ) }
    dend_51 { pt3dadd( 34.618, -149.384, -32.4486, 0.44 ) }
    dend_51 { pt3dadd( 36.0337, -149.667, -32.8604, 1.18 ) }
    dend_51 { pt3dadd( 36.5745, -149.773, -33.0307, 1.62 ) }
    dend_51 { pt3dadd( 37.379, -149.901, -33.2772, 1.18 ) }
    dend_51 { pt3dadd( 38.3136, -150.009, -33.5197, 0.74 ) }
    dend_51 { pt3dadd( 38.3787, -150.015, -33.5336, 0.74 ) }
    dend_51 { pt3dadd( 40.1087, -150.107, -34.0355, 0.59 ) }
    dend_51 { pt3dadd( 40.1725, -150.108, -34.0555, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 12.8868, -147.767, -30.0696, 0.59 ) }
    dend_50 { pt3dadd( 12.6291, -149.68, -29.4992, 0.59 ) }
    dend_50 { pt3dadd( 12.469, -150.64, -28.9082, 0.66 ) }
    dend_50 { pt3dadd( 12.3843, -151.12, -28.4776, 1.03 ) }
    dend_50 { pt3dadd( 12.3421, -151.299, -28.3015, 1.03 ) }
    dend_50 { pt3dadd( 12.2019, -151.642, -27.8579, 1.03 ) }
    dend_50 { pt3dadd( 11.7526, -152.532, -26.5518, 0.74 ) }
    dend_50 { pt3dadd( 10.8986, -153.779, -24.3046, 1.03 ) }
    dend_50 { pt3dadd( 10.3389, -154.498, -22.5949, 1.11 ) }
    dend_50 { pt3dadd( 10.1051, -154.802, -21.8498, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 9.05178, -156.131, -18.7114, 0.74 ) }
    dend_50 { pt3dadd( 9.01014, -156.182, -18.5936, 0.74 ) }
    dend_50 { pt3dadd( 8.55399, -156.754, -17.36, 0.66 ) }
    dend_50 { pt3dadd( 6.87806, -159.371, -12.8181, 0.66 ) }
    dend_50 { pt3dadd( 6.48801, -160.178, -11.7015, 0.52 ) }
    dend_50 { pt3dadd( 6.14708, -161.231, -10.5561, 0.74 ) }
    dend_50 { pt3dadd( 6.13615, -161.292, -10.5096, 0.74 ) }
    dend_50 { pt3dadd( 6.03817, -162.173, -9.9757, 0.88 ) }
    dend_50 { pt3dadd( 5.94506, -164.445, -8.97138, 0.52 ) }
    dend_50 { pt3dadd( 5.94627, -165.548, -8.71031, 0.52 ) }
    dend_50 { pt3dadd( 5.97882, -166.704, -8.42709, 0.52 ) }
    dend_50 { pt3dadd( 6.04571, -167.824, -8.17352, 0.44 ) }
    dend_50 { pt3dadd( 6.08419, -168.692, -8.00367, 0.37 ) }
    dend_50 { pt3dadd( 6.13575, -170.217, -7.70846, 0.37 ) }
    dend_50 { pt3dadd( 6.20004, -171.432, -7.50492, 0.59 ) }
    dend_50 { pt3dadd( 6.24727, -172.147, -7.35507, 0.88 ) }
    dend_50 { pt3dadd( 6.25327, -172.222, -7.33188, 0.88 ) }
    dend_50 { pt3dadd( 6.31854, -172.844, -7.08807, 0.96 ) }
    dend_50 { pt3dadd( 6.46943, -174.505, -6.16159, 0.44 ) }
    dend_50 { pt3dadd( 6.55737, -175.389, -5.56839, 0.59 ) }
    dend_50 { pt3dadd( 6.56287, -175.442, -5.52413, 0.59 ) }
    dend_50 { pt3dadd( 6.73765, -176.735, -4.43826, 0.81 ) }
    dend_50 { pt3dadd( 6.78865, -177.183, -4.06894, 0.96 ) }
    dend_50 { pt3dadd( 6.97218, -179.094, -2.55717, 0.52 ) }
    dend_50 { pt3dadd( 6.99889, -179.547, -2.23069, 0.74 ) }
    dend_50 { pt3dadd( 7.03774, -181.099, -1.21806, 0.52 ) }
    dend_50 { pt3dadd( 7.07225, -182.109, -0.694065, 0.74 ) }
    dend_50 { pt3dadd( 7.09803, -183.032, -0.302761, 0.44 ) }
    dend_50 { pt3dadd( 7.08428, -183.835, 0.05057, 0.29 ) }
    dend_50 { pt3dadd( 7.05167, -184.341, 0.300241, 0.37 ) }
    dend_50 { pt3dadd( 6.94774, -185.08, 0.818881, 0.59 ) }
    dend_50 { pt3dadd( 6.81121, -185.962, 1.57171, 0.59 ) }
    dend_50 { pt3dadd( 6.65052, -187.377, 2.95421, 0.81 ) }
    dend_50 { pt3dadd( 6.62926, -188.848, 4.5611, 0.44 ) }
    dend_50 { pt3dadd( 6.77155, -190.218, 6.23809, 0.88 ) }
    dend_50 { pt3dadd( 7.11929, -191.669, 8.20867, 0.74 ) }
    dend_50 { pt3dadd( 7.38682, -192.195, 9.02077, 0.29 ) }
    dend_50 { pt3dadd( 8.01481, -192.843, 10.1615, 0.37 ) }
    dend_50 { pt3dadd( 9.05963, -193.136, 10.803, 0.37 ) }
    dend_50 { pt3dadd( 10.0588, -193.156, 11.0136, 0.66 ) }
    dend_50 { pt3dadd( 10.1408, -193.15, 11.0195, 0.66 ) }
    dend_50 { pt3dadd( 11.4579, -192.982, 10.9676, 0.29 ) }
    dend_50 { pt3dadd( 11.5501, -192.968, 10.9649, 0.29 ) }
    dend_50 { pt3dadd( 12.9944, -192.691, 11.0004, 0.15 ) }
    dend_50 { pt3dadd( 14.3729, -192.368, 10.9609, 0.15 ) }
    dend_50 { pt3dadd( 15.0242, -200.206, 18.7015, 0.15 ) }
    dend_50 { pt3dadd( 14.5907, -208.106, 26.3797, 0.15 ) }
    dend_50 { pt3dadd( 15.8131, -216.893, 32.8175, 0.15 ) }
    dend_50 { pt3dadd( 19.0711, -223.95, 40.7454, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -18.0709, -329.596, -46.339, 1.18 ) }
    dend_46 { pt3dadd( -17.4174, -330.58, -46.3649, 1.18 ) }
    dend_46 { pt3dadd( -16.719, -331.563, -46.3778, 0.96 ) }
    dend_46 { pt3dadd( -16.4158, -331.975, -46.3922, 1.47 ) }
    dend_46 { pt3dadd( -16.0515, -332.467, -46.4242, 1.84 ) }
    dend_46 { pt3dadd( -15.6058, -333.065, -46.474, 1.33 ) }
    dend_46 { pt3dadd( -15.001, -333.891, -46.5668, 0.74 ) }
    dend_46 { pt3dadd( -14.9688, -333.937, -46.5763, 0.74 ) }
    dend_46 { pt3dadd( -14.5495, -334.534, -46.7205, 0.81 ) }
    dend_46 { pt3dadd( -14.2176, -335.013, -46.8606, 0.44 ) }
    dend_46 { pt3dadd( -14.1891, -335.059, -46.8788, 0.44 ) }
    dend_46 { pt3dadd( -13.786, -335.836, -47.2341, 0.29 ) }
    dend_46 { pt3dadd( -13.463, -336.535, -47.6132, 0.44 ) }
    dend_46 { pt3dadd( -13.2694, -336.971, -47.8587, 0.81 ) }
    dend_46 { pt3dadd( -13.0628, -337.381, -48.0896, 0.81 ) }
    dend_46 { pt3dadd( -12.5804, -338.155, -48.5285, 0.37 ) }
    dend_46 { pt3dadd( -12.544, -338.203, -48.5528, 0.37 ) }
    dend_46 { pt3dadd( -12.1025, -338.72, -48.7766, 0.81 ) }
    dend_46 { pt3dadd( -11.6342, -339.258, -48.9601, 1.11 ) }
    dend_46 { pt3dadd( -10.9922, -340.037, -49.1521, 1.11 ) }
    dend_46 { pt3dadd( -10.2211, -341.076, -49.3166, 0.29 ) }
    dend_46 { pt3dadd( -9.69095, -341.902, -49.3756, 0.29 ) }
    dend_46 { pt3dadd( -9.36736, -342.515, -49.3718, 0.66 ) }
    dend_46 { pt3dadd( -9.06233, -343.303, -49.3065, 0.88 ) }
    dend_46 { pt3dadd( -8.87925, -343.984, -49.2164, 1.03 ) }
    dend_46 { pt3dadd( -8.81596, -344.561, -49.1154, 1.03 ) }
    dend_46 { pt3dadd( -8.82629, -345.245, -48.9434, 0.74 ) }
    dend_46 { pt3dadd( -8.90538, -346.204, -48.6526, 0.22 ) }
    dend_46 { pt3dadd( -8.95848, -346.817, -48.4272, 0.74 ) }
    dend_46 { pt3dadd( -8.96246, -346.874, -48.4014, 0.74 ) }
    dend_46 { pt3dadd( -8.98544, -347.425, -48.1312, 0.74 ) }
    dend_46 { pt3dadd( -8.98865, -347.476, -48.1054, 0.74 ) }
    dend_46 { pt3dadd( -9.0434, -348.125, -47.7923, 0.29 ) }
    dend_46 { pt3dadd( -9.08058, -348.592, -47.6146, 0.29 ) }
    dend_46 { pt3dadd( -9.10552, -349.202, -47.4314, 1.03 ) }
    dend_46 { pt3dadd( -9.13178, -349.828, -47.3233, 1.4 ) }
    dend_46 { pt3dadd( -9.16728, -350.53, -47.2745, 0.52 ) }
    dend_46 { pt3dadd( -9.21446, -350.977, -47.2711, 0.29 ) }
    dend_46 { pt3dadd( -9.38779, -351.706, -47.357, 0.37 ) }
    dend_46 { pt3dadd( -9.56514, -352.157, -47.4785, 0.66 ) }
    dend_46 { pt3dadd( -9.94847, -352.85, -47.8077, 0.37 ) }
    dend_46 { pt3dadd( -10.175, -353.161, -48.0444, 0.96 ) }
    dend_46 { pt3dadd( -10.4131, -353.462, -48.3211, 0.96 ) }
    dend_46 { pt3dadd( -11.054, -354.209, -49.077, 0.37 ) }
    dend_46 { pt3dadd( -11.6725, -354.904, -49.8488, 0.74 ) }
    dend_46 { pt3dadd( -12.3197, -355.655, -50.7365, 1.25 ) }
    dend_46 { pt3dadd( -13.3977, -357.006, -52.4573, 0.29 ) }
    dend_46 { pt3dadd( -13.748, -357.459, -53.0695, 0.29 ) }
    dend_46 { pt3dadd( -13.7728, -357.493, -53.1182, 0.29 ) }
    dend_46 { pt3dadd( -14.071, -357.977, -53.8276, 0.88 ) }
    dend_46 { pt3dadd( -14.1835, -358.203, -54.1675, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( -14.3937, -358.863, -55.1785, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -18.0709, -329.596, -46.339, 0.44 ) }
    dend_45 { pt3dadd( -17.4127, -330.266, -46.4782, 0.44 ) }
    dend_45 { pt3dadd( -16.6156, -331.102, -46.6246, 0.44 ) }
    dend_45 { pt3dadd( -16.5706, -331.153, -46.6315, 0.44 ) }
    dend_45 { pt3dadd( -16.2599, -331.518, -46.6739, 0.29 ) }
    dend_45 { pt3dadd( -15.8757, -331.956, -46.7229, 0.81 ) }
    dend_45 { pt3dadd( -15.4291, -332.437, -46.7781, 1.11 ) }
    dend_45 { pt3dadd( -15.3945, -332.477, -46.7796, 1.11 ) }
    dend_45 { pt3dadd( -14.906, -333.052, -46.8115, 0.44 ) }
    dend_45 { pt3dadd( -14.8692, -333.097, -46.8148, 0.44 ) }
    dend_45 { pt3dadd( -14.4252, -333.675, -46.8717, 0.37 ) }
    dend_45 { pt3dadd( -14.1262, -334.101, -46.9107, 0.37 ) }
    dend_45 { pt3dadd( -13.6605, -334.838, -46.9738, 0.29 ) }
    dend_45 { pt3dadd( -13.3956, -335.264, -47.0185, 0.74 ) }
    dend_45 { pt3dadd( -13.2398, -335.512, -47.0491, 0.81 ) }
    dend_45 { pt3dadd( -13.1724, -335.619, -47.0688, 0.81 ) }
    dend_45 { pt3dadd( -12.7874, -336.225, -47.2096, 0.44 ) }
    dend_45 { pt3dadd( -12.4363, -336.751, -47.3533, 0.29 ) }
    dend_45 { pt3dadd( -12.0253, -337.3, -47.5281, 0.52 ) }
    dend_45 { pt3dadd( -11.781, -337.596, -47.6321, 0.52 ) }
    dend_45 { pt3dadd( -11.1396, -338.357, -47.9352, 0.29 ) }
    dend_45 { pt3dadd( -10.6901, -338.9, -48.1901, 0.59 ) }
    dend_45 { pt3dadd( -10.6569, -338.943, -48.2156, 0.59 ) }
    dend_45 { pt3dadd( -10.4727, -339.24, -48.3864, 0.59 ) }
    dend_45 { pt3dadd( -10.4476, -339.286, -48.4129, 0.59 ) }
    dend_45 { pt3dadd( -10.0152, -340.18, -48.9372, 0.81 ) }
    dend_45 { pt3dadd( -9.80364, -340.688, -49.2379, 1.03 ) }
    dend_45 { pt3dadd( -9.53869, -341.423, -49.7045, 0.59 ) }
    dend_45 { pt3dadd( -9.26933, -342.228, -50.2223, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -91.5969, -104.96, 24.2174, 0.37 ) }
    dend_39 { pt3dadd( -96.935, -112.421, 28.0206, 0.37 ) }
    dend_39 { pt3dadd( -104.429, -118.143, 31.438, 0.37 ) }
    dend_39 { pt3dadd( -113.104, -122.304, 34.519, 0.37 ) }
    dend_39 { pt3dadd( -120.583, -127.668, 38.5752, 0.37 ) }
    dend_39 { pt3dadd( -127.959, -132.888, 43.0165, 0.37 ) }
    dend_39 { pt3dadd( -134.903, -139.257, 46.3369, 0.37 ) }
    dend_39 { pt3dadd( -140.822, -146.496, 49.6989, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -91.5969, -104.96, 24.2174, 0.29 ) }
    dend_36 { pt3dadd( -96.0642, -110.403, 27.2522, 0.37 ) }
    dend_36 { pt3dadd( -99.7492, -116.49, 29.9701, 0.37 ) }
    dend_36 { pt3dadd( -103.289, -122.89, 31.9968, 0.37 ) }
    dend_36 { pt3dadd( -107.152, -128.792, 34.9103, 0.37 ) }
    dend_36 { pt3dadd( -111.818, -134.616, 36.5221, 0.37 ) }
    dend_36 { pt3dadd( -116.369, -140.161, 39.2058, 0.37 ) }
    dend_36 { pt3dadd( -120.834, -145.109, 43.0725, 0.37 ) }
    dend_36 { pt3dadd( -125.411, -149.883, 47.0524, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 84.0033, 147.263, 70.1417, 0.29 ) }
    dend_8 { pt3dadd( 86.9439, 154.505, 74.5443, 0.29 ) }
    dend_8 { pt3dadd( 90.5261, 160.887, 79.8289, 0.29 ) }
    dend_8 { pt3dadd( 93.2925, 167.463, 85.3207, 0.29 ) }
    dend_8 { pt3dadd( 96.8404, 173.738, 90.764, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 84.0033, 147.263, 70.1417, 0.44 ) }
    dend_7 { pt3dadd( 87.8662, 158.362, 75.7153, 0.29 ) }
    dend_7 { pt3dadd( 90.1348, 169.795, 81.4211, 0.29 ) }
    dend_7 { pt3dadd( 92.7601, 180.198, 88.8514, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -94.4651, -165.522, 33.3198, 0.29 ) }
    dend_90 { pt3dadd( -99.6803, -171.915, 32.4522, 0.29 ) }
    dend_90 { pt3dadd( -105.58, -177.555, 30.6461, 0.29 ) }
    dend_90 { pt3dadd( -111.246, -183.037, 27.8154, 0.29 ) }
    dend_90 { pt3dadd( -117.376, -188.64, 26.8953, 0.29 ) }
    dend_90 { pt3dadd( -123.408, -194.345, 26.0299, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -94.4651, -165.522, 33.3198, 0.44 ) }
    dend_89 { pt3dadd( -98.9134, -174.868, 32.2416, 0.29 ) }
    dend_89 { pt3dadd( -102.688, -184.473, 31.1127, 0.29 ) }
    dend_89 { pt3dadd( -105.347, -194.443, 30.9116, 0.29 ) }
    dend_89 { pt3dadd( -108.71, -204.207, 31.1802, 0.29 ) }
    dend_89 { pt3dadd( -112.226, -213.864, 32.158, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -79.4917, -110.547, 53.8123, 0.22 ) }
    dend_86 { pt3dadd( -78.5515, -110.196, 53.7763, 0.22 ) }
    dend_86 { pt3dadd( -78.1317, -110.04, 53.7473, 0.52 ) }
    dend_86 { pt3dadd( -77.8382, -109.932, 53.7055, 0.74 ) }
    dend_86 { pt3dadd( -76.9349, -109.62, 53.5213, 0.37 ) }
    dend_86 { pt3dadd( -75.9448, -109.272, 53.2712, 0.37 ) }
    dend_86 { pt3dadd( -75.5791, -109.143, 53.1787, 0.37 ) }
    dend_86 { pt3dadd( -75.4292, -109.092, 53.1294, 0.37 ) }
    dend_86 { pt3dadd( -74.7158, -108.871, 52.8787, 0.37 ) }
    dend_86 { pt3dadd( -74.3935, -108.776, 52.7458, 0.88 ) }
    dend_86 { pt3dadd( -73.9606, -108.633, 52.4784, 0.88 ) }
    dend_86 { pt3dadd( -66.5925, -107.257, 51.1175, 0.88 ) }
    dend_86 { pt3dadd( -59.7067, -104.46, 49.7145, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -79.4917, -110.547, 53.8123, 0.44 ) }
    dend_73 { pt3dadd( -79.3586, -109.346, 54.0518, 0.44 ) }
    dend_73 { pt3dadd( -79.1816, -108.19, 54.2613, 0.37 ) }
    dend_73 { pt3dadd( -79.1699, -108.138, 54.2717, 0.37 ) }
    dend_73 { pt3dadd( -78.9557, -107.231, 54.4889, 0.37 ) }
    dend_73 { pt3dadd( -78.9336, -107.14, 54.5178, 0.37 ) }
    dend_73 { pt3dadd( -78.6692, -106.066, 54.9122, 0.37 ) }
    dend_73 { pt3dadd( -78.652, -106.01, 54.9382, 0.37 ) }
    dend_73 { pt3dadd( -78.4548, -105.34, 55.3143, 0.29 ) }
    dend_73 { pt3dadd( -78.2802, -104.629, 55.7471, 0.29 ) }
    dend_73 { pt3dadd( -78.1552, -103.981, 56.1814, 0.29 ) }
    dend_73 { pt3dadd( -78.1358, -103.826, 56.2921, 0.66 ) }
    dend_73 { pt3dadd( -78.1344, -103.709, 56.3776, 0.66 ) }
    dend_73 { pt3dadd( -78.1579, -103.3, 56.6441, 0.66 ) }
    dend_73 { pt3dadd( -78.253, -102.626, 57.0304, 0.29 ) }
    dend_73 { pt3dadd( -78.3137, -102.336, 57.1883, 0.44 ) }
    dend_73 { pt3dadd( -78.3433, -102.228, 57.2473, 0.44 ) }
    dend_73 { pt3dadd( -78.5096, -101.715, 57.5585, 0.37 ) }
    dend_73 { pt3dadd( -78.708, -101.158, 57.926, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -78.7263, -101.109, 57.9605, 0.37 ) }
    dend_73 { pt3dadd( -79.0782, -100.223, 58.6373, 0.29 ) }
    dend_73 { pt3dadd( -79.28, -99.695, 59.0487, 0.44 ) }
    dend_73 { pt3dadd( -79.3319, -99.541, 59.1734, 0.44 ) }
    dend_73 { pt3dadd( -79.4749, -99.0534, 59.5918, 0.44 ) }
    dend_73 { pt3dadd( -79.5992, -98.5733, 60.0047, 0.29 ) }
    dend_73 { pt3dadd( -79.6219, -98.4701, 60.0926, 0.29 ) }
    dend_73 { pt3dadd( -79.6676, -98.1702, 60.341, 0.44 ) }
    dend_73 { pt3dadd( -79.7112, -97.8378, 60.6151, 0.44 ) }
    dend_73 { pt3dadd( -79.7173, -97.7811, 60.6603, 0.44 ) }
    dend_73 { pt3dadd( -79.7497, -97.3778, 60.9616, 0.44 ) }
    dend_73 { pt3dadd( -79.7491, -96.9404, 61.269, 0.44 ) }
    dend_73 { pt3dadd( -79.744, -96.8859, 61.3017, 0.44 ) }
    dend_73 { pt3dadd( -79.6743, -96.3787, 61.5676, 0.37 ) }
    dend_73 { pt3dadd( -79.638, -96.1282, 61.6868, 0.37 ) }
    dend_73 { pt3dadd( -79.5453, -95.473, 61.964, 0.44 ) }
    dend_73 { pt3dadd( -79.4556, -94.8871, 62.1869, 0.44 ) }
    dend_73 { pt3dadd( -79.3899, -94.2277, 62.3702, 0.44 ) }
    dend_73 { pt3dadd( -79.3279, -93.2888, 62.5784, 0.44 ) }
    dend_73 { pt3dadd( -79.3035, -92.4128, 62.7483, 0.74 ) }
    dend_73 { pt3dadd( -79.3161, -91.2327, 62.9522, 0.81 ) }
    dend_73 { pt3dadd( -79.3432, -90.7421, 63.0243, 0.74 ) }
    dend_73 { pt3dadd( -79.523, -88.9998, 63.2276, 0.29 ) }
    dend_73 { pt3dadd( -79.5306, -88.945, 63.2329, 0.29 ) }
    dend_73 { pt3dadd( -79.5889, -88.5461, 63.2603, 0.29 ) }
    dend_73 { pt3dadd( -79.6034, -88.4109, 63.2704, 0.29 ) }
    dend_73 { pt3dadd( -79.6115, -88.086, 63.3199, 0.44 ) }
    dend_73 { pt3dadd( -79.6084, -88.0254, 63.3316, 0.44 ) }
    dend_73 { pt3dadd( -79.5526, -87.5992, 63.436, 0.44 ) }
    dend_73 { pt3dadd( -79.4485, -86.9053, 63.5831, 0.88 ) }
    dend_73 { pt3dadd( -79.2823, -85.9271, 63.7603, 0.52 ) }
    dend_73 { pt3dadd( -79.1472, -85.1648, 63.8927, 0.52 ) }
    dend_73 { pt3dadd( -79.044, -84.5463, 63.9892, 0.44 ) }
    dend_73 { pt3dadd( -78.9435, -83.8645, 64.0969, 0.29 ) }
    dend_73 { pt3dadd( -78.8772, -83.3519, 64.1774, 0.59 ) }
    dend_73 { pt3dadd( -78.8564, -83.1533, 64.2111, 0.59 ) }
    dend_73 { pt3dadd( -78.8189, -82.653, 64.3098, 0.59 ) }
    dend_73 { pt3dadd( -78.7834, -82.1558, 64.411, 0.29 ) }
    dend_73 { pt3dadd( -78.7259, -81.4806, 64.5632, 0.29 ) }
    dend_73 { pt3dadd( -78.7182, -81.4106, 64.5781, 0.29 ) }
    dend_73 { pt3dadd( -78.6645, -80.8995, 64.6799, 0.59 ) }
    dend_73 { pt3dadd( -78.6553, -80.8191, 64.695, 0.59 ) }
    dend_73 { pt3dadd( -78.5841, -80.2498, 64.8073, 0.66 ) }
    dend_73 { pt3dadd( -78.4954, -79.6228, 64.9365, 0.66 ) }
    dend_73 { pt3dadd( -78.3954, -78.9567, 65.068, 0.29 ) }
    dend_73 { pt3dadd( -78.2506, -78.0262, 65.2497, 0.29 ) }
    dend_73 { pt3dadd( -78.2382, -77.9564, 65.2623, 0.29 ) }
    dend_73 { pt3dadd( -77.9864, -76.79, 65.4996, 0.29 ) }
    dend_73 { pt3dadd( -77.9543, -76.6594, 65.5302, 0.29 ) }
    dend_73 { pt3dadd( -77.7603, -75.9299, 65.7282, 0.52 ) }
    dend_73 { pt3dadd( -77.7259, -75.8044, 65.7686, 0.52 ) }
    dend_73 { pt3dadd( -77.5121, -75.0649, 66.0402, 0.81 ) }
    dend_73 { pt3dadd( -77.3301, -74.3626, 66.3192, 0.52 ) }
    dend_73 { pt3dadd( -77.1966, -73.7901, 66.5657, 0.52 ) }
    dend_73 { pt3dadd( -77.0951, -73.2567, 66.7957, 0.74 ) }
    dend_73 { pt3dadd( -77.0035, -72.615, 67.0629, 0.88 ) }
    dend_73 { pt3dadd( -76.9751, -72.3689, 67.1429, 0.88 ) }
    dend_73 { pt3dadd( -76.8902, -71.5561, 67.2763, 0.88 ) }
    dend_73 { pt3dadd( -76.882, -71.4929, 67.2769, 0.88 ) }
    dend_73 { pt3dadd( -76.8054, -71.0461, 67.2365, 0.66 ) }
    dend_73 { pt3dadd( -76.6343, -70.3707, 67.1604, 0.44 ) }
    dend_73 { pt3dadd( -76.2996, -69.3892, 67.0785, 0.37 ) }
    dend_73 { pt3dadd( -75.9308, -68.4412, 67.0496, 0.29 ) }
    dend_73 { pt3dadd( -75.6563, -67.8074, 67.0504, 0.29 ) }
    dend_73 { pt3dadd( -75.6302, -67.7494, 67.054, 0.29 ) }
    dend_73 { pt3dadd( -75.1546, -66.7015, 67.2014, 0.29 ) }
    dend_73 { pt3dadd( -74.5654, -65.405, 67.4801, 0.29 ) }
    dend_73 { pt3dadd( -74.245, -64.6549, 67.7114, 0.37 ) }
    dend_73 { pt3dadd( -74.1997, -64.5347, 67.7546, 0.37 ) }
    dend_73 { pt3dadd( -73.9974, -63.8938, 67.9786, 0.37 ) }
    dend_73 { pt3dadd( -73.8001, -63.2562, 68.1917, 0.37 ) }
    dend_73 { pt3dadd( -73.7662, -63.1392, 68.2279, 0.37 ) }
    dend_73 { pt3dadd( -73.5163, -62.257, 68.5338, 0.52 ) }
    dend_73 { pt3dadd( -73.2696, -61.364, 68.8731, 0.44 ) }
    dend_73 { pt3dadd( -73.0166, -60.4277, 69.2505, 1.11 ) }
    dend_73 { pt3dadd( -72.6657, -59.178, 69.7549, 0.29 ) }
    dend_73 { pt3dadd( -72.6452, -59.1147, 69.7824, 0.29 ) }
    dend_73 { pt3dadd( -72.3045, -58.1744, 70.1911, 0.29 ) }
    dend_73 { pt3dadd( -72.094, -57.6439, 70.4155, 0.29 ) }
    dend_73 { pt3dadd( -72.0751, -57.5978, 70.4342, 0.29 ) }
    dend_73 { pt3dadd( -71.6862, -56.645, 70.7912, 0.37 ) }
    dend_73 { pt3dadd( -71.1266, -55.2112, 71.2754, 0.37 ) }
    dend_73 { pt3dadd( -70.717, -54.1898, 71.5881, 0.37 ) }
    dend_73 { pt3dadd( -70.3705, -53.3699, 71.8076, 0.81 ) }
    dend_73 { pt3dadd( -70.1411, -52.8271, 71.9429, 1.03 ) }
    dend_73 { pt3dadd( -69.7724, -51.9049, 72.162, 0.29 ) }
    dend_73 { pt3dadd( -69.5423, -51.2721, 72.3026, 0.29 ) }
    dend_73 { pt3dadd( -69.4113, -50.8356, 72.3828, 0.44 ) }
    dend_73 { pt3dadd( -69.3955, -50.7772, 72.3952, 0.44 ) }
    dend_73 { pt3dadd( -69.3215, -50.4635, 72.4732, 0.44 ) }
    dend_73 { pt3dadd( -69.1458, -49.6922, 72.7215, 0.29 ) }
    dend_73 { pt3dadd( -69.1202, -49.578, 72.7653, 0.29 ) }
    dend_73 { pt3dadd( -68.9107, -48.6337, 73.1681, 0.29 ) }
    dend_73 { pt3dadd( -68.8993, -48.577, 73.1945, 0.29 ) }
    dend_73 { pt3dadd( -68.7087, -47.5559, 73.695, 0.29 ) }
    dend_73 { pt3dadd( -68.6002, -46.9592, 73.9934, 0.66 ) }
    dend_73 { pt3dadd( -68.5176, -46.5282, 74.2047, 0.74 ) }
    dend_73 { pt3dadd( -68.4927, -46.416, 74.2538, 0.74 ) }
    dend_73 { pt3dadd( -68.2166, -45.3597, 74.644, 0.29 ) }
    dend_73 { pt3dadd( -68.1854, -45.25, 74.6771, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -67.9976, -44.575, 74.8316, 0.29 ) }
    dend_73 { pt3dadd( -67.8727, -44.0981, 74.9215, 0.74 ) }
    dend_73 { pt3dadd( -67.6601, -43.3401, 75.0415, 0.22 ) }
    dend_73 { pt3dadd( -67.3292, -42.2461, 75.1813, 0.22 ) }
    dend_73 { pt3dadd( -66.9789, -41.2502, 75.2544, 1.03 ) }
    dend_73 { pt3dadd( -66.6042, -40.2474, 75.3042, 0.29 ) }
    dend_73 { pt3dadd( -66.5307, -40.0592, 75.3105, 0.29 ) }
    dend_73 { pt3dadd( -66.1202, -39.0425, 75.3315, 0.29 ) }
    dend_73 { pt3dadd( -66.0418, -38.8565, 75.3327, 0.29 ) }
    dend_73 { pt3dadd( -65.3341, -37.2728, 75.3114, 0.29 ) }
    dend_73 { pt3dadd( -65.2619, -37.1156, 75.3106, 0.29 ) }
    dend_73 { pt3dadd( -64.7779, -36.0094, 75.2951, 0.29 ) }
    dend_73 { pt3dadd( -64.752, -35.9419, 75.2945, 0.29 ) }
    dend_73 { pt3dadd( -64.4713, -35.0564, 75.2992, 0.44 ) }
    dend_73 { pt3dadd( -64.4551, -34.9948, 75.3, 0.44 ) }
    dend_73 { pt3dadd( -64.3116, -34.238, 75.3255, 0.44 ) }
    dend_73 { pt3dadd( -64.1726, -33.4504, 75.3496, 0.74 ) }
    dend_73 { pt3dadd( -64.1637, -33.3874, 75.3522, 0.74 ) }
    dend_73 { pt3dadd( -64.1145, -33.0177, 75.3734, 1.03 ) }
    dend_73 { pt3dadd( -64.0306, -32.339, 75.4399, 0.59 ) }
    dend_73 { pt3dadd( -63.9005, -31.6564, 75.6106, 0.29 ) }
    dend_73 { pt3dadd( -63.8672, -31.5349, 75.6608, 0.29 ) }
    dend_73 { pt3dadd( -63.7307, -31.1342, 75.896, 0.29 ) }
    dend_73 { pt3dadd( -63.71, -31.0765, 75.9343, 0.29 ) }
    dend_73 { pt3dadd( -63.4875, -30.4773, 76.3724, 0.88 ) }
    dend_73 { pt3dadd( -63.1754, -29.6033, 77.0141, 0.88 ) }
    dend_73 { pt3dadd( -63.1425, -29.5038, 77.0832, 0.88 ) }
    dend_73 { pt3dadd( -63.0081, -29.0805, 77.3547, 0.66 ) }
    dend_73 { pt3dadd( -62.8464, -28.6646, 77.6131, 0.29 ) }
    dend_73 { pt3dadd( -62.658, -28.2332, 77.8663, 0.29 ) }
    dend_73 { pt3dadd( -62.2701, -27.3979, 78.317, 0.29 ) }
    dend_73 { pt3dadd( -62.069, -26.9702, 78.5184, 0.44 ) }
    dend_73 { pt3dadd( -62.038, -26.9117, 78.5473, 0.44 ) }
    dend_73 { pt3dadd( -61.4955, -26.0874, 79.0363, 0.37 ) }
    dend_73 { pt3dadd( -61.1211, -25.5415, 79.4021, 0.29 ) }
    dend_73 { pt3dadd( -61.0918, -25.4951, 79.4351, 0.29 ) }
    dend_73 { pt3dadd( -60.8713, -25.1165, 79.7112, 0.74 ) }
    dend_73 { pt3dadd( -60.8537, -25.076, 79.7399, 0.74 ) }
    dend_73 { pt3dadd( -60.5082, -24.0061, 80.4799, 0.29 ) }
    dend_73 { pt3dadd( -60.3, -22.9979, 81.1301, 0.29 ) }
    dend_73 { pt3dadd( -60.1358, -22.1517, 81.6798, 0.22 ) }
    dend_73 { pt3dadd( -60.106, -21.9886, 81.7875, 0.22 ) }
    dend_73 { pt3dadd( -59.9244, -20.8655, 82.5189, 0.29 ) }
    dend_73 { pt3dadd( -59.9156, -20.8048, 82.557, 0.29 ) }
    dend_73 { pt3dadd( -59.8027, -19.8085, 83.1402, 0.29 ) }
    dend_73 { pt3dadd( -59.6776, -18.9764, 83.6551, 0.29 ) }
    dend_73 { pt3dadd( -59.5133, -18.1361, 84.2027, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -154.389, -169.396, 107.922, 0.37 ) }
    dend_71 { pt3dadd( -154.762, -169.992, 107.595, 0.37 ) }
    dend_71 { pt3dadd( -155.627, -171.243, 106.992, 0.37 ) }
    dend_71 { pt3dadd( -156.351, -172.309, 106.544, 0.29 ) }
    dend_71 { pt3dadd( -156.799, -172.938, 106.272, 0.44 ) }
    dend_71 { pt3dadd( -157.239, -173.566, 106.011, 0.44 ) }
    dend_71 { pt3dadd( -158.095, -174.809, 105.52, 0.29 ) }
    dend_71 { pt3dadd( -158.42, -175.265, 105.36, 0.37 ) }
    dend_71 { pt3dadd( -158.891, -175.914, 105.192, 0.37 ) }
    dend_71 { pt3dadd( -159.894, -177.21, 104.803, 0.37 ) }
    dend_71 { pt3dadd( -160.365, -177.811, 104.601, 0.37 ) }
    dend_71 { pt3dadd( -160.69, -178.238, 104.444, 0.66 ) }
    dend_71 { pt3dadd( -160.735, -178.297, 104.424, 0.66 ) }
    dend_71 { pt3dadd( -161.052, -178.678, 104.289, 0.74 ) }
    dend_71 { pt3dadd( -161.935, -179.617, 103.96, 0.37 ) }
    dend_71 { pt3dadd( -162.493, -180.164, 103.811, 0.37 ) }
    dend_71 { pt3dadd( -162.561, -180.219, 103.792, 0.37 ) }
    dend_71 { pt3dadd( -163.093, -180.607, 103.634, 0.37 ) }
    dend_71 { pt3dadd( -167.904, -189.889, 101.337, 0.37 ) }
    dend_71 { pt3dadd( -170.879, -199.953, 99.5775, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -154.389, -169.396, 107.922, 0.29 ) }
    dend_70 { pt3dadd( -155.195, -169.236, 108.647, 0.29 ) }
    dend_70 { pt3dadd( -155.885, -169.128, 109.417, 0.52 ) }
    dend_70 { pt3dadd( -156.86, -169.053, 110.519, 0.44 ) }
    dend_70 { pt3dadd( -157.205, -169.074, 110.9, 0.29 ) }
    dend_70 { pt3dadd( -157.869, -169.179, 111.584, 0.29 ) }
    dend_70 { pt3dadd( -158.406, -169.279, 112.161, 0.44 ) }
    dend_70 { pt3dadd( -159.669, -169.568, 113.612, 0.29 ) }
    dend_70 { pt3dadd( -160.204, -169.69, 114.201, 0.29 ) }
    dend_70 { pt3dadd( -160.982, -169.886, 115.045, 0.29 ) }
    dend_70 { pt3dadd( -161.701, -170.071, 115.89, 0.29 ) }
    dend_70 { pt3dadd( -162.448, -170.249, 116.807, 0.29 ) }
    dend_70 { pt3dadd( -162.484, -170.258, 116.851, 0.29 ) }
    dend_70 { pt3dadd( -163.146, -170.364, 117.613, 0.44 ) }
    dend_70 { pt3dadd( -164.077, -170.389, 118.797, 0.44 ) }
    dend_70 { pt3dadd( -164.164, -170.375, 118.918, 0.44 ) }
    dend_70 { pt3dadd( -164.634, -170.288, 119.617, 0.66 ) }
    dend_70 { pt3dadd( -165.173, -170.273, 120.271, 0.66 ) }
    dend_70 { pt3dadd( -171.351, -170.603, 127.712, 0.66 ) }
    dend_70 { pt3dadd( -175.712, -170.58, 136.351, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 49.1005, -261.565, -26.5528, 0.52 ) }
    dend_64 { pt3dadd( 48.2052, -262.199, -26.7507, 0.52 ) }
    dend_64 { pt3dadd( 47.5168, -262.719, -26.9211, 0.29 ) }
    dend_64 { pt3dadd( 46.8, -263.323, -27.1271, 0.22 ) }
    dend_64 { pt3dadd( 46.4312, -263.647, -27.2202, 0.52 ) }
    dend_64 { pt3dadd( 46.0986, -263.944, -27.2966, 0.74 ) }
    dend_64 { pt3dadd( 45.6762, -264.328, -27.3905, 0.81 ) }
    dend_64 { pt3dadd( 45.2832, -264.685, -27.4807, 0.66 ) }
    dend_64 { pt3dadd( 44.732, -265.202, -27.629, 0.29 ) }
    dend_64 { pt3dadd( 44.1118, -265.868, -27.7813, 0.29 ) }
    dend_64 { pt3dadd( 44.0733, -265.912, -27.7905, 0.29 ) }
    dend_64 { pt3dadd( 43.9539, -266.055, -27.8192, 0.66 ) }
    dend_64 { pt3dadd( 43.6089, -266.463, -27.9004, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 43.1752, -266.965, -28.0075, 0.22 ) }
    dend_64 { pt3dadd( 42.8044, -267.398, -28.1148, 0.22 ) }
    dend_64 { pt3dadd( 42.6416, -267.616, -28.1887, 0.52 ) }
    dend_64 { pt3dadd( 42.4438, -267.89, -28.2801, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 49.1005, -261.565, -26.5528, 1.18 ) }
    dend_63 { pt3dadd( 49.4196, -262.445, -26.192, 1.18 ) }
    dend_63 { pt3dadd( 49.5304, -262.852, -26.0407, 1.4 ) }
    dend_63 { pt3dadd( 49.6365, -263.626, -25.7471, 0.37 ) }
    dend_63 { pt3dadd( 49.5832, -264.336, -25.4708, 0.44 ) }
    dend_63 { pt3dadd( 49.4385, -264.925, -25.2632, 0.66 ) }
    dend_63 { pt3dadd( 49.0876, -265.757, -24.9727, 0.66 ) }
    dend_63 { pt3dadd( 48.8428, -266.177, -24.844, 0.66 ) }
    dend_63 { pt3dadd( 48.224, -267.125, -24.58, 0.59 ) }
    dend_63 { pt3dadd( 47.3779, -268.348, -24.2645, 0.37 ) }
    dend_63 { pt3dadd( 46.8764, -269.071, -24.0818, 1.55 ) }
    dend_63 { pt3dadd( 46.0628, -270.373, -23.7542, 0.37 ) }
    dend_63 { pt3dadd( 45.6492, -271.203, -23.5617, 0.44 ) }
    dend_63 { pt3dadd( 45.3603, -272.045, -23.3706, 0.44 ) }
    dend_63 { pt3dadd( 45.2898, -272.527, -23.2782, 0.88 ) }
    dend_63 { pt3dadd( 45.3007, -272.978, -23.2046, 1.03 ) }
    dend_63 { pt3dadd( 45.3719, -273.862, -23.0867, 0.37 ) }
    dend_63 { pt3dadd( 45.4468, -274.549, -23.0434, 0.37 ) }
    dend_63 { pt3dadd( 45.47, -274.89, -23.0267, 0.88 ) }
    dend_63 { pt3dadd( 45.488, -275.352, -23.009, 0.96 ) }
    dend_63 { pt3dadd( 45.4882, -276.113, -22.9951, 0.96 ) }
    dend_63 { pt3dadd( 45.4787, -277.056, -22.9829, 0.29 ) }
    dend_63 { pt3dadd( 45.4497, -278.02, -22.8964, 0.29 ) }
    dend_63 { pt3dadd( 45.4352, -278.367, -22.8406, 0.66 ) }
    dend_63 { pt3dadd( 45.4019, -278.767, -22.7323, 0.88 ) }
    dend_63 { pt3dadd( 45.395, -278.826, -22.7108, 0.88 ) }
    dend_63 { pt3dadd( 45.3256, -279.315, -22.4917, 0.74 ) }
    dend_63 { pt3dadd( 45.0719, -280.534, -21.9016, 0.29 ) }
    dend_63 { pt3dadd( 44.9014, -281.176, -21.6049, 0.29 ) }
    dend_63 { pt3dadd( 44.723, -282.038, -21.2328, 1.11 ) }
    dend_63 { pt3dadd( 44.681, -282.465, -21.0528, 1.11 ) }
    dend_63 { pt3dadd( 44.6819, -282.524, -21.0291, 1.11 ) }
    dend_63 { pt3dadd( 44.746, -283.03, -20.8472, 1.11 ) }
    dend_63 { pt3dadd( 45.0067, -284.206, -20.4114, 0.29 ) }
    dend_63 { pt3dadd( 45.2594, -285.2, -20.0237, 0.29 ) }
    dend_63 { pt3dadd( 45.4785, -286.069, -19.6885, 0.29 ) }
    dend_63 { pt3dadd( 45.5858, -286.554, -19.4973, 0.81 ) }
    dend_63 { pt3dadd( 45.6793, -287.145, -19.2491, 0.96 ) }
    dend_63 { pt3dadd( 45.7634, -288.286, -18.641, 0.96 ) }
    dend_63 { pt3dadd( 45.7472, -288.958, -18.2364, 0.37 ) }
    dend_63 { pt3dadd( 45.6654, -289.623, -17.8182, 0.88 ) }
    dend_63 { pt3dadd( 45.5647, -290.16, -17.4844, 0.88 ) }
    dend_63 { pt3dadd( 45.3325, -291.224, -16.8473, 0.59 ) }
    dend_63 { pt3dadd( 45.0063, -292.661, -16.0671, 0.44 ) }
    dend_63 { pt3dadd( 44.8933, -293.23, -15.8107, 0.59 ) }
    dend_63 { pt3dadd( 44.8057, -293.69, -15.6425, 0.59 ) }
    dend_63 { pt3dadd( 44.6849, -294.418, -15.4623, 0.88 ) }
    dend_63 { pt3dadd( 44.6151, -295.073, -15.3731, 0.29 ) }
    dend_63 { pt3dadd( 44.5741, -295.835, -15.3447, 0.29 ) }
    dend_63 { pt3dadd( 44.549, -296.626, -15.3282, 0.37 ) }
    dend_63 { pt3dadd( 44.5226, -297.492, -15.2664, 0.96 ) }
    dend_63 { pt3dadd( 44.5002, -298.12, -15.1992, 1.33 ) }
    dend_63 { pt3dadd( 44.4348, -299.165, -15.0079, 0.37 ) }
    dend_63 { pt3dadd( 44.3531, -299.913, -14.8337, 0.52 ) }
    dend_63 { pt3dadd( 44.1983, -300.882, -14.5761, 0.44 ) }
    dend_63 { pt3dadd( 44.1017, -301.391, -14.4281, 0.29 ) }
    dend_63 { pt3dadd( 43.9983, -301.942, -14.2565, 0.88 ) }
    dend_63 { pt3dadd( 43.8021, -302.919, -13.9626, 0.74 ) }
    dend_63 { pt3dadd( 43.6719, -303.56, -13.7434, 0.29 ) }
    dend_63 { pt3dadd( 43.595, -304.161, -13.5235, 0.59 ) }
    dend_63 { pt3dadd( 43.5344, -304.812, -13.2923, 0.74 ) }
    dend_63 { pt3dadd( 43.4757, -305.34, -13.0781, 0.88 ) }
    dend_63 { pt3dadd( 43.4665, -305.405, -13.0514, 0.88 ) }
    dend_63 { pt3dadd( 43.2097, -306.718, -12.5639, 0.52 ) }
    dend_63 { pt3dadd( 43.0452, -307.23, -12.3872, 0.52 ) }
    dend_63 { pt3dadd( 42.6757, -307.983, -12.1414, 0.52 ) }
    dend_63 { pt3dadd( 42.2417, -308.756, -11.9146, 0.96 ) }
    dend_63 { pt3dadd( 41.993, -309.157, -11.776, 1.33 ) }
    dend_63 { pt3dadd( 41.64, -309.729, -11.5484, 0.59 ) }
    dend_63 { pt3dadd( 41.2019, -310.458, -11.2576, 0.37 ) }
    dend_63 { pt3dadd( 40.6348, -311.51, -10.8008, 0.44 ) }
    dend_63 { pt3dadd( 40.3629, -312.139, -10.5337, 0.66 ) }
    dend_63 { pt3dadd( 39.9909, -313.307, -10.0928, 0.96 ) }
    dend_63 { pt3dadd( 39.7008, -314.499, -9.65726, 0.44 ) }
    dend_63 { pt3dadd( 39.5906, -315.111, -9.45009, 1.03 ) }
    dend_63 { pt3dadd( 39.5234, -315.843, -9.23113, 1.18 ) }
    dend_63 { pt3dadd( 39.5068, -316.848, -9.02962, 0.29 ) }
    dend_63 { pt3dadd( 39.5411, -317.803, -8.94737, 0.29 ) }
    dend_63 { pt3dadd( 39.5546, -317.944, -8.95295, 0.88 ) }
    dend_63 { pt3dadd( 39.5874, -318.282, -8.99186, 1.25 ) }
    dend_63 { pt3dadd( 39.6225, -318.977, -9.06409, 0.66 ) }
    dend_63 { pt3dadd( 39.6173, -319.737, -9.13543, 0.59 ) }
    dend_63 { pt3dadd( 39.5588, -320.789, -9.21899, 0.52 ) }
    dend_63 { pt3dadd( 39.4939, -321.411, -9.27113, 0.52 ) }
    dend_63 { pt3dadd( 39.3788, -322.303, -9.33947, 0.52 ) }
    dend_63 { pt3dadd( 39.2406, -323.144, -9.36934, 0.37 ) }
    dend_63 { pt3dadd( 39.1022, -323.921, -9.4143, 0.29 ) }
    dend_63 { pt3dadd( 39.0551, -324.228, -9.43616, 0.74 ) }
    dend_63 { pt3dadd( 39.0356, -324.412, -9.45272, 0.74 ) }
    dend_63 { pt3dadd( 39.0144, -324.92, -9.5218, 0.74 ) }
    dend_63 { pt3dadd( 39.0392, -325.741, -9.67168, 0.81 ) }
    dend_63 { pt3dadd( 39.1305, -326.998, -9.99674, 0.81 ) }
    dend_63 { pt3dadd( 39.2269, -327.816, -10.2157, 0.81 ) }
    dend_63 { pt3dadd( 39.3638, -328.726, -10.4495, 0.81 ) }
    dend_63 { pt3dadd( 39.3737, -328.785, -10.4638, 0.81 ) }
    dend_63 { pt3dadd( 39.5217, -329.587, -10.6475, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 39.7264, -330.59, -10.8578, 0.44 ) }
    dend_63 { pt3dadd( 39.852, -331.237, -10.9337, 0.44 ) }
    dend_63 { pt3dadd( 40.0051, -331.982, -10.986, 0.29 ) }
    dend_63 { pt3dadd( 40.1225, -332.615, -11.0021, 0.74 ) }
    dend_63 { pt3dadd( 40.174, -332.993, -11.0072, 0.96 ) }
    dend_63 { pt3dadd( 40.1763, -333.054, -11.0044, 0.96 ) }
    dend_63 { pt3dadd( 40.1265, -333.697, -10.9568, 0.52 ) }
    dend_63 { pt3dadd( 39.9406, -334.633, -10.8655, 0.52 ) }
    dend_63 { pt3dadd( 39.7051, -335.507, -10.7496, 0.52 ) }
    dend_63 { pt3dadd( 39.5443, -336.086, -10.6551, 0.59 ) }
    dend_63 { pt3dadd( 39.2935, -337.086, -10.4641, 0.74 ) }
    dend_63 { pt3dadd( 39.1783, -337.639, -10.3441, 0.52 ) }
    dend_63 { pt3dadd( 39.0109, -338.656, -10.1211, 0.37 ) }
    dend_63 { pt3dadd( 39.0041, -338.718, -10.1078, 0.37 ) }
    dend_63 { pt3dadd( 39.0074, -339.654, -9.91331, 0.44 ) }
    dend_63 { pt3dadd( 39.0954, -340.328, -9.79069, 0.37 ) }
    dend_63 { pt3dadd( 39.2164, -340.799, -9.7381, 0.74 ) }
    dend_63 { pt3dadd( 39.4246, -341.516, -9.68806, 0.29 ) }
    dend_63 { pt3dadd( 39.4387, -341.566, -9.68858, 0.29 ) }
    dend_63 { pt3dadd( 39.5181, -341.902, -9.6988, 0.44 ) }
    dend_63 { pt3dadd( 39.5259, -341.953, -9.70245, 0.44 ) }
    dend_63 { pt3dadd( 39.5598, -342.41, -9.75138, 0.44 ) }
    dend_63 { pt3dadd( 39.5907, -343.307, -9.84021, 0.22 ) }
    dend_63 { pt3dadd( 39.6065, -343.943, -9.86318, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 14.0074, -203.827, -94.0414, 0.29 ) }
    dend_61 { pt3dadd( 13.3151, -203.539, -94.7669, 0.29 ) }
    dend_61 { pt3dadd( 13.2229, -203.503, -94.8519, 0.29 ) }
    dend_61 { pt3dadd( 12.7787, -203.319, -95.2214, 0.29 ) }
    dend_61 { pt3dadd( 11.7014, -202.827, -96.043, 0.29 ) }
    dend_61 { pt3dadd( 11.3164, -202.627, -96.3508, 0.59 ) }
    dend_61 { pt3dadd( 10.2554, -201.996, -97.2033, 0.59 ) }
    dend_61 { pt3dadd( 9.68498, -201.584, -97.6674, 0.37 ) }
    dend_61 { pt3dadd( 9.39116, -201.33, -97.923, 0.66 ) }
    dend_61 { pt3dadd( 9.09195, -201.037, -98.2043, 0.88 ) }
    dend_61 { pt3dadd( 8.09293, -199.96, -99.1965, 0.22 ) }
    dend_61 { pt3dadd( 7.73409, -199.537, -99.5824, 0.44 ) }
    dend_61 { pt3dadd( 7.44626, -199.153, -99.9093, 0.59 ) }
    dend_61 { pt3dadd( 6.98913, -198.494, -100.533, 0.29 ) }
    dend_61 { pt3dadd( 6.59269, -197.925, -101.122, 0.74 ) }
    dend_61 { pt3dadd( 6.12375, -197.273, -101.863, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 14.0074, -203.827, -94.0414, 0.52 ) }
    dend_54 { pt3dadd( 13.6253, -205.497, -96.3674, 0.52 ) }
    dend_54 { pt3dadd( 13.609, -205.545, -96.4193, 0.52 ) }
    dend_54 { pt3dadd( 13.4437, -206.004, -96.8236, 0.52 ) }
    dend_54 { pt3dadd( 12.8856, -207.63, -98.0453, 1.33 ) }
    dend_54 { pt3dadd( 12.673, -208.262, -98.48, 1.77 ) }
    dend_54 { pt3dadd( 12.3949, -209.203, -99.0438, 0.66 ) }
    dend_54 { pt3dadd( 12.0519, -210.384, -99.5513, 0.66 ) }
    dend_54 { pt3dadd( 11.6747, -211.975, -100.237, 0.66 ) }
    dend_54 { pt3dadd( 11.5508, -212.849, -100.635, 0.88 ) }
    dend_54 { pt3dadd( 11.5485, -213.078, -100.737, 0.88 ) }
    dend_54 { pt3dadd( 11.6688, -214.499, -101.386, 0.88 ) }
    dend_54 { pt3dadd( 11.6774, -214.554, -101.413, 0.88 ) }
    dend_54 { pt3dadd( 12.0818, -216.281, -102.232, 0.66 ) }
    dend_54 { pt3dadd( 12.5025, -217.622, -102.918, 0.44 ) }
    dend_54 { pt3dadd( 12.7884, -218.432, -103.387, 0.96 ) }
    dend_54 { pt3dadd( 13.2218, -219.58, -104.107, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -125.411, -149.883, 47.0524, 0.29 ) }
    dend_38 { pt3dadd( -129.178, -153.279, 55.4867, 0.29 ) }
    dend_38 { pt3dadd( -133.452, -156.148, 63.9063, 0.29 ) }
    dend_38 { pt3dadd( -137.908, -159.335, 72.0973, 0.29 ) }
    dend_38 { pt3dadd( -143.242, -164.665, 78.2727, 0.29 ) }
    dend_38 { pt3dadd( -147.892, -169.816, 85.1235, 0.29 ) }
    dend_38 { pt3dadd( -152.323, -174.751, 92.2872, 0.29 ) }
    dend_38 { pt3dadd( -156.908, -179.315, 99.628, 0.29 ) }
    dend_38 { pt3dadd( -161.212, -184.413, 106.741, 0.29 ) }
    dend_38 { pt3dadd( -165.197, -189.908, 113.707, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -125.411, -149.883, 47.0524, 0.44 ) }
    dend_37 { pt3dadd( -130.513, -156.363, 45.5973, 0.29 ) }
    dend_37 { pt3dadd( -136.401, -162.01, 43.4213, 0.29 ) }
    dend_37 { pt3dadd( -141.88, -168.059, 41.3708, 0.29 ) }
    dend_37 { pt3dadd( -146.218, -174.693, 38.6569, 0.29 ) }
    dend_37 { pt3dadd( -149.43, -181.541, 35.0648, 0.29 ) }
    dend_37 { pt3dadd( -151.924, -188.283, 30.7376, 0.29 ) }
    dend_37 { pt3dadd( -154.729, -194.351, 25.572, 0.29 ) }
    dend_37 { pt3dadd( -158.413, -199.898, 20.3186, 0.29 ) }
    dend_37 { pt3dadd( -161.164, -206.664, 16.1992, 0.29 ) }
    dend_37 { pt3dadd( -164.151, -213.999, 13.6517, 0.29 ) }
    dend_37 { pt3dadd( -167.718, -221.42, 12.6731, 0.29 ) }
    dend_37 { pt3dadd( -172.714, -228.082, 13.1035, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 96.8404, 173.738, 90.764, 0.29 ) }
    dend_10 { pt3dadd( 100.098, 183.42, 97.165, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 96.8404, 173.738, 90.764, 0.44 ) }
    dend_9 { pt3dadd( 99.4696, 179.613, 95.2245, 0.29 ) }
    dend_9 { pt3dadd( 102.545, 185.091, 99.9464, 0.29 ) }
    dend_9 { pt3dadd( 105.267, 190.635, 104.801, 0.29 ) }
    dend_9 { pt3dadd( 108.274, 195.492, 110.264, 0.29 ) }
    dend_9 { pt3dadd( 109.796, 200.907, 115.773, 0.29 ) }
    dend_9 { pt3dadd( 111.422, 205.696, 121.864, 0.29 ) }
    dend_9 { pt3dadd( 111.658, 211.283, 127.403, 0.29 ) }
    dend_9 { pt3dadd( 111.589, 216.47, 133.365, 0.29 ) }
    dend_9 { pt3dadd( 111.069, 220.405, 140.293, 0.29 ) }
    dend_9 { pt3dadd( 111.576, 224.554, 147.073, 0.29 ) }
    dend_9 { pt3dadd( 113.95, 228.066, 153.848, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -59.5133, -18.1361, 84.2027, 0.22 ) }
    dend_83 { pt3dadd( -60.0345, -18.1726, 84.7665, 0.22 ) }
    dend_83 { pt3dadd( -60.8963, -18.2328, 85.6987, 0.22 ) }
    dend_83 { pt3dadd( -61.2736, -18.2592, 86.1068, 0.52 ) }
    dend_83 { pt3dadd( -61.5052, -18.2754, 86.3573, 0.74 ) }
    dend_83 { pt3dadd( -65.6334, -17.912, 92.4928, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -69.4725, -18.1391, 98.8248, 0.74 ) }
    dend_83 { pt3dadd( -72.169, -17.9213, 105.704, 0.74 ) }
    dend_83 { pt3dadd( -74.4466, -18.9163, 112.682, 0.74 ) }
    dend_83 { pt3dadd( -75.8042, -18.966, 119.939, 0.74 ) }
    dend_83 { pt3dadd( -75.7715, -19.6711, 127.29, 0.74 ) }
    dend_83 { pt3dadd( -74.2661, -20.4463, 134.466, 0.74 ) }
    dend_83 { pt3dadd( -72.4366, -20.6786, 141.583, 0.74 ) }
    dend_83 { pt3dadd( -70.9019, -20.243, 148.736, 0.74 ) }
    dend_83 { pt3dadd( -68.837, -20.6971, 155.783, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -59.5133, -18.1361, 84.2027, 0.44 ) }
    dend_74 { pt3dadd( -58.8478, -17.0581, 84.7774, 0.44 ) }
    dend_74 { pt3dadd( -58.3854, -16.2643, 85.1968, 0.66 ) }
    dend_74 { pt3dadd( -58.3053, -16.1161, 85.2767, 0.66 ) }
    dend_74 { pt3dadd( -58.068, -15.6661, 85.5184, 0.59 ) }
    dend_74 { pt3dadd( -57.5213, -14.6284, 86.0565, 0.29 ) }
    dend_74 { pt3dadd( -56.6225, -12.958, 86.8684, 0.29 ) }
    dend_74 { pt3dadd( -56.5239, -12.7865, 86.9573, 0.29 ) }
    dend_74 { pt3dadd( -55.8028, -11.6169, 87.6052, 0.52 ) }
    dend_74 { pt3dadd( -55.746, -11.5298, 87.655, 0.52 ) }
    dend_74 { pt3dadd( -54.9484, -10.3631, 88.3397, 0.52 ) }
    dend_74 { pt3dadd( -53.9313, -8.96048, 89.1555, 1.03 ) }
    dend_74 { pt3dadd( -52.595, -7.27335, 90.1142, 0.29 ) }
    dend_74 { pt3dadd( -52.5351, -7.20138, 90.1546, 0.29 ) }
    dend_74 { pt3dadd( -51.6526, -6.25724, 90.6678, 0.29 ) }
    dend_74 { pt3dadd( -50.9904, -5.59909, 90.982, 0.52 ) }
    dend_74 { pt3dadd( -50.2746, -4.93683, 91.258, 0.52 ) }
    dend_74 { pt3dadd( -49.4712, -4.20576, 91.4926, 0.96 ) }
    dend_74 { pt3dadd( -49.4104, -4.14864, 91.5061, 0.96 ) }
    dend_74 { pt3dadd( -47.5918, -2.42775, 91.9123, 0.29 ) }
    dend_74 { pt3dadd( -46.0919, -0.992489, 92.2583, 0.29 ) }
    dend_74 { pt3dadd( -46.012, -0.911552, 92.2806, 0.29 ) }
    dend_74 { pt3dadd( -44.8009, 0.453465, 92.7284, 0.29 ) }
    dend_74 { pt3dadd( -44.4488, 0.926988, 92.9117, 0.59 ) }
    dend_74 { pt3dadd( -44.2972, 1.16869, 93.0203, 0.59 ) }
    dend_74 { pt3dadd( -43.9908, 1.83732, 93.3836, 0.52 ) }
    dend_74 { pt3dadd( -43.7122, 2.54061, 93.8208, 0.66 ) }
    dend_74 { pt3dadd( -43.4247, 3.28192, 94.2893, 0.66 ) }
    dend_74 { pt3dadd( -43.0014, 4.42842, 95.0381, 0.29 ) }
    dend_74 { pt3dadd( -42.9241, 4.59486, 95.1544, 0.29 ) }
    dend_74 { pt3dadd( -42.5428, 5.28745, 95.6592, 0.29 ) }
    dend_74 { pt3dadd( -42.1673, 5.7703, 96.0847, 0.52 ) }
    dend_74 { pt3dadd( -42.1109, 5.82813, 96.1426, 0.52 ) }
    dend_74 { pt3dadd( -41.2071, 6.61115, 96.9523, 0.37 ) }
    dend_74 { pt3dadd( -40.0374, 7.50817, 97.909, 0.59 ) }
    dend_74 { pt3dadd( -39.4398, 7.94926, 98.3536, 0.96 ) }
    dend_74 { pt3dadd( -37.7223, 9.17223, 99.5477, 0.37 ) }
    dend_74 { pt3dadd( -37.6143, 9.24211, 99.6156, 0.37 ) }
    dend_74 { pt3dadd( -36.3238, 10.0372, 100.348, 0.37 ) }
    dend_74 { pt3dadd( -36.2419, 10.0849, 100.388, 0.37 ) }
    dend_74 { pt3dadd( -35.3116, 10.6729, 100.805, 0.37 ) }
    dend_74 { pt3dadd( -35.0794, 10.859, 100.916, 0.37 ) }
    dend_74 { pt3dadd( -33.7186, 12.3973, 101.698, 0.59 ) }
    dend_74 { pt3dadd( -33.4883, 12.6909, 101.852, 0.88 ) }
    dend_74 { pt3dadd( -33.4342, 12.7681, 101.891, 0.88 ) }
    dend_74 { pt3dadd( -33.0117, 13.4101, 102.195, 0.88 ) }
    dend_74 { pt3dadd( -31.5349, 15.7971, 103.227, 0.29 ) }
    dend_74 { pt3dadd( -30.3159, 17.9665, 103.99, 0.29 ) }
    dend_74 { pt3dadd( -30.1506, 18.2862, 104.082, 0.29 ) }
    dend_74 { pt3dadd( -28.7667, 20.8524, 104.865, 0.29 ) }
    dend_74 { pt3dadd( -28.5764, 21.2058, 104.987, 0.29 ) }
    dend_74 { pt3dadd( -27.6773, 22.87, 105.61, 0.37 ) }
    dend_74 { pt3dadd( -26.5861, 24.8983, 106.482, 0.37 ) }
    dend_74 { pt3dadd( -26.03, 25.8386, 107.006, 0.37 ) }
    dend_74 { pt3dadd( -25.1511, 27.2053, 107.95, 0.29 ) }
    dend_74 { pt3dadd( -24.3033, 28.4833, 109.038, 0.29 ) }
    dend_74 { pt3dadd( -24.2056, 28.6213, 109.175, 0.29 ) }
    dend_74 { pt3dadd( -23.7568, 29.1645, 109.927, 0.29 ) }
    dend_74 { pt3dadd( -22.6169, 30.1981, 112.034, 1.18 ) }
    dend_74 { pt3dadd( -22.3851, 30.3899, 112.452, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 13.2218, -219.58, -104.107, 0.88 ) }
    dend_56 { pt3dadd( 12.8221, -220.451, -104.623, 0.88 ) }
    dend_56 { pt3dadd( 12.5548, -221.077, -104.947, 1.47 ) }
    dend_56 { pt3dadd( 12.328, -221.699, -105.228, 1.69 ) }
    dend_56 { pt3dadd( 11.9444, -222.987, -105.73, 0.59 ) }
    dend_56 { pt3dadd( 11.9338, -223.031, -105.747, 0.59 ) }
    dend_56 { pt3dadd( 11.7739, -223.831, -106.047, 0.29 ) }
    dend_56 { pt3dadd( 11.6906, -224.468, -106.26, 0.44 ) }
    dend_56 { pt3dadd( 11.6609, -225.027, -106.49, 0.66 ) }
    dend_56 { pt3dadd( 11.6779, -225.64, -106.835, 1.11 ) }
    dend_56 { pt3dadd( 11.7294, -226.24, -107.205, 1.47 ) }
    dend_56 { pt3dadd( 11.7511, -226.545, -107.407, 1.47 ) }
    dend_56 { pt3dadd( 11.7535, -226.593, -107.44, 1.47 ) }
    dend_56 { pt3dadd( 11.7487, -228.016, -108.381, 1.11 ) }
    dend_56 { pt3dadd( 11.6367, -229.301, -109.124, 0.59 ) }
    dend_56 { pt3dadd( 11.5568, -229.965, -109.429, 0.81 ) }
    dend_56 { pt3dadd( 11.4806, -230.58, -109.64, 1.11 ) }
    dend_56 { pt3dadd( 11.4187, -231.216, -109.797, 1.25 ) }
    dend_56 { pt3dadd( 11.3442, -232.153, -109.936, 0.66 ) }
    dend_56 { pt3dadd( 11.2678, -233.224, -109.961, 0.52 ) }
    dend_56 { pt3dadd( 11.211, -234.247, -109.929, 1.03 ) }
    dend_56 { pt3dadd( 11.1905, -234.75, -109.928, 1.25 ) }
    dend_56 { pt3dadd( 11.175, -235.812, -109.956, 0.66 ) }
    dend_56 { pt3dadd( 11.1743, -236.13, -109.983, 0.44 ) }
    dend_56 { pt3dadd( 11.1906, -236.545, -110.044, 0.96 ) }
    dend_56 { pt3dadd( 11.215, -236.907, -110.118, 1.25 ) }
    dend_56 { pt3dadd( 11.2669, -237.842, -110.346, 1.11 ) }
    dend_56 { pt3dadd( 11.3013, -238.581, -110.554, 0.96 ) }
    dend_56 { pt3dadd( 11.34, -239.386, -110.759, 0.66 ) }
    dend_56 { pt3dadd( 11.3723, -240.231, -110.936, 0.59 ) }
    dend_56 { pt3dadd( 11.3742, -240.289, -110.946, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( 11.3687, -240.938, -111.016, 0.59 ) }
    dend_56 { pt3dadd( 11.2649, -241.801, -111.028, 0.52 ) }
    dend_56 { pt3dadd( 11.0314, -242.63, -110.977, 0.81 ) }
    dend_56 { pt3dadd( 10.7455, -243.229, -110.893, 1.03 ) }
    dend_56 { pt3dadd( 10.6955, -243.304, -110.88, 1.03 ) }
    dend_56 { pt3dadd( 10.2915, -243.842, -110.778, 1.03 ) }
    dend_56 { pt3dadd( 9.6659, -244.529, -110.622, 0.52 ) }
    dend_56 { pt3dadd( 9.27384, -244.895, -110.524, 1.11 ) }
    dend_56 { pt3dadd( 8.81001, -245.277, -110.464, 1.33 ) }
    dend_56 { pt3dadd( 8.76261, -245.314, -110.458, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 13.2218, -219.58, -104.107, 0.52 ) }
    dend_55 { pt3dadd( 14.046, -219.967, -103.561, 0.52 ) }
    dend_55 { pt3dadd( 15.5436, -220.669, -102.492, 0.29 ) }
    dend_55 { pt3dadd( 16.4263, -221.101, -101.872, 0.59 ) }
    dend_55 { pt3dadd( 16.951, -221.363, -101.472, 0.96 ) }
    dend_55 { pt3dadd( 18.5485, -222.17, -100.24, 0.22 ) }
    dend_55 { pt3dadd( 19.6434, -222.713, -99.4097, 0.59 ) }
    dend_55 { pt3dadd( 19.7021, -222.741, -99.3649, 0.59 ) }
    dend_55 { pt3dadd( 20.5162, -223.134, -98.8072, 0.52 ) }
    dend_55 { pt3dadd( 21.7079, -223.798, -97.9676, 0.37 ) }
    dend_55 { pt3dadd( 22.2139, -224.125, -97.6283, 0.81 ) }
    dend_55 { pt3dadd( 22.6214, -224.419, -97.4055, 0.96 ) }
    dend_55 { pt3dadd( 23.6554, -225.208, -96.9117, 0.37 ) }
    dend_55 { pt3dadd( 24.6215, -225.937, -96.6179, 0.37 ) }
    dend_55 { pt3dadd( 25.5651, -226.652, -96.519, 0.44 ) }
    dend_55 { pt3dadd( 26.1227, -227.073, -96.5734, 0.44 ) }
    dend_55 { pt3dadd( 26.8767, -227.645, -96.6605, 0.22 ) }
    dend_55 { pt3dadd( 27.4186, -228.034, -96.7294, 0.44 ) }
    dend_55 { pt3dadd( 29.4649, -229.369, -97.0139, 0.37 ) }
    dend_55 { pt3dadd( 30.2862, -229.86, -97.1285, 0.52 ) }
    dend_55 { pt3dadd( 31.2127, -230.376, -97.2547, 0.59 ) }
    dend_55 { pt3dadd( 32.2651, -230.92, -97.3405, 0.81 ) }
    dend_55 { pt3dadd( 33.3532, -231.456, -97.3535, 0.29 ) }
    dend_55 { pt3dadd( 34.3207, -231.896, -97.274, 0.52 ) }
    dend_55 { pt3dadd( 34.8368, -232.111, -97.1684, 0.81 ) }
    dend_55 { pt3dadd( 35.3753, -232.29, -97.0766, 1.11 ) }
    dend_55 { pt3dadd( 35.6087, -232.352, -97.0476, 1.11 ) }
    dend_55 { pt3dadd( 36.0776, -232.452, -97.016, 0.96 ) }
    dend_55 { pt3dadd( 36.9376, -232.573, -96.8728, 0.59 ) }
    dend_55 { pt3dadd( 38.3295, -232.657, -96.4135, 0.29 ) }
    dend_55 { pt3dadd( 39.0045, -232.694, -96.1274, 0.52 ) }
    dend_55 { pt3dadd( 39.5253, -232.724, -95.876, 0.66 ) }
    dend_55 { pt3dadd( 39.5934, -232.731, -95.8404, 0.66 ) }
    dend_55 { pt3dadd( 41.2765, -232.967, -94.8698, 0.52 ) }
    dend_55 { pt3dadd( 42.5422, -233.196, -94.0897, 0.74 ) }
    dend_55 { pt3dadd( 43.7829, -233.444, -93.3084, 0.22 ) }
    dend_55 { pt3dadd( 44.1242, -233.527, -93.1117, 0.74 ) }
    dend_55 { pt3dadd( 44.7483, -233.716, -92.7741, 0.81 ) }
    dend_55 { pt3dadd( 46.135, -234.234, -92.1065, 0.22 ) }
    dend_55 { pt3dadd( 46.5695, -234.445, -91.9489, 0.66 ) }
    dend_55 { pt3dadd( 46.9781, -234.675, -91.8197, 0.74 ) }
    dend_55 { pt3dadd( 47.9538, -235.31, -91.4927, 0.22 ) }
    dend_55 { pt3dadd( 48.7831, -235.924, -91.1778, 0.66 ) }
    dend_55 { pt3dadd( 49.0673, -236.158, -91.0651, 0.81 ) }
    dend_55 { pt3dadd( 49.5621, -236.637, -90.8677, 0.52 ) }
    dend_55 { pt3dadd( 49.6057, -236.681, -90.8498, 0.52 ) }
    dend_55 { pt3dadd( 50.2732, -237.385, -90.6017, 0.22 ) }
    dend_55 { pt3dadd( 51.151, -238.361, -90.3383, 0.74 ) }
    dend_55 { pt3dadd( 51.6393, -238.87, -90.3004, 0.81 ) }
    dend_55 { pt3dadd( 51.7475, -238.975, -90.3026, 0.81 ) }
    dend_55 { pt3dadd( 52.2933, -239.456, -90.3754, 0.59 ) }
    dend_55 { pt3dadd( 52.8474, -239.892, -90.5624, 0.29 ) }
    dend_55 { pt3dadd( 53.448, -240.346, -90.8695, 1.03 ) }
    dend_55 { pt3dadd( 54.3505, -241.095, -91.4548, 1.03 ) }
    dend_55 { pt3dadd( 54.5122, -241.249, -91.572, 1.25 ) }
    dend_55 { pt3dadd( 55.0765, -241.905, -92.0018, 0.66 ) }
    dend_55 { pt3dadd( 55.939, -243.109, -92.6838, 0.52 ) }
    dend_55 { pt3dadd( 56.4259, -243.921, -93.0514, 0.37 ) }
    dend_55 { pt3dadd( 56.7546, -244.603, -93.3005, 0.29 ) }
    dend_55 { pt3dadd( 56.9997, -245.307, -93.4642, 0.29 ) }
    dend_55 { pt3dadd( 57.3358, -246.555, -93.6602, 0.29 ) }
    dend_55 { pt3dadd( 57.4316, -246.993, -93.7175, 0.81 ) }
    dend_55 { pt3dadd( 57.5603, -247.601, -93.7788, 1.03 ) }
    dend_55 { pt3dadd( 57.5817, -247.673, -93.788, 1.03 ) }
    dend_55 { pt3dadd( 57.9789, -248.663, -93.947, 0.59 ) }
    dend_55 { pt3dadd( 58.4308, -249.586, -94.0597, 0.44 ) }
    dend_55 { pt3dadd( 58.9614, -250.622, -94.1401, 0.88 ) }
    dend_55 { pt3dadd( 59.1149, -250.916, -94.1519, 1.25 ) }
    dend_55 { pt3dadd( 59.4006, -251.432, -94.1241, 1.55 ) }
    dend_55 { pt3dadd( 59.7954, -252.082, -94.0301, 0.29 ) }
    dend_55 { pt3dadd( 60.4705, -253.085, -93.5898, 0.29 ) }
    dend_55 { pt3dadd( 61.0514, -253.921, -93.0483, 0.29 ) }
    dend_55 { pt3dadd( 61.0869, -253.974, -93.0096, 0.29 ) }
    dend_55 { pt3dadd( 61.6208, -254.799, -92.402, 1.47 ) }
    dend_55 { pt3dadd( 62.0685, -255.517, -91.8816, 1.77 ) }
    dend_55 { pt3dadd( 63.2417, -257.395, -90.5301, 0.37 ) }
    dend_55 { pt3dadd( 63.6463, -258.039, -90.0647, 0.22 ) }
    dend_55 { pt3dadd( 64.1814, -258.885, -89.43, 0.29 ) }
    dend_55 { pt3dadd( 64.417, -259.284, -89.1496, 0.52 ) }
    dend_55 { pt3dadd( 64.6988, -259.836, -88.8207, 0.66 ) }
    dend_55 { pt3dadd( 64.7254, -259.901, -88.7887, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -68.837, -20.6971, 155.783, 0.37 ) }
    dend_85 { pt3dadd( -70.2871, -22.4101, 170.899, 0.37 ) }
    dend_85 { pt3dadd( -73.7736, -24.8046, 185.622, 0.37 ) }
    dend_85 { pt3dadd( -74.344, -28.1663, 200.542, 0.37 ) }
    dend_85 { pt3dadd( -76.5646, -32.8148, 214.983, 0.37 ) }
    dend_85 { pt3dadd( -82.5696, -37.9095, 228.132, 0.37 ) }
    dend_85 { pt3dadd( -86.6058, -44.0509, 241.585, 0.37 ) }
    dend_85 { pt3dadd( -90.2846, -51.8597, 254.227, 0.37 ) }
    dend_85 { pt3dadd( -91.6495, -62.4456, 265.138, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -94.9612, -74.8423, 273.108, 0.37 ) }
    dend_85 { pt3dadd( -100.216, -87.5837, 278.95, 0.37 ) }
    dend_85 { pt3dadd( -104.16, -101.05, 284.124, 0.37 ) }
    dend_85 { pt3dadd( -107.998, -114.548, 289.306, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -68.837, -20.6971, 155.783, 0.29 ) }
    dend_84 { pt3dadd( -69.7693, -21.0358, 163.346, 0.37 ) }
    dend_84 { pt3dadd( -71.1784, -21.0909, 170.841, 0.37 ) }
    dend_84 { pt3dadd( -73.2098, -21.6005, 178.191, 0.37 ) }
    dend_84 { pt3dadd( -73.3953, -21.658, 185.798, 0.37 ) }
    dend_84 { pt3dadd( -72.859, -22.3559, 193.367, 0.37 ) }
    dend_84 { pt3dadd( -72.878, -23.8325, 200.867, 0.37 ) }
    dend_84 { pt3dadd( -74.111, -24.014, 208.391, 0.37 ) }
    dend_84 { pt3dadd( -76.495, -22.8598, 215.523, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -22.3851, 30.3899, 112.452, 0.59 ) }
    dend_82 { pt3dadd( -20.3342, 30.5644, 112.148, 0.59 ) }
    dend_82 { pt3dadd( -20.2424, 30.5706, 112.135, 0.59 ) }
    dend_82 { pt3dadd( -18.3818, 30.8235, 111.908, 0.29 ) }
    dend_82 { pt3dadd( -17.4132, 31.062, 111.792, 0.29 ) }
    dend_82 { pt3dadd( -17.3235, 31.0889, 111.782, 0.29 ) }
    dend_82 { pt3dadd( -15.4107, 31.8415, 111.54, 0.29 ) }
    dend_82 { pt3dadd( -15.3521, 31.8752, 111.533, 0.29 ) }
    dend_82 { pt3dadd( -13.7889, 32.9244, 111.313, 0.29 ) }
    dend_82 { pt3dadd( -12.1324, 34.2064, 110.98, 0.29 ) }
    dend_82 { pt3dadd( -12.0014, 34.314, 110.948, 0.29 ) }
    dend_82 { pt3dadd( -10.632, 35.4462, 110.537, 0.74 ) }
    dend_82 { pt3dadd( -9.4759, 36.3641, 110.16, 0.29 ) }
    dend_82 { pt3dadd( -9.13234, 36.585, 110.057, 0.29 ) }
    dend_82 { pt3dadd( -7.39767, 37.5842, 109.501, 0.29 ) }
    dend_82 { pt3dadd( -6.56352, 37.9958, 109.233, 0.29 ) }
    dend_82 { pt3dadd( -5.17039, 38.581, 108.796, 0.29 ) }
    dend_82 { pt3dadd( -3.38366, 39.1, 108.283, 0.29 ) }
    dend_82 { pt3dadd( -1.8123, 39.4267, 107.86, 0.88 ) }
    dend_82 { pt3dadd( 7.8426, 45.2431, 107.81, 0.88 ) }
    dend_82 { pt3dadd( 17.597, 50.4063, 109.968, 0.88 ) }
    dend_82 { pt3dadd( 27.0797, 56.288, 111.238, 0.88 ) }
    dend_82 { pt3dadd( 36.7083, 62.1296, 111.419, 0.88 ) }
    dend_82 { pt3dadd( 46.8367, 67.1379, 111.69, 0.88 ) }
    dend_82 { pt3dadd( 56.4813, 72.8566, 112.595, 0.88 ) }
    dend_82 { pt3dadd( 66.6289, 77.8123, 113.013, 0.88 ) }
    dend_82 { pt3dadd( 77.3101, 81.6868, 112.33, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -22.3851, 30.3899, 112.452, 0.59 ) }
    dend_75 { pt3dadd( -22.1531, 31.369, 113.483, 0.59 ) }
    dend_75 { pt3dadd( -21.8849, 32.2275, 114.393, 0.59 ) }
    dend_75 { pt3dadd( -21.5439, 33.0466, 115.284, 0.37 ) }
    dend_75 { pt3dadd( -21.0652, 34.0859, 116.41, 0.29 ) }
    dend_75 { pt3dadd( -20.5206, 35.0396, 117.458, 0.29 ) }
    dend_75 { pt3dadd( -20.4792, 35.1054, 117.531, 0.29 ) }
    dend_75 { pt3dadd( -19.8788, 35.9122, 118.434, 0.29 ) }
    dend_75 { pt3dadd( -19.3198, 36.6051, 119.238, 0.66 ) }
    dend_75 { pt3dadd( -18.9691, 37.0584, 119.721, 0.81 ) }
    dend_75 { pt3dadd( -18.2724, 38.1473, 120.727, 0.29 ) }
    dend_75 { pt3dadd( -18.2295, 38.2193, 120.792, 0.29 ) }
    dend_75 { pt3dadd( -17.7218, 39.2355, 121.618, 0.29 ) }
    dend_75 { pt3dadd( -17.6935, 39.3079, 121.669, 0.29 ) }
    dend_75 { pt3dadd( -17.3117, 40.5473, 122.4, 0.52 ) }
    dend_75 { pt3dadd( -17.1067, 41.435, 122.878, 0.74 ) }
    dend_75 { pt3dadd( -17.0953, 41.5278, 122.927, 0.74 ) }
    dend_75 { pt3dadd( -16.9705, 42.3513, 123.421, 0.74 ) }
    dend_75 { pt3dadd( -16.9571, 42.4288, 123.471, 0.74 ) }
    dend_75 { pt3dadd( -16.7863, 43.5209, 124.26, 0.29 ) }
    dend_75 { pt3dadd( -16.6263, 44.6328, 125.141, 0.29 ) }
    dend_75 { pt3dadd( -16.4391, 46.1125, 126.379, 0.29 ) }
    dend_75 { pt3dadd( -16.271, 47.4009, 127.415, 0.29 ) }
    dend_75 { pt3dadd( -16.2445, 47.5484, 127.527, 0.29 ) }
    dend_75 { pt3dadd( -15.9337, 48.7965, 128.323, 0.29 ) }
    dend_75 { pt3dadd( -15.9108, 48.875, 128.367, 0.29 ) }
    dend_75 { pt3dadd( -15.4435, 50.1803, 128.942, 0.29 ) }
    dend_75 { pt3dadd( -14.6591, 52.1851, 129.659, 0.29 ) }
    dend_75 { pt3dadd( -13.6492, 54.8632, 130.507, 0.29 ) }
    dend_75 { pt3dadd( -12.7116, 57.317, 131.249, 0.29 ) }
    dend_75 { pt3dadd( -12.6472, 57.4798, 131.302, 0.29 ) }
    dend_75 { pt3dadd( -11.6985, 59.8848, 132.14, 0.29 ) }
    dend_75 { pt3dadd( -11.6313, 60.0567, 132.204, 0.29 ) }
    dend_75 { pt3dadd( -10.6027, 62.8209, 133.333, 0.29 ) }
    dend_75 { pt3dadd( -10.5715, 62.9127, 133.375, 0.29 ) }
    dend_75 { pt3dadd( -9.82277, 65.3436, 134.641, 0.29 ) }
    dend_75 { pt3dadd( -9.80002, 65.4322, 134.693, 0.29 ) }
    dend_75 { pt3dadd( -9.50049, 67.2411, 135.892, 0.29 ) }
    dend_75 { pt3dadd( -9.44624, 67.7125, 136.201, 0.74 ) }
    dend_75 { pt3dadd( -9.43891, 67.8008, 136.259, 0.74 ) }
    dend_75 { pt3dadd( -9.42056, 68.4041, 136.638, 0.59 ) }
    dend_75 { pt3dadd( -9.58936, 69.9905, 137.535, 0.29 ) }
    dend_75 { pt3dadd( -9.75961, 70.9438, 138.116, 0.88 ) }
    dend_75 { pt3dadd( -9.9809, 71.5193, 138.541, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 8.76261, -245.314, -110.458, 0.52 ) }
    dend_60 { pt3dadd( 8.05795, -246.223, -110.277, 0.52 ) }
    dend_60 { pt3dadd( 7.52328, -246.955, -110.143, 0.37 ) }
    dend_60 { pt3dadd( 7.03609, -247.669, -109.985, 0.29 ) }
    dend_60 { pt3dadd( 6.65187, -248.212, -109.852, 0.66 ) }
    dend_60 { pt3dadd( 6.31225, -248.684, -109.733, 0.66 ) }
    dend_60 { pt3dadd( 6.2646, -248.749, -109.716, 0.66 ) }
    dend_60 { pt3dadd( 5.95018, -249.192, -109.605, 0.59 ) }
    dend_60 { pt3dadd( 5.37442, -249.964, -109.423, 0.29 ) }
    dend_60 { pt3dadd( 4.78458, -250.776, -109.246, 0.29 ) }
    dend_60 { pt3dadd( 4.54994, -251.118, -109.179, 0.66 ) }
    dend_60 { pt3dadd( 4.18927, -251.685, -109.082, 0.96 ) }
    dend_60 { pt3dadd( 3.92559, -252.166, -109.011, 1.18 ) }
    dend_60 { pt3dadd( 3.43448, -253.18, -108.892, 0.29 ) }
    dend_60 { pt3dadd( 3.14901, -253.85, -108.839, 0.29 ) }
    dend_60 { pt3dadd( 2.99053, -254.249, -108.806, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( 2.92904, -254.386, -108.774, 0.52 ) }
    dend_60 { pt3dadd( 2.65073, -254.882, -108.573, 0.22 ) }
    dend_60 { pt3dadd( 2.35495, -255.279, -108.335, 0.44 ) }
    dend_60 { pt3dadd( 2.05683, -255.602, -108.046, 0.66 ) }
    dend_60 { pt3dadd( 1.64211, -255.994, -107.66, 0.66 ) }
    dend_60 { pt3dadd( 0.613519, -256.907, -106.76, 0.29 ) }
    dend_60 { pt3dadd( 0.316651, -257.175, -106.512, 0.96 ) }
    dend_60 { pt3dadd( 0.0160313, -257.469, -106.266, 1.25 ) }
    dend_60 { pt3dadd( -0.932274, -258.56, -105.469, 0.52 ) }
    dend_60 { pt3dadd( -1.46945, -259.29, -105.029, 0.52 ) }
    dend_60 { pt3dadd( -1.88402, -259.922, -104.725, 0.29 ) }
    dend_60 { pt3dadd( -2.24634, -260.485, -104.533, 0.37 ) }
    dend_60 { pt3dadd( -2.6456, -261.07, -104.359, 0.44 ) }
    dend_60 { pt3dadd( -2.96438, -261.454, -104.264, 0.44 ) }
    dend_60 { pt3dadd( -3.52206, -261.993, -104.182, 0.22 ) }
    dend_60 { pt3dadd( -3.87712, -262.255, -104.136, 0.37 ) }
    dend_60 { pt3dadd( -4.50771, -262.625, -104.006, 0.59 ) }
    dend_60 { pt3dadd( -5.36493, -263.049, -103.792, 1.18 ) }
    dend_60 { pt3dadd( -6.17976, -263.419, -103.524, 0.74 ) }
    dend_60 { pt3dadd( -6.25192, -263.451, -103.495, 0.74 ) }
    dend_60 { pt3dadd( -7.39791, -263.992, -102.957, 0.37 ) }
    dend_60 { pt3dadd( -8.46827, -264.576, -102.364, 0.29 ) }
    dend_60 { pt3dadd( -8.72057, -264.725, -102.183, 0.59 ) }
    dend_60 { pt3dadd( -9.3028, -265.052, -101.625, 0.74 ) }
    dend_60 { pt3dadd( -9.3644, -265.083, -101.548, 0.74 ) }
    dend_60 { pt3dadd( -9.66046, -265.213, -101.055, 0.74 ) }
    dend_60 { pt3dadd( -9.68854, -265.22, -101.001, 0.74 ) }
    dend_60 { pt3dadd( -10.2176, -265.3, -99.9676, 0.29 ) }
    dend_60 { pt3dadd( -10.8322, -265.354, -98.7544, 0.59 ) }
    dend_60 { pt3dadd( -11.3481, -265.372, -97.7144, 0.96 ) }
    dend_60 { pt3dadd( -12.2342, -265.387, -95.8837, 0.59 ) }
    dend_60 { pt3dadd( -12.5924, -265.382, -95.1154, 0.29 ) }
    dend_60 { pt3dadd( -12.6236, -265.383, -95.0476, 0.29 ) }
    dend_60 { pt3dadd( -13.1824, -265.419, -93.7749, 0.88 ) }
    dend_60 { pt3dadd( -13.662, -265.449, -92.5988, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.76261, -245.314, -110.458, 0.52 ) }
    dend_57 { pt3dadd( 8.83109, -246.205, -111.314, 0.52 ) }
    dend_57 { pt3dadd( 8.83329, -246.253, -111.354, 0.52 ) }
    dend_57 { pt3dadd( 8.84063, -246.972, -111.913, 0.66 ) }
    dend_57 { pt3dadd( 8.81102, -248.549, -113.025, 0.44 ) }
    dend_57 { pt3dadd( 8.74606, -249.721, -113.824, 0.37 ) }
    dend_57 { pt3dadd( 8.68561, -250.364, -114.231, 0.66 ) }
    dend_57 { pt3dadd( 8.57673, -251.086, -114.622, 0.88 ) }
    dend_57 { pt3dadd( 8.41511, -251.9, -115.038, 0.88 ) }
    dend_57 { pt3dadd( 8.23808, -252.627, -115.376, 0.88 ) }
    dend_57 { pt3dadd( 7.99791, -253.621, -115.808, 0.59 ) }
    dend_57 { pt3dadd( 7.81956, -254.532, -116.228, 0.37 ) }
    dend_57 { pt3dadd( 7.68524, -255.488, -116.72, 0.37 ) }
    dend_57 { pt3dadd( 7.62306, -256.52, -117.308, 0.74 ) }
    dend_57 { pt3dadd( 7.63042, -256.964, -117.566, 1.11 ) }
    dend_57 { pt3dadd( 7.73197, -258.529, -118.557, 0.74 ) }
    dend_57 { pt3dadd( 7.80144, -259.27, -119.043, 0.44 ) }
    dend_57 { pt3dadd( 7.80569, -259.322, -119.077, 0.44 ) }
    dend_57 { pt3dadd( 7.87309, -260.424, -119.772, 1.03 ) }
    dend_57 { pt3dadd( 7.8813, -261.012, -120.088, 1.33 ) }
    dend_57 { pt3dadd( 7.78543, -262.325, -120.669, 0.66 ) }
    dend_57 { pt3dadd( 7.6022, -263.508, -121.041, 0.66 ) }
    dend_57 { pt3dadd( 7.37263, -264.677, -121.348, 0.88 ) }
    dend_57 { pt3dadd( 7.36182, -264.739, -121.36, 0.88 ) }
    dend_57 { pt3dadd( 7.21153, -265.654, -121.494, 1.11 ) }
    dend_57 { pt3dadd( 7.02015, -267.029, -121.643, 1.03 ) }
    dend_57 { pt3dadd( 6.90833, -268.057, -121.686, 0.52 ) }
    dend_57 { pt3dadd( 6.90127, -268.119, -121.693, 0.52 ) }
    dend_57 { pt3dadd( 6.75658, -269.166, -121.925, 0.88 ) }
    dend_57 { pt3dadd( 6.64652, -269.836, -122.116, 0.96 ) }
    dend_57 { pt3dadd( 6.52738, -270.427, -122.365, 0.96 ) }
    dend_57 { pt3dadd( 6.36436, -271.028, -122.719, 0.66 ) }
    dend_57 { pt3dadd( 5.76051, -272.702, -123.845, 0.44 ) }
    dend_57 { pt3dadd( 5.5164, -273.311, -124.272, 0.96 ) }
    dend_57 { pt3dadd( 5.25811, -273.863, -124.686, 1.25 ) }
    dend_57 { pt3dadd( 4.71066, -274.99, -125.558, 1.11 ) }
    dend_57 { pt3dadd( 4.22042, -275.965, -126.382, 0.74 ) }
    dend_57 { pt3dadd( 3.94746, -276.469, -126.841, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -9.9809, 71.5193, 138.541, 0.29 ) }
    dend_81 { pt3dadd( -11.0637, 71.7529, 139.685, 0.29 ) }
    dend_81 { pt3dadd( -11.1281, 71.7625, 139.754, 0.29 ) }
    dend_81 { pt3dadd( -12.0279, 71.9542, 140.505, 0.29 ) }
    dend_81 { pt3dadd( -12.1017, 71.9713, 140.562, 0.29 ) }
    dend_81 { pt3dadd( -12.9338, 72.2201, 141.224, 0.66 ) }
    dend_81 { pt3dadd( -13.5591, 72.4359, 141.738, 0.81 ) }
    dend_81 { pt3dadd( -13.6125, 72.4554, 141.783, 0.81 ) }
    dend_81 { pt3dadd( -15.1276, 73.0508, 143.237, 0.29 ) }
    dend_81 { pt3dadd( -15.2595, 73.1068, 143.376, 0.29 ) }
    dend_81 { pt3dadd( -16.256, 73.5736, 144.543, 0.29 ) }
    dend_81 { pt3dadd( -17.3349, 74.1502, 145.953, 0.29 ) }
    dend_81 { pt3dadd( -17.3786, 74.1758, 146.019, 0.29 ) }
    dend_81 { pt3dadd( -18.1986, 74.6689, 147.45, 0.44 ) }
    dend_81 { pt3dadd( -18.2305, 74.6916, 147.523, 0.44 ) }
    dend_81 { pt3dadd( -18.4785, 74.8899, 148.112, 0.44 ) }
    dend_81 { pt3dadd( -18.5062, 74.9156, 148.183, 0.44 ) }
    dend_81 { pt3dadd( -18.9818, 75.468, 149.455, 0.29 ) }
    dend_81 { pt3dadd( -19.0469, 75.5461, 149.597, 0.29 ) }
    dend_81 { pt3dadd( -19.5325, 76.1496, 150.473, 0.29 ) }
    dend_81 { pt3dadd( -19.7722, 76.461, 150.906, 0.59 ) }
    dend_81 { pt3dadd( -19.8424, 76.5573, 151.033, 0.59 ) }
    dend_81 { pt3dadd( -20.0566, 76.8413, 151.415, 0.59 ) }
    dend_81 { pt3dadd( -20.5905, 77.5281, 152.346, 0.37 ) }
    dend_81 { pt3dadd( -20.6707, 77.6228, 152.483, 0.37 ) }
    dend_81 { pt3dadd( -21.1405, 78.1535, 153.174, 0.37 ) }
    dend_81 { pt3dadd( -21.1808, 78.1994, 153.229, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -21.7604, 78.8133, 153.963, 0.37 ) }
    dend_81 { pt3dadd( -21.8554, 78.9087, 154.077, 0.37 ) }
    dend_81 { pt3dadd( -22.4834, 79.4722, 154.831, 0.37 ) }
    dend_81 { pt3dadd( -23.3155, 80.139, 155.839, 0.22 ) }
    dend_81 { pt3dadd( -23.4215, 80.2105, 155.973, 0.22 ) }
    dend_81 { pt3dadd( -23.9944, 80.5389, 156.736, 0.22 ) }
    dend_81 { pt3dadd( -24.04, 80.5595, 156.802, 0.22 ) }
    dend_81 { pt3dadd( -24.5127, 80.5929, 157.789, 0.81 ) }
    dend_81 { pt3dadd( -24.6448, 80.5515, 158.149, 0.81 ) }
    dend_81 { pt3dadd( -24.9927, 80.3489, 159.159, 0.22 ) }
    dend_81 { pt3dadd( -25.0217, 80.3284, 159.235, 0.22 ) }
    dend_81 { pt3dadd( -25.3336, 80.0384, 160.081, 0.22 ) }
    dend_81 { pt3dadd( -26.2519, 79.1798, 162.4, 0.22 ) }
    dend_81 { pt3dadd( -26.3167, 79.1204, 162.555, 0.22 ) }
    dend_81 { pt3dadd( -26.7875, 78.6985, 163.653, 0.22 ) }
    dend_81 { pt3dadd( -27.2487, 78.2962, 164.691, 0.22 ) }
    dend_81 { pt3dadd( -27.9723, 77.7182, 166.257, 0.22 ) }
    dend_81 { pt3dadd( -28.5115, 77.3414, 167.364, 0.22 ) }
    dend_81 { pt3dadd( -28.5558, 77.3215, 167.445, 0.22 ) }
    dend_81 { pt3dadd( -29.2058, 77.2093, 168.699, 0.52 ) }
    dend_81 { pt3dadd( -29.3872, 77.2726, 169.084, 0.81 ) }
    dend_81 { pt3dadd( -29.4541, 77.3343, 169.232, 0.81 ) }
    dend_81 { pt3dadd( -29.6252, 77.5496, 169.569, 0.81 ) }
    dend_81 { pt3dadd( -29.6677, 77.6017, 169.633, 0.81 ) }
    dend_81 { pt3dadd( -30.402, 78.3961, 170.512, 0.37 ) }
    dend_81 { pt3dadd( -30.8478, 78.864, 170.961, 0.59 ) }
    dend_81 { pt3dadd( -30.8961, 78.9131, 171.006, 0.59 ) }
    dend_81 { pt3dadd( -31.5019, 79.5494, 171.553, 0.44 ) }
    dend_81 { pt3dadd( -32.6461, 80.6617, 172.33, 0.29 ) }
    dend_81 { pt3dadd( -32.7654, 80.7726, 172.396, 0.29 ) }
    dend_81 { pt3dadd( -33.5729, 81.4034, 172.644, 0.29 ) }
    dend_81 { pt3dadd( -33.6302, 81.445, 172.657, 0.29 ) }
    dend_81 { pt3dadd( -34.5239, 82.058, 172.825, 0.29 ) }
    dend_81 { pt3dadd( -36.2101, 83.1189, 172.901, 0.29 ) }
    dend_81 { pt3dadd( -36.2695, 83.1532, 172.901, 0.29 ) }
    dend_81 { pt3dadd( -38.4297, 84.242, 172.847, 0.29 ) }
    dend_81 { pt3dadd( -38.4927, 84.2698, 172.845, 0.29 ) }
    dend_81 { pt3dadd( -39.1286, 84.5319, 172.856, 0.66 ) }
    dend_81 { pt3dadd( -42.0189, 85.5935, 172.992, 0.37 ) }
    dend_81 { pt3dadd( -42.1949, 85.6523, 173.013, 0.37 ) }
    dend_81 { pt3dadd( -43.1499, 85.9354, 173.188, 0.29 ) }
    dend_81 { pt3dadd( -44.0176, 86.1609, 173.469, 0.15 ) }
    dend_81 { pt3dadd( -44.5264, 86.2823, 173.673, 0.74 ) }
    dend_81 { pt3dadd( -44.7393, 86.3216, 173.794, 0.74 ) }
    dend_81 { pt3dadd( -45.978, 86.4604, 174.796, 0.37 ) }
    dend_81 { pt3dadd( -46.5546, 86.553, 175.285, 0.29 ) }
    dend_81 { pt3dadd( -47.2802, 86.7182, 175.99, 0.29 ) }
    dend_81 { pt3dadd( -47.3581, 86.7381, 176.076, 0.29 ) }
    dend_81 { pt3dadd( -48.2522, 86.9783, 177.242, 0.29 ) }
    dend_81 { pt3dadd( -48.346, 87.0089, 177.39, 0.29 ) }
    dend_81 { pt3dadd( -48.7978, 87.1917, 178.272, 0.29 ) }
    dend_81 { pt3dadd( -49.2331, 87.3891, 179.128, 0.29 ) }
    dend_81 { pt3dadd( -49.2748, 87.4057, 179.198, 0.29 ) }
    dend_81 { pt3dadd( -49.9743, 87.6713, 180.237, 0.29 ) }
    dend_81 { pt3dadd( -50.729, 87.9385, 181.161, 0.29 ) }
    dend_81 { pt3dadd( -50.8858, 87.9867, 181.33, 0.29 ) }
    dend_81 { pt3dadd( -51.6977, 88.2594, 182.045, 0.29 ) }
    dend_81 { pt3dadd( -52.6436, 88.6531, 182.795, 0.52 ) }
    dend_81 { pt3dadd( -53.1253, 88.8984, 183.17, 0.66 ) }
    dend_81 { pt3dadd( -54.2414, 89.569, 184.015, 0.29 ) }
    dend_81 { pt3dadd( -55.4819, 90.3952, 184.951, 1.11 ) }
    dend_81 { pt3dadd( -56.7806, 91.2869, 185.852, 0.29 ) }
    dend_81 { pt3dadd( -57.4933, 91.7983, 186.318, 0.29 ) }
    dend_81 { pt3dadd( -58.0996, 92.2505, 186.723, 0.74 ) }
    dend_81 { pt3dadd( -58.2325, 92.3493, 186.808, 0.74 ) }
    dend_81 { pt3dadd( -58.6107, 92.6323, 187.039, 0.74 ) }
    dend_81 { pt3dadd( -60.6259, 94.0069, 188.163, 0.29 ) }
    dend_81 { pt3dadd( -60.7206, 94.0631, 188.217, 0.29 ) }
    dend_81 { pt3dadd( -61.4598, 94.4708, 188.623, 0.29 ) }
    dend_81 { pt3dadd( -61.5141, 94.5016, 188.654, 0.29 ) }
    dend_81 { pt3dadd( -62.4249, 95.0405, 189.184, 0.59 ) }
    dend_81 { pt3dadd( -64.0699, 96.1266, 190.25, 0.29 ) }
    dend_81 { pt3dadd( -64.1293, 96.1772, 190.301, 0.29 ) }
    dend_81 { pt3dadd( -64.5341, 96.5969, 190.692, 0.29 ) }
    dend_81 { pt3dadd( -64.7264, 96.8858, 190.919, 0.59 ) }
    dend_81 { pt3dadd( -64.7604, 96.9542, 190.97, 0.59 ) }
    dend_81 { pt3dadd( -64.9794, 97.5589, 191.395, 0.59 ) }
    dend_81 { pt3dadd( -65.1531, 98.194, 191.835, 0.29 ) }
    dend_81 { pt3dadd( -65.3329, 98.7046, 192.214, 0.29 ) }
    dend_81 { pt3dadd( -65.9732, 100.162, 193.383, 0.29 ) }
    dend_81 { pt3dadd( -66.0001, 100.21, 193.427, 0.29 ) }
    dend_81 { pt3dadd( -66.4066, 100.821, 194.054, 0.29 ) }
    dend_81 { pt3dadd( -66.6053, 101.06, 194.339, 0.29 ) }
    dend_81 { pt3dadd( -67.1943, 101.597, 195.131, 0.52 ) }
    dend_81 { pt3dadd( -67.4573, 101.78, 195.485, 0.59 ) }
    dend_81 { pt3dadd( -68.2182, 102.185, 196.552, 0.22 ) }
    dend_81 { pt3dadd( -68.4333, 102.301, 196.833, 0.22 ) }
    dend_81 { pt3dadd( -68.8735, 102.584, 197.402, 0.22 ) }
    dend_81 { pt3dadd( -69.2854, 102.916, 197.939, 0.81 ) }
    dend_81 { pt3dadd( -69.569, 103.18, 198.305, 1.03 ) }
    dend_81 { pt3dadd( -70.0371, 103.624, 198.886, 0.52 ) }
    dend_81 { pt3dadd( -70.9172, 104.44, 199.934, 0.29 ) }
    dend_81 { pt3dadd( -71.9405, 105.354, 201.126, 0.22 ) }
    dend_81 { pt3dadd( -72.9237, 106.285, 202.267, 0.22 ) }
    dend_81 { pt3dadd( -73.0397, 106.403, 202.403, 0.22 ) }
    dend_81 { pt3dadd( -73.5214, 106.911, 202.972, 0.74 ) }
    dend_81 { pt3dadd( -73.7792, 107.18, 203.285, 0.74 ) }
    dend_81 { pt3dadd( -74.0696, 107.467, 203.702, 0.74 ) }
    dend_81 { pt3dadd( -82.1588, 111.913, 210.374, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -9.9809, 71.5193, 138.541, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -9.70725, 72.5531, 138.681, 0.29 ) }
    dend_76 { pt3dadd( -9.26083, 74.3918, 138.854, 0.29 ) }
    dend_76 { pt3dadd( -9.24251, 74.4693, 138.861, 0.29 ) }
    dend_76 { pt3dadd( -8.84628, 76.2059, 139.013, 0.29 ) }
    dend_76 { pt3dadd( -8.82771, 76.2927, 139.023, 0.29 ) }
    dend_76 { pt3dadd( -8.31558, 78.8663, 139.366, 0.52 ) }
    dend_76 { pt3dadd( -8.05594, 80.3046, 139.611, 0.52 ) }
    dend_76 { pt3dadd( -7.90148, 81.3394, 139.82, 0.52 ) }
    dend_76 { pt3dadd( -7.87008, 81.6313, 139.886, 0.52 ) }
    dend_76 { pt3dadd( -7.71502, 82.8564, 140.292, 0.52 ) }
    dend_76 { pt3dadd( -7.58663, 83.7585, 140.707, 0.81 ) }
    dend_76 { pt3dadd( -7.56359, 83.9178, 140.82, 0.81 ) }
    dend_76 { pt3dadd( -7.4499, 84.5488, 141.401, 0.66 ) }
    dend_76 { pt3dadd( -7.35868, 85.1361, 142.023, 0.37 ) }
    dend_76 { pt3dadd( -7.09973, 86.8758, 144.002, 0.37 ) }
    dend_76 { pt3dadd( -7.09451, 86.9372, 144.072, 0.37 ) }
    dend_76 { pt3dadd( -7.08906, 87.5608, 144.761, 0.52 ) }
    dend_76 { pt3dadd( -7.09712, 87.6544, 144.853, 0.52 ) }
    dend_76 { pt3dadd( -7.28351, 88.8629, 145.929, 0.44 ) }
    dend_76 { pt3dadd( -7.31488, 89.0064, 146.043, 0.44 ) }
    dend_76 { pt3dadd( -7.66173, 90.0644, 146.766, 0.44 ) }
    dend_76 { pt3dadd( -7.75731, 90.3897, 146.979, 0.44 ) }
    dend_76 { pt3dadd( -8.1481, 92.0537, 147.994, 0.44 ) }
    dend_76 { pt3dadd( -8.16328, 92.1325, 148.041, 0.44 ) }
    dend_76 { pt3dadd( -8.27999, 92.9484, 148.498, 0.52 ) }
    dend_76 { pt3dadd( -8.29999, 93.1235, 148.585, 0.52 ) }
    dend_76 { pt3dadd( -8.39306, 94.211, 149.091, 0.37 ) }
    dend_76 { pt3dadd( -8.47556, 95.4885, 149.625, 0.74 ) }
    dend_76 { pt3dadd( -8.47941, 95.5738, 149.659, 0.74 ) }
    dend_76 { pt3dadd( -8.50267, 96.1659, 149.895, 0.74 ) }
    dend_76 { pt3dadd( -8.51302, 98.9491, 151.058, 0.52 ) }
    dend_76 { pt3dadd( -8.51113, 99.0336, 151.095, 0.52 ) }
    dend_76 { pt3dadd( -8.3858, 101.304, 152.108, 0.52 ) }
    dend_76 { pt3dadd( -8.17452, 103.977, 153.345, 0.52 ) }
    dend_76 { pt3dadd( -8.16388, 104.084, 153.396, 0.52 ) }
    dend_76 { pt3dadd( -7.95274, 105.792, 154.246, 0.88 ) }
    dend_76 { pt3dadd( -7.89533, 106.157, 154.439, 0.88 ) }
    dend_76 { pt3dadd( -7.56445, 108.206, 155.509, 0.52 ) }
    dend_76 { pt3dadd( -7.34582, 109.511, 156.177, 0.52 ) }
    dend_76 { pt3dadd( -7.29406, 109.75, 156.304, 0.52 ) }
    dend_76 { pt3dadd( -7.06923, 110.959, 156.914, 0.52 ) }
    dend_76 { pt3dadd( -7.02716, 111.298, 157.08, 0.52 ) }
    dend_76 { pt3dadd( -6.9557, 112.135, 157.52, 0.59 ) }
    dend_76 { pt3dadd( -6.90083, 113.105, 158.04, 0.37 ) }
    dend_76 { pt3dadd( -6.83699, 114.663, 158.883, 0.44 ) }
    dend_76 { pt3dadd( -6.77892, 116.358, 159.781, 0.22 ) }
    dend_76 { pt3dadd( -6.74295, 117.886, 160.583, 0.22 ) }
    dend_76 { pt3dadd( -6.7181, 118.534, 160.927, 0.37 ) }
    dend_76 { pt3dadd( -6.65507, 120.037, 161.734, 0.22 ) }
    dend_76 { pt3dadd( -6.6476, 120.189, 161.814, 0.22 ) }
    dend_76 { pt3dadd( -6.51794, 121.443, 162.513, 0.22 ) }
    dend_76 { pt3dadd( -6.5003, 121.52, 162.561, 0.22 ) }
    dend_76 { pt3dadd( -6.13583, 122.763, 163.316, 0.22 ) }
    dend_76 { pt3dadd( -6.11527, 122.83, 163.355, 0.22 ) }
    dend_76 { pt3dadd( -5.60393, 124.455, 164.324, 0.22 ) }
    dend_76 { pt3dadd( -5.0323, 126.289, 165.384, 0.66 ) }
    dend_76 { pt3dadd( -4.81967, 126.995, 165.782, 0.96 ) }
    dend_76 { pt3dadd( -4.41187, 128.291, 166.519, 0.22 ) }
    dend_76 { pt3dadd( -4.06419, 129.406, 167.152, 0.22 ) }
    dend_76 { pt3dadd( -4.03602, 129.493, 167.203, 0.22 ) }
    dend_76 { pt3dadd( -3.82313, 130.134, 167.586, 0.59 ) }
    dend_76 { pt3dadd( -3.69853, 130.701, 167.904, 0.88 ) }
    dend_76 { pt3dadd( -3.47773, 132.046, 168.656, 0.44 ) }
    dend_76 { pt3dadd( -3.38759, 132.857, 169.102, 0.29 ) }
    dend_76 { pt3dadd( -3.36866, 133.111, 169.231, 0.29 ) }
    dend_76 { pt3dadd( -3.33835, 133.717, 169.509, 0.29 ) }
    dend_76 { pt3dadd( -3.33156, 135.294, 170.048, 0.74 ) }
    dend_76 { pt3dadd( -3.35583, 136.071, 170.239, 0.29 ) }
    dend_76 { pt3dadd( -3.40971, 136.886, 170.392, 0.44 ) }
    dend_76 { pt3dadd( -3.44482, 137.546, 170.509, 0.59 ) }
    dend_76 { pt3dadd( -3.44771, 137.636, 170.527, 0.59 ) }
    dend_76 { pt3dadd( -3.45894, 139.588, 170.94, 0.22 ) }
    dend_76 { pt3dadd( -3.45191, 139.874, 171.013, 0.22 ) }
    dend_76 { pt3dadd( -3.33276, 141.455, 171.528, 0.22 ) }
    dend_76 { pt3dadd( -3.32095, 141.538, 171.559, 0.22 ) }
    dend_76 { pt3dadd( -3.12649, 142.449, 171.943, 0.44 ) }
    dend_76 { pt3dadd( -3.10023, 142.541, 171.986, 0.44 ) }
    dend_76 { pt3dadd( -2.91315, 143.002, 172.24, 0.44 ) }
    dend_76 { pt3dadd( -2.20203, 144.492, 173.049, 0.29 ) }
    dend_76 { pt3dadd( -1.87328, 145.03, 173.34, 0.44 ) }
    dend_76 { pt3dadd( -1.77476, 145.18, 173.423, 0.44 ) }
    dend_76 { pt3dadd( -1.26316, 145.853, 173.802, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 3.94746, -276.469, -126.841, 0.29 ) }
    dend_59 { pt3dadd( 3.27392, -276.629, -126.663, 0.29 ) }
    dend_59 { pt3dadd( 2.46692, -276.94, -126.48, 0.29 ) }
    dend_59 { pt3dadd( 2.3204, -277.006, -126.448, 0.59 ) }
    dend_59 { pt3dadd( 1.79917, -277.252, -126.338, 0.66 ) }
    dend_59 { pt3dadd( 1.69399, -277.299, -126.326, 0.66 ) }
    dend_59 { pt3dadd( 1.14533, -277.531, -126.284, 0.66 ) }
    dend_59 { pt3dadd( 0.180723, -277.975, -126.239, 0.22 ) }
    dend_59 { pt3dadd( -0.214676, -278.168, -126.224, 0.66 ) }
    dend_59 { pt3dadd( -0.679381, -278.395, -126.212, 0.66 ) }
    dend_59 { pt3dadd( -1.92515, -278.996, -126.195, 0.22 ) }
    dend_59 { pt3dadd( -2.64972, -279.335, -126.192, 0.22 ) }
    dend_59 { pt3dadd( -3.66466, -279.792, -126.201, 0.22 ) }
    dend_59 { pt3dadd( -4.37557, -280.082, -126.209, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.94746, -276.469, -126.841, 0.29 ) }
    dend_58 { pt3dadd( 4.04921, -277.875, -127.251, 0.29 ) }
    dend_58 { pt3dadd( 4.16057, -278.734, -127.55, 0.29 ) }
    dend_58 { pt3dadd( 4.19681, -279.159, -127.695, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( 4.21623, -279.535, -127.84, 0.88 ) }
    dend_58 { pt3dadd( 4.21905, -279.627, -127.878, 0.88 ) }
    dend_58 { pt3dadd( 4.215, -280.281, -128.132, 0.88 ) }
    dend_58 { pt3dadd( 4.23662, -281.422, -128.505, 0.22 ) }
    dend_58 { pt3dadd( 4.23443, -282.072, -128.723, 0.22 ) }
    dend_58 { pt3dadd( 4.22047, -282.82, -128.997, 0.88 ) }
    dend_58 { pt3dadd( 4.22216, -282.881, -129.019, 0.88 ) }
    dend_58 { pt3dadd( 4.27996, -283.66, -129.29, 0.74 ) }
    dend_58 { pt3dadd( 4.44669, -284.623, -129.595, 0.37 ) }
    dend_58 { pt3dadd( 4.46972, -284.682, -129.61, 0.37 ) }
    dend_58 { pt3dadd( 5.24043, -285.938, -129.792, 0.29 ) }
    dend_58 { pt3dadd( 5.68388, -286.517, -129.825, 0.59 ) }
    dend_58 { pt3dadd( 5.82023, -286.673, -129.828, 0.59 ) }
    dend_58 { pt3dadd( 6.50783, -287.369, -129.823, 0.88 ) }
    dend_58 { pt3dadd( 7.55332, -288.328, -129.629, 0.74 ) }
    dend_58 { pt3dadd( 8.7992, -289.4, -129.265, 0.29 ) }
    dend_58 { pt3dadd( 9.46662, -289.945, -129.022, 0.74 ) }
    dend_58 { pt3dadd( 9.51582, -289.986, -129.003, 0.74 ) }
    dend_58 { pt3dadd( 9.91786, -290.315, -128.825, 0.74 ) }
    dend_58 { pt3dadd( 11.731, -291.738, -127.851, 0.44 ) }
    dend_58 { pt3dadd( 12.3209, -292.19, -127.449, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -1.26316, 145.853, 173.802, 0.29 ) }
    dend_78 { pt3dadd( -0.594707, 145.541, 173.076, 0.29 ) }
    dend_78 { pt3dadd( -0.522747, 145.502, 172.989, 0.29 ) }
    dend_78 { pt3dadd( -0.305797, 145.381, 172.715, 0.29 ) }
    dend_78 { pt3dadd( -0.270828, 145.361, 172.671, 0.29 ) }
    dend_78 { pt3dadd( 0.22966, 145.082, 172.038, 0.29 ) }
    dend_78 { pt3dadd( 0.446698, 144.96, 171.763, 0.81 ) }
    dend_78 { pt3dadd( 0.656659, 144.837, 171.423, 1.03 ) }
    dend_78 { pt3dadd( 0.685482, 144.817, 171.375, 1.03 ) }
    dend_78 { pt3dadd( 4.07329, 141.497, 164.751, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -1.26316, 145.853, 173.802, 0.44 ) }
    dend_77 { pt3dadd( -1.01821, 146.685, 174.245, 0.44 ) }
    dend_77 { pt3dadd( -0.740127, 147.618, 174.728, 0.37 ) }
    dend_77 { pt3dadd( -0.171634, 149.294, 175.638, 0.29 ) }
    dend_77 { pt3dadd( 0.339623, 150.767, 176.482, 0.29 ) }
    dend_77 { pt3dadd( 0.579091, 151.427, 176.859, 0.74 ) }
    dend_77 { pt3dadd( 0.699158, 151.75, 177.043, 0.74 ) }
    dend_77 { pt3dadd( 0.861878, 152.168, 177.267, 0.44 ) }
    dend_77 { pt3dadd( 1.28316, 153.123, 177.754, 0.37 ) }
    dend_77 { pt3dadd( 1.77145, 154.115, 178.23, 0.29 ) }
    dend_77 { pt3dadd( 2.27591, 155.11, 178.694, 0.29 ) }
    dend_77 { pt3dadd( 2.33024, 155.208, 178.74, 0.29 ) }
    dend_77 { pt3dadd( 3.09547, 156.556, 179.369, 0.29 ) }
    dend_77 { pt3dadd( 3.24374, 156.813, 179.485, 0.29 ) }
    dend_77 { pt3dadd( 3.72114, 157.657, 179.844, 0.29 ) }
    dend_77 { pt3dadd( 3.74667, 157.698, 179.863, 0.29 ) }
    dend_77 { pt3dadd( 4.18101, 158.477, 180.302, 0.29 ) }
    dend_77 { pt3dadd( 4.34904, 158.898, 180.591, 0.44 ) }
    dend_77 { pt3dadd( 4.37108, 158.985, 180.66, 0.44 ) }
    dend_77 { pt3dadd( 4.42229, 159.3, 180.921, 0.29 ) }
    dend_77 { pt3dadd( 4.42729, 159.354, 180.966, 0.29 ) }
    dend_77 { pt3dadd( 4.45013, 160.224, 181.618, 0.29 ) }
    dend_77 { pt3dadd( 4.41509, 161.754, 182.662, 0.29 ) }
    dend_77 { pt3dadd( 4.41225, 161.933, 182.779, 0.29 ) }
    dend_77 { pt3dadd( 4.40927, 162.489, 183.13, 0.74 ) }
    dend_77 { pt3dadd( 4.41431, 162.951, 183.414, 0.88 ) }
    dend_77 { pt3dadd( 4.42986, 163.88, 183.975, 0.52 ) }
    dend_77 { pt3dadd( 4.44855, 164.721, 184.479, 0.37 ) }
    dend_77 { pt3dadd( 4.47894, 165.874, 185.198, 0.29 ) }
    dend_77 { pt3dadd( 4.48549, 166.053, 185.315, 0.29 ) }
    dend_77 { pt3dadd( 4.55593, 167.492, 186.297, 0.29 ) }
    dend_77 { pt3dadd( 4.5642, 167.611, 186.382, 0.29 ) }
    dend_77 { pt3dadd( 4.66657, 168.559, 187.123, 0.29 ) }
    dend_77 { pt3dadd( 4.71487, 168.913, 187.427, 0.52 ) }
    dend_77 { pt3dadd( 4.76091, 169.179, 187.687, 0.66 ) }
    dend_77 { pt3dadd( 4.77777, 169.257, 187.771, 0.66 ) }
    dend_77 { pt3dadd( 4.8571, 169.518, 188.108, 0.66 ) }
    dend_77 { pt3dadd( 4.86928, 169.564, 188.168, 0.66 ) }
    dend_77 { pt3dadd( 4.95196, 170.032, 188.764, 0.29 ) }
    dend_77 { pt3dadd( 4.9686, 170.18, 188.95, 0.22 ) }
    dend_77 { pt3dadd( 4.99436, 170.454, 189.304, 0.52 ) }
    dend_77 { pt3dadd( 5.01195, 170.61, 189.497, 0.52 ) }
    dend_77 { pt3dadd( 5.05894, 171.007, 189.967, 0.29 ) }
    dend_77 { pt3dadd( 5.12668, 171.558, 190.566, 0.29 ) }
    dend_77 { pt3dadd( 5.27239, 172.42, 191.458, 0.29 ) }
    dend_77 { pt3dadd( 5.2839, 172.472, 191.512, 0.29 ) }
    dend_77 { pt3dadd( 5.51534, 173.347, 192.403, 0.29 ) }
    dend_77 { pt3dadd( 5.53939, 173.426, 192.483, 0.29 ) }
    dend_77 { pt3dadd( 5.8585, 174.376, 193.409, 0.29 ) }
    dend_77 { pt3dadd( 6.13298, 175.182, 194.149, 0.29 ) }
    dend_77 { pt3dadd( 6.16775, 175.307, 194.245, 0.29 ) }
    dend_77 { pt3dadd( 6.26905, 175.75, 194.545, 0.29 ) }
    dend_77 { pt3dadd( 6.276, 175.788, 194.568, 0.29 ) }
    dend_77 { pt3dadd( 6.36859, 176.41, 194.891, 0.88 ) }
    dend_77 { pt3dadd( 6.39055, 176.604, 194.977, 0.88 ) }
    dend_77 { pt3dadd( 6.48487, 177.536, 195.355, 0.22 ) }
    dend_77 { pt3dadd( 6.57039, 178.464, 195.697, 0.22 ) }
    dend_77 { pt3dadd( 6.58299, 178.607, 195.748, 0.22 ) }
    dend_77 { pt3dadd( 6.67509, 179.636, 196.101, 0.22 ) }
    dend_77 { pt3dadd( 6.67923, 179.68, 196.116, 0.22 ) }
    dend_77 { pt3dadd( 6.73449, 181.098, 196.534, 0.52 ) }
    dend_77 { pt3dadd( 6.73456, 182.138, 196.819, 0.29 ) }
    dend_77 { pt3dadd( 6.71053, 182.614, 196.934, 0.37 ) }
    dend_77 { pt3dadd( 6.7032, 182.71, 196.956, 0.37 ) }
    dend_77 { pt3dadd( 6.64968, 183.247, 197.073, 0.37 ) }
    dend_77 { pt3dadd( 6.41344, 184.924, 197.378, 0.22 ) }
    dend_77 { pt3dadd( 6.25184, 185.933, 197.55, 0.22 ) }
    dend_77 { pt3dadd( 6.24516, 185.986, 197.56, 0.22 ) }
    dend_77 { pt3dadd( 6.18856, 186.516, 197.658, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( 6.12659, 187.256, 197.804, 0.66 ) }
    dend_77 { pt3dadd( 5.99879, 188.768, 198.068, 0.15 ) }
    dend_77 { pt3dadd( 5.92815, 190.005, 198.282, 0.15 ) }
    dend_77 { pt3dadd( 5.86724, 190.641, 198.362, 0.29 ) }
    dend_77 { pt3dadd( 5.86079, 190.694, 198.368, 0.29 ) }
    dend_77 { pt3dadd( 5.80387, 191.082, 198.409, 0.29 ) }
    dend_77 { pt3dadd( 5.60351, 192.285, 198.542, 0.44 ) }
    dend_77 { pt3dadd( 5.52456, 192.621, 198.559, 0.44 ) }
    dend_77 { pt3dadd( 5.27599, 193.465, 198.613, 0.22 ) }
    dend_77 { pt3dadd( 5.14575, 193.915, 198.66, 0.52 ) }
    dend_77 { pt3dadd( 5.13154, 193.967, 198.667, 0.52 ) }
    dend_77 { pt3dadd( 5.0394, 194.341, 198.737, 0.88 ) }
    dend_77 { pt3dadd( 4.61177, 196.47, 199.306, 0.29 ) }
    dend_77 { pt3dadd( 4.2853, 198.227, 199.824, 0.29 ) }
    dend_77 { pt3dadd( 4.21049, 198.832, 200.019, 0.29 ) }
    dend_77 { pt3dadd( 4.20833, 198.883, 200.036, 0.29 ) }
    dend_77 { pt3dadd( 4.25434, 199.879, 200.38, 0.29 ) }
    dend_77 { pt3dadd( 4.40654, 200.735, 200.685, 0.29 ) }
    dend_77 { pt3dadd( 4.42075, 200.774, 200.7, 0.29 ) }
    dend_77 { pt3dadd( 4.9542, 201.941, 201.052, 0.29 ) }
    dend_77 { pt3dadd( 5.38489, 202.811, 201.286, 0.59 ) }
    dend_77 { pt3dadd( 5.6086, 203.243, 201.392, 0.59 ) }
    dend_77 { pt3dadd( 5.99057, 203.993, 201.579, 0.22 ) }
    dend_77 { pt3dadd( 6.40637, 204.841, 201.804, 0.22 ) }
    dend_77 { pt3dadd( 6.45489, 204.946, 201.835, 0.22 ) }
    dend_77 { pt3dadd( 7.01714, 206.25, 202.254, 0.22 ) }
    dend_77 { pt3dadd( 7.0581, 206.351, 202.289, 0.22 ) }
    dend_77 { pt3dadd( 7.84456, 208.404, 203.048, 0.22 ) }
    dend_77 { pt3dadd( 7.86299, 208.457, 203.07, 0.22 ) }
    dend_77 { pt3dadd( 8.24069, 209.678, 203.612, 0.22 ) }
    dend_77 { pt3dadd( 8.27896, 209.82, 203.68, 0.22 ) }
    dend_77 { pt3dadd( 8.32343, 210.023, 203.79, 0.59 ) }
    dend_77 { pt3dadd( 8.40119, 210.442, 204.028, 0.59 ) }
    dend_77 { pt3dadd( 8.49704, 211.515, 204.602, 0.29 ) }
    dend_77 { pt3dadd( 8.51441, 212.01, 204.854, 0.59 ) }
    dend_77 { pt3dadd( 8.50534, 212.794, 205.236, 0.52 ) }
    dend_77 { pt3dadd( 8.4937, 213.481, 205.553, 0.74 ) }
    dend_77 { pt3dadd( 8.48008, 214.081, 205.814, 0.74 ) }
    dend_77 { pt3dadd( 8.46447, 215.295, 206.287, 0.22 ) }
    dend_77 { pt3dadd( 8.46408, 215.816, 206.461, 0.44 ) }
    dend_77 { pt3dadd( 8.47444, 216.281, 206.607, 0.74 ) }
    dend_77 { pt3dadd( 8.49023, 216.549, 206.692, 1.03 ) }
    dend_77 { pt3dadd( 8.49351, 216.591, 206.706, 1.03 ) }
    dend_77 { pt3dadd( 8.56325, 217.153, 206.922, 1.03 ) }
    dend_77 { pt3dadd( 8.5747, 217.199, 206.946, 1.03 ) }
    dend_77 { pt3dadd( 8.76177, 217.952, 207.338, 0.37 ) }
    dend_77 { pt3dadd( 8.94001, 218.702, 207.724, 0.29 ) }
    dend_77 { pt3dadd( 11.1749, 225.08, 210.66, 0.29 ) }
    dend_77 { pt3dadd( 13.1668, 230.895, 214.756, 0.29 ) }
    dend_77 { pt3dadd( 15.5131, 236.492, 218.974, 0.29 ) }
    dend_77 { pt3dadd( 18.5815, 241.45, 223.551, 0.29 ) }
    dend_77 { pt3dadd( 22.4645, 245.925, 228.037, 0.29 ) }
    dend_77 { pt3dadd( 26.2073, 249.271, 233.601, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 4.07329, 141.497, 164.751, 0.22 ) }
    dend_80 { pt3dadd( 8.64976, 136.152, 156.334, 0.22 ) }
    dend_80 { pt3dadd( 13.9029, 130.227, 148.727, 0.22 ) }
    dend_80 { pt3dadd( 19.8323, 125.231, 140.886, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 4.07329, 141.497, 164.751, 0.22 ) }
    dend_79 { pt3dadd( 7.84456, 138.564, 158.334, 0.22 ) }
    dend_79 { pt3dadd( 11.6789, 135.609, 151.965, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_92, dend_25, dend_0, axon_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, axon_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_5 = new SectionList()
    dend_92 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_54 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 3
    dend_93 nseg = 5
    dend_26 nseg = 3
    dend_102 nseg = 9
    dend_97 nseg = 3
    dend_65 nseg = 3
    dend_27 nseg = 9
    dend_20 nseg = 5
    dend_15 nseg = 5
    dend_2 nseg = 11
    dend_103 nseg = 5
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 5
    dend_67 nseg = 5
    dend_66 nseg = 7
    dend_48 nseg = 3
    dend_43 nseg = 13
    dend_31 nseg = 7
    dend_29 nseg = 3
    dend_28 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 9
    dend_17 nseg = 5
    dend_16 nseg = 7
    dend_11 nseg = 5
    dend_4 nseg = 5
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_19 nseg = 3
    dend_6 nseg = 3
    dend_5 nseg = 3
    dend_69 nseg = 5
    dend_62 nseg = 9
    dend_53 nseg = 5
    dend_50 nseg = 5
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_90 nseg = 3
    dend_89 nseg = 3
    dend_73 nseg = 5
    dend_63 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 5
    dend_9 nseg = 5
    dend_83 nseg = 3
    dend_74 nseg = 3
    dend_55 nseg = 3
    dend_85 nseg = 9
    dend_84 nseg = 3
    dend_82 nseg = 5
    dend_75 nseg = 3
    dend_81 nseg = 5
    dend_76 nseg = 5
    dend_77 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_DBC_64c3ef1172_0_0


