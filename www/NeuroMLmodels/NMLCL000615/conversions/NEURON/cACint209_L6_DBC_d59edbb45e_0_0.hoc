// Cell: cACint209_L6_DBC_d59edbb45e_0_0
/*
{
  "id" : "cACint209_L6_DBC_d59edbb45e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.92851, -12.838, 0.0, 2.34028", "1.77053, -11.651, 0.0, 3.94329", "1.61254, -10.464, 0.0, 5.35921", "1.45455, -9.27692, 0.0, 6.69673", "1.29656, -8.08988, 0.0, 7.75393", "1.13858, -6.90284, 0.0, 8.64632", "0.980589, -5.7158, 0.0, 9.469", "0.822601, -4.52876, 0.0, 10.3084", "0.664614, -3.34172, 0.0, 11.1451", "0.506626, -2.15468, 0.0, 11.8845", "0.348639, -0.967645, 0.0, 12.0097", "0.190651, 0.219395, 0.0, 12.0138", "0.0326638, 1.40643, 0.0, 11.4011", "-0.125324, 2.59347, 0.0, 10.4698", "-0.283311, 3.78051, 0.0, 9.36538", "-0.441299, 4.96755, 0.0, 8.29429", "-0.599286, 6.15459, 0.0, 7.29384", "-0.757274, 7.34163, 0.0, 6.35176", "-0.915261, 8.52867, 0.0, 5.48996", "-1.07325, 9.71571, 0.0, 4.74604", "-1.23124, 10.9027, 0.0, 2.99829" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "2.20047, -13.95, 0.07, 2.87", "2.29502, -14.6163, 0.0055053, 2.87", "2.81502, -18.0599, 0.0858553, 2.87", "3.38687, -21.5958, 0.346831, 2.87", "3.99725, -25.3698, 0.625388, 2.58", "4.6415, -29.3534, 0.919405, 2.58", "5.29667, -33.4044, 1.2184, 2.06", "6.21584, -39.0167, 1.73025, 2.06", "6.54304, -41.032, 1.9989, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018766376804
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.13953, 13.392, 1.0, 3.46", "-2.20381, 13.6752, 1.0, 3.46", "-2.88502, 16.9409, 0.992666, 2.65", "-3.44274, 19.6287, 0.984227, 2.65", "-4.06048, 22.6802, 0.97386, 2.65", "-4.62132, 25.5181, 0.902624, 2.5", "-5.05746, 27.7609, 0.818017, 2.5", "-5.55571, 30.4025, 0.687573, 2.5", "-6.10491, 33.3424, 0.508758, 2.06", "-6.64497, 36.1357, 0.330011, 1.99", "-6.98695, 37.859, 0.222705, 1.99", "-7.41347, 40.0489, 0.156663, 1.99", "-7.92112, 42.6562, 0.0917866, 1.99", "-8.40097, 44.9848, 0.0608751, 1.99", "-8.83339, 47.1182, 0.078022, 1.69", "-9.38045, 49.7041, 0.201871, 1.4", "-9.845, 51.8666, 0.444727, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018766376804
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.23124, 10.9027, 0.0, 0.52", "-3.2102, 25.7716, 0.0, 0.52", "-5.18917, 40.6405, 0.0, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "6.54304, -41.032, 1.9989, 0.74", "7.69904, -42.2211, 2.23206, 0.74", "8.5748, -43.1399, 2.35045, 0.74", "9.88934, -44.5192, 2.52815, 0.74", "10.7655, -45.4386, 2.6466, 0.74", "12.3008, -47.0494, 2.85415, 0.74", "13.2112, -48.0047, 2.97722, 0.74", "14.8286, -49.6751, 3.21806, 0.74" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "6.54304, -41.032, 1.9989, 1.33", "6.99373, -44.2367, 1.64715, 1.33", "7.28034, -46.2747, 1.42347, 1.33", "7.68482, -49.1507, 1.1078, 1.33", "7.92903, -50.8872, 0.917198, 1.33", "8.19366, -52.7688, 0.71067, 1.33", "8.5542, -55.3325, 0.429284, 1.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.845, 51.8666, 0.444727, 1.18", "-9.91779, 53.636, 0.906055, 1.18", "-9.93464, 54.9327, 1.10157, 1.18", "-9.92982, 56.1239, 1.22103, 1.18", "-9.92263, 57.1974, 1.27031, 1.18", "-9.95155, 61.3433, 1.08452, 1.25", "-9.95911, 64.5847, 0.767349, 0.81", "-9.91818, 65.9838, 0.597867, 0.81", "-9.8532, 66.9568, 0.408794, 0.81", "-9.71929, 68.0947, 0.0402853, 0.81", "-9.46222, 69.7937, -0.697667, 0.81", "-9.28373, 70.8939, -1.27878, 0.81", "-9.06813, 72.1384, -1.84197, 0.81", "-8.90694, 73.0157, -2.25344, 0.81", "-8.56351, 74.6337, -2.97797, 0.81", "-8.35219, 75.5388, -3.36342, 0.81", "-8.0581, 76.7391, -3.83228, 0.81", "-7.87458, 77.6097, -4.19215, 0.81", "-7.66252, 78.9359, -4.74006, 0.81", "-7.48338, 80.182, -5.2042, 0.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.845, 51.8666, 0.444727, 1.25", "-10.1266, 52.9632, 1.1398, 1.25", "-10.3489, 53.8288, 1.68845, 1.25", "-10.7964, 55.5714, 2.79299, 1.25" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.18917, 40.6405, 0.0, 0.52", "-7.16813, 55.5094, 0.0, 0.52", "-9.14709, 70.3782, 0.0, 0.52" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "14.8286, -49.6751, 3.21806, 0.37", "16.2101, -51.8236, 3.37654, 0.37", "17.1801, -53.1811, 3.60582, 0.37", "18.1071, -54.4423, 3.85645, 0.37", "19.592, -56.5438, 4.26286, 0.37", "20.7166, -58.0713, 4.67511, 0.37", "21.5428, -59.1493, 5.00026, 0.37", "22.5577, -60.4103, 5.47367, 0.37", "23.5969, -61.6725, 5.97099, 0.37", "24.8491, -63.0626, 6.53211, 0.37", "26.594, -64.8214, 7.11538, 0.37", "27.55, -65.7285, 7.4434, 0.37", "28.9315, -67.1156, 7.9603, 0.37", "29.2918, -67.5035, 8.09087, 0.37", "30.1905, -68.5448, 8.42085, 0.37", "31.3719, -69.9991, 8.85508, 0.37", "32.4236, -71.4231, 9.19823, 0.37", "33.8024, -73.2975, 9.66452, 0.37", "34.719, -74.5962, 10.0046, 0.37", "35.7398, -76.1537, 10.3996, 0.37", "36.2837, -77.0914, 10.6162, 0.37", "36.988, -78.3867, 10.9081, 0.37", "37.6487, -79.4255, 11.068, 0.37" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "14.8286, -49.6751, 3.21806, 0.59", "16.1871, -49.8005, 2.60321, 0.59", "16.9292, -49.8497, 2.27226, 0.59", "18.4758, -49.9301, 1.59587, 0.59", "19.3583, -49.964, 1.15228, 0.52", "19.9086, -50.0015, 0.859495, 0.52", "20.748, -50.0677, 0.398649, 0.52", "21.5883, -50.1381, -0.0881883, 0.52", "22.5119, -50.2281, -0.583463, 0.52", "23.7099, -50.3512, -1.15545, 0.52", "24.8959, -50.4997, -1.64563, 0.52", "26.1456, -50.6852, -2.09011, 0.52", "27.0523, -50.8439, -2.3557, 0.52", "28.4436, -51.1095, -2.6593, 0.52", "29.57, -51.3213, -2.83771, 0.52", "30.5056, -51.49, -2.90132, 0.52", "31.4104, -51.6429, -2.94034, 0.52", "32.6999, -51.8803, -2.96157, 0.52", "33.7434, -52.078, -2.9723, 0.52", "34.9545, -52.306, -3.00558, 0.52", "37.3632, -52.7526, -3.01935, 0.52" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "8.5542, -55.3325, 0.429284, 0.81", "8.16469, -57.603, -0.576247, 0.81", "8.00994, -58.7166, -1.11527, 0.81", "7.89589, -59.5362, -1.51685, 0.81", "7.71032, -60.6361, -2.06558, 0.59", "7.63218, -61.1011, -2.32067, 0.52", "7.49123, -61.9434, -2.79825, 0.52", "7.23766, -63.1752, -3.49969, 0.52", "7.08656, -63.7981, -3.91243, 0.52", "6.94455, -64.2879, -4.26583, 0.52", "6.55732, -65.4083, -5.12821, 0.52", "6.39575, -65.7995, -5.44476, 0.52", "5.87504, -66.8274, -6.30538, 0.52", "5.48721, -67.5414, -6.89143, 0.52", "5.02372, -68.3831, -7.65523, 0.52", "4.6766, -69.0638, -8.27654, 0.52", "4.49615, -69.4597, -8.63553, 0.52", "4.34527, -69.8605, -9.00334, 0.52", "4.10543, -70.7534, -9.82143, 0.52", "3.86995, -71.9589, -10.9, 0.52", "3.79146, -72.6653, -11.5115, 0.52", "3.72802, -73.6311, -12.3029, 0.52", "3.719, -73.9659, -12.5853, 0.52", "3.70353, -75.2496, -13.6701, 0.52", "3.69347, -75.8827, -14.18, 0.52", "3.69911, -76.937, -14.9948, 0.52", "3.69944, -77.632, -15.5278, 0.52", "3.67067, -79.017, -16.5161, 0.52", "3.6651, -79.3224, -16.7177, 0.52", "3.64717, -80.1369, -17.1868, 0.52", "3.58554, -81.4729, -17.91, 0.52", "3.5082, -82.2578, -18.2834, 0.52", "3.3595, -83.3758, -18.7709, 0.52", "3.17291, -84.5073, -19.2495, 0.52", "3.00514, -85.3044, -19.5851, 0.52", "2.67888, -86.6152, -20.2042, 0.52", "2.35105, -87.7367, -20.7597, 0.52", "2.21044, -88.1898, -21.0263, 0.52", "1.77061, -89.5354, -21.898, 0.52", "1.34167, -90.8784, -22.8939, 0.52", "0.880233, -92.362, -24.1072, 0.52", "0.631288, -93.2602, -24.9306, 0.52", "0.288044, -94.6597, -26.3048, 0.52", "0.170257, -95.2268, -26.8897, 0.52", "-0.0956549, -96.7323, -28.4631, 0.52", "-0.11743, -96.9825, -28.7372, 0.52", "-0.17681, -98.4894, -30.2801, 0.52", "-0.147962, -99.2291, -31.0483, 0.52", "-0.0500404, -100.35, -32.1499, 0.52", "0.0268936, -101.046, -32.8349, 0.52", "0.184911, -102.592, -34.2826, 0.52", "0.268858, -103.356, -34.9736, 0.52", "0.446965, -104.849, -36.2902, 0.52", "0.498675, -105.327, -36.7113, 0.52", "0.573, -106.52, -37.6842, 0.52", "0.578184, -107.021, -38.0611, 0.52", "0.525978, -107.708, -38.4933, 0.52", "0.323204, -109.14, -39.2507, 0.52", "0.129174, -109.905, -39.6007, 0.52", "-0.16382, -110.71, -39.9752, 0.52", "-0.427997, -111.278, -40.2296, 0.52", "-0.71279, -111.778, -40.4676, 0.52", "-1.31958, -112.601, -40.882, 0.52", "-2.41183, -113.878, -41.6018, 0.52", "-3.18881, -114.801, -42.2928, 0.52", "-3.70536, -115.432, -42.8308, 0.52", "-4.0903, -115.931, -43.2786, 0.52", "-4.97093, -117.16, -44.3809, 0.52", "-5.69204, -118.275, -45.3932, 0.52", "-6.72294, -120.067, -46.9426, 0.52", "-7.26051, -121.065, -47.7988, 0.52", "-7.55006, -121.633, -48.2877, 0.52", "-8.10725, -122.862, -49.3633, 0.52", "-8.73807, -124.364, -50.6401, 0.52", "-8.9432, -124.849, -51.0218, 0.52", "-9.3192, -125.796, -51.8078, 0.52", "-9.71044, -126.974, -52.8509, 0.52", "-10.1402, -128.489, -54.1908, 0.52", "-10.4099, -129.61, -55.1609, 0.52", "-10.5377, -130.183, -55.6295, 0.52", "-11.0602, -132.435, -57.4092, 0.52", "-11.2758, -133.345, -58.0811, 0.52", "-11.5486, -134.338, -58.8033, 0.52", "-11.7082, -134.847, -59.162, 0.52", "-11.9877, -135.805, -60.0149, 0.52", "-12.2093, -136.494, -60.7066, 0.52", "-12.4135, -137.053, -61.2874, 0.52", "-12.948, -138.569, -63.0539, 0.52", "-13.207, -139.342, -64.0326, 0.52", "-13.8597, -141.491, -66.9096, 0.52", "-13.9794, -141.956, -67.5686, 0.52", "-14.0994, -142.579, -68.4866, 0.52", "-14.2432, -143.439, -69.8136, 0.52" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.5542, -55.3325, 0.429284, 1.33", "8.55488, -55.3811, 0.434192, 1.33", "8.58591, -57.3476, 0.590419, 1.33", "8.62074, -60.0812, 0.765211, 1.33", "8.63837, -61.687, 0.905323, 1.33", "8.66739, -63.2996, 1.06417, 1.18", "8.70173, -64.6275, 1.22328, 1.18", "8.77455, -66.4424, 1.46666, 1.18", "8.84928, -67.951, 1.6855, 1.18", "8.89508, -69.3429, 1.90402, 1.18", "8.90622, -71.0798, 2.20145, 1.18", "8.88512, -72.9571, 2.56337, 1.18", "8.85629, -74.5298, 2.87502, 1.18", "8.83721, -75.4895, 3.07565, 1.18", "8.77689, -77.1641, 3.40272, 1.18", "8.68764, -78.689, 3.65262, 1.03", "8.60479, -79.7783, 3.83172, 1.03", "8.42601, -81.8555, 4.15225, 1.03", "8.30835, -83.2284, 4.37676, 1.03", "8.18089, -84.9621, 4.65859, 1.03", "8.06572, -86.5285, 4.88584, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-7.48338, 80.182, -5.2042, 0.52", "-8.28778, 81.377, -5.94964, 0.52", "-8.73788, 82.0528, -6.37669, 0.52", "-9.77207, 83.5761, -7.25091, 0.52", "-10.0508, 83.9793, -7.4591, 0.52", "-10.5474, 84.671, -7.77524, 0.52", "-10.9114, 85.1779, -7.98186, 0.52", "-11.6438, 86.222, -8.36156, 0.52", "-12.1672, 87.015, -8.62868, 0.52", "-12.5252, 87.5998, -8.78675, 0.52", "-12.9056, 88.2227, -8.97167, 0.52", "-13.1965, 88.7059, -9.11294, 0.52", "-13.853, 89.7834, -9.47789, 0.52", "-14.119, 90.2331, -9.6315, 0.52", "-14.3687, 90.6338, -9.79362, 0.52", "-14.7354, 91.1841, -10.0174, 0.52", "-15.1303, 91.6963, -10.2671, 0.52", "-16.1678, 92.8702, -10.8548, 0.52", "-16.4866, 93.2254, -11.0177, 0.52", "-16.7414, 93.5181, -11.1513, 0.52", "-17.1909, 94.055, -11.3814, 0.52", "-18.1505, 95.2173, -11.8369, 0.52", "-18.4686, 95.6175, -11.9543, 0.52", "-18.9766, 96.2684, -12.1067, 0.52", "-19.3761, 96.8148, -12.2437, 0.52", "-19.8209, 97.4419, -12.4499, 0.52", "-20.2137, 97.9784, -12.7136, 0.52", "-20.6213, 98.545, -13.0441, 0.52", "-21.3728, 99.6074, -13.8262, 0.52", "-21.7498, 100.158, -14.352, 0.52", "-22.2146, 100.981, -15.2235, 0.52", "-22.6711, 102.126, -16.592, 0.52", "-22.7154, 102.286, -16.8146, 0.52", "-22.7636, 102.586, -17.2955, 0.52", "-22.7743, 103.138, -18.3511, 0.52", "-22.7497, 103.582, -19.2846, 0.52", "-22.6596, 104.218, -20.5867, 0.52", "-22.4715, 105.027, -22.226, 0.52", "-22.4211, 105.234, -22.6435, 0.52", "-22.2604, 105.831, -23.8778, 0.52", "-22.1509, 106.093, -24.4127, 0.52", "-22.0327, 106.301, -24.8991, 0.52", "-21.8923, 106.494, -25.3313, 0.52", "-21.7679, 106.62, -25.7274, 0.52", "-21.3097, 107.03, -27.2863, 0.52", "-21.1908, 107.145, -28.0272, 0.52", "-21.0144, 107.261, -29.7424, 0.52", "-20.9375, 107.272, -30.5802, 0.52", "-20.7581, 107.189, -33.2408, 0.52", "-20.7141, 107.152, -33.8247, 0.52", "-20.1921, 106.656, -39.1275, 0.52", "-19.9664, 106.431, -41.0181, 0.52", "-19.8363, 106.274, -42.0387, 0.52", "-19.4951, 105.763, -44.7808, 0.52", "-19.3173, 105.508, -45.9414, 0.52", "-19.1672, 105.276, -46.8391, 0.52", "-18.6083, 104.472, -49.4138, 0.52", "-18.1012, 103.709, -51.7369, 0.52", "-17.672, 102.963, -53.9589, 0.52", "-17.5322, 102.684, -54.7179, 0.52", "-17.2835, 101.97, -56.5685, 0.52", "-17.1671, 101.528, -57.6448, 0.52", "-17.0913, 101.296, -58.1522, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-7.48338, 80.182, -5.2042, 0.81", "-7.09785, 81.305, -5.3834, 0.81", "-6.7969, 82.2894, -5.61015, 0.81", "-6.46756, 83.2674, -5.86879, 0.81", "-6.02061, 84.3981, -6.18782, 0.81", "-5.59181, 85.3791, -6.47192, 0.81", "-5.13181, 86.4315, -6.77671, 0.81", "-4.43135, 88.096, -7.24698, 0.81", "-4.00113, 89.1245, -7.55577, 0.81", "-3.31003, 90.6277, -8.05945, 0.81", "-2.92124, 91.3228, -8.33032, 0.81" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-10.7964, 55.5714, 2.79299, 0.81", "-10.3191, 57.1535, 6.12849, 0.81", "-10.2092, 57.4161, 7.22504, 0.81", "-9.92023, 57.7129, 9.59858, 0.81", "-9.65361, 57.7976, 11.1705, 0.59", "-9.41613, 57.8255, 12.2885, 0.52", "-8.89471, 57.8937, 14.2497, 0.52", "-7.80218, 57.7536, 16.9162, 0.52", "-7.33398, 57.6835, 17.8526, 0.52", "-6.74783, 57.6182, 18.8328, 0.52", "-6.01654, 57.5716, 19.991, 0.52", "-5.24025, 57.5344, 21.2548, 0.52", "-4.6099, 57.499, 22.1772, 0.52", "-3.98963, 57.3699, 23.0189, 0.52", "-3.05994, 56.875, 24.5262, 0.52", "-2.31752, 56.1975, 25.8225, 0.52", "-1.62019, 55.3843, 26.9841, 0.52", "-1.08383, 54.6907, 27.8292, 0.52", "-0.422763, 53.8676, 28.8539, 0.52", "0.0626191, 53.3136, 29.5826, 0.52", "0.666529, 52.7202, 30.3587, 0.52", "1.22517, 52.2162, 31.0284, 0.52", "1.67664, 51.8548, 31.5655, 0.52", "3.12514, 50.744, 33.4193, 0.52", "4.06376, 50.0016, 34.7405, 0.52", "4.72989, 49.4344, 35.7129, 0.52", "5.30185, 48.8401, 36.7039, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.7964, 55.5714, 2.79299, 0.88", "-12.0987, 56.1529, 3.48878, 0.88", "-13.1291, 56.6626, 3.98117, 0.88", "-14.2434, 57.2764, 4.44313, 0.81", "-15.0409, 57.7359, 4.7093, 0.81", "-16.2245, 58.4047, 5.07827, 0.81", "-16.984, 58.8339, 5.31505, 0.81", "-17.8104, 59.3101, 5.51228, 0.81", "-18.6472, 59.8024, 5.65382, 0.81", "-19.7074, 60.4441, 5.74029, 0.81", "-20.5938, 61.0214, 5.79545, 0.81" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "37.6487, -79.4255, 11.068, 0.37", "42.0717, -78.6473, 14.3884, 0.37", "42.6452, -78.6557, 14.8155, 0.37", "43.8138, -78.8149, 15.6128, 0.37", "44.895, -79.0033, 16.285, 0.37", "46.9865, -79.363, 17.473, 0.37", "48.5544, -79.6021, 18.2666, 0.37", "50.4269, -80.0516, 18.8291, 0.37", "51.5611, -80.3546, 19.1554, 0.37", "52.2998, -80.5691, 19.4749, 0.37", "53.0359, -80.7829, 19.7932, 0.37", "54.2268, -81.046, 20.2609, 0.37", "56.3938, -81.3044, 21.1638, 0.37", "57.247, -81.3717, 21.5413, 0.37", "61.2004, -81.8287, 23.8032, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "37.6487, -79.4255, 11.068, 0.37", "40.2824, -80.0786, 10.3098, 0.37", "42.1929, -80.5053, 9.89077, 0.37", "43.5504, -80.8045, 9.65531, 0.37", "45.5306, -81.303, 9.36565, 0.37", "46.68, -81.6249, 9.19559, 0.37", "47.7862, -81.9904, 9.03377, 0.37", "49.1412, -82.5555, 8.76559, 0.37", "50.4223, -83.2329, 8.58021, 0.37", "51.5179, -83.9924, 8.46265, 0.37", "52.1794, -84.5707, 8.39673, 0.37", "53.6453, -86.075, 8.15011, 0.37", "54.8082, -87.3799, 7.84475, 0.37", "55.5966, -88.3132, 7.41325, 0.37", "56.7234, -89.6629, 6.59298, 0.37", "57.9655, -91.1456, 5.53119, 0.37", "59.5266, -93.0288, 4.05556, 0.37", "60.5175, -94.2325, 2.92904, 0.37", "63.2228, -97.4988, -0.504053, 0.37", "63.6346, -97.9789, -1.08373, 0.37", "64.0961, -98.5113, -1.78649, 0.37", "64.7326, -99.294, -2.81627, 0.37", "65.7512, -100.759, -4.58298, 0.37", "66.1142, -101.409, -5.23598, 0.37", "67.0343, -103.281, -6.6814, 0.37", "67.4205, -104.089, -7.35805, 0.37", "67.9176, -105.091, -8.21013, 0.37", "68.6672, -106.623, -9.45232, 0.37", "69.3292, -107.958, -10.4632, 0.37", "69.7731, -108.844, -11.1118, 0.37", "70.9345, -111.287, -12.824, 0.37", "71.6648, -112.871, -13.9285, 0.37", "72.0221, -113.674, -14.4743, 0.37", "72.8332, -115.569, -15.669, 0.37", "73.3376, -116.766, -16.379, 0.37", "74.0223, -118.465, -17.4386, 0.37", "74.4871, -119.574, -18.1826, 0.37", "74.8232, -120.196, -18.7642, 0.37", "75.075, -120.513, -19.2061, 0.37", "75.5715, -120.933, -20.0252, 0.37", "76.7914, -121.591, -21.8346, 0.37", "77.944, -121.994, -23.3324, 0.37", "79.1914, -122.315, -24.8371, 0.37", "80.7403, -122.748, -26.684, 0.37", "81.3466, -122.956, -27.4126, 0.37", "82.1505, -123.252, -28.3651, 0.37", "82.6862, -123.444, -28.929, 0.37", "83.8594, -123.897, -30.1053, 0.37", "85.3812, -124.589, -31.6516, 0.37", "86.8823, -125.377, -33.1799, 0.37", "87.8054, -125.916, -34.1936, 0.37", "88.606, -126.428, -35.0832, 0.37", "90.1264, -127.377, -36.7326, 0.37", "91.5338, -128.208, -38.1372, 0.37", "92.2558, -128.617, -38.823, 0.37", "93.3856, -129.344, -39.9786, 0.37", "94.2244, -129.948, -40.889, 0.37", "95.3126, -130.786, -42.2291, 0.37", "95.9564, -131.275, -43.0121, 0.37", "97.0208, -132.16, -44.327, 0.37", "98.1179, -133.208, -45.787, 0.37", "98.4202, -133.525, -46.174, 0.37", "99.75, -135.022, -47.861, 0.37", "100.686, -136.128, -49.0605, 0.37", "101.777, -137.4, -50.5195, 0.37", "102.66, -138.423, -51.8398, 0.37", "103.646, -139.543, -53.3935, 0.37", "104.334, -140.336, -54.6377, 0.37", "105.922, -142.218, -57.6964, 0.37", "106.891, -143.353, -59.6277, 0.37", "108.629, -145.322, -63.1602, 0.37", "109.086, -145.802, -64.1289, 0.37", "110.918, -147.538, -68.0676, 0.37", "111.654, -148.139, -69.5495, 0.37", "112.276, -148.556, -70.6753, 0.37", "114.186, -149.609, -73.8529, 0.37", "116.706, -150.656, -77.5676, 0.37", "117.676, -150.962, -78.8309, 0.37", "119.631, -151.376, -80.982, 0.37", "120.538, -151.501, -81.9956, 0.37", "122.473, -151.686, -83.8982, 0.37", "124.045, -151.771, -85.1239, 0.37", "126.919, -151.892, -86.9243, 0.37", "127.846, -151.932, -87.4876, 0.37", "133.125, -152.288, -90.9539, 0.37", "135.985, -152.562, -92.9586, 0.37", "137.207, -152.691, -93.8233, 0.37", "138.131, -152.831, -94.7284, 0.37", "140.405, -153.362, -97.6163, 0.37", "142.759, -154.199, -101.264, 0.37", "143.157, -154.401, -102.068, 0.37", "143.812, -154.833, -103.78, 0.37", "145.853, -156.538, -110.594, 0.37", "146.7, -157.389, -113.756, 0.37", "147.791, -158.657, -118.109, 0.37", "149.148, -160.46, -123.753, 0.37", "150.11, -161.949, -127.773, 0.37", "151.51, -164.553, -133.697, 0.37", "152.093, -165.763, -135.863, 0.37", "152.471, -166.602, -137.131, 0.37", "153.372, -168.621, -139.587, 0.37", "154.461, -170.958, -141.891, 0.37", "156.292, -174.573, -144.953, 0.37", "157.545, -176.784, -146.567, 0.37", "160.479, -181.279, -150.106, 0.37", "161.896, -183.16, -151.686, 0.37", "162.833, -184.253, -152.608, 0.37", "164.56, -186.054, -154.024, 0.37", "167.166, -188.608, -155.802, 0.37", "172.029, -193.285, -158.644, 0.37", "176.348, -197.411, -160.986, 0.37", "178.338, -199.332, -162.093, 0.37", "183.248, -204.199, -164.846, 0.37", "185.694, -206.713, -166.194, 0.37", "189.968, -211.195, -168.244, 0.37" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "37.3632, -52.7526, -3.01935, 0.44", "38.4163, -52.6719, -2.69701, 0.44", "40.0265, -52.5483, -2.20413, 0.44", "41.425, -52.4411, -1.77608, 0.44", "42.4055, -52.3658, -1.47596, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "37.3632, -52.7526, -3.01935, 0.44", "37.7515, -51.7525, -3.19552, 0.44", "38.0071, -51.0943, -3.31147, 0.44", "38.3536, -50.2018, -3.46867, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-14.2432, -143.439, -69.8136, 0.52", "-14.0204, -145.03, -69.7495, 0.52", "-13.9481, -145.844, -69.7187, 0.52", "-13.8049, -147.041, -69.8227, 0.52", "-13.6384, -148.523, -70.022, 0.52", "-13.5275, -149.706, -70.1979, 0.52", "-13.3854, -151.182, -70.4716, 0.52", "-13.3117, -152.429, -70.7355, 0.52", "-13.08, -155.374, -71.5708, 0.44", "-12.9641, -156.511, -71.9406, 0.44", "-12.7653, -158.136, -72.5232, 0.44", "-12.4573, -160.254, -73.3947, 0.44", "-12.134, -162.318, -74.3291, 0.44", "-11.6089, -165.171, -75.7788, 0.44", "-11.4417, -165.915, -76.2048, 0.44", "-11.237, -166.717, -76.7168, 0.44", "-10.8188, -168.311, -77.7996, 0.44", "-10.5949, -169.134, -78.4163, 0.44", "-10.0068, -171.344, -80.1564, 0.44", "-9.55393, -173.389, -81.7013, 0.44", "-9.37696, -174.552, -82.5261, 0.44", "-9.29307, -175.606, -83.2153, 0.44", "-9.34966, -178.591, -85.0726, 0.44", "-9.47936, -179.731, -85.76, 0.44", "-9.71719, -180.901, -86.4403, 0.44", "-10.327, -183.329, -87.7609, 0.44", "-10.6061, -184.337, -88.2806, 0.44", "-11.4913, -187.174, -89.5936, 0.44", "-12.0304, -188.742, -90.2245, 0.44", "-12.7489, -190.822, -91.0224, 0.44", "-13.6979, -193.385, -91.8556, 0.44", "-14.6735, -195.894, -92.5151, 0.44", "-15.9891, -199.111, -93.1618, 0.44", "-16.7322, -200.839, -93.384, 0.44", "-17.5479, -202.644, -93.547, 0.44", "-18.8609, -205.367, -93.6899, 0.44", "-19.8898, -207.393, -93.7492, 0.44", "-20.6856, -208.906, -93.7375, 0.44", "-21.5572, -210.487, -93.6588, 0.44", "-22.2997, -211.81, -93.5751, 0.44" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-14.2432, -143.439, -69.8136, 0.52", "-14.5516, -144.127, -71.2324, 0.52", "-15.1304, -146.249, -75.4166, 0.52", "-15.2787, -146.917, -76.6204, 0.52", "-15.3776, -147.489, -77.5802, 0.52", "-15.4248, -147.81, -78.1021, 0.52", "-15.4816, -148.35, -78.9972, 0.52", "-15.6652, -150.325, -82.1718, 0.52", "-15.7348, -150.865, -82.9615, 0.52", "-15.7989, -151.431, -83.8008, 0.52", "-15.9702, -152.673, -85.6637, 0.52", "-16.2686, -154.453, -88.1869, 0.52", "-16.4016, -155.361, -89.3952, 0.52", "-16.5377, -156.092, -90.2767, 0.52", "-16.8239, -157.825, -92.2079, 0.52", "-16.9378, -158.518, -92.9011, 0.52", "-17.0786, -159.673, -93.8961, 0.52", "-17.2915, -162.041, -95.6683, 0.52", "-17.3678, -163.341, -96.562, 0.52", "-17.4373, -164.457, -97.2532, 0.52", "-17.4969, -165.639, -97.9824, 0.52", "-17.5981, -167.119, -98.9482, 0.52", "-17.6757, -167.767, -99.3958, 0.52", "-17.9318, -169.093, -100.311, 0.52", "-18.2154, -170.291, -101.193, 0.52", "-19.1261, -173.14, -103.402, 0.52", "-19.5199, -174.124, -104.268, 0.52", "-19.8207, -174.684, -104.831, 0.52", "-20.2381, -175.407, -105.72, 0.52", "-20.6151, -176.072, -106.74, 0.52", "-21.2336, -177.065, -108.53, 0.52", "-21.9515, -178.079, -110.559, 0.52", "-22.4059, -178.801, -112.175, 0.52", "-23.1067, -180.037, -114.905, 0.52", "-23.906, -181.48, -118.098, 0.52", "-24.1261, -182.002, -119.258, 0.52", "-24.309, -182.541, -120.369, 0.52", "-24.8175, -184.271, -123.523, 0.52", "-25.0819, -185.442, -125.397, 0.52", "-25.2129, -186.156, -126.274, 0.52", "-25.5683, -189.613, -129.433, 0.52", "-25.6161, -191.118, -130.487, 0.52", "-25.6684, -192.266, -130.975, 0.52", "-25.7916, -193.655, -131.182, 0.52", "-26.2659, -196.656, -131.033, 0.52", "-26.7174, -198.515, -130.705, 0.52", "-27.1554, -199.944, -130.366, 0.52", "-28.747, -204.177, -129.188, 0.52", "-29.4044, -205.648, -128.77, 0.52", "-30.5712, -207.978, -128.134, 0.52", "-31.5812, -209.747, -127.645, 0.52", "-32.9345, -212.002, -127.038, 0.52", "-34.6047, -214.804, -126.419, 0.52", "-35.7808, -217.073, -126.289, 0.52", "-36.8445, -219.162, -126.174, 0.52" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "8.06572, -86.5285, 4.88584, 0.66", "7.31628, -87.7586, 4.48082, 0.66", "6.75881, -88.4461, 4.31541, 0.66", "6.0869, -89.1825, 4.17902, 0.66", "5.46112, -89.8415, 4.06795, 0.66", "4.34707, -90.9519, 3.94843, 0.66", "3.52633, -91.7247, 3.88569, 0.66", "2.06046, -92.9525, 3.83697, 0.66", "0.872147, -93.8593, 3.86609, 0.66", "0.234247, -94.3053, 3.89861, 0.66", "-0.898274, -95.0544, 4.00323, 0.66", "-1.85223, -95.679, 4.1574, 0.66", "-2.48178, -96.1145, 4.26524, 0.66", "-3.49792, -96.8672, 4.37286, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "8.06572, -86.5285, 4.88584, 0.81", "8.06432, -88.676, 4.87699, 0.81", "8.0503, -90.6457, 4.84626, 0.81", "8.00882, -93.2173, 4.79893, 0.81", "7.98087, -94.4932, 4.77551, 0.81", "7.96053, -96.3891, 4.73919, 0.81", "7.97558, -98.5707, 4.69613, 0.81", "7.97306, -100.831, 4.64745, 0.81", "7.97411, -102.955, 4.59626, 0.81", "7.99118, -104.675, 4.57424, 0.81", "8.02992, -106.329, 4.57342, 0.81", "8.11113, -108.758, 4.60714, 0.81", "8.19165, -110.661, 4.6618, 0.81", "8.24259, -111.808, 4.70137, 0.81", "8.30887, -113.135, 4.7562, 0.81", "8.38224, -114.966, 4.85054, 0.81", "8.38647, -116.587, 4.96155, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.92124, 91.3228, -8.33032, 0.52", "-0.472147, 91.6976, -9.27458, 0.52", "1.28796, 92.0509, -9.91061, 0.52", "2.23065, 92.2703, -10.2322, 0.52", "3.64056, 92.5904, -10.6842, 0.52", "5.01182, 92.8903, -11.2452, 0.52", "6.17304, 93.1122, -11.776, 0.52", "7.5815, 93.3071, -12.5079, 0.52", "9.30797, 93.4417, -13.4308, 0.52", "10.2416, 93.455, -13.9235, 0.52", "13.116, 93.3219, -15.4048, 0.52", "14.3798, 93.1479, -16.0156, 0.52", "16.1143, 92.7342, -16.8594, 0.52", "18.3803, 92.0348, -17.921, 0.52", "19.587, 91.6172, -18.441, 0.52", "20.7447, 91.2262, -18.873, 0.52", "22.3471, 90.713, -19.3464, 0.52", "24.0239, 90.2235, -19.8636, 0.52", "25.547, 89.8295, -20.3479, 0.52", "26.9717, 89.4877, -20.8735, 0.52", "28.6723, 89.1141, -21.4696, 0.52", "30.1642, 88.8525, -21.9561, 0.52", "31.0537, 88.7685, -22.2216, 0.52", "32.8144, 88.7099, -22.6888, 0.52", "34.5903, 88.7254, -23.1624, 0.52", "36.3959, 88.7925, -23.6455, 0.52", "37.8387, 88.8364, -24.146, 0.52", "39.488, 88.8563, -24.8389, 0.52", "40.4902, 88.8802, -25.3252, 0.52", "41.1858, 88.9336, -25.7049, 0.52", "42.3987, 89.0444, -26.3946, 0.52", "45.1396, 89.2255, -28.2358, 0.52", "46.0697, 89.2497, -28.9158, 0.52", "47.1689, 89.2718, -29.7454, 0.52", "48.7996, 89.4365, -30.9625, 0.52", "50.1007, 89.6958, -31.8835, 0.52", "52.2924, 90.3188, -33.2792, 0.52", "53.384, 90.6952, -33.8507, 0.52", "54.3468, 91.0466, -34.3366, 0.52", "55.7837, 91.4861, -35.0175, 0.52", "56.7902, 91.7357, -35.4464, 0.52", "57.9612, 91.9666, -35.8673, 0.52", "59.3109, 92.1205, -36.2317, 0.52", "60.6432, 92.1504, -36.7177, 0.52", "62.0485, 91.9999, -37.3298, 0.52", "63.3453, 91.7584, -37.9427, 0.52", "64.8633, 91.4353, -38.6829, 0.52", "65.8552, 91.219, -39.2657, 0.52", "68.391, 90.6681, -40.9042, 0.52", "70.651, 90.26, -42.4366, 0.52", "72.7165, 90.0241, -43.852, 0.52", "74.2385, 89.9202, -44.8773, 0.52", "77.0921, 89.8023, -46.854, 0.52", "78.337, 89.7632, -47.6996, 0.52", "79.6007, 89.761, -48.494, 0.52", "81.0846, 89.8325, -49.4491, 0.52", "82.3764, 89.9345, -50.2521, 0.52", "84.6395, 90.2017, -51.6272, 0.52", "85.6857, 90.3259, -52.2014, 0.52", "87.232, 90.5037, -53.0756, 0.52", "88.2425, 90.6044, -53.6461, 0.52", "89.7323, 90.7396, -54.4577, 0.52", "92.101, 90.9446, -55.6521, 0.52", "93.5101, 91.1047, -56.3029, 0.52", "95.0434, 91.3327, -57.0626, 0.52", "96.0463, 91.5063, -57.5756, 0.52", "97.26, 91.7865, -58.1799, 0.52", "98.2817, 92.0228, -58.6551, 0.52", "99.5609, 92.3224, -59.1825, 0.52", "100.974, 92.6523, -59.7584, 0.52", "102.805, 93.0468, -60.4793, 0.52", "105.212, 93.5193, -61.3762, 0.52", "106.829, 93.7697, -61.9401, 0.52", "108.691, 93.963, -62.5355, 0.52", "110.006, 94.0503, -62.9136, 0.52", "111.759, 94.1542, -63.3841, 0.52", "113.581, 94.2952, -63.8738, 0.52", "114.848, 94.4483, -64.2162, 0.52", "116.451, 94.7775, -64.7159, 0.52", "117.632, 95.1048, -65.131, 0.52", "118.713, 95.4599, -65.5532, 0.52", "120.007, 95.8967, -66.1584, 0.52", "121.092, 96.2672, -66.7334, 0.52", "122.7, 96.765, -67.721, 0.52", "123.981, 97.0586, -68.5961, 0.52", "124.748, 97.1405, -69.1729, 0.52", "126.362, 97.2103, -70.4243, 0.52", "127.193, 97.2247, -71.0658, 0.52", "128.926, 97.24, -72.3618, 0.52", "130.196, 97.2419, -73.2381, 0.52", "132.519, 97.2198, -74.7737, 0.52", "133.962, 97.2136, -75.6794, 0.52", "135.059, 97.2476, -76.3148, 0.52", "135.768, 97.2951, -76.7372, 0.52", "136.91, 97.4496, -77.4823, 0.52", "137.654, 97.6288, -78.0726, 0.52", "138.948, 98.0966, -79.515, 0.52", "139.909, 98.5548, -80.8763, 0.52", "140.977, 99.1889, -82.5771, 0.52", "142.133, 99.9304, -84.5045, 0.52", "143.227, 100.638, -86.5414, 0.52", "144.675, 101.453, -89.5057, 0.52", "145.116, 101.64, -90.5533, 0.52", "145.721, 101.822, -92.0896, 0.52", "146.273, 101.933, -93.458, 0.52", "147.495, 102.152, -96.3233, 0.52", "148.909, 102.406, -99.4025, 0.52", "150.959, 102.946, -103.629, 0.52", "151.875, 103.327, -105.589, 0.52", "152.186, 103.511, -106.238, 0.52", "152.934, 104.097, -107.717, 0.52", "153.558, 104.642, -108.751, 0.52", "155.06, 105.926, -110.806, 0.52", "157.013, 107.465, -113.182, 0.52", "158.039, 108.202, -114.416, 0.52", "160.228, 109.617, -116.932, 0.52", "161.521, 110.378, -118.35, 0.52", "163.033, 111.267, -120.032, 0.52", "164.731, 112.283, -121.981, 0.52", "166.931, 113.73, -124.847, 0.52", "168.1, 114.595, -126.516, 0.52", "168.401, 114.846, -126.954, 0.52", "170.233, 116.611, -129.879, 0.52", "171.905, 118.436, -132.642, 0.52", "173.659, 120.623, -135.673, 0.52", "174.508, 121.928, -137.377, 0.52", "175.341, 123.393, -139.168, 0.52", "176.475, 125.512, -141.65, 0.52", "177.188, 126.917, -143.151, 0.52", "178.548, 129.724, -145.945, 0.52", "179.83, 132.58, -148.92, 0.52", "180.413, 134.035, -150.484, 0.52", "181.37, 136.504, -153.167, 0.52", "181.846, 137.688, -154.45, 0.52", "182.456, 139.069, -155.923, 0.52", "184.105, 142.391, -159.199, 0.52", "184.954, 144.036, -160.662, 0.52", "185.493, 145.132, -161.55, 0.52", "187.172, 148.705, -164.225, 0.52", "188.086, 150.684, -165.6, 0.52", "188.756, 152.153, -166.503, 0.52", "189.728, 154.291, -167.608, 0.52", "190.325, 155.701, -168.3, 0.52", "191.973, 160.147, -170.226, 0.52", "192.95, 163.332, -171.313, 0.52", "193.371, 165.137, -172.008, 0.52", "193.591, 166.45, -172.528, 0.52", "193.744, 167.827, -173.062, 0.52", "193.862, 169.803, -173.851, 0.52", "193.977, 173.677, -175.352, 0.52", "194.153, 179.017, -177.765, 0.52", "194.294, 181.548, -178.982, 0.52", "194.443, 183.538, -180.028, 0.52", "194.845, 188.159, -182.616, 0.52", "195.144, 191.44, -184.611, 0.52", "195.599, 195.79, -187.508, 0.52", "195.882, 197.776, -188.824, 0.52", "196.42, 200.585, -190.773, 0.52", "196.856, 202.392, -192.042, 0.52", "197.736, 205.052, -193.879, 0.52", "199.68, 209.421, -196.909, 0.52", "201.265, 212.19, -198.723, 0.52", "202.863, 214.533, -200.325, 0.52", "204.052, 216.047, -201.44, 0.52", "206.09, 218.527, -203.585, 0.52", "207.459, 220.26, -205.265, 0.52", "208.096, 221.045, -206.106, 0.52", "210.049, 223.645, -209.299, 0.52", "211.583, 226.028, -212.543, 0.52", "213.043, 228.953, -216.786, 0.52", "213.725, 231.101, -220.076, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.92124, 91.3228, -8.33032, 0.81", "-2.50613, 92.3178, -8.5145, 0.81", "-2.15099, 93.3284, -8.71153, 0.81", "-1.96244, 94.038, -8.84335, 0.81", "-1.79637, 94.9383, -8.99644, 0.81", "-1.67107, 95.9235, -9.14727, 0.52", "-1.59555, 96.7954, -9.30747, 0.59", "-1.57012, 97.5553, -9.50321, 0.59", "-1.57639, 98.3002, -9.72331, 0.59", "-1.5881, 99.0108, -9.94451, 0.59", "-1.58716, 99.9096, -10.2328, 0.59", "-1.53408, 101.371, -10.7014, 0.59", "-1.39477, 102.742, -11.1661, 0.59", "-1.1868, 103.823, -11.563, 0.59", "-0.982404, 104.574, -11.8562, 0.59", "-0.789416, 105.159, -12.0938, 0.59", "-0.559478, 105.793, -12.3726, 0.59", "-0.15731, 106.807, -12.8161, 0.59", "0.153046, 107.6, -13.1632, 0.59", "0.40979, 108.316, -13.4863, 0.59", "0.747751, 109.34, -13.9275, 0.59", "1.06837, 110.346, -14.3298, 0.59", "1.30002, 111.044, -14.6091, 0.59", "1.56772, 111.897, -14.9174, 0.59", "1.75141, 112.55, -15.1608, 0.59", "2.02013, 113.554, -15.5982, 0.59", "2.18687, 114.168, -15.8967, 0.59", "2.51318, 115.331, -16.4923, 0.59", "2.77141, 116.242, -16.9918, 0.59", "3.04888, 117.203, -17.5028, 0.59", "3.40984, 118.484, -18.2149, 0.59", "3.53783, 118.979, -18.4974, 0.59", "3.76436, 119.895, -19.0064, 0.59", "4.03465, 120.995, -19.5446, 0.59", "4.49071, 122.605, -20.27, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.30185, 48.8401, 36.7039, 0.52", "5.8994, 49.427, 37.4833, 0.52", "6.43945, 49.9092, 38.0941, 0.52", "6.96822, 50.4209, 38.7295, 0.52", "7.52178, 51.0383, 39.4331, 0.52", "8.39602, 52.2464, 40.7401, 0.52", "8.79124, 52.9387, 41.4239, 0.52", "9.12277, 53.7452, 42.149, 0.52", "9.56914, 55.0512, 43.1364, 0.52", "9.77465, 55.8091, 43.5977, 0.52", "10.0619, 57.1755, 44.2621, 0.52", "10.2234, 58.2899, 44.6811, 0.52", "10.2824, 59.0214, 44.9308, 0.52", "10.3232, 60.1982, 45.2542, 0.52", "10.3796, 60.7455, 45.3291, 0.52", "10.6278, 61.7142, 45.3971, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "5.30185, 48.8401, 36.7039, 0.52", "6.28048, 47.723, 36.9927, 0.52", "7.32567, 46.2975, 37.4563, 0.52", "7.85719, 45.5126, 37.7624, 0.52", "8.32133, 44.8013, 38.1075, 0.52", "9.00468, 43.7274, 38.6476, 0.52", "9.90122, 42.2776, 39.3581, 0.52", "11.0264, 40.3751, 40.306, 0.52", "11.7943, 38.988, 40.9389, 0.52", "12.6778, 37.3796, 41.6554, 0.52", "13.3365, 36.2648, 42.1566, 0.52", "13.9814, 35.3081, 42.5795, 0.52", "14.5834, 34.5833, 42.8574, 0.52", "15.3678, 33.8617, 43.0805, 0.52", "16.1701, 33.3221, 43.2086, 0.52", "16.9242, 32.9988, 43.2778, 0.52", "17.9139, 32.8369, 43.3955, 0.52", "18.6524, 32.8115, 43.493, 0.52", "19.6142, 32.8869, 43.6312, 0.52", "20.3781, 33.0316, 43.7495, 0.52", "21.1723, 33.2501, 43.8796, 0.52", "22.2281, 33.6583, 44.0645, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-20.5938, 61.0214, 5.79545, 0.44", "-22.9764, 61.3748, 5.71812, 0.44", "-24.0204, 61.5708, 5.62325, 0.44", "-25.4558, 61.8687, 5.45027, 0.44", "-26.6776, 62.1463, 5.27472, 0.44", "-28.5421, 62.5566, 4.96079, 0.44", "-29.9325, 62.8166, 4.69716, 0.44", "-31.5401, 63.0463, 4.34889, 0.44", "-32.0516, 63.1018, 4.24216, 0.44", "-33.0286, 63.1928, 4.06928, 0.44", "-34.4799, 63.3589, 3.9869, 0.44", "-35.7095, 63.4791, 3.99577, 0.44", "-37.5811, 63.5835, 4.12992, 0.44", "-38.6292, 63.6046, 4.28279, 0.44", "-40.1027, 63.6402, 4.59458, 0.44", "-41.6491, 63.7233, 5.09635, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-20.5938, 61.0214, 5.79545, 0.52", "-22.5152, 61.6535, 5.73656, 0.52", "-23.6362, 61.9967, 5.70844, 0.52", "-24.565, 62.2929, 5.7121, 0.52", "-26.1143, 62.8427, 5.73822, 0.52", "-27.1906, 63.2342, 5.76133, 0.52", "-28.7578, 63.7996, 5.75475, 0.52", "-30.0247, 64.2119, 5.72959, 0.52", "-31.1919, 64.6078, 5.68688, 0.52", "-32.5263, 65.1349, 5.61456, 0.52", "-34.0958, 65.8939, 5.50118, 0.52", "-35.1207, 66.4701, 5.41209, 0.52", "-35.8865, 66.9345, 5.33596, 0.52", "-37.0649, 67.6489, 5.20992, 0.52", "-38.7876, 68.7284, 5.0185, 0.52", "-39.8786, 69.4557, 4.91608, 0.52", "-41.2777, 70.4648, 4.85142, 0.52", "-42.0591, 71.0479, 4.85148, 0.52", "-43.1932, 71.9189, 4.88308, 0.52", "-44.2126, 72.7249, 4.94945, 0.52", "-45.3721, 73.6755, 5.0672, 0.52", "-46.6804, 74.7409, 5.23084, 0.52", "-47.716, 75.567, 5.42751, 0.52", "-48.5931, 76.2375, 5.63301, 0.52", "-49.9013, 77.1257, 5.75603, 0.52", "-50.2495, 77.3239, 5.75495, 0.52", "-51.8024, 78.0534, 5.44266, 0.52", "-53.274, 78.6124, 4.79854, 0.52", "-53.9002, 78.7982, 4.37373, 0.52", "-57.6742, 79.595, 1.32423, 0.52", "-59.0416, 79.8031, 0.110706, 0.52", "-60.7334, 80.0312, -1.42683, 0.52", "-61.7198, 80.1589, -2.42138, 0.52", "-63.3441, 80.4142, -4.1239, 0.52", "-64.1852, 80.5896, -5.0125, 0.52", "-64.6587, 80.7295, -5.5024, 0.52", "-65.4759, 80.9778, -6.40282, 0.52", "-67.3236, 81.5947, -8.37824, 0.52", "-68.7342, 82.1587, -9.9163, 0.52", "-70.1221, 82.8518, -11.5368, 0.52", "-71.2116, 83.5128, -12.9967, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "61.2004, -81.8287, 23.8032, 0.37", "61.87, -80.6206, 23.4812, 0.37", "62.5431, -79.4063, 23.1575, 0.37", "62.7156, -79.0949, 23.0745, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "61.2004, -81.8287, 23.8032, 0.37", "62.4757, -81.7457, 23.9017, 0.37", "63.1296, -81.7574, 23.9398, 0.37", "64.2575, -81.9085, 23.9915, 0.37", "65.7906, -82.2381, 24.0178, 0.37", "67.0961, -82.5826, 24.0089, 0.37", "68.4035, -83.018, 24.0305, 0.37", "69.4573, -83.5005, 24.0716, 0.37", "70.5146, -84.0785, 24.1217, 0.37", "71.5211, -84.7588, 24.1685, 0.37", "72.0403, -85.1831, 24.1727, 0.37", "73.3756, -86.4406, 24.2087, 0.37", "74.5372, -87.6119, 24.2034, 0.37" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "42.4055, -52.3658, -1.47596, 0.44", "43.0772, -52.5386, -1.59374, 0.44", "43.7405, -52.7229, -1.71195, 0.44", "44.6455, -52.9742, -1.87326, 0.44", "45.3908, -53.1813, -2.00611, 0.44", "46.9896, -53.6253, -2.29107, 0.44", "48.0341, -53.9155, -2.47725, 0.44", "49.038, -54.2773, -2.66664, 0.44" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "42.4055, -52.3658, -1.47596, 0.44", "42.0773, -51.3519, -1.48076, 0.44", "41.504, -49.5808, -1.48914, 0.44", "41.2359, -48.7528, -1.49306, 0.44" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-3.49792, -96.8672, 4.37286, 0.52", "-4.44805, -97.1717, 4.22643, 0.52", "-5.18148, -97.3696, 4.1959, 0.52", "-5.84991, -97.549, 4.19289, 0.52", "-6.57337, -97.7715, 4.20369, 0.52", "-7.45766, -98.1025, 4.29431, 0.52", "-8.11109, -98.3861, 4.3934, 0.52", "-9.26524, -98.9503, 4.62379, 0.52", "-9.7746, -99.2227, 4.74853, 0.52", "-10.2247, -99.4909, 4.86974, 0.52", "-11.3828, -100.249, 5.1702, 0.52", "-11.8007, -100.537, 5.23839, 0.52", "-12.4284, -100.965, 5.24898, 0.52", "-13.0197, -101.326, 5.19271, 0.52", "-13.6599, -101.655, 5.14937, 0.52", "-14.3418, -101.948, 5.09998, 0.52", "-15.296, -102.317, 5.00996, 0.52", "-15.815, -102.516, 4.97857, 0.52", "-16.844, -102.911, 4.94266, 0.52", "-18.1799, -103.468, 4.94619, 0.52", "-18.9999, -103.813, 4.96875, 0.52", "-19.595, -104.037, 4.99243, 0.52", "-20.1092, -104.198, 5.01505, 0.52", "-20.895, -104.399, 5.00774, 0.52", "-21.5888, -104.563, 4.93895, 0.52", "-22.3479, -104.747, 4.85917, 0.52", "-23.1724, -104.978, 4.80905, 0.52", "-23.6601, -105.132, 4.85452, 0.52", "-24.1826, -105.319, 4.97897, 0.52", "-24.7661, -105.57, 5.18491, 0.52", "-25.762, -106.042, 5.60268, 0.52", "-26.4165, -106.38, 5.92075, 0.52", "-27.9587, -107.185, 6.67927, 0.52", "-28.5895, -107.487, 6.96102, 0.52", "-28.9302, -107.622, 7.08223, 0.52", "-29.5035, -107.795, 7.1963, 0.52", "-30.007, -107.909, 7.20634, 0.52", "-30.7666, -108.072, 7.14395, 0.52", "-31.5296, -108.274, 6.99309, 0.52", "-32.3523, -108.539, 6.81826, 0.52", "-33.361, -108.952, 6.6124, 0.52", "-33.8286, -109.196, 6.52304, 0.52", "-34.5812, -109.659, 6.42071, 0.52", "-35.3801, -110.179, 6.36251, 0.52", "-35.8233, -110.457, 6.34886, 0.52", "-36.4731, -110.824, 6.341, 0.52", "-36.9723, -111.076, 6.33687, 0.52", "-38.0732, -111.578, 6.31539, 0.52", "-38.8929, -111.923, 6.27775, 0.52", "-39.889, -112.335, 6.18369, 0.52", "-40.6362, -112.669, 6.07276, 0.52", "-41.0821, -112.893, 6.01616, 0.52", "-41.4166, -113.086, 5.97339, 0.52", "-42.3472, -113.7, 5.85026, 0.52", "-43.4379, -114.466, 5.68596, 0.52", "-44.3606, -115.132, 5.53229, 0.52", "-46.6478, -116.827, 5.14397, 0.52", "-47.8445, -117.735, 4.93571, 0.52", "-48.3287, -118.124, 4.84067, 0.52", "-49.2251, -118.894, 4.64646, 0.52", "-49.7345, -119.366, 4.52355, 0.52", "-50.4234, -120.02, 4.28481, 0.52", "-51.0684, -120.64, 3.96439, 0.52", "-52.0679, -121.492, 3.44223, 0.52", "-52.5966, -121.877, 3.16159, 0.52", "-53.3976, -122.372, 2.81862, 0.52", "-54.6992, -122.958, 2.35094, 0.52", "-55.2684, -123.092, 2.20309, 0.52", "-55.9184, -123.128, 2.13782, 0.52", "-56.7058, -123.086, 2.1757, 0.52", "-58.2956, -122.923, 2.36363, 0.52", "-58.9283, -122.84, 2.51769, 0.52", "-59.8803, -122.71, 2.90971, 0.52", "-61.0194, -122.551, 3.49096, 0.52", "-61.7359, -122.45, 3.93095, 0.52" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-3.49792, -96.8672, 4.37286, 0.59", "-4.06187, -97.6155, 4.15746, 0.59", "-4.53789, -98.3197, 3.97631, 0.59", "-4.92344, -98.9962, 3.79845, 0.59", "-5.23465, -99.6486, 3.61225, 0.59", "-5.58838, -100.433, 3.3649, 0.59", "-6.06991, -101.444, 3.01406, 0.59", "-6.43077, -102.13, 2.73762, 0.59", "-6.90551, -102.992, 2.35842, 0.59", "-7.33672, -103.749, 2.03013, 0.59", "-7.65626, -104.302, 1.76606, 0.59", "-8.06312, -104.956, 1.36579, 0.59", "-8.3855, -105.407, 1.02849, 0.59", "-8.6698, -105.748, 0.74314, 0.59", "-9.22863, -106.38, 0.218678, 0.59", "-9.91787, -107.197, -0.359588, 0.59", "-10.5679, -108.084, -0.838063, 0.59", "-10.9008, -108.593, -1.0489, 0.59", "-11.3945, -109.409, -1.26414, 0.59", "-11.7978, -110.143, -1.36006, 0.59", "-12.274, -111.099, -1.36708, 0.59", "-12.6877, -111.967, -1.27373, 0.52", "-12.9818, -112.628, -1.16661, 0.52", "-13.4172, -113.681, -1.00789, 0.52", "-13.731, -114.511, -0.905164, 0.52", "-14.0232, -115.249, -0.828135, 0.52", "-14.2121, -115.74, -0.795446, 0.52", "-14.4546, -116.385, -0.765406, 0.52", "-14.7752, -117.196, -0.736122, 0.52", "-15.0941, -117.876, -0.744413, 0.52", "-15.6557, -118.878, -0.77313, 0.52", "-15.8876, -119.261, -0.788661, 0.52", "-16.0587, -119.551, -0.801603, 0.52", "-16.4556, -120.298, -0.837609, 0.52", "-16.8259, -121.086, -0.888654, 0.52", "-17.0513, -121.607, -0.941532, 0.52", "-17.2088, -122.019, -1.00704, 0.52", "-17.3754, -122.452, -1.07984, 0.52", "-17.6757, -123.239, -1.2158, 0.52", "-17.9145, -123.883, -1.32683, 0.52", "-18.1465, -124.529, -1.43659, 0.52", "-18.3768, -125.203, -1.54701, 0.52", "-18.6847, -126.13, -1.68536, 0.52", "-19.1046, -127.349, -1.84984, 0.52", "-19.4121, -128.196, -1.95436, 0.52", "-19.6083, -128.734, -2.01315, 0.52", "-19.9495, -129.671, -2.10282, 0.52", "-20.3302, -130.706, -2.18912, 0.52", "-20.6925, -131.753, -2.26656, 0.52", "-20.8447, -132.224, -2.29903, 0.52", "-21.2121, -133.369, -2.38804, 0.52", "-21.5238, -134.293, -2.46182, 0.52", "-21.8392, -135.191, -2.53948, 0.52", "-22.1174, -136.021, -2.61313, 0.52", "-22.4393, -137.068, -2.70016, 0.52", "-22.831, -138.331, -2.8048, 0.52", "-23.0873, -139.113, -2.87073, 0.52", "-23.3282, -139.787, -2.93391, 0.52", "-23.5578, -140.379, -2.99767, 0.52", "-23.7844, -140.896, -3.06612, 0.52", "-24.1672, -141.676, -3.19224, 0.52", "-24.5583, -142.465, -3.33484, 0.52", "-24.9066, -143.17, -3.46873, 0.52", "-25.3135, -143.977, -3.62345, 0.52", "-25.6122, -144.561, -3.73565, 0.52", "-25.8694, -145.094, -3.83079, 0.52", "-26.1799, -145.826, -3.94237, 0.52", "-26.3258, -146.171, -3.99186, 0.52" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "8.38647, -116.587, 4.96155, 0.59", "8.92672, -118.433, 4.98328, 0.59", "9.19521, -119.524, 5.03171, 0.59", "9.46469, -120.853, 5.10569, 0.52", "9.75488, -122.495, 5.20233, 0.52", "9.95946, -123.836, 5.28311, 0.52", "10.2387, -125.624, 5.38901, 0.52", "10.3845, -126.631, 5.47539, 0.52", "10.5416, -127.877, 5.56218, 0.52", "10.6744, -129.074, 5.63456, 0.52", "10.9304, -131.535, 5.75626, 0.52", "11.1429, -133.552, 5.82477, 0.52", "11.33, -135.114, 5.83933, 0.44", "11.5084, -136.29, 5.84659, 0.44", "11.7051, -137.369, 5.84968, 0.44", "11.8559, -138.091, 5.84861, 0.44", "12.2049, -139.627, 5.83576, 0.44", "12.5562, -141.196, 5.81594, 0.44", "12.8867, -142.627, 5.79634, 0.44", "13.1318, -143.773, 5.78301, 0.44", "13.2324, -144.302, 5.8041, 0.44", "13.438, -145.46, 5.86158, 0.44", "13.626, -146.792, 5.94939, 0.44", "13.719, -147.982, 6.05549, 0.44", "13.7534, -149.82, 6.25013, 0.44", "13.7062, -151.58, 6.47209, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "8.38647, -116.587, 4.96155, 0.59", "8.48053, -118.031, 4.9838, 0.59", "8.5503, -119.314, 5.00117, 0.59", "8.61425, -120.801, 5.02206, 0.59", "8.64023, -121.635, 5.03519, 0.59", "8.69061, -122.999, 5.0514, 0.59", "8.7373, -124.165, 5.05042, 0.59", "8.8392, -125.868, 5.00821, 0.59", "8.93554, -127.145, 4.95907, 0.59", "9.02629, -128.557, 4.83887, 0.59", "9.10372, -129.939, 4.66497, 0.59", "9.14924, -131.107, 4.45558, 0.59", "9.16784, -132.096, 4.2328, 0.59", "9.15962, -132.741, 4.06105, 0.59", "9.10179, -134.429, 3.50902, 0.59", "9.03753, -135.406, 3.15972, 0.59", "8.89968, -136.541, 2.77882, 0.59", "8.7933, -137.181, 2.60134, 0.59", "8.66774, -137.79, 2.47552, 0.59", "8.38862, -139.039, 2.31168, 0.59", "8.13566, -140.217, 2.20427, 0.59", "7.87715, -141.516, 2.0325, 0.59", "7.66433, -142.689, 1.85762, 0.59", "7.44962, -143.89, 1.6636, 0.59", "7.25588, -144.908, 1.50794, 0.59", "6.96916, -146.306, 1.32642, 0.59", "6.70264, -147.567, 1.15631, 0.59", "6.50018, -148.56, 1.02687, 0.59", "6.32759, -149.48, 0.924882, 0.59", "6.13934, -150.677, 0.826848, 0.59", "6.02376, -151.754, 0.793938, 0.59", "5.98526, -152.697, 0.818597, 0.59", "6.00847, -153.705, 0.867147, 0.59", "6.10333, -154.893, 0.909755, 0.59", "6.20662, -155.926, 0.940023, 0.59", "6.33404, -157.052, 0.967238, 0.59", "6.45199, -158.239, 0.996413, 0.59", "6.50227, -159.068, 0.990923, 0.59", "6.48241, -160.295, 0.962112, 0.59", "6.37295, -161.446, 0.922979, 0.59", "6.26648, -162.112, 0.872583, 0.59", "6.02597, -163.416, 0.722087, 0.59", "5.81764, -164.605, 0.561799, 0.59", "5.63151, -165.853, 0.358339, 0.59", "5.54037, -166.729, 0.20175, 0.59", "5.47215, -168.07, -0.0336635, 0.59", "5.44846, -169.055, -0.189703, 0.59", "5.438, -170.269, -0.351154, 0.59", "5.42244, -171.649, -0.517245, 0.59", "5.40103, -172.986, -0.736218, 0.59", "5.36466, -174.641, -1.04713, 0.59", "5.34682, -175.919, -1.3054, 0.59", "5.34086, -176.769, -1.50481, 0.59", "5.35433, -178.087, -1.89612, 0.59", "5.39355, -179.556, -2.39885, 0.59", "5.4029, -180.172, -2.63552, 0.59", "5.39585, -180.968, -2.96715, 0.59", "5.38626, -181.497, -3.17923, 0.59", "5.34842, -182.742, -3.64054, 0.59", "5.29329, -183.648, -3.91404, 0.59", "5.18995, -184.336, -4.09406, 0.59", "4.82015, -185.7, -4.46993, 0.59", "4.47753, -186.614, -4.71312, 0.59", "4.08383, -187.49, -4.91818, 0.59", "3.71167, -188.2, -5.05086, 0.59", "2.99372, -189.389, -5.2834, 0.59", "2.11163, -190.722, -5.52888, 0.59", "1.64512, -191.401, -5.63241, 0.59", "0.980969, -192.399, -5.77042, 0.59", "0.622489, -193.002, -5.83721, 0.59", "-0.177354, -194.617, -5.98782, 0.59", "-0.409995, -195.196, -6.05007, 0.59", "-0.742623, -196.213, -6.17712, 0.59", "-0.942707, -196.945, -6.29071, 0.59", "-1.12503, -197.805, -6.43844, 0.59", "-1.28057, -198.79, -6.62809, 0.59", "-1.51896, -200.626, -6.96862, 0.59", "-1.67586, -201.596, -7.17999, 0.59", "-1.81557, -202.319, -7.3501, 0.59", "-2.0108, -203.195, -7.55602, 0.59", "-2.38161, -204.546, -7.84769, 0.59", "-2.70384, -205.478, -8.01212, 0.59", "-3.26769, -206.795, -8.15015, 0.59", "-3.60253, -207.424, -8.19776, 0.59", "-3.90629, -207.898, -8.22606, 0.59", "-4.56404, -208.808, -8.2495, 0.59", "-5.12815, -209.57, -8.23367, 0.59", "-5.57218, -210.244, -8.21824, 0.59", "-5.86149, -210.773, -8.22395, 0.59", "-6.44268, -212.061, -8.30873, 0.59", "-6.75331, -212.914, -8.39493, 0.59", "-6.98397, -213.662, -8.51253, 0.59", "-7.30339, -214.834, -8.72777, 0.59", "-7.59155, -215.938, -8.93736, 0.59", "-7.79516, -216.766, -9.09139, 0.59", "-7.94848, -217.442, -9.19586, 0.59", "-8.2164, -218.628, -9.35501, 0.52", "-8.42438, -219.409, -9.42243, 0.52", "-8.65654, -220.109, -9.43343, 0.52", "-8.92327, -220.791, -9.41585, 0.52", "-9.45948, -222.091, -9.3709, 0.52", "-9.89661, -223.151, -9.31901, 0.52", "-10.3706, -224.241, -9.22867, 0.52", "-10.9476, -225.447, -9.17011, 0.52", "-11.4674, -226.511, -9.14594, 0.52", "-11.8731, -227.355, -9.14408, 0.52", "-12.3289, -228.336, -9.18119, 0.52", "-13.0046, -229.946, -9.29243, 0.52", "-13.6246, -231.671, -9.4985, 0.52", "-14.0191, -232.941, -9.68793, 0.52", "-14.2594, -233.769, -9.81519, 0.52", "-14.6656, -235.234, -10.0636, 0.52", "-14.8588, -236.018, -10.2011, 0.52", "-15.1454, -237.369, -10.4124, 0.52", "-15.3106, -238.151, -10.49, 0.52", "-15.4904, -238.896, -10.5323, 0.52", "-15.7212, -239.815, -10.5424, 0.52", "-15.9972, -240.982, -10.4991, 0.52", "-16.3197, -242.337, -10.454, 0.52", "-16.5385, -243.225, -10.4147, 0.52", "-16.911, -244.631, -10.4045, 0.52", "-17.1051, -245.354, -10.4219, 0.52", "-17.3346, -246.2, -10.461, 0.52", "-17.6158, -247.297, -10.5313, 0.52", "-17.94, -248.673, -10.6337, 0.52", "-18.2218, -249.892, -10.7366, 0.52", "-18.4285, -250.817, -10.8138, 0.52", "-18.7402, -252.261, -10.9149, 0.52", "-18.9784, -253.385, -10.9679, 0.52", "-19.1333, -254.187, -10.9815, 0.52", "-19.4501, -255.835, -11.0716, 0.52", "-19.6579, -256.889, -11.1509, 0.52", "-19.8464, -257.788, -11.2466, 0.52", "-20.0353, -258.641, -11.3585, 0.52", "-20.2796, -259.689, -11.5394, 0.52", "-20.6645, -261.373, -11.861, 0.52", "-20.7936, -261.96, -11.9744, 0.52", "-20.9414, -262.697, -12.1168, 0.52", "-21.074, -263.497, -12.2579, 0.52", "-21.2288, -264.849, -12.4679, 0.52", "-21.3332, -266.257, -12.6374, 0.52", "-21.3773, -267.124, -12.6954, 0.52", "-21.4593, -268.368, -12.7555, 0.52", "-21.5648, -269.593, -12.7766, 0.52", "-21.6593, -270.418, -12.7562, 0.52", "-21.7471, -271.051, -12.6751, 0.52", "-21.9166, -271.934, -12.4952, 0.52", "-22.1609, -272.879, -12.1953, 0.52", "-22.4086, -273.63, -11.8795, 0.52", "-22.7413, -274.548, -11.4344, 0.52", "-23.1792, -275.767, -10.8232, 0.52", "-23.4024, -276.424, -10.4975, 0.52", "-23.6959, -277.412, -10.0415, 0.52", "-23.9245, -278.391, -9.64004, 0.52", "-24.0573, -279.096, -9.43028, 0.52", "-24.2385, -280.074, -9.27908, 0.52", "-24.3698, -280.751, -9.26113, 0.52", "-24.5741, -281.733, -9.35374, 0.52", "-24.8792, -283.117, -9.6096, 0.52", "-25.2034, -284.431, -9.90143, 0.52", "-25.5722, -285.749, -10.2169, 0.52", "-25.837, -286.551, -10.4321, 0.52", "-26.4042, -288.041, -10.8464, 0.52", "-27.0278, -289.476, -11.2279, 0.52", "-27.4145, -290.261, -11.4072, 0.52", "-27.712, -290.816, -11.498, 0.52", "-28.387, -292.039, -11.6312, 0.52", "-28.7405, -292.64, -11.7092, 0.52", "-29.358, -293.613, -11.9125, 0.52", "-29.8311, -294.312, -12.1021, 0.52", "-30.39, -295.141, -12.3702, 0.52", "-30.7823, -295.732, -12.5938, 0.52", "-31.5207, -296.879, -13.1043, 0.52", "-32.3625, -298.191, -13.8885, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "4.49071, 122.605, -20.27, 0.59", "5.77642, 123.403, -21.2829, 0.59", "6.74231, 123.97, -21.9852, 0.59", "7.84352, 124.601, -22.7216, 0.59", "8.90928, 125.203, -23.3788, 0.59", "10.4374, 126.019, -24.3629, 0.59", "11.8791, 126.768, -25.3418, 0.59", "13.4983, 127.64, -26.451, 0.59", "14.5942, 128.276, -27.3575, 0.59", "15.684, 128.97, -28.4191, 0.59", "16.861, 129.91, -29.9053, 0.52", "17.6966, 130.821, -31.2572, 0.52", "18.1056, 131.524, -32.2025, 0.52", "18.9152, 133.901, -35.0492, 0.52", "19.0261, 134.863, -36.0499, 0.52", "18.8188, 136.89, -37.9352, 0.52", "18.5898, 137.94, -38.7532, 0.52", "18.1551, 139.37, -39.8191, 0.52", "17.8302, 140.347, -40.4964, 0.52", "17.1659, 142.345, -41.7045, 0.52", "16.1453, 145.366, -43.521, 0.52", "15.6771, 146.876, -44.3966, 0.52", "14.885, 149.73, -46.0974, 0.52", "14.5393, 151.185, -46.9672, 0.52", "14.3535, 152.174, -47.5191, 0.52", "14.0075, 154.365, -48.6423, 0.52", "13.86, 155.214, -49.0596, 0.52", "13.5339, 156.684, -49.8031, 0.52", "13.0605, 158.396, -50.6053, 0.52", "12.6319, 159.569, -51.1921, 0.52", "11.7796, 161.502, -52.1253, 0.52", "10.4652, 164.06, -53.4298, 0.52", "9.83339, 165.155, -53.9976, 0.52", "9.05442, 166.348, -54.7082, 0.52", "7.70813, 167.922, -56.6101, 0.52", "6.85081, 168.826, -58.0158, 0.52", "5.62151, 170.045, -60.3116, 0.52", "4.93578, 170.727, -61.7236, 0.52", "3.47426, 172.234, -65.0475, 0.52", "-1.16249, 177.373, -76.6334, 0.52", "-1.65887, 177.982, -77.9582, 0.52", "-2.77825, 179.547, -81.1213, 0.52", "-3.3798, 180.567, -82.9066, 0.52", "-4.19109, 182.379, -85.5452, 0.52", "-4.46055, 183.382, -86.5266, 0.52", "-4.91234, 187.516, -88.7625, 0.52", "-4.99745, 189.369, -89.6022, 0.52", "-4.97331, 191.568, -90.3664, 0.52", "-4.83343, 193.835, -91.0236, 0.52", "-4.45523, 196.821, -91.6582, 0.52", "-4.10408, 198.721, -91.9881, 0.52", "-3.44884, 201.489, -92.3213, 0.52", "-3.07567, 203.087, -92.4881, 0.52", "-2.56956, 205.44, -92.6964, 0.52", "-2.03681, 208.226, -92.8947, 0.52", "-1.57555, 210.912, -93.063, 0.52", "-1.25238, 213.14, -93.1813, 0.52", "-0.996574, 215.309, -93.2767, 0.52", "-0.720832, 217.834, -93.3792, 0.52", "-0.453025, 220.37, -93.478, 0.52", "-0.19309, 222.709, -93.5725, 0.52", "0.0633278, 224.716, -93.6361, 0.52", "0.369372, 226.714, -93.6704, 0.52", "0.80204, 229.056, -93.6701, 0.52", "1.199, 231.054, -93.659, 0.52", "1.65405, 233.319, -93.6266, 0.52", "2.15546, 235.81, -93.5477, 0.52", "2.6875, 238.332, -93.4213, 0.52", "3.11606, 240.307, -93.2703, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "4.49071, 122.605, -20.27, 0.59", "3.43337, 123.658, -20.128, 0.59", "2.49333, 124.54, -20.02, 0.59", "1.29762, 125.683, -19.9399, 0.59", "0.489007, 126.525, -19.9097, 0.59", "-0.399148, 127.555, -19.872, 0.59", "-1.01399, 128.369, -19.8452, 0.59", "-1.86479, 129.723, -19.7745, 0.59", "-2.35575, 130.807, -19.7204, 0.59", "-2.5851, 132.082, -19.6693, 0.59", "-2.48466, 133.213, -19.6024, 0.59", "-2.14316, 134.358, -19.5214, 0.59", "-1.57169, 135.553, -19.4282, 0.59", "-1.07808, 136.32, -19.3662, 0.59", "-0.412022, 137.207, -19.2945, 0.59", "0.0990495, 137.842, -19.2687, 0.59", "0.546268, 138.393, -19.2415, 0.59", "1.12932, 139.157, -19.193, 0.59", "1.78637, 140.204, -19.4424, 0.59", "2.12256, 140.874, -19.7305, 0.59", "2.52475, 141.892, -20.2966, 0.59", "2.92291, 143.244, -21.2721, 0.59", "3.09346, 144.074, -21.935, 0.59", "3.62145, 148.529, -25.6951, 0.59", "3.64946, 149.298, -26.343, 0.59", "3.63186, 149.972, -26.8858, 0.59", "3.47407, 152.038, -28.4553, 0.59", "3.35304, 153.025, -29.1284, 0.59", "3.26294, 153.631, -29.3985, 0.59", "3.06105, 155.058, -29.5138, 0.44", "2.91607, 156.265, -29.5061, 0.44", "2.82183, 157.157, -29.3925, 0.44", "2.75033, 157.969, -29.1605, 0.44", "2.67456, 159.638, -28.6084, 0.44", "2.67585, 161.217, -28.0679, 0.44", "2.70354, 161.964, -27.8193, 0.44", "2.79087, 163.524, -27.3146, 0.44", "2.87974, 164.905, -26.8647, 0.44", "2.96811, 166.276, -26.4413, 0.44", "3.01427, 167.378, -26.1508, 0.44", "3.00903, 168.486, -25.937, 0.44", "2.94196, 170.057, -25.6963, 0.44", "2.85029, 171.276, -25.583, 0.44", "2.73925, 172.321, -25.5161, 0.44", "2.52373, 173.954, -25.4025, 0.44", "2.39365, 174.866, -25.329, 0.44", "2.27704, 175.704, -25.2477, 0.44", "2.09493, 177.202, -25.098, 0.44", "1.9635, 178.79, -24.9557, 0.44", "1.91866, 179.783, -24.8589, 0.44", "1.87596, 181.156, -24.7228, 0.44", "1.84041, 182.47, -24.6039, 0.44", "1.81677, 183.683, -24.5137, 0.44", "1.81579, 184.499, -24.4854, 0.44", "1.83006, 185.853, -24.5236, 0.44", "1.8464, 187.383, -24.6706, 0.44", "1.85888, 188.656, -24.8633, 0.44", "1.851, 190.088, -25.127, 0.44", "1.83038, 191.603, -25.4192, 0.44", "1.78034, 193.279, -25.747, 0.44", "1.72239, 195.175, -26.1158, 0.44", "1.69502, 196.44, -26.3515, 0.44", "1.66233, 197.537, -26.5368, 0.44", "1.59179, 199.276, -26.7782, 0.44", "1.54095, 200.255, -26.8718, 0.44", "1.47134, 201.623, -26.9542, 0.44", "1.41798, 202.829, -26.999, 0.44", "1.3797, 203.855, -27.0707, 0.44", "1.34217, 205.446, -27.2246, 0.44", "1.31874, 206.908, -27.3964, 0.44", "1.30447, 207.896, -27.5247, 0.44", "1.26094, 209.236, -27.7086, 0.44", "1.19185, 210.97, -27.9512, 0.44", "1.13012, 212.639, -28.1835, 0.44", "1.08021, 213.687, -28.323, 0.44", "0.987579, 215.0, -28.4764, 0.44", "0.872353, 216.266, -28.5952, 0.44", "0.752922, 217.393, -28.6607, 0.44", "0.646513, 218.375, -28.7089, 0.44", "0.565986, 219.219, -28.7705, 0.44", "0.469087, 220.826, -29.007, 0.44", "0.460963, 222.017, -29.2593, 0.44", "0.513866, 223.137, -29.5154, 0.44", "0.69822, 224.735, -29.8913, 0.44", "0.84586, 225.547, -30.0758, 0.44", "1.31205, 227.454, -30.486, 0.44", "1.49803, 228.11, -30.6115, 0.44", "1.88178, 229.5, -30.8109, 0.44", "2.21599, 230.845, -30.9354, 0.44", "2.52736, 232.318, -30.9838, 0.44", "2.64671, 232.994, -30.9904, 0.44", "2.78981, 234.072, -30.9747, 0.44", "2.98553, 236.042, -30.9807, 0.44", "3.09367, 237.408, -31.0203, 0.44", "3.15049, 238.178, -31.0365, 0.44", "3.26799, 239.257, -31.0543, 0.44", "3.44315, 240.401, -31.0704, 0.44", "3.73732, 241.811, -31.0884, 0.44", "4.11201, 243.281, -31.1071, 0.44", "4.23252, 243.709, -31.1129, 0.44", "4.5923, 244.975, -31.137, 0.44", "4.85991, 245.951, -31.1492, 0.44", "5.1084, 246.909, -31.1593, 0.44", "5.43234, 248.392, -31.1783, 0.44", "5.66158, 249.659, -31.1852, 0.44", "5.88238, 251.162, -31.1884, 0.44", "5.99919, 252.206, -31.1874, 0.44", "6.0709, 252.975, -31.1867, 0.44", "6.22561, 254.654, -31.1913, 0.44", "6.29618, 255.401, -31.2156, 0.44", "6.42876, 256.689, -31.2972, 0.44", "6.49507, 257.298, -31.3509, 0.44", "6.60898, 258.271, -31.4755, 0.44", "6.7578, 259.488, -31.6543, 0.44", "6.94233, 261.111, -31.911, 0.44", "7.09479, 262.591, -32.1496, 0.44", "7.2158, 263.788, -32.3436, 0.44", "7.38806, 265.337, -32.5861, 0.44", "7.51595, 266.296, -32.7273, 0.44", "7.74577, 267.644, -32.9009, 0.44", "7.90529, 268.382, -32.9719, 0.44", "8.08759, 269.169, -33.0348, 0.44", "8.35045, 270.319, -33.1039, 0.44", "8.61017, 271.401, -33.1508, 0.44", "9.03219, 273.016, -33.2216, 0.44", "9.54708, 274.898, -33.3051, 0.44", "10.1144, 276.932, -33.4482, 0.44", "10.69, 278.962, -33.6132, 0.44", "11.1283, 280.486, -33.7257, 0.44", "11.6532, 282.299, -33.8479, 0.44", "12.1416, 283.918, -33.9479, 0.44", "12.7153, 285.708, -33.9678, 0.44", "13.085, 286.859, -33.8977, 0.44", "13.4454, 287.971, -33.6985, 0.44", "13.7603, 289.018, -33.4094, 0.44", "14.2046, 290.649, -32.8306, 0.44", "14.7426, 292.785, -31.8803, 0.44", "15.2201, 294.782, -30.8687, 0.44", "15.6376, 296.624, -29.8995, 0.44", "15.8512, 297.587, -29.3729, 0.44", "16.0217, 298.377, -28.8878, 0.44", "16.2441, 299.506, -28.1049, 0.44" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-41.6491, 63.7233, 5.09635, 0.44", "-43.2021, 64.509, 6.24152, 0.44", "-43.9771, 64.7639, 6.86408, 0.44", "-44.3742, 64.854, 7.20271, 0.44", "-44.9016, 64.9153, 7.62427, 0.44", "-45.6016, 64.9251, 8.10568, 0.44", "-48.4383, 64.6514, 9.78956, 0.44", "-48.7927, 64.5147, 9.98431, 0.44", "-49.17, 64.3267, 10.2044, 0.44", "-49.9855, 63.8472, 10.7059, 0.44", "-50.8194, 63.27, 11.2421, 0.44", "-51.4848, 62.7194, 11.6116, 0.44", "-52.4316, 61.7625, 11.5785, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-41.6491, 63.7233, 5.09635, 0.44", "-42.2267, 64.0023, 4.89667, 0.44", "-42.8601, 64.2841, 4.67659, 0.44", "-43.6045, 64.5862, 4.50165, 0.44", "-44.2832, 64.831, 4.38625, 0.44", "-45.097, 65.1148, 4.27526, 0.44", "-45.7208, 65.3425, 4.20157, 0.44", "-46.243, 65.5505, 4.18362, 0.44", "-47.2671, 66.0167, 4.23333, 0.44", "-47.9049, 66.3511, 4.31462, 0.44", "-48.3242, 66.5776, 4.389, 0.44", "-48.8439, 66.8833, 4.49839, 0.44", "-49.674, 67.4389, 4.68981, 0.44", "-49.9238, 67.6234, 4.75783, 0.44", "-50.383, 67.987, 4.87888, 0.44", "-50.9739, 68.4692, 5.05459, 0.44", "-51.3794, 68.7906, 5.16737, 0.44", "-51.9742, 69.2446, 5.30192, 0.44", "-52.7539, 69.8065, 5.41224, 0.44", "-53.2295, 70.1452, 5.4676, 0.44", "-53.7684, 70.5224, 5.51295, 0.44", "-54.386, 70.9285, 5.56336, 0.44", "-55.0001, 71.289, 5.59164, 0.44", "-55.7367, 71.6897, 5.61876, 0.44", "-55.9645, 71.8068, 5.62858, 0.44", "-56.4661, 72.0619, 5.66838, 0.44", "-57.6452, 72.6843, 5.7973, 0.44", "-58.2402, 73.0288, 5.87598, 0.44", "-58.9479, 73.4974, 5.99607, 0.44", "-59.455, 73.8635, 6.08481, 0.44", "-60.0283, 74.3062, 6.1728, 0.44", "-60.4231, 74.6339, 6.21782, 0.44", "-60.9755, 75.1099, 6.23661, 0.44", "-61.738, 75.7526, 6.22759, 0.44", "-62.3441, 76.2336, 6.1832, 0.44", "-62.7826, 76.5555, 6.14211, 0.44", "-63.279, 76.8866, 6.06903, 0.44", "-64.0152, 77.3468, 5.92515, 0.44", "-64.7762, 77.8203, 5.70121, 0.44", "-65.4997, 78.2748, 5.42915, 0.44", "-66.1734, 78.7088, 5.15143, 0.44", "-66.9581, 79.222, 4.82992, 0.44", "-67.7112, 79.7422, 4.52361, 0.44", "-68.5864, 80.3986, 4.13368, 0.44", "-69.1921, 80.8938, 3.83483, 0.44", "-69.7438, 81.3812, 3.55137, 0.44", "-70.4496, 82.0448, 3.19204, 0.44", "-70.9484, 82.5082, 2.95772, 0.44", "-71.6842, 83.1181, 2.64063, 0.44", "-72.2381, 83.5441, 2.3585, 0.44", "-73.0477, 84.1494, 1.86048, 0.44", "-73.476, 84.4603, 1.56732, 0.44", "-74.0188, 84.838, 1.17727, 0.44", "-74.7106, 85.2957, 0.646593, 0.44", "-76.2522, 86.2607, -0.525891, 0.44", "-76.7646, 86.5864, -0.929256, 0.44", "-77.1947, 86.8744, -1.28124, 0.44", "-77.6938, 87.2337, -1.68468, 0.44", "-78.743, 88.0378, -2.49165, 0.44", "-79.367, 88.5063, -2.90619, 0.44", "-79.7913, 88.7756, -3.11178, 0.44", "-80.3326, 89.0678, -3.35106, 0.44", "-80.8635, 89.3145, -3.55506, 0.44", "-81.3129, 89.4916, -3.69176, 0.44", "-81.9702, 89.7243, -3.82551, 0.44", "-82.3767, 89.868, -3.90823, 0.44", "-83.1224, 90.1471, -4.10991, 0.44", "-83.5468, 90.3202, -4.26814, 0.44", "-84.1049, 90.5717, -4.51783, 0.44", "-84.7683, 90.9373, -4.91155, 0.44", "-85.3603, 91.348, -5.34264, 0.44", "-86.205, 92.0894, -6.06323, 0.44", "-86.7318, 92.6669, -6.57548, 0.44", "-87.0906, 93.1785, -6.99826, 0.44", "-87.5847, 94.0707, -7.67313, 0.44", "-87.8144, 94.5862, -8.05616, 0.44", "-88.0239, 95.1649, -8.45518, 0.44", "-88.2266, 95.821, -8.85086, 0.44", "-88.6378, 97.2641, -9.63871, 0.44", "-88.7885, 97.8127, -9.91939, 0.44", "-89.0579, 98.6882, -10.3239, 0.44", "-89.2341, 99.1967, -10.5638, 0.44", "-89.3794, 99.5661, -10.725, 0.44", "-89.5287, 99.9467, -10.9009, 0.44", "-89.7386, 100.435, -11.0896, 0.44", "-89.8992, 100.802, -11.2236, 0.44", "-90.1094, 101.261, -11.3605, 0.44", "-90.5463, 102.202, -11.6865, 0.44", "-91.0474, 103.382, -12.1465, 0.44" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-71.2116, 83.5128, -12.9967, 0.44", "-70.5987, 85.5928, -12.9829, 0.44", "-70.2536, 86.7257, -13.1431, 0.44", "-70.0065, 87.5562, -13.3038, 0.44", "-69.7528, 88.5801, -13.579, 0.44", "-69.315, 90.7508, -14.2189, 0.44", "-69.0613, 92.2632, -14.662, 0.44", "-68.6756, 95.2028, -15.5249, 0.44", "-68.5563, 96.1195, -15.7947, 0.44", "-68.2803, 98.2636, -16.4142, 0.44", "-68.1179, 99.7018, -16.8153, 0.44", "-67.9575, 101.394, -17.2442, 0.44", "-67.8041, 102.947, -17.6313, 0.44", "-67.6756, 104.14, -17.8586, 0.44", "-67.6031, 104.714, -17.9743, 0.44", "-67.5136, 105.355, -18.0944, 0.44", "-67.4393, 106.022, -18.2257, 0.44", "-67.3061, 108.799, -18.7631, 0.44", "-67.331, 109.763, -18.933, 0.44", "-67.4469, 111.509, -19.1967, 0.44", "-67.5561, 113.074, -19.3869, 0.44", "-67.6594, 115.603, -19.5983, 0.44", "-67.6725, 117.114, -19.7013, 0.44", "-67.6594, 118.61, -19.7497, 0.44", "-67.5917, 119.666, -19.9017, 0.44", "-67.4601, 120.525, -20.1156, 0.44", "-67.0258, 121.93, -20.897, 0.44", "-66.4626, 123.203, -22.1024, 0.44", "-66.0033, 124.225, -23.3278, 0.44", "-65.2035, 126.162, -25.8813, 0.44", "-64.9732, 126.854, -26.8514, 0.44", "-64.13, 129.859, -31.3007, 0.44", "-63.5739, 132.242, -35.0478, 0.44", "-63.1615, 134.203, -38.1371, 0.44", "-63.0485, 134.786, -39.0404, 0.44", "-62.7362, 136.947, -42.195, 0.44", "-62.4591, 139.255, -45.4294, 0.44", "-61.9793, 143.225, -50.4493, 0.44", "-61.8222, 144.065, -51.4669, 0.44", "-61.57, 144.943, -52.464, 0.44", "-60.9595, 146.582, -54.2606, 0.44", "-60.2108, 148.325, -55.9623, 0.44", "-59.5986, 149.734, -57.0984, 0.44", "-58.1613, 153.047, -59.3078, 0.44", "-57.2654, 155.368, -60.7704, 0.44", "-56.223, 158.442, -62.5257, 0.44", "-55.7257, 160.219, -63.4099, 0.44", "-55.1189, 163.106, -64.6522, 0.44", "-54.8938, 164.768, -65.2864, 0.44", "-54.6763, 168.433, -66.4255, 0.44", "-54.6522, 169.851, -66.8268, 0.44", "-54.697, 173.472, -67.7427, 0.44", "-54.7286, 174.789, -68.1117, 0.44", "-54.7709, 176.328, -68.5816, 0.44", "-54.7922, 177.999, -69.0616, 0.44", "-54.7885, 179.559, -69.3382, 0.44" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-71.2116, 83.5128, -12.9967, 0.52", "-72.1344, 83.9951, -13.3277, 0.52", "-73.7985, 84.775, -13.9942, 0.52", "-74.3519, 84.9759, -14.2151, 0.52", "-75.562, 85.307, -14.6711, 0.52", "-76.4918, 85.5463, -15.0607, 0.52", "-77.2711, 85.7585, -15.3945, 0.52", "-78.4387, 86.1111, -15.9688, 0.52", "-79.5878, 86.5473, -16.5662, 0.52", "-80.6637, 87.0475, -17.1907, 0.52", "-81.9318, 87.7506, -18.0003, 0.52", "-82.8514, 88.3245, -18.5929, 0.52", "-84.1047, 89.2405, -19.3603, 0.52", "-84.966, 89.9708, -19.8427, 0.52", "-85.7509, 90.6952, -20.2261, 0.52", "-86.7068, 91.5545, -20.5639, 0.52", "-87.587, 92.241, -20.7255, 0.52", "-88.7077, 93.0132, -20.8204, 0.52", "-89.4237, 93.4599, -20.8099, 0.52", "-90.4427, 94.1062, -20.7422, 0.52", "-91.4392, 94.7829, -20.6048, 0.52", "-92.5471, 95.6148, -20.3948, 0.52", "-93.0022, 96.0119, -20.3007, 0.52", "-93.7027, 96.7389, -20.1779, 0.52", "-94.4604, 97.6817, -20.0938, 0.52", "-95.0701, 98.586, -20.0934, 0.52", "-95.5755, 99.4808, -20.127, 0.52", "-96.0752, 100.483, -20.1779, 0.52", "-96.6308, 101.677, -20.2578, 0.52", "-97.1845, 103.012, -20.3629, 0.52", "-97.6413, 104.191, -20.5141, 0.52", "-97.8847, 104.869, -20.6504, 0.52", "-98.2026, 105.725, -20.8504, 0.52", "-98.6388, 106.804, -21.1645, 0.52", "-98.952, 107.507, -21.3907, 0.52", "-99.6058, 108.855, -21.8729, 0.52", "-100.433, 110.4, -22.4483, 0.52", "-101.556, 112.251, -23.2096, 0.52", "-102.496, 113.697, -23.8091, 0.52", "-103.07, 114.534, -24.1381, 0.52", "-103.606, 115.26, -24.397, 0.52", "-104.438, 116.305, -24.7016, 0.52", "-105.362, 117.38, -24.9623, 0.52", "-106.666, 118.808, -25.2712, 0.52", "-107.708, 119.873, -25.459, 0.52", "-108.779, 120.892, -25.6293, 0.52", "-110.375, 122.346, -25.8449, 0.52", "-111.267, 123.119, -25.9409, 0.52", "-112.147, 123.821, -26.0118, 0.52", "-113.124, 124.512, -26.0957, 0.52", "-114.403, 125.381, -26.1575, 0.52", "-115.876, 126.401, -26.1791, 0.52", "-116.508, 126.845, -26.1718, 0.52", "-117.81, 127.79, -26.1334, 0.52", "-119.197, 128.823, -26.0742, 0.52", "-120.725, 129.983, -25.9941, 0.52", "-122.217, 131.105, -25.9094, 0.52", "-123.161, 131.802, -25.8617, 0.52", "-123.901, 132.338, -25.8392, 0.52", "-124.724, 132.924, -25.8128, 0.52", "-125.445, 133.414, -25.8364, 0.52", "-126.126, 133.847, -25.8933, 0.52", "-127.322, 134.558, -25.9952, 0.52", "-128.841, 135.415, -26.1273, 0.52", "-130.152, 136.12, -26.2438, 0.52", "-131.588, 136.917, -26.3717, 0.52" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "49.038, -54.2773, -2.66664, 0.37", "48.3439, -52.4334, -3.50017, 0.37", "48.0308, -51.6019, -3.87605, 0.37", "47.6222, -50.5164, -4.36675, 0.37", "47.0885, -49.0988, -5.00756, 0.37", "46.7974, -48.3255, -5.35717, 0.37", "46.2055, -46.7532, -6.06792, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "49.038, -54.2773, -2.66664, 0.44", "49.8733, -54.5993, -2.83215, 0.44", "50.5592, -54.8896, -2.971, 0.44", "51.308, -55.2641, -3.12587, 0.44", "52.1525, -55.7258, -3.25237, 0.44", "53.4132, -56.4599, -3.37417, 0.44", "54.2933, -56.9742, -3.43269, 0.44", "54.7994, -57.2796, -3.44906, 0.44", "55.6078, -57.7622, -3.43154, 0.44", "56.5658, -58.3504, -3.36644, 0.44", "57.3667, -58.8696, -3.21292, 0.44", "58.0061, -59.3415, -3.02, 0.44", "58.8356, -60.0287, -2.73487, 0.44", "59.425, -60.5485, -2.55048, 0.44", "60.0633, -61.1302, -2.42301, 0.44", "61.2074, -62.1836, -2.20218, 0.44", "62.1032, -62.995, -2.02173, 0.44", "63.0076, -63.7911, -1.84702, 0.44", "64.047, -64.6671, -1.67898, 0.44", "65.0561, -65.4719, -1.57132, 0.44", "66.9234, -66.9395, -1.42222, 0.44", "67.4152, -67.3264, -1.39867, 0.44", "68.1072, -67.8582, -1.3357, 0.44", "68.6909, -68.2991, -1.26399, 0.44", "69.5506, -68.935, -1.12721, 0.44", "70.3999, -69.5128, -1.01077, 0.44", "71.1579, -69.9678, -1.00949, 0.44", "71.7671, -70.2753, -1.01016, 0.44", "72.3761, -70.5173, -1.01819, 0.44", "73.3542, -70.877, -1.05546, 0.44", "74.473, -71.2832, -1.12847, 0.44", "75.2216, -71.603, -1.2044, 0.44", "75.759, -71.9288, -1.28047, 0.44", "76.17, -72.2503, -1.34872, 0.44", "77.1865, -73.1916, -1.5526, 0.44", "77.5751, -73.6097, -1.6465, 0.44", "78.0865, -74.2396, -1.77221, 0.44", "78.6856, -75.0287, -1.92091, 0.44", "79.2158, -75.756, -2.05118, 0.37", "80.0328, -76.9771, -2.25553, 0.37", "80.5316, -77.7469, -2.38137, 0.37", "81.0195, -78.5073, -2.5211, 0.37", "81.8497, -79.7827, -2.77898, 0.37", "82.7411, -81.1232, -3.08274, 0.37", "83.816, -82.8265, -3.46721, 0.37", "84.2406, -83.5132, -3.62758, 0.37", "84.8177, -84.4029, -3.85353, 0.37", "85.4326, -85.2795, -4.10565, 0.37", "86.0286, -86.0458, -4.37419, 0.37" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-26.3258, -146.171, -3.99186, 0.52", "-26.8545, -147.136, -4.26001, 0.52", "-27.2789, -147.978, -4.46646, 0.52", "-27.5426, -148.511, -4.59131, 0.52", "-27.7064, -148.827, -4.66657, 0.52", "-27.9627, -149.315, -4.78209, 0.52", "-28.3422, -150.063, -4.91824, 0.52", "-28.7739, -150.945, -5.02637, 0.52", "-28.9323, -151.271, -5.05883, 0.52", "-29.1985, -151.81, -5.10627, 0.52", "-29.4631, -152.36, -5.14928, 0.52", "-30.0421, -153.644, -5.23433, 0.52", "-30.3499, -154.444, -5.27143, 0.52", "-30.6513, -155.349, -5.30668, 0.52", "-30.865, -156.105, -5.36165, 0.52", "-31.1016, -157.069, -5.46569, 0.52", "-31.2772, -157.83, -5.58411, 0.52", "-31.4615, -158.63, -5.76093, 0.52", "-31.6688, -159.501, -5.97186, 0.52", "-31.9152, -160.378, -6.16974, 0.52", "-32.1321, -160.941, -6.28054, 0.52", "-32.3555, -161.393, -6.35647, 0.52", "-32.7793, -162.138, -6.46245, 0.52", "-33.2918, -162.975, -6.57612, 0.52", "-33.8853, -163.986, -6.73609, 0.52", "-34.4138, -164.975, -6.89513, 0.52", "-34.9178, -166.1, -7.10047, 0.52", "-35.3475, -167.238, -7.33054, 0.52", "-35.4935, -167.713, -7.43506, 0.52", "-35.8157, -168.982, -7.74582, 0.52", "-36.007, -169.951, -7.97981, 0.52", "-36.2372, -171.262, -8.26775, 0.52", "-36.3823, -171.984, -8.40332, 0.52", "-36.593, -172.887, -8.58108, 0.52", "-36.7396, -173.411, -8.70886, 0.52", "-37.2093, -174.839, -9.12369, 0.52", "-37.4568, -175.554, -9.38983, 0.52", "-37.7244, -176.369, -9.74211, 0.52", "-37.9861, -177.391, -10.2456, 0.52", "-38.2226, -178.584, -10.8933, 0.52", "-38.342, -179.444, -11.3703, 0.52", "-38.4086, -180.19, -11.7773, 0.52", "-38.4349, -180.656, -11.9921, 0.52", "-38.5069, -181.75, -12.3905, 0.52", "-38.5456, -182.243, -12.5269, 0.52", "-38.6428, -183.17, -12.7367, 0.52", "-38.8005, -184.262, -13.008, 0.52", "-38.9331, -184.909, -13.1744, 0.52", "-39.0982, -185.491, -13.312, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-26.3258, -146.171, -3.99186, 0.52", "-25.6977, -147.431, -3.94103, 0.52", "-25.1584, -148.513, -3.89738, 0.52", "-24.6521, -149.528, -3.85642, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "13.7062, -151.58, 6.47209, 0.44", "14.1861, -152.967, 6.33414, 0.44", "14.3621, -153.624, 6.32305, 0.44", "14.5094, -154.282, 6.34168, 0.44", "14.6517, -154.994, 6.3796, 0.44", "14.8159, -156.035, 6.44706, 0.44", "14.8978, -156.765, 6.49749, 0.44", "14.9392, -157.787, 6.59438, 0.44", "14.942, -158.151, 6.63609, 0.44", "14.9208, -158.921, 6.71702, 0.44", "14.9018, -159.829, 6.79161, 0.44", "14.9167, -160.551, 6.84832, 0.44", "14.9525, -161.353, 6.9003, 0.44", "14.9844, -162.142, 6.93608, 0.44", "15.0075, -162.822, 6.96738, 0.44", "15.0552, -164.637, 7.05523, 0.44", "15.0822, -165.761, 7.08549, 0.44", "15.0867, -167.185, 7.08549, 0.44", "15.0479, -168.589, 7.05178, 0.44", "15.0098, -169.328, 7.01794, 0.44", "14.9639, -169.953, 6.97574, 0.44", "14.8441, -170.932, 6.88411, 0.44", "14.642, -172.186, 6.73738, 0.44", "14.4683, -173.16, 6.61814, 0.44", "14.3094, -173.91, 6.52921, 0.44", "14.1016, -174.711, 6.44654, 0.44", "13.8851, -175.409, 6.39475, 0.44", "13.6945, -175.886, 6.38464, 0.44", "13.5313, -176.193, 6.36371, 0.44", "13.248, -176.624, 6.32336, 0.44", "13.0589, -176.865, 6.29229, 0.44", "12.7652, -177.187, 6.23394, 0.44", "12.4271, -177.553, 6.14272, 0.44", "11.8138, -178.254, 5.91864, 0.44" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "13.7062, -151.58, 6.47209, 0.44", "13.0367, -151.297, 7.39807, 0.44", "12.6205, -151.121, 7.97385, 0.44", "11.8674, -150.803, 9.01555, 0.44", "10.8683, -150.38, 10.3976, 0.44" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-32.3625, -298.191, -13.8885, 0.44", "-32.8759, -296.593, -13.4575, 0.44", "-33.0692, -295.841, -13.227, 0.44", "-33.2959, -294.881, -12.9392, 0.44", "-33.4038, -294.272, -12.7279, 0.44", "-33.4942, -293.604, -12.4901, 0.44", "-33.6735, -291.502, -11.6378, 0.44", "-33.7136, -289.96, -10.9524, 0.44", "-33.7283, -288.637, -10.3488, 0.44", "-33.7764, -286.181, -9.21683, 0.44", "-33.8115, -284.991, -8.67948, 0.44", "-33.8902, -282.619, -7.68478, 0.44", "-33.9278, -281.654, -7.32739, 0.44", "-33.9599, -280.722, -7.02182, 0.44", "-33.9904, -279.421, -6.65962, 0.44", "-34.0213, -278.567, -6.48713, 0.44", "-34.0725, -277.19, -6.22605, 0.44", "-34.1021, -276.174, -6.06124, 0.44", "-34.0994, -274.522, -5.77978, 0.44", "-34.0647, -272.221, -5.39576, 0.44", "-34.0517, -270.52, -5.11507, 0.44", "-34.04, -269.307, -4.90663, 0.44", "-34.0422, -268.294, -4.72083, 0.44", "-34.0669, -266.82, -4.44503, 0.44", "-34.181, -264.314, -3.99728, 0.44", "-34.3052, -262.884, -3.82676, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-32.3625, -298.191, -13.8885, 0.52", "-32.9845, -299.681, -13.6106, 0.52", "-33.5279, -300.983, -13.3679, 0.52", "-33.7086, -301.416, -13.2871, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.11606, 240.307, -93.2703, 0.52", "4.44708, 242.124, -91.5781, 0.52", "5.39818, 243.264, -90.2751, 0.52", "6.01797, 243.919, -89.387, 0.52", "6.50357, 244.32, -88.7133, 0.52", "8.74107, 245.554, -85.7087, 0.52", "8.9381, 245.561, -85.4275, 0.52", "9.33779, 245.171, -84.7173, 0.52", "9.53151, 244.914, -84.3257, 0.52", "9.92102, 244.269, -83.5023, 0.52", "10.2101, 243.714, -82.9387, 0.52", "10.8279, 242.484, -81.9447, 0.52", "11.3816, 241.425, -81.2451, 0.52", "12.1405, 240.077, -80.5718, 0.52", "12.9484, 238.741, -80.149, 0.52", "14.1557, 236.987, -79.8842, 0.52", "15.0873, 235.81, -80.0976, 0.52", "18.1794, 232.375, -81.8656, 0.52", "18.8811, 231.692, -82.4253, 0.52", "19.4706, 231.17, -83.0026, 0.52", "20.4637, 230.386, -84.1726, 0.52", "21.8995, 229.453, -86.1379, 0.52", "22.0599, 229.368, -86.3588, 0.52", "22.4069, 229.263, -86.5415, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.11606, 240.307, -93.2703, 0.52", "2.90769, 242.764, -95.1631, 0.52", "2.82651, 244.553, -96.5557, 0.52", "2.83868, 245.547, -97.338, 0.52", "2.97319, 246.907, -98.4807, 0.52", "3.31849, 248.778, -100.16, 0.52", "3.64949, 250.029, -101.374, 0.52", "4.58567, 252.15, -103.538, 0.52", "5.2529, 253.118, -104.733, 0.52", "6.31932, 254.113, -106.416, 0.52", "7.17047, 254.582, -107.661, 0.52", "8.16862, 254.931, -109.016, 0.52", "8.97757, 255.09, -110.075, 0.52", "10.6674, 255.182, -112.131, 0.52", "11.9535, 255.134, -113.762, 0.52", "12.9943, 255.026, -115.176, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "16.2441, 299.506, -28.1049, 0.44", "16.2782, 300.829, -27.6261, 0.44", "16.3166, 302.353, -27.1158, 0.44", "16.3111, 303.544, -26.7159, 0.44", "16.292, 304.537, -26.3488, 0.44", "16.2723, 305.557, -25.9715, 0.44", "16.2564, 306.378, -25.6679, 0.44", "16.2119, 307.408, -25.2721, 0.44", "16.0717, 308.966, -24.7392, 0.44", "15.9739, 310.051, -24.3696, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.2441, 299.506, -28.1049, 0.44", "14.9284, 300.517, -28.4141, 0.44", "13.9577, 301.262, -28.6422, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-131.588, 136.917, -26.3717, 0.52", "-132.24, 138.284, -27.0295, 0.52", "-132.673, 139.16, -27.4047, 0.52", "-133.494, 140.67, -28.006, 0.52", "-134.405, 142.241, -28.5875, 0.52", "-134.828, 142.946, -28.8227, 0.52", "-135.335, 143.763, -29.076, 0.52", "-135.845, 144.498, -29.3417, 0.52", "-136.397, 145.245, -29.6158, 0.52", "-136.824, 145.798, -29.7849, 0.52", "-137.412, 146.574, -29.9967, 0.52", "-137.684, 146.971, -30.1199, 0.52", "-138.789, 148.714, -30.668, 0.52", "-139.209, 149.415, -30.8789, 0.52", "-139.93, 150.657, -31.2244, 0.52", "-140.766, 152.116, -31.5862, 0.52", "-141.883, 154.016, -32.0041, 0.52", "-142.506, 155.035, -32.1858, 0.52", "-143.081, 155.928, -32.2927, 0.52", "-143.699, 156.823, -32.4007, 0.52", "-144.399, 157.731, -32.5099, 0.52", "-144.959, 158.385, -32.5735, 0.52", "-145.774, 159.257, -32.6568, 0.52", "-146.328, 159.857, -32.7818, 0.52", "-146.978, 160.573, -32.994, 0.52", "-147.703, 161.38, -33.283, 0.52", "-148.624, 162.413, -33.6941, 0.52", "-149.537, 163.482, -34.1206, 0.52", "-150.575, 164.748, -34.6132, 0.52", "-151.311, 165.654, -34.9386, 0.52", "-151.91, 166.41, -35.1743, 0.52", "-152.499, 167.171, -35.3951, 0.52", "-153.161, 168.032, -35.6067, 0.52", "-153.697, 168.776, -35.7286, 0.52", "-154.648, 170.147, -35.8856, 0.52", "-155.186, 170.988, -36.0094, 0.52", "-156.391, 172.96, -36.3464, 0.52", "-157.13, 174.177, -36.5795, 0.52", "-157.963, 175.517, -36.8965, 0.52", "-158.409, 176.2, -37.0822, 0.52", "-159.305, 177.55, -37.5341, 0.52", "-159.828, 178.277, -37.8152, 0.52", "-160.552, 179.188, -38.2027, 0.52", "-161.487, 180.279, -38.7587, 0.52", "-162.277, 181.137, -39.2438, 0.52", "-163.282, 182.217, -39.9018, 0.52", "-164.049, 183.02, -40.4621, 0.52", "-164.745, 183.743, -41.038, 0.52", "-165.483, 184.469, -41.6827, 0.52", "-165.902, 184.84, -42.0643, 0.52", "-166.972, 185.671, -43.0624, 0.52", "-168.15, 186.449, -44.1845, 0.52", "-168.678, 186.744, -44.7036, 0.52", "-169.42, 187.112, -45.5011, 0.52", "-170.44, 187.634, -46.6294, 0.52", "-170.871, 187.874, -47.082, 0.52", "-172.054, 188.553, -48.2224, 0.52", "-172.746, 188.972, -48.8481, 0.52", "-174.745, 190.228, -50.5504, 0.52", "-176.995, 191.638, -52.2683, 0.52", "-178.943, 192.79, -53.4787, 0.52", "-180.296, 193.592, -54.273, 0.52", "-181.828, 194.491, -55.0691, 0.52", "-183.302, 195.336, -55.7422, 0.52", "-185.443, 196.406, -56.4094, 0.52", "-187.582, 197.285, -56.8649, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-131.588, 136.917, -26.3717, 0.52", "-132.297, 136.46, -27.1218, 0.52", "-132.697, 136.202, -27.5444, 0.52", "-133.66, 135.581, -28.563, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "86.0286, -86.0458, -4.37419, 0.37", "86.8539, -86.6457, -4.58549, 0.37", "87.5511, -87.3103, -4.83574, 0.37", "87.9479, -87.7528, -4.99091, 0.37", "88.3872, -88.284, -5.16655, 0.37", "89.0849, -89.2303, -5.49827, 0.37", "89.5789, -89.9284, -5.74743, 0.37", "90.6138, -91.5135, -6.39713, 0.37", "91.2353, -92.474, -6.83278, 0.37", "91.5663, -92.9978, -7.09473, 0.37", "92.4141, -94.3988, -7.81518, 0.37", "92.9803, -95.3588, -8.3363, 0.37", "93.722, -96.574, -9.04967, 0.37", "94.4502, -97.6568, -9.75726, 0.37", "95.0433, -98.4844, -10.3735, 0.37" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "86.0286, -86.0458, -4.37419, 0.37", "85.6516, -86.7578, -3.90521, 0.37", "85.2338, -87.5467, -3.38558, 0.37", "84.8883, -88.1992, -2.95577, 0.37", "84.4754, -88.9789, -2.44225, 0.37" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-34.3052, -262.884, -3.82676, 0.44", "-35.6795, -262.423, -3.54455, 0.44", "-36.5175, -262.142, -3.37247, 0.44", "-37.418, -261.84, -3.18755, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-34.3052, -262.884, -3.82676, 0.44", "-34.2732, -260.595, -3.06053, 0.44", "-34.2199, -259.159, -2.49867, 0.44", "-34.1338, -257.374, -1.80785, 0.44", "-34.0257, -255.433, -1.11037, 0.44", "-33.9661, -253.978, -0.638135, 0.44", "-33.8589, -251.306, 0.26757, 0.44", "-33.7747, -248.342, 1.26429, 0.44", "-33.7692, -246.809, 1.74071, 0.44", "-33.8128, -244.816, 2.29317, 0.44", "-33.9596, -241.796, 2.98594, 0.44", "-34.1567, -238.704, 3.5671, 0.44", "-34.3405, -236.644, 3.82347, 0.44", "-34.6112, -234.077, 3.98465, 0.44", "-34.796, -232.567, 4.04819, 0.44", "-35.0079, -231.062, 4.07129, 0.44", "-35.248, -229.452, 4.0264, 0.44", "-35.5034, -227.81, 3.90602, 0.44", "-35.6876, -226.51, 3.84976, 0.44", "-35.9853, -224.613, 3.88923, 0.44", "-36.1552, -223.8, 3.93386, 0.44", "-36.4285, -222.7, 4.03025, 0.44", "-36.7997, -221.341, 4.15159, 0.44", "-37.1165, -220.081, 4.30398, 0.44", "-37.4459, -218.668, 4.52658, 0.44", "-37.6621, -217.457, 4.79646, 0.44", "-37.8231, -216.191, 5.2291, 0.44", "-37.9899, -214.359, 6.08919, 0.44", "-38.039, -211.968, 7.51263, 0.44", "-37.957, -210.595, 8.50499, 0.44", "-37.7678, -208.659, 10.0076, 0.44", "-37.4348, -206.097, 12.1803, 0.44", "-37.1024, -204.056, 14.1075, 0.44", "-36.7014, -202.119, 16.1799, 0.44", "-36.3066, -200.511, 18.0561, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-33.7086, -301.416, -13.2871, 0.29", "-34.6218, -303.745, -18.0233, 0.29", "-34.9903, -304.741, -19.9098, 0.29", "-35.2874, -305.603, -21.4337, 0.29", "-35.4921, -306.306, -22.5867, 0.29", "-36.7104, -311.637, -30.4972, 0.29", "-36.8722, -312.702, -31.9021, 0.29", "-36.9207, -313.264, -32.5369, 0.29", "-36.9455, -313.825, -33.0971, 0.29", "-36.9333, -315.129, -34.1995, 0.29", "-36.7953, -316.776, -35.2556, 0.29", "-36.459, -318.886, -36.2253, 0.29", "-36.1346, -322.241, -38.0541, 0.29", "-36.0027, -324.261, -39.2887, 0.29", "-35.9533, -325.658, -40.2459, 0.29", "-35.9738, -326.71, -41.0854, 0.29", "-36.1449, -328.626, -42.9289, 0.29", "-36.3423, -330.659, -44.8943, 0.29", "-36.4788, -331.994, -46.2313, 0.29", "-36.6477, -333.178, -47.5655, 0.29", "-36.9131, -334.98, -49.7845, 0.29", "-37.1503, -336.966, -52.331, 0.29", "-37.206, -339.515, -55.3767, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-33.7086, -301.416, -13.2871, 0.52", "-33.9876, -302.252, -13.2571, 0.52", "-34.3041, -303.134, -13.2627, 0.52", "-34.4918, -303.632, -13.2704, 0.52", "-34.8685, -304.574, -13.3259, 0.52", "-35.2675, -305.577, -13.4044, 0.52", "-35.6796, -306.645, -13.4955, 0.52", "-35.9587, -307.43, -13.5723, 0.52", "-36.1249, -307.949, -13.6209, 0.52", "-36.4427, -308.997, -13.7346, 0.52", "-36.6762, -309.81, -13.8163, 0.52", "-36.8889, -310.463, -13.9159, 0.52", "-37.0865, -311.042, -14.0173, 0.52", "-37.3188, -311.681, -14.1392, 0.52", "-37.7905, -312.867, -14.3808, 0.52", "-38.1148, -313.652, -14.5299, 0.52", "-38.6453, -314.897, -14.7758, 0.52", "-38.9593, -315.627, -14.9361, 0.52", "-39.4237, -316.716, -15.1775, 0.52", "-39.702, -317.407, -15.3065, 0.52", "-40.0898, -318.479, -15.4393, 0.52", "-40.2768, -319.045, -15.4847, 0.52", "-40.5575, -320.05, -15.5079, 0.52", "-40.7671, -320.793, -15.5434, 0.52", "-41.0559, -321.788, -15.5913, 0.52", "-41.3032, -322.579, -15.6294, 0.52", "-41.6193, -323.486, -15.6997, 0.52", "-41.9369, -324.375, -15.7785, 0.52", "-42.4003, -325.686, -15.892, 0.52", "-42.6675, -326.447, -15.9676, 0.52", "-43.2324, -328.117, -16.1464, 0.52", "-43.6685, -329.542, -16.253, 0.52", "-43.8938, -330.355, -16.2788, 0.52", "-44.1317, -331.282, -16.2458, 0.52", "-44.2849, -331.975, -16.1584, 0.52", "-44.4309, -332.703, -16.0292, 0.52", "-44.6287, -333.857, -15.7301, 0.52", "-44.7105, -334.348, -15.5911, 0.52", "-44.8416, -335.019, -15.4476, 0.52", "-44.9733, -335.57, -15.3765, 0.52", "-45.1188, -336.095, -15.3546, 0.52", "-45.267, -336.586, -15.3715, 0.52", "-45.6201, -337.81, -15.5011, 0.52", "-45.7831, -338.427, -15.6012, 0.52", "-45.9573, -339.126, -15.7366, 0.52", "-46.1063, -339.688, -15.8444, 0.52", "-46.357, -340.531, -15.9845, 0.52", "-46.534, -341.091, -16.0516, 0.52", "-46.815, -342.071, -16.1095, 0.52", "-46.9145, -342.441, -16.1329, 0.52", "-47.0467, -342.996, -16.1645, 0.52", "-47.1529, -343.45, -16.1774, 0.52", "-47.2816, -344.037, -16.1747, 0.52", "-47.4418, -344.902, -16.1418, 0.52", "-47.5258, -345.64, -16.1, 0.52", "-47.5785, -346.438, -16.0732, 0.52", "-47.6121, -346.97, -16.0742, 0.52", "-47.6529, -347.466, -16.0953, 0.52", "-47.7402, -348.263, -16.1493, 0.52", "-47.9426, -349.656, -16.2586, 0.52", "-48.01, -350.16, -16.2779, 0.52", "-48.1516, -351.358, -16.2711, 0.52", "-48.2363, -352.193, -16.2347, 0.52", "-48.3272, -353.135, -16.1552, 0.52", "-48.3986, -353.838, -16.0624, 0.52", "-48.5445, -355.222, -15.8083, 0.52", "-48.6754, -356.38, -15.5573, 0.52", "-48.7515, -357.055, -15.3886, 0.52", "-48.8396, -357.723, -15.223, 0.52", "-48.9262, -358.291, -15.1091, 0.52", "-49.0165, -358.834, -15.0344, 0.52", "-49.1516, -359.739, -14.9886, 0.52", "-49.2294, -360.633, -14.9685, 0.52", "-49.269, -361.183, -14.9604, 0.52", "-49.3092, -362.09, -14.9584, 0.52", "-49.3136, -362.757, -14.9676, 0.52", "-49.2456, -364.582, -15.0216, 0.52", "-49.0873, -366.146, -15.0982, 0.52" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.9739, 310.051, -24.3696, 0.44", "15.7018, 311.445, -23.8221, 0.44", "15.4792, 312.636, -23.3732, 0.44", "15.1329, 314.293, -22.7588, 0.44", "14.8679, 315.431, -22.2872, 0.44", "14.6504, 316.256, -21.8795, 0.44", "14.3064, 317.285, -21.3043, 0.44", "14.0626, 317.767, -20.9738, 0.44", "13.6016, 318.398, -20.4612, 0.44", "12.8533, 319.108, -19.7665, 0.44", "12.0167, 319.731, -19.0482, 0.44", "11.0454, 320.35, -18.2208, 0.44", "10.1808, 320.804, -17.5114, 0.44", "9.38386, 321.168, -16.8983, 0.44", "8.56415, 321.503, -16.3169, 0.44", "7.29795, 321.989, -15.5913, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "15.9739, 310.051, -24.3696, 0.44", "15.244, 311.077, -24.2897, 0.44", "14.6142, 312.034, -24.2231, 0.44", "14.0905, 312.974, -23.9693, 0.44", "13.8046, 313.536, -23.7285, 0.44", "13.592, 313.978, -23.5133, 0.44", "13.2679, 314.661, -23.1679, 0.44", "13.0596, 315.156, -22.8566, 0.44", "12.3433, 317.179, -21.3499, 0.44", "12.1559, 317.818, -20.7944, 0.44", "11.8906, 318.828, -19.8876, 0.44", "11.7991, 319.223, -19.5424, 0.44", "11.5204, 320.411, -18.5418, 0.44", "11.2102, 321.633, -17.6306, 0.44", "10.8379, 323.091, -16.7816, 0.44", "10.5927, 324.078, -16.3069, 0.44", "10.3819, 324.924, -15.9563, 0.44", "10.19, 325.666, -15.7177, 0.44", "9.82002, 326.987, -15.5107, 0.44", "9.49318, 328.165, -15.479, 0.44", "9.24297, 329.042, -15.5177, 0.44", "9.05039, 329.736, -15.5572, 0.44", "8.67491, 331.102, -15.6556, 0.44", "8.33023, 332.571, -15.8023, 0.44", "8.22456, 333.1, -15.8825, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-187.582, 197.285, -56.8649, 0.44", "-188.578, 197.858, -57.3414, 0.44", "-189.609, 198.36, -57.7501, 0.44", "-190.619, 198.844, -58.0603, 0.44", "-191.292, 199.186, -58.2133, 0.44", "-192.547, 199.767, -58.4207, 0.44", "-193.372, 200.128, -58.545, 0.44", "-194.562, 200.614, -58.6861, 0.44", "-195.683, 200.992, -58.7992, 0.44", "-196.843, 201.293, -58.9366, 0.44", "-198.435, 201.629, -59.2339, 0.44", "-199.328, 201.787, -59.4757, 0.44", "-200.485, 201.969, -59.8991, 0.44", "-202.181, 202.2, -60.6957, 0.44", "-204.394, 202.432, -61.9185, 0.44", "-206.136, 202.599, -62.9827, 0.44", "-207.435, 202.813, -63.8875, 0.44", "-208.621, 203.145, -64.8577, 0.44", "-209.95, 203.69, -66.1094, 0.44", "-211.307, 204.535, -67.6152, 0.44", "-211.83, 204.966, -68.2548, 0.44", "-213.362, 206.552, -70.2452, 0.44", "-214.782, 208.413, -72.3303, 0.44", "-215.37, 209.32, -73.2987, 0.44", "-216.231, 210.823, -74.8598, 0.44", "-216.555, 211.415, -75.4827, 0.44", "-217.238, 212.559, -76.7928, 0.44", "-218.201, 213.855, -78.4808, 0.44", "-218.82, 214.503, -79.4708, 0.44", "-219.225, 214.855, -80.1281, 0.44", "-219.631, 215.083, -80.7705, 0.44", "-220.206, 215.264, -81.7011, 0.44", "-220.764, 215.275, -82.5927, 0.44", "-221.334, 215.139, -83.5447, 0.44", "-221.903, 214.89, -84.4154, 0.44", "-222.687, 214.46, -85.5491, 0.44", "-223.346, 214.069, -86.4615, 0.44", "-223.962, 213.702, -87.2512, 0.44", "-225.23, 212.924, -88.7355, 0.44", "-227.272, 211.718, -90.9315, 0.44", "-227.941, 211.357, -91.5901, 0.44", "-229.204, 210.761, -92.7313, 0.44", "-230.235, 210.338, -93.6174, 0.44", "-231.687, 209.777, -94.7326, 0.44", "-232.512, 209.5, -95.3312, 0.44", "-232.982, 209.373, -95.6798, 0.44", "-233.665, 209.218, -96.1529, 0.44", "-234.442, 209.025, -96.5965, 0.44", "-237.444, 208.275, -98.1578, 0.44", "-239.199, 207.82, -98.9181, 0.44", "-240.402, 207.485, -99.3132, 0.44", "-241.387, 207.214, -99.5753, 0.44", "-244.964, 206.196, -100.22, 0.44", "-245.781, 205.947, -100.278, 0.44", "-247.834, 205.315, -100.268, 0.44", "-249.671, 204.723, -100.145, 0.44", "-250.795, 204.362, -100.004, 0.44", "-253.314, 203.637, -99.5683, 0.44", "-256.235, 202.921, -98.991, 0.44", "-257.057, 202.721, -98.8079, 0.44", "-257.82, 202.546, -98.6326, 0.44", "-260.03, 202.023, -98.0905, 0.44", "-260.767, 201.84, -97.8699, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-187.582, 197.285, -56.8649, 0.52", "-188.601, 198.611, -56.5683, 0.52", "-189.831, 200.48, -56.2098, 0.52", "-191.321, 202.975, -55.7126, 0.52", "-191.882, 203.952, -55.5135, 0.52", "-192.939, 205.833, -55.1116, 0.52", "-193.639, 207.184, -54.8292, 0.52", "-194.798, 209.705, -54.2954, 0.52", "-195.311, 211.053, -54.0405, 0.52", "-195.783, 212.493, -53.7908, 0.52", "-196.374, 214.421, -53.472, 0.52", "-197.11, 216.915, -53.0626, 0.44", "-197.45, 218.053, -52.8593, 0.44", "-198.227, 220.588, -52.3402, 0.44", "-198.606, 221.862, -52.0608, 0.44", "-198.915, 223.122, -51.7829, 0.44", "-199.183, 224.384, -51.4673, 0.44", "-199.316, 225.278, -51.2252, 0.44", "-199.363, 225.988, -51.0278, 0.44", "-199.34, 226.825, -50.8506, 0.44", "-199.077, 229.302, -50.5705, 0.44", "-198.77, 231.557, -50.3752, 0.44", "-198.348, 234.251, -50.255, 0.44", "-198.24, 234.901, -50.2383, 0.44", "-197.611, 238.646, -50.2128, 0.44", "-197.169, 241.2, -50.2344, 0.44", "-196.81, 243.332, -50.2633, 0.44", "-196.15, 246.922, -50.4812, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "95.0433, -98.4844, -10.3735, 0.37", "96.4305, -99.6725, -12.1742, 0.37", "97.2333, -100.241, -13.0938, 0.37", "98.09, -100.809, -13.9955, 0.37", "98.8104, -101.285, -14.7342, 0.37", "99.3512, -101.622, -15.2942, 0.37", "99.9961, -102.013, -15.946, 0.37", "100.116, -102.073, -16.0478, 0.37", "100.58, -102.294, -16.3759, 0.37", "101.978, -102.991, -17.2168, 0.37", "103.439, -103.782, -17.9599, 0.37", "103.994, -104.119, -18.2078, 0.37", "104.359, -104.345, -18.3436, 0.37", "106.046, -105.309, -18.8406, 0.37", "106.864, -105.74, -19.0166, 0.37", "107.529, -106.072, -19.1015, 0.37", "108.568, -106.56, -19.2083, 0.37", "109.61, -107.002, -19.3482, 0.37", "110.527, -107.347, -19.5038, 0.37", "111.16, -107.579, -19.6423, 0.37", "112.438, -108.044, -19.922, 0.37", "113.806, -108.53, -20.3879, 0.37", "114.345, -108.722, -20.6372, 0.37", "114.846, -108.922, -20.9309, 0.37", "115.603, -109.238, -21.4582, 0.37", "116.081, -109.428, -21.8295, 0.37", "118.247, -110.377, -23.4808, 0.37", "118.787, -110.621, -23.835, 0.37", "119.23, -110.832, -24.0658, 0.37", "119.776, -111.07, -24.2753, 0.37", "120.586, -111.421, -24.5609, 0.37", "122.313, -112.189, -25.1429, 0.37", "123.685, -112.81, -25.4919, 0.37", "124.979, -113.413, -25.8386, 0.37", "126.733, -114.247, -26.3435, 0.37", "128.351, -115.061, -26.8654, 0.37", "129.271, -115.541, -27.2257, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "95.0433, -98.4844, -10.3735, 0.37", "94.1835, -96.4336, -12.0226, 0.37", "93.8885, -95.7301, -12.5883, 0.37", "93.6755, -95.2221, -12.9968, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-36.3066, -200.511, 18.0561, 0.44", "-37.9058, -200.969, 19.08, 0.44", "-38.5348, -201.149, 19.4828, 0.44", "-39.7388, -201.495, 20.2537, 0.44", "-40.9465, -201.841, 21.0269, 0.44", "-41.6027, -202.029, 21.4471, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-36.3066, -200.511, 18.0561, 0.44", "-35.2487, -198.456, 18.7822, 0.44", "-34.8397, -197.482, 19.1138, 0.44", "-33.5682, -193.933, 20.2862, 0.44", "-33.1383, -192.63, 20.7048, 0.44", "-32.793, -191.827, 21.0493, 0.44", "-32.2917, -190.824, 21.5271, 0.44", "-31.7779, -190.189, 22.1035, 0.44", "-31.2052, -189.632, 22.741, 0.44", "-30.5071, -189.03, 23.5269, 0.44", "-27.8064, -187.046, 26.5082, 0.44", "-27.4098, -186.794, 26.9335, 0.44", "-22.6921, -184.236, 31.8455, 0.44", "-21.8418, -183.837, 32.7261, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-49.0873, -366.146, -15.0982, 0.37", "-47.4194, -368.041, -15.2033, 0.37", "-45.9244, -369.496, -15.1691, 0.37", "-44.5431, -370.762, -15.2137, 0.37", "-44.102, -371.164, -15.2759, 0.37", "-43.5042, -371.74, -15.4006, 0.37", "-42.7419, -372.541, -15.5403, 0.37", "-41.8278, -373.579, -15.6394, 0.37", "-40.8453, -375.0, -15.817, 0.37", "-40.2459, -376.438, -15.9293, 0.37", "-39.8872, -377.534, -16.0012, 0.37", "-39.4935, -379.298, -16.0702, 0.37", "-39.3434, -380.489, -16.0788, 0.37", "-39.2933, -381.533, -16.0494, 0.37", "-39.3046, -383.153, -15.7224, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-49.0873, -366.146, -15.0982, 0.52", "-49.1521, -367.12, -15.3013, 0.52", "-49.1976, -367.991, -15.4696, 0.52", "-49.2626, -368.974, -15.6925, 0.52", "-49.324, -369.776, -15.8704, 0.52", "-49.4133, -370.913, -16.104, 0.52", "-49.481, -371.736, -16.2508, 0.52", "-49.5333, -372.323, -16.3305, 0.52", "-49.6386, -373.619, -16.4955, 0.52", "-49.711, -374.72, -16.6207, 0.52", "-49.77, -375.638, -16.6979, 0.52", "-49.8641, -377.031, -16.7496, 0.52", "-49.9063, -377.657, -16.7601, 0.52", "-49.9391, -378.284, -16.7284, 0.52", "-49.9496, -378.542, -16.6941, 0.52", "-49.9931, -379.309, -16.5631, 0.52", "-50.0559, -380.066, -16.4138, 0.52", "-50.1436, -380.804, -16.2591, 0.52", "-50.3196, -381.929, -16.0283, 0.52", "-50.4492, -382.578, -15.8996, 0.52", "-50.6153, -383.341, -15.7583, 0.52", "-50.876, -384.591, -15.5368, 0.52", "-51.0954, -385.648, -15.3636, 0.52", "-51.2992, -386.594, -15.2073, 0.52", "-51.461, -387.366, -15.0898, 0.52", "-51.5807, -388.073, -14.9725, 0.52", "-51.7092, -389.203, -14.778, 0.52", "-51.7609, -389.779, -14.6703, 0.52", "-51.8148, -390.826, -14.4618, 0.52", "-51.8234, -391.532, -14.314, 0.52", "-51.801, -392.402, -14.1278, 0.52", "-51.7603, -393.607, -13.87, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "129.271, -115.541, -27.2257, 0.37", "129.157, -117.588, -28.3951, 0.37", "129.119, -118.26, -28.779, 0.37", "129.078, -118.989, -29.1958, 0.37", "129.048, -119.54, -29.5107, 0.37", "129.01, -120.212, -29.8946, 0.37", "128.897, -122.23, -31.0476, 0.37" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "129.271, -115.541, -27.2257, 0.37", "130.947, -115.765, -27.552, 0.37", "132.211, -115.933, -27.7981, 0.37", "133.34, -116.084, -28.0181, 0.37", "134.173, -116.195, -28.1802, 0.37", "134.503, -116.238, -28.2444, 0.37" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-21.8418, -183.837, 32.7261, 0.44", "-21.0091, -184.374, 32.8329, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-21.8418, -183.837, 32.7261, 0.44", "-21.7337, -182.662, 32.6772, 0.44", "-21.6724, -181.915, 32.6508, 0.44", "-21.6148, -181.219, 32.6259, 0.44", "-21.5572, -180.514, 32.554, 0.44", "-21.4504, -179.351, 32.3904, 0.44", "-21.3996, -178.852, 32.2992, 0.44", "-21.3072, -178.055, 32.0694, 0.44", "-21.2629, -177.693, 31.9338, 0.44", "-21.1238, -176.428, 31.3801, 0.44", "-21.0996, -175.736, 30.9988, 0.44", "-21.1216, -175.288, 30.7316, 0.44", "-21.2299, -174.507, 30.2102, 0.44", "-21.3508, -174.084, 29.8735, 0.44", "-21.5013, -173.71, 29.5747, 0.44", "-22.0772, -172.487, 28.6507, 0.44", "-22.4746, -171.67, 28.0725, 0.44", "-23.0655, -170.452, 27.3314, 0.44", "-23.8883, -168.802, 26.3982, 0.44", "-24.2636, -168.024, 25.9706, 0.44", "-24.573, -167.357, 25.6026, 0.44", "-24.8206, -166.786, 25.2811, 0.44", "-25.26, -165.726, 24.6683, 0.44", "-25.7618, -164.296, 23.9234, 0.44", "-25.934, -163.703, 23.6259, 0.44", "-26.1698, -162.937, 23.1344, 0.44", "-26.4277, -162.221, 22.5634, 0.44" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-51.7603, -393.607, -13.87, 0.52", "-51.9567, -395.308, -14.0788, 0.52", "-52.0999, -396.48, -14.1765, 0.52", "-52.3087, -398.111, -14.3273, 0.52", "-52.5238, -400.071, -14.5048, 0.52", "-52.6207, -401.139, -14.5946, 0.52", "-52.7283, -402.775, -14.7265, 0.52", "-52.8215, -404.66, -14.8559, 0.52", "-52.8706, -407.267, -15.0055, 0.52", "-52.8419, -409.404, -15.0942, 0.52", "-52.7626, -411.506, -15.1546, 0.52", "-52.6897, -413.202, -15.169, 0.52", "-52.5779, -415.539, -15.138, 0.52", "-52.5112, -417.17, -15.067, 0.52", "-52.4728, -418.999, -14.9149, 0.52", "-52.4909, -420.246, -14.7908, 0.52", "-52.6019, -422.156, -14.5708, 0.52", "-52.7395, -423.313, -14.4171, 0.52", "-53.0068, -424.793, -14.1985, 0.52", "-53.4969, -426.856, -13.7927, 0.52", "-53.9316, -428.467, -13.427, 0.52", "-54.2475, -429.521, -13.1714, 0.52", "-54.6078, -430.567, -12.8677, 0.52", "-54.8967, -431.311, -12.6246, 0.52", "-55.6868, -433.188, -12.0108, 0.52", "-56.2285, -434.461, -11.6185, 0.52", "-56.8329, -435.939, -11.2226, 0.52", "-57.2267, -437.004, -10.9985, 0.52", "-57.6215, -438.184, -10.8198, 0.52", "-57.997, -439.38, -10.7057, 0.52", "-58.3415, -440.51, -10.6668, 0.52", "-58.6437, -441.557, -10.6307, 0.52", "-58.9758, -442.858, -10.5827, 0.52", "-59.2895, -444.191, -10.5169, 0.52", "-59.5529, -445.32, -10.4348, 0.52", "-59.8151, -446.367, -10.3214, 0.52", "-60.02, -447.111, -10.2345, 0.52", "-60.42, -448.474, -10.0671, 0.52", "-60.7254, -449.403, -9.94191, 0.52", "-61.0122, -450.257, -9.82477, 0.52", "-61.5148, -451.867, -9.6168, 0.52", "-61.8946, -453.218, -9.45648, 0.52", "-62.2558, -454.616, -9.30134, 0.52", "-62.7573, -456.479, -9.08773, 0.52", "-63.4233, -458.786, -8.7768, 0.52", "-63.9429, -460.486, -8.58189, 0.52", "-64.4923, -462.195, -8.44299, 0.52", "-65.3113, -464.567, -8.34693, 0.52", "-66.0614, -466.579, -8.3265, 0.52", "-67.3809, -469.704, -8.35827, 0.52", "-68.5041, -472.02, -8.41412, 0.52", "-69.449, -473.78, -8.47322, 0.52", "-70.2334, -475.16, -8.53625, 0.52", "-70.8441, -476.202, -8.59079, 0.52", "-71.4598, -477.275, -8.63419, 0.52", "-71.917, -478.091, -8.62978, 0.52", "-72.5827, -479.279, -8.48879, 0.52", "-73.1632, -480.357, -8.30033, 0.52", "-73.9046, -481.794, -8.01574, 0.52", "-74.6273, -483.254, -7.73694, 0.52", "-75.3304, -484.823, -7.46217, 0.52", "-76.1469, -486.753, -7.14055, 0.52", "-76.7183, -488.158, -6.91419, 0.52", "-77.3425, -489.785, -6.66476, 0.52", "-77.8013, -491.022, -6.52392, 0.52", "-78.5367, -493.05, -6.31321, 0.52", "-78.7681, -493.723, -6.25417, 0.52", "-79.2308, -495.234, -6.16093, 0.52", "-79.6045, -496.434, -6.10763, 0.52", "-80.1856, -498.284, -6.07954, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-51.7603, -393.607, -13.87, 0.52", "-49.7968, -394.316, -13.4768, 0.52", "-49.0956, -394.57, -13.3364, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-21.0091, -184.374, 32.8329, 0.44", "-20.4264, -184.868, 32.384, 0.44", "-20.0708, -185.169, 32.11, 0.44", "-18.4973, -186.503, 30.8977, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-21.0091, -184.374, 32.8329, 0.44", "-21.3797, -186.148, 33.4603, 0.44", "-21.4855, -186.667, 33.6206, 0.44", "-21.5591, -187.098, 33.7823, 0.44", "-21.6332, -187.781, 34.0425, 0.44", "-21.7216, -188.675, 34.3922, 0.44", "-21.7916, -189.461, 34.7357, 0.44", "-21.896, -190.526, 35.2554, 0.44", "-22.0881, -191.779, 35.948, 0.44", "-22.3081, -192.697, 36.5715, 0.44", "-22.5411, -193.325, 37.073, 0.44", "-23.1551, -194.463, 38.2092, 0.44", "-23.9275, -195.604, 39.54, 0.44", "-24.2909, -196.046, 40.1258, 0.44", "-25.2028, -196.94, 41.4158, 0.44", "-25.8219, -197.521, 42.3249, 0.44", "-26.577, -198.322, 43.546, 0.44", "-26.7725, -198.518, 43.8587, 0.44", "-26.9644, -198.768, 44.2373, 0.44", "-27.154, -199.176, 44.7868, 0.44", "-27.286, -200.579, 46.0724, 0.44", "-27.2456, -201.182, 46.5628, 0.44" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-26.4277, -162.221, 22.5634, 0.44", "-26.0503, -162.518, 21.886, 0.44", "-25.7499, -162.754, 21.3469, 0.44", "-25.331, -163.082, 20.5951, 0.44", "-25.1628, -163.214, 20.2933, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-26.4277, -162.221, 22.5634, 0.44", "-26.3741, -160.635, 22.6232, 0.44", "-26.3198, -159.029, 22.6837, 0.44", "-26.2933, -158.247, 22.7132, 0.44", "-26.2514, -157.008, 22.7599, 0.44", "-26.2014, -155.529, 22.8156, 0.44", "-26.1581, -154.246, 22.8639, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-80.1856, -498.284, -6.07954, 0.37", "-81.1726, -499.134, -6.2436, 0.37", "-81.9224, -499.829, -6.47784, 0.37", "-82.6936, -500.605, -6.74675, 0.37", "-83.2849, -501.191, -6.94797, 0.37", "-83.7528, -501.607, -7.08808, 0.37", "-84.3721, -502.104, -7.25604, 0.37", "-85.443, -502.831, -7.65627, 0.37", "-86.3579, -503.274, -8.00822, 0.37", "-86.9502, -503.445, -8.23171, 0.37", "-88.1058, -503.61, -8.66651, 0.37", "-88.5916, -503.625, -8.81816, 0.37", "-90.6856, -503.51, -9.32608, 0.37", "-91.485, -503.409, -9.46486, 0.37", "-93.3195, -503.061, -9.72041, 0.37", "-94.3971, -502.801, -9.77831, 0.37", "-95.9637, -502.299, -9.73369, 0.37", "-97.239, -501.795, -9.59724, 0.37", "-98.1683, -501.344, -9.42057, 0.37", "-99.2695, -500.736, -9.21525, 0.37", "-100.931, -499.756, -8.92237, 0.37", "-102.422, -498.818, -8.71961, 0.37", "-103.249, -498.272, -8.69994, 0.37", "-104.628, -497.345, -8.69682, 0.37", "-107.364, -495.526, -8.77855, 0.37", "-109.026, -494.451, -8.90091, 0.37", "-110.641, -493.459, -9.13322, 0.37", "-113.087, -492.061, -9.5281, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-80.1856, -498.284, -6.07954, 0.52", "-80.6553, -500.302, -5.75931, 0.52", "-80.7923, -501.117, -5.64998, 0.52", "-80.8884, -502.126, -5.52995, 0.52", "-80.8675, -503.133, -5.42097, 0.52", "-80.7454, -504.407, -5.29151, 0.52", "-80.4711, -506.481, -5.21897, 0.52", "-80.1575, -508.12, -5.28101, 0.52", "-79.815, -509.734, -5.40147, 0.52", "-79.3402, -511.98, -5.63217, 0.52", "-79.16, -512.918, -5.74873, 0.52", "-78.8053, -515.461, -6.1175, 0.52", "-78.7609, -516.372, -6.26316, 0.52", "-78.8984, -517.641, -6.48307, 0.52", "-79.2772, -518.979, -6.68456, 0.52", "-79.6768, -519.965, -6.79238, 0.52", "-80.1209, -520.912, -6.84533, 0.52", "-80.5758, -521.814, -6.84397, 0.52", "-81.4223, -523.491, -6.83743, 0.52", "-82.4796, -525.718, -6.83135, 0.52", "-83.1608, -527.346, -6.83974, 0.52", "-84.0147, -529.471, -6.84937, 0.52", "-84.5348, -530.799, -6.85071, 0.52", "-85.0197, -532.056, -6.8395, 0.52", "-85.4957, -533.403, -6.79174, 0.52", "-86.0968, -535.511, -6.75112, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-27.2456, -201.182, 46.5628, 0.44", "-27.1486, -202.396, 47.9173, 0.44", "-27.1148, -202.818, 48.3881, 0.44", "-27.0795, -203.261, 48.8814, 0.44", "-27.0536, -203.584, 49.2423, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-27.2456, -201.182, 46.5628, 0.44", "-26.0771, -201.497, 47.9661, 0.44", "-24.8053, -201.84, 49.4933, 0.44", "-24.1084, -202.028, 50.3302, 0.44", "-23.5899, -202.168, 50.9528, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-26.1581, -154.246, 22.8639, 0.44", "-26.8888, -155.282, 23.8086, 0.44", "-27.2671, -155.818, 24.2977, 0.44", "-28.2918, -157.27, 25.6224, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-26.1581, -154.246, 22.8639, 0.44", "-26.3719, -152.973, 21.8702, 0.44", "-26.9049, -149.53, 19.5014, 0.44", "-27.0232, -148.592, 18.9467, 0.44", "-27.1383, -147.62, 18.4371, 0.44", "-27.2763, -146.533, 17.9656, 0.44", "-27.4826, -145.273, 17.4945, 0.44", "-28.0195, -142.003, 16.5289, 0.44", "-28.2684, -140.209, 16.1639, 0.44", "-28.4086, -139.25, 15.9501, 0.44", "-28.7575, -137.131, 15.3977, 0.44", "-29.3091, -133.862, 14.4857, 0.44", "-29.5299, -132.487, 14.0955, 0.44", "-29.7773, -130.626, 13.584, 0.44", "-30.0485, -128.543, 12.9129, 0.44", "-30.2842, -126.271, 12.0943, 0.44", "-30.3653, -124.756, 11.4791, 0.44", "-30.3602, -123.652, 11.0188, 0.44", "-30.3505, -122.543, 10.5008, 0.44", "-30.2824, -120.225, 9.34176, 0.44", "-30.2149, -119.225, 8.85257, 0.44", "-30.062, -118.127, 8.26807, 0.44", "-29.9128, -117.218, 7.73892, 0.44", "-29.5427, -115.189, 6.55444, 0.44", "-29.4403, -114.634, 6.25344, 0.44", "-29.2974, -113.886, 5.92197, 0.44", "-29.174, -112.92, 5.59846, 0.44", "-29.0957, -111.905, 5.38733, 0.44", "-29.0327, -110.822, 5.21295, 0.44", "-29.0226, -110.061, 5.04732, 0.44", "-29.0361, -109.162, 4.78382, 0.44", "-29.0691, -107.932, 4.37442, 0.44", "-29.1066, -106.632, 3.92689, 0.44", "-29.0764, -104.87, 3.28318, 0.44", "-28.9194, -101.539, 1.90926, 0.44", "-28.834, -100.42, 1.41118, 0.44", "-28.7276, -99.1824, 0.805958, 0.44", "-28.557, -97.5592, -0.0256977, 0.44", "-28.2395, -95.25, -1.21006, 0.44", "-27.8657, -92.9477, -2.35175, 0.44", "-27.5855, -91.5209, -3.05043, 0.44", "-27.1979, -89.499, -4.11597, 0.44", "-26.9412, -88.1336, -4.90227, 0.44", "-26.65, -86.5011, -5.9362, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-86.0968, -535.511, -6.75112, 0.52", "-86.444, -537.442, -6.47404, 0.52", "-86.6547, -538.614, -6.30582, 0.52", "-86.8655, -539.785, -6.13762, 0.52", "-87.0876, -541.02, -5.96033, 0.52", "-87.407, -542.797, -5.70538, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-86.0968, -535.511, -6.75112, 0.52", "-85.5301, -537.288, -6.791, 0.52", "-85.2229, -538.241, -6.75218, 0.52", "-84.8774, -539.27, -6.60873, 0.52", "-84.4769, -540.384, -6.4002, 0.52", "-84.0733, -541.507, -6.19008, 0.52", "-83.7838, -542.312, -6.03932, 0.52", "-83.4295, -543.228, -5.78249, 0.52", "-82.8197, -544.743, -5.28584, 0.52", "-82.4099, -545.691, -4.91056, 0.52" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-27.0536, -203.584, 49.2423, 0.44", "-27.2215, -204.778, 50.1648, 0.44", "-27.4738, -206.246, 51.1457, 0.44", "-27.6019, -207.05, 51.6298, 0.44", "-27.7764, -208.517, 52.4453, 0.44", "-27.9409, -210.411, 53.5484, 0.44", "-27.9991, -211.735, 54.3223, 0.44", "-28.0131, -212.739, 54.8445, 0.44", "-27.9912, -213.483, 55.1895, 0.44", "-27.9357, -214.366, 55.5846, 0.44", "-27.7983, -216.463, 56.5383, 0.44", "-27.7654, -217.455, 56.9685, 0.44", "-27.8429, -218.428, 57.4005, 0.44", "-28.058, -219.468, 57.8373, 0.44", "-28.3454, -220.422, 58.1841, 0.44", "-29.042, -222.388, 58.8872, 0.44", "-29.3898, -223.249, 59.1708, 0.44", "-30.1161, -224.844, 59.7102, 0.44", "-30.5324, -225.738, 60.0123, 0.44", "-31.0942, -227.093, 60.4551, 0.44", "-32.0259, -229.936, 61.2965, 0.44", "-32.2351, -230.765, 61.5003, 0.44", "-32.5434, -232.249, 61.8407, 0.44", "-32.6894, -233.059, 62.0009, 0.44", "-32.9343, -234.479, 62.308, 0.44", "-33.1639, -235.926, 62.6252, 0.44", "-33.4011, -237.526, 62.9496, 0.44", "-33.5709, -238.664, 63.2023, 0.44", "-34.0741, -241.341, 63.8266, 0.44", "-34.6343, -243.513, 64.3377, 0.44", "-34.918, -244.38, 64.5412, 0.44", "-35.3494, -245.468, 64.7445, 0.44", "-35.8011, -246.424, 64.8636, 0.44", "-36.6435, -247.881, 64.9288, 0.44", "-37.2415, -248.781, 64.8886, 0.44", "-37.698, -249.469, 64.8355, 0.44", "-38.8997, -251.372, 64.741, 0.44", "-39.6891, -252.764, 64.7102, 0.44", "-40.3819, -254.202, 64.7209, 0.44", "-41.0317, -255.889, 64.7889, 0.44", "-41.6336, -257.929, 64.9356, 0.44", "-41.9609, -259.351, 65.0795, 0.44", "-42.1452, -260.576, 65.2451, 0.44", "-42.3406, -262.16, 65.4926, 0.44", "-42.5619, -263.513, 65.7156, 0.44", "-42.9342, -264.944, 65.9503, 0.44", "-43.3755, -266.394, 66.1704, 0.44", "-43.807, -267.531, 66.3575, 0.44", "-44.6917, -269.287, 66.6706, 0.44", "-45.907, -271.037, 67.0151, 0.44", "-46.674, -271.861, 67.1956, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-27.0536, -203.584, 49.2423, 0.44", "-28.0632, -204.231, 49.0032, 0.44", "-28.781, -204.69, 48.8332, 0.44" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-26.65, -86.5011, -5.9362, 0.44", "-29.0901, -84.9037, -6.42998, 0.44", "-30.197, -84.179, -6.65398, 0.44", "-31.0416, -83.6261, -6.8249, 0.44", "-32.596, -82.6085, -7.13944, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-26.65, -86.5011, -5.9362, 0.44", "-25.8296, -83.8368, -6.55323, 0.44", "-25.0389, -81.2687, -7.14793, 0.44", "-24.0949, -78.203, -7.85788, 0.44", "-23.6396, -76.7241, -8.20038, 0.44", "-23.2624, -75.4991, -8.48404, 0.44" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_75", "dend_30", "dend_16", "dend_1", "dend_89", "dend_76", "dend_72", "dend_31", "dend_28", "dend_17", "dend_13", "dend_2", "dend_91", "dend_90", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_32", "dend_27", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_93", "dend_92", "dend_80", "dend_79", "dend_71", "dend_68", "dend_64", "dend_33", "dend_24", "dend_19", "dend_12", "dend_11", "dend_9", "dend_4", "dend_88", "dend_81", "dend_70", "dend_69", "dend_66", "dend_65", "dend_45", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_83", "dend_82", "dend_63", "dend_46", "dend_44", "dend_35", "dend_23", "dend_22", "dend_8", "dend_7", "dend_85", "dend_84", "dend_62", "dend_47", "dend_43", "dend_36", "dend_87", "dend_86", "dend_55", "dend_48", "dend_38", "dend_37", "dend_61", "dend_56", "dend_54", "dend_49", "dend_42", "dend_39", "dend_58", "dend_57", "dend_53", "dend_50", "dend_41", "dend_40", "dend_60", "dend_59", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_75", "dend_30", "dend_16", "dend_1", "dend_89", "dend_76", "dend_72", "dend_31", "dend_28", "dend_17", "dend_13", "dend_2", "dend_91", "dend_90", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_32", "dend_27", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_93", "dend_92", "dend_80", "dend_79", "dend_71", "dend_68", "dend_64", "dend_33", "dend_24", "dend_19", "dend_12", "dend_11", "dend_9", "dend_4", "dend_88", "dend_81", "dend_70", "dend_69", "dend_66", "dend_65", "dend_45", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_83", "dend_82", "dend_63", "dend_46", "dend_44", "dend_35", "dend_23", "dend_22", "dend_8", "dend_7", "dend_85", "dend_84", "dend_62", "dend_47", "dend_43", "dend_36", "dend_87", "dend_86", "dend_55", "dend_48", "dend_38", "dend_37", "dend_61", "dend_56", "dend_54", "dend_49", "dend_42", "dend_39", "dend_58", "dend_57", "dend_53", "dend_50", "dend_41", "dend_40", "dend_60", "dend_59", "dend_52", "dend_51" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "axon_0", "dend_75", "dend_30", "dend_16", "dend_1", "axon_1", "dend_89", "dend_76", "dend_72", "dend_31", "dend_28", "dend_17", "dend_13", "dend_2", "dend_91", "dend_90", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_32", "dend_27", "dend_18", "dend_15", "dend_14", "dend_10", "dend_3", "dend_93", "dend_92", "dend_80", "dend_79", "dend_71", "dend_68", "dend_64", "dend_33", "dend_24", "dend_19", "dend_12", "dend_11", "dend_9", "dend_4", "dend_88", "dend_81", "dend_70", "dend_69", "dend_66", "dend_65", "dend_45", "dend_34", "dend_26", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_83", "dend_82", "dend_63", "dend_46", "dend_44", "dend_35", "dend_23", "dend_22", "dend_8", "dend_7", "dend_85", "dend_84", "dend_62", "dend_47", "dend_43", "dend_36", "dend_87", "dend_86", "dend_55", "dend_48", "dend_38", "dend_37", "dend_61", "dend_56", "dend_54", "dend_49", "dend_42", "dend_39", "dend_58", "dend_57", "dend_53", "dend_50", "dend_41", "dend_40", "dend_60", "dend_59", "dend_52", "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_34", "dend_34", "dend_34", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_63", "dend_63", "dend_63", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_DBC_d59edbb45e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_29
create dend_75
public dend_75
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_89, id: dend_89, parent: dend_75
create dend_89
public dend_89
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_30
create dend_72
public dend_72
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_16
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_67, id: dend_67, parent: dend_31
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_17
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_32
create dend_64
public dend_64
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_88, id: dend_88, parent: dend_80
create dend_88
public dend_88
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_45, id: dend_45, parent: dend_33
create dend_45
public dend_45
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_63, id: dend_63, parent: dend_45
create dend_63
public dend_63
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_62, id: dend_62, parent: dend_46
create dend_62
public dend_62
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_55, id: dend_55, parent: dend_47
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_0, axon_0, dend_75, dend_30, dend_16, dend_1, axon_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_93
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_63, dend_63, dend_63, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000018766376804)
    connect dend_0(0), soma_0(0.45000018766376804)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_89(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_67(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_88(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_45(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_63(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_62(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_55(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.92851, -12.838, 0.0, 2.34028 ) }
    soma_0 { pt3dadd( 1.77053, -11.651, 0.0, 3.94329 ) }
    soma_0 { pt3dadd( 1.61254, -10.464, 0.0, 5.35921 ) }
    soma_0 { pt3dadd( 1.45455, -9.27692, 0.0, 6.69673 ) }
    soma_0 { pt3dadd( 1.29656, -8.08988, 0.0, 7.75393 ) }
    soma_0 { pt3dadd( 1.13858, -6.90284, 0.0, 8.64632 ) }
    soma_0 { pt3dadd( 0.980589, -5.7158, 0.0, 9.469 ) }
    soma_0 { pt3dadd( 0.822601, -4.52876, 0.0, 10.3084 ) }
    soma_0 { pt3dadd( 0.664614, -3.34172, 0.0, 11.1451 ) }
    soma_0 { pt3dadd( 0.506626, -2.15468, 0.0, 11.8845 ) }
    soma_0 { pt3dadd( 0.348639, -0.967645, 0.0, 12.0097 ) }
    soma_0 { pt3dadd( 0.190651, 0.219395, 0.0, 12.0138 ) }
    soma_0 { pt3dadd( 0.0326638, 1.40643, 0.0, 11.4011 ) }
    soma_0 { pt3dadd( -0.125324, 2.59347, 0.0, 10.4698 ) }
    soma_0 { pt3dadd( -0.283311, 3.78051, 0.0, 9.36538 ) }
    soma_0 { pt3dadd( -0.441299, 4.96755, 0.0, 8.29429 ) }
    soma_0 { pt3dadd( -0.599286, 6.15459, 0.0, 7.29384 ) }
    soma_0 { pt3dadd( -0.757274, 7.34163, 0.0, 6.35176 ) }
    soma_0 { pt3dadd( -0.915261, 8.52867, 0.0, 5.48996 ) }
    soma_0 { pt3dadd( -1.07325, 9.71571, 0.0, 4.74604 ) }
    soma_0 { pt3dadd( -1.23124, 10.9027, 0.0, 2.99829 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 2.20047, -13.95, 0.07, 2.87 ) }
    dend_29 { pt3dadd( 2.29502, -14.6163, 0.0055053, 2.87 ) }
    dend_29 { pt3dadd( 2.81502, -18.0599, 0.0858553, 2.87 ) }
    dend_29 { pt3dadd( 3.38687, -21.5958, 0.346831, 2.87 ) }
    dend_29 { pt3dadd( 3.99725, -25.3698, 0.625388, 2.58 ) }
    dend_29 { pt3dadd( 4.6415, -29.3534, 0.919405, 2.58 ) }
    dend_29 { pt3dadd( 5.29667, -33.4044, 1.2184, 2.06 ) }
    dend_29 { pt3dadd( 6.21584, -39.0167, 1.73025, 2.06 ) }
    dend_29 { pt3dadd( 6.54304, -41.032, 1.9989, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.13953, 13.392, 1.0, 3.46 ) }
    dend_0 { pt3dadd( -2.20381, 13.6752, 1.0, 3.46 ) }
    dend_0 { pt3dadd( -2.88502, 16.9409, 0.992666, 2.65 ) }
    dend_0 { pt3dadd( -3.44274, 19.6287, 0.984227, 2.65 ) }
    dend_0 { pt3dadd( -4.06048, 22.6802, 0.97386, 2.65 ) }
    dend_0 { pt3dadd( -4.62132, 25.5181, 0.902624, 2.5 ) }
    dend_0 { pt3dadd( -5.05746, 27.7609, 0.818017, 2.5 ) }
    dend_0 { pt3dadd( -5.55571, 30.4025, 0.687573, 2.5 ) }
    dend_0 { pt3dadd( -6.10491, 33.3424, 0.508758, 2.06 ) }
    dend_0 { pt3dadd( -6.64497, 36.1357, 0.330011, 1.99 ) }
    dend_0 { pt3dadd( -6.98695, 37.859, 0.222705, 1.99 ) }
    dend_0 { pt3dadd( -7.41347, 40.0489, 0.156663, 1.99 ) }
    dend_0 { pt3dadd( -7.92112, 42.6562, 0.0917866, 1.99 ) }
    dend_0 { pt3dadd( -8.40097, 44.9848, 0.0608751, 1.99 ) }
    dend_0 { pt3dadd( -8.83339, 47.1182, 0.078022, 1.69 ) }
    dend_0 { pt3dadd( -9.38045, 49.7041, 0.201871, 1.4 ) }
    dend_0 { pt3dadd( -9.845, 51.8666, 0.444727, 1.25 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 47/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.23124, 10.9027, 0.0, 0.52 ) }
    axon_0 { pt3dadd( -3.2102, 25.7716, 0.0, 0.52 ) }
    axon_0 { pt3dadd( -5.18917, 40.6405, 0.0, 0.52 ) }
    // Section: dend_75, id: dend_75, parent: dend_29 (entry count 50/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 6.54304, -41.032, 1.9989, 0.74 ) }
    dend_75 { pt3dadd( 7.69904, -42.2211, 2.23206, 0.74 ) }
    dend_75 { pt3dadd( 8.5748, -43.1399, 2.35045, 0.74 ) }
    dend_75 { pt3dadd( 9.88934, -44.5192, 2.52815, 0.74 ) }
    dend_75 { pt3dadd( 10.7655, -45.4386, 2.6466, 0.74 ) }
    dend_75 { pt3dadd( 12.3008, -47.0494, 2.85415, 0.74 ) }
    dend_75 { pt3dadd( 13.2112, -48.0047, 2.97722, 0.74 ) }
    dend_75 { pt3dadd( 14.8286, -49.6751, 3.21806, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 6.54304, -41.032, 1.9989, 1.33 ) }
    dend_30 { pt3dadd( 6.99373, -44.2367, 1.64715, 1.33 ) }
    dend_30 { pt3dadd( 7.28034, -46.2747, 1.42347, 1.33 ) }
    dend_30 { pt3dadd( 7.68482, -49.1507, 1.1078, 1.33 ) }
    dend_30 { pt3dadd( 7.92903, -50.8872, 0.917198, 1.33 ) }
    dend_30 { pt3dadd( 8.19366, -52.7688, 0.71067, 1.33 ) }
    dend_30 { pt3dadd( 8.5542, -55.3325, 0.429284, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 65/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.845, 51.8666, 0.444727, 1.18 ) }
    dend_16 { pt3dadd( -9.91779, 53.636, 0.906055, 1.18 ) }
    dend_16 { pt3dadd( -9.93464, 54.9327, 1.10157, 1.18 ) }
    dend_16 { pt3dadd( -9.92982, 56.1239, 1.22103, 1.18 ) }
    dend_16 { pt3dadd( -9.92263, 57.1974, 1.27031, 1.18 ) }
    dend_16 { pt3dadd( -9.95155, 61.3433, 1.08452, 1.25 ) }
    dend_16 { pt3dadd( -9.95911, 64.5847, 0.767349, 0.81 ) }
    dend_16 { pt3dadd( -9.91818, 65.9838, 0.597867, 0.81 ) }
    dend_16 { pt3dadd( -9.8532, 66.9568, 0.408794, 0.81 ) }
    dend_16 { pt3dadd( -9.71929, 68.0947, 0.0402853, 0.81 ) }
    dend_16 { pt3dadd( -9.46222, 69.7937, -0.697667, 0.81 ) }
    dend_16 { pt3dadd( -9.28373, 70.8939, -1.27878, 0.81 ) }
    dend_16 { pt3dadd( -9.06813, 72.1384, -1.84197, 0.81 ) }
    dend_16 { pt3dadd( -8.90694, 73.0157, -2.25344, 0.81 ) }
    dend_16 { pt3dadd( -8.56351, 74.6337, -2.97797, 0.81 ) }
    dend_16 { pt3dadd( -8.35219, 75.5388, -3.36342, 0.81 ) }
    dend_16 { pt3dadd( -8.0581, 76.7391, -3.83228, 0.81 ) }
    dend_16 { pt3dadd( -7.87458, 77.6097, -4.19215, 0.81 ) }
    dend_16 { pt3dadd( -7.66252, 78.9359, -4.74006, 0.81 ) }
    dend_16 { pt3dadd( -7.48338, 80.182, -5.2042, 0.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 85/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.845, 51.8666, 0.444727, 1.25 ) }
    dend_1 { pt3dadd( -10.1266, 52.9632, 1.1398, 1.25 ) }
    dend_1 { pt3dadd( -10.3489, 53.8288, 1.68845, 1.25 ) }
    dend_1 { pt3dadd( -10.7964, 55.5714, 2.79299, 1.25 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 89/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.18917, 40.6405, 0.0, 0.52 ) }
    axon_1 { pt3dadd( -7.16813, 55.5094, 0.0, 0.52 ) }
    axon_1 { pt3dadd( -9.14709, 70.3782, 0.0, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_75 (entry count 92/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 14.8286, -49.6751, 3.21806, 0.37 ) }
    dend_89 { pt3dadd( 16.2101, -51.8236, 3.37654, 0.37 ) }
    dend_89 { pt3dadd( 17.1801, -53.1811, 3.60582, 0.37 ) }
    dend_89 { pt3dadd( 18.1071, -54.4423, 3.85645, 0.37 ) }
    dend_89 { pt3dadd( 19.592, -56.5438, 4.26286, 0.37 ) }
    dend_89 { pt3dadd( 20.7166, -58.0713, 4.67511, 0.37 ) }
    dend_89 { pt3dadd( 21.5428, -59.1493, 5.00026, 0.37 ) }
    dend_89 { pt3dadd( 22.5577, -60.4103, 5.47367, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_89 { pt3dadd( 23.5969, -61.6725, 5.97099, 0.37 ) }
    dend_89 { pt3dadd( 24.8491, -63.0626, 6.53211, 0.37 ) }
    dend_89 { pt3dadd( 26.594, -64.8214, 7.11538, 0.37 ) }
    dend_89 { pt3dadd( 27.55, -65.7285, 7.4434, 0.37 ) }
    dend_89 { pt3dadd( 28.9315, -67.1156, 7.9603, 0.37 ) }
    dend_89 { pt3dadd( 29.2918, -67.5035, 8.09087, 0.37 ) }
    dend_89 { pt3dadd( 30.1905, -68.5448, 8.42085, 0.37 ) }
    dend_89 { pt3dadd( 31.3719, -69.9991, 8.85508, 0.37 ) }
    dend_89 { pt3dadd( 32.4236, -71.4231, 9.19823, 0.37 ) }
    dend_89 { pt3dadd( 33.8024, -73.2975, 9.66452, 0.37 ) }
    dend_89 { pt3dadd( 34.719, -74.5962, 10.0046, 0.37 ) }
    dend_89 { pt3dadd( 35.7398, -76.1537, 10.3996, 0.37 ) }
    dend_89 { pt3dadd( 36.2837, -77.0914, 10.6162, 0.37 ) }
    dend_89 { pt3dadd( 36.988, -78.3867, 10.9081, 0.37 ) }
    dend_89 { pt3dadd( 37.6487, -79.4255, 11.068, 0.37 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 15/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 14.8286, -49.6751, 3.21806, 0.59 ) }
    dend_76 { pt3dadd( 16.1871, -49.8005, 2.60321, 0.59 ) }
    dend_76 { pt3dadd( 16.9292, -49.8497, 2.27226, 0.59 ) }
    dend_76 { pt3dadd( 18.4758, -49.9301, 1.59587, 0.59 ) }
    dend_76 { pt3dadd( 19.3583, -49.964, 1.15228, 0.52 ) }
    dend_76 { pt3dadd( 19.9086, -50.0015, 0.859495, 0.52 ) }
    dend_76 { pt3dadd( 20.748, -50.0677, 0.398649, 0.52 ) }
    dend_76 { pt3dadd( 21.5883, -50.1381, -0.0881883, 0.52 ) }
    dend_76 { pt3dadd( 22.5119, -50.2281, -0.583463, 0.52 ) }
    dend_76 { pt3dadd( 23.7099, -50.3512, -1.15545, 0.52 ) }
    dend_76 { pt3dadd( 24.8959, -50.4997, -1.64563, 0.52 ) }
    dend_76 { pt3dadd( 26.1456, -50.6852, -2.09011, 0.52 ) }
    dend_76 { pt3dadd( 27.0523, -50.8439, -2.3557, 0.52 ) }
    dend_76 { pt3dadd( 28.4436, -51.1095, -2.6593, 0.52 ) }
    dend_76 { pt3dadd( 29.57, -51.3213, -2.83771, 0.52 ) }
    dend_76 { pt3dadd( 30.5056, -51.49, -2.90132, 0.52 ) }
    dend_76 { pt3dadd( 31.4104, -51.6429, -2.94034, 0.52 ) }
    dend_76 { pt3dadd( 32.6999, -51.8803, -2.96157, 0.52 ) }
    dend_76 { pt3dadd( 33.7434, -52.078, -2.9723, 0.52 ) }
    dend_76 { pt3dadd( 34.9545, -52.306, -3.00558, 0.52 ) }
    dend_76 { pt3dadd( 37.3632, -52.7526, -3.01935, 0.52 ) }
    // Section: dend_72, id: dend_72, parent: dend_30 (entry count 36/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 8.5542, -55.3325, 0.429284, 0.81 ) }
    dend_72 { pt3dadd( 8.16469, -57.603, -0.576247, 0.81 ) }
    dend_72 { pt3dadd( 8.00994, -58.7166, -1.11527, 0.81 ) }
    dend_72 { pt3dadd( 7.89589, -59.5362, -1.51685, 0.81 ) }
    dend_72 { pt3dadd( 7.71032, -60.6361, -2.06558, 0.59 ) }
    dend_72 { pt3dadd( 7.63218, -61.1011, -2.32067, 0.52 ) }
    dend_72 { pt3dadd( 7.49123, -61.9434, -2.79825, 0.52 ) }
    dend_72 { pt3dadd( 7.23766, -63.1752, -3.49969, 0.52 ) }
    dend_72 { pt3dadd( 7.08656, -63.7981, -3.91243, 0.52 ) }
    dend_72 { pt3dadd( 6.94455, -64.2879, -4.26583, 0.52 ) }
    dend_72 { pt3dadd( 6.55732, -65.4083, -5.12821, 0.52 ) }
    dend_72 { pt3dadd( 6.39575, -65.7995, -5.44476, 0.52 ) }
    dend_72 { pt3dadd( 5.87504, -66.8274, -6.30538, 0.52 ) }
    dend_72 { pt3dadd( 5.48721, -67.5414, -6.89143, 0.52 ) }
    dend_72 { pt3dadd( 5.02372, -68.3831, -7.65523, 0.52 ) }
    dend_72 { pt3dadd( 4.6766, -69.0638, -8.27654, 0.52 ) }
    dend_72 { pt3dadd( 4.49615, -69.4597, -8.63553, 0.52 ) }
    dend_72 { pt3dadd( 4.34527, -69.8605, -9.00334, 0.52 ) }
    dend_72 { pt3dadd( 4.10543, -70.7534, -9.82143, 0.52 ) }
    dend_72 { pt3dadd( 3.86995, -71.9589, -10.9, 0.52 ) }
    dend_72 { pt3dadd( 3.79146, -72.6653, -11.5115, 0.52 ) }
    dend_72 { pt3dadd( 3.72802, -73.6311, -12.3029, 0.52 ) }
    dend_72 { pt3dadd( 3.719, -73.9659, -12.5853, 0.52 ) }
    dend_72 { pt3dadd( 3.70353, -75.2496, -13.6701, 0.52 ) }
    dend_72 { pt3dadd( 3.69347, -75.8827, -14.18, 0.52 ) }
    dend_72 { pt3dadd( 3.69911, -76.937, -14.9948, 0.52 ) }
    dend_72 { pt3dadd( 3.69944, -77.632, -15.5278, 0.52 ) }
    dend_72 { pt3dadd( 3.67067, -79.017, -16.5161, 0.52 ) }
    dend_72 { pt3dadd( 3.6651, -79.3224, -16.7177, 0.52 ) }
    dend_72 { pt3dadd( 3.64717, -80.1369, -17.1868, 0.52 ) }
    dend_72 { pt3dadd( 3.58554, -81.4729, -17.91, 0.52 ) }
    dend_72 { pt3dadd( 3.5082, -82.2578, -18.2834, 0.52 ) }
    dend_72 { pt3dadd( 3.3595, -83.3758, -18.7709, 0.52 ) }
    dend_72 { pt3dadd( 3.17291, -84.5073, -19.2495, 0.52 ) }
    dend_72 { pt3dadd( 3.00514, -85.3044, -19.5851, 0.52 ) }
    dend_72 { pt3dadd( 2.67888, -86.6152, -20.2042, 0.52 ) }
    dend_72 { pt3dadd( 2.35105, -87.7367, -20.7597, 0.52 ) }
    dend_72 { pt3dadd( 2.21044, -88.1898, -21.0263, 0.52 ) }
    dend_72 { pt3dadd( 1.77061, -89.5354, -21.898, 0.52 ) }
    dend_72 { pt3dadd( 1.34167, -90.8784, -22.8939, 0.52 ) }
    dend_72 { pt3dadd( 0.880233, -92.362, -24.1072, 0.52 ) }
    dend_72 { pt3dadd( 0.631288, -93.2602, -24.9306, 0.52 ) }
    dend_72 { pt3dadd( 0.288044, -94.6597, -26.3048, 0.52 ) }
    dend_72 { pt3dadd( 0.170257, -95.2268, -26.8897, 0.52 ) }
    dend_72 { pt3dadd( -0.0956549, -96.7323, -28.4631, 0.52 ) }
    dend_72 { pt3dadd( -0.11743, -96.9825, -28.7372, 0.52 ) }
    dend_72 { pt3dadd( -0.17681, -98.4894, -30.2801, 0.52 ) }
    dend_72 { pt3dadd( -0.147962, -99.2291, -31.0483, 0.52 ) }
    dend_72 { pt3dadd( -0.0500404, -100.35, -32.1499, 0.52 ) }
    dend_72 { pt3dadd( 0.0268936, -101.046, -32.8349, 0.52 ) }
    dend_72 { pt3dadd( 0.184911, -102.592, -34.2826, 0.52 ) }
    dend_72 { pt3dadd( 0.268858, -103.356, -34.9736, 0.52 ) }
    dend_72 { pt3dadd( 0.446965, -104.849, -36.2902, 0.52 ) }
    dend_72 { pt3dadd( 0.498675, -105.327, -36.7113, 0.52 ) }
    dend_72 { pt3dadd( 0.573, -106.52, -37.6842, 0.52 ) }
    dend_72 { pt3dadd( 0.578184, -107.021, -38.0611, 0.52 ) }
    dend_72 { pt3dadd( 0.525978, -107.708, -38.4933, 0.52 ) }
    dend_72 { pt3dadd( 0.323204, -109.14, -39.2507, 0.52 ) }
    dend_72 { pt3dadd( 0.129174, -109.905, -39.6007, 0.52 ) }
    dend_72 { pt3dadd( -0.16382, -110.71, -39.9752, 0.52 ) }
    dend_72 { pt3dadd( -0.427997, -111.278, -40.2296, 0.52 ) }
    dend_72 { pt3dadd( -0.71279, -111.778, -40.4676, 0.52 ) }
    dend_72 { pt3dadd( -1.31958, -112.601, -40.882, 0.52 ) }
    dend_72 { pt3dadd( -2.41183, -113.878, -41.6018, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_72 { pt3dadd( -3.18881, -114.801, -42.2928, 0.52 ) }
    dend_72 { pt3dadd( -3.70536, -115.432, -42.8308, 0.52 ) }
    dend_72 { pt3dadd( -4.0903, -115.931, -43.2786, 0.52 ) }
    dend_72 { pt3dadd( -4.97093, -117.16, -44.3809, 0.52 ) }
    dend_72 { pt3dadd( -5.69204, -118.275, -45.3932, 0.52 ) }
    dend_72 { pt3dadd( -6.72294, -120.067, -46.9426, 0.52 ) }
    dend_72 { pt3dadd( -7.26051, -121.065, -47.7988, 0.52 ) }
    dend_72 { pt3dadd( -7.55006, -121.633, -48.2877, 0.52 ) }
    dend_72 { pt3dadd( -8.10725, -122.862, -49.3633, 0.52 ) }
    dend_72 { pt3dadd( -8.73807, -124.364, -50.6401, 0.52 ) }
    dend_72 { pt3dadd( -8.9432, -124.849, -51.0218, 0.52 ) }
    dend_72 { pt3dadd( -9.3192, -125.796, -51.8078, 0.52 ) }
    dend_72 { pt3dadd( -9.71044, -126.974, -52.8509, 0.52 ) }
    dend_72 { pt3dadd( -10.1402, -128.489, -54.1908, 0.52 ) }
    dend_72 { pt3dadd( -10.4099, -129.61, -55.1609, 0.52 ) }
    dend_72 { pt3dadd( -10.5377, -130.183, -55.6295, 0.52 ) }
    dend_72 { pt3dadd( -11.0602, -132.435, -57.4092, 0.52 ) }
    dend_72 { pt3dadd( -11.2758, -133.345, -58.0811, 0.52 ) }
    dend_72 { pt3dadd( -11.5486, -134.338, -58.8033, 0.52 ) }
    dend_72 { pt3dadd( -11.7082, -134.847, -59.162, 0.52 ) }
    dend_72 { pt3dadd( -11.9877, -135.805, -60.0149, 0.52 ) }
    dend_72 { pt3dadd( -12.2093, -136.494, -60.7066, 0.52 ) }
    dend_72 { pt3dadd( -12.4135, -137.053, -61.2874, 0.52 ) }
    dend_72 { pt3dadd( -12.948, -138.569, -63.0539, 0.52 ) }
    dend_72 { pt3dadd( -13.207, -139.342, -64.0326, 0.52 ) }
    dend_72 { pt3dadd( -13.8597, -141.491, -66.9096, 0.52 ) }
    dend_72 { pt3dadd( -13.9794, -141.956, -67.5686, 0.52 ) }
    dend_72 { pt3dadd( -14.0994, -142.579, -68.4866, 0.52 ) }
    dend_72 { pt3dadd( -14.2432, -143.439, -69.8136, 0.52 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.5542, -55.3325, 0.429284, 1.33 ) }
    dend_31 { pt3dadd( 8.55488, -55.3811, 0.434192, 1.33 ) }
    dend_31 { pt3dadd( 8.58591, -57.3476, 0.590419, 1.33 ) }
    dend_31 { pt3dadd( 8.62074, -60.0812, 0.765211, 1.33 ) }
    dend_31 { pt3dadd( 8.63837, -61.687, 0.905323, 1.33 ) }
    dend_31 { pt3dadd( 8.66739, -63.2996, 1.06417, 1.18 ) }
    dend_31 { pt3dadd( 8.70173, -64.6275, 1.22328, 1.18 ) }
    dend_31 { pt3dadd( 8.77455, -66.4424, 1.46666, 1.18 ) }
    dend_31 { pt3dadd( 8.84928, -67.951, 1.6855, 1.18 ) }
    dend_31 { pt3dadd( 8.89508, -69.3429, 1.90402, 1.18 ) }
    dend_31 { pt3dadd( 8.90622, -71.0798, 2.20145, 1.18 ) }
    dend_31 { pt3dadd( 8.88512, -72.9571, 2.56337, 1.18 ) }
    dend_31 { pt3dadd( 8.85629, -74.5298, 2.87502, 1.18 ) }
    dend_31 { pt3dadd( 8.83721, -75.4895, 3.07565, 1.18 ) }
    dend_31 { pt3dadd( 8.77689, -77.1641, 3.40272, 1.18 ) }
    dend_31 { pt3dadd( 8.68764, -78.689, 3.65262, 1.03 ) }
    dend_31 { pt3dadd( 8.60479, -79.7783, 3.83172, 1.03 ) }
    dend_31 { pt3dadd( 8.42601, -81.8555, 4.15225, 1.03 ) }
    dend_31 { pt3dadd( 8.30835, -83.2284, 4.37676, 1.03 ) }
    dend_31 { pt3dadd( 8.18089, -84.9621, 4.65859, 1.03 ) }
    dend_31 { pt3dadd( 8.06572, -86.5285, 4.88584, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_16 (entry count 50/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -7.48338, 80.182, -5.2042, 0.52 ) }
    dend_28 { pt3dadd( -8.28778, 81.377, -5.94964, 0.52 ) }
    dend_28 { pt3dadd( -8.73788, 82.0528, -6.37669, 0.52 ) }
    dend_28 { pt3dadd( -9.77207, 83.5761, -7.25091, 0.52 ) }
    dend_28 { pt3dadd( -10.0508, 83.9793, -7.4591, 0.52 ) }
    dend_28 { pt3dadd( -10.5474, 84.671, -7.77524, 0.52 ) }
    dend_28 { pt3dadd( -10.9114, 85.1779, -7.98186, 0.52 ) }
    dend_28 { pt3dadd( -11.6438, 86.222, -8.36156, 0.52 ) }
    dend_28 { pt3dadd( -12.1672, 87.015, -8.62868, 0.52 ) }
    dend_28 { pt3dadd( -12.5252, 87.5998, -8.78675, 0.52 ) }
    dend_28 { pt3dadd( -12.9056, 88.2227, -8.97167, 0.52 ) }
    dend_28 { pt3dadd( -13.1965, 88.7059, -9.11294, 0.52 ) }
    dend_28 { pt3dadd( -13.853, 89.7834, -9.47789, 0.52 ) }
    dend_28 { pt3dadd( -14.119, 90.2331, -9.6315, 0.52 ) }
    dend_28 { pt3dadd( -14.3687, 90.6338, -9.79362, 0.52 ) }
    dend_28 { pt3dadd( -14.7354, 91.1841, -10.0174, 0.52 ) }
    dend_28 { pt3dadd( -15.1303, 91.6963, -10.2671, 0.52 ) }
    dend_28 { pt3dadd( -16.1678, 92.8702, -10.8548, 0.52 ) }
    dend_28 { pt3dadd( -16.4866, 93.2254, -11.0177, 0.52 ) }
    dend_28 { pt3dadd( -16.7414, 93.5181, -11.1513, 0.52 ) }
    dend_28 { pt3dadd( -17.1909, 94.055, -11.3814, 0.52 ) }
    dend_28 { pt3dadd( -18.1505, 95.2173, -11.8369, 0.52 ) }
    dend_28 { pt3dadd( -18.4686, 95.6175, -11.9543, 0.52 ) }
    dend_28 { pt3dadd( -18.9766, 96.2684, -12.1067, 0.52 ) }
    dend_28 { pt3dadd( -19.3761, 96.8148, -12.2437, 0.52 ) }
    dend_28 { pt3dadd( -19.8209, 97.4419, -12.4499, 0.52 ) }
    dend_28 { pt3dadd( -20.2137, 97.9784, -12.7136, 0.52 ) }
    dend_28 { pt3dadd( -20.6213, 98.545, -13.0441, 0.52 ) }
    dend_28 { pt3dadd( -21.3728, 99.6074, -13.8262, 0.52 ) }
    dend_28 { pt3dadd( -21.7498, 100.158, -14.352, 0.52 ) }
    dend_28 { pt3dadd( -22.2146, 100.981, -15.2235, 0.52 ) }
    dend_28 { pt3dadd( -22.6711, 102.126, -16.592, 0.52 ) }
    dend_28 { pt3dadd( -22.7154, 102.286, -16.8146, 0.52 ) }
    dend_28 { pt3dadd( -22.7636, 102.586, -17.2955, 0.52 ) }
    dend_28 { pt3dadd( -22.7743, 103.138, -18.3511, 0.52 ) }
    dend_28 { pt3dadd( -22.7497, 103.582, -19.2846, 0.52 ) }
    dend_28 { pt3dadd( -22.6596, 104.218, -20.5867, 0.52 ) }
    dend_28 { pt3dadd( -22.4715, 105.027, -22.226, 0.52 ) }
    dend_28 { pt3dadd( -22.4211, 105.234, -22.6435, 0.52 ) }
    dend_28 { pt3dadd( -22.2604, 105.831, -23.8778, 0.52 ) }
    dend_28 { pt3dadd( -22.1509, 106.093, -24.4127, 0.52 ) }
    dend_28 { pt3dadd( -22.0327, 106.301, -24.8991, 0.52 ) }
    dend_28 { pt3dadd( -21.8923, 106.494, -25.3313, 0.52 ) }
    dend_28 { pt3dadd( -21.7679, 106.62, -25.7274, 0.52 ) }
    dend_28 { pt3dadd( -21.3097, 107.03, -27.2863, 0.52 ) }
    dend_28 { pt3dadd( -21.1908, 107.145, -28.0272, 0.52 ) }
    dend_28 { pt3dadd( -21.0144, 107.261, -29.7424, 0.52 ) }
    dend_28 { pt3dadd( -20.9375, 107.272, -30.5802, 0.52 ) }
    dend_28 { pt3dadd( -20.7581, 107.189, -33.2408, 0.52 ) }
    dend_28 { pt3dadd( -20.7141, 107.152, -33.8247, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_28 { pt3dadd( -20.1921, 106.656, -39.1275, 0.52 ) }
    dend_28 { pt3dadd( -19.9664, 106.431, -41.0181, 0.52 ) }
    dend_28 { pt3dadd( -19.8363, 106.274, -42.0387, 0.52 ) }
    dend_28 { pt3dadd( -19.4951, 105.763, -44.7808, 0.52 ) }
    dend_28 { pt3dadd( -19.3173, 105.508, -45.9414, 0.52 ) }
    dend_28 { pt3dadd( -19.1672, 105.276, -46.8391, 0.52 ) }
    dend_28 { pt3dadd( -18.6083, 104.472, -49.4138, 0.52 ) }
    dend_28 { pt3dadd( -18.1012, 103.709, -51.7369, 0.52 ) }
    dend_28 { pt3dadd( -17.672, 102.963, -53.9589, 0.52 ) }
    dend_28 { pt3dadd( -17.5322, 102.684, -54.7179, 0.52 ) }
    dend_28 { pt3dadd( -17.2835, 101.97, -56.5685, 0.52 ) }
    dend_28 { pt3dadd( -17.1671, 101.528, -57.6448, 0.52 ) }
    dend_28 { pt3dadd( -17.0913, 101.296, -58.1522, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 13/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -7.48338, 80.182, -5.2042, 0.81 ) }
    dend_17 { pt3dadd( -7.09785, 81.305, -5.3834, 0.81 ) }
    dend_17 { pt3dadd( -6.7969, 82.2894, -5.61015, 0.81 ) }
    dend_17 { pt3dadd( -6.46756, 83.2674, -5.86879, 0.81 ) }
    dend_17 { pt3dadd( -6.02061, 84.3981, -6.18782, 0.81 ) }
    dend_17 { pt3dadd( -5.59181, 85.3791, -6.47192, 0.81 ) }
    dend_17 { pt3dadd( -5.13181, 86.4315, -6.77671, 0.81 ) }
    dend_17 { pt3dadd( -4.43135, 88.096, -7.24698, 0.81 ) }
    dend_17 { pt3dadd( -4.00113, 89.1245, -7.55577, 0.81 ) }
    dend_17 { pt3dadd( -3.31003, 90.6277, -8.05945, 0.81 ) }
    dend_17 { pt3dadd( -2.92124, 91.3228, -8.33032, 0.81 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 24/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -10.7964, 55.5714, 2.79299, 0.81 ) }
    dend_13 { pt3dadd( -10.3191, 57.1535, 6.12849, 0.81 ) }
    dend_13 { pt3dadd( -10.2092, 57.4161, 7.22504, 0.81 ) }
    dend_13 { pt3dadd( -9.92023, 57.7129, 9.59858, 0.81 ) }
    dend_13 { pt3dadd( -9.65361, 57.7976, 11.1705, 0.59 ) }
    dend_13 { pt3dadd( -9.41613, 57.8255, 12.2885, 0.52 ) }
    dend_13 { pt3dadd( -8.89471, 57.8937, 14.2497, 0.52 ) }
    dend_13 { pt3dadd( -7.80218, 57.7536, 16.9162, 0.52 ) }
    dend_13 { pt3dadd( -7.33398, 57.6835, 17.8526, 0.52 ) }
    dend_13 { pt3dadd( -6.74783, 57.6182, 18.8328, 0.52 ) }
    dend_13 { pt3dadd( -6.01654, 57.5716, 19.991, 0.52 ) }
    dend_13 { pt3dadd( -5.24025, 57.5344, 21.2548, 0.52 ) }
    dend_13 { pt3dadd( -4.6099, 57.499, 22.1772, 0.52 ) }
    dend_13 { pt3dadd( -3.98963, 57.3699, 23.0189, 0.52 ) }
    dend_13 { pt3dadd( -3.05994, 56.875, 24.5262, 0.52 ) }
    dend_13 { pt3dadd( -2.31752, 56.1975, 25.8225, 0.52 ) }
    dend_13 { pt3dadd( -1.62019, 55.3843, 26.9841, 0.52 ) }
    dend_13 { pt3dadd( -1.08383, 54.6907, 27.8292, 0.52 ) }
    dend_13 { pt3dadd( -0.422763, 53.8676, 28.8539, 0.52 ) }
    dend_13 { pt3dadd( 0.0626191, 53.3136, 29.5826, 0.52 ) }
    dend_13 { pt3dadd( 0.666529, 52.7202, 30.3587, 0.52 ) }
    dend_13 { pt3dadd( 1.22517, 52.2162, 31.0284, 0.52 ) }
    dend_13 { pt3dadd( 1.67664, 51.8548, 31.5655, 0.52 ) }
    dend_13 { pt3dadd( 3.12514, 50.744, 33.4193, 0.52 ) }
    dend_13 { pt3dadd( 4.06376, 50.0016, 34.7405, 0.52 ) }
    dend_13 { pt3dadd( 4.72989, 49.4344, 35.7129, 0.52 ) }
    dend_13 { pt3dadd( 5.30185, 48.8401, 36.7039, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 51/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.7964, 55.5714, 2.79299, 0.88 ) }
    dend_2 { pt3dadd( -12.0987, 56.1529, 3.48878, 0.88 ) }
    dend_2 { pt3dadd( -13.1291, 56.6626, 3.98117, 0.88 ) }
    dend_2 { pt3dadd( -14.2434, 57.2764, 4.44313, 0.81 ) }
    dend_2 { pt3dadd( -15.0409, 57.7359, 4.7093, 0.81 ) }
    dend_2 { pt3dadd( -16.2245, 58.4047, 5.07827, 0.81 ) }
    dend_2 { pt3dadd( -16.984, 58.8339, 5.31505, 0.81 ) }
    dend_2 { pt3dadd( -17.8104, 59.3101, 5.51228, 0.81 ) }
    dend_2 { pt3dadd( -18.6472, 59.8024, 5.65382, 0.81 ) }
    dend_2 { pt3dadd( -19.7074, 60.4441, 5.74029, 0.81 ) }
    dend_2 { pt3dadd( -20.5938, 61.0214, 5.79545, 0.81 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 62/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 37.6487, -79.4255, 11.068, 0.37 ) }
    dend_91 { pt3dadd( 42.0717, -78.6473, 14.3884, 0.37 ) }
    dend_91 { pt3dadd( 42.6452, -78.6557, 14.8155, 0.37 ) }
    dend_91 { pt3dadd( 43.8138, -78.8149, 15.6128, 0.37 ) }
    dend_91 { pt3dadd( 44.895, -79.0033, 16.285, 0.37 ) }
    dend_91 { pt3dadd( 46.9865, -79.363, 17.473, 0.37 ) }
    dend_91 { pt3dadd( 48.5544, -79.6021, 18.2666, 0.37 ) }
    dend_91 { pt3dadd( 50.4269, -80.0516, 18.8291, 0.37 ) }
    dend_91 { pt3dadd( 51.5611, -80.3546, 19.1554, 0.37 ) }
    dend_91 { pt3dadd( 52.2998, -80.5691, 19.4749, 0.37 ) }
    dend_91 { pt3dadd( 53.0359, -80.7829, 19.7932, 0.37 ) }
    dend_91 { pt3dadd( 54.2268, -81.046, 20.2609, 0.37 ) }
    dend_91 { pt3dadd( 56.3938, -81.3044, 21.1638, 0.37 ) }
    dend_91 { pt3dadd( 57.247, -81.3717, 21.5413, 0.37 ) }
    dend_91 { pt3dadd( 61.2004, -81.8287, 23.8032, 0.37 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 77/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 37.6487, -79.4255, 11.068, 0.37 ) }
    dend_90 { pt3dadd( 40.2824, -80.0786, 10.3098, 0.37 ) }
    dend_90 { pt3dadd( 42.1929, -80.5053, 9.89077, 0.37 ) }
    dend_90 { pt3dadd( 43.5504, -80.8045, 9.65531, 0.37 ) }
    dend_90 { pt3dadd( 45.5306, -81.303, 9.36565, 0.37 ) }
    dend_90 { pt3dadd( 46.68, -81.6249, 9.19559, 0.37 ) }
    dend_90 { pt3dadd( 47.7862, -81.9904, 9.03377, 0.37 ) }
    dend_90 { pt3dadd( 49.1412, -82.5555, 8.76559, 0.37 ) }
    dend_90 { pt3dadd( 50.4223, -83.2329, 8.58021, 0.37 ) }
    dend_90 { pt3dadd( 51.5179, -83.9924, 8.46265, 0.37 ) }
    dend_90 { pt3dadd( 52.1794, -84.5707, 8.39673, 0.37 ) }
    dend_90 { pt3dadd( 53.6453, -86.075, 8.15011, 0.37 ) }
    dend_90 { pt3dadd( 54.8082, -87.3799, 7.84475, 0.37 ) }
    dend_90 { pt3dadd( 55.5966, -88.3132, 7.41325, 0.37 ) }
    dend_90 { pt3dadd( 56.7234, -89.6629, 6.59298, 0.37 ) }
    dend_90 { pt3dadd( 57.9655, -91.1456, 5.53119, 0.37 ) }
    dend_90 { pt3dadd( 59.5266, -93.0288, 4.05556, 0.37 ) }
    dend_90 { pt3dadd( 60.5175, -94.2325, 2.92904, 0.37 ) }
    dend_90 { pt3dadd( 63.2228, -97.4988, -0.504053, 0.37 ) }
    dend_90 { pt3dadd( 63.6346, -97.9789, -1.08373, 0.37 ) }
    dend_90 { pt3dadd( 64.0961, -98.5113, -1.78649, 0.37 ) }
    dend_90 { pt3dadd( 64.7326, -99.294, -2.81627, 0.37 ) }
    dend_90 { pt3dadd( 65.7512, -100.759, -4.58298, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_90 { pt3dadd( 66.1142, -101.409, -5.23598, 0.37 ) }
    dend_90 { pt3dadd( 67.0343, -103.281, -6.6814, 0.37 ) }
    dend_90 { pt3dadd( 67.4205, -104.089, -7.35805, 0.37 ) }
    dend_90 { pt3dadd( 67.9176, -105.091, -8.21013, 0.37 ) }
    dend_90 { pt3dadd( 68.6672, -106.623, -9.45232, 0.37 ) }
    dend_90 { pt3dadd( 69.3292, -107.958, -10.4632, 0.37 ) }
    dend_90 { pt3dadd( 69.7731, -108.844, -11.1118, 0.37 ) }
    dend_90 { pt3dadd( 70.9345, -111.287, -12.824, 0.37 ) }
    dend_90 { pt3dadd( 71.6648, -112.871, -13.9285, 0.37 ) }
    dend_90 { pt3dadd( 72.0221, -113.674, -14.4743, 0.37 ) }
    dend_90 { pt3dadd( 72.8332, -115.569, -15.669, 0.37 ) }
    dend_90 { pt3dadd( 73.3376, -116.766, -16.379, 0.37 ) }
    dend_90 { pt3dadd( 74.0223, -118.465, -17.4386, 0.37 ) }
    dend_90 { pt3dadd( 74.4871, -119.574, -18.1826, 0.37 ) }
    dend_90 { pt3dadd( 74.8232, -120.196, -18.7642, 0.37 ) }
    dend_90 { pt3dadd( 75.075, -120.513, -19.2061, 0.37 ) }
    dend_90 { pt3dadd( 75.5715, -120.933, -20.0252, 0.37 ) }
    dend_90 { pt3dadd( 76.7914, -121.591, -21.8346, 0.37 ) }
    dend_90 { pt3dadd( 77.944, -121.994, -23.3324, 0.37 ) }
    dend_90 { pt3dadd( 79.1914, -122.315, -24.8371, 0.37 ) }
    dend_90 { pt3dadd( 80.7403, -122.748, -26.684, 0.37 ) }
    dend_90 { pt3dadd( 81.3466, -122.956, -27.4126, 0.37 ) }
    dend_90 { pt3dadd( 82.1505, -123.252, -28.3651, 0.37 ) }
    dend_90 { pt3dadd( 82.6862, -123.444, -28.929, 0.37 ) }
    dend_90 { pt3dadd( 83.8594, -123.897, -30.1053, 0.37 ) }
    dend_90 { pt3dadd( 85.3812, -124.589, -31.6516, 0.37 ) }
    dend_90 { pt3dadd( 86.8823, -125.377, -33.1799, 0.37 ) }
    dend_90 { pt3dadd( 87.8054, -125.916, -34.1936, 0.37 ) }
    dend_90 { pt3dadd( 88.606, -126.428, -35.0832, 0.37 ) }
    dend_90 { pt3dadd( 90.1264, -127.377, -36.7326, 0.37 ) }
    dend_90 { pt3dadd( 91.5338, -128.208, -38.1372, 0.37 ) }
    dend_90 { pt3dadd( 92.2558, -128.617, -38.823, 0.37 ) }
    dend_90 { pt3dadd( 93.3856, -129.344, -39.9786, 0.37 ) }
    dend_90 { pt3dadd( 94.2244, -129.948, -40.889, 0.37 ) }
    dend_90 { pt3dadd( 95.3126, -130.786, -42.2291, 0.37 ) }
    dend_90 { pt3dadd( 95.9564, -131.275, -43.0121, 0.37 ) }
    dend_90 { pt3dadd( 97.0208, -132.16, -44.327, 0.37 ) }
    dend_90 { pt3dadd( 98.1179, -133.208, -45.787, 0.37 ) }
    dend_90 { pt3dadd( 98.4202, -133.525, -46.174, 0.37 ) }
    dend_90 { pt3dadd( 99.75, -135.022, -47.861, 0.37 ) }
    dend_90 { pt3dadd( 100.686, -136.128, -49.0605, 0.37 ) }
    dend_90 { pt3dadd( 101.777, -137.4, -50.5195, 0.37 ) }
    dend_90 { pt3dadd( 102.66, -138.423, -51.8398, 0.37 ) }
    dend_90 { pt3dadd( 103.646, -139.543, -53.3935, 0.37 ) }
    dend_90 { pt3dadd( 104.334, -140.336, -54.6377, 0.37 ) }
    dend_90 { pt3dadd( 105.922, -142.218, -57.6964, 0.37 ) }
    dend_90 { pt3dadd( 106.891, -143.353, -59.6277, 0.37 ) }
    dend_90 { pt3dadd( 108.629, -145.322, -63.1602, 0.37 ) }
    dend_90 { pt3dadd( 109.086, -145.802, -64.1289, 0.37 ) }
    dend_90 { pt3dadd( 110.918, -147.538, -68.0676, 0.37 ) }
    dend_90 { pt3dadd( 111.654, -148.139, -69.5495, 0.37 ) }
    dend_90 { pt3dadd( 112.276, -148.556, -70.6753, 0.37 ) }
    dend_90 { pt3dadd( 114.186, -149.609, -73.8529, 0.37 ) }
    dend_90 { pt3dadd( 116.706, -150.656, -77.5676, 0.37 ) }
    dend_90 { pt3dadd( 117.676, -150.962, -78.8309, 0.37 ) }
    dend_90 { pt3dadd( 119.631, -151.376, -80.982, 0.37 ) }
    dend_90 { pt3dadd( 120.538, -151.501, -81.9956, 0.37 ) }
    dend_90 { pt3dadd( 122.473, -151.686, -83.8982, 0.37 ) }
    dend_90 { pt3dadd( 124.045, -151.771, -85.1239, 0.37 ) }
    dend_90 { pt3dadd( 126.919, -151.892, -86.9243, 0.37 ) }
    dend_90 { pt3dadd( 127.846, -151.932, -87.4876, 0.37 ) }
    dend_90 { pt3dadd( 133.125, -152.288, -90.9539, 0.37 ) }
    dend_90 { pt3dadd( 135.985, -152.562, -92.9586, 0.37 ) }
    dend_90 { pt3dadd( 137.207, -152.691, -93.8233, 0.37 ) }
    dend_90 { pt3dadd( 138.131, -152.831, -94.7284, 0.37 ) }
    dend_90 { pt3dadd( 140.405, -153.362, -97.6163, 0.37 ) }
    dend_90 { pt3dadd( 142.759, -154.199, -101.264, 0.37 ) }
    dend_90 { pt3dadd( 143.157, -154.401, -102.068, 0.37 ) }
    dend_90 { pt3dadd( 143.812, -154.833, -103.78, 0.37 ) }
    dend_90 { pt3dadd( 145.853, -156.538, -110.594, 0.37 ) }
    dend_90 { pt3dadd( 146.7, -157.389, -113.756, 0.37 ) }
    dend_90 { pt3dadd( 147.791, -158.657, -118.109, 0.37 ) }
    dend_90 { pt3dadd( 149.148, -160.46, -123.753, 0.37 ) }
    dend_90 { pt3dadd( 150.11, -161.949, -127.773, 0.37 ) }
    dend_90 { pt3dadd( 151.51, -164.553, -133.697, 0.37 ) }
    dend_90 { pt3dadd( 152.093, -165.763, -135.863, 0.37 ) }
    dend_90 { pt3dadd( 152.471, -166.602, -137.131, 0.37 ) }
    dend_90 { pt3dadd( 153.372, -168.621, -139.587, 0.37 ) }
    dend_90 { pt3dadd( 154.461, -170.958, -141.891, 0.37 ) }
    dend_90 { pt3dadd( 156.292, -174.573, -144.953, 0.37 ) }
    dend_90 { pt3dadd( 157.545, -176.784, -146.567, 0.37 ) }
    dend_90 { pt3dadd( 160.479, -181.279, -150.106, 0.37 ) }
    dend_90 { pt3dadd( 161.896, -183.16, -151.686, 0.37 ) }
    dend_90 { pt3dadd( 162.833, -184.253, -152.608, 0.37 ) }
    dend_90 { pt3dadd( 164.56, -186.054, -154.024, 0.37 ) }
    dend_90 { pt3dadd( 167.166, -188.608, -155.802, 0.37 ) }
    dend_90 { pt3dadd( 172.029, -193.285, -158.644, 0.37 ) }
    dend_90 { pt3dadd( 176.348, -197.411, -160.986, 0.37 ) }
    dend_90 { pt3dadd( 178.338, -199.332, -162.093, 0.37 ) }
    dend_90 { pt3dadd( 183.248, -204.199, -164.846, 0.37 ) }
    dend_90 { pt3dadd( 185.694, -206.713, -166.194, 0.37 ) }
    dend_90 { pt3dadd( 189.968, -211.195, -168.244, 0.37 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 92/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 37.3632, -52.7526, -3.01935, 0.44 ) }
    dend_78 { pt3dadd( 38.4163, -52.6719, -2.69701, 0.44 ) }
    dend_78 { pt3dadd( 40.0265, -52.5483, -2.20413, 0.44 ) }
    dend_78 { pt3dadd( 41.425, -52.4411, -1.77608, 0.44 ) }
    dend_78 { pt3dadd( 42.4055, -52.3658, -1.47596, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 97/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 37.3632, -52.7526, -3.01935, 0.44 ) }
    dend_77 { pt3dadd( 37.7515, -51.7525, -3.19552, 0.44 ) }
    dend_77 { pt3dadd( 38.0071, -51.0943, -3.31147, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_77 { pt3dadd( 38.3536, -50.2018, -3.46867, 0.44 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 1/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -14.2432, -143.439, -69.8136, 0.52 ) }
    dend_74 { pt3dadd( -14.0204, -145.03, -69.7495, 0.52 ) }
    dend_74 { pt3dadd( -13.9481, -145.844, -69.7187, 0.52 ) }
    dend_74 { pt3dadd( -13.8049, -147.041, -69.8227, 0.52 ) }
    dend_74 { pt3dadd( -13.6384, -148.523, -70.022, 0.52 ) }
    dend_74 { pt3dadd( -13.5275, -149.706, -70.1979, 0.52 ) }
    dend_74 { pt3dadd( -13.3854, -151.182, -70.4716, 0.52 ) }
    dend_74 { pt3dadd( -13.3117, -152.429, -70.7355, 0.52 ) }
    dend_74 { pt3dadd( -13.08, -155.374, -71.5708, 0.44 ) }
    dend_74 { pt3dadd( -12.9641, -156.511, -71.9406, 0.44 ) }
    dend_74 { pt3dadd( -12.7653, -158.136, -72.5232, 0.44 ) }
    dend_74 { pt3dadd( -12.4573, -160.254, -73.3947, 0.44 ) }
    dend_74 { pt3dadd( -12.134, -162.318, -74.3291, 0.44 ) }
    dend_74 { pt3dadd( -11.6089, -165.171, -75.7788, 0.44 ) }
    dend_74 { pt3dadd( -11.4417, -165.915, -76.2048, 0.44 ) }
    dend_74 { pt3dadd( -11.237, -166.717, -76.7168, 0.44 ) }
    dend_74 { pt3dadd( -10.8188, -168.311, -77.7996, 0.44 ) }
    dend_74 { pt3dadd( -10.5949, -169.134, -78.4163, 0.44 ) }
    dend_74 { pt3dadd( -10.0068, -171.344, -80.1564, 0.44 ) }
    dend_74 { pt3dadd( -9.55393, -173.389, -81.7013, 0.44 ) }
    dend_74 { pt3dadd( -9.37696, -174.552, -82.5261, 0.44 ) }
    dend_74 { pt3dadd( -9.29307, -175.606, -83.2153, 0.44 ) }
    dend_74 { pt3dadd( -9.34966, -178.591, -85.0726, 0.44 ) }
    dend_74 { pt3dadd( -9.47936, -179.731, -85.76, 0.44 ) }
    dend_74 { pt3dadd( -9.71719, -180.901, -86.4403, 0.44 ) }
    dend_74 { pt3dadd( -10.327, -183.329, -87.7609, 0.44 ) }
    dend_74 { pt3dadd( -10.6061, -184.337, -88.2806, 0.44 ) }
    dend_74 { pt3dadd( -11.4913, -187.174, -89.5936, 0.44 ) }
    dend_74 { pt3dadd( -12.0304, -188.742, -90.2245, 0.44 ) }
    dend_74 { pt3dadd( -12.7489, -190.822, -91.0224, 0.44 ) }
    dend_74 { pt3dadd( -13.6979, -193.385, -91.8556, 0.44 ) }
    dend_74 { pt3dadd( -14.6735, -195.894, -92.5151, 0.44 ) }
    dend_74 { pt3dadd( -15.9891, -199.111, -93.1618, 0.44 ) }
    dend_74 { pt3dadd( -16.7322, -200.839, -93.384, 0.44 ) }
    dend_74 { pt3dadd( -17.5479, -202.644, -93.547, 0.44 ) }
    dend_74 { pt3dadd( -18.8609, -205.367, -93.6899, 0.44 ) }
    dend_74 { pt3dadd( -19.8898, -207.393, -93.7492, 0.44 ) }
    dend_74 { pt3dadd( -20.6856, -208.906, -93.7375, 0.44 ) }
    dend_74 { pt3dadd( -21.5572, -210.487, -93.6588, 0.44 ) }
    dend_74 { pt3dadd( -22.2997, -211.81, -93.5751, 0.44 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 41/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -14.2432, -143.439, -69.8136, 0.52 ) }
    dend_73 { pt3dadd( -14.5516, -144.127, -71.2324, 0.52 ) }
    dend_73 { pt3dadd( -15.1304, -146.249, -75.4166, 0.52 ) }
    dend_73 { pt3dadd( -15.2787, -146.917, -76.6204, 0.52 ) }
    dend_73 { pt3dadd( -15.3776, -147.489, -77.5802, 0.52 ) }
    dend_73 { pt3dadd( -15.4248, -147.81, -78.1021, 0.52 ) }
    dend_73 { pt3dadd( -15.4816, -148.35, -78.9972, 0.52 ) }
    dend_73 { pt3dadd( -15.6652, -150.325, -82.1718, 0.52 ) }
    dend_73 { pt3dadd( -15.7348, -150.865, -82.9615, 0.52 ) }
    dend_73 { pt3dadd( -15.7989, -151.431, -83.8008, 0.52 ) }
    dend_73 { pt3dadd( -15.9702, -152.673, -85.6637, 0.52 ) }
    dend_73 { pt3dadd( -16.2686, -154.453, -88.1869, 0.52 ) }
    dend_73 { pt3dadd( -16.4016, -155.361, -89.3952, 0.52 ) }
    dend_73 { pt3dadd( -16.5377, -156.092, -90.2767, 0.52 ) }
    dend_73 { pt3dadd( -16.8239, -157.825, -92.2079, 0.52 ) }
    dend_73 { pt3dadd( -16.9378, -158.518, -92.9011, 0.52 ) }
    dend_73 { pt3dadd( -17.0786, -159.673, -93.8961, 0.52 ) }
    dend_73 { pt3dadd( -17.2915, -162.041, -95.6683, 0.52 ) }
    dend_73 { pt3dadd( -17.3678, -163.341, -96.562, 0.52 ) }
    dend_73 { pt3dadd( -17.4373, -164.457, -97.2532, 0.52 ) }
    dend_73 { pt3dadd( -17.4969, -165.639, -97.9824, 0.52 ) }
    dend_73 { pt3dadd( -17.5981, -167.119, -98.9482, 0.52 ) }
    dend_73 { pt3dadd( -17.6757, -167.767, -99.3958, 0.52 ) }
    dend_73 { pt3dadd( -17.9318, -169.093, -100.311, 0.52 ) }
    dend_73 { pt3dadd( -18.2154, -170.291, -101.193, 0.52 ) }
    dend_73 { pt3dadd( -19.1261, -173.14, -103.402, 0.52 ) }
    dend_73 { pt3dadd( -19.5199, -174.124, -104.268, 0.52 ) }
    dend_73 { pt3dadd( -19.8207, -174.684, -104.831, 0.52 ) }
    dend_73 { pt3dadd( -20.2381, -175.407, -105.72, 0.52 ) }
    dend_73 { pt3dadd( -20.6151, -176.072, -106.74, 0.52 ) }
    dend_73 { pt3dadd( -21.2336, -177.065, -108.53, 0.52 ) }
    dend_73 { pt3dadd( -21.9515, -178.079, -110.559, 0.52 ) }
    dend_73 { pt3dadd( -22.4059, -178.801, -112.175, 0.52 ) }
    dend_73 { pt3dadd( -23.1067, -180.037, -114.905, 0.52 ) }
    dend_73 { pt3dadd( -23.906, -181.48, -118.098, 0.52 ) }
    dend_73 { pt3dadd( -24.1261, -182.002, -119.258, 0.52 ) }
    dend_73 { pt3dadd( -24.309, -182.541, -120.369, 0.52 ) }
    dend_73 { pt3dadd( -24.8175, -184.271, -123.523, 0.52 ) }
    dend_73 { pt3dadd( -25.0819, -185.442, -125.397, 0.52 ) }
    dend_73 { pt3dadd( -25.2129, -186.156, -126.274, 0.52 ) }
    dend_73 { pt3dadd( -25.5683, -189.613, -129.433, 0.52 ) }
    dend_73 { pt3dadd( -25.6161, -191.118, -130.487, 0.52 ) }
    dend_73 { pt3dadd( -25.6684, -192.266, -130.975, 0.52 ) }
    dend_73 { pt3dadd( -25.7916, -193.655, -131.182, 0.52 ) }
    dend_73 { pt3dadd( -26.2659, -196.656, -131.033, 0.52 ) }
    dend_73 { pt3dadd( -26.7174, -198.515, -130.705, 0.52 ) }
    dend_73 { pt3dadd( -27.1554, -199.944, -130.366, 0.52 ) }
    dend_73 { pt3dadd( -28.747, -204.177, -129.188, 0.52 ) }
    dend_73 { pt3dadd( -29.4044, -205.648, -128.77, 0.52 ) }
    dend_73 { pt3dadd( -30.5712, -207.978, -128.134, 0.52 ) }
    dend_73 { pt3dadd( -31.5812, -209.747, -127.645, 0.52 ) }
    dend_73 { pt3dadd( -32.9345, -212.002, -127.038, 0.52 ) }
    dend_73 { pt3dadd( -34.6047, -214.804, -126.419, 0.52 ) }
    dend_73 { pt3dadd( -35.7808, -217.073, -126.289, 0.52 ) }
    dend_73 { pt3dadd( -36.8445, -219.162, -126.174, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_31 (entry count 96/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 8.06572, -86.5285, 4.88584, 0.66 ) }
    dend_67 { pt3dadd( 7.31628, -87.7586, 4.48082, 0.66 ) }
    dend_67 { pt3dadd( 6.75881, -88.4461, 4.31541, 0.66 ) }
    dend_67 { pt3dadd( 6.0869, -89.1825, 4.17902, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_67 { pt3dadd( 5.46112, -89.8415, 4.06795, 0.66 ) }
    dend_67 { pt3dadd( 4.34707, -90.9519, 3.94843, 0.66 ) }
    dend_67 { pt3dadd( 3.52633, -91.7247, 3.88569, 0.66 ) }
    dend_67 { pt3dadd( 2.06046, -92.9525, 3.83697, 0.66 ) }
    dend_67 { pt3dadd( 0.872147, -93.8593, 3.86609, 0.66 ) }
    dend_67 { pt3dadd( 0.234247, -94.3053, 3.89861, 0.66 ) }
    dend_67 { pt3dadd( -0.898274, -95.0544, 4.00323, 0.66 ) }
    dend_67 { pt3dadd( -1.85223, -95.679, 4.1574, 0.66 ) }
    dend_67 { pt3dadd( -2.48178, -96.1145, 4.26524, 0.66 ) }
    dend_67 { pt3dadd( -3.49792, -96.8672, 4.37286, 0.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 10/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 8.06572, -86.5285, 4.88584, 0.81 ) }
    dend_32 { pt3dadd( 8.06432, -88.676, 4.87699, 0.81 ) }
    dend_32 { pt3dadd( 8.0503, -90.6457, 4.84626, 0.81 ) }
    dend_32 { pt3dadd( 8.00882, -93.2173, 4.79893, 0.81 ) }
    dend_32 { pt3dadd( 7.98087, -94.4932, 4.77551, 0.81 ) }
    dend_32 { pt3dadd( 7.96053, -96.3891, 4.73919, 0.81 ) }
    dend_32 { pt3dadd( 7.97558, -98.5707, 4.69613, 0.81 ) }
    dend_32 { pt3dadd( 7.97306, -100.831, 4.64745, 0.81 ) }
    dend_32 { pt3dadd( 7.97411, -102.955, 4.59626, 0.81 ) }
    dend_32 { pt3dadd( 7.99118, -104.675, 4.57424, 0.81 ) }
    dend_32 { pt3dadd( 8.02992, -106.329, 4.57342, 0.81 ) }
    dend_32 { pt3dadd( 8.11113, -108.758, 4.60714, 0.81 ) }
    dend_32 { pt3dadd( 8.19165, -110.661, 4.6618, 0.81 ) }
    dend_32 { pt3dadd( 8.24259, -111.808, 4.70137, 0.81 ) }
    dend_32 { pt3dadd( 8.30887, -113.135, 4.7562, 0.81 ) }
    dend_32 { pt3dadd( 8.38224, -114.966, 4.85054, 0.81 ) }
    dend_32 { pt3dadd( 8.38647, -116.587, 4.96155, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_17 (entry count 27/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.92124, 91.3228, -8.33032, 0.52 ) }
    dend_27 { pt3dadd( -0.472147, 91.6976, -9.27458, 0.52 ) }
    dend_27 { pt3dadd( 1.28796, 92.0509, -9.91061, 0.52 ) }
    dend_27 { pt3dadd( 2.23065, 92.2703, -10.2322, 0.52 ) }
    dend_27 { pt3dadd( 3.64056, 92.5904, -10.6842, 0.52 ) }
    dend_27 { pt3dadd( 5.01182, 92.8903, -11.2452, 0.52 ) }
    dend_27 { pt3dadd( 6.17304, 93.1122, -11.776, 0.52 ) }
    dend_27 { pt3dadd( 7.5815, 93.3071, -12.5079, 0.52 ) }
    dend_27 { pt3dadd( 9.30797, 93.4417, -13.4308, 0.52 ) }
    dend_27 { pt3dadd( 10.2416, 93.455, -13.9235, 0.52 ) }
    dend_27 { pt3dadd( 13.116, 93.3219, -15.4048, 0.52 ) }
    dend_27 { pt3dadd( 14.3798, 93.1479, -16.0156, 0.52 ) }
    dend_27 { pt3dadd( 16.1143, 92.7342, -16.8594, 0.52 ) }
    dend_27 { pt3dadd( 18.3803, 92.0348, -17.921, 0.52 ) }
    dend_27 { pt3dadd( 19.587, 91.6172, -18.441, 0.52 ) }
    dend_27 { pt3dadd( 20.7447, 91.2262, -18.873, 0.52 ) }
    dend_27 { pt3dadd( 22.3471, 90.713, -19.3464, 0.52 ) }
    dend_27 { pt3dadd( 24.0239, 90.2235, -19.8636, 0.52 ) }
    dend_27 { pt3dadd( 25.547, 89.8295, -20.3479, 0.52 ) }
    dend_27 { pt3dadd( 26.9717, 89.4877, -20.8735, 0.52 ) }
    dend_27 { pt3dadd( 28.6723, 89.1141, -21.4696, 0.52 ) }
    dend_27 { pt3dadd( 30.1642, 88.8525, -21.9561, 0.52 ) }
    dend_27 { pt3dadd( 31.0537, 88.7685, -22.2216, 0.52 ) }
    dend_27 { pt3dadd( 32.8144, 88.7099, -22.6888, 0.52 ) }
    dend_27 { pt3dadd( 34.5903, 88.7254, -23.1624, 0.52 ) }
    dend_27 { pt3dadd( 36.3959, 88.7925, -23.6455, 0.52 ) }
    dend_27 { pt3dadd( 37.8387, 88.8364, -24.146, 0.52 ) }
    dend_27 { pt3dadd( 39.488, 88.8563, -24.8389, 0.52 ) }
    dend_27 { pt3dadd( 40.4902, 88.8802, -25.3252, 0.52 ) }
    dend_27 { pt3dadd( 41.1858, 88.9336, -25.7049, 0.52 ) }
    dend_27 { pt3dadd( 42.3987, 89.0444, -26.3946, 0.52 ) }
    dend_27 { pt3dadd( 45.1396, 89.2255, -28.2358, 0.52 ) }
    dend_27 { pt3dadd( 46.0697, 89.2497, -28.9158, 0.52 ) }
    dend_27 { pt3dadd( 47.1689, 89.2718, -29.7454, 0.52 ) }
    dend_27 { pt3dadd( 48.7996, 89.4365, -30.9625, 0.52 ) }
    dend_27 { pt3dadd( 50.1007, 89.6958, -31.8835, 0.52 ) }
    dend_27 { pt3dadd( 52.2924, 90.3188, -33.2792, 0.52 ) }
    dend_27 { pt3dadd( 53.384, 90.6952, -33.8507, 0.52 ) }
    dend_27 { pt3dadd( 54.3468, 91.0466, -34.3366, 0.52 ) }
    dend_27 { pt3dadd( 55.7837, 91.4861, -35.0175, 0.52 ) }
    dend_27 { pt3dadd( 56.7902, 91.7357, -35.4464, 0.52 ) }
    dend_27 { pt3dadd( 57.9612, 91.9666, -35.8673, 0.52 ) }
    dend_27 { pt3dadd( 59.3109, 92.1205, -36.2317, 0.52 ) }
    dend_27 { pt3dadd( 60.6432, 92.1504, -36.7177, 0.52 ) }
    dend_27 { pt3dadd( 62.0485, 91.9999, -37.3298, 0.52 ) }
    dend_27 { pt3dadd( 63.3453, 91.7584, -37.9427, 0.52 ) }
    dend_27 { pt3dadd( 64.8633, 91.4353, -38.6829, 0.52 ) }
    dend_27 { pt3dadd( 65.8552, 91.219, -39.2657, 0.52 ) }
    dend_27 { pt3dadd( 68.391, 90.6681, -40.9042, 0.52 ) }
    dend_27 { pt3dadd( 70.651, 90.26, -42.4366, 0.52 ) }
    dend_27 { pt3dadd( 72.7165, 90.0241, -43.852, 0.52 ) }
    dend_27 { pt3dadd( 74.2385, 89.9202, -44.8773, 0.52 ) }
    dend_27 { pt3dadd( 77.0921, 89.8023, -46.854, 0.52 ) }
    dend_27 { pt3dadd( 78.337, 89.7632, -47.6996, 0.52 ) }
    dend_27 { pt3dadd( 79.6007, 89.761, -48.494, 0.52 ) }
    dend_27 { pt3dadd( 81.0846, 89.8325, -49.4491, 0.52 ) }
    dend_27 { pt3dadd( 82.3764, 89.9345, -50.2521, 0.52 ) }
    dend_27 { pt3dadd( 84.6395, 90.2017, -51.6272, 0.52 ) }
    dend_27 { pt3dadd( 85.6857, 90.3259, -52.2014, 0.52 ) }
    dend_27 { pt3dadd( 87.232, 90.5037, -53.0756, 0.52 ) }
    dend_27 { pt3dadd( 88.2425, 90.6044, -53.6461, 0.52 ) }
    dend_27 { pt3dadd( 89.7323, 90.7396, -54.4577, 0.52 ) }
    dend_27 { pt3dadd( 92.101, 90.9446, -55.6521, 0.52 ) }
    dend_27 { pt3dadd( 93.5101, 91.1047, -56.3029, 0.52 ) }
    dend_27 { pt3dadd( 95.0434, 91.3327, -57.0626, 0.52 ) }
    dend_27 { pt3dadd( 96.0463, 91.5063, -57.5756, 0.52 ) }
    dend_27 { pt3dadd( 97.26, 91.7865, -58.1799, 0.52 ) }
    dend_27 { pt3dadd( 98.2817, 92.0228, -58.6551, 0.52 ) }
    dend_27 { pt3dadd( 99.5609, 92.3224, -59.1825, 0.52 ) }
    dend_27 { pt3dadd( 100.974, 92.6523, -59.7584, 0.52 ) }
    dend_27 { pt3dadd( 102.805, 93.0468, -60.4793, 0.52 ) }
    dend_27 { pt3dadd( 105.212, 93.5193, -61.3762, 0.52 ) }
    dend_27 { pt3dadd( 106.829, 93.7697, -61.9401, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_27 { pt3dadd( 108.691, 93.963, -62.5355, 0.52 ) }
    dend_27 { pt3dadd( 110.006, 94.0503, -62.9136, 0.52 ) }
    dend_27 { pt3dadd( 111.759, 94.1542, -63.3841, 0.52 ) }
    dend_27 { pt3dadd( 113.581, 94.2952, -63.8738, 0.52 ) }
    dend_27 { pt3dadd( 114.848, 94.4483, -64.2162, 0.52 ) }
    dend_27 { pt3dadd( 116.451, 94.7775, -64.7159, 0.52 ) }
    dend_27 { pt3dadd( 117.632, 95.1048, -65.131, 0.52 ) }
    dend_27 { pt3dadd( 118.713, 95.4599, -65.5532, 0.52 ) }
    dend_27 { pt3dadd( 120.007, 95.8967, -66.1584, 0.52 ) }
    dend_27 { pt3dadd( 121.092, 96.2672, -66.7334, 0.52 ) }
    dend_27 { pt3dadd( 122.7, 96.765, -67.721, 0.52 ) }
    dend_27 { pt3dadd( 123.981, 97.0586, -68.5961, 0.52 ) }
    dend_27 { pt3dadd( 124.748, 97.1405, -69.1729, 0.52 ) }
    dend_27 { pt3dadd( 126.362, 97.2103, -70.4243, 0.52 ) }
    dend_27 { pt3dadd( 127.193, 97.2247, -71.0658, 0.52 ) }
    dend_27 { pt3dadd( 128.926, 97.24, -72.3618, 0.52 ) }
    dend_27 { pt3dadd( 130.196, 97.2419, -73.2381, 0.52 ) }
    dend_27 { pt3dadd( 132.519, 97.2198, -74.7737, 0.52 ) }
    dend_27 { pt3dadd( 133.962, 97.2136, -75.6794, 0.52 ) }
    dend_27 { pt3dadd( 135.059, 97.2476, -76.3148, 0.52 ) }
    dend_27 { pt3dadd( 135.768, 97.2951, -76.7372, 0.52 ) }
    dend_27 { pt3dadd( 136.91, 97.4496, -77.4823, 0.52 ) }
    dend_27 { pt3dadd( 137.654, 97.6288, -78.0726, 0.52 ) }
    dend_27 { pt3dadd( 138.948, 98.0966, -79.515, 0.52 ) }
    dend_27 { pt3dadd( 139.909, 98.5548, -80.8763, 0.52 ) }
    dend_27 { pt3dadd( 140.977, 99.1889, -82.5771, 0.52 ) }
    dend_27 { pt3dadd( 142.133, 99.9304, -84.5045, 0.52 ) }
    dend_27 { pt3dadd( 143.227, 100.638, -86.5414, 0.52 ) }
    dend_27 { pt3dadd( 144.675, 101.453, -89.5057, 0.52 ) }
    dend_27 { pt3dadd( 145.116, 101.64, -90.5533, 0.52 ) }
    dend_27 { pt3dadd( 145.721, 101.822, -92.0896, 0.52 ) }
    dend_27 { pt3dadd( 146.273, 101.933, -93.458, 0.52 ) }
    dend_27 { pt3dadd( 147.495, 102.152, -96.3233, 0.52 ) }
    dend_27 { pt3dadd( 148.909, 102.406, -99.4025, 0.52 ) }
    dend_27 { pt3dadd( 150.959, 102.946, -103.629, 0.52 ) }
    dend_27 { pt3dadd( 151.875, 103.327, -105.589, 0.52 ) }
    dend_27 { pt3dadd( 152.186, 103.511, -106.238, 0.52 ) }
    dend_27 { pt3dadd( 152.934, 104.097, -107.717, 0.52 ) }
    dend_27 { pt3dadd( 153.558, 104.642, -108.751, 0.52 ) }
    dend_27 { pt3dadd( 155.06, 105.926, -110.806, 0.52 ) }
    dend_27 { pt3dadd( 157.013, 107.465, -113.182, 0.52 ) }
    dend_27 { pt3dadd( 158.039, 108.202, -114.416, 0.52 ) }
    dend_27 { pt3dadd( 160.228, 109.617, -116.932, 0.52 ) }
    dend_27 { pt3dadd( 161.521, 110.378, -118.35, 0.52 ) }
    dend_27 { pt3dadd( 163.033, 111.267, -120.032, 0.52 ) }
    dend_27 { pt3dadd( 164.731, 112.283, -121.981, 0.52 ) }
    dend_27 { pt3dadd( 166.931, 113.73, -124.847, 0.52 ) }
    dend_27 { pt3dadd( 168.1, 114.595, -126.516, 0.52 ) }
    dend_27 { pt3dadd( 168.401, 114.846, -126.954, 0.52 ) }
    dend_27 { pt3dadd( 170.233, 116.611, -129.879, 0.52 ) }
    dend_27 { pt3dadd( 171.905, 118.436, -132.642, 0.52 ) }
    dend_27 { pt3dadd( 173.659, 120.623, -135.673, 0.52 ) }
    dend_27 { pt3dadd( 174.508, 121.928, -137.377, 0.52 ) }
    dend_27 { pt3dadd( 175.341, 123.393, -139.168, 0.52 ) }
    dend_27 { pt3dadd( 176.475, 125.512, -141.65, 0.52 ) }
    dend_27 { pt3dadd( 177.188, 126.917, -143.151, 0.52 ) }
    dend_27 { pt3dadd( 178.548, 129.724, -145.945, 0.52 ) }
    dend_27 { pt3dadd( 179.83, 132.58, -148.92, 0.52 ) }
    dend_27 { pt3dadd( 180.413, 134.035, -150.484, 0.52 ) }
    dend_27 { pt3dadd( 181.37, 136.504, -153.167, 0.52 ) }
    dend_27 { pt3dadd( 181.846, 137.688, -154.45, 0.52 ) }
    dend_27 { pt3dadd( 182.456, 139.069, -155.923, 0.52 ) }
    dend_27 { pt3dadd( 184.105, 142.391, -159.199, 0.52 ) }
    dend_27 { pt3dadd( 184.954, 144.036, -160.662, 0.52 ) }
    dend_27 { pt3dadd( 185.493, 145.132, -161.55, 0.52 ) }
    dend_27 { pt3dadd( 187.172, 148.705, -164.225, 0.52 ) }
    dend_27 { pt3dadd( 188.086, 150.684, -165.6, 0.52 ) }
    dend_27 { pt3dadd( 188.756, 152.153, -166.503, 0.52 ) }
    dend_27 { pt3dadd( 189.728, 154.291, -167.608, 0.52 ) }
    dend_27 { pt3dadd( 190.325, 155.701, -168.3, 0.52 ) }
    dend_27 { pt3dadd( 191.973, 160.147, -170.226, 0.52 ) }
    dend_27 { pt3dadd( 192.95, 163.332, -171.313, 0.52 ) }
    dend_27 { pt3dadd( 193.371, 165.137, -172.008, 0.52 ) }
    dend_27 { pt3dadd( 193.591, 166.45, -172.528, 0.52 ) }
    dend_27 { pt3dadd( 193.744, 167.827, -173.062, 0.52 ) }
    dend_27 { pt3dadd( 193.862, 169.803, -173.851, 0.52 ) }
    dend_27 { pt3dadd( 193.977, 173.677, -175.352, 0.52 ) }
    dend_27 { pt3dadd( 194.153, 179.017, -177.765, 0.52 ) }
    dend_27 { pt3dadd( 194.294, 181.548, -178.982, 0.52 ) }
    dend_27 { pt3dadd( 194.443, 183.538, -180.028, 0.52 ) }
    dend_27 { pt3dadd( 194.845, 188.159, -182.616, 0.52 ) }
    dend_27 { pt3dadd( 195.144, 191.44, -184.611, 0.52 ) }
    dend_27 { pt3dadd( 195.599, 195.79, -187.508, 0.52 ) }
    dend_27 { pt3dadd( 195.882, 197.776, -188.824, 0.52 ) }
    dend_27 { pt3dadd( 196.42, 200.585, -190.773, 0.52 ) }
    dend_27 { pt3dadd( 196.856, 202.392, -192.042, 0.52 ) }
    dend_27 { pt3dadd( 197.736, 205.052, -193.879, 0.52 ) }
    dend_27 { pt3dadd( 199.68, 209.421, -196.909, 0.52 ) }
    dend_27 { pt3dadd( 201.265, 212.19, -198.723, 0.52 ) }
    dend_27 { pt3dadd( 202.863, 214.533, -200.325, 0.52 ) }
    dend_27 { pt3dadd( 204.052, 216.047, -201.44, 0.52 ) }
    dend_27 { pt3dadd( 206.09, 218.527, -203.585, 0.52 ) }
    dend_27 { pt3dadd( 207.459, 220.26, -205.265, 0.52 ) }
    dend_27 { pt3dadd( 208.096, 221.045, -206.106, 0.52 ) }
    dend_27 { pt3dadd( 210.049, 223.645, -209.299, 0.52 ) }
    dend_27 { pt3dadd( 211.583, 226.028, -212.543, 0.52 ) }
    dend_27 { pt3dadd( 213.043, 228.953, -216.786, 0.52 ) }
    dend_27 { pt3dadd( 213.725, 231.101, -220.076, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 98/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.92124, 91.3228, -8.33032, 0.81 ) }
    dend_18 { pt3dadd( -2.50613, 92.3178, -8.5145, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -2.15099, 93.3284, -8.71153, 0.81 ) }
    dend_18 { pt3dadd( -1.96244, 94.038, -8.84335, 0.81 ) }
    dend_18 { pt3dadd( -1.79637, 94.9383, -8.99644, 0.81 ) }
    dend_18 { pt3dadd( -1.67107, 95.9235, -9.14727, 0.52 ) }
    dend_18 { pt3dadd( -1.59555, 96.7954, -9.30747, 0.59 ) }
    dend_18 { pt3dadd( -1.57012, 97.5553, -9.50321, 0.59 ) }
    dend_18 { pt3dadd( -1.57639, 98.3002, -9.72331, 0.59 ) }
    dend_18 { pt3dadd( -1.5881, 99.0108, -9.94451, 0.59 ) }
    dend_18 { pt3dadd( -1.58716, 99.9096, -10.2328, 0.59 ) }
    dend_18 { pt3dadd( -1.53408, 101.371, -10.7014, 0.59 ) }
    dend_18 { pt3dadd( -1.39477, 102.742, -11.1661, 0.59 ) }
    dend_18 { pt3dadd( -1.1868, 103.823, -11.563, 0.59 ) }
    dend_18 { pt3dadd( -0.982404, 104.574, -11.8562, 0.59 ) }
    dend_18 { pt3dadd( -0.789416, 105.159, -12.0938, 0.59 ) }
    dend_18 { pt3dadd( -0.559478, 105.793, -12.3726, 0.59 ) }
    dend_18 { pt3dadd( -0.15731, 106.807, -12.8161, 0.59 ) }
    dend_18 { pt3dadd( 0.153046, 107.6, -13.1632, 0.59 ) }
    dend_18 { pt3dadd( 0.40979, 108.316, -13.4863, 0.59 ) }
    dend_18 { pt3dadd( 0.747751, 109.34, -13.9275, 0.59 ) }
    dend_18 { pt3dadd( 1.06837, 110.346, -14.3298, 0.59 ) }
    dend_18 { pt3dadd( 1.30002, 111.044, -14.6091, 0.59 ) }
    dend_18 { pt3dadd( 1.56772, 111.897, -14.9174, 0.59 ) }
    dend_18 { pt3dadd( 1.75141, 112.55, -15.1608, 0.59 ) }
    dend_18 { pt3dadd( 2.02013, 113.554, -15.5982, 0.59 ) }
    dend_18 { pt3dadd( 2.18687, 114.168, -15.8967, 0.59 ) }
    dend_18 { pt3dadd( 2.51318, 115.331, -16.4923, 0.59 ) }
    dend_18 { pt3dadd( 2.77141, 116.242, -16.9918, 0.59 ) }
    dend_18 { pt3dadd( 3.04888, 117.203, -17.5028, 0.59 ) }
    dend_18 { pt3dadd( 3.40984, 118.484, -18.2149, 0.59 ) }
    dend_18 { pt3dadd( 3.53783, 118.979, -18.4974, 0.59 ) }
    dend_18 { pt3dadd( 3.76436, 119.895, -19.0064, 0.59 ) }
    dend_18 { pt3dadd( 4.03465, 120.995, -19.5446, 0.59 ) }
    dend_18 { pt3dadd( 4.49071, 122.605, -20.27, 0.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.30185, 48.8401, 36.7039, 0.52 ) }
    dend_15 { pt3dadd( 5.8994, 49.427, 37.4833, 0.52 ) }
    dend_15 { pt3dadd( 6.43945, 49.9092, 38.0941, 0.52 ) }
    dend_15 { pt3dadd( 6.96822, 50.4209, 38.7295, 0.52 ) }
    dend_15 { pt3dadd( 7.52178, 51.0383, 39.4331, 0.52 ) }
    dend_15 { pt3dadd( 8.39602, 52.2464, 40.7401, 0.52 ) }
    dend_15 { pt3dadd( 8.79124, 52.9387, 41.4239, 0.52 ) }
    dend_15 { pt3dadd( 9.12277, 53.7452, 42.149, 0.52 ) }
    dend_15 { pt3dadd( 9.56914, 55.0512, 43.1364, 0.52 ) }
    dend_15 { pt3dadd( 9.77465, 55.8091, 43.5977, 0.52 ) }
    dend_15 { pt3dadd( 10.0619, 57.1755, 44.2621, 0.52 ) }
    dend_15 { pt3dadd( 10.2234, 58.2899, 44.6811, 0.52 ) }
    dend_15 { pt3dadd( 10.2824, 59.0214, 44.9308, 0.52 ) }
    dend_15 { pt3dadd( 10.3232, 60.1982, 45.2542, 0.52 ) }
    dend_15 { pt3dadd( 10.3796, 60.7455, 45.3291, 0.52 ) }
    dend_15 { pt3dadd( 10.6278, 61.7142, 45.3971, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 5.30185, 48.8401, 36.7039, 0.52 ) }
    dend_14 { pt3dadd( 6.28048, 47.723, 36.9927, 0.52 ) }
    dend_14 { pt3dadd( 7.32567, 46.2975, 37.4563, 0.52 ) }
    dend_14 { pt3dadd( 7.85719, 45.5126, 37.7624, 0.52 ) }
    dend_14 { pt3dadd( 8.32133, 44.8013, 38.1075, 0.52 ) }
    dend_14 { pt3dadd( 9.00468, 43.7274, 38.6476, 0.52 ) }
    dend_14 { pt3dadd( 9.90122, 42.2776, 39.3581, 0.52 ) }
    dend_14 { pt3dadd( 11.0264, 40.3751, 40.306, 0.52 ) }
    dend_14 { pt3dadd( 11.7943, 38.988, 40.9389, 0.52 ) }
    dend_14 { pt3dadd( 12.6778, 37.3796, 41.6554, 0.52 ) }
    dend_14 { pt3dadd( 13.3365, 36.2648, 42.1566, 0.52 ) }
    dend_14 { pt3dadd( 13.9814, 35.3081, 42.5795, 0.52 ) }
    dend_14 { pt3dadd( 14.5834, 34.5833, 42.8574, 0.52 ) }
    dend_14 { pt3dadd( 15.3678, 33.8617, 43.0805, 0.52 ) }
    dend_14 { pt3dadd( 16.1701, 33.3221, 43.2086, 0.52 ) }
    dend_14 { pt3dadd( 16.9242, 32.9988, 43.2778, 0.52 ) }
    dend_14 { pt3dadd( 17.9139, 32.8369, 43.3955, 0.52 ) }
    dend_14 { pt3dadd( 18.6524, 32.8115, 43.493, 0.52 ) }
    dend_14 { pt3dadd( 19.6142, 32.8869, 43.6312, 0.52 ) }
    dend_14 { pt3dadd( 20.3781, 33.0316, 43.7495, 0.52 ) }
    dend_14 { pt3dadd( 21.1723, 33.2501, 43.8796, 0.52 ) }
    dend_14 { pt3dadd( 22.2281, 33.6583, 44.0645, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 71/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -20.5938, 61.0214, 5.79545, 0.44 ) }
    dend_10 { pt3dadd( -22.9764, 61.3748, 5.71812, 0.44 ) }
    dend_10 { pt3dadd( -24.0204, 61.5708, 5.62325, 0.44 ) }
    dend_10 { pt3dadd( -25.4558, 61.8687, 5.45027, 0.44 ) }
    dend_10 { pt3dadd( -26.6776, 62.1463, 5.27472, 0.44 ) }
    dend_10 { pt3dadd( -28.5421, 62.5566, 4.96079, 0.44 ) }
    dend_10 { pt3dadd( -29.9325, 62.8166, 4.69716, 0.44 ) }
    dend_10 { pt3dadd( -31.5401, 63.0463, 4.34889, 0.44 ) }
    dend_10 { pt3dadd( -32.0516, 63.1018, 4.24216, 0.44 ) }
    dend_10 { pt3dadd( -33.0286, 63.1928, 4.06928, 0.44 ) }
    dend_10 { pt3dadd( -34.4799, 63.3589, 3.9869, 0.44 ) }
    dend_10 { pt3dadd( -35.7095, 63.4791, 3.99577, 0.44 ) }
    dend_10 { pt3dadd( -37.5811, 63.5835, 4.12992, 0.44 ) }
    dend_10 { pt3dadd( -38.6292, 63.6046, 4.28279, 0.44 ) }
    dend_10 { pt3dadd( -40.1027, 63.6402, 4.59458, 0.44 ) }
    dend_10 { pt3dadd( -41.6491, 63.7233, 5.09635, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -20.5938, 61.0214, 5.79545, 0.52 ) }
    dend_3 { pt3dadd( -22.5152, 61.6535, 5.73656, 0.52 ) }
    dend_3 { pt3dadd( -23.6362, 61.9967, 5.70844, 0.52 ) }
    dend_3 { pt3dadd( -24.565, 62.2929, 5.7121, 0.52 ) }
    dend_3 { pt3dadd( -26.1143, 62.8427, 5.73822, 0.52 ) }
    dend_3 { pt3dadd( -27.1906, 63.2342, 5.76133, 0.52 ) }
    dend_3 { pt3dadd( -28.7578, 63.7996, 5.75475, 0.52 ) }
    dend_3 { pt3dadd( -30.0247, 64.2119, 5.72959, 0.52 ) }
    dend_3 { pt3dadd( -31.1919, 64.6078, 5.68688, 0.52 ) }
    dend_3 { pt3dadd( -32.5263, 65.1349, 5.61456, 0.52 ) }
    dend_3 { pt3dadd( -34.0958, 65.8939, 5.50118, 0.52 ) }
    dend_3 { pt3dadd( -35.1207, 66.4701, 5.41209, 0.52 ) }
    dend_3 { pt3dadd( -35.8865, 66.9345, 5.33596, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( -37.0649, 67.6489, 5.20992, 0.52 ) }
    dend_3 { pt3dadd( -38.7876, 68.7284, 5.0185, 0.52 ) }
    dend_3 { pt3dadd( -39.8786, 69.4557, 4.91608, 0.52 ) }
    dend_3 { pt3dadd( -41.2777, 70.4648, 4.85142, 0.52 ) }
    dend_3 { pt3dadd( -42.0591, 71.0479, 4.85148, 0.52 ) }
    dend_3 { pt3dadd( -43.1932, 71.9189, 4.88308, 0.52 ) }
    dend_3 { pt3dadd( -44.2126, 72.7249, 4.94945, 0.52 ) }
    dend_3 { pt3dadd( -45.3721, 73.6755, 5.0672, 0.52 ) }
    dend_3 { pt3dadd( -46.6804, 74.7409, 5.23084, 0.52 ) }
    dend_3 { pt3dadd( -47.716, 75.567, 5.42751, 0.52 ) }
    dend_3 { pt3dadd( -48.5931, 76.2375, 5.63301, 0.52 ) }
    dend_3 { pt3dadd( -49.9013, 77.1257, 5.75603, 0.52 ) }
    dend_3 { pt3dadd( -50.2495, 77.3239, 5.75495, 0.52 ) }
    dend_3 { pt3dadd( -51.8024, 78.0534, 5.44266, 0.52 ) }
    dend_3 { pt3dadd( -53.274, 78.6124, 4.79854, 0.52 ) }
    dend_3 { pt3dadd( -53.9002, 78.7982, 4.37373, 0.52 ) }
    dend_3 { pt3dadd( -57.6742, 79.595, 1.32423, 0.52 ) }
    dend_3 { pt3dadd( -59.0416, 79.8031, 0.110706, 0.52 ) }
    dend_3 { pt3dadd( -60.7334, 80.0312, -1.42683, 0.52 ) }
    dend_3 { pt3dadd( -61.7198, 80.1589, -2.42138, 0.52 ) }
    dend_3 { pt3dadd( -63.3441, 80.4142, -4.1239, 0.52 ) }
    dend_3 { pt3dadd( -64.1852, 80.5896, -5.0125, 0.52 ) }
    dend_3 { pt3dadd( -64.6587, 80.7295, -5.5024, 0.52 ) }
    dend_3 { pt3dadd( -65.4759, 80.9778, -6.40282, 0.52 ) }
    dend_3 { pt3dadd( -67.3236, 81.5947, -8.37824, 0.52 ) }
    dend_3 { pt3dadd( -68.7342, 82.1587, -9.9163, 0.52 ) }
    dend_3 { pt3dadd( -70.1221, 82.8518, -11.5368, 0.52 ) }
    dend_3 { pt3dadd( -71.2116, 83.5128, -12.9967, 0.52 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 28/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 61.2004, -81.8287, 23.8032, 0.37 ) }
    dend_93 { pt3dadd( 61.87, -80.6206, 23.4812, 0.37 ) }
    dend_93 { pt3dadd( 62.5431, -79.4063, 23.1575, 0.37 ) }
    dend_93 { pt3dadd( 62.7156, -79.0949, 23.0745, 0.37 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 32/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 61.2004, -81.8287, 23.8032, 0.37 ) }
    dend_92 { pt3dadd( 62.4757, -81.7457, 23.9017, 0.37 ) }
    dend_92 { pt3dadd( 63.1296, -81.7574, 23.9398, 0.37 ) }
    dend_92 { pt3dadd( 64.2575, -81.9085, 23.9915, 0.37 ) }
    dend_92 { pt3dadd( 65.7906, -82.2381, 24.0178, 0.37 ) }
    dend_92 { pt3dadd( 67.0961, -82.5826, 24.0089, 0.37 ) }
    dend_92 { pt3dadd( 68.4035, -83.018, 24.0305, 0.37 ) }
    dend_92 { pt3dadd( 69.4573, -83.5005, 24.0716, 0.37 ) }
    dend_92 { pt3dadd( 70.5146, -84.0785, 24.1217, 0.37 ) }
    dend_92 { pt3dadd( 71.5211, -84.7588, 24.1685, 0.37 ) }
    dend_92 { pt3dadd( 72.0403, -85.1831, 24.1727, 0.37 ) }
    dend_92 { pt3dadd( 73.3756, -86.4406, 24.2087, 0.37 ) }
    dend_92 { pt3dadd( 74.5372, -87.6119, 24.2034, 0.37 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 45/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 42.4055, -52.3658, -1.47596, 0.44 ) }
    dend_80 { pt3dadd( 43.0772, -52.5386, -1.59374, 0.44 ) }
    dend_80 { pt3dadd( 43.7405, -52.7229, -1.71195, 0.44 ) }
    dend_80 { pt3dadd( 44.6455, -52.9742, -1.87326, 0.44 ) }
    dend_80 { pt3dadd( 45.3908, -53.1813, -2.00611, 0.44 ) }
    dend_80 { pt3dadd( 46.9896, -53.6253, -2.29107, 0.44 ) }
    dend_80 { pt3dadd( 48.0341, -53.9155, -2.47725, 0.44 ) }
    dend_80 { pt3dadd( 49.038, -54.2773, -2.66664, 0.44 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 53/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 42.4055, -52.3658, -1.47596, 0.44 ) }
    dend_79 { pt3dadd( 42.0773, -51.3519, -1.48076, 0.44 ) }
    dend_79 { pt3dadd( 41.504, -49.5808, -1.48914, 0.44 ) }
    dend_79 { pt3dadd( 41.2359, -48.7528, -1.49306, 0.44 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 57/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -3.49792, -96.8672, 4.37286, 0.52 ) }
    dend_71 { pt3dadd( -4.44805, -97.1717, 4.22643, 0.52 ) }
    dend_71 { pt3dadd( -5.18148, -97.3696, 4.1959, 0.52 ) }
    dend_71 { pt3dadd( -5.84991, -97.549, 4.19289, 0.52 ) }
    dend_71 { pt3dadd( -6.57337, -97.7715, 4.20369, 0.52 ) }
    dend_71 { pt3dadd( -7.45766, -98.1025, 4.29431, 0.52 ) }
    dend_71 { pt3dadd( -8.11109, -98.3861, 4.3934, 0.52 ) }
    dend_71 { pt3dadd( -9.26524, -98.9503, 4.62379, 0.52 ) }
    dend_71 { pt3dadd( -9.7746, -99.2227, 4.74853, 0.52 ) }
    dend_71 { pt3dadd( -10.2247, -99.4909, 4.86974, 0.52 ) }
    dend_71 { pt3dadd( -11.3828, -100.249, 5.1702, 0.52 ) }
    dend_71 { pt3dadd( -11.8007, -100.537, 5.23839, 0.52 ) }
    dend_71 { pt3dadd( -12.4284, -100.965, 5.24898, 0.52 ) }
    dend_71 { pt3dadd( -13.0197, -101.326, 5.19271, 0.52 ) }
    dend_71 { pt3dadd( -13.6599, -101.655, 5.14937, 0.52 ) }
    dend_71 { pt3dadd( -14.3418, -101.948, 5.09998, 0.52 ) }
    dend_71 { pt3dadd( -15.296, -102.317, 5.00996, 0.52 ) }
    dend_71 { pt3dadd( -15.815, -102.516, 4.97857, 0.52 ) }
    dend_71 { pt3dadd( -16.844, -102.911, 4.94266, 0.52 ) }
    dend_71 { pt3dadd( -18.1799, -103.468, 4.94619, 0.52 ) }
    dend_71 { pt3dadd( -18.9999, -103.813, 4.96875, 0.52 ) }
    dend_71 { pt3dadd( -19.595, -104.037, 4.99243, 0.52 ) }
    dend_71 { pt3dadd( -20.1092, -104.198, 5.01505, 0.52 ) }
    dend_71 { pt3dadd( -20.895, -104.399, 5.00774, 0.52 ) }
    dend_71 { pt3dadd( -21.5888, -104.563, 4.93895, 0.52 ) }
    dend_71 { pt3dadd( -22.3479, -104.747, 4.85917, 0.52 ) }
    dend_71 { pt3dadd( -23.1724, -104.978, 4.80905, 0.52 ) }
    dend_71 { pt3dadd( -23.6601, -105.132, 4.85452, 0.52 ) }
    dend_71 { pt3dadd( -24.1826, -105.319, 4.97897, 0.52 ) }
    dend_71 { pt3dadd( -24.7661, -105.57, 5.18491, 0.52 ) }
    dend_71 { pt3dadd( -25.762, -106.042, 5.60268, 0.52 ) }
    dend_71 { pt3dadd( -26.4165, -106.38, 5.92075, 0.52 ) }
    dend_71 { pt3dadd( -27.9587, -107.185, 6.67927, 0.52 ) }
    dend_71 { pt3dadd( -28.5895, -107.487, 6.96102, 0.52 ) }
    dend_71 { pt3dadd( -28.9302, -107.622, 7.08223, 0.52 ) }
    dend_71 { pt3dadd( -29.5035, -107.795, 7.1963, 0.52 ) }
    dend_71 { pt3dadd( -30.007, -107.909, 7.20634, 0.52 ) }
    dend_71 { pt3dadd( -30.7666, -108.072, 7.14395, 0.52 ) }
    dend_71 { pt3dadd( -31.5296, -108.274, 6.99309, 0.52 ) }
    dend_71 { pt3dadd( -32.3523, -108.539, 6.81826, 0.52 ) }
    dend_71 { pt3dadd( -33.361, -108.952, 6.6124, 0.52 ) }
    dend_71 { pt3dadd( -33.8286, -109.196, 6.52304, 0.52 ) }
    dend_71 { pt3dadd( -34.5812, -109.659, 6.42071, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_71 { pt3dadd( -35.3801, -110.179, 6.36251, 0.52 ) }
    dend_71 { pt3dadd( -35.8233, -110.457, 6.34886, 0.52 ) }
    dend_71 { pt3dadd( -36.4731, -110.824, 6.341, 0.52 ) }
    dend_71 { pt3dadd( -36.9723, -111.076, 6.33687, 0.52 ) }
    dend_71 { pt3dadd( -38.0732, -111.578, 6.31539, 0.52 ) }
    dend_71 { pt3dadd( -38.8929, -111.923, 6.27775, 0.52 ) }
    dend_71 { pt3dadd( -39.889, -112.335, 6.18369, 0.52 ) }
    dend_71 { pt3dadd( -40.6362, -112.669, 6.07276, 0.52 ) }
    dend_71 { pt3dadd( -41.0821, -112.893, 6.01616, 0.52 ) }
    dend_71 { pt3dadd( -41.4166, -113.086, 5.97339, 0.52 ) }
    dend_71 { pt3dadd( -42.3472, -113.7, 5.85026, 0.52 ) }
    dend_71 { pt3dadd( -43.4379, -114.466, 5.68596, 0.52 ) }
    dend_71 { pt3dadd( -44.3606, -115.132, 5.53229, 0.52 ) }
    dend_71 { pt3dadd( -46.6478, -116.827, 5.14397, 0.52 ) }
    dend_71 { pt3dadd( -47.8445, -117.735, 4.93571, 0.52 ) }
    dend_71 { pt3dadd( -48.3287, -118.124, 4.84067, 0.52 ) }
    dend_71 { pt3dadd( -49.2251, -118.894, 4.64646, 0.52 ) }
    dend_71 { pt3dadd( -49.7345, -119.366, 4.52355, 0.52 ) }
    dend_71 { pt3dadd( -50.4234, -120.02, 4.28481, 0.52 ) }
    dend_71 { pt3dadd( -51.0684, -120.64, 3.96439, 0.52 ) }
    dend_71 { pt3dadd( -52.0679, -121.492, 3.44223, 0.52 ) }
    dend_71 { pt3dadd( -52.5966, -121.877, 3.16159, 0.52 ) }
    dend_71 { pt3dadd( -53.3976, -122.372, 2.81862, 0.52 ) }
    dend_71 { pt3dadd( -54.6992, -122.958, 2.35094, 0.52 ) }
    dend_71 { pt3dadd( -55.2684, -123.092, 2.20309, 0.52 ) }
    dend_71 { pt3dadd( -55.9184, -123.128, 2.13782, 0.52 ) }
    dend_71 { pt3dadd( -56.7058, -123.086, 2.1757, 0.52 ) }
    dend_71 { pt3dadd( -58.2956, -122.923, 2.36363, 0.52 ) }
    dend_71 { pt3dadd( -58.9283, -122.84, 2.51769, 0.52 ) }
    dend_71 { pt3dadd( -59.8803, -122.71, 2.90971, 0.52 ) }
    dend_71 { pt3dadd( -61.0194, -122.551, 3.49096, 0.52 ) }
    dend_71 { pt3dadd( -61.7359, -122.45, 3.93095, 0.52 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -3.49792, -96.8672, 4.37286, 0.59 ) }
    dend_68 { pt3dadd( -4.06187, -97.6155, 4.15746, 0.59 ) }
    dend_68 { pt3dadd( -4.53789, -98.3197, 3.97631, 0.59 ) }
    dend_68 { pt3dadd( -4.92344, -98.9962, 3.79845, 0.59 ) }
    dend_68 { pt3dadd( -5.23465, -99.6486, 3.61225, 0.59 ) }
    dend_68 { pt3dadd( -5.58838, -100.433, 3.3649, 0.59 ) }
    dend_68 { pt3dadd( -6.06991, -101.444, 3.01406, 0.59 ) }
    dend_68 { pt3dadd( -6.43077, -102.13, 2.73762, 0.59 ) }
    dend_68 { pt3dadd( -6.90551, -102.992, 2.35842, 0.59 ) }
    dend_68 { pt3dadd( -7.33672, -103.749, 2.03013, 0.59 ) }
    dend_68 { pt3dadd( -7.65626, -104.302, 1.76606, 0.59 ) }
    dend_68 { pt3dadd( -8.06312, -104.956, 1.36579, 0.59 ) }
    dend_68 { pt3dadd( -8.3855, -105.407, 1.02849, 0.59 ) }
    dend_68 { pt3dadd( -8.6698, -105.748, 0.74314, 0.59 ) }
    dend_68 { pt3dadd( -9.22863, -106.38, 0.218678, 0.59 ) }
    dend_68 { pt3dadd( -9.91787, -107.197, -0.359588, 0.59 ) }
    dend_68 { pt3dadd( -10.5679, -108.084, -0.838063, 0.59 ) }
    dend_68 { pt3dadd( -10.9008, -108.593, -1.0489, 0.59 ) }
    dend_68 { pt3dadd( -11.3945, -109.409, -1.26414, 0.59 ) }
    dend_68 { pt3dadd( -11.7978, -110.143, -1.36006, 0.59 ) }
    dend_68 { pt3dadd( -12.274, -111.099, -1.36708, 0.59 ) }
    dend_68 { pt3dadd( -12.6877, -111.967, -1.27373, 0.52 ) }
    dend_68 { pt3dadd( -12.9818, -112.628, -1.16661, 0.52 ) }
    dend_68 { pt3dadd( -13.4172, -113.681, -1.00789, 0.52 ) }
    dend_68 { pt3dadd( -13.731, -114.511, -0.905164, 0.52 ) }
    dend_68 { pt3dadd( -14.0232, -115.249, -0.828135, 0.52 ) }
    dend_68 { pt3dadd( -14.2121, -115.74, -0.795446, 0.52 ) }
    dend_68 { pt3dadd( -14.4546, -116.385, -0.765406, 0.52 ) }
    dend_68 { pt3dadd( -14.7752, -117.196, -0.736122, 0.52 ) }
    dend_68 { pt3dadd( -15.0941, -117.876, -0.744413, 0.52 ) }
    dend_68 { pt3dadd( -15.6557, -118.878, -0.77313, 0.52 ) }
    dend_68 { pt3dadd( -15.8876, -119.261, -0.788661, 0.52 ) }
    dend_68 { pt3dadd( -16.0587, -119.551, -0.801603, 0.52 ) }
    dend_68 { pt3dadd( -16.4556, -120.298, -0.837609, 0.52 ) }
    dend_68 { pt3dadd( -16.8259, -121.086, -0.888654, 0.52 ) }
    dend_68 { pt3dadd( -17.0513, -121.607, -0.941532, 0.52 ) }
    dend_68 { pt3dadd( -17.2088, -122.019, -1.00704, 0.52 ) }
    dend_68 { pt3dadd( -17.3754, -122.452, -1.07984, 0.52 ) }
    dend_68 { pt3dadd( -17.6757, -123.239, -1.2158, 0.52 ) }
    dend_68 { pt3dadd( -17.9145, -123.883, -1.32683, 0.52 ) }
    dend_68 { pt3dadd( -18.1465, -124.529, -1.43659, 0.52 ) }
    dend_68 { pt3dadd( -18.3768, -125.203, -1.54701, 0.52 ) }
    dend_68 { pt3dadd( -18.6847, -126.13, -1.68536, 0.52 ) }
    dend_68 { pt3dadd( -19.1046, -127.349, -1.84984, 0.52 ) }
    dend_68 { pt3dadd( -19.4121, -128.196, -1.95436, 0.52 ) }
    dend_68 { pt3dadd( -19.6083, -128.734, -2.01315, 0.52 ) }
    dend_68 { pt3dadd( -19.9495, -129.671, -2.10282, 0.52 ) }
    dend_68 { pt3dadd( -20.3302, -130.706, -2.18912, 0.52 ) }
    dend_68 { pt3dadd( -20.6925, -131.753, -2.26656, 0.52 ) }
    dend_68 { pt3dadd( -20.8447, -132.224, -2.29903, 0.52 ) }
    dend_68 { pt3dadd( -21.2121, -133.369, -2.38804, 0.52 ) }
    dend_68 { pt3dadd( -21.5238, -134.293, -2.46182, 0.52 ) }
    dend_68 { pt3dadd( -21.8392, -135.191, -2.53948, 0.52 ) }
    dend_68 { pt3dadd( -22.1174, -136.021, -2.61313, 0.52 ) }
    dend_68 { pt3dadd( -22.4393, -137.068, -2.70016, 0.52 ) }
    dend_68 { pt3dadd( -22.831, -138.331, -2.8048, 0.52 ) }
    dend_68 { pt3dadd( -23.0873, -139.113, -2.87073, 0.52 ) }
    dend_68 { pt3dadd( -23.3282, -139.787, -2.93391, 0.52 ) }
    dend_68 { pt3dadd( -23.5578, -140.379, -2.99767, 0.52 ) }
    dend_68 { pt3dadd( -23.7844, -140.896, -3.06612, 0.52 ) }
    dend_68 { pt3dadd( -24.1672, -141.676, -3.19224, 0.52 ) }
    dend_68 { pt3dadd( -24.5583, -142.465, -3.33484, 0.52 ) }
    dend_68 { pt3dadd( -24.9066, -143.17, -3.46873, 0.52 ) }
    dend_68 { pt3dadd( -25.3135, -143.977, -3.62345, 0.52 ) }
    dend_68 { pt3dadd( -25.6122, -144.561, -3.73565, 0.52 ) }
    dend_68 { pt3dadd( -25.8694, -145.094, -3.83079, 0.52 ) }
    dend_68 { pt3dadd( -26.1799, -145.826, -3.94237, 0.52 ) }
    dend_68 { pt3dadd( -26.3258, -146.171, -3.99186, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_64, id: dend_64, parent: dend_32 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 8.38647, -116.587, 4.96155, 0.59 ) }
    dend_64 { pt3dadd( 8.92672, -118.433, 4.98328, 0.59 ) }
    dend_64 { pt3dadd( 9.19521, -119.524, 5.03171, 0.59 ) }
    dend_64 { pt3dadd( 9.46469, -120.853, 5.10569, 0.52 ) }
    dend_64 { pt3dadd( 9.75488, -122.495, 5.20233, 0.52 ) }
    dend_64 { pt3dadd( 9.95946, -123.836, 5.28311, 0.52 ) }
    dend_64 { pt3dadd( 10.2387, -125.624, 5.38901, 0.52 ) }
    dend_64 { pt3dadd( 10.3845, -126.631, 5.47539, 0.52 ) }
    dend_64 { pt3dadd( 10.5416, -127.877, 5.56218, 0.52 ) }
    dend_64 { pt3dadd( 10.6744, -129.074, 5.63456, 0.52 ) }
    dend_64 { pt3dadd( 10.9304, -131.535, 5.75626, 0.52 ) }
    dend_64 { pt3dadd( 11.1429, -133.552, 5.82477, 0.52 ) }
    dend_64 { pt3dadd( 11.33, -135.114, 5.83933, 0.44 ) }
    dend_64 { pt3dadd( 11.5084, -136.29, 5.84659, 0.44 ) }
    dend_64 { pt3dadd( 11.7051, -137.369, 5.84968, 0.44 ) }
    dend_64 { pt3dadd( 11.8559, -138.091, 5.84861, 0.44 ) }
    dend_64 { pt3dadd( 12.2049, -139.627, 5.83576, 0.44 ) }
    dend_64 { pt3dadd( 12.5562, -141.196, 5.81594, 0.44 ) }
    dend_64 { pt3dadd( 12.8867, -142.627, 5.79634, 0.44 ) }
    dend_64 { pt3dadd( 13.1318, -143.773, 5.78301, 0.44 ) }
    dend_64 { pt3dadd( 13.2324, -144.302, 5.8041, 0.44 ) }
    dend_64 { pt3dadd( 13.438, -145.46, 5.86158, 0.44 ) }
    dend_64 { pt3dadd( 13.626, -146.792, 5.94939, 0.44 ) }
    dend_64 { pt3dadd( 13.719, -147.982, 6.05549, 0.44 ) }
    dend_64 { pt3dadd( 13.7534, -149.82, 6.25013, 0.44 ) }
    dend_64 { pt3dadd( 13.7062, -151.58, 6.47209, 0.44 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 26/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 8.38647, -116.587, 4.96155, 0.59 ) }
    dend_33 { pt3dadd( 8.48053, -118.031, 4.9838, 0.59 ) }
    dend_33 { pt3dadd( 8.5503, -119.314, 5.00117, 0.59 ) }
    dend_33 { pt3dadd( 8.61425, -120.801, 5.02206, 0.59 ) }
    dend_33 { pt3dadd( 8.64023, -121.635, 5.03519, 0.59 ) }
    dend_33 { pt3dadd( 8.69061, -122.999, 5.0514, 0.59 ) }
    dend_33 { pt3dadd( 8.7373, -124.165, 5.05042, 0.59 ) }
    dend_33 { pt3dadd( 8.8392, -125.868, 5.00821, 0.59 ) }
    dend_33 { pt3dadd( 8.93554, -127.145, 4.95907, 0.59 ) }
    dend_33 { pt3dadd( 9.02629, -128.557, 4.83887, 0.59 ) }
    dend_33 { pt3dadd( 9.10372, -129.939, 4.66497, 0.59 ) }
    dend_33 { pt3dadd( 9.14924, -131.107, 4.45558, 0.59 ) }
    dend_33 { pt3dadd( 9.16784, -132.096, 4.2328, 0.59 ) }
    dend_33 { pt3dadd( 9.15962, -132.741, 4.06105, 0.59 ) }
    dend_33 { pt3dadd( 9.10179, -134.429, 3.50902, 0.59 ) }
    dend_33 { pt3dadd( 9.03753, -135.406, 3.15972, 0.59 ) }
    dend_33 { pt3dadd( 8.89968, -136.541, 2.77882, 0.59 ) }
    dend_33 { pt3dadd( 8.7933, -137.181, 2.60134, 0.59 ) }
    dend_33 { pt3dadd( 8.66774, -137.79, 2.47552, 0.59 ) }
    dend_33 { pt3dadd( 8.38862, -139.039, 2.31168, 0.59 ) }
    dend_33 { pt3dadd( 8.13566, -140.217, 2.20427, 0.59 ) }
    dend_33 { pt3dadd( 7.87715, -141.516, 2.0325, 0.59 ) }
    dend_33 { pt3dadd( 7.66433, -142.689, 1.85762, 0.59 ) }
    dend_33 { pt3dadd( 7.44962, -143.89, 1.6636, 0.59 ) }
    dend_33 { pt3dadd( 7.25588, -144.908, 1.50794, 0.59 ) }
    dend_33 { pt3dadd( 6.96916, -146.306, 1.32642, 0.59 ) }
    dend_33 { pt3dadd( 6.70264, -147.567, 1.15631, 0.59 ) }
    dend_33 { pt3dadd( 6.50018, -148.56, 1.02687, 0.59 ) }
    dend_33 { pt3dadd( 6.32759, -149.48, 0.924882, 0.59 ) }
    dend_33 { pt3dadd( 6.13934, -150.677, 0.826848, 0.59 ) }
    dend_33 { pt3dadd( 6.02376, -151.754, 0.793938, 0.59 ) }
    dend_33 { pt3dadd( 5.98526, -152.697, 0.818597, 0.59 ) }
    dend_33 { pt3dadd( 6.00847, -153.705, 0.867147, 0.59 ) }
    dend_33 { pt3dadd( 6.10333, -154.893, 0.909755, 0.59 ) }
    dend_33 { pt3dadd( 6.20662, -155.926, 0.940023, 0.59 ) }
    dend_33 { pt3dadd( 6.33404, -157.052, 0.967238, 0.59 ) }
    dend_33 { pt3dadd( 6.45199, -158.239, 0.996413, 0.59 ) }
    dend_33 { pt3dadd( 6.50227, -159.068, 0.990923, 0.59 ) }
    dend_33 { pt3dadd( 6.48241, -160.295, 0.962112, 0.59 ) }
    dend_33 { pt3dadd( 6.37295, -161.446, 0.922979, 0.59 ) }
    dend_33 { pt3dadd( 6.26648, -162.112, 0.872583, 0.59 ) }
    dend_33 { pt3dadd( 6.02597, -163.416, 0.722087, 0.59 ) }
    dend_33 { pt3dadd( 5.81764, -164.605, 0.561799, 0.59 ) }
    dend_33 { pt3dadd( 5.63151, -165.853, 0.358339, 0.59 ) }
    dend_33 { pt3dadd( 5.54037, -166.729, 0.20175, 0.59 ) }
    dend_33 { pt3dadd( 5.47215, -168.07, -0.0336635, 0.59 ) }
    dend_33 { pt3dadd( 5.44846, -169.055, -0.189703, 0.59 ) }
    dend_33 { pt3dadd( 5.438, -170.269, -0.351154, 0.59 ) }
    dend_33 { pt3dadd( 5.42244, -171.649, -0.517245, 0.59 ) }
    dend_33 { pt3dadd( 5.40103, -172.986, -0.736218, 0.59 ) }
    dend_33 { pt3dadd( 5.36466, -174.641, -1.04713, 0.59 ) }
    dend_33 { pt3dadd( 5.34682, -175.919, -1.3054, 0.59 ) }
    dend_33 { pt3dadd( 5.34086, -176.769, -1.50481, 0.59 ) }
    dend_33 { pt3dadd( 5.35433, -178.087, -1.89612, 0.59 ) }
    dend_33 { pt3dadd( 5.39355, -179.556, -2.39885, 0.59 ) }
    dend_33 { pt3dadd( 5.4029, -180.172, -2.63552, 0.59 ) }
    dend_33 { pt3dadd( 5.39585, -180.968, -2.96715, 0.59 ) }
    dend_33 { pt3dadd( 5.38626, -181.497, -3.17923, 0.59 ) }
    dend_33 { pt3dadd( 5.34842, -182.742, -3.64054, 0.59 ) }
    dend_33 { pt3dadd( 5.29329, -183.648, -3.91404, 0.59 ) }
    dend_33 { pt3dadd( 5.18995, -184.336, -4.09406, 0.59 ) }
    dend_33 { pt3dadd( 4.82015, -185.7, -4.46993, 0.59 ) }
    dend_33 { pt3dadd( 4.47753, -186.614, -4.71312, 0.59 ) }
    dend_33 { pt3dadd( 4.08383, -187.49, -4.91818, 0.59 ) }
    dend_33 { pt3dadd( 3.71167, -188.2, -5.05086, 0.59 ) }
    dend_33 { pt3dadd( 2.99372, -189.389, -5.2834, 0.59 ) }
    dend_33 { pt3dadd( 2.11163, -190.722, -5.52888, 0.59 ) }
    dend_33 { pt3dadd( 1.64512, -191.401, -5.63241, 0.59 ) }
    dend_33 { pt3dadd( 0.980969, -192.399, -5.77042, 0.59 ) }
    dend_33 { pt3dadd( 0.622489, -193.002, -5.83721, 0.59 ) }
    dend_33 { pt3dadd( -0.177354, -194.617, -5.98782, 0.59 ) }
    dend_33 { pt3dadd( -0.409995, -195.196, -6.05007, 0.59 ) }
    dend_33 { pt3dadd( -0.742623, -196.213, -6.17712, 0.59 ) }
    dend_33 { pt3dadd( -0.942707, -196.945, -6.29071, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_33 { pt3dadd( -1.12503, -197.805, -6.43844, 0.59 ) }
    dend_33 { pt3dadd( -1.28057, -198.79, -6.62809, 0.59 ) }
    dend_33 { pt3dadd( -1.51896, -200.626, -6.96862, 0.59 ) }
    dend_33 { pt3dadd( -1.67586, -201.596, -7.17999, 0.59 ) }
    dend_33 { pt3dadd( -1.81557, -202.319, -7.3501, 0.59 ) }
    dend_33 { pt3dadd( -2.0108, -203.195, -7.55602, 0.59 ) }
    dend_33 { pt3dadd( -2.38161, -204.546, -7.84769, 0.59 ) }
    dend_33 { pt3dadd( -2.70384, -205.478, -8.01212, 0.59 ) }
    dend_33 { pt3dadd( -3.26769, -206.795, -8.15015, 0.59 ) }
    dend_33 { pt3dadd( -3.60253, -207.424, -8.19776, 0.59 ) }
    dend_33 { pt3dadd( -3.90629, -207.898, -8.22606, 0.59 ) }
    dend_33 { pt3dadd( -4.56404, -208.808, -8.2495, 0.59 ) }
    dend_33 { pt3dadd( -5.12815, -209.57, -8.23367, 0.59 ) }
    dend_33 { pt3dadd( -5.57218, -210.244, -8.21824, 0.59 ) }
    dend_33 { pt3dadd( -5.86149, -210.773, -8.22395, 0.59 ) }
    dend_33 { pt3dadd( -6.44268, -212.061, -8.30873, 0.59 ) }
    dend_33 { pt3dadd( -6.75331, -212.914, -8.39493, 0.59 ) }
    dend_33 { pt3dadd( -6.98397, -213.662, -8.51253, 0.59 ) }
    dend_33 { pt3dadd( -7.30339, -214.834, -8.72777, 0.59 ) }
    dend_33 { pt3dadd( -7.59155, -215.938, -8.93736, 0.59 ) }
    dend_33 { pt3dadd( -7.79516, -216.766, -9.09139, 0.59 ) }
    dend_33 { pt3dadd( -7.94848, -217.442, -9.19586, 0.59 ) }
    dend_33 { pt3dadd( -8.2164, -218.628, -9.35501, 0.52 ) }
    dend_33 { pt3dadd( -8.42438, -219.409, -9.42243, 0.52 ) }
    dend_33 { pt3dadd( -8.65654, -220.109, -9.43343, 0.52 ) }
    dend_33 { pt3dadd( -8.92327, -220.791, -9.41585, 0.52 ) }
    dend_33 { pt3dadd( -9.45948, -222.091, -9.3709, 0.52 ) }
    dend_33 { pt3dadd( -9.89661, -223.151, -9.31901, 0.52 ) }
    dend_33 { pt3dadd( -10.3706, -224.241, -9.22867, 0.52 ) }
    dend_33 { pt3dadd( -10.9476, -225.447, -9.17011, 0.52 ) }
    dend_33 { pt3dadd( -11.4674, -226.511, -9.14594, 0.52 ) }
    dend_33 { pt3dadd( -11.8731, -227.355, -9.14408, 0.52 ) }
    dend_33 { pt3dadd( -12.3289, -228.336, -9.18119, 0.52 ) }
    dend_33 { pt3dadd( -13.0046, -229.946, -9.29243, 0.52 ) }
    dend_33 { pt3dadd( -13.6246, -231.671, -9.4985, 0.52 ) }
    dend_33 { pt3dadd( -14.0191, -232.941, -9.68793, 0.52 ) }
    dend_33 { pt3dadd( -14.2594, -233.769, -9.81519, 0.52 ) }
    dend_33 { pt3dadd( -14.6656, -235.234, -10.0636, 0.52 ) }
    dend_33 { pt3dadd( -14.8588, -236.018, -10.2011, 0.52 ) }
    dend_33 { pt3dadd( -15.1454, -237.369, -10.4124, 0.52 ) }
    dend_33 { pt3dadd( -15.3106, -238.151, -10.49, 0.52 ) }
    dend_33 { pt3dadd( -15.4904, -238.896, -10.5323, 0.52 ) }
    dend_33 { pt3dadd( -15.7212, -239.815, -10.5424, 0.52 ) }
    dend_33 { pt3dadd( -15.9972, -240.982, -10.4991, 0.52 ) }
    dend_33 { pt3dadd( -16.3197, -242.337, -10.454, 0.52 ) }
    dend_33 { pt3dadd( -16.5385, -243.225, -10.4147, 0.52 ) }
    dend_33 { pt3dadd( -16.911, -244.631, -10.4045, 0.52 ) }
    dend_33 { pt3dadd( -17.1051, -245.354, -10.4219, 0.52 ) }
    dend_33 { pt3dadd( -17.3346, -246.2, -10.461, 0.52 ) }
    dend_33 { pt3dadd( -17.6158, -247.297, -10.5313, 0.52 ) }
    dend_33 { pt3dadd( -17.94, -248.673, -10.6337, 0.52 ) }
    dend_33 { pt3dadd( -18.2218, -249.892, -10.7366, 0.52 ) }
    dend_33 { pt3dadd( -18.4285, -250.817, -10.8138, 0.52 ) }
    dend_33 { pt3dadd( -18.7402, -252.261, -10.9149, 0.52 ) }
    dend_33 { pt3dadd( -18.9784, -253.385, -10.9679, 0.52 ) }
    dend_33 { pt3dadd( -19.1333, -254.187, -10.9815, 0.52 ) }
    dend_33 { pt3dadd( -19.4501, -255.835, -11.0716, 0.52 ) }
    dend_33 { pt3dadd( -19.6579, -256.889, -11.1509, 0.52 ) }
    dend_33 { pt3dadd( -19.8464, -257.788, -11.2466, 0.52 ) }
    dend_33 { pt3dadd( -20.0353, -258.641, -11.3585, 0.52 ) }
    dend_33 { pt3dadd( -20.2796, -259.689, -11.5394, 0.52 ) }
    dend_33 { pt3dadd( -20.6645, -261.373, -11.861, 0.52 ) }
    dend_33 { pt3dadd( -20.7936, -261.96, -11.9744, 0.52 ) }
    dend_33 { pt3dadd( -20.9414, -262.697, -12.1168, 0.52 ) }
    dend_33 { pt3dadd( -21.074, -263.497, -12.2579, 0.52 ) }
    dend_33 { pt3dadd( -21.2288, -264.849, -12.4679, 0.52 ) }
    dend_33 { pt3dadd( -21.3332, -266.257, -12.6374, 0.52 ) }
    dend_33 { pt3dadd( -21.3773, -267.124, -12.6954, 0.52 ) }
    dend_33 { pt3dadd( -21.4593, -268.368, -12.7555, 0.52 ) }
    dend_33 { pt3dadd( -21.5648, -269.593, -12.7766, 0.52 ) }
    dend_33 { pt3dadd( -21.6593, -270.418, -12.7562, 0.52 ) }
    dend_33 { pt3dadd( -21.7471, -271.051, -12.6751, 0.52 ) }
    dend_33 { pt3dadd( -21.9166, -271.934, -12.4952, 0.52 ) }
    dend_33 { pt3dadd( -22.1609, -272.879, -12.1953, 0.52 ) }
    dend_33 { pt3dadd( -22.4086, -273.63, -11.8795, 0.52 ) }
    dend_33 { pt3dadd( -22.7413, -274.548, -11.4344, 0.52 ) }
    dend_33 { pt3dadd( -23.1792, -275.767, -10.8232, 0.52 ) }
    dend_33 { pt3dadd( -23.4024, -276.424, -10.4975, 0.52 ) }
    dend_33 { pt3dadd( -23.6959, -277.412, -10.0415, 0.52 ) }
    dend_33 { pt3dadd( -23.9245, -278.391, -9.64004, 0.52 ) }
    dend_33 { pt3dadd( -24.0573, -279.096, -9.43028, 0.52 ) }
    dend_33 { pt3dadd( -24.2385, -280.074, -9.27908, 0.52 ) }
    dend_33 { pt3dadd( -24.3698, -280.751, -9.26113, 0.52 ) }
    dend_33 { pt3dadd( -24.5741, -281.733, -9.35374, 0.52 ) }
    dend_33 { pt3dadd( -24.8792, -283.117, -9.6096, 0.52 ) }
    dend_33 { pt3dadd( -25.2034, -284.431, -9.90143, 0.52 ) }
    dend_33 { pt3dadd( -25.5722, -285.749, -10.2169, 0.52 ) }
    dend_33 { pt3dadd( -25.837, -286.551, -10.4321, 0.52 ) }
    dend_33 { pt3dadd( -26.4042, -288.041, -10.8464, 0.52 ) }
    dend_33 { pt3dadd( -27.0278, -289.476, -11.2279, 0.52 ) }
    dend_33 { pt3dadd( -27.4145, -290.261, -11.4072, 0.52 ) }
    dend_33 { pt3dadd( -27.712, -290.816, -11.498, 0.52 ) }
    dend_33 { pt3dadd( -28.387, -292.039, -11.6312, 0.52 ) }
    dend_33 { pt3dadd( -28.7405, -292.64, -11.7092, 0.52 ) }
    dend_33 { pt3dadd( -29.358, -293.613, -11.9125, 0.52 ) }
    dend_33 { pt3dadd( -29.8311, -294.312, -12.1021, 0.52 ) }
    dend_33 { pt3dadd( -30.39, -295.141, -12.3702, 0.52 ) }
    dend_33 { pt3dadd( -30.7823, -295.732, -12.5938, 0.52 ) }
    dend_33 { pt3dadd( -31.5207, -296.879, -13.1043, 0.52 ) }
    dend_33 { pt3dadd( -32.3625, -298.191, -13.8885, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 0/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 4.49071, 122.605, -20.27, 0.59 ) }
    dend_24 { pt3dadd( 5.77642, 123.403, -21.2829, 0.59 ) }
    dend_24 { pt3dadd( 6.74231, 123.97, -21.9852, 0.59 ) }
    dend_24 { pt3dadd( 7.84352, 124.601, -22.7216, 0.59 ) }
    dend_24 { pt3dadd( 8.90928, 125.203, -23.3788, 0.59 ) }
    dend_24 { pt3dadd( 10.4374, 126.019, -24.3629, 0.59 ) }
    dend_24 { pt3dadd( 11.8791, 126.768, -25.3418, 0.59 ) }
    dend_24 { pt3dadd( 13.4983, 127.64, -26.451, 0.59 ) }
    dend_24 { pt3dadd( 14.5942, 128.276, -27.3575, 0.59 ) }
    dend_24 { pt3dadd( 15.684, 128.97, -28.4191, 0.59 ) }
    dend_24 { pt3dadd( 16.861, 129.91, -29.9053, 0.52 ) }
    dend_24 { pt3dadd( 17.6966, 130.821, -31.2572, 0.52 ) }
    dend_24 { pt3dadd( 18.1056, 131.524, -32.2025, 0.52 ) }
    dend_24 { pt3dadd( 18.9152, 133.901, -35.0492, 0.52 ) }
    dend_24 { pt3dadd( 19.0261, 134.863, -36.0499, 0.52 ) }
    dend_24 { pt3dadd( 18.8188, 136.89, -37.9352, 0.52 ) }
    dend_24 { pt3dadd( 18.5898, 137.94, -38.7532, 0.52 ) }
    dend_24 { pt3dadd( 18.1551, 139.37, -39.8191, 0.52 ) }
    dend_24 { pt3dadd( 17.8302, 140.347, -40.4964, 0.52 ) }
    dend_24 { pt3dadd( 17.1659, 142.345, -41.7045, 0.52 ) }
    dend_24 { pt3dadd( 16.1453, 145.366, -43.521, 0.52 ) }
    dend_24 { pt3dadd( 15.6771, 146.876, -44.3966, 0.52 ) }
    dend_24 { pt3dadd( 14.885, 149.73, -46.0974, 0.52 ) }
    dend_24 { pt3dadd( 14.5393, 151.185, -46.9672, 0.52 ) }
    dend_24 { pt3dadd( 14.3535, 152.174, -47.5191, 0.52 ) }
    dend_24 { pt3dadd( 14.0075, 154.365, -48.6423, 0.52 ) }
    dend_24 { pt3dadd( 13.86, 155.214, -49.0596, 0.52 ) }
    dend_24 { pt3dadd( 13.5339, 156.684, -49.8031, 0.52 ) }
    dend_24 { pt3dadd( 13.0605, 158.396, -50.6053, 0.52 ) }
    dend_24 { pt3dadd( 12.6319, 159.569, -51.1921, 0.52 ) }
    dend_24 { pt3dadd( 11.7796, 161.502, -52.1253, 0.52 ) }
    dend_24 { pt3dadd( 10.4652, 164.06, -53.4298, 0.52 ) }
    dend_24 { pt3dadd( 9.83339, 165.155, -53.9976, 0.52 ) }
    dend_24 { pt3dadd( 9.05442, 166.348, -54.7082, 0.52 ) }
    dend_24 { pt3dadd( 7.70813, 167.922, -56.6101, 0.52 ) }
    dend_24 { pt3dadd( 6.85081, 168.826, -58.0158, 0.52 ) }
    dend_24 { pt3dadd( 5.62151, 170.045, -60.3116, 0.52 ) }
    dend_24 { pt3dadd( 4.93578, 170.727, -61.7236, 0.52 ) }
    dend_24 { pt3dadd( 3.47426, 172.234, -65.0475, 0.52 ) }
    dend_24 { pt3dadd( -1.16249, 177.373, -76.6334, 0.52 ) }
    dend_24 { pt3dadd( -1.65887, 177.982, -77.9582, 0.52 ) }
    dend_24 { pt3dadd( -2.77825, 179.547, -81.1213, 0.52 ) }
    dend_24 { pt3dadd( -3.3798, 180.567, -82.9066, 0.52 ) }
    dend_24 { pt3dadd( -4.19109, 182.379, -85.5452, 0.52 ) }
    dend_24 { pt3dadd( -4.46055, 183.382, -86.5266, 0.52 ) }
    dend_24 { pt3dadd( -4.91234, 187.516, -88.7625, 0.52 ) }
    dend_24 { pt3dadd( -4.99745, 189.369, -89.6022, 0.52 ) }
    dend_24 { pt3dadd( -4.97331, 191.568, -90.3664, 0.52 ) }
    dend_24 { pt3dadd( -4.83343, 193.835, -91.0236, 0.52 ) }
    dend_24 { pt3dadd( -4.45523, 196.821, -91.6582, 0.52 ) }
    dend_24 { pt3dadd( -4.10408, 198.721, -91.9881, 0.52 ) }
    dend_24 { pt3dadd( -3.44884, 201.489, -92.3213, 0.52 ) }
    dend_24 { pt3dadd( -3.07567, 203.087, -92.4881, 0.52 ) }
    dend_24 { pt3dadd( -2.56956, 205.44, -92.6964, 0.52 ) }
    dend_24 { pt3dadd( -2.03681, 208.226, -92.8947, 0.52 ) }
    dend_24 { pt3dadd( -1.57555, 210.912, -93.063, 0.52 ) }
    dend_24 { pt3dadd( -1.25238, 213.14, -93.1813, 0.52 ) }
    dend_24 { pt3dadd( -0.996574, 215.309, -93.2767, 0.52 ) }
    dend_24 { pt3dadd( -0.720832, 217.834, -93.3792, 0.52 ) }
    dend_24 { pt3dadd( -0.453025, 220.37, -93.478, 0.52 ) }
    dend_24 { pt3dadd( -0.19309, 222.709, -93.5725, 0.52 ) }
    dend_24 { pt3dadd( 0.0633278, 224.716, -93.6361, 0.52 ) }
    dend_24 { pt3dadd( 0.369372, 226.714, -93.6704, 0.52 ) }
    dend_24 { pt3dadd( 0.80204, 229.056, -93.6701, 0.52 ) }
    dend_24 { pt3dadd( 1.199, 231.054, -93.659, 0.52 ) }
    dend_24 { pt3dadd( 1.65405, 233.319, -93.6266, 0.52 ) }
    dend_24 { pt3dadd( 2.15546, 235.81, -93.5477, 0.52 ) }
    dend_24 { pt3dadd( 2.6875, 238.332, -93.4213, 0.52 ) }
    dend_24 { pt3dadd( 3.11606, 240.307, -93.2703, 0.52 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 69/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 4.49071, 122.605, -20.27, 0.59 ) }
    dend_19 { pt3dadd( 3.43337, 123.658, -20.128, 0.59 ) }
    dend_19 { pt3dadd( 2.49333, 124.54, -20.02, 0.59 ) }
    dend_19 { pt3dadd( 1.29762, 125.683, -19.9399, 0.59 ) }
    dend_19 { pt3dadd( 0.489007, 126.525, -19.9097, 0.59 ) }
    dend_19 { pt3dadd( -0.399148, 127.555, -19.872, 0.59 ) }
    dend_19 { pt3dadd( -1.01399, 128.369, -19.8452, 0.59 ) }
    dend_19 { pt3dadd( -1.86479, 129.723, -19.7745, 0.59 ) }
    dend_19 { pt3dadd( -2.35575, 130.807, -19.7204, 0.59 ) }
    dend_19 { pt3dadd( -2.5851, 132.082, -19.6693, 0.59 ) }
    dend_19 { pt3dadd( -2.48466, 133.213, -19.6024, 0.59 ) }
    dend_19 { pt3dadd( -2.14316, 134.358, -19.5214, 0.59 ) }
    dend_19 { pt3dadd( -1.57169, 135.553, -19.4282, 0.59 ) }
    dend_19 { pt3dadd( -1.07808, 136.32, -19.3662, 0.59 ) }
    dend_19 { pt3dadd( -0.412022, 137.207, -19.2945, 0.59 ) }
    dend_19 { pt3dadd( 0.0990495, 137.842, -19.2687, 0.59 ) }
    dend_19 { pt3dadd( 0.546268, 138.393, -19.2415, 0.59 ) }
    dend_19 { pt3dadd( 1.12932, 139.157, -19.193, 0.59 ) }
    dend_19 { pt3dadd( 1.78637, 140.204, -19.4424, 0.59 ) }
    dend_19 { pt3dadd( 2.12256, 140.874, -19.7305, 0.59 ) }
    dend_19 { pt3dadd( 2.52475, 141.892, -20.2966, 0.59 ) }
    dend_19 { pt3dadd( 2.92291, 143.244, -21.2721, 0.59 ) }
    dend_19 { pt3dadd( 3.09346, 144.074, -21.935, 0.59 ) }
    dend_19 { pt3dadd( 3.62145, 148.529, -25.6951, 0.59 ) }
    dend_19 { pt3dadd( 3.64946, 149.298, -26.343, 0.59 ) }
    dend_19 { pt3dadd( 3.63186, 149.972, -26.8858, 0.59 ) }
    dend_19 { pt3dadd( 3.47407, 152.038, -28.4553, 0.59 ) }
    dend_19 { pt3dadd( 3.35304, 153.025, -29.1284, 0.59 ) }
    dend_19 { pt3dadd( 3.26294, 153.631, -29.3985, 0.59 ) }
    dend_19 { pt3dadd( 3.06105, 155.058, -29.5138, 0.44 ) }
    dend_19 { pt3dadd( 2.91607, 156.265, -29.5061, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_19 { pt3dadd( 2.82183, 157.157, -29.3925, 0.44 ) }
    dend_19 { pt3dadd( 2.75033, 157.969, -29.1605, 0.44 ) }
    dend_19 { pt3dadd( 2.67456, 159.638, -28.6084, 0.44 ) }
    dend_19 { pt3dadd( 2.67585, 161.217, -28.0679, 0.44 ) }
    dend_19 { pt3dadd( 2.70354, 161.964, -27.8193, 0.44 ) }
    dend_19 { pt3dadd( 2.79087, 163.524, -27.3146, 0.44 ) }
    dend_19 { pt3dadd( 2.87974, 164.905, -26.8647, 0.44 ) }
    dend_19 { pt3dadd( 2.96811, 166.276, -26.4413, 0.44 ) }
    dend_19 { pt3dadd( 3.01427, 167.378, -26.1508, 0.44 ) }
    dend_19 { pt3dadd( 3.00903, 168.486, -25.937, 0.44 ) }
    dend_19 { pt3dadd( 2.94196, 170.057, -25.6963, 0.44 ) }
    dend_19 { pt3dadd( 2.85029, 171.276, -25.583, 0.44 ) }
    dend_19 { pt3dadd( 2.73925, 172.321, -25.5161, 0.44 ) }
    dend_19 { pt3dadd( 2.52373, 173.954, -25.4025, 0.44 ) }
    dend_19 { pt3dadd( 2.39365, 174.866, -25.329, 0.44 ) }
    dend_19 { pt3dadd( 2.27704, 175.704, -25.2477, 0.44 ) }
    dend_19 { pt3dadd( 2.09493, 177.202, -25.098, 0.44 ) }
    dend_19 { pt3dadd( 1.9635, 178.79, -24.9557, 0.44 ) }
    dend_19 { pt3dadd( 1.91866, 179.783, -24.8589, 0.44 ) }
    dend_19 { pt3dadd( 1.87596, 181.156, -24.7228, 0.44 ) }
    dend_19 { pt3dadd( 1.84041, 182.47, -24.6039, 0.44 ) }
    dend_19 { pt3dadd( 1.81677, 183.683, -24.5137, 0.44 ) }
    dend_19 { pt3dadd( 1.81579, 184.499, -24.4854, 0.44 ) }
    dend_19 { pt3dadd( 1.83006, 185.853, -24.5236, 0.44 ) }
    dend_19 { pt3dadd( 1.8464, 187.383, -24.6706, 0.44 ) }
    dend_19 { pt3dadd( 1.85888, 188.656, -24.8633, 0.44 ) }
    dend_19 { pt3dadd( 1.851, 190.088, -25.127, 0.44 ) }
    dend_19 { pt3dadd( 1.83038, 191.603, -25.4192, 0.44 ) }
    dend_19 { pt3dadd( 1.78034, 193.279, -25.747, 0.44 ) }
    dend_19 { pt3dadd( 1.72239, 195.175, -26.1158, 0.44 ) }
    dend_19 { pt3dadd( 1.69502, 196.44, -26.3515, 0.44 ) }
    dend_19 { pt3dadd( 1.66233, 197.537, -26.5368, 0.44 ) }
    dend_19 { pt3dadd( 1.59179, 199.276, -26.7782, 0.44 ) }
    dend_19 { pt3dadd( 1.54095, 200.255, -26.8718, 0.44 ) }
    dend_19 { pt3dadd( 1.47134, 201.623, -26.9542, 0.44 ) }
    dend_19 { pt3dadd( 1.41798, 202.829, -26.999, 0.44 ) }
    dend_19 { pt3dadd( 1.3797, 203.855, -27.0707, 0.44 ) }
    dend_19 { pt3dadd( 1.34217, 205.446, -27.2246, 0.44 ) }
    dend_19 { pt3dadd( 1.31874, 206.908, -27.3964, 0.44 ) }
    dend_19 { pt3dadd( 1.30447, 207.896, -27.5247, 0.44 ) }
    dend_19 { pt3dadd( 1.26094, 209.236, -27.7086, 0.44 ) }
    dend_19 { pt3dadd( 1.19185, 210.97, -27.9512, 0.44 ) }
    dend_19 { pt3dadd( 1.13012, 212.639, -28.1835, 0.44 ) }
    dend_19 { pt3dadd( 1.08021, 213.687, -28.323, 0.44 ) }
    dend_19 { pt3dadd( 0.987579, 215.0, -28.4764, 0.44 ) }
    dend_19 { pt3dadd( 0.872353, 216.266, -28.5952, 0.44 ) }
    dend_19 { pt3dadd( 0.752922, 217.393, -28.6607, 0.44 ) }
    dend_19 { pt3dadd( 0.646513, 218.375, -28.7089, 0.44 ) }
    dend_19 { pt3dadd( 0.565986, 219.219, -28.7705, 0.44 ) }
    dend_19 { pt3dadd( 0.469087, 220.826, -29.007, 0.44 ) }
    dend_19 { pt3dadd( 0.460963, 222.017, -29.2593, 0.44 ) }
    dend_19 { pt3dadd( 0.513866, 223.137, -29.5154, 0.44 ) }
    dend_19 { pt3dadd( 0.69822, 224.735, -29.8913, 0.44 ) }
    dend_19 { pt3dadd( 0.84586, 225.547, -30.0758, 0.44 ) }
    dend_19 { pt3dadd( 1.31205, 227.454, -30.486, 0.44 ) }
    dend_19 { pt3dadd( 1.49803, 228.11, -30.6115, 0.44 ) }
    dend_19 { pt3dadd( 1.88178, 229.5, -30.8109, 0.44 ) }
    dend_19 { pt3dadd( 2.21599, 230.845, -30.9354, 0.44 ) }
    dend_19 { pt3dadd( 2.52736, 232.318, -30.9838, 0.44 ) }
    dend_19 { pt3dadd( 2.64671, 232.994, -30.9904, 0.44 ) }
    dend_19 { pt3dadd( 2.78981, 234.072, -30.9747, 0.44 ) }
    dend_19 { pt3dadd( 2.98553, 236.042, -30.9807, 0.44 ) }
    dend_19 { pt3dadd( 3.09367, 237.408, -31.0203, 0.44 ) }
    dend_19 { pt3dadd( 3.15049, 238.178, -31.0365, 0.44 ) }
    dend_19 { pt3dadd( 3.26799, 239.257, -31.0543, 0.44 ) }
    dend_19 { pt3dadd( 3.44315, 240.401, -31.0704, 0.44 ) }
    dend_19 { pt3dadd( 3.73732, 241.811, -31.0884, 0.44 ) }
    dend_19 { pt3dadd( 4.11201, 243.281, -31.1071, 0.44 ) }
    dend_19 { pt3dadd( 4.23252, 243.709, -31.1129, 0.44 ) }
    dend_19 { pt3dadd( 4.5923, 244.975, -31.137, 0.44 ) }
    dend_19 { pt3dadd( 4.85991, 245.951, -31.1492, 0.44 ) }
    dend_19 { pt3dadd( 5.1084, 246.909, -31.1593, 0.44 ) }
    dend_19 { pt3dadd( 5.43234, 248.392, -31.1783, 0.44 ) }
    dend_19 { pt3dadd( 5.66158, 249.659, -31.1852, 0.44 ) }
    dend_19 { pt3dadd( 5.88238, 251.162, -31.1884, 0.44 ) }
    dend_19 { pt3dadd( 5.99919, 252.206, -31.1874, 0.44 ) }
    dend_19 { pt3dadd( 6.0709, 252.975, -31.1867, 0.44 ) }
    dend_19 { pt3dadd( 6.22561, 254.654, -31.1913, 0.44 ) }
    dend_19 { pt3dadd( 6.29618, 255.401, -31.2156, 0.44 ) }
    dend_19 { pt3dadd( 6.42876, 256.689, -31.2972, 0.44 ) }
    dend_19 { pt3dadd( 6.49507, 257.298, -31.3509, 0.44 ) }
    dend_19 { pt3dadd( 6.60898, 258.271, -31.4755, 0.44 ) }
    dend_19 { pt3dadd( 6.7578, 259.488, -31.6543, 0.44 ) }
    dend_19 { pt3dadd( 6.94233, 261.111, -31.911, 0.44 ) }
    dend_19 { pt3dadd( 7.09479, 262.591, -32.1496, 0.44 ) }
    dend_19 { pt3dadd( 7.2158, 263.788, -32.3436, 0.44 ) }
    dend_19 { pt3dadd( 7.38806, 265.337, -32.5861, 0.44 ) }
    dend_19 { pt3dadd( 7.51595, 266.296, -32.7273, 0.44 ) }
    dend_19 { pt3dadd( 7.74577, 267.644, -32.9009, 0.44 ) }
    dend_19 { pt3dadd( 7.90529, 268.382, -32.9719, 0.44 ) }
    dend_19 { pt3dadd( 8.08759, 269.169, -33.0348, 0.44 ) }
    dend_19 { pt3dadd( 8.35045, 270.319, -33.1039, 0.44 ) }
    dend_19 { pt3dadd( 8.61017, 271.401, -33.1508, 0.44 ) }
    dend_19 { pt3dadd( 9.03219, 273.016, -33.2216, 0.44 ) }
    dend_19 { pt3dadd( 9.54708, 274.898, -33.3051, 0.44 ) }
    dend_19 { pt3dadd( 10.1144, 276.932, -33.4482, 0.44 ) }
    dend_19 { pt3dadd( 10.69, 278.962, -33.6132, 0.44 ) }
    dend_19 { pt3dadd( 11.1283, 280.486, -33.7257, 0.44 ) }
    dend_19 { pt3dadd( 11.6532, 282.299, -33.8479, 0.44 ) }
    dend_19 { pt3dadd( 12.1416, 283.918, -33.9479, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( 12.7153, 285.708, -33.9678, 0.44 ) }
    dend_19 { pt3dadd( 13.085, 286.859, -33.8977, 0.44 ) }
    dend_19 { pt3dadd( 13.4454, 287.971, -33.6985, 0.44 ) }
    dend_19 { pt3dadd( 13.7603, 289.018, -33.4094, 0.44 ) }
    dend_19 { pt3dadd( 14.2046, 290.649, -32.8306, 0.44 ) }
    dend_19 { pt3dadd( 14.7426, 292.785, -31.8803, 0.44 ) }
    dend_19 { pt3dadd( 15.2201, 294.782, -30.8687, 0.44 ) }
    dend_19 { pt3dadd( 15.6376, 296.624, -29.8995, 0.44 ) }
    dend_19 { pt3dadd( 15.8512, 297.587, -29.3729, 0.44 ) }
    dend_19 { pt3dadd( 16.0217, 298.377, -28.8878, 0.44 ) }
    dend_19 { pt3dadd( 16.2441, 299.506, -28.1049, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 11/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -41.6491, 63.7233, 5.09635, 0.44 ) }
    dend_12 { pt3dadd( -43.2021, 64.509, 6.24152, 0.44 ) }
    dend_12 { pt3dadd( -43.9771, 64.7639, 6.86408, 0.44 ) }
    dend_12 { pt3dadd( -44.3742, 64.854, 7.20271, 0.44 ) }
    dend_12 { pt3dadd( -44.9016, 64.9153, 7.62427, 0.44 ) }
    dend_12 { pt3dadd( -45.6016, 64.9251, 8.10568, 0.44 ) }
    dend_12 { pt3dadd( -48.4383, 64.6514, 9.78956, 0.44 ) }
    dend_12 { pt3dadd( -48.7927, 64.5147, 9.98431, 0.44 ) }
    dend_12 { pt3dadd( -49.17, 64.3267, 10.2044, 0.44 ) }
    dend_12 { pt3dadd( -49.9855, 63.8472, 10.7059, 0.44 ) }
    dend_12 { pt3dadd( -50.8194, 63.27, 11.2421, 0.44 ) }
    dend_12 { pt3dadd( -51.4848, 62.7194, 11.6116, 0.44 ) }
    dend_12 { pt3dadd( -52.4316, 61.7625, 11.5785, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -41.6491, 63.7233, 5.09635, 0.44 ) }
    dend_11 { pt3dadd( -42.2267, 64.0023, 4.89667, 0.44 ) }
    dend_11 { pt3dadd( -42.8601, 64.2841, 4.67659, 0.44 ) }
    dend_11 { pt3dadd( -43.6045, 64.5862, 4.50165, 0.44 ) }
    dend_11 { pt3dadd( -44.2832, 64.831, 4.38625, 0.44 ) }
    dend_11 { pt3dadd( -45.097, 65.1148, 4.27526, 0.44 ) }
    dend_11 { pt3dadd( -45.7208, 65.3425, 4.20157, 0.44 ) }
    dend_11 { pt3dadd( -46.243, 65.5505, 4.18362, 0.44 ) }
    dend_11 { pt3dadd( -47.2671, 66.0167, 4.23333, 0.44 ) }
    dend_11 { pt3dadd( -47.9049, 66.3511, 4.31462, 0.44 ) }
    dend_11 { pt3dadd( -48.3242, 66.5776, 4.389, 0.44 ) }
    dend_11 { pt3dadd( -48.8439, 66.8833, 4.49839, 0.44 ) }
    dend_11 { pt3dadd( -49.674, 67.4389, 4.68981, 0.44 ) }
    dend_11 { pt3dadd( -49.9238, 67.6234, 4.75783, 0.44 ) }
    dend_11 { pt3dadd( -50.383, 67.987, 4.87888, 0.44 ) }
    dend_11 { pt3dadd( -50.9739, 68.4692, 5.05459, 0.44 ) }
    dend_11 { pt3dadd( -51.3794, 68.7906, 5.16737, 0.44 ) }
    dend_11 { pt3dadd( -51.9742, 69.2446, 5.30192, 0.44 ) }
    dend_11 { pt3dadd( -52.7539, 69.8065, 5.41224, 0.44 ) }
    dend_11 { pt3dadd( -53.2295, 70.1452, 5.4676, 0.44 ) }
    dend_11 { pt3dadd( -53.7684, 70.5224, 5.51295, 0.44 ) }
    dend_11 { pt3dadd( -54.386, 70.9285, 5.56336, 0.44 ) }
    dend_11 { pt3dadd( -55.0001, 71.289, 5.59164, 0.44 ) }
    dend_11 { pt3dadd( -55.7367, 71.6897, 5.61876, 0.44 ) }
    dend_11 { pt3dadd( -55.9645, 71.8068, 5.62858, 0.44 ) }
    dend_11 { pt3dadd( -56.4661, 72.0619, 5.66838, 0.44 ) }
    dend_11 { pt3dadd( -57.6452, 72.6843, 5.7973, 0.44 ) }
    dend_11 { pt3dadd( -58.2402, 73.0288, 5.87598, 0.44 ) }
    dend_11 { pt3dadd( -58.9479, 73.4974, 5.99607, 0.44 ) }
    dend_11 { pt3dadd( -59.455, 73.8635, 6.08481, 0.44 ) }
    dend_11 { pt3dadd( -60.0283, 74.3062, 6.1728, 0.44 ) }
    dend_11 { pt3dadd( -60.4231, 74.6339, 6.21782, 0.44 ) }
    dend_11 { pt3dadd( -60.9755, 75.1099, 6.23661, 0.44 ) }
    dend_11 { pt3dadd( -61.738, 75.7526, 6.22759, 0.44 ) }
    dend_11 { pt3dadd( -62.3441, 76.2336, 6.1832, 0.44 ) }
    dend_11 { pt3dadd( -62.7826, 76.5555, 6.14211, 0.44 ) }
    dend_11 { pt3dadd( -63.279, 76.8866, 6.06903, 0.44 ) }
    dend_11 { pt3dadd( -64.0152, 77.3468, 5.92515, 0.44 ) }
    dend_11 { pt3dadd( -64.7762, 77.8203, 5.70121, 0.44 ) }
    dend_11 { pt3dadd( -65.4997, 78.2748, 5.42915, 0.44 ) }
    dend_11 { pt3dadd( -66.1734, 78.7088, 5.15143, 0.44 ) }
    dend_11 { pt3dadd( -66.9581, 79.222, 4.82992, 0.44 ) }
    dend_11 { pt3dadd( -67.7112, 79.7422, 4.52361, 0.44 ) }
    dend_11 { pt3dadd( -68.5864, 80.3986, 4.13368, 0.44 ) }
    dend_11 { pt3dadd( -69.1921, 80.8938, 3.83483, 0.44 ) }
    dend_11 { pt3dadd( -69.7438, 81.3812, 3.55137, 0.44 ) }
    dend_11 { pt3dadd( -70.4496, 82.0448, 3.19204, 0.44 ) }
    dend_11 { pt3dadd( -70.9484, 82.5082, 2.95772, 0.44 ) }
    dend_11 { pt3dadd( -71.6842, 83.1181, 2.64063, 0.44 ) }
    dend_11 { pt3dadd( -72.2381, 83.5441, 2.3585, 0.44 ) }
    dend_11 { pt3dadd( -73.0477, 84.1494, 1.86048, 0.44 ) }
    dend_11 { pt3dadd( -73.476, 84.4603, 1.56732, 0.44 ) }
    dend_11 { pt3dadd( -74.0188, 84.838, 1.17727, 0.44 ) }
    dend_11 { pt3dadd( -74.7106, 85.2957, 0.646593, 0.44 ) }
    dend_11 { pt3dadd( -76.2522, 86.2607, -0.525891, 0.44 ) }
    dend_11 { pt3dadd( -76.7646, 86.5864, -0.929256, 0.44 ) }
    dend_11 { pt3dadd( -77.1947, 86.8744, -1.28124, 0.44 ) }
    dend_11 { pt3dadd( -77.6938, 87.2337, -1.68468, 0.44 ) }
    dend_11 { pt3dadd( -78.743, 88.0378, -2.49165, 0.44 ) }
    dend_11 { pt3dadd( -79.367, 88.5063, -2.90619, 0.44 ) }
    dend_11 { pt3dadd( -79.7913, 88.7756, -3.11178, 0.44 ) }
    dend_11 { pt3dadd( -80.3326, 89.0678, -3.35106, 0.44 ) }
    dend_11 { pt3dadd( -80.8635, 89.3145, -3.55506, 0.44 ) }
    dend_11 { pt3dadd( -81.3129, 89.4916, -3.69176, 0.44 ) }
    dend_11 { pt3dadd( -81.9702, 89.7243, -3.82551, 0.44 ) }
    dend_11 { pt3dadd( -82.3767, 89.868, -3.90823, 0.44 ) }
    dend_11 { pt3dadd( -83.1224, 90.1471, -4.10991, 0.44 ) }
    dend_11 { pt3dadd( -83.5468, 90.3202, -4.26814, 0.44 ) }
    dend_11 { pt3dadd( -84.1049, 90.5717, -4.51783, 0.44 ) }
    dend_11 { pt3dadd( -84.7683, 90.9373, -4.91155, 0.44 ) }
    dend_11 { pt3dadd( -85.3603, 91.348, -5.34264, 0.44 ) }
    dend_11 { pt3dadd( -86.205, 92.0894, -6.06323, 0.44 ) }
    dend_11 { pt3dadd( -86.7318, 92.6669, -6.57548, 0.44 ) }
    dend_11 { pt3dadd( -87.0906, 93.1785, -6.99826, 0.44 ) }
    dend_11 { pt3dadd( -87.5847, 94.0707, -7.67313, 0.44 ) }
    dend_11 { pt3dadd( -87.8144, 94.5862, -8.05616, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_11 { pt3dadd( -88.0239, 95.1649, -8.45518, 0.44 ) }
    dend_11 { pt3dadd( -88.2266, 95.821, -8.85086, 0.44 ) }
    dend_11 { pt3dadd( -88.6378, 97.2641, -9.63871, 0.44 ) }
    dend_11 { pt3dadd( -88.7885, 97.8127, -9.91939, 0.44 ) }
    dend_11 { pt3dadd( -89.0579, 98.6882, -10.3239, 0.44 ) }
    dend_11 { pt3dadd( -89.2341, 99.1967, -10.5638, 0.44 ) }
    dend_11 { pt3dadd( -89.3794, 99.5661, -10.725, 0.44 ) }
    dend_11 { pt3dadd( -89.5287, 99.9467, -10.9009, 0.44 ) }
    dend_11 { pt3dadd( -89.7386, 100.435, -11.0896, 0.44 ) }
    dend_11 { pt3dadd( -89.8992, 100.802, -11.2236, 0.44 ) }
    dend_11 { pt3dadd( -90.1094, 101.261, -11.3605, 0.44 ) }
    dend_11 { pt3dadd( -90.5463, 102.202, -11.6865, 0.44 ) }
    dend_11 { pt3dadd( -91.0474, 103.382, -12.1465, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -71.2116, 83.5128, -12.9967, 0.44 ) }
    dend_9 { pt3dadd( -70.5987, 85.5928, -12.9829, 0.44 ) }
    dend_9 { pt3dadd( -70.2536, 86.7257, -13.1431, 0.44 ) }
    dend_9 { pt3dadd( -70.0065, 87.5562, -13.3038, 0.44 ) }
    dend_9 { pt3dadd( -69.7528, 88.5801, -13.579, 0.44 ) }
    dend_9 { pt3dadd( -69.315, 90.7508, -14.2189, 0.44 ) }
    dend_9 { pt3dadd( -69.0613, 92.2632, -14.662, 0.44 ) }
    dend_9 { pt3dadd( -68.6756, 95.2028, -15.5249, 0.44 ) }
    dend_9 { pt3dadd( -68.5563, 96.1195, -15.7947, 0.44 ) }
    dend_9 { pt3dadd( -68.2803, 98.2636, -16.4142, 0.44 ) }
    dend_9 { pt3dadd( -68.1179, 99.7018, -16.8153, 0.44 ) }
    dend_9 { pt3dadd( -67.9575, 101.394, -17.2442, 0.44 ) }
    dend_9 { pt3dadd( -67.8041, 102.947, -17.6313, 0.44 ) }
    dend_9 { pt3dadd( -67.6756, 104.14, -17.8586, 0.44 ) }
    dend_9 { pt3dadd( -67.6031, 104.714, -17.9743, 0.44 ) }
    dend_9 { pt3dadd( -67.5136, 105.355, -18.0944, 0.44 ) }
    dend_9 { pt3dadd( -67.4393, 106.022, -18.2257, 0.44 ) }
    dend_9 { pt3dadd( -67.3061, 108.799, -18.7631, 0.44 ) }
    dend_9 { pt3dadd( -67.331, 109.763, -18.933, 0.44 ) }
    dend_9 { pt3dadd( -67.4469, 111.509, -19.1967, 0.44 ) }
    dend_9 { pt3dadd( -67.5561, 113.074, -19.3869, 0.44 ) }
    dend_9 { pt3dadd( -67.6594, 115.603, -19.5983, 0.44 ) }
    dend_9 { pt3dadd( -67.6725, 117.114, -19.7013, 0.44 ) }
    dend_9 { pt3dadd( -67.6594, 118.61, -19.7497, 0.44 ) }
    dend_9 { pt3dadd( -67.5917, 119.666, -19.9017, 0.44 ) }
    dend_9 { pt3dadd( -67.4601, 120.525, -20.1156, 0.44 ) }
    dend_9 { pt3dadd( -67.0258, 121.93, -20.897, 0.44 ) }
    dend_9 { pt3dadd( -66.4626, 123.203, -22.1024, 0.44 ) }
    dend_9 { pt3dadd( -66.0033, 124.225, -23.3278, 0.44 ) }
    dend_9 { pt3dadd( -65.2035, 126.162, -25.8813, 0.44 ) }
    dend_9 { pt3dadd( -64.9732, 126.854, -26.8514, 0.44 ) }
    dend_9 { pt3dadd( -64.13, 129.859, -31.3007, 0.44 ) }
    dend_9 { pt3dadd( -63.5739, 132.242, -35.0478, 0.44 ) }
    dend_9 { pt3dadd( -63.1615, 134.203, -38.1371, 0.44 ) }
    dend_9 { pt3dadd( -63.0485, 134.786, -39.0404, 0.44 ) }
    dend_9 { pt3dadd( -62.7362, 136.947, -42.195, 0.44 ) }
    dend_9 { pt3dadd( -62.4591, 139.255, -45.4294, 0.44 ) }
    dend_9 { pt3dadd( -61.9793, 143.225, -50.4493, 0.44 ) }
    dend_9 { pt3dadd( -61.8222, 144.065, -51.4669, 0.44 ) }
    dend_9 { pt3dadd( -61.57, 144.943, -52.464, 0.44 ) }
    dend_9 { pt3dadd( -60.9595, 146.582, -54.2606, 0.44 ) }
    dend_9 { pt3dadd( -60.2108, 148.325, -55.9623, 0.44 ) }
    dend_9 { pt3dadd( -59.5986, 149.734, -57.0984, 0.44 ) }
    dend_9 { pt3dadd( -58.1613, 153.047, -59.3078, 0.44 ) }
    dend_9 { pt3dadd( -57.2654, 155.368, -60.7704, 0.44 ) }
    dend_9 { pt3dadd( -56.223, 158.442, -62.5257, 0.44 ) }
    dend_9 { pt3dadd( -55.7257, 160.219, -63.4099, 0.44 ) }
    dend_9 { pt3dadd( -55.1189, 163.106, -64.6522, 0.44 ) }
    dend_9 { pt3dadd( -54.8938, 164.768, -65.2864, 0.44 ) }
    dend_9 { pt3dadd( -54.6763, 168.433, -66.4255, 0.44 ) }
    dend_9 { pt3dadd( -54.6522, 169.851, -66.8268, 0.44 ) }
    dend_9 { pt3dadd( -54.697, 173.472, -67.7427, 0.44 ) }
    dend_9 { pt3dadd( -54.7286, 174.789, -68.1117, 0.44 ) }
    dend_9 { pt3dadd( -54.7709, 176.328, -68.5816, 0.44 ) }
    dend_9 { pt3dadd( -54.7922, 177.999, -69.0616, 0.44 ) }
    dend_9 { pt3dadd( -54.7885, 179.559, -69.3382, 0.44 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 69/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -71.2116, 83.5128, -12.9967, 0.52 ) }
    dend_4 { pt3dadd( -72.1344, 83.9951, -13.3277, 0.52 ) }
    dend_4 { pt3dadd( -73.7985, 84.775, -13.9942, 0.52 ) }
    dend_4 { pt3dadd( -74.3519, 84.9759, -14.2151, 0.52 ) }
    dend_4 { pt3dadd( -75.562, 85.307, -14.6711, 0.52 ) }
    dend_4 { pt3dadd( -76.4918, 85.5463, -15.0607, 0.52 ) }
    dend_4 { pt3dadd( -77.2711, 85.7585, -15.3945, 0.52 ) }
    dend_4 { pt3dadd( -78.4387, 86.1111, -15.9688, 0.52 ) }
    dend_4 { pt3dadd( -79.5878, 86.5473, -16.5662, 0.52 ) }
    dend_4 { pt3dadd( -80.6637, 87.0475, -17.1907, 0.52 ) }
    dend_4 { pt3dadd( -81.9318, 87.7506, -18.0003, 0.52 ) }
    dend_4 { pt3dadd( -82.8514, 88.3245, -18.5929, 0.52 ) }
    dend_4 { pt3dadd( -84.1047, 89.2405, -19.3603, 0.52 ) }
    dend_4 { pt3dadd( -84.966, 89.9708, -19.8427, 0.52 ) }
    dend_4 { pt3dadd( -85.7509, 90.6952, -20.2261, 0.52 ) }
    dend_4 { pt3dadd( -86.7068, 91.5545, -20.5639, 0.52 ) }
    dend_4 { pt3dadd( -87.587, 92.241, -20.7255, 0.52 ) }
    dend_4 { pt3dadd( -88.7077, 93.0132, -20.8204, 0.52 ) }
    dend_4 { pt3dadd( -89.4237, 93.4599, -20.8099, 0.52 ) }
    dend_4 { pt3dadd( -90.4427, 94.1062, -20.7422, 0.52 ) }
    dend_4 { pt3dadd( -91.4392, 94.7829, -20.6048, 0.52 ) }
    dend_4 { pt3dadd( -92.5471, 95.6148, -20.3948, 0.52 ) }
    dend_4 { pt3dadd( -93.0022, 96.0119, -20.3007, 0.52 ) }
    dend_4 { pt3dadd( -93.7027, 96.7389, -20.1779, 0.52 ) }
    dend_4 { pt3dadd( -94.4604, 97.6817, -20.0938, 0.52 ) }
    dend_4 { pt3dadd( -95.0701, 98.586, -20.0934, 0.52 ) }
    dend_4 { pt3dadd( -95.5755, 99.4808, -20.127, 0.52 ) }
    dend_4 { pt3dadd( -96.0752, 100.483, -20.1779, 0.52 ) }
    dend_4 { pt3dadd( -96.6308, 101.677, -20.2578, 0.52 ) }
    dend_4 { pt3dadd( -97.1845, 103.012, -20.3629, 0.52 ) }
    dend_4 { pt3dadd( -97.6413, 104.191, -20.5141, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( -97.8847, 104.869, -20.6504, 0.52 ) }
    dend_4 { pt3dadd( -98.2026, 105.725, -20.8504, 0.52 ) }
    dend_4 { pt3dadd( -98.6388, 106.804, -21.1645, 0.52 ) }
    dend_4 { pt3dadd( -98.952, 107.507, -21.3907, 0.52 ) }
    dend_4 { pt3dadd( -99.6058, 108.855, -21.8729, 0.52 ) }
    dend_4 { pt3dadd( -100.433, 110.4, -22.4483, 0.52 ) }
    dend_4 { pt3dadd( -101.556, 112.251, -23.2096, 0.52 ) }
    dend_4 { pt3dadd( -102.496, 113.697, -23.8091, 0.52 ) }
    dend_4 { pt3dadd( -103.07, 114.534, -24.1381, 0.52 ) }
    dend_4 { pt3dadd( -103.606, 115.26, -24.397, 0.52 ) }
    dend_4 { pt3dadd( -104.438, 116.305, -24.7016, 0.52 ) }
    dend_4 { pt3dadd( -105.362, 117.38, -24.9623, 0.52 ) }
    dend_4 { pt3dadd( -106.666, 118.808, -25.2712, 0.52 ) }
    dend_4 { pt3dadd( -107.708, 119.873, -25.459, 0.52 ) }
    dend_4 { pt3dadd( -108.779, 120.892, -25.6293, 0.52 ) }
    dend_4 { pt3dadd( -110.375, 122.346, -25.8449, 0.52 ) }
    dend_4 { pt3dadd( -111.267, 123.119, -25.9409, 0.52 ) }
    dend_4 { pt3dadd( -112.147, 123.821, -26.0118, 0.52 ) }
    dend_4 { pt3dadd( -113.124, 124.512, -26.0957, 0.52 ) }
    dend_4 { pt3dadd( -114.403, 125.381, -26.1575, 0.52 ) }
    dend_4 { pt3dadd( -115.876, 126.401, -26.1791, 0.52 ) }
    dend_4 { pt3dadd( -116.508, 126.845, -26.1718, 0.52 ) }
    dend_4 { pt3dadd( -117.81, 127.79, -26.1334, 0.52 ) }
    dend_4 { pt3dadd( -119.197, 128.823, -26.0742, 0.52 ) }
    dend_4 { pt3dadd( -120.725, 129.983, -25.9941, 0.52 ) }
    dend_4 { pt3dadd( -122.217, 131.105, -25.9094, 0.52 ) }
    dend_4 { pt3dadd( -123.161, 131.802, -25.8617, 0.52 ) }
    dend_4 { pt3dadd( -123.901, 132.338, -25.8392, 0.52 ) }
    dend_4 { pt3dadd( -124.724, 132.924, -25.8128, 0.52 ) }
    dend_4 { pt3dadd( -125.445, 133.414, -25.8364, 0.52 ) }
    dend_4 { pt3dadd( -126.126, 133.847, -25.8933, 0.52 ) }
    dend_4 { pt3dadd( -127.322, 134.558, -25.9952, 0.52 ) }
    dend_4 { pt3dadd( -128.841, 135.415, -26.1273, 0.52 ) }
    dend_4 { pt3dadd( -130.152, 136.12, -26.2438, 0.52 ) }
    dend_4 { pt3dadd( -131.588, 136.917, -26.3717, 0.52 ) }
    // Section: dend_88, id: dend_88, parent: dend_80 (entry count 35/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 49.038, -54.2773, -2.66664, 0.37 ) }
    dend_88 { pt3dadd( 48.3439, -52.4334, -3.50017, 0.37 ) }
    dend_88 { pt3dadd( 48.0308, -51.6019, -3.87605, 0.37 ) }
    dend_88 { pt3dadd( 47.6222, -50.5164, -4.36675, 0.37 ) }
    dend_88 { pt3dadd( 47.0885, -49.0988, -5.00756, 0.37 ) }
    dend_88 { pt3dadd( 46.7974, -48.3255, -5.35717, 0.37 ) }
    dend_88 { pt3dadd( 46.2055, -46.7532, -6.06792, 0.37 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 42/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 49.038, -54.2773, -2.66664, 0.44 ) }
    dend_81 { pt3dadd( 49.8733, -54.5993, -2.83215, 0.44 ) }
    dend_81 { pt3dadd( 50.5592, -54.8896, -2.971, 0.44 ) }
    dend_81 { pt3dadd( 51.308, -55.2641, -3.12587, 0.44 ) }
    dend_81 { pt3dadd( 52.1525, -55.7258, -3.25237, 0.44 ) }
    dend_81 { pt3dadd( 53.4132, -56.4599, -3.37417, 0.44 ) }
    dend_81 { pt3dadd( 54.2933, -56.9742, -3.43269, 0.44 ) }
    dend_81 { pt3dadd( 54.7994, -57.2796, -3.44906, 0.44 ) }
    dend_81 { pt3dadd( 55.6078, -57.7622, -3.43154, 0.44 ) }
    dend_81 { pt3dadd( 56.5658, -58.3504, -3.36644, 0.44 ) }
    dend_81 { pt3dadd( 57.3667, -58.8696, -3.21292, 0.44 ) }
    dend_81 { pt3dadd( 58.0061, -59.3415, -3.02, 0.44 ) }
    dend_81 { pt3dadd( 58.8356, -60.0287, -2.73487, 0.44 ) }
    dend_81 { pt3dadd( 59.425, -60.5485, -2.55048, 0.44 ) }
    dend_81 { pt3dadd( 60.0633, -61.1302, -2.42301, 0.44 ) }
    dend_81 { pt3dadd( 61.2074, -62.1836, -2.20218, 0.44 ) }
    dend_81 { pt3dadd( 62.1032, -62.995, -2.02173, 0.44 ) }
    dend_81 { pt3dadd( 63.0076, -63.7911, -1.84702, 0.44 ) }
    dend_81 { pt3dadd( 64.047, -64.6671, -1.67898, 0.44 ) }
    dend_81 { pt3dadd( 65.0561, -65.4719, -1.57132, 0.44 ) }
    dend_81 { pt3dadd( 66.9234, -66.9395, -1.42222, 0.44 ) }
    dend_81 { pt3dadd( 67.4152, -67.3264, -1.39867, 0.44 ) }
    dend_81 { pt3dadd( 68.1072, -67.8582, -1.3357, 0.44 ) }
    dend_81 { pt3dadd( 68.6909, -68.2991, -1.26399, 0.44 ) }
    dend_81 { pt3dadd( 69.5506, -68.935, -1.12721, 0.44 ) }
    dend_81 { pt3dadd( 70.3999, -69.5128, -1.01077, 0.44 ) }
    dend_81 { pt3dadd( 71.1579, -69.9678, -1.00949, 0.44 ) }
    dend_81 { pt3dadd( 71.7671, -70.2753, -1.01016, 0.44 ) }
    dend_81 { pt3dadd( 72.3761, -70.5173, -1.01819, 0.44 ) }
    dend_81 { pt3dadd( 73.3542, -70.877, -1.05546, 0.44 ) }
    dend_81 { pt3dadd( 74.473, -71.2832, -1.12847, 0.44 ) }
    dend_81 { pt3dadd( 75.2216, -71.603, -1.2044, 0.44 ) }
    dend_81 { pt3dadd( 75.759, -71.9288, -1.28047, 0.44 ) }
    dend_81 { pt3dadd( 76.17, -72.2503, -1.34872, 0.44 ) }
    dend_81 { pt3dadd( 77.1865, -73.1916, -1.5526, 0.44 ) }
    dend_81 { pt3dadd( 77.5751, -73.6097, -1.6465, 0.44 ) }
    dend_81 { pt3dadd( 78.0865, -74.2396, -1.77221, 0.44 ) }
    dend_81 { pt3dadd( 78.6856, -75.0287, -1.92091, 0.44 ) }
    dend_81 { pt3dadd( 79.2158, -75.756, -2.05118, 0.37 ) }
    dend_81 { pt3dadd( 80.0328, -76.9771, -2.25553, 0.37 ) }
    dend_81 { pt3dadd( 80.5316, -77.7469, -2.38137, 0.37 ) }
    dend_81 { pt3dadd( 81.0195, -78.5073, -2.5211, 0.37 ) }
    dend_81 { pt3dadd( 81.8497, -79.7827, -2.77898, 0.37 ) }
    dend_81 { pt3dadd( 82.7411, -81.1232, -3.08274, 0.37 ) }
    dend_81 { pt3dadd( 83.816, -82.8265, -3.46721, 0.37 ) }
    dend_81 { pt3dadd( 84.2406, -83.5132, -3.62758, 0.37 ) }
    dend_81 { pt3dadd( 84.8177, -84.4029, -3.85353, 0.37 ) }
    dend_81 { pt3dadd( 85.4326, -85.2795, -4.10565, 0.37 ) }
    dend_81 { pt3dadd( 86.0286, -86.0458, -4.37419, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 91/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -26.3258, -146.171, -3.99186, 0.52 ) }
    dend_70 { pt3dadd( -26.8545, -147.136, -4.26001, 0.52 ) }
    dend_70 { pt3dadd( -27.2789, -147.978, -4.46646, 0.52 ) }
    dend_70 { pt3dadd( -27.5426, -148.511, -4.59131, 0.52 ) }
    dend_70 { pt3dadd( -27.7064, -148.827, -4.66657, 0.52 ) }
    dend_70 { pt3dadd( -27.9627, -149.315, -4.78209, 0.52 ) }
    dend_70 { pt3dadd( -28.3422, -150.063, -4.91824, 0.52 ) }
    dend_70 { pt3dadd( -28.7739, -150.945, -5.02637, 0.52 ) }
    dend_70 { pt3dadd( -28.9323, -151.271, -5.05883, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_70 { pt3dadd( -29.1985, -151.81, -5.10627, 0.52 ) }
    dend_70 { pt3dadd( -29.4631, -152.36, -5.14928, 0.52 ) }
    dend_70 { pt3dadd( -30.0421, -153.644, -5.23433, 0.52 ) }
    dend_70 { pt3dadd( -30.3499, -154.444, -5.27143, 0.52 ) }
    dend_70 { pt3dadd( -30.6513, -155.349, -5.30668, 0.52 ) }
    dend_70 { pt3dadd( -30.865, -156.105, -5.36165, 0.52 ) }
    dend_70 { pt3dadd( -31.1016, -157.069, -5.46569, 0.52 ) }
    dend_70 { pt3dadd( -31.2772, -157.83, -5.58411, 0.52 ) }
    dend_70 { pt3dadd( -31.4615, -158.63, -5.76093, 0.52 ) }
    dend_70 { pt3dadd( -31.6688, -159.501, -5.97186, 0.52 ) }
    dend_70 { pt3dadd( -31.9152, -160.378, -6.16974, 0.52 ) }
    dend_70 { pt3dadd( -32.1321, -160.941, -6.28054, 0.52 ) }
    dend_70 { pt3dadd( -32.3555, -161.393, -6.35647, 0.52 ) }
    dend_70 { pt3dadd( -32.7793, -162.138, -6.46245, 0.52 ) }
    dend_70 { pt3dadd( -33.2918, -162.975, -6.57612, 0.52 ) }
    dend_70 { pt3dadd( -33.8853, -163.986, -6.73609, 0.52 ) }
    dend_70 { pt3dadd( -34.4138, -164.975, -6.89513, 0.52 ) }
    dend_70 { pt3dadd( -34.9178, -166.1, -7.10047, 0.52 ) }
    dend_70 { pt3dadd( -35.3475, -167.238, -7.33054, 0.52 ) }
    dend_70 { pt3dadd( -35.4935, -167.713, -7.43506, 0.52 ) }
    dend_70 { pt3dadd( -35.8157, -168.982, -7.74582, 0.52 ) }
    dend_70 { pt3dadd( -36.007, -169.951, -7.97981, 0.52 ) }
    dend_70 { pt3dadd( -36.2372, -171.262, -8.26775, 0.52 ) }
    dend_70 { pt3dadd( -36.3823, -171.984, -8.40332, 0.52 ) }
    dend_70 { pt3dadd( -36.593, -172.887, -8.58108, 0.52 ) }
    dend_70 { pt3dadd( -36.7396, -173.411, -8.70886, 0.52 ) }
    dend_70 { pt3dadd( -37.2093, -174.839, -9.12369, 0.52 ) }
    dend_70 { pt3dadd( -37.4568, -175.554, -9.38983, 0.52 ) }
    dend_70 { pt3dadd( -37.7244, -176.369, -9.74211, 0.52 ) }
    dend_70 { pt3dadd( -37.9861, -177.391, -10.2456, 0.52 ) }
    dend_70 { pt3dadd( -38.2226, -178.584, -10.8933, 0.52 ) }
    dend_70 { pt3dadd( -38.342, -179.444, -11.3703, 0.52 ) }
    dend_70 { pt3dadd( -38.4086, -180.19, -11.7773, 0.52 ) }
    dend_70 { pt3dadd( -38.4349, -180.656, -11.9921, 0.52 ) }
    dend_70 { pt3dadd( -38.5069, -181.75, -12.3905, 0.52 ) }
    dend_70 { pt3dadd( -38.5456, -182.243, -12.5269, 0.52 ) }
    dend_70 { pt3dadd( -38.6428, -183.17, -12.7367, 0.52 ) }
    dend_70 { pt3dadd( -38.8005, -184.262, -13.008, 0.52 ) }
    dend_70 { pt3dadd( -38.9331, -184.909, -13.1744, 0.52 ) }
    dend_70 { pt3dadd( -39.0982, -185.491, -13.312, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 40/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -26.3258, -146.171, -3.99186, 0.52 ) }
    dend_69 { pt3dadd( -25.6977, -147.431, -3.94103, 0.52 ) }
    dend_69 { pt3dadd( -25.1584, -148.513, -3.89738, 0.52 ) }
    dend_69 { pt3dadd( -24.6521, -149.528, -3.85642, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 44/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 13.7062, -151.58, 6.47209, 0.44 ) }
    dend_66 { pt3dadd( 14.1861, -152.967, 6.33414, 0.44 ) }
    dend_66 { pt3dadd( 14.3621, -153.624, 6.32305, 0.44 ) }
    dend_66 { pt3dadd( 14.5094, -154.282, 6.34168, 0.44 ) }
    dend_66 { pt3dadd( 14.6517, -154.994, 6.3796, 0.44 ) }
    dend_66 { pt3dadd( 14.8159, -156.035, 6.44706, 0.44 ) }
    dend_66 { pt3dadd( 14.8978, -156.765, 6.49749, 0.44 ) }
    dend_66 { pt3dadd( 14.9392, -157.787, 6.59438, 0.44 ) }
    dend_66 { pt3dadd( 14.942, -158.151, 6.63609, 0.44 ) }
    dend_66 { pt3dadd( 14.9208, -158.921, 6.71702, 0.44 ) }
    dend_66 { pt3dadd( 14.9018, -159.829, 6.79161, 0.44 ) }
    dend_66 { pt3dadd( 14.9167, -160.551, 6.84832, 0.44 ) }
    dend_66 { pt3dadd( 14.9525, -161.353, 6.9003, 0.44 ) }
    dend_66 { pt3dadd( 14.9844, -162.142, 6.93608, 0.44 ) }
    dend_66 { pt3dadd( 15.0075, -162.822, 6.96738, 0.44 ) }
    dend_66 { pt3dadd( 15.0552, -164.637, 7.05523, 0.44 ) }
    dend_66 { pt3dadd( 15.0822, -165.761, 7.08549, 0.44 ) }
    dend_66 { pt3dadd( 15.0867, -167.185, 7.08549, 0.44 ) }
    dend_66 { pt3dadd( 15.0479, -168.589, 7.05178, 0.44 ) }
    dend_66 { pt3dadd( 15.0098, -169.328, 7.01794, 0.44 ) }
    dend_66 { pt3dadd( 14.9639, -169.953, 6.97574, 0.44 ) }
    dend_66 { pt3dadd( 14.8441, -170.932, 6.88411, 0.44 ) }
    dend_66 { pt3dadd( 14.642, -172.186, 6.73738, 0.44 ) }
    dend_66 { pt3dadd( 14.4683, -173.16, 6.61814, 0.44 ) }
    dend_66 { pt3dadd( 14.3094, -173.91, 6.52921, 0.44 ) }
    dend_66 { pt3dadd( 14.1016, -174.711, 6.44654, 0.44 ) }
    dend_66 { pt3dadd( 13.8851, -175.409, 6.39475, 0.44 ) }
    dend_66 { pt3dadd( 13.6945, -175.886, 6.38464, 0.44 ) }
    dend_66 { pt3dadd( 13.5313, -176.193, 6.36371, 0.44 ) }
    dend_66 { pt3dadd( 13.248, -176.624, 6.32336, 0.44 ) }
    dend_66 { pt3dadd( 13.0589, -176.865, 6.29229, 0.44 ) }
    dend_66 { pt3dadd( 12.7652, -177.187, 6.23394, 0.44 ) }
    dend_66 { pt3dadd( 12.4271, -177.553, 6.14272, 0.44 ) }
    dend_66 { pt3dadd( 11.8138, -178.254, 5.91864, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 78/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 13.7062, -151.58, 6.47209, 0.44 ) }
    dend_65 { pt3dadd( 13.0367, -151.297, 7.39807, 0.44 ) }
    dend_65 { pt3dadd( 12.6205, -151.121, 7.97385, 0.44 ) }
    dend_65 { pt3dadd( 11.8674, -150.803, 9.01555, 0.44 ) }
    dend_65 { pt3dadd( 10.8683, -150.38, 10.3976, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_33 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -32.3625, -298.191, -13.8885, 0.44 ) }
    dend_45 { pt3dadd( -32.8759, -296.593, -13.4575, 0.44 ) }
    dend_45 { pt3dadd( -33.0692, -295.841, -13.227, 0.44 ) }
    dend_45 { pt3dadd( -33.2959, -294.881, -12.9392, 0.44 ) }
    dend_45 { pt3dadd( -33.4038, -294.272, -12.7279, 0.44 ) }
    dend_45 { pt3dadd( -33.4942, -293.604, -12.4901, 0.44 ) }
    dend_45 { pt3dadd( -33.6735, -291.502, -11.6378, 0.44 ) }
    dend_45 { pt3dadd( -33.7136, -289.96, -10.9524, 0.44 ) }
    dend_45 { pt3dadd( -33.7283, -288.637, -10.3488, 0.44 ) }
    dend_45 { pt3dadd( -33.7764, -286.181, -9.21683, 0.44 ) }
    dend_45 { pt3dadd( -33.8115, -284.991, -8.67948, 0.44 ) }
    dend_45 { pt3dadd( -33.8902, -282.619, -7.68478, 0.44 ) }
    dend_45 { pt3dadd( -33.9278, -281.654, -7.32739, 0.44 ) }
    dend_45 { pt3dadd( -33.9599, -280.722, -7.02182, 0.44 ) }
    dend_45 { pt3dadd( -33.9904, -279.421, -6.65962, 0.44 ) }
    dend_45 { pt3dadd( -34.0213, -278.567, -6.48713, 0.44 ) }
    dend_45 { pt3dadd( -34.0725, -277.19, -6.22605, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_45 { pt3dadd( -34.1021, -276.174, -6.06124, 0.44 ) }
    dend_45 { pt3dadd( -34.0994, -274.522, -5.77978, 0.44 ) }
    dend_45 { pt3dadd( -34.0647, -272.221, -5.39576, 0.44 ) }
    dend_45 { pt3dadd( -34.0517, -270.52, -5.11507, 0.44 ) }
    dend_45 { pt3dadd( -34.04, -269.307, -4.90663, 0.44 ) }
    dend_45 { pt3dadd( -34.0422, -268.294, -4.72083, 0.44 ) }
    dend_45 { pt3dadd( -34.0669, -266.82, -4.44503, 0.44 ) }
    dend_45 { pt3dadd( -34.181, -264.314, -3.99728, 0.44 ) }
    dend_45 { pt3dadd( -34.3052, -262.884, -3.82676, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 9/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -32.3625, -298.191, -13.8885, 0.52 ) }
    dend_34 { pt3dadd( -32.9845, -299.681, -13.6106, 0.52 ) }
    dend_34 { pt3dadd( -33.5279, -300.983, -13.3679, 0.52 ) }
    dend_34 { pt3dadd( -33.7086, -301.416, -13.2871, 0.52 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 13/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.11606, 240.307, -93.2703, 0.52 ) }
    dend_26 { pt3dadd( 4.44708, 242.124, -91.5781, 0.52 ) }
    dend_26 { pt3dadd( 5.39818, 243.264, -90.2751, 0.52 ) }
    dend_26 { pt3dadd( 6.01797, 243.919, -89.387, 0.52 ) }
    dend_26 { pt3dadd( 6.50357, 244.32, -88.7133, 0.52 ) }
    dend_26 { pt3dadd( 8.74107, 245.554, -85.7087, 0.52 ) }
    dend_26 { pt3dadd( 8.9381, 245.561, -85.4275, 0.52 ) }
    dend_26 { pt3dadd( 9.33779, 245.171, -84.7173, 0.52 ) }
    dend_26 { pt3dadd( 9.53151, 244.914, -84.3257, 0.52 ) }
    dend_26 { pt3dadd( 9.92102, 244.269, -83.5023, 0.52 ) }
    dend_26 { pt3dadd( 10.2101, 243.714, -82.9387, 0.52 ) }
    dend_26 { pt3dadd( 10.8279, 242.484, -81.9447, 0.52 ) }
    dend_26 { pt3dadd( 11.3816, 241.425, -81.2451, 0.52 ) }
    dend_26 { pt3dadd( 12.1405, 240.077, -80.5718, 0.52 ) }
    dend_26 { pt3dadd( 12.9484, 238.741, -80.149, 0.52 ) }
    dend_26 { pt3dadd( 14.1557, 236.987, -79.8842, 0.52 ) }
    dend_26 { pt3dadd( 15.0873, 235.81, -80.0976, 0.52 ) }
    dend_26 { pt3dadd( 18.1794, 232.375, -81.8656, 0.52 ) }
    dend_26 { pt3dadd( 18.8811, 231.692, -82.4253, 0.52 ) }
    dend_26 { pt3dadd( 19.4706, 231.17, -83.0026, 0.52 ) }
    dend_26 { pt3dadd( 20.4637, 230.386, -84.1726, 0.52 ) }
    dend_26 { pt3dadd( 21.8995, 229.453, -86.1379, 0.52 ) }
    dend_26 { pt3dadd( 22.0599, 229.368, -86.3588, 0.52 ) }
    dend_26 { pt3dadd( 22.4069, 229.263, -86.5415, 0.52 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 37/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.11606, 240.307, -93.2703, 0.52 ) }
    dend_25 { pt3dadd( 2.90769, 242.764, -95.1631, 0.52 ) }
    dend_25 { pt3dadd( 2.82651, 244.553, -96.5557, 0.52 ) }
    dend_25 { pt3dadd( 2.83868, 245.547, -97.338, 0.52 ) }
    dend_25 { pt3dadd( 2.97319, 246.907, -98.4807, 0.52 ) }
    dend_25 { pt3dadd( 3.31849, 248.778, -100.16, 0.52 ) }
    dend_25 { pt3dadd( 3.64949, 250.029, -101.374, 0.52 ) }
    dend_25 { pt3dadd( 4.58567, 252.15, -103.538, 0.52 ) }
    dend_25 { pt3dadd( 5.2529, 253.118, -104.733, 0.52 ) }
    dend_25 { pt3dadd( 6.31932, 254.113, -106.416, 0.52 ) }
    dend_25 { pt3dadd( 7.17047, 254.582, -107.661, 0.52 ) }
    dend_25 { pt3dadd( 8.16862, 254.931, -109.016, 0.52 ) }
    dend_25 { pt3dadd( 8.97757, 255.09, -110.075, 0.52 ) }
    dend_25 { pt3dadd( 10.6674, 255.182, -112.131, 0.52 ) }
    dend_25 { pt3dadd( 11.9535, 255.134, -113.762, 0.52 ) }
    dend_25 { pt3dadd( 12.9943, 255.026, -115.176, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 53/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 16.2441, 299.506, -28.1049, 0.44 ) }
    dend_21 { pt3dadd( 16.2782, 300.829, -27.6261, 0.44 ) }
    dend_21 { pt3dadd( 16.3166, 302.353, -27.1158, 0.44 ) }
    dend_21 { pt3dadd( 16.3111, 303.544, -26.7159, 0.44 ) }
    dend_21 { pt3dadd( 16.292, 304.537, -26.3488, 0.44 ) }
    dend_21 { pt3dadd( 16.2723, 305.557, -25.9715, 0.44 ) }
    dend_21 { pt3dadd( 16.2564, 306.378, -25.6679, 0.44 ) }
    dend_21 { pt3dadd( 16.2119, 307.408, -25.2721, 0.44 ) }
    dend_21 { pt3dadd( 16.0717, 308.966, -24.7392, 0.44 ) }
    dend_21 { pt3dadd( 15.9739, 310.051, -24.3696, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.2441, 299.506, -28.1049, 0.44 ) }
    dend_20 { pt3dadd( 14.9284, 300.517, -28.4141, 0.44 ) }
    dend_20 { pt3dadd( 13.9577, 301.262, -28.6422, 0.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -131.588, 136.917, -26.3717, 0.52 ) }
    dend_6 { pt3dadd( -132.24, 138.284, -27.0295, 0.52 ) }
    dend_6 { pt3dadd( -132.673, 139.16, -27.4047, 0.52 ) }
    dend_6 { pt3dadd( -133.494, 140.67, -28.006, 0.52 ) }
    dend_6 { pt3dadd( -134.405, 142.241, -28.5875, 0.52 ) }
    dend_6 { pt3dadd( -134.828, 142.946, -28.8227, 0.52 ) }
    dend_6 { pt3dadd( -135.335, 143.763, -29.076, 0.52 ) }
    dend_6 { pt3dadd( -135.845, 144.498, -29.3417, 0.52 ) }
    dend_6 { pt3dadd( -136.397, 145.245, -29.6158, 0.52 ) }
    dend_6 { pt3dadd( -136.824, 145.798, -29.7849, 0.52 ) }
    dend_6 { pt3dadd( -137.412, 146.574, -29.9967, 0.52 ) }
    dend_6 { pt3dadd( -137.684, 146.971, -30.1199, 0.52 ) }
    dend_6 { pt3dadd( -138.789, 148.714, -30.668, 0.52 ) }
    dend_6 { pt3dadd( -139.209, 149.415, -30.8789, 0.52 ) }
    dend_6 { pt3dadd( -139.93, 150.657, -31.2244, 0.52 ) }
    dend_6 { pt3dadd( -140.766, 152.116, -31.5862, 0.52 ) }
    dend_6 { pt3dadd( -141.883, 154.016, -32.0041, 0.52 ) }
    dend_6 { pt3dadd( -142.506, 155.035, -32.1858, 0.52 ) }
    dend_6 { pt3dadd( -143.081, 155.928, -32.2927, 0.52 ) }
    dend_6 { pt3dadd( -143.699, 156.823, -32.4007, 0.52 ) }
    dend_6 { pt3dadd( -144.399, 157.731, -32.5099, 0.52 ) }
    dend_6 { pt3dadd( -144.959, 158.385, -32.5735, 0.52 ) }
    dend_6 { pt3dadd( -145.774, 159.257, -32.6568, 0.52 ) }
    dend_6 { pt3dadd( -146.328, 159.857, -32.7818, 0.52 ) }
    dend_6 { pt3dadd( -146.978, 160.573, -32.994, 0.52 ) }
    dend_6 { pt3dadd( -147.703, 161.38, -33.283, 0.52 ) }
    dend_6 { pt3dadd( -148.624, 162.413, -33.6941, 0.52 ) }
    dend_6 { pt3dadd( -149.537, 163.482, -34.1206, 0.52 ) }
    dend_6 { pt3dadd( -150.575, 164.748, -34.6132, 0.52 ) }
    dend_6 { pt3dadd( -151.311, 165.654, -34.9386, 0.52 ) }
    dend_6 { pt3dadd( -151.91, 166.41, -35.1743, 0.52 ) }
    dend_6 { pt3dadd( -152.499, 167.171, -35.3951, 0.52 ) }
    dend_6 { pt3dadd( -153.161, 168.032, -35.6067, 0.52 ) }
    dend_6 { pt3dadd( -153.697, 168.776, -35.7286, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -154.648, 170.147, -35.8856, 0.52 ) }
    dend_6 { pt3dadd( -155.186, 170.988, -36.0094, 0.52 ) }
    dend_6 { pt3dadd( -156.391, 172.96, -36.3464, 0.52 ) }
    dend_6 { pt3dadd( -157.13, 174.177, -36.5795, 0.52 ) }
    dend_6 { pt3dadd( -157.963, 175.517, -36.8965, 0.52 ) }
    dend_6 { pt3dadd( -158.409, 176.2, -37.0822, 0.52 ) }
    dend_6 { pt3dadd( -159.305, 177.55, -37.5341, 0.52 ) }
    dend_6 { pt3dadd( -159.828, 178.277, -37.8152, 0.52 ) }
    dend_6 { pt3dadd( -160.552, 179.188, -38.2027, 0.52 ) }
    dend_6 { pt3dadd( -161.487, 180.279, -38.7587, 0.52 ) }
    dend_6 { pt3dadd( -162.277, 181.137, -39.2438, 0.52 ) }
    dend_6 { pt3dadd( -163.282, 182.217, -39.9018, 0.52 ) }
    dend_6 { pt3dadd( -164.049, 183.02, -40.4621, 0.52 ) }
    dend_6 { pt3dadd( -164.745, 183.743, -41.038, 0.52 ) }
    dend_6 { pt3dadd( -165.483, 184.469, -41.6827, 0.52 ) }
    dend_6 { pt3dadd( -165.902, 184.84, -42.0643, 0.52 ) }
    dend_6 { pt3dadd( -166.972, 185.671, -43.0624, 0.52 ) }
    dend_6 { pt3dadd( -168.15, 186.449, -44.1845, 0.52 ) }
    dend_6 { pt3dadd( -168.678, 186.744, -44.7036, 0.52 ) }
    dend_6 { pt3dadd( -169.42, 187.112, -45.5011, 0.52 ) }
    dend_6 { pt3dadd( -170.44, 187.634, -46.6294, 0.52 ) }
    dend_6 { pt3dadd( -170.871, 187.874, -47.082, 0.52 ) }
    dend_6 { pt3dadd( -172.054, 188.553, -48.2224, 0.52 ) }
    dend_6 { pt3dadd( -172.746, 188.972, -48.8481, 0.52 ) }
    dend_6 { pt3dadd( -174.745, 190.228, -50.5504, 0.52 ) }
    dend_6 { pt3dadd( -176.995, 191.638, -52.2683, 0.52 ) }
    dend_6 { pt3dadd( -178.943, 192.79, -53.4787, 0.52 ) }
    dend_6 { pt3dadd( -180.296, 193.592, -54.273, 0.52 ) }
    dend_6 { pt3dadd( -181.828, 194.491, -55.0691, 0.52 ) }
    dend_6 { pt3dadd( -183.302, 195.336, -55.7422, 0.52 ) }
    dend_6 { pt3dadd( -185.443, 196.406, -56.4094, 0.52 ) }
    dend_6 { pt3dadd( -187.582, 197.285, -56.8649, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -131.588, 136.917, -26.3717, 0.52 ) }
    dend_5 { pt3dadd( -132.297, 136.46, -27.1218, 0.52 ) }
    dend_5 { pt3dadd( -132.697, 136.202, -27.5444, 0.52 ) }
    dend_5 { pt3dadd( -133.66, 135.581, -28.563, 0.52 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 36/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 86.0286, -86.0458, -4.37419, 0.37 ) }
    dend_83 { pt3dadd( 86.8539, -86.6457, -4.58549, 0.37 ) }
    dend_83 { pt3dadd( 87.5511, -87.3103, -4.83574, 0.37 ) }
    dend_83 { pt3dadd( 87.9479, -87.7528, -4.99091, 0.37 ) }
    dend_83 { pt3dadd( 88.3872, -88.284, -5.16655, 0.37 ) }
    dend_83 { pt3dadd( 89.0849, -89.2303, -5.49827, 0.37 ) }
    dend_83 { pt3dadd( 89.5789, -89.9284, -5.74743, 0.37 ) }
    dend_83 { pt3dadd( 90.6138, -91.5135, -6.39713, 0.37 ) }
    dend_83 { pt3dadd( 91.2353, -92.474, -6.83278, 0.37 ) }
    dend_83 { pt3dadd( 91.5663, -92.9978, -7.09473, 0.37 ) }
    dend_83 { pt3dadd( 92.4141, -94.3988, -7.81518, 0.37 ) }
    dend_83 { pt3dadd( 92.9803, -95.3588, -8.3363, 0.37 ) }
    dend_83 { pt3dadd( 93.722, -96.574, -9.04967, 0.37 ) }
    dend_83 { pt3dadd( 94.4502, -97.6568, -9.75726, 0.37 ) }
    dend_83 { pt3dadd( 95.0433, -98.4844, -10.3735, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 51/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 86.0286, -86.0458, -4.37419, 0.37 ) }
    dend_82 { pt3dadd( 85.6516, -86.7578, -3.90521, 0.37 ) }
    dend_82 { pt3dadd( 85.2338, -87.5467, -3.38558, 0.37 ) }
    dend_82 { pt3dadd( 84.8883, -88.1992, -2.95577, 0.37 ) }
    dend_82 { pt3dadd( 84.4754, -88.9789, -2.44225, 0.37 ) }
    // Section: dend_63, id: dend_63, parent: dend_45 (entry count 56/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -34.3052, -262.884, -3.82676, 0.44 ) }
    dend_63 { pt3dadd( -35.6795, -262.423, -3.54455, 0.44 ) }
    dend_63 { pt3dadd( -36.5175, -262.142, -3.37247, 0.44 ) }
    dend_63 { pt3dadd( -37.418, -261.84, -3.18755, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 60/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -34.3052, -262.884, -3.82676, 0.44 ) }
    dend_46 { pt3dadd( -34.2732, -260.595, -3.06053, 0.44 ) }
    dend_46 { pt3dadd( -34.2199, -259.159, -2.49867, 0.44 ) }
    dend_46 { pt3dadd( -34.1338, -257.374, -1.80785, 0.44 ) }
    dend_46 { pt3dadd( -34.0257, -255.433, -1.11037, 0.44 ) }
    dend_46 { pt3dadd( -33.9661, -253.978, -0.638135, 0.44 ) }
    dend_46 { pt3dadd( -33.8589, -251.306, 0.26757, 0.44 ) }
    dend_46 { pt3dadd( -33.7747, -248.342, 1.26429, 0.44 ) }
    dend_46 { pt3dadd( -33.7692, -246.809, 1.74071, 0.44 ) }
    dend_46 { pt3dadd( -33.8128, -244.816, 2.29317, 0.44 ) }
    dend_46 { pt3dadd( -33.9596, -241.796, 2.98594, 0.44 ) }
    dend_46 { pt3dadd( -34.1567, -238.704, 3.5671, 0.44 ) }
    dend_46 { pt3dadd( -34.3405, -236.644, 3.82347, 0.44 ) }
    dend_46 { pt3dadd( -34.6112, -234.077, 3.98465, 0.44 ) }
    dend_46 { pt3dadd( -34.796, -232.567, 4.04819, 0.44 ) }
    dend_46 { pt3dadd( -35.0079, -231.062, 4.07129, 0.44 ) }
    dend_46 { pt3dadd( -35.248, -229.452, 4.0264, 0.44 ) }
    dend_46 { pt3dadd( -35.5034, -227.81, 3.90602, 0.44 ) }
    dend_46 { pt3dadd( -35.6876, -226.51, 3.84976, 0.44 ) }
    dend_46 { pt3dadd( -35.9853, -224.613, 3.88923, 0.44 ) }
    dend_46 { pt3dadd( -36.1552, -223.8, 3.93386, 0.44 ) }
    dend_46 { pt3dadd( -36.4285, -222.7, 4.03025, 0.44 ) }
    dend_46 { pt3dadd( -36.7997, -221.341, 4.15159, 0.44 ) }
    dend_46 { pt3dadd( -37.1165, -220.081, 4.30398, 0.44 ) }
    dend_46 { pt3dadd( -37.4459, -218.668, 4.52658, 0.44 ) }
    dend_46 { pt3dadd( -37.6621, -217.457, 4.79646, 0.44 ) }
    dend_46 { pt3dadd( -37.8231, -216.191, 5.2291, 0.44 ) }
    dend_46 { pt3dadd( -37.9899, -214.359, 6.08919, 0.44 ) }
    dend_46 { pt3dadd( -38.039, -211.968, 7.51263, 0.44 ) }
    dend_46 { pt3dadd( -37.957, -210.595, 8.50499, 0.44 ) }
    dend_46 { pt3dadd( -37.7678, -208.659, 10.0076, 0.44 ) }
    dend_46 { pt3dadd( -37.4348, -206.097, 12.1803, 0.44 ) }
    dend_46 { pt3dadd( -37.1024, -204.056, 14.1075, 0.44 ) }
    dend_46 { pt3dadd( -36.7014, -202.119, 16.1799, 0.44 ) }
    dend_46 { pt3dadd( -36.3066, -200.511, 18.0561, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 95/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -33.7086, -301.416, -13.2871, 0.29 ) }
    dend_44 { pt3dadd( -34.6218, -303.745, -18.0233, 0.29 ) }
    dend_44 { pt3dadd( -34.9903, -304.741, -19.9098, 0.29 ) }
    dend_44 { pt3dadd( -35.2874, -305.603, -21.4337, 0.29 ) }
    dend_44 { pt3dadd( -35.4921, -306.306, -22.5867, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_44 { pt3dadd( -36.7104, -311.637, -30.4972, 0.29 ) }
    dend_44 { pt3dadd( -36.8722, -312.702, -31.9021, 0.29 ) }
    dend_44 { pt3dadd( -36.9207, -313.264, -32.5369, 0.29 ) }
    dend_44 { pt3dadd( -36.9455, -313.825, -33.0971, 0.29 ) }
    dend_44 { pt3dadd( -36.9333, -315.129, -34.1995, 0.29 ) }
    dend_44 { pt3dadd( -36.7953, -316.776, -35.2556, 0.29 ) }
    dend_44 { pt3dadd( -36.459, -318.886, -36.2253, 0.29 ) }
    dend_44 { pt3dadd( -36.1346, -322.241, -38.0541, 0.29 ) }
    dend_44 { pt3dadd( -36.0027, -324.261, -39.2887, 0.29 ) }
    dend_44 { pt3dadd( -35.9533, -325.658, -40.2459, 0.29 ) }
    dend_44 { pt3dadd( -35.9738, -326.71, -41.0854, 0.29 ) }
    dend_44 { pt3dadd( -36.1449, -328.626, -42.9289, 0.29 ) }
    dend_44 { pt3dadd( -36.3423, -330.659, -44.8943, 0.29 ) }
    dend_44 { pt3dadd( -36.4788, -331.994, -46.2313, 0.29 ) }
    dend_44 { pt3dadd( -36.6477, -333.178, -47.5655, 0.29 ) }
    dend_44 { pt3dadd( -36.9131, -334.98, -49.7845, 0.29 ) }
    dend_44 { pt3dadd( -37.1503, -336.966, -52.331, 0.29 ) }
    dend_44 { pt3dadd( -37.206, -339.515, -55.3767, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 18/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -33.7086, -301.416, -13.2871, 0.52 ) }
    dend_35 { pt3dadd( -33.9876, -302.252, -13.2571, 0.52 ) }
    dend_35 { pt3dadd( -34.3041, -303.134, -13.2627, 0.52 ) }
    dend_35 { pt3dadd( -34.4918, -303.632, -13.2704, 0.52 ) }
    dend_35 { pt3dadd( -34.8685, -304.574, -13.3259, 0.52 ) }
    dend_35 { pt3dadd( -35.2675, -305.577, -13.4044, 0.52 ) }
    dend_35 { pt3dadd( -35.6796, -306.645, -13.4955, 0.52 ) }
    dend_35 { pt3dadd( -35.9587, -307.43, -13.5723, 0.52 ) }
    dend_35 { pt3dadd( -36.1249, -307.949, -13.6209, 0.52 ) }
    dend_35 { pt3dadd( -36.4427, -308.997, -13.7346, 0.52 ) }
    dend_35 { pt3dadd( -36.6762, -309.81, -13.8163, 0.52 ) }
    dend_35 { pt3dadd( -36.8889, -310.463, -13.9159, 0.52 ) }
    dend_35 { pt3dadd( -37.0865, -311.042, -14.0173, 0.52 ) }
    dend_35 { pt3dadd( -37.3188, -311.681, -14.1392, 0.52 ) }
    dend_35 { pt3dadd( -37.7905, -312.867, -14.3808, 0.52 ) }
    dend_35 { pt3dadd( -38.1148, -313.652, -14.5299, 0.52 ) }
    dend_35 { pt3dadd( -38.6453, -314.897, -14.7758, 0.52 ) }
    dend_35 { pt3dadd( -38.9593, -315.627, -14.9361, 0.52 ) }
    dend_35 { pt3dadd( -39.4237, -316.716, -15.1775, 0.52 ) }
    dend_35 { pt3dadd( -39.702, -317.407, -15.3065, 0.52 ) }
    dend_35 { pt3dadd( -40.0898, -318.479, -15.4393, 0.52 ) }
    dend_35 { pt3dadd( -40.2768, -319.045, -15.4847, 0.52 ) }
    dend_35 { pt3dadd( -40.5575, -320.05, -15.5079, 0.52 ) }
    dend_35 { pt3dadd( -40.7671, -320.793, -15.5434, 0.52 ) }
    dend_35 { pt3dadd( -41.0559, -321.788, -15.5913, 0.52 ) }
    dend_35 { pt3dadd( -41.3032, -322.579, -15.6294, 0.52 ) }
    dend_35 { pt3dadd( -41.6193, -323.486, -15.6997, 0.52 ) }
    dend_35 { pt3dadd( -41.9369, -324.375, -15.7785, 0.52 ) }
    dend_35 { pt3dadd( -42.4003, -325.686, -15.892, 0.52 ) }
    dend_35 { pt3dadd( -42.6675, -326.447, -15.9676, 0.52 ) }
    dend_35 { pt3dadd( -43.2324, -328.117, -16.1464, 0.52 ) }
    dend_35 { pt3dadd( -43.6685, -329.542, -16.253, 0.52 ) }
    dend_35 { pt3dadd( -43.8938, -330.355, -16.2788, 0.52 ) }
    dend_35 { pt3dadd( -44.1317, -331.282, -16.2458, 0.52 ) }
    dend_35 { pt3dadd( -44.2849, -331.975, -16.1584, 0.52 ) }
    dend_35 { pt3dadd( -44.4309, -332.703, -16.0292, 0.52 ) }
    dend_35 { pt3dadd( -44.6287, -333.857, -15.7301, 0.52 ) }
    dend_35 { pt3dadd( -44.7105, -334.348, -15.5911, 0.52 ) }
    dend_35 { pt3dadd( -44.8416, -335.019, -15.4476, 0.52 ) }
    dend_35 { pt3dadd( -44.9733, -335.57, -15.3765, 0.52 ) }
    dend_35 { pt3dadd( -45.1188, -336.095, -15.3546, 0.52 ) }
    dend_35 { pt3dadd( -45.267, -336.586, -15.3715, 0.52 ) }
    dend_35 { pt3dadd( -45.6201, -337.81, -15.5011, 0.52 ) }
    dend_35 { pt3dadd( -45.7831, -338.427, -15.6012, 0.52 ) }
    dend_35 { pt3dadd( -45.9573, -339.126, -15.7366, 0.52 ) }
    dend_35 { pt3dadd( -46.1063, -339.688, -15.8444, 0.52 ) }
    dend_35 { pt3dadd( -46.357, -340.531, -15.9845, 0.52 ) }
    dend_35 { pt3dadd( -46.534, -341.091, -16.0516, 0.52 ) }
    dend_35 { pt3dadd( -46.815, -342.071, -16.1095, 0.52 ) }
    dend_35 { pt3dadd( -46.9145, -342.441, -16.1329, 0.52 ) }
    dend_35 { pt3dadd( -47.0467, -342.996, -16.1645, 0.52 ) }
    dend_35 { pt3dadd( -47.1529, -343.45, -16.1774, 0.52 ) }
    dend_35 { pt3dadd( -47.2816, -344.037, -16.1747, 0.52 ) }
    dend_35 { pt3dadd( -47.4418, -344.902, -16.1418, 0.52 ) }
    dend_35 { pt3dadd( -47.5258, -345.64, -16.1, 0.52 ) }
    dend_35 { pt3dadd( -47.5785, -346.438, -16.0732, 0.52 ) }
    dend_35 { pt3dadd( -47.6121, -346.97, -16.0742, 0.52 ) }
    dend_35 { pt3dadd( -47.6529, -347.466, -16.0953, 0.52 ) }
    dend_35 { pt3dadd( -47.7402, -348.263, -16.1493, 0.52 ) }
    dend_35 { pt3dadd( -47.9426, -349.656, -16.2586, 0.52 ) }
    dend_35 { pt3dadd( -48.01, -350.16, -16.2779, 0.52 ) }
    dend_35 { pt3dadd( -48.1516, -351.358, -16.2711, 0.52 ) }
    dend_35 { pt3dadd( -48.2363, -352.193, -16.2347, 0.52 ) }
    dend_35 { pt3dadd( -48.3272, -353.135, -16.1552, 0.52 ) }
    dend_35 { pt3dadd( -48.3986, -353.838, -16.0624, 0.52 ) }
    dend_35 { pt3dadd( -48.5445, -355.222, -15.8083, 0.52 ) }
    dend_35 { pt3dadd( -48.6754, -356.38, -15.5573, 0.52 ) }
    dend_35 { pt3dadd( -48.7515, -357.055, -15.3886, 0.52 ) }
    dend_35 { pt3dadd( -48.8396, -357.723, -15.223, 0.52 ) }
    dend_35 { pt3dadd( -48.9262, -358.291, -15.1091, 0.52 ) }
    dend_35 { pt3dadd( -49.0165, -358.834, -15.0344, 0.52 ) }
    dend_35 { pt3dadd( -49.1516, -359.739, -14.9886, 0.52 ) }
    dend_35 { pt3dadd( -49.2294, -360.633, -14.9685, 0.52 ) }
    dend_35 { pt3dadd( -49.269, -361.183, -14.9604, 0.52 ) }
    dend_35 { pt3dadd( -49.3092, -362.09, -14.9584, 0.52 ) }
    dend_35 { pt3dadd( -49.3136, -362.757, -14.9676, 0.52 ) }
    dend_35 { pt3dadd( -49.2456, -364.582, -15.0216, 0.52 ) }
    dend_35 { pt3dadd( -49.0873, -366.146, -15.0982, 0.52 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 96/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.9739, 310.051, -24.3696, 0.44 ) }
    dend_23 { pt3dadd( 15.7018, 311.445, -23.8221, 0.44 ) }
    dend_23 { pt3dadd( 15.4792, 312.636, -23.3732, 0.44 ) }
    dend_23 { pt3dadd( 15.1329, 314.293, -22.7588, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_23 { pt3dadd( 14.8679, 315.431, -22.2872, 0.44 ) }
    dend_23 { pt3dadd( 14.6504, 316.256, -21.8795, 0.44 ) }
    dend_23 { pt3dadd( 14.3064, 317.285, -21.3043, 0.44 ) }
    dend_23 { pt3dadd( 14.0626, 317.767, -20.9738, 0.44 ) }
    dend_23 { pt3dadd( 13.6016, 318.398, -20.4612, 0.44 ) }
    dend_23 { pt3dadd( 12.8533, 319.108, -19.7665, 0.44 ) }
    dend_23 { pt3dadd( 12.0167, 319.731, -19.0482, 0.44 ) }
    dend_23 { pt3dadd( 11.0454, 320.35, -18.2208, 0.44 ) }
    dend_23 { pt3dadd( 10.1808, 320.804, -17.5114, 0.44 ) }
    dend_23 { pt3dadd( 9.38386, 321.168, -16.8983, 0.44 ) }
    dend_23 { pt3dadd( 8.56415, 321.503, -16.3169, 0.44 ) }
    dend_23 { pt3dadd( 7.29795, 321.989, -15.5913, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 15.9739, 310.051, -24.3696, 0.44 ) }
    dend_22 { pt3dadd( 15.244, 311.077, -24.2897, 0.44 ) }
    dend_22 { pt3dadd( 14.6142, 312.034, -24.2231, 0.44 ) }
    dend_22 { pt3dadd( 14.0905, 312.974, -23.9693, 0.44 ) }
    dend_22 { pt3dadd( 13.8046, 313.536, -23.7285, 0.44 ) }
    dend_22 { pt3dadd( 13.592, 313.978, -23.5133, 0.44 ) }
    dend_22 { pt3dadd( 13.2679, 314.661, -23.1679, 0.44 ) }
    dend_22 { pt3dadd( 13.0596, 315.156, -22.8566, 0.44 ) }
    dend_22 { pt3dadd( 12.3433, 317.179, -21.3499, 0.44 ) }
    dend_22 { pt3dadd( 12.1559, 317.818, -20.7944, 0.44 ) }
    dend_22 { pt3dadd( 11.8906, 318.828, -19.8876, 0.44 ) }
    dend_22 { pt3dadd( 11.7991, 319.223, -19.5424, 0.44 ) }
    dend_22 { pt3dadd( 11.5204, 320.411, -18.5418, 0.44 ) }
    dend_22 { pt3dadd( 11.2102, 321.633, -17.6306, 0.44 ) }
    dend_22 { pt3dadd( 10.8379, 323.091, -16.7816, 0.44 ) }
    dend_22 { pt3dadd( 10.5927, 324.078, -16.3069, 0.44 ) }
    dend_22 { pt3dadd( 10.3819, 324.924, -15.9563, 0.44 ) }
    dend_22 { pt3dadd( 10.19, 325.666, -15.7177, 0.44 ) }
    dend_22 { pt3dadd( 9.82002, 326.987, -15.5107, 0.44 ) }
    dend_22 { pt3dadd( 9.49318, 328.165, -15.479, 0.44 ) }
    dend_22 { pt3dadd( 9.24297, 329.042, -15.5177, 0.44 ) }
    dend_22 { pt3dadd( 9.05039, 329.736, -15.5572, 0.44 ) }
    dend_22 { pt3dadd( 8.67491, 331.102, -15.6556, 0.44 ) }
    dend_22 { pt3dadd( 8.33023, 332.571, -15.8023, 0.44 ) }
    dend_22 { pt3dadd( 8.22456, 333.1, -15.8825, 0.44 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -187.582, 197.285, -56.8649, 0.44 ) }
    dend_8 { pt3dadd( -188.578, 197.858, -57.3414, 0.44 ) }
    dend_8 { pt3dadd( -189.609, 198.36, -57.7501, 0.44 ) }
    dend_8 { pt3dadd( -190.619, 198.844, -58.0603, 0.44 ) }
    dend_8 { pt3dadd( -191.292, 199.186, -58.2133, 0.44 ) }
    dend_8 { pt3dadd( -192.547, 199.767, -58.4207, 0.44 ) }
    dend_8 { pt3dadd( -193.372, 200.128, -58.545, 0.44 ) }
    dend_8 { pt3dadd( -194.562, 200.614, -58.6861, 0.44 ) }
    dend_8 { pt3dadd( -195.683, 200.992, -58.7992, 0.44 ) }
    dend_8 { pt3dadd( -196.843, 201.293, -58.9366, 0.44 ) }
    dend_8 { pt3dadd( -198.435, 201.629, -59.2339, 0.44 ) }
    dend_8 { pt3dadd( -199.328, 201.787, -59.4757, 0.44 ) }
    dend_8 { pt3dadd( -200.485, 201.969, -59.8991, 0.44 ) }
    dend_8 { pt3dadd( -202.181, 202.2, -60.6957, 0.44 ) }
    dend_8 { pt3dadd( -204.394, 202.432, -61.9185, 0.44 ) }
    dend_8 { pt3dadd( -206.136, 202.599, -62.9827, 0.44 ) }
    dend_8 { pt3dadd( -207.435, 202.813, -63.8875, 0.44 ) }
    dend_8 { pt3dadd( -208.621, 203.145, -64.8577, 0.44 ) }
    dend_8 { pt3dadd( -209.95, 203.69, -66.1094, 0.44 ) }
    dend_8 { pt3dadd( -211.307, 204.535, -67.6152, 0.44 ) }
    dend_8 { pt3dadd( -211.83, 204.966, -68.2548, 0.44 ) }
    dend_8 { pt3dadd( -213.362, 206.552, -70.2452, 0.44 ) }
    dend_8 { pt3dadd( -214.782, 208.413, -72.3303, 0.44 ) }
    dend_8 { pt3dadd( -215.37, 209.32, -73.2987, 0.44 ) }
    dend_8 { pt3dadd( -216.231, 210.823, -74.8598, 0.44 ) }
    dend_8 { pt3dadd( -216.555, 211.415, -75.4827, 0.44 ) }
    dend_8 { pt3dadd( -217.238, 212.559, -76.7928, 0.44 ) }
    dend_8 { pt3dadd( -218.201, 213.855, -78.4808, 0.44 ) }
    dend_8 { pt3dadd( -218.82, 214.503, -79.4708, 0.44 ) }
    dend_8 { pt3dadd( -219.225, 214.855, -80.1281, 0.44 ) }
    dend_8 { pt3dadd( -219.631, 215.083, -80.7705, 0.44 ) }
    dend_8 { pt3dadd( -220.206, 215.264, -81.7011, 0.44 ) }
    dend_8 { pt3dadd( -220.764, 215.275, -82.5927, 0.44 ) }
    dend_8 { pt3dadd( -221.334, 215.139, -83.5447, 0.44 ) }
    dend_8 { pt3dadd( -221.903, 214.89, -84.4154, 0.44 ) }
    dend_8 { pt3dadd( -222.687, 214.46, -85.5491, 0.44 ) }
    dend_8 { pt3dadd( -223.346, 214.069, -86.4615, 0.44 ) }
    dend_8 { pt3dadd( -223.962, 213.702, -87.2512, 0.44 ) }
    dend_8 { pt3dadd( -225.23, 212.924, -88.7355, 0.44 ) }
    dend_8 { pt3dadd( -227.272, 211.718, -90.9315, 0.44 ) }
    dend_8 { pt3dadd( -227.941, 211.357, -91.5901, 0.44 ) }
    dend_8 { pt3dadd( -229.204, 210.761, -92.7313, 0.44 ) }
    dend_8 { pt3dadd( -230.235, 210.338, -93.6174, 0.44 ) }
    dend_8 { pt3dadd( -231.687, 209.777, -94.7326, 0.44 ) }
    dend_8 { pt3dadd( -232.512, 209.5, -95.3312, 0.44 ) }
    dend_8 { pt3dadd( -232.982, 209.373, -95.6798, 0.44 ) }
    dend_8 { pt3dadd( -233.665, 209.218, -96.1529, 0.44 ) }
    dend_8 { pt3dadd( -234.442, 209.025, -96.5965, 0.44 ) }
    dend_8 { pt3dadd( -237.444, 208.275, -98.1578, 0.44 ) }
    dend_8 { pt3dadd( -239.199, 207.82, -98.9181, 0.44 ) }
    dend_8 { pt3dadd( -240.402, 207.485, -99.3132, 0.44 ) }
    dend_8 { pt3dadd( -241.387, 207.214, -99.5753, 0.44 ) }
    dend_8 { pt3dadd( -244.964, 206.196, -100.22, 0.44 ) }
    dend_8 { pt3dadd( -245.781, 205.947, -100.278, 0.44 ) }
    dend_8 { pt3dadd( -247.834, 205.315, -100.268, 0.44 ) }
    dend_8 { pt3dadd( -249.671, 204.723, -100.145, 0.44 ) }
    dend_8 { pt3dadd( -250.795, 204.362, -100.004, 0.44 ) }
    dend_8 { pt3dadd( -253.314, 203.637, -99.5683, 0.44 ) }
    dend_8 { pt3dadd( -256.235, 202.921, -98.991, 0.44 ) }
    dend_8 { pt3dadd( -257.057, 202.721, -98.8079, 0.44 ) }
    dend_8 { pt3dadd( -257.82, 202.546, -98.6326, 0.44 ) }
    dend_8 { pt3dadd( -260.03, 202.023, -98.0905, 0.44 ) }
    dend_8 { pt3dadd( -260.767, 201.84, -97.8699, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 0/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -187.582, 197.285, -56.8649, 0.52 ) }
    dend_7 { pt3dadd( -188.601, 198.611, -56.5683, 0.52 ) }
    dend_7 { pt3dadd( -189.831, 200.48, -56.2098, 0.52 ) }
    dend_7 { pt3dadd( -191.321, 202.975, -55.7126, 0.52 ) }
    dend_7 { pt3dadd( -191.882, 203.952, -55.5135, 0.52 ) }
    dend_7 { pt3dadd( -192.939, 205.833, -55.1116, 0.52 ) }
    dend_7 { pt3dadd( -193.639, 207.184, -54.8292, 0.52 ) }
    dend_7 { pt3dadd( -194.798, 209.705, -54.2954, 0.52 ) }
    dend_7 { pt3dadd( -195.311, 211.053, -54.0405, 0.52 ) }
    dend_7 { pt3dadd( -195.783, 212.493, -53.7908, 0.52 ) }
    dend_7 { pt3dadd( -196.374, 214.421, -53.472, 0.52 ) }
    dend_7 { pt3dadd( -197.11, 216.915, -53.0626, 0.44 ) }
    dend_7 { pt3dadd( -197.45, 218.053, -52.8593, 0.44 ) }
    dend_7 { pt3dadd( -198.227, 220.588, -52.3402, 0.44 ) }
    dend_7 { pt3dadd( -198.606, 221.862, -52.0608, 0.44 ) }
    dend_7 { pt3dadd( -198.915, 223.122, -51.7829, 0.44 ) }
    dend_7 { pt3dadd( -199.183, 224.384, -51.4673, 0.44 ) }
    dend_7 { pt3dadd( -199.316, 225.278, -51.2252, 0.44 ) }
    dend_7 { pt3dadd( -199.363, 225.988, -51.0278, 0.44 ) }
    dend_7 { pt3dadd( -199.34, 226.825, -50.8506, 0.44 ) }
    dend_7 { pt3dadd( -199.077, 229.302, -50.5705, 0.44 ) }
    dend_7 { pt3dadd( -198.77, 231.557, -50.3752, 0.44 ) }
    dend_7 { pt3dadd( -198.348, 234.251, -50.255, 0.44 ) }
    dend_7 { pt3dadd( -198.24, 234.901, -50.2383, 0.44 ) }
    dend_7 { pt3dadd( -197.611, 238.646, -50.2128, 0.44 ) }
    dend_7 { pt3dadd( -197.169, 241.2, -50.2344, 0.44 ) }
    dend_7 { pt3dadd( -196.81, 243.332, -50.2633, 0.44 ) }
    dend_7 { pt3dadd( -196.15, 246.922, -50.4812, 0.44 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 28/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 95.0433, -98.4844, -10.3735, 0.37 ) }
    dend_85 { pt3dadd( 96.4305, -99.6725, -12.1742, 0.37 ) }
    dend_85 { pt3dadd( 97.2333, -100.241, -13.0938, 0.37 ) }
    dend_85 { pt3dadd( 98.09, -100.809, -13.9955, 0.37 ) }
    dend_85 { pt3dadd( 98.8104, -101.285, -14.7342, 0.37 ) }
    dend_85 { pt3dadd( 99.3512, -101.622, -15.2942, 0.37 ) }
    dend_85 { pt3dadd( 99.9961, -102.013, -15.946, 0.37 ) }
    dend_85 { pt3dadd( 100.116, -102.073, -16.0478, 0.37 ) }
    dend_85 { pt3dadd( 100.58, -102.294, -16.3759, 0.37 ) }
    dend_85 { pt3dadd( 101.978, -102.991, -17.2168, 0.37 ) }
    dend_85 { pt3dadd( 103.439, -103.782, -17.9599, 0.37 ) }
    dend_85 { pt3dadd( 103.994, -104.119, -18.2078, 0.37 ) }
    dend_85 { pt3dadd( 104.359, -104.345, -18.3436, 0.37 ) }
    dend_85 { pt3dadd( 106.046, -105.309, -18.8406, 0.37 ) }
    dend_85 { pt3dadd( 106.864, -105.74, -19.0166, 0.37 ) }
    dend_85 { pt3dadd( 107.529, -106.072, -19.1015, 0.37 ) }
    dend_85 { pt3dadd( 108.568, -106.56, -19.2083, 0.37 ) }
    dend_85 { pt3dadd( 109.61, -107.002, -19.3482, 0.37 ) }
    dend_85 { pt3dadd( 110.527, -107.347, -19.5038, 0.37 ) }
    dend_85 { pt3dadd( 111.16, -107.579, -19.6423, 0.37 ) }
    dend_85 { pt3dadd( 112.438, -108.044, -19.922, 0.37 ) }
    dend_85 { pt3dadd( 113.806, -108.53, -20.3879, 0.37 ) }
    dend_85 { pt3dadd( 114.345, -108.722, -20.6372, 0.37 ) }
    dend_85 { pt3dadd( 114.846, -108.922, -20.9309, 0.37 ) }
    dend_85 { pt3dadd( 115.603, -109.238, -21.4582, 0.37 ) }
    dend_85 { pt3dadd( 116.081, -109.428, -21.8295, 0.37 ) }
    dend_85 { pt3dadd( 118.247, -110.377, -23.4808, 0.37 ) }
    dend_85 { pt3dadd( 118.787, -110.621, -23.835, 0.37 ) }
    dend_85 { pt3dadd( 119.23, -110.832, -24.0658, 0.37 ) }
    dend_85 { pt3dadd( 119.776, -111.07, -24.2753, 0.37 ) }
    dend_85 { pt3dadd( 120.586, -111.421, -24.5609, 0.37 ) }
    dend_85 { pt3dadd( 122.313, -112.189, -25.1429, 0.37 ) }
    dend_85 { pt3dadd( 123.685, -112.81, -25.4919, 0.37 ) }
    dend_85 { pt3dadd( 124.979, -113.413, -25.8386, 0.37 ) }
    dend_85 { pt3dadd( 126.733, -114.247, -26.3435, 0.37 ) }
    dend_85 { pt3dadd( 128.351, -115.061, -26.8654, 0.37 ) }
    dend_85 { pt3dadd( 129.271, -115.541, -27.2257, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 65/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 95.0433, -98.4844, -10.3735, 0.37 ) }
    dend_84 { pt3dadd( 94.1835, -96.4336, -12.0226, 0.37 ) }
    dend_84 { pt3dadd( 93.8885, -95.7301, -12.5883, 0.37 ) }
    dend_84 { pt3dadd( 93.6755, -95.2221, -12.9968, 0.37 ) }
    // Section: dend_62, id: dend_62, parent: dend_46 (entry count 69/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -36.3066, -200.511, 18.0561, 0.44 ) }
    dend_62 { pt3dadd( -37.9058, -200.969, 19.08, 0.44 ) }
    dend_62 { pt3dadd( -38.5348, -201.149, 19.4828, 0.44 ) }
    dend_62 { pt3dadd( -39.7388, -201.495, 20.2537, 0.44 ) }
    dend_62 { pt3dadd( -40.9465, -201.841, 21.0269, 0.44 ) }
    dend_62 { pt3dadd( -41.6027, -202.029, 21.4471, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 75/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -36.3066, -200.511, 18.0561, 0.44 ) }
    dend_47 { pt3dadd( -35.2487, -198.456, 18.7822, 0.44 ) }
    dend_47 { pt3dadd( -34.8397, -197.482, 19.1138, 0.44 ) }
    dend_47 { pt3dadd( -33.5682, -193.933, 20.2862, 0.44 ) }
    dend_47 { pt3dadd( -33.1383, -192.63, 20.7048, 0.44 ) }
    dend_47 { pt3dadd( -32.793, -191.827, 21.0493, 0.44 ) }
    dend_47 { pt3dadd( -32.2917, -190.824, 21.5271, 0.44 ) }
    dend_47 { pt3dadd( -31.7779, -190.189, 22.1035, 0.44 ) }
    dend_47 { pt3dadd( -31.2052, -189.632, 22.741, 0.44 ) }
    dend_47 { pt3dadd( -30.5071, -189.03, 23.5269, 0.44 ) }
    dend_47 { pt3dadd( -27.8064, -187.046, 26.5082, 0.44 ) }
    dend_47 { pt3dadd( -27.4098, -186.794, 26.9335, 0.44 ) }
    dend_47 { pt3dadd( -22.6921, -184.236, 31.8455, 0.44 ) }
    dend_47 { pt3dadd( -21.8418, -183.837, 32.7261, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -49.0873, -366.146, -15.0982, 0.37 ) }
    dend_43 { pt3dadd( -47.4194, -368.041, -15.2033, 0.37 ) }
    dend_43 { pt3dadd( -45.9244, -369.496, -15.1691, 0.37 ) }
    dend_43 { pt3dadd( -44.5431, -370.762, -15.2137, 0.37 ) }
    dend_43 { pt3dadd( -44.102, -371.164, -15.2759, 0.37 ) }
    dend_43 { pt3dadd( -43.5042, -371.74, -15.4006, 0.37 ) }
    dend_43 { pt3dadd( -42.7419, -372.541, -15.5403, 0.37 ) }
    dend_43 { pt3dadd( -41.8278, -373.579, -15.6394, 0.37 ) }
    dend_43 { pt3dadd( -40.8453, -375.0, -15.817, 0.37 ) }
    dend_43 { pt3dadd( -40.2459, -376.438, -15.9293, 0.37 ) }
    dend_43 { pt3dadd( -39.8872, -377.534, -16.0012, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_43 { pt3dadd( -39.4935, -379.298, -16.0702, 0.37 ) }
    dend_43 { pt3dadd( -39.3434, -380.489, -16.0788, 0.37 ) }
    dend_43 { pt3dadd( -39.2933, -381.533, -16.0494, 0.37 ) }
    dend_43 { pt3dadd( -39.3046, -383.153, -15.7224, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 4/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -49.0873, -366.146, -15.0982, 0.52 ) }
    dend_36 { pt3dadd( -49.1521, -367.12, -15.3013, 0.52 ) }
    dend_36 { pt3dadd( -49.1976, -367.991, -15.4696, 0.52 ) }
    dend_36 { pt3dadd( -49.2626, -368.974, -15.6925, 0.52 ) }
    dend_36 { pt3dadd( -49.324, -369.776, -15.8704, 0.52 ) }
    dend_36 { pt3dadd( -49.4133, -370.913, -16.104, 0.52 ) }
    dend_36 { pt3dadd( -49.481, -371.736, -16.2508, 0.52 ) }
    dend_36 { pt3dadd( -49.5333, -372.323, -16.3305, 0.52 ) }
    dend_36 { pt3dadd( -49.6386, -373.619, -16.4955, 0.52 ) }
    dend_36 { pt3dadd( -49.711, -374.72, -16.6207, 0.52 ) }
    dend_36 { pt3dadd( -49.77, -375.638, -16.6979, 0.52 ) }
    dend_36 { pt3dadd( -49.8641, -377.031, -16.7496, 0.52 ) }
    dend_36 { pt3dadd( -49.9063, -377.657, -16.7601, 0.52 ) }
    dend_36 { pt3dadd( -49.9391, -378.284, -16.7284, 0.52 ) }
    dend_36 { pt3dadd( -49.9496, -378.542, -16.6941, 0.52 ) }
    dend_36 { pt3dadd( -49.9931, -379.309, -16.5631, 0.52 ) }
    dend_36 { pt3dadd( -50.0559, -380.066, -16.4138, 0.52 ) }
    dend_36 { pt3dadd( -50.1436, -380.804, -16.2591, 0.52 ) }
    dend_36 { pt3dadd( -50.3196, -381.929, -16.0283, 0.52 ) }
    dend_36 { pt3dadd( -50.4492, -382.578, -15.8996, 0.52 ) }
    dend_36 { pt3dadd( -50.6153, -383.341, -15.7583, 0.52 ) }
    dend_36 { pt3dadd( -50.876, -384.591, -15.5368, 0.52 ) }
    dend_36 { pt3dadd( -51.0954, -385.648, -15.3636, 0.52 ) }
    dend_36 { pt3dadd( -51.2992, -386.594, -15.2073, 0.52 ) }
    dend_36 { pt3dadd( -51.461, -387.366, -15.0898, 0.52 ) }
    dend_36 { pt3dadd( -51.5807, -388.073, -14.9725, 0.52 ) }
    dend_36 { pt3dadd( -51.7092, -389.203, -14.778, 0.52 ) }
    dend_36 { pt3dadd( -51.7609, -389.779, -14.6703, 0.52 ) }
    dend_36 { pt3dadd( -51.8148, -390.826, -14.4618, 0.52 ) }
    dend_36 { pt3dadd( -51.8234, -391.532, -14.314, 0.52 ) }
    dend_36 { pt3dadd( -51.801, -392.402, -14.1278, 0.52 ) }
    dend_36 { pt3dadd( -51.7603, -393.607, -13.87, 0.52 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 36/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 129.271, -115.541, -27.2257, 0.37 ) }
    dend_87 { pt3dadd( 129.157, -117.588, -28.3951, 0.37 ) }
    dend_87 { pt3dadd( 129.119, -118.26, -28.779, 0.37 ) }
    dend_87 { pt3dadd( 129.078, -118.989, -29.1958, 0.37 ) }
    dend_87 { pt3dadd( 129.048, -119.54, -29.5107, 0.37 ) }
    dend_87 { pt3dadd( 129.01, -120.212, -29.8946, 0.37 ) }
    dend_87 { pt3dadd( 128.897, -122.23, -31.0476, 0.37 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 43/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 129.271, -115.541, -27.2257, 0.37 ) }
    dend_86 { pt3dadd( 130.947, -115.765, -27.552, 0.37 ) }
    dend_86 { pt3dadd( 132.211, -115.933, -27.7981, 0.37 ) }
    dend_86 { pt3dadd( 133.34, -116.084, -28.0181, 0.37 ) }
    dend_86 { pt3dadd( 134.173, -116.195, -28.1802, 0.37 ) }
    dend_86 { pt3dadd( 134.503, -116.238, -28.2444, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_47 (entry count 49/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -21.8418, -183.837, 32.7261, 0.44 ) }
    dend_55 { pt3dadd( -21.0091, -184.374, 32.8329, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -21.8418, -183.837, 32.7261, 0.44 ) }
    dend_48 { pt3dadd( -21.7337, -182.662, 32.6772, 0.44 ) }
    dend_48 { pt3dadd( -21.6724, -181.915, 32.6508, 0.44 ) }
    dend_48 { pt3dadd( -21.6148, -181.219, 32.6259, 0.44 ) }
    dend_48 { pt3dadd( -21.5572, -180.514, 32.554, 0.44 ) }
    dend_48 { pt3dadd( -21.4504, -179.351, 32.3904, 0.44 ) }
    dend_48 { pt3dadd( -21.3996, -178.852, 32.2992, 0.44 ) }
    dend_48 { pt3dadd( -21.3072, -178.055, 32.0694, 0.44 ) }
    dend_48 { pt3dadd( -21.2629, -177.693, 31.9338, 0.44 ) }
    dend_48 { pt3dadd( -21.1238, -176.428, 31.3801, 0.44 ) }
    dend_48 { pt3dadd( -21.0996, -175.736, 30.9988, 0.44 ) }
    dend_48 { pt3dadd( -21.1216, -175.288, 30.7316, 0.44 ) }
    dend_48 { pt3dadd( -21.2299, -174.507, 30.2102, 0.44 ) }
    dend_48 { pt3dadd( -21.3508, -174.084, 29.8735, 0.44 ) }
    dend_48 { pt3dadd( -21.5013, -173.71, 29.5747, 0.44 ) }
    dend_48 { pt3dadd( -22.0772, -172.487, 28.6507, 0.44 ) }
    dend_48 { pt3dadd( -22.4746, -171.67, 28.0725, 0.44 ) }
    dend_48 { pt3dadd( -23.0655, -170.452, 27.3314, 0.44 ) }
    dend_48 { pt3dadd( -23.8883, -168.802, 26.3982, 0.44 ) }
    dend_48 { pt3dadd( -24.2636, -168.024, 25.9706, 0.44 ) }
    dend_48 { pt3dadd( -24.573, -167.357, 25.6026, 0.44 ) }
    dend_48 { pt3dadd( -24.8206, -166.786, 25.2811, 0.44 ) }
    dend_48 { pt3dadd( -25.26, -165.726, 24.6683, 0.44 ) }
    dend_48 { pt3dadd( -25.7618, -164.296, 23.9234, 0.44 ) }
    dend_48 { pt3dadd( -25.934, -163.703, 23.6259, 0.44 ) }
    dend_48 { pt3dadd( -26.1698, -162.937, 23.1344, 0.44 ) }
    dend_48 { pt3dadd( -26.4277, -162.221, 22.5634, 0.44 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -51.7603, -393.607, -13.87, 0.52 ) }
    dend_38 { pt3dadd( -51.9567, -395.308, -14.0788, 0.52 ) }
    dend_38 { pt3dadd( -52.0999, -396.48, -14.1765, 0.52 ) }
    dend_38 { pt3dadd( -52.3087, -398.111, -14.3273, 0.52 ) }
    dend_38 { pt3dadd( -52.5238, -400.071, -14.5048, 0.52 ) }
    dend_38 { pt3dadd( -52.6207, -401.139, -14.5946, 0.52 ) }
    dend_38 { pt3dadd( -52.7283, -402.775, -14.7265, 0.52 ) }
    dend_38 { pt3dadd( -52.8215, -404.66, -14.8559, 0.52 ) }
    dend_38 { pt3dadd( -52.8706, -407.267, -15.0055, 0.52 ) }
    dend_38 { pt3dadd( -52.8419, -409.404, -15.0942, 0.52 ) }
    dend_38 { pt3dadd( -52.7626, -411.506, -15.1546, 0.52 ) }
    dend_38 { pt3dadd( -52.6897, -413.202, -15.169, 0.52 ) }
    dend_38 { pt3dadd( -52.5779, -415.539, -15.138, 0.52 ) }
    dend_38 { pt3dadd( -52.5112, -417.17, -15.067, 0.52 ) }
    dend_38 { pt3dadd( -52.4728, -418.999, -14.9149, 0.52 ) }
    dend_38 { pt3dadd( -52.4909, -420.246, -14.7908, 0.52 ) }
    dend_38 { pt3dadd( -52.6019, -422.156, -14.5708, 0.52 ) }
    dend_38 { pt3dadd( -52.7395, -423.313, -14.4171, 0.52 ) }
    dend_38 { pt3dadd( -53.0068, -424.793, -14.1985, 0.52 ) }
    dend_38 { pt3dadd( -53.4969, -426.856, -13.7927, 0.52 ) }
    dend_38 { pt3dadd( -53.9316, -428.467, -13.427, 0.52 ) }
    dend_38 { pt3dadd( -54.2475, -429.521, -13.1714, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_38 { pt3dadd( -54.6078, -430.567, -12.8677, 0.52 ) }
    dend_38 { pt3dadd( -54.8967, -431.311, -12.6246, 0.52 ) }
    dend_38 { pt3dadd( -55.6868, -433.188, -12.0108, 0.52 ) }
    dend_38 { pt3dadd( -56.2285, -434.461, -11.6185, 0.52 ) }
    dend_38 { pt3dadd( -56.8329, -435.939, -11.2226, 0.52 ) }
    dend_38 { pt3dadd( -57.2267, -437.004, -10.9985, 0.52 ) }
    dend_38 { pt3dadd( -57.6215, -438.184, -10.8198, 0.52 ) }
    dend_38 { pt3dadd( -57.997, -439.38, -10.7057, 0.52 ) }
    dend_38 { pt3dadd( -58.3415, -440.51, -10.6668, 0.52 ) }
    dend_38 { pt3dadd( -58.6437, -441.557, -10.6307, 0.52 ) }
    dend_38 { pt3dadd( -58.9758, -442.858, -10.5827, 0.52 ) }
    dend_38 { pt3dadd( -59.2895, -444.191, -10.5169, 0.52 ) }
    dend_38 { pt3dadd( -59.5529, -445.32, -10.4348, 0.52 ) }
    dend_38 { pt3dadd( -59.8151, -446.367, -10.3214, 0.52 ) }
    dend_38 { pt3dadd( -60.02, -447.111, -10.2345, 0.52 ) }
    dend_38 { pt3dadd( -60.42, -448.474, -10.0671, 0.52 ) }
    dend_38 { pt3dadd( -60.7254, -449.403, -9.94191, 0.52 ) }
    dend_38 { pt3dadd( -61.0122, -450.257, -9.82477, 0.52 ) }
    dend_38 { pt3dadd( -61.5148, -451.867, -9.6168, 0.52 ) }
    dend_38 { pt3dadd( -61.8946, -453.218, -9.45648, 0.52 ) }
    dend_38 { pt3dadd( -62.2558, -454.616, -9.30134, 0.52 ) }
    dend_38 { pt3dadd( -62.7573, -456.479, -9.08773, 0.52 ) }
    dend_38 { pt3dadd( -63.4233, -458.786, -8.7768, 0.52 ) }
    dend_38 { pt3dadd( -63.9429, -460.486, -8.58189, 0.52 ) }
    dend_38 { pt3dadd( -64.4923, -462.195, -8.44299, 0.52 ) }
    dend_38 { pt3dadd( -65.3113, -464.567, -8.34693, 0.52 ) }
    dend_38 { pt3dadd( -66.0614, -466.579, -8.3265, 0.52 ) }
    dend_38 { pt3dadd( -67.3809, -469.704, -8.35827, 0.52 ) }
    dend_38 { pt3dadd( -68.5041, -472.02, -8.41412, 0.52 ) }
    dend_38 { pt3dadd( -69.449, -473.78, -8.47322, 0.52 ) }
    dend_38 { pt3dadd( -70.2334, -475.16, -8.53625, 0.52 ) }
    dend_38 { pt3dadd( -70.8441, -476.202, -8.59079, 0.52 ) }
    dend_38 { pt3dadd( -71.4598, -477.275, -8.63419, 0.52 ) }
    dend_38 { pt3dadd( -71.917, -478.091, -8.62978, 0.52 ) }
    dend_38 { pt3dadd( -72.5827, -479.279, -8.48879, 0.52 ) }
    dend_38 { pt3dadd( -73.1632, -480.357, -8.30033, 0.52 ) }
    dend_38 { pt3dadd( -73.9046, -481.794, -8.01574, 0.52 ) }
    dend_38 { pt3dadd( -74.6273, -483.254, -7.73694, 0.52 ) }
    dend_38 { pt3dadd( -75.3304, -484.823, -7.46217, 0.52 ) }
    dend_38 { pt3dadd( -76.1469, -486.753, -7.14055, 0.52 ) }
    dend_38 { pt3dadd( -76.7183, -488.158, -6.91419, 0.52 ) }
    dend_38 { pt3dadd( -77.3425, -489.785, -6.66476, 0.52 ) }
    dend_38 { pt3dadd( -77.8013, -491.022, -6.52392, 0.52 ) }
    dend_38 { pt3dadd( -78.5367, -493.05, -6.31321, 0.52 ) }
    dend_38 { pt3dadd( -78.7681, -493.723, -6.25417, 0.52 ) }
    dend_38 { pt3dadd( -79.2308, -495.234, -6.16093, 0.52 ) }
    dend_38 { pt3dadd( -79.6045, -496.434, -6.10763, 0.52 ) }
    dend_38 { pt3dadd( -80.1856, -498.284, -6.07954, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 48/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -51.7603, -393.607, -13.87, 0.52 ) }
    dend_37 { pt3dadd( -49.7968, -394.316, -13.4768, 0.52 ) }
    dend_37 { pt3dadd( -49.0956, -394.57, -13.3364, 0.52 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 51/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -21.0091, -184.374, 32.8329, 0.44 ) }
    dend_61 { pt3dadd( -20.4264, -184.868, 32.384, 0.44 ) }
    dend_61 { pt3dadd( -20.0708, -185.169, 32.11, 0.44 ) }
    dend_61 { pt3dadd( -18.4973, -186.503, 30.8977, 0.44 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 55/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -21.0091, -184.374, 32.8329, 0.44 ) }
    dend_56 { pt3dadd( -21.3797, -186.148, 33.4603, 0.44 ) }
    dend_56 { pt3dadd( -21.4855, -186.667, 33.6206, 0.44 ) }
    dend_56 { pt3dadd( -21.5591, -187.098, 33.7823, 0.44 ) }
    dend_56 { pt3dadd( -21.6332, -187.781, 34.0425, 0.44 ) }
    dend_56 { pt3dadd( -21.7216, -188.675, 34.3922, 0.44 ) }
    dend_56 { pt3dadd( -21.7916, -189.461, 34.7357, 0.44 ) }
    dend_56 { pt3dadd( -21.896, -190.526, 35.2554, 0.44 ) }
    dend_56 { pt3dadd( -22.0881, -191.779, 35.948, 0.44 ) }
    dend_56 { pt3dadd( -22.3081, -192.697, 36.5715, 0.44 ) }
    dend_56 { pt3dadd( -22.5411, -193.325, 37.073, 0.44 ) }
    dend_56 { pt3dadd( -23.1551, -194.463, 38.2092, 0.44 ) }
    dend_56 { pt3dadd( -23.9275, -195.604, 39.54, 0.44 ) }
    dend_56 { pt3dadd( -24.2909, -196.046, 40.1258, 0.44 ) }
    dend_56 { pt3dadd( -25.2028, -196.94, 41.4158, 0.44 ) }
    dend_56 { pt3dadd( -25.8219, -197.521, 42.3249, 0.44 ) }
    dend_56 { pt3dadd( -26.577, -198.322, 43.546, 0.44 ) }
    dend_56 { pt3dadd( -26.7725, -198.518, 43.8587, 0.44 ) }
    dend_56 { pt3dadd( -26.9644, -198.768, 44.2373, 0.44 ) }
    dend_56 { pt3dadd( -27.154, -199.176, 44.7868, 0.44 ) }
    dend_56 { pt3dadd( -27.286, -200.579, 46.0724, 0.44 ) }
    dend_56 { pt3dadd( -27.2456, -201.182, 46.5628, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 77/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -26.4277, -162.221, 22.5634, 0.44 ) }
    dend_54 { pt3dadd( -26.0503, -162.518, 21.886, 0.44 ) }
    dend_54 { pt3dadd( -25.7499, -162.754, 21.3469, 0.44 ) }
    dend_54 { pt3dadd( -25.331, -163.082, 20.5951, 0.44 ) }
    dend_54 { pt3dadd( -25.1628, -163.214, 20.2933, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 82/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -26.4277, -162.221, 22.5634, 0.44 ) }
    dend_49 { pt3dadd( -26.3741, -160.635, 22.6232, 0.44 ) }
    dend_49 { pt3dadd( -26.3198, -159.029, 22.6837, 0.44 ) }
    dend_49 { pt3dadd( -26.2933, -158.247, 22.7132, 0.44 ) }
    dend_49 { pt3dadd( -26.2514, -157.008, 22.7599, 0.44 ) }
    dend_49 { pt3dadd( -26.2014, -155.529, 22.8156, 0.44 ) }
    dend_49 { pt3dadd( -26.1581, -154.246, 22.8639, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 89/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -80.1856, -498.284, -6.07954, 0.37 ) }
    dend_42 { pt3dadd( -81.1726, -499.134, -6.2436, 0.37 ) }
    dend_42 { pt3dadd( -81.9224, -499.829, -6.47784, 0.37 ) }
    dend_42 { pt3dadd( -82.6936, -500.605, -6.74675, 0.37 ) }
    dend_42 { pt3dadd( -83.2849, -501.191, -6.94797, 0.37 ) }
    dend_42 { pt3dadd( -83.7528, -501.607, -7.08808, 0.37 ) }
    dend_42 { pt3dadd( -84.3721, -502.104, -7.25604, 0.37 ) }
    dend_42 { pt3dadd( -85.443, -502.831, -7.65627, 0.37 ) }
    dend_42 { pt3dadd( -86.3579, -503.274, -8.00822, 0.37 ) }
    dend_42 { pt3dadd( -86.9502, -503.445, -8.23171, 0.37 ) }
    dend_42 { pt3dadd( -88.1058, -503.61, -8.66651, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_42 { pt3dadd( -88.5916, -503.625, -8.81816, 0.37 ) }
    dend_42 { pt3dadd( -90.6856, -503.51, -9.32608, 0.37 ) }
    dend_42 { pt3dadd( -91.485, -503.409, -9.46486, 0.37 ) }
    dend_42 { pt3dadd( -93.3195, -503.061, -9.72041, 0.37 ) }
    dend_42 { pt3dadd( -94.3971, -502.801, -9.77831, 0.37 ) }
    dend_42 { pt3dadd( -95.9637, -502.299, -9.73369, 0.37 ) }
    dend_42 { pt3dadd( -97.239, -501.795, -9.59724, 0.37 ) }
    dend_42 { pt3dadd( -98.1683, -501.344, -9.42057, 0.37 ) }
    dend_42 { pt3dadd( -99.2695, -500.736, -9.21525, 0.37 ) }
    dend_42 { pt3dadd( -100.931, -499.756, -8.92237, 0.37 ) }
    dend_42 { pt3dadd( -102.422, -498.818, -8.71961, 0.37 ) }
    dend_42 { pt3dadd( -103.249, -498.272, -8.69994, 0.37 ) }
    dend_42 { pt3dadd( -104.628, -497.345, -8.69682, 0.37 ) }
    dend_42 { pt3dadd( -107.364, -495.526, -8.77855, 0.37 ) }
    dend_42 { pt3dadd( -109.026, -494.451, -8.90091, 0.37 ) }
    dend_42 { pt3dadd( -110.641, -493.459, -9.13322, 0.37 ) }
    dend_42 { pt3dadd( -113.087, -492.061, -9.5281, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 17/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -80.1856, -498.284, -6.07954, 0.52 ) }
    dend_39 { pt3dadd( -80.6553, -500.302, -5.75931, 0.52 ) }
    dend_39 { pt3dadd( -80.7923, -501.117, -5.64998, 0.52 ) }
    dend_39 { pt3dadd( -80.8884, -502.126, -5.52995, 0.52 ) }
    dend_39 { pt3dadd( -80.8675, -503.133, -5.42097, 0.52 ) }
    dend_39 { pt3dadd( -80.7454, -504.407, -5.29151, 0.52 ) }
    dend_39 { pt3dadd( -80.4711, -506.481, -5.21897, 0.52 ) }
    dend_39 { pt3dadd( -80.1575, -508.12, -5.28101, 0.52 ) }
    dend_39 { pt3dadd( -79.815, -509.734, -5.40147, 0.52 ) }
    dend_39 { pt3dadd( -79.3402, -511.98, -5.63217, 0.52 ) }
    dend_39 { pt3dadd( -79.16, -512.918, -5.74873, 0.52 ) }
    dend_39 { pt3dadd( -78.8053, -515.461, -6.1175, 0.52 ) }
    dend_39 { pt3dadd( -78.7609, -516.372, -6.26316, 0.52 ) }
    dend_39 { pt3dadd( -78.8984, -517.641, -6.48307, 0.52 ) }
    dend_39 { pt3dadd( -79.2772, -518.979, -6.68456, 0.52 ) }
    dend_39 { pt3dadd( -79.6768, -519.965, -6.79238, 0.52 ) }
    dend_39 { pt3dadd( -80.1209, -520.912, -6.84533, 0.52 ) }
    dend_39 { pt3dadd( -80.5758, -521.814, -6.84397, 0.52 ) }
    dend_39 { pt3dadd( -81.4223, -523.491, -6.83743, 0.52 ) }
    dend_39 { pt3dadd( -82.4796, -525.718, -6.83135, 0.52 ) }
    dend_39 { pt3dadd( -83.1608, -527.346, -6.83974, 0.52 ) }
    dend_39 { pt3dadd( -84.0147, -529.471, -6.84937, 0.52 ) }
    dend_39 { pt3dadd( -84.5348, -530.799, -6.85071, 0.52 ) }
    dend_39 { pt3dadd( -85.0197, -532.056, -6.8395, 0.52 ) }
    dend_39 { pt3dadd( -85.4957, -533.403, -6.79174, 0.52 ) }
    dend_39 { pt3dadd( -86.0968, -535.511, -6.75112, 0.52 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 43/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -27.2456, -201.182, 46.5628, 0.44 ) }
    dend_58 { pt3dadd( -27.1486, -202.396, 47.9173, 0.44 ) }
    dend_58 { pt3dadd( -27.1148, -202.818, 48.3881, 0.44 ) }
    dend_58 { pt3dadd( -27.0795, -203.261, 48.8814, 0.44 ) }
    dend_58 { pt3dadd( -27.0536, -203.584, 49.2423, 0.44 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 48/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -27.2456, -201.182, 46.5628, 0.44 ) }
    dend_57 { pt3dadd( -26.0771, -201.497, 47.9661, 0.44 ) }
    dend_57 { pt3dadd( -24.8053, -201.84, 49.4933, 0.44 ) }
    dend_57 { pt3dadd( -24.1084, -202.028, 50.3302, 0.44 ) }
    dend_57 { pt3dadd( -23.5899, -202.168, 50.9528, 0.44 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 53/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -26.1581, -154.246, 22.8639, 0.44 ) }
    dend_53 { pt3dadd( -26.8888, -155.282, 23.8086, 0.44 ) }
    dend_53 { pt3dadd( -27.2671, -155.818, 24.2977, 0.44 ) }
    dend_53 { pt3dadd( -28.2918, -157.27, 25.6224, 0.44 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 57/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -26.1581, -154.246, 22.8639, 0.44 ) }
    dend_50 { pt3dadd( -26.3719, -152.973, 21.8702, 0.44 ) }
    dend_50 { pt3dadd( -26.9049, -149.53, 19.5014, 0.44 ) }
    dend_50 { pt3dadd( -27.0232, -148.592, 18.9467, 0.44 ) }
    dend_50 { pt3dadd( -27.1383, -147.62, 18.4371, 0.44 ) }
    dend_50 { pt3dadd( -27.2763, -146.533, 17.9656, 0.44 ) }
    dend_50 { pt3dadd( -27.4826, -145.273, 17.4945, 0.44 ) }
    dend_50 { pt3dadd( -28.0195, -142.003, 16.5289, 0.44 ) }
    dend_50 { pt3dadd( -28.2684, -140.209, 16.1639, 0.44 ) }
    dend_50 { pt3dadd( -28.4086, -139.25, 15.9501, 0.44 ) }
    dend_50 { pt3dadd( -28.7575, -137.131, 15.3977, 0.44 ) }
    dend_50 { pt3dadd( -29.3091, -133.862, 14.4857, 0.44 ) }
    dend_50 { pt3dadd( -29.5299, -132.487, 14.0955, 0.44 ) }
    dend_50 { pt3dadd( -29.7773, -130.626, 13.584, 0.44 ) }
    dend_50 { pt3dadd( -30.0485, -128.543, 12.9129, 0.44 ) }
    dend_50 { pt3dadd( -30.2842, -126.271, 12.0943, 0.44 ) }
    dend_50 { pt3dadd( -30.3653, -124.756, 11.4791, 0.44 ) }
    dend_50 { pt3dadd( -30.3602, -123.652, 11.0188, 0.44 ) }
    dend_50 { pt3dadd( -30.3505, -122.543, 10.5008, 0.44 ) }
    dend_50 { pt3dadd( -30.2824, -120.225, 9.34176, 0.44 ) }
    dend_50 { pt3dadd( -30.2149, -119.225, 8.85257, 0.44 ) }
    dend_50 { pt3dadd( -30.062, -118.127, 8.26807, 0.44 ) }
    dend_50 { pt3dadd( -29.9128, -117.218, 7.73892, 0.44 ) }
    dend_50 { pt3dadd( -29.5427, -115.189, 6.55444, 0.44 ) }
    dend_50 { pt3dadd( -29.4403, -114.634, 6.25344, 0.44 ) }
    dend_50 { pt3dadd( -29.2974, -113.886, 5.92197, 0.44 ) }
    dend_50 { pt3dadd( -29.174, -112.92, 5.59846, 0.44 ) }
    dend_50 { pt3dadd( -29.0957, -111.905, 5.38733, 0.44 ) }
    dend_50 { pt3dadd( -29.0327, -110.822, 5.21295, 0.44 ) }
    dend_50 { pt3dadd( -29.0226, -110.061, 5.04732, 0.44 ) }
    dend_50 { pt3dadd( -29.0361, -109.162, 4.78382, 0.44 ) }
    dend_50 { pt3dadd( -29.0691, -107.932, 4.37442, 0.44 ) }
    dend_50 { pt3dadd( -29.1066, -106.632, 3.92689, 0.44 ) }
    dend_50 { pt3dadd( -29.0764, -104.87, 3.28318, 0.44 ) }
    dend_50 { pt3dadd( -28.9194, -101.539, 1.90926, 0.44 ) }
    dend_50 { pt3dadd( -28.834, -100.42, 1.41118, 0.44 ) }
    dend_50 { pt3dadd( -28.7276, -99.1824, 0.805958, 0.44 ) }
    dend_50 { pt3dadd( -28.557, -97.5592, -0.0256977, 0.44 ) }
    dend_50 { pt3dadd( -28.2395, -95.25, -1.21006, 0.44 ) }
    dend_50 { pt3dadd( -27.8657, -92.9477, -2.35175, 0.44 ) }
    dend_50 { pt3dadd( -27.5855, -91.5209, -3.05043, 0.44 ) }
    dend_50 { pt3dadd( -27.1979, -89.499, -4.11597, 0.44 ) }
    dend_50 { pt3dadd( -26.9412, -88.1336, -4.90227, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_50 { pt3dadd( -26.65, -86.5011, -5.9362, 0.44 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -86.0968, -535.511, -6.75112, 0.52 ) }
    dend_41 { pt3dadd( -86.444, -537.442, -6.47404, 0.52 ) }
    dend_41 { pt3dadd( -86.6547, -538.614, -6.30582, 0.52 ) }
    dend_41 { pt3dadd( -86.8655, -539.785, -6.13762, 0.52 ) }
    dend_41 { pt3dadd( -87.0876, -541.02, -5.96033, 0.52 ) }
    dend_41 { pt3dadd( -87.407, -542.797, -5.70538, 0.52 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -86.0968, -535.511, -6.75112, 0.52 ) }
    dend_40 { pt3dadd( -85.5301, -537.288, -6.791, 0.52 ) }
    dend_40 { pt3dadd( -85.2229, -538.241, -6.75218, 0.52 ) }
    dend_40 { pt3dadd( -84.8774, -539.27, -6.60873, 0.52 ) }
    dend_40 { pt3dadd( -84.4769, -540.384, -6.4002, 0.52 ) }
    dend_40 { pt3dadd( -84.0733, -541.507, -6.19008, 0.52 ) }
    dend_40 { pt3dadd( -83.7838, -542.312, -6.03932, 0.52 ) }
    dend_40 { pt3dadd( -83.4295, -543.228, -5.78249, 0.52 ) }
    dend_40 { pt3dadd( -82.8197, -544.743, -5.28584, 0.52 ) }
    dend_40 { pt3dadd( -82.4099, -545.691, -4.91056, 0.52 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -27.0536, -203.584, 49.2423, 0.44 ) }
    dend_60 { pt3dadd( -27.2215, -204.778, 50.1648, 0.44 ) }
    dend_60 { pt3dadd( -27.4738, -206.246, 51.1457, 0.44 ) }
    dend_60 { pt3dadd( -27.6019, -207.05, 51.6298, 0.44 ) }
    dend_60 { pt3dadd( -27.7764, -208.517, 52.4453, 0.44 ) }
    dend_60 { pt3dadd( -27.9409, -210.411, 53.5484, 0.44 ) }
    dend_60 { pt3dadd( -27.9991, -211.735, 54.3223, 0.44 ) }
    dend_60 { pt3dadd( -28.0131, -212.739, 54.8445, 0.44 ) }
    dend_60 { pt3dadd( -27.9912, -213.483, 55.1895, 0.44 ) }
    dend_60 { pt3dadd( -27.9357, -214.366, 55.5846, 0.44 ) }
    dend_60 { pt3dadd( -27.7983, -216.463, 56.5383, 0.44 ) }
    dend_60 { pt3dadd( -27.7654, -217.455, 56.9685, 0.44 ) }
    dend_60 { pt3dadd( -27.8429, -218.428, 57.4005, 0.44 ) }
    dend_60 { pt3dadd( -28.058, -219.468, 57.8373, 0.44 ) }
    dend_60 { pt3dadd( -28.3454, -220.422, 58.1841, 0.44 ) }
    dend_60 { pt3dadd( -29.042, -222.388, 58.8872, 0.44 ) }
    dend_60 { pt3dadd( -29.3898, -223.249, 59.1708, 0.44 ) }
    dend_60 { pt3dadd( -30.1161, -224.844, 59.7102, 0.44 ) }
    dend_60 { pt3dadd( -30.5324, -225.738, 60.0123, 0.44 ) }
    dend_60 { pt3dadd( -31.0942, -227.093, 60.4551, 0.44 ) }
    dend_60 { pt3dadd( -32.0259, -229.936, 61.2965, 0.44 ) }
    dend_60 { pt3dadd( -32.2351, -230.765, 61.5003, 0.44 ) }
    dend_60 { pt3dadd( -32.5434, -232.249, 61.8407, 0.44 ) }
    dend_60 { pt3dadd( -32.6894, -233.059, 62.0009, 0.44 ) }
    dend_60 { pt3dadd( -32.9343, -234.479, 62.308, 0.44 ) }
    dend_60 { pt3dadd( -33.1639, -235.926, 62.6252, 0.44 ) }
    dend_60 { pt3dadd( -33.4011, -237.526, 62.9496, 0.44 ) }
    dend_60 { pt3dadd( -33.5709, -238.664, 63.2023, 0.44 ) }
    dend_60 { pt3dadd( -34.0741, -241.341, 63.8266, 0.44 ) }
    dend_60 { pt3dadd( -34.6343, -243.513, 64.3377, 0.44 ) }
    dend_60 { pt3dadd( -34.918, -244.38, 64.5412, 0.44 ) }
    dend_60 { pt3dadd( -35.3494, -245.468, 64.7445, 0.44 ) }
    dend_60 { pt3dadd( -35.8011, -246.424, 64.8636, 0.44 ) }
    dend_60 { pt3dadd( -36.6435, -247.881, 64.9288, 0.44 ) }
    dend_60 { pt3dadd( -37.2415, -248.781, 64.8886, 0.44 ) }
    dend_60 { pt3dadd( -37.698, -249.469, 64.8355, 0.44 ) }
    dend_60 { pt3dadd( -38.8997, -251.372, 64.741, 0.44 ) }
    dend_60 { pt3dadd( -39.6891, -252.764, 64.7102, 0.44 ) }
    dend_60 { pt3dadd( -40.3819, -254.202, 64.7209, 0.44 ) }
    dend_60 { pt3dadd( -41.0317, -255.889, 64.7889, 0.44 ) }
    dend_60 { pt3dadd( -41.6336, -257.929, 64.9356, 0.44 ) }
    dend_60 { pt3dadd( -41.9609, -259.351, 65.0795, 0.44 ) }
    dend_60 { pt3dadd( -42.1452, -260.576, 65.2451, 0.44 ) }
    dend_60 { pt3dadd( -42.3406, -262.16, 65.4926, 0.44 ) }
    dend_60 { pt3dadd( -42.5619, -263.513, 65.7156, 0.44 ) }
    dend_60 { pt3dadd( -42.9342, -264.944, 65.9503, 0.44 ) }
    dend_60 { pt3dadd( -43.3755, -266.394, 66.1704, 0.44 ) }
    dend_60 { pt3dadd( -43.807, -267.531, 66.3575, 0.44 ) }
    dend_60 { pt3dadd( -44.6917, -269.287, 66.6706, 0.44 ) }
    dend_60 { pt3dadd( -45.907, -271.037, 67.0151, 0.44 ) }
    dend_60 { pt3dadd( -46.674, -271.861, 67.1956, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 68/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -27.0536, -203.584, 49.2423, 0.44 ) }
    dend_59 { pt3dadd( -28.0632, -204.231, 49.0032, 0.44 ) }
    dend_59 { pt3dadd( -28.781, -204.69, 48.8332, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 71/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -26.65, -86.5011, -5.9362, 0.44 ) }
    dend_52 { pt3dadd( -29.0901, -84.9037, -6.42998, 0.44 ) }
    dend_52 { pt3dadd( -30.197, -84.179, -6.65398, 0.44 ) }
    dend_52 { pt3dadd( -31.0416, -83.6261, -6.8249, 0.44 ) }
    dend_52 { pt3dadd( -32.596, -82.6085, -7.13944, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 76/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -26.65, -86.5011, -5.9362, 0.44 ) }
    dend_51 { pt3dadd( -25.8296, -83.8368, -6.55323, 0.44 ) }
    dend_51 { pt3dadd( -25.0389, -81.2687, -7.14793, 0.44 ) }
    dend_51 { pt3dadd( -24.0949, -78.203, -7.85788, 0.44 ) }
    dend_51 { pt3dadd( -23.6396, -76.7241, -8.20038, 0.44 ) }
    dend_51 { pt3dadd( -23.2624, -75.4991, -8.48404, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_75, dend_30, dend_16, dend_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_29, dend_0, axon_0, dend_75, dend_30, dend_16, dend_1, axon_1, dend_89, dend_76, dend_72, dend_31, dend_28, dend_17, dend_13, dend_2, dend_91, dend_90, dend_78, dend_77, dend_74, dend_73, dend_67, dend_32, dend_27, dend_18, dend_15, dend_14, dend_10, dend_3, dend_93, dend_92, dend_80, dend_79, dend_71, dend_68, dend_64, dend_33, dend_24, dend_19, dend_12, dend_11, dend_9, dend_4, dend_88, dend_81, dend_70, dend_69, dend_66, dend_65, dend_45, dend_34, dend_26, dend_25, dend_21, dend_20, dend_6, dend_5, dend_83, dend_82, dend_63, dend_46, dend_44, dend_35, dend_23, dend_22, dend_8, dend_7, dend_85, dend_84, dend_62, dend_47, dend_43, dend_36, dend_87, dend_86, dend_55, dend_48, dend_38, dend_37, dend_61, dend_56, dend_54, dend_49, dend_42, dend_39, dend_58, dend_57, dend_53, dend_50, dend_41, dend_40, dend_60, dend_59, dend_52, dend_51]}
    ModelViewParmSubset_5 = new SectionList()
    dend_29 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_72 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_90 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_74 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_73 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_71 OneSecGrp_SectionRef_36.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_68 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_24 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_19 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_81 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_70 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_6 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_46 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_44 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_8 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_7 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_85 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_38 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_50 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_60 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_75 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_76 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_77 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_78 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_16 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_79 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_80 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_10 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_89 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_17 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_88 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_32 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_91 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_93 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_92 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_82 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_64 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_65 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_84 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_69 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_66 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_86 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_87 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_34 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_25 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_26 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_21 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_45 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_23 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_63 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_43 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_36 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_37 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_62 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_47 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_56 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_54 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_58 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_59 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_57 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_49 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_53 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_42 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_39 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_52 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_51 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_41 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_40 OneSecGrp_SectionRef_93.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_63, dend_63, dend_63, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_62, dend_62, dend_62, dend_62, dend_62, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_72 nseg = 5
    dend_28 nseg = 3
    dend_13 nseg = 3
    dend_90 nseg = 15
    dend_74 nseg = 3
    dend_73 nseg = 5
    dend_27 nseg = 19
    dend_3 nseg = 3
    dend_71 nseg = 3
    dend_68 nseg = 3
    dend_33 nseg = 9
    dend_24 nseg = 9
    dend_19 nseg = 9
    dend_11 nseg = 3
    dend_9 nseg = 5
    dend_4 nseg = 5
    dend_81 nseg = 3
    dend_70 nseg = 3
    dend_6 nseg = 5
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_8 nseg = 5
    dend_7 nseg = 3
    dend_85 nseg = 3
    dend_38 nseg = 5
    dend_50 nseg = 3
    dend_60 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_DBC_d59edbb45e_0_0


