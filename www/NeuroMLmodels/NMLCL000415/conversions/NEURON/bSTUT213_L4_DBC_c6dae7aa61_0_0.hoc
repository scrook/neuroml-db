// Cell: bSTUT213_L4_DBC_c6dae7aa61_0_0
/*
{
  "id" : "bSTUT213_L4_DBC_c6dae7aa61_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.7707, 14.3445, 1.63673, 2.6356", "1.65855, 13.0663, 1.48326, 4.68599", "1.5464, 11.788, 1.32978, 5.81905", "1.43425, 10.5097, 1.1763, 6.95808", "1.32209, 9.23142, 1.02283, 8.17562", "1.20994, 7.95314, 0.869351, 9.23498", "1.09779, 6.67486, 0.715875, 9.66374", "0.985636, 5.39658, 0.562399, 9.75915", "0.873483, 4.1183, 0.408922, 9.85456", "0.76133, 2.84002, 0.255446, 9.99274", "0.649178, 1.56175, 0.101969, 10.3671", "0.537025, 0.283466, -0.051507, 11.1059", "0.424873, -0.994813, -0.204983, 11.9164", "0.31272, -2.27309, -0.35846, 12.7207", "0.200568, -3.55137, -0.511936, 12.9931", "0.0884149, -4.82965, -0.665413, 12.8706", "-0.0237377, -6.10793, -0.818889, 12.7481", "-0.13589, -7.38621, -0.972365, 11.5655", "-0.248043, -8.66449, -1.12584, 9.82802", "-0.360195, -9.94277, -1.27932, 4.98087", "-0.472348, -11.221, -1.43279, 2.92263" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.24391, 17.0095, 5.96094, 3.33", "0.973882, 24.1666, 6.99197, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.08609, -3.64399, 6.39094, 1.33", "-9.5822, -3.80446, 6.70531, 0.67", "-10.9508, -4.15759, 6.8303, 0.67", "-12.4757, -4.56279, 6.94438, 0.67", "-15.3418, -5.04066, 7.1295, 0.67", "-17.1794, -5.22881, 7.23503, 0.67", "-20.6344, -5.35693, 7.4116, 0.67", "-25.1997, -5.30762, 7.59321, 0.67", "-26.7745, -5.29438, 7.67726, 0.67", "-29.3225, -5.32211, 7.8446, 0.67", "-30.6217, -5.44068, 7.8221, 0.67", "-32.4297, -5.67228, 7.50241, 0.67", "-33.6737, -5.77356, 7.1228, 0.67", "-35.4739, -5.8188, 6.51607, 0.67", "-37.5919, -5.9858, 5.81805, 0.67", "-42.7772, -6.3384, 4.39849, 0.67", "-45.2877, -6.32861, 3.91853, 0.67", "-47.9123, -6.04611, 3.70645, 0.67", "-50.1957, -5.62234, 3.77419, 0.67", "-51.4955, -5.29359, 3.90725, 0.67", "-54.759, -4.22766, 4.47861, 0.67", "-58.5542, -2.82493, 5.39153, 0.67", "-62.6161, -1.2031, 6.34611, 0.67", "-65.637, 0.127071, 7.02018, 0.33", "-66.5266, 0.573471, 7.20677, 0.67", "-68.6642, 1.6638, 7.60104, 1.33", "-73.6161, 4.16397, 8.30397, 0.67", "-74.6446, 4.68633, 8.35389, 0.67", "-77.3537, 6.00703, 8.17482, 1.33", "-79.7895, 7.17528, 7.87674, 0.67", "-83.4443, 8.80301, 7.34906, 0.67", "-86.5011, 9.93905, 6.84391, 0.67", "-90.2529, 11.1132, 6.05276, 0.67", "-91.6772, 11.5034, 5.73733, 1.33", "-94.1299, 12.0567, 5.15593, 0.33", "-95.6821, 12.3777, 4.81102, 1.33", "-99.2138, 13.2316, 4.00855, 0.67", "-102.343, 13.668, 3.49098, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.04391, -10.0175, 0.670944, 2.67", "7.04037, -13.5302, 2.92418, 2.0", "10.6506, -19.8823, 6.9988, 2.0", "13.9729, -25.7276, 10.7483, 2.0", "15.3062, -28.0736, 12.2532, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.472348, -11.221, -1.43279, 0.67", "-1.78337, -26.1636, -1.43279, 0.67", "-3.0944, -41.1062, -1.43279, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.973882, 24.1666, 6.99197, 2.67", "0.123163, 26.3263, 8.50658, 2.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.973882, 24.1666, 6.99197, 1.33", "-3.03868, 22.3918, -16.839, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-102.343, 13.668, 3.49098, 0.67", "-106.221, 15.7084, 3.52682, 0.67", "-111.007, 17.495, 2.59345, 0.67", "-113.57, 18.072, 1.82309, 0.33", "-114.58, 18.2832, 1.49211, 0.67", "-116.062, 18.5213, 0.877956, 0.67", "-118.259, 18.8238, -0.0917473, 0.67", "-123.691, 19.2283, -2.91818, 0.67", "-127.116, 19.5194, -4.90582, 0.67", "-129.088, 19.7548, -6.08526, 0.67", "-133.079, 20.4673, -8.38093, 2.0", "-134.941, 20.927, -9.45173, 0.33", "-136.72, 21.5281, -10.4215, 0.67", "-137.998, 22.0568, -10.9754, 1.33", "-140.763, 23.4452, -12.3793, 0.33", "-142.046, 24.108, -13.0035, 2.0" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-102.343, 13.668, 3.49098, 0.33", "-102.167, 12.438, 3.72759, 0.33", "-102.027, 11.4612, 3.9155, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.3062, -28.0736, 12.2532, 1.33", "18.6057, -34.0909, 1.53821, 1.33", "19.8827, -36.4198, -2.60885, 0.67", "20.7167, -37.9407, -5.31716, 0.67", "21.3629, -39.1192, -7.4157, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.3062, -28.0736, 12.2532, 0.67", "15.2875, -32.774, 12.0123, 0.67", "15.4832, -36.1744, 12.1734, 0.67", "15.7911, -40.8919, 12.557, 0.67", "16.3033, -46.4245, 13.0707, 1.33", "16.763, -51.2037, 13.5078, 1.33", "17.7549, -59.6845, 14.2461, 1.33", "18.3852, -62.9291, 14.5625, 1.33", "19.3068, -67.046, 14.9998, 1.33", "20.0042, -70.2348, 15.2982, 1.33", "20.7234, -73.7052, 15.6529, 1.33", "21.4458, -77.6248, 15.9039, 1.33", "22.7103, -84.6756, 15.8141, 0.67", "23.2475, -87.9205, 15.7637, 1.33", "23.6422, -90.1878, 15.7256, 1.33", "24.5241, -96.404, 15.8753, 1.33", "24.9375, -99.9037, 15.9365, 1.33", "25.2263, -104.363, 15.9936, 0.67", "25.3637, -109.785, 16.0968, 1.33", "25.4287, -113.235, 16.1074, 0.67", "25.5026, -123.137, 15.9736, 1.33", "25.4849, -127.861, 15.9147, 1.33", "25.5894, -131.233, 15.8473, 1.33", "25.76, -134.45, 15.7491, 1.33", "26.0978, -138.936, 15.7202, 1.33", "26.352, -141.348, 15.7456, 1.33", "27.437, -147.816, 15.7646, 2.0", "28.3882, -152.366, 16.0421, 1.33", "28.8856, -154.308, 16.1899, 2.0", "30.4138, -160.045, 16.8021, 2.0", "30.981, -162.24, 17.2412, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.0944, -41.1062, -1.43279, 0.33", "-4.40542, -56.0488, -1.43279, 0.33", "-5.71644, -70.9914, -1.43279, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "0.123163, 26.3263, 8.50658, 0.67", "0.483472, 28.4392, 10.0005, 0.67", "1.09939, 32.0509, 12.5541, 0.67", "2.5606, 40.6196, 18.6125, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.123163, 26.3263, 8.50658, 2.67", "0.0892664, 32.1832, 3.24155, 2.67", "0.0664932, 36.1182, -0.295702, 2.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.03868, 22.3918, -16.839, 1.33", "-5.39901, 25.6478, -21.3907, 1.33", "-6.81395, 27.5997, -24.1193, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.03868, 22.3918, -16.839, 0.67", "0.191159, 20.0798, -14.7651, 0.67", "3.40035, 17.8255, -12.1318, 0.33", "5.3336, 16.598, -10.3653, 0.67", "6.87816, 15.7077, -8.91266, 0.67", "8.40426, 14.8128, -7.47308, 0.33", "9.3792, 14.2801, -6.56199, 0.67", "12.9317, 13.002, -3.65634, 0.33", "14.1652, 12.6533, -2.6841, 0.67", "16.8068, 11.9501, -0.839037, 0.33", "18.3255, 11.6526, 0.0626493, 0.67", "20.05, 11.4324, 0.89415, 0.33", "22.6314, 11.3619, 1.90763, 0.67", "24.8455, 11.4694, 2.45867, 0.33", "26.5632, 11.5753, 2.87414, 0.67", "27.6425, 11.7402, 3.1308, 0.33", "29.1542, 12.0499, 3.51513, 1.33", "33.1878, 12.8614, 4.66818, 0.33", "35.3972, 13.4452, 5.5118, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-142.046, 24.108, -13.0035, 0.33", "-143.502, 21.4832, -11.437, 0.33", "-144.617, 19.4725, -10.2369, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-142.046, 24.108, -13.0035, 0.33", "-145.014, 24.7317, -11.9553, 0.33", "-146.003, 24.9397, -11.6058, 0.67", "-148.875, 25.5434, -10.5912, 0.33", "-151.364, 26.0665, -9.71215, 0.67", "-153.142, 26.4401, -9.08421, 0.33", "-154.229, 26.6687, -8.70014, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "21.3629, -39.1192, -7.4157, 0.67", "23.7619, -40.0632, -9.47628, 0.67", "25.4856, -40.8009, -10.7461, 0.67", "29.2872, -42.0626, -13.0665, 1.33", "30.5603, -42.2662, -13.6537, 0.67", "33.5826, -42.4256, -14.6906, 0.67", "35.1798, -42.4742, -15.0355, 1.33", "37.2471, -42.4454, -15.361, 0.67", "39.5909, -42.2786, -15.3466, 0.67", "42.9931, -41.5693, -14.8047, 0.67", "44.3743, -41.1381, -14.4893, 0.67", "46.9129, -40.1477, -13.6802, 0.67", "50.49, -38.3605, -12.4414, 1.33", "52.3297, -37.315, -11.8123, 0.67", "54.4454, -35.9477, -11.1195, 1.33", "55.4622, -35.2136, -10.9689, 0.67", "56.1638, -34.6675, -10.9872, 1.33", "57.1073, -33.833, -11.1432, 0.67", "58.7426, -32.3672, -11.5213, 0.67", "60.6497, -30.805, -12.0488, 1.33", "64.1484, -28.335, -12.9624, 0.67", "65.9301, -27.1454, -13.3936, 0.33", "67.538, -26.1089, -13.8582, 0.33", "68.8291, -25.3905, -14.3574, 0.67", "70.42, -24.5801, -15.1575, 0.67", "72.0305, -23.8542, -16.0032, 0.67", "72.7545, -23.5268, -16.3756, 0.67", "76.4672, -21.8516, -18.3549, 2.0", "80.1084, -20.3331, -20.4087, 0.33", "82.3505, -19.4115, -21.8037, 0.67", "83.166, -19.1027, -22.3583, 0.33", "83.9813, -18.7832, -22.9525, 0.67", "84.7738, -18.478, -23.541, 0.33", "87.0836, -17.5647, -24.9477, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "21.3629, -39.1192, -7.4157, 0.67", "22.6729, -44.057, -9.19601, 0.67", "23.8343, -48.0583, -10.7445, 0.67", "24.363, -49.7538, -11.3868, 0.67", "26.0498, -55.4239, -13.3987, 1.33", "26.6038, -57.351, -14.0261, 2.0", "27.529, -60.6852, -15.0383, 0.67", "28.1486, -63.0405, -15.8209, 1.33", "28.6882, -65.5525, -16.5928, 0.67", "29.4437, -69.5535, -17.6033, 0.67", "29.9257, -72.6172, -18.1196, 1.33", "30.2403, -74.6795, -18.5072, 0.33", "30.4904, -76.55, -18.8827, 0.33", "30.7044, -78.9454, -19.3827, 0.67", "30.8176, -80.422, -19.7506, 1.33", "31.0865, -83.3295, -20.5405, 0.67", "31.41, -87.0176, -21.3411, 0.67", "31.751, -91.1691, -22.0315, 1.33", "32.0293, -95.0474, -22.5012, 0.67", "32.1056, -97.183, -22.6811, 2.67", "32.0729, -99.5987, -22.6271, 0.67", "31.7677, -104.84, -22.3084, 0.67", "31.5629, -106.713, -22.1254, 0.33", "31.3052, -108.865, -21.9059, 0.67", "31.1339, -110.382, -21.7889, 0.33", "30.5427, -115.905, -21.6351, 2.0", "30.0749, -121.919, -21.9825, 0.67", "30.0192, -123.256, -22.1743, 0.67", "30.0451, -125.405, -22.4864, 0.67", "30.1674, -128.076, -22.9014, 1.33", "30.303, -130.456, -23.3173, 0.67", "30.5789, -134.072, -24.1341, 0.67", "30.7076, -135.936, -24.4756, 1.33", "30.8982, -138.652, -25.0199, 0.67", "31.1808, -142.764, -26.037, 0.67", "31.2802, -144.231, -26.3688, 0.67", "31.4364, -146.493, -26.8098, 0.67", "31.5323, -148.654, -27.1878, 0.67", "31.58, -149.825, -27.444, 1.33", "31.5985, -152.798, -28.2162, 0.67", "31.7782, -157.021, -29.3306, 2.0", "31.9474, -160.603, -30.0577, 0.67", "31.9889, -161.864, -30.2465, 0.67", "32.026, -166.692, -30.7736, 1.33", "32.0405, -168.703, -30.9259, 0.67", "32.0283, -171.895, -31.0439, 0.67", "31.9422, -175.752, -31.1434, 1.33", "31.8524, -179.648, -31.0084, 0.67", "31.7631, -182.481, -30.8233, 0.67", "31.6672, -185.322, -30.6457, 0.67", "31.6112, -187.676, -30.6852, 0.67", "31.5559, -190.388, -30.9506, 2.0", "31.6461, -194.365, -31.6247, 0.67", "31.8338, -198.362, -32.4503, 0.67", "32.0423, -201.785, -33.1231, 2.0", "32.3636, -206.325, -33.9104, 0.67", "32.6768, -209.049, -34.3147, 1.33", "33.0569, -211.964, -34.6451, 0.67", "33.1981, -213.295, -34.7397, 0.67", "33.7689, -217.765, -34.7943, 2.0", "34.1146, -220.591, -34.695, 0.67", "34.4123, -222.85, -34.599, 0.67", "35.2388, -229.16, -34.4877, 0.67", "35.4489, -230.892, -34.5263, 0.67", "35.7958, -233.848, -34.7213, 0.67", "36.105, -236.21, -35.1216, 0.67", "36.3774, -238.926, -35.6058, 2.0", "36.5425, -240.991, -36.0086, 0.67", "36.9028, -244.52, -36.7269, 1.33", "37.1008, -246.585, -37.1711, 0.67", "37.3115, -250.734, -38.1798, 0.67", "37.4706, -254.538, -39.1822, 1.33", "37.5564, -257.248, -39.9632, 2.0" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "30.981, -162.24, 17.2412, 1.33", "29.6453, -163.521, 17.3945, 1.33", "28.6258, -164.498, 17.5116, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "30.981, -162.24, 17.2412, 0.67", "31.8713, -167.925, 15.3945, 0.67", "32.7908, -173.797, 13.4872, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "2.5606, 40.6196, 18.6125, 0.33", "4.17602, 42.5744, 20.1288, 0.33", "4.99194, 43.4647, 20.8412, 0.67", "7.66455, 45.9082, 22.9953, 0.67", "8.91829, 47.0544, 24.0058, 0.33", "9.75663, 47.8209, 24.6814, 0.33", "11.884, 49.7659, 26.3961, 0.67", "12.7471, 50.5958, 27.2502, 0.33", "14.4757, 52.0273, 28.8796, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "2.5606, 40.6196, 18.6125, 0.67", "2.84179, 42.84, 20.5713, 0.67", "3.07147, 44.6536, 22.1713, 0.33", "3.2395, 45.9805, 23.3418, 0.67", "3.70779, 49.6784, 26.604, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "0.0664932, 36.1182, -0.295702, 0.67", "2.5334, 39.2464, -4.781, 0.67", "3.46362, 40.426, -6.4723, 0.67", "5.51773, 43.0308, -10.2071, 0.67", "6.28885, 44.0086, -11.6091, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "0.0664932, 36.1182, -0.295702, 2.0", "-2.31627, 42.431, -0.0965158, 2.0" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-6.81395, 27.5997, -24.1193, 0.67", "-5.31608, 34.8349, -20.8987, 0.67", "-4.64885, 37.1843, -19.8867, 0.67", "-2.05758, 44.3921, -17.0077, 0.33", "-1.34366, 46.1743, -16.3464, 0.33", "0.0103182, 49.4677, -15.1977, 1.33", "0.824343, 51.398, -14.6354, 0.67", "2.23932, 55.0965, -13.527, 0.33", "3.5633, 57.8898, -13.0587, 1.33", "4.56818, 59.5836, -13.0312, 0.33", "5.29439, 60.714, -13.0329, 0.67", "7.03767, 63.3458, -13.3231, 0.33", "8.48105, 65.5973, -13.7438, 0.67", "10.4314, 68.7184, -14.5069, 1.33", "11.9244, 71.3074, -14.9493, 0.33", "12.8237, 72.8819, -15.1192, 0.67", "16.0656, 78.724, -15.4042, 0.33", "17.1361, 80.8528, -15.3695, 0.33", "18.1095, 83.099, -15.2751, 0.67", "20.1099, 88.7032, -14.8939, 0.33", "20.814, 90.8669, -14.6995, 0.33", "21.2924, 92.5147, -14.4792, 0.67", "21.934, 95.1169, -13.9566, 2.0", "22.5037, 97.7866, -13.5716, 0.33", "22.8431, 99.578, -13.3974, 0.33", "23.1543, 100.84, -13.2488, 0.67", "23.7011, 102.825, -12.9972, 0.33", "23.9809, 103.734, -12.8614, 0.67", "25.0193, 106.665, -12.3239, 0.33", "25.8276, 108.757, -11.8522, 0.33", "28.2573, 114.888, -10.1998, 0.33", "29.5062, 117.986, -9.20151, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-6.81395, 27.5997, -24.1193, 0.67", "-8.9258, 29.6676, -27.661, 0.67", "-10.0439, 30.7624, -29.5361, 0.67", "-14.0299, 34.6655, -36.221, 2.0" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "87.0836, -17.5647, -24.9477, 0.33", "87.8976, -16.5551, -26.5943, 0.33", "88.1248, -16.2734, -27.0539, 0.67", "89.9578, -13.9999, -30.7621, 0.33", "90.814, -12.9381, -32.4939, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "87.0836, -17.5647, -24.9477, 0.33", "87.8874, -17.804, -24.429, 0.33", "88.0204, -17.8437, -24.3468, 0.67", "89.0976, -18.1409, -24.0517, 0.33", "89.9302, -18.3979, -23.9543, 1.33", "91.3451, -18.9289, -23.8145, 0.33", "91.8835, -19.1698, -23.7674, 0.33", "93.0466, -19.8743, -23.7432, 1.33", "95.5582, -21.7689, -24.0214, 0.33", "96.0431, -22.3213, -24.1674, 0.33", "96.7785, -23.3659, -24.4977, 0.67", "97.1845, -24.0694, -24.7196, 0.67", "97.6876, -25.1425, -24.9598, 0.33", "98.2003, -26.474, -25.2006, 0.67", "99.0763, -29.1772, -25.4377, 0.33", "99.1311, -29.3351, -25.4567, 0.67", "99.7616, -30.9423, -25.7296, 0.33", "100.181, -32.0198, -25.8984, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "37.5564, -257.248, -39.9632, 0.33", "40.0205, -258.61, -38.4502, 0.33", "40.8663, -259.143, -37.9002, 0.67", "41.5757, -259.833, -37.3201, 0.67", "42.7737, -261.059, -36.3348, 0.33", "44.6757, -262.957, -34.9163, 2.0", "47.2302, -265.495, -32.7938, 0.33", "47.9082, -266.257, -32.1443, 1.33", "52.6825, -272.118, -27.1753, 0.67", "53.6577, -273.43, -26.0953, 0.33", "54.7729, -275.046, -24.7759, 1.33", "57.8108, -279.692, -21.0124, 0.67", "58.6876, -281.053, -19.5499, 0.67", "59.1055, -281.655, -18.598, 1.33", "59.5586, -282.312, -16.8785, 0.33", "59.9393, -283.293, -14.5605, 0.33", "60.069, -284.424, -12.4126, 0.33", "60.4355, -287.929, -5.81929, 0.67", "60.5283, -288.528, -4.59781, 0.67", "60.6497, -289.538, -2.52587, 0.67", "60.6881, -290.942, 0.0685352, 0.33", "60.4868, -293.321, 3.25898, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "37.5564, -257.248, -39.9632, 0.67", "37.6572, -260.153, -41.1355, 0.67", "37.7947, -264.117, -42.7351, 0.67", "37.9823, -269.523, -44.9173, 0.33", "38.0837, -272.445, -46.0964, 2.0", "38.2385, -276.907, -47.8975, 0.33", "38.3115, -279.009, -48.7457, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "32.7908, -173.797, 13.4872, 0.33", "27.1428, -178.075, 15.6793, 0.33", "25.4737, -179.526, 16.1303, 0.33", "22.6254, -182.384, 16.5969, 0.33", "21.4385, -183.756, 16.7155, 0.33", "18.8939, -186.748, 16.5144, 0.67", "17.3251, -188.622, 16.2636, 0.67", "15.4683, -190.971, 15.6201, 1.33", "13.5579, -193.557, 14.9034, 0.33", "12.2952, -195.438, 14.3144, 0.33", "8.88393, -200.726, 12.54, 0.33", "7.81874, -202.594, 11.7243, 1.33", "6.51483, -205.132, 10.5683, 0.33", "5.40734, -207.55, 9.40364, 0.33", "3.4964, -212.158, 7.01913, 0.67", "2.41356, -215.241, 5.34761, 1.33", "1.16226, -221.767, 1.81063, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "32.7908, -173.797, 13.4872, 0.67", "33.0958, -177.011, 13.6244, 0.67", "33.2674, -179.008, 13.7958, 1.33", "33.7912, -185.765, 14.5055, 0.67", "33.9554, -187.267, 14.6728, 0.67", "34.1129, -188.703, 14.7844, 0.67", "34.4295, -191.902, 14.8805, 0.67", "34.583, -193.623, 14.9324, 1.33", "34.8207, -196.166, 14.995, 0.67", "35.2442, -199.849, 14.9994, 0.67", "35.5465, -202.619, 14.8521, 0.67", "35.833, -204.957, 14.4969, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "6.28885, 44.0086, -11.6091, 1.33", "9.22099, 46.1621, -10.0484, 0.33", "10.2375, 46.9087, -9.50727, 1.33", "13.399, 49.2308, -7.82442, 0.33", "15.6028, 50.8493, -6.65141, 0.67" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "6.28885, 44.0086, -11.6091, 1.33", "5.98653, 44.4123, -13.2969, 1.33", "5.70528, 45.4167, -16.7366, 0.67", "5.56787, 46.7513, -20.8422, 1.33", "5.55366, 47.2195, -22.5163, 1.33", "5.69367, 48.6756, -27.7308, 0.67", "5.82176, 49.1469, -29.5366, 1.33", "6.38129, 50.4632, -34.4811, 0.67", "6.55232, 50.7082, -35.2876, 1.33", "7.54503, 51.6149, -38.4939, 0.67", "8.15264, 51.965, -40.0616, 1.33", "10.0904, 52.5817, -44.2636, 0.67", "10.4404, 52.6406, -44.9228, 1.33", "11.3832, 52.7086, -46.1832, 0.67", "12.09, 52.7289, -46.9509, 1.33", "14.0153, 52.7107, -48.2556, 0.33", "14.7325, 52.6445, -48.6138, 0.67", "15.7164, 52.6045, -48.9057, 0.33", "16.1007, 52.603, -49.0168, 0.33", "17.8634, 52.5897, -49.5364, 2.0", "19.7872, 52.6819, -50.0943, 0.67", "21.9733, 53.0031, -50.7602, 0.33", "23.663, 53.3722, -51.3062, 1.33", "24.6888, 53.6796, -51.6438, 1.33", "26.1958, 54.2154, -52.1497, 0.33", "26.9692, 54.576, -52.4564, 1.33", "28.9631, 55.7269, -53.3628, 0.33", "29.3364, 55.9586, -53.5022, 1.33", "30.2213, 56.5357, -53.8072, 0.33", "30.5719, 56.8076, -53.9195, 0.67", "32.1909, 58.2365, -54.4094, 0.33", "32.5223, 58.5418, -54.4857, 0.67", "34.3043, 60.1869, -54.7414, 0.33", "34.9316, 60.7553, -54.8053, 1.33", "35.7715, 61.4867, -54.8586, 0.33", "35.9305, 61.6218, -54.8852, 0.67", "37.3928, 62.8497, -55.3541, 0.33", "37.8743, 63.2492, -55.5303, 1.33", "39.2272, 64.2053, -56.0607, 0.33", "39.8616, 64.5427, -56.2248, 0.67", "42.8221, 65.5184, -56.6374, 0.67", "44.208, 65.6173, -56.6341, 0.33", "47.6693, 65.4628, -56.4264, 2.0", "50.0573, 65.1678, -56.0722, 0.33", "51.5269, 64.8474, -55.6847, 0.33", "52.6086, 64.5666, -55.28, 0.67", "55.101, 63.8546, -54.0395, 0.33" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-2.31627, 42.431, -0.0965158, 2.0", "-0.854907, 48.4063, -6.1549, 2.0" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.31627, 42.431, -0.0965158, 0.67", "-2.42776, 47.6399, 0.88959, 0.67", "-2.45698, 51.5239, 1.52727, 0.67", "-2.55663, 55.0567, 2.05895, 0.67", "-2.70329, 59.2231, 2.54349, 0.67", "-2.98645, 64.7693, 3.05269, 0.67", "-3.15231, 68.2829, 3.31855, 1.33", "-3.65601, 77.1883, 3.85944, 0.67", "-3.91616, 80.6911, 3.84617, 0.67", "-4.26945, 86.1917, 3.71538, 0.67", "-4.35874, 89.078, 3.62103, 0.67", "-4.34049, 91.2947, 3.49873, 1.33", "-4.17879, 94.8083, 3.52885, 0.67", "-3.66538, 101.793, 4.33649, 0.67", "-2.97916, 107.287, 5.31621, 0.67", "-2.42848, 110.549, 6.29187, 1.33", "-1.99253, 112.59, 7.11768, 0.67", "-1.27426, 115.793, 8.89534, 0.67", "-0.780792, 117.299, 10.2089, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "29.5062, 117.986, -9.20151, 0.33", "30.8529, 118.178, -9.86206, 0.33", "32.8504, 118.464, -10.8419, 0.67", "34.1871, 118.655, -11.4975, 0.33", "34.9377, 118.762, -11.8656, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "29.5062, 117.986, -9.20151, 1.33", "29.8007, 119.796, -10.0849, 1.33", "30.2924, 122.685, -11.7765, 0.33", "30.3839, 123.145, -12.1001, 0.67", "30.8451, 125.469, -13.9559, 0.33", "31.0432, 126.376, -14.5609, 0.67", "32.4832, 132.246, -17.855, 0.33", "32.7126, 132.945, -18.1941, 0.67", "33.9168, 135.973, -19.4942, 0.33", "35.0724, 138.984, -20.4083, 0.67", "37.8563, 146.581, -21.8351, 0.33", "38.1557, 147.429, -21.9001, 0.67", "39.9878, 151.968, -21.3339, 0.33", "42.8489, 159.263, -20.6127, 1.33", "43.6053, 161.268, -20.3932, 0.33", "43.823, 162.011, -20.6062, 0.67", "44.6769, 165.587, -22.4916, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-14.0299, 34.6655, -36.221, 0.33", "-14.4503, 37.0146, -38.4202, 0.33", "-14.8649, 39.0495, -40.0761, 0.33", "-15.4671, 41.9075, -42.097, 0.67", "-15.6737, 43.183, -43.0436, 0.33", "-16.0642, 45.4171, -44.6651, 1.33", "-17.0286, 49.8339, -47.9323, 0.33", "-17.6341, 52.3984, -49.7086, 1.33", "-18.1862, 54.1888, -50.8777, 0.33", "-19.9486, 59.2253, -53.7904, 0.33", "-20.8269, 61.4963, -54.9805, 0.33", "-22.3492, 65.0908, -56.5085, 1.33", "-23.6038, 67.8561, -57.4513, 0.33", "-24.605, 69.9462, -58.1552, 0.33", "-25.0409, 70.8195, -58.3988, 1.33", "-26.2793, 73.189, -58.8432, 0.33", "-27.0811, 74.8863, -59.1892, 2.0", "-29.3956, 80.2043, -60.2693, 0.33", "-29.746, 81.0373, -60.3442, 0.67", "-30.5822, 83.2013, -60.2658, 0.33", "-30.8166, 83.8648, -60.135, 0.67", "-31.468, 85.8814, -59.5027, 0.33", "-31.8577, 87.073, -59.0837, 0.67", "-34.3626, 94.6508, -55.9136, 0.33", "-34.9066, 96.4237, -55.3395, 2.67", "-36.6315, 102.39, -53.8321, 0.33", "-36.8955, 103.354, -53.6637, 0.67", "-37.9229, 107.183, -53.307, 0.33", "-38.3386, 108.804, -53.3425, 0.67", "-39.6657, 114.229, -54.2226, 0.33", "-40.0356, 115.764, -54.5089, 0.67", "-40.4427, 117.454, -54.8897, 2.0", "-40.9328, 119.614, -55.3676, 0.33", "-41.2098, 121.205, -55.677, 2.0", "-41.6083, 123.676, -56.1911, 0.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-14.0299, 34.6655, -36.221, 0.67", "-15.3294, 35.5168, -37.8765, 0.67", "-16.8243, 36.5419, -39.0992, 0.33", "-20.9718, 39.3194, -41.354, 0.67", "-22.7369, 40.4111, -42.0204, 0.67", "-23.8174, 41.0153, -42.3037, 0.33", "-25.1199, 41.6983, -42.5608, 0.33", "-28.1474, 43.2864, -42.8733, 0.33", "-30.2017, 44.2661, -42.8932, 1.33", "-32.1771, 44.9545, -42.6786, 0.33", "-34.4847, 45.552, -42.4144, 0.67", "-35.6705, 45.8025, -42.2691, 0.33", "-37.6968, 46.2092, -41.9998, 0.33", "-38.6065, 46.4382, -41.9681, 0.67", "-40.4064, 46.9542, -42.121, 0.33", "-41.2815, 47.2445, -42.3053, 0.33", "-42.2383, 47.523, -42.7137, 1.33", "-43.9256, 47.8875, -43.7073, 1.33", "-47.6043, 48.1995, -46.4532, 0.33", "-48.9516, 48.3024, -47.5366, 0.33", "-49.4518, 48.3122, -47.9799, 0.67", "-52.3225, 48.0595, -50.6305, 0.33", "-53.0394, 47.9025, -51.328, 1.33", "-56.017, 46.6875, -54.2576, 1.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "90.814, -12.9381, -32.4939, 0.33", "91.7245, -11.9762, -31.9487, 0.33", "92.3684, -11.2961, -31.5631, 0.67", "93.165, -10.4546, -31.0861, 0.33", "93.8487, -9.73229, -30.6767, 0.67", "95.0468, -8.46669, -29.9593, 0.33", "95.0468, -8.46669, -29.9593, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "90.814, -12.9381, -32.4939, 0.33", "91.1291, -11.8102, -33.9023, 0.33", "91.3473, -10.9433, -34.9514, 1.33", "92.9887, -2.94198, -43.825, 0.33", "93.1945, -1.81621, -45.2143, 2.0", "94.0415, 3.35776, -51.6408, 0.33", "94.3708, 5.36979, -54.1399, 1.33", "94.969, 9.1531, -59.0313, 0.33", "95.2925, 11.6172, -62.2664, 1.33", "95.4809, 19.3947, -71.8644, 0.33", "95.5051, 20.9986, -74.1071, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "38.3115, -279.009, -48.7457, 0.33", "36.1466, -278.742, -47.3888, 0.33", "32.2201, -278.259, -44.9278, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "38.3115, -279.009, -48.7457, 0.33", "38.8082, -281.801, -48.544, 0.33", "39.1644, -284.254, -48.3682, 0.67", "39.714, -288.457, -48.1093, 0.33", "40.2185, -293.278, -47.8938, 1.33", "40.337, -295.23, -47.8662, 1.33", "40.4818, -298.716, -47.9036, 0.67", "40.4327, -300.499, -47.9061, 0.67", "40.2786, -302.475, -47.9236, 0.33", "40.0977, -303.866, -47.9631, 0.67", "39.6406, -306.794, -48.2873, 0.33", "39.0061, -309.913, -48.692, 0.67", "38.278, -312.798, -48.9885, 0.33", "37.7323, -315.063, -49.3798, 1.33", "37.0749, -317.705, -49.8484, 1.33", "36.43, -320.339, -50.3265, 0.67", "35.5185, -323.998, -51.0442, 0.67", "33.9156, -329.952, -52.4311, 0.67", "32.4637, -335.81, -54.0773, 2.0" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "1.16226, -221.767, 1.81063, 0.33", "3.22239, -220.614, 7.12631, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "1.16226, -221.767, 1.81063, 0.33", "0.70436, -223.293, 2.23109, 0.33", "0.264903, -224.658, 2.58739, 1.33", "-0.659126, -227.118, 3.19178, 0.33", "-2.54379, -231.884, 4.26742, 0.33", "-3.02415, -233.059, 4.54816, 2.0", "-3.79452, -235.065, 5.17538, 0.33", "-3.88953, -235.289, 5.25844, 0.67", "-4.37964, -236.409, 5.76149, 0.33", "-4.79543, -237.252, 6.20162, 0.33", "-5.34769, -238.514, 6.66291, 1.33", "-6.67226, -242.197, 8.52738, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "35.833, -204.957, 14.4969, 0.33", "33.0175, -203.127, 14.8417, 0.33", "30.2414, -201.322, 15.1817, 0.33", "26.1944, -198.691, 15.6773, 0.33", "24.6541, -197.69, 15.866, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "35.833, -204.957, 14.4969, 0.67", "35.4657, -206.377, 16.9135, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "15.6028, 50.8493, -6.65141, 0.67", "14.8861, 53.546, -9.70291, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "15.6028, 50.8493, -6.65141, 0.67", "17.0693, 50.3627, -5.34423, 0.67", "19.2394, 49.8396, -3.4306, 0.33", "20.4048, 49.7455, -2.32394, 0.67", "21.7927, 49.8323, -1.02726, 0.33", "24.8314, 50.2974, 1.51973, 1.33", "26.2323, 50.6518, 2.75788, 0.33", "27.466, 51.0692, 3.81984, 0.67", "29.5068, 51.9944, 5.48722, 0.33", "30.7042, 52.6477, 6.50893, 1.33", "32.6042, 53.8506, 8.07606, 0.33", "35.4938, 55.8874, 10.2629, 1.33", "37.376, 57.2846, 11.6968, 0.67", "38.0365, 57.7936, 12.172, 0.67", "40.0843, 59.4787, 13.7268, 0.33", "41.0386, 60.3685, 14.5214, 0.33", "41.9316, 61.273, 15.2624, 0.33", "43.0114, 62.2717, 16.0027, 0.33", "43.7244, 62.9656, 16.4786, 1.33", "46.0641, 65.2626, 18.0075, 0.33", "47.1822, 66.4046, 18.6756, 0.67", "48.5928, 67.7375, 19.5848, 0.67", "50.0618, 68.9321, 20.5983, 0.33", "51.9805, 70.3871, 21.9279, 1.33", "54.1025, 71.9228, 23.367, 0.67", "55.8373, 73.125, 24.4503, 0.67", "57.9399, 74.6019, 25.9801, 0.67", "59.9712, 76.177, 27.7809, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-0.854907, 48.4063, -6.1549, 0.67", "1.13832, 53.2966, -8.33491, 0.67", "1.81019, 54.7104, -9.03255, 0.67", "4.34492, 59.3054, -10.994, 1.33", "6.32156, 62.8886, -12.5236, 1.33", "7.36006, 64.7713, -13.3272, 0.67", "8.57344, 66.9709, -14.2661, 1.33", "10.0646, 69.3459, -15.3405, 0.33", "12.6956, 72.7767, -16.7866, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-0.854907, 48.4063, -6.1549, 1.33", "-4.18323, 51.3962, -4.17803, 1.33", "-11.567, 58.0293, 0.20756, 0.67", "-13.9634, 60.1822, 1.63094, 0.67", "-18.9705, 64.6802, 4.60491, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "44.6769, 165.587, -22.4916, 0.33", "43.7341, 166.628, -22.3118, 0.33", "43.5424, 166.839, -22.2753, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "44.6769, 165.587, -22.4916, 0.33", "45.0032, 167.758, -22.7851, 0.33", "45.2247, 168.58, -23.1016, 0.67", "45.7937, 170.674, -24.0283, 0.33", "46.0843, 171.681, -24.508, 0.67", "46.5488, 173.119, -25.2062, 0.33", "47.4669, 175.595, -26.4229, 0.67", "48.6239, 178.214, -27.9311, 0.33", "49.2905, 179.581, -28.7563, 0.33", "49.5623, 180.068, -29.0627, 0.67", "50.1129, 181.166, -29.7853, 0.33", "50.4885, 182.109, -30.3806, 0.67", "51.1614, 184.563, -31.6408, 0.33", "51.3373, 185.598, -32.1035, 0.67", "51.4314, 186.177, -32.377, 0.67", "51.8613, 189.841, -34.1071, 0.33", "51.8989, 190.576, -34.4646, 0.33", "51.8815, 192.709, -35.5052, 0.67", "51.8411, 193.524, -35.9049, 0.33", "51.7295, 195.407, -36.8575, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-41.6083, 123.676, -56.1911, 0.33", "-41.7557, 125.173, -56.6917, 0.33", "-41.8679, 126.311, -57.0724, 0.67", "-42.1861, 129.54, -58.1525, 0.33", "-42.3966, 131.676, -58.8671, 1.33", "-42.6659, 134.408, -59.781, 0.33", "-42.9131, 136.917, -60.6203, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-41.6083, 123.676, -56.1911, 0.33", "-42.4818, 125.586, -54.9848, 0.33", "-43.8489, 128.711, -53.648, 0.67", "-44.3395, 129.931, -53.2425, 0.33", "-44.7077, 130.898, -53.1589, 0.67", "-45.2085, 132.184, -53.1825, 0.33", "-45.7259, 133.517, -53.2728, 1.33", "-47.3355, 137.892, -53.9575, 0.33", "-48.2537, 140.435, -54.5242, 0.67", "-50.2478, 146.003, -55.8357, 0.33", "-50.4765, 146.628, -55.9848, 0.67", "-51.1589, 148.548, -56.4454, 0.33", "-51.4896, 149.555, -56.6939, 0.67", "-52.2522, 151.986, -57.313, 0.33", "-52.6125, 153.13, -57.4654, 0.67", "-53.3383, 155.335, -57.3949, 0.33", "-53.6686, 156.261, -57.3685, 0.33", "-54.014, 157.166, -57.3557, 0.67", "-54.5775, 158.549, -57.3413, 0.33", "-55.4077, 160.534, -57.3217, 0.67", "-56.2822, 162.341, -57.3034, 0.33", "-56.6468, 163.043, -57.2841, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-56.017, 46.6875, -54.2576, 0.33", "-60.7161, 50.3157, -56.4757, 0.33", "-61.6598, 51.0254, -56.9767, 2.0", "-65.6581, 54.0312, -59.1539, 0.33", "-66.1465, 54.3796, -59.3906, 0.67", "-66.9495, 54.9391, -59.7417, 0.33", "-69.8061, 56.9998, -60.8403, 1.33", "-71.1398, 57.9056, -61.3211, 0.33", "-71.9676, 58.5, -61.5215, 0.67", "-74.783, 60.7953, -61.7619, 0.33", "-76.045, 61.8841, -61.7905, 1.33", "-78.1294, 63.8665, -61.6899, 0.33", "-79.725, 65.4814, -61.4875, 0.33", "-81.4033, 67.299, -61.2611, 0.67", "-83.5424, 69.7696, -60.9745, 0.33", "-84.519, 71.0073, -60.8384, 1.33", "-86.3799, 73.4525, -60.5747, 0.33", "-86.8066, 74.0186, -60.56, 0.67", "-87.5368, 75.0275, -60.6129, 0.33", "-88.1456, 75.8786, -60.7273, 0.67", "-88.7749, 76.7004, -60.9151, 0.33", "-89.3396, 77.4031, -61.1238, 0.67", "-91.8849, 80.392, -62.3012, 0.33", "-91.8849, 80.392, -62.3012, 0.67", "-92.8246, 81.5199, -62.8554, 0.33", "-93.1744, 81.9212, -63.0717, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-56.017, 46.6875, -54.2576, 0.33", "-58.3776, 46.7165, -56.3468, 0.33", "-61.1138, 46.8617, -58.396, 0.67", "-64.9639, 47.0786, -61.0883, 0.33", "-65.6987, 47.107, -61.5433, 0.67", "-70.8111, 47.2019, -64.4679, 0.33", "-76.7196, 47.0386, -67.5015, 2.67", "-82.2776, 46.5302, -70.4219, 0.33", "-82.7817, 46.4391, -70.659, 0.67", "-85.707, 45.6027, -72.045, 0.33", "-86.4704, 45.2845, -72.3365, 1.33", "-89.5913, 43.5056, -73.0268, 0.33", "-93.5129, 40.7482, -73.4632, 2.0", "-95.8413, 38.7307, -73.9819, 0.33", "-96.2775, 38.383, -74.0833, 0.67", "-98.5607, 36.7213, -74.6212, 0.33", "-99.0434, 36.4582, -74.6938, 0.67", "-101.281, 35.6112, -74.8311, 0.33", "-103.548, 35.0995, -74.6929, 0.67", "-107.37, 34.6853, -74.4369, 0.33", "-108.588, 34.6365, -74.2416, 0.67", "-112.074, 34.6508, -73.6265, 0.33", "-112.843, 34.6564, -73.4679, 0.67", "-116.988, 34.7878, -72.3706, 0.33", "-118.151, 34.8619, -71.9531, 0.67", "-122.219, 35.5762, -70.2336, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "32.4637, -335.81, -54.0773, 0.33", "29.0545, -339.722, -51.334, 0.33", "27.4438, -341.593, -50.3133, 0.67", "26.7525, -342.382, -49.9743, 0.33", "25.934, -343.305, -49.8665, 0.33", "24.809, -344.702, -50.0699, 0.33", "24.3243, -345.363, -50.3492, 0.67", "23.4121, -346.725, -51.4621, 0.33", "22.7894, -347.79, -52.3843, 0.67", "21.0492, -351.515, -56.1097, 0.33", "20.5974, -352.822, -57.4821, 0.67", "20.0105, -355.085, -59.9561, 0.33", "19.8766, -355.725, -60.6775, 0.67", "19.5623, -357.969, -63.2763, 0.33", "19.3695, -360.725, -66.3249, 0.67", "19.3492, -361.919, -67.3659, 0.33", "19.358, -362.357, -67.7943, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "32.4637, -335.81, -54.0773, 0.67", "32.542, -337.95, -53.7857, 0.67", "32.6271, -339.928, -53.6006, 0.67", "32.7187, -341.286, -53.5275, 0.33", "33.0329, -345.48, -53.4777, 2.67", "33.3764, -349.063, -53.6903, 0.67", "33.6822, -351.721, -53.9461, 0.33", "33.7612, -352.348, -54.0349, 0.67", "34.0493, -354.719, -54.4709, 0.33", "34.4854, -358.573, -55.4015, 0.33", "34.768, -361.313, -56.242, 0.67", "34.9777, -363.62, -56.9511, 0.33", "35.29, -366.8, -57.8695, 0.33", "35.4788, -369.267, -58.5883, 0.33", "35.5329, -370.693, -59.0048, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "35.4657, -206.377, 16.9135, 0.33", "34.157, -209.011, 16.4623, 0.33", "33.1388, -211.06, 16.1113, 0.33", "32.0157, -213.321, 15.7241, 0.33", "31.2932, -214.775, 15.475, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "35.4657, -206.377, 16.9135, 0.67", "36.2738, -209.65, 18.2559, 0.67", "37.5614, -214.864, 20.3948, 1.33", "38.2977, -217.846, 21.6181, 0.67", "39.6524, -223.331, 23.8685, 1.33", "40.446, -226.545, 25.1869, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "59.9712, 76.177, 27.7809, 0.33", "61.9795, 75.6043, 28.6353, 0.33", "64.3635, 74.9244, 29.6495, 0.33", "68.6428, 73.7041, 31.4701, 0.33", "70.6781, 73.1237, 32.3359, 0.33", "71.8239, 72.7969, 32.8234, 0.33", "73.3207, 72.3701, 33.4601, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "59.9712, 76.177, 27.7809, 0.67", "61.9847, 77.44, 29.4878, 0.67", "64.3004, 78.8925, 31.4508, 0.67", "65.7188, 79.7823, 32.6533, 0.67", "66.9782, 80.5723, 33.7209, 0.67", "72.4765, 84.0212, 38.3818, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "12.6956, 72.7767, -16.7866, 0.33", "15.6572, 74.9559, -17.0746, 0.33", "16.9775, 76.0812, -17.1291, 0.33", "17.9769, 76.526, -16.1848, 0.33", "19.2358, 77.0, -14.9493, 0.33", "20.7399, 77.6269, -13.4645, 1.33", "22.2122, 78.3011, -12.0415, 0.33", "23.3615, 78.8369, -10.9079, 0.67", "30.6844, 82.6782, -3.36946, 0.33", "31.8125, 83.3348, -2.21277, 0.67", "32.9245, 83.9975, -1.09287, 0.33", "33.753, 84.5413, -0.362589, 0.67", "35.1664, 85.5685, 0.606604, 0.33", "35.7145, 86.0792, 0.826884, 0.67", "36.5862, 87.2217, 0.805309, 0.33", "37.0497, 87.8598, 0.787814, 0.67", "39.2686, 90.8668, 0.639284, 0.33", "40.8279, 93.1051, 0.511191, 0.33", "41.2906, 93.7351, 0.455798, 0.67", "43.6525, 96.6265, 0.0782703, 0.33", "44.4118, 97.3701, -0.0377147, 1.33", "46.1312, 98.7147, -0.329649, 0.33", "47.2984, 99.4138, -0.555941, 1.33", "50.4641, 100.835, -0.810487, 0.67", "52.5226, 101.453, -0.841847, 0.67", "56.6358, 102.178, -0.757687, 0.67", "58.1151, 102.403, -0.692774, 1.33", "59.3266, 102.563, -0.624287, 0.33", "63.8636, 103.193, -0.340289, 1.33", "67.865, 103.929, -0.0275867, 0.33", "70.8386, 104.706, 0.145155, 0.67", "72.2664, 105.221, 0.169278, 0.33", "72.9741, 105.523, 0.157614, 0.67", "74.04, 106.133, 0.0492773, 0.33", "74.7754, 106.747, -0.131002, 1.33", "76.1678, 108.47, -0.41794, 0.33", "77.2384, 110.013, -0.624723, 0.33", "77.6341, 110.584, -0.734102, 0.67", "78.7292, 112.182, -1.11255, 0.33", "79.293, 113.037, -1.3409, 0.67", "79.8822, 113.938, -1.60244, 0.33", "80.7121, 115.193, -2.01893, 0.33", "81.7153, 116.544, -2.55593, 0.67", "82.6574, 117.894, -3.11938, 0.33", "82.8404, 118.155, -3.25093, 0.67" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "12.6956, 72.7767, -16.7866, 0.33", "18.2794, 73.3104, -14.9863, 0.33", "20.3914, 73.6011, -14.3573, 0.67", "26.6759, 74.7125, -12.2154, 0.33", "28.2692, 75.0469, -11.703, 1.33", "30.2203, 75.506, -11.0964, 0.33", "31.4302, 75.8326, -10.7222, 0.67", "32.7565, 76.3681, -10.286, 0.33", "37.1185, 78.7514, -9.64925, 1.33", "38.865, 80.2762, -9.93256, 0.33", "39.1467, 80.5725, -10.0634, 0.67", "40.0465, 81.6302, -10.6647, 0.33", "41.227, 83.0842, -11.6153, 0.67", "44.4476, 87.4404, -14.8752, 0.33", "45.9555, 89.7137, -16.8252, 0.67", "47.911, 92.6662, -19.3818, 0.33", "49.5753, 95.0434, -21.5615, 1.33" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-18.9705, 64.6802, 4.60491, 0.33", "-20.7973, 65.3541, 6.06529, 0.33", "-23.3539, 66.1828, 8.29231, 0.33", "-23.8612, 66.3474, 8.74383, 0.67", "-28.2258, 67.5667, 12.5383, 0.33", "-29.8159, 67.997, 13.8702, 0.67", "-31.6649, 68.5009, 15.3942, 0.33", "-31.9409, 68.5612, 15.6079, 0.67", "-33.2708, 68.7113, 16.7076, 0.33", "-35.3891, 68.8209, 18.5354, 0.33", "-37.3839, 68.9334, 20.2819, 0.33", "-38.032, 68.9644, 20.8057, 1.33", "-41.3541, 69.1474, 23.308, 0.33", "-43.4172, 69.2238, 24.9174, 0.33", "-44.7304, 69.1676, 26.0389, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-18.9705, 64.6802, 4.60491, 0.67", "-20.0558, 69.3765, 4.61467, 0.67", "-21.4511, 75.353, 4.47307, 0.67", "-22.2949, 79.2804, 4.18359, 0.67", "-23.5508, 85.7676, 3.52245, 0.67", "-24.1662, 89.0995, 3.1397, 0.67", "-24.8719, 93.3326, 2.37984, 0.67", "-25.2469, 95.8969, 1.7109, 1.33", "-25.6705, 99.5641, 0.513559, 0.67", "-26.0048, 103.324, -0.574301, 2.0", "-26.2431, 105.945, -1.3933, 1.33", "-26.7395, 112.739, -3.51003, 1.33", "-26.9796, 115.782, -4.3841, 0.67", "-27.4914, 120.987, -5.73746, 0.67", "-28.5199, 128.817, -7.33043, 1.33", "-29.372, 134.31, -8.26858, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-42.9131, 136.917, -60.6203, 0.33", "-38.7874, 139.027, -65.758, 0.33", "-38.5689, 139.138, -66.03, 0.67", "-37.9704, 139.444, -66.7754, 0.33", "-37.5969, 139.635, -67.2405, 0.67", "-35.8656, 140.52, -69.3965, 0.33", "-34.2353, 141.354, -71.4267, 2.0" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-42.9131, 136.917, -60.6203, 0.33", "-44.0278, 138.109, -60.6518, 0.33", "-44.2556, 138.353, -60.6582, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "49.5753, 95.0434, -21.5615, 0.33", "50.367, 94.1192, -20.1708, 0.33", "50.5048, 93.9583, -19.9288, 0.67", "51.1065, 93.256, -18.8719, 0.33", "51.2442, 93.0951, -18.6299, 0.67", "52.5854, 91.5296, -16.2742, 0.33", "53.8294, 90.0773, -14.089, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "49.5753, 95.0434, -21.5615, 0.67", "50.3825, 101.868, -31.38, 0.67", "50.7414, 103.547, -33.3898, 1.33", "51.4348, 105.612, -35.454, 0.33", "51.8301, 106.572, -36.3146, 0.67", "52.564, 108.321, -37.6972, 0.67", "54.5438, 112.543, -40.646, 0.67", "56.4459, 115.36, -41.789, 0.33", "58.0115, 117.482, -42.6931, 0.33", "58.9071, 118.612, -43.1261, 0.67", "59.9927, 120.073, -43.7048, 0.67", "61.7072, 122.476, -44.6174, 0.33", "63.2751, 124.782, -45.5121, 1.33", "65.0766, 127.984, -46.9807, 0.33", "65.5997, 129.112, -47.4741, 0.67", "67.2364, 132.789, -48.8511, 0.33", "67.546, 133.551, -49.0889, 0.67", "69.1114, 138.413, -50.1463, 0.33", "69.3094, 138.989, -50.1096, 0.67", "70.0798, 140.894, -49.2922, 0.33", "71.5204, 143.779, -47.2432, 0.67", "72.3359, 145.309, -45.977, 0.33", "72.7143, 146.016, -45.3891, 0.67", "75.1774, 150.746, -41.494, 0.67", "76.3404, 153.147, -39.8665, 0.33", "78.2949, 157.414, -37.58, 0.33", "79.1101, 159.331, -36.8348, 0.67", "80.658, 163.014, -35.6014, 0.33", "81.5302, 165.245, -35.0868, 0.67", "82.8412, 168.909, -34.8969, 0.67", "83.7736, 171.176, -34.957, 0.33", "83.9803, 171.692, -35.0599, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-44.7304, 69.1676, 26.0389, 0.67", "-47.4787, 68.0124, 27.5369, 0.67", "-48.0916, 67.7397, 27.8613, 0.67", "-49.1785, 67.2174, 28.4344, 0.33", "-50.3494, 66.6412, 29.032, 0.67", "-51.2508, 66.1706, 29.4823, 0.33", "-51.6287, 65.9546, 29.7142, 0.67", "-52.5935, 65.3768, 30.4501, 0.33", "-52.9819, 65.1163, 30.7557, 0.67", "-53.7837, 64.4619, 31.5046, 0.33", "-54.0599, 64.1859, 31.8102, 0.67", "-55.6362, 62.5689, 33.6801, 0.33", "-56.3054, 61.8782, 34.5103, 0.67", "-57.5533, 60.525, 36.171, 0.67", "-58.815, 59.1486, 37.8768, 0.67", "-59.7019, 58.0698, 39.1808, 0.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-44.7304, 69.1676, 26.0389, 1.33", "-47.2674, 66.8101, 26.9995, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-29.372, 134.31, -8.26858, 0.67", "-28.7948, 136.717, -7.68168, 0.67", "-27.973, 140.145, -6.84588, 0.67" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-29.372, 134.31, -8.26858, 0.67", "-31.3992, 136.075, -8.1745, 0.67", "-33.2464, 137.853, -8.24212, 0.33", "-34.7842, 139.755, -8.25203, 0.67", "-36.4275, 142.027, -8.23284, 0.33", "-40.1903, 147.584, -8.13127, 0.67", "-43.0204, 152.033, -8.01814, 0.33", "-44.7282, 155.285, -8.14905, 0.67", "-47.2435, 161.055, -8.64417, 0.33", "-47.4858, 161.697, -8.71351, 0.67", "-48.2698, 163.985, -8.99626, 0.33", "-49.3361, 167.512, -9.31371, 2.0", "-51.7088, 175.741, -9.59945, 0.67", "-53.6592, 182.739, -9.65737, 1.33", "-54.6623, 186.088, -9.89596, 0.33", "-54.8534, 186.738, -9.96176, 0.67", "-56.5064, 192.25, -10.2759, 0.33", "-56.8561, 193.281, -10.2496, 0.67", "-58.0643, 196.467, -9.74528, 0.33", "-61.4978, 205.246, -8.11325, 0.67", "-62.2979, 207.221, -7.77838, 0.33", "-65.1972, 213.691, -6.93698, 0.67", "-67.5726, 218.057, -6.77135, 0.67", "-68.7901, 220.173, -6.45416, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-47.2674, 66.8101, 26.9995, 0.67", "-45.0586, 65.8965, 33.3173, 0.67", "-44.7996, 65.7893, 34.0581, 0.67", "-43.7945, 65.3736, 36.9328, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-47.2674, 66.8101, 26.9995, 0.33", "-47.0091, 65.5335, 28.8053, 0.33", "-46.4561, 63.33, 31.4311, 0.33", "-45.662, 59.9985, 34.7974, 0.67", "-45.1358, 57.5046, 37.1824, 0.33", "-44.4175, 53.5152, 41.0136, 0.33", "-44.0813, 51.6484, 42.8064, 0.33", "-43.697, 48.3768, 46.1598, 0.67", "-43.6733, 46.2556, 48.3648, 0.67", "-43.7449, 44.3496, 50.0206, 0.67", "-43.6406, 43.364, 50.8014, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-27.973, 140.145, -6.84588, 0.33", "-29.4944, 141.831, -6.49923, 0.33", "-29.9177, 142.3, -6.40278, 0.67", "-32.067, 144.682, -5.91309, 0.33", "-33.6197, 146.402, -5.55932, 0.67" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-27.973, 140.145, -6.84588, 0.67", "-27.1256, 141.436, -5.78837, 0.67", "-24.047, 146.352, -1.50091, 0.67", "-22.2443, 148.93, 0.872448, 0.33", "-21.2567, 150.369, 2.17085, 0.67", "-19.4601, 153.049, 4.58427, 0.33", "-18.2388, 154.871, 6.22496, 0.33", "-16.7443, 157.193, 8.45671, 0.67", "-15.5463, 158.86, 10.2251, 0.33", "-14.7853, 160.122, 11.4881, 0.33", "-14.2072, 160.875, 12.2719, 0.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-68.7901, 220.173, -6.45416, 0.67", "-69.4089, 222.799, -8.85987, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-68.7901, 220.173, -6.45416, 0.67", "-69.9825, 220.638, -7.88227, 0.67", "-70.9645, 221.021, -9.05835, 0.67", "-72.6342, 221.672, -11.0581, 0.33", "-74.7313, 222.489, -13.5697, 1.33", "-79.7036, 224.428, -19.5248, 0.33", "-80.0431, 224.56, -19.9314, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-80.0431, 224.56, -19.9314, 0.33", "-81.8247, 224.154, -21.9016, 0.33", "-82.1202, 224.095, -22.2192, 0.67", "-84.0567, 223.707, -24.3012, 0.33", "-85.1294, 223.492, -25.4543, 0.67", "-88.1546, 222.886, -28.7066, 0.67", "-90.9634, 222.323, -31.7263, 0.33", "-91.1663, 222.29, -31.9576, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-80.0431, 224.56, -19.9314, 0.67", "-81.9405, 229.88, -16.2525, 0.67", "-83.1054, 233.147, -13.9936, 0.33", "-83.3286, 233.772, -13.5609, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_80", "dend_80", "dend_80", "dend_49", "dend_49", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_2", "dend_2", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_73", "dend_73", "dend_73", "dend_73", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L4_DBC_c6dae7aa61_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_80, id: dend_80, parent: dend_48
create dend_80
public dend_80
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_12
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_73, id: dend_73, parent: dend_49
create dend_73
public dend_73
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_61
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.49999999788066063)
    connect dend_25(0), soma_0(0.49999999788066063)
    connect dend_0(0), soma_0(0.49999999788066063)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_80(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_73(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.7707, 14.3445, 1.63673, 2.6356 ) }
    soma_0 { pt3dadd( 1.65855, 13.0663, 1.48326, 4.68599 ) }
    soma_0 { pt3dadd( 1.5464, 11.788, 1.32978, 5.81905 ) }
    soma_0 { pt3dadd( 1.43425, 10.5097, 1.1763, 6.95808 ) }
    soma_0 { pt3dadd( 1.32209, 9.23142, 1.02283, 8.17562 ) }
    soma_0 { pt3dadd( 1.20994, 7.95314, 0.869351, 9.23498 ) }
    soma_0 { pt3dadd( 1.09779, 6.67486, 0.715875, 9.66374 ) }
    soma_0 { pt3dadd( 0.985636, 5.39658, 0.562399, 9.75915 ) }
    soma_0 { pt3dadd( 0.873483, 4.1183, 0.408922, 9.85456 ) }
    soma_0 { pt3dadd( 0.76133, 2.84002, 0.255446, 9.99274 ) }
    soma_0 { pt3dadd( 0.649178, 1.56175, 0.101969, 10.3671 ) }
    soma_0 { pt3dadd( 0.537025, 0.283466, -0.051507, 11.1059 ) }
    soma_0 { pt3dadd( 0.424873, -0.994813, -0.204983, 11.9164 ) }
    soma_0 { pt3dadd( 0.31272, -2.27309, -0.35846, 12.7207 ) }
    soma_0 { pt3dadd( 0.200568, -3.55137, -0.511936, 12.9931 ) }
    soma_0 { pt3dadd( 0.0884149, -4.82965, -0.665413, 12.8706 ) }
    soma_0 { pt3dadd( -0.0237377, -6.10793, -0.818889, 12.7481 ) }
    soma_0 { pt3dadd( -0.13589, -7.38621, -0.972365, 11.5655 ) }
    soma_0 { pt3dadd( -0.248043, -8.66449, -1.12584, 9.82802 ) }
    soma_0 { pt3dadd( -0.360195, -9.94277, -1.27932, 4.98087 ) }
    soma_0 { pt3dadd( -0.472348, -11.221, -1.43279, 2.92263 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.24391, 17.0095, 5.96094, 3.33 ) }
    dend_30 { pt3dadd( 0.973882, 24.1666, 6.99197, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.08609, -3.64399, 6.39094, 1.33 ) }
    dend_25 { pt3dadd( -9.5822, -3.80446, 6.70531, 0.67 ) }
    dend_25 { pt3dadd( -10.9508, -4.15759, 6.8303, 0.67 ) }
    dend_25 { pt3dadd( -12.4757, -4.56279, 6.94438, 0.67 ) }
    dend_25 { pt3dadd( -15.3418, -5.04066, 7.1295, 0.67 ) }
    dend_25 { pt3dadd( -17.1794, -5.22881, 7.23503, 0.67 ) }
    dend_25 { pt3dadd( -20.6344, -5.35693, 7.4116, 0.67 ) }
    dend_25 { pt3dadd( -25.1997, -5.30762, 7.59321, 0.67 ) }
    dend_25 { pt3dadd( -26.7745, -5.29438, 7.67726, 0.67 ) }
    dend_25 { pt3dadd( -29.3225, -5.32211, 7.8446, 0.67 ) }
    dend_25 { pt3dadd( -30.6217, -5.44068, 7.8221, 0.67 ) }
    dend_25 { pt3dadd( -32.4297, -5.67228, 7.50241, 0.67 ) }
    dend_25 { pt3dadd( -33.6737, -5.77356, 7.1228, 0.67 ) }
    dend_25 { pt3dadd( -35.4739, -5.8188, 6.51607, 0.67 ) }
    dend_25 { pt3dadd( -37.5919, -5.9858, 5.81805, 0.67 ) }
    dend_25 { pt3dadd( -42.7772, -6.3384, 4.39849, 0.67 ) }
    dend_25 { pt3dadd( -45.2877, -6.32861, 3.91853, 0.67 ) }
    dend_25 { pt3dadd( -47.9123, -6.04611, 3.70645, 0.67 ) }
    dend_25 { pt3dadd( -50.1957, -5.62234, 3.77419, 0.67 ) }
    dend_25 { pt3dadd( -51.4955, -5.29359, 3.90725, 0.67 ) }
    dend_25 { pt3dadd( -54.759, -4.22766, 4.47861, 0.67 ) }
    dend_25 { pt3dadd( -58.5542, -2.82493, 5.39153, 0.67 ) }
    dend_25 { pt3dadd( -62.6161, -1.2031, 6.34611, 0.67 ) }
    dend_25 { pt3dadd( -65.637, 0.127071, 7.02018, 0.33 ) }
    dend_25 { pt3dadd( -66.5266, 0.573471, 7.20677, 0.67 ) }
    dend_25 { pt3dadd( -68.6642, 1.6638, 7.60104, 1.33 ) }
    dend_25 { pt3dadd( -73.6161, 4.16397, 8.30397, 0.67 ) }
    dend_25 { pt3dadd( -74.6446, 4.68633, 8.35389, 0.67 ) }
    dend_25 { pt3dadd( -77.3537, 6.00703, 8.17482, 1.33 ) }
    dend_25 { pt3dadd( -79.7895, 7.17528, 7.87674, 0.67 ) }
    dend_25 { pt3dadd( -83.4443, 8.80301, 7.34906, 0.67 ) }
    dend_25 { pt3dadd( -86.5011, 9.93905, 6.84391, 0.67 ) }
    dend_25 { pt3dadd( -90.2529, 11.1132, 6.05276, 0.67 ) }
    dend_25 { pt3dadd( -91.6772, 11.5034, 5.73733, 1.33 ) }
    dend_25 { pt3dadd( -94.1299, 12.0567, 5.15593, 0.33 ) }
    dend_25 { pt3dadd( -95.6821, 12.3777, 4.81102, 1.33 ) }
    dend_25 { pt3dadd( -99.2138, 13.2316, 4.00855, 0.67 ) }
    dend_25 { pt3dadd( -102.343, 13.668, 3.49098, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.04391, -10.0175, 0.670944, 2.67 ) }
    dend_0 { pt3dadd( 7.04037, -13.5302, 2.92418, 2.0 ) }
    dend_0 { pt3dadd( 10.6506, -19.8823, 6.9988, 2.0 ) }
    dend_0 { pt3dadd( 13.9729, -25.7276, 10.7483, 2.0 ) }
    dend_0 { pt3dadd( 15.3062, -28.0736, 12.2532, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.472348, -11.221, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -1.78337, -26.1636, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.973882, 24.1666, 6.99197, 2.67 ) }
    dend_48 { pt3dadd( 0.123163, 26.3263, 8.50658, 2.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.973882, 24.1666, 6.99197, 1.33 ) }
    dend_31 { pt3dadd( -3.03868, 22.3918, -16.839, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -102.343, 13.668, 3.49098, 0.67 ) }
    dend_27 { pt3dadd( -106.221, 15.7084, 3.52682, 0.67 ) }
    dend_27 { pt3dadd( -111.007, 17.495, 2.59345, 0.67 ) }
    dend_27 { pt3dadd( -113.57, 18.072, 1.82309, 0.33 ) }
    dend_27 { pt3dadd( -114.58, 18.2832, 1.49211, 0.67 ) }
    dend_27 { pt3dadd( -116.062, 18.5213, 0.877956, 0.67 ) }
    dend_27 { pt3dadd( -118.259, 18.8238, -0.0917473, 0.67 ) }
    dend_27 { pt3dadd( -123.691, 19.2283, -2.91818, 0.67 ) }
    dend_27 { pt3dadd( -127.116, 19.5194, -4.90582, 0.67 ) }
    dend_27 { pt3dadd( -129.088, 19.7548, -6.08526, 0.67 ) }
    dend_27 { pt3dadd( -133.079, 20.4673, -8.38093, 2.0 ) }
    dend_27 { pt3dadd( -134.941, 20.927, -9.45173, 0.33 ) }
    dend_27 { pt3dadd( -136.72, 21.5281, -10.4215, 0.67 ) }
    dend_27 { pt3dadd( -137.998, 22.0568, -10.9754, 1.33 ) }
    dend_27 { pt3dadd( -140.763, 23.4452, -12.3793, 0.33 ) }
    dend_27 { pt3dadd( -142.046, 24.108, -13.0035, 2.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 89/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -102.343, 13.668, 3.49098, 0.33 ) }
    dend_26 { pt3dadd( -102.167, 12.438, 3.72759, 0.33 ) }
    dend_26 { pt3dadd( -102.027, 11.4612, 3.9155, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.3062, -28.0736, 12.2532, 1.33 ) }
    dend_12 { pt3dadd( 18.6057, -34.0909, 1.53821, 1.33 ) }
    dend_12 { pt3dadd( 19.8827, -36.4198, -2.60885, 0.67 ) }
    dend_12 { pt3dadd( 20.7167, -37.9407, -5.31716, 0.67 ) }
    dend_12 { pt3dadd( 21.3629, -39.1192, -7.4157, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.3062, -28.0736, 12.2532, 0.67 ) }
    dend_1 { pt3dadd( 15.2875, -32.774, 12.0123, 0.67 ) }
    dend_1 { pt3dadd( 15.4832, -36.1744, 12.1734, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 15.7911, -40.8919, 12.557, 0.67 ) }
    dend_1 { pt3dadd( 16.3033, -46.4245, 13.0707, 1.33 ) }
    dend_1 { pt3dadd( 16.763, -51.2037, 13.5078, 1.33 ) }
    dend_1 { pt3dadd( 17.7549, -59.6845, 14.2461, 1.33 ) }
    dend_1 { pt3dadd( 18.3852, -62.9291, 14.5625, 1.33 ) }
    dend_1 { pt3dadd( 19.3068, -67.046, 14.9998, 1.33 ) }
    dend_1 { pt3dadd( 20.0042, -70.2348, 15.2982, 1.33 ) }
    dend_1 { pt3dadd( 20.7234, -73.7052, 15.6529, 1.33 ) }
    dend_1 { pt3dadd( 21.4458, -77.6248, 15.9039, 1.33 ) }
    dend_1 { pt3dadd( 22.7103, -84.6756, 15.8141, 0.67 ) }
    dend_1 { pt3dadd( 23.2475, -87.9205, 15.7637, 1.33 ) }
    dend_1 { pt3dadd( 23.6422, -90.1878, 15.7256, 1.33 ) }
    dend_1 { pt3dadd( 24.5241, -96.404, 15.8753, 1.33 ) }
    dend_1 { pt3dadd( 24.9375, -99.9037, 15.9365, 1.33 ) }
    dend_1 { pt3dadd( 25.2263, -104.363, 15.9936, 0.67 ) }
    dend_1 { pt3dadd( 25.3637, -109.785, 16.0968, 1.33 ) }
    dend_1 { pt3dadd( 25.4287, -113.235, 16.1074, 0.67 ) }
    dend_1 { pt3dadd( 25.5026, -123.137, 15.9736, 1.33 ) }
    dend_1 { pt3dadd( 25.4849, -127.861, 15.9147, 1.33 ) }
    dend_1 { pt3dadd( 25.5894, -131.233, 15.8473, 1.33 ) }
    dend_1 { pt3dadd( 25.76, -134.45, 15.7491, 1.33 ) }
    dend_1 { pt3dadd( 26.0978, -138.936, 15.7202, 1.33 ) }
    dend_1 { pt3dadd( 26.352, -141.348, 15.7456, 1.33 ) }
    dend_1 { pt3dadd( 27.437, -147.816, 15.7646, 2.0 ) }
    dend_1 { pt3dadd( 28.3882, -152.366, 16.0421, 1.33 ) }
    dend_1 { pt3dadd( 28.8856, -154.308, 16.1899, 2.0 ) }
    dend_1 { pt3dadd( 30.4138, -160.045, 16.8021, 2.0 ) }
    dend_1 { pt3dadd( 30.981, -162.24, 17.2412, 2.0 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 28/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -4.40542, -56.0488, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -5.71644, -70.9914, -1.43279, 0.33 ) }
    // Section: dend_80, id: dend_80, parent: dend_48 (entry count 31/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 0.123163, 26.3263, 8.50658, 0.67 ) }
    dend_80 { pt3dadd( 0.483472, 28.4392, 10.0005, 0.67 ) }
    dend_80 { pt3dadd( 1.09939, 32.0509, 12.5541, 0.67 ) }
    dend_80 { pt3dadd( 2.5606, 40.6196, 18.6125, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 35/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.123163, 26.3263, 8.50658, 2.67 ) }
    dend_49 { pt3dadd( 0.0892664, 32.1832, 3.24155, 2.67 ) }
    dend_49 { pt3dadd( 0.0664932, 36.1182, -0.295702, 2.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 38/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.03868, 22.3918, -16.839, 1.33 ) }
    dend_33 { pt3dadd( -5.39901, 25.6478, -21.3907, 1.33 ) }
    dend_33 { pt3dadd( -6.81395, 27.5997, -24.1193, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.03868, 22.3918, -16.839, 0.67 ) }
    dend_32 { pt3dadd( 0.191159, 20.0798, -14.7651, 0.67 ) }
    dend_32 { pt3dadd( 3.40035, 17.8255, -12.1318, 0.33 ) }
    dend_32 { pt3dadd( 5.3336, 16.598, -10.3653, 0.67 ) }
    dend_32 { pt3dadd( 6.87816, 15.7077, -8.91266, 0.67 ) }
    dend_32 { pt3dadd( 8.40426, 14.8128, -7.47308, 0.33 ) }
    dend_32 { pt3dadd( 9.3792, 14.2801, -6.56199, 0.67 ) }
    dend_32 { pt3dadd( 12.9317, 13.002, -3.65634, 0.33 ) }
    dend_32 { pt3dadd( 14.1652, 12.6533, -2.6841, 0.67 ) }
    dend_32 { pt3dadd( 16.8068, 11.9501, -0.839037, 0.33 ) }
    dend_32 { pt3dadd( 18.3255, 11.6526, 0.0626493, 0.67 ) }
    dend_32 { pt3dadd( 20.05, 11.4324, 0.89415, 0.33 ) }
    dend_32 { pt3dadd( 22.6314, 11.3619, 1.90763, 0.67 ) }
    dend_32 { pt3dadd( 24.8455, 11.4694, 2.45867, 0.33 ) }
    dend_32 { pt3dadd( 26.5632, 11.5753, 2.87414, 0.67 ) }
    dend_32 { pt3dadd( 27.6425, 11.7402, 3.1308, 0.33 ) }
    dend_32 { pt3dadd( 29.1542, 12.0499, 3.51513, 1.33 ) }
    dend_32 { pt3dadd( 33.1878, 12.8614, 4.66818, 0.33 ) }
    dend_32 { pt3dadd( 35.3972, 13.4452, 5.5118, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -142.046, 24.108, -13.0035, 0.33 ) }
    dend_29 { pt3dadd( -143.502, 21.4832, -11.437, 0.33 ) }
    dend_29 { pt3dadd( -144.617, 19.4725, -10.2369, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -142.046, 24.108, -13.0035, 0.33 ) }
    dend_28 { pt3dadd( -145.014, 24.7317, -11.9553, 0.33 ) }
    dend_28 { pt3dadd( -146.003, 24.9397, -11.6058, 0.67 ) }
    dend_28 { pt3dadd( -148.875, 25.5434, -10.5912, 0.33 ) }
    dend_28 { pt3dadd( -151.364, 26.0665, -9.71215, 0.67 ) }
    dend_28 { pt3dadd( -153.142, 26.4401, -9.08421, 0.33 ) }
    dend_28 { pt3dadd( -154.229, 26.6687, -8.70014, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_12 (entry count 70/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 21.3629, -39.1192, -7.4157, 0.67 ) }
    dend_20 { pt3dadd( 23.7619, -40.0632, -9.47628, 0.67 ) }
    dend_20 { pt3dadd( 25.4856, -40.8009, -10.7461, 0.67 ) }
    dend_20 { pt3dadd( 29.2872, -42.0626, -13.0665, 1.33 ) }
    dend_20 { pt3dadd( 30.5603, -42.2662, -13.6537, 0.67 ) }
    dend_20 { pt3dadd( 33.5826, -42.4256, -14.6906, 0.67 ) }
    dend_20 { pt3dadd( 35.1798, -42.4742, -15.0355, 1.33 ) }
    dend_20 { pt3dadd( 37.2471, -42.4454, -15.361, 0.67 ) }
    dend_20 { pt3dadd( 39.5909, -42.2786, -15.3466, 0.67 ) }
    dend_20 { pt3dadd( 42.9931, -41.5693, -14.8047, 0.67 ) }
    dend_20 { pt3dadd( 44.3743, -41.1381, -14.4893, 0.67 ) }
    dend_20 { pt3dadd( 46.9129, -40.1477, -13.6802, 0.67 ) }
    dend_20 { pt3dadd( 50.49, -38.3605, -12.4414, 1.33 ) }
    dend_20 { pt3dadd( 52.3297, -37.315, -11.8123, 0.67 ) }
    dend_20 { pt3dadd( 54.4454, -35.9477, -11.1195, 1.33 ) }
    dend_20 { pt3dadd( 55.4622, -35.2136, -10.9689, 0.67 ) }
    dend_20 { pt3dadd( 56.1638, -34.6675, -10.9872, 1.33 ) }
    dend_20 { pt3dadd( 57.1073, -33.833, -11.1432, 0.67 ) }
    dend_20 { pt3dadd( 58.7426, -32.3672, -11.5213, 0.67 ) }
    dend_20 { pt3dadd( 60.6497, -30.805, -12.0488, 1.33 ) }
    dend_20 { pt3dadd( 64.1484, -28.335, -12.9624, 0.67 ) }
    dend_20 { pt3dadd( 65.9301, -27.1454, -13.3936, 0.33 ) }
    dend_20 { pt3dadd( 67.538, -26.1089, -13.8582, 0.33 ) }
    dend_20 { pt3dadd( 68.8291, -25.3905, -14.3574, 0.67 ) }
    dend_20 { pt3dadd( 70.42, -24.5801, -15.1575, 0.67 ) }
    dend_20 { pt3dadd( 72.0305, -23.8542, -16.0032, 0.67 ) }
    dend_20 { pt3dadd( 72.7545, -23.5268, -16.3756, 0.67 ) }
    dend_20 { pt3dadd( 76.4672, -21.8516, -18.3549, 2.0 ) }
    dend_20 { pt3dadd( 80.1084, -20.3331, -20.4087, 0.33 ) }
    dend_20 { pt3dadd( 82.3505, -19.4115, -21.8037, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 83.166, -19.1027, -22.3583, 0.33 ) }
    dend_20 { pt3dadd( 83.9813, -18.7832, -22.9525, 0.67 ) }
    dend_20 { pt3dadd( 84.7738, -18.478, -23.541, 0.33 ) }
    dend_20 { pt3dadd( 87.0836, -17.5647, -24.9477, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 21.3629, -39.1192, -7.4157, 0.67 ) }
    dend_13 { pt3dadd( 22.6729, -44.057, -9.19601, 0.67 ) }
    dend_13 { pt3dadd( 23.8343, -48.0583, -10.7445, 0.67 ) }
    dend_13 { pt3dadd( 24.363, -49.7538, -11.3868, 0.67 ) }
    dend_13 { pt3dadd( 26.0498, -55.4239, -13.3987, 1.33 ) }
    dend_13 { pt3dadd( 26.6038, -57.351, -14.0261, 2.0 ) }
    dend_13 { pt3dadd( 27.529, -60.6852, -15.0383, 0.67 ) }
    dend_13 { pt3dadd( 28.1486, -63.0405, -15.8209, 1.33 ) }
    dend_13 { pt3dadd( 28.6882, -65.5525, -16.5928, 0.67 ) }
    dend_13 { pt3dadd( 29.4437, -69.5535, -17.6033, 0.67 ) }
    dend_13 { pt3dadd( 29.9257, -72.6172, -18.1196, 1.33 ) }
    dend_13 { pt3dadd( 30.2403, -74.6795, -18.5072, 0.33 ) }
    dend_13 { pt3dadd( 30.4904, -76.55, -18.8827, 0.33 ) }
    dend_13 { pt3dadd( 30.7044, -78.9454, -19.3827, 0.67 ) }
    dend_13 { pt3dadd( 30.8176, -80.422, -19.7506, 1.33 ) }
    dend_13 { pt3dadd( 31.0865, -83.3295, -20.5405, 0.67 ) }
    dend_13 { pt3dadd( 31.41, -87.0176, -21.3411, 0.67 ) }
    dend_13 { pt3dadd( 31.751, -91.1691, -22.0315, 1.33 ) }
    dend_13 { pt3dadd( 32.0293, -95.0474, -22.5012, 0.67 ) }
    dend_13 { pt3dadd( 32.1056, -97.183, -22.6811, 2.67 ) }
    dend_13 { pt3dadd( 32.0729, -99.5987, -22.6271, 0.67 ) }
    dend_13 { pt3dadd( 31.7677, -104.84, -22.3084, 0.67 ) }
    dend_13 { pt3dadd( 31.5629, -106.713, -22.1254, 0.33 ) }
    dend_13 { pt3dadd( 31.3052, -108.865, -21.9059, 0.67 ) }
    dend_13 { pt3dadd( 31.1339, -110.382, -21.7889, 0.33 ) }
    dend_13 { pt3dadd( 30.5427, -115.905, -21.6351, 2.0 ) }
    dend_13 { pt3dadd( 30.0749, -121.919, -21.9825, 0.67 ) }
    dend_13 { pt3dadd( 30.0192, -123.256, -22.1743, 0.67 ) }
    dend_13 { pt3dadd( 30.0451, -125.405, -22.4864, 0.67 ) }
    dend_13 { pt3dadd( 30.1674, -128.076, -22.9014, 1.33 ) }
    dend_13 { pt3dadd( 30.303, -130.456, -23.3173, 0.67 ) }
    dend_13 { pt3dadd( 30.5789, -134.072, -24.1341, 0.67 ) }
    dend_13 { pt3dadd( 30.7076, -135.936, -24.4756, 1.33 ) }
    dend_13 { pt3dadd( 30.8982, -138.652, -25.0199, 0.67 ) }
    dend_13 { pt3dadd( 31.1808, -142.764, -26.037, 0.67 ) }
    dend_13 { pt3dadd( 31.2802, -144.231, -26.3688, 0.67 ) }
    dend_13 { pt3dadd( 31.4364, -146.493, -26.8098, 0.67 ) }
    dend_13 { pt3dadd( 31.5323, -148.654, -27.1878, 0.67 ) }
    dend_13 { pt3dadd( 31.58, -149.825, -27.444, 1.33 ) }
    dend_13 { pt3dadd( 31.5985, -152.798, -28.2162, 0.67 ) }
    dend_13 { pt3dadd( 31.7782, -157.021, -29.3306, 2.0 ) }
    dend_13 { pt3dadd( 31.9474, -160.603, -30.0577, 0.67 ) }
    dend_13 { pt3dadd( 31.9889, -161.864, -30.2465, 0.67 ) }
    dend_13 { pt3dadd( 32.026, -166.692, -30.7736, 1.33 ) }
    dend_13 { pt3dadd( 32.0405, -168.703, -30.9259, 0.67 ) }
    dend_13 { pt3dadd( 32.0283, -171.895, -31.0439, 0.67 ) }
    dend_13 { pt3dadd( 31.9422, -175.752, -31.1434, 1.33 ) }
    dend_13 { pt3dadd( 31.8524, -179.648, -31.0084, 0.67 ) }
    dend_13 { pt3dadd( 31.7631, -182.481, -30.8233, 0.67 ) }
    dend_13 { pt3dadd( 31.6672, -185.322, -30.6457, 0.67 ) }
    dend_13 { pt3dadd( 31.6112, -187.676, -30.6852, 0.67 ) }
    dend_13 { pt3dadd( 31.5559, -190.388, -30.9506, 2.0 ) }
    dend_13 { pt3dadd( 31.6461, -194.365, -31.6247, 0.67 ) }
    dend_13 { pt3dadd( 31.8338, -198.362, -32.4503, 0.67 ) }
    dend_13 { pt3dadd( 32.0423, -201.785, -33.1231, 2.0 ) }
    dend_13 { pt3dadd( 32.3636, -206.325, -33.9104, 0.67 ) }
    dend_13 { pt3dadd( 32.6768, -209.049, -34.3147, 1.33 ) }
    dend_13 { pt3dadd( 33.0569, -211.964, -34.6451, 0.67 ) }
    dend_13 { pt3dadd( 33.1981, -213.295, -34.7397, 0.67 ) }
    dend_13 { pt3dadd( 33.7689, -217.765, -34.7943, 2.0 ) }
    dend_13 { pt3dadd( 34.1146, -220.591, -34.695, 0.67 ) }
    dend_13 { pt3dadd( 34.4123, -222.85, -34.599, 0.67 ) }
    dend_13 { pt3dadd( 35.2388, -229.16, -34.4877, 0.67 ) }
    dend_13 { pt3dadd( 35.4489, -230.892, -34.5263, 0.67 ) }
    dend_13 { pt3dadd( 35.7958, -233.848, -34.7213, 0.67 ) }
    dend_13 { pt3dadd( 36.105, -236.21, -35.1216, 0.67 ) }
    dend_13 { pt3dadd( 36.3774, -238.926, -35.6058, 2.0 ) }
    dend_13 { pt3dadd( 36.5425, -240.991, -36.0086, 0.67 ) }
    dend_13 { pt3dadd( 36.9028, -244.52, -36.7269, 1.33 ) }
    dend_13 { pt3dadd( 37.1008, -246.585, -37.1711, 0.67 ) }
    dend_13 { pt3dadd( 37.3115, -250.734, -38.1798, 0.67 ) }
    dend_13 { pt3dadd( 37.4706, -254.538, -39.1822, 1.33 ) }
    dend_13 { pt3dadd( 37.5564, -257.248, -39.9632, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 30.981, -162.24, 17.2412, 1.33 ) }
    dend_11 { pt3dadd( 29.6453, -163.521, 17.3945, 1.33 ) }
    dend_11 { pt3dadd( 28.6258, -164.498, 17.5116, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 30.981, -162.24, 17.2412, 0.67 ) }
    dend_2 { pt3dadd( 31.8713, -167.925, 15.3945, 0.67 ) }
    dend_2 { pt3dadd( 32.7908, -173.797, 13.4872, 2.0 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 2.5606, 40.6196, 18.6125, 0.33 ) }
    dend_82 { pt3dadd( 4.17602, 42.5744, 20.1288, 0.33 ) }
    dend_82 { pt3dadd( 4.99194, 43.4647, 20.8412, 0.67 ) }
    dend_82 { pt3dadd( 7.66455, 45.9082, 22.9953, 0.67 ) }
    dend_82 { pt3dadd( 8.91829, 47.0544, 24.0058, 0.33 ) }
    dend_82 { pt3dadd( 9.75663, 47.8209, 24.6814, 0.33 ) }
    dend_82 { pt3dadd( 11.884, 49.7659, 26.3961, 0.67 ) }
    dend_82 { pt3dadd( 12.7471, 50.5958, 27.2502, 0.33 ) }
    dend_82 { pt3dadd( 14.4757, 52.0273, 28.8796, 0.33 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 2.5606, 40.6196, 18.6125, 0.67 ) }
    dend_81 { pt3dadd( 2.84179, 42.84, 20.5713, 0.67 ) }
    dend_81 { pt3dadd( 3.07147, 44.6536, 22.1713, 0.33 ) }
    dend_81 { pt3dadd( 3.2395, 45.9805, 23.3418, 0.67 ) }
    dend_81 { pt3dadd( 3.70779, 49.6784, 26.604, 0.33 ) }
    // Section: dend_73, id: dend_73, parent: dend_49 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 0.0664932, 36.1182, -0.295702, 0.67 ) }
    dend_73 { pt3dadd( 2.5334, 39.2464, -4.781, 0.67 ) }
    dend_73 { pt3dadd( 3.46362, 40.426, -6.4723, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_73 { pt3dadd( 5.51773, 43.0308, -10.2071, 0.67 ) }
    dend_73 { pt3dadd( 6.28885, 44.0086, -11.6091, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 0.0664932, 36.1182, -0.295702, 2.0 ) }
    dend_50 { pt3dadd( -2.31627, 42.431, -0.0965158, 2.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -6.81395, 27.5997, -24.1193, 0.67 ) }
    dend_43 { pt3dadd( -5.31608, 34.8349, -20.8987, 0.67 ) }
    dend_43 { pt3dadd( -4.64885, 37.1843, -19.8867, 0.67 ) }
    dend_43 { pt3dadd( -2.05758, 44.3921, -17.0077, 0.33 ) }
    dend_43 { pt3dadd( -1.34366, 46.1743, -16.3464, 0.33 ) }
    dend_43 { pt3dadd( 0.0103182, 49.4677, -15.1977, 1.33 ) }
    dend_43 { pt3dadd( 0.824343, 51.398, -14.6354, 0.67 ) }
    dend_43 { pt3dadd( 2.23932, 55.0965, -13.527, 0.33 ) }
    dend_43 { pt3dadd( 3.5633, 57.8898, -13.0587, 1.33 ) }
    dend_43 { pt3dadd( 4.56818, 59.5836, -13.0312, 0.33 ) }
    dend_43 { pt3dadd( 5.29439, 60.714, -13.0329, 0.67 ) }
    dend_43 { pt3dadd( 7.03767, 63.3458, -13.3231, 0.33 ) }
    dend_43 { pt3dadd( 8.48105, 65.5973, -13.7438, 0.67 ) }
    dend_43 { pt3dadd( 10.4314, 68.7184, -14.5069, 1.33 ) }
    dend_43 { pt3dadd( 11.9244, 71.3074, -14.9493, 0.33 ) }
    dend_43 { pt3dadd( 12.8237, 72.8819, -15.1192, 0.67 ) }
    dend_43 { pt3dadd( 16.0656, 78.724, -15.4042, 0.33 ) }
    dend_43 { pt3dadd( 17.1361, 80.8528, -15.3695, 0.33 ) }
    dend_43 { pt3dadd( 18.1095, 83.099, -15.2751, 0.67 ) }
    dend_43 { pt3dadd( 20.1099, 88.7032, -14.8939, 0.33 ) }
    dend_43 { pt3dadd( 20.814, 90.8669, -14.6995, 0.33 ) }
    dend_43 { pt3dadd( 21.2924, 92.5147, -14.4792, 0.67 ) }
    dend_43 { pt3dadd( 21.934, 95.1169, -13.9566, 2.0 ) }
    dend_43 { pt3dadd( 22.5037, 97.7866, -13.5716, 0.33 ) }
    dend_43 { pt3dadd( 22.8431, 99.578, -13.3974, 0.33 ) }
    dend_43 { pt3dadd( 23.1543, 100.84, -13.2488, 0.67 ) }
    dend_43 { pt3dadd( 23.7011, 102.825, -12.9972, 0.33 ) }
    dend_43 { pt3dadd( 23.9809, 103.734, -12.8614, 0.67 ) }
    dend_43 { pt3dadd( 25.0193, 106.665, -12.3239, 0.33 ) }
    dend_43 { pt3dadd( 25.8276, 108.757, -11.8522, 0.33 ) }
    dend_43 { pt3dadd( 28.2573, 114.888, -10.1998, 0.33 ) }
    dend_43 { pt3dadd( 29.5062, 117.986, -9.20151, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -6.81395, 27.5997, -24.1193, 0.67 ) }
    dend_34 { pt3dadd( -8.9258, 29.6676, -27.661, 0.67 ) }
    dend_34 { pt3dadd( -10.0439, 30.7624, -29.5361, 0.67 ) }
    dend_34 { pt3dadd( -14.0299, 34.6655, -36.221, 2.0 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 87.0836, -17.5647, -24.9477, 0.33 ) }
    dend_22 { pt3dadd( 87.8976, -16.5551, -26.5943, 0.33 ) }
    dend_22 { pt3dadd( 88.1248, -16.2734, -27.0539, 0.67 ) }
    dend_22 { pt3dadd( 89.9578, -13.9999, -30.7621, 0.33 ) }
    dend_22 { pt3dadd( 90.814, -12.9381, -32.4939, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 87.0836, -17.5647, -24.9477, 0.33 ) }
    dend_21 { pt3dadd( 87.8874, -17.804, -24.429, 0.33 ) }
    dend_21 { pt3dadd( 88.0204, -17.8437, -24.3468, 0.67 ) }
    dend_21 { pt3dadd( 89.0976, -18.1409, -24.0517, 0.33 ) }
    dend_21 { pt3dadd( 89.9302, -18.3979, -23.9543, 1.33 ) }
    dend_21 { pt3dadd( 91.3451, -18.9289, -23.8145, 0.33 ) }
    dend_21 { pt3dadd( 91.8835, -19.1698, -23.7674, 0.33 ) }
    dend_21 { pt3dadd( 93.0466, -19.8743, -23.7432, 1.33 ) }
    dend_21 { pt3dadd( 95.5582, -21.7689, -24.0214, 0.33 ) }
    dend_21 { pt3dadd( 96.0431, -22.3213, -24.1674, 0.33 ) }
    dend_21 { pt3dadd( 96.7785, -23.3659, -24.4977, 0.67 ) }
    dend_21 { pt3dadd( 97.1845, -24.0694, -24.7196, 0.67 ) }
    dend_21 { pt3dadd( 97.6876, -25.1425, -24.9598, 0.33 ) }
    dend_21 { pt3dadd( 98.2003, -26.474, -25.2006, 0.67 ) }
    dend_21 { pt3dadd( 99.0763, -29.1772, -25.4377, 0.33 ) }
    dend_21 { pt3dadd( 99.1311, -29.3351, -25.4567, 0.67 ) }
    dend_21 { pt3dadd( 99.7616, -30.9423, -25.7296, 0.33 ) }
    dend_21 { pt3dadd( 100.181, -32.0198, -25.8984, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 37.5564, -257.248, -39.9632, 0.33 ) }
    dend_19 { pt3dadd( 40.0205, -258.61, -38.4502, 0.33 ) }
    dend_19 { pt3dadd( 40.8663, -259.143, -37.9002, 0.67 ) }
    dend_19 { pt3dadd( 41.5757, -259.833, -37.3201, 0.67 ) }
    dend_19 { pt3dadd( 42.7737, -261.059, -36.3348, 0.33 ) }
    dend_19 { pt3dadd( 44.6757, -262.957, -34.9163, 2.0 ) }
    dend_19 { pt3dadd( 47.2302, -265.495, -32.7938, 0.33 ) }
    dend_19 { pt3dadd( 47.9082, -266.257, -32.1443, 1.33 ) }
    dend_19 { pt3dadd( 52.6825, -272.118, -27.1753, 0.67 ) }
    dend_19 { pt3dadd( 53.6577, -273.43, -26.0953, 0.33 ) }
    dend_19 { pt3dadd( 54.7729, -275.046, -24.7759, 1.33 ) }
    dend_19 { pt3dadd( 57.8108, -279.692, -21.0124, 0.67 ) }
    dend_19 { pt3dadd( 58.6876, -281.053, -19.5499, 0.67 ) }
    dend_19 { pt3dadd( 59.1055, -281.655, -18.598, 1.33 ) }
    dend_19 { pt3dadd( 59.5586, -282.312, -16.8785, 0.33 ) }
    dend_19 { pt3dadd( 59.9393, -283.293, -14.5605, 0.33 ) }
    dend_19 { pt3dadd( 60.069, -284.424, -12.4126, 0.33 ) }
    dend_19 { pt3dadd( 60.4355, -287.929, -5.81929, 0.67 ) }
    dend_19 { pt3dadd( 60.5283, -288.528, -4.59781, 0.67 ) }
    dend_19 { pt3dadd( 60.6497, -289.538, -2.52587, 0.67 ) }
    dend_19 { pt3dadd( 60.6881, -290.942, 0.0685352, 0.33 ) }
    dend_19 { pt3dadd( 60.4868, -293.321, 3.25898, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 37.5564, -257.248, -39.9632, 0.67 ) }
    dend_14 { pt3dadd( 37.6572, -260.153, -41.1355, 0.67 ) }
    dend_14 { pt3dadd( 37.7947, -264.117, -42.7351, 0.67 ) }
    dend_14 { pt3dadd( 37.9823, -269.523, -44.9173, 0.33 ) }
    dend_14 { pt3dadd( 38.0837, -272.445, -46.0964, 2.0 ) }
    dend_14 { pt3dadd( 38.2385, -276.907, -47.8975, 0.33 ) }
    dend_14 { pt3dadd( 38.3115, -279.009, -48.7457, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 32.7908, -173.797, 13.4872, 0.33 ) }
    dend_8 { pt3dadd( 27.1428, -178.075, 15.6793, 0.33 ) }
    dend_8 { pt3dadd( 25.4737, -179.526, 16.1303, 0.33 ) }
    dend_8 { pt3dadd( 22.6254, -182.384, 16.5969, 0.33 ) }
    dend_8 { pt3dadd( 21.4385, -183.756, 16.7155, 0.33 ) }
    dend_8 { pt3dadd( 18.8939, -186.748, 16.5144, 0.67 ) }
    dend_8 { pt3dadd( 17.3251, -188.622, 16.2636, 0.67 ) }
    dend_8 { pt3dadd( 15.4683, -190.971, 15.6201, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 13.5579, -193.557, 14.9034, 0.33 ) }
    dend_8 { pt3dadd( 12.2952, -195.438, 14.3144, 0.33 ) }
    dend_8 { pt3dadd( 8.88393, -200.726, 12.54, 0.33 ) }
    dend_8 { pt3dadd( 7.81874, -202.594, 11.7243, 1.33 ) }
    dend_8 { pt3dadd( 6.51483, -205.132, 10.5683, 0.33 ) }
    dend_8 { pt3dadd( 5.40734, -207.55, 9.40364, 0.33 ) }
    dend_8 { pt3dadd( 3.4964, -212.158, 7.01913, 0.67 ) }
    dend_8 { pt3dadd( 2.41356, -215.241, 5.34761, 1.33 ) }
    dend_8 { pt3dadd( 1.16226, -221.767, 1.81063, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 32.7908, -173.797, 13.4872, 0.67 ) }
    dend_3 { pt3dadd( 33.0958, -177.011, 13.6244, 0.67 ) }
    dend_3 { pt3dadd( 33.2674, -179.008, 13.7958, 1.33 ) }
    dend_3 { pt3dadd( 33.7912, -185.765, 14.5055, 0.67 ) }
    dend_3 { pt3dadd( 33.9554, -187.267, 14.6728, 0.67 ) }
    dend_3 { pt3dadd( 34.1129, -188.703, 14.7844, 0.67 ) }
    dend_3 { pt3dadd( 34.4295, -191.902, 14.8805, 0.67 ) }
    dend_3 { pt3dadd( 34.583, -193.623, 14.9324, 1.33 ) }
    dend_3 { pt3dadd( 34.8207, -196.166, 14.995, 0.67 ) }
    dend_3 { pt3dadd( 35.2442, -199.849, 14.9994, 0.67 ) }
    dend_3 { pt3dadd( 35.5465, -202.619, 14.8521, 0.67 ) }
    dend_3 { pt3dadd( 35.833, -204.957, 14.4969, 1.33 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 6.28885, 44.0086, -11.6091, 1.33 ) }
    dend_75 { pt3dadd( 9.22099, 46.1621, -10.0484, 0.33 ) }
    dend_75 { pt3dadd( 10.2375, 46.9087, -9.50727, 1.33 ) }
    dend_75 { pt3dadd( 13.399, 49.2308, -7.82442, 0.33 ) }
    dend_75 { pt3dadd( 15.6028, 50.8493, -6.65141, 0.67 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 6.28885, 44.0086, -11.6091, 1.33 ) }
    dend_74 { pt3dadd( 5.98653, 44.4123, -13.2969, 1.33 ) }
    dend_74 { pt3dadd( 5.70528, 45.4167, -16.7366, 0.67 ) }
    dend_74 { pt3dadd( 5.56787, 46.7513, -20.8422, 1.33 ) }
    dend_74 { pt3dadd( 5.55366, 47.2195, -22.5163, 1.33 ) }
    dend_74 { pt3dadd( 5.69367, 48.6756, -27.7308, 0.67 ) }
    dend_74 { pt3dadd( 5.82176, 49.1469, -29.5366, 1.33 ) }
    dend_74 { pt3dadd( 6.38129, 50.4632, -34.4811, 0.67 ) }
    dend_74 { pt3dadd( 6.55232, 50.7082, -35.2876, 1.33 ) }
    dend_74 { pt3dadd( 7.54503, 51.6149, -38.4939, 0.67 ) }
    dend_74 { pt3dadd( 8.15264, 51.965, -40.0616, 1.33 ) }
    dend_74 { pt3dadd( 10.0904, 52.5817, -44.2636, 0.67 ) }
    dend_74 { pt3dadd( 10.4404, 52.6406, -44.9228, 1.33 ) }
    dend_74 { pt3dadd( 11.3832, 52.7086, -46.1832, 0.67 ) }
    dend_74 { pt3dadd( 12.09, 52.7289, -46.9509, 1.33 ) }
    dend_74 { pt3dadd( 14.0153, 52.7107, -48.2556, 0.33 ) }
    dend_74 { pt3dadd( 14.7325, 52.6445, -48.6138, 0.67 ) }
    dend_74 { pt3dadd( 15.7164, 52.6045, -48.9057, 0.33 ) }
    dend_74 { pt3dadd( 16.1007, 52.603, -49.0168, 0.33 ) }
    dend_74 { pt3dadd( 17.8634, 52.5897, -49.5364, 2.0 ) }
    dend_74 { pt3dadd( 19.7872, 52.6819, -50.0943, 0.67 ) }
    dend_74 { pt3dadd( 21.9733, 53.0031, -50.7602, 0.33 ) }
    dend_74 { pt3dadd( 23.663, 53.3722, -51.3062, 1.33 ) }
    dend_74 { pt3dadd( 24.6888, 53.6796, -51.6438, 1.33 ) }
    dend_74 { pt3dadd( 26.1958, 54.2154, -52.1497, 0.33 ) }
    dend_74 { pt3dadd( 26.9692, 54.576, -52.4564, 1.33 ) }
    dend_74 { pt3dadd( 28.9631, 55.7269, -53.3628, 0.33 ) }
    dend_74 { pt3dadd( 29.3364, 55.9586, -53.5022, 1.33 ) }
    dend_74 { pt3dadd( 30.2213, 56.5357, -53.8072, 0.33 ) }
    dend_74 { pt3dadd( 30.5719, 56.8076, -53.9195, 0.67 ) }
    dend_74 { pt3dadd( 32.1909, 58.2365, -54.4094, 0.33 ) }
    dend_74 { pt3dadd( 32.5223, 58.5418, -54.4857, 0.67 ) }
    dend_74 { pt3dadd( 34.3043, 60.1869, -54.7414, 0.33 ) }
    dend_74 { pt3dadd( 34.9316, 60.7553, -54.8053, 1.33 ) }
    dend_74 { pt3dadd( 35.7715, 61.4867, -54.8586, 0.33 ) }
    dend_74 { pt3dadd( 35.9305, 61.6218, -54.8852, 0.67 ) }
    dend_74 { pt3dadd( 37.3928, 62.8497, -55.3541, 0.33 ) }
    dend_74 { pt3dadd( 37.8743, 63.2492, -55.5303, 1.33 ) }
    dend_74 { pt3dadd( 39.2272, 64.2053, -56.0607, 0.33 ) }
    dend_74 { pt3dadd( 39.8616, 64.5427, -56.2248, 0.67 ) }
    dend_74 { pt3dadd( 42.8221, 65.5184, -56.6374, 0.67 ) }
    dend_74 { pt3dadd( 44.208, 65.6173, -56.6341, 0.33 ) }
    dend_74 { pt3dadd( 47.6693, 65.4628, -56.4264, 2.0 ) }
    dend_74 { pt3dadd( 50.0573, 65.1678, -56.0722, 0.33 ) }
    dend_74 { pt3dadd( 51.5269, 64.8474, -55.6847, 0.33 ) }
    dend_74 { pt3dadd( 52.6086, 64.5666, -55.28, 0.67 ) }
    dend_74 { pt3dadd( 55.101, 63.8546, -54.0395, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 73/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -2.31627, 42.431, -0.0965158, 2.0 ) }
    dend_52 { pt3dadd( -0.854907, 48.4063, -6.1549, 2.0 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.31627, 42.431, -0.0965158, 0.67 ) }
    dend_51 { pt3dadd( -2.42776, 47.6399, 0.88959, 0.67 ) }
    dend_51 { pt3dadd( -2.45698, 51.5239, 1.52727, 0.67 ) }
    dend_51 { pt3dadd( -2.55663, 55.0567, 2.05895, 0.67 ) }
    dend_51 { pt3dadd( -2.70329, 59.2231, 2.54349, 0.67 ) }
    dend_51 { pt3dadd( -2.98645, 64.7693, 3.05269, 0.67 ) }
    dend_51 { pt3dadd( -3.15231, 68.2829, 3.31855, 1.33 ) }
    dend_51 { pt3dadd( -3.65601, 77.1883, 3.85944, 0.67 ) }
    dend_51 { pt3dadd( -3.91616, 80.6911, 3.84617, 0.67 ) }
    dend_51 { pt3dadd( -4.26945, 86.1917, 3.71538, 0.67 ) }
    dend_51 { pt3dadd( -4.35874, 89.078, 3.62103, 0.67 ) }
    dend_51 { pt3dadd( -4.34049, 91.2947, 3.49873, 1.33 ) }
    dend_51 { pt3dadd( -4.17879, 94.8083, 3.52885, 0.67 ) }
    dend_51 { pt3dadd( -3.66538, 101.793, 4.33649, 0.67 ) }
    dend_51 { pt3dadd( -2.97916, 107.287, 5.31621, 0.67 ) }
    dend_51 { pt3dadd( -2.42848, 110.549, 6.29187, 1.33 ) }
    dend_51 { pt3dadd( -1.99253, 112.59, 7.11768, 0.67 ) }
    dend_51 { pt3dadd( -1.27426, 115.793, 8.89534, 0.67 ) }
    dend_51 { pt3dadd( -0.780792, 117.299, 10.2089, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 29.5062, 117.986, -9.20151, 0.33 ) }
    dend_47 { pt3dadd( 30.8529, 118.178, -9.86206, 0.33 ) }
    dend_47 { pt3dadd( 32.8504, 118.464, -10.8419, 0.67 ) }
    dend_47 { pt3dadd( 34.1871, 118.655, -11.4975, 0.33 ) }
    dend_47 { pt3dadd( 34.9377, 118.762, -11.8656, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 29.5062, 117.986, -9.20151, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( 29.8007, 119.796, -10.0849, 1.33 ) }
    dend_44 { pt3dadd( 30.2924, 122.685, -11.7765, 0.33 ) }
    dend_44 { pt3dadd( 30.3839, 123.145, -12.1001, 0.67 ) }
    dend_44 { pt3dadd( 30.8451, 125.469, -13.9559, 0.33 ) }
    dend_44 { pt3dadd( 31.0432, 126.376, -14.5609, 0.67 ) }
    dend_44 { pt3dadd( 32.4832, 132.246, -17.855, 0.33 ) }
    dend_44 { pt3dadd( 32.7126, 132.945, -18.1941, 0.67 ) }
    dend_44 { pt3dadd( 33.9168, 135.973, -19.4942, 0.33 ) }
    dend_44 { pt3dadd( 35.0724, 138.984, -20.4083, 0.67 ) }
    dend_44 { pt3dadd( 37.8563, 146.581, -21.8351, 0.33 ) }
    dend_44 { pt3dadd( 38.1557, 147.429, -21.9001, 0.67 ) }
    dend_44 { pt3dadd( 39.9878, 151.968, -21.3339, 0.33 ) }
    dend_44 { pt3dadd( 42.8489, 159.263, -20.6127, 1.33 ) }
    dend_44 { pt3dadd( 43.6053, 161.268, -20.3932, 0.33 ) }
    dend_44 { pt3dadd( 43.823, 162.011, -20.6062, 0.67 ) }
    dend_44 { pt3dadd( 44.6769, 165.587, -22.4916, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 16/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -14.0299, 34.6655, -36.221, 0.33 ) }
    dend_38 { pt3dadd( -14.4503, 37.0146, -38.4202, 0.33 ) }
    dend_38 { pt3dadd( -14.8649, 39.0495, -40.0761, 0.33 ) }
    dend_38 { pt3dadd( -15.4671, 41.9075, -42.097, 0.67 ) }
    dend_38 { pt3dadd( -15.6737, 43.183, -43.0436, 0.33 ) }
    dend_38 { pt3dadd( -16.0642, 45.4171, -44.6651, 1.33 ) }
    dend_38 { pt3dadd( -17.0286, 49.8339, -47.9323, 0.33 ) }
    dend_38 { pt3dadd( -17.6341, 52.3984, -49.7086, 1.33 ) }
    dend_38 { pt3dadd( -18.1862, 54.1888, -50.8777, 0.33 ) }
    dend_38 { pt3dadd( -19.9486, 59.2253, -53.7904, 0.33 ) }
    dend_38 { pt3dadd( -20.8269, 61.4963, -54.9805, 0.33 ) }
    dend_38 { pt3dadd( -22.3492, 65.0908, -56.5085, 1.33 ) }
    dend_38 { pt3dadd( -23.6038, 67.8561, -57.4513, 0.33 ) }
    dend_38 { pt3dadd( -24.605, 69.9462, -58.1552, 0.33 ) }
    dend_38 { pt3dadd( -25.0409, 70.8195, -58.3988, 1.33 ) }
    dend_38 { pt3dadd( -26.2793, 73.189, -58.8432, 0.33 ) }
    dend_38 { pt3dadd( -27.0811, 74.8863, -59.1892, 2.0 ) }
    dend_38 { pt3dadd( -29.3956, 80.2043, -60.2693, 0.33 ) }
    dend_38 { pt3dadd( -29.746, 81.0373, -60.3442, 0.67 ) }
    dend_38 { pt3dadd( -30.5822, 83.2013, -60.2658, 0.33 ) }
    dend_38 { pt3dadd( -30.8166, 83.8648, -60.135, 0.67 ) }
    dend_38 { pt3dadd( -31.468, 85.8814, -59.5027, 0.33 ) }
    dend_38 { pt3dadd( -31.8577, 87.073, -59.0837, 0.67 ) }
    dend_38 { pt3dadd( -34.3626, 94.6508, -55.9136, 0.33 ) }
    dend_38 { pt3dadd( -34.9066, 96.4237, -55.3395, 2.67 ) }
    dend_38 { pt3dadd( -36.6315, 102.39, -53.8321, 0.33 ) }
    dend_38 { pt3dadd( -36.8955, 103.354, -53.6637, 0.67 ) }
    dend_38 { pt3dadd( -37.9229, 107.183, -53.307, 0.33 ) }
    dend_38 { pt3dadd( -38.3386, 108.804, -53.3425, 0.67 ) }
    dend_38 { pt3dadd( -39.6657, 114.229, -54.2226, 0.33 ) }
    dend_38 { pt3dadd( -40.0356, 115.764, -54.5089, 0.67 ) }
    dend_38 { pt3dadd( -40.4427, 117.454, -54.8897, 2.0 ) }
    dend_38 { pt3dadd( -40.9328, 119.614, -55.3676, 0.33 ) }
    dend_38 { pt3dadd( -41.2098, 121.205, -55.677, 2.0 ) }
    dend_38 { pt3dadd( -41.6083, 123.676, -56.1911, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 51/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -14.0299, 34.6655, -36.221, 0.67 ) }
    dend_35 { pt3dadd( -15.3294, 35.5168, -37.8765, 0.67 ) }
    dend_35 { pt3dadd( -16.8243, 36.5419, -39.0992, 0.33 ) }
    dend_35 { pt3dadd( -20.9718, 39.3194, -41.354, 0.67 ) }
    dend_35 { pt3dadd( -22.7369, 40.4111, -42.0204, 0.67 ) }
    dend_35 { pt3dadd( -23.8174, 41.0153, -42.3037, 0.33 ) }
    dend_35 { pt3dadd( -25.1199, 41.6983, -42.5608, 0.33 ) }
    dend_35 { pt3dadd( -28.1474, 43.2864, -42.8733, 0.33 ) }
    dend_35 { pt3dadd( -30.2017, 44.2661, -42.8932, 1.33 ) }
    dend_35 { pt3dadd( -32.1771, 44.9545, -42.6786, 0.33 ) }
    dend_35 { pt3dadd( -34.4847, 45.552, -42.4144, 0.67 ) }
    dend_35 { pt3dadd( -35.6705, 45.8025, -42.2691, 0.33 ) }
    dend_35 { pt3dadd( -37.6968, 46.2092, -41.9998, 0.33 ) }
    dend_35 { pt3dadd( -38.6065, 46.4382, -41.9681, 0.67 ) }
    dend_35 { pt3dadd( -40.4064, 46.9542, -42.121, 0.33 ) }
    dend_35 { pt3dadd( -41.2815, 47.2445, -42.3053, 0.33 ) }
    dend_35 { pt3dadd( -42.2383, 47.523, -42.7137, 1.33 ) }
    dend_35 { pt3dadd( -43.9256, 47.8875, -43.7073, 1.33 ) }
    dend_35 { pt3dadd( -47.6043, 48.1995, -46.4532, 0.33 ) }
    dend_35 { pt3dadd( -48.9516, 48.3024, -47.5366, 0.33 ) }
    dend_35 { pt3dadd( -49.4518, 48.3122, -47.9799, 0.67 ) }
    dend_35 { pt3dadd( -52.3225, 48.0595, -50.6305, 0.33 ) }
    dend_35 { pt3dadd( -53.0394, 47.9025, -51.328, 1.33 ) }
    dend_35 { pt3dadd( -56.017, 46.6875, -54.2576, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 90.814, -12.9381, -32.4939, 0.33 ) }
    dend_24 { pt3dadd( 91.7245, -11.9762, -31.9487, 0.33 ) }
    dend_24 { pt3dadd( 92.3684, -11.2961, -31.5631, 0.67 ) }
    dend_24 { pt3dadd( 93.165, -10.4546, -31.0861, 0.33 ) }
    dend_24 { pt3dadd( 93.8487, -9.73229, -30.6767, 0.67 ) }
    dend_24 { pt3dadd( 95.0468, -8.46669, -29.9593, 0.33 ) }
    dend_24 { pt3dadd( 95.0468, -8.46669, -29.9593, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 90.814, -12.9381, -32.4939, 0.33 ) }
    dend_23 { pt3dadd( 91.1291, -11.8102, -33.9023, 0.33 ) }
    dend_23 { pt3dadd( 91.3473, -10.9433, -34.9514, 1.33 ) }
    dend_23 { pt3dadd( 92.9887, -2.94198, -43.825, 0.33 ) }
    dend_23 { pt3dadd( 93.1945, -1.81621, -45.2143, 2.0 ) }
    dend_23 { pt3dadd( 94.0415, 3.35776, -51.6408, 0.33 ) }
    dend_23 { pt3dadd( 94.3708, 5.36979, -54.1399, 1.33 ) }
    dend_23 { pt3dadd( 94.969, 9.1531, -59.0313, 0.33 ) }
    dend_23 { pt3dadd( 95.2925, 11.6172, -62.2664, 1.33 ) }
    dend_23 { pt3dadd( 95.4809, 19.3947, -71.8644, 0.33 ) }
    dend_23 { pt3dadd( 95.5051, 20.9986, -74.1071, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 38.3115, -279.009, -48.7457, 0.33 ) }
    dend_18 { pt3dadd( 36.1466, -278.742, -47.3888, 0.33 ) }
    dend_18 { pt3dadd( 32.2201, -278.259, -44.9278, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 38.3115, -279.009, -48.7457, 0.33 ) }
    dend_15 { pt3dadd( 38.8082, -281.801, -48.544, 0.33 ) }
    dend_15 { pt3dadd( 39.1644, -284.254, -48.3682, 0.67 ) }
    dend_15 { pt3dadd( 39.714, -288.457, -48.1093, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 40.2185, -293.278, -47.8938, 1.33 ) }
    dend_15 { pt3dadd( 40.337, -295.23, -47.8662, 1.33 ) }
    dend_15 { pt3dadd( 40.4818, -298.716, -47.9036, 0.67 ) }
    dend_15 { pt3dadd( 40.4327, -300.499, -47.9061, 0.67 ) }
    dend_15 { pt3dadd( 40.2786, -302.475, -47.9236, 0.33 ) }
    dend_15 { pt3dadd( 40.0977, -303.866, -47.9631, 0.67 ) }
    dend_15 { pt3dadd( 39.6406, -306.794, -48.2873, 0.33 ) }
    dend_15 { pt3dadd( 39.0061, -309.913, -48.692, 0.67 ) }
    dend_15 { pt3dadd( 38.278, -312.798, -48.9885, 0.33 ) }
    dend_15 { pt3dadd( 37.7323, -315.063, -49.3798, 1.33 ) }
    dend_15 { pt3dadd( 37.0749, -317.705, -49.8484, 1.33 ) }
    dend_15 { pt3dadd( 36.43, -320.339, -50.3265, 0.67 ) }
    dend_15 { pt3dadd( 35.5185, -323.998, -51.0442, 0.67 ) }
    dend_15 { pt3dadd( 33.9156, -329.952, -52.4311, 0.67 ) }
    dend_15 { pt3dadd( 32.4637, -335.81, -54.0773, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 1.16226, -221.767, 1.81063, 0.33 ) }
    dend_10 { pt3dadd( 3.22239, -220.614, 7.12631, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 17/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 1.16226, -221.767, 1.81063, 0.33 ) }
    dend_9 { pt3dadd( 0.70436, -223.293, 2.23109, 0.33 ) }
    dend_9 { pt3dadd( 0.264903, -224.658, 2.58739, 1.33 ) }
    dend_9 { pt3dadd( -0.659126, -227.118, 3.19178, 0.33 ) }
    dend_9 { pt3dadd( -2.54379, -231.884, 4.26742, 0.33 ) }
    dend_9 { pt3dadd( -3.02415, -233.059, 4.54816, 2.0 ) }
    dend_9 { pt3dadd( -3.79452, -235.065, 5.17538, 0.33 ) }
    dend_9 { pt3dadd( -3.88953, -235.289, 5.25844, 0.67 ) }
    dend_9 { pt3dadd( -4.37964, -236.409, 5.76149, 0.33 ) }
    dend_9 { pt3dadd( -4.79543, -237.252, 6.20162, 0.33 ) }
    dend_9 { pt3dadd( -5.34769, -238.514, 6.66291, 1.33 ) }
    dend_9 { pt3dadd( -6.67226, -242.197, 8.52738, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 35.833, -204.957, 14.4969, 0.33 ) }
    dend_7 { pt3dadd( 33.0175, -203.127, 14.8417, 0.33 ) }
    dend_7 { pt3dadd( 30.2414, -201.322, 15.1817, 0.33 ) }
    dend_7 { pt3dadd( 26.1944, -198.691, 15.6773, 0.33 ) }
    dend_7 { pt3dadd( 24.6541, -197.69, 15.866, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 34/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 35.833, -204.957, 14.4969, 0.67 ) }
    dend_4 { pt3dadd( 35.4657, -206.377, 16.9135, 0.67 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 36/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 15.6028, 50.8493, -6.65141, 0.67 ) }
    dend_79 { pt3dadd( 14.8861, 53.546, -9.70291, 0.67 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 15.6028, 50.8493, -6.65141, 0.67 ) }
    dend_76 { pt3dadd( 17.0693, 50.3627, -5.34423, 0.67 ) }
    dend_76 { pt3dadd( 19.2394, 49.8396, -3.4306, 0.33 ) }
    dend_76 { pt3dadd( 20.4048, 49.7455, -2.32394, 0.67 ) }
    dend_76 { pt3dadd( 21.7927, 49.8323, -1.02726, 0.33 ) }
    dend_76 { pt3dadd( 24.8314, 50.2974, 1.51973, 1.33 ) }
    dend_76 { pt3dadd( 26.2323, 50.6518, 2.75788, 0.33 ) }
    dend_76 { pt3dadd( 27.466, 51.0692, 3.81984, 0.67 ) }
    dend_76 { pt3dadd( 29.5068, 51.9944, 5.48722, 0.33 ) }
    dend_76 { pt3dadd( 30.7042, 52.6477, 6.50893, 1.33 ) }
    dend_76 { pt3dadd( 32.6042, 53.8506, 8.07606, 0.33 ) }
    dend_76 { pt3dadd( 35.4938, 55.8874, 10.2629, 1.33 ) }
    dend_76 { pt3dadd( 37.376, 57.2846, 11.6968, 0.67 ) }
    dend_76 { pt3dadd( 38.0365, 57.7936, 12.172, 0.67 ) }
    dend_76 { pt3dadd( 40.0843, 59.4787, 13.7268, 0.33 ) }
    dend_76 { pt3dadd( 41.0386, 60.3685, 14.5214, 0.33 ) }
    dend_76 { pt3dadd( 41.9316, 61.273, 15.2624, 0.33 ) }
    dend_76 { pt3dadd( 43.0114, 62.2717, 16.0027, 0.33 ) }
    dend_76 { pt3dadd( 43.7244, 62.9656, 16.4786, 1.33 ) }
    dend_76 { pt3dadd( 46.0641, 65.2626, 18.0075, 0.33 ) }
    dend_76 { pt3dadd( 47.1822, 66.4046, 18.6756, 0.67 ) }
    dend_76 { pt3dadd( 48.5928, 67.7375, 19.5848, 0.67 ) }
    dend_76 { pt3dadd( 50.0618, 68.9321, 20.5983, 0.33 ) }
    dend_76 { pt3dadd( 51.9805, 70.3871, 21.9279, 1.33 ) }
    dend_76 { pt3dadd( 54.1025, 71.9228, 23.367, 0.67 ) }
    dend_76 { pt3dadd( 55.8373, 73.125, 24.4503, 0.67 ) }
    dend_76 { pt3dadd( 57.9399, 74.6019, 25.9801, 0.67 ) }
    dend_76 { pt3dadd( 59.9712, 76.177, 27.7809, 0.67 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 66/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -0.854907, 48.4063, -6.1549, 0.67 ) }
    dend_68 { pt3dadd( 1.13832, 53.2966, -8.33491, 0.67 ) }
    dend_68 { pt3dadd( 1.81019, 54.7104, -9.03255, 0.67 ) }
    dend_68 { pt3dadd( 4.34492, 59.3054, -10.994, 1.33 ) }
    dend_68 { pt3dadd( 6.32156, 62.8886, -12.5236, 1.33 ) }
    dend_68 { pt3dadd( 7.36006, 64.7713, -13.3272, 0.67 ) }
    dend_68 { pt3dadd( 8.57344, 66.9709, -14.2661, 1.33 ) }
    dend_68 { pt3dadd( 10.0646, 69.3459, -15.3405, 0.33 ) }
    dend_68 { pt3dadd( 12.6956, 72.7767, -16.7866, 1.33 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 75/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -0.854907, 48.4063, -6.1549, 1.33 ) }
    dend_53 { pt3dadd( -4.18323, 51.3962, -4.17803, 1.33 ) }
    dend_53 { pt3dadd( -11.567, 58.0293, 0.20756, 0.67 ) }
    dend_53 { pt3dadd( -13.9634, 60.1822, 1.63094, 0.67 ) }
    dend_53 { pt3dadd( -18.9705, 64.6802, 4.60491, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 44.6769, 165.587, -22.4916, 0.33 ) }
    dend_46 { pt3dadd( 43.7341, 166.628, -22.3118, 0.33 ) }
    dend_46 { pt3dadd( 43.5424, 166.839, -22.2753, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 44.6769, 165.587, -22.4916, 0.33 ) }
    dend_45 { pt3dadd( 45.0032, 167.758, -22.7851, 0.33 ) }
    dend_45 { pt3dadd( 45.2247, 168.58, -23.1016, 0.67 ) }
    dend_45 { pt3dadd( 45.7937, 170.674, -24.0283, 0.33 ) }
    dend_45 { pt3dadd( 46.0843, 171.681, -24.508, 0.67 ) }
    dend_45 { pt3dadd( 46.5488, 173.119, -25.2062, 0.33 ) }
    dend_45 { pt3dadd( 47.4669, 175.595, -26.4229, 0.67 ) }
    dend_45 { pt3dadd( 48.6239, 178.214, -27.9311, 0.33 ) }
    dend_45 { pt3dadd( 49.2905, 179.581, -28.7563, 0.33 ) }
    dend_45 { pt3dadd( 49.5623, 180.068, -29.0627, 0.67 ) }
    dend_45 { pt3dadd( 50.1129, 181.166, -29.7853, 0.33 ) }
    dend_45 { pt3dadd( 50.4885, 182.109, -30.3806, 0.67 ) }
    dend_45 { pt3dadd( 51.1614, 184.563, -31.6408, 0.33 ) }
    dend_45 { pt3dadd( 51.3373, 185.598, -32.1035, 0.67 ) }
    dend_45 { pt3dadd( 51.4314, 186.177, -32.377, 0.67 ) }
    dend_45 { pt3dadd( 51.8613, 189.841, -34.1071, 0.33 ) }
    dend_45 { pt3dadd( 51.8989, 190.576, -34.4646, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( 51.8815, 192.709, -35.5052, 0.67 ) }
    dend_45 { pt3dadd( 51.8411, 193.524, -35.9049, 0.33 ) }
    dend_45 { pt3dadd( 51.7295, 195.407, -36.8575, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 3/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -41.6083, 123.676, -56.1911, 0.33 ) }
    dend_40 { pt3dadd( -41.7557, 125.173, -56.6917, 0.33 ) }
    dend_40 { pt3dadd( -41.8679, 126.311, -57.0724, 0.67 ) }
    dend_40 { pt3dadd( -42.1861, 129.54, -58.1525, 0.33 ) }
    dend_40 { pt3dadd( -42.3966, 131.676, -58.8671, 1.33 ) }
    dend_40 { pt3dadd( -42.6659, 134.408, -59.781, 0.33 ) }
    dend_40 { pt3dadd( -42.9131, 136.917, -60.6203, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -41.6083, 123.676, -56.1911, 0.33 ) }
    dend_39 { pt3dadd( -42.4818, 125.586, -54.9848, 0.33 ) }
    dend_39 { pt3dadd( -43.8489, 128.711, -53.648, 0.67 ) }
    dend_39 { pt3dadd( -44.3395, 129.931, -53.2425, 0.33 ) }
    dend_39 { pt3dadd( -44.7077, 130.898, -53.1589, 0.67 ) }
    dend_39 { pt3dadd( -45.2085, 132.184, -53.1825, 0.33 ) }
    dend_39 { pt3dadd( -45.7259, 133.517, -53.2728, 1.33 ) }
    dend_39 { pt3dadd( -47.3355, 137.892, -53.9575, 0.33 ) }
    dend_39 { pt3dadd( -48.2537, 140.435, -54.5242, 0.67 ) }
    dend_39 { pt3dadd( -50.2478, 146.003, -55.8357, 0.33 ) }
    dend_39 { pt3dadd( -50.4765, 146.628, -55.9848, 0.67 ) }
    dend_39 { pt3dadd( -51.1589, 148.548, -56.4454, 0.33 ) }
    dend_39 { pt3dadd( -51.4896, 149.555, -56.6939, 0.67 ) }
    dend_39 { pt3dadd( -52.2522, 151.986, -57.313, 0.33 ) }
    dend_39 { pt3dadd( -52.6125, 153.13, -57.4654, 0.67 ) }
    dend_39 { pt3dadd( -53.3383, 155.335, -57.3949, 0.33 ) }
    dend_39 { pt3dadd( -53.6686, 156.261, -57.3685, 0.33 ) }
    dend_39 { pt3dadd( -54.014, 157.166, -57.3557, 0.67 ) }
    dend_39 { pt3dadd( -54.5775, 158.549, -57.3413, 0.33 ) }
    dend_39 { pt3dadd( -55.4077, 160.534, -57.3217, 0.67 ) }
    dend_39 { pt3dadd( -56.2822, 162.341, -57.3034, 0.33 ) }
    dend_39 { pt3dadd( -56.6468, 163.043, -57.2841, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 32/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -56.017, 46.6875, -54.2576, 0.33 ) }
    dend_37 { pt3dadd( -60.7161, 50.3157, -56.4757, 0.33 ) }
    dend_37 { pt3dadd( -61.6598, 51.0254, -56.9767, 2.0 ) }
    dend_37 { pt3dadd( -65.6581, 54.0312, -59.1539, 0.33 ) }
    dend_37 { pt3dadd( -66.1465, 54.3796, -59.3906, 0.67 ) }
    dend_37 { pt3dadd( -66.9495, 54.9391, -59.7417, 0.33 ) }
    dend_37 { pt3dadd( -69.8061, 56.9998, -60.8403, 1.33 ) }
    dend_37 { pt3dadd( -71.1398, 57.9056, -61.3211, 0.33 ) }
    dend_37 { pt3dadd( -71.9676, 58.5, -61.5215, 0.67 ) }
    dend_37 { pt3dadd( -74.783, 60.7953, -61.7619, 0.33 ) }
    dend_37 { pt3dadd( -76.045, 61.8841, -61.7905, 1.33 ) }
    dend_37 { pt3dadd( -78.1294, 63.8665, -61.6899, 0.33 ) }
    dend_37 { pt3dadd( -79.725, 65.4814, -61.4875, 0.33 ) }
    dend_37 { pt3dadd( -81.4033, 67.299, -61.2611, 0.67 ) }
    dend_37 { pt3dadd( -83.5424, 69.7696, -60.9745, 0.33 ) }
    dend_37 { pt3dadd( -84.519, 71.0073, -60.8384, 1.33 ) }
    dend_37 { pt3dadd( -86.3799, 73.4525, -60.5747, 0.33 ) }
    dend_37 { pt3dadd( -86.8066, 74.0186, -60.56, 0.67 ) }
    dend_37 { pt3dadd( -87.5368, 75.0275, -60.6129, 0.33 ) }
    dend_37 { pt3dadd( -88.1456, 75.8786, -60.7273, 0.67 ) }
    dend_37 { pt3dadd( -88.7749, 76.7004, -60.9151, 0.33 ) }
    dend_37 { pt3dadd( -89.3396, 77.4031, -61.1238, 0.67 ) }
    dend_37 { pt3dadd( -91.8849, 80.392, -62.3012, 0.33 ) }
    dend_37 { pt3dadd( -91.8849, 80.392, -62.3012, 0.67 ) }
    dend_37 { pt3dadd( -92.8246, 81.5199, -62.8554, 0.33 ) }
    dend_37 { pt3dadd( -93.1744, 81.9212, -63.0717, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -56.017, 46.6875, -54.2576, 0.33 ) }
    dend_36 { pt3dadd( -58.3776, 46.7165, -56.3468, 0.33 ) }
    dend_36 { pt3dadd( -61.1138, 46.8617, -58.396, 0.67 ) }
    dend_36 { pt3dadd( -64.9639, 47.0786, -61.0883, 0.33 ) }
    dend_36 { pt3dadd( -65.6987, 47.107, -61.5433, 0.67 ) }
    dend_36 { pt3dadd( -70.8111, 47.2019, -64.4679, 0.33 ) }
    dend_36 { pt3dadd( -76.7196, 47.0386, -67.5015, 2.67 ) }
    dend_36 { pt3dadd( -82.2776, 46.5302, -70.4219, 0.33 ) }
    dend_36 { pt3dadd( -82.7817, 46.4391, -70.659, 0.67 ) }
    dend_36 { pt3dadd( -85.707, 45.6027, -72.045, 0.33 ) }
    dend_36 { pt3dadd( -86.4704, 45.2845, -72.3365, 1.33 ) }
    dend_36 { pt3dadd( -89.5913, 43.5056, -73.0268, 0.33 ) }
    dend_36 { pt3dadd( -93.5129, 40.7482, -73.4632, 2.0 ) }
    dend_36 { pt3dadd( -95.8413, 38.7307, -73.9819, 0.33 ) }
    dend_36 { pt3dadd( -96.2775, 38.383, -74.0833, 0.67 ) }
    dend_36 { pt3dadd( -98.5607, 36.7213, -74.6212, 0.33 ) }
    dend_36 { pt3dadd( -99.0434, 36.4582, -74.6938, 0.67 ) }
    dend_36 { pt3dadd( -101.281, 35.6112, -74.8311, 0.33 ) }
    dend_36 { pt3dadd( -103.548, 35.0995, -74.6929, 0.67 ) }
    dend_36 { pt3dadd( -107.37, 34.6853, -74.4369, 0.33 ) }
    dend_36 { pt3dadd( -108.588, 34.6365, -74.2416, 0.67 ) }
    dend_36 { pt3dadd( -112.074, 34.6508, -73.6265, 0.33 ) }
    dend_36 { pt3dadd( -112.843, 34.6564, -73.4679, 0.67 ) }
    dend_36 { pt3dadd( -116.988, 34.7878, -72.3706, 0.33 ) }
    dend_36 { pt3dadd( -118.151, 34.8619, -71.9531, 0.67 ) }
    dend_36 { pt3dadd( -122.219, 35.5762, -70.2336, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 32.4637, -335.81, -54.0773, 0.33 ) }
    dend_17 { pt3dadd( 29.0545, -339.722, -51.334, 0.33 ) }
    dend_17 { pt3dadd( 27.4438, -341.593, -50.3133, 0.67 ) }
    dend_17 { pt3dadd( 26.7525, -342.382, -49.9743, 0.33 ) }
    dend_17 { pt3dadd( 25.934, -343.305, -49.8665, 0.33 ) }
    dend_17 { pt3dadd( 24.809, -344.702, -50.0699, 0.33 ) }
    dend_17 { pt3dadd( 24.3243, -345.363, -50.3492, 0.67 ) }
    dend_17 { pt3dadd( 23.4121, -346.725, -51.4621, 0.33 ) }
    dend_17 { pt3dadd( 22.7894, -347.79, -52.3843, 0.67 ) }
    dend_17 { pt3dadd( 21.0492, -351.515, -56.1097, 0.33 ) }
    dend_17 { pt3dadd( 20.5974, -352.822, -57.4821, 0.67 ) }
    dend_17 { pt3dadd( 20.0105, -355.085, -59.9561, 0.33 ) }
    dend_17 { pt3dadd( 19.8766, -355.725, -60.6775, 0.67 ) }
    dend_17 { pt3dadd( 19.5623, -357.969, -63.2763, 0.33 ) }
    dend_17 { pt3dadd( 19.3695, -360.725, -66.3249, 0.67 ) }
    dend_17 { pt3dadd( 19.3492, -361.919, -67.3659, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 19.358, -362.357, -67.7943, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 32.4637, -335.81, -54.0773, 0.67 ) }
    dend_16 { pt3dadd( 32.542, -337.95, -53.7857, 0.67 ) }
    dend_16 { pt3dadd( 32.6271, -339.928, -53.6006, 0.67 ) }
    dend_16 { pt3dadd( 32.7187, -341.286, -53.5275, 0.33 ) }
    dend_16 { pt3dadd( 33.0329, -345.48, -53.4777, 2.67 ) }
    dend_16 { pt3dadd( 33.3764, -349.063, -53.6903, 0.67 ) }
    dend_16 { pt3dadd( 33.6822, -351.721, -53.9461, 0.33 ) }
    dend_16 { pt3dadd( 33.7612, -352.348, -54.0349, 0.67 ) }
    dend_16 { pt3dadd( 34.0493, -354.719, -54.4709, 0.33 ) }
    dend_16 { pt3dadd( 34.4854, -358.573, -55.4015, 0.33 ) }
    dend_16 { pt3dadd( 34.768, -361.313, -56.242, 0.67 ) }
    dend_16 { pt3dadd( 34.9777, -363.62, -56.9511, 0.33 ) }
    dend_16 { pt3dadd( 35.29, -366.8, -57.8695, 0.33 ) }
    dend_16 { pt3dadd( 35.4788, -369.267, -58.5883, 0.33 ) }
    dend_16 { pt3dadd( 35.5329, -370.693, -59.0048, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 35.4657, -206.377, 16.9135, 0.33 ) }
    dend_6 { pt3dadd( 34.157, -209.011, 16.4623, 0.33 ) }
    dend_6 { pt3dadd( 33.1388, -211.06, 16.1113, 0.33 ) }
    dend_6 { pt3dadd( 32.0157, -213.321, 15.7241, 0.33 ) }
    dend_6 { pt3dadd( 31.2932, -214.775, 15.475, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 35.4657, -206.377, 16.9135, 0.67 ) }
    dend_5 { pt3dadd( 36.2738, -209.65, 18.2559, 0.67 ) }
    dend_5 { pt3dadd( 37.5614, -214.864, 20.3948, 1.33 ) }
    dend_5 { pt3dadd( 38.2977, -217.846, 21.6181, 0.67 ) }
    dend_5 { pt3dadd( 39.6524, -223.331, 23.8685, 1.33 ) }
    dend_5 { pt3dadd( 40.446, -226.545, 25.1869, 0.67 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 27/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 59.9712, 76.177, 27.7809, 0.33 ) }
    dend_78 { pt3dadd( 61.9795, 75.6043, 28.6353, 0.33 ) }
    dend_78 { pt3dadd( 64.3635, 74.9244, 29.6495, 0.33 ) }
    dend_78 { pt3dadd( 68.6428, 73.7041, 31.4701, 0.33 ) }
    dend_78 { pt3dadd( 70.6781, 73.1237, 32.3359, 0.33 ) }
    dend_78 { pt3dadd( 71.8239, 72.7969, 32.8234, 0.33 ) }
    dend_78 { pt3dadd( 73.3207, 72.3701, 33.4601, 0.67 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 34/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 59.9712, 76.177, 27.7809, 0.67 ) }
    dend_77 { pt3dadd( 61.9847, 77.44, 29.4878, 0.67 ) }
    dend_77 { pt3dadd( 64.3004, 78.8925, 31.4508, 0.67 ) }
    dend_77 { pt3dadd( 65.7188, 79.7823, 32.6533, 0.67 ) }
    dend_77 { pt3dadd( 66.9782, 80.5723, 33.7209, 0.67 ) }
    dend_77 { pt3dadd( 72.4765, 84.0212, 38.3818, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 40/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 12.6956, 72.7767, -16.7866, 0.33 ) }
    dend_72 { pt3dadd( 15.6572, 74.9559, -17.0746, 0.33 ) }
    dend_72 { pt3dadd( 16.9775, 76.0812, -17.1291, 0.33 ) }
    dend_72 { pt3dadd( 17.9769, 76.526, -16.1848, 0.33 ) }
    dend_72 { pt3dadd( 19.2358, 77.0, -14.9493, 0.33 ) }
    dend_72 { pt3dadd( 20.7399, 77.6269, -13.4645, 1.33 ) }
    dend_72 { pt3dadd( 22.2122, 78.3011, -12.0415, 0.33 ) }
    dend_72 { pt3dadd( 23.3615, 78.8369, -10.9079, 0.67 ) }
    dend_72 { pt3dadd( 30.6844, 82.6782, -3.36946, 0.33 ) }
    dend_72 { pt3dadd( 31.8125, 83.3348, -2.21277, 0.67 ) }
    dend_72 { pt3dadd( 32.9245, 83.9975, -1.09287, 0.33 ) }
    dend_72 { pt3dadd( 33.753, 84.5413, -0.362589, 0.67 ) }
    dend_72 { pt3dadd( 35.1664, 85.5685, 0.606604, 0.33 ) }
    dend_72 { pt3dadd( 35.7145, 86.0792, 0.826884, 0.67 ) }
    dend_72 { pt3dadd( 36.5862, 87.2217, 0.805309, 0.33 ) }
    dend_72 { pt3dadd( 37.0497, 87.8598, 0.787814, 0.67 ) }
    dend_72 { pt3dadd( 39.2686, 90.8668, 0.639284, 0.33 ) }
    dend_72 { pt3dadd( 40.8279, 93.1051, 0.511191, 0.33 ) }
    dend_72 { pt3dadd( 41.2906, 93.7351, 0.455798, 0.67 ) }
    dend_72 { pt3dadd( 43.6525, 96.6265, 0.0782703, 0.33 ) }
    dend_72 { pt3dadd( 44.4118, 97.3701, -0.0377147, 1.33 ) }
    dend_72 { pt3dadd( 46.1312, 98.7147, -0.329649, 0.33 ) }
    dend_72 { pt3dadd( 47.2984, 99.4138, -0.555941, 1.33 ) }
    dend_72 { pt3dadd( 50.4641, 100.835, -0.810487, 0.67 ) }
    dend_72 { pt3dadd( 52.5226, 101.453, -0.841847, 0.67 ) }
    dend_72 { pt3dadd( 56.6358, 102.178, -0.757687, 0.67 ) }
    dend_72 { pt3dadd( 58.1151, 102.403, -0.692774, 1.33 ) }
    dend_72 { pt3dadd( 59.3266, 102.563, -0.624287, 0.33 ) }
    dend_72 { pt3dadd( 63.8636, 103.193, -0.340289, 1.33 ) }
    dend_72 { pt3dadd( 67.865, 103.929, -0.0275867, 0.33 ) }
    dend_72 { pt3dadd( 70.8386, 104.706, 0.145155, 0.67 ) }
    dend_72 { pt3dadd( 72.2664, 105.221, 0.169278, 0.33 ) }
    dend_72 { pt3dadd( 72.9741, 105.523, 0.157614, 0.67 ) }
    dend_72 { pt3dadd( 74.04, 106.133, 0.0492773, 0.33 ) }
    dend_72 { pt3dadd( 74.7754, 106.747, -0.131002, 1.33 ) }
    dend_72 { pt3dadd( 76.1678, 108.47, -0.41794, 0.33 ) }
    dend_72 { pt3dadd( 77.2384, 110.013, -0.624723, 0.33 ) }
    dend_72 { pt3dadd( 77.6341, 110.584, -0.734102, 0.67 ) }
    dend_72 { pt3dadd( 78.7292, 112.182, -1.11255, 0.33 ) }
    dend_72 { pt3dadd( 79.293, 113.037, -1.3409, 0.67 ) }
    dend_72 { pt3dadd( 79.8822, 113.938, -1.60244, 0.33 ) }
    dend_72 { pt3dadd( 80.7121, 115.193, -2.01893, 0.33 ) }
    dend_72 { pt3dadd( 81.7153, 116.544, -2.55593, 0.67 ) }
    dend_72 { pt3dadd( 82.6574, 117.894, -3.11938, 0.33 ) }
    dend_72 { pt3dadd( 82.8404, 118.155, -3.25093, 0.67 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 12.6956, 72.7767, -16.7866, 0.33 ) }
    dend_69 { pt3dadd( 18.2794, 73.3104, -14.9863, 0.33 ) }
    dend_69 { pt3dadd( 20.3914, 73.6011, -14.3573, 0.67 ) }
    dend_69 { pt3dadd( 26.6759, 74.7125, -12.2154, 0.33 ) }
    dend_69 { pt3dadd( 28.2692, 75.0469, -11.703, 1.33 ) }
    dend_69 { pt3dadd( 30.2203, 75.506, -11.0964, 0.33 ) }
    dend_69 { pt3dadd( 31.4302, 75.8326, -10.7222, 0.67 ) }
    dend_69 { pt3dadd( 32.7565, 76.3681, -10.286, 0.33 ) }
    dend_69 { pt3dadd( 37.1185, 78.7514, -9.64925, 1.33 ) }
    dend_69 { pt3dadd( 38.865, 80.2762, -9.93256, 0.33 ) }
    dend_69 { pt3dadd( 39.1467, 80.5725, -10.0634, 0.67 ) }
    dend_69 { pt3dadd( 40.0465, 81.6302, -10.6647, 0.33 ) }
    dend_69 { pt3dadd( 41.227, 83.0842, -11.6153, 0.67 ) }
    dend_69 { pt3dadd( 44.4476, 87.4404, -14.8752, 0.33 ) }
    dend_69 { pt3dadd( 45.9555, 89.7137, -16.8252, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( 47.911, 92.6662, -19.3818, 0.33 ) }
    dend_69 { pt3dadd( 49.5753, 95.0434, -21.5615, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 2/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -18.9705, 64.6802, 4.60491, 0.33 ) }
    dend_63 { pt3dadd( -20.7973, 65.3541, 6.06529, 0.33 ) }
    dend_63 { pt3dadd( -23.3539, 66.1828, 8.29231, 0.33 ) }
    dend_63 { pt3dadd( -23.8612, 66.3474, 8.74383, 0.67 ) }
    dend_63 { pt3dadd( -28.2258, 67.5667, 12.5383, 0.33 ) }
    dend_63 { pt3dadd( -29.8159, 67.997, 13.8702, 0.67 ) }
    dend_63 { pt3dadd( -31.6649, 68.5009, 15.3942, 0.33 ) }
    dend_63 { pt3dadd( -31.9409, 68.5612, 15.6079, 0.67 ) }
    dend_63 { pt3dadd( -33.2708, 68.7113, 16.7076, 0.33 ) }
    dend_63 { pt3dadd( -35.3891, 68.8209, 18.5354, 0.33 ) }
    dend_63 { pt3dadd( -37.3839, 68.9334, 20.2819, 0.33 ) }
    dend_63 { pt3dadd( -38.032, 68.9644, 20.8057, 1.33 ) }
    dend_63 { pt3dadd( -41.3541, 69.1474, 23.308, 0.33 ) }
    dend_63 { pt3dadd( -43.4172, 69.2238, 24.9174, 0.33 ) }
    dend_63 { pt3dadd( -44.7304, 69.1676, 26.0389, 1.33 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 17/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -18.9705, 64.6802, 4.60491, 0.67 ) }
    dend_54 { pt3dadd( -20.0558, 69.3765, 4.61467, 0.67 ) }
    dend_54 { pt3dadd( -21.4511, 75.353, 4.47307, 0.67 ) }
    dend_54 { pt3dadd( -22.2949, 79.2804, 4.18359, 0.67 ) }
    dend_54 { pt3dadd( -23.5508, 85.7676, 3.52245, 0.67 ) }
    dend_54 { pt3dadd( -24.1662, 89.0995, 3.1397, 0.67 ) }
    dend_54 { pt3dadd( -24.8719, 93.3326, 2.37984, 0.67 ) }
    dend_54 { pt3dadd( -25.2469, 95.8969, 1.7109, 1.33 ) }
    dend_54 { pt3dadd( -25.6705, 99.5641, 0.513559, 0.67 ) }
    dend_54 { pt3dadd( -26.0048, 103.324, -0.574301, 2.0 ) }
    dend_54 { pt3dadd( -26.2431, 105.945, -1.3933, 1.33 ) }
    dend_54 { pt3dadd( -26.7395, 112.739, -3.51003, 1.33 ) }
    dend_54 { pt3dadd( -26.9796, 115.782, -4.3841, 0.67 ) }
    dend_54 { pt3dadd( -27.4914, 120.987, -5.73746, 0.67 ) }
    dend_54 { pt3dadd( -28.5199, 128.817, -7.33043, 1.33 ) }
    dend_54 { pt3dadd( -29.372, 134.31, -8.26858, 1.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -42.9131, 136.917, -60.6203, 0.33 ) }
    dend_42 { pt3dadd( -38.7874, 139.027, -65.758, 0.33 ) }
    dend_42 { pt3dadd( -38.5689, 139.138, -66.03, 0.67 ) }
    dend_42 { pt3dadd( -37.9704, 139.444, -66.7754, 0.33 ) }
    dend_42 { pt3dadd( -37.5969, 139.635, -67.2405, 0.67 ) }
    dend_42 { pt3dadd( -35.8656, 140.52, -69.3965, 0.33 ) }
    dend_42 { pt3dadd( -34.2353, 141.354, -71.4267, 2.0 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -42.9131, 136.917, -60.6203, 0.33 ) }
    dend_41 { pt3dadd( -44.0278, 138.109, -60.6518, 0.33 ) }
    dend_41 { pt3dadd( -44.2556, 138.353, -60.6582, 0.67 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 43/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 49.5753, 95.0434, -21.5615, 0.33 ) }
    dend_71 { pt3dadd( 50.367, 94.1192, -20.1708, 0.33 ) }
    dend_71 { pt3dadd( 50.5048, 93.9583, -19.9288, 0.67 ) }
    dend_71 { pt3dadd( 51.1065, 93.256, -18.8719, 0.33 ) }
    dend_71 { pt3dadd( 51.2442, 93.0951, -18.6299, 0.67 ) }
    dend_71 { pt3dadd( 52.5854, 91.5296, -16.2742, 0.33 ) }
    dend_71 { pt3dadd( 53.8294, 90.0773, -14.089, 0.67 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 50/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 49.5753, 95.0434, -21.5615, 0.67 ) }
    dend_70 { pt3dadd( 50.3825, 101.868, -31.38, 0.67 ) }
    dend_70 { pt3dadd( 50.7414, 103.547, -33.3898, 1.33 ) }
    dend_70 { pt3dadd( 51.4348, 105.612, -35.454, 0.33 ) }
    dend_70 { pt3dadd( 51.8301, 106.572, -36.3146, 0.67 ) }
    dend_70 { pt3dadd( 52.564, 108.321, -37.6972, 0.67 ) }
    dend_70 { pt3dadd( 54.5438, 112.543, -40.646, 0.67 ) }
    dend_70 { pt3dadd( 56.4459, 115.36, -41.789, 0.33 ) }
    dend_70 { pt3dadd( 58.0115, 117.482, -42.6931, 0.33 ) }
    dend_70 { pt3dadd( 58.9071, 118.612, -43.1261, 0.67 ) }
    dend_70 { pt3dadd( 59.9927, 120.073, -43.7048, 0.67 ) }
    dend_70 { pt3dadd( 61.7072, 122.476, -44.6174, 0.33 ) }
    dend_70 { pt3dadd( 63.2751, 124.782, -45.5121, 1.33 ) }
    dend_70 { pt3dadd( 65.0766, 127.984, -46.9807, 0.33 ) }
    dend_70 { pt3dadd( 65.5997, 129.112, -47.4741, 0.67 ) }
    dend_70 { pt3dadd( 67.2364, 132.789, -48.8511, 0.33 ) }
    dend_70 { pt3dadd( 67.546, 133.551, -49.0889, 0.67 ) }
    dend_70 { pt3dadd( 69.1114, 138.413, -50.1463, 0.33 ) }
    dend_70 { pt3dadd( 69.3094, 138.989, -50.1096, 0.67 ) }
    dend_70 { pt3dadd( 70.0798, 140.894, -49.2922, 0.33 ) }
    dend_70 { pt3dadd( 71.5204, 143.779, -47.2432, 0.67 ) }
    dend_70 { pt3dadd( 72.3359, 145.309, -45.977, 0.33 ) }
    dend_70 { pt3dadd( 72.7143, 146.016, -45.3891, 0.67 ) }
    dend_70 { pt3dadd( 75.1774, 150.746, -41.494, 0.67 ) }
    dend_70 { pt3dadd( 76.3404, 153.147, -39.8665, 0.33 ) }
    dend_70 { pt3dadd( 78.2949, 157.414, -37.58, 0.33 ) }
    dend_70 { pt3dadd( 79.1101, 159.331, -36.8348, 0.67 ) }
    dend_70 { pt3dadd( 80.658, 163.014, -35.6014, 0.33 ) }
    dend_70 { pt3dadd( 81.5302, 165.245, -35.0868, 0.67 ) }
    dend_70 { pt3dadd( 82.8412, 168.909, -34.8969, 0.67 ) }
    dend_70 { pt3dadd( 83.7736, 171.176, -34.957, 0.33 ) }
    dend_70 { pt3dadd( 83.9803, 171.692, -35.0599, 0.67 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -44.7304, 69.1676, 26.0389, 0.67 ) }
    dend_67 { pt3dadd( -47.4787, 68.0124, 27.5369, 0.67 ) }
    dend_67 { pt3dadd( -48.0916, 67.7397, 27.8613, 0.67 ) }
    dend_67 { pt3dadd( -49.1785, 67.2174, 28.4344, 0.33 ) }
    dend_67 { pt3dadd( -50.3494, 66.6412, 29.032, 0.67 ) }
    dend_67 { pt3dadd( -51.2508, 66.1706, 29.4823, 0.33 ) }
    dend_67 { pt3dadd( -51.6287, 65.9546, 29.7142, 0.67 ) }
    dend_67 { pt3dadd( -52.5935, 65.3768, 30.4501, 0.33 ) }
    dend_67 { pt3dadd( -52.9819, 65.1163, 30.7557, 0.67 ) }
    dend_67 { pt3dadd( -53.7837, 64.4619, 31.5046, 0.33 ) }
    dend_67 { pt3dadd( -54.0599, 64.1859, 31.8102, 0.67 ) }
    dend_67 { pt3dadd( -55.6362, 62.5689, 33.6801, 0.33 ) }
    dend_67 { pt3dadd( -56.3054, 61.8782, 34.5103, 0.67 ) }
    dend_67 { pt3dadd( -57.5533, 60.525, 36.171, 0.67 ) }
    dend_67 { pt3dadd( -58.815, 59.1486, 37.8768, 0.67 ) }
    dend_67 { pt3dadd( -59.7019, 58.0698, 39.1808, 0.33 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -44.7304, 69.1676, 26.0389, 1.33 ) }
    dend_64 { pt3dadd( -47.2674, 66.8101, 26.9995, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 0/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -29.372, 134.31, -8.26858, 0.67 ) }
    dend_60 { pt3dadd( -28.7948, 136.717, -7.68168, 0.67 ) }
    dend_60 { pt3dadd( -27.973, 140.145, -6.84588, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 3/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -29.372, 134.31, -8.26858, 0.67 ) }
    dend_55 { pt3dadd( -31.3992, 136.075, -8.1745, 0.67 ) }
    dend_55 { pt3dadd( -33.2464, 137.853, -8.24212, 0.33 ) }
    dend_55 { pt3dadd( -34.7842, 139.755, -8.25203, 0.67 ) }
    dend_55 { pt3dadd( -36.4275, 142.027, -8.23284, 0.33 ) }
    dend_55 { pt3dadd( -40.1903, 147.584, -8.13127, 0.67 ) }
    dend_55 { pt3dadd( -43.0204, 152.033, -8.01814, 0.33 ) }
    dend_55 { pt3dadd( -44.7282, 155.285, -8.14905, 0.67 ) }
    dend_55 { pt3dadd( -47.2435, 161.055, -8.64417, 0.33 ) }
    dend_55 { pt3dadd( -47.4858, 161.697, -8.71351, 0.67 ) }
    dend_55 { pt3dadd( -48.2698, 163.985, -8.99626, 0.33 ) }
    dend_55 { pt3dadd( -49.3361, 167.512, -9.31371, 2.0 ) }
    dend_55 { pt3dadd( -51.7088, 175.741, -9.59945, 0.67 ) }
    dend_55 { pt3dadd( -53.6592, 182.739, -9.65737, 1.33 ) }
    dend_55 { pt3dadd( -54.6623, 186.088, -9.89596, 0.33 ) }
    dend_55 { pt3dadd( -54.8534, 186.738, -9.96176, 0.67 ) }
    dend_55 { pt3dadd( -56.5064, 192.25, -10.2759, 0.33 ) }
    dend_55 { pt3dadd( -56.8561, 193.281, -10.2496, 0.67 ) }
    dend_55 { pt3dadd( -58.0643, 196.467, -9.74528, 0.33 ) }
    dend_55 { pt3dadd( -61.4978, 205.246, -8.11325, 0.67 ) }
    dend_55 { pt3dadd( -62.2979, 207.221, -7.77838, 0.33 ) }
    dend_55 { pt3dadd( -65.1972, 213.691, -6.93698, 0.67 ) }
    dend_55 { pt3dadd( -67.5726, 218.057, -6.77135, 0.67 ) }
    dend_55 { pt3dadd( -68.7901, 220.173, -6.45416, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -47.2674, 66.8101, 26.9995, 0.67 ) }
    dend_66 { pt3dadd( -45.0586, 65.8965, 33.3173, 0.67 ) }
    dend_66 { pt3dadd( -44.7996, 65.7893, 34.0581, 0.67 ) }
    dend_66 { pt3dadd( -43.7945, 65.3736, 36.9328, 0.67 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 31/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -47.2674, 66.8101, 26.9995, 0.33 ) }
    dend_65 { pt3dadd( -47.0091, 65.5335, 28.8053, 0.33 ) }
    dend_65 { pt3dadd( -46.4561, 63.33, 31.4311, 0.33 ) }
    dend_65 { pt3dadd( -45.662, 59.9985, 34.7974, 0.67 ) }
    dend_65 { pt3dadd( -45.1358, 57.5046, 37.1824, 0.33 ) }
    dend_65 { pt3dadd( -44.4175, 53.5152, 41.0136, 0.33 ) }
    dend_65 { pt3dadd( -44.0813, 51.6484, 42.8064, 0.33 ) }
    dend_65 { pt3dadd( -43.697, 48.3768, 46.1598, 0.67 ) }
    dend_65 { pt3dadd( -43.6733, 46.2556, 48.3648, 0.67 ) }
    dend_65 { pt3dadd( -43.7449, 44.3496, 50.0206, 0.67 ) }
    dend_65 { pt3dadd( -43.6406, 43.364, 50.8014, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 42/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -27.973, 140.145, -6.84588, 0.33 ) }
    dend_62 { pt3dadd( -29.4944, 141.831, -6.49923, 0.33 ) }
    dend_62 { pt3dadd( -29.9177, 142.3, -6.40278, 0.67 ) }
    dend_62 { pt3dadd( -32.067, 144.682, -5.91309, 0.33 ) }
    dend_62 { pt3dadd( -33.6197, 146.402, -5.55932, 0.67 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 47/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -27.973, 140.145, -6.84588, 0.67 ) }
    dend_61 { pt3dadd( -27.1256, 141.436, -5.78837, 0.67 ) }
    dend_61 { pt3dadd( -24.047, 146.352, -1.50091, 0.67 ) }
    dend_61 { pt3dadd( -22.2443, 148.93, 0.872448, 0.33 ) }
    dend_61 { pt3dadd( -21.2567, 150.369, 2.17085, 0.67 ) }
    dend_61 { pt3dadd( -19.4601, 153.049, 4.58427, 0.33 ) }
    dend_61 { pt3dadd( -18.2388, 154.871, 6.22496, 0.33 ) }
    dend_61 { pt3dadd( -16.7443, 157.193, 8.45671, 0.67 ) }
    dend_61 { pt3dadd( -15.5463, 158.86, 10.2251, 0.33 ) }
    dend_61 { pt3dadd( -14.7853, 160.122, 11.4881, 0.33 ) }
    dend_61 { pt3dadd( -14.2072, 160.875, 12.2719, 0.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -68.7901, 220.173, -6.45416, 0.67 ) }
    dend_59 { pt3dadd( -69.4089, 222.799, -8.85987, 0.67 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 60/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -68.7901, 220.173, -6.45416, 0.67 ) }
    dend_56 { pt3dadd( -69.9825, 220.638, -7.88227, 0.67 ) }
    dend_56 { pt3dadd( -70.9645, 221.021, -9.05835, 0.67 ) }
    dend_56 { pt3dadd( -72.6342, 221.672, -11.0581, 0.33 ) }
    dend_56 { pt3dadd( -74.7313, 222.489, -13.5697, 1.33 ) }
    dend_56 { pt3dadd( -79.7036, 224.428, -19.5248, 0.33 ) }
    dend_56 { pt3dadd( -80.0431, 224.56, -19.9314, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -80.0431, 224.56, -19.9314, 0.33 ) }
    dend_58 { pt3dadd( -81.8247, 224.154, -21.9016, 0.33 ) }
    dend_58 { pt3dadd( -82.1202, 224.095, -22.2192, 0.67 ) }
    dend_58 { pt3dadd( -84.0567, 223.707, -24.3012, 0.33 ) }
    dend_58 { pt3dadd( -85.1294, 223.492, -25.4543, 0.67 ) }
    dend_58 { pt3dadd( -88.1546, 222.886, -28.7066, 0.67 ) }
    dend_58 { pt3dadd( -90.9634, 222.323, -31.7263, 0.33 ) }
    dend_58 { pt3dadd( -91.1663, 222.29, -31.9576, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 75/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -80.0431, 224.56, -19.9314, 0.67 ) }
    dend_57 { pt3dadd( -81.9405, 229.88, -16.2525, 0.67 ) }
    dend_57 { pt3dadd( -83.1054, 233.147, -13.9936, 0.33 ) }
    dend_57 { pt3dadd( -83.3286, 233.772, -13.5609, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_74 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_51 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_35 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_76 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_39 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_72 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_69 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_54 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_70 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_80 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_73 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_81 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_82 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_75 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_79 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_68 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_63 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_64 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_66 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_67 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_71 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_78 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_77 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_65 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_60 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_62 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_40 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_41 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_42 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_46 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_45 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_59 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_56 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_57 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_58 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_14 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_17 OneSecGrp_SectionRef_61.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_27 nseg = 3
    dend_1 nseg = 7
    dend_32 nseg = 3
    dend_20 nseg = 3
    dend_13 nseg = 11
    dend_43 nseg = 5
    dend_19 nseg = 3
    dend_8 nseg = 3
    dend_74 nseg = 5
    dend_51 nseg = 3
    dend_44 nseg = 3
    dend_38 nseg = 5
    dend_35 nseg = 3
    dend_23 nseg = 3
    dend_15 nseg = 3
    dend_76 nseg = 3
    dend_39 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 3
    dend_72 nseg = 5
    dend_69 nseg = 3
    dend_54 nseg = 3
    dend_70 nseg = 5
    dend_55 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L4_DBC_c6dae7aa61_0_0


