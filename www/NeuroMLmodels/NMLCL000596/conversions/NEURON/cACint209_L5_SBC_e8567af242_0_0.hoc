// Cell: cACint209_L5_SBC_e8567af242_0_0
/*
{
  "id" : "cACint209_L5_SBC_e8567af242_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.327285, 12.2563, -2.37682, 3.20394", "-0.32997, 10.9888, -2.12879, 5.58325", "-0.332655, 9.7213, -1.88076, 6.08709", "-0.335339, 8.45379, -1.63272, 7.22603", "-0.338024, 7.18628, -1.38469, 8.89261", "-0.340709, 5.91877, -1.13666, 10.2823", "-0.343394, 4.65126, -0.888622, 11.3086", "-0.346078, 3.38375, -0.640589, 12.3784", "-0.348763, 2.11624, -0.392555, 13.7451", "-0.351448, 0.84873, -0.144521, 14.7054", "-0.354133, -0.41878, 0.103512, 15.1673", "-0.356817, -1.68629, 0.351546, 15.492", "-0.359502, -2.9538, 0.599579, 15.6089", "-0.362187, -4.22131, 0.847613, 15.0499", "-0.364872, -5.48882, 1.09565, 14.3371", "-0.367556, -6.75633, 1.34368, 13.225", "-0.370241, -8.02384, 1.59171, 11.7728", "-0.372926, -9.29135, 1.83975, 10.2754", "-0.375611, -10.5589, 2.08778, 7.58879", "-0.378295, -11.8264, 2.33581, 5.07363", "-0.38098, -13.0939, 2.58385, 2.91986" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.63702, -12.1088, 3.2994, 4.13", "-1.63702, -12.1088, 3.2994, 4.13", "-1.52963, -13.0608, 3.61506, 4.13", "-1.3725, -14.4538, 4.07692, 3.76", "-1.124, -16.6568, 4.80733, 3.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.0870214, -5.00883, -15.4506, 1.69", "5.14329E-5, -5.02554, -15.4506, 1.69", "0.270451, -5.08153, -15.4506, 1.69", "1.36113, -5.31887, -15.4438, 1.69", "2.94896, -5.72563, -15.382, 1.69", "3.05927, -5.75887, -15.3915, 1.69", "4.7951, -6.44879, -15.7768, 1.69", "4.87663, -6.49365, -15.8142, 1.69", "5.91021, -7.49427, -17.0967, 1.84", "5.79317, -8.32164, -18.9143, 1.84", "4.88519, -9.10819, -21.6513, 1.99", "3.99163, -9.74782, -24.028, 1.99", "2.93318, -10.3601, -26.498, 1.99", "1.29037, -11.1446, -29.9506, 2.14", "-0.561233, -11.824, -33.3772, 2.43", "-3.63865, -12.6278, -38.4534, 2.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.632978, 11.1212, -5.6406, 2.58", "0.632978, 11.1212, -5.6406, 2.58", "1.2684, 11.6597, -5.89371, 2.28", "1.92091, 12.2497, -6.1279, 2.21", "3.17648, 13.5453, -6.54348, 0.81", "4.61007, 15.2975, -6.98958, 0.81", "5.32718, 16.263, -7.20237, 1.25", "6.16521, 17.6033, -7.40141, 1.99", "6.20193, 17.6829, -7.40688, 1.99", "6.54079, 19.0021, -7.38823, 2.14", "6.64829, 20.3483, -7.2832, 2.14", "6.64473, 20.4365, -7.27637, 2.14", "6.50526, 22.0271, -7.19604, 1.84", "6.31047, 23.5451, -7.22287, 1.4", "5.95428, 25.595, -7.37313, 0.81", "5.63593, 26.9739, -7.59225, 0.81", "5.15177, 28.7193, -7.99694, 1.11", "5.12911, 28.7899, -8.02004, 1.11", "4.64289, 30.0984, -8.59721, 1.69", "4.07295, 31.5183, -9.36364, 1.77", "3.61737, 32.7289, -10.1221, 1.18", "3.60155, 32.7918, -10.1634, 1.18", "3.53157, 33.8768, -10.8244, 0.88", "3.64253, 34.7321, -11.2658, 0.74", "3.69807, 34.879, -11.3232, 0.74", "4.27357, 35.8994, -11.6014, 0.74", "5.11849, 37.1905, -11.8322, 0.88", "5.76906, 38.1299, -11.9535, 1.69", "6.22648, 38.7767, -12.0, 1.92", "6.6053, 39.3465, -12.0336, 2.21", "6.9975, 39.9989, -12.0628, 1.84", "7.45958, 40.9328, -12.0868, 1.25", "7.87895, 42.0721, -12.1478, 0.81", "8.14848, 43.0976, -12.2689, 0.81", "8.27544, 44.1095, -12.4899, 1.11", "8.26958, 44.1893, -12.5261, 1.11", "8.11092, 44.852, -13.0075, 1.11", "7.69037, 45.9688, -14.0292, 0.59", "7.47636, 46.4209, -14.5099, 0.59", "7.00003, 47.3008, -15.6228, 0.52", "6.07032, 48.8928, -17.8142, 1.99", "5.6189, 49.6361, -18.8917, 3.02", "5.40357, 49.9678, -19.4176, 3.02", "5.3665, 50.0199, -19.5056, 3.02", "4.71734, 50.9258, -21.1256, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.77298, 8.24117, 1.3594, 1.47", "3.20648, 8.59775, 1.39055, 1.47", "4.08996, 9.27362, 1.55444, 1.25", "4.37696, 9.48607, 1.61858, 1.62", "4.91571, 9.84237, 1.74147, 1.92", "5.53615, 10.2267, 1.8839, 1.69", "6.46758, 10.6918, 2.15187, 0.88", "7.41726, 11.0008, 2.74139, 0.88", "7.45695, 11.0116, 2.78925, 0.88", "7.85883, 11.1192, 3.50896, 0.81", "7.87645, 11.1259, 3.56044, 0.81", "8.18336, 11.4171, 5.20882, 1.03", "8.36545, 12.1142, 8.06142, 1.11", "8.3294, 12.6359, 9.66647, 1.11", "8.32373, 12.6621, 9.72361, 1.11", "8.10933, 13.3426, 10.8646, 1.33", "7.85902, 14.0796, 11.7296, 1.99", "7.67871, 14.5994, 12.1063, 2.73", "7.57096, 15.0684, 12.3354, 2.65", "7.49069, 16.0352, 12.7662, 2.36", "7.49377, 16.085, 12.7871, 2.36", "7.77896, 17.3916, 13.2839, 0.81", "8.06948, 18.2082, 13.5934, 0.59", "8.75802, 19.7132, 14.1316, 0.44", "9.33349, 20.7167, 14.4327, 0.44", "9.91511, 21.5554, 14.5931, 1.18", "10.3924, 22.1553, 14.6647, 1.99", "10.8892, 22.7119, 14.7633, 2.65", "11.1665, 23.0205, 14.8338, 2.65", "11.9401, 23.9271, 15.1271, 1.77", "12.6844, 24.8289, 15.5957, 0.44", "13.4146, 25.7644, 16.1999, 0.44", "14.708, 27.5316, 17.5782, 1.25", "15.0787, 28.0904, 18.055, 2.43", "15.679, 29.0956, 18.9393, 2.43", "16.14, 29.9651, 19.7432, 2.21", "16.4741, 30.6795, 20.3859, 1.25", "16.8578, 31.6095, 21.0829, 0.52", "17.1303, 32.2907, 21.4378, 0.52", "17.4627, 33.1175, 21.7746, 0.52", "17.4858, 33.1745, 21.7886, 0.52", "17.8243, 33.9498, 21.9317, 0.88", "18.179, 34.7, 22.0449, 1.25", "18.5026, 35.3583, 22.0901, 1.69", "18.7446, 35.82, 22.131, 1.69", "18.7893, 35.9042, 22.1406, 1.69", "19.2269, 36.703, 22.2509, 1.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.16702, 11.2212, -3.0206, 1.62", "-3.16702, 11.2212, -3.0206, 1.62", "-3.4772, 11.7945, -2.5902, 1.4", "-4.03786, 12.8348, -1.72911, 1.4", "-4.42262, 13.5415, -1.16362, 1.4", "-4.76319, 14.1776, -0.669288, 1.69", "-5.24727, 15.0768, 0.0147606, 1.99", "-5.77005, 16.0433, 0.723181, 2.36", "-6.27981, 16.9826, 1.37779, 3.09", "-6.7911, 17.8692, 1.93125, 3.32", "-7.26814, 18.6504, 2.33488, 3.09", "-7.70072, 19.2998, 2.57117, 2.43", "-8.25017, 20.0596, 2.65929, 1.4", "-8.59448, 20.5056, 2.64375, 1.33", "-9.14517, 21.1688, 2.51217, 1.18", "-9.67705, 21.7503, 2.30576, 1.4", "-10.3997, 22.4571, 1.88524, 1.69", "-11.2394, 23.2181, 1.23539, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992178869266
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.38098, -13.0939, 2.58385, 1.02022", "-0.412752, -28.0939, 2.58385, 1.02022", "-0.444525, -43.0938, 2.58385, 1.02022" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.124, -16.6568, 4.80733, 1.99", "-0.112696, -18.4665, 4.49977, 1.99", "0.962741, -20.2221, 4.26675, 1.62", "1.02016, -20.3121, 4.2566, 1.62", "2.35062, -22.3526, 4.11909, 1.18", "3.10253, -23.5192, 4.06625, 1.18", "4.07543, -25.0657, 4.01297, 1.18", "5.46376, -27.3059, 3.99617, 1.18", "6.6277, -29.2584, 4.02257, 1.47", "7.83491, -31.4372, 4.08881, 2.21", "8.86446, -33.3672, 4.19203, 2.73", "9.84413, -35.3094, 4.31325, 2.8", "10.6972, -37.1118, 4.43557, 2.95", "11.5163, -39.0313, 4.56104, 2.95", "11.8917, -40.0139, 4.62675, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.124, -16.6568, 4.80733, 1.18", "-2.16062, -17.6004, 6.83567, 1.18", "-2.9144, -18.2865, 8.31057, 1.18", "-3.37988, -18.7102, 9.22139, 1.69", "-3.76118, -19.0573, 9.96746, 2.36", "-3.99062, -19.2661, 10.4164, 2.73" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.63865, -12.6278, -38.4534, 0.66", "-2.19848, -14.386, -39.7783, 0.66", "-1.3373, -15.3562, -40.4686, 0.74", "-0.714716, -15.9984, -40.9883, 0.74", "-0.195375, -16.488, -41.4326, 0.74", "-0.153534, -16.5246, -41.4689, 0.74", "0.870125, -17.3507, -42.3684, 0.52", "1.40521, -17.5604, -42.7684, 0.52", "2.11373, -17.529, -43.5076, 0.44", "2.56423, -17.3966, -44.103, 0.44", "2.68537, -17.3645, -44.271, 0.44", "3.11512, -17.3134, -44.814, 0.44", "4.15577, -17.2995, -46.1177, 0.88", "4.19773, -17.3048, -46.169, 0.88", "5.10179, -17.5247, -47.1971, 1.11", "6.31415, -17.9041, -48.53, 1.84", "7.68695, -18.3926, -49.9689, 2.14", "9.83805, -19.2488, -52.1204, 0.29", "10.5846, -19.5657, -52.8086, 0.29", "11.1612, -19.8061, -53.2872, 1.03", "11.2202, -19.8311, -53.3279, 1.03", "11.6811, -20.0551, -53.5789, 1.33", "11.7351, -20.0824, -53.608, 1.33", "12.3044, -20.3281, -53.9602, 1.18", "13.2978, -20.6417, -54.6932, 0.37", "13.9753, -20.7911, -55.2751, 0.37", "15.1054, -20.9383, -56.4234, 0.52", "16.5474, -21.041, -58.1056, 0.74", "17.2938, -21.0909, -59.0416, 1.62", "17.7013, -21.1115, -59.5821, 1.92", "18.4366, -21.1281, -60.5818, 2.43", "19.6517, -21.0743, -62.1637, 1.69", "20.76, -20.9246, -63.5783, 0.37", "21.2884, -20.844, -64.2382, 0.37", "21.6525, -20.7946, -64.6855, 0.37", "22.1322, -20.7518, -65.2828, 1.11", "22.6745, -20.7435, -65.8823, 1.33", "24.4893, -20.7412, -67.5362, 0.22", "24.5496, -20.7422, -67.5832, 0.22", "25.1297, -20.7958, -68.0072, 0.22", "25.8656, -21.0004, -68.4905, 0.22", "26.7885, -21.3798, -69.0195, 0.88", "27.7291, -21.8076, -69.5418, 1.55", "28.3394, -22.0267, -70.0282, 1.77", "29.4282, -22.2614, -71.3473, 0.22", "30.0767, -22.3086, -72.4088, 0.22", "30.6178, -22.2982, -73.4279, 1.47", "31.3214, -22.2651, -74.8797, 2.43", "33.417, -22.0705, -79.4121, 1.99", "34.6727, -21.8735, -82.3232, 1.77", "36.1551, -21.5179, -86.019, 0.22", "36.175, -21.5114, -86.072, 0.22", "36.5116, -21.3901, -87.0454, 0.22", "36.795, -21.2882, -87.9075, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.63865, -12.6278, -38.4534, 1.03", "-4.90673, -14.6397, -39.1444, 1.03", "-5.65524, -16.2686, -39.562, 0.88", "-5.6921, -16.3652, -39.5829, 0.88", "-6.06411, -17.5987, -39.8038, 0.88", "-6.24359, -18.7366, -40.0539, 1.69", "-6.32371, -19.7302, -40.2775, 1.84", "-6.28931, -20.3253, -40.4189, 1.99", "-6.28454, -20.3932, -40.4362, 1.99", "-6.26366, -21.2275, -40.6969, 1.69", "-6.37343, -23.482, -41.5883, 1.03", "-6.68672, -24.8434, -42.4228, 0.88", "-7.08299, -25.7754, -43.1592, 0.66", "-7.36585, -26.3089, -43.6258, 0.66", "-7.88836, -27.0869, -44.3895, 0.52", "-8.42614, -27.5888, -45.0278, 0.52", "-10.3431, -28.4221, -46.701, 1.77", "-10.8357, -28.5422, -47.1485, 1.77" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "4.71734, 50.9258, -21.1256, 0.52", "6.47453, 51.8354, -24.0443, 0.52", "6.76817, 51.9818, -24.5142, 0.52", "7.32366, 52.3112, -25.5104, 0.37", "8.02076, 52.8373, -26.8844, 1.4", "8.17441, 52.9938, -27.2252, 1.55", "9.47262, 54.6376, -30.3531, 0.74", "9.63182, 54.9768, -30.8873, 0.74", "10.0834, 56.3788, -32.9349, 0.29", "10.2209, 57.1, -33.883, 0.29", "10.3196, 58.3033, -35.3211, 1.92", "10.3063, 58.7893, -35.8406, 2.28", "10.1091, 60.617, -37.554, 0.22", "10.1006, 60.7174, -37.6488, 0.22", "10.0903, 61.1552, -38.0476, 0.22", "10.1983, 62.3387, -39.2193, 1.18", "10.2776, 62.804, -39.6954, 1.77", "10.6701, 64.8074, -41.6477, 0.22", "10.9244, 65.955, -42.6794, 1.84", "11.058, 66.5169, -43.1575, 2.21", "11.5744, 68.3913, -44.6174, 0.22", "11.5928, 68.4477, -44.6538, 0.22", "12.0617, 69.6924, -45.3119, 0.22", "12.0913, 69.7622, -45.3357, 0.22", "12.5407, 70.6592, -45.5945, 0.66", "12.9912, 71.4374, -45.9375, 0.88", "13.6218, 72.4584, -46.468, 0.22", "14.2361, 73.3748, -47.054, 1.99", "14.5668, 73.842, -47.4229, 2.5", "15.4527, 75.1507, -48.5997, 0.22", "16.7448, 77.1651, -50.62, 0.59", "16.8892, 77.4288, -50.9077, 0.59", "16.909, 77.4729, -50.9578, 0.59", "17.2805, 78.5749, -52.1286, 0.96", "17.4324, 79.1523, -52.6926, 1.11", "17.5502, 79.7156, -53.1697, 0.96", "17.8113, 80.9843, -54.1059, 0.22", "17.8694, 81.168, -54.318, 0.22", "18.1311, 81.8121, -55.2745, 0.22", "18.3932, 82.3476, -56.2689, 1.11", "18.7302, 83.0079, -57.8234, 1.4", "18.9939, 83.4989, -59.154, 2.06", "20.116, 85.4344, -64.8044, 1.18", "20.5572, 86.1572, -67.0763, 1.18", "21.1449, 87.0583, -70.2273, 1.4", "21.9266, 88.2269, -74.6735, 1.55", "21.9376, 88.2423, -74.7406, 1.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.71734, 50.9258, -21.1256, 0.52", "4.85728, 52.5407, -20.9463, 0.52", "4.95967, 53.5555, -20.842, 0.52", "5.0776, 54.6432, -20.8232, 1.18", "5.19013, 55.527, -20.8536, 1.99", "5.24927, 55.8967, -20.8762, 2.28", "5.35474, 56.3483, -20.9103, 1.84", "5.51958, 56.7901, -20.9576, 1.55", "5.9871, 57.882, -21.1295, 0.88", "6.31461, 58.6411, -21.3216, 0.29", "6.58957, 59.3024, -21.4958, 0.29", "6.93048, 60.2764, -21.781, 0.29", "6.9568, 60.3571, -21.8085, 0.29", "7.15088, 61.0286, -22.0453, 0.29", "7.48773, 62.4952, -22.5442, 1.92", "7.60588, 63.3589, -22.8382, 2.21", "7.66853, 64.6743, -23.3133, 0.29", "7.63993, 65.7827, -23.7214, 0.29", "7.53652, 66.6977, -24.0855, 0.29", "7.36036, 67.4828, -24.4057, 0.29", "6.99531, 68.5599, -24.829, 1.84", "6.56373, 69.5293, -25.2102, 2.58", "6.41178, 69.8023, -25.3127, 2.5", "5.12854, 71.7395, -26.0572, 0.22", "4.42466, 72.7005, -26.4538, 0.22", "3.95642, 73.3063, -26.7022, 0.96", "3.70365, 73.615, -26.8265, 1.18", "3.47326, 73.8884, -26.9251, 1.18", "2.67446, 74.8283, -27.257, 0.29", "2.25505, 75.3118, -27.4145, 0.29", "1.4292, 76.2786, -27.7667, 0.29", "0.343253, 77.5649, -28.2604, 2.21", "-0.0304946, 78.017, -28.4339, 2.65" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.2269, 36.703, 22.2509, 0.29", "19.9212, 37.7108, 22.1673, 0.29", "20.3947, 38.4526, 22.1554, 0.59", "20.6749, 38.9269, 22.2092, 0.74", "21.144, 39.7512, 22.3405, 0.22", "21.5836, 40.5387, 22.4768, 0.22", "22.2622, 41.7666, 22.6948, 2.28", "22.4816, 42.2023, 22.7935, 2.28", "23.2453, 43.7536, 23.1718, 0.29", "23.4221, 44.1136, 23.2659, 0.29", "23.9021, 45.0991, 23.5361, 0.22", "24.0359, 45.3616, 23.6023, 0.88", "24.0936, 45.4579, 23.6219, 0.88", "24.2589, 45.7016, 23.663, 0.88", "24.3622, 45.8328, 23.6758, 0.88", "24.7108, 46.2644, 23.7455, 0.52", "24.9268, 46.5773, 23.8419, 0.15", "25.2142, 47.0474, 24.0115, 0.15", "25.3444, 47.2962, 24.1013, 0.15", "25.6401, 47.9256, 24.3173, 0.81", "25.7648, 48.2656, 24.433, 0.96", "26.0642, 49.3421, 24.8, 0.15", "26.0792, 49.4117, 24.8238, 0.15", "26.2759, 50.3412, 25.1429, 1.55", "26.3929, 50.8431, 25.3194, 2.28", "26.8021, 52.3998, 25.9063, 0.22", "27.1014, 53.4877, 26.371, 2.65", "27.5436, 55.0105, 27.0606, 0.29", "27.7087, 55.5353, 27.3166, 0.15", "27.8268, 55.9011, 27.5068, 0.15", "28.3221, 57.3554, 28.306, 2.58", "28.9252, 58.8685, 29.1973, 0.15", "29.0516, 59.1525, 29.378, 0.37", "29.2108, 59.4901, 29.6123, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.2269, 36.703, 22.2509, 0.29", "17.8322, 38.1384, 22.5319, 0.29", "16.9549, 39.1947, 22.6894, 0.29", "16.4752, 39.8737, 22.7645, 0.29", "16.0423, 40.5612, 22.8238, 0.88", "16.007, 40.6408, 22.8269, 0.88", "15.8201, 41.2271, 22.8842, 0.88", "15.7874, 41.4959, 22.9015, 0.88", "15.7936, 41.8518, 22.9409, 0.88", "15.8005, 41.9488, 22.9613, 0.88", "15.9325, 43.2555, 23.2961, 0.44", "16.0591, 44.3377, 23.5807, 0.44", "16.0672, 44.4196, 23.6094, 0.44", "16.1063, 45.4386, 23.9851, 0.44", "16.0704, 47.1005, 24.7379, 1.77", "16.0728, 47.7961, 25.09, 2.65", "16.1003, 48.4222, 25.437, 3.02", "16.3731, 51.1838, 26.985, 0.22", "16.6346, 52.6188, 27.8847, 1.03", "17.1341, 54.6103, 29.225, 0.29", "17.5654, 55.9917, 30.2328, 0.22", "17.87, 56.8081, 30.8615, 1.92", "18.2422, 57.6217, 31.496, 2.28", "19.4478, 59.6831, 33.0918, 0.22", "19.765, 60.2586, 33.592, 0.22", "20.2858, 61.5029, 34.7481, 1.11", "20.3923, 61.9599, 35.1994, 1.55", "20.4631, 62.5795, 35.8591, 1.84", "20.4626, 62.6375, 35.9241, 1.84", "20.192, 65.5224, 39.2289, 0.29", "19.9776, 66.8716, 40.8104, 0.29", "19.7048, 68.1335, 42.2562, 2.65", "19.4341, 69.1537, 43.3957, 2.36", "18.8838, 70.9051, 45.2798, 0.37", "18.8655, 70.9571, 45.3292, 0.37", "18.5632, 71.668, 45.826, 0.22", "18.2269, 72.3258, 46.1685, 0.66", "17.8379, 73.041, 46.4479, 0.96", "17.4487, 73.7587, 46.6595, 0.96", "16.8655, 74.8352, 46.9245, 0.22", "16.4335, 75.6535, 47.174, 0.22", "15.6784, 77.0944, 47.7287, 2.43", "14.4253, 79.3047, 48.8531, 0.22", "14.2235, 79.6505, 49.0476, 0.88", "13.9865, 80.0636, 49.287, 1.03", "13.1622, 81.5, 50.1752, 0.66", "12.3948, 82.8667, 51.3124, 1.62", "11.8168, 84.1164, 52.5329, 1.62", "11.4037, 85.3147, 53.7909, 0.37", "11.3146, 85.7995, 54.3106, 2.06", "11.3111, 85.8503, 54.3643, 2.06", "11.4036, 89.3196, 57.707, 1.62", "11.5444, 90.6505, 58.994, 0.22", "11.679, 91.4627, 59.7756, 2.06", "12.2159, 93.9729, 62.3763, 0.29", "12.3005, 94.3483, 62.76, 0.29", "12.5767, 95.4752, 63.7891, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-11.2394, 23.2181, 1.23539, 1.18", "-13.8454, 25.2492, -2.14431, 1.18", "-14.4798, 25.7501, -2.85097, 1.18", "-15.301, 26.3999, -3.65094, 1.4", "-16.1448, 27.083, -4.36583, 1.4", "-17.222, 28.019, -5.28183, 1.03", "-18.1664, 28.8956, -6.06072, 0.66", "-18.9404, 29.6807, -6.56014, 0.66", "-19.4679, 30.2842, -6.91002, 1.11", "-20.2124, 31.2389, -7.34384, 0.81", "-21.8471, 33.6022, -8.13984, 0.66", "-22.5521, 34.7189, -8.37553, 0.66", "-23.0837, 35.6411, -8.48951, 0.66", "-23.8374, 37.0252, -8.58129, 1.25", "-24.6088, 38.5409, -8.53009, 1.62", "-25.2648, 39.8908, -8.32757, 1.99", "-25.7335, 40.8805, -8.05698, 1.99", "-25.821, 41.0686, -8.00437, 1.99", "-26.2139, 41.9324, -7.77014, 1.84", "-26.8272, 43.305, -7.45878, 1.03", "-27.3059, 44.4078, -7.29336, 0.74", "-27.8487, 45.6906, -7.15386, 0.74", "-28.2532, 46.6677, -7.06209, 0.44", "-28.5492, 47.3807, -7.00344, 0.59", "-28.9307, 48.2182, -6.97628, 0.59", "-29.3399, 49.0062, -7.00376, 0.59", "-29.3932, 49.0949, -7.01096, 0.59", "-30.0191, 49.9984, -7.12248, 0.44", "-30.4908, 50.6135, -7.21843, 0.29", "-31.3562, 51.6762, -7.4613, 0.29", "-31.9894, 52.4854, -7.67678, 1.47", "-32.6586, 53.4231, -7.93793, 2.06", "-32.8805, 53.8165, -8.04673, 2.21", "-33.0455, 54.2655, -8.19373, 2.21", "-33.3138, 55.6108, -8.66004, 1.18", "-33.4004, 57.1381, -9.18001, 0.37", "-33.3617, 57.9597, -9.46701, 0.37", "-33.1575, 59.5582, -9.98931, 0.37", "-32.8608, 61.4295, -10.6022, 1.33", "-32.7748, 61.9703, -10.7538, 1.77", "-32.7593, 62.0851, -10.779, 1.77", "-32.7247, 62.6799, -10.8402, 1.77", "-32.8018, 64.0001, -10.7638, 0.81", "-32.9961, 65.4262, -10.4978, 0.29", "-33.1394, 66.6082, -10.0653, 0.74", "-33.2051, 67.3537, -9.7467, 0.74", "-33.2968, 69.1699, -8.8978, 0.37", "-33.3082, 70.3863, -8.28592, 0.37", "-33.2668, 71.3495, -7.75889, 0.37", "-33.059, 73.2721, -6.60735, 1.4", "-32.9151, 74.0218, -6.22716, 2.06", "-32.8092, 74.4984, -6.02448, 2.5", "-32.6421, 75.2267, -5.78564, 2.5", "-32.629, 75.3125, -5.76168, 2.5", "-32.4447, 78.3165, -5.08296, 0.44", "-32.5494, 80.1719, -4.82602, 0.37", "-32.6972, 81.1652, -4.69806, 0.37", "-32.7256, 81.2898, -4.68354, 0.37", "-33.2431, 83.0928, -4.52209, 0.37", "-33.3069, 83.2899, -4.51297, 0.37", "-33.6459, 84.2023, -4.54026, 0.37", "-33.6687, 84.2892, -4.54533, 0.37", "-33.7813, 85.239, -4.71972, 1.47", "-33.8385, 86.3334, -5.00236, 2.21", "-33.8412, 87.0803, -5.23507, 2.65", "-33.8634, 87.8121, -5.47932, 2.5", "-34.0154, 90.1933, -6.30055, 0.29", "-34.1532, 91.2469, -6.71834, 0.29", "-34.3582, 92.2342, -7.15494, 0.29", "-34.5695, 92.9116, -7.44606, 0.29", "-34.859, 93.6904, -7.751, 1.33", "-35.2743, 94.7251, -8.09627, 2.28", "-35.8182, 96.0542, -8.42431, 2.73", "-36.096, 96.8028, -8.5992, 2.43", "-36.6953, 98.5817, -9.05823, 0.29", "-36.9531, 99.3427, -9.28872, 0.29", "-37.1706, 100.037, -9.50426, 0.29", "-37.333, 100.593, -9.67194, 0.29", "-37.6697, 101.907, -9.99131, 0.88", "-37.8139, 102.461, -10.1695, 1.55", "-38.1445, 103.436, -10.6781, 1.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.2394, 23.2181, 1.23539, 0.74", "-12.0609, 23.3448, 1.13705, 0.74", "-12.7426, 23.4766, 1.05461, 0.74", "-13.363, 23.6064, 0.983002, 0.59", "-13.7377, 23.6915, 0.94307, 0.74", "-14.326, 23.8329, 0.886673, 0.74", "-14.7683, 23.943, 0.84954, 1.03", "-15.3448, 24.1033, 0.809338, 1.33", "-15.8194, 24.2313, 0.78355, 1.55", "-16.3931, 24.3684, 0.763201, 1.4", "-17.0968, 24.5107, 0.768436, 1.25", "-18.0021, 24.6822, 0.838282, 0.74", "-18.4746, 24.7777, 0.913932, 0.96", "-18.9819, 24.8857, 1.04118, 0.96", "-19.7319, 25.0739, 1.33043, 0.52", "-20.3978, 25.2832, 1.71069, 0.52", "-20.8905, 25.5027, 2.12308, 0.88", "-21.238, 25.7163, 2.50277, 0.59", "-21.2619, 25.7342, 2.52865, 0.59", "-21.62, 26.0558, 2.90559, 0.29", "-21.8727, 26.2811, 3.07142, 0.29", "-22.3478, 26.5639, 3.0931, 0.74", "-22.7615, 26.7363, 3.01088, 0.96", "-23.5414, 26.9717, 2.79475, 0.59", "-23.5908, 26.9826, 2.7784, 0.59", "-24.2034, 27.0704, 2.54346, 0.29", "-24.6059, 27.1067, 2.38036, 0.29", "-25.1642, 27.121, 2.15174, 1.62", "-25.7572, 27.092, 1.94875, 2.43", "-26.2664, 27.0404, 1.81626, 2.65", "-26.7185, 26.9829, 1.71731, 2.65", "-26.7571, 26.978, 1.71051, 2.65", "-27.8147, 26.8787, 1.58581, 1.11", "-28.6413, 26.8447, 1.55376, 0.37", "-29.176, 26.867, 1.56536, 0.37", "-29.7435, 26.9446, 1.61432, 0.37", "-30.2325, 27.0779, 1.71793, 0.37", "-30.7859, 27.3173, 1.91892, 0.81", "-31.1962, 27.5611, 2.14328, 1.47", "-31.4962, 27.7535, 2.34823, 1.69", "-31.6813, 27.8606, 2.48448, 1.69", "-32.4883, 28.2425, 3.09642, 0.66", "-33.1045, 28.4651, 3.55849, 0.37", "-33.5208, 28.5771, 3.86645, 0.37", "-34.2651, 28.6938, 4.37688, 1.25", "-34.8229, 28.7068, 4.75574, 2.36", "-35.3118, 28.6903, 5.0926, 2.36", "-35.3484, 28.6874, 5.12048, 2.36", "-35.6633, 28.659, 5.38248, 2.21", "-36.4541, 28.6048, 6.11646, 0.37", "-37.3643, 28.5568, 7.04577, 0.59", "-37.9164, 28.5358, 7.62983, 0.37", "-38.8465, 28.5115, 8.58494, 1.18", "-39.0939, 28.5071, 8.82359, 1.4", "-39.6096, 28.4996, 9.30103, 1.25", "-39.6422, 28.4988, 9.3337, 1.25", "-40.093, 28.4639, 9.8324, 0.52", "-40.5884, 28.3824, 10.3958, 2.14", "-41.0451, 28.3157, 10.9323, 2.95", "-41.6726, 28.2025, 11.7228, 1.92", "-42.6298, 28.058, 12.9065, 1.03", "-43.7061, 27.9568, 14.2409, 0.44", "-43.9559, 27.9342, 14.5689, 0.44", "-44.6653, 27.8765, 15.5229, 0.44", "-45.5377, 27.8206, 16.6942, 2.36", "-46.5527, 27.8014, 17.9544, 0.22", "-47.0105, 27.8275, 18.4297, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.444525, -43.0938, 2.58385, 0.36148", "-0.476297, -58.0938, 2.58385, 0.36148", "-0.508069, -73.0938, 2.58385, 0.36148" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "11.8917, -40.0139, 4.62675, 0.37", "12.877, -40.6944, 4.08137, 0.37", "13.6996, -41.1457, 3.60527, 0.29", "14.2075, -41.3965, 3.31087, 0.29", "15.6908, -42.0054, 2.50161, 0.74", "15.7565, -42.0267, 2.46927, 0.74", "16.9711, -42.3425, 1.9192, 0.66", "18.0832, -42.5051, 1.38846, 0.29", "18.1636, -42.5031, 1.35567, 0.29", "18.8991, -42.3653, 1.16649, 0.29", "19.5678, -42.1106, 1.16203, 0.74", "19.7612, -42.0068, 1.18936, 0.74", "20.1176, -41.7864, 1.30224, 1.03", "20.2524, -41.7139, 1.35564, 1.03", "20.6021, -41.599, 1.48285, 1.03", "21.3617, -41.495, 1.73818, 0.59", "22.2975, -41.5121, 2.03418, 0.22", "23.094, -41.6222, 2.29807, 0.22", "23.6712, -41.7449, 2.49471, 0.88", "24.7749, -41.9759, 2.84158, 1.84", "25.3435, -42.1032, 3.0117, 2.14", "26.1333, -42.2805, 3.26226, 2.36", "27.487, -42.5239, 3.74957, 0.66", "28.5436, -42.6134, 4.17757, 0.59", "30.1085, -42.6123, 4.87478, 0.52", "30.1766, -42.6043, 4.90818, 0.52", "30.9743, -42.4123, 5.29222, 1.33", "31.9433, -42.033, 5.74559, 1.77", "32.5284, -41.731, 6.05421, 1.77", "32.7544, -41.6168, 6.1848, 1.77", "33.5331, -41.303, 6.6508, 1.25", "34.6774, -40.9436, 7.29025, 0.52", "35.7917, -40.6881, 7.85222, 0.29", "36.9372, -40.5147, 8.40342, 0.29", "38.042, -40.3999, 8.94793, 0.22", "39.1098, -40.3349, 9.34052, 0.22", "39.1939, -40.3309, 9.36202, 0.22", "39.7581, -40.2675, 9.43904, 1.03", "40.2514, -40.1956, 9.44195, 1.47", "40.9111, -40.0623, 9.38504, 1.47", "43.0309, -39.5563, 9.11775, 0.59", "43.9449, -39.3474, 8.96386, 0.22", "45.0093, -39.171, 8.79684, 0.22", "45.7265, -39.0972, 8.682, 0.22", "45.8011, -39.094, 8.67122, 0.22", "46.7468, -39.1362, 8.59028, 0.22", "46.8218, -39.1422, 8.58433, 0.22", "47.9117, -39.2357, 8.37883, 1.03", "48.8483, -39.3428, 8.1745, 1.62", "48.9216, -39.3478, 8.15731, 1.62", "49.2656, -39.3696, 8.08333, 1.62", "51.3099, -39.4957, 7.72913, 0.15", "51.385, -39.5041, 7.71907, 0.15", "52.3696, -39.6812, 7.60595, 0.15", "52.4537, -39.6994, 7.59964, 0.15", "53.9203, -40.0364, 7.52312, 1.77", "54.8897, -40.3178, 7.52805, 2.73", "55.4574, -40.5147, 7.61433, 3.02", "58.4323, -41.579, 8.29311, 0.22", "59.0082, -41.7845, 8.48711, 0.22", "59.064, -41.8048, 8.51293, 0.22", "60.3492, -42.2729, 9.38441, 0.22", "61.9781, -42.7699, 10.849, 0.22", "62.0764, -42.7984, 10.9605, 0.22", "62.6717, -42.9934, 11.8297, 1.55", "63.2677, -43.1814, 12.6573, 2.21", "63.8481, -43.3508, 13.3971, 1.4", "64.9148, -43.6087, 14.5654, 0.22", "65.6518, -43.8392, 15.2991, 0.22", "66.2546, -44.0608, 15.9404, 0.22", "66.5951, -44.2252, 16.3556, 0.44", "66.6387, -44.2497, 16.4131, 0.44", "67.0517, -44.542, 17.053, 0.22", "67.9644, -45.2841, 18.5827, 1.62", "68.3162, -45.5983, 19.1796, 2.14", "69.6693, -46.8857, 21.4041, 0.22", "70.0437, -47.2645, 21.9997, 1.47", "71.2768, -48.5582, 23.8637, 1.11", "71.6659, -48.9869, 24.4074, 1.33", "72.7731, -50.1405, 25.6793, 0.22", "73.3253, -50.7035, 26.297, 0.22", "73.6254, -50.9916, 26.608, 1.47", "73.8976, -51.2507, 26.952, 2.14", "74.4059, -51.7006, 27.6319, 2.14", "75.6169, -52.8369, 29.453, 0.22", "76.6113, -53.8134, 31.1038, 1.77", "76.8314, -54.0465, 31.4945, 2.36", "78.3784, -55.8568, 34.5106, 0.29", "78.8666, -56.4654, 35.5015, 0.29", "79.1827, -56.9028, 36.1764, 0.29", "79.2104, -56.9454, 36.2333, 0.29", "79.4899, -57.3741, 36.7564, 0.29", "80.4762, -58.8701, 38.5155, 2.28", "80.7866, -59.3066, 39.0162, 2.65", "81.9347, -60.8908, 40.9613, 0.22", "82.3551, -61.4415, 41.6683, 0.22", "83.098, -62.3202, 42.8176, 0.96", "83.5064, -62.7366, 43.3876, 1.47", "85.0243, -63.9683, 45.1417, 0.22", "85.8249, -64.4712, 45.9641, 0.81", "85.9414, -64.5245, 46.0669, 0.81", "87.4497, -64.9958, 47.1944, 0.22", "88.2735, -65.1511, 47.6563, 0.22", "90.1108, -65.3806, 48.5771, 0.22", "91.1394, -65.4066, 48.9667, 0.22", "91.2119, -65.4044, 48.9902, 0.22", "92.9065, -65.3018, 49.4857, 0.96", "93.9666, -65.1564, 49.6914, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "11.8917, -40.0139, 4.62675, 1.25", "11.0931, -42.1006, 4.42306, 1.25", "10.451, -44.2215, 4.16186, 0.81", "10.1201, -45.8894, 3.90095, 0.81", "9.93877, -47.8181, 3.56867, 0.96", "9.91966, -49.7919, 3.18744, 0.74", "9.90517, -51.2884, 2.89841, 1.11", "10.0053, -52.288, 2.63276, 1.69", "10.4322, -53.9141, 2.13536, 2.36", "10.9961, -55.1517, 1.71441, 2.65", "11.5227, -55.91, 1.44167, 2.65" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-3.99062, -19.2661, 10.4164, 0.81", "-4.3477, -18.4895, 10.5115, 0.81", "-4.625, -17.8479, 10.5259, 0.66", "-4.8993, -17.1827, 10.5171, 0.66", "-5.06487, -16.8102, 10.4914, 0.96", "-5.38555, -16.1657, 10.4343, 0.44", "-5.63723, -15.6946, 10.3874, 0.44", "-6.05342, -14.9783, 10.2604, 0.59", "-6.2299, -14.7394, 10.2044, 0.59", "-6.68613, -14.3445, 10.1138, 0.59", "-7.07924, -14.1542, 10.0918, 0.59", "-7.12453, -14.1452, 10.0954, 0.59", "-7.57349, -14.1304, 10.1638, 0.59", "-8.1673, -14.1701, 10.3179, 1.33", "-8.67648, -14.2217, 10.4817, 1.69", "-9.18036, -14.2775, 10.6911, 1.55", "-9.74238, -14.3424, 11.0161, 0.88", "-10.1571, -14.3827, 11.456, 0.44", "-10.4442, -14.4225, 11.9912, 0.44", "-10.5343, -14.4546, 12.2738, 0.74", "-10.6227, -14.5367, 12.7515, 0.88", "-10.7725, -14.7862, 13.9363, 1.03", "-10.9658, -15.2788, 15.9468, 0.52", "-11.0461, -15.543, 16.9141, 1.25", "-11.1152, -15.8216, 17.792, 1.25", "-11.1309, -16.1133, 18.6225, 0.44", "-11.1198, -16.3575, 19.2548, 0.44", "-11.065, -16.6552, 20.0907, 0.29", "-10.8906, -17.0421, 21.4457, 1.99", "-10.8425, -17.1384, 21.8311, 1.99", "-10.5347, -17.7717, 24.5761, 1.99", "-10.53, -17.7813, 24.6212, 1.99", "-10.081, -18.6723, 28.9032, 2.73", "-9.62888, -19.6854, 33.8213, 1.4", "-9.57932, -19.8319, 34.5477, 1.25", "-9.56298, -19.9586, 35.2138, 0.22", "-9.58317, -20.0433, 35.6412, 0.22", "-9.59909, -20.0874, 35.83, 1.11", "-9.7261, -20.2823, 36.4194, 1.47", "-10.3167, -21.0159, 38.0521, 1.18", "-10.4615, -21.22, 38.5337, 1.99", "-10.7795, -21.6965, 39.7199, 0.22", "-10.9775, -21.9934, 40.4556, 0.22", "-11.0419, -22.0818, 40.6737, 0.66", "-11.3253, -22.4433, 41.5748, 0.66", "-11.5749, -22.6839, 42.1318, 0.29", "-11.8529, -22.9047, 42.756, 1.33", "-11.9598, -22.9286, 42.9391, 1.62", "-12.163, -22.9333, 43.2726, 1.84" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-3.99062, -19.2661, 10.4164, 1.62", "-4.42794, -20.314, 10.2216, 1.62", "-4.78536, -21.1376, 10.064, 1.33", "-5.2374, -22.1571, 9.85351, 0.88", "-5.75074, -23.3257, 9.59381, 0.74", "-6.35694, -24.7196, 9.27843, 0.74", "-6.88649, -26.0209, 8.99031, 2.14", "-7.33535, -27.254, 8.7349, 2.21", "-7.7693, -28.7523, 8.48979, 1.47", "-7.99056, -29.9366, 8.34818, 1.18", "-8.02542, -30.6449, 8.29906, 0.88", "-7.88043, -31.7832, 8.32833, 0.59", "-7.52926, -33.1346, 8.4602, 0.59", "-7.09459, -34.4415, 8.66768, 1.18", "-6.88349, -35.0033, 8.80149, 1.47", "-6.5797, -35.8427, 9.05806, 1.11", "-6.22529, -37.244, 9.54705, 0.74", "-6.36569, -37.9037, 9.80606, 0.44", "-7.01627, -38.504, 10.0636, 0.44", "-7.73353, -38.9502, 10.2476, 0.52", "-8.55835, -39.3397, 10.4406, 0.52", "-9.35472, -39.6557, 10.6096, 1.18", "-10.4396, -40.0721, 10.8164, 1.92", "-11.5766, -40.5794, 11.0069, 2.5", "-12.68, -41.1875, 11.1541, 2.36", "-13.9965, -42.0575, 11.2835, 2.06", "-15.0575, -42.8661, 11.3475, 0.59", "-15.9842, -43.6423, 11.4011, 0.52", "-16.9139, -44.5066, 11.452, 0.44", "-17.84, -45.4439, 11.4567, 1.4", "-18.617, -46.3064, 11.4325, 1.84", "-19.4499, -47.3139, 11.3686, 1.84", "-20.098, -48.1235, 11.3027, 1.69", "-20.7961, -49.021, 11.2186, 1.18", "-21.4753, -49.9357, 11.102, 0.74", "-21.8808, -50.5192, 10.9859, 0.66", "-22.442, -51.3927, 10.7433, 0.59", "-22.8999, -52.1567, 10.4509, 0.52", "-23.2196, -52.6973, 10.1921, 0.37", "-23.7941, -53.6686, 9.68797, 0.29", "-24.3416, -54.5624, 9.22124, 0.29", "-24.3847, -54.6264, 9.18725, 0.29", "-25.2891, -55.818, 8.58303, 1.77", "-26.0773, -56.8132, 8.18741, 2.36", "-26.1153, -56.8606, 8.17187, 2.36", "-26.5481, -57.4165, 8.03788, 2.58", "-27.0115, -58.0252, 7.90755, 2.58", "-27.7681, -58.9988, 7.69588, 1.84", "-28.5641, -60.0628, 7.46807, 0.81", "-29.2485, -61.0315, 7.25689, 0.52", "-29.8208, -61.9086, 7.08649, 0.44", "-30.5627, -63.1136, 6.88584, 0.44", "-31.155, -64.1811, 6.76554, 0.37", "-31.4967, -64.8999, 6.73593, 0.37", "-31.7889, -65.6046, 6.74855, 0.37", "-32.135, -66.5897, 6.84118, 0.29", "-32.3746, -67.4163, 6.93968, 0.29", "-32.6595, -68.7546, 7.1924, 1.99", "-32.8154, -69.6356, 7.4149, 2.95", "-32.9091, -70.1819, 7.58119, 2.95", "-33.1985, -72.0103, 8.17115, 0.59", "-33.326, -73.0748, 8.53421, 0.44", "-33.4463, -74.5323, 9.06252, 0.37", "-33.4995, -75.5867, 9.44843, 0.37", "-33.4818, -76.6345, 9.81252, 1.69", "-33.4308, -77.2272, 10.0138, 2.58", "-33.3007, -78.1263, 10.3077, 2.58", "-33.0832, -79.6301, 10.7747, 0.29", "-32.9692, -80.6543, 11.0291, 0.29", "-32.8287, -82.0201, 11.4039, 0.29", "-32.7288, -83.0641, 11.716, 0.66", "-32.6959, -83.4509, 11.8475, 0.74", "-32.6221, -84.437, 12.206, 0.29", "-32.5438, -85.3778, 12.6076, 0.29", "-32.4762, -86.9275, 13.3351, 1.4", "-32.475, -87.437, 13.5652, 1.92", "-32.4729, -87.5055, 13.5907, 1.92", "-32.4362, -87.8867, 13.7085, 1.92", "-32.2327, -89.281, 13.9939, 0.22", "-32.2193, -89.3531, 14.0031, 0.22", "-32.0322, -90.2619, 14.0834, 0.66", "-31.9471, -90.6313, 14.1166, 0.81", "-31.6308, -91.7689, 14.1918, 0.22", "-31.3166, -92.8123, 14.2367, 2.14", "-31.0412, -93.6618, 14.2464, 2.58", "-30.3221, -95.6792, 14.2517, 0.22", "-29.9455, -96.6775, 14.2519, 0.22", "-29.5076, -97.7996, 14.2423, 0.22", "-29.1602, -98.6523, 14.2168, 0.22", "-28.7989, -99.4684, 14.1851, 2.36", "-28.2293, -100.711, 14.0958, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "36.795, -21.2882, -87.9075, 0.15", "38.857, -23.116, -100.087, 0.15", "39.0023, -23.2578, -100.91, 1.69", "39.0762, -23.3338, -101.318, 1.92", "39.0873, -23.3459, -101.375, 1.92", "39.5287, -23.8373, -103.442, 0.22", "39.6212, -23.9427, -103.834, 0.22", "39.9292, -24.379, -104.279, 1.18", "39.9487, -24.4115, -104.314, 1.18", "40.3226, -25.0604, -105.067, 0.29", "40.4921, -25.3295, -105.39, 0.59", "40.8355, -25.833, -106.0, 0.37", "41.468, -26.5843, -107.027, 0.74", "41.4957, -26.6127, -107.07, 0.74", "42.0435, -27.2033, -108.041, 0.15", "42.2993, -27.4895, -108.57, 0.15", "42.3183, -27.5137, -108.611, 0.15", "42.4353, -27.6827, -108.887, 0.15", "42.4587, -27.7244, -108.942, 0.15", "42.7628, -28.2763, -109.614, 0.15", "42.9985, -28.7136, -110.113, 1.4", "43.1623, -29.0123, -110.45, 1.69", "43.894, -30.3235, -111.909, 0.22", "44.1478, -30.7647, -112.402, 0.22", "44.4574, -31.2946, -112.95, 0.22", "44.6906, -31.6658, -113.299, 0.96", "44.7829, -31.8228, -113.43, 0.96", "45.2171, -32.5247, -113.974, 0.22", "45.2373, -32.5575, -113.996, 0.22", "45.6284, -33.2085, -114.428, 0.22", "45.9854, -33.8846, -114.818, 1.55", "46.1828, -34.244, -115.0, 1.99", "46.7487, -35.2547, -115.536, 0.29", "46.7724, -35.2951, -115.558, 0.29", "47.1123, -35.8847, -115.942, 0.29", "47.5266, -36.677, -116.507, 0.29", "47.6506, -36.9639, -116.737, 0.29", "48.047, -38.0501, -117.776, 1.4", "48.1525, -38.4155, -118.175, 1.69", "48.405, -39.4056, -119.335, 0.29", "48.5437, -40.1068, -120.232, 0.29", "48.6608, -40.9919, -121.412, 1.47", "48.7141, -41.9676, -122.715, 1.18", "48.6929, -42.8621, -123.873, 0.22", "48.6545, -43.2331, -124.329, 0.22", "48.5193, -43.9421, -125.138, 1.69", "48.4346, -44.2726, -125.482, 1.77", "48.142, -45.1298, -126.177, 0.66", "47.949, -45.5747, -126.461, 0.22", "47.6775, -46.1252, -126.774, 0.96", "47.3978, -46.6897, -127.113, 0.22", "47.2808, -46.9652, -127.322, 0.15", "47.1271, -47.4434, -127.809, 0.15", "46.9844, -48.0374, -128.475, 0.44", "46.8792, -48.5195, -129.068, 1.33", "46.7893, -48.9352, -129.612, 1.25", "46.4205, -50.2624, -131.496, 1.25", "46.1428, -51.1731, -132.873, 0.15", "46.0325, -51.5045, -133.388, 0.15", "45.8547, -51.934, -134.078, 0.81", "45.775, -52.1014, -134.344, 0.96", "45.3768, -52.9034, -135.514, 0.52", "45.0346, -53.6025, -136.433, 0.22", "44.8813, -53.9383, -136.856, 1.18", "44.3796, -55.2448, -138.508, 0.22", "44.2333, -55.705, -139.074, 0.96", "43.9914, -56.6575, -140.198, 0.22", "43.9418, -56.9458, -140.509, 0.52", "43.9221, -57.0576, -140.625, 0.52", "43.7521, -58.2188, -141.821, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "36.795, -21.2882, -87.9075, 1.55", "38.757, -20.072, -91.1078, 1.55", "39.165, -19.8579, -91.7127, 1.62", "41.5157, -18.8615, -94.8642, 0.22", "41.5635, -18.8448, -94.9238, 0.22", "42.1376, -18.6934, -95.6009, 1.33", "42.4685, -18.626, -95.9718, 1.25", "44.2999, -18.4844, -97.6716, 0.22", "45.0445, -18.4738, -98.3077, 1.18", "45.4298, -18.4963, -98.5841, 1.33", "47.18, -18.6256, -99.7934, 0.22", "48.4056, -18.7348, -100.621, 1.84", "48.771, -18.7624, -100.845, 1.84", "49.8646, -18.838, -101.39, 0.29", "50.1509, -18.8513, -101.521, 0.74", "51.354, -18.8759, -101.995, 0.22", "51.4845, -18.8712, -102.036, 0.22", "52.0427, -18.8251, -102.208, 0.88", "53.4375, -18.5726, -102.768, 0.22", "53.7204, -18.4992, -102.899, 0.52", "54.208, -18.3498, -103.146, 0.22", "55.3087, -17.9842, -103.759, 1.92", "55.8009, -17.8078, -104.048, 1.92", "57.3367, -17.187, -105.003, 0.22", "57.5851, -17.0727, -105.159, 0.88", "57.7975, -16.977, -105.291, 0.88", "58.6717, -16.6182, -105.797, 0.22", "59.0929, -16.4585, -106.035, 0.22", "59.1414, -16.438, -106.064, 0.22", "59.3823, -16.357, -106.206, 0.22", "60.3642, -16.0735, -106.815, 1.4", "60.5844, -16.0176, -106.95, 1.4", "61.7537, -15.7627, -107.66, 0.22", "62.1947, -15.7054, -107.922, 0.96", "63.2301, -15.6358, -108.504, 0.22", "63.5079, -15.6378, -108.651, 0.22", "63.9061, -15.697, -108.826, 0.66", "64.4605, -15.8518, -109.028, 0.66", "65.3788, -16.2589, -109.267, 0.22", "65.8084, -16.5016, -109.358, 1.11", "66.0757, -16.6847, -109.405, 1.4", "67.102, -17.5534, -109.598, 0.22", "67.5329, -17.9901, -109.681, 0.22", "68.0177, -18.5646, -109.766, 0.96", "68.4068, -19.0694, -109.835, 1.47", "69.0376, -19.9275, -109.962, 0.22", "69.379, -20.3689, -110.065, 0.22", "69.4407, -20.446, -110.091, 0.22", "69.8418, -20.8982, -110.282, 0.22", "70.4328, -21.5127, -110.588, 1.33", "70.7094, -21.7652, -110.733, 1.62", "71.7459, -22.596, -111.278, 0.22", "72.224, -22.9594, -111.523, 0.66", "72.5039, -23.1738, -111.671, 0.66", "72.5892, -23.2405, -111.721, 0.66", "73.4173, -23.9096, -112.209, 0.22", "74.0091, -24.3967, -112.621, 1.11", "74.4104, -24.7385, -112.922, 1.33", "75.2764, -25.4722, -113.624, 0.22", "75.9006, -25.9722, -114.155, 1.25", "76.1698, -26.1636, -114.418, 1.33", "77.4524, -27.0046, -115.796, 0.22", "77.6121, -27.1017, -115.976, 0.44", "77.6848, -27.1408, -116.062, 0.44", "78.2842, -27.4183, -116.807, 1.18", "79.7469, -27.9837, -118.64, 0.22", "80.0977, -28.0972, -119.082, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.8357, -28.5422, -47.1485, 1.55", "-11.7855, -29.6129, -49.9466, 1.55", "-12.6144, -30.327, -52.3147, 0.22", "-12.9773, -30.6561, -53.3042, 0.22", "-13.5611, -31.2676, -55.1448, 2.36", "-13.9724, -31.8022, -56.8689, 2.87", "-15.5827, -33.836, -64.5728, 0.81", "-15.5947, -33.8505, -64.6521, 0.81", "-15.7678, -34.1509, -66.6971, 0.81", "-15.7743, -34.6825, -70.6161, 2.06", "-15.4679, -35.2519, -74.6829, 1.25", "-15.0811, -35.7554, -77.6169, 0.81", "-14.1692, -36.9866, -83.0285, 0.96", "-14.0293, -37.2335, -84.1659, 1.47", "-13.81, -37.7306, -86.5789, 0.22", "-13.7386, -37.9672, -87.5737, 0.22", "-13.5532, -38.5968, -90.3163, 1.4", "-13.3442, -39.3348, -93.4695, 1.03", "-13.2393, -39.9937, -96.2724, 1.69", "-13.1413, -40.7593, -99.5834, 1.4", "-12.9843, -41.5208, -102.88, 1.4", "-12.4839, -42.9477, -108.816, 1.84", "-11.8759, -44.1051, -113.241, 0.15", "-11.5827, -44.5752, -114.762, 1.84", "-11.4508, -44.7765, -115.305, 1.84", "-10.5918, -46.2189, -118.586, 0.22", "-10.2411, -46.7976, -119.844, 1.55", "-10.0888, -46.9834, -120.248, 1.77", "-9.19534, -47.6879, -122.336, 0.22", "-8.90281, -47.8607, -122.985, 0.22", "-8.18544, -48.2254, -124.497, 1.77", "-4.84092, -49.6568, -131.223, 1.25", "-3.35793, -50.2069, -134.082, 0.81", "-2.30169, -50.5769, -136.064, 0.15", "-1.82968, -50.7265, -136.925, 0.37", "-1.00412, -51.0058, -138.332, 0.22", "0.145298, -51.3959, -140.049, 1.77", "0.492042, -51.5325, -140.479, 1.84", "3.17806, -52.6535, -143.782, 0.96", "4.07906, -53.0344, -144.854, 1.4", "5.8329, -53.6737, -146.953, 0.22", "6.20085, -53.7765, -147.374, 0.22", "6.34129, -53.8021, -147.51, 0.22", "7.42462, -53.9184, -148.398, 0.22", "8.07067, -53.9457, -148.738, 1.18", "8.15688, -53.9503, -148.772, 1.18", "8.88535, -53.9812, -149.02, 1.18", "10.9689, -54.1889, -149.728, 0.29", "11.8549, -54.2981, -150.047, 0.44", "12.5765, -54.3834, -150.308, 0.44", "13.7351, -54.5134, -150.707, 0.22", "15.0976, -54.6601, -151.154, 1.47", "15.7972, -54.7408, -151.368, 1.62", "17.7576, -54.9688, -151.886, 0.22", "18.7867, -55.0882, -152.191, 0.22", "19.3578, -55.1854, -152.389, 0.59", "19.4294, -55.2107, -152.419, 0.59", "19.7434, -55.4295, -152.625, 0.59", "19.8623, -55.5799, -152.82, 0.59", "20.2258, -56.369, -153.879, 0.15", "20.387, -56.8073, -154.475, 1.18", "20.5588, -57.3261, -155.203, 1.18", "20.9628, -58.7006, -157.192, 0.44", "21.4011, -60.6578, -160.035, 0.22", "21.4463, -61.0762, -160.678, 0.22", "21.4205, -61.3328, -161.185, 0.74", "21.3912, -61.3893, -161.335, 0.74", "20.8083, -61.915, -163.251, 0.22", "20.5209, -62.0941, -164.012, 0.22", "19.4047, -62.5868, -166.578, 1.47", "17.9734, -63.0296, -169.594, 1.33", "16.4271, -63.418, -172.738, 0.59", "15.3464, -63.6263, -174.852, 0.44", "14.9776, -63.6648, -175.526, 0.44", "14.0313, -63.7162, -177.227, 0.22", "13.4273, -63.7325, -178.17, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-10.8357, -28.5422, -47.1485, 2.87", "-11.4985, -28.7172, -47.4687, 2.87", "-12.6752, -29.0368, -47.9478, 2.73", "-14.6932, -29.5858, -48.6859, 0.29", "-14.9548, -29.6563, -48.7942, 0.29", "-16.468, -30.0511, -49.4318, 0.29", "-17.9849, -30.4069, -50.0791, 1.55", "-18.693, -30.536, -50.3539, 2.21", "-19.0139, -30.5788, -50.4881, 2.21", "-21.1725, -30.8148, -51.5528, 0.22", "-21.8934, -30.8857, -51.99, 0.22", "-22.5208, -30.9389, -52.4441, 0.66", "-22.7658, -30.9452, -52.6332, 0.81", "-24.2194, -30.9264, -53.7362, 0.22", "-24.803, -30.9085, -54.1432, 0.22", "-25.8574, -30.8732, -54.8149, 1.84", "-26.3984, -30.8663, -55.1656, 2.21", "-27.264, -30.9044, -55.7937, 2.06", "-28.6724, -31.0297, -56.9307, 0.29", "-29.2576, -31.1309, -57.4824, 0.29", "-30.4097, -31.4206, -58.7328, 1.69", "-30.8757, -31.5793, -59.2939, 1.99", "-32.455, -32.2495, -61.3608, 1.11", "-33.1127, -32.6285, -62.3127, 1.11", "-34.0929, -33.4035, -63.9408, 0.29", "-34.396, -33.7055, -64.5045, 0.29", "-34.4802, -33.8176, -64.6876, 0.52", "-34.6859, -34.1679, -65.1841, 0.52", "-34.8473, -34.6473, -65.785, 0.22", "-34.9055, -34.9753, -66.1919, 0.22", "-34.9092, -35.0184, -66.2443, 0.22", "-35.0066, -36.9947, -68.5561, 2.06", "-35.0388, -37.5245, -69.1546, 2.36", "-35.2351, -39.1807, -71.0247, 0.22", "-35.2954, -39.5725, -71.4936, 0.22", "-35.3738, -40.0313, -72.0203, 0.22", "-35.5156, -40.9159, -72.9613, 1.33", "-35.6102, -41.5468, -73.6361, 1.47", "-35.8396, -42.7867, -75.0513, 0.22", "-36.1844, -43.9869, -76.7468, 0.22", "-36.3567, -44.528, -77.5814, 1.4", "-36.4377, -44.7852, -78.0088, 1.69", "-36.897, -46.5098, -80.9684, 0.22", "-37.0426, -47.2215, -82.2702, 1.92", "-37.3385, -48.9416, -85.8532, 0.29", "-37.3944, -49.2985, -86.7137, 0.29", "-37.399, -49.3514, -86.8495, 0.29", "-37.4198, -49.7569, -87.8262, 0.74", "-37.406, -50.5207, -89.4779, 1.55", "-37.2597, -52.4061, -93.2133, 1.47", "-37.0359, -54.1964, -96.3997, 0.29", "-36.9831, -54.6638, -97.2194, 0.29", "-36.9039, -55.5251, -98.6355, 1.4", "-36.7986, -57.0376, -100.89, 1.69", "-36.7601, -57.4101, -101.367, 1.69", "-36.3504, -59.6135, -103.783, 0.22", "-36.3274, -59.7094, -103.891, 0.22", "-36.209, -60.119, -104.382, 0.22", "-36.0021, -60.7361, -105.165, 1.47", "-35.4633, -62.3358, -107.151, 0.22", "-35.3208, -62.7415, -107.649, 1.4", "-34.8145, -64.0385, -109.374, 1.4", "-34.3899, -65.0609, -110.826, 0.22", "-33.9201, -66.1201, -112.627, 1.62", "-33.9059, -66.1512, -112.686, 1.62", "-33.7897, -66.4593, -113.322, 1.62", "-33.3893, -67.9213, -116.535, 0.15", "-33.3371, -68.2207, -117.236, 1.4", "-33.3078, -69.6549, -121.08, 1.11", "-33.3107, -69.6757, -121.134, 1.11", "-33.5267, -70.4034, -122.912, 0.37", "-33.6817, -70.718, -123.596, 0.74", "-33.8134, -70.9174, -123.951, 0.88", "-34.7165, -72.2413, -125.998, 0.22", "-35.1229, -72.9041, -126.687, 1.33", "-35.4309, -73.599, -127.23, 1.11", "-35.7359, -74.4934, -127.819, 0.22", "-35.7513, -74.5508, -127.854, 0.22", "-35.967, -75.5844, -128.334, 0.22", "-36.1357, -76.7175, -128.533, 0.22", "-36.2563, -78.4245, -128.727, 1.84" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "21.9376, 88.2423, -74.7406, 0.22", "21.3278, 90.4121, -75.1053, 0.22", "21.2851, 90.5775, -75.1304, 0.22", "21.0232, 91.8716, -75.3848, 0.22", "20.9315, 92.8662, -75.6703, 0.66", "20.931, 93.0185, -75.7207, 0.66", "20.9798, 93.5387, -75.9414, 0.66", "21.0018, 93.6124, -75.9801, 0.66", "21.3554, 94.4836, -76.4971, 0.22", "21.9691, 95.5737, -77.2171, 0.88", "22.2167, 95.944, -77.4597, 0.88", "23.0639, 97.0862, -78.1653, 0.29", "23.1405, 97.183, -78.2085, 0.29", "23.7523, 97.981, -78.4182, 0.29", "24.6003, 99.1592, -78.4865, 1.03", "24.9618, 99.6975, -78.4461, 1.25", "25.8453, 101.111, -78.2427, 0.37", "26.9861, 102.97, -77.8604, 0.22", "27.904, 104.517, -77.5054, 0.22", "28.6414, 105.84, -77.1451, 0.81", "29.2112, 106.977, -76.767, 0.22", "29.4593, 107.534, -76.5653, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "21.9376, 88.2423, -74.7406, 0.81", "22.5987, 89.1825, -75.2399, 0.81", "23.0003, 89.655, -75.4858, 0.22", "23.332, 90.0271, -75.6601, 0.22", "23.6797, 90.4211, -75.8281, 1.18", "23.9424, 90.719, -75.935, 1.18", "23.9723, 90.7526, -75.9471, 1.18", "24.6046, 91.4839, -76.1361, 0.29", "24.9111, 91.81, -76.2114, 0.44", "25.0729, 91.9641, -76.3143, 0.44", "25.5023, 92.3876, -76.7148, 0.22", "25.7763, 92.6774, -77.0321, 1.18", "25.9083, 92.8274, -77.3136, 1.47", "25.9801, 92.9208, -77.5655, 1.47", "26.4779, 93.7419, -80.0379, 0.52", "26.541, 93.8627, -80.4742, 0.81", "26.5704, 93.932, -80.7622, 0.81", "26.8269, 94.6783, -84.3562, 1.11", "26.8921, 95.0585, -86.6289, 0.59", "26.8689, 95.1748, -87.5776, 0.29", "26.7289, 95.2404, -88.8716, 0.74", "26.7194, 95.2379, -88.9234, 0.74", "26.549, 95.1202, -89.3991, 0.81", "25.9972, 94.5934, -89.9065, 0.29", "25.5699, 94.1435, -90.1562, 0.29", "24.9357, 93.4388, -90.4668, 0.29", "24.2629, 92.7187, -90.7208, 0.29", "23.5498, 91.956, -90.9835, 0.22", "23.102, 91.4819, -91.1397, 0.59", "22.975, 91.3375, -91.1773, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.0304946, 78.017, -28.4339, 0.22", "-1.55244, 80.0974, -26.5959, 0.22", "-1.9378, 80.5886, -26.2067, 0.66", "-2.68839, 81.5198, -25.5247, 0.22", "-3.46108, 82.4521, -24.8692, 1.4", "-3.87853, 82.9313, -24.5177, 1.4", "-5.52335, 84.798, -23.1447, 0.22", "-6.45983, 85.7767, -22.4746, 0.22", "-7.84914, 87.186, -21.5404, 1.47", "-8.14188, 87.4843, -21.355, 1.84", "-10.089, 89.5007, -20.2179, 0.22", "-10.412, 89.8396, -20.0402, 0.52", "-11.4837, 90.9961, -19.5407, 0.15", "-12.1327, 91.7266, -19.2668, 0.88", "-12.9135, 92.6487, -18.9951, 0.22", "-13.9455, 93.929, -18.7053, 1.84", "-14.31, 94.3946, -18.6375, 1.99", "-15.9805, 96.5276, -18.3402, 0.22", "-16.4805, 97.1822, -18.2552, 1.11", "-16.9035, 97.7426, -18.1724, 1.25", "-17.9526, 99.0961, -17.9184, 0.15", "-18.5149, 99.8108, -17.7367, 0.44", "-18.7349, 100.086, -17.6496, 0.44", "-18.8012, 100.169, -17.6173, 0.44", "-19.8662, 101.493, -17.0009, 0.15", "-20.5495, 102.384, -16.5521, 0.15", "-20.5929, 102.446, -16.5193, 0.15", "-20.916, 102.943, -16.271, 0.66", "-21.3203, 103.601, -15.9846, 0.81", "-22.1556, 105.007, -15.4627, 0.15", "-22.4796, 105.571, -15.2931, 0.15", "-23.2104, 106.899, -14.9617, 1.47", "-23.5542, 107.543, -14.8203, 1.47", "-24.1938, 108.769, -14.5825, 0.22", "-24.481, 109.329, -14.5144, 0.52", "-24.6139, 109.589, -14.5038, 0.52", "-25.1566, 110.639, -14.5042, 0.15", "-25.8171, 111.862, -14.6145, 1.33", "-26.0616, 112.301, -14.6726, 1.69", "-26.8448, 113.649, -14.9249, 0.22", "-27.2405, 114.331, -15.0665, 0.59", "-27.5802, 114.909, -15.2009, 0.59", "-28.2037, 115.928, -15.4836, 0.15", "-29.2363, 117.549, -16.0115, 1.33", "-29.6682, 118.221, -16.2372, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-0.0304946, 78.017, -28.4339, 0.29", "-1.94362, 79.6275, -30.1256, 0.29", "-2.68579, 80.2477, -30.7333, 0.52", "-3.84007, 81.2154, -31.5937, 0.74", "-4.30054, 81.6004, -31.9056, 0.88", "-5.53404, 82.6575, -32.6835, 0.15", "-5.99285, 83.0731, -32.9564, 0.15", "-6.59027, 83.6841, -33.2443, 1.33", "-7.17589, 84.3352, -33.4814, 1.77", "-8.30214, 85.643, -33.8319, 0.22", "-8.76617, 86.2099, -33.9449, 0.22", "-9.36568, 87.0436, -34.0512, 0.88", "-9.6335, 87.4657, -34.104, 0.88", "-10.2542, 88.5708, -34.2342, 0.15", "-10.6201, 89.4234, -34.2891, 0.15", "-10.8203, 90.1227, -34.2948, 0.15", "-11.0815, 91.5327, -34.2798, 2.14", "-11.1213, 92.0214, -34.2655, 2.14", "-11.1183, 92.1152, -34.2612, 2.14", "-10.8044, 94.1085, -34.1346, 0.15", "-10.6201, 94.7383, -34.0987, 0.15", "-10.4134, 95.2692, -34.097, 0.15", "-10.1578, 95.8197, -34.12, 0.66", "-9.83335, 96.4694, -34.1996, 0.81", "-9.77055, 96.5827, -34.2246, 0.81", "-9.2195, 97.4305, -34.6438, 0.15", "-8.68944, 98.2851, -35.1373, 0.88", "-8.65337, 98.345, -35.181, 0.88", "-8.48, 98.6564, -35.422, 0.88", "-8.41137, 98.796, -35.5277, 0.88", "-7.8779, 100.079, -36.4051, 0.15", "-7.71713, 100.563, -36.7149, 0.15", "-7.44219, 101.579, -37.3246, 1.11", "-7.29208, 102.337, -37.7571, 1.11", "-6.99164, 104.529, -38.9337, 0.22", "-6.94098, 105.27, -39.3547, 0.22", "-6.93845, 106.402, -40.006, 1.47", "-6.98772, 107.232, -40.4912, 1.69", "-7.38744, 109.475, -42.2087, 0.15", "-7.57129, 110.046, -42.7688, 0.88", "-8.30394, 111.629, -44.5883, 0.22", "-8.45546, 111.908, -44.9476, 1.55", "-8.78706, 112.451, -45.6851, 1.84", "-10.6418, 115.23, -49.5885, 0.59", "-11.2353, 116.009, -50.7181, 0.22", "-11.4921, 116.345, -51.1765, 0.74", "-12.2858, 117.39, -52.4106, 0.15", "-12.7698, 118.04, -53.0856, 0.15", "-13.1325, 118.524, -53.5033, 0.81", "-13.4647, 118.938, -53.7543, 0.81", "-14.4152, 119.969, -54.6032, 0.15", "-14.8554, 120.382, -55.1244, 0.96", "-15.2813, 120.741, -55.6749, 0.96", "-16.4998, 121.702, -57.3241, 0.22", "-17.1649, 122.217, -58.2367, 1.4", "-18.6086, 123.335, -60.2599, 1.69", "-20.2768, 124.656, -62.6058, 0.74", "-20.9429, 125.202, -63.5394, 0.22", "-21.2799, 125.491, -63.981, 0.59", "-21.8172, 125.992, -64.5255, 0.22", "-21.87, 126.049, -64.5534, 0.22", "-22.4519, 126.759, -64.5567, 0.22", "-22.8024, 127.239, -64.4516, 0.52", "-23.5012, 128.386, -64.1624, 0.15", "-24.1666, 129.692, -63.7953, 1.84", "-25.0033, 131.575, -63.2207, 0.15", "-25.2221, 132.119, -63.0319, 0.29", "-25.2786, 132.294, -62.9684, 0.29", "-25.529, 133.314, -62.5876, 0.15", "-25.683, 134.203, -62.2567, 0.74", "-25.72, 134.501, -62.1611, 0.74", "-25.9013, 136.059, -61.7304, 0.22", "-26.0963, 137.456, -61.3612, 0.22", "-26.2759, 138.623, -61.0686, 1.69", "-26.3542, 139.119, -60.9555, 1.69", "-26.5305, 140.499, -60.6975, 0.22", "-26.5919, 141.097, -60.6056, 0.37", "-26.6686, 142.224, -60.4897, 0.15", "-26.6849, 142.5, -60.4699, 0.37", "-26.7404, 143.513, -60.4452, 0.15", "-26.763, 144.365, -60.4892, 0.74", "-26.7661, 144.54, -60.5094, 0.74", "-26.7726, 144.777, -60.5477, 0.74", "-26.8013, 145.97, -60.7691, 0.15", "-26.8329, 146.818, -60.9305, 1.03", "-26.9297, 148.563, -61.2148, 0.15", "-27.0377, 150.102, -61.434, 1.99", "-27.1113, 150.738, -61.51, 1.99", "-27.3705, 152.168, -61.646, 0.22", "-27.5939, 153.086, -61.7146, 0.81", "-27.9798, 154.352, -61.7735, 0.22", "-28.0094, 154.428, -61.7746, 0.22", "-28.451, 155.419, -61.8007, 0.22", "-28.8998, 156.276, -61.8707, 0.22", "-29.3326, 157.006, -62.0173, 0.22", "-29.8929, 157.962, -62.3174, 0.22", "-30.2156, 158.572, -62.5196, 1.03", "-30.3716, 158.91, -62.6285, 1.03", "-30.9676, 160.561, -63.1153, 0.22", "-31.4397, 161.937, -63.5228, 0.59", "-31.8649, 163.197, -63.8884, 0.22", "-32.316, 164.661, -64.3128, 2.06", "-32.4811, 165.283, -64.4766, 1.69", "-32.8221, 166.956, -64.8602, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-38.1445, 103.436, -10.6781, 0.22", "-38.3804, 104.426, -10.9846, 0.22", "-38.5046, 104.921, -11.1695, 0.66", "-38.5936, 105.275, -11.306, 0.81", "-38.8784, 106.326, -11.7152, 0.22", "-39.0736, 106.973, -11.9665, 0.66", "-39.2357, 107.404, -12.1361, 0.96", "-39.6839, 108.414, -12.5573, 0.22", "-39.7967, 108.641, -12.6499, 0.22", "-39.9591, 108.955, -12.7646, 0.52", "-40.1372, 109.323, -12.8694, 0.52", "-40.5609, 110.299, -13.0847, 0.22", "-40.824, 110.998, -13.2144, 0.22", "-41.0536, 111.646, -13.2796, 1.77", "-41.1839, 112.056, -13.2802, 2.06", "-41.568, 113.534, -13.1122, 0.22", "-41.6399, 113.891, -13.0419, 0.59", "-41.716, 114.397, -12.8979, 0.66", "-41.9184, 115.794, -12.4265, 0.22", "-42.0854, 116.998, -11.9726, 0.22", "-42.2512, 118.22, -11.4783, 1.47", "-42.3139, 118.664, -11.2834, 1.92", "-42.5143, 120.053, -10.7047, 0.22", "-42.5782, 120.497, -10.5367, 0.22", "-42.6565, 121.066, -10.3589, 0.74", "-42.6912, 121.269, -10.3123, 0.74", "-42.8917, 122.169, -10.1565, 0.15", "-43.0946, 122.934, -10.0235, 0.15", "-43.2426, 123.439, -9.9411, 0.96", "-43.3208, 123.693, -9.89632, 1.33", "-43.393, 123.917, -9.8582, 1.33", "-43.4117, 123.972, -9.84969, 1.33", "-43.8107, 124.998, -9.72627, 0.22", "-43.9708, 125.362, -9.68107, 0.81", "-44.1766, 125.785, -9.63248, 0.81", "-44.4973, 126.414, -9.56316, 0.22", "-44.6125, 126.629, -9.5431, 0.44", "-45.1312, 127.535, -9.48228, 0.22", "-45.3012, 127.805, -9.47445, 0.59", "-45.553, 128.188, -9.44452, 0.59", "-45.9231, 128.745, -9.38082, 0.15", "-46.3338, 129.357, -9.29394, 0.15", "-46.6753, 129.871, -9.21592, 1.11", "-46.8882, 130.187, -9.16717, 1.62", "-47.6209, 131.241, -9.0195, 0.15", "-47.8372, 131.541, -8.97842, 0.59", "-47.9345, 131.671, -8.96283, 0.59", "-48.2681, 132.143, -8.90975, 0.22", "-48.5399, 132.548, -8.87215, 0.22", "-48.6831, 132.774, -8.86027, 0.59", "-48.8352, 133.038, -8.86243, 0.59", "-49.0844, 133.531, -8.857, 0.22", "-49.3977, 134.281, -8.83379, 0.22", "-49.3977, 134.281, -8.83379, 0.66", "-49.4689, 134.674, -8.80973, 0.66", "-49.5581, 135.361, -8.76681, 0.22", "-49.606, 135.89, -8.73386, 1.4", "-49.6263, 136.21, -8.71464, 1.77", "-49.7031, 137.756, -8.6284, 0.22", "-49.7246, 138.243, -8.60117, 0.96", "-49.7416, 138.664, -8.57783, 0.96", "-49.7743, 139.404, -8.53882, 0.22", "-49.8319, 140.369, -8.48986, 0.22", "-49.8828, 141.051, -8.45573, 0.88", "-49.9137, 141.421, -8.43613, 1.25", "-49.963, 142.065, -8.39682, 0.22", "-49.9713, 142.174, -8.38768, 0.22", "-49.9874, 142.572, -8.32311, 0.22", "-49.9811, 142.899, -8.2449, 0.22", "-49.9264, 143.667, -7.9965, 0.22", "-49.8928, 143.981, -7.88052, 0.81", "-49.8344, 144.414, -7.66824, 0.81", "-49.7041, 145.301, -7.17278, 0.15", "-49.5988, 145.926, -6.78499, 0.15", "-49.4353, 146.862, -6.15494, 1.4", "-49.398, 147.093, -5.99171, 1.84", "-49.2196, 148.326, -5.11749, 0.22", "-49.214, 148.368, -5.0882, 0.22", "-49.197, 148.525, -4.97836, 0.22", "-49.1932, 148.567, -4.95011, 0.22", "-49.1602, 149.1, -4.63145, 0.22", "-49.1114, 149.789, -4.27018, 0.88", "-49.1045, 149.842, -4.24545, 0.88", "-49.0642, 150.052, -4.14096, 1.03", "-48.8488, 150.994, -3.66239, 0.22", "-48.5853, 151.987, -3.15241, 1.55", "-48.4637, 152.4, -2.92079, 1.92", "-48.1114, 153.564, -2.24899, 0.22", "-48.0158, 153.88, -2.06246, 0.22", "-47.9328, 154.145, -1.90091, 0.52", "-47.8521, 154.36, -1.75636, 0.52", "-47.5496, 155.104, -1.24362, 0.22", "-47.4701, 155.306, -1.0864, 0.59", "-47.3976, 155.498, -0.921156, 0.59", "-47.3731, 155.562, -0.866803, 0.59", "-47.1396, 156.116, -0.412758, 0.22", "-47.1249, 156.156, -0.384345, 0.22", "-46.9112, 156.781, 0.00254584, 0.22", "-46.9016, 156.818, 0.0226221, 0.22", "-46.7814, 157.508, 0.319304, 0.88", "-46.7393, 157.875, 0.446229, 1.47", "-46.6944, 158.863, 0.721619, 0.22", "-46.6943, 158.906, 0.732032, 0.22", "-46.7192, 159.796, 0.91334, 0.22", "-46.7238, 160.572, 1.05769, 0.88", "-46.7168, 160.847, 1.10288, 1.33", "-46.6627, 161.69, 1.2295, 0.15", "-46.6308, 162.007, 1.26921, 0.15", "-46.5358, 162.836, 1.37579, 0.15", "-46.359, 164.085, 1.53932, 1.77", "-46.1568, 165.288, 1.69502, 0.22", "-46.0426, 165.893, 1.76547, 0.22", "-45.9558, 166.274, 1.79955, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-38.1445, 103.436, -10.6781, 0.22", "-39.0681, 105.125, -12.3276, 0.22", "-39.0841, 105.182, -12.3885, 0.22", "-39.1668, 105.742, -12.9673, 0.22", "-39.2311, 106.485, -13.7193, 1.11", "-39.2661, 107.162, -14.4286, 1.92", "-39.2934, 107.671, -14.9459, 2.14", "-39.3167, 110.235, -17.2664, 0.22", "-39.281, 110.779, -17.8684, 0.22", "-39.2733, 110.841, -17.9409, 0.22", "-39.1151, 111.799, -19.0791, 0.22", "-38.987, 112.343, -19.6818, 0.88", "-38.8574, 112.878, -20.2399, 0.88", "-38.1855, 115.896, -23.0702, 1.25", "-37.9719, 116.992, -24.0473, 1.62", "-37.9575, 117.065, -24.1076, 1.62", "-37.6134, 118.643, -25.2985, 0.29", "-37.5105, 119.123, -25.636, 0.66", "-37.498, 119.195, -25.6771, 0.66", "-37.4307, 119.809, -26.0343, 0.66", "-37.4232, 119.877, -26.0814, 0.66", "-37.247, 121.254, -27.1327, 0.22", "-37.0699, 122.732, -28.4376, 2.14", "-37.011, 123.252, -28.9138, 2.8", "-36.6485, 126.621, -32.0674, 0.37", "-36.5119, 127.901, -33.2833, 0.37", "-36.3183, 129.838, -35.1096, 0.96", "-36.1155, 131.708, -36.8271, 0.22", "-36.0205, 132.476, -37.5127, 1.11", "-36.0115, 132.54, -37.5657, 1.11", "-35.9616, 132.902, -37.7979, 1.11", "-35.7783, 134.185, -38.5147, 0.15", "-35.6447, 135.391, -39.0359, 0.15", "-35.5292, 136.401, -39.4213, 0.15", "-35.4031, 137.834, -39.9958, 1.99", "-35.3746, 138.732, -40.3596, 2.21", "-35.4284, 140.142, -40.9011, 0.74", "-35.6009, 141.539, -41.3829, 0.29", "-35.6168, 141.617, -41.4061, 0.29", "-35.7746, 142.283, -41.5861, 0.52", "-35.9143, 142.857, -41.7402, 0.52", "-36.0941, 143.687, -41.9822, 0.29", "-36.1853, 144.212, -42.1592, 0.74", "-36.2458, 145.072, -42.5826, 0.96", "-36.2576, 146.558, -43.4306, 0.22", "-36.2087, 147.81, -44.2123, 1.55", "-36.176, 148.471, -44.6435, 1.99", "-36.1574, 149.486, -45.4632, 1.99", "-36.2468, 151.388, -47.2182, 0.37", "-36.2963, 151.657, -47.7037, 0.37", "-36.3773, 151.884, -48.2641, 0.37", "-36.5388, 152.162, -49.111, 0.37", "-37.1836, 152.922, -51.8489, 1.92", "-37.3982, 153.101, -52.6016, 2.43", "-40.2947, 154.93, -61.3472, 0.37", "-40.5487, 155.071, -62.0823, 0.44", "-40.8809, 155.237, -62.9892, 0.29", "-41.172, 155.371, -63.7251, 0.29", "-41.4547, 155.507, -64.3167, 0.66", "-41.676, 155.619, -64.7414, 0.88", "-42.4307, 155.972, -66.1099, 0.66", "-42.7997, 156.131, -66.9938, 0.22", "-43.1121, 156.23, -67.9273, 1.55", "-43.4933, 156.35, -69.1702, 2.36", "-44.439, 156.622, -72.499, 2.36", "-45.7319, 156.938, -77.3591, 0.88", "-46.1146, 157.01, -78.9034, 0.52", "-46.8117, 157.093, -82.1565, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "11.5227, -55.91, 1.44167, 0.37", "13.2478, -56.4538, 1.78085, 0.37", "14.1416, -56.8179, 1.9586, 0.29", "15.1825, -57.341, 2.21334, 0.66", "16.1248, -57.8606, 2.47148, 1.33", "16.7191, -58.2032, 2.64534, 1.62", "17.3757, -58.5899, 2.84485, 1.62", "18.3204, -59.2691, 3.13839, 0.59", "19.2219, -59.9977, 3.41171, 0.37", "19.7089, -60.4161, 3.52274, 0.74", "20.0778, -60.74, 3.55421, 0.74", "20.1304, -60.7859, 3.55053, 0.74", "20.7304, -61.3264, 3.40777, 0.29", "21.5802, -62.1712, 3.14536, 0.29", "22.312, -63.0182, 2.97079, 1.92", "23.0682, -64.0012, 2.87976, 3.09", "23.2741, -64.2927, 2.89101, 3.61", "23.858, -65.1739, 3.04538, 3.32", "24.8064, -66.7004, 3.4978, 0.88", "25.6287, -68.1096, 4.1654, 0.44", "26.0384, -68.8181, 4.59218, 0.44", "26.551, -69.6991, 5.21166, 1.18", "27.0127, -70.4169, 5.78549, 1.69", "27.3237, -70.8176, 6.17977, 1.69", "28.4982, -71.9622, 7.56362, 0.44", "28.9839, -72.344, 8.07365, 0.66", "29.0261, -72.3758, 8.11938, 0.66", "29.4722, -72.7041, 8.58724, 0.66", "30.0803, -73.2638, 9.31803, 0.29", "30.253, -73.5645, 9.62082, 0.29", "30.1944, -74.2926, 10.0047, 0.29", "29.9947, -75.1784, 10.4061, 0.81", "29.8953, -75.6135, 10.5904, 1.03", "29.647, -76.91, 11.2057, 0.37", "29.5809, -77.5215, 11.5084, 0.37", "29.5787, -77.6469, 11.5882, 0.37", "29.6666, -78.5238, 12.2543, 0.52", "29.7929, -79.1151, 12.7524, 0.88", "30.1338, -80.2971, 13.8805, 0.37", "30.4378, -81.0933, 14.6458, 0.29", "30.9623, -82.3097, 15.7807, 1.77", "31.193, -82.9023, 16.3254, 2.58", "31.2194, -82.9876, 16.4035, 2.58", "31.4379, -84.1842, 17.5173, 2.58", "31.5694, -85.3769, 18.6014, 0.37", "31.6586, -86.576, 19.7031, 0.37", "31.7553, -87.738, 20.7314, 0.66", "31.8422, -88.6639, 21.5522, 0.74", "32.0236, -89.8032, 22.5412, 0.29", "32.1471, -90.3366, 23.011, 0.29", "32.2549, -90.6325, 23.2889, 1.11", "32.4317, -90.9534, 23.5813, 1.33", "32.8661, -91.5358, 24.0894, 0.88", "33.5805, -92.3933, 24.8479, 0.29", "34.3506, -93.2345, 25.618, 0.29", "35.0764, -94.0104, 26.3694, 2.65", "35.1123, -94.0518, 26.4116, 2.65", "35.5069, -94.5623, 26.9677, 3.09", "36.0218, -95.5177, 28.1348, 0.37", "36.3296, -96.2882, 29.091, 0.15", "36.4956, -96.7946, 29.7077, 0.15", "36.749, -97.7546, 30.8723, 2.14", "36.912, -98.6231, 31.8917, 2.58", "37.2396, -101.106, 34.6311, 0.44", "37.2585, -101.666, 35.2291, 0.88", "37.2502, -101.871, 35.4445, 0.88", "37.2455, -101.926, 35.5007, 0.88", "37.1332, -103.191, 36.6841, 0.22", "37.0706, -103.999, 37.3856, 0.22", "37.0042, -105.035, 38.225, 1.55", "36.9199, -106.385, 39.3295, 2.14", "36.8239, -107.971, 40.5687, 0.15", "36.7889, -108.497, 40.9537, 0.81", "36.7296, -109.593, 41.7061, 0.15", "36.687, -110.325, 42.1858, 1.55", "36.6741, -110.661, 42.3905, 1.77", "36.6084, -112.292, 43.3262, 0.15", "36.4652, -114.056, 44.4155, 0.15", "36.4095, -114.39, 44.6635, 0.52", "36.137, -115.515, 45.5819, 0.22", "35.8282, -116.512, 46.4751, 0.74", "35.7461, -116.744, 46.6987, 0.74", "35.2203, -117.971, 48.0423, 0.59", "34.4642, -119.385, 49.7748, 0.22", "34.3317, -119.594, 50.0482, 0.52", "33.9888, -120.029, 50.684, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "11.5227, -55.91, 1.44167, 0.88", "11.0685, -56.8218, 1.43083, 0.88", "10.7854, -57.3931, 1.42635, 0.37", "10.4768, -58.0201, 1.43524, 0.37", "10.0163, -58.9538, 1.43553, 0.37", "9.77742, -59.4676, 1.42953, 1.47", "9.5274, -60.0793, 1.36738, 2.14", "9.43172, -60.3375, 1.32808, 2.14", "9.24416, -61.0514, 1.16688, 1.03", "9.21636, -61.6455, 0.897163, 0.44", "9.27455, -62.2288, 0.540211, 0.37", "9.46494, -63.3414, -0.251023, 1.77", "9.51671, -63.6391, -0.481258, 2.14", "9.58572, -64.1622, -0.897002, 2.21", "9.72028, -65.821, -2.21449, 0.29", "9.72873, -66.3175, -2.58864, 0.29", "9.66431, -67.0537, -3.11096, 0.29", "9.52842, -67.7476, -3.54253, 0.29", "9.32682, -68.496, -3.99313, 0.29", "9.067, -69.1726, -4.35726, 0.88", "8.89883, -69.4905, -4.48453, 1.62", "8.48421, -70.2136, -4.77482, 1.99", "8.36397, -70.4307, -4.84875, 1.99" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-28.2293, -100.711, 14.0958, 0.29", "-28.0757, -101.738, 13.097, 0.29", "-28.0356, -101.988, 12.8667, 0.44", "-27.8769, -102.88, 12.1343, 0.22", "-27.7266, -103.628, 11.6272, 0.22", "-27.7176, -103.669, 11.6025, 0.22", "-27.6721, -103.872, 11.4914, 0.66", "-27.5961, -104.178, 11.3721, 0.66", "-27.3702, -104.912, 11.1301, 0.22", "-27.0996, -105.666, 10.9278, 1.4", "-26.9875, -105.978, 10.8431, 1.84", "-26.974, -106.017, 10.8325, 1.84", "-26.6673, -106.932, 10.5791, 0.29", "-26.4146, -107.819, 10.3619, 0.29", "-26.2758, -108.485, 10.219, 0.29", "-26.1917, -109.212, 10.086, 1.69", "-26.1784, -109.611, 10.0427, 2.28", "-26.1955, -109.931, 10.0258, 2.5", "-26.3512, -111.04, 10.089, 0.29", "-26.5057, -111.81, 10.1877, 0.29", "-26.6755, -112.574, 10.3096, 0.29", "-26.8667, -113.445, 10.4638, 2.06", "-26.9973, -114.08, 10.5791, 2.65", "-27.2373, -115.445, 10.8176, 0.29", "-27.3288, -116.111, 10.9275, 0.22", "-27.383, -116.641, 11.0135, 0.22", "-27.4164, -117.068, 11.0733, 0.88", "-27.4341, -117.376, 11.1063, 1.18", "-27.4402, -117.63, 11.1279, 1.18", "-27.4293, -118.374, 11.1538, 0.22", "-27.4078, -118.731, 11.1686, 0.22", "-27.3704, -119.156, 11.2017, 0.22", "-27.327, -119.531, 11.2317, 1.25", "-27.253, -119.892, 11.2631, 1.25", "-26.9942, -120.901, 11.3363, 0.22", "-26.8003, -121.439, 11.3426, 0.22", "-26.4621, -122.189, 11.291, 1.11", "-26.2891, -122.518, 11.2448, 1.55", "-25.7116, -123.509, 11.0383, 0.22", "-25.3124, -124.098, 10.8467, 0.22", "-24.6868, -124.866, 10.4556, 0.22", "-24.2641, -125.323, 10.1569, 1.69", "-24.1022, -125.472, 10.0214, 1.99", "-24.0709, -125.497, 9.99297, 1.99", "-23.4506, -125.918, 9.2698, 0.29", "-22.9368, -126.22, 8.61195, 0.29", "-22.9099, -126.235, 8.57309, 0.29", "-22.428, -126.503, 7.85915, 1.4", "-22.1805, -126.634, 7.47642, 1.62", "-21.3626, -127.044, 6.13539, 0.22", "-21.3398, -127.054, 6.09295, 0.22", "-21.0374, -127.155, 5.45175, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-28.2293, -100.711, 14.0958, 0.29", "-28.4866, -102.9, 14.1982, 0.29", "-28.6517, -104.331, 14.2589, 0.29", "-28.7284, -104.973, 14.2807, 0.74", "-28.8877, -106.126, 14.3075, 0.81", "-28.9946, -106.851, 14.3182, 1.11", "-29.1557, -107.887, 14.3216, 0.44", "-29.3126, -108.765, 14.2969, 0.29", "-29.5077, -109.833, 14.2577, 0.29", "-29.7783, -111.345, 14.1837, 2.21", "-29.9032, -112.042, 14.127, 2.73", "-30.2304, -113.968, 13.8994, 0.29", "-30.3516, -114.708, 13.7816, 0.29", "-30.4661, -115.529, 13.6262, 0.81", "-30.4846, -115.696, 13.5892, 0.96", "-30.5533, -116.812, 13.3182, 0.22", "-30.5841, -117.79, 13.0806, 0.22", "-30.5818, -118.404, 12.936, 1.33", "-30.578, -118.939, 12.8478, 1.62", "-30.5794, -119.024, 12.8397, 1.62", "-30.6136, -120.238, 12.8071, 0.29", "-30.6282, -121.119, 12.8278, 0.22", "-30.6264, -121.938, 12.8646, 0.22", "-30.6101, -122.835, 12.9135, 1.11", "-30.593, -123.543, 12.958, 1.47", "-30.5513, -124.813, 13.1155, 0.22", "-30.524, -125.685, 13.2959, 0.22", "-30.494, -126.579, 13.5316, 0.74", "-30.4983, -126.825, 13.6144, 0.74", "-30.5028, -126.893, 13.642, 0.74", "-30.7659, -128.925, 14.654, 0.22", "-30.9707, -130.057, 15.2824, 1.99", "-31.055, -130.44, 15.507, 1.99", "-31.4392, -132.074, 16.5575, 0.22", "-31.8307, -133.708, 17.6624, 0.22", "-32.1266, -134.869, 18.4727, 1.84", "-32.1853, -135.084, 18.6255, 1.99", "-32.2244, -135.228, 18.7321, 1.99", "-32.7673, -137.322, 20.3429, 0.22", "-32.9017, -137.921, 20.8214, 0.96", "-33.1139, -138.866, 21.6073, 0.22", "-33.1932, -139.275, 21.9483, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-36.2563, -78.4245, -128.727, 0.29", "-35.8597, -79.632, -128.68, 0.29", "-35.4397, -80.966, -128.656, 0.22", "-35.3119, -81.445, -128.653, 0.52", "-35.2306, -81.8643, -128.663, 0.52", "-35.0979, -82.8268, -128.7, 0.22", "-35.0063, -83.6379, -128.736, 0.22", "-34.9842, -84.319, -128.789, 0.81", "-34.9825, -84.9617, -128.845, 1.11", "-35.0132, -86.1059, -128.925, 0.22", "-35.0554, -86.7995, -128.965, 0.22", "-35.1348, -87.5787, -128.998, 0.22", "-35.2126, -88.1512, -129.033, 1.11", "-35.3688, -89.3266, -129.113, 0.22", "-35.5261, -90.7561, -129.213, 0.22", "-35.5935, -91.5865, -129.268, 1.33", "-35.6025, -91.8924, -129.298, 1.47", "-35.5918, -93.5794, -129.508, 0.22", "-35.5234, -94.3217, -129.627, 1.11", "-35.4262, -94.8468, -129.735, 1.47", "-35.2919, -95.3435, -129.854, 1.47", "-34.7657, -96.8148, -130.23, 0.15", "-34.7416, -96.8675, -130.245, 0.15", "-34.1581, -97.7435, -130.514, 0.88", "-34.1242, -97.7901, -130.531, 0.88" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-36.2563, -78.4245, -128.727, 1.69", "-37.4933, -79.6377, -129.003, 1.69", "-38.8394, -80.5976, -129.392, 0.22", "-38.9071, -80.6393, -129.413, 0.22", "-40.1907, -81.3863, -129.797, 0.22", "-41.2523, -81.9842, -130.177, 0.88", "-42.2194, -82.5179, -130.554, 1.11", "-43.8692, -83.2361, -131.236, 0.22", "-44.5404, -83.4744, -131.512, 0.52", "-44.7611, -83.534, -131.605, 0.52", "-46.3736, -83.7545, -132.386, 0.37", "-46.4458, -83.7622, -132.422, 0.29", "-47.1843, -83.8527, -132.75, 0.22", "-47.5675, -83.913, -132.909, 0.37", "-48.3935, -84.0535, -133.303, 0.37", "-49.7182, -84.4536, -134.272, 0.29", "-50.6708, -84.8999, -135.13, 0.29", "-51.4238, -85.3542, -135.922, 0.22", "-52.3971, -86.1606, -137.152, 1.11", "-53.0263, -86.8052, -138.057, 1.33", "-54.8023, -88.7971, -140.81, 0.29", "-55.2621, -89.3924, -141.616, 0.59", "-55.2873, -89.4294, -141.669, 0.59", "-55.8858, -90.4475, -143.169, 0.29", "-55.9086, -90.494, -143.232, 0.29", "-56.6122, -91.8587, -144.853, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-32.8221, 166.956, -64.8602, 0.22", "-33.2369, 170.047, -68.7734, 0.22", "-33.3269, 171.084, -70.0582, 0.37", "-33.3444, 171.657, -70.7215, 0.15", "-33.3406, 172.083, -71.2408, 0.44", "-33.3346, 173.049, -72.4303, 0.22", "-33.3671, 174.314, -73.9847, 1.25", "-33.3594, 175.921, -75.7366, 0.22", "-33.4076, 176.673, -76.5904, 1.03", "-33.6346, 178.564, -78.7781, 0.22", "-33.6948, 178.931, -79.2028, 0.22", "-33.9075, 180.001, -80.38, 1.11", "-33.9902, 180.357, -80.7357, 1.4", "-34.4044, 182.04, -82.171, 0.22", "-34.4999, 182.429, -82.4667, 0.59", "-34.8633, 184.311, -83.5766, 0.22", "-34.9616, 185.001, -83.934, 0.88", "-35.0061, 185.56, -84.1546, 1.03", "-35.0913, 187.024, -84.5967, 0.22", "-35.1072, 187.774, -84.7445, 0.59", "-35.1303, 189.192, -84.9448, 0.22", "-35.1189, 190.18, -85.0497, 0.22", "-35.0565, 191.872, -85.2612, 1.47", "-35.0242, 192.356, -85.3265, 1.47", "-34.8969, 193.66, -85.5761, 0.22", "-34.8236, 194.305, -85.7491, 0.52", "-34.6168, 196.04, -86.3105, 0.22", "-34.5544, 196.542, -86.4938, 1.03", "-34.5179, 196.867, -86.6302, 1.03", "-34.1901, 200.357, -88.2113, 0.22", "-34.1002, 201.422, -88.7048, 0.96", "-34.0622, 201.973, -88.9644, 0.96", "-34.0595, 202.047, -88.9988, 0.96", "-34.0179, 203.937, -89.9231, 0.22", "-34.0091, 204.988, -90.4704, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-32.8221, 166.956, -64.8602, 0.22", "-34.2956, 167.32, -66.8308, 0.22", "-36.7044, 167.751, -70.0014, 0.15", "-38.4991, 168.007, -72.3065, 1.4", "-39.9675, 168.217, -74.1923, 1.4", "-41.8271, 168.482, -76.5807, 0.22", "-42.5574, 168.587, -77.5187, 0.22", "-43.4222, 168.641, -78.7513, 0.88", "-43.6929, 168.626, -79.0924, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-46.8117, 157.093, -82.1565, 0.66", "-49.0815, 156.873, -90.5221, 0.66", "-49.4208, 156.947, -91.6118, 0.29", "-49.6275, 157.062, -92.1928, 0.22", "-49.9863, 157.329, -93.0917, 0.22", "-50.3147, 157.609, -93.8523, 1.03", "-50.6153, 157.871, -94.4751, 1.47", "-51.4601, 158.948, -95.1403, 0.88", "-52.2691, 159.906, -95.7859, 0.22", "-52.5224, 160.135, -95.9997, 0.29", "-52.6014, 160.181, -96.0598, 0.29", "-53.223, 160.421, -96.501, 0.15", "-53.9551, 160.594, -97.0213, 0.96", "-54.6542, 160.692, -97.4837, 1.4", "-56.0289, 160.841, -98.5753, 0.22", "-56.9601, 160.981, -99.461, 0.22", "-57.6865, 161.134, -100.398, 0.74", "-58.6257, 161.395, -101.838, 0.22", "-58.9423, 161.5, -102.391, 0.96", "-59.9887, 161.929, -104.501, 1.33", "-60.4288, 162.167, -105.457, 1.84", "-61.9344, 163.104, -109.032, 0.88", "-62.154, 163.238, -109.552, 1.03", "-62.1896, 163.259, -109.629, 1.03", "-63.4439, 163.918, -112.149, 0.22", "-64.1922, 164.263, -113.418, 1.33", "-66.1353, 165.025, -116.221, 0.22", "-67.0047, 165.322, -117.234, 1.33", "-68.0033, 165.593, -118.26, 0.22", "-68.0522, 165.603, -118.302, 0.22", "-69.0957, 165.663, -118.968, 0.22", "-70.1086, 165.592, -119.457, 1.4", "-70.7464, 165.5, -119.614, 1.84", "-71.6078, 165.29, -119.775, 1.33", "-72.6819, 164.933, -119.972, 0.81", "-73.6347, 164.556, -120.149, 0.22", "-74.5172, 164.087, -120.325, 1.4", "-74.9983, 163.791, -120.422, 1.69", "-75.2943, 163.599, -120.476, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-46.8117, 157.093, -82.1565, 0.29", "-47.9858, 159.476, -85.936, 0.29", "-48.325, 160.184, -86.939, 0.22", "-48.4875, 160.578, -87.4381, 0.96", "-48.5948, 160.86, -87.7741, 1.18", "-49.0019, 162.042, -89.0557, 0.22", "-49.1319, 162.445, -89.4666, 0.52", "-49.2054, 162.701, -89.6227, 0.52", "-49.736, 164.465, -90.5871, 0.22", "-49.7574, 164.53, -90.6174, 0.22", "-50.047, 165.366, -90.9296, 0.22", "-50.0721, 165.434, -90.946, 0.22", "-50.7566, 167.022, -91.2055, 0.22", "-50.7891, 167.089, -91.2109, 0.22", "-51.4841, 168.473, -91.3136, 0.22", "-51.515, 168.54, -91.3216, 0.22", "-51.8227, 169.261, -91.4334, 0.44", "-52.4392, 170.88, -91.7134, 0.15", "-53.1487, 173.128, -92.2052, 0.15", "-53.7032, 175.147, -92.697, 0.15", "-54.0488, 176.668, -93.1059, 0.15", "-54.2478, 177.722, -93.4302, 0.88", "-54.353, 178.467, -93.6858, 1.25", "-54.4997, 180.427, -94.4288, 0.22", "-54.5098, 180.931, -94.6307, 0.59", "-54.5098, 181.475, -94.8323, 0.59", "-54.5164, 183.272, -95.4653, 0.22", "-54.52, 183.94, -95.6877, 0.22", "-54.5257, 184.24, -95.784, 0.66", "-54.5419, 184.846, -95.9515, 0.74", "-54.5768, 186.649, -96.2864, 0.15", "-54.6017, 187.724, -96.3776, 0.15", "-54.603, 187.788, -96.3768, 0.15", "-54.6188, 188.611, -96.3412, 0.52", "-54.6308, 189.309, -96.2635, 0.52", "-54.6888, 191.339, -95.8957, 0.22", "-54.7603, 192.543, -95.5758, 1.03", "-54.8285, 193.202, -95.3715, 1.03", "-54.8438, 193.282, -95.3451, 1.03", "-55.2031, 194.433, -94.9379, 0.15", "-55.4356, 194.908, -94.7861, 0.52", "-55.7181, 195.301, -94.6968, 0.52", "-56.3051, 195.996, -94.5318, 0.22", "-57.0851, 196.824, -94.3492, 0.22", "-57.4821, 197.216, -94.2813, 0.22", "-57.9779, 197.645, -94.2527, 0.59", "-58.5624, 198.154, -94.22, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "8.36397, -70.4307, -4.84875, 0.37", "7.35749, -72.3021, -4.54745, 0.37", "6.9162, -73.0794, -4.3038, 0.74", "5.85908, -74.8954, -3.55451, 0.22", "5.32068, -75.7993, -3.1389, 0.81", "5.00221, -76.3239, -2.86753, 0.81", "3.83296, -78.2172, -1.79457, 1.47", "2.98428, -79.5278, -0.864127, 2.06", "2.03328, -81.0481, 0.398835, 0.22", "1.72876, -81.5641, 0.858143, 0.52", "1.1734, -82.5044, 1.72395, 0.22", "0.661664, -83.3748, 2.52455, 1.77", "0.0453469, -84.4345, 3.46772, 2.43", "-1.66131, -87.3634, 5.98469, 0.22", "-1.86827, -87.7231, 6.29533, 0.59", "-2.17531, -88.2673, 6.75243, 0.22", "-2.35164, -88.583, 7.00086, 0.44", "-2.93404, -89.6188, 7.76686, 0.15", "-3.42979, -90.4298, 8.29215, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "8.36397, -70.4307, -4.84875, 0.29", "7.24976, -71.8881, -5.57704, 0.29", "6.71078, -72.6233, -5.94067, 0.29", "6.16895, -73.3744, -6.30662, 0.29", "5.50371, -74.288, -6.6658, 0.29", "4.87127, -75.1416, -6.95185, 0.29", "4.38808, -75.7953, -7.15365, 1.77", "3.82004, -76.5343, -7.3015, 2.21", "3.62519, -76.7967, -7.34604, 2.36", "2.73769, -78.0768, -7.5231, 0.74", "2.25712, -78.7263, -7.6046, 0.29", "1.72706, -79.3953, -7.7076, 0.29", "0.988476, -80.2798, -7.86634, 1.92", "0.533756, -80.801, -7.9794, 2.28", "0.192661, -81.1855, -8.09811, 2.28", "-0.798236, -82.315, -8.56241, 0.29", "-1.59337, -83.2502, -8.96984, 0.22", "-1.85959, -83.5734, -9.12054, 0.96", "-2.02127, -83.7986, -9.2707, 1.18", "-2.50318, -84.5734, -9.89203, 0.22", "-2.61295, -84.8001, -10.1681, 0.22", "-2.70585, -85.0436, -10.5426, 0.22", "-2.84436, -85.3688, -11.1178, 0.66", "-3.36621, -86.3802, -13.2104, 1.62", "-3.44246, -86.4864, -13.4854, 2.14", "-4.36474, -87.3448, -16.2733, 0.37", "-4.69544, -87.5563, -17.1185, 0.37", "-5.00622, -87.6796, -17.8249, 1.47", "-5.46767, -87.7633, -18.7922, 1.47", "-6.41953, -87.7983, -20.5299, 0.22", "-6.90195, -87.7701, -21.3428, 1.25", "-7.13518, -87.7368, -21.6851, 1.84", "-7.8983, -87.613, -22.8402, 1.84", "-9.56827, -87.4049, -25.4647, 0.22", "-9.86272, -87.3797, -25.9153, 0.88", "-10.2864, -87.3698, -26.602, 0.88", "-10.6733, -87.4007, -27.27, 0.22", "-11.3072, -87.5189, -28.3527, 0.22", "-11.747, -87.6576, -29.1092, 1.03", "-11.8891, -87.7196, -29.3669, 1.03", "-12.5774, -88.1175, -31.0417, 0.22", "-12.7648, -88.2638, -31.5927, 0.22", "-13.1064, -88.5932, -32.7459, 1.25", "-13.4446, -88.9337, -33.8675, 1.18", "-13.4631, -88.9562, -33.9337, 1.18", "-13.9673, -89.7684, -36.0483, 0.22", "-14.0713, -90.0149, -36.5973, 1.18", "-14.1261, -90.2252, -37.0225, 1.18", "-14.1304, -91.0273, -38.4254, 0.22", "-14.1112, -91.2235, -38.755, 0.22", "-14.0474, -91.6611, -39.5466, 0.66", "-14.0166, -91.8759, -39.9176, 0.81", "-13.9866, -92.0584, -40.2415, 0.81", "-13.7957, -92.902, -41.8873, 0.52", "-13.555, -93.8239, -43.6461, 0.22", "-13.3766, -94.6031, -45.1127, 0.22", "-13.2817, -95.0857, -46.0087, 2.21", "-13.2203, -95.5617, -46.8649, 2.28", "-13.1194, -97.5514, -50.2504, 0.22", "-13.1452, -98.0062, -50.9551, 0.22", "-13.2455, -98.8776, -52.1805, 0.22", "-13.2541, -98.9146, -52.2297, 0.22", "-13.5054, -99.4949, -52.9953, 0.37", "-13.8079, -99.893, -53.4582, 0.88", "-14.5738, -100.569, -54.0972, 1.69", "-15.0364, -100.934, -54.4663, 2.21", "-15.7722, -101.503, -55.0208, 2.21", "-16.3918, -102.012, -55.518, 1.11", "-16.9038, -102.496, -55.9789, 0.37", "-16.9372, -102.536, -56.0125, 0.37", "-17.5053, -103.411, -56.6187, 0.37", "-17.7267, -103.808, -56.8393, 0.74", "-17.7918, -103.938, -56.8949, 0.74", "-18.0787, -104.526, -57.1155, 0.66", "-18.4914, -105.33, -57.3924, 0.66", "-18.8246, -105.933, -57.6042, 0.52", "-19.5401, -107.124, -58.0178, 0.22", "-20.0601, -107.985, -58.3234, 1.47", "-20.4007, -108.609, -58.5793, 1.92", "-20.6759, -109.138, -58.8238, 2.14", "-21.064, -109.967, -59.2567, 0.74", "-21.3011, -110.577, -59.6037, 0.29", "-21.5167, -111.266, -60.0489, 0.29", "-21.9055, -112.665, -60.9983, 0.29", "-22.0308, -113.207, -61.3496, 1.33", "-22.1788, -113.896, -61.7812, 1.33", "-22.2386, -114.165, -61.9343, 1.33", "-22.5027, -115.246, -62.5702, 0.29", "-22.6739, -115.798, -62.8958, 0.29", "-23.0799, -116.866, -63.5231, 0.29", "-23.1021, -116.924, -63.5594, 0.29", "-23.3886, -117.667, -64.0212, 0.29", "-23.7961, -118.658, -64.658, 1.18", "-23.9116, -118.932, -64.8388, 1.33", "-24.3602, -120.031, -65.577, 0.22", "-24.3831, -120.089, -65.6153, 0.22", "-24.5846, -120.704, -65.9814, 0.88", "-24.6817, -121.087, -66.1751, 0.88", "-24.904, -122.349, -66.6557, 0.22", "-25.0068, -123.065, -66.907, 1.33", "-25.0582, -123.418, -67.0176, 1.77", "-25.2066, -124.317, -67.2982, 0.88", "-25.3549, -125.105, -67.5429, 0.22", "-25.5554, -125.949, -67.7908, 0.59", "-25.9508, -127.258, -68.1456, 0.22", "-26.2739, -128.202, -68.3915, 0.22", "-26.5236, -128.856, -68.5523, 1.18", "-26.7015, -129.262, -68.6477, 1.18", "-27.1929, -130.249, -68.8831, 0.15", "-27.5036, -130.826, -69.031, 0.15", "-27.928, -131.624, -69.2312, 0.88", "-28.0968, -131.946, -69.3197, 1.11", "-28.5155, -132.771, -69.6814, 0.37", "-28.8862, -133.543, -70.1304, 0.22", "-29.1114, -134.097, -70.5165, 1.18", "-29.2634, -134.505, -70.8368, 1.18", "-29.2833, -134.557, -70.8835, 1.18", "-29.9143, -136.252, -72.4727, 0.22", "-29.9447, -136.333, -72.552, 0.37", "-30.1768, -136.943, -73.1877, 0.15", "-30.2844, -137.214, -73.464, 0.59", "-30.7443, -138.293, -74.4946, 0.22", "-30.9741, -138.825, -74.9407, 1.03", "-31.0645, -139.031, -75.0842, 1.03", "-31.6412, -140.47, -75.9649, 0.22", "-31.7697, -140.805, -76.1462, 0.52", "-32.1129, -141.762, -76.5637, 0.22", "-32.3045, -142.33, -76.7535, 1.03", "-32.4316, -142.698, -76.8539, 1.03", "-32.9408, -144.096, -77.2011, 0.15", "-33.1416, -144.599, -77.3059, 0.44", "-33.5095, -145.524, -77.5151, 0.15", "-33.6865, -145.981, -77.6253, 0.88", "-33.8912, -146.589, -77.8139, 0.88", "-34.2166, -147.789, -78.249, 0.22", "-34.4217, -148.838, -78.8592, 0.22", "-34.4695, -149.102, -79.0671, 0.66", "-34.5148, -149.342, -79.2637, 0.66", "-34.8427, -150.75, -80.5014, 0.37", "-34.9749, -151.272, -80.9781, 1.25", "-35.5811, -153.77, -83.2309, 0.44", "-36.2726, -156.655, -85.7899, 0.15", "-36.5289, -157.685, -86.6607, 0.96", "-36.8426, -158.951, -87.6559, 0.29", "-36.9348, -159.34, -87.9254, 0.52", "-37.2657, -161.131, -89.0499, 0.22", "-37.2892, -161.473, -89.2221, 0.66", "-37.2555, -162.084, -89.5646, 0.66", "-37.1882, -163.418, -90.4246, 0.15", "-37.177, -164.233, -91.0123, 0.15", "-37.1901, -165.257, -91.8169, 1.03", "-37.2045, -165.547, -92.0741, 1.03", "-37.3526, -167.703, -94.1331, 0.22", "-37.471, -168.876, -95.3738, 0.22", "-37.6512, -169.888, -96.5836, 1.11" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-75.2943, 163.599, -120.476, 0.22", "-76.5953, 162.883, -121.044, 0.22", "-77.2957, 162.515, -121.347, 0.22", "-78.6317, 161.81, -121.894, 0.59", "-80.1881, 160.993, -122.49, 0.15", "-80.613, 160.768, -122.648, 0.81", "-81.3641, 160.37, -122.926, 1.11", "-82.5572, 159.762, -123.345, 0.22", "-83.2854, 159.376, -123.606, 1.03", "-83.7732, 159.097, -123.78, 1.33", "-83.8778, 159.047, -123.801, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-75.2943, 163.599, -120.476, 0.22", "-76.5767, 164.086, -120.068, 0.22", "-77.7876, 164.536, -119.509, 0.22", "-78.5084, 164.8, -119.156, 1.25", "-78.5654, 164.825, -119.123, 1.25", "-80.1561, 165.591, -118.087, 0.15", "-80.8326, 165.96, -117.633, 0.15", "-82.2089, 166.851, -116.512, 0.96", "-82.6089, 167.145, -116.179, 1.18", "-83.6207, 167.927, -115.317, 0.15", "-83.667, 167.963, -115.277, 0.15", "-84.3716, 168.566, -114.628, 0.15", "-85.6461, 169.708, -113.457, 0.15", "-86.234, 170.268, -113.018, 0.66", "-86.4786, 170.479, -112.849, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-37.6512, -169.888, -96.5836, 0.22", "-39.4153, -170.043, -98.3421, 0.22", "-40.2467, -170.119, -99.0866, 0.22", "-40.6195, -170.166, -99.4879, 1.03", "-40.794, -170.192, -99.6764, 1.33", "-42.4566, -170.451, -101.481, 0.22", "-43.6729, -170.612, -102.82, 0.22", "-44.0609, -170.65, -103.246, 0.88", "-45.7022, -170.804, -105.177, 0.22", "-46.6772, -170.898, -106.274, 0.22", "-46.7169, -170.905, -106.314, 0.22", "-47.991, -171.185, -107.444, 0.22", "-48.0658, -171.206, -107.509, 0.22", "-49.228, -171.622, -108.387, 0.22", "-50.4681, -172.223, -109.212, 0.22", "-51.8013, -173.13, -110.16, 0.22", "-51.8458, -173.167, -110.192, 0.22", "-52.3395, -173.693, -110.541, 0.74", "-52.5995, -174.042, -110.752, 0.74", "-53.364, -175.622, -111.664, 0.22", "-53.7243, -176.673, -112.307, 0.22", "-53.8477, -177.06, -112.545, 0.29", "-53.9062, -177.243, -112.644, 0.37", "-54.2912, -178.48, -113.3, 0.15", "-54.9594, -180.638, -114.381, 0.15", "-54.9779, -180.696, -114.408, 0.15", "-55.5945, -182.439, -115.199, 0.15", "-57.0431, -186.062, -116.78, 0.15", "-57.5774, -187.291, -117.319, 0.44", "-58.0315, -188.274, -117.736, 0.15", "-59.2179, -190.717, -118.731, 0.15", "-59.9273, -192.162, -119.327, 0.37", "-60.6407, -193.561, -119.928, 0.15", "-61.5025, -194.97, -120.534, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-37.6512, -169.888, -96.5836, 0.22", "-37.5832, -171.771, -97.0518, 0.22", "-37.4621, -173.773, -97.5761, 0.22", "-37.3248, -176.042, -98.1699, 0.22", "-37.289, -176.633, -98.3248, 1.33", "-37.2333, -177.553, -98.5656, 1.33", "-37.155, -178.848, -98.9045, 0.22", "-37.1328, -179.162, -98.9913, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-83.8778, 159.047, -123.801, 0.22", "-85.2106, 158.279, -124.429, 0.22", "-85.7428, 157.972, -124.679, 0.59", "-86.5973, 157.48, -125.082, 0.22", "-87.0909, 157.196, -125.314, 0.66", "-87.1532, 157.16, -125.344, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-83.8778, 159.047, -123.801, 0.15", "-83.1851, 157.703, -124.14, 0.15", "-82.7047, 156.772, -124.375, 0.29", "-82.506, 156.386, -124.473, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-37.1328, -179.162, -98.9913, 0.29", "-35.9907, -179.783, -100.205, 0.29", "-35.183, -180.223, -101.064, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-37.1328, -179.162, -98.9913, 0.22", "-38.2542, -180.94, -99.4841, 0.22", "-38.8383, -181.914, -99.7631, 0.44", "-39.5177, -183.35, -100.227, 0.15", "-40.2888, -185.092, -100.805, 0.15", "-40.5006, -185.593, -100.971, 0.81", "-40.6372, -185.929, -101.08, 0.81", "-41.9353, -189.329, -102.191, 0.15", "-43.3944, -193.818, -103.672, 0.15", "-43.3944, -193.818, -103.672, 0.37", "-43.6307, -194.84, -104.042, 0.15", "-43.7306, -195.34, -104.221, 0.81", "-43.8253, -195.909, -104.424, 0.81", "-43.9709, -197.536, -104.996, 0.15", "-44.0069, -198.112, -105.182, 0.44", "-44.0263, -198.39, -105.296, 0.44", "-44.087, -199.264, -105.697, 0.15", "-44.1186, -199.621, -105.849, 0.66", "-44.13, -199.73, -105.892, 0.66", "-44.1897, -200.269, -106.096, 0.66", "-44.5493, -203.596, -107.371, 0.15", "-44.6258, -204.312, -107.647, 0.44", "-45.0829, -208.757, -109.373, 0.15", "-45.5099, -212.929, -110.979, 0.15", "-45.5238, -213.064, -111.03, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_23", "dend_14", "dend_11", "dend_0", "axon_0", "dend_38", "dend_33", "dend_29", "dend_24", "dend_20", "dend_15", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_39", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_10", "dend_3", "dend_47", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_18", "dend_17", "dend_5", "dend_4", "dend_46", "dend_41", "dend_7", "dend_6", "dend_45", "dend_42", "dend_9", "dend_8", "dend_44", "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_SBC_e8567af242_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_38
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, axon_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.4999992178869266)
    connect dend_23(0), soma_0(0.4999992178869266)
    connect dend_14(0), soma_0(0.4999992178869266)
    connect dend_11(0), soma_0(0.4999992178869266)
    connect dend_0(0), soma_0(0.4999992178869266)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.327285, 12.2563, -2.37682, 3.20394 ) }
    soma_0 { pt3dadd( -0.32997, 10.9888, -2.12879, 5.58325 ) }
    soma_0 { pt3dadd( -0.332655, 9.7213, -1.88076, 6.08709 ) }
    soma_0 { pt3dadd( -0.335339, 8.45379, -1.63272, 7.22603 ) }
    soma_0 { pt3dadd( -0.338024, 7.18628, -1.38469, 8.89261 ) }
    soma_0 { pt3dadd( -0.340709, 5.91877, -1.13666, 10.2823 ) }
    soma_0 { pt3dadd( -0.343394, 4.65126, -0.888622, 11.3086 ) }
    soma_0 { pt3dadd( -0.346078, 3.38375, -0.640589, 12.3784 ) }
    soma_0 { pt3dadd( -0.348763, 2.11624, -0.392555, 13.7451 ) }
    soma_0 { pt3dadd( -0.351448, 0.84873, -0.144521, 14.7054 ) }
    soma_0 { pt3dadd( -0.354133, -0.41878, 0.103512, 15.1673 ) }
    soma_0 { pt3dadd( -0.356817, -1.68629, 0.351546, 15.492 ) }
    soma_0 { pt3dadd( -0.359502, -2.9538, 0.599579, 15.6089 ) }
    soma_0 { pt3dadd( -0.362187, -4.22131, 0.847613, 15.0499 ) }
    soma_0 { pt3dadd( -0.364872, -5.48882, 1.09565, 14.3371 ) }
    soma_0 { pt3dadd( -0.367556, -6.75633, 1.34368, 13.225 ) }
    soma_0 { pt3dadd( -0.370241, -8.02384, 1.59171, 11.7728 ) }
    soma_0 { pt3dadd( -0.372926, -9.29135, 1.83975, 10.2754 ) }
    soma_0 { pt3dadd( -0.375611, -10.5589, 2.08778, 7.58879 ) }
    soma_0 { pt3dadd( -0.378295, -11.8264, 2.33581, 5.07363 ) }
    soma_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 2.91986 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.63702, -12.1088, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.63702, -12.1088, 3.2994, 4.13 ) }
    dend_32 { pt3dadd( -1.52963, -13.0608, 3.61506, 4.13 ) }
    dend_32 { pt3dadd( -1.3725, -14.4538, 4.07692, 3.76 ) }
    dend_32 { pt3dadd( -1.124, -16.6568, 4.80733, 3.68 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.0870214, -5.00883, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 5.14329E-5, -5.02554, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 0.270451, -5.08153, -15.4506, 1.69 ) }
    dend_23 { pt3dadd( 1.36113, -5.31887, -15.4438, 1.69 ) }
    dend_23 { pt3dadd( 2.94896, -5.72563, -15.382, 1.69 ) }
    dend_23 { pt3dadd( 3.05927, -5.75887, -15.3915, 1.69 ) }
    dend_23 { pt3dadd( 4.7951, -6.44879, -15.7768, 1.69 ) }
    dend_23 { pt3dadd( 4.87663, -6.49365, -15.8142, 1.69 ) }
    dend_23 { pt3dadd( 5.91021, -7.49427, -17.0967, 1.84 ) }
    dend_23 { pt3dadd( 5.79317, -8.32164, -18.9143, 1.84 ) }
    dend_23 { pt3dadd( 4.88519, -9.10819, -21.6513, 1.99 ) }
    dend_23 { pt3dadd( 3.99163, -9.74782, -24.028, 1.99 ) }
    dend_23 { pt3dadd( 2.93318, -10.3601, -26.498, 1.99 ) }
    dend_23 { pt3dadd( 1.29037, -11.1446, -29.9506, 2.14 ) }
    dend_23 { pt3dadd( -0.561233, -11.824, -33.3772, 2.43 ) }
    dend_23 { pt3dadd( -3.63865, -12.6278, -38.4534, 2.87 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 42/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.632978, 11.1212, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 0.632978, 11.1212, -5.6406, 2.58 ) }
    dend_14 { pt3dadd( 1.2684, 11.6597, -5.89371, 2.28 ) }
    dend_14 { pt3dadd( 1.92091, 12.2497, -6.1279, 2.21 ) }
    dend_14 { pt3dadd( 3.17648, 13.5453, -6.54348, 0.81 ) }
    dend_14 { pt3dadd( 4.61007, 15.2975, -6.98958, 0.81 ) }
    dend_14 { pt3dadd( 5.32718, 16.263, -7.20237, 1.25 ) }
    dend_14 { pt3dadd( 6.16521, 17.6033, -7.40141, 1.99 ) }
    dend_14 { pt3dadd( 6.20193, 17.6829, -7.40688, 1.99 ) }
    dend_14 { pt3dadd( 6.54079, 19.0021, -7.38823, 2.14 ) }
    dend_14 { pt3dadd( 6.64829, 20.3483, -7.2832, 2.14 ) }
    dend_14 { pt3dadd( 6.64473, 20.4365, -7.27637, 2.14 ) }
    dend_14 { pt3dadd( 6.50526, 22.0271, -7.19604, 1.84 ) }
    dend_14 { pt3dadd( 6.31047, 23.5451, -7.22287, 1.4 ) }
    dend_14 { pt3dadd( 5.95428, 25.595, -7.37313, 0.81 ) }
    dend_14 { pt3dadd( 5.63593, 26.9739, -7.59225, 0.81 ) }
    dend_14 { pt3dadd( 5.15177, 28.7193, -7.99694, 1.11 ) }
    dend_14 { pt3dadd( 5.12911, 28.7899, -8.02004, 1.11 ) }
    dend_14 { pt3dadd( 4.64289, 30.0984, -8.59721, 1.69 ) }
    dend_14 { pt3dadd( 4.07295, 31.5183, -9.36364, 1.77 ) }
    dend_14 { pt3dadd( 3.61737, 32.7289, -10.1221, 1.18 ) }
    dend_14 { pt3dadd( 3.60155, 32.7918, -10.1634, 1.18 ) }
    dend_14 { pt3dadd( 3.53157, 33.8768, -10.8244, 0.88 ) }
    dend_14 { pt3dadd( 3.64253, 34.7321, -11.2658, 0.74 ) }
    dend_14 { pt3dadd( 3.69807, 34.879, -11.3232, 0.74 ) }
    dend_14 { pt3dadd( 4.27357, 35.8994, -11.6014, 0.74 ) }
    dend_14 { pt3dadd( 5.11849, 37.1905, -11.8322, 0.88 ) }
    dend_14 { pt3dadd( 5.76906, 38.1299, -11.9535, 1.69 ) }
    dend_14 { pt3dadd( 6.22648, 38.7767, -12.0, 1.92 ) }
    dend_14 { pt3dadd( 6.6053, 39.3465, -12.0336, 2.21 ) }
    dend_14 { pt3dadd( 6.9975, 39.9989, -12.0628, 1.84 ) }
    dend_14 { pt3dadd( 7.45958, 40.9328, -12.0868, 1.25 ) }
    dend_14 { pt3dadd( 7.87895, 42.0721, -12.1478, 0.81 ) }
    dend_14 { pt3dadd( 8.14848, 43.0976, -12.2689, 0.81 ) }
    dend_14 { pt3dadd( 8.27544, 44.1095, -12.4899, 1.11 ) }
    dend_14 { pt3dadd( 8.26958, 44.1893, -12.5261, 1.11 ) }
    dend_14 { pt3dadd( 8.11092, 44.852, -13.0075, 1.11 ) }
    dend_14 { pt3dadd( 7.69037, 45.9688, -14.0292, 0.59 ) }
    dend_14 { pt3dadd( 7.47636, 46.4209, -14.5099, 0.59 ) }
    dend_14 { pt3dadd( 7.00003, 47.3008, -15.6228, 0.52 ) }
    dend_14 { pt3dadd( 6.07032, 48.8928, -17.8142, 1.99 ) }
    dend_14 { pt3dadd( 5.6189, 49.6361, -18.8917, 3.02 ) }
    dend_14 { pt3dadd( 5.40357, 49.9678, -19.4176, 3.02 ) }
    dend_14 { pt3dadd( 5.3665, 50.0199, -19.5056, 3.02 ) }
    dend_14 { pt3dadd( 4.71734, 50.9258, -21.1256, 2.73 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 87/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.77298, 8.24117, 1.3594, 1.47 ) }
    dend_11 { pt3dadd( 3.20648, 8.59775, 1.39055, 1.47 ) }
    dend_11 { pt3dadd( 4.08996, 9.27362, 1.55444, 1.25 ) }
    dend_11 { pt3dadd( 4.37696, 9.48607, 1.61858, 1.62 ) }
    dend_11 { pt3dadd( 4.91571, 9.84237, 1.74147, 1.92 ) }
    dend_11 { pt3dadd( 5.53615, 10.2267, 1.8839, 1.69 ) }
    dend_11 { pt3dadd( 6.46758, 10.6918, 2.15187, 0.88 ) }
    dend_11 { pt3dadd( 7.41726, 11.0008, 2.74139, 0.88 ) }
    dend_11 { pt3dadd( 7.45695, 11.0116, 2.78925, 0.88 ) }
    dend_11 { pt3dadd( 7.85883, 11.1192, 3.50896, 0.81 ) }
    dend_11 { pt3dadd( 7.87645, 11.1259, 3.56044, 0.81 ) }
    dend_11 { pt3dadd( 8.18336, 11.4171, 5.20882, 1.03 ) }
    dend_11 { pt3dadd( 8.36545, 12.1142, 8.06142, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_11 { pt3dadd( 8.3294, 12.6359, 9.66647, 1.11 ) }
    dend_11 { pt3dadd( 8.32373, 12.6621, 9.72361, 1.11 ) }
    dend_11 { pt3dadd( 8.10933, 13.3426, 10.8646, 1.33 ) }
    dend_11 { pt3dadd( 7.85902, 14.0796, 11.7296, 1.99 ) }
    dend_11 { pt3dadd( 7.67871, 14.5994, 12.1063, 2.73 ) }
    dend_11 { pt3dadd( 7.57096, 15.0684, 12.3354, 2.65 ) }
    dend_11 { pt3dadd( 7.49069, 16.0352, 12.7662, 2.36 ) }
    dend_11 { pt3dadd( 7.49377, 16.085, 12.7871, 2.36 ) }
    dend_11 { pt3dadd( 7.77896, 17.3916, 13.2839, 0.81 ) }
    dend_11 { pt3dadd( 8.06948, 18.2082, 13.5934, 0.59 ) }
    dend_11 { pt3dadd( 8.75802, 19.7132, 14.1316, 0.44 ) }
    dend_11 { pt3dadd( 9.33349, 20.7167, 14.4327, 0.44 ) }
    dend_11 { pt3dadd( 9.91511, 21.5554, 14.5931, 1.18 ) }
    dend_11 { pt3dadd( 10.3924, 22.1553, 14.6647, 1.99 ) }
    dend_11 { pt3dadd( 10.8892, 22.7119, 14.7633, 2.65 ) }
    dend_11 { pt3dadd( 11.1665, 23.0205, 14.8338, 2.65 ) }
    dend_11 { pt3dadd( 11.9401, 23.9271, 15.1271, 1.77 ) }
    dend_11 { pt3dadd( 12.6844, 24.8289, 15.5957, 0.44 ) }
    dend_11 { pt3dadd( 13.4146, 25.7644, 16.1999, 0.44 ) }
    dend_11 { pt3dadd( 14.708, 27.5316, 17.5782, 1.25 ) }
    dend_11 { pt3dadd( 15.0787, 28.0904, 18.055, 2.43 ) }
    dend_11 { pt3dadd( 15.679, 29.0956, 18.9393, 2.43 ) }
    dend_11 { pt3dadd( 16.14, 29.9651, 19.7432, 2.21 ) }
    dend_11 { pt3dadd( 16.4741, 30.6795, 20.3859, 1.25 ) }
    dend_11 { pt3dadd( 16.8578, 31.6095, 21.0829, 0.52 ) }
    dend_11 { pt3dadd( 17.1303, 32.2907, 21.4378, 0.52 ) }
    dend_11 { pt3dadd( 17.4627, 33.1175, 21.7746, 0.52 ) }
    dend_11 { pt3dadd( 17.4858, 33.1745, 21.7886, 0.52 ) }
    dend_11 { pt3dadd( 17.8243, 33.9498, 21.9317, 0.88 ) }
    dend_11 { pt3dadd( 18.179, 34.7, 22.0449, 1.25 ) }
    dend_11 { pt3dadd( 18.5026, 35.3583, 22.0901, 1.69 ) }
    dend_11 { pt3dadd( 18.7446, 35.82, 22.131, 1.69 ) }
    dend_11 { pt3dadd( 18.7893, 35.9042, 22.1406, 1.69 ) }
    dend_11 { pt3dadd( 19.2269, 36.703, 22.2509, 1.69 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.16702, 11.2212, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.16702, 11.2212, -3.0206, 1.62 ) }
    dend_0 { pt3dadd( -3.4772, 11.7945, -2.5902, 1.4 ) }
    dend_0 { pt3dadd( -4.03786, 12.8348, -1.72911, 1.4 ) }
    dend_0 { pt3dadd( -4.42262, 13.5415, -1.16362, 1.4 ) }
    dend_0 { pt3dadd( -4.76319, 14.1776, -0.669288, 1.69 ) }
    dend_0 { pt3dadd( -5.24727, 15.0768, 0.0147606, 1.99 ) }
    dend_0 { pt3dadd( -5.77005, 16.0433, 0.723181, 2.36 ) }
    dend_0 { pt3dadd( -6.27981, 16.9826, 1.37779, 3.09 ) }
    dend_0 { pt3dadd( -6.7911, 17.8692, 1.93125, 3.32 ) }
    dend_0 { pt3dadd( -7.26814, 18.6504, 2.33488, 3.09 ) }
    dend_0 { pt3dadd( -7.70072, 19.2998, 2.57117, 2.43 ) }
    dend_0 { pt3dadd( -8.25017, 20.0596, 2.65929, 1.4 ) }
    dend_0 { pt3dadd( -8.59448, 20.5056, 2.64375, 1.33 ) }
    dend_0 { pt3dadd( -9.14517, 21.1688, 2.51217, 1.18 ) }
    dend_0 { pt3dadd( -9.67705, 21.7503, 2.30576, 1.4 ) }
    dend_0 { pt3dadd( -10.3997, 22.4571, 1.88524, 1.69 ) }
    dend_0 { pt3dadd( -11.2394, 23.2181, 1.23539, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.38098, -13.0939, 2.58385, 1.02022 ) }
    axon_0 { pt3dadd( -0.412752, -28.0939, 2.58385, 1.02022 ) }
    axon_0 { pt3dadd( -0.444525, -43.0938, 2.58385, 1.02022 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 55/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.124, -16.6568, 4.80733, 1.99 ) }
    dend_38 { pt3dadd( -0.112696, -18.4665, 4.49977, 1.99 ) }
    dend_38 { pt3dadd( 0.962741, -20.2221, 4.26675, 1.62 ) }
    dend_38 { pt3dadd( 1.02016, -20.3121, 4.2566, 1.62 ) }
    dend_38 { pt3dadd( 2.35062, -22.3526, 4.11909, 1.18 ) }
    dend_38 { pt3dadd( 3.10253, -23.5192, 4.06625, 1.18 ) }
    dend_38 { pt3dadd( 4.07543, -25.0657, 4.01297, 1.18 ) }
    dend_38 { pt3dadd( 5.46376, -27.3059, 3.99617, 1.18 ) }
    dend_38 { pt3dadd( 6.6277, -29.2584, 4.02257, 1.47 ) }
    dend_38 { pt3dadd( 7.83491, -31.4372, 4.08881, 2.21 ) }
    dend_38 { pt3dadd( 8.86446, -33.3672, 4.19203, 2.73 ) }
    dend_38 { pt3dadd( 9.84413, -35.3094, 4.31325, 2.8 ) }
    dend_38 { pt3dadd( 10.6972, -37.1118, 4.43557, 2.95 ) }
    dend_38 { pt3dadd( 11.5163, -39.0313, 4.56104, 2.95 ) }
    dend_38 { pt3dadd( 11.8917, -40.0139, 4.62675, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.124, -16.6568, 4.80733, 1.18 ) }
    dend_33 { pt3dadd( -2.16062, -17.6004, 6.83567, 1.18 ) }
    dend_33 { pt3dadd( -2.9144, -18.2865, 8.31057, 1.18 ) }
    dend_33 { pt3dadd( -3.37988, -18.7102, 9.22139, 1.69 ) }
    dend_33 { pt3dadd( -3.76118, -19.0573, 9.96746, 2.36 ) }
    dend_33 { pt3dadd( -3.99062, -19.2661, 10.4164, 2.73 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.63865, -12.6278, -38.4534, 0.66 ) }
    dend_29 { pt3dadd( -2.19848, -14.386, -39.7783, 0.66 ) }
    dend_29 { pt3dadd( -1.3373, -15.3562, -40.4686, 0.74 ) }
    dend_29 { pt3dadd( -0.714716, -15.9984, -40.9883, 0.74 ) }
    dend_29 { pt3dadd( -0.195375, -16.488, -41.4326, 0.74 ) }
    dend_29 { pt3dadd( -0.153534, -16.5246, -41.4689, 0.74 ) }
    dend_29 { pt3dadd( 0.870125, -17.3507, -42.3684, 0.52 ) }
    dend_29 { pt3dadd( 1.40521, -17.5604, -42.7684, 0.52 ) }
    dend_29 { pt3dadd( 2.11373, -17.529, -43.5076, 0.44 ) }
    dend_29 { pt3dadd( 2.56423, -17.3966, -44.103, 0.44 ) }
    dend_29 { pt3dadd( 2.68537, -17.3645, -44.271, 0.44 ) }
    dend_29 { pt3dadd( 3.11512, -17.3134, -44.814, 0.44 ) }
    dend_29 { pt3dadd( 4.15577, -17.2995, -46.1177, 0.88 ) }
    dend_29 { pt3dadd( 4.19773, -17.3048, -46.169, 0.88 ) }
    dend_29 { pt3dadd( 5.10179, -17.5247, -47.1971, 1.11 ) }
    dend_29 { pt3dadd( 6.31415, -17.9041, -48.53, 1.84 ) }
    dend_29 { pt3dadd( 7.68695, -18.3926, -49.9689, 2.14 ) }
    dend_29 { pt3dadd( 9.83805, -19.2488, -52.1204, 0.29 ) }
    dend_29 { pt3dadd( 10.5846, -19.5657, -52.8086, 0.29 ) }
    dend_29 { pt3dadd( 11.1612, -19.8061, -53.2872, 1.03 ) }
    dend_29 { pt3dadd( 11.2202, -19.8311, -53.3279, 1.03 ) }
    dend_29 { pt3dadd( 11.6811, -20.0551, -53.5789, 1.33 ) }
    dend_29 { pt3dadd( 11.7351, -20.0824, -53.608, 1.33 ) }
    dend_29 { pt3dadd( 12.3044, -20.3281, -53.9602, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 13.2978, -20.6417, -54.6932, 0.37 ) }
    dend_29 { pt3dadd( 13.9753, -20.7911, -55.2751, 0.37 ) }
    dend_29 { pt3dadd( 15.1054, -20.9383, -56.4234, 0.52 ) }
    dend_29 { pt3dadd( 16.5474, -21.041, -58.1056, 0.74 ) }
    dend_29 { pt3dadd( 17.2938, -21.0909, -59.0416, 1.62 ) }
    dend_29 { pt3dadd( 17.7013, -21.1115, -59.5821, 1.92 ) }
    dend_29 { pt3dadd( 18.4366, -21.1281, -60.5818, 2.43 ) }
    dend_29 { pt3dadd( 19.6517, -21.0743, -62.1637, 1.69 ) }
    dend_29 { pt3dadd( 20.76, -20.9246, -63.5783, 0.37 ) }
    dend_29 { pt3dadd( 21.2884, -20.844, -64.2382, 0.37 ) }
    dend_29 { pt3dadd( 21.6525, -20.7946, -64.6855, 0.37 ) }
    dend_29 { pt3dadd( 22.1322, -20.7518, -65.2828, 1.11 ) }
    dend_29 { pt3dadd( 22.6745, -20.7435, -65.8823, 1.33 ) }
    dend_29 { pt3dadd( 24.4893, -20.7412, -67.5362, 0.22 ) }
    dend_29 { pt3dadd( 24.5496, -20.7422, -67.5832, 0.22 ) }
    dend_29 { pt3dadd( 25.1297, -20.7958, -68.0072, 0.22 ) }
    dend_29 { pt3dadd( 25.8656, -21.0004, -68.4905, 0.22 ) }
    dend_29 { pt3dadd( 26.7885, -21.3798, -69.0195, 0.88 ) }
    dend_29 { pt3dadd( 27.7291, -21.8076, -69.5418, 1.55 ) }
    dend_29 { pt3dadd( 28.3394, -22.0267, -70.0282, 1.77 ) }
    dend_29 { pt3dadd( 29.4282, -22.2614, -71.3473, 0.22 ) }
    dend_29 { pt3dadd( 30.0767, -22.3086, -72.4088, 0.22 ) }
    dend_29 { pt3dadd( 30.6178, -22.2982, -73.4279, 1.47 ) }
    dend_29 { pt3dadd( 31.3214, -22.2651, -74.8797, 2.43 ) }
    dend_29 { pt3dadd( 33.417, -22.0705, -79.4121, 1.99 ) }
    dend_29 { pt3dadd( 34.6727, -21.8735, -82.3232, 1.77 ) }
    dend_29 { pt3dadd( 36.1551, -21.5179, -86.019, 0.22 ) }
    dend_29 { pt3dadd( 36.175, -21.5114, -86.072, 0.22 ) }
    dend_29 { pt3dadd( 36.5116, -21.3901, -87.0454, 0.22 ) }
    dend_29 { pt3dadd( 36.795, -21.2882, -87.9075, 1.18 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 30/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.63865, -12.6278, -38.4534, 1.03 ) }
    dend_24 { pt3dadd( -4.90673, -14.6397, -39.1444, 1.03 ) }
    dend_24 { pt3dadd( -5.65524, -16.2686, -39.562, 0.88 ) }
    dend_24 { pt3dadd( -5.6921, -16.3652, -39.5829, 0.88 ) }
    dend_24 { pt3dadd( -6.06411, -17.5987, -39.8038, 0.88 ) }
    dend_24 { pt3dadd( -6.24359, -18.7366, -40.0539, 1.69 ) }
    dend_24 { pt3dadd( -6.32371, -19.7302, -40.2775, 1.84 ) }
    dend_24 { pt3dadd( -6.28931, -20.3253, -40.4189, 1.99 ) }
    dend_24 { pt3dadd( -6.28454, -20.3932, -40.4362, 1.99 ) }
    dend_24 { pt3dadd( -6.26366, -21.2275, -40.6969, 1.69 ) }
    dend_24 { pt3dadd( -6.37343, -23.482, -41.5883, 1.03 ) }
    dend_24 { pt3dadd( -6.68672, -24.8434, -42.4228, 0.88 ) }
    dend_24 { pt3dadd( -7.08299, -25.7754, -43.1592, 0.66 ) }
    dend_24 { pt3dadd( -7.36585, -26.3089, -43.6258, 0.66 ) }
    dend_24 { pt3dadd( -7.88836, -27.0869, -44.3895, 0.52 ) }
    dend_24 { pt3dadd( -8.42614, -27.5888, -45.0278, 0.52 ) }
    dend_24 { pt3dadd( -10.3431, -28.4221, -46.701, 1.77 ) }
    dend_24 { pt3dadd( -10.8357, -28.5422, -47.1485, 1.77 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 4.71734, 50.9258, -21.1256, 0.52 ) }
    dend_20 { pt3dadd( 6.47453, 51.8354, -24.0443, 0.52 ) }
    dend_20 { pt3dadd( 6.76817, 51.9818, -24.5142, 0.52 ) }
    dend_20 { pt3dadd( 7.32366, 52.3112, -25.5104, 0.37 ) }
    dend_20 { pt3dadd( 8.02076, 52.8373, -26.8844, 1.4 ) }
    dend_20 { pt3dadd( 8.17441, 52.9938, -27.2252, 1.55 ) }
    dend_20 { pt3dadd( 9.47262, 54.6376, -30.3531, 0.74 ) }
    dend_20 { pt3dadd( 9.63182, 54.9768, -30.8873, 0.74 ) }
    dend_20 { pt3dadd( 10.0834, 56.3788, -32.9349, 0.29 ) }
    dend_20 { pt3dadd( 10.2209, 57.1, -33.883, 0.29 ) }
    dend_20 { pt3dadd( 10.3196, 58.3033, -35.3211, 1.92 ) }
    dend_20 { pt3dadd( 10.3063, 58.7893, -35.8406, 2.28 ) }
    dend_20 { pt3dadd( 10.1091, 60.617, -37.554, 0.22 ) }
    dend_20 { pt3dadd( 10.1006, 60.7174, -37.6488, 0.22 ) }
    dend_20 { pt3dadd( 10.0903, 61.1552, -38.0476, 0.22 ) }
    dend_20 { pt3dadd( 10.1983, 62.3387, -39.2193, 1.18 ) }
    dend_20 { pt3dadd( 10.2776, 62.804, -39.6954, 1.77 ) }
    dend_20 { pt3dadd( 10.6701, 64.8074, -41.6477, 0.22 ) }
    dend_20 { pt3dadd( 10.9244, 65.955, -42.6794, 1.84 ) }
    dend_20 { pt3dadd( 11.058, 66.5169, -43.1575, 2.21 ) }
    dend_20 { pt3dadd( 11.5744, 68.3913, -44.6174, 0.22 ) }
    dend_20 { pt3dadd( 11.5928, 68.4477, -44.6538, 0.22 ) }
    dend_20 { pt3dadd( 12.0617, 69.6924, -45.3119, 0.22 ) }
    dend_20 { pt3dadd( 12.0913, 69.7622, -45.3357, 0.22 ) }
    dend_20 { pt3dadd( 12.5407, 70.6592, -45.5945, 0.66 ) }
    dend_20 { pt3dadd( 12.9912, 71.4374, -45.9375, 0.88 ) }
    dend_20 { pt3dadd( 13.6218, 72.4584, -46.468, 0.22 ) }
    dend_20 { pt3dadd( 14.2361, 73.3748, -47.054, 1.99 ) }
    dend_20 { pt3dadd( 14.5668, 73.842, -47.4229, 2.5 ) }
    dend_20 { pt3dadd( 15.4527, 75.1507, -48.5997, 0.22 ) }
    dend_20 { pt3dadd( 16.7448, 77.1651, -50.62, 0.59 ) }
    dend_20 { pt3dadd( 16.8892, 77.4288, -50.9077, 0.59 ) }
    dend_20 { pt3dadd( 16.909, 77.4729, -50.9578, 0.59 ) }
    dend_20 { pt3dadd( 17.2805, 78.5749, -52.1286, 0.96 ) }
    dend_20 { pt3dadd( 17.4324, 79.1523, -52.6926, 1.11 ) }
    dend_20 { pt3dadd( 17.5502, 79.7156, -53.1697, 0.96 ) }
    dend_20 { pt3dadd( 17.8113, 80.9843, -54.1059, 0.22 ) }
    dend_20 { pt3dadd( 17.8694, 81.168, -54.318, 0.22 ) }
    dend_20 { pt3dadd( 18.1311, 81.8121, -55.2745, 0.22 ) }
    dend_20 { pt3dadd( 18.3932, 82.3476, -56.2689, 1.11 ) }
    dend_20 { pt3dadd( 18.7302, 83.0079, -57.8234, 1.4 ) }
    dend_20 { pt3dadd( 18.9939, 83.4989, -59.154, 2.06 ) }
    dend_20 { pt3dadd( 20.116, 85.4344, -64.8044, 1.18 ) }
    dend_20 { pt3dadd( 20.5572, 86.1572, -67.0763, 1.18 ) }
    dend_20 { pt3dadd( 21.1449, 87.0583, -70.2273, 1.4 ) }
    dend_20 { pt3dadd( 21.9266, 88.2269, -74.6735, 1.55 ) }
    dend_20 { pt3dadd( 21.9376, 88.2423, -74.7406, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 95/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.71734, 50.9258, -21.1256, 0.52 ) }
    dend_15 { pt3dadd( 4.85728, 52.5407, -20.9463, 0.52 ) }
    dend_15 { pt3dadd( 4.95967, 53.5555, -20.842, 0.52 ) }
    dend_15 { pt3dadd( 5.0776, 54.6432, -20.8232, 1.18 ) }
    dend_15 { pt3dadd( 5.19013, 55.527, -20.8536, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 5.24927, 55.8967, -20.8762, 2.28 ) }
    dend_15 { pt3dadd( 5.35474, 56.3483, -20.9103, 1.84 ) }
    dend_15 { pt3dadd( 5.51958, 56.7901, -20.9576, 1.55 ) }
    dend_15 { pt3dadd( 5.9871, 57.882, -21.1295, 0.88 ) }
    dend_15 { pt3dadd( 6.31461, 58.6411, -21.3216, 0.29 ) }
    dend_15 { pt3dadd( 6.58957, 59.3024, -21.4958, 0.29 ) }
    dend_15 { pt3dadd( 6.93048, 60.2764, -21.781, 0.29 ) }
    dend_15 { pt3dadd( 6.9568, 60.3571, -21.8085, 0.29 ) }
    dend_15 { pt3dadd( 7.15088, 61.0286, -22.0453, 0.29 ) }
    dend_15 { pt3dadd( 7.48773, 62.4952, -22.5442, 1.92 ) }
    dend_15 { pt3dadd( 7.60588, 63.3589, -22.8382, 2.21 ) }
    dend_15 { pt3dadd( 7.66853, 64.6743, -23.3133, 0.29 ) }
    dend_15 { pt3dadd( 7.63993, 65.7827, -23.7214, 0.29 ) }
    dend_15 { pt3dadd( 7.53652, 66.6977, -24.0855, 0.29 ) }
    dend_15 { pt3dadd( 7.36036, 67.4828, -24.4057, 0.29 ) }
    dend_15 { pt3dadd( 6.99531, 68.5599, -24.829, 1.84 ) }
    dend_15 { pt3dadd( 6.56373, 69.5293, -25.2102, 2.58 ) }
    dend_15 { pt3dadd( 6.41178, 69.8023, -25.3127, 2.5 ) }
    dend_15 { pt3dadd( 5.12854, 71.7395, -26.0572, 0.22 ) }
    dend_15 { pt3dadd( 4.42466, 72.7005, -26.4538, 0.22 ) }
    dend_15 { pt3dadd( 3.95642, 73.3063, -26.7022, 0.96 ) }
    dend_15 { pt3dadd( 3.70365, 73.615, -26.8265, 1.18 ) }
    dend_15 { pt3dadd( 3.47326, 73.8884, -26.9251, 1.18 ) }
    dend_15 { pt3dadd( 2.67446, 74.8283, -27.257, 0.29 ) }
    dend_15 { pt3dadd( 2.25505, 75.3118, -27.4145, 0.29 ) }
    dend_15 { pt3dadd( 1.4292, 76.2786, -27.7667, 0.29 ) }
    dend_15 { pt3dadd( 0.343253, 77.5649, -28.2604, 2.21 ) }
    dend_15 { pt3dadd( -0.0304946, 78.017, -28.4339, 2.65 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 28/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.2269, 36.703, 22.2509, 0.29 ) }
    dend_13 { pt3dadd( 19.9212, 37.7108, 22.1673, 0.29 ) }
    dend_13 { pt3dadd( 20.3947, 38.4526, 22.1554, 0.59 ) }
    dend_13 { pt3dadd( 20.6749, 38.9269, 22.2092, 0.74 ) }
    dend_13 { pt3dadd( 21.144, 39.7512, 22.3405, 0.22 ) }
    dend_13 { pt3dadd( 21.5836, 40.5387, 22.4768, 0.22 ) }
    dend_13 { pt3dadd( 22.2622, 41.7666, 22.6948, 2.28 ) }
    dend_13 { pt3dadd( 22.4816, 42.2023, 22.7935, 2.28 ) }
    dend_13 { pt3dadd( 23.2453, 43.7536, 23.1718, 0.29 ) }
    dend_13 { pt3dadd( 23.4221, 44.1136, 23.2659, 0.29 ) }
    dend_13 { pt3dadd( 23.9021, 45.0991, 23.5361, 0.22 ) }
    dend_13 { pt3dadd( 24.0359, 45.3616, 23.6023, 0.88 ) }
    dend_13 { pt3dadd( 24.0936, 45.4579, 23.6219, 0.88 ) }
    dend_13 { pt3dadd( 24.2589, 45.7016, 23.663, 0.88 ) }
    dend_13 { pt3dadd( 24.3622, 45.8328, 23.6758, 0.88 ) }
    dend_13 { pt3dadd( 24.7108, 46.2644, 23.7455, 0.52 ) }
    dend_13 { pt3dadd( 24.9268, 46.5773, 23.8419, 0.15 ) }
    dend_13 { pt3dadd( 25.2142, 47.0474, 24.0115, 0.15 ) }
    dend_13 { pt3dadd( 25.3444, 47.2962, 24.1013, 0.15 ) }
    dend_13 { pt3dadd( 25.6401, 47.9256, 24.3173, 0.81 ) }
    dend_13 { pt3dadd( 25.7648, 48.2656, 24.433, 0.96 ) }
    dend_13 { pt3dadd( 26.0642, 49.3421, 24.8, 0.15 ) }
    dend_13 { pt3dadd( 26.0792, 49.4117, 24.8238, 0.15 ) }
    dend_13 { pt3dadd( 26.2759, 50.3412, 25.1429, 1.55 ) }
    dend_13 { pt3dadd( 26.3929, 50.8431, 25.3194, 2.28 ) }
    dend_13 { pt3dadd( 26.8021, 52.3998, 25.9063, 0.22 ) }
    dend_13 { pt3dadd( 27.1014, 53.4877, 26.371, 2.65 ) }
    dend_13 { pt3dadd( 27.5436, 55.0105, 27.0606, 0.29 ) }
    dend_13 { pt3dadd( 27.7087, 55.5353, 27.3166, 0.15 ) }
    dend_13 { pt3dadd( 27.8268, 55.9011, 27.5068, 0.15 ) }
    dend_13 { pt3dadd( 28.3221, 57.3554, 28.306, 2.58 ) }
    dend_13 { pt3dadd( 28.9252, 58.8685, 29.1973, 0.15 ) }
    dend_13 { pt3dadd( 29.0516, 59.1525, 29.378, 0.37 ) }
    dend_13 { pt3dadd( 29.2108, 59.4901, 29.6123, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 62/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.2269, 36.703, 22.2509, 0.29 ) }
    dend_12 { pt3dadd( 17.8322, 38.1384, 22.5319, 0.29 ) }
    dend_12 { pt3dadd( 16.9549, 39.1947, 22.6894, 0.29 ) }
    dend_12 { pt3dadd( 16.4752, 39.8737, 22.7645, 0.29 ) }
    dend_12 { pt3dadd( 16.0423, 40.5612, 22.8238, 0.88 ) }
    dend_12 { pt3dadd( 16.007, 40.6408, 22.8269, 0.88 ) }
    dend_12 { pt3dadd( 15.8201, 41.2271, 22.8842, 0.88 ) }
    dend_12 { pt3dadd( 15.7874, 41.4959, 22.9015, 0.88 ) }
    dend_12 { pt3dadd( 15.7936, 41.8518, 22.9409, 0.88 ) }
    dend_12 { pt3dadd( 15.8005, 41.9488, 22.9613, 0.88 ) }
    dend_12 { pt3dadd( 15.9325, 43.2555, 23.2961, 0.44 ) }
    dend_12 { pt3dadd( 16.0591, 44.3377, 23.5807, 0.44 ) }
    dend_12 { pt3dadd( 16.0672, 44.4196, 23.6094, 0.44 ) }
    dend_12 { pt3dadd( 16.1063, 45.4386, 23.9851, 0.44 ) }
    dend_12 { pt3dadd( 16.0704, 47.1005, 24.7379, 1.77 ) }
    dend_12 { pt3dadd( 16.0728, 47.7961, 25.09, 2.65 ) }
    dend_12 { pt3dadd( 16.1003, 48.4222, 25.437, 3.02 ) }
    dend_12 { pt3dadd( 16.3731, 51.1838, 26.985, 0.22 ) }
    dend_12 { pt3dadd( 16.6346, 52.6188, 27.8847, 1.03 ) }
    dend_12 { pt3dadd( 17.1341, 54.6103, 29.225, 0.29 ) }
    dend_12 { pt3dadd( 17.5654, 55.9917, 30.2328, 0.22 ) }
    dend_12 { pt3dadd( 17.87, 56.8081, 30.8615, 1.92 ) }
    dend_12 { pt3dadd( 18.2422, 57.6217, 31.496, 2.28 ) }
    dend_12 { pt3dadd( 19.4478, 59.6831, 33.0918, 0.22 ) }
    dend_12 { pt3dadd( 19.765, 60.2586, 33.592, 0.22 ) }
    dend_12 { pt3dadd( 20.2858, 61.5029, 34.7481, 1.11 ) }
    dend_12 { pt3dadd( 20.3923, 61.9599, 35.1994, 1.55 ) }
    dend_12 { pt3dadd( 20.4631, 62.5795, 35.8591, 1.84 ) }
    dend_12 { pt3dadd( 20.4626, 62.6375, 35.9241, 1.84 ) }
    dend_12 { pt3dadd( 20.192, 65.5224, 39.2289, 0.29 ) }
    dend_12 { pt3dadd( 19.9776, 66.8716, 40.8104, 0.29 ) }
    dend_12 { pt3dadd( 19.7048, 68.1335, 42.2562, 2.65 ) }
    dend_12 { pt3dadd( 19.4341, 69.1537, 43.3957, 2.36 ) }
    dend_12 { pt3dadd( 18.8838, 70.9051, 45.2798, 0.37 ) }
    dend_12 { pt3dadd( 18.8655, 70.9571, 45.3292, 0.37 ) }
    dend_12 { pt3dadd( 18.5632, 71.668, 45.826, 0.22 ) }
    dend_12 { pt3dadd( 18.2269, 72.3258, 46.1685, 0.66 ) }
    dend_12 { pt3dadd( 17.8379, 73.041, 46.4479, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 17.4487, 73.7587, 46.6595, 0.96 ) }
    dend_12 { pt3dadd( 16.8655, 74.8352, 46.9245, 0.22 ) }
    dend_12 { pt3dadd( 16.4335, 75.6535, 47.174, 0.22 ) }
    dend_12 { pt3dadd( 15.6784, 77.0944, 47.7287, 2.43 ) }
    dend_12 { pt3dadd( 14.4253, 79.3047, 48.8531, 0.22 ) }
    dend_12 { pt3dadd( 14.2235, 79.6505, 49.0476, 0.88 ) }
    dend_12 { pt3dadd( 13.9865, 80.0636, 49.287, 1.03 ) }
    dend_12 { pt3dadd( 13.1622, 81.5, 50.1752, 0.66 ) }
    dend_12 { pt3dadd( 12.3948, 82.8667, 51.3124, 1.62 ) }
    dend_12 { pt3dadd( 11.8168, 84.1164, 52.5329, 1.62 ) }
    dend_12 { pt3dadd( 11.4037, 85.3147, 53.7909, 0.37 ) }
    dend_12 { pt3dadd( 11.3146, 85.7995, 54.3106, 2.06 ) }
    dend_12 { pt3dadd( 11.3111, 85.8503, 54.3643, 2.06 ) }
    dend_12 { pt3dadd( 11.4036, 89.3196, 57.707, 1.62 ) }
    dend_12 { pt3dadd( 11.5444, 90.6505, 58.994, 0.22 ) }
    dend_12 { pt3dadd( 11.679, 91.4627, 59.7756, 2.06 ) }
    dend_12 { pt3dadd( 12.2159, 93.9729, 62.3763, 0.29 ) }
    dend_12 { pt3dadd( 12.3005, 94.3483, 62.76, 0.29 ) }
    dend_12 { pt3dadd( 12.5767, 95.4752, 63.7891, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 19/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -11.2394, 23.2181, 1.23539, 1.18 ) }
    dend_2 { pt3dadd( -13.8454, 25.2492, -2.14431, 1.18 ) }
    dend_2 { pt3dadd( -14.4798, 25.7501, -2.85097, 1.18 ) }
    dend_2 { pt3dadd( -15.301, 26.3999, -3.65094, 1.4 ) }
    dend_2 { pt3dadd( -16.1448, 27.083, -4.36583, 1.4 ) }
    dend_2 { pt3dadd( -17.222, 28.019, -5.28183, 1.03 ) }
    dend_2 { pt3dadd( -18.1664, 28.8956, -6.06072, 0.66 ) }
    dend_2 { pt3dadd( -18.9404, 29.6807, -6.56014, 0.66 ) }
    dend_2 { pt3dadd( -19.4679, 30.2842, -6.91002, 1.11 ) }
    dend_2 { pt3dadd( -20.2124, 31.2389, -7.34384, 0.81 ) }
    dend_2 { pt3dadd( -21.8471, 33.6022, -8.13984, 0.66 ) }
    dend_2 { pt3dadd( -22.5521, 34.7189, -8.37553, 0.66 ) }
    dend_2 { pt3dadd( -23.0837, 35.6411, -8.48951, 0.66 ) }
    dend_2 { pt3dadd( -23.8374, 37.0252, -8.58129, 1.25 ) }
    dend_2 { pt3dadd( -24.6088, 38.5409, -8.53009, 1.62 ) }
    dend_2 { pt3dadd( -25.2648, 39.8908, -8.32757, 1.99 ) }
    dend_2 { pt3dadd( -25.7335, 40.8805, -8.05698, 1.99 ) }
    dend_2 { pt3dadd( -25.821, 41.0686, -8.00437, 1.99 ) }
    dend_2 { pt3dadd( -26.2139, 41.9324, -7.77014, 1.84 ) }
    dend_2 { pt3dadd( -26.8272, 43.305, -7.45878, 1.03 ) }
    dend_2 { pt3dadd( -27.3059, 44.4078, -7.29336, 0.74 ) }
    dend_2 { pt3dadd( -27.8487, 45.6906, -7.15386, 0.74 ) }
    dend_2 { pt3dadd( -28.2532, 46.6677, -7.06209, 0.44 ) }
    dend_2 { pt3dadd( -28.5492, 47.3807, -7.00344, 0.59 ) }
    dend_2 { pt3dadd( -28.9307, 48.2182, -6.97628, 0.59 ) }
    dend_2 { pt3dadd( -29.3399, 49.0062, -7.00376, 0.59 ) }
    dend_2 { pt3dadd( -29.3932, 49.0949, -7.01096, 0.59 ) }
    dend_2 { pt3dadd( -30.0191, 49.9984, -7.12248, 0.44 ) }
    dend_2 { pt3dadd( -30.4908, 50.6135, -7.21843, 0.29 ) }
    dend_2 { pt3dadd( -31.3562, 51.6762, -7.4613, 0.29 ) }
    dend_2 { pt3dadd( -31.9894, 52.4854, -7.67678, 1.47 ) }
    dend_2 { pt3dadd( -32.6586, 53.4231, -7.93793, 2.06 ) }
    dend_2 { pt3dadd( -32.8805, 53.8165, -8.04673, 2.21 ) }
    dend_2 { pt3dadd( -33.0455, 54.2655, -8.19373, 2.21 ) }
    dend_2 { pt3dadd( -33.3138, 55.6108, -8.66004, 1.18 ) }
    dend_2 { pt3dadd( -33.4004, 57.1381, -9.18001, 0.37 ) }
    dend_2 { pt3dadd( -33.3617, 57.9597, -9.46701, 0.37 ) }
    dend_2 { pt3dadd( -33.1575, 59.5582, -9.98931, 0.37 ) }
    dend_2 { pt3dadd( -32.8608, 61.4295, -10.6022, 1.33 ) }
    dend_2 { pt3dadd( -32.7748, 61.9703, -10.7538, 1.77 ) }
    dend_2 { pt3dadd( -32.7593, 62.0851, -10.779, 1.77 ) }
    dend_2 { pt3dadd( -32.7247, 62.6799, -10.8402, 1.77 ) }
    dend_2 { pt3dadd( -32.8018, 64.0001, -10.7638, 0.81 ) }
    dend_2 { pt3dadd( -32.9961, 65.4262, -10.4978, 0.29 ) }
    dend_2 { pt3dadd( -33.1394, 66.6082, -10.0653, 0.74 ) }
    dend_2 { pt3dadd( -33.2051, 67.3537, -9.7467, 0.74 ) }
    dend_2 { pt3dadd( -33.2968, 69.1699, -8.8978, 0.37 ) }
    dend_2 { pt3dadd( -33.3082, 70.3863, -8.28592, 0.37 ) }
    dend_2 { pt3dadd( -33.2668, 71.3495, -7.75889, 0.37 ) }
    dend_2 { pt3dadd( -33.059, 73.2721, -6.60735, 1.4 ) }
    dend_2 { pt3dadd( -32.9151, 74.0218, -6.22716, 2.06 ) }
    dend_2 { pt3dadd( -32.8092, 74.4984, -6.02448, 2.5 ) }
    dend_2 { pt3dadd( -32.6421, 75.2267, -5.78564, 2.5 ) }
    dend_2 { pt3dadd( -32.629, 75.3125, -5.76168, 2.5 ) }
    dend_2 { pt3dadd( -32.4447, 78.3165, -5.08296, 0.44 ) }
    dend_2 { pt3dadd( -32.5494, 80.1719, -4.82602, 0.37 ) }
    dend_2 { pt3dadd( -32.6972, 81.1652, -4.69806, 0.37 ) }
    dend_2 { pt3dadd( -32.7256, 81.2898, -4.68354, 0.37 ) }
    dend_2 { pt3dadd( -33.2431, 83.0928, -4.52209, 0.37 ) }
    dend_2 { pt3dadd( -33.3069, 83.2899, -4.51297, 0.37 ) }
    dend_2 { pt3dadd( -33.6459, 84.2023, -4.54026, 0.37 ) }
    dend_2 { pt3dadd( -33.6687, 84.2892, -4.54533, 0.37 ) }
    dend_2 { pt3dadd( -33.7813, 85.239, -4.71972, 1.47 ) }
    dend_2 { pt3dadd( -33.8385, 86.3334, -5.00236, 2.21 ) }
    dend_2 { pt3dadd( -33.8412, 87.0803, -5.23507, 2.65 ) }
    dend_2 { pt3dadd( -33.8634, 87.8121, -5.47932, 2.5 ) }
    dend_2 { pt3dadd( -34.0154, 90.1933, -6.30055, 0.29 ) }
    dend_2 { pt3dadd( -34.1532, 91.2469, -6.71834, 0.29 ) }
    dend_2 { pt3dadd( -34.3582, 92.2342, -7.15494, 0.29 ) }
    dend_2 { pt3dadd( -34.5695, 92.9116, -7.44606, 0.29 ) }
    dend_2 { pt3dadd( -34.859, 93.6904, -7.751, 1.33 ) }
    dend_2 { pt3dadd( -35.2743, 94.7251, -8.09627, 2.28 ) }
    dend_2 { pt3dadd( -35.8182, 96.0542, -8.42431, 2.73 ) }
    dend_2 { pt3dadd( -36.096, 96.8028, -8.5992, 2.43 ) }
    dend_2 { pt3dadd( -36.6953, 98.5817, -9.05823, 0.29 ) }
    dend_2 { pt3dadd( -36.9531, 99.3427, -9.28872, 0.29 ) }
    dend_2 { pt3dadd( -37.1706, 100.037, -9.50426, 0.29 ) }
    dend_2 { pt3dadd( -37.333, 100.593, -9.67194, 0.29 ) }
    dend_2 { pt3dadd( -37.6697, 101.907, -9.99131, 0.88 ) }
    dend_2 { pt3dadd( -37.8139, 102.461, -10.1695, 1.55 ) }
    dend_2 { pt3dadd( -38.1445, 103.436, -10.6781, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 0/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.2394, 23.2181, 1.23539, 0.74 ) }
    dend_1 { pt3dadd( -12.0609, 23.3448, 1.13705, 0.74 ) }
    dend_1 { pt3dadd( -12.7426, 23.4766, 1.05461, 0.74 ) }
    dend_1 { pt3dadd( -13.363, 23.6064, 0.983002, 0.59 ) }
    dend_1 { pt3dadd( -13.7377, 23.6915, 0.94307, 0.74 ) }
    dend_1 { pt3dadd( -14.326, 23.8329, 0.886673, 0.74 ) }
    dend_1 { pt3dadd( -14.7683, 23.943, 0.84954, 1.03 ) }
    dend_1 { pt3dadd( -15.3448, 24.1033, 0.809338, 1.33 ) }
    dend_1 { pt3dadd( -15.8194, 24.2313, 0.78355, 1.55 ) }
    dend_1 { pt3dadd( -16.3931, 24.3684, 0.763201, 1.4 ) }
    dend_1 { pt3dadd( -17.0968, 24.5107, 0.768436, 1.25 ) }
    dend_1 { pt3dadd( -18.0021, 24.6822, 0.838282, 0.74 ) }
    dend_1 { pt3dadd( -18.4746, 24.7777, 0.913932, 0.96 ) }
    dend_1 { pt3dadd( -18.9819, 24.8857, 1.04118, 0.96 ) }
    dend_1 { pt3dadd( -19.7319, 25.0739, 1.33043, 0.52 ) }
    dend_1 { pt3dadd( -20.3978, 25.2832, 1.71069, 0.52 ) }
    dend_1 { pt3dadd( -20.8905, 25.5027, 2.12308, 0.88 ) }
    dend_1 { pt3dadd( -21.238, 25.7163, 2.50277, 0.59 ) }
    dend_1 { pt3dadd( -21.2619, 25.7342, 2.52865, 0.59 ) }
    dend_1 { pt3dadd( -21.62, 26.0558, 2.90559, 0.29 ) }
    dend_1 { pt3dadd( -21.8727, 26.2811, 3.07142, 0.29 ) }
    dend_1 { pt3dadd( -22.3478, 26.5639, 3.0931, 0.74 ) }
    dend_1 { pt3dadd( -22.7615, 26.7363, 3.01088, 0.96 ) }
    dend_1 { pt3dadd( -23.5414, 26.9717, 2.79475, 0.59 ) }
    dend_1 { pt3dadd( -23.5908, 26.9826, 2.7784, 0.59 ) }
    dend_1 { pt3dadd( -24.2034, 27.0704, 2.54346, 0.29 ) }
    dend_1 { pt3dadd( -24.6059, 27.1067, 2.38036, 0.29 ) }
    dend_1 { pt3dadd( -25.1642, 27.121, 2.15174, 1.62 ) }
    dend_1 { pt3dadd( -25.7572, 27.092, 1.94875, 2.43 ) }
    dend_1 { pt3dadd( -26.2664, 27.0404, 1.81626, 2.65 ) }
    dend_1 { pt3dadd( -26.7185, 26.9829, 1.71731, 2.65 ) }
    dend_1 { pt3dadd( -26.7571, 26.978, 1.71051, 2.65 ) }
    dend_1 { pt3dadd( -27.8147, 26.8787, 1.58581, 1.11 ) }
    dend_1 { pt3dadd( -28.6413, 26.8447, 1.55376, 0.37 ) }
    dend_1 { pt3dadd( -29.176, 26.867, 1.56536, 0.37 ) }
    dend_1 { pt3dadd( -29.7435, 26.9446, 1.61432, 0.37 ) }
    dend_1 { pt3dadd( -30.2325, 27.0779, 1.71793, 0.37 ) }
    dend_1 { pt3dadd( -30.7859, 27.3173, 1.91892, 0.81 ) }
    dend_1 { pt3dadd( -31.1962, 27.5611, 2.14328, 1.47 ) }
    dend_1 { pt3dadd( -31.4962, 27.7535, 2.34823, 1.69 ) }
    dend_1 { pt3dadd( -31.6813, 27.8606, 2.48448, 1.69 ) }
    dend_1 { pt3dadd( -32.4883, 28.2425, 3.09642, 0.66 ) }
    dend_1 { pt3dadd( -33.1045, 28.4651, 3.55849, 0.37 ) }
    dend_1 { pt3dadd( -33.5208, 28.5771, 3.86645, 0.37 ) }
    dend_1 { pt3dadd( -34.2651, 28.6938, 4.37688, 1.25 ) }
    dend_1 { pt3dadd( -34.8229, 28.7068, 4.75574, 2.36 ) }
    dend_1 { pt3dadd( -35.3118, 28.6903, 5.0926, 2.36 ) }
    dend_1 { pt3dadd( -35.3484, 28.6874, 5.12048, 2.36 ) }
    dend_1 { pt3dadd( -35.6633, 28.659, 5.38248, 2.21 ) }
    dend_1 { pt3dadd( -36.4541, 28.6048, 6.11646, 0.37 ) }
    dend_1 { pt3dadd( -37.3643, 28.5568, 7.04577, 0.59 ) }
    dend_1 { pt3dadd( -37.9164, 28.5358, 7.62983, 0.37 ) }
    dend_1 { pt3dadd( -38.8465, 28.5115, 8.58494, 1.18 ) }
    dend_1 { pt3dadd( -39.0939, 28.5071, 8.82359, 1.4 ) }
    dend_1 { pt3dadd( -39.6096, 28.4996, 9.30103, 1.25 ) }
    dend_1 { pt3dadd( -39.6422, 28.4988, 9.3337, 1.25 ) }
    dend_1 { pt3dadd( -40.093, 28.4639, 9.8324, 0.52 ) }
    dend_1 { pt3dadd( -40.5884, 28.3824, 10.3958, 2.14 ) }
    dend_1 { pt3dadd( -41.0451, 28.3157, 10.9323, 2.95 ) }
    dend_1 { pt3dadd( -41.6726, 28.2025, 11.7228, 1.92 ) }
    dend_1 { pt3dadd( -42.6298, 28.058, 12.9065, 1.03 ) }
    dend_1 { pt3dadd( -43.7061, 27.9568, 14.2409, 0.44 ) }
    dend_1 { pt3dadd( -43.9559, 27.9342, 14.5689, 0.44 ) }
    dend_1 { pt3dadd( -44.6653, 27.8765, 15.5229, 0.44 ) }
    dend_1 { pt3dadd( -45.5377, 27.8206, 16.6942, 2.36 ) }
    dend_1 { pt3dadd( -46.5527, 27.8014, 17.9544, 0.22 ) }
    dend_1 { pt3dadd( -47.0105, 27.8275, 18.4297, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.444525, -43.0938, 2.58385, 0.36148 ) }
    axon_1 { pt3dadd( -0.476297, -58.0938, 2.58385, 0.36148 ) }
    axon_1 { pt3dadd( -0.508069, -73.0938, 2.58385, 0.36148 ) }
    // Section: dend_48, id: dend_48, parent: dend_38 (entry count 70/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 11.8917, -40.0139, 4.62675, 0.37 ) }
    dend_48 { pt3dadd( 12.877, -40.6944, 4.08137, 0.37 ) }
    dend_48 { pt3dadd( 13.6996, -41.1457, 3.60527, 0.29 ) }
    dend_48 { pt3dadd( 14.2075, -41.3965, 3.31087, 0.29 ) }
    dend_48 { pt3dadd( 15.6908, -42.0054, 2.50161, 0.74 ) }
    dend_48 { pt3dadd( 15.7565, -42.0267, 2.46927, 0.74 ) }
    dend_48 { pt3dadd( 16.9711, -42.3425, 1.9192, 0.66 ) }
    dend_48 { pt3dadd( 18.0832, -42.5051, 1.38846, 0.29 ) }
    dend_48 { pt3dadd( 18.1636, -42.5031, 1.35567, 0.29 ) }
    dend_48 { pt3dadd( 18.8991, -42.3653, 1.16649, 0.29 ) }
    dend_48 { pt3dadd( 19.5678, -42.1106, 1.16203, 0.74 ) }
    dend_48 { pt3dadd( 19.7612, -42.0068, 1.18936, 0.74 ) }
    dend_48 { pt3dadd( 20.1176, -41.7864, 1.30224, 1.03 ) }
    dend_48 { pt3dadd( 20.2524, -41.7139, 1.35564, 1.03 ) }
    dend_48 { pt3dadd( 20.6021, -41.599, 1.48285, 1.03 ) }
    dend_48 { pt3dadd( 21.3617, -41.495, 1.73818, 0.59 ) }
    dend_48 { pt3dadd( 22.2975, -41.5121, 2.03418, 0.22 ) }
    dend_48 { pt3dadd( 23.094, -41.6222, 2.29807, 0.22 ) }
    dend_48 { pt3dadd( 23.6712, -41.7449, 2.49471, 0.88 ) }
    dend_48 { pt3dadd( 24.7749, -41.9759, 2.84158, 1.84 ) }
    dend_48 { pt3dadd( 25.3435, -42.1032, 3.0117, 2.14 ) }
    dend_48 { pt3dadd( 26.1333, -42.2805, 3.26226, 2.36 ) }
    dend_48 { pt3dadd( 27.487, -42.5239, 3.74957, 0.66 ) }
    dend_48 { pt3dadd( 28.5436, -42.6134, 4.17757, 0.59 ) }
    dend_48 { pt3dadd( 30.1085, -42.6123, 4.87478, 0.52 ) }
    dend_48 { pt3dadd( 30.1766, -42.6043, 4.90818, 0.52 ) }
    dend_48 { pt3dadd( 30.9743, -42.4123, 5.29222, 1.33 ) }
    dend_48 { pt3dadd( 31.9433, -42.033, 5.74559, 1.77 ) }
    dend_48 { pt3dadd( 32.5284, -41.731, 6.05421, 1.77 ) }
    dend_48 { pt3dadd( 32.7544, -41.6168, 6.1848, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_48 { pt3dadd( 33.5331, -41.303, 6.6508, 1.25 ) }
    dend_48 { pt3dadd( 34.6774, -40.9436, 7.29025, 0.52 ) }
    dend_48 { pt3dadd( 35.7917, -40.6881, 7.85222, 0.29 ) }
    dend_48 { pt3dadd( 36.9372, -40.5147, 8.40342, 0.29 ) }
    dend_48 { pt3dadd( 38.042, -40.3999, 8.94793, 0.22 ) }
    dend_48 { pt3dadd( 39.1098, -40.3349, 9.34052, 0.22 ) }
    dend_48 { pt3dadd( 39.1939, -40.3309, 9.36202, 0.22 ) }
    dend_48 { pt3dadd( 39.7581, -40.2675, 9.43904, 1.03 ) }
    dend_48 { pt3dadd( 40.2514, -40.1956, 9.44195, 1.47 ) }
    dend_48 { pt3dadd( 40.9111, -40.0623, 9.38504, 1.47 ) }
    dend_48 { pt3dadd( 43.0309, -39.5563, 9.11775, 0.59 ) }
    dend_48 { pt3dadd( 43.9449, -39.3474, 8.96386, 0.22 ) }
    dend_48 { pt3dadd( 45.0093, -39.171, 8.79684, 0.22 ) }
    dend_48 { pt3dadd( 45.7265, -39.0972, 8.682, 0.22 ) }
    dend_48 { pt3dadd( 45.8011, -39.094, 8.67122, 0.22 ) }
    dend_48 { pt3dadd( 46.7468, -39.1362, 8.59028, 0.22 ) }
    dend_48 { pt3dadd( 46.8218, -39.1422, 8.58433, 0.22 ) }
    dend_48 { pt3dadd( 47.9117, -39.2357, 8.37883, 1.03 ) }
    dend_48 { pt3dadd( 48.8483, -39.3428, 8.1745, 1.62 ) }
    dend_48 { pt3dadd( 48.9216, -39.3478, 8.15731, 1.62 ) }
    dend_48 { pt3dadd( 49.2656, -39.3696, 8.08333, 1.62 ) }
    dend_48 { pt3dadd( 51.3099, -39.4957, 7.72913, 0.15 ) }
    dend_48 { pt3dadd( 51.385, -39.5041, 7.71907, 0.15 ) }
    dend_48 { pt3dadd( 52.3696, -39.6812, 7.60595, 0.15 ) }
    dend_48 { pt3dadd( 52.4537, -39.6994, 7.59964, 0.15 ) }
    dend_48 { pt3dadd( 53.9203, -40.0364, 7.52312, 1.77 ) }
    dend_48 { pt3dadd( 54.8897, -40.3178, 7.52805, 2.73 ) }
    dend_48 { pt3dadd( 55.4574, -40.5147, 7.61433, 3.02 ) }
    dend_48 { pt3dadd( 58.4323, -41.579, 8.29311, 0.22 ) }
    dend_48 { pt3dadd( 59.0082, -41.7845, 8.48711, 0.22 ) }
    dend_48 { pt3dadd( 59.064, -41.8048, 8.51293, 0.22 ) }
    dend_48 { pt3dadd( 60.3492, -42.2729, 9.38441, 0.22 ) }
    dend_48 { pt3dadd( 61.9781, -42.7699, 10.849, 0.22 ) }
    dend_48 { pt3dadd( 62.0764, -42.7984, 10.9605, 0.22 ) }
    dend_48 { pt3dadd( 62.6717, -42.9934, 11.8297, 1.55 ) }
    dend_48 { pt3dadd( 63.2677, -43.1814, 12.6573, 2.21 ) }
    dend_48 { pt3dadd( 63.8481, -43.3508, 13.3971, 1.4 ) }
    dend_48 { pt3dadd( 64.9148, -43.6087, 14.5654, 0.22 ) }
    dend_48 { pt3dadd( 65.6518, -43.8392, 15.2991, 0.22 ) }
    dend_48 { pt3dadd( 66.2546, -44.0608, 15.9404, 0.22 ) }
    dend_48 { pt3dadd( 66.5951, -44.2252, 16.3556, 0.44 ) }
    dend_48 { pt3dadd( 66.6387, -44.2497, 16.4131, 0.44 ) }
    dend_48 { pt3dadd( 67.0517, -44.542, 17.053, 0.22 ) }
    dend_48 { pt3dadd( 67.9644, -45.2841, 18.5827, 1.62 ) }
    dend_48 { pt3dadd( 68.3162, -45.5983, 19.1796, 2.14 ) }
    dend_48 { pt3dadd( 69.6693, -46.8857, 21.4041, 0.22 ) }
    dend_48 { pt3dadd( 70.0437, -47.2645, 21.9997, 1.47 ) }
    dend_48 { pt3dadd( 71.2768, -48.5582, 23.8637, 1.11 ) }
    dend_48 { pt3dadd( 71.6659, -48.9869, 24.4074, 1.33 ) }
    dend_48 { pt3dadd( 72.7731, -50.1405, 25.6793, 0.22 ) }
    dend_48 { pt3dadd( 73.3253, -50.7035, 26.297, 0.22 ) }
    dend_48 { pt3dadd( 73.6254, -50.9916, 26.608, 1.47 ) }
    dend_48 { pt3dadd( 73.8976, -51.2507, 26.952, 2.14 ) }
    dend_48 { pt3dadd( 74.4059, -51.7006, 27.6319, 2.14 ) }
    dend_48 { pt3dadd( 75.6169, -52.8369, 29.453, 0.22 ) }
    dend_48 { pt3dadd( 76.6113, -53.8134, 31.1038, 1.77 ) }
    dend_48 { pt3dadd( 76.8314, -54.0465, 31.4945, 2.36 ) }
    dend_48 { pt3dadd( 78.3784, -55.8568, 34.5106, 0.29 ) }
    dend_48 { pt3dadd( 78.8666, -56.4654, 35.5015, 0.29 ) }
    dend_48 { pt3dadd( 79.1827, -56.9028, 36.1764, 0.29 ) }
    dend_48 { pt3dadd( 79.2104, -56.9454, 36.2333, 0.29 ) }
    dend_48 { pt3dadd( 79.4899, -57.3741, 36.7564, 0.29 ) }
    dend_48 { pt3dadd( 80.4762, -58.8701, 38.5155, 2.28 ) }
    dend_48 { pt3dadd( 80.7866, -59.3066, 39.0162, 2.65 ) }
    dend_48 { pt3dadd( 81.9347, -60.8908, 40.9613, 0.22 ) }
    dend_48 { pt3dadd( 82.3551, -61.4415, 41.6683, 0.22 ) }
    dend_48 { pt3dadd( 83.098, -62.3202, 42.8176, 0.96 ) }
    dend_48 { pt3dadd( 83.5064, -62.7366, 43.3876, 1.47 ) }
    dend_48 { pt3dadd( 85.0243, -63.9683, 45.1417, 0.22 ) }
    dend_48 { pt3dadd( 85.8249, -64.4712, 45.9641, 0.81 ) }
    dend_48 { pt3dadd( 85.9414, -64.5245, 46.0669, 0.81 ) }
    dend_48 { pt3dadd( 87.4497, -64.9958, 47.1944, 0.22 ) }
    dend_48 { pt3dadd( 88.2735, -65.1511, 47.6563, 0.22 ) }
    dend_48 { pt3dadd( 90.1108, -65.3806, 48.5771, 0.22 ) }
    dend_48 { pt3dadd( 91.1394, -65.4066, 48.9667, 0.22 ) }
    dend_48 { pt3dadd( 91.2119, -65.4044, 48.9902, 0.22 ) }
    dend_48 { pt3dadd( 92.9065, -65.3018, 49.4857, 0.96 ) }
    dend_48 { pt3dadd( 93.9666, -65.1564, 49.6914, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 11.8917, -40.0139, 4.62675, 1.25 ) }
    dend_39 { pt3dadd( 11.0931, -42.1006, 4.42306, 1.25 ) }
    dend_39 { pt3dadd( 10.451, -44.2215, 4.16186, 0.81 ) }
    dend_39 { pt3dadd( 10.1201, -45.8894, 3.90095, 0.81 ) }
    dend_39 { pt3dadd( 9.93877, -47.8181, 3.56867, 0.96 ) }
    dend_39 { pt3dadd( 9.91966, -49.7919, 3.18744, 0.74 ) }
    dend_39 { pt3dadd( 9.90517, -51.2884, 2.89841, 1.11 ) }
    dend_39 { pt3dadd( 10.0053, -52.288, 2.63276, 1.69 ) }
    dend_39 { pt3dadd( 10.4322, -53.9141, 2.13536, 2.36 ) }
    dend_39 { pt3dadd( 10.9961, -55.1517, 1.71441, 2.65 ) }
    dend_39 { pt3dadd( 11.5227, -55.91, 1.44167, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -3.99062, -19.2661, 10.4164, 0.81 ) }
    dend_37 { pt3dadd( -4.3477, -18.4895, 10.5115, 0.81 ) }
    dend_37 { pt3dadd( -4.625, -17.8479, 10.5259, 0.66 ) }
    dend_37 { pt3dadd( -4.8993, -17.1827, 10.5171, 0.66 ) }
    dend_37 { pt3dadd( -5.06487, -16.8102, 10.4914, 0.96 ) }
    dend_37 { pt3dadd( -5.38555, -16.1657, 10.4343, 0.44 ) }
    dend_37 { pt3dadd( -5.63723, -15.6946, 10.3874, 0.44 ) }
    dend_37 { pt3dadd( -6.05342, -14.9783, 10.2604, 0.59 ) }
    dend_37 { pt3dadd( -6.2299, -14.7394, 10.2044, 0.59 ) }
    dend_37 { pt3dadd( -6.68613, -14.3445, 10.1138, 0.59 ) }
    dend_37 { pt3dadd( -7.07924, -14.1542, 10.0918, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -7.12453, -14.1452, 10.0954, 0.59 ) }
    dend_37 { pt3dadd( -7.57349, -14.1304, 10.1638, 0.59 ) }
    dend_37 { pt3dadd( -8.1673, -14.1701, 10.3179, 1.33 ) }
    dend_37 { pt3dadd( -8.67648, -14.2217, 10.4817, 1.69 ) }
    dend_37 { pt3dadd( -9.18036, -14.2775, 10.6911, 1.55 ) }
    dend_37 { pt3dadd( -9.74238, -14.3424, 11.0161, 0.88 ) }
    dend_37 { pt3dadd( -10.1571, -14.3827, 11.456, 0.44 ) }
    dend_37 { pt3dadd( -10.4442, -14.4225, 11.9912, 0.44 ) }
    dend_37 { pt3dadd( -10.5343, -14.4546, 12.2738, 0.74 ) }
    dend_37 { pt3dadd( -10.6227, -14.5367, 12.7515, 0.88 ) }
    dend_37 { pt3dadd( -10.7725, -14.7862, 13.9363, 1.03 ) }
    dend_37 { pt3dadd( -10.9658, -15.2788, 15.9468, 0.52 ) }
    dend_37 { pt3dadd( -11.0461, -15.543, 16.9141, 1.25 ) }
    dend_37 { pt3dadd( -11.1152, -15.8216, 17.792, 1.25 ) }
    dend_37 { pt3dadd( -11.1309, -16.1133, 18.6225, 0.44 ) }
    dend_37 { pt3dadd( -11.1198, -16.3575, 19.2548, 0.44 ) }
    dend_37 { pt3dadd( -11.065, -16.6552, 20.0907, 0.29 ) }
    dend_37 { pt3dadd( -10.8906, -17.0421, 21.4457, 1.99 ) }
    dend_37 { pt3dadd( -10.8425, -17.1384, 21.8311, 1.99 ) }
    dend_37 { pt3dadd( -10.5347, -17.7717, 24.5761, 1.99 ) }
    dend_37 { pt3dadd( -10.53, -17.7813, 24.6212, 1.99 ) }
    dend_37 { pt3dadd( -10.081, -18.6723, 28.9032, 2.73 ) }
    dend_37 { pt3dadd( -9.62888, -19.6854, 33.8213, 1.4 ) }
    dend_37 { pt3dadd( -9.57932, -19.8319, 34.5477, 1.25 ) }
    dend_37 { pt3dadd( -9.56298, -19.9586, 35.2138, 0.22 ) }
    dend_37 { pt3dadd( -9.58317, -20.0433, 35.6412, 0.22 ) }
    dend_37 { pt3dadd( -9.59909, -20.0874, 35.83, 1.11 ) }
    dend_37 { pt3dadd( -9.7261, -20.2823, 36.4194, 1.47 ) }
    dend_37 { pt3dadd( -10.3167, -21.0159, 38.0521, 1.18 ) }
    dend_37 { pt3dadd( -10.4615, -21.22, 38.5337, 1.99 ) }
    dend_37 { pt3dadd( -10.7795, -21.6965, 39.7199, 0.22 ) }
    dend_37 { pt3dadd( -10.9775, -21.9934, 40.4556, 0.22 ) }
    dend_37 { pt3dadd( -11.0419, -22.0818, 40.6737, 0.66 ) }
    dend_37 { pt3dadd( -11.3253, -22.4433, 41.5748, 0.66 ) }
    dend_37 { pt3dadd( -11.5749, -22.6839, 42.1318, 0.29 ) }
    dend_37 { pt3dadd( -11.8529, -22.9047, 42.756, 1.33 ) }
    dend_37 { pt3dadd( -11.9598, -22.9286, 42.9391, 1.62 ) }
    dend_37 { pt3dadd( -12.163, -22.9333, 43.2726, 1.84 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -3.99062, -19.2661, 10.4164, 1.62 ) }
    dend_34 { pt3dadd( -4.42794, -20.314, 10.2216, 1.62 ) }
    dend_34 { pt3dadd( -4.78536, -21.1376, 10.064, 1.33 ) }
    dend_34 { pt3dadd( -5.2374, -22.1571, 9.85351, 0.88 ) }
    dend_34 { pt3dadd( -5.75074, -23.3257, 9.59381, 0.74 ) }
    dend_34 { pt3dadd( -6.35694, -24.7196, 9.27843, 0.74 ) }
    dend_34 { pt3dadd( -6.88649, -26.0209, 8.99031, 2.14 ) }
    dend_34 { pt3dadd( -7.33535, -27.254, 8.7349, 2.21 ) }
    dend_34 { pt3dadd( -7.7693, -28.7523, 8.48979, 1.47 ) }
    dend_34 { pt3dadd( -7.99056, -29.9366, 8.34818, 1.18 ) }
    dend_34 { pt3dadd( -8.02542, -30.6449, 8.29906, 0.88 ) }
    dend_34 { pt3dadd( -7.88043, -31.7832, 8.32833, 0.59 ) }
    dend_34 { pt3dadd( -7.52926, -33.1346, 8.4602, 0.59 ) }
    dend_34 { pt3dadd( -7.09459, -34.4415, 8.66768, 1.18 ) }
    dend_34 { pt3dadd( -6.88349, -35.0033, 8.80149, 1.47 ) }
    dend_34 { pt3dadd( -6.5797, -35.8427, 9.05806, 1.11 ) }
    dend_34 { pt3dadd( -6.22529, -37.244, 9.54705, 0.74 ) }
    dend_34 { pt3dadd( -6.36569, -37.9037, 9.80606, 0.44 ) }
    dend_34 { pt3dadd( -7.01627, -38.504, 10.0636, 0.44 ) }
    dend_34 { pt3dadd( -7.73353, -38.9502, 10.2476, 0.52 ) }
    dend_34 { pt3dadd( -8.55835, -39.3397, 10.4406, 0.52 ) }
    dend_34 { pt3dadd( -9.35472, -39.6557, 10.6096, 1.18 ) }
    dend_34 { pt3dadd( -10.4396, -40.0721, 10.8164, 1.92 ) }
    dend_34 { pt3dadd( -11.5766, -40.5794, 11.0069, 2.5 ) }
    dend_34 { pt3dadd( -12.68, -41.1875, 11.1541, 2.36 ) }
    dend_34 { pt3dadd( -13.9965, -42.0575, 11.2835, 2.06 ) }
    dend_34 { pt3dadd( -15.0575, -42.8661, 11.3475, 0.59 ) }
    dend_34 { pt3dadd( -15.9842, -43.6423, 11.4011, 0.52 ) }
    dend_34 { pt3dadd( -16.9139, -44.5066, 11.452, 0.44 ) }
    dend_34 { pt3dadd( -17.84, -45.4439, 11.4567, 1.4 ) }
    dend_34 { pt3dadd( -18.617, -46.3064, 11.4325, 1.84 ) }
    dend_34 { pt3dadd( -19.4499, -47.3139, 11.3686, 1.84 ) }
    dend_34 { pt3dadd( -20.098, -48.1235, 11.3027, 1.69 ) }
    dend_34 { pt3dadd( -20.7961, -49.021, 11.2186, 1.18 ) }
    dend_34 { pt3dadd( -21.4753, -49.9357, 11.102, 0.74 ) }
    dend_34 { pt3dadd( -21.8808, -50.5192, 10.9859, 0.66 ) }
    dend_34 { pt3dadd( -22.442, -51.3927, 10.7433, 0.59 ) }
    dend_34 { pt3dadd( -22.8999, -52.1567, 10.4509, 0.52 ) }
    dend_34 { pt3dadd( -23.2196, -52.6973, 10.1921, 0.37 ) }
    dend_34 { pt3dadd( -23.7941, -53.6686, 9.68797, 0.29 ) }
    dend_34 { pt3dadd( -24.3416, -54.5624, 9.22124, 0.29 ) }
    dend_34 { pt3dadd( -24.3847, -54.6264, 9.18725, 0.29 ) }
    dend_34 { pt3dadd( -25.2891, -55.818, 8.58303, 1.77 ) }
    dend_34 { pt3dadd( -26.0773, -56.8132, 8.18741, 2.36 ) }
    dend_34 { pt3dadd( -26.1153, -56.8606, 8.17187, 2.36 ) }
    dend_34 { pt3dadd( -26.5481, -57.4165, 8.03788, 2.58 ) }
    dend_34 { pt3dadd( -27.0115, -58.0252, 7.90755, 2.58 ) }
    dend_34 { pt3dadd( -27.7681, -58.9988, 7.69588, 1.84 ) }
    dend_34 { pt3dadd( -28.5641, -60.0628, 7.46807, 0.81 ) }
    dend_34 { pt3dadd( -29.2485, -61.0315, 7.25689, 0.52 ) }
    dend_34 { pt3dadd( -29.8208, -61.9086, 7.08649, 0.44 ) }
    dend_34 { pt3dadd( -30.5627, -63.1136, 6.88584, 0.44 ) }
    dend_34 { pt3dadd( -31.155, -64.1811, 6.76554, 0.37 ) }
    dend_34 { pt3dadd( -31.4967, -64.8999, 6.73593, 0.37 ) }
    dend_34 { pt3dadd( -31.7889, -65.6046, 6.74855, 0.37 ) }
    dend_34 { pt3dadd( -32.135, -66.5897, 6.84118, 0.29 ) }
    dend_34 { pt3dadd( -32.3746, -67.4163, 6.93968, 0.29 ) }
    dend_34 { pt3dadd( -32.6595, -68.7546, 7.1924, 1.99 ) }
    dend_34 { pt3dadd( -32.8154, -69.6356, 7.4149, 2.95 ) }
    dend_34 { pt3dadd( -32.9091, -70.1819, 7.58119, 2.95 ) }
    dend_34 { pt3dadd( -33.1985, -72.0103, 8.17115, 0.59 ) }
    dend_34 { pt3dadd( -33.326, -73.0748, 8.53421, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -33.4463, -74.5323, 9.06252, 0.37 ) }
    dend_34 { pt3dadd( -33.4995, -75.5867, 9.44843, 0.37 ) }
    dend_34 { pt3dadd( -33.4818, -76.6345, 9.81252, 1.69 ) }
    dend_34 { pt3dadd( -33.4308, -77.2272, 10.0138, 2.58 ) }
    dend_34 { pt3dadd( -33.3007, -78.1263, 10.3077, 2.58 ) }
    dend_34 { pt3dadd( -33.0832, -79.6301, 10.7747, 0.29 ) }
    dend_34 { pt3dadd( -32.9692, -80.6543, 11.0291, 0.29 ) }
    dend_34 { pt3dadd( -32.8287, -82.0201, 11.4039, 0.29 ) }
    dend_34 { pt3dadd( -32.7288, -83.0641, 11.716, 0.66 ) }
    dend_34 { pt3dadd( -32.6959, -83.4509, 11.8475, 0.74 ) }
    dend_34 { pt3dadd( -32.6221, -84.437, 12.206, 0.29 ) }
    dend_34 { pt3dadd( -32.5438, -85.3778, 12.6076, 0.29 ) }
    dend_34 { pt3dadd( -32.4762, -86.9275, 13.3351, 1.4 ) }
    dend_34 { pt3dadd( -32.475, -87.437, 13.5652, 1.92 ) }
    dend_34 { pt3dadd( -32.4729, -87.5055, 13.5907, 1.92 ) }
    dend_34 { pt3dadd( -32.4362, -87.8867, 13.7085, 1.92 ) }
    dend_34 { pt3dadd( -32.2327, -89.281, 13.9939, 0.22 ) }
    dend_34 { pt3dadd( -32.2193, -89.3531, 14.0031, 0.22 ) }
    dend_34 { pt3dadd( -32.0322, -90.2619, 14.0834, 0.66 ) }
    dend_34 { pt3dadd( -31.9471, -90.6313, 14.1166, 0.81 ) }
    dend_34 { pt3dadd( -31.6308, -91.7689, 14.1918, 0.22 ) }
    dend_34 { pt3dadd( -31.3166, -92.8123, 14.2367, 2.14 ) }
    dend_34 { pt3dadd( -31.0412, -93.6618, 14.2464, 2.58 ) }
    dend_34 { pt3dadd( -30.3221, -95.6792, 14.2517, 0.22 ) }
    dend_34 { pt3dadd( -29.9455, -96.6775, 14.2519, 0.22 ) }
    dend_34 { pt3dadd( -29.5076, -97.7996, 14.2423, 0.22 ) }
    dend_34 { pt3dadd( -29.1602, -98.6523, 14.2168, 0.22 ) }
    dend_34 { pt3dadd( -28.7989, -99.4684, 14.1851, 2.36 ) }
    dend_34 { pt3dadd( -28.2293, -100.711, 14.0958, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 36.795, -21.2882, -87.9075, 0.15 ) }
    dend_31 { pt3dadd( 38.857, -23.116, -100.087, 0.15 ) }
    dend_31 { pt3dadd( 39.0023, -23.2578, -100.91, 1.69 ) }
    dend_31 { pt3dadd( 39.0762, -23.3338, -101.318, 1.92 ) }
    dend_31 { pt3dadd( 39.0873, -23.3459, -101.375, 1.92 ) }
    dend_31 { pt3dadd( 39.5287, -23.8373, -103.442, 0.22 ) }
    dend_31 { pt3dadd( 39.6212, -23.9427, -103.834, 0.22 ) }
    dend_31 { pt3dadd( 39.9292, -24.379, -104.279, 1.18 ) }
    dend_31 { pt3dadd( 39.9487, -24.4115, -104.314, 1.18 ) }
    dend_31 { pt3dadd( 40.3226, -25.0604, -105.067, 0.29 ) }
    dend_31 { pt3dadd( 40.4921, -25.3295, -105.39, 0.59 ) }
    dend_31 { pt3dadd( 40.8355, -25.833, -106.0, 0.37 ) }
    dend_31 { pt3dadd( 41.468, -26.5843, -107.027, 0.74 ) }
    dend_31 { pt3dadd( 41.4957, -26.6127, -107.07, 0.74 ) }
    dend_31 { pt3dadd( 42.0435, -27.2033, -108.041, 0.15 ) }
    dend_31 { pt3dadd( 42.2993, -27.4895, -108.57, 0.15 ) }
    dend_31 { pt3dadd( 42.3183, -27.5137, -108.611, 0.15 ) }
    dend_31 { pt3dadd( 42.4353, -27.6827, -108.887, 0.15 ) }
    dend_31 { pt3dadd( 42.4587, -27.7244, -108.942, 0.15 ) }
    dend_31 { pt3dadd( 42.7628, -28.2763, -109.614, 0.15 ) }
    dend_31 { pt3dadd( 42.9985, -28.7136, -110.113, 1.4 ) }
    dend_31 { pt3dadd( 43.1623, -29.0123, -110.45, 1.69 ) }
    dend_31 { pt3dadd( 43.894, -30.3235, -111.909, 0.22 ) }
    dend_31 { pt3dadd( 44.1478, -30.7647, -112.402, 0.22 ) }
    dend_31 { pt3dadd( 44.4574, -31.2946, -112.95, 0.22 ) }
    dend_31 { pt3dadd( 44.6906, -31.6658, -113.299, 0.96 ) }
    dend_31 { pt3dadd( 44.7829, -31.8228, -113.43, 0.96 ) }
    dend_31 { pt3dadd( 45.2171, -32.5247, -113.974, 0.22 ) }
    dend_31 { pt3dadd( 45.2373, -32.5575, -113.996, 0.22 ) }
    dend_31 { pt3dadd( 45.6284, -33.2085, -114.428, 0.22 ) }
    dend_31 { pt3dadd( 45.9854, -33.8846, -114.818, 1.55 ) }
    dend_31 { pt3dadd( 46.1828, -34.244, -115.0, 1.99 ) }
    dend_31 { pt3dadd( 46.7487, -35.2547, -115.536, 0.29 ) }
    dend_31 { pt3dadd( 46.7724, -35.2951, -115.558, 0.29 ) }
    dend_31 { pt3dadd( 47.1123, -35.8847, -115.942, 0.29 ) }
    dend_31 { pt3dadd( 47.5266, -36.677, -116.507, 0.29 ) }
    dend_31 { pt3dadd( 47.6506, -36.9639, -116.737, 0.29 ) }
    dend_31 { pt3dadd( 48.047, -38.0501, -117.776, 1.4 ) }
    dend_31 { pt3dadd( 48.1525, -38.4155, -118.175, 1.69 ) }
    dend_31 { pt3dadd( 48.405, -39.4056, -119.335, 0.29 ) }
    dend_31 { pt3dadd( 48.5437, -40.1068, -120.232, 0.29 ) }
    dend_31 { pt3dadd( 48.6608, -40.9919, -121.412, 1.47 ) }
    dend_31 { pt3dadd( 48.7141, -41.9676, -122.715, 1.18 ) }
    dend_31 { pt3dadd( 48.6929, -42.8621, -123.873, 0.22 ) }
    dend_31 { pt3dadd( 48.6545, -43.2331, -124.329, 0.22 ) }
    dend_31 { pt3dadd( 48.5193, -43.9421, -125.138, 1.69 ) }
    dend_31 { pt3dadd( 48.4346, -44.2726, -125.482, 1.77 ) }
    dend_31 { pt3dadd( 48.142, -45.1298, -126.177, 0.66 ) }
    dend_31 { pt3dadd( 47.949, -45.5747, -126.461, 0.22 ) }
    dend_31 { pt3dadd( 47.6775, -46.1252, -126.774, 0.96 ) }
    dend_31 { pt3dadd( 47.3978, -46.6897, -127.113, 0.22 ) }
    dend_31 { pt3dadd( 47.2808, -46.9652, -127.322, 0.15 ) }
    dend_31 { pt3dadd( 47.1271, -47.4434, -127.809, 0.15 ) }
    dend_31 { pt3dadd( 46.9844, -48.0374, -128.475, 0.44 ) }
    dend_31 { pt3dadd( 46.8792, -48.5195, -129.068, 1.33 ) }
    dend_31 { pt3dadd( 46.7893, -48.9352, -129.612, 1.25 ) }
    dend_31 { pt3dadd( 46.4205, -50.2624, -131.496, 1.25 ) }
    dend_31 { pt3dadd( 46.1428, -51.1731, -132.873, 0.15 ) }
    dend_31 { pt3dadd( 46.0325, -51.5045, -133.388, 0.15 ) }
    dend_31 { pt3dadd( 45.8547, -51.934, -134.078, 0.81 ) }
    dend_31 { pt3dadd( 45.775, -52.1014, -134.344, 0.96 ) }
    dend_31 { pt3dadd( 45.3768, -52.9034, -135.514, 0.52 ) }
    dend_31 { pt3dadd( 45.0346, -53.6025, -136.433, 0.22 ) }
    dend_31 { pt3dadd( 44.8813, -53.9383, -136.856, 1.18 ) }
    dend_31 { pt3dadd( 44.3796, -55.2448, -138.508, 0.22 ) }
    dend_31 { pt3dadd( 44.2333, -55.705, -139.074, 0.96 ) }
    dend_31 { pt3dadd( 43.9914, -56.6575, -140.198, 0.22 ) }
    dend_31 { pt3dadd( 43.9418, -56.9458, -140.509, 0.52 ) }
    dend_31 { pt3dadd( 43.9221, -57.0576, -140.625, 0.52 ) }
    dend_31 { pt3dadd( 43.7521, -58.2188, -141.821, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 36.795, -21.2882, -87.9075, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 38.757, -20.072, -91.1078, 1.55 ) }
    dend_30 { pt3dadd( 39.165, -19.8579, -91.7127, 1.62 ) }
    dend_30 { pt3dadd( 41.5157, -18.8615, -94.8642, 0.22 ) }
    dend_30 { pt3dadd( 41.5635, -18.8448, -94.9238, 0.22 ) }
    dend_30 { pt3dadd( 42.1376, -18.6934, -95.6009, 1.33 ) }
    dend_30 { pt3dadd( 42.4685, -18.626, -95.9718, 1.25 ) }
    dend_30 { pt3dadd( 44.2999, -18.4844, -97.6716, 0.22 ) }
    dend_30 { pt3dadd( 45.0445, -18.4738, -98.3077, 1.18 ) }
    dend_30 { pt3dadd( 45.4298, -18.4963, -98.5841, 1.33 ) }
    dend_30 { pt3dadd( 47.18, -18.6256, -99.7934, 0.22 ) }
    dend_30 { pt3dadd( 48.4056, -18.7348, -100.621, 1.84 ) }
    dend_30 { pt3dadd( 48.771, -18.7624, -100.845, 1.84 ) }
    dend_30 { pt3dadd( 49.8646, -18.838, -101.39, 0.29 ) }
    dend_30 { pt3dadd( 50.1509, -18.8513, -101.521, 0.74 ) }
    dend_30 { pt3dadd( 51.354, -18.8759, -101.995, 0.22 ) }
    dend_30 { pt3dadd( 51.4845, -18.8712, -102.036, 0.22 ) }
    dend_30 { pt3dadd( 52.0427, -18.8251, -102.208, 0.88 ) }
    dend_30 { pt3dadd( 53.4375, -18.5726, -102.768, 0.22 ) }
    dend_30 { pt3dadd( 53.7204, -18.4992, -102.899, 0.52 ) }
    dend_30 { pt3dadd( 54.208, -18.3498, -103.146, 0.22 ) }
    dend_30 { pt3dadd( 55.3087, -17.9842, -103.759, 1.92 ) }
    dend_30 { pt3dadd( 55.8009, -17.8078, -104.048, 1.92 ) }
    dend_30 { pt3dadd( 57.3367, -17.187, -105.003, 0.22 ) }
    dend_30 { pt3dadd( 57.5851, -17.0727, -105.159, 0.88 ) }
    dend_30 { pt3dadd( 57.7975, -16.977, -105.291, 0.88 ) }
    dend_30 { pt3dadd( 58.6717, -16.6182, -105.797, 0.22 ) }
    dend_30 { pt3dadd( 59.0929, -16.4585, -106.035, 0.22 ) }
    dend_30 { pt3dadd( 59.1414, -16.438, -106.064, 0.22 ) }
    dend_30 { pt3dadd( 59.3823, -16.357, -106.206, 0.22 ) }
    dend_30 { pt3dadd( 60.3642, -16.0735, -106.815, 1.4 ) }
    dend_30 { pt3dadd( 60.5844, -16.0176, -106.95, 1.4 ) }
    dend_30 { pt3dadd( 61.7537, -15.7627, -107.66, 0.22 ) }
    dend_30 { pt3dadd( 62.1947, -15.7054, -107.922, 0.96 ) }
    dend_30 { pt3dadd( 63.2301, -15.6358, -108.504, 0.22 ) }
    dend_30 { pt3dadd( 63.5079, -15.6378, -108.651, 0.22 ) }
    dend_30 { pt3dadd( 63.9061, -15.697, -108.826, 0.66 ) }
    dend_30 { pt3dadd( 64.4605, -15.8518, -109.028, 0.66 ) }
    dend_30 { pt3dadd( 65.3788, -16.2589, -109.267, 0.22 ) }
    dend_30 { pt3dadd( 65.8084, -16.5016, -109.358, 1.11 ) }
    dend_30 { pt3dadd( 66.0757, -16.6847, -109.405, 1.4 ) }
    dend_30 { pt3dadd( 67.102, -17.5534, -109.598, 0.22 ) }
    dend_30 { pt3dadd( 67.5329, -17.9901, -109.681, 0.22 ) }
    dend_30 { pt3dadd( 68.0177, -18.5646, -109.766, 0.96 ) }
    dend_30 { pt3dadd( 68.4068, -19.0694, -109.835, 1.47 ) }
    dend_30 { pt3dadd( 69.0376, -19.9275, -109.962, 0.22 ) }
    dend_30 { pt3dadd( 69.379, -20.3689, -110.065, 0.22 ) }
    dend_30 { pt3dadd( 69.4407, -20.446, -110.091, 0.22 ) }
    dend_30 { pt3dadd( 69.8418, -20.8982, -110.282, 0.22 ) }
    dend_30 { pt3dadd( 70.4328, -21.5127, -110.588, 1.33 ) }
    dend_30 { pt3dadd( 70.7094, -21.7652, -110.733, 1.62 ) }
    dend_30 { pt3dadd( 71.7459, -22.596, -111.278, 0.22 ) }
    dend_30 { pt3dadd( 72.224, -22.9594, -111.523, 0.66 ) }
    dend_30 { pt3dadd( 72.5039, -23.1738, -111.671, 0.66 ) }
    dend_30 { pt3dadd( 72.5892, -23.2405, -111.721, 0.66 ) }
    dend_30 { pt3dadd( 73.4173, -23.9096, -112.209, 0.22 ) }
    dend_30 { pt3dadd( 74.0091, -24.3967, -112.621, 1.11 ) }
    dend_30 { pt3dadd( 74.4104, -24.7385, -112.922, 1.33 ) }
    dend_30 { pt3dadd( 75.2764, -25.4722, -113.624, 0.22 ) }
    dend_30 { pt3dadd( 75.9006, -25.9722, -114.155, 1.25 ) }
    dend_30 { pt3dadd( 76.1698, -26.1636, -114.418, 1.33 ) }
    dend_30 { pt3dadd( 77.4524, -27.0046, -115.796, 0.22 ) }
    dend_30 { pt3dadd( 77.6121, -27.1017, -115.976, 0.44 ) }
    dend_30 { pt3dadd( 77.6848, -27.1408, -116.062, 0.44 ) }
    dend_30 { pt3dadd( 78.2842, -27.4183, -116.807, 1.18 ) }
    dend_30 { pt3dadd( 79.7469, -27.9837, -118.64, 0.22 ) }
    dend_30 { pt3dadd( 80.0977, -28.0972, -119.082, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.8357, -28.5422, -47.1485, 1.55 ) }
    dend_28 { pt3dadd( -11.7855, -29.6129, -49.9466, 1.55 ) }
    dend_28 { pt3dadd( -12.6144, -30.327, -52.3147, 0.22 ) }
    dend_28 { pt3dadd( -12.9773, -30.6561, -53.3042, 0.22 ) }
    dend_28 { pt3dadd( -13.5611, -31.2676, -55.1448, 2.36 ) }
    dend_28 { pt3dadd( -13.9724, -31.8022, -56.8689, 2.87 ) }
    dend_28 { pt3dadd( -15.5827, -33.836, -64.5728, 0.81 ) }
    dend_28 { pt3dadd( -15.5947, -33.8505, -64.6521, 0.81 ) }
    dend_28 { pt3dadd( -15.7678, -34.1509, -66.6971, 0.81 ) }
    dend_28 { pt3dadd( -15.7743, -34.6825, -70.6161, 2.06 ) }
    dend_28 { pt3dadd( -15.4679, -35.2519, -74.6829, 1.25 ) }
    dend_28 { pt3dadd( -15.0811, -35.7554, -77.6169, 0.81 ) }
    dend_28 { pt3dadd( -14.1692, -36.9866, -83.0285, 0.96 ) }
    dend_28 { pt3dadd( -14.0293, -37.2335, -84.1659, 1.47 ) }
    dend_28 { pt3dadd( -13.81, -37.7306, -86.5789, 0.22 ) }
    dend_28 { pt3dadd( -13.7386, -37.9672, -87.5737, 0.22 ) }
    dend_28 { pt3dadd( -13.5532, -38.5968, -90.3163, 1.4 ) }
    dend_28 { pt3dadd( -13.3442, -39.3348, -93.4695, 1.03 ) }
    dend_28 { pt3dadd( -13.2393, -39.9937, -96.2724, 1.69 ) }
    dend_28 { pt3dadd( -13.1413, -40.7593, -99.5834, 1.4 ) }
    dend_28 { pt3dadd( -12.9843, -41.5208, -102.88, 1.4 ) }
    dend_28 { pt3dadd( -12.4839, -42.9477, -108.816, 1.84 ) }
    dend_28 { pt3dadd( -11.8759, -44.1051, -113.241, 0.15 ) }
    dend_28 { pt3dadd( -11.5827, -44.5752, -114.762, 1.84 ) }
    dend_28 { pt3dadd( -11.4508, -44.7765, -115.305, 1.84 ) }
    dend_28 { pt3dadd( -10.5918, -46.2189, -118.586, 0.22 ) }
    dend_28 { pt3dadd( -10.2411, -46.7976, -119.844, 1.55 ) }
    dend_28 { pt3dadd( -10.0888, -46.9834, -120.248, 1.77 ) }
    dend_28 { pt3dadd( -9.19534, -47.6879, -122.336, 0.22 ) }
    dend_28 { pt3dadd( -8.90281, -47.8607, -122.985, 0.22 ) }
    dend_28 { pt3dadd( -8.18544, -48.2254, -124.497, 1.77 ) }
    dend_28 { pt3dadd( -4.84092, -49.6568, -131.223, 1.25 ) }
    dend_28 { pt3dadd( -3.35793, -50.2069, -134.082, 0.81 ) }
    dend_28 { pt3dadd( -2.30169, -50.5769, -136.064, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -1.82968, -50.7265, -136.925, 0.37 ) }
    dend_28 { pt3dadd( -1.00412, -51.0058, -138.332, 0.22 ) }
    dend_28 { pt3dadd( 0.145298, -51.3959, -140.049, 1.77 ) }
    dend_28 { pt3dadd( 0.492042, -51.5325, -140.479, 1.84 ) }
    dend_28 { pt3dadd( 3.17806, -52.6535, -143.782, 0.96 ) }
    dend_28 { pt3dadd( 4.07906, -53.0344, -144.854, 1.4 ) }
    dend_28 { pt3dadd( 5.8329, -53.6737, -146.953, 0.22 ) }
    dend_28 { pt3dadd( 6.20085, -53.7765, -147.374, 0.22 ) }
    dend_28 { pt3dadd( 6.34129, -53.8021, -147.51, 0.22 ) }
    dend_28 { pt3dadd( 7.42462, -53.9184, -148.398, 0.22 ) }
    dend_28 { pt3dadd( 8.07067, -53.9457, -148.738, 1.18 ) }
    dend_28 { pt3dadd( 8.15688, -53.9503, -148.772, 1.18 ) }
    dend_28 { pt3dadd( 8.88535, -53.9812, -149.02, 1.18 ) }
    dend_28 { pt3dadd( 10.9689, -54.1889, -149.728, 0.29 ) }
    dend_28 { pt3dadd( 11.8549, -54.2981, -150.047, 0.44 ) }
    dend_28 { pt3dadd( 12.5765, -54.3834, -150.308, 0.44 ) }
    dend_28 { pt3dadd( 13.7351, -54.5134, -150.707, 0.22 ) }
    dend_28 { pt3dadd( 15.0976, -54.6601, -151.154, 1.47 ) }
    dend_28 { pt3dadd( 15.7972, -54.7408, -151.368, 1.62 ) }
    dend_28 { pt3dadd( 17.7576, -54.9688, -151.886, 0.22 ) }
    dend_28 { pt3dadd( 18.7867, -55.0882, -152.191, 0.22 ) }
    dend_28 { pt3dadd( 19.3578, -55.1854, -152.389, 0.59 ) }
    dend_28 { pt3dadd( 19.4294, -55.2107, -152.419, 0.59 ) }
    dend_28 { pt3dadd( 19.7434, -55.4295, -152.625, 0.59 ) }
    dend_28 { pt3dadd( 19.8623, -55.5799, -152.82, 0.59 ) }
    dend_28 { pt3dadd( 20.2258, -56.369, -153.879, 0.15 ) }
    dend_28 { pt3dadd( 20.387, -56.8073, -154.475, 1.18 ) }
    dend_28 { pt3dadd( 20.5588, -57.3261, -155.203, 1.18 ) }
    dend_28 { pt3dadd( 20.9628, -58.7006, -157.192, 0.44 ) }
    dend_28 { pt3dadd( 21.4011, -60.6578, -160.035, 0.22 ) }
    dend_28 { pt3dadd( 21.4463, -61.0762, -160.678, 0.22 ) }
    dend_28 { pt3dadd( 21.4205, -61.3328, -161.185, 0.74 ) }
    dend_28 { pt3dadd( 21.3912, -61.3893, -161.335, 0.74 ) }
    dend_28 { pt3dadd( 20.8083, -61.915, -163.251, 0.22 ) }
    dend_28 { pt3dadd( 20.5209, -62.0941, -164.012, 0.22 ) }
    dend_28 { pt3dadd( 19.4047, -62.5868, -166.578, 1.47 ) }
    dend_28 { pt3dadd( 17.9734, -63.0296, -169.594, 1.33 ) }
    dend_28 { pt3dadd( 16.4271, -63.418, -172.738, 0.59 ) }
    dend_28 { pt3dadd( 15.3464, -63.6263, -174.852, 0.44 ) }
    dend_28 { pt3dadd( 14.9776, -63.6648, -175.526, 0.44 ) }
    dend_28 { pt3dadd( 14.0313, -63.7162, -177.227, 0.22 ) }
    dend_28 { pt3dadd( 13.4273, -63.7325, -178.17, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -10.8357, -28.5422, -47.1485, 2.87 ) }
    dend_25 { pt3dadd( -11.4985, -28.7172, -47.4687, 2.87 ) }
    dend_25 { pt3dadd( -12.6752, -29.0368, -47.9478, 2.73 ) }
    dend_25 { pt3dadd( -14.6932, -29.5858, -48.6859, 0.29 ) }
    dend_25 { pt3dadd( -14.9548, -29.6563, -48.7942, 0.29 ) }
    dend_25 { pt3dadd( -16.468, -30.0511, -49.4318, 0.29 ) }
    dend_25 { pt3dadd( -17.9849, -30.4069, -50.0791, 1.55 ) }
    dend_25 { pt3dadd( -18.693, -30.536, -50.3539, 2.21 ) }
    dend_25 { pt3dadd( -19.0139, -30.5788, -50.4881, 2.21 ) }
    dend_25 { pt3dadd( -21.1725, -30.8148, -51.5528, 0.22 ) }
    dend_25 { pt3dadd( -21.8934, -30.8857, -51.99, 0.22 ) }
    dend_25 { pt3dadd( -22.5208, -30.9389, -52.4441, 0.66 ) }
    dend_25 { pt3dadd( -22.7658, -30.9452, -52.6332, 0.81 ) }
    dend_25 { pt3dadd( -24.2194, -30.9264, -53.7362, 0.22 ) }
    dend_25 { pt3dadd( -24.803, -30.9085, -54.1432, 0.22 ) }
    dend_25 { pt3dadd( -25.8574, -30.8732, -54.8149, 1.84 ) }
    dend_25 { pt3dadd( -26.3984, -30.8663, -55.1656, 2.21 ) }
    dend_25 { pt3dadd( -27.264, -30.9044, -55.7937, 2.06 ) }
    dend_25 { pt3dadd( -28.6724, -31.0297, -56.9307, 0.29 ) }
    dend_25 { pt3dadd( -29.2576, -31.1309, -57.4824, 0.29 ) }
    dend_25 { pt3dadd( -30.4097, -31.4206, -58.7328, 1.69 ) }
    dend_25 { pt3dadd( -30.8757, -31.5793, -59.2939, 1.99 ) }
    dend_25 { pt3dadd( -32.455, -32.2495, -61.3608, 1.11 ) }
    dend_25 { pt3dadd( -33.1127, -32.6285, -62.3127, 1.11 ) }
    dend_25 { pt3dadd( -34.0929, -33.4035, -63.9408, 0.29 ) }
    dend_25 { pt3dadd( -34.396, -33.7055, -64.5045, 0.29 ) }
    dend_25 { pt3dadd( -34.4802, -33.8176, -64.6876, 0.52 ) }
    dend_25 { pt3dadd( -34.6859, -34.1679, -65.1841, 0.52 ) }
    dend_25 { pt3dadd( -34.8473, -34.6473, -65.785, 0.22 ) }
    dend_25 { pt3dadd( -34.9055, -34.9753, -66.1919, 0.22 ) }
    dend_25 { pt3dadd( -34.9092, -35.0184, -66.2443, 0.22 ) }
    dend_25 { pt3dadd( -35.0066, -36.9947, -68.5561, 2.06 ) }
    dend_25 { pt3dadd( -35.0388, -37.5245, -69.1546, 2.36 ) }
    dend_25 { pt3dadd( -35.2351, -39.1807, -71.0247, 0.22 ) }
    dend_25 { pt3dadd( -35.2954, -39.5725, -71.4936, 0.22 ) }
    dend_25 { pt3dadd( -35.3738, -40.0313, -72.0203, 0.22 ) }
    dend_25 { pt3dadd( -35.5156, -40.9159, -72.9613, 1.33 ) }
    dend_25 { pt3dadd( -35.6102, -41.5468, -73.6361, 1.47 ) }
    dend_25 { pt3dadd( -35.8396, -42.7867, -75.0513, 0.22 ) }
    dend_25 { pt3dadd( -36.1844, -43.9869, -76.7468, 0.22 ) }
    dend_25 { pt3dadd( -36.3567, -44.528, -77.5814, 1.4 ) }
    dend_25 { pt3dadd( -36.4377, -44.7852, -78.0088, 1.69 ) }
    dend_25 { pt3dadd( -36.897, -46.5098, -80.9684, 0.22 ) }
    dend_25 { pt3dadd( -37.0426, -47.2215, -82.2702, 1.92 ) }
    dend_25 { pt3dadd( -37.3385, -48.9416, -85.8532, 0.29 ) }
    dend_25 { pt3dadd( -37.3944, -49.2985, -86.7137, 0.29 ) }
    dend_25 { pt3dadd( -37.399, -49.3514, -86.8495, 0.29 ) }
    dend_25 { pt3dadd( -37.4198, -49.7569, -87.8262, 0.74 ) }
    dend_25 { pt3dadd( -37.406, -50.5207, -89.4779, 1.55 ) }
    dend_25 { pt3dadd( -37.2597, -52.4061, -93.2133, 1.47 ) }
    dend_25 { pt3dadd( -37.0359, -54.1964, -96.3997, 0.29 ) }
    dend_25 { pt3dadd( -36.9831, -54.6638, -97.2194, 0.29 ) }
    dend_25 { pt3dadd( -36.9039, -55.5251, -98.6355, 1.4 ) }
    dend_25 { pt3dadd( -36.7986, -57.0376, -100.89, 1.69 ) }
    dend_25 { pt3dadd( -36.7601, -57.4101, -101.367, 1.69 ) }
    dend_25 { pt3dadd( -36.3504, -59.6135, -103.783, 0.22 ) }
    dend_25 { pt3dadd( -36.3274, -59.7094, -103.891, 0.22 ) }
    dend_25 { pt3dadd( -36.209, -60.119, -104.382, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( -36.0021, -60.7361, -105.165, 1.47 ) }
    dend_25 { pt3dadd( -35.4633, -62.3358, -107.151, 0.22 ) }
    dend_25 { pt3dadd( -35.3208, -62.7415, -107.649, 1.4 ) }
    dend_25 { pt3dadd( -34.8145, -64.0385, -109.374, 1.4 ) }
    dend_25 { pt3dadd( -34.3899, -65.0609, -110.826, 0.22 ) }
    dend_25 { pt3dadd( -33.9201, -66.1201, -112.627, 1.62 ) }
    dend_25 { pt3dadd( -33.9059, -66.1512, -112.686, 1.62 ) }
    dend_25 { pt3dadd( -33.7897, -66.4593, -113.322, 1.62 ) }
    dend_25 { pt3dadd( -33.3893, -67.9213, -116.535, 0.15 ) }
    dend_25 { pt3dadd( -33.3371, -68.2207, -117.236, 1.4 ) }
    dend_25 { pt3dadd( -33.3078, -69.6549, -121.08, 1.11 ) }
    dend_25 { pt3dadd( -33.3107, -69.6757, -121.134, 1.11 ) }
    dend_25 { pt3dadd( -33.5267, -70.4034, -122.912, 0.37 ) }
    dend_25 { pt3dadd( -33.6817, -70.718, -123.596, 0.74 ) }
    dend_25 { pt3dadd( -33.8134, -70.9174, -123.951, 0.88 ) }
    dend_25 { pt3dadd( -34.7165, -72.2413, -125.998, 0.22 ) }
    dend_25 { pt3dadd( -35.1229, -72.9041, -126.687, 1.33 ) }
    dend_25 { pt3dadd( -35.4309, -73.599, -127.23, 1.11 ) }
    dend_25 { pt3dadd( -35.7359, -74.4934, -127.819, 0.22 ) }
    dend_25 { pt3dadd( -35.7513, -74.5508, -127.854, 0.22 ) }
    dend_25 { pt3dadd( -35.967, -75.5844, -128.334, 0.22 ) }
    dend_25 { pt3dadd( -36.1357, -76.7175, -128.533, 0.22 ) }
    dend_25 { pt3dadd( -36.2563, -78.4245, -128.727, 1.84 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 23/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 21.9376, 88.2423, -74.7406, 0.22 ) }
    dend_22 { pt3dadd( 21.3278, 90.4121, -75.1053, 0.22 ) }
    dend_22 { pt3dadd( 21.2851, 90.5775, -75.1304, 0.22 ) }
    dend_22 { pt3dadd( 21.0232, 91.8716, -75.3848, 0.22 ) }
    dend_22 { pt3dadd( 20.9315, 92.8662, -75.6703, 0.66 ) }
    dend_22 { pt3dadd( 20.931, 93.0185, -75.7207, 0.66 ) }
    dend_22 { pt3dadd( 20.9798, 93.5387, -75.9414, 0.66 ) }
    dend_22 { pt3dadd( 21.0018, 93.6124, -75.9801, 0.66 ) }
    dend_22 { pt3dadd( 21.3554, 94.4836, -76.4971, 0.22 ) }
    dend_22 { pt3dadd( 21.9691, 95.5737, -77.2171, 0.88 ) }
    dend_22 { pt3dadd( 22.2167, 95.944, -77.4597, 0.88 ) }
    dend_22 { pt3dadd( 23.0639, 97.0862, -78.1653, 0.29 ) }
    dend_22 { pt3dadd( 23.1405, 97.183, -78.2085, 0.29 ) }
    dend_22 { pt3dadd( 23.7523, 97.981, -78.4182, 0.29 ) }
    dend_22 { pt3dadd( 24.6003, 99.1592, -78.4865, 1.03 ) }
    dend_22 { pt3dadd( 24.9618, 99.6975, -78.4461, 1.25 ) }
    dend_22 { pt3dadd( 25.8453, 101.111, -78.2427, 0.37 ) }
    dend_22 { pt3dadd( 26.9861, 102.97, -77.8604, 0.22 ) }
    dend_22 { pt3dadd( 27.904, 104.517, -77.5054, 0.22 ) }
    dend_22 { pt3dadd( 28.6414, 105.84, -77.1451, 0.81 ) }
    dend_22 { pt3dadd( 29.2112, 106.977, -76.767, 0.22 ) }
    dend_22 { pt3dadd( 29.4593, 107.534, -76.5653, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 21.9376, 88.2423, -74.7406, 0.81 ) }
    dend_21 { pt3dadd( 22.5987, 89.1825, -75.2399, 0.81 ) }
    dend_21 { pt3dadd( 23.0003, 89.655, -75.4858, 0.22 ) }
    dend_21 { pt3dadd( 23.332, 90.0271, -75.6601, 0.22 ) }
    dend_21 { pt3dadd( 23.6797, 90.4211, -75.8281, 1.18 ) }
    dend_21 { pt3dadd( 23.9424, 90.719, -75.935, 1.18 ) }
    dend_21 { pt3dadd( 23.9723, 90.7526, -75.9471, 1.18 ) }
    dend_21 { pt3dadd( 24.6046, 91.4839, -76.1361, 0.29 ) }
    dend_21 { pt3dadd( 24.9111, 91.81, -76.2114, 0.44 ) }
    dend_21 { pt3dadd( 25.0729, 91.9641, -76.3143, 0.44 ) }
    dend_21 { pt3dadd( 25.5023, 92.3876, -76.7148, 0.22 ) }
    dend_21 { pt3dadd( 25.7763, 92.6774, -77.0321, 1.18 ) }
    dend_21 { pt3dadd( 25.9083, 92.8274, -77.3136, 1.47 ) }
    dend_21 { pt3dadd( 25.9801, 92.9208, -77.5655, 1.47 ) }
    dend_21 { pt3dadd( 26.4779, 93.7419, -80.0379, 0.52 ) }
    dend_21 { pt3dadd( 26.541, 93.8627, -80.4742, 0.81 ) }
    dend_21 { pt3dadd( 26.5704, 93.932, -80.7622, 0.81 ) }
    dend_21 { pt3dadd( 26.8269, 94.6783, -84.3562, 1.11 ) }
    dend_21 { pt3dadd( 26.8921, 95.0585, -86.6289, 0.59 ) }
    dend_21 { pt3dadd( 26.8689, 95.1748, -87.5776, 0.29 ) }
    dend_21 { pt3dadd( 26.7289, 95.2404, -88.8716, 0.74 ) }
    dend_21 { pt3dadd( 26.7194, 95.2379, -88.9234, 0.74 ) }
    dend_21 { pt3dadd( 26.549, 95.1202, -89.3991, 0.81 ) }
    dend_21 { pt3dadd( 25.9972, 94.5934, -89.9065, 0.29 ) }
    dend_21 { pt3dadd( 25.5699, 94.1435, -90.1562, 0.29 ) }
    dend_21 { pt3dadd( 24.9357, 93.4388, -90.4668, 0.29 ) }
    dend_21 { pt3dadd( 24.2629, 92.7187, -90.7208, 0.29 ) }
    dend_21 { pt3dadd( 23.5498, 91.956, -90.9835, 0.22 ) }
    dend_21 { pt3dadd( 23.102, 91.4819, -91.1397, 0.59 ) }
    dend_21 { pt3dadd( 22.975, 91.3375, -91.1773, 0.59 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.0304946, 78.017, -28.4339, 0.22 ) }
    dend_19 { pt3dadd( -1.55244, 80.0974, -26.5959, 0.22 ) }
    dend_19 { pt3dadd( -1.9378, 80.5886, -26.2067, 0.66 ) }
    dend_19 { pt3dadd( -2.68839, 81.5198, -25.5247, 0.22 ) }
    dend_19 { pt3dadd( -3.46108, 82.4521, -24.8692, 1.4 ) }
    dend_19 { pt3dadd( -3.87853, 82.9313, -24.5177, 1.4 ) }
    dend_19 { pt3dadd( -5.52335, 84.798, -23.1447, 0.22 ) }
    dend_19 { pt3dadd( -6.45983, 85.7767, -22.4746, 0.22 ) }
    dend_19 { pt3dadd( -7.84914, 87.186, -21.5404, 1.47 ) }
    dend_19 { pt3dadd( -8.14188, 87.4843, -21.355, 1.84 ) }
    dend_19 { pt3dadd( -10.089, 89.5007, -20.2179, 0.22 ) }
    dend_19 { pt3dadd( -10.412, 89.8396, -20.0402, 0.52 ) }
    dend_19 { pt3dadd( -11.4837, 90.9961, -19.5407, 0.15 ) }
    dend_19 { pt3dadd( -12.1327, 91.7266, -19.2668, 0.88 ) }
    dend_19 { pt3dadd( -12.9135, 92.6487, -18.9951, 0.22 ) }
    dend_19 { pt3dadd( -13.9455, 93.929, -18.7053, 1.84 ) }
    dend_19 { pt3dadd( -14.31, 94.3946, -18.6375, 1.99 ) }
    dend_19 { pt3dadd( -15.9805, 96.5276, -18.3402, 0.22 ) }
    dend_19 { pt3dadd( -16.4805, 97.1822, -18.2552, 1.11 ) }
    dend_19 { pt3dadd( -16.9035, 97.7426, -18.1724, 1.25 ) }
    dend_19 { pt3dadd( -17.9526, 99.0961, -17.9184, 0.15 ) }
    dend_19 { pt3dadd( -18.5149, 99.8108, -17.7367, 0.44 ) }
    dend_19 { pt3dadd( -18.7349, 100.086, -17.6496, 0.44 ) }
    dend_19 { pt3dadd( -18.8012, 100.169, -17.6173, 0.44 ) }
    dend_19 { pt3dadd( -19.8662, 101.493, -17.0009, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_19 { pt3dadd( -20.5495, 102.384, -16.5521, 0.15 ) }
    dend_19 { pt3dadd( -20.5929, 102.446, -16.5193, 0.15 ) }
    dend_19 { pt3dadd( -20.916, 102.943, -16.271, 0.66 ) }
    dend_19 { pt3dadd( -21.3203, 103.601, -15.9846, 0.81 ) }
    dend_19 { pt3dadd( -22.1556, 105.007, -15.4627, 0.15 ) }
    dend_19 { pt3dadd( -22.4796, 105.571, -15.2931, 0.15 ) }
    dend_19 { pt3dadd( -23.2104, 106.899, -14.9617, 1.47 ) }
    dend_19 { pt3dadd( -23.5542, 107.543, -14.8203, 1.47 ) }
    dend_19 { pt3dadd( -24.1938, 108.769, -14.5825, 0.22 ) }
    dend_19 { pt3dadd( -24.481, 109.329, -14.5144, 0.52 ) }
    dend_19 { pt3dadd( -24.6139, 109.589, -14.5038, 0.52 ) }
    dend_19 { pt3dadd( -25.1566, 110.639, -14.5042, 0.15 ) }
    dend_19 { pt3dadd( -25.8171, 111.862, -14.6145, 1.33 ) }
    dend_19 { pt3dadd( -26.0616, 112.301, -14.6726, 1.69 ) }
    dend_19 { pt3dadd( -26.8448, 113.649, -14.9249, 0.22 ) }
    dend_19 { pt3dadd( -27.2405, 114.331, -15.0665, 0.59 ) }
    dend_19 { pt3dadd( -27.5802, 114.909, -15.2009, 0.59 ) }
    dend_19 { pt3dadd( -28.2037, 115.928, -15.4836, 0.15 ) }
    dend_19 { pt3dadd( -29.2363, 117.549, -16.0115, 1.33 ) }
    dend_19 { pt3dadd( -29.6682, 118.221, -16.2372, 1.47 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -0.0304946, 78.017, -28.4339, 0.29 ) }
    dend_16 { pt3dadd( -1.94362, 79.6275, -30.1256, 0.29 ) }
    dend_16 { pt3dadd( -2.68579, 80.2477, -30.7333, 0.52 ) }
    dend_16 { pt3dadd( -3.84007, 81.2154, -31.5937, 0.74 ) }
    dend_16 { pt3dadd( -4.30054, 81.6004, -31.9056, 0.88 ) }
    dend_16 { pt3dadd( -5.53404, 82.6575, -32.6835, 0.15 ) }
    dend_16 { pt3dadd( -5.99285, 83.0731, -32.9564, 0.15 ) }
    dend_16 { pt3dadd( -6.59027, 83.6841, -33.2443, 1.33 ) }
    dend_16 { pt3dadd( -7.17589, 84.3352, -33.4814, 1.77 ) }
    dend_16 { pt3dadd( -8.30214, 85.643, -33.8319, 0.22 ) }
    dend_16 { pt3dadd( -8.76617, 86.2099, -33.9449, 0.22 ) }
    dend_16 { pt3dadd( -9.36568, 87.0436, -34.0512, 0.88 ) }
    dend_16 { pt3dadd( -9.6335, 87.4657, -34.104, 0.88 ) }
    dend_16 { pt3dadd( -10.2542, 88.5708, -34.2342, 0.15 ) }
    dend_16 { pt3dadd( -10.6201, 89.4234, -34.2891, 0.15 ) }
    dend_16 { pt3dadd( -10.8203, 90.1227, -34.2948, 0.15 ) }
    dend_16 { pt3dadd( -11.0815, 91.5327, -34.2798, 2.14 ) }
    dend_16 { pt3dadd( -11.1213, 92.0214, -34.2655, 2.14 ) }
    dend_16 { pt3dadd( -11.1183, 92.1152, -34.2612, 2.14 ) }
    dend_16 { pt3dadd( -10.8044, 94.1085, -34.1346, 0.15 ) }
    dend_16 { pt3dadd( -10.6201, 94.7383, -34.0987, 0.15 ) }
    dend_16 { pt3dadd( -10.4134, 95.2692, -34.097, 0.15 ) }
    dend_16 { pt3dadd( -10.1578, 95.8197, -34.12, 0.66 ) }
    dend_16 { pt3dadd( -9.83335, 96.4694, -34.1996, 0.81 ) }
    dend_16 { pt3dadd( -9.77055, 96.5827, -34.2246, 0.81 ) }
    dend_16 { pt3dadd( -9.2195, 97.4305, -34.6438, 0.15 ) }
    dend_16 { pt3dadd( -8.68944, 98.2851, -35.1373, 0.88 ) }
    dend_16 { pt3dadd( -8.65337, 98.345, -35.181, 0.88 ) }
    dend_16 { pt3dadd( -8.48, 98.6564, -35.422, 0.88 ) }
    dend_16 { pt3dadd( -8.41137, 98.796, -35.5277, 0.88 ) }
    dend_16 { pt3dadd( -7.8779, 100.079, -36.4051, 0.15 ) }
    dend_16 { pt3dadd( -7.71713, 100.563, -36.7149, 0.15 ) }
    dend_16 { pt3dadd( -7.44219, 101.579, -37.3246, 1.11 ) }
    dend_16 { pt3dadd( -7.29208, 102.337, -37.7571, 1.11 ) }
    dend_16 { pt3dadd( -6.99164, 104.529, -38.9337, 0.22 ) }
    dend_16 { pt3dadd( -6.94098, 105.27, -39.3547, 0.22 ) }
    dend_16 { pt3dadd( -6.93845, 106.402, -40.006, 1.47 ) }
    dend_16 { pt3dadd( -6.98772, 107.232, -40.4912, 1.69 ) }
    dend_16 { pt3dadd( -7.38744, 109.475, -42.2087, 0.15 ) }
    dend_16 { pt3dadd( -7.57129, 110.046, -42.7688, 0.88 ) }
    dend_16 { pt3dadd( -8.30394, 111.629, -44.5883, 0.22 ) }
    dend_16 { pt3dadd( -8.45546, 111.908, -44.9476, 1.55 ) }
    dend_16 { pt3dadd( -8.78706, 112.451, -45.6851, 1.84 ) }
    dend_16 { pt3dadd( -10.6418, 115.23, -49.5885, 0.59 ) }
    dend_16 { pt3dadd( -11.2353, 116.009, -50.7181, 0.22 ) }
    dend_16 { pt3dadd( -11.4921, 116.345, -51.1765, 0.74 ) }
    dend_16 { pt3dadd( -12.2858, 117.39, -52.4106, 0.15 ) }
    dend_16 { pt3dadd( -12.7698, 118.04, -53.0856, 0.15 ) }
    dend_16 { pt3dadd( -13.1325, 118.524, -53.5033, 0.81 ) }
    dend_16 { pt3dadd( -13.4647, 118.938, -53.7543, 0.81 ) }
    dend_16 { pt3dadd( -14.4152, 119.969, -54.6032, 0.15 ) }
    dend_16 { pt3dadd( -14.8554, 120.382, -55.1244, 0.96 ) }
    dend_16 { pt3dadd( -15.2813, 120.741, -55.6749, 0.96 ) }
    dend_16 { pt3dadd( -16.4998, 121.702, -57.3241, 0.22 ) }
    dend_16 { pt3dadd( -17.1649, 122.217, -58.2367, 1.4 ) }
    dend_16 { pt3dadd( -18.6086, 123.335, -60.2599, 1.69 ) }
    dend_16 { pt3dadd( -20.2768, 124.656, -62.6058, 0.74 ) }
    dend_16 { pt3dadd( -20.9429, 125.202, -63.5394, 0.22 ) }
    dend_16 { pt3dadd( -21.2799, 125.491, -63.981, 0.59 ) }
    dend_16 { pt3dadd( -21.8172, 125.992, -64.5255, 0.22 ) }
    dend_16 { pt3dadd( -21.87, 126.049, -64.5534, 0.22 ) }
    dend_16 { pt3dadd( -22.4519, 126.759, -64.5567, 0.22 ) }
    dend_16 { pt3dadd( -22.8024, 127.239, -64.4516, 0.52 ) }
    dend_16 { pt3dadd( -23.5012, 128.386, -64.1624, 0.15 ) }
    dend_16 { pt3dadd( -24.1666, 129.692, -63.7953, 1.84 ) }
    dend_16 { pt3dadd( -25.0033, 131.575, -63.2207, 0.15 ) }
    dend_16 { pt3dadd( -25.2221, 132.119, -63.0319, 0.29 ) }
    dend_16 { pt3dadd( -25.2786, 132.294, -62.9684, 0.29 ) }
    dend_16 { pt3dadd( -25.529, 133.314, -62.5876, 0.15 ) }
    dend_16 { pt3dadd( -25.683, 134.203, -62.2567, 0.74 ) }
    dend_16 { pt3dadd( -25.72, 134.501, -62.1611, 0.74 ) }
    dend_16 { pt3dadd( -25.9013, 136.059, -61.7304, 0.22 ) }
    dend_16 { pt3dadd( -26.0963, 137.456, -61.3612, 0.22 ) }
    dend_16 { pt3dadd( -26.2759, 138.623, -61.0686, 1.69 ) }
    dend_16 { pt3dadd( -26.3542, 139.119, -60.9555, 1.69 ) }
    dend_16 { pt3dadd( -26.5305, 140.499, -60.6975, 0.22 ) }
    dend_16 { pt3dadd( -26.5919, 141.097, -60.6056, 0.37 ) }
    dend_16 { pt3dadd( -26.6686, 142.224, -60.4897, 0.15 ) }
    dend_16 { pt3dadd( -26.6849, 142.5, -60.4699, 0.37 ) }
    dend_16 { pt3dadd( -26.7404, 143.513, -60.4452, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -26.763, 144.365, -60.4892, 0.74 ) }
    dend_16 { pt3dadd( -26.7661, 144.54, -60.5094, 0.74 ) }
    dend_16 { pt3dadd( -26.7726, 144.777, -60.5477, 0.74 ) }
    dend_16 { pt3dadd( -26.8013, 145.97, -60.7691, 0.15 ) }
    dend_16 { pt3dadd( -26.8329, 146.818, -60.9305, 1.03 ) }
    dend_16 { pt3dadd( -26.9297, 148.563, -61.2148, 0.15 ) }
    dend_16 { pt3dadd( -27.0377, 150.102, -61.434, 1.99 ) }
    dend_16 { pt3dadd( -27.1113, 150.738, -61.51, 1.99 ) }
    dend_16 { pt3dadd( -27.3705, 152.168, -61.646, 0.22 ) }
    dend_16 { pt3dadd( -27.5939, 153.086, -61.7146, 0.81 ) }
    dend_16 { pt3dadd( -27.9798, 154.352, -61.7735, 0.22 ) }
    dend_16 { pt3dadd( -28.0094, 154.428, -61.7746, 0.22 ) }
    dend_16 { pt3dadd( -28.451, 155.419, -61.8007, 0.22 ) }
    dend_16 { pt3dadd( -28.8998, 156.276, -61.8707, 0.22 ) }
    dend_16 { pt3dadd( -29.3326, 157.006, -62.0173, 0.22 ) }
    dend_16 { pt3dadd( -29.8929, 157.962, -62.3174, 0.22 ) }
    dend_16 { pt3dadd( -30.2156, 158.572, -62.5196, 1.03 ) }
    dend_16 { pt3dadd( -30.3716, 158.91, -62.6285, 1.03 ) }
    dend_16 { pt3dadd( -30.9676, 160.561, -63.1153, 0.22 ) }
    dend_16 { pt3dadd( -31.4397, 161.937, -63.5228, 0.59 ) }
    dend_16 { pt3dadd( -31.8649, 163.197, -63.8884, 0.22 ) }
    dend_16 { pt3dadd( -32.316, 164.661, -64.3128, 2.06 ) }
    dend_16 { pt3dadd( -32.4811, 165.283, -64.4766, 1.69 ) }
    dend_16 { pt3dadd( -32.8221, 166.956, -64.8602, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -38.1445, 103.436, -10.6781, 0.22 ) }
    dend_10 { pt3dadd( -38.3804, 104.426, -10.9846, 0.22 ) }
    dend_10 { pt3dadd( -38.5046, 104.921, -11.1695, 0.66 ) }
    dend_10 { pt3dadd( -38.5936, 105.275, -11.306, 0.81 ) }
    dend_10 { pt3dadd( -38.8784, 106.326, -11.7152, 0.22 ) }
    dend_10 { pt3dadd( -39.0736, 106.973, -11.9665, 0.66 ) }
    dend_10 { pt3dadd( -39.2357, 107.404, -12.1361, 0.96 ) }
    dend_10 { pt3dadd( -39.6839, 108.414, -12.5573, 0.22 ) }
    dend_10 { pt3dadd( -39.7967, 108.641, -12.6499, 0.22 ) }
    dend_10 { pt3dadd( -39.9591, 108.955, -12.7646, 0.52 ) }
    dend_10 { pt3dadd( -40.1372, 109.323, -12.8694, 0.52 ) }
    dend_10 { pt3dadd( -40.5609, 110.299, -13.0847, 0.22 ) }
    dend_10 { pt3dadd( -40.824, 110.998, -13.2144, 0.22 ) }
    dend_10 { pt3dadd( -41.0536, 111.646, -13.2796, 1.77 ) }
    dend_10 { pt3dadd( -41.1839, 112.056, -13.2802, 2.06 ) }
    dend_10 { pt3dadd( -41.568, 113.534, -13.1122, 0.22 ) }
    dend_10 { pt3dadd( -41.6399, 113.891, -13.0419, 0.59 ) }
    dend_10 { pt3dadd( -41.716, 114.397, -12.8979, 0.66 ) }
    dend_10 { pt3dadd( -41.9184, 115.794, -12.4265, 0.22 ) }
    dend_10 { pt3dadd( -42.0854, 116.998, -11.9726, 0.22 ) }
    dend_10 { pt3dadd( -42.2512, 118.22, -11.4783, 1.47 ) }
    dend_10 { pt3dadd( -42.3139, 118.664, -11.2834, 1.92 ) }
    dend_10 { pt3dadd( -42.5143, 120.053, -10.7047, 0.22 ) }
    dend_10 { pt3dadd( -42.5782, 120.497, -10.5367, 0.22 ) }
    dend_10 { pt3dadd( -42.6565, 121.066, -10.3589, 0.74 ) }
    dend_10 { pt3dadd( -42.6912, 121.269, -10.3123, 0.74 ) }
    dend_10 { pt3dadd( -42.8917, 122.169, -10.1565, 0.15 ) }
    dend_10 { pt3dadd( -43.0946, 122.934, -10.0235, 0.15 ) }
    dend_10 { pt3dadd( -43.2426, 123.439, -9.9411, 0.96 ) }
    dend_10 { pt3dadd( -43.3208, 123.693, -9.89632, 1.33 ) }
    dend_10 { pt3dadd( -43.393, 123.917, -9.8582, 1.33 ) }
    dend_10 { pt3dadd( -43.4117, 123.972, -9.84969, 1.33 ) }
    dend_10 { pt3dadd( -43.8107, 124.998, -9.72627, 0.22 ) }
    dend_10 { pt3dadd( -43.9708, 125.362, -9.68107, 0.81 ) }
    dend_10 { pt3dadd( -44.1766, 125.785, -9.63248, 0.81 ) }
    dend_10 { pt3dadd( -44.4973, 126.414, -9.56316, 0.22 ) }
    dend_10 { pt3dadd( -44.6125, 126.629, -9.5431, 0.44 ) }
    dend_10 { pt3dadd( -45.1312, 127.535, -9.48228, 0.22 ) }
    dend_10 { pt3dadd( -45.3012, 127.805, -9.47445, 0.59 ) }
    dend_10 { pt3dadd( -45.553, 128.188, -9.44452, 0.59 ) }
    dend_10 { pt3dadd( -45.9231, 128.745, -9.38082, 0.15 ) }
    dend_10 { pt3dadd( -46.3338, 129.357, -9.29394, 0.15 ) }
    dend_10 { pt3dadd( -46.6753, 129.871, -9.21592, 1.11 ) }
    dend_10 { pt3dadd( -46.8882, 130.187, -9.16717, 1.62 ) }
    dend_10 { pt3dadd( -47.6209, 131.241, -9.0195, 0.15 ) }
    dend_10 { pt3dadd( -47.8372, 131.541, -8.97842, 0.59 ) }
    dend_10 { pt3dadd( -47.9345, 131.671, -8.96283, 0.59 ) }
    dend_10 { pt3dadd( -48.2681, 132.143, -8.90975, 0.22 ) }
    dend_10 { pt3dadd( -48.5399, 132.548, -8.87215, 0.22 ) }
    dend_10 { pt3dadd( -48.6831, 132.774, -8.86027, 0.59 ) }
    dend_10 { pt3dadd( -48.8352, 133.038, -8.86243, 0.59 ) }
    dend_10 { pt3dadd( -49.0844, 133.531, -8.857, 0.22 ) }
    dend_10 { pt3dadd( -49.3977, 134.281, -8.83379, 0.22 ) }
    dend_10 { pt3dadd( -49.3977, 134.281, -8.83379, 0.66 ) }
    dend_10 { pt3dadd( -49.4689, 134.674, -8.80973, 0.66 ) }
    dend_10 { pt3dadd( -49.5581, 135.361, -8.76681, 0.22 ) }
    dend_10 { pt3dadd( -49.606, 135.89, -8.73386, 1.4 ) }
    dend_10 { pt3dadd( -49.6263, 136.21, -8.71464, 1.77 ) }
    dend_10 { pt3dadd( -49.7031, 137.756, -8.6284, 0.22 ) }
    dend_10 { pt3dadd( -49.7246, 138.243, -8.60117, 0.96 ) }
    dend_10 { pt3dadd( -49.7416, 138.664, -8.57783, 0.96 ) }
    dend_10 { pt3dadd( -49.7743, 139.404, -8.53882, 0.22 ) }
    dend_10 { pt3dadd( -49.8319, 140.369, -8.48986, 0.22 ) }
    dend_10 { pt3dadd( -49.8828, 141.051, -8.45573, 0.88 ) }
    dend_10 { pt3dadd( -49.9137, 141.421, -8.43613, 1.25 ) }
    dend_10 { pt3dadd( -49.963, 142.065, -8.39682, 0.22 ) }
    dend_10 { pt3dadd( -49.9713, 142.174, -8.38768, 0.22 ) }
    dend_10 { pt3dadd( -49.9874, 142.572, -8.32311, 0.22 ) }
    dend_10 { pt3dadd( -49.9811, 142.899, -8.2449, 0.22 ) }
    dend_10 { pt3dadd( -49.9264, 143.667, -7.9965, 0.22 ) }
    dend_10 { pt3dadd( -49.8928, 143.981, -7.88052, 0.81 ) }
    dend_10 { pt3dadd( -49.8344, 144.414, -7.66824, 0.81 ) }
    dend_10 { pt3dadd( -49.7041, 145.301, -7.17278, 0.15 ) }
    dend_10 { pt3dadd( -49.5988, 145.926, -6.78499, 0.15 ) }
    dend_10 { pt3dadd( -49.4353, 146.862, -6.15494, 1.4 ) }
    dend_10 { pt3dadd( -49.398, 147.093, -5.99171, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_10 { pt3dadd( -49.2196, 148.326, -5.11749, 0.22 ) }
    dend_10 { pt3dadd( -49.214, 148.368, -5.0882, 0.22 ) }
    dend_10 { pt3dadd( -49.197, 148.525, -4.97836, 0.22 ) }
    dend_10 { pt3dadd( -49.1932, 148.567, -4.95011, 0.22 ) }
    dend_10 { pt3dadd( -49.1602, 149.1, -4.63145, 0.22 ) }
    dend_10 { pt3dadd( -49.1114, 149.789, -4.27018, 0.88 ) }
    dend_10 { pt3dadd( -49.1045, 149.842, -4.24545, 0.88 ) }
    dend_10 { pt3dadd( -49.0642, 150.052, -4.14096, 1.03 ) }
    dend_10 { pt3dadd( -48.8488, 150.994, -3.66239, 0.22 ) }
    dend_10 { pt3dadd( -48.5853, 151.987, -3.15241, 1.55 ) }
    dend_10 { pt3dadd( -48.4637, 152.4, -2.92079, 1.92 ) }
    dend_10 { pt3dadd( -48.1114, 153.564, -2.24899, 0.22 ) }
    dend_10 { pt3dadd( -48.0158, 153.88, -2.06246, 0.22 ) }
    dend_10 { pt3dadd( -47.9328, 154.145, -1.90091, 0.52 ) }
    dend_10 { pt3dadd( -47.8521, 154.36, -1.75636, 0.52 ) }
    dend_10 { pt3dadd( -47.5496, 155.104, -1.24362, 0.22 ) }
    dend_10 { pt3dadd( -47.4701, 155.306, -1.0864, 0.59 ) }
    dend_10 { pt3dadd( -47.3976, 155.498, -0.921156, 0.59 ) }
    dend_10 { pt3dadd( -47.3731, 155.562, -0.866803, 0.59 ) }
    dend_10 { pt3dadd( -47.1396, 156.116, -0.412758, 0.22 ) }
    dend_10 { pt3dadd( -47.1249, 156.156, -0.384345, 0.22 ) }
    dend_10 { pt3dadd( -46.9112, 156.781, 0.00254584, 0.22 ) }
    dend_10 { pt3dadd( -46.9016, 156.818, 0.0226221, 0.22 ) }
    dend_10 { pt3dadd( -46.7814, 157.508, 0.319304, 0.88 ) }
    dend_10 { pt3dadd( -46.7393, 157.875, 0.446229, 1.47 ) }
    dend_10 { pt3dadd( -46.6944, 158.863, 0.721619, 0.22 ) }
    dend_10 { pt3dadd( -46.6943, 158.906, 0.732032, 0.22 ) }
    dend_10 { pt3dadd( -46.7192, 159.796, 0.91334, 0.22 ) }
    dend_10 { pt3dadd( -46.7238, 160.572, 1.05769, 0.88 ) }
    dend_10 { pt3dadd( -46.7168, 160.847, 1.10288, 1.33 ) }
    dend_10 { pt3dadd( -46.6627, 161.69, 1.2295, 0.15 ) }
    dend_10 { pt3dadd( -46.6308, 162.007, 1.26921, 0.15 ) }
    dend_10 { pt3dadd( -46.5358, 162.836, 1.37579, 0.15 ) }
    dend_10 { pt3dadd( -46.359, 164.085, 1.53932, 1.77 ) }
    dend_10 { pt3dadd( -46.1568, 165.288, 1.69502, 0.22 ) }
    dend_10 { pt3dadd( -46.0426, 165.893, 1.76547, 0.22 ) }
    dend_10 { pt3dadd( -45.9558, 166.274, 1.79955, 1.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -38.1445, 103.436, -10.6781, 0.22 ) }
    dend_3 { pt3dadd( -39.0681, 105.125, -12.3276, 0.22 ) }
    dend_3 { pt3dadd( -39.0841, 105.182, -12.3885, 0.22 ) }
    dend_3 { pt3dadd( -39.1668, 105.742, -12.9673, 0.22 ) }
    dend_3 { pt3dadd( -39.2311, 106.485, -13.7193, 1.11 ) }
    dend_3 { pt3dadd( -39.2661, 107.162, -14.4286, 1.92 ) }
    dend_3 { pt3dadd( -39.2934, 107.671, -14.9459, 2.14 ) }
    dend_3 { pt3dadd( -39.3167, 110.235, -17.2664, 0.22 ) }
    dend_3 { pt3dadd( -39.281, 110.779, -17.8684, 0.22 ) }
    dend_3 { pt3dadd( -39.2733, 110.841, -17.9409, 0.22 ) }
    dend_3 { pt3dadd( -39.1151, 111.799, -19.0791, 0.22 ) }
    dend_3 { pt3dadd( -38.987, 112.343, -19.6818, 0.88 ) }
    dend_3 { pt3dadd( -38.8574, 112.878, -20.2399, 0.88 ) }
    dend_3 { pt3dadd( -38.1855, 115.896, -23.0702, 1.25 ) }
    dend_3 { pt3dadd( -37.9719, 116.992, -24.0473, 1.62 ) }
    dend_3 { pt3dadd( -37.9575, 117.065, -24.1076, 1.62 ) }
    dend_3 { pt3dadd( -37.6134, 118.643, -25.2985, 0.29 ) }
    dend_3 { pt3dadd( -37.5105, 119.123, -25.636, 0.66 ) }
    dend_3 { pt3dadd( -37.498, 119.195, -25.6771, 0.66 ) }
    dend_3 { pt3dadd( -37.4307, 119.809, -26.0343, 0.66 ) }
    dend_3 { pt3dadd( -37.4232, 119.877, -26.0814, 0.66 ) }
    dend_3 { pt3dadd( -37.247, 121.254, -27.1327, 0.22 ) }
    dend_3 { pt3dadd( -37.0699, 122.732, -28.4376, 2.14 ) }
    dend_3 { pt3dadd( -37.011, 123.252, -28.9138, 2.8 ) }
    dend_3 { pt3dadd( -36.6485, 126.621, -32.0674, 0.37 ) }
    dend_3 { pt3dadd( -36.5119, 127.901, -33.2833, 0.37 ) }
    dend_3 { pt3dadd( -36.3183, 129.838, -35.1096, 0.96 ) }
    dend_3 { pt3dadd( -36.1155, 131.708, -36.8271, 0.22 ) }
    dend_3 { pt3dadd( -36.0205, 132.476, -37.5127, 1.11 ) }
    dend_3 { pt3dadd( -36.0115, 132.54, -37.5657, 1.11 ) }
    dend_3 { pt3dadd( -35.9616, 132.902, -37.7979, 1.11 ) }
    dend_3 { pt3dadd( -35.7783, 134.185, -38.5147, 0.15 ) }
    dend_3 { pt3dadd( -35.6447, 135.391, -39.0359, 0.15 ) }
    dend_3 { pt3dadd( -35.5292, 136.401, -39.4213, 0.15 ) }
    dend_3 { pt3dadd( -35.4031, 137.834, -39.9958, 1.99 ) }
    dend_3 { pt3dadd( -35.3746, 138.732, -40.3596, 2.21 ) }
    dend_3 { pt3dadd( -35.4284, 140.142, -40.9011, 0.74 ) }
    dend_3 { pt3dadd( -35.6009, 141.539, -41.3829, 0.29 ) }
    dend_3 { pt3dadd( -35.6168, 141.617, -41.4061, 0.29 ) }
    dend_3 { pt3dadd( -35.7746, 142.283, -41.5861, 0.52 ) }
    dend_3 { pt3dadd( -35.9143, 142.857, -41.7402, 0.52 ) }
    dend_3 { pt3dadd( -36.0941, 143.687, -41.9822, 0.29 ) }
    dend_3 { pt3dadd( -36.1853, 144.212, -42.1592, 0.74 ) }
    dend_3 { pt3dadd( -36.2458, 145.072, -42.5826, 0.96 ) }
    dend_3 { pt3dadd( -36.2576, 146.558, -43.4306, 0.22 ) }
    dend_3 { pt3dadd( -36.2087, 147.81, -44.2123, 1.55 ) }
    dend_3 { pt3dadd( -36.176, 148.471, -44.6435, 1.99 ) }
    dend_3 { pt3dadd( -36.1574, 149.486, -45.4632, 1.99 ) }
    dend_3 { pt3dadd( -36.2468, 151.388, -47.2182, 0.37 ) }
    dend_3 { pt3dadd( -36.2963, 151.657, -47.7037, 0.37 ) }
    dend_3 { pt3dadd( -36.3773, 151.884, -48.2641, 0.37 ) }
    dend_3 { pt3dadd( -36.5388, 152.162, -49.111, 0.37 ) }
    dend_3 { pt3dadd( -37.1836, 152.922, -51.8489, 1.92 ) }
    dend_3 { pt3dadd( -37.3982, 153.101, -52.6016, 2.43 ) }
    dend_3 { pt3dadd( -40.2947, 154.93, -61.3472, 0.37 ) }
    dend_3 { pt3dadd( -40.5487, 155.071, -62.0823, 0.44 ) }
    dend_3 { pt3dadd( -40.8809, 155.237, -62.9892, 0.29 ) }
    dend_3 { pt3dadd( -41.172, 155.371, -63.7251, 0.29 ) }
    dend_3 { pt3dadd( -41.4547, 155.507, -64.3167, 0.66 ) }
    dend_3 { pt3dadd( -41.676, 155.619, -64.7414, 0.88 ) }
    dend_3 { pt3dadd( -42.4307, 155.972, -66.1099, 0.66 ) }
    dend_3 { pt3dadd( -42.7997, 156.131, -66.9938, 0.22 ) }
    dend_3 { pt3dadd( -43.1121, 156.23, -67.9273, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_3 { pt3dadd( -43.4933, 156.35, -69.1702, 2.36 ) }
    dend_3 { pt3dadd( -44.439, 156.622, -72.499, 2.36 ) }
    dend_3 { pt3dadd( -45.7319, 156.938, -77.3591, 0.88 ) }
    dend_3 { pt3dadd( -46.1146, 157.01, -78.9034, 0.52 ) }
    dend_3 { pt3dadd( -46.8117, 157.093, -82.1565, 1.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 11.5227, -55.91, 1.44167, 0.37 ) }
    dend_47 { pt3dadd( 13.2478, -56.4538, 1.78085, 0.37 ) }
    dend_47 { pt3dadd( 14.1416, -56.8179, 1.9586, 0.29 ) }
    dend_47 { pt3dadd( 15.1825, -57.341, 2.21334, 0.66 ) }
    dend_47 { pt3dadd( 16.1248, -57.8606, 2.47148, 1.33 ) }
    dend_47 { pt3dadd( 16.7191, -58.2032, 2.64534, 1.62 ) }
    dend_47 { pt3dadd( 17.3757, -58.5899, 2.84485, 1.62 ) }
    dend_47 { pt3dadd( 18.3204, -59.2691, 3.13839, 0.59 ) }
    dend_47 { pt3dadd( 19.2219, -59.9977, 3.41171, 0.37 ) }
    dend_47 { pt3dadd( 19.7089, -60.4161, 3.52274, 0.74 ) }
    dend_47 { pt3dadd( 20.0778, -60.74, 3.55421, 0.74 ) }
    dend_47 { pt3dadd( 20.1304, -60.7859, 3.55053, 0.74 ) }
    dend_47 { pt3dadd( 20.7304, -61.3264, 3.40777, 0.29 ) }
    dend_47 { pt3dadd( 21.5802, -62.1712, 3.14536, 0.29 ) }
    dend_47 { pt3dadd( 22.312, -63.0182, 2.97079, 1.92 ) }
    dend_47 { pt3dadd( 23.0682, -64.0012, 2.87976, 3.09 ) }
    dend_47 { pt3dadd( 23.2741, -64.2927, 2.89101, 3.61 ) }
    dend_47 { pt3dadd( 23.858, -65.1739, 3.04538, 3.32 ) }
    dend_47 { pt3dadd( 24.8064, -66.7004, 3.4978, 0.88 ) }
    dend_47 { pt3dadd( 25.6287, -68.1096, 4.1654, 0.44 ) }
    dend_47 { pt3dadd( 26.0384, -68.8181, 4.59218, 0.44 ) }
    dend_47 { pt3dadd( 26.551, -69.6991, 5.21166, 1.18 ) }
    dend_47 { pt3dadd( 27.0127, -70.4169, 5.78549, 1.69 ) }
    dend_47 { pt3dadd( 27.3237, -70.8176, 6.17977, 1.69 ) }
    dend_47 { pt3dadd( 28.4982, -71.9622, 7.56362, 0.44 ) }
    dend_47 { pt3dadd( 28.9839, -72.344, 8.07365, 0.66 ) }
    dend_47 { pt3dadd( 29.0261, -72.3758, 8.11938, 0.66 ) }
    dend_47 { pt3dadd( 29.4722, -72.7041, 8.58724, 0.66 ) }
    dend_47 { pt3dadd( 30.0803, -73.2638, 9.31803, 0.29 ) }
    dend_47 { pt3dadd( 30.253, -73.5645, 9.62082, 0.29 ) }
    dend_47 { pt3dadd( 30.1944, -74.2926, 10.0047, 0.29 ) }
    dend_47 { pt3dadd( 29.9947, -75.1784, 10.4061, 0.81 ) }
    dend_47 { pt3dadd( 29.8953, -75.6135, 10.5904, 1.03 ) }
    dend_47 { pt3dadd( 29.647, -76.91, 11.2057, 0.37 ) }
    dend_47 { pt3dadd( 29.5809, -77.5215, 11.5084, 0.37 ) }
    dend_47 { pt3dadd( 29.5787, -77.6469, 11.5882, 0.37 ) }
    dend_47 { pt3dadd( 29.6666, -78.5238, 12.2543, 0.52 ) }
    dend_47 { pt3dadd( 29.7929, -79.1151, 12.7524, 0.88 ) }
    dend_47 { pt3dadd( 30.1338, -80.2971, 13.8805, 0.37 ) }
    dend_47 { pt3dadd( 30.4378, -81.0933, 14.6458, 0.29 ) }
    dend_47 { pt3dadd( 30.9623, -82.3097, 15.7807, 1.77 ) }
    dend_47 { pt3dadd( 31.193, -82.9023, 16.3254, 2.58 ) }
    dend_47 { pt3dadd( 31.2194, -82.9876, 16.4035, 2.58 ) }
    dend_47 { pt3dadd( 31.4379, -84.1842, 17.5173, 2.58 ) }
    dend_47 { pt3dadd( 31.5694, -85.3769, 18.6014, 0.37 ) }
    dend_47 { pt3dadd( 31.6586, -86.576, 19.7031, 0.37 ) }
    dend_47 { pt3dadd( 31.7553, -87.738, 20.7314, 0.66 ) }
    dend_47 { pt3dadd( 31.8422, -88.6639, 21.5522, 0.74 ) }
    dend_47 { pt3dadd( 32.0236, -89.8032, 22.5412, 0.29 ) }
    dend_47 { pt3dadd( 32.1471, -90.3366, 23.011, 0.29 ) }
    dend_47 { pt3dadd( 32.2549, -90.6325, 23.2889, 1.11 ) }
    dend_47 { pt3dadd( 32.4317, -90.9534, 23.5813, 1.33 ) }
    dend_47 { pt3dadd( 32.8661, -91.5358, 24.0894, 0.88 ) }
    dend_47 { pt3dadd( 33.5805, -92.3933, 24.8479, 0.29 ) }
    dend_47 { pt3dadd( 34.3506, -93.2345, 25.618, 0.29 ) }
    dend_47 { pt3dadd( 35.0764, -94.0104, 26.3694, 2.65 ) }
    dend_47 { pt3dadd( 35.1123, -94.0518, 26.4116, 2.65 ) }
    dend_47 { pt3dadd( 35.5069, -94.5623, 26.9677, 3.09 ) }
    dend_47 { pt3dadd( 36.0218, -95.5177, 28.1348, 0.37 ) }
    dend_47 { pt3dadd( 36.3296, -96.2882, 29.091, 0.15 ) }
    dend_47 { pt3dadd( 36.4956, -96.7946, 29.7077, 0.15 ) }
    dend_47 { pt3dadd( 36.749, -97.7546, 30.8723, 2.14 ) }
    dend_47 { pt3dadd( 36.912, -98.6231, 31.8917, 2.58 ) }
    dend_47 { pt3dadd( 37.2396, -101.106, 34.6311, 0.44 ) }
    dend_47 { pt3dadd( 37.2585, -101.666, 35.2291, 0.88 ) }
    dend_47 { pt3dadd( 37.2502, -101.871, 35.4445, 0.88 ) }
    dend_47 { pt3dadd( 37.2455, -101.926, 35.5007, 0.88 ) }
    dend_47 { pt3dadd( 37.1332, -103.191, 36.6841, 0.22 ) }
    dend_47 { pt3dadd( 37.0706, -103.999, 37.3856, 0.22 ) }
    dend_47 { pt3dadd( 37.0042, -105.035, 38.225, 1.55 ) }
    dend_47 { pt3dadd( 36.9199, -106.385, 39.3295, 2.14 ) }
    dend_47 { pt3dadd( 36.8239, -107.971, 40.5687, 0.15 ) }
    dend_47 { pt3dadd( 36.7889, -108.497, 40.9537, 0.81 ) }
    dend_47 { pt3dadd( 36.7296, -109.593, 41.7061, 0.15 ) }
    dend_47 { pt3dadd( 36.687, -110.325, 42.1858, 1.55 ) }
    dend_47 { pt3dadd( 36.6741, -110.661, 42.3905, 1.77 ) }
    dend_47 { pt3dadd( 36.6084, -112.292, 43.3262, 0.15 ) }
    dend_47 { pt3dadd( 36.4652, -114.056, 44.4155, 0.15 ) }
    dend_47 { pt3dadd( 36.4095, -114.39, 44.6635, 0.52 ) }
    dend_47 { pt3dadd( 36.137, -115.515, 45.5819, 0.22 ) }
    dend_47 { pt3dadd( 35.8282, -116.512, 46.4751, 0.74 ) }
    dend_47 { pt3dadd( 35.7461, -116.744, 46.6987, 0.74 ) }
    dend_47 { pt3dadd( 35.2203, -117.971, 48.0423, 0.59 ) }
    dend_47 { pt3dadd( 34.4642, -119.385, 49.7748, 0.22 ) }
    dend_47 { pt3dadd( 34.3317, -119.594, 50.0482, 0.52 ) }
    dend_47 { pt3dadd( 33.9888, -120.029, 50.684, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 11.5227, -55.91, 1.44167, 0.88 ) }
    dend_40 { pt3dadd( 11.0685, -56.8218, 1.43083, 0.88 ) }
    dend_40 { pt3dadd( 10.7854, -57.3931, 1.42635, 0.37 ) }
    dend_40 { pt3dadd( 10.4768, -58.0201, 1.43524, 0.37 ) }
    dend_40 { pt3dadd( 10.0163, -58.9538, 1.43553, 0.37 ) }
    dend_40 { pt3dadd( 9.77742, -59.4676, 1.42953, 1.47 ) }
    dend_40 { pt3dadd( 9.5274, -60.0793, 1.36738, 2.14 ) }
    dend_40 { pt3dadd( 9.43172, -60.3375, 1.32808, 2.14 ) }
    dend_40 { pt3dadd( 9.24416, -61.0514, 1.16688, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 9.21636, -61.6455, 0.897163, 0.44 ) }
    dend_40 { pt3dadd( 9.27455, -62.2288, 0.540211, 0.37 ) }
    dend_40 { pt3dadd( 9.46494, -63.3414, -0.251023, 1.77 ) }
    dend_40 { pt3dadd( 9.51671, -63.6391, -0.481258, 2.14 ) }
    dend_40 { pt3dadd( 9.58572, -64.1622, -0.897002, 2.21 ) }
    dend_40 { pt3dadd( 9.72028, -65.821, -2.21449, 0.29 ) }
    dend_40 { pt3dadd( 9.72873, -66.3175, -2.58864, 0.29 ) }
    dend_40 { pt3dadd( 9.66431, -67.0537, -3.11096, 0.29 ) }
    dend_40 { pt3dadd( 9.52842, -67.7476, -3.54253, 0.29 ) }
    dend_40 { pt3dadd( 9.32682, -68.496, -3.99313, 0.29 ) }
    dend_40 { pt3dadd( 9.067, -69.1726, -4.35726, 0.88 ) }
    dend_40 { pt3dadd( 8.89883, -69.4905, -4.48453, 1.62 ) }
    dend_40 { pt3dadd( 8.48421, -70.2136, -4.77482, 1.99 ) }
    dend_40 { pt3dadd( 8.36397, -70.4307, -4.84875, 1.99 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 14/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -28.2293, -100.711, 14.0958, 0.29 ) }
    dend_36 { pt3dadd( -28.0757, -101.738, 13.097, 0.29 ) }
    dend_36 { pt3dadd( -28.0356, -101.988, 12.8667, 0.44 ) }
    dend_36 { pt3dadd( -27.8769, -102.88, 12.1343, 0.22 ) }
    dend_36 { pt3dadd( -27.7266, -103.628, 11.6272, 0.22 ) }
    dend_36 { pt3dadd( -27.7176, -103.669, 11.6025, 0.22 ) }
    dend_36 { pt3dadd( -27.6721, -103.872, 11.4914, 0.66 ) }
    dend_36 { pt3dadd( -27.5961, -104.178, 11.3721, 0.66 ) }
    dend_36 { pt3dadd( -27.3702, -104.912, 11.1301, 0.22 ) }
    dend_36 { pt3dadd( -27.0996, -105.666, 10.9278, 1.4 ) }
    dend_36 { pt3dadd( -26.9875, -105.978, 10.8431, 1.84 ) }
    dend_36 { pt3dadd( -26.974, -106.017, 10.8325, 1.84 ) }
    dend_36 { pt3dadd( -26.6673, -106.932, 10.5791, 0.29 ) }
    dend_36 { pt3dadd( -26.4146, -107.819, 10.3619, 0.29 ) }
    dend_36 { pt3dadd( -26.2758, -108.485, 10.219, 0.29 ) }
    dend_36 { pt3dadd( -26.1917, -109.212, 10.086, 1.69 ) }
    dend_36 { pt3dadd( -26.1784, -109.611, 10.0427, 2.28 ) }
    dend_36 { pt3dadd( -26.1955, -109.931, 10.0258, 2.5 ) }
    dend_36 { pt3dadd( -26.3512, -111.04, 10.089, 0.29 ) }
    dend_36 { pt3dadd( -26.5057, -111.81, 10.1877, 0.29 ) }
    dend_36 { pt3dadd( -26.6755, -112.574, 10.3096, 0.29 ) }
    dend_36 { pt3dadd( -26.8667, -113.445, 10.4638, 2.06 ) }
    dend_36 { pt3dadd( -26.9973, -114.08, 10.5791, 2.65 ) }
    dend_36 { pt3dadd( -27.2373, -115.445, 10.8176, 0.29 ) }
    dend_36 { pt3dadd( -27.3288, -116.111, 10.9275, 0.22 ) }
    dend_36 { pt3dadd( -27.383, -116.641, 11.0135, 0.22 ) }
    dend_36 { pt3dadd( -27.4164, -117.068, 11.0733, 0.88 ) }
    dend_36 { pt3dadd( -27.4341, -117.376, 11.1063, 1.18 ) }
    dend_36 { pt3dadd( -27.4402, -117.63, 11.1279, 1.18 ) }
    dend_36 { pt3dadd( -27.4293, -118.374, 11.1538, 0.22 ) }
    dend_36 { pt3dadd( -27.4078, -118.731, 11.1686, 0.22 ) }
    dend_36 { pt3dadd( -27.3704, -119.156, 11.2017, 0.22 ) }
    dend_36 { pt3dadd( -27.327, -119.531, 11.2317, 1.25 ) }
    dend_36 { pt3dadd( -27.253, -119.892, 11.2631, 1.25 ) }
    dend_36 { pt3dadd( -26.9942, -120.901, 11.3363, 0.22 ) }
    dend_36 { pt3dadd( -26.8003, -121.439, 11.3426, 0.22 ) }
    dend_36 { pt3dadd( -26.4621, -122.189, 11.291, 1.11 ) }
    dend_36 { pt3dadd( -26.2891, -122.518, 11.2448, 1.55 ) }
    dend_36 { pt3dadd( -25.7116, -123.509, 11.0383, 0.22 ) }
    dend_36 { pt3dadd( -25.3124, -124.098, 10.8467, 0.22 ) }
    dend_36 { pt3dadd( -24.6868, -124.866, 10.4556, 0.22 ) }
    dend_36 { pt3dadd( -24.2641, -125.323, 10.1569, 1.69 ) }
    dend_36 { pt3dadd( -24.1022, -125.472, 10.0214, 1.99 ) }
    dend_36 { pt3dadd( -24.0709, -125.497, 9.99297, 1.99 ) }
    dend_36 { pt3dadd( -23.4506, -125.918, 9.2698, 0.29 ) }
    dend_36 { pt3dadd( -22.9368, -126.22, 8.61195, 0.29 ) }
    dend_36 { pt3dadd( -22.9099, -126.235, 8.57309, 0.29 ) }
    dend_36 { pt3dadd( -22.428, -126.503, 7.85915, 1.4 ) }
    dend_36 { pt3dadd( -22.1805, -126.634, 7.47642, 1.62 ) }
    dend_36 { pt3dadd( -21.3626, -127.044, 6.13539, 0.22 ) }
    dend_36 { pt3dadd( -21.3398, -127.054, 6.09295, 0.22 ) }
    dend_36 { pt3dadd( -21.0374, -127.155, 5.45175, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -28.2293, -100.711, 14.0958, 0.29 ) }
    dend_35 { pt3dadd( -28.4866, -102.9, 14.1982, 0.29 ) }
    dend_35 { pt3dadd( -28.6517, -104.331, 14.2589, 0.29 ) }
    dend_35 { pt3dadd( -28.7284, -104.973, 14.2807, 0.74 ) }
    dend_35 { pt3dadd( -28.8877, -106.126, 14.3075, 0.81 ) }
    dend_35 { pt3dadd( -28.9946, -106.851, 14.3182, 1.11 ) }
    dend_35 { pt3dadd( -29.1557, -107.887, 14.3216, 0.44 ) }
    dend_35 { pt3dadd( -29.3126, -108.765, 14.2969, 0.29 ) }
    dend_35 { pt3dadd( -29.5077, -109.833, 14.2577, 0.29 ) }
    dend_35 { pt3dadd( -29.7783, -111.345, 14.1837, 2.21 ) }
    dend_35 { pt3dadd( -29.9032, -112.042, 14.127, 2.73 ) }
    dend_35 { pt3dadd( -30.2304, -113.968, 13.8994, 0.29 ) }
    dend_35 { pt3dadd( -30.3516, -114.708, 13.7816, 0.29 ) }
    dend_35 { pt3dadd( -30.4661, -115.529, 13.6262, 0.81 ) }
    dend_35 { pt3dadd( -30.4846, -115.696, 13.5892, 0.96 ) }
    dend_35 { pt3dadd( -30.5533, -116.812, 13.3182, 0.22 ) }
    dend_35 { pt3dadd( -30.5841, -117.79, 13.0806, 0.22 ) }
    dend_35 { pt3dadd( -30.5818, -118.404, 12.936, 1.33 ) }
    dend_35 { pt3dadd( -30.578, -118.939, 12.8478, 1.62 ) }
    dend_35 { pt3dadd( -30.5794, -119.024, 12.8397, 1.62 ) }
    dend_35 { pt3dadd( -30.6136, -120.238, 12.8071, 0.29 ) }
    dend_35 { pt3dadd( -30.6282, -121.119, 12.8278, 0.22 ) }
    dend_35 { pt3dadd( -30.6264, -121.938, 12.8646, 0.22 ) }
    dend_35 { pt3dadd( -30.6101, -122.835, 12.9135, 1.11 ) }
    dend_35 { pt3dadd( -30.593, -123.543, 12.958, 1.47 ) }
    dend_35 { pt3dadd( -30.5513, -124.813, 13.1155, 0.22 ) }
    dend_35 { pt3dadd( -30.524, -125.685, 13.2959, 0.22 ) }
    dend_35 { pt3dadd( -30.494, -126.579, 13.5316, 0.74 ) }
    dend_35 { pt3dadd( -30.4983, -126.825, 13.6144, 0.74 ) }
    dend_35 { pt3dadd( -30.5028, -126.893, 13.642, 0.74 ) }
    dend_35 { pt3dadd( -30.7659, -128.925, 14.654, 0.22 ) }
    dend_35 { pt3dadd( -30.9707, -130.057, 15.2824, 1.99 ) }
    dend_35 { pt3dadd( -31.055, -130.44, 15.507, 1.99 ) }
    dend_35 { pt3dadd( -31.4392, -132.074, 16.5575, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_35 { pt3dadd( -31.8307, -133.708, 17.6624, 0.22 ) }
    dend_35 { pt3dadd( -32.1266, -134.869, 18.4727, 1.84 ) }
    dend_35 { pt3dadd( -32.1853, -135.084, 18.6255, 1.99 ) }
    dend_35 { pt3dadd( -32.2244, -135.228, 18.7321, 1.99 ) }
    dend_35 { pt3dadd( -32.7673, -137.322, 20.3429, 0.22 ) }
    dend_35 { pt3dadd( -32.9017, -137.921, 20.8214, 0.96 ) }
    dend_35 { pt3dadd( -33.1139, -138.866, 21.6073, 0.22 ) }
    dend_35 { pt3dadd( -33.1932, -139.275, 21.9483, 0.74 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 8/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -36.2563, -78.4245, -128.727, 0.29 ) }
    dend_27 { pt3dadd( -35.8597, -79.632, -128.68, 0.29 ) }
    dend_27 { pt3dadd( -35.4397, -80.966, -128.656, 0.22 ) }
    dend_27 { pt3dadd( -35.3119, -81.445, -128.653, 0.52 ) }
    dend_27 { pt3dadd( -35.2306, -81.8643, -128.663, 0.52 ) }
    dend_27 { pt3dadd( -35.0979, -82.8268, -128.7, 0.22 ) }
    dend_27 { pt3dadd( -35.0063, -83.6379, -128.736, 0.22 ) }
    dend_27 { pt3dadd( -34.9842, -84.319, -128.789, 0.81 ) }
    dend_27 { pt3dadd( -34.9825, -84.9617, -128.845, 1.11 ) }
    dend_27 { pt3dadd( -35.0132, -86.1059, -128.925, 0.22 ) }
    dend_27 { pt3dadd( -35.0554, -86.7995, -128.965, 0.22 ) }
    dend_27 { pt3dadd( -35.1348, -87.5787, -128.998, 0.22 ) }
    dend_27 { pt3dadd( -35.2126, -88.1512, -129.033, 1.11 ) }
    dend_27 { pt3dadd( -35.3688, -89.3266, -129.113, 0.22 ) }
    dend_27 { pt3dadd( -35.5261, -90.7561, -129.213, 0.22 ) }
    dend_27 { pt3dadd( -35.5935, -91.5865, -129.268, 1.33 ) }
    dend_27 { pt3dadd( -35.6025, -91.8924, -129.298, 1.47 ) }
    dend_27 { pt3dadd( -35.5918, -93.5794, -129.508, 0.22 ) }
    dend_27 { pt3dadd( -35.5234, -94.3217, -129.627, 1.11 ) }
    dend_27 { pt3dadd( -35.4262, -94.8468, -129.735, 1.47 ) }
    dend_27 { pt3dadd( -35.2919, -95.3435, -129.854, 1.47 ) }
    dend_27 { pt3dadd( -34.7657, -96.8148, -130.23, 0.15 ) }
    dend_27 { pt3dadd( -34.7416, -96.8675, -130.245, 0.15 ) }
    dend_27 { pt3dadd( -34.1581, -97.7435, -130.514, 0.88 ) }
    dend_27 { pt3dadd( -34.1242, -97.7901, -130.531, 0.88 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 33/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -36.2563, -78.4245, -128.727, 1.69 ) }
    dend_26 { pt3dadd( -37.4933, -79.6377, -129.003, 1.69 ) }
    dend_26 { pt3dadd( -38.8394, -80.5976, -129.392, 0.22 ) }
    dend_26 { pt3dadd( -38.9071, -80.6393, -129.413, 0.22 ) }
    dend_26 { pt3dadd( -40.1907, -81.3863, -129.797, 0.22 ) }
    dend_26 { pt3dadd( -41.2523, -81.9842, -130.177, 0.88 ) }
    dend_26 { pt3dadd( -42.2194, -82.5179, -130.554, 1.11 ) }
    dend_26 { pt3dadd( -43.8692, -83.2361, -131.236, 0.22 ) }
    dend_26 { pt3dadd( -44.5404, -83.4744, -131.512, 0.52 ) }
    dend_26 { pt3dadd( -44.7611, -83.534, -131.605, 0.52 ) }
    dend_26 { pt3dadd( -46.3736, -83.7545, -132.386, 0.37 ) }
    dend_26 { pt3dadd( -46.4458, -83.7622, -132.422, 0.29 ) }
    dend_26 { pt3dadd( -47.1843, -83.8527, -132.75, 0.22 ) }
    dend_26 { pt3dadd( -47.5675, -83.913, -132.909, 0.37 ) }
    dend_26 { pt3dadd( -48.3935, -84.0535, -133.303, 0.37 ) }
    dend_26 { pt3dadd( -49.7182, -84.4536, -134.272, 0.29 ) }
    dend_26 { pt3dadd( -50.6708, -84.8999, -135.13, 0.29 ) }
    dend_26 { pt3dadd( -51.4238, -85.3542, -135.922, 0.22 ) }
    dend_26 { pt3dadd( -52.3971, -86.1606, -137.152, 1.11 ) }
    dend_26 { pt3dadd( -53.0263, -86.8052, -138.057, 1.33 ) }
    dend_26 { pt3dadd( -54.8023, -88.7971, -140.81, 0.29 ) }
    dend_26 { pt3dadd( -55.2621, -89.3924, -141.616, 0.59 ) }
    dend_26 { pt3dadd( -55.2873, -89.4294, -141.669, 0.59 ) }
    dend_26 { pt3dadd( -55.8858, -90.4475, -143.169, 0.29 ) }
    dend_26 { pt3dadd( -55.9086, -90.494, -143.232, 0.29 ) }
    dend_26 { pt3dadd( -56.6122, -91.8587, -144.853, 0.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 59/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -32.8221, 166.956, -64.8602, 0.22 ) }
    dend_18 { pt3dadd( -33.2369, 170.047, -68.7734, 0.22 ) }
    dend_18 { pt3dadd( -33.3269, 171.084, -70.0582, 0.37 ) }
    dend_18 { pt3dadd( -33.3444, 171.657, -70.7215, 0.15 ) }
    dend_18 { pt3dadd( -33.3406, 172.083, -71.2408, 0.44 ) }
    dend_18 { pt3dadd( -33.3346, 173.049, -72.4303, 0.22 ) }
    dend_18 { pt3dadd( -33.3671, 174.314, -73.9847, 1.25 ) }
    dend_18 { pt3dadd( -33.3594, 175.921, -75.7366, 0.22 ) }
    dend_18 { pt3dadd( -33.4076, 176.673, -76.5904, 1.03 ) }
    dend_18 { pt3dadd( -33.6346, 178.564, -78.7781, 0.22 ) }
    dend_18 { pt3dadd( -33.6948, 178.931, -79.2028, 0.22 ) }
    dend_18 { pt3dadd( -33.9075, 180.001, -80.38, 1.11 ) }
    dend_18 { pt3dadd( -33.9902, 180.357, -80.7357, 1.4 ) }
    dend_18 { pt3dadd( -34.4044, 182.04, -82.171, 0.22 ) }
    dend_18 { pt3dadd( -34.4999, 182.429, -82.4667, 0.59 ) }
    dend_18 { pt3dadd( -34.8633, 184.311, -83.5766, 0.22 ) }
    dend_18 { pt3dadd( -34.9616, 185.001, -83.934, 0.88 ) }
    dend_18 { pt3dadd( -35.0061, 185.56, -84.1546, 1.03 ) }
    dend_18 { pt3dadd( -35.0913, 187.024, -84.5967, 0.22 ) }
    dend_18 { pt3dadd( -35.1072, 187.774, -84.7445, 0.59 ) }
    dend_18 { pt3dadd( -35.1303, 189.192, -84.9448, 0.22 ) }
    dend_18 { pt3dadd( -35.1189, 190.18, -85.0497, 0.22 ) }
    dend_18 { pt3dadd( -35.0565, 191.872, -85.2612, 1.47 ) }
    dend_18 { pt3dadd( -35.0242, 192.356, -85.3265, 1.47 ) }
    dend_18 { pt3dadd( -34.8969, 193.66, -85.5761, 0.22 ) }
    dend_18 { pt3dadd( -34.8236, 194.305, -85.7491, 0.52 ) }
    dend_18 { pt3dadd( -34.6168, 196.04, -86.3105, 0.22 ) }
    dend_18 { pt3dadd( -34.5544, 196.542, -86.4938, 1.03 ) }
    dend_18 { pt3dadd( -34.5179, 196.867, -86.6302, 1.03 ) }
    dend_18 { pt3dadd( -34.1901, 200.357, -88.2113, 0.22 ) }
    dend_18 { pt3dadd( -34.1002, 201.422, -88.7048, 0.96 ) }
    dend_18 { pt3dadd( -34.0622, 201.973, -88.9644, 0.96 ) }
    dend_18 { pt3dadd( -34.0595, 202.047, -88.9988, 0.96 ) }
    dend_18 { pt3dadd( -34.0179, 203.937, -89.9231, 0.22 ) }
    dend_18 { pt3dadd( -34.0091, 204.988, -90.4704, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -32.8221, 166.956, -64.8602, 0.22 ) }
    dend_17 { pt3dadd( -34.2956, 167.32, -66.8308, 0.22 ) }
    dend_17 { pt3dadd( -36.7044, 167.751, -70.0014, 0.15 ) }
    dend_17 { pt3dadd( -38.4991, 168.007, -72.3065, 1.4 ) }
    dend_17 { pt3dadd( -39.9675, 168.217, -74.1923, 1.4 ) }
    dend_17 { pt3dadd( -41.8271, 168.482, -76.5807, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -42.5574, 168.587, -77.5187, 0.22 ) }
    dend_17 { pt3dadd( -43.4222, 168.641, -78.7513, 0.88 ) }
    dend_17 { pt3dadd( -43.6929, 168.626, -79.0924, 0.88 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -46.8117, 157.093, -82.1565, 0.66 ) }
    dend_5 { pt3dadd( -49.0815, 156.873, -90.5221, 0.66 ) }
    dend_5 { pt3dadd( -49.4208, 156.947, -91.6118, 0.29 ) }
    dend_5 { pt3dadd( -49.6275, 157.062, -92.1928, 0.22 ) }
    dend_5 { pt3dadd( -49.9863, 157.329, -93.0917, 0.22 ) }
    dend_5 { pt3dadd( -50.3147, 157.609, -93.8523, 1.03 ) }
    dend_5 { pt3dadd( -50.6153, 157.871, -94.4751, 1.47 ) }
    dend_5 { pt3dadd( -51.4601, 158.948, -95.1403, 0.88 ) }
    dend_5 { pt3dadd( -52.2691, 159.906, -95.7859, 0.22 ) }
    dend_5 { pt3dadd( -52.5224, 160.135, -95.9997, 0.29 ) }
    dend_5 { pt3dadd( -52.6014, 160.181, -96.0598, 0.29 ) }
    dend_5 { pt3dadd( -53.223, 160.421, -96.501, 0.15 ) }
    dend_5 { pt3dadd( -53.9551, 160.594, -97.0213, 0.96 ) }
    dend_5 { pt3dadd( -54.6542, 160.692, -97.4837, 1.4 ) }
    dend_5 { pt3dadd( -56.0289, 160.841, -98.5753, 0.22 ) }
    dend_5 { pt3dadd( -56.9601, 160.981, -99.461, 0.22 ) }
    dend_5 { pt3dadd( -57.6865, 161.134, -100.398, 0.74 ) }
    dend_5 { pt3dadd( -58.6257, 161.395, -101.838, 0.22 ) }
    dend_5 { pt3dadd( -58.9423, 161.5, -102.391, 0.96 ) }
    dend_5 { pt3dadd( -59.9887, 161.929, -104.501, 1.33 ) }
    dend_5 { pt3dadd( -60.4288, 162.167, -105.457, 1.84 ) }
    dend_5 { pt3dadd( -61.9344, 163.104, -109.032, 0.88 ) }
    dend_5 { pt3dadd( -62.154, 163.238, -109.552, 1.03 ) }
    dend_5 { pt3dadd( -62.1896, 163.259, -109.629, 1.03 ) }
    dend_5 { pt3dadd( -63.4439, 163.918, -112.149, 0.22 ) }
    dend_5 { pt3dadd( -64.1922, 164.263, -113.418, 1.33 ) }
    dend_5 { pt3dadd( -66.1353, 165.025, -116.221, 0.22 ) }
    dend_5 { pt3dadd( -67.0047, 165.322, -117.234, 1.33 ) }
    dend_5 { pt3dadd( -68.0033, 165.593, -118.26, 0.22 ) }
    dend_5 { pt3dadd( -68.0522, 165.603, -118.302, 0.22 ) }
    dend_5 { pt3dadd( -69.0957, 165.663, -118.968, 0.22 ) }
    dend_5 { pt3dadd( -70.1086, 165.592, -119.457, 1.4 ) }
    dend_5 { pt3dadd( -70.7464, 165.5, -119.614, 1.84 ) }
    dend_5 { pt3dadd( -71.6078, 165.29, -119.775, 1.33 ) }
    dend_5 { pt3dadd( -72.6819, 164.933, -119.972, 0.81 ) }
    dend_5 { pt3dadd( -73.6347, 164.556, -120.149, 0.22 ) }
    dend_5 { pt3dadd( -74.5172, 164.087, -120.325, 1.4 ) }
    dend_5 { pt3dadd( -74.9983, 163.791, -120.422, 1.69 ) }
    dend_5 { pt3dadd( -75.2943, 163.599, -120.476, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 42/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -46.8117, 157.093, -82.1565, 0.29 ) }
    dend_4 { pt3dadd( -47.9858, 159.476, -85.936, 0.29 ) }
    dend_4 { pt3dadd( -48.325, 160.184, -86.939, 0.22 ) }
    dend_4 { pt3dadd( -48.4875, 160.578, -87.4381, 0.96 ) }
    dend_4 { pt3dadd( -48.5948, 160.86, -87.7741, 1.18 ) }
    dend_4 { pt3dadd( -49.0019, 162.042, -89.0557, 0.22 ) }
    dend_4 { pt3dadd( -49.1319, 162.445, -89.4666, 0.52 ) }
    dend_4 { pt3dadd( -49.2054, 162.701, -89.6227, 0.52 ) }
    dend_4 { pt3dadd( -49.736, 164.465, -90.5871, 0.22 ) }
    dend_4 { pt3dadd( -49.7574, 164.53, -90.6174, 0.22 ) }
    dend_4 { pt3dadd( -50.047, 165.366, -90.9296, 0.22 ) }
    dend_4 { pt3dadd( -50.0721, 165.434, -90.946, 0.22 ) }
    dend_4 { pt3dadd( -50.7566, 167.022, -91.2055, 0.22 ) }
    dend_4 { pt3dadd( -50.7891, 167.089, -91.2109, 0.22 ) }
    dend_4 { pt3dadd( -51.4841, 168.473, -91.3136, 0.22 ) }
    dend_4 { pt3dadd( -51.515, 168.54, -91.3216, 0.22 ) }
    dend_4 { pt3dadd( -51.8227, 169.261, -91.4334, 0.44 ) }
    dend_4 { pt3dadd( -52.4392, 170.88, -91.7134, 0.15 ) }
    dend_4 { pt3dadd( -53.1487, 173.128, -92.2052, 0.15 ) }
    dend_4 { pt3dadd( -53.7032, 175.147, -92.697, 0.15 ) }
    dend_4 { pt3dadd( -54.0488, 176.668, -93.1059, 0.15 ) }
    dend_4 { pt3dadd( -54.2478, 177.722, -93.4302, 0.88 ) }
    dend_4 { pt3dadd( -54.353, 178.467, -93.6858, 1.25 ) }
    dend_4 { pt3dadd( -54.4997, 180.427, -94.4288, 0.22 ) }
    dend_4 { pt3dadd( -54.5098, 180.931, -94.6307, 0.59 ) }
    dend_4 { pt3dadd( -54.5098, 181.475, -94.8323, 0.59 ) }
    dend_4 { pt3dadd( -54.5164, 183.272, -95.4653, 0.22 ) }
    dend_4 { pt3dadd( -54.52, 183.94, -95.6877, 0.22 ) }
    dend_4 { pt3dadd( -54.5257, 184.24, -95.784, 0.66 ) }
    dend_4 { pt3dadd( -54.5419, 184.846, -95.9515, 0.74 ) }
    dend_4 { pt3dadd( -54.5768, 186.649, -96.2864, 0.15 ) }
    dend_4 { pt3dadd( -54.6017, 187.724, -96.3776, 0.15 ) }
    dend_4 { pt3dadd( -54.603, 187.788, -96.3768, 0.15 ) }
    dend_4 { pt3dadd( -54.6188, 188.611, -96.3412, 0.52 ) }
    dend_4 { pt3dadd( -54.6308, 189.309, -96.2635, 0.52 ) }
    dend_4 { pt3dadd( -54.6888, 191.339, -95.8957, 0.22 ) }
    dend_4 { pt3dadd( -54.7603, 192.543, -95.5758, 1.03 ) }
    dend_4 { pt3dadd( -54.8285, 193.202, -95.3715, 1.03 ) }
    dend_4 { pt3dadd( -54.8438, 193.282, -95.3451, 1.03 ) }
    dend_4 { pt3dadd( -55.2031, 194.433, -94.9379, 0.15 ) }
    dend_4 { pt3dadd( -55.4356, 194.908, -94.7861, 0.52 ) }
    dend_4 { pt3dadd( -55.7181, 195.301, -94.6968, 0.52 ) }
    dend_4 { pt3dadd( -56.3051, 195.996, -94.5318, 0.22 ) }
    dend_4 { pt3dadd( -57.0851, 196.824, -94.3492, 0.22 ) }
    dend_4 { pt3dadd( -57.4821, 197.216, -94.2813, 0.22 ) }
    dend_4 { pt3dadd( -57.9779, 197.645, -94.2527, 0.59 ) }
    dend_4 { pt3dadd( -58.5624, 198.154, -94.22, 0.81 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 8.36397, -70.4307, -4.84875, 0.37 ) }
    dend_46 { pt3dadd( 7.35749, -72.3021, -4.54745, 0.37 ) }
    dend_46 { pt3dadd( 6.9162, -73.0794, -4.3038, 0.74 ) }
    dend_46 { pt3dadd( 5.85908, -74.8954, -3.55451, 0.22 ) }
    dend_46 { pt3dadd( 5.32068, -75.7993, -3.1389, 0.81 ) }
    dend_46 { pt3dadd( 5.00221, -76.3239, -2.86753, 0.81 ) }
    dend_46 { pt3dadd( 3.83296, -78.2172, -1.79457, 1.47 ) }
    dend_46 { pt3dadd( 2.98428, -79.5278, -0.864127, 2.06 ) }
    dend_46 { pt3dadd( 2.03328, -81.0481, 0.398835, 0.22 ) }
    dend_46 { pt3dadd( 1.72876, -81.5641, 0.858143, 0.52 ) }
    dend_46 { pt3dadd( 1.1734, -82.5044, 1.72395, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_46 { pt3dadd( 0.661664, -83.3748, 2.52455, 1.77 ) }
    dend_46 { pt3dadd( 0.0453469, -84.4345, 3.46772, 2.43 ) }
    dend_46 { pt3dadd( -1.66131, -87.3634, 5.98469, 0.22 ) }
    dend_46 { pt3dadd( -1.86827, -87.7231, 6.29533, 0.59 ) }
    dend_46 { pt3dadd( -2.17531, -88.2673, 6.75243, 0.22 ) }
    dend_46 { pt3dadd( -2.35164, -88.583, 7.00086, 0.44 ) }
    dend_46 { pt3dadd( -2.93404, -89.6188, 7.76686, 0.15 ) }
    dend_46 { pt3dadd( -3.42979, -90.4298, 8.29215, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 8/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 8.36397, -70.4307, -4.84875, 0.29 ) }
    dend_41 { pt3dadd( 7.24976, -71.8881, -5.57704, 0.29 ) }
    dend_41 { pt3dadd( 6.71078, -72.6233, -5.94067, 0.29 ) }
    dend_41 { pt3dadd( 6.16895, -73.3744, -6.30662, 0.29 ) }
    dend_41 { pt3dadd( 5.50371, -74.288, -6.6658, 0.29 ) }
    dend_41 { pt3dadd( 4.87127, -75.1416, -6.95185, 0.29 ) }
    dend_41 { pt3dadd( 4.38808, -75.7953, -7.15365, 1.77 ) }
    dend_41 { pt3dadd( 3.82004, -76.5343, -7.3015, 2.21 ) }
    dend_41 { pt3dadd( 3.62519, -76.7967, -7.34604, 2.36 ) }
    dend_41 { pt3dadd( 2.73769, -78.0768, -7.5231, 0.74 ) }
    dend_41 { pt3dadd( 2.25712, -78.7263, -7.6046, 0.29 ) }
    dend_41 { pt3dadd( 1.72706, -79.3953, -7.7076, 0.29 ) }
    dend_41 { pt3dadd( 0.988476, -80.2798, -7.86634, 1.92 ) }
    dend_41 { pt3dadd( 0.533756, -80.801, -7.9794, 2.28 ) }
    dend_41 { pt3dadd( 0.192661, -81.1855, -8.09811, 2.28 ) }
    dend_41 { pt3dadd( -0.798236, -82.315, -8.56241, 0.29 ) }
    dend_41 { pt3dadd( -1.59337, -83.2502, -8.96984, 0.22 ) }
    dend_41 { pt3dadd( -1.85959, -83.5734, -9.12054, 0.96 ) }
    dend_41 { pt3dadd( -2.02127, -83.7986, -9.2707, 1.18 ) }
    dend_41 { pt3dadd( -2.50318, -84.5734, -9.89203, 0.22 ) }
    dend_41 { pt3dadd( -2.61295, -84.8001, -10.1681, 0.22 ) }
    dend_41 { pt3dadd( -2.70585, -85.0436, -10.5426, 0.22 ) }
    dend_41 { pt3dadd( -2.84436, -85.3688, -11.1178, 0.66 ) }
    dend_41 { pt3dadd( -3.36621, -86.3802, -13.2104, 1.62 ) }
    dend_41 { pt3dadd( -3.44246, -86.4864, -13.4854, 2.14 ) }
    dend_41 { pt3dadd( -4.36474, -87.3448, -16.2733, 0.37 ) }
    dend_41 { pt3dadd( -4.69544, -87.5563, -17.1185, 0.37 ) }
    dend_41 { pt3dadd( -5.00622, -87.6796, -17.8249, 1.47 ) }
    dend_41 { pt3dadd( -5.46767, -87.7633, -18.7922, 1.47 ) }
    dend_41 { pt3dadd( -6.41953, -87.7983, -20.5299, 0.22 ) }
    dend_41 { pt3dadd( -6.90195, -87.7701, -21.3428, 1.25 ) }
    dend_41 { pt3dadd( -7.13518, -87.7368, -21.6851, 1.84 ) }
    dend_41 { pt3dadd( -7.8983, -87.613, -22.8402, 1.84 ) }
    dend_41 { pt3dadd( -9.56827, -87.4049, -25.4647, 0.22 ) }
    dend_41 { pt3dadd( -9.86272, -87.3797, -25.9153, 0.88 ) }
    dend_41 { pt3dadd( -10.2864, -87.3698, -26.602, 0.88 ) }
    dend_41 { pt3dadd( -10.6733, -87.4007, -27.27, 0.22 ) }
    dend_41 { pt3dadd( -11.3072, -87.5189, -28.3527, 0.22 ) }
    dend_41 { pt3dadd( -11.747, -87.6576, -29.1092, 1.03 ) }
    dend_41 { pt3dadd( -11.8891, -87.7196, -29.3669, 1.03 ) }
    dend_41 { pt3dadd( -12.5774, -88.1175, -31.0417, 0.22 ) }
    dend_41 { pt3dadd( -12.7648, -88.2638, -31.5927, 0.22 ) }
    dend_41 { pt3dadd( -13.1064, -88.5932, -32.7459, 1.25 ) }
    dend_41 { pt3dadd( -13.4446, -88.9337, -33.8675, 1.18 ) }
    dend_41 { pt3dadd( -13.4631, -88.9562, -33.9337, 1.18 ) }
    dend_41 { pt3dadd( -13.9673, -89.7684, -36.0483, 0.22 ) }
    dend_41 { pt3dadd( -14.0713, -90.0149, -36.5973, 1.18 ) }
    dend_41 { pt3dadd( -14.1261, -90.2252, -37.0225, 1.18 ) }
    dend_41 { pt3dadd( -14.1304, -91.0273, -38.4254, 0.22 ) }
    dend_41 { pt3dadd( -14.1112, -91.2235, -38.755, 0.22 ) }
    dend_41 { pt3dadd( -14.0474, -91.6611, -39.5466, 0.66 ) }
    dend_41 { pt3dadd( -14.0166, -91.8759, -39.9176, 0.81 ) }
    dend_41 { pt3dadd( -13.9866, -92.0584, -40.2415, 0.81 ) }
    dend_41 { pt3dadd( -13.7957, -92.902, -41.8873, 0.52 ) }
    dend_41 { pt3dadd( -13.555, -93.8239, -43.6461, 0.22 ) }
    dend_41 { pt3dadd( -13.3766, -94.6031, -45.1127, 0.22 ) }
    dend_41 { pt3dadd( -13.2817, -95.0857, -46.0087, 2.21 ) }
    dend_41 { pt3dadd( -13.2203, -95.5617, -46.8649, 2.28 ) }
    dend_41 { pt3dadd( -13.1194, -97.5514, -50.2504, 0.22 ) }
    dend_41 { pt3dadd( -13.1452, -98.0062, -50.9551, 0.22 ) }
    dend_41 { pt3dadd( -13.2455, -98.8776, -52.1805, 0.22 ) }
    dend_41 { pt3dadd( -13.2541, -98.9146, -52.2297, 0.22 ) }
    dend_41 { pt3dadd( -13.5054, -99.4949, -52.9953, 0.37 ) }
    dend_41 { pt3dadd( -13.8079, -99.893, -53.4582, 0.88 ) }
    dend_41 { pt3dadd( -14.5738, -100.569, -54.0972, 1.69 ) }
    dend_41 { pt3dadd( -15.0364, -100.934, -54.4663, 2.21 ) }
    dend_41 { pt3dadd( -15.7722, -101.503, -55.0208, 2.21 ) }
    dend_41 { pt3dadd( -16.3918, -102.012, -55.518, 1.11 ) }
    dend_41 { pt3dadd( -16.9038, -102.496, -55.9789, 0.37 ) }
    dend_41 { pt3dadd( -16.9372, -102.536, -56.0125, 0.37 ) }
    dend_41 { pt3dadd( -17.5053, -103.411, -56.6187, 0.37 ) }
    dend_41 { pt3dadd( -17.7267, -103.808, -56.8393, 0.74 ) }
    dend_41 { pt3dadd( -17.7918, -103.938, -56.8949, 0.74 ) }
    dend_41 { pt3dadd( -18.0787, -104.526, -57.1155, 0.66 ) }
    dend_41 { pt3dadd( -18.4914, -105.33, -57.3924, 0.66 ) }
    dend_41 { pt3dadd( -18.8246, -105.933, -57.6042, 0.52 ) }
    dend_41 { pt3dadd( -19.5401, -107.124, -58.0178, 0.22 ) }
    dend_41 { pt3dadd( -20.0601, -107.985, -58.3234, 1.47 ) }
    dend_41 { pt3dadd( -20.4007, -108.609, -58.5793, 1.92 ) }
    dend_41 { pt3dadd( -20.6759, -109.138, -58.8238, 2.14 ) }
    dend_41 { pt3dadd( -21.064, -109.967, -59.2567, 0.74 ) }
    dend_41 { pt3dadd( -21.3011, -110.577, -59.6037, 0.29 ) }
    dend_41 { pt3dadd( -21.5167, -111.266, -60.0489, 0.29 ) }
    dend_41 { pt3dadd( -21.9055, -112.665, -60.9983, 0.29 ) }
    dend_41 { pt3dadd( -22.0308, -113.207, -61.3496, 1.33 ) }
    dend_41 { pt3dadd( -22.1788, -113.896, -61.7812, 1.33 ) }
    dend_41 { pt3dadd( -22.2386, -114.165, -61.9343, 1.33 ) }
    dend_41 { pt3dadd( -22.5027, -115.246, -62.5702, 0.29 ) }
    dend_41 { pt3dadd( -22.6739, -115.798, -62.8958, 0.29 ) }
    dend_41 { pt3dadd( -23.0799, -116.866, -63.5231, 0.29 ) }
    dend_41 { pt3dadd( -23.1021, -116.924, -63.5594, 0.29 ) }
    dend_41 { pt3dadd( -23.3886, -117.667, -64.0212, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( -23.7961, -118.658, -64.658, 1.18 ) }
    dend_41 { pt3dadd( -23.9116, -118.932, -64.8388, 1.33 ) }
    dend_41 { pt3dadd( -24.3602, -120.031, -65.577, 0.22 ) }
    dend_41 { pt3dadd( -24.3831, -120.089, -65.6153, 0.22 ) }
    dend_41 { pt3dadd( -24.5846, -120.704, -65.9814, 0.88 ) }
    dend_41 { pt3dadd( -24.6817, -121.087, -66.1751, 0.88 ) }
    dend_41 { pt3dadd( -24.904, -122.349, -66.6557, 0.22 ) }
    dend_41 { pt3dadd( -25.0068, -123.065, -66.907, 1.33 ) }
    dend_41 { pt3dadd( -25.0582, -123.418, -67.0176, 1.77 ) }
    dend_41 { pt3dadd( -25.2066, -124.317, -67.2982, 0.88 ) }
    dend_41 { pt3dadd( -25.3549, -125.105, -67.5429, 0.22 ) }
    dend_41 { pt3dadd( -25.5554, -125.949, -67.7908, 0.59 ) }
    dend_41 { pt3dadd( -25.9508, -127.258, -68.1456, 0.22 ) }
    dend_41 { pt3dadd( -26.2739, -128.202, -68.3915, 0.22 ) }
    dend_41 { pt3dadd( -26.5236, -128.856, -68.5523, 1.18 ) }
    dend_41 { pt3dadd( -26.7015, -129.262, -68.6477, 1.18 ) }
    dend_41 { pt3dadd( -27.1929, -130.249, -68.8831, 0.15 ) }
    dend_41 { pt3dadd( -27.5036, -130.826, -69.031, 0.15 ) }
    dend_41 { pt3dadd( -27.928, -131.624, -69.2312, 0.88 ) }
    dend_41 { pt3dadd( -28.0968, -131.946, -69.3197, 1.11 ) }
    dend_41 { pt3dadd( -28.5155, -132.771, -69.6814, 0.37 ) }
    dend_41 { pt3dadd( -28.8862, -133.543, -70.1304, 0.22 ) }
    dend_41 { pt3dadd( -29.1114, -134.097, -70.5165, 1.18 ) }
    dend_41 { pt3dadd( -29.2634, -134.505, -70.8368, 1.18 ) }
    dend_41 { pt3dadd( -29.2833, -134.557, -70.8835, 1.18 ) }
    dend_41 { pt3dadd( -29.9143, -136.252, -72.4727, 0.22 ) }
    dend_41 { pt3dadd( -29.9447, -136.333, -72.552, 0.37 ) }
    dend_41 { pt3dadd( -30.1768, -136.943, -73.1877, 0.15 ) }
    dend_41 { pt3dadd( -30.2844, -137.214, -73.464, 0.59 ) }
    dend_41 { pt3dadd( -30.7443, -138.293, -74.4946, 0.22 ) }
    dend_41 { pt3dadd( -30.9741, -138.825, -74.9407, 1.03 ) }
    dend_41 { pt3dadd( -31.0645, -139.031, -75.0842, 1.03 ) }
    dend_41 { pt3dadd( -31.6412, -140.47, -75.9649, 0.22 ) }
    dend_41 { pt3dadd( -31.7697, -140.805, -76.1462, 0.52 ) }
    dend_41 { pt3dadd( -32.1129, -141.762, -76.5637, 0.22 ) }
    dend_41 { pt3dadd( -32.3045, -142.33, -76.7535, 1.03 ) }
    dend_41 { pt3dadd( -32.4316, -142.698, -76.8539, 1.03 ) }
    dend_41 { pt3dadd( -32.9408, -144.096, -77.2011, 0.15 ) }
    dend_41 { pt3dadd( -33.1416, -144.599, -77.3059, 0.44 ) }
    dend_41 { pt3dadd( -33.5095, -145.524, -77.5151, 0.15 ) }
    dend_41 { pt3dadd( -33.6865, -145.981, -77.6253, 0.88 ) }
    dend_41 { pt3dadd( -33.8912, -146.589, -77.8139, 0.88 ) }
    dend_41 { pt3dadd( -34.2166, -147.789, -78.249, 0.22 ) }
    dend_41 { pt3dadd( -34.4217, -148.838, -78.8592, 0.22 ) }
    dend_41 { pt3dadd( -34.4695, -149.102, -79.0671, 0.66 ) }
    dend_41 { pt3dadd( -34.5148, -149.342, -79.2637, 0.66 ) }
    dend_41 { pt3dadd( -34.8427, -150.75, -80.5014, 0.37 ) }
    dend_41 { pt3dadd( -34.9749, -151.272, -80.9781, 1.25 ) }
    dend_41 { pt3dadd( -35.5811, -153.77, -83.2309, 0.44 ) }
    dend_41 { pt3dadd( -36.2726, -156.655, -85.7899, 0.15 ) }
    dend_41 { pt3dadd( -36.5289, -157.685, -86.6607, 0.96 ) }
    dend_41 { pt3dadd( -36.8426, -158.951, -87.6559, 0.29 ) }
    dend_41 { pt3dadd( -36.9348, -159.34, -87.9254, 0.52 ) }
    dend_41 { pt3dadd( -37.2657, -161.131, -89.0499, 0.22 ) }
    dend_41 { pt3dadd( -37.2892, -161.473, -89.2221, 0.66 ) }
    dend_41 { pt3dadd( -37.2555, -162.084, -89.5646, 0.66 ) }
    dend_41 { pt3dadd( -37.1882, -163.418, -90.4246, 0.15 ) }
    dend_41 { pt3dadd( -37.177, -164.233, -91.0123, 0.15 ) }
    dend_41 { pt3dadd( -37.1901, -165.257, -91.8169, 1.03 ) }
    dend_41 { pt3dadd( -37.2045, -165.547, -92.0741, 1.03 ) }
    dend_41 { pt3dadd( -37.3526, -167.703, -94.1331, 0.22 ) }
    dend_41 { pt3dadd( -37.471, -168.876, -95.3738, 0.22 ) }
    dend_41 { pt3dadd( -37.6512, -169.888, -96.5836, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -75.2943, 163.599, -120.476, 0.22 ) }
    dend_7 { pt3dadd( -76.5953, 162.883, -121.044, 0.22 ) }
    dend_7 { pt3dadd( -77.2957, 162.515, -121.347, 0.22 ) }
    dend_7 { pt3dadd( -78.6317, 161.81, -121.894, 0.59 ) }
    dend_7 { pt3dadd( -80.1881, 160.993, -122.49, 0.15 ) }
    dend_7 { pt3dadd( -80.613, 160.768, -122.648, 0.81 ) }
    dend_7 { pt3dadd( -81.3641, 160.37, -122.926, 1.11 ) }
    dend_7 { pt3dadd( -82.5572, 159.762, -123.345, 0.22 ) }
    dend_7 { pt3dadd( -83.2854, 159.376, -123.606, 1.03 ) }
    dend_7 { pt3dadd( -83.7732, 159.097, -123.78, 1.33 ) }
    dend_7 { pt3dadd( -83.8778, 159.047, -123.801, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -75.2943, 163.599, -120.476, 0.22 ) }
    dend_6 { pt3dadd( -76.5767, 164.086, -120.068, 0.22 ) }
    dend_6 { pt3dadd( -77.7876, 164.536, -119.509, 0.22 ) }
    dend_6 { pt3dadd( -78.5084, 164.8, -119.156, 1.25 ) }
    dend_6 { pt3dadd( -78.5654, 164.825, -119.123, 1.25 ) }
    dend_6 { pt3dadd( -80.1561, 165.591, -118.087, 0.15 ) }
    dend_6 { pt3dadd( -80.8326, 165.96, -117.633, 0.15 ) }
    dend_6 { pt3dadd( -82.2089, 166.851, -116.512, 0.96 ) }
    dend_6 { pt3dadd( -82.6089, 167.145, -116.179, 1.18 ) }
    dend_6 { pt3dadd( -83.6207, 167.927, -115.317, 0.15 ) }
    dend_6 { pt3dadd( -83.667, 167.963, -115.277, 0.15 ) }
    dend_6 { pt3dadd( -84.3716, 168.566, -114.628, 0.15 ) }
    dend_6 { pt3dadd( -85.6461, 169.708, -113.457, 0.15 ) }
    dend_6 { pt3dadd( -86.234, 170.268, -113.018, 0.66 ) }
    dend_6 { pt3dadd( -86.4786, 170.479, -112.849, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 89/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -37.6512, -169.888, -96.5836, 0.22 ) }
    dend_45 { pt3dadd( -39.4153, -170.043, -98.3421, 0.22 ) }
    dend_45 { pt3dadd( -40.2467, -170.119, -99.0866, 0.22 ) }
    dend_45 { pt3dadd( -40.6195, -170.166, -99.4879, 1.03 ) }
    dend_45 { pt3dadd( -40.794, -170.192, -99.6764, 1.33 ) }
    dend_45 { pt3dadd( -42.4566, -170.451, -101.481, 0.22 ) }
    dend_45 { pt3dadd( -43.6729, -170.612, -102.82, 0.22 ) }
    dend_45 { pt3dadd( -44.0609, -170.65, -103.246, 0.88 ) }
    dend_45 { pt3dadd( -45.7022, -170.804, -105.177, 0.22 ) }
    dend_45 { pt3dadd( -46.6772, -170.898, -106.274, 0.22 ) }
    dend_45 { pt3dadd( -46.7169, -170.905, -106.314, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_45 { pt3dadd( -47.991, -171.185, -107.444, 0.22 ) }
    dend_45 { pt3dadd( -48.0658, -171.206, -107.509, 0.22 ) }
    dend_45 { pt3dadd( -49.228, -171.622, -108.387, 0.22 ) }
    dend_45 { pt3dadd( -50.4681, -172.223, -109.212, 0.22 ) }
    dend_45 { pt3dadd( -51.8013, -173.13, -110.16, 0.22 ) }
    dend_45 { pt3dadd( -51.8458, -173.167, -110.192, 0.22 ) }
    dend_45 { pt3dadd( -52.3395, -173.693, -110.541, 0.74 ) }
    dend_45 { pt3dadd( -52.5995, -174.042, -110.752, 0.74 ) }
    dend_45 { pt3dadd( -53.364, -175.622, -111.664, 0.22 ) }
    dend_45 { pt3dadd( -53.7243, -176.673, -112.307, 0.22 ) }
    dend_45 { pt3dadd( -53.8477, -177.06, -112.545, 0.29 ) }
    dend_45 { pt3dadd( -53.9062, -177.243, -112.644, 0.37 ) }
    dend_45 { pt3dadd( -54.2912, -178.48, -113.3, 0.15 ) }
    dend_45 { pt3dadd( -54.9594, -180.638, -114.381, 0.15 ) }
    dend_45 { pt3dadd( -54.9779, -180.696, -114.408, 0.15 ) }
    dend_45 { pt3dadd( -55.5945, -182.439, -115.199, 0.15 ) }
    dend_45 { pt3dadd( -57.0431, -186.062, -116.78, 0.15 ) }
    dend_45 { pt3dadd( -57.5774, -187.291, -117.319, 0.44 ) }
    dend_45 { pt3dadd( -58.0315, -188.274, -117.736, 0.15 ) }
    dend_45 { pt3dadd( -59.2179, -190.717, -118.731, 0.15 ) }
    dend_45 { pt3dadd( -59.9273, -192.162, -119.327, 0.37 ) }
    dend_45 { pt3dadd( -60.6407, -193.561, -119.928, 0.15 ) }
    dend_45 { pt3dadd( -61.5025, -194.97, -120.534, 0.59 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -37.6512, -169.888, -96.5836, 0.22 ) }
    dend_42 { pt3dadd( -37.5832, -171.771, -97.0518, 0.22 ) }
    dend_42 { pt3dadd( -37.4621, -173.773, -97.5761, 0.22 ) }
    dend_42 { pt3dadd( -37.3248, -176.042, -98.1699, 0.22 ) }
    dend_42 { pt3dadd( -37.289, -176.633, -98.3248, 1.33 ) }
    dend_42 { pt3dadd( -37.2333, -177.553, -98.5656, 1.33 ) }
    dend_42 { pt3dadd( -37.155, -178.848, -98.9045, 0.22 ) }
    dend_42 { pt3dadd( -37.1328, -179.162, -98.9913, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -83.8778, 159.047, -123.801, 0.22 ) }
    dend_9 { pt3dadd( -85.2106, 158.279, -124.429, 0.22 ) }
    dend_9 { pt3dadd( -85.7428, 157.972, -124.679, 0.59 ) }
    dend_9 { pt3dadd( -86.5973, 157.48, -125.082, 0.22 ) }
    dend_9 { pt3dadd( -87.0909, 157.196, -125.314, 0.66 ) }
    dend_9 { pt3dadd( -87.1532, 157.16, -125.344, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 37/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -83.8778, 159.047, -123.801, 0.15 ) }
    dend_8 { pt3dadd( -83.1851, 157.703, -124.14, 0.15 ) }
    dend_8 { pt3dadd( -82.7047, 156.772, -124.375, 0.29 ) }
    dend_8 { pt3dadd( -82.506, 156.386, -124.473, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 41/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -37.1328, -179.162, -98.9913, 0.29 ) }
    dend_44 { pt3dadd( -35.9907, -179.783, -100.205, 0.29 ) }
    dend_44 { pt3dadd( -35.183, -180.223, -101.064, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -37.1328, -179.162, -98.9913, 0.22 ) }
    dend_43 { pt3dadd( -38.2542, -180.94, -99.4841, 0.22 ) }
    dend_43 { pt3dadd( -38.8383, -181.914, -99.7631, 0.44 ) }
    dend_43 { pt3dadd( -39.5177, -183.35, -100.227, 0.15 ) }
    dend_43 { pt3dadd( -40.2888, -185.092, -100.805, 0.15 ) }
    dend_43 { pt3dadd( -40.5006, -185.593, -100.971, 0.81 ) }
    dend_43 { pt3dadd( -40.6372, -185.929, -101.08, 0.81 ) }
    dend_43 { pt3dadd( -41.9353, -189.329, -102.191, 0.15 ) }
    dend_43 { pt3dadd( -43.3944, -193.818, -103.672, 0.15 ) }
    dend_43 { pt3dadd( -43.3944, -193.818, -103.672, 0.37 ) }
    dend_43 { pt3dadd( -43.6307, -194.84, -104.042, 0.15 ) }
    dend_43 { pt3dadd( -43.7306, -195.34, -104.221, 0.81 ) }
    dend_43 { pt3dadd( -43.8253, -195.909, -104.424, 0.81 ) }
    dend_43 { pt3dadd( -43.9709, -197.536, -104.996, 0.15 ) }
    dend_43 { pt3dadd( -44.0069, -198.112, -105.182, 0.44 ) }
    dend_43 { pt3dadd( -44.0263, -198.39, -105.296, 0.44 ) }
    dend_43 { pt3dadd( -44.087, -199.264, -105.697, 0.15 ) }
    dend_43 { pt3dadd( -44.1186, -199.621, -105.849, 0.66 ) }
    dend_43 { pt3dadd( -44.13, -199.73, -105.892, 0.66 ) }
    dend_43 { pt3dadd( -44.1897, -200.269, -106.096, 0.66 ) }
    dend_43 { pt3dadd( -44.5493, -203.596, -107.371, 0.15 ) }
    dend_43 { pt3dadd( -44.6258, -204.312, -107.647, 0.44 ) }
    dend_43 { pt3dadd( -45.0829, -208.757, -109.373, 0.15 ) }
    dend_43 { pt3dadd( -45.5099, -212.929, -110.979, 0.15 ) }
    dend_43 { pt3dadd( -45.5238, -213.064, -111.03, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_23, dend_14, dend_11, dend_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_23, dend_14, dend_11, dend_0, axon_0, dend_38, dend_33, dend_29, dend_24, dend_20, dend_15, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_39, dend_37, dend_34, dend_31, dend_30, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_10, dend_3, dend_47, dend_40, dend_36, dend_35, dend_27, dend_26, dend_18, dend_17, dend_5, dend_4, dend_46, dend_41, dend_7, dend_6, dend_45, dend_42, dend_9, dend_8, dend_44, dend_43]}
    ModelViewParmSubset_5 = new SectionList()
    dend_32 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_14 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_12 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_37 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_34 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_25 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_19 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_35 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_13 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_15 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_26 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_43 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 3
    dend_11 nseg = 3
    dend_29 nseg = 3
    dend_20 nseg = 3
    dend_12 nseg = 3
    dend_2 nseg = 5
    dend_1 nseg = 3
    dend_48 nseg = 5
    dend_37 nseg = 3
    dend_34 nseg = 5
    dend_31 nseg = 3
    dend_30 nseg = 3
    dend_28 nseg = 7
    dend_25 nseg = 5
    dend_19 nseg = 3
    dend_16 nseg = 5
    dend_10 nseg = 3
    dend_3 nseg = 5
    dend_47 nseg = 5
    dend_35 nseg = 3
    dend_18 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_41 nseg = 7
    dend_45 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_SBC_e8567af242_0_0


