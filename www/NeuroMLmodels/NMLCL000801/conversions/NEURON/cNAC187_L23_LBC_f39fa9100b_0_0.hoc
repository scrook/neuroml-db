// Cell: cNAC187_L23_LBC_f39fa9100b_0_0
/*
{
  "id" : "cNAC187_L23_LBC_f39fa9100b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.09406, -10.5757, -0.444037, 2.91935", "-1.88817, -9.52414, -0.41304, 5.10932", "-1.68229, -8.4726, -0.382043, 5.77485", "-1.47641, -7.42107, -0.351047, 6.01078", "-1.27053, -6.36953, -0.32005, 6.04996", "-1.06465, -5.318, -0.289053, 5.93407", "-0.858767, -4.26646, -0.258056, 6.24426", "-0.652886, -3.21492, -0.22706, 7.35421", "-0.447004, -2.16339, -0.196063, 8.45604", "-0.241123, -1.11185, -0.165066, 9.12005", "-0.0352414, -0.0603167, -0.134069, 9.36575", "0.17064, 0.991219, -0.103072, 9.61145", "0.376522, 2.04276, -0.0720756, 10.2138", "0.582403, 3.09429, -0.0410789, 11.1588", "0.788285, 4.14583, -0.0100821, 11.7442", "0.994166, 5.19736, 0.0209147, 11.9266", "1.20005, 6.2489, 0.0519115, 11.3882", "1.40593, 7.30044, 0.0829083, 10.504", "1.61181, 8.35197, 0.113905, 8.36092", "1.81769, 9.40351, 0.144902, 5.9148", "2.02357, 10.455, 0.175899, 4.32325" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.84106, -10.3596, -0.116561, 1.66", "-9.75396, -12.2985, -0.116561, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.25894, 8.55087, 7.64344, 1.94", "11.0947, 10.4518, 7.64344, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.69106, 7.80538, -8.61656, 2.77", "-5.18901, 8.45627, -8.61656, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.56106, -11.0106, -0.116561, 3.32", "-0.89777, -13.4783, -0.116561, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000163253668773
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.02357, 10.455, 0.175899, 0.62163", "4.90572, 25.1755, 0.175899, 0.62163", "7.78786, 39.896, 0.175899, 0.62163" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-9.75396, -12.2985, -0.116561, 0.83", "-9.99808, -15.8742, 0.384392, 0.83", "-10.259, -19.6959, 0.919823, 0.83", "-10.5676, -24.2152, 1.553, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.75396, -12.2985, -0.116561, 1.66", "-13.5097, -13.3214, 2.8882, 1.66", "-16.7544, -14.2051, 5.48408, 1.66" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "11.0947, 10.4518, 7.64344, 1.38", "11.5072, 13.7502, 13.145, 1.38", "11.6935, 15.2393, 15.6288, 1.38", "11.8687, 16.6396, 17.9645, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "11.0947, 10.4518, 7.64344, 1.11", "14.8934, 10.6109, 10.7294, 1.11", "16.8782, 10.694, 12.3418, 1.11", "20.2704, 10.8361, 15.0975, 1.38", "26.1106, 11.0806, 19.8419, 1.38" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.18901, 8.45627, -8.61656, 0.83", "-7.01594, 7.17928, -12.5991, 0.83", "-8.13057, 6.47343, -14.88, 0.83", "-8.8264, 5.97261, -16.1782, 1.11", "-10.6693, 4.69106, -19.3509, 0.83", "-12.2413, 3.59789, -22.0572, 0.83", "-17.0001, 0.28869, -30.2496, 0.83", "-18.6325, -0.96189, -33.1093, 0.83", "-21.2555, -3.04435, -37.9508, 0.55", "-22.0817, -3.66604, -39.4279, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.18901, 8.45627, -8.61656, 1.38", "-6.03166, 12.3531, -9.74154, 1.38", "-7.13377, 17.4497, -11.2129, 1.38", "-8.61667, 24.3073, -13.1926, 1.38" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.89777, -13.4783, -0.116561, 0.83", "1.48191, -14.8131, -1.31687, 0.83", "3.26729, -15.8144, -2.21743, 0.83", "7.63788, -18.2658, -4.42197, 0.83", "10.0018, -19.5917, -5.61433, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.89777, -13.4783, -0.116561, 1.94", "-2.35715, -15.6959, -3.68949, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.78786, 39.896, 0.175899, 0.28", "10.67, 54.6165, 0.175899, 0.28", "13.5522, 69.337, 0.175899, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-10.5676, -24.2152, 1.553, 0.55", "-11.4392, -24.6927, 2.88082, 0.55", "-11.8143, -25.0194, 3.59188, 0.55", "-11.9836, -25.1893, 3.98201, 0.83", "-12.6686, -25.8627, 5.54974, 0.55", "-14.0983, -27.3892, 9.5142, 0.55", "-15.4394, -28.9166, 13.544, 0.55", "-16.4219, -30.1194, 16.855, 0.83", "-17.5006, -31.6122, 20.9265, 0.28", "-17.7748, -32.0443, 22.0815, 0.83", "-19.1929, -34.6221, 28.878, 0.55", "-19.4697, -35.1745, 30.3873, 0.28", "-19.7026, -35.6199, 31.6836, 0.55", "-20.168, -36.4629, 34.406, 0.28", "-20.3642, -36.9234, 35.7262, 0.55", "-22.8154, -38.531, 42.5388, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-10.5676, -24.2152, 1.553, 0.55", "-9.99943, -32.7186, 5.24152, 0.55", "-9.09817, -40.9455, 8.43717, 0.55", "-8.28052, -46.7346, 10.4598, 0.28", "-7.56381, -51.0124, 11.9183, 0.83", "-7.02534, -54.2298, 13.0592, 0.55", "-6.71711, -55.9739, 13.715, 0.55", "-6.04965, -59.4569, 14.9025, 0.55", "-5.25448, -62.5459, 15.9228, 0.55", "-4.42868, -65.8981, 17.0262, 0.28", "-3.54832, -70.6515, 18.6298, 0.83", "-3.16789, -73.637, 19.5875, 0.28", "-2.89179, -76.6731, 20.4469, 0.83", "-2.68049, -80.1194, 21.245, 0.28", "-2.58035, -82.4536, 21.6406, 0.83", "-2.46402, -86.3683, 22.032, 0.28", "-2.33005, -89.5545, 22.2357, 0.83", "-2.18928, -92.6082, 22.4156, 0.28", "-1.90982, -95.5701, 22.8672, 0.83", "-1.25831, -99.3424, 23.9542, 0.28", "-0.829856, -100.895, 24.6551, 0.55", "0.710738, -104.939, 27.1785, 0.28", "1.582, -106.851, 28.7789, 0.55", "4.02218, -111.523, 33.3826, 0.28", "5.43474, -113.792, 36.0746, 0.83", "6.85232, -115.59, 38.6966, 0.28", "7.36465, -116.135, 39.6645, 0.55", "9.31107, -117.703, 43.5672, 0.28", "12.9536, -128.787, 48.445, 0.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.7544, -14.2051, 5.48408, 0.55", "-18.8292, -20.6802, 5.67144, 0.55", "-20.2589, -25.1422, 5.80055, 0.55", "-22.1103, -30.9203, 5.96774, 0.55", "-22.8355, -33.1834, 6.03323, 0.55", "-23.8238, -36.2678, 6.12248, 0.55", "-26.0439, -43.1965, 6.32296, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-16.7544, -14.2051, 5.48408, 1.38", "-19.6274, -13.7163, 7.15818, 1.38", "-21.0713, -13.4706, 7.99951, 1.38" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "11.8687, 16.6396, 17.9645, 0.83", "9.62366, 18.7073, 14.1524, 0.83", "5.68962, 23.4281, 9.46393, 0.83", "1.25335, 28.5103, 5.62184, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "11.8687, 16.6396, 17.9645, 0.83", "12.8017, 18.3305, 18.3637, 0.83", "13.6637, 20.0865, 18.7274, 0.83", "14.4894, 21.9638, 19.0706, 0.83", "15.2922, 23.8007, 19.4962, 0.83", "16.4133, 26.2618, 20.0735, 0.83", "17.2522, 28.2123, 20.5021, 0.83", "17.9043, 29.8416, 20.8761, 0.83", "18.7345, 32.0213, 21.3334, 0.83", "19.6525, 34.4426, 21.6795, 0.83", "20.1381, 35.7816, 21.7927, 0.83", "21.1899, 38.5911, 21.9053, 0.83", "22.0995, 40.7422, 21.7756, 0.55", "22.9288, 42.536, 21.4838, 0.55", "23.9403, 44.5999, 20.9455, 0.55", "24.5181, 45.8367, 20.5229, 0.55", "25.2339, 47.4612, 19.9722, 0.55", "26.2395, 49.7583, 19.1571, 0.55", "26.4706, 50.3968, 18.9658, 0.55", "26.7048, 51.1629, 18.8327, 0.55", "26.9625, 52.2876, 18.7684, 0.55", "27.3424, 54.2724, 18.7736, 0.28", "27.6031, 56.1251, 18.897, 0.55", "27.8412, 58.0227, 19.1563, 0.28", "27.9666, 58.9224, 19.2884, 0.55", "28.2334, 60.505, 19.5307, 0.28", "28.4823, 61.6685, 19.7393, 0.55", "28.6085, 62.2775, 19.8751, 0.83", "28.8037, 63.2653, 20.0939, 0.28", "28.9093, 63.9443, 20.262, 0.55", "29.0791, 64.9068, 20.463, 0.28", "29.3572, 66.3726, 20.7106, 0.55", "29.7544, 68.22, 20.9117, 0.28", "30.0048, 69.2677, 20.9778, 0.55", "30.6763, 71.9094, 21.0311, 0.28", "31.2084, 73.7407, 20.9869, 0.28", "31.8698, 75.8008, 20.8713, 0.28", "33.7619, 81.269, 20.3601, 0.28", "35.5155, 86.0332, 19.7394, 0.28", "35.9459, 87.1374, 19.5498, 0.55", "37.4566, 90.7133, 18.7686, 0.28", "38.2015, 92.3518, 18.2998, 0.28", "39.1032, 94.0731, 17.5636, 0.28", "39.6291, 94.893, 17.0057, 0.55", "40.5973, 96.1531, 15.8528, 0.28", "40.9725, 96.5876, 15.448, 0.55", "43.0015, 98.6263, 13.3884, 0.28", "43.5555, 99.2314, 13.0648, 0.55", "44.0702, 99.8303, 12.906, 0.28", "44.4569, 100.296, 12.8323, 0.55", "46.7721, 103.205, 12.6896, 0.28", "47.2818, 103.866, 12.7115, 0.55", "51.5344, 109.513, 13.5792, 0.28", "51.8985, 110.002, 13.6687, 0.55", "54.6003, 116.563, 13.4499, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "26.1106, 11.0806, 19.8419, 0.83", "27.8401, 11.6619, 21.2931, 0.83", "29.5794, 12.3002, 22.7556, 0.83", "32.5011, 13.3296, 25.4387, 0.83", "35.1012, 14.2958, 27.8888, 0.83", "37.7857, 15.4505, 30.5941, 0.83", "41.1276, 17.1498, 34.2975, 0.83", "42.4829, 17.9503, 35.9574, 1.11", "45.1705, 19.7804, 39.6089, 0.83", "47.1128, 21.253, 42.5858, 1.11", "49.3864, 22.9194, 46.3962, 0.83", "51.7869, 24.5882, 50.5759, 0.55", "52.6901, 25.2407, 52.1783, 0.83", "55.799, 27.5205, 57.8996, 0.55", "58.0976, 29.2103, 62.1713, 0.55", "59.088, 29.8406, 64.0422, 0.28", "60.698, 30.5618, 66.8085, 0.55", "65.9157, 32.4061, 78.2338, 0.55", "70.7984, 35.7789, 89.4942, 0.55", "76.2549, 39.2372, 100.463, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "26.1106, 11.0806, 19.8419, 0.83", "28.0535, 9.33767, 19.9923, 0.83", "29.6963, 7.92056, 20.0972, 0.83", "32.9496, 5.19353, 20.2364, 0.83", "35.8852, 2.67531, 20.26, 0.83", "37.6794, 1.02398, 20.2492, 0.55", "38.7297, -0.0135627, 20.2536, 0.55", "39.3409, -0.609064, 20.3401, 0.55", "40.535, -1.82134, 20.7131, 0.55", "42.5665, -3.94975, 21.8725, 0.55", "44.1441, -5.54203, 23.2205, 0.55", "46.4492, -7.84046, 25.5766, 0.55", "50.3515, -11.5796, 30.1841, 0.55", "51.8411, -12.9402, 32.1359, 0.55", "54.9292, -15.588, 36.4009, 0.55", "57.8981, -17.9692, 40.7431, 0.55", "59.3225, -19.0264, 42.9016, 0.55", "61.7233, -20.7173, 46.7223, 0.28", "62.9496, -21.5873, 48.6567, 0.55", "63.9333, -22.2185, 50.1859, 0.28", "69.8906, -26.0378, 56.7045, 0.28", "75.5216, -30.3488, 63.2278, 0.28", "80.5111, -34.364, 70.4047, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.61667, 24.3073, -13.1926, 0.55", "-6.32155, 24.2353, -14.2489, 0.55", "-4.13784, 24.1668, -15.2539, 0.55", "-2.46989, 24.1145, -16.0215, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.61667, 24.3073, -13.1926, 0.83", "-10.8934, 26.6912, -20.8676, 0.83", "-12.0047, 27.8548, -24.6139, 0.83", "-13.7322, 29.6636, -30.4371, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "10.0018, -19.5917, -5.61433, 0.55", "12.0603, -21.585, -4.81662, 0.55", "14.9273, -24.2986, -3.71077, 0.55", "16.4121, -25.6566, -3.37649, 0.55", "20.7869, -29.658, -2.39151, 0.55", "24.1292, -32.7149, -1.639, 0.55", "26.4213, -34.8114, -1.12293, 0.55", "28.661, -36.5639, -0.645051, 0.55", "33.5893, -39.8804, 0.255012, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "10.0018, -19.5917, -5.61433, 0.83", "12.1764, -20.1452, -5.93147, 0.83", "14.4432, -20.7222, -6.26206, 0.83", "17.3123, -21.4525, -6.68048, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.35715, -15.6959, -3.68949, 0.55", "-3.04799, -18.795, -7.92968, 0.55", "-3.25388, -20.3197, -9.99646, 0.55", "-3.52893, -24.408, -15.5028, 0.55", "-3.50534, -25.7776, -17.344, 0.55", "-3.29125, -28.4723, -20.9649, 0.55", "-3.21836, -29.3792, -22.1546, 0.55", "-3.06827, -30.465, -23.4355, 0.55", "-2.7385, -32.9416, -26.2697, 0.55", "-2.3415, -35.3216, -28.8239, 0.55", "-1.96613, -37.3983, -31.1344, 0.55", "-1.60496, -39.8497, -33.6598, 0.55", "-1.50413, -41.2213, -35.0214, 0.28", "-1.51043, -41.9311, -35.6956, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.35715, -15.6959, -3.68949, 1.38", "-3.97698, -18.3523, -4.22156, 1.38", "-5.31919, -20.5535, -4.66243, 1.38", "-6.42465, -22.3664, -5.02554, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-22.8154, -38.531, 42.5388, 0.28", "-25.4724, -40.5965, 49.2853, 0.28", "-29.184, -44.1425, 54.8627, 0.28", "-32.841, -47.7428, 60.4439, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-22.8154, -38.531, 42.5388, 0.55", "-23.9232, -41.9848, 50.833, 0.28", "-24.212, -44.1603, 59.5919, 0.28", "-24.6184, -48.0955, 67.7491, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-26.0439, -43.1965, 6.32296, 0.28", "-28.5648, -46.2054, 6.70179, 0.28", "-31.472, -49.4523, 7.09059, 0.28", "-32.5463, -50.5963, 7.27713, 0.55", "-36.1375, -54.4785, 8.60886, 0.28", "-37.3889, -55.8486, 9.21132, 0.55", "-38.8393, -57.4494, 9.98218, 0.83", "-40.2909, -59.0218, 10.8613, 0.28", "-41.5324, -60.3519, 11.7912, 0.83", "-45.5268, -64.6086, 15.3698, 0.28", "-46.1618, -65.2812, 16.1209, 0.83", "-46.7796, -65.9784, 16.9965, 0.55", "-47.7463, -67.2225, 18.6998, 0.83", "-52.6723, -75.3374, 21.2505, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-26.0439, -43.1965, 6.32296, 0.55", "-26.1028, -43.6023, 6.43237, 0.55", "-26.5357, -46.4792, 7.08096, 0.28", "-26.8006, -48.2657, 7.17068, 0.28", "-27.254, -51.2452, 7.04345, 1.38", "-27.7202, -53.7814, 6.98712, 0.28", "-28.0037, -55.2459, 6.96693, 0.55", "-28.3652, -57.0007, 6.89837, 0.83", "-29.2717, -61.5003, 6.5294, 0.28", "-29.5334, -62.764, 6.39769, 0.83", "-30.6141, -68.4186, 5.70135, 0.28", "-31.0093, -70.6758, 5.45437, 1.11", "-31.287, -72.4312, 5.26822, 0.28", "-31.7133, -74.9395, 4.92872, 0.83", "-32.2037, -77.7161, 4.52624, 0.28", "-32.5945, -79.7018, 4.24511, 0.83", "-33.8532, -85.6749, 3.33042, 0.28", "-34.2485, -87.4125, 3.1379, 1.38", "-35.7116, -93.2576, 2.7351, 0.28", "-36.1063, -94.7674, 2.72272, 1.11", "-37.4415, -99.9399, 2.95038, 0.28", "-37.6203, -100.685, 3.02623, 0.83", "-38.2705, -103.743, 3.5791, 0.28", "-38.5659, -105.696, 4.11737, 1.11", "-38.9216, -109.078, 5.27325, 0.28", "-39.0298, -110.063, 5.61663, 0.55", "-39.2832, -112.236, 6.37328, 0.28", "-39.359, -112.703, 6.55822, 1.11", "-40.7384, -119.521, 9.49115, 0.28", "-40.9874, -120.651, 10.0023, 1.11", "-42.029, -124.499, 11.8037, 0.28", "-42.4318, -125.864, 12.4821, 0.55", "-43.2155, -128.263, 13.763, 0.28", "-43.5984, -129.306, 14.346, 0.55", "-44.2701, -138.33, 16.1916, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-21.0713, -13.4706, 7.99951, 0.55", "-23.9097, -14.8277, 8.82788, 0.55", "-27.6126, -16.4077, 10.2275, 0.55", "-29.9336, -17.3522, 11.1421, 0.83", "-32.3151, -18.302, 12.0984, 0.55", "-35.8738, -19.8272, 13.6221, 0.55", "-39.6832, -21.6172, 15.2819, 0.83", "-42.9741, -23.3698, 16.8602, 0.55", "-44.6894, -24.4697, 17.7334, 0.55", "-46.4317, -25.7657, 18.6755, 0.83", "-48.6926, -27.6194, 19.9143, 0.28", "-50.4436, -29.13, 20.7914, 1.11", "-53.3775, -31.8426, 22.2859, 0.28", "-54.7668, -33.0942, 22.9534, 1.11", "-58.1901, -35.866, 24.5314, 0.28", "-59.4374, -36.7345, 25.048, 0.55", "-60.9068, -37.5672, 25.5487, 0.28", "-62.2088, -38.1853, 25.9305, 0.83", "-64.6781, -39.1736, 26.4825, 0.28", "-68.2026, -40.6886, 27.1173, 0.28", "-69.2153, -41.1715, 27.2231, 1.11", "-70.6753, -41.8889, 27.4439, 0.28", "-72.2003, -42.6573, 27.8054, 0.55", "-73.8101, -43.4401, 28.2032, 0.28", "-75.6327, -44.3315, 28.6473, 0.83", "-77.1439, -45.0589, 29.174, 0.28", "-80.1337, -46.5141, 30.357, 0.28", "-82.9155, -47.8438, 31.6568, 1.38", "-90.3391, -51.3773, 35.418, 0.28", "-91.8633, -52.1334, 36.3369, 1.11", "-97.1815, -54.8975, 39.8177, 0.28", "-98.0493, -55.38, 40.4153, 0.83", "-102.547, -58.0302, 43.7415, 0.28", "-102.989, -58.302, 44.093, 1.11", "-111.421, -63.8637, 51.9507, 0.28", "-112.334, -64.4716, 52.8136, 1.11", "-113.899, -65.5492, 54.2427, 0.28", "-116.041, -67.0661, 56.2466, 0.55", "-123.634, -71.5581, 60.7019, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-21.0713, -13.4706, 7.99951, 0.83", "-23.2687, -12.8078, 6.39067, 0.83", "-27.0095, -11.8422, 3.60393, 0.83", "-30.4138, -10.9403, 1.01883, 0.83", "-34.8891, -9.81382, -2.64467, 0.83", "-37.8122, -9.23543, -5.17241, 0.83", "-40.9463, -8.69014, -7.87517, 0.83", "-43.0147, -8.34235, -9.81524, 0.55", "-43.977, -8.14522, -10.7926, 0.55", "-46.5588, -7.71599, -13.4806, 0.55", "-49.6949, -7.39887, -17.0324, 0.55", "-50.9053, -7.27425, -18.5537, 0.55", "-53.7413, -6.94792, -22.6665, 0.55", "-55.2944, -6.81686, -25.2265, 0.55", "-57.383, -6.77114, -29.0697, 0.55", "-58.3355, -6.78725, -31.0281, 0.55", "-59.5948, -6.85241, -33.993, 1.11", "-60.7772, -7.22057, -37.8634, 0.55", "-61.5948, -7.9437, -42.2201, 0.55", "-61.7717, -8.62721, -45.6722, 0.55", "-61.7711, -8.78051, -46.4059, 0.55", "-61.7135, -9.10787, -47.9313, 0.55", "-60.8989, -10.9824, -56.1197, 0.55", "-60.5179, -11.5003, -58.3249, 0.55", "-58.3704, -13.5871, -67.2837, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.25335, 28.5103, 5.62184, 0.55", "-1.7199, 34.9721, -1.92916, 0.55", "-4.13361, 42.3898, -8.84514, 0.55", "-7.20661, 50.5939, -14.6205, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.25335, 28.5103, 5.62184, 0.55", "-5.19967, 36.0713, -2.60842, 0.55", "-9.8211, 44.8829, -10.9002, 0.55", "-12.4247, 54.1178, -19.5967, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.46989, 24.1145, -16.0215, 0.55", "-2.57157, 21.6217, -14.5711, 0.55", "-2.75564, 17.1091, -11.9455, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.46989, 24.1145, -16.0215, 0.55", "-1.64137, 25.7783, -17.3252, 0.55", "-0.720943, 28.3252, -18.9164, 0.55", "0.162208, 31.0944, -20.3564, 0.55", "0.732954, 33.2134, -21.3264, 0.55", "1.38105, 35.4681, -22.2654, 0.55", "2.13025, 38.2109, -23.2854, 0.55", "3.06576, 42.3075, -24.5349, 0.55", "3.80632, 46.0282, -25.3817, 0.55", "4.15699, 48.1045, -25.7511, 0.55", "4.95142, 52.7174, -26.4539, 0.55", "5.78328, 57.0548, -27.012, 0.55", "6.38642, 60.3885, -27.4048, 0.55", "6.96807, 63.2224, -27.7275, 0.55", "7.50047, 65.5966, -28.0685, 0.55", "8.1389, 67.9146, -28.6015, 0.55", "8.96487, 70.9442, -29.3753, 0.55", "9.82949, 73.4942, -30.1792, 0.55", "10.7352, 75.7522, -31.065, 0.55", "11.9978, 78.4807, -32.4176, 0.55", "14.2256, 82.8401, -34.9721, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.7322, 29.6636, -30.4371, 0.55", "-16.8636, 31.1924, -35.6645, 0.55", "-18.9557, 32.2138, -39.1569, 0.55", "-20.69, 33.0605, -42.0519, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.7322, 29.6636, -30.4371, 0.83", "-12.7308, 36.8731, -31.8215, 0.83", "-12.1527, 40.7106, -32.4497, 0.55", "-11.7621, 44.5663, -33.0617, 0.55", "-11.4685, 47.4644, -33.5217, 0.55", "-11.0664, 51.4336, -34.1517, 0.55", "-10.6585, 55.4597, -34.7908, 0.55", "-10.2704, 58.8447, -34.9877, 0.83", "-9.54299, 63.6817, -35.4989, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "33.5893, -39.8804, 0.255012, 0.28", "34.7122, -45.0195, -1.88187, 0.28", "35.0568, -46.5965, -2.53757, 0.28", "35.3869, -48.1072, -3.16573, 0.55", "36.0136, -50.9757, -4.35849, 0.28", "36.3873, -52.6857, -5.06952, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "33.5893, -39.8804, 0.255012, 0.55", "36.743, -43.3976, -3.28794, 0.55", "37.3229, -44.0444, -3.93944, 0.55", "38.7083, -45.5896, -5.49591, 0.55", "39.8354, -46.8465, -6.76207, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "17.3123, -21.4525, -6.68048, 0.55", "19.5961, -20.9774, -7.83765, 0.55", "20.915, -20.7972, -8.54226, 0.55", "22.4789, -20.5836, -9.37779, 0.55", "24.2643, -20.3397, -10.3316, 0.55", "27.0272, -19.9623, -11.8077, 0.28", "27.8318, -19.8524, -12.2376, 0.83", "29.9354, -19.6821, -13.4046, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "17.3123, -21.4525, -6.68048, 0.55", "18.946, -22.4908, -6.05346, 0.55", "20.5306, -23.293, -5.44655, 0.55", "22.6431, -24.2084, -4.62052, 0.55", "23.9239, -24.7386, -4.18789, 0.55", "25.7671, -25.5968, -3.47395, 0.55", "27.227, -26.3068, -2.8861, 0.55", "29.8882, -27.5175, -1.75305, 0.55", "30.7829, -27.8274, -1.42119, 0.55", "33.5298, -28.4974, -0.496185, 0.55", "37.3602, -29.1678, 0.693768, 0.55", "39.352, -29.4458, 1.34229, 0.55", "40.8866, -29.5725, 1.75704, 0.55", "45.6002, -29.7987, 2.97393, 0.28", "46.6967, -29.864, 3.21251, 0.55", "48.0935, -29.971, 3.48894, 0.55", "50.4138, -30.2557, 3.78463, 0.28", "54.2761, -31.1379, 4.46687, 0.55", "56.8081, -32.001, 5.0277, 0.28", "59.9779, -33.4868, 5.92714, 0.28", "62.5645, -34.7714, 6.6799, 0.55", "64.1057, -35.5745, 7.11325, 0.28", "66.2721, -36.7379, 7.71508, 0.28", "67.6224, -37.5312, 8.25163, 0.83", "69.3801, -38.5649, 8.8985, 0.55", "70.661, -39.2292, 9.56326, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.42465, -22.3664, -5.02554, 0.55", "-6.34469, -26.6558, -2.97416, 0.55", "-6.0695, -34.9605, 1.19137, 0.55", "-5.81366, -41.7566, 4.59646, 0.55", "-5.64997, -46.1048, 6.77506, 0.55", "-5.30955, -55.1477, 11.3059, 0.55", "-5.079, -61.2717, 14.3742, 0.55", "-4.83592, -64.3034, 16.0124, 0.28", "-4.68393, -65.9311, 16.9404, 0.55", "-3.95693, -77.4652, 24.1399, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.42465, -22.3664, -5.02554, 0.83", "-7.56966, -23.2588, -7.82548, 0.83", "-8.85967, -24.2062, -10.6002, 0.83", "-10.2396, -25.1957, -13.1897, 0.83", "-11.8363, -26.2919, -15.9599, 0.83", "-18.4312, -30.865, -26.8837, 0.55", "-20.5041, -32.3024, -30.3173, 0.55", "-21.9, -33.3277, -32.5994, 0.55", "-23.9049, -34.8128, -35.7103, 0.55", "-25.3167, -35.8126, -37.767, 0.55", "-26.1075, -36.3508, -38.7674, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-9.54299, 63.6817, -35.4989, 0.55", "-10.7181, 67.5036, -31.146, 0.55", "-11.7101, 71.6362, -26.6857, 0.55", "-12.0559, 73.8, -24.2099, 0.55", "-12.5043, 76.7647, -20.7787, 0.55", "-12.7366, 78.5714, -18.8624, 0.55", "-13.1186, 81.542, -15.7117, 0.55", "-13.2122, 83.5048, -13.7055, 0.55", "-13.3099, 90.4092, -6.97167, 0.28", "-13.2945, 91.3447, -6.0188, 0.28", "-13.3072, 94.7108, -2.63469, 0.28" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.54299, 63.6817, -35.4989, 0.55", "-9.87618, 65.4965, -35.7782, 0.55", "-10.1938, 67.1981, -35.9758, 0.55", "-10.6457, 70.1443, -36.2627, 0.55", "-10.8272, 72.1203, -36.4357, 0.55", "-10.9631, 74.5705, -36.6396, 0.55", "-11.1757, 77.526, -36.832, 0.55", "-11.2945, 79.1785, -36.8833, 0.55", "-11.4938, 81.1592, -36.9133, 0.55", "-11.7194, 83.7303, -36.8924, 0.55", "-12.0468, 87.309, -36.8525, 0.55", "-12.3374, 89.917, -36.8515, 0.55", "-12.7519, 92.3498, -36.8226, 0.55", "-13.1272, 94.0416, -36.7952, 0.55", "-14.1285, 97.392, -36.7726, 0.55", "-14.5303, 98.5647, -36.8186, 0.55", "-15.1186, 100.433, -37.0268, 0.55", "-15.7624, 102.59, -37.3394, 0.55", "-16.4389, 104.76, -37.7108, 0.55", "-17.2158, 107.457, -38.2589, 0.55", "-18.1391, 110.415, -39.0437, 0.55", "-18.7918, 112.759, -39.7726, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_24", "dend_13", "dend_0", "dend_41", "dend_34", "dend_28", "dend_25", "dend_23", "dend_14", "dend_6", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_45", "dend_44", "dend_40", "dend_39", "dend_37", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_24", "dend_13", "dend_0", "dend_41", "dend_34", "dend_28", "dend_25", "dend_23", "dend_14", "dend_6", "dend_1", "dend_43", "dend_42", "dend_38", "dend_35", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_15", "dend_10", "dend_7", "dend_5", "dend_2", "dend_45", "dend_44", "dend_40", "dend_39", "dend_37", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_19", "dend_16", "dend_12", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_24", "dend_13", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_LBC_f39fa9100b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_31
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_24, dend_13, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_34, dend_34, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.45000163253668773)
    connect dend_24(0), soma_0(0.45000163253668773)
    connect dend_13(0), soma_0(0.45000163253668773)
    connect dend_0(0), soma_0(0.45000163253668773)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.09406, -10.5757, -0.444037, 2.91935 ) }
    soma_0 { pt3dadd( -1.88817, -9.52414, -0.41304, 5.10932 ) }
    soma_0 { pt3dadd( -1.68229, -8.4726, -0.382043, 5.77485 ) }
    soma_0 { pt3dadd( -1.47641, -7.42107, -0.351047, 6.01078 ) }
    soma_0 { pt3dadd( -1.27053, -6.36953, -0.32005, 6.04996 ) }
    soma_0 { pt3dadd( -1.06465, -5.318, -0.289053, 5.93407 ) }
    soma_0 { pt3dadd( -0.858767, -4.26646, -0.258056, 6.24426 ) }
    soma_0 { pt3dadd( -0.652886, -3.21492, -0.22706, 7.35421 ) }
    soma_0 { pt3dadd( -0.447004, -2.16339, -0.196063, 8.45604 ) }
    soma_0 { pt3dadd( -0.241123, -1.11185, -0.165066, 9.12005 ) }
    soma_0 { pt3dadd( -0.0352414, -0.0603167, -0.134069, 9.36575 ) }
    soma_0 { pt3dadd( 0.17064, 0.991219, -0.103072, 9.61145 ) }
    soma_0 { pt3dadd( 0.376522, 2.04276, -0.0720756, 10.2138 ) }
    soma_0 { pt3dadd( 0.582403, 3.09429, -0.0410789, 11.1588 ) }
    soma_0 { pt3dadd( 0.788285, 4.14583, -0.0100821, 11.7442 ) }
    soma_0 { pt3dadd( 0.994166, 5.19736, 0.0209147, 11.9266 ) }
    soma_0 { pt3dadd( 1.20005, 6.2489, 0.0519115, 11.3882 ) }
    soma_0 { pt3dadd( 1.40593, 7.30044, 0.0829083, 10.504 ) }
    soma_0 { pt3dadd( 1.61181, 8.35197, 0.113905, 8.36092 ) }
    soma_0 { pt3dadd( 1.81769, 9.40351, 0.144902, 5.9148 ) }
    soma_0 { pt3dadd( 2.02357, 10.455, 0.175899, 4.32325 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.84106, -10.3596, -0.116561, 1.66 ) }
    dend_33 { pt3dadd( -9.75396, -12.2985, -0.116561, 1.66 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.25894, 8.55087, 7.64344, 1.94 ) }
    dend_24 { pt3dadd( 11.0947, 10.4518, 7.64344, 1.94 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 25/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.69106, 7.80538, -8.61656, 2.77 ) }
    dend_13 { pt3dadd( -5.18901, 8.45627, -8.61656, 2.77 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.56106, -11.0106, -0.116561, 3.32 ) }
    dend_0 { pt3dadd( -0.89777, -13.4783, -0.116561, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.02357, 10.455, 0.175899, 0.62163 ) }
    axon_0 { pt3dadd( 4.90572, 25.1755, 0.175899, 0.62163 ) }
    axon_0 { pt3dadd( 7.78786, 39.896, 0.175899, 0.62163 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -9.75396, -12.2985, -0.116561, 0.83 ) }
    dend_41 { pt3dadd( -9.99808, -15.8742, 0.384392, 0.83 ) }
    dend_41 { pt3dadd( -10.259, -19.6959, 0.919823, 0.83 ) }
    dend_41 { pt3dadd( -10.5676, -24.2152, 1.553, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.75396, -12.2985, -0.116561, 1.66 ) }
    dend_34 { pt3dadd( -13.5097, -13.3214, 2.8882, 1.66 ) }
    dend_34 { pt3dadd( -16.7544, -14.2051, 5.48408, 1.66 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 39/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 11.0947, 10.4518, 7.64344, 1.38 ) }
    dend_28 { pt3dadd( 11.5072, 13.7502, 13.145, 1.38 ) }
    dend_28 { pt3dadd( 11.6935, 15.2393, 15.6288, 1.38 ) }
    dend_28 { pt3dadd( 11.8687, 16.6396, 17.9645, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 11.0947, 10.4518, 7.64344, 1.11 ) }
    dend_25 { pt3dadd( 14.8934, 10.6109, 10.7294, 1.11 ) }
    dend_25 { pt3dadd( 16.8782, 10.694, 12.3418, 1.11 ) }
    dend_25 { pt3dadd( 20.2704, 10.8361, 15.0975, 1.38 ) }
    dend_25 { pt3dadd( 26.1106, 11.0806, 19.8419, 1.38 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.18901, 8.45627, -8.61656, 0.83 ) }
    dend_23 { pt3dadd( -7.01594, 7.17928, -12.5991, 0.83 ) }
    dend_23 { pt3dadd( -8.13057, 6.47343, -14.88, 0.83 ) }
    dend_23 { pt3dadd( -8.8264, 5.97261, -16.1782, 1.11 ) }
    dend_23 { pt3dadd( -10.6693, 4.69106, -19.3509, 0.83 ) }
    dend_23 { pt3dadd( -12.2413, 3.59789, -22.0572, 0.83 ) }
    dend_23 { pt3dadd( -17.0001, 0.28869, -30.2496, 0.83 ) }
    dend_23 { pt3dadd( -18.6325, -0.96189, -33.1093, 0.83 ) }
    dend_23 { pt3dadd( -21.2555, -3.04435, -37.9508, 0.55 ) }
    dend_23 { pt3dadd( -22.0817, -3.66604, -39.4279, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.18901, 8.45627, -8.61656, 1.38 ) }
    dend_14 { pt3dadd( -6.03166, 12.3531, -9.74154, 1.38 ) }
    dend_14 { pt3dadd( -7.13377, 17.4497, -11.2129, 1.38 ) }
    dend_14 { pt3dadd( -8.61667, 24.3073, -13.1926, 1.38 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.89777, -13.4783, -0.116561, 0.83 ) }
    dend_6 { pt3dadd( 1.48191, -14.8131, -1.31687, 0.83 ) }
    dend_6 { pt3dadd( 3.26729, -15.8144, -2.21743, 0.83 ) }
    dend_6 { pt3dadd( 7.63788, -18.2658, -4.42197, 0.83 ) }
    dend_6 { pt3dadd( 10.0018, -19.5917, -5.61433, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.89777, -13.4783, -0.116561, 1.94 ) }
    dend_1 { pt3dadd( -2.35715, -15.6959, -3.68949, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.78786, 39.896, 0.175899, 0.28 ) }
    axon_1 { pt3dadd( 10.67, 54.6165, 0.175899, 0.28 ) }
    axon_1 { pt3dadd( 13.5522, 69.337, 0.175899, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 72/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -10.5676, -24.2152, 1.553, 0.55 ) }
    dend_43 { pt3dadd( -11.4392, -24.6927, 2.88082, 0.55 ) }
    dend_43 { pt3dadd( -11.8143, -25.0194, 3.59188, 0.55 ) }
    dend_43 { pt3dadd( -11.9836, -25.1893, 3.98201, 0.83 ) }
    dend_43 { pt3dadd( -12.6686, -25.8627, 5.54974, 0.55 ) }
    dend_43 { pt3dadd( -14.0983, -27.3892, 9.5142, 0.55 ) }
    dend_43 { pt3dadd( -15.4394, -28.9166, 13.544, 0.55 ) }
    dend_43 { pt3dadd( -16.4219, -30.1194, 16.855, 0.83 ) }
    dend_43 { pt3dadd( -17.5006, -31.6122, 20.9265, 0.28 ) }
    dend_43 { pt3dadd( -17.7748, -32.0443, 22.0815, 0.83 ) }
    dend_43 { pt3dadd( -19.1929, -34.6221, 28.878, 0.55 ) }
    dend_43 { pt3dadd( -19.4697, -35.1745, 30.3873, 0.28 ) }
    dend_43 { pt3dadd( -19.7026, -35.6199, 31.6836, 0.55 ) }
    dend_43 { pt3dadd( -20.168, -36.4629, 34.406, 0.28 ) }
    dend_43 { pt3dadd( -20.3642, -36.9234, 35.7262, 0.55 ) }
    dend_43 { pt3dadd( -22.8154, -38.531, 42.5388, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 88/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -10.5676, -24.2152, 1.553, 0.55 ) }
    dend_42 { pt3dadd( -9.99943, -32.7186, 5.24152, 0.55 ) }
    dend_42 { pt3dadd( -9.09817, -40.9455, 8.43717, 0.55 ) }
    dend_42 { pt3dadd( -8.28052, -46.7346, 10.4598, 0.28 ) }
    dend_42 { pt3dadd( -7.56381, -51.0124, 11.9183, 0.83 ) }
    dend_42 { pt3dadd( -7.02534, -54.2298, 13.0592, 0.55 ) }
    dend_42 { pt3dadd( -6.71711, -55.9739, 13.715, 0.55 ) }
    dend_42 { pt3dadd( -6.04965, -59.4569, 14.9025, 0.55 ) }
    dend_42 { pt3dadd( -5.25448, -62.5459, 15.9228, 0.55 ) }
    dend_42 { pt3dadd( -4.42868, -65.8981, 17.0262, 0.28 ) }
    dend_42 { pt3dadd( -3.54832, -70.6515, 18.6298, 0.83 ) }
    dend_42 { pt3dadd( -3.16789, -73.637, 19.5875, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -2.89179, -76.6731, 20.4469, 0.83 ) }
    dend_42 { pt3dadd( -2.68049, -80.1194, 21.245, 0.28 ) }
    dend_42 { pt3dadd( -2.58035, -82.4536, 21.6406, 0.83 ) }
    dend_42 { pt3dadd( -2.46402, -86.3683, 22.032, 0.28 ) }
    dend_42 { pt3dadd( -2.33005, -89.5545, 22.2357, 0.83 ) }
    dend_42 { pt3dadd( -2.18928, -92.6082, 22.4156, 0.28 ) }
    dend_42 { pt3dadd( -1.90982, -95.5701, 22.8672, 0.83 ) }
    dend_42 { pt3dadd( -1.25831, -99.3424, 23.9542, 0.28 ) }
    dend_42 { pt3dadd( -0.829856, -100.895, 24.6551, 0.55 ) }
    dend_42 { pt3dadd( 0.710738, -104.939, 27.1785, 0.28 ) }
    dend_42 { pt3dadd( 1.582, -106.851, 28.7789, 0.55 ) }
    dend_42 { pt3dadd( 4.02218, -111.523, 33.3826, 0.28 ) }
    dend_42 { pt3dadd( 5.43474, -113.792, 36.0746, 0.83 ) }
    dend_42 { pt3dadd( 6.85232, -115.59, 38.6966, 0.28 ) }
    dend_42 { pt3dadd( 7.36465, -116.135, 39.6645, 0.55 ) }
    dend_42 { pt3dadd( 9.31107, -117.703, 43.5672, 0.28 ) }
    dend_42 { pt3dadd( 12.9536, -128.787, 48.445, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 17/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.7544, -14.2051, 5.48408, 0.55 ) }
    dend_38 { pt3dadd( -18.8292, -20.6802, 5.67144, 0.55 ) }
    dend_38 { pt3dadd( -20.2589, -25.1422, 5.80055, 0.55 ) }
    dend_38 { pt3dadd( -22.1103, -30.9203, 5.96774, 0.55 ) }
    dend_38 { pt3dadd( -22.8355, -33.1834, 6.03323, 0.55 ) }
    dend_38 { pt3dadd( -23.8238, -36.2678, 6.12248, 0.55 ) }
    dend_38 { pt3dadd( -26.0439, -43.1965, 6.32296, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -16.7544, -14.2051, 5.48408, 1.38 ) }
    dend_35 { pt3dadd( -19.6274, -13.7163, 7.15818, 1.38 ) }
    dend_35 { pt3dadd( -21.0713, -13.4706, 7.99951, 1.38 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 11.8687, 16.6396, 17.9645, 0.83 ) }
    dend_30 { pt3dadd( 9.62366, 18.7073, 14.1524, 0.83 ) }
    dend_30 { pt3dadd( 5.68962, 23.4281, 9.46393, 0.83 ) }
    dend_30 { pt3dadd( 1.25335, 28.5103, 5.62184, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 11.8687, 16.6396, 17.9645, 0.83 ) }
    dend_29 { pt3dadd( 12.8017, 18.3305, 18.3637, 0.83 ) }
    dend_29 { pt3dadd( 13.6637, 20.0865, 18.7274, 0.83 ) }
    dend_29 { pt3dadd( 14.4894, 21.9638, 19.0706, 0.83 ) }
    dend_29 { pt3dadd( 15.2922, 23.8007, 19.4962, 0.83 ) }
    dend_29 { pt3dadd( 16.4133, 26.2618, 20.0735, 0.83 ) }
    dend_29 { pt3dadd( 17.2522, 28.2123, 20.5021, 0.83 ) }
    dend_29 { pt3dadd( 17.9043, 29.8416, 20.8761, 0.83 ) }
    dend_29 { pt3dadd( 18.7345, 32.0213, 21.3334, 0.83 ) }
    dend_29 { pt3dadd( 19.6525, 34.4426, 21.6795, 0.83 ) }
    dend_29 { pt3dadd( 20.1381, 35.7816, 21.7927, 0.83 ) }
    dend_29 { pt3dadd( 21.1899, 38.5911, 21.9053, 0.83 ) }
    dend_29 { pt3dadd( 22.0995, 40.7422, 21.7756, 0.55 ) }
    dend_29 { pt3dadd( 22.9288, 42.536, 21.4838, 0.55 ) }
    dend_29 { pt3dadd( 23.9403, 44.5999, 20.9455, 0.55 ) }
    dend_29 { pt3dadd( 24.5181, 45.8367, 20.5229, 0.55 ) }
    dend_29 { pt3dadd( 25.2339, 47.4612, 19.9722, 0.55 ) }
    dend_29 { pt3dadd( 26.2395, 49.7583, 19.1571, 0.55 ) }
    dend_29 { pt3dadd( 26.4706, 50.3968, 18.9658, 0.55 ) }
    dend_29 { pt3dadd( 26.7048, 51.1629, 18.8327, 0.55 ) }
    dend_29 { pt3dadd( 26.9625, 52.2876, 18.7684, 0.55 ) }
    dend_29 { pt3dadd( 27.3424, 54.2724, 18.7736, 0.28 ) }
    dend_29 { pt3dadd( 27.6031, 56.1251, 18.897, 0.55 ) }
    dend_29 { pt3dadd( 27.8412, 58.0227, 19.1563, 0.28 ) }
    dend_29 { pt3dadd( 27.9666, 58.9224, 19.2884, 0.55 ) }
    dend_29 { pt3dadd( 28.2334, 60.505, 19.5307, 0.28 ) }
    dend_29 { pt3dadd( 28.4823, 61.6685, 19.7393, 0.55 ) }
    dend_29 { pt3dadd( 28.6085, 62.2775, 19.8751, 0.83 ) }
    dend_29 { pt3dadd( 28.8037, 63.2653, 20.0939, 0.28 ) }
    dend_29 { pt3dadd( 28.9093, 63.9443, 20.262, 0.55 ) }
    dend_29 { pt3dadd( 29.0791, 64.9068, 20.463, 0.28 ) }
    dend_29 { pt3dadd( 29.3572, 66.3726, 20.7106, 0.55 ) }
    dend_29 { pt3dadd( 29.7544, 68.22, 20.9117, 0.28 ) }
    dend_29 { pt3dadd( 30.0048, 69.2677, 20.9778, 0.55 ) }
    dend_29 { pt3dadd( 30.6763, 71.9094, 21.0311, 0.28 ) }
    dend_29 { pt3dadd( 31.2084, 73.7407, 20.9869, 0.28 ) }
    dend_29 { pt3dadd( 31.8698, 75.8008, 20.8713, 0.28 ) }
    dend_29 { pt3dadd( 33.7619, 81.269, 20.3601, 0.28 ) }
    dend_29 { pt3dadd( 35.5155, 86.0332, 19.7394, 0.28 ) }
    dend_29 { pt3dadd( 35.9459, 87.1374, 19.5498, 0.55 ) }
    dend_29 { pt3dadd( 37.4566, 90.7133, 18.7686, 0.28 ) }
    dend_29 { pt3dadd( 38.2015, 92.3518, 18.2998, 0.28 ) }
    dend_29 { pt3dadd( 39.1032, 94.0731, 17.5636, 0.28 ) }
    dend_29 { pt3dadd( 39.6291, 94.893, 17.0057, 0.55 ) }
    dend_29 { pt3dadd( 40.5973, 96.1531, 15.8528, 0.28 ) }
    dend_29 { pt3dadd( 40.9725, 96.5876, 15.448, 0.55 ) }
    dend_29 { pt3dadd( 43.0015, 98.6263, 13.3884, 0.28 ) }
    dend_29 { pt3dadd( 43.5555, 99.2314, 13.0648, 0.55 ) }
    dend_29 { pt3dadd( 44.0702, 99.8303, 12.906, 0.28 ) }
    dend_29 { pt3dadd( 44.4569, 100.296, 12.8323, 0.55 ) }
    dend_29 { pt3dadd( 46.7721, 103.205, 12.6896, 0.28 ) }
    dend_29 { pt3dadd( 47.2818, 103.866, 12.7115, 0.55 ) }
    dend_29 { pt3dadd( 51.5344, 109.513, 13.5792, 0.28 ) }
    dend_29 { pt3dadd( 51.8985, 110.002, 13.6687, 0.55 ) }
    dend_29 { pt3dadd( 54.6003, 116.563, 13.4499, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 86/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 26.1106, 11.0806, 19.8419, 0.83 ) }
    dend_27 { pt3dadd( 27.8401, 11.6619, 21.2931, 0.83 ) }
    dend_27 { pt3dadd( 29.5794, 12.3002, 22.7556, 0.83 ) }
    dend_27 { pt3dadd( 32.5011, 13.3296, 25.4387, 0.83 ) }
    dend_27 { pt3dadd( 35.1012, 14.2958, 27.8888, 0.83 ) }
    dend_27 { pt3dadd( 37.7857, 15.4505, 30.5941, 0.83 ) }
    dend_27 { pt3dadd( 41.1276, 17.1498, 34.2975, 0.83 ) }
    dend_27 { pt3dadd( 42.4829, 17.9503, 35.9574, 1.11 ) }
    dend_27 { pt3dadd( 45.1705, 19.7804, 39.6089, 0.83 ) }
    dend_27 { pt3dadd( 47.1128, 21.253, 42.5858, 1.11 ) }
    dend_27 { pt3dadd( 49.3864, 22.9194, 46.3962, 0.83 ) }
    dend_27 { pt3dadd( 51.7869, 24.5882, 50.5759, 0.55 ) }
    dend_27 { pt3dadd( 52.6901, 25.2407, 52.1783, 0.83 ) }
    dend_27 { pt3dadd( 55.799, 27.5205, 57.8996, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( 58.0976, 29.2103, 62.1713, 0.55 ) }
    dend_27 { pt3dadd( 59.088, 29.8406, 64.0422, 0.28 ) }
    dend_27 { pt3dadd( 60.698, 30.5618, 66.8085, 0.55 ) }
    dend_27 { pt3dadd( 65.9157, 32.4061, 78.2338, 0.55 ) }
    dend_27 { pt3dadd( 70.7984, 35.7789, 89.4942, 0.55 ) }
    dend_27 { pt3dadd( 76.2549, 39.2372, 100.463, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 6/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 26.1106, 11.0806, 19.8419, 0.83 ) }
    dend_26 { pt3dadd( 28.0535, 9.33767, 19.9923, 0.83 ) }
    dend_26 { pt3dadd( 29.6963, 7.92056, 20.0972, 0.83 ) }
    dend_26 { pt3dadd( 32.9496, 5.19353, 20.2364, 0.83 ) }
    dend_26 { pt3dadd( 35.8852, 2.67531, 20.26, 0.83 ) }
    dend_26 { pt3dadd( 37.6794, 1.02398, 20.2492, 0.55 ) }
    dend_26 { pt3dadd( 38.7297, -0.0135627, 20.2536, 0.55 ) }
    dend_26 { pt3dadd( 39.3409, -0.609064, 20.3401, 0.55 ) }
    dend_26 { pt3dadd( 40.535, -1.82134, 20.7131, 0.55 ) }
    dend_26 { pt3dadd( 42.5665, -3.94975, 21.8725, 0.55 ) }
    dend_26 { pt3dadd( 44.1441, -5.54203, 23.2205, 0.55 ) }
    dend_26 { pt3dadd( 46.4492, -7.84046, 25.5766, 0.55 ) }
    dend_26 { pt3dadd( 50.3515, -11.5796, 30.1841, 0.55 ) }
    dend_26 { pt3dadd( 51.8411, -12.9402, 32.1359, 0.55 ) }
    dend_26 { pt3dadd( 54.9292, -15.588, 36.4009, 0.55 ) }
    dend_26 { pt3dadd( 57.8981, -17.9692, 40.7431, 0.55 ) }
    dend_26 { pt3dadd( 59.3225, -19.0264, 42.9016, 0.55 ) }
    dend_26 { pt3dadd( 61.7233, -20.7173, 46.7223, 0.28 ) }
    dend_26 { pt3dadd( 62.9496, -21.5873, 48.6567, 0.55 ) }
    dend_26 { pt3dadd( 63.9333, -22.2185, 50.1859, 0.28 ) }
    dend_26 { pt3dadd( 69.8906, -26.0378, 56.7045, 0.28 ) }
    dend_26 { pt3dadd( 75.5216, -30.3488, 63.2278, 0.28 ) }
    dend_26 { pt3dadd( 80.5111, -34.364, 70.4047, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 29/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.61667, 24.3073, -13.1926, 0.55 ) }
    dend_20 { pt3dadd( -6.32155, 24.2353, -14.2489, 0.55 ) }
    dend_20 { pt3dadd( -4.13784, 24.1668, -15.2539, 0.55 ) }
    dend_20 { pt3dadd( -2.46989, 24.1145, -16.0215, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.61667, 24.3073, -13.1926, 0.83 ) }
    dend_15 { pt3dadd( -10.8934, 26.6912, -20.8676, 0.83 ) }
    dend_15 { pt3dadd( -12.0047, 27.8548, -24.6139, 0.83 ) }
    dend_15 { pt3dadd( -13.7322, 29.6636, -30.4371, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 10.0018, -19.5917, -5.61433, 0.55 ) }
    dend_10 { pt3dadd( 12.0603, -21.585, -4.81662, 0.55 ) }
    dend_10 { pt3dadd( 14.9273, -24.2986, -3.71077, 0.55 ) }
    dend_10 { pt3dadd( 16.4121, -25.6566, -3.37649, 0.55 ) }
    dend_10 { pt3dadd( 20.7869, -29.658, -2.39151, 0.55 ) }
    dend_10 { pt3dadd( 24.1292, -32.7149, -1.639, 0.55 ) }
    dend_10 { pt3dadd( 26.4213, -34.8114, -1.12293, 0.55 ) }
    dend_10 { pt3dadd( 28.661, -36.5639, -0.645051, 0.55 ) }
    dend_10 { pt3dadd( 33.5893, -39.8804, 0.255012, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 46/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 10.0018, -19.5917, -5.61433, 0.83 ) }
    dend_7 { pt3dadd( 12.1764, -20.1452, -5.93147, 0.83 ) }
    dend_7 { pt3dadd( 14.4432, -20.7222, -6.26206, 0.83 ) }
    dend_7 { pt3dadd( 17.3123, -21.4525, -6.68048, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 50/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.35715, -15.6959, -3.68949, 0.55 ) }
    dend_5 { pt3dadd( -3.04799, -18.795, -7.92968, 0.55 ) }
    dend_5 { pt3dadd( -3.25388, -20.3197, -9.99646, 0.55 ) }
    dend_5 { pt3dadd( -3.52893, -24.408, -15.5028, 0.55 ) }
    dend_5 { pt3dadd( -3.50534, -25.7776, -17.344, 0.55 ) }
    dend_5 { pt3dadd( -3.29125, -28.4723, -20.9649, 0.55 ) }
    dend_5 { pt3dadd( -3.21836, -29.3792, -22.1546, 0.55 ) }
    dend_5 { pt3dadd( -3.06827, -30.465, -23.4355, 0.55 ) }
    dend_5 { pt3dadd( -2.7385, -32.9416, -26.2697, 0.55 ) }
    dend_5 { pt3dadd( -2.3415, -35.3216, -28.8239, 0.55 ) }
    dend_5 { pt3dadd( -1.96613, -37.3983, -31.1344, 0.55 ) }
    dend_5 { pt3dadd( -1.60496, -39.8497, -33.6598, 0.55 ) }
    dend_5 { pt3dadd( -1.50413, -41.2213, -35.0214, 0.28 ) }
    dend_5 { pt3dadd( -1.51043, -41.9311, -35.6956, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 64/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.35715, -15.6959, -3.68949, 1.38 ) }
    dend_2 { pt3dadd( -3.97698, -18.3523, -4.22156, 1.38 ) }
    dend_2 { pt3dadd( -5.31919, -20.5535, -4.66243, 1.38 ) }
    dend_2 { pt3dadd( -6.42465, -22.3664, -5.02554, 1.38 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 68/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -22.8154, -38.531, 42.5388, 0.28 ) }
    dend_45 { pt3dadd( -25.4724, -40.5965, 49.2853, 0.28 ) }
    dend_45 { pt3dadd( -29.184, -44.1425, 54.8627, 0.28 ) }
    dend_45 { pt3dadd( -32.841, -47.7428, 60.4439, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 72/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -22.8154, -38.531, 42.5388, 0.55 ) }
    dend_44 { pt3dadd( -23.9232, -41.9848, 50.833, 0.28 ) }
    dend_44 { pt3dadd( -24.212, -44.1603, 59.5919, 0.28 ) }
    dend_44 { pt3dadd( -24.6184, -48.0955, 67.7491, 0.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 76/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -26.0439, -43.1965, 6.32296, 0.28 ) }
    dend_40 { pt3dadd( -28.5648, -46.2054, 6.70179, 0.28 ) }
    dend_40 { pt3dadd( -31.472, -49.4523, 7.09059, 0.28 ) }
    dend_40 { pt3dadd( -32.5463, -50.5963, 7.27713, 0.55 ) }
    dend_40 { pt3dadd( -36.1375, -54.4785, 8.60886, 0.28 ) }
    dend_40 { pt3dadd( -37.3889, -55.8486, 9.21132, 0.55 ) }
    dend_40 { pt3dadd( -38.8393, -57.4494, 9.98218, 0.83 ) }
    dend_40 { pt3dadd( -40.2909, -59.0218, 10.8613, 0.28 ) }
    dend_40 { pt3dadd( -41.5324, -60.3519, 11.7912, 0.83 ) }
    dend_40 { pt3dadd( -45.5268, -64.6086, 15.3698, 0.28 ) }
    dend_40 { pt3dadd( -46.1618, -65.2812, 16.1209, 0.83 ) }
    dend_40 { pt3dadd( -46.7796, -65.9784, 16.9965, 0.55 ) }
    dend_40 { pt3dadd( -47.7463, -67.2225, 18.6998, 0.83 ) }
    dend_40 { pt3dadd( -52.6723, -75.3374, 21.2505, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -26.0439, -43.1965, 6.32296, 0.55 ) }
    dend_39 { pt3dadd( -26.1028, -43.6023, 6.43237, 0.55 ) }
    dend_39 { pt3dadd( -26.5357, -46.4792, 7.08096, 0.28 ) }
    dend_39 { pt3dadd( -26.8006, -48.2657, 7.17068, 0.28 ) }
    dend_39 { pt3dadd( -27.254, -51.2452, 7.04345, 1.38 ) }
    dend_39 { pt3dadd( -27.7202, -53.7814, 6.98712, 0.28 ) }
    dend_39 { pt3dadd( -28.0037, -55.2459, 6.96693, 0.55 ) }
    dend_39 { pt3dadd( -28.3652, -57.0007, 6.89837, 0.83 ) }
    dend_39 { pt3dadd( -29.2717, -61.5003, 6.5294, 0.28 ) }
    dend_39 { pt3dadd( -29.5334, -62.764, 6.39769, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_39 { pt3dadd( -30.6141, -68.4186, 5.70135, 0.28 ) }
    dend_39 { pt3dadd( -31.0093, -70.6758, 5.45437, 1.11 ) }
    dend_39 { pt3dadd( -31.287, -72.4312, 5.26822, 0.28 ) }
    dend_39 { pt3dadd( -31.7133, -74.9395, 4.92872, 0.83 ) }
    dend_39 { pt3dadd( -32.2037, -77.7161, 4.52624, 0.28 ) }
    dend_39 { pt3dadd( -32.5945, -79.7018, 4.24511, 0.83 ) }
    dend_39 { pt3dadd( -33.8532, -85.6749, 3.33042, 0.28 ) }
    dend_39 { pt3dadd( -34.2485, -87.4125, 3.1379, 1.38 ) }
    dend_39 { pt3dadd( -35.7116, -93.2576, 2.7351, 0.28 ) }
    dend_39 { pt3dadd( -36.1063, -94.7674, 2.72272, 1.11 ) }
    dend_39 { pt3dadd( -37.4415, -99.9399, 2.95038, 0.28 ) }
    dend_39 { pt3dadd( -37.6203, -100.685, 3.02623, 0.83 ) }
    dend_39 { pt3dadd( -38.2705, -103.743, 3.5791, 0.28 ) }
    dend_39 { pt3dadd( -38.5659, -105.696, 4.11737, 1.11 ) }
    dend_39 { pt3dadd( -38.9216, -109.078, 5.27325, 0.28 ) }
    dend_39 { pt3dadd( -39.0298, -110.063, 5.61663, 0.55 ) }
    dend_39 { pt3dadd( -39.2832, -112.236, 6.37328, 0.28 ) }
    dend_39 { pt3dadd( -39.359, -112.703, 6.55822, 1.11 ) }
    dend_39 { pt3dadd( -40.7384, -119.521, 9.49115, 0.28 ) }
    dend_39 { pt3dadd( -40.9874, -120.651, 10.0023, 1.11 ) }
    dend_39 { pt3dadd( -42.029, -124.499, 11.8037, 0.28 ) }
    dend_39 { pt3dadd( -42.4318, -125.864, 12.4821, 0.55 ) }
    dend_39 { pt3dadd( -43.2155, -128.263, 13.763, 0.28 ) }
    dend_39 { pt3dadd( -43.5984, -129.306, 14.346, 0.55 ) }
    dend_39 { pt3dadd( -44.2701, -138.33, 16.1916, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 25/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -21.0713, -13.4706, 7.99951, 0.55 ) }
    dend_37 { pt3dadd( -23.9097, -14.8277, 8.82788, 0.55 ) }
    dend_37 { pt3dadd( -27.6126, -16.4077, 10.2275, 0.55 ) }
    dend_37 { pt3dadd( -29.9336, -17.3522, 11.1421, 0.83 ) }
    dend_37 { pt3dadd( -32.3151, -18.302, 12.0984, 0.55 ) }
    dend_37 { pt3dadd( -35.8738, -19.8272, 13.6221, 0.55 ) }
    dend_37 { pt3dadd( -39.6832, -21.6172, 15.2819, 0.83 ) }
    dend_37 { pt3dadd( -42.9741, -23.3698, 16.8602, 0.55 ) }
    dend_37 { pt3dadd( -44.6894, -24.4697, 17.7334, 0.55 ) }
    dend_37 { pt3dadd( -46.4317, -25.7657, 18.6755, 0.83 ) }
    dend_37 { pt3dadd( -48.6926, -27.6194, 19.9143, 0.28 ) }
    dend_37 { pt3dadd( -50.4436, -29.13, 20.7914, 1.11 ) }
    dend_37 { pt3dadd( -53.3775, -31.8426, 22.2859, 0.28 ) }
    dend_37 { pt3dadd( -54.7668, -33.0942, 22.9534, 1.11 ) }
    dend_37 { pt3dadd( -58.1901, -35.866, 24.5314, 0.28 ) }
    dend_37 { pt3dadd( -59.4374, -36.7345, 25.048, 0.55 ) }
    dend_37 { pt3dadd( -60.9068, -37.5672, 25.5487, 0.28 ) }
    dend_37 { pt3dadd( -62.2088, -38.1853, 25.9305, 0.83 ) }
    dend_37 { pt3dadd( -64.6781, -39.1736, 26.4825, 0.28 ) }
    dend_37 { pt3dadd( -68.2026, -40.6886, 27.1173, 0.28 ) }
    dend_37 { pt3dadd( -69.2153, -41.1715, 27.2231, 1.11 ) }
    dend_37 { pt3dadd( -70.6753, -41.8889, 27.4439, 0.28 ) }
    dend_37 { pt3dadd( -72.2003, -42.6573, 27.8054, 0.55 ) }
    dend_37 { pt3dadd( -73.8101, -43.4401, 28.2032, 0.28 ) }
    dend_37 { pt3dadd( -75.6327, -44.3315, 28.6473, 0.83 ) }
    dend_37 { pt3dadd( -77.1439, -45.0589, 29.174, 0.28 ) }
    dend_37 { pt3dadd( -80.1337, -46.5141, 30.357, 0.28 ) }
    dend_37 { pt3dadd( -82.9155, -47.8438, 31.6568, 1.38 ) }
    dend_37 { pt3dadd( -90.3391, -51.3773, 35.418, 0.28 ) }
    dend_37 { pt3dadd( -91.8633, -52.1334, 36.3369, 1.11 ) }
    dend_37 { pt3dadd( -97.1815, -54.8975, 39.8177, 0.28 ) }
    dend_37 { pt3dadd( -98.0493, -55.38, 40.4153, 0.83 ) }
    dend_37 { pt3dadd( -102.547, -58.0302, 43.7415, 0.28 ) }
    dend_37 { pt3dadd( -102.989, -58.302, 44.093, 1.11 ) }
    dend_37 { pt3dadd( -111.421, -63.8637, 51.9507, 0.28 ) }
    dend_37 { pt3dadd( -112.334, -64.4716, 52.8136, 1.11 ) }
    dend_37 { pt3dadd( -113.899, -65.5492, 54.2427, 0.28 ) }
    dend_37 { pt3dadd( -116.041, -67.0661, 56.2466, 0.55 ) }
    dend_37 { pt3dadd( -123.634, -71.5581, 60.7019, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 64/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -21.0713, -13.4706, 7.99951, 0.83 ) }
    dend_36 { pt3dadd( -23.2687, -12.8078, 6.39067, 0.83 ) }
    dend_36 { pt3dadd( -27.0095, -11.8422, 3.60393, 0.83 ) }
    dend_36 { pt3dadd( -30.4138, -10.9403, 1.01883, 0.83 ) }
    dend_36 { pt3dadd( -34.8891, -9.81382, -2.64467, 0.83 ) }
    dend_36 { pt3dadd( -37.8122, -9.23543, -5.17241, 0.83 ) }
    dend_36 { pt3dadd( -40.9463, -8.69014, -7.87517, 0.83 ) }
    dend_36 { pt3dadd( -43.0147, -8.34235, -9.81524, 0.55 ) }
    dend_36 { pt3dadd( -43.977, -8.14522, -10.7926, 0.55 ) }
    dend_36 { pt3dadd( -46.5588, -7.71599, -13.4806, 0.55 ) }
    dend_36 { pt3dadd( -49.6949, -7.39887, -17.0324, 0.55 ) }
    dend_36 { pt3dadd( -50.9053, -7.27425, -18.5537, 0.55 ) }
    dend_36 { pt3dadd( -53.7413, -6.94792, -22.6665, 0.55 ) }
    dend_36 { pt3dadd( -55.2944, -6.81686, -25.2265, 0.55 ) }
    dend_36 { pt3dadd( -57.383, -6.77114, -29.0697, 0.55 ) }
    dend_36 { pt3dadd( -58.3355, -6.78725, -31.0281, 0.55 ) }
    dend_36 { pt3dadd( -59.5948, -6.85241, -33.993, 1.11 ) }
    dend_36 { pt3dadd( -60.7772, -7.22057, -37.8634, 0.55 ) }
    dend_36 { pt3dadd( -61.5948, -7.9437, -42.2201, 0.55 ) }
    dend_36 { pt3dadd( -61.7717, -8.62721, -45.6722, 0.55 ) }
    dend_36 { pt3dadd( -61.7711, -8.78051, -46.4059, 0.55 ) }
    dend_36 { pt3dadd( -61.7135, -9.10787, -47.9313, 0.55 ) }
    dend_36 { pt3dadd( -60.8989, -10.9824, -56.1197, 0.55 ) }
    dend_36 { pt3dadd( -60.5179, -11.5003, -58.3249, 0.55 ) }
    dend_36 { pt3dadd( -58.3704, -13.5871, -67.2837, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 89/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.25335, 28.5103, 5.62184, 0.55 ) }
    dend_32 { pt3dadd( -1.7199, 34.9721, -1.92916, 0.55 ) }
    dend_32 { pt3dadd( -4.13361, 42.3898, -8.84514, 0.55 ) }
    dend_32 { pt3dadd( -7.20661, 50.5939, -14.6205, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.25335, 28.5103, 5.62184, 0.55 ) }
    dend_31 { pt3dadd( -5.19967, 36.0713, -2.60842, 0.55 ) }
    dend_31 { pt3dadd( -9.8211, 44.8829, -10.9002, 0.55 ) }
    dend_31 { pt3dadd( -12.4247, 54.1178, -19.5967, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.46989, 24.1145, -16.0215, 0.55 ) }
    dend_22 { pt3dadd( -2.57157, 21.6217, -14.5711, 0.55 ) }
    dend_22 { pt3dadd( -2.75564, 17.1091, -11.9455, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 0/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.46989, 24.1145, -16.0215, 0.55 ) }
    dend_21 { pt3dadd( -1.64137, 25.7783, -17.3252, 0.55 ) }
    dend_21 { pt3dadd( -0.720943, 28.3252, -18.9164, 0.55 ) }
    dend_21 { pt3dadd( 0.162208, 31.0944, -20.3564, 0.55 ) }
    dend_21 { pt3dadd( 0.732954, 33.2134, -21.3264, 0.55 ) }
    dend_21 { pt3dadd( 1.38105, 35.4681, -22.2654, 0.55 ) }
    dend_21 { pt3dadd( 2.13025, 38.2109, -23.2854, 0.55 ) }
    dend_21 { pt3dadd( 3.06576, 42.3075, -24.5349, 0.55 ) }
    dend_21 { pt3dadd( 3.80632, 46.0282, -25.3817, 0.55 ) }
    dend_21 { pt3dadd( 4.15699, 48.1045, -25.7511, 0.55 ) }
    dend_21 { pt3dadd( 4.95142, 52.7174, -26.4539, 0.55 ) }
    dend_21 { pt3dadd( 5.78328, 57.0548, -27.012, 0.55 ) }
    dend_21 { pt3dadd( 6.38642, 60.3885, -27.4048, 0.55 ) }
    dend_21 { pt3dadd( 6.96807, 63.2224, -27.7275, 0.55 ) }
    dend_21 { pt3dadd( 7.50047, 65.5966, -28.0685, 0.55 ) }
    dend_21 { pt3dadd( 8.1389, 67.9146, -28.6015, 0.55 ) }
    dend_21 { pt3dadd( 8.96487, 70.9442, -29.3753, 0.55 ) }
    dend_21 { pt3dadd( 9.82949, 73.4942, -30.1792, 0.55 ) }
    dend_21 { pt3dadd( 10.7352, 75.7522, -31.065, 0.55 ) }
    dend_21 { pt3dadd( 11.9978, 78.4807, -32.4176, 0.55 ) }
    dend_21 { pt3dadd( 14.2256, 82.8401, -34.9721, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 21/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.7322, 29.6636, -30.4371, 0.55 ) }
    dend_19 { pt3dadd( -16.8636, 31.1924, -35.6645, 0.55 ) }
    dend_19 { pt3dadd( -18.9557, 32.2138, -39.1569, 0.55 ) }
    dend_19 { pt3dadd( -20.69, 33.0605, -42.0519, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.7322, 29.6636, -30.4371, 0.83 ) }
    dend_16 { pt3dadd( -12.7308, 36.8731, -31.8215, 0.83 ) }
    dend_16 { pt3dadd( -12.1527, 40.7106, -32.4497, 0.55 ) }
    dend_16 { pt3dadd( -11.7621, 44.5663, -33.0617, 0.55 ) }
    dend_16 { pt3dadd( -11.4685, 47.4644, -33.5217, 0.55 ) }
    dend_16 { pt3dadd( -11.0664, 51.4336, -34.1517, 0.55 ) }
    dend_16 { pt3dadd( -10.6585, 55.4597, -34.7908, 0.55 ) }
    dend_16 { pt3dadd( -10.2704, 58.8447, -34.9877, 0.83 ) }
    dend_16 { pt3dadd( -9.54299, 63.6817, -35.4989, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 33.5893, -39.8804, 0.255012, 0.28 ) }
    dend_12 { pt3dadd( 34.7122, -45.0195, -1.88187, 0.28 ) }
    dend_12 { pt3dadd( 35.0568, -46.5965, -2.53757, 0.28 ) }
    dend_12 { pt3dadd( 35.3869, -48.1072, -3.16573, 0.55 ) }
    dend_12 { pt3dadd( 36.0136, -50.9757, -4.35849, 0.28 ) }
    dend_12 { pt3dadd( 36.3873, -52.6857, -5.06952, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 40/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 33.5893, -39.8804, 0.255012, 0.55 ) }
    dend_11 { pt3dadd( 36.743, -43.3976, -3.28794, 0.55 ) }
    dend_11 { pt3dadd( 37.3229, -44.0444, -3.93944, 0.55 ) }
    dend_11 { pt3dadd( 38.7083, -45.5896, -5.49591, 0.55 ) }
    dend_11 { pt3dadd( 39.8354, -46.8465, -6.76207, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 45/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 17.3123, -21.4525, -6.68048, 0.55 ) }
    dend_9 { pt3dadd( 19.5961, -20.9774, -7.83765, 0.55 ) }
    dend_9 { pt3dadd( 20.915, -20.7972, -8.54226, 0.55 ) }
    dend_9 { pt3dadd( 22.4789, -20.5836, -9.37779, 0.55 ) }
    dend_9 { pt3dadd( 24.2643, -20.3397, -10.3316, 0.55 ) }
    dend_9 { pt3dadd( 27.0272, -19.9623, -11.8077, 0.28 ) }
    dend_9 { pt3dadd( 27.8318, -19.8524, -12.2376, 0.83 ) }
    dend_9 { pt3dadd( 29.9354, -19.6821, -13.4046, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 17.3123, -21.4525, -6.68048, 0.55 ) }
    dend_8 { pt3dadd( 18.946, -22.4908, -6.05346, 0.55 ) }
    dend_8 { pt3dadd( 20.5306, -23.293, -5.44655, 0.55 ) }
    dend_8 { pt3dadd( 22.6431, -24.2084, -4.62052, 0.55 ) }
    dend_8 { pt3dadd( 23.9239, -24.7386, -4.18789, 0.55 ) }
    dend_8 { pt3dadd( 25.7671, -25.5968, -3.47395, 0.55 ) }
    dend_8 { pt3dadd( 27.227, -26.3068, -2.8861, 0.55 ) }
    dend_8 { pt3dadd( 29.8882, -27.5175, -1.75305, 0.55 ) }
    dend_8 { pt3dadd( 30.7829, -27.8274, -1.42119, 0.55 ) }
    dend_8 { pt3dadd( 33.5298, -28.4974, -0.496185, 0.55 ) }
    dend_8 { pt3dadd( 37.3602, -29.1678, 0.693768, 0.55 ) }
    dend_8 { pt3dadd( 39.352, -29.4458, 1.34229, 0.55 ) }
    dend_8 { pt3dadd( 40.8866, -29.5725, 1.75704, 0.55 ) }
    dend_8 { pt3dadd( 45.6002, -29.7987, 2.97393, 0.28 ) }
    dend_8 { pt3dadd( 46.6967, -29.864, 3.21251, 0.55 ) }
    dend_8 { pt3dadd( 48.0935, -29.971, 3.48894, 0.55 ) }
    dend_8 { pt3dadd( 50.4138, -30.2557, 3.78463, 0.28 ) }
    dend_8 { pt3dadd( 54.2761, -31.1379, 4.46687, 0.55 ) }
    dend_8 { pt3dadd( 56.8081, -32.001, 5.0277, 0.28 ) }
    dend_8 { pt3dadd( 59.9779, -33.4868, 5.92714, 0.28 ) }
    dend_8 { pt3dadd( 62.5645, -34.7714, 6.6799, 0.55 ) }
    dend_8 { pt3dadd( 64.1057, -35.5745, 7.11325, 0.28 ) }
    dend_8 { pt3dadd( 66.2721, -36.7379, 7.71508, 0.28 ) }
    dend_8 { pt3dadd( 67.6224, -37.5312, 8.25163, 0.83 ) }
    dend_8 { pt3dadd( 69.3801, -38.5649, 8.8985, 0.55 ) }
    dend_8 { pt3dadd( 70.661, -39.2292, 9.56326, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.42465, -22.3664, -5.02554, 0.55 ) }
    dend_4 { pt3dadd( -6.34469, -26.6558, -2.97416, 0.55 ) }
    dend_4 { pt3dadd( -6.0695, -34.9605, 1.19137, 0.55 ) }
    dend_4 { pt3dadd( -5.81366, -41.7566, 4.59646, 0.55 ) }
    dend_4 { pt3dadd( -5.64997, -46.1048, 6.77506, 0.55 ) }
    dend_4 { pt3dadd( -5.30955, -55.1477, 11.3059, 0.55 ) }
    dend_4 { pt3dadd( -5.079, -61.2717, 14.3742, 0.55 ) }
    dend_4 { pt3dadd( -4.83592, -64.3034, 16.0124, 0.28 ) }
    dend_4 { pt3dadd( -4.68393, -65.9311, 16.9404, 0.55 ) }
    dend_4 { pt3dadd( -3.95693, -77.4652, 24.1399, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.42465, -22.3664, -5.02554, 0.83 ) }
    dend_3 { pt3dadd( -7.56966, -23.2588, -7.82548, 0.83 ) }
    dend_3 { pt3dadd( -8.85967, -24.2062, -10.6002, 0.83 ) }
    dend_3 { pt3dadd( -10.2396, -25.1957, -13.1897, 0.83 ) }
    dend_3 { pt3dadd( -11.8363, -26.2919, -15.9599, 0.83 ) }
    dend_3 { pt3dadd( -18.4312, -30.865, -26.8837, 0.55 ) }
    dend_3 { pt3dadd( -20.5041, -32.3024, -30.3173, 0.55 ) }
    dend_3 { pt3dadd( -21.9, -33.3277, -32.5994, 0.55 ) }
    dend_3 { pt3dadd( -23.9049, -34.8128, -35.7103, 0.55 ) }
    dend_3 { pt3dadd( -25.3167, -35.8126, -37.767, 0.55 ) }
    dend_3 { pt3dadd( -26.1075, -36.3508, -38.7674, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 0/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -9.54299, 63.6817, -35.4989, 0.55 ) }
    dend_18 { pt3dadd( -10.7181, 67.5036, -31.146, 0.55 ) }
    dend_18 { pt3dadd( -11.7101, 71.6362, -26.6857, 0.55 ) }
    dend_18 { pt3dadd( -12.0559, 73.8, -24.2099, 0.55 ) }
    dend_18 { pt3dadd( -12.5043, 76.7647, -20.7787, 0.55 ) }
    dend_18 { pt3dadd( -12.7366, 78.5714, -18.8624, 0.55 ) }
    dend_18 { pt3dadd( -13.1186, 81.542, -15.7117, 0.55 ) }
    dend_18 { pt3dadd( -13.2122, 83.5048, -13.7055, 0.55 ) }
    dend_18 { pt3dadd( -13.3099, 90.4092, -6.97167, 0.28 ) }
    dend_18 { pt3dadd( -13.2945, 91.3447, -6.0188, 0.28 ) }
    dend_18 { pt3dadd( -13.3072, 94.7108, -2.63469, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.54299, 63.6817, -35.4989, 0.55 ) }
    dend_17 { pt3dadd( -9.87618, 65.4965, -35.7782, 0.55 ) }
    dend_17 { pt3dadd( -10.1938, 67.1981, -35.9758, 0.55 ) }
    dend_17 { pt3dadd( -10.6457, 70.1443, -36.2627, 0.55 ) }
    dend_17 { pt3dadd( -10.8272, 72.1203, -36.4357, 0.55 ) }
    dend_17 { pt3dadd( -10.9631, 74.5705, -36.6396, 0.55 ) }
    dend_17 { pt3dadd( -11.1757, 77.526, -36.832, 0.55 ) }
    dend_17 { pt3dadd( -11.2945, 79.1785, -36.8833, 0.55 ) }
    dend_17 { pt3dadd( -11.4938, 81.1592, -36.9133, 0.55 ) }
    dend_17 { pt3dadd( -11.7194, 83.7303, -36.8924, 0.55 ) }
    dend_17 { pt3dadd( -12.0468, 87.309, -36.8525, 0.55 ) }
    dend_17 { pt3dadd( -12.3374, 89.917, -36.8515, 0.55 ) }
    dend_17 { pt3dadd( -12.7519, 92.3498, -36.8226, 0.55 ) }
    dend_17 { pt3dadd( -13.1272, 94.0416, -36.7952, 0.55 ) }
    dend_17 { pt3dadd( -14.1285, 97.392, -36.7726, 0.55 ) }
    dend_17 { pt3dadd( -14.5303, 98.5647, -36.8186, 0.55 ) }
    dend_17 { pt3dadd( -15.1186, 100.433, -37.0268, 0.55 ) }
    dend_17 { pt3dadd( -15.7624, 102.59, -37.3394, 0.55 ) }
    dend_17 { pt3dadd( -16.4389, 104.76, -37.7108, 0.55 ) }
    dend_17 { pt3dadd( -17.2158, 107.457, -38.2589, 0.55 ) }
    dend_17 { pt3dadd( -18.1391, 110.415, -39.0437, 0.55 ) }
    dend_17 { pt3dadd( -18.7918, 112.759, -39.7726, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_24, dend_13, dend_0, dend_41, dend_34, dend_28, dend_25, dend_23, dend_14, dend_6, dend_1, dend_43, dend_42, dend_38, dend_35, dend_30, dend_29, dend_27, dend_26, dend_20, dend_15, dend_10, dend_7, dend_5, dend_2, dend_45, dend_44, dend_40, dend_39, dend_37, dend_36, dend_32, dend_31, dend_22, dend_21, dend_19, dend_16, dend_12, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_43 OneSecGrp_SectionRef_16.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_42 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_29 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_26 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_37 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_36 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_21 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_3 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_18 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_34 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_6 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_28 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_22 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_30 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_9 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_32 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_45 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_44 OneSecGrp_SectionRef_31.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_24, dend_13, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_34, dend_34, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_42 nseg = 7
    dend_29 nseg = 5
    dend_27 nseg = 5
    dend_26 nseg = 5
    dend_5 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 5
    dend_37 nseg = 7
    dend_36 nseg = 5
    dend_21 nseg = 3
    dend_8 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_18 nseg = 3
    dend_17 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_LBC_f39fa9100b_0_0


