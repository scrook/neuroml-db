// Cell: dNAC222_L5_ChC_2f130a9db3_0_0
/*
{
  "id" : "dNAC222_L5_ChC_2f130a9db3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.9668, -3.45834, 0.37", "0.0589085, 13.3996, -3.55427, 0.37", "-0.00261823, 13.7888, -3.62356, 0.74", "0.0370296, 14.0955, -3.72988, 0.74", "0.370741, 15.0375, -4.13427, 0.37", "0.699017, 15.7906, -4.43489, 0.66", "1.08271, 16.5678, -4.75602, 1.33", "1.44412, 17.1474, -5.00647, 1.33", "2.05233, 18.1046, -5.42726, 0.74", "2.50666, 18.8699, -5.74414, 0.74", "3.19898, 20.135, -6.26699, 1.25", "3.63527, 21.1521, -6.66945, 2.06", "3.85659, 21.9115, -6.93827, 2.06", "4.00906, 22.9399, -7.27046, 1.4", "3.95118, 24.1275, -7.6404, 0.74", "3.69605, 24.9065, -7.88527, 1.11", "3.25213, 25.5035, -8.07482, 1.11", "2.61209, 26.0136, -8.22491, 0.81", "1.76915, 26.4445, -8.43177, 0.81", "0.739116, 26.7948, -8.70384, 0.81", "-0.265143, 27.0515, -8.99788, 0.96", "-1.09424, 27.2624, -9.25032, 1.11", "-1.83905, 27.4763, -9.51964, 1.11", "-3.45703, 28.055, -10.2263, 1.11", "-3.93509, 28.2928, -10.4861, 1.11", "-4.70623, 28.9253, -11.0201, 0.59", "-5.16193, 29.6037, -11.406, 0.96", "-5.43145, 30.23, -11.6614, 1.25", "-5.62168, 30.7948, -11.8363, 1.55", "-5.73707, 31.1506, -11.9116, 1.55", "-6.14916, 32.2431, -12.1215, 0.74", "-6.79661, 33.5643, -12.3714, 0.96", "-7.3328, 34.3653, -12.5517, 0.66", "-7.7778, 34.8693, -12.6923, 0.66", "-8.49242, 35.4954, -12.9152, 0.81", "-9.08551, 35.9068, -13.1062, 0.96", "-9.86591, 36.3486, -13.3778, 1.47", "-10.5849, 36.73, -13.642, 1.62", "-11.2639, 37.1458, -13.8988, 1.47", "-11.8959, 37.6122, -14.1504, 1.11", "-12.6099, 38.2535, -14.4553, 0.81", "-13.4505, 39.2084, -14.8683, 0.66", "-13.9022, 39.8672, -15.1191, 0.81", "-14.4831, 40.9791, -15.4943, 1.03", "-14.7077, 41.5585, -15.6839, 1.25", "-14.8676, 42.0976, -15.8685, 1.25", "-15.1565, 43.2613, -16.3065, 0.96", "-15.3719, 44.1594, -16.6929, 0.81", "-15.6721, 45.2675, -17.2343, 0.59", "-15.9195, 46.0374, -17.6364, 0.59", "-16.2599, 46.9496, -18.1184, 0.59", "-16.634, 47.8452, -18.5751, 0.59", "-16.9964, 48.6837, -18.9295, 0.44", "-17.3397, 49.5591, -19.2011, 0.66", "-17.6058, 50.4944, -19.3499, 0.74", "-17.692, 51.0813, -19.3762, 0.96", "-17.7002, 51.7381, -19.3566, 0.96", "-17.567, 53.1959, -19.3304, 0.52", "-17.3828, 54.3779, -19.3456, 0.59", "-17.139, 55.7185, -19.4115, 0.59", "-17.0133, 56.4676, -19.4798, 0.96", "-16.9168, 57.3318, -19.5991, 0.96", "-16.8866, 58.8664, -19.8999, 0.66", "-17.0397, 59.9213, -20.2096, 0.66", "-17.3774, 60.7758, -20.5319, 0.96", "-17.768, 61.294, -20.7461, 1.03", "-18.2665, 61.7124, -20.9494, 1.03", "-18.9291, 62.093, -21.1938, 1.03", "-19.8223, 62.4505, -21.5482, 0.74", "-20.5251, 62.6706, -21.8977, 0.74", "-20.9941, 62.7889, -22.1821, 0.52", "-22.0315, 63.0011, -22.9483, 0.52", "-22.9094, 63.1432, -23.675, 0.52", "-23.8047, 63.2559, -24.4508, 1.11", "-24.2915, 63.3043, -24.8589, 1.4", "-24.8443, 63.3422, -25.2739, 1.4", "-25.7893, 63.3688, -25.8631, 0.81", "-26.3719, 63.3821, -26.1013, 0.59", "-27.2492, 63.4282, -26.2887, 0.44", "-28.1306, 63.5183, -26.3396, 0.44", "-29.0244, 63.6693, -26.3134, 0.74", "-29.8784, 63.9213, -26.2466, 1.33", "-30.9172, 64.4176, -26.1862, 0.88", "-31.3776, 64.7495, -26.2506, 0.59", "-31.6628, 65.0405, -26.3673, 0.59", "-32.0641, 65.5556, -26.6608, 0.74", "-32.5606, 66.2779, -27.1743, 0.96", "-33.2016, 67.218, -27.96, 0.59", "-33.8649, 68.136, -28.8337, 0.59", "-34.21, 68.597, -29.2698, 0.81", "-34.6459, 69.1245, -29.7479, 0.96", "-35.0637, 69.5524, -30.1057, 1.03", "-35.7713, 70.2031, -30.5591, 0.66", "-35.9881, 70.4093, -30.6716, 0.66", "-36.5702, 71.058, -30.9519, 0.81", "-37.0838, 71.7603, -31.2543, 0.81", "-37.4742, 72.4852, -31.5514, 0.66", "-37.7924, 73.2571, -31.8548, 0.66", "-38.1885, 74.4577, -32.3181, 0.52", "-38.415, 75.2074, -32.6168, 0.81", "-38.5817, 75.7664, -32.849, 0.74", "-38.9847, 76.9657, -33.3415, 0.59", "-39.2307, 77.552, -33.5621, 0.74", "-39.5593, 78.1322, -33.753, 0.96", "-40.0668, 78.8291, -33.9042, 0.96", "-40.511, 79.3672, -33.9771, 0.74", "-41.1258, 80.0664, -34.0274, 1.03", "-41.5696, 80.556, -33.9877, 1.25", "-41.8809, 80.9267, -33.9241, 0.81", "-42.5414, 81.8018, -33.7193, 0.59", "-42.9438, 82.3957, -33.5498, 0.66", "-43.2778, 82.9341, -33.38, 0.66", "-44.1439, 84.4242, -32.8748, 0.88", "-44.5831, 85.1875, -32.5957, 1.11", "-44.8849, 85.7094, -32.3856, 1.03", "-45.2521, 86.3395, -32.1243, 1.25", "-45.3893, 86.5737, -32.0183, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 10.6858, -4.39834, 1.11", "4.91366, 11.4698, -4.85592, 1.11", "5.47873, 12.0958, -5.233, 1.11", "6.38027, 13.1429, -5.834, 1.11", "6.99864, 13.8971, -6.28645, 0.96", "8.02287, 15.017, -6.95502, 1.55", "8.91368, 15.9122, -7.4931, 1.62", "9.43829, 16.3825, -7.78688, 1.62", "10.249, 17.035, -8.14377, 1.25", "11.6082, 18.016, -8.56101, 0.96", "13.6846, 19.3638, -8.93963, 0.88", "14.6592, 19.9116, -8.99878, 1.55", "15.7235, 20.4273, -8.97309, 1.84", "17.3196, 21.1199, -8.84806, 1.11", "18.1575, 21.4678, -8.73836, 1.03", "19.0951, 21.8972, -8.55575, 1.25", "20.0021, 22.4358, -8.36566, 0.88", "20.8385, 23.0521, -8.19109, 0.88", "21.6217, 23.7252, -8.02987, 0.88", "22.5413, 24.5628, -7.83424, 0.88", "23.3277, 25.3255, -7.58097, 0.96", "24.1414, 26.1796, -7.27692, 0.96", "24.8839, 27.0444, -6.94583, 0.81", "25.9766, 28.3953, -6.36241, 1.11", "26.6931, 29.2514, -5.90891, 1.4", "27.5187, 30.1102, -5.29551, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 9.20533, 2.16166, 1.62", "4.44084, 9.61522, 2.67694, 1.62", "5.22412, 10.1061, 3.38235, 1.25", "6.64908, 10.7912, 4.81296, 1.25", "7.40261, 11.1027, 5.62025, 1.25", "8.18886, 11.3239, 6.56332, 1.92", "8.52157, 11.3847, 6.98702, 2.5", "9.2451, 11.4053, 7.98849, 2.5", "10.7416, 11.2112, 10.2156, 1.77", "11.7796, 10.8705, 11.757, 0.96", "13.2442, 10.2221, 13.9264, 0.88", "13.6629, 10.012, 14.5564, 0.88", "13.9932, 9.85273, 15.0386, 1.4", "14.3197, 9.72186, 15.4599, 1.4", "15.5107, 9.44034, 16.6662, 0.66", "16.0158, 9.47178, 17.0691, 0.66", "17.2154, 9.97407, 17.7792, 0.88", "17.9691, 10.4199, 18.1643, 0.88", "18.9157, 11.0856, 18.5393, 0.74", "19.6213, 11.6492, 18.7507, 1.4", "20.4334, 12.3536, 18.8985, 2.06", "21.2331, 13.0254, 18.9607, 1.84", "22.1921, 13.7938, 18.9061, 1.18", "23.1899, 14.5355, 18.8759, 1.18", "23.595, 14.7985, 18.9332, 1.03", "24.2723, 15.1516, 19.2145, 1.03", "24.7204, 15.343, 19.6663, 0.59", "25.1365, 15.5456, 20.3327, 0.59", "25.9518, 16.0146, 21.9932, 0.88", "26.9002, 16.6503, 24.1774, 1.62", "27.3077, 16.9619, 25.1273, 1.62", "28.2559, 17.7477, 27.324, 0.88", "28.6976, 18.1127, 28.2813, 0.88", "29.1051, 18.4608, 29.0729, 1.47", "29.3914, 18.7086, 29.527, 1.47", "30.1278, 19.2974, 30.4122, 0.81", "30.5386, 19.5675, 30.8086, 0.59", "30.9779, 19.7866, 31.1547, 0.59", "32.0496, 20.2623, 32.0088, 1.25", "33.735, 21.0356, 33.4142, 0.74", "34.2629, 21.3332, 33.9067, 0.29", "34.7328, 21.6211, 34.4045, 0.29", "35.0018, 21.7864, 34.7292, 0.59", "35.7142, 22.2397, 35.6073, 1.11", "36.0742, 22.4408, 36.038, 1.11", "36.8467, 23.1571, 36.9629, 1.11", "37.2831, 23.8089, 37.6981, 0.59", "37.295, 21.9397, 37.8191, 0.59", "37.4445, 20.0124, 38.2692, 0.52", "37.5479, 18.6663, 38.5804, 0.59", "44.1894, 20.901, 44.5004, 0.59", "51.1546, 23.9927, 49.6481, 0.59", "56.9111, 28.4676, 55.3389, 0.59", "62.6142, 33.8473, 60.3298, 0.59", "69.2456, 39.6201, 63.4093, 0.59", "75.2198, 45.6958, 67.2184, 0.59", "81.5233, 50.7013, 71.8256, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.75883, 1.60166, 1.69", "-3.56761, 6.75883, 1.60166, 1.69", "-4.04495, 7.08167, 1.96551, 1.69", "-4.6218, 7.4094, 2.45797, 1.4", "-5.01762, 7.63064, 2.90196, 1.03", "-5.55252, 7.95578, 3.57471, 0.88", "-5.91899, 8.20162, 4.06545, 0.88", "-6.36989, 8.50099, 4.76652, 0.59", "-6.7714, 8.77461, 5.46826, 0.44", "-7.49941, 9.28254, 6.84665, 0.37", "-7.74823, 9.46118, 7.33896, 0.37", "-8.1515, 9.76056, 8.15963, 0.37", "-9.09386, 10.5106, 10.1868, 1.03", "-9.30713, 10.699, 10.6624, 1.62", "-15.5552, 11.6812, 16.9096, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.26317, -14.5883, 0.74", "-4.8414, -1.9473, -14.5818, 0.74", "-5.97497, -2.72024, -14.5757, 1.03", "-6.96646, -3.38301, -14.5909, 1.25", "-7.75929, -3.92086, -14.6117, 1.62", "-8.40898, -4.35418, -14.6321, 1.84", "-9.26092, -4.88892, -14.6378, 1.84", "-10.0155, -5.30678, -14.6036, 1.99", "-10.8085, -5.68516, -14.528, 2.21", "-11.7349, -6.05216, -14.394, 2.65", "-12.3921, -6.26977, -14.2887, 2.5", "-13.5025, -6.59138, -14.1199, 1.77", "-14.6786, -6.91589, -13.9792, 1.33", "-15.4782, -7.1424, -13.9413, 1.18", "-16.4263, -7.42143, -14.0016, 1.11", "-17.1, -7.64492, -14.192, 1.11", "-17.7941, -7.90752, -14.616, 1.11", "-18.4572, -8.1795, -15.2665, 1.4", "-19.1172, -8.4352, -16.1074, 1.03", "-19.673, -8.62606, -16.9221, 0.88", "-20.5002, -8.84489, -18.2569, 0.88", "-21.394, -8.9969, -19.8334, 1.47", "-22.0701, -9.06471, -21.0836, 1.77", "-22.827, -9.07805, -22.5381, 1.84", "-23.0946, -9.06104, -23.066, 2.06", "-23.5795, -8.9966, -24.048, 1.77", "-24.3265, -8.83045, -25.5235, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -2.11367, 9.10166, 2.06", "-5.36761, -2.11367, 9.10166, 2.06", "-6.40301, -2.00502, 9.64931, 2.06", "-7.18142, -1.96203, 10.0297, 2.06", "-9.20124, -1.99429, 10.9689, 1.84", "-10.3257, -2.10323, 11.4767, 1.84", "-11.1859, -2.25454, 11.8609, 1.99", "-12.7339, -2.66296, 12.5506, 1.55", "-13.9933, -3.14823, 13.0974, 1.03", "-15.0114, -3.66805, 13.5056, 0.88", "-15.9999, -4.3188, 13.7923, 1.18", "-16.7988, -4.91169, 13.9667, 1.18", "-17.4112, -5.40816, 14.068, 1.47", "-18.32, -6.2195, 14.1472, 1.25", "-19.2148, -7.05189, 14.2653, 1.03", "-20.0217, -7.79352, 14.446, 1.62", "-20.83, -8.51944, 14.7463, 1.69", "-21.4531, -9.04581, 15.067, 1.33", "-22.5662, -9.9114, 15.8244, 1.03", "-23.9372, -10.8041, 17.0171, 0.88", "-24.8958, -11.2785, 18.0792, 1.11", "-25.7264, -11.5152, 19.1699, 1.33", "-26.2443, -11.5392, 19.9365, 1.33", "-26.7549, -11.3999, 20.7283, 1.18", "-27.3625, -11.0327, 21.6436, 0.88", "-28.2266, -10.3508, 22.7604, 1.18", "-28.7655, -9.94005, 23.3667, 1.33", "-29.2404, -9.67108, 23.8399, 1.33", "-30.0593, -9.42035, 24.6069, 0.59", "-31.1826, -9.48285, 25.5615, 0.52", "-31.7524, -9.84662, 25.9782, 0.59", "-32.547, -10.9798, 26.6054, 0.59", "-33.3123, -12.5382, 27.3683, 0.59", "-33.709, -13.4673, 27.8139, 1.03", "-34.1632, -14.6274, 28.4214, 1.03", "-34.5387, -15.5924, 28.9775, 1.03", "-35.2466, -17.2047, 30.1118, 1.03", "-35.9177, -18.2682, 31.1857, 0.66", "-36.4829, -18.759, 32.0119, 0.66", "-37.4791, -19.1653, 33.3209, 0.74", "-38.1834, -19.2941, 34.1846, 0.81", "-38.8386, -19.3418, 34.9582, 0.52", "-40.0259, -19.3599, 36.2498, 0.52", "-40.5345, -19.3987, 36.8085, 0.44", "-41.2748, -19.7405, 37.793, 0.37", "-41.6308, -20.2698, 38.3702, 0.37", "-41.9611, -21.0728, 38.9602, 1.11", "-42.243, -21.8966, 39.4212, 1.4", "-42.5145, -22.9815, 39.9182, 1.4", "-42.8482, -24.6286, 40.6032, 0.81", "-43.0729, -25.8689, 41.062, 0.29", "-43.2732, -26.6892, 41.3779, 0.29", "-43.5099, -27.3477, 41.648, 0.29", "-50.0234, -31.9638, 48.8917, 0.29", "-57.906, -36.6953, 54.5292, 0.29", "-65.1177, -41.4164, 61.0098, 0.29", "-71.8102, -44.6757, 68.7428, 0.29", "-78.5186, -48.0797, 76.405, 0.29", "-86.2369, -53.1345, 82.0154, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -6.05117, 6.85166, 1.77", "-2.19761, -6.05117, 6.85166, 1.77", "-2.18048, -7.18572, 6.98557, 1.77", "-2.15323, -9.13083, 7.20551, 1.47", "-2.13821, -11.0884, 7.40451, 1.25", "-2.16387, -12.5838, 7.53897, 1.62", "-2.21514, -13.8455, 7.64029, 1.92", "-2.28543, -14.946, 7.72998, 2.14", "-2.41278, -16.3163, 7.83947, 2.14", "-2.67534, -18.2184, 7.99155, 1.55", "-3.00954, -20.0073, 8.12462, 1.33", "-3.3122, -21.3627, 8.23668, 1.55", "-3.53698, -22.2187, 8.31012, 1.92", "-3.85639, -23.2571, 8.43309, 2.21", "-4.09562, -23.9414, 8.53281, 2.5", "-4.37533, -24.7491, 8.67597, 2.5", "-4.63246, -25.6399, 8.84693, 2.36", "-4.90908, -26.8622, 9.08808, 1.69", "-5.17497, -28.4648, 9.39179, 1.25", "-5.31021, -29.9624, 9.66555, 1.4", "-5.31594, -31.2913, 9.87891, 1.62", "-5.17689, -32.9133, 10.1047, 2.06", "-5.00761, -33.9129, 10.2332, 2.36", "-4.83638, -34.5609, 10.3056, 2.36", "-4.41393, -35.7961, 10.4219, 2.14", "-3.72603, -37.5293, 10.5716, 1.62", "-3.11901, -38.9891, 10.6826, 1.25", "-2.49638, -40.4952, 10.8119, 1.03", "-1.8318, -42.1886, 10.9891, 1.03", "-1.33675, -43.6067, 11.1705, 1.03", "-0.797794, -45.4422, 11.4666, 1.03", "-0.562778, -46.5354, 11.6822, 0.96", "-0.491486, -47.399, 11.8801, 0.96", "-0.588243, -48.1689, 12.0778, 0.96", "-1.03316, -49.1827, 12.4069, 0.96", "-1.4683, -49.7337, 12.6138, 0.88", "-1.92478, -50.141, 12.7759, 1.18", "-2.66169, -50.7064, 12.9827, 1.18", "-3.37553, -51.223, 13.1658, 1.33", "-4.19745, -51.8091, 13.3943, 1.33", "-4.9041, -52.3201, 13.6157, 1.4", "-5.66164, -52.9028, 13.8893, 1.55", "-6.38727, -53.5199, 14.2114, 1.55", "-7.20858, -54.3631, 14.6739, 1.84", "-7.70595, -54.9788, 15.002, 2.14", "-8.19309, -55.7211, 15.354, 1.99", "-8.87253, -57.0617, 15.9167, 0.88", "-9.33649, -58.2999, 16.359, 0.88", "-9.72763, -59.7624, 16.8003, 0.81", "-9.94655, -61.0554, 17.0998, 0.74", "-10.1497, -62.6879, 17.4288, 0.74", "-10.2494, -64.2131, 17.691, 1.03", "-10.2455, -65.5834, 17.8595, 1.4", "-10.2011, -66.436, 17.9213, 1.69", "-10.1093, -67.3918, 17.9456, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -10.5032, -2.20834, 3.39", "1.44239, -10.5032, -2.20834, 3.39", "1.92189, -12.0813, -2.34379, 3.39", "2.30908, -13.3544, -2.50948, 3.02", "2.7011, -14.6435, -2.67725, 3.02", "3.21661, -16.3386, -2.89785, 3.02", "3.77035, -18.1594, -3.13482, 3.24", "4.18794, -19.502, -3.32822, 3.54", "4.66205, -20.9487, -3.5854, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-45.3893, 86.5737, -32.0183, 0.44", "-46.8237, 88.0636, -32.9472, 0.44", "-47.471, 88.7946, -33.3515, 0.37", "-47.7646, 89.2063, -33.495, 0.66", "-48.2183, 89.9598, -33.6777, 0.66", "-48.653, 90.8152, -33.8252, 0.59", "-48.9203, 91.4605, -33.91, 0.81", "-49.1297, 92.2722, -33.9169, 0.81", "-49.3221, 94.1436, -33.8898, 0.52", "-49.2642, 95.0283, -33.8797, 0.52", "-48.9427, 96.3867, -33.9072, 0.44", "-48.4227, 97.668, -34.0085, 0.44", "-47.7137, 98.8927, -34.194, 0.74", "-47.0814, 99.7414, -34.3744, 0.74", "-46.0321, 100.902, -34.7215, 0.44", "-45.2329, 101.709, -34.9566, 0.59", "-44.4285, 102.499, -35.198, 0.59", "-43.6222, 103.318, -35.4715, 0.59", "-42.9924, 104.04, -35.7352, 0.37", "-42.5342, 104.616, -35.9587, 0.37", "-41.8439, 105.526, -36.3268, 0.59", "-41.1626, 106.397, -36.7013, 0.37", "-40.5469, 107.149, -37.0366, 0.81", "-39.9022, 107.907, -37.3933, 0.81", "-38.7238, 109.301, -38.0859, 0.44", "-37.8187, 110.4, -38.6411, 0.44", "-37.1821, 111.159, -39.0643, 0.81", "-36.5369, 111.937, -39.5081, 0.44", "-36.1876, 112.383, -39.7737, 0.59", "-35.3575, 113.521, -40.4987, 0.59", "-34.8677, 114.337, -41.1087, 0.44", "-34.3664, 115.473, -42.0147, 0.44", "-34.0645, 116.444, -42.9101, 0.96", "-33.9738, 116.898, -43.3968, 1.18", "-33.9403, 117.313, -43.8994, 1.18", "-34.0418, 118.398, -45.7013, 0.44", "-34.2425, 119.161, -47.1553, 0.37", "-34.4709, 119.758, -48.6647, 0.66", "-34.5848, 120.0, -49.3749, 0.66", "-34.7767, 120.356, -50.5113, 0.66", "-35.4543, 121.655, -55.0469, 0.44", "-35.5627, 121.867, -55.856, 0.44", "-36.0905, 122.956, -60.1616, 0.29", "-36.2006, 123.215, -61.0749, 0.29", "-36.3174, 123.548, -62.1136, 0.29", "-36.5496, 124.376, -64.3105, 0.74", "-36.8001, 125.568, -66.7856, 0.44", "-36.8466, 125.884, -67.322, 0.44", "-36.9479, 126.697, -68.3039, 0.37", "-37.0474, 127.559, -69.1719, 0.88", "-37.2359, 129.02, -70.2654, 0.29", "-37.3513, 129.623, -70.5847, 0.52", "-37.6344, 130.727, -71.0568, 0.15", "-37.9361, 131.696, -71.4977, 0.22", "-38.454, 133.21, -72.1954, 0.22", "-38.9697, 134.527, -72.7723, 0.22", "-39.4641, 135.764, -73.2777, 0.22", "-40.2345, 137.574, -74.0798, 1.47", "-40.821, 138.899, -74.734, 0.66", "-41.1805, 139.749, -75.173, 0.96", "-41.7232, 141.161, -75.892, 0.22", "-42.0643, 142.117, -76.3131, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-45.3893, 86.5737, -32.0183, 0.37", "-45.2095, 87.8746, -31.8764, 0.37", "-45.0658, 88.5141, -31.8699, 0.37", "-44.9361, 89.1232, -31.8068, 0.37", "-44.7975, 90.041, -31.6337, 0.74", "-44.7437, 90.8217, -31.4477, 0.29", "-44.7702, 91.7445, -31.1989, 0.29", "-44.7992, 92.1788, -31.0732, 0.52", "-44.918, 93.1444, -30.6466, 0.44", "-45.0164, 93.7631, -30.3104, 0.29", "-45.1007, 94.3037, -29.9953, 0.29", "-45.1745, 94.9042, -29.626, 0.29", "-45.2365, 95.9146, -29.0335, 0.44", "-45.242, 96.7318, -28.5728, 0.44", "-45.1591, 97.7642, -28.0644, 0.52", "-45.008, 98.582, -27.6847, 0.37", "-44.8213, 99.2318, -27.3949, 0.37", "-44.5518, 99.9277, -27.1183, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "27.5187, 30.1102, -5.29551, 0.29", "28.1512, 30.0749, -3.81288, 0.29", "28.776, 30.0584, -2.57873, 0.59", "29.415, 30.02, -1.49086, 0.74", "29.7734, 29.9979, -0.933195, 0.37", "30.3136, 29.9943, -0.0324913, 0.37", "30.6063, 30.0085, 0.496088, 0.66", "30.8197, 30.0585, 0.902141, 0.96", "31.0886, 30.2031, 1.64027, 1.25", "31.4324, 30.5504, 2.99741, 0.37", "31.6984, 31.0067, 4.38831, 0.37", "31.7784, 31.1909, 4.86882, 0.37", "31.9687, 31.5986, 5.84572, 0.74", "32.3703, 32.2554, 7.34489, 0.66", "32.754, 32.7316, 8.37201, 0.52", "33.1102, 33.0077, 8.97859, 0.66", "33.603, 33.234, 9.53248, 0.66", "34.3151, 33.4536, 10.1465, 0.37", "35.1767, 33.6087, 10.7284, 0.52", "35.6688, 33.6467, 11.0122, 0.52", "36.5341, 33.6733, 11.4899, 0.66", "37.0223, 33.6686, 11.7536, 0.88", "37.6761, 33.6623, 12.0881, 0.88", "38.4264, 33.6909, 12.5066, 0.66", "39.3604, 33.7866, 13.0384, 0.29", "40.1783, 33.9247, 13.4888, 0.29", "41.4174, 34.2551, 14.1327, 0.88", "41.7605, 34.3637, 14.3061, 0.88", "43.138, 34.8527, 14.9688, 0.29", "44.206, 35.2716, 15.4415, 0.29", "45.2323, 35.7073, 15.8569, 0.96", "46.457, 36.2562, 16.3217, 0.29", "47.3484, 36.6617, 16.6542, 0.29", "48.1781, 37.0152, 16.9456, 0.81", "48.839, 37.2701, 17.1386, 0.81", "49.4264, 37.4851, 17.3072, 0.81", "50.3181, 37.7876, 17.5618, 0.59", "51.3563, 38.0949, 17.8677, 0.29", "52.269, 38.4036, 18.1437, 0.81", "53.1684, 38.713, 18.4239, 0.22", "53.9672, 38.9705, 18.6743, 0.22", "54.4763, 39.1096, 18.8269, 0.52", "55.1885, 39.2608, 18.9995, 0.22", "61.6743, 41.8087, 24.6925, 0.22", "67.478, 44.7013, 30.9376, 0.22", "74.5913, 45.8112, 36.3156, 0.22", "81.7201, 45.2415, 41.7769, 0.22", "88.7349, 45.8875, 47.3571, 0.22", "94.0951, 45.5949, 54.578, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "27.5187, 30.1102, -5.29551, 0.81", "28.8784, 30.3115, -4.69914, 0.81", "29.5279, 30.3243, -4.44757, 1.03", "31.2724, 30.2587, -3.94328, 0.96", "32.2336, 30.2281, -3.72057, 0.96", "33.3576, 30.243, -3.50309, 0.59", "34.1409, 30.2963, -3.37456, 0.66", "35.1949, 30.3722, -3.2377, 0.66", "36.4575, 30.5689, -3.16211, 0.59", "37.1253, 30.78, -3.20997, 0.81", "37.9699, 31.2036, -3.31081, 0.96", "38.7462, 31.6976, -3.42019, 1.25", "39.3066, 32.0709, -3.49339, 1.4", "40.0085, 32.527, -3.55239, 1.4", "41.1509, 33.1622, -3.57242, 0.59", "41.6163, 33.3356, -3.56051, 0.59", "42.5861, 33.4983, -3.4921, 0.59", "43.6468, 33.5086, -3.37729, 1.03", "44.4005, 33.4346, -3.27289, 1.18", "45.0537, 33.3164, -3.13852, 1.18", "46.104, 33.0636, -2.85224, 0.74", "47.1082, 32.8008, -2.50598, 0.66", "47.5833, 32.6802, -2.32061, 0.96", "48.2024, 32.5527, -2.07718, 0.96", "49.3134, 32.382, -1.65642, 1.03", "49.8377, 32.3382, -1.46339, 1.03", "51.2957, 32.3912, -0.971047, 0.59", "52.0874, 32.5131, -0.736751, 0.59", "53.5032, 32.8406, -0.381987, 0.59", "54.198, 33.0503, -0.243356, 0.81", "54.8498, 33.3056, -0.15771, 0.81", "56.1829, 33.9289, -0.0711114, 0.37", "57.0264, 34.3454, -0.072244, 0.66", "57.7759, 34.685, -0.0769486, 0.74", "58.2476, 34.8652, -0.0867059, 0.74", "59.1728, 35.1131, -0.113851, 0.74", "60.168, 35.2359, -0.143138, 0.52", "61.556, 35.2156, -0.177512, 0.74", "62.6002, 35.1346, -0.173821, 0.88", "63.1697, 35.0832, -0.139797, 0.96", "63.7322, 35.0425, -0.0712478, 1.18", "64.5818, 35.0162, 0.09126, 1.18", "65.2211, 35.0629, 0.271532, 0.66", "66.3397, 35.3652, 0.702925, 0.59", "67.0605, 35.7006, 1.11087, 0.59", "67.5315, 35.984, 1.43956, 0.74", "67.8951, 36.25, 1.73597, 0.74", "68.2499, 36.5424, 2.06158, 0.74", "68.9202, 37.1389, 2.74671, 0.59", "69.7999, 37.9752, 3.74198, 0.96", "70.2187, 38.3658, 4.22221, 1.25", "70.4446, 38.5716, 4.50232, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "81.5233, 50.7013, 71.8256, 0.29", "85.7919, 52.9998, 76.0579, 0.29", "90.4809, 55.6619, 79.5744, 0.29", "95.0574, 59.006, 82.6717, 0.29", "99.3371, 61.582, 86.7418, 0.29", "103.133, 64.8361, 90.8578, 0.29", "106.089, 68.1018, 95.6313, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "81.5233, 50.7013, 71.8256, 0.29", "88.5497, 54.2848, 77.4738, 0.29", "94.1681, 59.4523, 83.5819, 0.29", "98.5957, 65.0165, 90.3396, 0.29", "103.978, 68.9781, 97.4114, 0.29", "108.958, 73.4473, 104.509, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-24.3265, -8.83045, -25.5235, 0.74", "-26.2586, -10.1904, -25.9269, 0.74", "-27.2884, -10.7196, -26.1131, 0.74", "-28.1543, -11.0523, -26.2862, 0.74", "-29.5063, -11.3315, -26.7302, 0.66", "-30.4794, -11.3916, -27.1611, 0.66", "-31.5049, -11.3756, -27.6805, 0.59", "-32.2052, -11.2224, -28.0525, 1.25", "-32.7703, -11.0426, -28.3957, 1.25", "-34.4895, -10.4655, -29.5337, 0.66", "-35.3455, -10.2149, -30.1234, 0.66", "-35.8112, -10.1556, -30.4496, 0.96", "-36.5107, -10.224, -30.9246, 0.96", "-37.003, -10.4177, -31.3669, 0.96", "-37.7583, -11.0546, -32.4468, 0.74", "-38.162, -11.597, -33.2765, 0.52", "-38.5667, -12.2765, -34.3143, 0.81", "-38.8277, -12.7782, -35.0829, 1.03", "-39.7762, -14.8013, -38.2272, 1.25", "-40.4173, -16.2348, -40.5113, 0.66", "-40.7343, -16.9225, -41.6423, 0.66", "-40.9341, -17.2688, -42.237, 1.11", "-41.1179, -17.4732, -42.5939, 1.33", "-41.3956, -17.6747, -42.896, 1.18", "-41.8575, -17.9113, -43.0634, 1.18", "-42.9255, -18.4247, -43.2997, 0.59", "-44.0283, -19.0336, -43.5728, 0.52", "-44.899, -19.6054, -43.8563, 0.52", "-45.619, -20.1826, -44.2131, 0.81", "-46.3221, -20.8781, -44.7295, 0.66", "-46.98, -21.6136, -45.333, 0.66", "-47.4534, -22.2033, -45.8624, 1.33", "-47.7706, -22.6201, -46.2468, 1.33", "-48.7597, -23.9285, -47.4685, 0.66", "-49.6299, -25.041, -48.5077, 0.52", "-50.0409, -25.5254, -48.9737, 0.52", "-50.5776, -26.0613, -49.4418, 0.96", "-50.9653, -26.3978, -49.683, 1.18", "-51.2482, -26.6223, -49.7818, 1.18", "-51.8494, -27.1006, -49.8269, 0.81", "-52.6827, -27.8057, -49.7477, 0.74", "-53.7265, -28.7674, -49.5421, 0.59", "-54.2514, -29.2424, -49.3992, 0.74", "-54.9521, -29.8435, -49.1725, 0.74", "-55.702, -30.4191, -48.9195, 0.59", "-56.4085, -30.9259, -48.6706, 0.44", "-57.2005, -31.4856, -48.3826, 0.44", "-57.9621, -32.0197, -48.1394, 0.44", "-58.7689, -32.6434, -47.8868, 0.44", "-60.1018, -33.7981, -47.4776, 0.44", "-60.4377, -34.1499, -47.368, 0.96", "-61.065, -35.0264, -47.1741, 1.18", "-61.4782, -35.8316, -47.0541, 0.81", "-61.9648, -37.197, -46.9767, 0.59", "-62.1345, -37.8039, -47.0058, 0.74", "-62.3968, -38.7901, -47.1168, 0.66", "-62.7219, -39.7501, -47.269, 0.66", "-63.0248, -40.4536, -47.4105, 0.81", "-63.6874, -41.7308, -47.6778, 0.59", "-64.3339, -42.8399, -47.8984, 0.52", "-64.943, -43.9152, -48.0808, 0.81", "-65.486, -44.9628, -48.2114, 1.4", "-65.744, -45.5862, -48.2142, 1.69", "-66.1206, -46.8069, -48.0759, 0.52", "-66.3893, -47.8226, -47.9635, 0.44", "-66.6245, -48.8731, -47.9819, 0.44", "-66.794, -49.6312, -48.1418, 0.29", "-67.1913, -51.0575, -48.6468, 1.4", "-67.2906, -51.3424, -48.7705, 1.4", "-68.3724, -53.8745, -50.1929, 0.52", "-69.0682, -55.2712, -51.084, 0.52", "-69.4636, -55.9918, -51.5698, 0.52", "-70.0624, -57.0635, -52.2918, 0.74", "-70.4574, -57.7806, -52.7558, 0.88", "-71.2945, -59.4007, -53.6304, 0.44", "-71.681, -60.2043, -53.9401, 0.59", "-72.1345, -61.097, -54.2497, 0.59", "-72.6467, -62.0003, -54.5995, 0.37", "-72.9696, -62.5455, -54.8278, 0.59", "-73.579, -63.5108, -55.227, 0.81", "-74.1782, -64.3761, -55.5216, 1.18", "-74.5686, -64.9058, -55.71, 1.18", "-75.6415, -66.2197, -56.2648, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-24.3265, -8.83045, -25.5235, 0.81", "-25.2115, -7.48338, -25.0028, 0.81", "-25.5934, -7.02803, -24.7622, 0.81", "-26.1447, -6.53507, -24.427, 0.81", "-26.7009, -6.21161, -24.1357, 0.88", "-27.3347, -6.03526, -23.8949, 0.66", "-28.4776, -5.89634, -23.5764, 0.59", "-29.2378, -6.03612, -23.4791, 0.59", "-29.9158, -6.24365, -23.5536, 0.59", "-30.8126, -6.59046, -23.8428, 0.74", "-31.7842, -6.99019, -24.3696, 1.03", "-32.1274, -7.12876, -24.5951, 1.62", "-32.5997, -7.30038, -24.9367, 1.92", "-34.1035, -7.79959, -25.9785, 0.88", "-34.6843, -7.97547, -26.3641, 0.66", "-35.534, -8.23496, -26.9011, 0.66", "-36.675, -8.59256, -27.583, 0.66", "-37.1827, -8.74353, -27.8672, 0.66", "-38.2935, -9.0262, -28.4009, 0.66", "-39.0066, -9.16795, -28.6864, 0.44", "-39.9224, -9.28214, -29.0513, 0.44", "-40.6062, -9.31471, -29.3379, 0.44", "-41.4324, -9.28247, -29.7411, 0.66", "-42.0172, -9.23171, -30.0438, 0.66", "-42.7184, -9.1289, -30.3936, 0.66", "-43.3249, -9.02181, -30.6467, 0.66", "-44.0221, -8.86015, -30.8736, 0.44", "-44.5112, -8.72592, -31.0113, 0.74", "-45.2409, -8.51286, -31.1936, 0.74", "-45.8916, -8.31776, -31.3501, 0.74", "-46.444, -8.15533, -31.472, 0.74", "-47.0735, -7.97857, -31.6016, 0.37", "-47.9896, -7.80763, -31.8517, 0.37", "-48.3704, -7.80602, -32.007, 0.37", "-48.7575, -7.8844, -32.24, 0.88", "-49.2604, -8.05346, -32.5943, 1.18", "-49.6685, -8.20812, -32.9256, 1.33", "-50.709, -8.61899, -33.8506, 0.44", "-51.4678, -8.87254, -34.56, 0.44", "-52.0956, -8.99035, -35.1793, 0.44", "-52.688, -8.98373, -35.7532, 0.88", "-53.3568, -8.82017, -36.3413, 1.03", "-53.6448, -8.67902, -36.5462, 1.03", "-54.4189, -8.13961, -36.8899, 0.44", "-54.8885, -7.78899, -37.0481, 0.44", "-55.4274, -7.43478, -37.1727, 0.44", "-55.8552, -7.21926, -37.2741, 0.59", "-56.5348, -6.99264, -37.4277, 0.59", "-57.2029, -6.88231, -37.6109, 0.74", "-58.3768, -6.90672, -37.9913, 0.37", "-59.0914, -7.02643, -38.2832, 0.37", "-60.1188, -7.34032, -38.7926, 0.59", "-60.5111, -7.50909, -39.0251, 0.88", "-61.2489, -7.9196, -39.5576, 0.66", "-61.7373, -8.234, -39.9504, 0.74", "-62.2489, -8.60435, -40.3792, 0.59", "-62.687, -8.9339, -40.7759, 0.52", "-63.0979, -9.2393, -41.1462, 0.88", "-63.8717, -9.73221, -41.8251, 0.59", "-64.3363, -9.9678, -42.2103, 0.44", "-64.8661, -10.1728, -42.6273, 1.03", "-65.2456, -10.2814, -42.9037, 1.33", "-65.4854, -10.3301, -43.0593, 1.4", "-66.5067, -10.4987, -43.6408, 0.44", "-66.9206, -10.5642, -43.8586, 0.44", "-67.5334, -10.6552, -44.1542, 0.44", "-68.1813, -10.7414, -44.4334, 0.44", "-69.2333, -10.8747, -44.8788, 0.59", "-69.9657, -10.9496, -45.2373, 0.88", "-70.6501, -10.9652, -45.6512, 1.11", "-71.546, -10.9279, -46.2637, 0.52", "-72.1994, -10.8517, -46.7393, 0.52", "-72.7504, -10.7581, -47.1533, 1.03", "-73.9854, -10.5081, -48.1349, 1.25", "-75.4372, -10.2596, -49.3104, 0.52", "-75.9313, -10.1947, -49.7105, 0.59", "-76.5847, -10.1428, -50.2242, 0.59", "-77.6065, -10.0994, -50.9344, 0.44", "-78.3017, -10.095, -51.3255, 0.44", "-79.3228, -10.0861, -51.7699, 0.44", "-79.8727, -10.0574, -51.9856, 0.44", "-80.6516, -9.90488, -52.3613, 0.66", "-81.2243, -9.6916, -52.6934, 0.88", "-81.5397, -9.51377, -52.8885, 0.88", "-82.4736, -8.84367, -53.4661, 0.52", "-83.0589, -8.34071, -53.8288, 0.52", "-83.8968, -7.51615, -54.4056, 0.81", "-84.4911, -6.85706, -54.838, 0.44", "-84.8351, -6.44119, -55.1052, 0.44", "-85.2322, -5.8912, -55.4318, 0.74", "-85.4826, -5.4743, -55.6394, 0.96", "-85.9968, -4.40191, -56.0361, 0.66", "-86.2906, -3.729, -56.2646, 0.44", "-86.6259, -2.99087, -56.5447, 0.44", "-87.0049, -2.29054, -56.8718, 0.44", "-87.1765, -2.05496, -57.0105, 0.44", "-87.6942, -1.60263, -57.3513, 0.96", "-88.7551, -1.2162, -57.88, 0.66", "-89.4317, -1.10342, -58.1863, 0.96", "-89.7509, -1.07863, -58.3057, 1.25", "-90.124, -1.0646, -58.43, 1.25", "-90.7181, -1.03068, -58.6122, 1.25", "-91.7617, -0.879963, -58.9005, 0.37", "-92.4095, -0.673376, -59.0183, 0.37", "-92.8518, -0.465514, -59.1035, 0.66", "-93.1937, -0.290603, -59.1606, 0.81", "-93.7259, -0.0190835, -59.223, 0.81", "-94.543, 0.380697, -59.2495, 0.44", "-95.0923, 0.608042, -59.2117, 0.44", "-96.0747, 0.919907, -59.0919, 0.44", "-97.1509, 1.21327, -58.9141, 0.44", "-97.9641, 1.4217, -58.7447, 0.66", "-98.8058, 1.62379, -58.5333, 0.96", "-99.6489, 1.80651, -58.2712, 0.59", "-100.365, 1.96907, -58.0206, 0.44", "-101.104, 2.14397, -57.7534, 0.44", "-101.827, 2.32293, -57.533, 0.44", "-102.458, 2.45566, -57.4199, 0.44", "-103.186, 2.55169, -57.4104, 0.74", "-103.546, 2.57305, -57.4588, 0.74", "-104.566, 2.55615, -57.6769, 0.52", "-105.029, 2.53134, -57.8057, 0.59", "-105.889, 2.47827, -58.0788, 0.44", "-106.539, 2.46625, -58.2865, 0.44", "-107.369, 2.53244, -58.5607, 0.37", "-108.214, 2.6715, -58.8117, 0.52", "-108.895, 2.846, -58.9945, 1.11", "-109.437, 3.02924, -59.1543, 1.25", "-110.089, 3.29407, -59.3842, 0.37", "-111.032, 3.7079, -59.792, 0.37", "-111.673, 3.98131, -60.1235, 0.29", "-112.182, 4.19237, -60.4373, 0.29", "-113.101, 4.57296, -61.0517, 0.59", "-113.833, 4.89588, -61.559, 0.59", "-114.251, 5.09052, -61.8451, 0.29", "-114.581, 5.25537, -62.0397, 0.37", "-115.11, 5.55375, -62.3021, 0.37", "-115.835, 5.9789, -62.5538, 0.44", "-116.438, 6.33349, -62.6607, 0.44", "-117.007, 6.65608, -62.7008, 0.44", "-117.684, 7.00102, -62.7346, 0.37", "-117.954, 7.11469, -62.7459, 0.37", "-118.627, 7.32134, -62.7625, 0.88", "-119.011, 7.40369, -62.7714, 1.11", "-119.693, 7.52572, -62.7895, 1.11", "-120.769, 7.73628, -62.8039, 0.37", "-121.61, 7.93558, -62.7969, 0.37", "-122.1, 8.0888, -62.7738, 0.66", "-122.858, 8.44417, -62.7259, 0.66", "-123.475, 8.83837, -62.6809, 0.37", "-124.017, 9.28975, -62.6404, 0.52", "-124.224, 9.49875, -62.6252, 0.66", "-124.536, 9.84618, -62.598, 0.66", "-125.384, 10.8063, -62.5113, 0.37", "-125.773, 11.2091, -62.4501, 0.37", "-126.174, 11.5108, -62.3477, 0.37", "-126.573, 11.7076, -62.2082, 0.88", "-127.195, 11.909, -61.9569, 0.81", "-127.495, 11.971, -61.8275, 0.81", "-128.238, 12.0739, -61.4875, 0.29", "-129.21, 12.1886, -61.0394, 0.29", "-129.813, 12.2774, -60.7086, 0.52", "-130.549, 12.425, -60.2811, 0.44", "-130.91, 12.5105, -60.0676, 0.44", "-131.387, 12.6406, -59.7619, 0.81", "-131.954, 12.8397, -59.3682, 0.81", "-133.029, 13.33, -58.5505, 0.29", "-133.462, 13.5501, -58.2062, 0.44", "-133.867, 13.7593, -57.8572, 0.29", "-134.315, 13.9755, -57.4831, 0.29", "-134.905, 14.2364, -57.0285, 0.29", "-135.361, 14.4226, -56.7174, 0.29", "-135.901, 14.618, -56.3939, 0.59", "-136.936, 14.9705, -55.7644, 0.22", "-137.601, 15.1902, -55.3628, 0.22", "-137.952, 15.2857, -55.1536, 0.52", "-138.271, 15.341, -54.9614, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-86.2369, -53.1345, 82.0154, 0.29", "-94.0117, -58.4111, 89.1119, 0.29", "-100.792, -65.8479, 95.4096, 0.29", "-107.125, -73.39, 102.03, 0.29", "-113.116, -81.6819, 108.131, 0.29", "-117.7, -91.0266, 114.009, 0.29", "-123.21, -99.9071, 119.788, 0.29", "-128.762, -108.785, 125.533, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-86.2369, -53.1345, 82.0154, 0.29", "-93.8242, -57.6249, 88.6297, 0.29", "-101.299, -63.4919, 94.3285, 0.29", "-107.977, -69.9773, 100.4, 0.29", "-113.679, -76.7727, 107.128, 0.29", "-118.838, -84.2649, 113.62, 0.29", "-122.862, -92.9358, 119.564, 0.29", "-127.729, -100.596, 126.104, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.1093, -67.3918, 17.9456, 0.66", "-11.1874, -70.3618, 16.8909, 0.66", "-11.4616, -71.1508, 16.6385, 1.03", "-11.7317, -71.9783, 16.4703, 1.03", "-12.2199, -73.5632, 16.2907, 1.03", "-12.5456, -74.767, 16.2352, 1.03", "-12.887, -76.241, 16.2488, 0.81", "-13.0987, -77.5669, 16.4769, 0.81", "-13.2216, -79.5203, 16.9538, 1.4", "-13.2075, -80.3606, 17.2104, 1.62", "-13.0887, -81.619, 17.6961, 1.4", "-12.9513, -82.4506, 18.04, 1.92", "-12.6922, -83.5817, 18.5158, 1.4", "-12.2057, -85.2961, 19.2415, 1.69", "-11.8468, -86.4419, 19.6701, 1.11", "-11.3688, -87.979, 20.2074, 0.81", "-11.159, -88.7047, 20.4416, 1.11", "-10.9392, -89.5709, 20.6923, 1.25", "-10.544, -91.4993, 21.1975, 0.96", "-10.4241, -92.4752, 21.4165, 0.74", "-10.4, -93.4084, 21.5914, 0.81", "-10.5673, -94.8245, 21.7763, 0.52", "-10.8182, -95.8365, 21.8531, 0.88", "-11.1289, -96.6898, 21.8359, 0.88", "-11.5585, -97.6263, 21.6837, 0.88", "-11.9592, -98.4572, 21.4752, 0.66", "-12.3537, -99.3494, 21.1491, 0.66", "-12.807, -100.609, 20.4878, 0.88", "-13.0415, -101.452, 19.9485, 1.33", "-13.1745, -102.099, 19.5074, 1.47", "-13.276, -102.709, 19.0912, 1.62", "-13.4777, -103.955, 18.2976, 0.74", "-13.719, -105.37, 17.5623, 0.74", "-13.9587, -106.472, 17.16, 0.74", "-14.1803, -107.35, 16.9893, 0.74", "-14.4923, -108.563, 16.9271, 0.66", "-14.7735, -109.827, 17.0328, 0.66", "-15.0781, -111.657, 17.4149, 0.96", "-15.1599, -112.602, 17.6883, 0.88", "-15.1523, -113.452, 17.9515, 0.88", "-14.9927, -115.042, 18.4221, 0.52", "-14.727, -116.507, 18.8283, 1.18", "-14.5767, -117.224, 18.9814, 1.62", "-14.4208, -118.032, 19.0917, 1.62", "-14.2415, -119.173, 19.2195, 0.96", "-14.1453, -120.056, 19.3066, 0.96", "-14.0908, -121.39, 19.4225, 0.66", "-14.1893, -123.14, 19.5412, 0.52", "-14.3916, -124.709, 19.6791, 0.59", "-14.7637, -126.513, 19.8754, 0.74", "-14.8979, -126.981, 19.9409, 1.11", "-15.2396, -127.875, 20.129, 1.25", "-15.9487, -129.305, 20.5356, 0.88", "-16.4069, -130.015, 20.8184, 0.66", "-16.8995, -130.642, 21.1214, 0.66", "-17.3875, -131.195, 21.401, 0.59", "-18.3604, -132.31, 21.9114, 0.59", "-18.9088, -132.951, 22.158, 0.44", "-19.5698, -133.784, 22.3864, 0.44", "-20.122, -134.559, 22.5015, 0.74", "-20.571, -135.279, 22.5499, 0.74", "-20.9603, -135.967, 22.5497, 0.66", "-21.4676, -136.972, 22.4732, 1.03", "-21.8491, -137.772, 22.415, 1.4", "-22.2588, -138.671, 22.3559, 1.4", "-22.6182, -139.452, 22.3119, 1.47", "-23.1875, -140.686, 22.2634, 0.74", "-23.6295, -141.647, 22.2168, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.1093, -67.3918, 17.9456, 0.44", "-9.4416, -68.0188, 18.5101, 0.44", "-9.05323, -68.5612, 18.9015, 0.44", "-8.79062, -69.2638, 19.281, 0.37", "-8.52172, -70.635, 19.8376, 0.59", "-8.48824, -71.1699, 20.0035, 0.52", "-8.51063, -71.8575, 20.1824, 0.44", "-8.72798, -72.9643, 20.4589, 0.44", "-9.0374, -73.8954, 20.7152, 0.44", "-9.30172, -74.4597, 20.9078, 0.59", "-9.70559, -75.1057, 21.2315, 0.59", "-10.1385, -75.6532, 21.736, 0.37", "-10.7097, -76.2627, 22.6015, 0.59", "-11.2013, -76.7378, 23.4939, 0.88", "-11.51, -77.0048, 24.0833, 0.81", "-12.1376, -77.5149, 25.2731, 1.03", "-12.774, -78.0252, 26.4479, 0.88", "-13.3596, -78.5133, 27.4236, 0.44", "-13.8485, -78.986, 28.1193, 0.44", "-14.1722, -79.3566, 28.508, 0.66", "-14.6305, -79.903, 28.9165, 0.66", "-15.0578, -80.388, 29.1392, 0.66", "-15.696, -81.0702, 29.3129, 0.66", "-16.2537, -81.655, 29.4205, 1.33", "-16.5034, -81.9307, 29.4504, 1.47", "-16.989, -82.4765, 29.5004, 1.03", "-17.5973, -83.1785, 29.5681, 0.81", "-18.1103, -83.7715, 29.6379, 0.74", "-18.7209, -84.4831, 29.7439, 0.52", "-19.1499, -85.0095, 29.8354, 0.44", "-21.8668, -91.3921, 34.3669, 0.44", "-23.6383, -98.3046, 38.6549, 0.44", "-26.115, -105.164, 42.6618, 0.44", "-30.2717, -111.512, 45.9847, 0.44", "-34.3619, -116.884, 50.6706, 0.44", "-37.6698, -122.336, 55.864, 0.44", "-41.1795, -127.983, 60.724, 0.44", "-46.1792, -133.168, 64.6601, 0.44", "-52.5063, -137.615, 67.287, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.66205, -20.9487, -3.5854, 1.47", "4.13884, -22.603, -4.18427, 1.47", "3.57784, -24.7458, -4.76756, 1.33", "3.18723, -26.4625, -5.09789, 1.55", "2.90641, -27.8628, -5.24723, 1.55", "2.62751, -29.324, -5.23025, 1.77", "2.25891, -31.2037, -5.0232, 1.77", "2.04016, -32.3709, -4.74031, 2.14", "1.84095, -33.3496, -4.40514, 2.58", "1.56668, -34.6024, -3.94716, 2.36", "1.04045, -36.8964, -3.21705, 1.77", "0.5856, -38.8673, -2.78454, 1.47", "0.242414, -40.513, -2.62582, 1.18", "-0.0625561, -42.2565, -2.62311, 1.11", "-0.267551, -43.803, -2.76452, 1.33", "-0.433721, -45.9072, -3.15993, 1.25", "-0.451349, -47.7461, -3.64371, 1.47", "-0.370311, -49.3949, -4.11145, 1.62", "-0.268314, -50.6336, -4.45995, 2.14", "-0.205193, -51.489, -4.68577, 2.58", "-0.171806, -52.7188, -4.97383, 2.43", "-0.242283, -54.6975, -5.38611, 2.14", "-0.407215, -56.2927, -5.70864, 1.92", "-0.693082, -57.8714, -6.02804, 1.47", "-1.20281, -59.8162, -6.44341, 1.25", "-1.74629, -61.4185, -6.75486, 1.11", "-2.24775, -62.6162, -6.95012, 1.4", "-2.6154, -63.3857, -7.05644, 1.55", "-3.20102, -64.5629, -7.17091, 1.18", "-3.76902, -65.77, -7.20829, 0.88", "-4.28242, -67.0431, -7.23209, 1.18", "-4.6902, -68.2923, -7.2453, 1.03", "-5.03011, -69.4704, -7.2432, 1.03", "-5.4529, -71.2195, -7.24534, 1.47", "-5.64826, -72.3323, -7.25829, 1.77", "-5.84287, -74.0844, -7.32891, 1.77", "-5.93397, -75.4303, -7.47456, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.66205, -20.9487, -3.5854, 1.77", "5.03596, -22.701, -3.98229, 1.77", "5.20317, -23.5781, -4.16762, 1.99", "5.39543, -24.5866, -4.38072, 1.99", "5.65777, -25.9627, -4.67149, 3.17", "5.77594, -26.5826, -4.80247, 3.76", "5.97814, -27.6433, -5.02659, 4.2", "6.09033, -28.5817, -5.18607, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.88", "5.97663, 56.3268, -0.359339, 0.88", "7.46769, 71.2525, -0.359339, 0.88" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-44.5518, 99.9277, -27.1183, 0.29", "-44.7356, 100.906, -27.3359, 0.29", "-45.0207, 102.329, -27.9638, 0.29", "-45.2256, 103.589, -28.6163, 0.29", "-45.3884, 104.928, -29.3921, 0.29", "-45.4818, 105.881, -29.9956, 0.29", "-45.6128, 107.444, -30.9973, 0.29", "-45.8168, 110.218, -32.9711, 0.29", "-45.8786, 111.066, -33.6139, 0.37", "-45.9718, 112.085, -34.4116, 0.37", "-46.1245, 113.338, -35.4234, 0.37", "-46.2481, 114.367, -36.264, 0.22", "-46.3811, 115.445, -37.112, 0.22", "-46.5771, 116.646, -37.8621, 1.03", "-46.6384, 116.864, -37.9916, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-44.5518, 99.9277, -27.1183, 0.52", "-46.2093, 101.519, -26.5556, 0.52", "-46.9695, 102.367, -26.2428, 0.52", "-47.7236, 103.357, -25.9101, 0.44", "-48.055, 103.867, -25.76, 0.59", "-48.4032, 104.489, -25.5953, 0.59", "-49.0366, 105.685, -25.2726, 0.37", "-49.7624, 107.248, -24.9483, 0.37", "-50.1943, 108.26, -24.722, 0.37", "-50.6327, 109.279, -24.484, 0.37", "-51.1242, 110.393, -24.1962, 0.29", "-51.5885, 111.388, -23.9222, 0.29", "-52.1374, 112.427, -23.6193, 0.81", "-52.4032, 112.84, -23.4999, 0.81", "-52.8685, 113.458, -23.3136, 0.74", "-53.5223, 114.237, -23.1266, 0.74", "-54.1089, 114.848, -23.0669, 0.96", "-54.7141, 115.422, -23.1145, 0.96", "-55.1218, 115.808, -23.2118, 0.59", "-55.9096, 116.623, -23.5298, 0.29", "-56.6279, 117.469, -23.968, 0.29", "-57.3931, 118.472, -24.5563, 0.29", "-57.925, 119.232, -24.9959, 0.22", "-58.7168, 120.419, -25.6705, 0.22", "-59.3326, 121.395, -26.2087, 0.74", "-60.0267, 122.556, -26.7766, 0.37", "-60.5795, 123.574, -27.1768, 0.37", "-61.0815, 124.58, -27.5145, 0.81", "-61.442, 125.259, -27.7461, 1.18", "-61.7967, 125.788, -27.9316, 1.18", "-62.7247, 126.91, -28.3867, 0.29", "-63.7163, 128.022, -28.8505, 0.29", "-64.3509, 128.688, -29.1681, 0.29", "-65.0019, 129.325, -29.5181, 0.29", "-65.9734, 130.194, -30.0309, 0.74", "-66.6843, 130.702, -30.3967, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "94.0951, 45.5949, 54.578, 0.29", "103.685, 47.4223, 62.5087, 0.29", "112.988, 48.8807, 70.8433, 0.29", "122.554, 51.8629, 78.4651, 0.29", "131.107, 56.3074, 86.6164, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "94.0951, 45.5949, 54.578, 0.29", "101.272, 46.7434, 60.2446, 0.29", "108.335, 49.5354, 65.4991, 0.29", "116.224, 52.6225, 69.1871, 0.29", "123.043, 56.9352, 73.767, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "70.4446, 38.5716, 4.50232, 0.44", "71.499, 38.5332, 4.32133, 0.44", "71.9028, 38.5712, 4.18887, 0.37", "72.6268, 38.7095, 3.904, 0.59", "73.0212, 38.8039, 3.74081, 0.74", "74.03, 39.0802, 3.33201, 0.37", "75.0652, 39.3955, 2.93073, 0.29", "75.6827, 39.6565, 2.65462, 0.29", "76.1203, 39.8821, 2.47167, 0.88", "76.2805, 39.9795, 2.40384, 1.11", "76.6729, 40.239, 2.25557, 1.11", "77.0291, 40.4862, 2.18619, 1.18", "77.6665, 40.8574, 2.19135, 0.74", "78.096, 41.1, 2.21838, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "70.4446, 38.5716, 4.50232, 0.29", "71.1831, 39.482, 4.90188, 0.29", "71.5277, 39.913, 5.10686, 0.29", "71.9692, 40.4651, 5.36942, 0.66", "72.4457, 41.0611, 5.65286, 0.29", "72.8026, 41.5073, 5.86508, 0.29", "73.5177, 42.4016, 6.29042, 0.29", "73.9206, 42.877, 6.58623, 0.29", "80.2005, 50.0443, 9.27078, 0.29", "85.3747, 57.8146, 12.6703, 0.29", "89.4113, 66.6635, 15.0908, 0.29", "94.39, 74.8197, 17.9235, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-75.6415, -66.2197, -56.2648, 0.81", "-76.1189, -67.2411, -57.6045, 0.81", "-76.2047, -67.3722, -57.7751, 0.81", "-77.3026, -68.7356, -59.4308, 0.37", "-77.6248, -69.1032, -59.8254, 0.52", "-77.934, -69.4556, -60.1869, 0.66", "-78.2877, -69.8765, -60.6017, 0.66", "-79.0685, -70.7261, -61.3675, 0.37", "-79.5652, -71.2513, -61.8607, 0.37", "-80.3336, -72.0343, -62.5943, 0.37", "-80.8075, -72.5116, -63.065, 0.66", "-81.5666, -73.2654, -63.8055, 1.11", "-81.9234, -73.6103, -64.1277, 1.25", "-83.1341, -74.6715, -65.2383, 0.22", "-83.6393, -75.0448, -65.6879, 0.29", "-84.0808, -75.3152, -66.06, 0.59", "-84.5808, -75.5914, -66.4463, 0.81", "-85.1111, -75.8893, -66.8647, 0.81", "-86.4729, -76.8038, -67.9534, 0.37", "-86.8684, -77.1266, -68.2647, 0.37", "-87.5092, -77.8023, -68.8376, 0.59", "-87.742, -78.1057, -69.0606, 0.81", "-88.5557, -79.3799, -69.8493, 0.44", "-89.0929, -80.3696, -70.3369, 0.44", "-89.5083, -81.2282, -70.666, 0.37", "-90.0034, -82.3049, -71.0468, 0.37", "-90.3727, -83.0967, -71.3244, 0.66", "-90.6772, -83.6805, -71.5465, 0.81", "-90.9791, -84.2207, -71.736, 0.81", "-91.5499, -85.1711, -72.085, 0.29", "-91.8838, -85.694, -72.2644, 0.96", "-92.6944, -86.9259, -72.6121, 0.29", "-93.2075, -87.7318, -72.8086, 0.29", "-93.7117, -88.5411, -72.9567, 0.44", "-93.9982, -88.9898, -73.027, 0.44", "-94.4604, -89.7112, -73.0991, 0.29", "-94.7162, -90.1125, -73.1596, 0.59", "-95.1053, -90.7738, -73.2701, 0.59", "-95.4679, -91.4358, -73.4191, 0.52", "-96.0557, -92.4267, -73.7012, 0.37", "-96.4368, -93.0432, -73.9038, 0.88", "-97.1549, -94.1895, -74.3126, 0.44", "-97.5545, -94.8491, -74.5459, 0.59", "-97.8797, -95.3929, -74.7316, 0.59", "-98.2654, -96.0548, -74.9249, 0.59", "-98.6589, -96.7334, -75.0653, 0.37", "-98.9734, -97.219, -75.1223, 0.37", "-99.4912, -97.926, -75.1136, 0.29", "-99.6866, -98.1702, -75.0829, 0.29", "-100.181, -98.7851, -74.9455, 0.88", "-100.509, -99.2088, -74.8154, 1.18", "-101.063, -99.8664, -74.5644, 0.29", "-101.476, -100.316, -74.3795, 0.29", "-102.1, -100.984, -74.1529, 0.29", "-102.386, -101.304, -74.0684, 0.88", "-102.665, -101.632, -74.0109, 0.88", "-103.593, -102.728, -73.9333, 0.22", "-103.912, -103.104, -73.9526, 0.22", "-104.625, -103.903, -74.0478, 0.59", "-104.786, -104.077, -74.0808, 0.59", "-105.437, -104.77, -74.2284, 0.22", "-105.812, -105.173, -74.3261, 0.44", "-106.336, -105.791, -74.5014, 0.22", "-107.056, -106.635, -74.7313, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-75.6415, -66.2197, -56.2648, 0.29", "-76.9292, -66.2376, -56.2228, 0.29", "-77.7291, -66.2935, -56.1591, 0.29", "-78.5166, -66.3837, -56.1014, 0.66", "-78.8943, -66.4491, -56.0761, 0.66", "-80.2277, -66.7243, -55.9755, 0.29", "-80.8037, -66.8548, -55.9366, 0.29", "-81.233, -66.9763, -55.8671, 0.66", "-81.6425, -67.1113, -55.7927, 0.66", "-83.0466, -67.6063, -55.5329, 0.29", "-83.5431, -67.763, -55.4518, 0.52", "-84.017, -67.8861, -55.3918, 0.52", "-85.32, -68.1208, -55.2269, 0.22", "-85.923, -68.1883, -55.1488, 0.59", "-86.3089, -68.2098, -55.0857, 0.74", "-87.0556, -68.2064, -54.9624, 0.29", "-87.4314, -68.1896, -54.9062, 0.29", "-87.921, -68.1432, -54.8382, 0.96", "-88.3963, -68.0582, -54.8151, 0.96", "-89.6929, -67.8034, -54.7123, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-23.6295, -141.647, 22.2168, 0.29", "-23.4628, -141.648, 22.9641, 0.29", "-23.049, -141.701, 24.5847, 0.29", "-22.7558, -141.787, 25.7398, 0.59", "-22.3799, -142.02, 27.3471, 0.66", "-21.8458, -142.531, 29.591, 0.59", "-21.4715, -143.049, 31.0526, 0.29", "-21.1871, -143.563, 31.9043, 0.52", "-21.0121, -144.184, 32.2062, 0.66", "-20.746, -145.57, 32.2953, 0.37", "-20.4211, -147.356, 32.1846, 0.29", "-20.1765, -148.774, 32.0006, 0.29", "-19.9515, -150.183, 31.7501, 0.29", "-19.7302, -151.463, 31.5045, 0.29", "-19.4015, -152.975, 31.2078, 0.29", "-19.0582, -154.266, 30.9578, 0.29", "-15.227, -162.385, 37.8531, 0.29", "-12.0397, -169.023, 46.3323, 0.29", "-6.56148, -175.979, 53.2672, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.6295, -141.647, 22.2168, 0.74", "-24.1435, -142.301, 21.9676, 0.74", "-24.5925, -142.977, 21.7514, 0.52", "-24.9341, -143.552, 21.5946, 0.52", "-25.4692, -144.603, 21.3618, 0.59", "-25.6852, -145.139, 21.2936, 0.96", "-25.8502, -145.721, 21.2441, 1.18", "-25.9045, -146.218, 21.1795, 1.18", "-25.884, -146.688, 21.1198, 0.96", "-25.7639, -147.378, 20.9931, 0.66", "-25.4743, -148.357, 20.6608, 0.52", "-25.1478, -149.233, 20.3033, 0.52", "-24.727, -150.16, 19.8399, 0.29", "-24.5367, -150.508, 19.6259, 0.37", "-24.0103, -151.313, 18.985, 0.29", "-23.4363, -152.037, 18.1634, 0.29", "-23.6896, -159.846, 16.5641, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-5.93397, -75.4303, -7.47456, 0.37", "-9.08234, -76.6917, -7.75491, 0.37", "-10.6452, -77.359, -7.42363, 0.37", "-11.8212, -77.8825, -7.04014, 0.37", "-12.6219, -78.2486, -6.76643, 0.37", "-13.6371, -78.7237, -6.38535, 0.59", "-14.6228, -79.1983, -6.00724, 0.74", "-15.4009, -79.5652, -5.5846, 0.52", "-15.9897, -79.8482, -5.2599, 0.59", "-16.511, -80.1512, -5.00414, 0.74", "-17.3939, -80.6736, -4.66358, 0.52", "-17.9399, -80.9876, -4.51173, 0.52", "-18.4449, -81.2555, -4.41744, 0.74", "-19.0079, -81.5374, -4.33539, 0.74", "-19.5442, -81.8146, -4.2674, 0.52", "-20.3199, -82.2119, -4.17911, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.93397, -75.4303, -7.47456, 0.88", "-6.2048, -76.7107, -7.63063, 0.88", "-6.73126, -78.3218, -7.71125, 0.66", "-7.28861, -79.4607, -7.52586, 0.74", "-7.76787, -80.2186, -7.32406, 0.88", "-8.59966, -81.3645, -6.99192, 0.88", "-9.12712, -82.0566, -6.79769, 1.03", "-9.77394, -82.8131, -6.53436, 1.03", "-11.2515, -84.5773, -5.89209, 1.03", "-12.0932, -85.6871, -5.52482, 1.03", "-12.787, -86.8087, -5.22174, 0.88", "-13.1796, -87.7722, -5.04595, 0.88", "-13.3276, -88.6748, -4.92527, 0.88", "-13.1771, -90.4321, -4.82385, 1.25", "-13.0174, -91.0732, -4.80373, 1.55", "-12.6974, -91.9798, -4.72139, 1.55", "-12.1734, -93.2448, -4.47234, 1.55", "-11.8087, -94.0385, -4.21373, 1.55", "-11.1191, -95.4229, -3.56349, 1.03", "-10.5693, -96.4224, -2.91036, 1.03", "-10.1041, -97.2148, -2.29311, 0.81", "-9.35301, -98.4002, -1.20497, 0.81", "-8.81672, -99.1825, -0.404096, 1.03", "-8.27905, -99.8685, 0.341056, 1.03", "-7.6433, -100.582, 1.12428, 1.03", "-7.0979, -101.164, 1.68017, 0.88", "-6.24011, -102.114, 2.42994, 0.88", "-5.79968, -102.62, 2.74897, 0.96", "-5.2879, -103.27, 3.08016, 0.96", "-4.59005, -104.254, 3.49549, 1.33", "-4.21813, -104.841, 3.68853, 1.62", "-3.91051, -105.373, 3.84591, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.09033, -28.5817, -5.18607, 0.66", "5.24047, -32.9203, -2.40248, 0.66", "4.90861, -34.3303, -1.64799, 0.88", "4.30783, -37.1157, -0.375997, 1.03", "4.0757, -38.4416, 0.178049, 1.03", "3.92087, -39.6106, 0.655769, 1.03", "3.79403, -41.0559, 1.25612, 0.37", "3.70699, -42.6025, 1.7453, 0.37", "3.82978, -44.1539, 2.26816, 0.59", "4.31524, -45.5017, 2.81097, 0.81", "4.77462, -46.2763, 3.25054, 0.81", "5.31232, -46.9716, 3.79634, 0.52", "5.81078, -47.5426, 4.34806, 0.81", "6.52661, -48.3697, 5.21541, 1.25", "6.78731, -48.7781, 5.60288, 1.69", "7.03752, -49.4892, 6.1346, 1.69", "7.1513, -51.1672, 6.96262, 0.96", "7.05266, -52.2425, 7.2947, 0.66", "6.9217, -53.0765, 7.48527, 0.81", "6.61603, -54.8215, 7.84981, 0.44", "6.42917, -56.2121, 8.18205, 0.44", "6.35485, -57.3136, 8.48964, 0.44", "6.39232, -58.3167, 8.91781, 0.88", "6.60131, -59.6496, 9.83624, 1.25", "6.93603, -60.9138, 10.9808, 0.66", "7.28798, -61.8845, 11.9908, 0.52", "7.51411, -62.4533, 12.5935, 0.52", "8.05003, -63.9171, 14.0748, 0.74", "8.48103, -65.2143, 15.2507, 1.25", "8.65886, -65.7661, 15.6664, 1.25", "8.96826, -66.7091, 16.2391, 0.52", "9.39422, -67.921, 16.794, 0.44", "10.0112, -69.5178, 17.3366, 0.37", "10.4343, -70.4554, 17.5483, 0.37", "10.9144, -71.395, 17.7084, 0.96", "11.2979, -72.094, 17.8206, 1.33", "12.4737, -74.0, 18.1518, 0.29", "12.918, -74.6179, 18.2755, 0.29", "13.3802, -75.1762, 18.395, 0.29", "13.5522, -75.3835, 18.4412, 0.44", "16.5676, -86.8455, 23.1988, 0.44", "21.5204, -97.772, 27.4466, 0.44", "25.7609, -109.538, 30.1876, 0.44", "30.352, -120.93, 33.6759, 0.44", "34.1377, -132.426, 37.7656, 0.44", "37.8903, -144.281, 40.846, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.09033, -28.5817, -5.18607, 1.03", "6.05186, -30.5599, -5.55789, 1.03", "6.20178, -32.5354, -5.86582, 1.03", "6.45439, -33.9711, -6.04561, 0.96", "6.79432, -35.3316, -6.18553, 0.96", "7.21843, -36.6507, -6.29261, 0.96", "7.56053, -37.5431, -6.3142, 1.18", "8.27537, -38.7617, -6.15649, 1.47", "9.01024, -39.7392, -5.88278, 2.21", "9.31981, -40.1248, -5.72933, 2.21", "9.78295, -40.7562, -5.42015, 1.99", "10.5469, -42.0081, -4.75543, 1.33", "11.1818, -43.4037, -4.04146, 0.88", "11.5224, -44.5308, -3.50471, 0.74", "11.6756, -45.5957, -3.08112, 0.74", "11.7096, -46.8715, -2.67852, 1.33", "11.6688, -47.6455, -2.4974, 1.62", "11.5864, -48.4895, -2.36771, 1.92", "11.4976, -49.3909, -2.29985, 1.69", "11.4267, -51.1035, -2.25441, 1.33", "11.4958, -52.8348, -2.27066, 1.03", "11.6504, -54.0232, -2.31485, 0.88", "11.9009, -55.1198, -2.36599, 1.03", "12.348, -56.5505, -2.44474, 1.03", "12.909, -57.9816, -2.54715, 1.03", "13.4548, -59.1942, -2.68, 1.33", "13.8678, -60.1029, -2.83653, 1.69", "14.3202, -61.2031, -3.09546, 1.47", "14.5803, -61.9711, -3.32958, 1.03", "14.8738, -63.1379, -3.75221, 0.96", "15.0622, -64.1982, -4.20188, 0.96", "15.2101, -65.4941, -4.79524, 1.4", "15.3074, -66.8688, -5.42971, 1.4", "15.3823, -68.0697, -5.97631, 1.55", "15.4461, -68.7247, -6.24475, 1.77", "15.6281, -69.9881, -6.68307, 0.96", "15.8696, -71.1287, -6.97454, 0.66", "16.1909, -72.2095, -7.09658, 0.66", "16.6311, -73.2583, -7.06273, 0.96", "17.2076, -74.3011, -6.90573, 1.11", "17.5211, -74.7579, -6.80273, 1.4", "17.8123, -75.1204, -6.7059, 1.4", "18.4254, -75.874, -6.50527, 1.4", "19.1512, -76.8537, -6.29861, 0.66", "19.4739, -77.3754, -6.24668, 0.52", "19.8393, -78.1147, -6.24275, 0.52", "20.3047, -79.3221, -6.26735, 0.81", "20.6984, -80.6722, -6.26936, 1.03", "20.881, -81.5618, -6.2785, 1.03", "21.0279, -82.761, -6.27812, 1.03", "21.1209, -83.9504, -6.34047, 1.03", "21.1834, -85.1834, -6.45495, 0.88", "21.2718, -86.6836, -6.69524, 1.03", "21.3919, -88.0173, -6.98429, 0.52", "21.566, -89.275, -7.33948, 0.52", "21.8967, -91.0986, -8.02163, 0.88", "22.06, -91.8392, -8.36638, 1.11", "22.3393, -93.0072, -8.99454, 0.59", "22.4545, -93.5021, -9.26035, 0.59", "22.6601, -94.6216, -9.71948, 0.52", "22.7616, -95.8249, -9.99649, 0.52", "22.6784, -96.8121, -9.97779, 1.11", "22.4858, -97.6493, -9.84701, 1.25", "22.057, -98.9179, -9.5166, 1.18", "21.5794, -100.159, -9.12777, 0.52", "21.2316, -101.025, -8.79558, 0.52", "20.8103, -102.213, -8.34423, 0.52", "20.6832, -102.66, -8.20881, 0.81", "20.5231, -103.477, -8.05523, 0.74", "20.3783, -104.523, -8.00306, 0.74", "20.246, -105.554, -8.05384, 1.03", "20.0384, -106.912, -8.23885, 0.66", "19.8544, -107.801, -8.41816, 0.52", "19.548, -108.82, -8.69212, 1.11", "19.2266, -109.663, -9.02305, 1.11", "18.7213, -110.848, -9.60577, 0.81", "18.1897, -112.078, -10.3139, 0.66", "17.8341, -112.938, -10.8355, 0.88", "17.4333, -114.111, -11.5872, 0.66", "17.0247, -115.655, -12.7053, 0.59", "16.8398, -116.664, -13.5074, 0.88", "16.7355, -117.546, -14.2481, 1.18", "16.6754, -118.185, -14.7877, 0.96", "16.6074, -119.03, -15.5014, 0.96", "16.4721, -120.577, -16.7146, 0.52", "16.4084, -121.089, -17.0741, 0.81", "16.2701, -122.095, -17.7164, 0.66", "16.1502, -122.869, -18.0893, 0.66", "15.9928, -123.838, -18.3803, 0.96", "15.7807, -125.052, -18.3566, 0.88", "15.6066, -126.13, -18.1071, 0.88", "15.4555, -127.073, -17.8296, 0.37", "15.2108, -128.802, -17.2619, 1.03", "15.0829, -129.711, -16.9837, 1.03", "14.7375, -131.717, -16.4365, 0.44", "14.491, -133.164, -16.1922, 0.44", "14.3988, -133.998, -16.2228, 0.74", "14.4125, -134.847, -16.5028, 0.74", "14.5674, -136.012, -17.1541, 0.44", "14.7652, -136.943, -17.7642, 0.66", "15.1364, -138.281, -18.725, 0.44", "15.7211, -140.196, -20.0995, 0.88", "16.3798, -142.304, -21.5233, 0.52", "16.7284, -143.38, -22.2239, 0.74", "17.2155, -144.829, -23.1211, 1.33", "17.4768, -145.654, -23.5941, 1.33", "17.9047, -147.358, -24.4435, 0.74", "18.0923, -148.447, -24.8778, 0.66", "18.2222, -149.994, -25.3962, 0.66", "18.2196, -151.067, -25.7575, 0.81", "18.1083, -152.154, -26.1575, 0.59", "17.9564, -152.88, -26.4227, 1.18", "17.852, -153.216, -26.55, 1.18", "17.4204, -154.4, -26.9939, 0.44", "17.02, -155.436, -27.2906, 0.44", "16.7123, -156.314, -27.4779, 1.03", "16.5513, -156.948, -27.5464, 1.4", "16.3626, -158.314, -27.4479, 0.52", "16.3039, -159.246, -27.3136, 0.52", "16.3622, -160.488, -26.9839, 0.74", "16.4155, -160.943, -26.7953, 0.74", "16.5419, -161.866, -26.2457, 0.59", "16.7192, -162.923, -25.4104, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.09033, -28.5817, -5.18607, 0.88", "8.22144, -28.574, -8.34104, 0.88", "8.86079, -28.5324, -9.15613, 0.88", "9.52989, -28.4779, -9.88635, 1.03", "9.99969, -28.4355, -10.3322, 1.33", "10.4407, -28.3991, -10.7186, 1.62", "11.086, -28.3581, -11.2539, 1.84", "11.6656, -28.2764, -11.6286, 1.47", "12.3191, -28.1954, -12.1774, 1.18", "12.7055, -28.138, -12.8244, 0.81", "13.0318, -28.0704, -13.7067, 0.81", "13.2129, -28.043, -14.324, 1.11", "13.5563, -28.0516, -15.7297, 1.33", "13.8947, -28.1076, -17.2616, 1.77", "14.6506, -28.3356, -20.7888, 1.47", "14.9068, -28.4304, -21.8969, 1.11", "15.1947, -28.5324, -22.9693, 1.11", "15.641, -28.659, -24.2721, 0.81", "15.9625, -28.7317, -24.9454, 0.96", "16.5607, -28.7989, -25.7988, 0.88", "17.0903, -28.7377, -26.3952, 0.74", "17.4794, -28.5742, -26.8873, 0.59", "17.9387, -28.2124, -27.6194, 1.03", "18.2674, -27.8709, -28.1916, 1.55", "18.5655, -27.5354, -28.727, 1.69", "19.4383, -26.5241, -30.3741, 1.69", "19.7028, -26.2271, -30.8973, 1.69", "20.3734, -25.5444, -32.1963, 0.88", "20.7707, -25.2164, -32.8963, 0.81", "21.2823, -24.9102, -33.6518, 1.11", "21.997, -24.6349, -34.5285, 1.18", "22.6997, -24.5189, -35.2025, 0.59", "23.024, -24.5243, -35.4825, 0.59", "23.8533, -24.7064, -36.0727, 0.96", "24.4587, -24.9613, -36.4715, 1.18", "24.9898, -25.2742, -36.7742, 1.18", "25.5519, -25.6558, -37.0301, 1.4", "26.2114, -26.1324, -37.2914, 1.4", "26.8269, -26.5577, -37.5245, 1.11", "27.2644, -26.8133, -37.6797, 1.11", "27.803, -27.0337, -37.8676, 1.03", "28.5078, -27.2087, -38.1076, 1.03", "29.1222, -27.2749, -38.3111, 1.03", "29.8312, -27.2743, -38.539, 0.96", "30.8054, -27.1878, -38.8553, 0.88", "31.8714, -27.0271, -39.1772, 0.88", "32.5814, -26.8783, -39.378, 1.03", "33.1355, -26.7428, -39.5437, 1.11", "33.5842, -26.63, -39.6983, 1.18", "33.9727, -26.5533, -39.8875, 1.18", "34.6972, -26.5086, -40.4314, 0.81", "35.1741, -26.5821, -40.9393, 0.74", "35.7656, -26.7733, -41.6937, 1.18", "36.2029, -26.9582, -42.308, 1.4", "37.0642, -27.3705, -43.6324, 1.18", "37.7083, -27.6823, -44.6977, 0.88", "38.1697, -27.8872, -45.5422, 0.74", "38.637, -28.0451, -46.3929, 0.74", "39.0745, -28.112, -47.135, 1.11", "39.5486, -28.0945, -47.9034, 1.4", "40.028, -28.0282, -48.6456, 1.4", "40.6911, -27.9421, -49.6921, 1.11", "41.0728, -27.9211, -50.3295, 0.74", "41.5458, -27.9792, -51.1598, 0.66", "42.105, -28.1912, -52.1744, 0.81", "42.6901, -28.5518, -53.1551, 0.74", "43.1866, -28.9365, -53.9571, 1.25", "43.4704, -29.1678, -54.3813, 1.69", "43.8487, -29.4441, -54.9102, 1.69", "44.2634, -29.6475, -55.3962, 1.4", "44.9416, -29.7712, -56.0362, 0.88", "45.9568, -29.6761, -56.8633, 0.81", "46.4245, -29.5746, -57.2127, 0.81", "47.0893, -29.4196, -57.6582, 0.81", "47.9644, -29.2227, -58.1648, 0.81", "48.5243, -29.123, -58.4396, 0.81", "49.3313, -29.0522, -58.7799, 0.81", "49.8889, -29.09, -58.9628, 0.96", "50.7422, -29.3135, -59.2589, 0.96", "51.3053, -29.578, -59.5105, 1.18", "51.7865, -29.8905, -59.7999, 1.47", "52.2653, -30.2444, -60.1355, 1.47", "52.9527, -30.7688, -60.6576, 0.74", "53.744, -31.3395, -61.2894, 0.74", "54.7023, -31.956, -62.0975, 0.66", "55.5826, -32.4635, -62.8916, 0.74", "56.1289, -32.7235, -63.395, 0.81", "56.7561, -32.9367, -63.965, 0.81", "57.0773, -32.9951, -64.2443, 1.11", "57.8511, -33.0103, -64.8981, 1.25", "58.1817, -32.9671, -65.2147, 1.62", "58.5197, -32.8752, -65.6397, 1.62", "59.1428, -32.657, -66.574, 0.59", "59.5154, -32.5158, -67.2019, 0.59", "60.0689, -32.3167, -68.1666, 0.88", "60.8112, -32.0792, -69.4671, 1.4", "61.5744, -31.8854, -70.7439, 0.74", "62.0347, -31.8037, -71.4708, 0.59", "62.4433, -31.7683, -72.0435, 0.81", "62.8378, -31.7736, -72.4639, 0.81", "63.2524, -31.8079, -72.7546, 0.96", "63.705, -31.8423, -72.9719, 0.96", "64.255, -31.867, -73.1984, 0.59", "65.1055, -31.8583, -73.569, 0.59", "65.9245, -31.797, -73.9316, 0.66", "66.3854, -31.7331, -74.1869, 1.03", "67.1213, -31.6009, -74.6552, 1.03", "67.779, -31.4162, -75.3333, 0.59", "68.0782, -31.2916, -75.7574, 0.59", "68.4448, -31.1045, -76.3915, 0.59", "68.9831, -30.8487, -77.4158, 1.11", "69.2244, -30.7639, -77.8771, 1.33", "70.6163, -30.4231, -80.3774, 1.03", "70.8771, -30.3712, -80.7997, 1.4", "71.4174, -30.2748, -81.5692, 0.81", "71.9894, -30.1754, -82.268, 0.74", "72.757, -30.0415, -83.0291, 0.59", "73.289, -29.9461, -83.4685, 0.59", "74.1908, -29.7875, -84.0244, 0.59", "75.2577, -29.5438, -84.6826, 0.88", "75.6359, -29.4098, -84.9135, 1.25", "75.9712, -29.2463, -85.1166, 1.55", "76.4635, -28.9609, -85.4277, 1.55", "76.8581, -28.7217, -85.6926, 1.33", "77.3446, -28.4247, -86.0246, 0.66", "77.9681, -28.0609, -86.4455, 0.66", "78.3716, -27.8426, -86.7696, 0.66", "79.0764, -27.4642, -87.4653, 0.66", "79.3412, -27.3598, -87.9266, 0.66", "79.4857, -27.3255, -88.2643, 0.96", "79.6477, -27.3105, -88.698, 0.96", "80.1293, -27.3415, -90.024, 0.74", "80.4215, -27.3864, -90.8108, 1.62", "81.6273, -27.609, -93.8425, 0.66", "81.8153, -27.6331, -94.2847, 0.66", "82.1205, -27.6515, -94.9116, 1.11", "82.5438, -27.6574, -95.6555, 1.11", "83.011, -27.6267, -96.3014, 0.52", "83.5069, -27.5432, -96.8311, 0.52", "84.1703, -27.3319, -97.3873, 1.25", "84.6793, -27.1394, -97.8227, 0.88", "85.6434, -26.6959, -98.6574, 0.44", "86.1956, -26.3949, -99.1257, 0.44", "87.016, -25.8918, -99.805, 0.52", "87.5607, -25.5278, -100.246, 0.88", "87.8326, -25.3382, -100.458, 1.11", "88.0538, -25.1573, -100.674, 1.11", "88.2194, -24.9908, -100.888, 1.11", "88.7005, -24.4022, -101.786, 0.52", "88.8616, -24.1724, -102.249, 0.52", "89.0654, -23.8711, -102.96, 0.81", "89.5361, -23.2232, -104.663, 0.81", "89.7655, -22.934, -105.45, 1.11", "89.8766, -22.8158, -105.767, 1.92", "90.6125, -22.2026, -107.358, 0.59", "90.719, -22.1363, -107.524, 0.59", "91.1641, -21.9453, -107.962, 0.88", "91.7943, -21.7577, -108.356, 0.44", "92.8488, -21.5078, -108.931, 0.44", "93.6906, -21.342, -109.356, 0.74", "94.1625, -21.2752, -109.612, 0.74", "94.8318, -21.2394, -110.116, 0.52", "95.2048, -21.2671, -110.517, 0.52", "95.7267, -21.3735, -111.26, 0.59", "95.9152, -21.4183, -111.575, 0.59", "96.7168, -21.5679, -113.024, 0.59", "97.2423, -21.6113, -113.982, 0.81", "97.7329, -21.5896, -114.886, 1.4", "98.0, -21.5239, -115.34, 1.55", "98.648, -21.1949, -116.271, 0.44", "98.9405, -20.971, -116.603, 0.88", "99.3293, -20.6225, -116.907, 0.88", "99.7564, -20.2381, -117.224, 0.59", "100.416, -19.682, -117.722, 0.59", "100.844, -19.376, -118.128, 0.81", "101.316, -19.1142, -118.657, 0.81", "101.916, -18.8391, -119.454, 0.52", "102.564, -18.5664, -120.475, 0.74", "102.745, -18.4798, -120.917, 0.74", "103.022, -18.2411, -122.226, 0.37", "103.084, -18.0937, -122.916, 0.37", "103.091, -17.8096, -124.013, 0.37", "103.039, -17.5012, -124.974, 0.59", "102.866, -16.5245, -127.603, 0.88", "102.8, -16.0508, -128.805, 0.52", "102.791, -15.8991, -129.232, 0.52", "102.806, -15.6492, -130.167, 0.52", "102.869, -15.4905, -130.867, 0.81", "103.015, -15.3195, -131.691, 0.59", "103.187, -15.2005, -132.335, 0.59", "103.806, -14.9095, -134.414, 1.18", "104.507, -14.6602, -136.983, 0.74", "104.661, -14.6214, -137.649, 0.74", "104.784, -14.5988, -138.31, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-46.6384, 116.864, -37.9916, 0.29", "-47.4163, 116.769, -38.2101, 0.29", "-48.0412, 116.79, -38.4063, 0.29", "-48.3576, 116.889, -38.5632, 0.59", "-48.7111, 117.092, -38.7785, 0.59", "-48.9975, 117.3, -38.9593, 0.59", "-49.3042, 117.555, -39.1465, 0.44", "-49.5367, 117.851, -39.3097, 0.59", "-49.9492, 118.448, -39.6718, 0.37", "-50.1493, 118.735, -39.8667, 0.29", "-50.3565, 118.996, -40.0576, 0.59", "-50.5859, 119.261, -40.2575, 0.59", "-51.0881, 119.817, -40.6835, 0.29", "-51.5513, 120.352, -41.0987, 0.29", "-51.7638, 120.61, -41.3125, 0.29", "-52.1625, 121.106, -41.794, 0.29", "-52.4093, 121.416, -42.157, 0.29", "-52.6664, 121.74, -42.5812, 0.52", "-52.8978, 122.04, -42.9878, 0.66", "-53.2334, 122.519, -43.6159, 0.44", "-53.4926, 122.907, -44.1687, 0.59", "-53.8022, 123.358, -44.9393, 0.96", "-53.9275, 123.491, -45.2273, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-46.6384, 116.864, -37.9916, 0.66", "-45.3956, 116.762, -38.726, 0.66", "-44.4027, 116.682, -39.3128, 0.29", "-43.6819, 116.623, -39.7388, 0.44", "-42.7934, 116.551, -40.2639, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-66.6843, 130.702, -30.3967, 0.29", "-67.4521, 131.456, -31.0485, 0.29", "-68.4379, 132.322, -31.8672, 0.59", "-69.0867, 132.893, -32.4172, 0.44", "-70.0227, 133.779, -33.234, 0.88", "-70.443, 134.23, -33.6368, 1.03", "-71.3886, 135.38, -34.6206, 0.52", "-71.7002, 135.8, -34.9823, 0.44", "-72.2999, 136.713, -35.6897, 0.66", "-72.748, 137.463, -36.2324, 0.88", "-73.5773, 138.942, -37.1927, 0.59", "-74.1183, 139.925, -37.7812, 0.74", "-74.6602, 140.929, -38.3324, 0.74", "-75.4186, 142.255, -39.042, 0.37", "-75.7708, 142.814, -39.3328, 0.37", "-76.6018, 143.996, -39.9123, 0.66", "-77.1798, 144.707, -40.2228, 0.66", "-77.7878, 145.342, -40.4707, 0.52", "-78.6678, 146.127, -40.726, 0.88", "-79.2678, 146.591, -40.8377, 0.88", "-80.1461, 147.179, -40.9064, 0.52", "-81.1966, 147.815, -40.8986, 0.52", "-82.4906, 148.589, -40.8242, 0.88", "-83.3207, 149.109, -40.7531, 0.88", "-84.3452, 149.779, -40.6375, 0.52", "-85.2181, 150.37, -40.5312, 0.44", "-86.2106, 151.055, -40.4147, 0.37", "-87.1787, 151.783, -40.3056, 0.37", "-88.1408, 152.576, -40.2169, 0.29", "-89.7066, 153.963, -40.1158, 0.29", "-90.4384, 154.629, -40.0804, 0.29", "-91.2828, 155.377, -40.0391, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-66.6843, 130.702, -30.3967, 0.29", "-68.3386, 129.529, -29.5237, 0.29", "-69.2389, 128.89, -29.0485, 0.29", "-69.8767, 128.438, -28.7119, 0.22", "-70.6905, 127.861, -28.2824, 0.22", "-71.596, 127.219, -27.8046, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "131.107, 56.3074, 86.6164, 0.29", "131.7, 64.4121, 95.4692, 0.29", "133.072, 71.3933, 105.069, 0.29", "135.739, 77.9984, 114.63, 0.29", "137.421, 82.7686, 125.347, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "131.107, 56.3074, 86.6164, 0.29", "140.57, 55.4554, 90.4255, 0.29", "149.593, 56.3854, 95.1312, 0.29", "157.597, 58.7015, 101.064, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "78.096, 41.1, 2.21838, 0.37", "78.2987, 41.9549, 2.37629, 0.37", "78.5506, 43.2292, 2.65652, 0.37", "78.733, 44.1523, 2.85953, 0.22", "79.1167, 46.0931, 3.28634, 0.22", "79.4091, 47.5723, 3.61164, 0.66", "79.7612, 49.3537, 4.00341, 1.11", "79.8306, 49.7994, 4.12495, 1.11", "82.5614, 60.7842, 5.23583, 1.11", "85.9003, 71.6018, 6.23063, 1.11", "89.7848, 82.0385, 8.21929, 1.11", "93.5383, 92.166, 11.4094, 1.11", "98.6443, 102.142, 12.8196, 1.11", "103.931, 111.945, 14.5803, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "78.096, 41.1, 2.21838, 0.44", "78.9085, 41.3052, 2.32087, 0.44", "79.7782, 41.4807, 2.44162, 0.44", "80.707, 41.6477, 2.63792, 0.74", "81.2707, 41.7413, 2.78031, 1.03", "81.7977, 41.8249, 2.93094, 1.03", "82.2151, 41.8861, 3.03648, 1.03", "82.9253, 41.9809, 3.14733, 0.66", "83.9112, 42.1381, 3.19363, 0.66", "84.2627, 42.2213, 3.15428, 0.81", "84.8006, 42.4061, 3.02598, 0.44", "85.9003, 42.8999, 2.65796, 0.44", "87.2108, 43.6094, 2.1415, 0.37", "87.6721, 43.8874, 1.92876, 0.37", "88.3861, 44.3352, 1.57392, 0.37", "89.2424, 44.8975, 1.16897, 0.66", "89.7405, 45.2425, 0.958847, 0.66", "90.4342, 45.7373, 0.75675, 0.37", "90.8468, 46.0189, 0.688841, 0.37", "91.3701, 46.3668, 0.615514, 0.59", "91.8362, 46.6796, 0.535751, 0.59", "92.2933, 46.9765, 0.379117, 0.44", "93.0709, 47.4129, 0.0658426, 0.66", "93.2129, 47.4804, 0.00688783, 0.96", "93.7546, 47.6799, -0.19367, 0.96", "94.5452, 47.8823, -0.460298, 1.11", "96.3617, 48.2172, -0.975831, 0.44", "97.3762, 48.3643, -1.21084, 0.44", "98.1644, 48.4672, -1.353, 0.37", "99.1338, 48.6049, -1.52208, 0.37", "99.7222, 48.705, -1.61107, 0.29", "100.536, 48.9091, -1.72181, 0.22", "101.09, 49.1662, -1.83574, 0.59", "101.384, 49.4063, -1.96469, 0.59", "102.245, 50.2082, -2.52331, 0.29", "102.611, 50.5513, -2.78648, 0.37", "103.046, 50.9276, -3.09589, 0.52", "103.521, 51.2449, -3.41278, 0.74", "104.196, 51.5704, -3.92327, 0.96", "105.41, 52.0312, -4.9916, 0.29", "105.882, 52.1991, -5.47995, 0.52", "106.094, 52.2803, -5.74165, 0.81", "106.794, 52.6062, -6.74682, 1.11", "108.072, 53.315, -8.83484, 0.81", "108.629, 53.7031, -9.85605, 0.96", "109.219, 54.2224, -11.0332, 0.66", "109.659, 54.658, -11.9185, 0.52", "110.098, 55.124, -12.7118, 0.52", "110.286, 55.3335, -12.9651, 0.74", "110.768, 55.7521, -13.2657, 0.74", "111.085, 55.9575, -13.3751, 0.96", "111.58, 56.188, -13.4926, 0.96", "112.394, 56.5044, -13.7404, 0.74", "113.201, 56.823, -14.0596, 0.44", "114.094, 57.2442, -14.5774, 0.44", "114.435, 57.4436, -14.8391, 0.96", "115.056, 57.8999, -15.4891, 1.18", "115.924, 58.685, -16.6534, 0.66", "116.24, 59.0234, -17.1807, 0.66", "116.81, 59.709, -18.3113, 0.59", "117.021, 59.9873, -18.7381, 0.52", "117.611, 60.7678, -19.8344, 0.52", "117.775, 61.0074, -20.1183, 0.96", "118.122, 61.5217, -20.6386, 0.96", "118.773, 62.5218, -21.513, 0.59", "119.328, 63.4427, -22.1709, 0.59", "119.677, 64.0545, -22.5597, 0.88", "120.179, 64.9707, -23.0419, 0.74", "120.624, 65.7108, -23.3975, 0.74", "121.148, 66.4639, -23.6993, 0.88", "121.483, 66.8286, -23.8349, 0.88", "122.121, 67.323, -24.0798, 0.37", "122.8, 67.7328, -24.3386, 0.37", "123.874, 68.2417, -24.7399, 0.37", "124.63, 68.5564, -25.0515, 0.37", "125.516, 68.8954, -25.4548, 0.37", "126.051, 69.115, -25.7067, 0.59", "126.715, 69.4142, -26.0175, 0.74", "127.161, 69.6425, -26.2375, 0.74", "128.005, 70.147, -26.6981, 0.44", "128.455, 70.4208, -26.9349, 0.37", "129.764, 71.1356, -27.4703, 0.37", "130.383, 71.4131, -27.664, 0.74", "130.711, 71.5281, -27.7412, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "94.39, 74.8197, 17.9235, 0.29", "98.9761, 81.9472, 19.9448, 0.29", "104.365, 88.8019, 20.3963, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "94.39, 74.8197, 17.9235, 0.29", "100.738, 85.5816, 20.2387, 0.29", "106.813, 96.0292, 23.9876, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-23.6896, -159.846, 16.5641, 0.29", "-20.8426, -171.794, 13.6334, 0.29", "-19.3358, -184.335, 12.4967, 0.29", "-18.562, -196.659, 9.68543, 0.29", "-19.0917, -209.288, 8.52517, 0.29", "-20.6709, -221.831, 7.47162, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-23.6896, -159.846, 16.5641, 0.29", "-26.1974, -168.269, 12.3143, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.91051, -105.373, 3.84591, 0.37", "-4.85075, -107.081, 1.92213, 0.37", "-5.47333, -107.978, 0.911517, 0.37", "-6.11386, -108.749, -0.00404059, 0.44", "-6.91279, -109.58, -1.02269, 0.74", "-7.73579, -110.339, -1.96811, 0.59", "-8.62129, -111.04, -2.87561, 0.59", "-9.19494, -111.313, -3.30336, 0.74", "-10.1831, -111.589, -3.91041, 0.88", "-10.8269, -111.683, -4.2304, 1.18", "-11.4922, -111.712, -4.5081, 0.59", "-12.5142, -111.696, -4.90053, 0.44", "-13.5256, -111.66, -5.29372, 0.52", "-13.9894, -111.662, -5.48967, 0.74", "-14.7814, -111.78, -5.8284, 0.74", "-15.3415, -111.985, -6.10625, 0.59", "-15.9037, -112.339, -6.41778, 0.59", "-16.6283, -113.02, -6.85064, 0.59", "-17.3907, -113.971, -7.31029, 0.44", "-18.2566, -115.247, -7.81208, 0.37", "-18.7553, -116.111, -8.08642, 1.03", "-19.0847, -116.768, -8.26935, 1.03", "-19.3453, -117.374, -8.4156, 0.96", "-19.7844, -118.639, -8.65763, 0.66", "-20.1131, -119.781, -8.84432, 0.66", "-20.4209, -121.089, -9.05711, 0.88", "-20.577, -121.894, -9.18205, 1.03", "-20.7462, -123.039, -9.36421, 0.88", "-20.9059, -124.514, -9.61302, 0.52", "-20.9915, -125.666, -9.82268, 0.52", "-21.038, -126.542, -10.0002, 0.96", "-21.0695, -127.112, -10.1281, 0.96", "-21.1918, -128.51, -10.4899, 0.59", "-21.3473, -129.617, -10.8181, 0.66", "-21.5279, -130.44, -11.102, 0.81", "-21.8051, -131.436, -11.4938, 0.81", "-21.9948, -131.988, -11.7404, 0.81", "-22.346, -132.99, -12.2756, 0.44", "-22.5197, -133.512, -12.5914, 0.81", "-22.7183, -134.266, -13.0815, 0.81", "-22.9033, -135.347, -13.7866, 0.52", "-22.9484, -136.23, -14.3416, 0.52", "-22.8595, -137.852, -15.3082, 0.74", "-22.7599, -138.65, -15.7524, 1.11", "-22.6674, -139.386, -16.1315, 1.11", "-22.5789, -140.325, -16.5655, 0.96", "-22.5505, -141.378, -17.0093, 0.59", "-22.6356, -142.674, -17.5194, 0.44", "-22.9384, -144.1, -18.0576, 0.44", "-23.2877, -145.165, -18.4723, 0.44", "-23.693, -146.158, -18.8494, 0.74", "-24.0047, -146.887, -19.1145, 0.74", "-24.3127, -147.593, -19.3492, 0.74", "-24.8606, -148.858, -19.726, 0.66", "-25.2592, -149.803, -19.9778, 0.44", "-25.7655, -151.026, -20.2888, 0.44", "-26.5652, -152.727, -20.7004, 0.44", "-27.0237, -153.512, -20.8807, 0.88", "-27.5646, -154.239, -21.0374, 1.18", "-27.9916, -154.706, -21.1221, 1.18", "-28.5317, -155.208, -21.2047, 1.03", "-30.0707, -156.424, -21.4145, 0.66", "-31.4906, -157.387, -21.5807, 0.66", "-32.6971, -158.174, -21.716, 1.25", "-33.3384, -158.597, -21.7855, 1.55", "-34.1135, -159.12, -21.8701, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.91051, -105.373, 3.84591, 0.74", "-4.3917, -106.432, 2.98474, 0.74", "-4.95665, -107.646, 1.97766, 0.74", "-5.25868, -108.378, 1.46509, 0.74", "-5.55132, -109.202, 0.965105, 0.81", "-6.10291, -111.109, 0.00845337, 0.52", "-6.44368, -112.637, -0.625854, 0.74", "-6.56465, -113.457, -0.884891, 0.74", "-6.47237, -115.307, -1.07289, 0.74", "-6.20346, -116.241, -0.994851, 0.81", "-5.6407, -117.39, -0.715933, 0.66", "-5.28473, -117.963, -0.513817, 1.11", "-4.9071, -118.521, -0.324937, 1.11", "-4.41774, -119.23, -0.156146, 0.81", "-3.79029, -120.182, -0.0822393, 0.81", "-3.22573, -121.106, -0.075176, 0.96", "-2.72788, -121.966, -0.0969218, 0.88", "-2.13867, -123.021, -0.118201, 0.96", "-1.7328, -123.805, -0.151781, 1.11", "-1.28871, -124.779, -0.242511, 1.11", "-0.934078, -125.687, -0.372677, 0.74", "-0.494292, -127.098, -0.624959, 0.66", "-0.310052, -127.834, -0.770717, 0.66", "-0.00556588, -129.532, -1.10695, 0.66", "0.159793, -131.31, -1.461, 0.59", "0.167199, -132.336, -1.67929, 0.96", "0.078969, -133.61, -1.96813, 1.18", "-0.0562858, -134.556, -2.18007, 1.03", "-0.258377, -135.668, -2.41414, 0.88", "-0.524153, -137.112, -2.66555, 0.74", "-0.716169, -138.374, -2.76981, 0.59", "-0.858306, -139.446, -2.78375, 0.59", "-0.983802, -140.338, -2.72494, 1.4", "-1.10371, -140.997, -2.63225, 1.4", "-1.4347, -142.687, -2.25497, 0.88", "-1.81656, -144.681, -1.58087, 0.66", "-1.98556, -145.52, -1.23764, 0.88", "-2.21286, -146.585, -0.768535, 0.88", "-2.59578, -148.244, -0.0331625, 0.59", "-2.87861, -149.3, 0.416338, 0.81", "-3.41463, -151.042, 1.09272, 0.81", "-3.69851, -151.936, 1.35436, 1.11", "-3.91761, -152.67, 1.52574, 1.11", "-4.1917, -153.722, 1.67948, 0.52", "-4.40208, -154.717, 1.76296, 0.74", "-4.56986, -155.604, 1.79066, 1.03", "-4.66143, -156.345, 1.77191, 1.25", "-4.69054, -157.079, 1.80241, 1.33", "-4.64934, -158.294, 2.01469, 1.03", "-4.48751, -159.439, 2.3517, 0.74", "-4.25086, -160.374, 2.71336, 0.44", "-3.9397, -161.227, 3.11062, 0.29", "-3.34826, -162.409, 3.76743, 0.29", "-2.49026, -163.716, 4.63252, 0.29", "-1.96455, -164.309, 5.1054, 0.29", "-1.44514, -164.73, 5.49113, 0.88", "-1.0025, -165.032, 5.78839, 0.88", "-0.259155, -165.498, 6.24698, 0.52", "0.0908371, -165.706, 6.4114, 0.52", "0.726504, -166.117, 6.69154, 0.52", "1.20002, -166.561, 6.95843, 0.52", "1.80874, -167.375, 7.29072, 0.52", "2.09446, -167.889, 7.42219, 0.88", "2.40221, -168.523, 7.51385, 0.88", "2.79417, -169.296, 7.54736, 1.11", "3.2156, -170.016, 7.5553, 0.66", "4.06208, -171.166, 7.52563, 0.66", "4.48188, -171.581, 7.51992, 0.66", "5.22845, -172.177, 7.55204, 0.66", "5.83421, -172.603, 7.60746, 0.52", "6.86777, -173.326, 7.68767, 0.66", "7.19453, -173.564, 7.74702, 0.66", "7.88862, -174.102, 8.00816, 0.44", "8.44712, -174.574, 8.32441, 0.44", "9.1982, -175.29, 8.89714, 0.52", "10.0618, -176.214, 9.74228, 0.66", "10.7853, -177.057, 10.545, 0.44", "11.55, -177.98, 11.4662, 0.81", "12.2674, -178.836, 12.3008, 0.52", "12.7478, -179.397, 12.8113, 0.74", "13.3457, -180.079, 13.3606, 0.29", "13.677, -180.449, 13.58, 0.52", "14.203, -181.022, 13.7279, 0.59", "15.2257, -182.162, 13.8926, 0.37", "15.9783, -182.994, 13.9301, 0.66", "16.4112, -183.463, 13.927, 1.03", "17.1097, -184.208, 13.8937, 1.03", "17.8746, -185.034, 13.8958, 0.74", "19.0893, -186.363, 14.0283, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "16.7192, -162.923, -25.4104, 0.44", "16.638, -163.909, -25.3747, 0.44", "16.575, -164.597, -25.3499, 0.81", "16.5187, -165.126, -25.3322, 1.18", "16.4371, -165.832, -25.3123, 0.74", "16.3508, -166.566, -25.2956, 0.44", "16.2735, -167.212, -25.2836, 0.96", "16.1912, -167.881, -25.2754, 0.96", "16.1094, -168.516, -25.2722, 1.18", "15.9533, -169.462, -25.2736, 0.74", "15.7601, -170.316, -25.304, 0.66", "15.5559, -171.008, -25.3555, 0.66", "15.2577, -171.871, -25.4662, 0.66", "15.0951, -172.295, -25.5428, 1.03", "14.8528, -172.88, -25.6768, 0.81", "14.4832, -173.809, -25.964, 0.52", "14.307, -174.369, -26.1415, 0.44", "14.1681, -175.08, -26.336, 0.37", "14.1342, -175.488, -26.4192, 0.66", "14.1192, -175.941, -26.4728, 0.66", "14.1276, -177.129, -26.5681, 0.44", "14.1336, -178.326, -26.6106, 0.44", "14.0991, -179.281, -26.6212, 0.66", "14.0143, -180.122, -26.6163, 0.81", "13.8463, -181.033, -26.6259, 0.96", "13.5504, -181.988, -26.6509, 1.11", "13.23, -182.725, -26.6828, 0.81", "12.9074, -183.371, -26.7532, 0.88", "12.6561, -183.873, -26.8332, 0.66", "12.3043, -184.578, -26.9695, 0.29", "11.8654, -185.482, -27.1547, 0.29", "11.6096, -186.006, -27.2526, 0.52", "11.2102, -186.818, -27.4127, 0.52", "10.8768, -187.485, -27.5422, 0.37", "10.5592, -188.085, -27.6547, 0.29", "10.245, -188.608, -27.7399, 0.29", "10.1057, -188.797, -27.7754, 0.88", "9.77443, -189.111, -27.853, 1.11", "9.35775, -189.382, -27.9364, 0.44", "8.82493, -189.642, -28.0321, 0.37", "8.30784, -189.848, -28.129, 0.59", "7.84317, -190.003, -28.2228, 0.74", "7.23033, -190.191, -28.3533, 0.44", "6.69798, -190.356, -28.4641, 0.37", "6.34523, -190.48, -28.5336, 0.88", "5.941, -190.655, -28.6033, 1.11", "5.65188, -190.809, -28.6411, 1.11", "5.35596, -190.974, -28.6638, 1.11", "4.62504, -191.403, -28.6971, 0.29", "4.14365, -191.698, -28.7172, 0.59", "3.82464, -191.899, -28.7281, 0.59", "3.04379, -192.436, -28.7442, 0.29", "2.56982, -192.8, -28.7445, 0.29", "2.20063, -193.122, -28.7404, 0.52", "1.77128, -193.537, -28.7344, 0.52", "1.54487, -193.768, -28.7305, 0.81", "1.16386, -194.224, -28.7255, 0.81", "0.790811, -194.803, -28.7235, 0.29", "0.36577, -195.587, -28.7182, 0.29", "0.133791, -196.045, -28.7091, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.7192, -162.923, -25.4104, 0.22", "18.0965, -163.721, -25.2752, 0.22", "19.5488, -164.562, -25.1327, 0.22", "21.3022, -165.578, -24.9605, 0.22", "22.5092, -166.277, -24.8421, 0.22", "23.7899, -167.019, -24.7163, 0.22", "25.1074, -167.782, -24.587, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "104.784, -14.5988, -138.31, 0.74", "106.848, -15.8939, -139.788, 0.74", "107.461, -16.293, -140.086, 0.44", "107.925, -16.5663, -140.267, 0.74", "108.66, -16.9353, -140.518, 0.52", "109.655, -17.337, -140.821, 0.52", "110.708, -17.6866, -141.162, 0.52", "111.52, -17.8676, -141.323, 0.52", "112.342, -17.9903, -141.514, 0.52", "113.329, -18.0379, -141.847, 0.52", "114.102, -17.9691, -142.199, 0.74", "114.858, -17.7995, -142.637, 1.03", "115.125, -17.7157, -142.819, 1.4", "115.383, -17.6267, -143.014, 1.4", "116.403, -17.2949, -143.837, 0.44", "116.811, -17.1695, -144.11, 0.74", "117.461, -16.984, -144.417, 0.74", "117.939, -16.8471, -144.55, 0.96", "118.421, -16.7123, -144.598, 0.96", "119.095, -16.5523, -144.572, 0.96", "120.804, -16.2555, -144.27, 0.66", "121.546, -16.1801, -144.072, 0.81", "122.007, -16.1642, -143.907, 0.81", "123.156, -16.1724, -143.447, 0.52", "124.022, -16.204, -143.094, 0.52", "124.967, -16.2688, -142.743, 0.52", "125.859, -16.3558, -142.5, 0.52", "126.978, -16.4624, -142.267, 0.44", "127.563, -16.5114, -142.214, 0.96", "128.142, -16.5631, -142.302, 1.11", "128.901, -16.6453, -142.61, 0.44", "129.524, -16.7804, -143.044, 0.37", "129.943, -16.9499, -143.454, 0.37", "130.572, -17.3276, -144.252, 0.66", "131.233, -17.8299, -145.249, 0.74", "131.5, -18.0592, -145.709, 0.81", "131.864, -18.3993, -146.429, 0.81", "132.313, -18.8203, -147.401, 0.66", "132.726, -19.1535, -148.272, 0.66", "133.133, -19.4246, -149.055, 0.29", "133.428, -19.5935, -149.567, 0.59", "133.753, -19.7519, -150.092, 0.74", "134.061, -19.8878, -150.588, 0.44", "134.47, -20.0453, -151.22, 0.37", "134.901, -20.2165, -151.854, 0.37", "135.337, -20.3989, -152.448, 0.59", "135.692, -20.5629, -152.903, 0.59", "136.576, -21.1139, -154.173, 0.29", "137.13, -21.569, -155.046, 0.29", "137.406, -21.8546, -155.526, 0.29", "137.646, -22.1255, -155.943, 0.74", "137.884, -22.4174, -156.364, 0.74", "138.849, -23.7863, -158.049, 0.37", "139.146, -24.2885, -158.549, 0.52", "139.363, -24.7551, -158.968, 0.81", "139.578, -25.29, -159.456, 0.37", "139.75, -25.7715, -159.934, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "104.784, -14.5988, -138.31, 0.88", "104.927, -14.4721, -139.437, 0.88", "104.996, -14.5059, -139.921, 1.25", "105.054, -14.5962, -140.402, 1.25", "105.113, -14.7392, -141.077, 0.59", "105.268, -15.1214, -142.882, 0.59", "105.425, -15.5054, -144.695, 0.96", "105.511, -15.776, -145.66, 1.11", "105.643, -16.3584, -147.408, 1.25", "105.707, -16.7849, -148.506, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-91.2828, 155.377, -40.0391, 0.22", "-91.0596, 154.452, -39.2955, 0.22", "-90.9205, 153.875, -38.8322, 0.22", "-90.6092, 152.584, -37.7949, 0.22", "-90.4192, 151.797, -37.162, 0.22", "-90.256, 151.12, -36.6181, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-91.2828, 155.377, -40.0391, 0.22", "-91.9509, 156.066, -39.6594, 0.22", "-92.5374, 156.697, -39.3342, 0.22", "-93.0953, 157.296, -39.0248, 0.22", "-93.6291, 157.87, -38.7288, 0.22", "-94.4325, 158.734, -38.2833, 0.22", "-94.8424, 159.174, -38.056, 0.37", "-95.2368, 159.664, -37.8168, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "137.421, 82.7686, 125.347, 0.29", "139.627, 89.0097, 135.408, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "137.421, 82.7686, 125.347, 0.29", "138.81, 90.5717, 134.023, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "157.597, 58.7015, 101.064, 0.29", "158.395, 68.8079, 90.0204, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "157.597, 58.7015, 101.064, 0.29", "152.156, 56.4443, 102.11, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "130.711, 71.5281, -27.7412, 0.37", "130.157, 71.6573, -28.4145, 0.37", "129.512, 71.7085, -29.5709, 0.66", "129.214, 71.6284, -30.5117, 0.29", "129.001, 71.5297, -31.3789, 0.29", "128.754, 71.4158, -32.4721, 0.29", "128.228, 71.2207, -34.8502, 0.29", "128.0, 71.0904, -35.9564, 0.81", "127.391, 70.6012, -39.2958, 0.44", "127.216, 70.4074, -40.4727, 0.96", "127.107, 70.2572, -41.4893, 1.18", "127.018, 70.0897, -42.8269, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "130.711, 71.5281, -27.7412, 0.37", "132.174, 71.7603, -27.7049, 0.37", "133.88, 72.2983, -27.6442, 0.29", "134.509, 72.5529, -27.6148, 0.66", "135.125, 72.8446, -27.5679, 0.66", "135.891, 73.2944, -27.5129, 0.37", "136.958, 73.9671, -27.4501, 0.37", "138.11, 74.8215, -27.3861, 0.81", "138.583, 75.2111, -27.3242, 1.11", "139.242, 75.7779, -27.1977, 1.33", "140.561, 77.0172, -26.8487, 0.44", "141.325, 77.8108, -26.5522, 0.52", "142.305, 78.9501, -26.0444, 1.03", "143.333, 80.308, -25.3807, 0.52", "143.808, 80.9944, -25.0065, 0.66", "144.277, 81.7591, -24.5499, 0.66", "144.917, 83.0105, -23.7389, 0.44", "145.185, 83.7271, -23.3297, 0.29", "145.477, 84.6423, -22.8916, 0.44", "145.863, 85.7134, -22.5003, 0.66", "146.252, 86.6115, -22.2255, 0.37", "146.747, 87.6561, -21.9716, 0.37", "147.551, 89.3745, -21.647, 0.29", "148.049, 90.4859, -21.442, 0.29", "148.771, 92.3727, -21.1066, 0.29", "149.17, 93.6687, -20.8318, 0.29", "149.389, 94.6776, -20.5648, 1.55", "149.481, 95.5116, -20.2929, 1.18", "149.432, 96.3917, -19.8866, 0.96", "149.062, 97.8078, -19.0905, 0.52", "148.292, 99.4322, -18.0294, 0.29", "147.638, 100.428, -17.328, 0.29", "147.284, 100.895, -16.9931, 0.29", "146.293, 102.172, -16.1244, 0.22", "145.992, 102.571, -15.8834, 0.66", "145.631, 103.083, -15.6125, 0.66", "145.046, 104.07, -15.2185, 0.37", "144.651, 105.07, -14.891, 0.29", "144.421, 106.086, -14.6549, 0.22", "144.317, 107.0, -14.4402, 0.22", "144.271, 108.397, -14.0275, 0.22", "144.309, 109.023, -13.8139, 0.29", "144.444, 109.951, -13.448, 0.29", "144.718, 111.33, -12.8533, 0.29", "145.179, 113.112, -12.0778, 0.29", "145.499, 114.215, -11.5778, 0.29", "145.806, 115.099, -11.1652, 0.29", "146.234, 116.25, -10.6027, 0.29", "146.952, 117.979, -9.71971, 0.29", "147.583, 119.306, -9.0442, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-20.6709, -221.831, 7.47162, 0.29", "-21.1652, -231.12, 5.64854, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-20.6709, -221.831, 7.47162, 0.29", "-10.736, -218.577, 12.9255, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-34.1135, -159.12, -21.8701, 0.37", "-34.5776, -160.297, -22.2999, 0.37", "-34.7994, -160.859, -22.5052, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-34.1135, -159.12, -21.8701, 0.29", "-35.4956, -158.762, -24.7142, 0.29", "-35.9168, -158.657, -25.5297, 0.22", "-36.5143, -158.592, -26.5781, 0.22", "-36.8941, -158.606, -27.1748, 1.47", "-37.1756, -158.617, -27.6172, 1.69", "-37.4446, -158.627, -28.0399, 1.69", "-38.3637, -158.619, -28.9891, 0.96", "-38.9863, -158.71, -29.7244, 0.29", "-39.4894, -158.917, -30.3981, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "19.0893, -186.363, 14.0283, 0.29", "19.5089, -187.311, 12.5232, 0.29", "19.8748, -188.137, 11.2105, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "19.0893, -186.363, 14.0283, 0.29", "19.319, -184.443, 13.0166, 0.29", "19.4916, -183.264, 11.8427, 0.29", "19.5821, -182.76, 10.8134, 0.29", "19.6699, -182.272, 9.81466, 0.52", "19.9182, -180.891, 6.98992, 0.44", "20.0015, -180.427, 6.0421, 0.29", "20.0407, -180.615, 4.4477, 0.29", "20.0416, -180.807, 3.87295, 0.29", "20.0112, -175.847, -4.53739, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.133791, -196.045, -28.7091, 0.22", "-0.013442, -197.558, -28.5601, 0.22", "-0.163408, -199.299, -28.2942, 0.22", "-0.303889, -201.562, -27.931, 0.22", "-0.396439, -203.421, -27.6296, 0.22", "-0.472428, -205.816, -27.2532, 0.22", "-0.532709, -207.716, -26.9546, 0.22", "-0.59152, -209.933, -26.6275, 0.22", "-0.580144, -211.339, -26.4216, 0.37", "-0.551508, -211.824, -26.3393, 0.37", "-0.431626, -213.183, -26.0715, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.133791, -196.045, -28.7091, 1.55", "-0.59925, -196.469, -28.678, 1.55", "-1.03003, -196.776, -28.6752, 1.55", "-1.8827, -197.409, -28.6692, 0.29", "-3.12402, -198.335, -28.6301, 0.44", "-3.44294, -198.543, -28.6419, 0.44", "-4.79789, -199.262, -28.7557, 0.29", "-5.65599, -199.648, -28.8559, 0.29", "-6.50972, -199.979, -28.9497, 0.29", "-7.45429, -200.276, -29.0284, 0.29", "-9.31313, -200.683, -29.0779, 0.29", "-10.9495, -200.871, -29.0593, 0.29", "-11.978, -200.865, -29.0095, 0.22", "-13.0053, -200.786, -28.9249, 0.22", "-13.8031, -200.698, -28.8345, 0.22", "-14.6692, -200.58, -28.6959, 0.22", "-15.722, -200.442, -28.4051, 0.22", "-16.5034, -200.294, -28.1558, 0.22", "-17.0509, -200.137, -27.998, 0.52", "-17.5399, -199.953, -27.8758, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "105.707, -16.7849, -148.506, 0.81", "108.083, -16.8566, -150.987, 0.81", "109.888, -17.0535, -152.816, 0.88", "111.283, -17.296, -154.311, 0.37", "111.688, -17.3666, -154.739, 0.37", "112.575, -17.5209, -155.675, 0.66", "113.152, -17.6213, -156.284, 0.74", "113.338, -17.646, -156.531, 0.74", "114.428, -17.997, -157.65, 0.37", "114.952, -18.2327, -158.219, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "105.707, -16.7849, -148.506, 0.44", "106.129, -16.1009, -150.527, 0.44", "106.427, -15.6178, -151.955, 0.44", "106.592, -15.3509, -152.744, 0.44", "106.915, -14.8264, -154.294, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "127.018, 70.0897, -42.8269, 0.96", "126.814, 69.5, -45.7582, 0.96", "126.427, 68.8425, -48.7085, 0.59", "126.327, 68.69, -49.4163, 0.59", "126.247, 68.5595, -50.0915, 0.37", "126.103, 68.3115, -51.6645, 0.29", "126.023, 68.179, -52.6833, 0.29", "125.955, 68.1579, -53.3553, 0.66", "125.875, 68.2927, -54.6297, 0.22", "125.874, 68.3766, -55.3995, 0.22", "125.885, 68.4641, -56.3813, 0.88", "125.88, 68.5163, -56.9795, 0.88", "125.791, 68.6286, -58.616, 0.37", "125.712, 68.6166, -59.3769, 0.96", "125.614, 68.5401, -60.1278, 1.11", "125.44, 68.3275, -61.5511, 0.44", "125.361, 68.1877, -62.4174, 0.37", "125.321, 68.0845, -63.1021, 0.52", "125.202, 67.6903, -66.0273, 0.37", "125.221, 67.5508, -67.4136, 0.96", "125.27, 67.4971, -68.4934, 0.96", "125.342, 67.4651, -69.591, 0.52", "125.41, 67.4158, -70.4068, 1.33", "125.493, 67.3238, -71.3887, 1.33", "125.732, 66.8943, -75.4235, 0.52", "125.752, 66.8409, -75.8782, 0.52", "125.782, 66.7089, -76.8512, 0.52", "125.846, 66.0491, -80.9557, 0.44", "125.823, 65.7366, -82.8249, 0.59", "125.776, 65.5763, -83.9416, 0.59", "125.667, 65.4756, -85.0083, 0.88", "125.614, 65.4661, -85.3767, 1.25", "125.462, 65.5324, -86.0244, 1.47", "124.947, 65.941, -87.3301, 0.29", "124.435, 66.409, -88.4837, 0.29", "124.219, 66.6106, -88.9397, 0.29", "123.83, 66.9857, -89.704, 0.29", "123.585, 67.2458, -90.1979, 0.29", "123.003, 67.9194, -91.3869, 0.29", "122.772, 68.1782, -91.8541, 0.29", "122.448, 68.4565, -92.4517, 0.96", "122.242, 68.643, -92.8741, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "127.018, 70.0897, -42.8269, 0.15", "127.563, 71.2982, -42.6747, 0.15", "127.861, 71.9603, -42.5913, 0.15", "128.102, 72.4924, -42.5243, 0.81", "128.31, 72.9543, -42.4661, 1.03", "128.585, 73.5631, -42.3895, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-34.7994, -160.859, -22.5052, 0.52", "-34.9483, -161.312, -22.8172, 0.52", "-35.1573, -162.052, -23.2383, 0.52", "-35.44, -163.002, -23.6672, 0.37", "-35.5722, -163.441, -23.8563, 0.52", "-35.7533, -164.031, -24.1016, 0.44", "-35.9643, -164.685, -24.377, 0.37", "-36.1911, -165.351, -24.628, 0.29", "-36.4411, -166.057, -24.8476, 0.29", "-36.7484, -166.979, -25.1055, 1.03", "-36.8375, -167.237, -25.1798, 1.18", "-37.1158, -167.971, -25.4084, 0.88", "-37.315, -168.496, -25.584, 0.44", "-37.5374, -169.179, -25.8281, 0.37", "-37.6193, -169.579, -25.9814, 0.59", "-37.6495, -169.956, -26.1238, 0.44", "-37.6149, -170.722, -26.4226, 0.44", "-37.5334, -171.266, -26.636, 0.44", "-37.3698, -172.101, -26.9596, 0.52", "-37.2231, -172.878, -27.2522, 0.66", "-37.1368, -173.524, -27.447, 0.88", "-37.1172, -173.978, -27.534, 0.88", "-37.1819, -174.678, -27.5656, 0.52", "-37.3684, -175.288, -27.5053, 0.29", "-37.7308, -176.02, -27.3459, 0.29", "-38.2409, -176.851, -27.1622, 0.29", "-38.6182, -177.394, -27.074, 0.96", "-38.8629, -177.754, -27.0622, 1.18", "-39.1064, -178.151, -27.0815, 1.18", "-39.4679, -178.893, -27.1987, 0.59", "-39.7276, -179.676, -27.3535, 0.52", "-39.9081, -180.439, -27.5079, 0.52", "-40.0971, -181.425, -27.729, 0.66", "-40.2004, -182.079, -27.8715, 0.66", "-40.2819, -182.786, -28.0129, 0.81", "-40.3328, -183.815, -28.155, 0.81", "-40.3228, -184.567, -28.1421, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-34.7994, -160.859, -22.5052, 0.37", "-35.1724, -160.822, -21.7075, 0.37", "-35.7096, -160.823, -20.6926, 0.37", "-35.9841, -160.823, -20.2244, 0.37", "-36.6296, -160.804, -19.2183, 0.29", "-37.0307, -160.772, -18.634, 0.29", "-37.5062, -160.734, -17.9412, 0.29", "-37.9618, -160.717, -17.2711, 0.37", "-38.217, -160.725, -16.9674, 0.37", "-38.4952, -160.743, -16.6964, 0.29", "-38.8434, -160.737, -16.4488, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "19.8748, -188.137, 11.2105, 0.22", "18.9927, -189.195, 11.0494, 0.22", "17.7217, -190.719, 10.8172, 0.22", "16.9992, -191.585, 10.6853, 0.29", "16.6054, -192.057, 10.6133, 0.29", "15.585, -193.281, 10.4269, 0.22", "14.9182, -194.08, 10.3051, 0.22", "9.33885, -204.455, 8.40507, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "19.8748, -188.137, 11.2105, 0.37", "19.6395, -189.218, 11.5956, 0.37", "19.3601, -190.19, 11.7898, 0.96", "18.9477, -191.394, 11.8659, 0.59", "18.6198, -192.308, 11.8134, 0.59", "18.2721, -193.277, 11.7577, 0.22", "17.9409, -194.199, 11.7047, 0.22", "17.5144, -195.18, 11.5348, 0.22", "17.1248, -196.004, 11.2556, 0.22", "16.6676, -196.843, 10.8235, 0.22", "14.6533, -205.511, 11.5205, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "106.915, -14.8264, -154.294, 0.37", "106.72, -15.7062, -158.762, 0.37", "106.675, -15.8351, -159.524, 0.66", "106.617, -15.9097, -160.121, 0.66", "106.583, -15.935, -160.408, 0.96", "106.482, -15.9538, -161.145, 1.11", "106.36, -15.921, -162.008, 1.11", "106.218, -15.5974, -163.08, 0.81", "106.118, -15.2613, -163.865, 1.4", "106.09, -15.1262, -164.104, 1.4", "106.025, -14.5205, -164.917, 0.37", "106.018, -14.0309, -165.392, 0.37", "106.069, -13.3881, -165.851, 0.37", "106.139, -12.841, -166.144, 0.66", "106.196, -12.3803, -166.35, 0.66", "106.217, -11.7242, -166.626, 0.29", "106.176, -11.2184, -166.818, 0.52", "106.112, -10.8538, -166.955, 0.52", "105.971, -10.2499, -167.207, 0.29", "105.82, -9.63157, -167.496, 1.03", "105.601, -8.72099, -167.993, 0.66", "105.466, -8.1473, -168.334, 0.44", "105.421, -7.94297, -168.46, 0.66", "105.28, -7.31503, -168.859, 0.37", "105.221, -6.99474, -169.055, 0.52", "105.14, -6.36461, -169.411, 0.37", "105.118, -5.91857, -169.624, 0.37", "105.101, -5.44182, -169.848, 0.37", "105.053, -4.90775, -170.086, 0.37", "104.98, -4.39237, -170.296, 0.96", "104.951, -4.17496, -170.382, 0.96", "104.861, -3.29819, -170.717, 0.29", "104.801, -2.58777, -170.999, 0.29", "104.756, -1.92868, -171.272, 0.29", "104.721, -1.3782, -171.508, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "106.915, -14.8264, -154.294, 0.52", "103.849, -11.5413, -158.139, 0.52", "103.595, -11.26, -158.437, 0.52", "102.38, -9.90508, -159.76, 0.37", "102.04, -9.52585, -160.13, 0.29", "101.012, -8.37858, -161.25, 0.29", "100.137, -7.40324, -162.202, 0.29", "99.3585, -6.24928, -162.777, 0.29", "99.014, -5.7593, -163.035, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "122.242, 68.643, -92.8741, 0.29", "122.044, 68.8305, -94.7854, 0.29", "122.027, 68.7585, -95.3387, 0.29", "122.034, 68.5867, -96.0979, 0.29", "122.059, 68.2751, -97.4665, 0.29", "122.062, 68.175, -97.9903, 0.44", "122.066, 68.039, -98.7015, 0.44", "122.063, 67.531, -100.764, 0.29", "122.087, 67.2458, -101.739, 0.29", "122.123, 67.0619, -102.307, 0.29", "122.188, 66.7785, -103.174, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "122.242, 68.643, -92.8741, 0.22", "121.145, 67.7249, -92.1436, 0.22", "120.225, 67.0546, -91.5804, 0.22", "119.054, 66.326, -90.895, 1.4", "117.742, 65.5087, -90.1262, 0.22", "116.277, 64.5967, -89.2684, 1.84", "114.994, 63.798, -88.5171, 0.22", "113.852, 63.2226, -87.836, 0.22", "112.766, 62.7553, -87.1955, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "128.585, 73.5631, -42.3895, 0.74", "128.644, 74.1064, -41.8066, 0.74", "128.697, 74.9543, -40.8481, 0.22", "128.676, 75.4652, -40.2621, 0.22", "128.546, 76.4552, -39.0837, 0.22", "128.405, 77.2811, -37.9843, 1.33", "128.344, 77.665, -37.4181, 1.33", "128.207, 78.3706, -36.2034, 0.22", "128.084, 78.8211, -35.3029, 0.22", "127.982, 79.0862, -34.7226, 0.22", "127.703, 79.6736, -33.4767, 0.22", "127.533, 80.0701, -32.5107, 0.22", "127.487, 80.3339, -31.8815, 0.37", "127.514, 80.6167, -31.2473, 0.37", "127.645, 80.9441, -30.5334, 0.37", "127.791, 81.2206, -30.0119, 0.15", "128.165, 82.0743, -28.6361, 0.22", "128.454, 82.8174, -27.5307, 0.22", "128.643, 83.3319, -26.7435, 0.22", "128.896, 84.2853, -25.3209, 0.22", "128.991, 84.9411, -24.3103, 0.22", "129.035, 85.7471, -23.0088, 0.22", "129.025, 86.0382, -22.5298, 0.74", "128.887, 87.1793, -20.5402, 0.29", "128.76, 87.8607, -19.354, 0.29", "128.621, 88.5423, -18.2064, 0.29", "128.549, 89.0072, -17.3428, 0.29", "128.543, 89.5086, -16.2524, 0.52", "128.572, 89.9256, -15.2366, 0.37", "128.656, 90.4477, -13.8883, 0.29", "128.685, 90.5688, -13.5527, 0.37", "128.8, 91.0405, -12.243, 0.37", "128.92, 91.6518, -10.4873, 0.37", "128.99, 92.0974, -9.11464, 0.22", "129.04, 92.3222, -8.34979, 0.22", "129.092, 92.5582, -7.52411, 0.74", "129.108, 92.701, -7.07147, 0.88", "129.107, 93.2399, -5.70881, 0.59", "129.003, 93.994, -4.21027, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "128.585, 73.5631, -42.3895, 0.29", "129.952, 74.1506, -43.1056, 0.29", "131.138, 74.5906, -44.0105, 0.29", "132.29, 74.9754, -45.0274, 1.03", "132.828, 75.1479, -45.5369, 1.03", "134.162, 75.4918, -46.7847, 0.44", "135.185, 75.7065, -47.6982, 0.29", "136.531, 75.8656, -48.9474, 0.96", "136.985, 75.8896, -49.3601, 0.96", "138.346, 75.9316, -50.4732, 0.22", "139.412, 75.9875, -51.2479, 0.22", "140.552, 76.0744, -51.9077, 0.22", "141.818, 76.2279, -52.5311, 0.22", "143.31, 76.4954, -53.1612, 0.22", "144.253, 76.7179, -53.5219, 0.52", "145.041, 76.9802, -53.7691, 0.29", "146.053, 77.4583, -53.9971, 1.03", "146.738, 77.8676, -54.0281, 1.03", "147.36, 78.3593, -53.9266, 0.88", "147.994, 78.9051, -53.7234, 0.66", "148.787, 79.6382, -53.3721, 0.37", "149.594, 80.4385, -52.8993, 0.59", "150.543, 81.4513, -52.2078, 0.29", "151.372, 82.3296, -51.514, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-40.3228, -184.567, -28.1421, 0.74", "-41.0002, -185.62, -28.0579, 0.74", "-42.1524, -187.162, -27.9714, 0.66", "-43.0537, -188.163, -27.9677, 0.52", "-44.3109, -189.36, -28.0508, 0.37", "-45.0207, -190.014, -28.1258, 0.74", "-45.6179, -190.572, -28.1703, 1.03", "-46.4364, -191.306, -28.2323, 0.74", "-47.6018, -192.369, -28.3242, 0.52", "-48.7633, -193.568, -28.3983, 0.52", "-49.5316, -194.545, -28.4386, 0.66", "-50.5915, -196.274, -28.4731, 0.88", "-50.8938, -196.897, -28.4814, 1.18", "-51.2837, -197.91, -28.4868, 0.81", "-51.7171, -199.359, -28.4922, 0.52", "-52.0257, -200.59, -28.5464, 0.52", "-52.3829, -202.053, -28.6922, 0.52", "-52.5527, -202.75, -28.8131, 0.52", "-52.9032, -204.118, -29.0789, 0.52", "-53.2799, -205.469, -29.3674, 0.52", "-53.6145, -206.603, -29.6514, 1.03", "-53.8781, -207.426, -29.8751, 1.25", "-54.2626, -208.444, -30.1975, 0.66", "-54.7023, -209.428, -30.5698, 0.29", "-55.3395, -210.374, -31.0918, 0.29", "-55.7644, -210.203, -31.3864, 0.52", "-56.8302, -209.197, -32.09, 0.29", "-57.6469, -208.267, -32.6346, 0.29", "-58.4941, -207.13, -33.1991, 0.22", "-58.6493, -206.889, -33.3055, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-40.3228, -184.567, -28.1421, 0.22", "-40.4382, -186.702, -28.8875, 0.22", "-40.475, -187.557, -29.1899, 0.22", "-40.5143, -189.264, -29.7354, 0.22", "-40.5451, -191.2, -30.2964, 0.22", "-40.5701, -192.77, -30.751, 0.22", "-40.6185, -195.817, -31.6335, 0.22", "-40.686, -197.121, -31.9989, 0.22", "-40.776, -199.695, -32.7384, 0.22", "-40.7608, -201.135, -33.141, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "104.721, -1.3782, -171.508, 0.29", "105.93, -1.90415, -171.977, 0.29", "106.625, -2.20667, -172.246, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "104.721, -1.3782, -171.508, 0.37", "104.782, -0.510215, -171.719, 0.37", "104.853, 0.511891, -171.967, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_ChC_2f130a9db3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.9668, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( 0.0589085, 13.3996, -3.55427, 0.37 ) }
    dend_78 { pt3dadd( -0.00261823, 13.7888, -3.62356, 0.74 ) }
    dend_78 { pt3dadd( 0.0370296, 14.0955, -3.72988, 0.74 ) }
    dend_78 { pt3dadd( 0.370741, 15.0375, -4.13427, 0.37 ) }
    dend_78 { pt3dadd( 0.699017, 15.7906, -4.43489, 0.66 ) }
    dend_78 { pt3dadd( 1.08271, 16.5678, -4.75602, 1.33 ) }
    dend_78 { pt3dadd( 1.44412, 17.1474, -5.00647, 1.33 ) }
    dend_78 { pt3dadd( 2.05233, 18.1046, -5.42726, 0.74 ) }
    dend_78 { pt3dadd( 2.50666, 18.8699, -5.74414, 0.74 ) }
    dend_78 { pt3dadd( 3.19898, 20.135, -6.26699, 1.25 ) }
    dend_78 { pt3dadd( 3.63527, 21.1521, -6.66945, 2.06 ) }
    dend_78 { pt3dadd( 3.85659, 21.9115, -6.93827, 2.06 ) }
    dend_78 { pt3dadd( 4.00906, 22.9399, -7.27046, 1.4 ) }
    dend_78 { pt3dadd( 3.95118, 24.1275, -7.6404, 0.74 ) }
    dend_78 { pt3dadd( 3.69605, 24.9065, -7.88527, 1.11 ) }
    dend_78 { pt3dadd( 3.25213, 25.5035, -8.07482, 1.11 ) }
    dend_78 { pt3dadd( 2.61209, 26.0136, -8.22491, 0.81 ) }
    dend_78 { pt3dadd( 1.76915, 26.4445, -8.43177, 0.81 ) }
    dend_78 { pt3dadd( 0.739116, 26.7948, -8.70384, 0.81 ) }
    dend_78 { pt3dadd( -0.265143, 27.0515, -8.99788, 0.96 ) }
    dend_78 { pt3dadd( -1.09424, 27.2624, -9.25032, 1.11 ) }
    dend_78 { pt3dadd( -1.83905, 27.4763, -9.51964, 1.11 ) }
    dend_78 { pt3dadd( -3.45703, 28.055, -10.2263, 1.11 ) }
    dend_78 { pt3dadd( -3.93509, 28.2928, -10.4861, 1.11 ) }
    dend_78 { pt3dadd( -4.70623, 28.9253, -11.0201, 0.59 ) }
    dend_78 { pt3dadd( -5.16193, 29.6037, -11.406, 0.96 ) }
    dend_78 { pt3dadd( -5.43145, 30.23, -11.6614, 1.25 ) }
    dend_78 { pt3dadd( -5.62168, 30.7948, -11.8363, 1.55 ) }
    dend_78 { pt3dadd( -5.73707, 31.1506, -11.9116, 1.55 ) }
    dend_78 { pt3dadd( -6.14916, 32.2431, -12.1215, 0.74 ) }
    dend_78 { pt3dadd( -6.79661, 33.5643, -12.3714, 0.96 ) }
    dend_78 { pt3dadd( -7.3328, 34.3653, -12.5517, 0.66 ) }
    dend_78 { pt3dadd( -7.7778, 34.8693, -12.6923, 0.66 ) }
    dend_78 { pt3dadd( -8.49242, 35.4954, -12.9152, 0.81 ) }
    dend_78 { pt3dadd( -9.08551, 35.9068, -13.1062, 0.96 ) }
    dend_78 { pt3dadd( -9.86591, 36.3486, -13.3778, 1.47 ) }
    dend_78 { pt3dadd( -10.5849, 36.73, -13.642, 1.62 ) }
    dend_78 { pt3dadd( -11.2639, 37.1458, -13.8988, 1.47 ) }
    dend_78 { pt3dadd( -11.8959, 37.6122, -14.1504, 1.11 ) }
    dend_78 { pt3dadd( -12.6099, 38.2535, -14.4553, 0.81 ) }
    dend_78 { pt3dadd( -13.4505, 39.2084, -14.8683, 0.66 ) }
    dend_78 { pt3dadd( -13.9022, 39.8672, -15.1191, 0.81 ) }
    dend_78 { pt3dadd( -14.4831, 40.9791, -15.4943, 1.03 ) }
    dend_78 { pt3dadd( -14.7077, 41.5585, -15.6839, 1.25 ) }
    dend_78 { pt3dadd( -14.8676, 42.0976, -15.8685, 1.25 ) }
    dend_78 { pt3dadd( -15.1565, 43.2613, -16.3065, 0.96 ) }
    dend_78 { pt3dadd( -15.3719, 44.1594, -16.6929, 0.81 ) }
    dend_78 { pt3dadd( -15.6721, 45.2675, -17.2343, 0.59 ) }
    dend_78 { pt3dadd( -15.9195, 46.0374, -17.6364, 0.59 ) }
    dend_78 { pt3dadd( -16.2599, 46.9496, -18.1184, 0.59 ) }
    dend_78 { pt3dadd( -16.634, 47.8452, -18.5751, 0.59 ) }
    dend_78 { pt3dadd( -16.9964, 48.6837, -18.9295, 0.44 ) }
    dend_78 { pt3dadd( -17.3397, 49.5591, -19.2011, 0.66 ) }
    dend_78 { pt3dadd( -17.6058, 50.4944, -19.3499, 0.74 ) }
    dend_78 { pt3dadd( -17.692, 51.0813, -19.3762, 0.96 ) }
    dend_78 { pt3dadd( -17.7002, 51.7381, -19.3566, 0.96 ) }
    dend_78 { pt3dadd( -17.567, 53.1959, -19.3304, 0.52 ) }
    dend_78 { pt3dadd( -17.3828, 54.3779, -19.3456, 0.59 ) }
    dend_78 { pt3dadd( -17.139, 55.7185, -19.4115, 0.59 ) }
    dend_78 { pt3dadd( -17.0133, 56.4676, -19.4798, 0.96 ) }
    dend_78 { pt3dadd( -16.9168, 57.3318, -19.5991, 0.96 ) }
    dend_78 { pt3dadd( -16.8866, 58.8664, -19.8999, 0.66 ) }
    dend_78 { pt3dadd( -17.0397, 59.9213, -20.2096, 0.66 ) }
    dend_78 { pt3dadd( -17.3774, 60.7758, -20.5319, 0.96 ) }
    dend_78 { pt3dadd( -17.768, 61.294, -20.7461, 1.03 ) }
    dend_78 { pt3dadd( -18.2665, 61.7124, -20.9494, 1.03 ) }
    dend_78 { pt3dadd( -18.9291, 62.093, -21.1938, 1.03 ) }
    dend_78 { pt3dadd( -19.8223, 62.4505, -21.5482, 0.74 ) }
    dend_78 { pt3dadd( -20.5251, 62.6706, -21.8977, 0.74 ) }
    dend_78 { pt3dadd( -20.9941, 62.7889, -22.1821, 0.52 ) }
    dend_78 { pt3dadd( -22.0315, 63.0011, -22.9483, 0.52 ) }
    dend_78 { pt3dadd( -22.9094, 63.1432, -23.675, 0.52 ) }
    dend_78 { pt3dadd( -23.8047, 63.2559, -24.4508, 1.11 ) }
    dend_78 { pt3dadd( -24.2915, 63.3043, -24.8589, 1.4 ) }
    dend_78 { pt3dadd( -24.8443, 63.3422, -25.2739, 1.4 ) }
    dend_78 { pt3dadd( -25.7893, 63.3688, -25.8631, 0.81 ) }
    dend_78 { pt3dadd( -26.3719, 63.3821, -26.1013, 0.59 ) }
    dend_78 { pt3dadd( -27.2492, 63.4282, -26.2887, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -28.1306, 63.5183, -26.3396, 0.44 ) }
    dend_78 { pt3dadd( -29.0244, 63.6693, -26.3134, 0.74 ) }
    dend_78 { pt3dadd( -29.8784, 63.9213, -26.2466, 1.33 ) }
    dend_78 { pt3dadd( -30.9172, 64.4176, -26.1862, 0.88 ) }
    dend_78 { pt3dadd( -31.3776, 64.7495, -26.2506, 0.59 ) }
    dend_78 { pt3dadd( -31.6628, 65.0405, -26.3673, 0.59 ) }
    dend_78 { pt3dadd( -32.0641, 65.5556, -26.6608, 0.74 ) }
    dend_78 { pt3dadd( -32.5606, 66.2779, -27.1743, 0.96 ) }
    dend_78 { pt3dadd( -33.2016, 67.218, -27.96, 0.59 ) }
    dend_78 { pt3dadd( -33.8649, 68.136, -28.8337, 0.59 ) }
    dend_78 { pt3dadd( -34.21, 68.597, -29.2698, 0.81 ) }
    dend_78 { pt3dadd( -34.6459, 69.1245, -29.7479, 0.96 ) }
    dend_78 { pt3dadd( -35.0637, 69.5524, -30.1057, 1.03 ) }
    dend_78 { pt3dadd( -35.7713, 70.2031, -30.5591, 0.66 ) }
    dend_78 { pt3dadd( -35.9881, 70.4093, -30.6716, 0.66 ) }
    dend_78 { pt3dadd( -36.5702, 71.058, -30.9519, 0.81 ) }
    dend_78 { pt3dadd( -37.0838, 71.7603, -31.2543, 0.81 ) }
    dend_78 { pt3dadd( -37.4742, 72.4852, -31.5514, 0.66 ) }
    dend_78 { pt3dadd( -37.7924, 73.2571, -31.8548, 0.66 ) }
    dend_78 { pt3dadd( -38.1885, 74.4577, -32.3181, 0.52 ) }
    dend_78 { pt3dadd( -38.415, 75.2074, -32.6168, 0.81 ) }
    dend_78 { pt3dadd( -38.5817, 75.7664, -32.849, 0.74 ) }
    dend_78 { pt3dadd( -38.9847, 76.9657, -33.3415, 0.59 ) }
    dend_78 { pt3dadd( -39.2307, 77.552, -33.5621, 0.74 ) }
    dend_78 { pt3dadd( -39.5593, 78.1322, -33.753, 0.96 ) }
    dend_78 { pt3dadd( -40.0668, 78.8291, -33.9042, 0.96 ) }
    dend_78 { pt3dadd( -40.511, 79.3672, -33.9771, 0.74 ) }
    dend_78 { pt3dadd( -41.1258, 80.0664, -34.0274, 1.03 ) }
    dend_78 { pt3dadd( -41.5696, 80.556, -33.9877, 1.25 ) }
    dend_78 { pt3dadd( -41.8809, 80.9267, -33.9241, 0.81 ) }
    dend_78 { pt3dadd( -42.5414, 81.8018, -33.7193, 0.59 ) }
    dend_78 { pt3dadd( -42.9438, 82.3957, -33.5498, 0.66 ) }
    dend_78 { pt3dadd( -43.2778, 82.9341, -33.38, 0.66 ) }
    dend_78 { pt3dadd( -44.1439, 84.4242, -32.8748, 0.88 ) }
    dend_78 { pt3dadd( -44.5831, 85.1875, -32.5957, 1.11 ) }
    dend_78 { pt3dadd( -44.8849, 85.7094, -32.3856, 1.03 ) }
    dend_78 { pt3dadd( -45.2521, 86.3395, -32.1243, 1.25 ) }
    dend_78 { pt3dadd( -45.3893, 86.5737, -32.0183, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 10.6858, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.91366, 11.4698, -4.85592, 1.11 ) }
    dend_53 { pt3dadd( 5.47873, 12.0958, -5.233, 1.11 ) }
    dend_53 { pt3dadd( 6.38027, 13.1429, -5.834, 1.11 ) }
    dend_53 { pt3dadd( 6.99864, 13.8971, -6.28645, 0.96 ) }
    dend_53 { pt3dadd( 8.02287, 15.017, -6.95502, 1.55 ) }
    dend_53 { pt3dadd( 8.91368, 15.9122, -7.4931, 1.62 ) }
    dend_53 { pt3dadd( 9.43829, 16.3825, -7.78688, 1.62 ) }
    dend_53 { pt3dadd( 10.249, 17.035, -8.14377, 1.25 ) }
    dend_53 { pt3dadd( 11.6082, 18.016, -8.56101, 0.96 ) }
    dend_53 { pt3dadd( 13.6846, 19.3638, -8.93963, 0.88 ) }
    dend_53 { pt3dadd( 14.6592, 19.9116, -8.99878, 1.55 ) }
    dend_53 { pt3dadd( 15.7235, 20.4273, -8.97309, 1.84 ) }
    dend_53 { pt3dadd( 17.3196, 21.1199, -8.84806, 1.11 ) }
    dend_53 { pt3dadd( 18.1575, 21.4678, -8.73836, 1.03 ) }
    dend_53 { pt3dadd( 19.0951, 21.8972, -8.55575, 1.25 ) }
    dend_53 { pt3dadd( 20.0021, 22.4358, -8.36566, 0.88 ) }
    dend_53 { pt3dadd( 20.8385, 23.0521, -8.19109, 0.88 ) }
    dend_53 { pt3dadd( 21.6217, 23.7252, -8.02987, 0.88 ) }
    dend_53 { pt3dadd( 22.5413, 24.5628, -7.83424, 0.88 ) }
    dend_53 { pt3dadd( 23.3277, 25.3255, -7.58097, 0.96 ) }
    dend_53 { pt3dadd( 24.1414, 26.1796, -7.27692, 0.96 ) }
    dend_53 { pt3dadd( 24.8839, 27.0444, -6.94583, 0.81 ) }
    dend_53 { pt3dadd( 25.9766, 28.3953, -6.36241, 1.11 ) }
    dend_53 { pt3dadd( 26.6931, 29.2514, -5.90891, 1.4 ) }
    dend_53 { pt3dadd( 27.5187, 30.1102, -5.29551, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 9.20533, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.44084, 9.61522, 2.67694, 1.62 ) }
    dend_50 { pt3dadd( 5.22412, 10.1061, 3.38235, 1.25 ) }
    dend_50 { pt3dadd( 6.64908, 10.7912, 4.81296, 1.25 ) }
    dend_50 { pt3dadd( 7.40261, 11.1027, 5.62025, 1.25 ) }
    dend_50 { pt3dadd( 8.18886, 11.3239, 6.56332, 1.92 ) }
    dend_50 { pt3dadd( 8.52157, 11.3847, 6.98702, 2.5 ) }
    dend_50 { pt3dadd( 9.2451, 11.4053, 7.98849, 2.5 ) }
    dend_50 { pt3dadd( 10.7416, 11.2112, 10.2156, 1.77 ) }
    dend_50 { pt3dadd( 11.7796, 10.8705, 11.757, 0.96 ) }
    dend_50 { pt3dadd( 13.2442, 10.2221, 13.9264, 0.88 ) }
    dend_50 { pt3dadd( 13.6629, 10.012, 14.5564, 0.88 ) }
    dend_50 { pt3dadd( 13.9932, 9.85273, 15.0386, 1.4 ) }
    dend_50 { pt3dadd( 14.3197, 9.72186, 15.4599, 1.4 ) }
    dend_50 { pt3dadd( 15.5107, 9.44034, 16.6662, 0.66 ) }
    dend_50 { pt3dadd( 16.0158, 9.47178, 17.0691, 0.66 ) }
    dend_50 { pt3dadd( 17.2154, 9.97407, 17.7792, 0.88 ) }
    dend_50 { pt3dadd( 17.9691, 10.4199, 18.1643, 0.88 ) }
    dend_50 { pt3dadd( 18.9157, 11.0856, 18.5393, 0.74 ) }
    dend_50 { pt3dadd( 19.6213, 11.6492, 18.7507, 1.4 ) }
    dend_50 { pt3dadd( 20.4334, 12.3536, 18.8985, 2.06 ) }
    dend_50 { pt3dadd( 21.2331, 13.0254, 18.9607, 1.84 ) }
    dend_50 { pt3dadd( 22.1921, 13.7938, 18.9061, 1.18 ) }
    dend_50 { pt3dadd( 23.1899, 14.5355, 18.8759, 1.18 ) }
    dend_50 { pt3dadd( 23.595, 14.7985, 18.9332, 1.03 ) }
    dend_50 { pt3dadd( 24.2723, 15.1516, 19.2145, 1.03 ) }
    dend_50 { pt3dadd( 24.7204, 15.343, 19.6663, 0.59 ) }
    dend_50 { pt3dadd( 25.1365, 15.5456, 20.3327, 0.59 ) }
    dend_50 { pt3dadd( 25.9518, 16.0146, 21.9932, 0.88 ) }
    dend_50 { pt3dadd( 26.9002, 16.6503, 24.1774, 1.62 ) }
    dend_50 { pt3dadd( 27.3077, 16.9619, 25.1273, 1.62 ) }
    dend_50 { pt3dadd( 28.2559, 17.7477, 27.324, 0.88 ) }
    dend_50 { pt3dadd( 28.6976, 18.1127, 28.2813, 0.88 ) }
    dend_50 { pt3dadd( 29.1051, 18.4608, 29.0729, 1.47 ) }
    dend_50 { pt3dadd( 29.3914, 18.7086, 29.527, 1.47 ) }
    dend_50 { pt3dadd( 30.1278, 19.2974, 30.4122, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 30.5386, 19.5675, 30.8086, 0.59 ) }
    dend_50 { pt3dadd( 30.9779, 19.7866, 31.1547, 0.59 ) }
    dend_50 { pt3dadd( 32.0496, 20.2623, 32.0088, 1.25 ) }
    dend_50 { pt3dadd( 33.735, 21.0356, 33.4142, 0.74 ) }
    dend_50 { pt3dadd( 34.2629, 21.3332, 33.9067, 0.29 ) }
    dend_50 { pt3dadd( 34.7328, 21.6211, 34.4045, 0.29 ) }
    dend_50 { pt3dadd( 35.0018, 21.7864, 34.7292, 0.59 ) }
    dend_50 { pt3dadd( 35.7142, 22.2397, 35.6073, 1.11 ) }
    dend_50 { pt3dadd( 36.0742, 22.4408, 36.038, 1.11 ) }
    dend_50 { pt3dadd( 36.8467, 23.1571, 36.9629, 1.11 ) }
    dend_50 { pt3dadd( 37.2831, 23.8089, 37.6981, 0.59 ) }
    dend_50 { pt3dadd( 37.295, 21.9397, 37.8191, 0.59 ) }
    dend_50 { pt3dadd( 37.4445, 20.0124, 38.2692, 0.52 ) }
    dend_50 { pt3dadd( 37.5479, 18.6663, 38.5804, 0.59 ) }
    dend_50 { pt3dadd( 44.1894, 20.901, 44.5004, 0.59 ) }
    dend_50 { pt3dadd( 51.1546, 23.9927, 49.6481, 0.59 ) }
    dend_50 { pt3dadd( 56.9111, 28.4676, 55.3389, 0.59 ) }
    dend_50 { pt3dadd( 62.6142, 33.8473, 60.3298, 0.59 ) }
    dend_50 { pt3dadd( 69.2456, 39.6201, 63.4093, 0.59 ) }
    dend_50 { pt3dadd( 75.2198, 45.6958, 67.2184, 0.59 ) }
    dend_50 { pt3dadd( 81.5233, 50.7013, 71.8256, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.75883, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.75883, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.04495, 7.08167, 1.96551, 1.69 ) }
    dend_49 { pt3dadd( -4.6218, 7.4094, 2.45797, 1.4 ) }
    dend_49 { pt3dadd( -5.01762, 7.63064, 2.90196, 1.03 ) }
    dend_49 { pt3dadd( -5.55252, 7.95578, 3.57471, 0.88 ) }
    dend_49 { pt3dadd( -5.91899, 8.20162, 4.06545, 0.88 ) }
    dend_49 { pt3dadd( -6.36989, 8.50099, 4.76652, 0.59 ) }
    dend_49 { pt3dadd( -6.7714, 8.77461, 5.46826, 0.44 ) }
    dend_49 { pt3dadd( -7.49941, 9.28254, 6.84665, 0.37 ) }
    dend_49 { pt3dadd( -7.74823, 9.46118, 7.33896, 0.37 ) }
    dend_49 { pt3dadd( -8.1515, 9.76056, 8.15963, 0.37 ) }
    dend_49 { pt3dadd( -9.09386, 10.5106, 10.1868, 1.03 ) }
    dend_49 { pt3dadd( -9.30713, 10.699, 10.6624, 1.62 ) }
    dend_49 { pt3dadd( -15.5552, 11.6812, 16.9096, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.26317, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -4.8414, -1.9473, -14.5818, 0.74 ) }
    dend_44 { pt3dadd( -5.97497, -2.72024, -14.5757, 1.03 ) }
    dend_44 { pt3dadd( -6.96646, -3.38301, -14.5909, 1.25 ) }
    dend_44 { pt3dadd( -7.75929, -3.92086, -14.6117, 1.62 ) }
    dend_44 { pt3dadd( -8.40898, -4.35418, -14.6321, 1.84 ) }
    dend_44 { pt3dadd( -9.26092, -4.88892, -14.6378, 1.84 ) }
    dend_44 { pt3dadd( -10.0155, -5.30678, -14.6036, 1.99 ) }
    dend_44 { pt3dadd( -10.8085, -5.68516, -14.528, 2.21 ) }
    dend_44 { pt3dadd( -11.7349, -6.05216, -14.394, 2.65 ) }
    dend_44 { pt3dadd( -12.3921, -6.26977, -14.2887, 2.5 ) }
    dend_44 { pt3dadd( -13.5025, -6.59138, -14.1199, 1.77 ) }
    dend_44 { pt3dadd( -14.6786, -6.91589, -13.9792, 1.33 ) }
    dend_44 { pt3dadd( -15.4782, -7.1424, -13.9413, 1.18 ) }
    dend_44 { pt3dadd( -16.4263, -7.42143, -14.0016, 1.11 ) }
    dend_44 { pt3dadd( -17.1, -7.64492, -14.192, 1.11 ) }
    dend_44 { pt3dadd( -17.7941, -7.90752, -14.616, 1.11 ) }
    dend_44 { pt3dadd( -18.4572, -8.1795, -15.2665, 1.4 ) }
    dend_44 { pt3dadd( -19.1172, -8.4352, -16.1074, 1.03 ) }
    dend_44 { pt3dadd( -19.673, -8.62606, -16.9221, 0.88 ) }
    dend_44 { pt3dadd( -20.5002, -8.84489, -18.2569, 0.88 ) }
    dend_44 { pt3dadd( -21.394, -8.9969, -19.8334, 1.47 ) }
    dend_44 { pt3dadd( -22.0701, -9.06471, -21.0836, 1.77 ) }
    dend_44 { pt3dadd( -22.827, -9.07805, -22.5381, 1.84 ) }
    dend_44 { pt3dadd( -23.0946, -9.06104, -23.066, 2.06 ) }
    dend_44 { pt3dadd( -23.5795, -8.9966, -24.048, 1.77 ) }
    dend_44 { pt3dadd( -24.3265, -8.83045, -25.5235, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -2.11367, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -2.11367, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.40301, -2.00502, 9.64931, 2.06 ) }
    dend_41 { pt3dadd( -7.18142, -1.96203, 10.0297, 2.06 ) }
    dend_41 { pt3dadd( -9.20124, -1.99429, 10.9689, 1.84 ) }
    dend_41 { pt3dadd( -10.3257, -2.10323, 11.4767, 1.84 ) }
    dend_41 { pt3dadd( -11.1859, -2.25454, 11.8609, 1.99 ) }
    dend_41 { pt3dadd( -12.7339, -2.66296, 12.5506, 1.55 ) }
    dend_41 { pt3dadd( -13.9933, -3.14823, 13.0974, 1.03 ) }
    dend_41 { pt3dadd( -15.0114, -3.66805, 13.5056, 0.88 ) }
    dend_41 { pt3dadd( -15.9999, -4.3188, 13.7923, 1.18 ) }
    dend_41 { pt3dadd( -16.7988, -4.91169, 13.9667, 1.18 ) }
    dend_41 { pt3dadd( -17.4112, -5.40816, 14.068, 1.47 ) }
    dend_41 { pt3dadd( -18.32, -6.2195, 14.1472, 1.25 ) }
    dend_41 { pt3dadd( -19.2148, -7.05189, 14.2653, 1.03 ) }
    dend_41 { pt3dadd( -20.0217, -7.79352, 14.446, 1.62 ) }
    dend_41 { pt3dadd( -20.83, -8.51944, 14.7463, 1.69 ) }
    dend_41 { pt3dadd( -21.4531, -9.04581, 15.067, 1.33 ) }
    dend_41 { pt3dadd( -22.5662, -9.9114, 15.8244, 1.03 ) }
    dend_41 { pt3dadd( -23.9372, -10.8041, 17.0171, 0.88 ) }
    dend_41 { pt3dadd( -24.8958, -11.2785, 18.0792, 1.11 ) }
    dend_41 { pt3dadd( -25.7264, -11.5152, 19.1699, 1.33 ) }
    dend_41 { pt3dadd( -26.2443, -11.5392, 19.9365, 1.33 ) }
    dend_41 { pt3dadd( -26.7549, -11.3999, 20.7283, 1.18 ) }
    dend_41 { pt3dadd( -27.3625, -11.0327, 21.6436, 0.88 ) }
    dend_41 { pt3dadd( -28.2266, -10.3508, 22.7604, 1.18 ) }
    dend_41 { pt3dadd( -28.7655, -9.94005, 23.3667, 1.33 ) }
    dend_41 { pt3dadd( -29.2404, -9.67108, 23.8399, 1.33 ) }
    dend_41 { pt3dadd( -30.0593, -9.42035, 24.6069, 0.59 ) }
    dend_41 { pt3dadd( -31.1826, -9.48285, 25.5615, 0.52 ) }
    dend_41 { pt3dadd( -31.7524, -9.84662, 25.9782, 0.59 ) }
    dend_41 { pt3dadd( -32.547, -10.9798, 26.6054, 0.59 ) }
    dend_41 { pt3dadd( -33.3123, -12.5382, 27.3683, 0.59 ) }
    dend_41 { pt3dadd( -33.709, -13.4673, 27.8139, 1.03 ) }
    dend_41 { pt3dadd( -34.1632, -14.6274, 28.4214, 1.03 ) }
    dend_41 { pt3dadd( -34.5387, -15.5924, 28.9775, 1.03 ) }
    dend_41 { pt3dadd( -35.2466, -17.2047, 30.1118, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -35.9177, -18.2682, 31.1857, 0.66 ) }
    dend_41 { pt3dadd( -36.4829, -18.759, 32.0119, 0.66 ) }
    dend_41 { pt3dadd( -37.4791, -19.1653, 33.3209, 0.74 ) }
    dend_41 { pt3dadd( -38.1834, -19.2941, 34.1846, 0.81 ) }
    dend_41 { pt3dadd( -38.8386, -19.3418, 34.9582, 0.52 ) }
    dend_41 { pt3dadd( -40.0259, -19.3599, 36.2498, 0.52 ) }
    dend_41 { pt3dadd( -40.5345, -19.3987, 36.8085, 0.44 ) }
    dend_41 { pt3dadd( -41.2748, -19.7405, 37.793, 0.37 ) }
    dend_41 { pt3dadd( -41.6308, -20.2698, 38.3702, 0.37 ) }
    dend_41 { pt3dadd( -41.9611, -21.0728, 38.9602, 1.11 ) }
    dend_41 { pt3dadd( -42.243, -21.8966, 39.4212, 1.4 ) }
    dend_41 { pt3dadd( -42.5145, -22.9815, 39.9182, 1.4 ) }
    dend_41 { pt3dadd( -42.8482, -24.6286, 40.6032, 0.81 ) }
    dend_41 { pt3dadd( -43.0729, -25.8689, 41.062, 0.29 ) }
    dend_41 { pt3dadd( -43.2732, -26.6892, 41.3779, 0.29 ) }
    dend_41 { pt3dadd( -43.5099, -27.3477, 41.648, 0.29 ) }
    dend_41 { pt3dadd( -50.0234, -31.9638, 48.8917, 0.29 ) }
    dend_41 { pt3dadd( -57.906, -36.6953, 54.5292, 0.29 ) }
    dend_41 { pt3dadd( -65.1177, -41.4164, 61.0098, 0.29 ) }
    dend_41 { pt3dadd( -71.8102, -44.6757, 68.7428, 0.29 ) }
    dend_41 { pt3dadd( -78.5186, -48.0797, 76.405, 0.29 ) }
    dend_41 { pt3dadd( -86.2369, -53.1345, 82.0154, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -6.05117, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -6.05117, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.18048, -7.18572, 6.98557, 1.77 ) }
    dend_32 { pt3dadd( -2.15323, -9.13083, 7.20551, 1.47 ) }
    dend_32 { pt3dadd( -2.13821, -11.0884, 7.40451, 1.25 ) }
    dend_32 { pt3dadd( -2.16387, -12.5838, 7.53897, 1.62 ) }
    dend_32 { pt3dadd( -2.21514, -13.8455, 7.64029, 1.92 ) }
    dend_32 { pt3dadd( -2.28543, -14.946, 7.72998, 2.14 ) }
    dend_32 { pt3dadd( -2.41278, -16.3163, 7.83947, 2.14 ) }
    dend_32 { pt3dadd( -2.67534, -18.2184, 7.99155, 1.55 ) }
    dend_32 { pt3dadd( -3.00954, -20.0073, 8.12462, 1.33 ) }
    dend_32 { pt3dadd( -3.3122, -21.3627, 8.23668, 1.55 ) }
    dend_32 { pt3dadd( -3.53698, -22.2187, 8.31012, 1.92 ) }
    dend_32 { pt3dadd( -3.85639, -23.2571, 8.43309, 2.21 ) }
    dend_32 { pt3dadd( -4.09562, -23.9414, 8.53281, 2.5 ) }
    dend_32 { pt3dadd( -4.37533, -24.7491, 8.67597, 2.5 ) }
    dend_32 { pt3dadd( -4.63246, -25.6399, 8.84693, 2.36 ) }
    dend_32 { pt3dadd( -4.90908, -26.8622, 9.08808, 1.69 ) }
    dend_32 { pt3dadd( -5.17497, -28.4648, 9.39179, 1.25 ) }
    dend_32 { pt3dadd( -5.31021, -29.9624, 9.66555, 1.4 ) }
    dend_32 { pt3dadd( -5.31594, -31.2913, 9.87891, 1.62 ) }
    dend_32 { pt3dadd( -5.17689, -32.9133, 10.1047, 2.06 ) }
    dend_32 { pt3dadd( -5.00761, -33.9129, 10.2332, 2.36 ) }
    dend_32 { pt3dadd( -4.83638, -34.5609, 10.3056, 2.36 ) }
    dend_32 { pt3dadd( -4.41393, -35.7961, 10.4219, 2.14 ) }
    dend_32 { pt3dadd( -3.72603, -37.5293, 10.5716, 1.62 ) }
    dend_32 { pt3dadd( -3.11901, -38.9891, 10.6826, 1.25 ) }
    dend_32 { pt3dadd( -2.49638, -40.4952, 10.8119, 1.03 ) }
    dend_32 { pt3dadd( -1.8318, -42.1886, 10.9891, 1.03 ) }
    dend_32 { pt3dadd( -1.33675, -43.6067, 11.1705, 1.03 ) }
    dend_32 { pt3dadd( -0.797794, -45.4422, 11.4666, 1.03 ) }
    dend_32 { pt3dadd( -0.562778, -46.5354, 11.6822, 0.96 ) }
    dend_32 { pt3dadd( -0.491486, -47.399, 11.8801, 0.96 ) }
    dend_32 { pt3dadd( -0.588243, -48.1689, 12.0778, 0.96 ) }
    dend_32 { pt3dadd( -1.03316, -49.1827, 12.4069, 0.96 ) }
    dend_32 { pt3dadd( -1.4683, -49.7337, 12.6138, 0.88 ) }
    dend_32 { pt3dadd( -1.92478, -50.141, 12.7759, 1.18 ) }
    dend_32 { pt3dadd( -2.66169, -50.7064, 12.9827, 1.18 ) }
    dend_32 { pt3dadd( -3.37553, -51.223, 13.1658, 1.33 ) }
    dend_32 { pt3dadd( -4.19745, -51.8091, 13.3943, 1.33 ) }
    dend_32 { pt3dadd( -4.9041, -52.3201, 13.6157, 1.4 ) }
    dend_32 { pt3dadd( -5.66164, -52.9028, 13.8893, 1.55 ) }
    dend_32 { pt3dadd( -6.38727, -53.5199, 14.2114, 1.55 ) }
    dend_32 { pt3dadd( -7.20858, -54.3631, 14.6739, 1.84 ) }
    dend_32 { pt3dadd( -7.70595, -54.9788, 15.002, 2.14 ) }
    dend_32 { pt3dadd( -8.19309, -55.7211, 15.354, 1.99 ) }
    dend_32 { pt3dadd( -8.87253, -57.0617, 15.9167, 0.88 ) }
    dend_32 { pt3dadd( -9.33649, -58.2999, 16.359, 0.88 ) }
    dend_32 { pt3dadd( -9.72763, -59.7624, 16.8003, 0.81 ) }
    dend_32 { pt3dadd( -9.94655, -61.0554, 17.0998, 0.74 ) }
    dend_32 { pt3dadd( -10.1497, -62.6879, 17.4288, 0.74 ) }
    dend_32 { pt3dadd( -10.2494, -64.2131, 17.691, 1.03 ) }
    dend_32 { pt3dadd( -10.2455, -65.5834, 17.8595, 1.4 ) }
    dend_32 { pt3dadd( -10.2011, -66.436, 17.9213, 1.69 ) }
    dend_32 { pt3dadd( -10.1093, -67.3918, 17.9456, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -10.5032, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -10.5032, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.92189, -12.0813, -2.34379, 3.39 ) }
    dend_0 { pt3dadd( 2.30908, -13.3544, -2.50948, 3.02 ) }
    dend_0 { pt3dadd( 2.7011, -14.6435, -2.67725, 3.02 ) }
    dend_0 { pt3dadd( 3.21661, -16.3386, -2.89785, 3.02 ) }
    dend_0 { pt3dadd( 3.77035, -18.1594, -3.13482, 3.24 ) }
    dend_0 { pt3dadd( 4.18794, -19.502, -3.32822, 3.54 ) }
    dend_0 { pt3dadd( 4.66205, -20.9487, -3.5854, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -45.3893, 86.5737, -32.0183, 0.44 ) }
    dend_88 { pt3dadd( -46.8237, 88.0636, -32.9472, 0.44 ) }
    dend_88 { pt3dadd( -47.471, 88.7946, -33.3515, 0.37 ) }
    dend_88 { pt3dadd( -47.7646, 89.2063, -33.495, 0.66 ) }
    dend_88 { pt3dadd( -48.2183, 89.9598, -33.6777, 0.66 ) }
    dend_88 { pt3dadd( -48.653, 90.8152, -33.8252, 0.59 ) }
    dend_88 { pt3dadd( -48.9203, 91.4605, -33.91, 0.81 ) }
    dend_88 { pt3dadd( -49.1297, 92.2722, -33.9169, 0.81 ) }
    dend_88 { pt3dadd( -49.3221, 94.1436, -33.8898, 0.52 ) }
    dend_88 { pt3dadd( -49.2642, 95.0283, -33.8797, 0.52 ) }
    dend_88 { pt3dadd( -48.9427, 96.3867, -33.9072, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -48.4227, 97.668, -34.0085, 0.44 ) }
    dend_88 { pt3dadd( -47.7137, 98.8927, -34.194, 0.74 ) }
    dend_88 { pt3dadd( -47.0814, 99.7414, -34.3744, 0.74 ) }
    dend_88 { pt3dadd( -46.0321, 100.902, -34.7215, 0.44 ) }
    dend_88 { pt3dadd( -45.2329, 101.709, -34.9566, 0.59 ) }
    dend_88 { pt3dadd( -44.4285, 102.499, -35.198, 0.59 ) }
    dend_88 { pt3dadd( -43.6222, 103.318, -35.4715, 0.59 ) }
    dend_88 { pt3dadd( -42.9924, 104.04, -35.7352, 0.37 ) }
    dend_88 { pt3dadd( -42.5342, 104.616, -35.9587, 0.37 ) }
    dend_88 { pt3dadd( -41.8439, 105.526, -36.3268, 0.59 ) }
    dend_88 { pt3dadd( -41.1626, 106.397, -36.7013, 0.37 ) }
    dend_88 { pt3dadd( -40.5469, 107.149, -37.0366, 0.81 ) }
    dend_88 { pt3dadd( -39.9022, 107.907, -37.3933, 0.81 ) }
    dend_88 { pt3dadd( -38.7238, 109.301, -38.0859, 0.44 ) }
    dend_88 { pt3dadd( -37.8187, 110.4, -38.6411, 0.44 ) }
    dend_88 { pt3dadd( -37.1821, 111.159, -39.0643, 0.81 ) }
    dend_88 { pt3dadd( -36.5369, 111.937, -39.5081, 0.44 ) }
    dend_88 { pt3dadd( -36.1876, 112.383, -39.7737, 0.59 ) }
    dend_88 { pt3dadd( -35.3575, 113.521, -40.4987, 0.59 ) }
    dend_88 { pt3dadd( -34.8677, 114.337, -41.1087, 0.44 ) }
    dend_88 { pt3dadd( -34.3664, 115.473, -42.0147, 0.44 ) }
    dend_88 { pt3dadd( -34.0645, 116.444, -42.9101, 0.96 ) }
    dend_88 { pt3dadd( -33.9738, 116.898, -43.3968, 1.18 ) }
    dend_88 { pt3dadd( -33.9403, 117.313, -43.8994, 1.18 ) }
    dend_88 { pt3dadd( -34.0418, 118.398, -45.7013, 0.44 ) }
    dend_88 { pt3dadd( -34.2425, 119.161, -47.1553, 0.37 ) }
    dend_88 { pt3dadd( -34.4709, 119.758, -48.6647, 0.66 ) }
    dend_88 { pt3dadd( -34.5848, 120.0, -49.3749, 0.66 ) }
    dend_88 { pt3dadd( -34.7767, 120.356, -50.5113, 0.66 ) }
    dend_88 { pt3dadd( -35.4543, 121.655, -55.0469, 0.44 ) }
    dend_88 { pt3dadd( -35.5627, 121.867, -55.856, 0.44 ) }
    dend_88 { pt3dadd( -36.0905, 122.956, -60.1616, 0.29 ) }
    dend_88 { pt3dadd( -36.2006, 123.215, -61.0749, 0.29 ) }
    dend_88 { pt3dadd( -36.3174, 123.548, -62.1136, 0.29 ) }
    dend_88 { pt3dadd( -36.5496, 124.376, -64.3105, 0.74 ) }
    dend_88 { pt3dadd( -36.8001, 125.568, -66.7856, 0.44 ) }
    dend_88 { pt3dadd( -36.8466, 125.884, -67.322, 0.44 ) }
    dend_88 { pt3dadd( -36.9479, 126.697, -68.3039, 0.37 ) }
    dend_88 { pt3dadd( -37.0474, 127.559, -69.1719, 0.88 ) }
    dend_88 { pt3dadd( -37.2359, 129.02, -70.2654, 0.29 ) }
    dend_88 { pt3dadd( -37.3513, 129.623, -70.5847, 0.52 ) }
    dend_88 { pt3dadd( -37.6344, 130.727, -71.0568, 0.15 ) }
    dend_88 { pt3dadd( -37.9361, 131.696, -71.4977, 0.22 ) }
    dend_88 { pt3dadd( -38.454, 133.21, -72.1954, 0.22 ) }
    dend_88 { pt3dadd( -38.9697, 134.527, -72.7723, 0.22 ) }
    dend_88 { pt3dadd( -39.4641, 135.764, -73.2777, 0.22 ) }
    dend_88 { pt3dadd( -40.2345, 137.574, -74.0798, 1.47 ) }
    dend_88 { pt3dadd( -40.821, 138.899, -74.734, 0.66 ) }
    dend_88 { pt3dadd( -41.1805, 139.749, -75.173, 0.96 ) }
    dend_88 { pt3dadd( -41.7232, 141.161, -75.892, 0.22 ) }
    dend_88 { pt3dadd( -42.0643, 142.117, -76.3131, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -45.3893, 86.5737, -32.0183, 0.37 ) }
    dend_79 { pt3dadd( -45.2095, 87.8746, -31.8764, 0.37 ) }
    dend_79 { pt3dadd( -45.0658, 88.5141, -31.8699, 0.37 ) }
    dend_79 { pt3dadd( -44.9361, 89.1232, -31.8068, 0.37 ) }
    dend_79 { pt3dadd( -44.7975, 90.041, -31.6337, 0.74 ) }
    dend_79 { pt3dadd( -44.7437, 90.8217, -31.4477, 0.29 ) }
    dend_79 { pt3dadd( -44.7702, 91.7445, -31.1989, 0.29 ) }
    dend_79 { pt3dadd( -44.7992, 92.1788, -31.0732, 0.52 ) }
    dend_79 { pt3dadd( -44.918, 93.1444, -30.6466, 0.44 ) }
    dend_79 { pt3dadd( -45.0164, 93.7631, -30.3104, 0.29 ) }
    dend_79 { pt3dadd( -45.1007, 94.3037, -29.9953, 0.29 ) }
    dend_79 { pt3dadd( -45.1745, 94.9042, -29.626, 0.29 ) }
    dend_79 { pt3dadd( -45.2365, 95.9146, -29.0335, 0.44 ) }
    dend_79 { pt3dadd( -45.242, 96.7318, -28.5728, 0.44 ) }
    dend_79 { pt3dadd( -45.1591, 97.7642, -28.0644, 0.52 ) }
    dend_79 { pt3dadd( -45.008, 98.582, -27.6847, 0.37 ) }
    dend_79 { pt3dadd( -44.8213, 99.2318, -27.3949, 0.37 ) }
    dend_79 { pt3dadd( -44.5518, 99.9277, -27.1183, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 27.5187, 30.1102, -5.29551, 0.29 ) }
    dend_69 { pt3dadd( 28.1512, 30.0749, -3.81288, 0.29 ) }
    dend_69 { pt3dadd( 28.776, 30.0584, -2.57873, 0.59 ) }
    dend_69 { pt3dadd( 29.415, 30.02, -1.49086, 0.74 ) }
    dend_69 { pt3dadd( 29.7734, 29.9979, -0.933195, 0.37 ) }
    dend_69 { pt3dadd( 30.3136, 29.9943, -0.0324913, 0.37 ) }
    dend_69 { pt3dadd( 30.6063, 30.0085, 0.496088, 0.66 ) }
    dend_69 { pt3dadd( 30.8197, 30.0585, 0.902141, 0.96 ) }
    dend_69 { pt3dadd( 31.0886, 30.2031, 1.64027, 1.25 ) }
    dend_69 { pt3dadd( 31.4324, 30.5504, 2.99741, 0.37 ) }
    dend_69 { pt3dadd( 31.6984, 31.0067, 4.38831, 0.37 ) }
    dend_69 { pt3dadd( 31.7784, 31.1909, 4.86882, 0.37 ) }
    dend_69 { pt3dadd( 31.9687, 31.5986, 5.84572, 0.74 ) }
    dend_69 { pt3dadd( 32.3703, 32.2554, 7.34489, 0.66 ) }
    dend_69 { pt3dadd( 32.754, 32.7316, 8.37201, 0.52 ) }
    dend_69 { pt3dadd( 33.1102, 33.0077, 8.97859, 0.66 ) }
    dend_69 { pt3dadd( 33.603, 33.234, 9.53248, 0.66 ) }
    dend_69 { pt3dadd( 34.3151, 33.4536, 10.1465, 0.37 ) }
    dend_69 { pt3dadd( 35.1767, 33.6087, 10.7284, 0.52 ) }
    dend_69 { pt3dadd( 35.6688, 33.6467, 11.0122, 0.52 ) }
    dend_69 { pt3dadd( 36.5341, 33.6733, 11.4899, 0.66 ) }
    dend_69 { pt3dadd( 37.0223, 33.6686, 11.7536, 0.88 ) }
    dend_69 { pt3dadd( 37.6761, 33.6623, 12.0881, 0.88 ) }
    dend_69 { pt3dadd( 38.4264, 33.6909, 12.5066, 0.66 ) }
    dend_69 { pt3dadd( 39.3604, 33.7866, 13.0384, 0.29 ) }
    dend_69 { pt3dadd( 40.1783, 33.9247, 13.4888, 0.29 ) }
    dend_69 { pt3dadd( 41.4174, 34.2551, 14.1327, 0.88 ) }
    dend_69 { pt3dadd( 41.7605, 34.3637, 14.3061, 0.88 ) }
    dend_69 { pt3dadd( 43.138, 34.8527, 14.9688, 0.29 ) }
    dend_69 { pt3dadd( 44.206, 35.2716, 15.4415, 0.29 ) }
    dend_69 { pt3dadd( 45.2323, 35.7073, 15.8569, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 46.457, 36.2562, 16.3217, 0.29 ) }
    dend_69 { pt3dadd( 47.3484, 36.6617, 16.6542, 0.29 ) }
    dend_69 { pt3dadd( 48.1781, 37.0152, 16.9456, 0.81 ) }
    dend_69 { pt3dadd( 48.839, 37.2701, 17.1386, 0.81 ) }
    dend_69 { pt3dadd( 49.4264, 37.4851, 17.3072, 0.81 ) }
    dend_69 { pt3dadd( 50.3181, 37.7876, 17.5618, 0.59 ) }
    dend_69 { pt3dadd( 51.3563, 38.0949, 17.8677, 0.29 ) }
    dend_69 { pt3dadd( 52.269, 38.4036, 18.1437, 0.81 ) }
    dend_69 { pt3dadd( 53.1684, 38.713, 18.4239, 0.22 ) }
    dend_69 { pt3dadd( 53.9672, 38.9705, 18.6743, 0.22 ) }
    dend_69 { pt3dadd( 54.4763, 39.1096, 18.8269, 0.52 ) }
    dend_69 { pt3dadd( 55.1885, 39.2608, 18.9995, 0.22 ) }
    dend_69 { pt3dadd( 61.6743, 41.8087, 24.6925, 0.22 ) }
    dend_69 { pt3dadd( 67.478, 44.7013, 30.9376, 0.22 ) }
    dend_69 { pt3dadd( 74.5913, 45.8112, 36.3156, 0.22 ) }
    dend_69 { pt3dadd( 81.7201, 45.2415, 41.7769, 0.22 ) }
    dend_69 { pt3dadd( 88.7349, 45.8875, 47.3571, 0.22 ) }
    dend_69 { pt3dadd( 94.0951, 45.5949, 54.578, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 27.5187, 30.1102, -5.29551, 0.81 ) }
    dend_54 { pt3dadd( 28.8784, 30.3115, -4.69914, 0.81 ) }
    dend_54 { pt3dadd( 29.5279, 30.3243, -4.44757, 1.03 ) }
    dend_54 { pt3dadd( 31.2724, 30.2587, -3.94328, 0.96 ) }
    dend_54 { pt3dadd( 32.2336, 30.2281, -3.72057, 0.96 ) }
    dend_54 { pt3dadd( 33.3576, 30.243, -3.50309, 0.59 ) }
    dend_54 { pt3dadd( 34.1409, 30.2963, -3.37456, 0.66 ) }
    dend_54 { pt3dadd( 35.1949, 30.3722, -3.2377, 0.66 ) }
    dend_54 { pt3dadd( 36.4575, 30.5689, -3.16211, 0.59 ) }
    dend_54 { pt3dadd( 37.1253, 30.78, -3.20997, 0.81 ) }
    dend_54 { pt3dadd( 37.9699, 31.2036, -3.31081, 0.96 ) }
    dend_54 { pt3dadd( 38.7462, 31.6976, -3.42019, 1.25 ) }
    dend_54 { pt3dadd( 39.3066, 32.0709, -3.49339, 1.4 ) }
    dend_54 { pt3dadd( 40.0085, 32.527, -3.55239, 1.4 ) }
    dend_54 { pt3dadd( 41.1509, 33.1622, -3.57242, 0.59 ) }
    dend_54 { pt3dadd( 41.6163, 33.3356, -3.56051, 0.59 ) }
    dend_54 { pt3dadd( 42.5861, 33.4983, -3.4921, 0.59 ) }
    dend_54 { pt3dadd( 43.6468, 33.5086, -3.37729, 1.03 ) }
    dend_54 { pt3dadd( 44.4005, 33.4346, -3.27289, 1.18 ) }
    dend_54 { pt3dadd( 45.0537, 33.3164, -3.13852, 1.18 ) }
    dend_54 { pt3dadd( 46.104, 33.0636, -2.85224, 0.74 ) }
    dend_54 { pt3dadd( 47.1082, 32.8008, -2.50598, 0.66 ) }
    dend_54 { pt3dadd( 47.5833, 32.6802, -2.32061, 0.96 ) }
    dend_54 { pt3dadd( 48.2024, 32.5527, -2.07718, 0.96 ) }
    dend_54 { pt3dadd( 49.3134, 32.382, -1.65642, 1.03 ) }
    dend_54 { pt3dadd( 49.8377, 32.3382, -1.46339, 1.03 ) }
    dend_54 { pt3dadd( 51.2957, 32.3912, -0.971047, 0.59 ) }
    dend_54 { pt3dadd( 52.0874, 32.5131, -0.736751, 0.59 ) }
    dend_54 { pt3dadd( 53.5032, 32.8406, -0.381987, 0.59 ) }
    dend_54 { pt3dadd( 54.198, 33.0503, -0.243356, 0.81 ) }
    dend_54 { pt3dadd( 54.8498, 33.3056, -0.15771, 0.81 ) }
    dend_54 { pt3dadd( 56.1829, 33.9289, -0.0711114, 0.37 ) }
    dend_54 { pt3dadd( 57.0264, 34.3454, -0.072244, 0.66 ) }
    dend_54 { pt3dadd( 57.7759, 34.685, -0.0769486, 0.74 ) }
    dend_54 { pt3dadd( 58.2476, 34.8652, -0.0867059, 0.74 ) }
    dend_54 { pt3dadd( 59.1728, 35.1131, -0.113851, 0.74 ) }
    dend_54 { pt3dadd( 60.168, 35.2359, -0.143138, 0.52 ) }
    dend_54 { pt3dadd( 61.556, 35.2156, -0.177512, 0.74 ) }
    dend_54 { pt3dadd( 62.6002, 35.1346, -0.173821, 0.88 ) }
    dend_54 { pt3dadd( 63.1697, 35.0832, -0.139797, 0.96 ) }
    dend_54 { pt3dadd( 63.7322, 35.0425, -0.0712478, 1.18 ) }
    dend_54 { pt3dadd( 64.5818, 35.0162, 0.09126, 1.18 ) }
    dend_54 { pt3dadd( 65.2211, 35.0629, 0.271532, 0.66 ) }
    dend_54 { pt3dadd( 66.3397, 35.3652, 0.702925, 0.59 ) }
    dend_54 { pt3dadd( 67.0605, 35.7006, 1.11087, 0.59 ) }
    dend_54 { pt3dadd( 67.5315, 35.984, 1.43956, 0.74 ) }
    dend_54 { pt3dadd( 67.8951, 36.25, 1.73597, 0.74 ) }
    dend_54 { pt3dadd( 68.2499, 36.5424, 2.06158, 0.74 ) }
    dend_54 { pt3dadd( 68.9202, 37.1389, 2.74671, 0.59 ) }
    dend_54 { pt3dadd( 69.7999, 37.9752, 3.74198, 0.96 ) }
    dend_54 { pt3dadd( 70.2187, 38.3658, 4.22221, 1.25 ) }
    dend_54 { pt3dadd( 70.4446, 38.5716, 4.50232, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 81.5233, 50.7013, 71.8256, 0.29 ) }
    dend_52 { pt3dadd( 85.7919, 52.9998, 76.0579, 0.29 ) }
    dend_52 { pt3dadd( 90.4809, 55.6619, 79.5744, 0.29 ) }
    dend_52 { pt3dadd( 95.0574, 59.006, 82.6717, 0.29 ) }
    dend_52 { pt3dadd( 99.3371, 61.582, 86.7418, 0.29 ) }
    dend_52 { pt3dadd( 103.133, 64.8361, 90.8578, 0.29 ) }
    dend_52 { pt3dadd( 106.089, 68.1018, 95.6313, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 81.5233, 50.7013, 71.8256, 0.29 ) }
    dend_51 { pt3dadd( 88.5497, 54.2848, 77.4738, 0.29 ) }
    dend_51 { pt3dadd( 94.1681, 59.4523, 83.5819, 0.29 ) }
    dend_51 { pt3dadd( 98.5957, 65.0165, 90.3396, 0.29 ) }
    dend_51 { pt3dadd( 103.978, 68.9781, 97.4114, 0.29 ) }
    dend_51 { pt3dadd( 108.958, 73.4473, 104.509, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -24.3265, -8.83045, -25.5235, 0.74 ) }
    dend_46 { pt3dadd( -26.2586, -10.1904, -25.9269, 0.74 ) }
    dend_46 { pt3dadd( -27.2884, -10.7196, -26.1131, 0.74 ) }
    dend_46 { pt3dadd( -28.1543, -11.0523, -26.2862, 0.74 ) }
    dend_46 { pt3dadd( -29.5063, -11.3315, -26.7302, 0.66 ) }
    dend_46 { pt3dadd( -30.4794, -11.3916, -27.1611, 0.66 ) }
    dend_46 { pt3dadd( -31.5049, -11.3756, -27.6805, 0.59 ) }
    dend_46 { pt3dadd( -32.2052, -11.2224, -28.0525, 1.25 ) }
    dend_46 { pt3dadd( -32.7703, -11.0426, -28.3957, 1.25 ) }
    dend_46 { pt3dadd( -34.4895, -10.4655, -29.5337, 0.66 ) }
    dend_46 { pt3dadd( -35.3455, -10.2149, -30.1234, 0.66 ) }
    dend_46 { pt3dadd( -35.8112, -10.1556, -30.4496, 0.96 ) }
    dend_46 { pt3dadd( -36.5107, -10.224, -30.9246, 0.96 ) }
    dend_46 { pt3dadd( -37.003, -10.4177, -31.3669, 0.96 ) }
    dend_46 { pt3dadd( -37.7583, -11.0546, -32.4468, 0.74 ) }
    dend_46 { pt3dadd( -38.162, -11.597, -33.2765, 0.52 ) }
    dend_46 { pt3dadd( -38.5667, -12.2765, -34.3143, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -38.8277, -12.7782, -35.0829, 1.03 ) }
    dend_46 { pt3dadd( -39.7762, -14.8013, -38.2272, 1.25 ) }
    dend_46 { pt3dadd( -40.4173, -16.2348, -40.5113, 0.66 ) }
    dend_46 { pt3dadd( -40.7343, -16.9225, -41.6423, 0.66 ) }
    dend_46 { pt3dadd( -40.9341, -17.2688, -42.237, 1.11 ) }
    dend_46 { pt3dadd( -41.1179, -17.4732, -42.5939, 1.33 ) }
    dend_46 { pt3dadd( -41.3956, -17.6747, -42.896, 1.18 ) }
    dend_46 { pt3dadd( -41.8575, -17.9113, -43.0634, 1.18 ) }
    dend_46 { pt3dadd( -42.9255, -18.4247, -43.2997, 0.59 ) }
    dend_46 { pt3dadd( -44.0283, -19.0336, -43.5728, 0.52 ) }
    dend_46 { pt3dadd( -44.899, -19.6054, -43.8563, 0.52 ) }
    dend_46 { pt3dadd( -45.619, -20.1826, -44.2131, 0.81 ) }
    dend_46 { pt3dadd( -46.3221, -20.8781, -44.7295, 0.66 ) }
    dend_46 { pt3dadd( -46.98, -21.6136, -45.333, 0.66 ) }
    dend_46 { pt3dadd( -47.4534, -22.2033, -45.8624, 1.33 ) }
    dend_46 { pt3dadd( -47.7706, -22.6201, -46.2468, 1.33 ) }
    dend_46 { pt3dadd( -48.7597, -23.9285, -47.4685, 0.66 ) }
    dend_46 { pt3dadd( -49.6299, -25.041, -48.5077, 0.52 ) }
    dend_46 { pt3dadd( -50.0409, -25.5254, -48.9737, 0.52 ) }
    dend_46 { pt3dadd( -50.5776, -26.0613, -49.4418, 0.96 ) }
    dend_46 { pt3dadd( -50.9653, -26.3978, -49.683, 1.18 ) }
    dend_46 { pt3dadd( -51.2482, -26.6223, -49.7818, 1.18 ) }
    dend_46 { pt3dadd( -51.8494, -27.1006, -49.8269, 0.81 ) }
    dend_46 { pt3dadd( -52.6827, -27.8057, -49.7477, 0.74 ) }
    dend_46 { pt3dadd( -53.7265, -28.7674, -49.5421, 0.59 ) }
    dend_46 { pt3dadd( -54.2514, -29.2424, -49.3992, 0.74 ) }
    dend_46 { pt3dadd( -54.9521, -29.8435, -49.1725, 0.74 ) }
    dend_46 { pt3dadd( -55.702, -30.4191, -48.9195, 0.59 ) }
    dend_46 { pt3dadd( -56.4085, -30.9259, -48.6706, 0.44 ) }
    dend_46 { pt3dadd( -57.2005, -31.4856, -48.3826, 0.44 ) }
    dend_46 { pt3dadd( -57.9621, -32.0197, -48.1394, 0.44 ) }
    dend_46 { pt3dadd( -58.7689, -32.6434, -47.8868, 0.44 ) }
    dend_46 { pt3dadd( -60.1018, -33.7981, -47.4776, 0.44 ) }
    dend_46 { pt3dadd( -60.4377, -34.1499, -47.368, 0.96 ) }
    dend_46 { pt3dadd( -61.065, -35.0264, -47.1741, 1.18 ) }
    dend_46 { pt3dadd( -61.4782, -35.8316, -47.0541, 0.81 ) }
    dend_46 { pt3dadd( -61.9648, -37.197, -46.9767, 0.59 ) }
    dend_46 { pt3dadd( -62.1345, -37.8039, -47.0058, 0.74 ) }
    dend_46 { pt3dadd( -62.3968, -38.7901, -47.1168, 0.66 ) }
    dend_46 { pt3dadd( -62.7219, -39.7501, -47.269, 0.66 ) }
    dend_46 { pt3dadd( -63.0248, -40.4536, -47.4105, 0.81 ) }
    dend_46 { pt3dadd( -63.6874, -41.7308, -47.6778, 0.59 ) }
    dend_46 { pt3dadd( -64.3339, -42.8399, -47.8984, 0.52 ) }
    dend_46 { pt3dadd( -64.943, -43.9152, -48.0808, 0.81 ) }
    dend_46 { pt3dadd( -65.486, -44.9628, -48.2114, 1.4 ) }
    dend_46 { pt3dadd( -65.744, -45.5862, -48.2142, 1.69 ) }
    dend_46 { pt3dadd( -66.1206, -46.8069, -48.0759, 0.52 ) }
    dend_46 { pt3dadd( -66.3893, -47.8226, -47.9635, 0.44 ) }
    dend_46 { pt3dadd( -66.6245, -48.8731, -47.9819, 0.44 ) }
    dend_46 { pt3dadd( -66.794, -49.6312, -48.1418, 0.29 ) }
    dend_46 { pt3dadd( -67.1913, -51.0575, -48.6468, 1.4 ) }
    dend_46 { pt3dadd( -67.2906, -51.3424, -48.7705, 1.4 ) }
    dend_46 { pt3dadd( -68.3724, -53.8745, -50.1929, 0.52 ) }
    dend_46 { pt3dadd( -69.0682, -55.2712, -51.084, 0.52 ) }
    dend_46 { pt3dadd( -69.4636, -55.9918, -51.5698, 0.52 ) }
    dend_46 { pt3dadd( -70.0624, -57.0635, -52.2918, 0.74 ) }
    dend_46 { pt3dadd( -70.4574, -57.7806, -52.7558, 0.88 ) }
    dend_46 { pt3dadd( -71.2945, -59.4007, -53.6304, 0.44 ) }
    dend_46 { pt3dadd( -71.681, -60.2043, -53.9401, 0.59 ) }
    dend_46 { pt3dadd( -72.1345, -61.097, -54.2497, 0.59 ) }
    dend_46 { pt3dadd( -72.6467, -62.0003, -54.5995, 0.37 ) }
    dend_46 { pt3dadd( -72.9696, -62.5455, -54.8278, 0.59 ) }
    dend_46 { pt3dadd( -73.579, -63.5108, -55.227, 0.81 ) }
    dend_46 { pt3dadd( -74.1782, -64.3761, -55.5216, 1.18 ) }
    dend_46 { pt3dadd( -74.5686, -64.9058, -55.71, 1.18 ) }
    dend_46 { pt3dadd( -75.6415, -66.2197, -56.2648, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -24.3265, -8.83045, -25.5235, 0.81 ) }
    dend_45 { pt3dadd( -25.2115, -7.48338, -25.0028, 0.81 ) }
    dend_45 { pt3dadd( -25.5934, -7.02803, -24.7622, 0.81 ) }
    dend_45 { pt3dadd( -26.1447, -6.53507, -24.427, 0.81 ) }
    dend_45 { pt3dadd( -26.7009, -6.21161, -24.1357, 0.88 ) }
    dend_45 { pt3dadd( -27.3347, -6.03526, -23.8949, 0.66 ) }
    dend_45 { pt3dadd( -28.4776, -5.89634, -23.5764, 0.59 ) }
    dend_45 { pt3dadd( -29.2378, -6.03612, -23.4791, 0.59 ) }
    dend_45 { pt3dadd( -29.9158, -6.24365, -23.5536, 0.59 ) }
    dend_45 { pt3dadd( -30.8126, -6.59046, -23.8428, 0.74 ) }
    dend_45 { pt3dadd( -31.7842, -6.99019, -24.3696, 1.03 ) }
    dend_45 { pt3dadd( -32.1274, -7.12876, -24.5951, 1.62 ) }
    dend_45 { pt3dadd( -32.5997, -7.30038, -24.9367, 1.92 ) }
    dend_45 { pt3dadd( -34.1035, -7.79959, -25.9785, 0.88 ) }
    dend_45 { pt3dadd( -34.6843, -7.97547, -26.3641, 0.66 ) }
    dend_45 { pt3dadd( -35.534, -8.23496, -26.9011, 0.66 ) }
    dend_45 { pt3dadd( -36.675, -8.59256, -27.583, 0.66 ) }
    dend_45 { pt3dadd( -37.1827, -8.74353, -27.8672, 0.66 ) }
    dend_45 { pt3dadd( -38.2935, -9.0262, -28.4009, 0.66 ) }
    dend_45 { pt3dadd( -39.0066, -9.16795, -28.6864, 0.44 ) }
    dend_45 { pt3dadd( -39.9224, -9.28214, -29.0513, 0.44 ) }
    dend_45 { pt3dadd( -40.6062, -9.31471, -29.3379, 0.44 ) }
    dend_45 { pt3dadd( -41.4324, -9.28247, -29.7411, 0.66 ) }
    dend_45 { pt3dadd( -42.0172, -9.23171, -30.0438, 0.66 ) }
    dend_45 { pt3dadd( -42.7184, -9.1289, -30.3936, 0.66 ) }
    dend_45 { pt3dadd( -43.3249, -9.02181, -30.6467, 0.66 ) }
    dend_45 { pt3dadd( -44.0221, -8.86015, -30.8736, 0.44 ) }
    dend_45 { pt3dadd( -44.5112, -8.72592, -31.0113, 0.74 ) }
    dend_45 { pt3dadd( -45.2409, -8.51286, -31.1936, 0.74 ) }
    dend_45 { pt3dadd( -45.8916, -8.31776, -31.3501, 0.74 ) }
    dend_45 { pt3dadd( -46.444, -8.15533, -31.472, 0.74 ) }
    dend_45 { pt3dadd( -47.0735, -7.97857, -31.6016, 0.37 ) }
    dend_45 { pt3dadd( -47.9896, -7.80763, -31.8517, 0.37 ) }
    dend_45 { pt3dadd( -48.3704, -7.80602, -32.007, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -48.7575, -7.8844, -32.24, 0.88 ) }
    dend_45 { pt3dadd( -49.2604, -8.05346, -32.5943, 1.18 ) }
    dend_45 { pt3dadd( -49.6685, -8.20812, -32.9256, 1.33 ) }
    dend_45 { pt3dadd( -50.709, -8.61899, -33.8506, 0.44 ) }
    dend_45 { pt3dadd( -51.4678, -8.87254, -34.56, 0.44 ) }
    dend_45 { pt3dadd( -52.0956, -8.99035, -35.1793, 0.44 ) }
    dend_45 { pt3dadd( -52.688, -8.98373, -35.7532, 0.88 ) }
    dend_45 { pt3dadd( -53.3568, -8.82017, -36.3413, 1.03 ) }
    dend_45 { pt3dadd( -53.6448, -8.67902, -36.5462, 1.03 ) }
    dend_45 { pt3dadd( -54.4189, -8.13961, -36.8899, 0.44 ) }
    dend_45 { pt3dadd( -54.8885, -7.78899, -37.0481, 0.44 ) }
    dend_45 { pt3dadd( -55.4274, -7.43478, -37.1727, 0.44 ) }
    dend_45 { pt3dadd( -55.8552, -7.21926, -37.2741, 0.59 ) }
    dend_45 { pt3dadd( -56.5348, -6.99264, -37.4277, 0.59 ) }
    dend_45 { pt3dadd( -57.2029, -6.88231, -37.6109, 0.74 ) }
    dend_45 { pt3dadd( -58.3768, -6.90672, -37.9913, 0.37 ) }
    dend_45 { pt3dadd( -59.0914, -7.02643, -38.2832, 0.37 ) }
    dend_45 { pt3dadd( -60.1188, -7.34032, -38.7926, 0.59 ) }
    dend_45 { pt3dadd( -60.5111, -7.50909, -39.0251, 0.88 ) }
    dend_45 { pt3dadd( -61.2489, -7.9196, -39.5576, 0.66 ) }
    dend_45 { pt3dadd( -61.7373, -8.234, -39.9504, 0.74 ) }
    dend_45 { pt3dadd( -62.2489, -8.60435, -40.3792, 0.59 ) }
    dend_45 { pt3dadd( -62.687, -8.9339, -40.7759, 0.52 ) }
    dend_45 { pt3dadd( -63.0979, -9.2393, -41.1462, 0.88 ) }
    dend_45 { pt3dadd( -63.8717, -9.73221, -41.8251, 0.59 ) }
    dend_45 { pt3dadd( -64.3363, -9.9678, -42.2103, 0.44 ) }
    dend_45 { pt3dadd( -64.8661, -10.1728, -42.6273, 1.03 ) }
    dend_45 { pt3dadd( -65.2456, -10.2814, -42.9037, 1.33 ) }
    dend_45 { pt3dadd( -65.4854, -10.3301, -43.0593, 1.4 ) }
    dend_45 { pt3dadd( -66.5067, -10.4987, -43.6408, 0.44 ) }
    dend_45 { pt3dadd( -66.9206, -10.5642, -43.8586, 0.44 ) }
    dend_45 { pt3dadd( -67.5334, -10.6552, -44.1542, 0.44 ) }
    dend_45 { pt3dadd( -68.1813, -10.7414, -44.4334, 0.44 ) }
    dend_45 { pt3dadd( -69.2333, -10.8747, -44.8788, 0.59 ) }
    dend_45 { pt3dadd( -69.9657, -10.9496, -45.2373, 0.88 ) }
    dend_45 { pt3dadd( -70.6501, -10.9652, -45.6512, 1.11 ) }
    dend_45 { pt3dadd( -71.546, -10.9279, -46.2637, 0.52 ) }
    dend_45 { pt3dadd( -72.1994, -10.8517, -46.7393, 0.52 ) }
    dend_45 { pt3dadd( -72.7504, -10.7581, -47.1533, 1.03 ) }
    dend_45 { pt3dadd( -73.9854, -10.5081, -48.1349, 1.25 ) }
    dend_45 { pt3dadd( -75.4372, -10.2596, -49.3104, 0.52 ) }
    dend_45 { pt3dadd( -75.9313, -10.1947, -49.7105, 0.59 ) }
    dend_45 { pt3dadd( -76.5847, -10.1428, -50.2242, 0.59 ) }
    dend_45 { pt3dadd( -77.6065, -10.0994, -50.9344, 0.44 ) }
    dend_45 { pt3dadd( -78.3017, -10.095, -51.3255, 0.44 ) }
    dend_45 { pt3dadd( -79.3228, -10.0861, -51.7699, 0.44 ) }
    dend_45 { pt3dadd( -79.8727, -10.0574, -51.9856, 0.44 ) }
    dend_45 { pt3dadd( -80.6516, -9.90488, -52.3613, 0.66 ) }
    dend_45 { pt3dadd( -81.2243, -9.6916, -52.6934, 0.88 ) }
    dend_45 { pt3dadd( -81.5397, -9.51377, -52.8885, 0.88 ) }
    dend_45 { pt3dadd( -82.4736, -8.84367, -53.4661, 0.52 ) }
    dend_45 { pt3dadd( -83.0589, -8.34071, -53.8288, 0.52 ) }
    dend_45 { pt3dadd( -83.8968, -7.51615, -54.4056, 0.81 ) }
    dend_45 { pt3dadd( -84.4911, -6.85706, -54.838, 0.44 ) }
    dend_45 { pt3dadd( -84.8351, -6.44119, -55.1052, 0.44 ) }
    dend_45 { pt3dadd( -85.2322, -5.8912, -55.4318, 0.74 ) }
    dend_45 { pt3dadd( -85.4826, -5.4743, -55.6394, 0.96 ) }
    dend_45 { pt3dadd( -85.9968, -4.40191, -56.0361, 0.66 ) }
    dend_45 { pt3dadd( -86.2906, -3.729, -56.2646, 0.44 ) }
    dend_45 { pt3dadd( -86.6259, -2.99087, -56.5447, 0.44 ) }
    dend_45 { pt3dadd( -87.0049, -2.29054, -56.8718, 0.44 ) }
    dend_45 { pt3dadd( -87.1765, -2.05496, -57.0105, 0.44 ) }
    dend_45 { pt3dadd( -87.6942, -1.60263, -57.3513, 0.96 ) }
    dend_45 { pt3dadd( -88.7551, -1.2162, -57.88, 0.66 ) }
    dend_45 { pt3dadd( -89.4317, -1.10342, -58.1863, 0.96 ) }
    dend_45 { pt3dadd( -89.7509, -1.07863, -58.3057, 1.25 ) }
    dend_45 { pt3dadd( -90.124, -1.0646, -58.43, 1.25 ) }
    dend_45 { pt3dadd( -90.7181, -1.03068, -58.6122, 1.25 ) }
    dend_45 { pt3dadd( -91.7617, -0.879963, -58.9005, 0.37 ) }
    dend_45 { pt3dadd( -92.4095, -0.673376, -59.0183, 0.37 ) }
    dend_45 { pt3dadd( -92.8518, -0.465514, -59.1035, 0.66 ) }
    dend_45 { pt3dadd( -93.1937, -0.290603, -59.1606, 0.81 ) }
    dend_45 { pt3dadd( -93.7259, -0.0190835, -59.223, 0.81 ) }
    dend_45 { pt3dadd( -94.543, 0.380697, -59.2495, 0.44 ) }
    dend_45 { pt3dadd( -95.0923, 0.608042, -59.2117, 0.44 ) }
    dend_45 { pt3dadd( -96.0747, 0.919907, -59.0919, 0.44 ) }
    dend_45 { pt3dadd( -97.1509, 1.21327, -58.9141, 0.44 ) }
    dend_45 { pt3dadd( -97.9641, 1.4217, -58.7447, 0.66 ) }
    dend_45 { pt3dadd( -98.8058, 1.62379, -58.5333, 0.96 ) }
    dend_45 { pt3dadd( -99.6489, 1.80651, -58.2712, 0.59 ) }
    dend_45 { pt3dadd( -100.365, 1.96907, -58.0206, 0.44 ) }
    dend_45 { pt3dadd( -101.104, 2.14397, -57.7534, 0.44 ) }
    dend_45 { pt3dadd( -101.827, 2.32293, -57.533, 0.44 ) }
    dend_45 { pt3dadd( -102.458, 2.45566, -57.4199, 0.44 ) }
    dend_45 { pt3dadd( -103.186, 2.55169, -57.4104, 0.74 ) }
    dend_45 { pt3dadd( -103.546, 2.57305, -57.4588, 0.74 ) }
    dend_45 { pt3dadd( -104.566, 2.55615, -57.6769, 0.52 ) }
    dend_45 { pt3dadd( -105.029, 2.53134, -57.8057, 0.59 ) }
    dend_45 { pt3dadd( -105.889, 2.47827, -58.0788, 0.44 ) }
    dend_45 { pt3dadd( -106.539, 2.46625, -58.2865, 0.44 ) }
    dend_45 { pt3dadd( -107.369, 2.53244, -58.5607, 0.37 ) }
    dend_45 { pt3dadd( -108.214, 2.6715, -58.8117, 0.52 ) }
    dend_45 { pt3dadd( -108.895, 2.846, -58.9945, 1.11 ) }
    dend_45 { pt3dadd( -109.437, 3.02924, -59.1543, 1.25 ) }
    dend_45 { pt3dadd( -110.089, 3.29407, -59.3842, 0.37 ) }
    dend_45 { pt3dadd( -111.032, 3.7079, -59.792, 0.37 ) }
    dend_45 { pt3dadd( -111.673, 3.98131, -60.1235, 0.29 ) }
    dend_45 { pt3dadd( -112.182, 4.19237, -60.4373, 0.29 ) }
    dend_45 { pt3dadd( -113.101, 4.57296, -61.0517, 0.59 ) }
    dend_45 { pt3dadd( -113.833, 4.89588, -61.559, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -114.251, 5.09052, -61.8451, 0.29 ) }
    dend_45 { pt3dadd( -114.581, 5.25537, -62.0397, 0.37 ) }
    dend_45 { pt3dadd( -115.11, 5.55375, -62.3021, 0.37 ) }
    dend_45 { pt3dadd( -115.835, 5.9789, -62.5538, 0.44 ) }
    dend_45 { pt3dadd( -116.438, 6.33349, -62.6607, 0.44 ) }
    dend_45 { pt3dadd( -117.007, 6.65608, -62.7008, 0.44 ) }
    dend_45 { pt3dadd( -117.684, 7.00102, -62.7346, 0.37 ) }
    dend_45 { pt3dadd( -117.954, 7.11469, -62.7459, 0.37 ) }
    dend_45 { pt3dadd( -118.627, 7.32134, -62.7625, 0.88 ) }
    dend_45 { pt3dadd( -119.011, 7.40369, -62.7714, 1.11 ) }
    dend_45 { pt3dadd( -119.693, 7.52572, -62.7895, 1.11 ) }
    dend_45 { pt3dadd( -120.769, 7.73628, -62.8039, 0.37 ) }
    dend_45 { pt3dadd( -121.61, 7.93558, -62.7969, 0.37 ) }
    dend_45 { pt3dadd( -122.1, 8.0888, -62.7738, 0.66 ) }
    dend_45 { pt3dadd( -122.858, 8.44417, -62.7259, 0.66 ) }
    dend_45 { pt3dadd( -123.475, 8.83837, -62.6809, 0.37 ) }
    dend_45 { pt3dadd( -124.017, 9.28975, -62.6404, 0.52 ) }
    dend_45 { pt3dadd( -124.224, 9.49875, -62.6252, 0.66 ) }
    dend_45 { pt3dadd( -124.536, 9.84618, -62.598, 0.66 ) }
    dend_45 { pt3dadd( -125.384, 10.8063, -62.5113, 0.37 ) }
    dend_45 { pt3dadd( -125.773, 11.2091, -62.4501, 0.37 ) }
    dend_45 { pt3dadd( -126.174, 11.5108, -62.3477, 0.37 ) }
    dend_45 { pt3dadd( -126.573, 11.7076, -62.2082, 0.88 ) }
    dend_45 { pt3dadd( -127.195, 11.909, -61.9569, 0.81 ) }
    dend_45 { pt3dadd( -127.495, 11.971, -61.8275, 0.81 ) }
    dend_45 { pt3dadd( -128.238, 12.0739, -61.4875, 0.29 ) }
    dend_45 { pt3dadd( -129.21, 12.1886, -61.0394, 0.29 ) }
    dend_45 { pt3dadd( -129.813, 12.2774, -60.7086, 0.52 ) }
    dend_45 { pt3dadd( -130.549, 12.425, -60.2811, 0.44 ) }
    dend_45 { pt3dadd( -130.91, 12.5105, -60.0676, 0.44 ) }
    dend_45 { pt3dadd( -131.387, 12.6406, -59.7619, 0.81 ) }
    dend_45 { pt3dadd( -131.954, 12.8397, -59.3682, 0.81 ) }
    dend_45 { pt3dadd( -133.029, 13.33, -58.5505, 0.29 ) }
    dend_45 { pt3dadd( -133.462, 13.5501, -58.2062, 0.44 ) }
    dend_45 { pt3dadd( -133.867, 13.7593, -57.8572, 0.29 ) }
    dend_45 { pt3dadd( -134.315, 13.9755, -57.4831, 0.29 ) }
    dend_45 { pt3dadd( -134.905, 14.2364, -57.0285, 0.29 ) }
    dend_45 { pt3dadd( -135.361, 14.4226, -56.7174, 0.29 ) }
    dend_45 { pt3dadd( -135.901, 14.618, -56.3939, 0.59 ) }
    dend_45 { pt3dadd( -136.936, 14.9705, -55.7644, 0.22 ) }
    dend_45 { pt3dadd( -137.601, 15.1902, -55.3628, 0.22 ) }
    dend_45 { pt3dadd( -137.952, 15.2857, -55.1536, 0.52 ) }
    dend_45 { pt3dadd( -138.271, 15.341, -54.9614, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -86.2369, -53.1345, 82.0154, 0.29 ) }
    dend_43 { pt3dadd( -94.0117, -58.4111, 89.1119, 0.29 ) }
    dend_43 { pt3dadd( -100.792, -65.8479, 95.4096, 0.29 ) }
    dend_43 { pt3dadd( -107.125, -73.39, 102.03, 0.29 ) }
    dend_43 { pt3dadd( -113.116, -81.6819, 108.131, 0.29 ) }
    dend_43 { pt3dadd( -117.7, -91.0266, 114.009, 0.29 ) }
    dend_43 { pt3dadd( -123.21, -99.9071, 119.788, 0.29 ) }
    dend_43 { pt3dadd( -128.762, -108.785, 125.533, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -86.2369, -53.1345, 82.0154, 0.29 ) }
    dend_42 { pt3dadd( -93.8242, -57.6249, 88.6297, 0.29 ) }
    dend_42 { pt3dadd( -101.299, -63.4919, 94.3285, 0.29 ) }
    dend_42 { pt3dadd( -107.977, -69.9773, 100.4, 0.29 ) }
    dend_42 { pt3dadd( -113.679, -76.7727, 107.128, 0.29 ) }
    dend_42 { pt3dadd( -118.838, -84.2649, 113.62, 0.29 ) }
    dend_42 { pt3dadd( -122.862, -92.9358, 119.564, 0.29 ) }
    dend_42 { pt3dadd( -127.729, -100.596, 126.104, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.1093, -67.3918, 17.9456, 0.66 ) }
    dend_34 { pt3dadd( -11.1874, -70.3618, 16.8909, 0.66 ) }
    dend_34 { pt3dadd( -11.4616, -71.1508, 16.6385, 1.03 ) }
    dend_34 { pt3dadd( -11.7317, -71.9783, 16.4703, 1.03 ) }
    dend_34 { pt3dadd( -12.2199, -73.5632, 16.2907, 1.03 ) }
    dend_34 { pt3dadd( -12.5456, -74.767, 16.2352, 1.03 ) }
    dend_34 { pt3dadd( -12.887, -76.241, 16.2488, 0.81 ) }
    dend_34 { pt3dadd( -13.0987, -77.5669, 16.4769, 0.81 ) }
    dend_34 { pt3dadd( -13.2216, -79.5203, 16.9538, 1.4 ) }
    dend_34 { pt3dadd( -13.2075, -80.3606, 17.2104, 1.62 ) }
    dend_34 { pt3dadd( -13.0887, -81.619, 17.6961, 1.4 ) }
    dend_34 { pt3dadd( -12.9513, -82.4506, 18.04, 1.92 ) }
    dend_34 { pt3dadd( -12.6922, -83.5817, 18.5158, 1.4 ) }
    dend_34 { pt3dadd( -12.2057, -85.2961, 19.2415, 1.69 ) }
    dend_34 { pt3dadd( -11.8468, -86.4419, 19.6701, 1.11 ) }
    dend_34 { pt3dadd( -11.3688, -87.979, 20.2074, 0.81 ) }
    dend_34 { pt3dadd( -11.159, -88.7047, 20.4416, 1.11 ) }
    dend_34 { pt3dadd( -10.9392, -89.5709, 20.6923, 1.25 ) }
    dend_34 { pt3dadd( -10.544, -91.4993, 21.1975, 0.96 ) }
    dend_34 { pt3dadd( -10.4241, -92.4752, 21.4165, 0.74 ) }
    dend_34 { pt3dadd( -10.4, -93.4084, 21.5914, 0.81 ) }
    dend_34 { pt3dadd( -10.5673, -94.8245, 21.7763, 0.52 ) }
    dend_34 { pt3dadd( -10.8182, -95.8365, 21.8531, 0.88 ) }
    dend_34 { pt3dadd( -11.1289, -96.6898, 21.8359, 0.88 ) }
    dend_34 { pt3dadd( -11.5585, -97.6263, 21.6837, 0.88 ) }
    dend_34 { pt3dadd( -11.9592, -98.4572, 21.4752, 0.66 ) }
    dend_34 { pt3dadd( -12.3537, -99.3494, 21.1491, 0.66 ) }
    dend_34 { pt3dadd( -12.807, -100.609, 20.4878, 0.88 ) }
    dend_34 { pt3dadd( -13.0415, -101.452, 19.9485, 1.33 ) }
    dend_34 { pt3dadd( -13.1745, -102.099, 19.5074, 1.47 ) }
    dend_34 { pt3dadd( -13.276, -102.709, 19.0912, 1.62 ) }
    dend_34 { pt3dadd( -13.4777, -103.955, 18.2976, 0.74 ) }
    dend_34 { pt3dadd( -13.719, -105.37, 17.5623, 0.74 ) }
    dend_34 { pt3dadd( -13.9587, -106.472, 17.16, 0.74 ) }
    dend_34 { pt3dadd( -14.1803, -107.35, 16.9893, 0.74 ) }
    dend_34 { pt3dadd( -14.4923, -108.563, 16.9271, 0.66 ) }
    dend_34 { pt3dadd( -14.7735, -109.827, 17.0328, 0.66 ) }
    dend_34 { pt3dadd( -15.0781, -111.657, 17.4149, 0.96 ) }
    dend_34 { pt3dadd( -15.1599, -112.602, 17.6883, 0.88 ) }
    dend_34 { pt3dadd( -15.1523, -113.452, 17.9515, 0.88 ) }
    dend_34 { pt3dadd( -14.9927, -115.042, 18.4221, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -14.727, -116.507, 18.8283, 1.18 ) }
    dend_34 { pt3dadd( -14.5767, -117.224, 18.9814, 1.62 ) }
    dend_34 { pt3dadd( -14.4208, -118.032, 19.0917, 1.62 ) }
    dend_34 { pt3dadd( -14.2415, -119.173, 19.2195, 0.96 ) }
    dend_34 { pt3dadd( -14.1453, -120.056, 19.3066, 0.96 ) }
    dend_34 { pt3dadd( -14.0908, -121.39, 19.4225, 0.66 ) }
    dend_34 { pt3dadd( -14.1893, -123.14, 19.5412, 0.52 ) }
    dend_34 { pt3dadd( -14.3916, -124.709, 19.6791, 0.59 ) }
    dend_34 { pt3dadd( -14.7637, -126.513, 19.8754, 0.74 ) }
    dend_34 { pt3dadd( -14.8979, -126.981, 19.9409, 1.11 ) }
    dend_34 { pt3dadd( -15.2396, -127.875, 20.129, 1.25 ) }
    dend_34 { pt3dadd( -15.9487, -129.305, 20.5356, 0.88 ) }
    dend_34 { pt3dadd( -16.4069, -130.015, 20.8184, 0.66 ) }
    dend_34 { pt3dadd( -16.8995, -130.642, 21.1214, 0.66 ) }
    dend_34 { pt3dadd( -17.3875, -131.195, 21.401, 0.59 ) }
    dend_34 { pt3dadd( -18.3604, -132.31, 21.9114, 0.59 ) }
    dend_34 { pt3dadd( -18.9088, -132.951, 22.158, 0.44 ) }
    dend_34 { pt3dadd( -19.5698, -133.784, 22.3864, 0.44 ) }
    dend_34 { pt3dadd( -20.122, -134.559, 22.5015, 0.74 ) }
    dend_34 { pt3dadd( -20.571, -135.279, 22.5499, 0.74 ) }
    dend_34 { pt3dadd( -20.9603, -135.967, 22.5497, 0.66 ) }
    dend_34 { pt3dadd( -21.4676, -136.972, 22.4732, 1.03 ) }
    dend_34 { pt3dadd( -21.8491, -137.772, 22.415, 1.4 ) }
    dend_34 { pt3dadd( -22.2588, -138.671, 22.3559, 1.4 ) }
    dend_34 { pt3dadd( -22.6182, -139.452, 22.3119, 1.47 ) }
    dend_34 { pt3dadd( -23.1875, -140.686, 22.2634, 0.74 ) }
    dend_34 { pt3dadd( -23.6295, -141.647, 22.2168, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.1093, -67.3918, 17.9456, 0.44 ) }
    dend_33 { pt3dadd( -9.4416, -68.0188, 18.5101, 0.44 ) }
    dend_33 { pt3dadd( -9.05323, -68.5612, 18.9015, 0.44 ) }
    dend_33 { pt3dadd( -8.79062, -69.2638, 19.281, 0.37 ) }
    dend_33 { pt3dadd( -8.52172, -70.635, 19.8376, 0.59 ) }
    dend_33 { pt3dadd( -8.48824, -71.1699, 20.0035, 0.52 ) }
    dend_33 { pt3dadd( -8.51063, -71.8575, 20.1824, 0.44 ) }
    dend_33 { pt3dadd( -8.72798, -72.9643, 20.4589, 0.44 ) }
    dend_33 { pt3dadd( -9.0374, -73.8954, 20.7152, 0.44 ) }
    dend_33 { pt3dadd( -9.30172, -74.4597, 20.9078, 0.59 ) }
    dend_33 { pt3dadd( -9.70559, -75.1057, 21.2315, 0.59 ) }
    dend_33 { pt3dadd( -10.1385, -75.6532, 21.736, 0.37 ) }
    dend_33 { pt3dadd( -10.7097, -76.2627, 22.6015, 0.59 ) }
    dend_33 { pt3dadd( -11.2013, -76.7378, 23.4939, 0.88 ) }
    dend_33 { pt3dadd( -11.51, -77.0048, 24.0833, 0.81 ) }
    dend_33 { pt3dadd( -12.1376, -77.5149, 25.2731, 1.03 ) }
    dend_33 { pt3dadd( -12.774, -78.0252, 26.4479, 0.88 ) }
    dend_33 { pt3dadd( -13.3596, -78.5133, 27.4236, 0.44 ) }
    dend_33 { pt3dadd( -13.8485, -78.986, 28.1193, 0.44 ) }
    dend_33 { pt3dadd( -14.1722, -79.3566, 28.508, 0.66 ) }
    dend_33 { pt3dadd( -14.6305, -79.903, 28.9165, 0.66 ) }
    dend_33 { pt3dadd( -15.0578, -80.388, 29.1392, 0.66 ) }
    dend_33 { pt3dadd( -15.696, -81.0702, 29.3129, 0.66 ) }
    dend_33 { pt3dadd( -16.2537, -81.655, 29.4205, 1.33 ) }
    dend_33 { pt3dadd( -16.5034, -81.9307, 29.4504, 1.47 ) }
    dend_33 { pt3dadd( -16.989, -82.4765, 29.5004, 1.03 ) }
    dend_33 { pt3dadd( -17.5973, -83.1785, 29.5681, 0.81 ) }
    dend_33 { pt3dadd( -18.1103, -83.7715, 29.6379, 0.74 ) }
    dend_33 { pt3dadd( -18.7209, -84.4831, 29.7439, 0.52 ) }
    dend_33 { pt3dadd( -19.1499, -85.0095, 29.8354, 0.44 ) }
    dend_33 { pt3dadd( -21.8668, -91.3921, 34.3669, 0.44 ) }
    dend_33 { pt3dadd( -23.6383, -98.3046, 38.6549, 0.44 ) }
    dend_33 { pt3dadd( -26.115, -105.164, 42.6618, 0.44 ) }
    dend_33 { pt3dadd( -30.2717, -111.512, 45.9847, 0.44 ) }
    dend_33 { pt3dadd( -34.3619, -116.884, 50.6706, 0.44 ) }
    dend_33 { pt3dadd( -37.6698, -122.336, 55.864, 0.44 ) }
    dend_33 { pt3dadd( -41.1795, -127.983, 60.724, 0.44 ) }
    dend_33 { pt3dadd( -46.1792, -133.168, 64.6601, 0.44 ) }
    dend_33 { pt3dadd( -52.5063, -137.615, 67.287, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.66205, -20.9487, -3.5854, 1.47 ) }
    dend_17 { pt3dadd( 4.13884, -22.603, -4.18427, 1.47 ) }
    dend_17 { pt3dadd( 3.57784, -24.7458, -4.76756, 1.33 ) }
    dend_17 { pt3dadd( 3.18723, -26.4625, -5.09789, 1.55 ) }
    dend_17 { pt3dadd( 2.90641, -27.8628, -5.24723, 1.55 ) }
    dend_17 { pt3dadd( 2.62751, -29.324, -5.23025, 1.77 ) }
    dend_17 { pt3dadd( 2.25891, -31.2037, -5.0232, 1.77 ) }
    dend_17 { pt3dadd( 2.04016, -32.3709, -4.74031, 2.14 ) }
    dend_17 { pt3dadd( 1.84095, -33.3496, -4.40514, 2.58 ) }
    dend_17 { pt3dadd( 1.56668, -34.6024, -3.94716, 2.36 ) }
    dend_17 { pt3dadd( 1.04045, -36.8964, -3.21705, 1.77 ) }
    dend_17 { pt3dadd( 0.5856, -38.8673, -2.78454, 1.47 ) }
    dend_17 { pt3dadd( 0.242414, -40.513, -2.62582, 1.18 ) }
    dend_17 { pt3dadd( -0.0625561, -42.2565, -2.62311, 1.11 ) }
    dend_17 { pt3dadd( -0.267551, -43.803, -2.76452, 1.33 ) }
    dend_17 { pt3dadd( -0.433721, -45.9072, -3.15993, 1.25 ) }
    dend_17 { pt3dadd( -0.451349, -47.7461, -3.64371, 1.47 ) }
    dend_17 { pt3dadd( -0.370311, -49.3949, -4.11145, 1.62 ) }
    dend_17 { pt3dadd( -0.268314, -50.6336, -4.45995, 2.14 ) }
    dend_17 { pt3dadd( -0.205193, -51.489, -4.68577, 2.58 ) }
    dend_17 { pt3dadd( -0.171806, -52.7188, -4.97383, 2.43 ) }
    dend_17 { pt3dadd( -0.242283, -54.6975, -5.38611, 2.14 ) }
    dend_17 { pt3dadd( -0.407215, -56.2927, -5.70864, 1.92 ) }
    dend_17 { pt3dadd( -0.693082, -57.8714, -6.02804, 1.47 ) }
    dend_17 { pt3dadd( -1.20281, -59.8162, -6.44341, 1.25 ) }
    dend_17 { pt3dadd( -1.74629, -61.4185, -6.75486, 1.11 ) }
    dend_17 { pt3dadd( -2.24775, -62.6162, -6.95012, 1.4 ) }
    dend_17 { pt3dadd( -2.6154, -63.3857, -7.05644, 1.55 ) }
    dend_17 { pt3dadd( -3.20102, -64.5629, -7.17091, 1.18 ) }
    dend_17 { pt3dadd( -3.76902, -65.77, -7.20829, 0.88 ) }
    dend_17 { pt3dadd( -4.28242, -67.0431, -7.23209, 1.18 ) }
    dend_17 { pt3dadd( -4.6902, -68.2923, -7.2453, 1.03 ) }
    dend_17 { pt3dadd( -5.03011, -69.4704, -7.2432, 1.03 ) }
    dend_17 { pt3dadd( -5.4529, -71.2195, -7.24534, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -5.64826, -72.3323, -7.25829, 1.77 ) }
    dend_17 { pt3dadd( -5.84287, -74.0844, -7.32891, 1.77 ) }
    dend_17 { pt3dadd( -5.93397, -75.4303, -7.47456, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.66205, -20.9487, -3.5854, 1.77 ) }
    dend_1 { pt3dadd( 5.03596, -22.701, -3.98229, 1.77 ) }
    dend_1 { pt3dadd( 5.20317, -23.5781, -4.16762, 1.99 ) }
    dend_1 { pt3dadd( 5.39543, -24.5866, -4.38072, 1.99 ) }
    dend_1 { pt3dadd( 5.65777, -25.9627, -4.67149, 3.17 ) }
    dend_1 { pt3dadd( 5.77594, -26.5826, -4.80247, 3.76 ) }
    dend_1 { pt3dadd( 5.97814, -27.6433, -5.02659, 4.2 ) }
    dend_1 { pt3dadd( 6.09033, -28.5817, -5.18607, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.88 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.88 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -44.5518, 99.9277, -27.1183, 0.29 ) }
    dend_85 { pt3dadd( -44.7356, 100.906, -27.3359, 0.29 ) }
    dend_85 { pt3dadd( -45.0207, 102.329, -27.9638, 0.29 ) }
    dend_85 { pt3dadd( -45.2256, 103.589, -28.6163, 0.29 ) }
    dend_85 { pt3dadd( -45.3884, 104.928, -29.3921, 0.29 ) }
    dend_85 { pt3dadd( -45.4818, 105.881, -29.9956, 0.29 ) }
    dend_85 { pt3dadd( -45.6128, 107.444, -30.9973, 0.29 ) }
    dend_85 { pt3dadd( -45.8168, 110.218, -32.9711, 0.29 ) }
    dend_85 { pt3dadd( -45.8786, 111.066, -33.6139, 0.37 ) }
    dend_85 { pt3dadd( -45.9718, 112.085, -34.4116, 0.37 ) }
    dend_85 { pt3dadd( -46.1245, 113.338, -35.4234, 0.37 ) }
    dend_85 { pt3dadd( -46.2481, 114.367, -36.264, 0.22 ) }
    dend_85 { pt3dadd( -46.3811, 115.445, -37.112, 0.22 ) }
    dend_85 { pt3dadd( -46.5771, 116.646, -37.8621, 1.03 ) }
    dend_85 { pt3dadd( -46.6384, 116.864, -37.9916, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -44.5518, 99.9277, -27.1183, 0.52 ) }
    dend_80 { pt3dadd( -46.2093, 101.519, -26.5556, 0.52 ) }
    dend_80 { pt3dadd( -46.9695, 102.367, -26.2428, 0.52 ) }
    dend_80 { pt3dadd( -47.7236, 103.357, -25.9101, 0.44 ) }
    dend_80 { pt3dadd( -48.055, 103.867, -25.76, 0.59 ) }
    dend_80 { pt3dadd( -48.4032, 104.489, -25.5953, 0.59 ) }
    dend_80 { pt3dadd( -49.0366, 105.685, -25.2726, 0.37 ) }
    dend_80 { pt3dadd( -49.7624, 107.248, -24.9483, 0.37 ) }
    dend_80 { pt3dadd( -50.1943, 108.26, -24.722, 0.37 ) }
    dend_80 { pt3dadd( -50.6327, 109.279, -24.484, 0.37 ) }
    dend_80 { pt3dadd( -51.1242, 110.393, -24.1962, 0.29 ) }
    dend_80 { pt3dadd( -51.5885, 111.388, -23.9222, 0.29 ) }
    dend_80 { pt3dadd( -52.1374, 112.427, -23.6193, 0.81 ) }
    dend_80 { pt3dadd( -52.4032, 112.84, -23.4999, 0.81 ) }
    dend_80 { pt3dadd( -52.8685, 113.458, -23.3136, 0.74 ) }
    dend_80 { pt3dadd( -53.5223, 114.237, -23.1266, 0.74 ) }
    dend_80 { pt3dadd( -54.1089, 114.848, -23.0669, 0.96 ) }
    dend_80 { pt3dadd( -54.7141, 115.422, -23.1145, 0.96 ) }
    dend_80 { pt3dadd( -55.1218, 115.808, -23.2118, 0.59 ) }
    dend_80 { pt3dadd( -55.9096, 116.623, -23.5298, 0.29 ) }
    dend_80 { pt3dadd( -56.6279, 117.469, -23.968, 0.29 ) }
    dend_80 { pt3dadd( -57.3931, 118.472, -24.5563, 0.29 ) }
    dend_80 { pt3dadd( -57.925, 119.232, -24.9959, 0.22 ) }
    dend_80 { pt3dadd( -58.7168, 120.419, -25.6705, 0.22 ) }
    dend_80 { pt3dadd( -59.3326, 121.395, -26.2087, 0.74 ) }
    dend_80 { pt3dadd( -60.0267, 122.556, -26.7766, 0.37 ) }
    dend_80 { pt3dadd( -60.5795, 123.574, -27.1768, 0.37 ) }
    dend_80 { pt3dadd( -61.0815, 124.58, -27.5145, 0.81 ) }
    dend_80 { pt3dadd( -61.442, 125.259, -27.7461, 1.18 ) }
    dend_80 { pt3dadd( -61.7967, 125.788, -27.9316, 1.18 ) }
    dend_80 { pt3dadd( -62.7247, 126.91, -28.3867, 0.29 ) }
    dend_80 { pt3dadd( -63.7163, 128.022, -28.8505, 0.29 ) }
    dend_80 { pt3dadd( -64.3509, 128.688, -29.1681, 0.29 ) }
    dend_80 { pt3dadd( -65.0019, 129.325, -29.5181, 0.29 ) }
    dend_80 { pt3dadd( -65.9734, 130.194, -30.0309, 0.74 ) }
    dend_80 { pt3dadd( -66.6843, 130.702, -30.3967, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 94.0951, 45.5949, 54.578, 0.29 ) }
    dend_71 { pt3dadd( 103.685, 47.4223, 62.5087, 0.29 ) }
    dend_71 { pt3dadd( 112.988, 48.8807, 70.8433, 0.29 ) }
    dend_71 { pt3dadd( 122.554, 51.8629, 78.4651, 0.29 ) }
    dend_71 { pt3dadd( 131.107, 56.3074, 86.6164, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 94.0951, 45.5949, 54.578, 0.29 ) }
    dend_70 { pt3dadd( 101.272, 46.7434, 60.2446, 0.29 ) }
    dend_70 { pt3dadd( 108.335, 49.5354, 65.4991, 0.29 ) }
    dend_70 { pt3dadd( 116.224, 52.6225, 69.1871, 0.29 ) }
    dend_70 { pt3dadd( 123.043, 56.9352, 73.767, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 70.4446, 38.5716, 4.50232, 0.44 ) }
    dend_58 { pt3dadd( 71.499, 38.5332, 4.32133, 0.44 ) }
    dend_58 { pt3dadd( 71.9028, 38.5712, 4.18887, 0.37 ) }
    dend_58 { pt3dadd( 72.6268, 38.7095, 3.904, 0.59 ) }
    dend_58 { pt3dadd( 73.0212, 38.8039, 3.74081, 0.74 ) }
    dend_58 { pt3dadd( 74.03, 39.0802, 3.33201, 0.37 ) }
    dend_58 { pt3dadd( 75.0652, 39.3955, 2.93073, 0.29 ) }
    dend_58 { pt3dadd( 75.6827, 39.6565, 2.65462, 0.29 ) }
    dend_58 { pt3dadd( 76.1203, 39.8821, 2.47167, 0.88 ) }
    dend_58 { pt3dadd( 76.2805, 39.9795, 2.40384, 1.11 ) }
    dend_58 { pt3dadd( 76.6729, 40.239, 2.25557, 1.11 ) }
    dend_58 { pt3dadd( 77.0291, 40.4862, 2.18619, 1.18 ) }
    dend_58 { pt3dadd( 77.6665, 40.8574, 2.19135, 0.74 ) }
    dend_58 { pt3dadd( 78.096, 41.1, 2.21838, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 70.4446, 38.5716, 4.50232, 0.29 ) }
    dend_55 { pt3dadd( 71.1831, 39.482, 4.90188, 0.29 ) }
    dend_55 { pt3dadd( 71.5277, 39.913, 5.10686, 0.29 ) }
    dend_55 { pt3dadd( 71.9692, 40.4651, 5.36942, 0.66 ) }
    dend_55 { pt3dadd( 72.4457, 41.0611, 5.65286, 0.29 ) }
    dend_55 { pt3dadd( 72.8026, 41.5073, 5.86508, 0.29 ) }
    dend_55 { pt3dadd( 73.5177, 42.4016, 6.29042, 0.29 ) }
    dend_55 { pt3dadd( 73.9206, 42.877, 6.58623, 0.29 ) }
    dend_55 { pt3dadd( 80.2005, 50.0443, 9.27078, 0.29 ) }
    dend_55 { pt3dadd( 85.3747, 57.8146, 12.6703, 0.29 ) }
    dend_55 { pt3dadd( 89.4113, 66.6635, 15.0908, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 94.39, 74.8197, 17.9235, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -75.6415, -66.2197, -56.2648, 0.81 ) }
    dend_48 { pt3dadd( -76.1189, -67.2411, -57.6045, 0.81 ) }
    dend_48 { pt3dadd( -76.2047, -67.3722, -57.7751, 0.81 ) }
    dend_48 { pt3dadd( -77.3026, -68.7356, -59.4308, 0.37 ) }
    dend_48 { pt3dadd( -77.6248, -69.1032, -59.8254, 0.52 ) }
    dend_48 { pt3dadd( -77.934, -69.4556, -60.1869, 0.66 ) }
    dend_48 { pt3dadd( -78.2877, -69.8765, -60.6017, 0.66 ) }
    dend_48 { pt3dadd( -79.0685, -70.7261, -61.3675, 0.37 ) }
    dend_48 { pt3dadd( -79.5652, -71.2513, -61.8607, 0.37 ) }
    dend_48 { pt3dadd( -80.3336, -72.0343, -62.5943, 0.37 ) }
    dend_48 { pt3dadd( -80.8075, -72.5116, -63.065, 0.66 ) }
    dend_48 { pt3dadd( -81.5666, -73.2654, -63.8055, 1.11 ) }
    dend_48 { pt3dadd( -81.9234, -73.6103, -64.1277, 1.25 ) }
    dend_48 { pt3dadd( -83.1341, -74.6715, -65.2383, 0.22 ) }
    dend_48 { pt3dadd( -83.6393, -75.0448, -65.6879, 0.29 ) }
    dend_48 { pt3dadd( -84.0808, -75.3152, -66.06, 0.59 ) }
    dend_48 { pt3dadd( -84.5808, -75.5914, -66.4463, 0.81 ) }
    dend_48 { pt3dadd( -85.1111, -75.8893, -66.8647, 0.81 ) }
    dend_48 { pt3dadd( -86.4729, -76.8038, -67.9534, 0.37 ) }
    dend_48 { pt3dadd( -86.8684, -77.1266, -68.2647, 0.37 ) }
    dend_48 { pt3dadd( -87.5092, -77.8023, -68.8376, 0.59 ) }
    dend_48 { pt3dadd( -87.742, -78.1057, -69.0606, 0.81 ) }
    dend_48 { pt3dadd( -88.5557, -79.3799, -69.8493, 0.44 ) }
    dend_48 { pt3dadd( -89.0929, -80.3696, -70.3369, 0.44 ) }
    dend_48 { pt3dadd( -89.5083, -81.2282, -70.666, 0.37 ) }
    dend_48 { pt3dadd( -90.0034, -82.3049, -71.0468, 0.37 ) }
    dend_48 { pt3dadd( -90.3727, -83.0967, -71.3244, 0.66 ) }
    dend_48 { pt3dadd( -90.6772, -83.6805, -71.5465, 0.81 ) }
    dend_48 { pt3dadd( -90.9791, -84.2207, -71.736, 0.81 ) }
    dend_48 { pt3dadd( -91.5499, -85.1711, -72.085, 0.29 ) }
    dend_48 { pt3dadd( -91.8838, -85.694, -72.2644, 0.96 ) }
    dend_48 { pt3dadd( -92.6944, -86.9259, -72.6121, 0.29 ) }
    dend_48 { pt3dadd( -93.2075, -87.7318, -72.8086, 0.29 ) }
    dend_48 { pt3dadd( -93.7117, -88.5411, -72.9567, 0.44 ) }
    dend_48 { pt3dadd( -93.9982, -88.9898, -73.027, 0.44 ) }
    dend_48 { pt3dadd( -94.4604, -89.7112, -73.0991, 0.29 ) }
    dend_48 { pt3dadd( -94.7162, -90.1125, -73.1596, 0.59 ) }
    dend_48 { pt3dadd( -95.1053, -90.7738, -73.2701, 0.59 ) }
    dend_48 { pt3dadd( -95.4679, -91.4358, -73.4191, 0.52 ) }
    dend_48 { pt3dadd( -96.0557, -92.4267, -73.7012, 0.37 ) }
    dend_48 { pt3dadd( -96.4368, -93.0432, -73.9038, 0.88 ) }
    dend_48 { pt3dadd( -97.1549, -94.1895, -74.3126, 0.44 ) }
    dend_48 { pt3dadd( -97.5545, -94.8491, -74.5459, 0.59 ) }
    dend_48 { pt3dadd( -97.8797, -95.3929, -74.7316, 0.59 ) }
    dend_48 { pt3dadd( -98.2654, -96.0548, -74.9249, 0.59 ) }
    dend_48 { pt3dadd( -98.6589, -96.7334, -75.0653, 0.37 ) }
    dend_48 { pt3dadd( -98.9734, -97.219, -75.1223, 0.37 ) }
    dend_48 { pt3dadd( -99.4912, -97.926, -75.1136, 0.29 ) }
    dend_48 { pt3dadd( -99.6866, -98.1702, -75.0829, 0.29 ) }
    dend_48 { pt3dadd( -100.181, -98.7851, -74.9455, 0.88 ) }
    dend_48 { pt3dadd( -100.509, -99.2088, -74.8154, 1.18 ) }
    dend_48 { pt3dadd( -101.063, -99.8664, -74.5644, 0.29 ) }
    dend_48 { pt3dadd( -101.476, -100.316, -74.3795, 0.29 ) }
    dend_48 { pt3dadd( -102.1, -100.984, -74.1529, 0.29 ) }
    dend_48 { pt3dadd( -102.386, -101.304, -74.0684, 0.88 ) }
    dend_48 { pt3dadd( -102.665, -101.632, -74.0109, 0.88 ) }
    dend_48 { pt3dadd( -103.593, -102.728, -73.9333, 0.22 ) }
    dend_48 { pt3dadd( -103.912, -103.104, -73.9526, 0.22 ) }
    dend_48 { pt3dadd( -104.625, -103.903, -74.0478, 0.59 ) }
    dend_48 { pt3dadd( -104.786, -104.077, -74.0808, 0.59 ) }
    dend_48 { pt3dadd( -105.437, -104.77, -74.2284, 0.22 ) }
    dend_48 { pt3dadd( -105.812, -105.173, -74.3261, 0.44 ) }
    dend_48 { pt3dadd( -106.336, -105.791, -74.5014, 0.22 ) }
    dend_48 { pt3dadd( -107.056, -106.635, -74.7313, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -75.6415, -66.2197, -56.2648, 0.29 ) }
    dend_47 { pt3dadd( -76.9292, -66.2376, -56.2228, 0.29 ) }
    dend_47 { pt3dadd( -77.7291, -66.2935, -56.1591, 0.29 ) }
    dend_47 { pt3dadd( -78.5166, -66.3837, -56.1014, 0.66 ) }
    dend_47 { pt3dadd( -78.8943, -66.4491, -56.0761, 0.66 ) }
    dend_47 { pt3dadd( -80.2277, -66.7243, -55.9755, 0.29 ) }
    dend_47 { pt3dadd( -80.8037, -66.8548, -55.9366, 0.29 ) }
    dend_47 { pt3dadd( -81.233, -66.9763, -55.8671, 0.66 ) }
    dend_47 { pt3dadd( -81.6425, -67.1113, -55.7927, 0.66 ) }
    dend_47 { pt3dadd( -83.0466, -67.6063, -55.5329, 0.29 ) }
    dend_47 { pt3dadd( -83.5431, -67.763, -55.4518, 0.52 ) }
    dend_47 { pt3dadd( -84.017, -67.8861, -55.3918, 0.52 ) }
    dend_47 { pt3dadd( -85.32, -68.1208, -55.2269, 0.22 ) }
    dend_47 { pt3dadd( -85.923, -68.1883, -55.1488, 0.59 ) }
    dend_47 { pt3dadd( -86.3089, -68.2098, -55.0857, 0.74 ) }
    dend_47 { pt3dadd( -87.0556, -68.2064, -54.9624, 0.29 ) }
    dend_47 { pt3dadd( -87.4314, -68.1896, -54.9062, 0.29 ) }
    dend_47 { pt3dadd( -87.921, -68.1432, -54.8382, 0.96 ) }
    dend_47 { pt3dadd( -88.3963, -68.0582, -54.8151, 0.96 ) }
    dend_47 { pt3dadd( -89.6929, -67.8034, -54.7123, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -23.6295, -141.647, 22.2168, 0.29 ) }
    dend_40 { pt3dadd( -23.4628, -141.648, 22.9641, 0.29 ) }
    dend_40 { pt3dadd( -23.049, -141.701, 24.5847, 0.29 ) }
    dend_40 { pt3dadd( -22.7558, -141.787, 25.7398, 0.59 ) }
    dend_40 { pt3dadd( -22.3799, -142.02, 27.3471, 0.66 ) }
    dend_40 { pt3dadd( -21.8458, -142.531, 29.591, 0.59 ) }
    dend_40 { pt3dadd( -21.4715, -143.049, 31.0526, 0.29 ) }
    dend_40 { pt3dadd( -21.1871, -143.563, 31.9043, 0.52 ) }
    dend_40 { pt3dadd( -21.0121, -144.184, 32.2062, 0.66 ) }
    dend_40 { pt3dadd( -20.746, -145.57, 32.2953, 0.37 ) }
    dend_40 { pt3dadd( -20.4211, -147.356, 32.1846, 0.29 ) }
    dend_40 { pt3dadd( -20.1765, -148.774, 32.0006, 0.29 ) }
    dend_40 { pt3dadd( -19.9515, -150.183, 31.7501, 0.29 ) }
    dend_40 { pt3dadd( -19.7302, -151.463, 31.5045, 0.29 ) }
    dend_40 { pt3dadd( -19.4015, -152.975, 31.2078, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -19.0582, -154.266, 30.9578, 0.29 ) }
    dend_40 { pt3dadd( -15.227, -162.385, 37.8531, 0.29 ) }
    dend_40 { pt3dadd( -12.0397, -169.023, 46.3323, 0.29 ) }
    dend_40 { pt3dadd( -6.56148, -175.979, 53.2672, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.6295, -141.647, 22.2168, 0.74 ) }
    dend_35 { pt3dadd( -24.1435, -142.301, 21.9676, 0.74 ) }
    dend_35 { pt3dadd( -24.5925, -142.977, 21.7514, 0.52 ) }
    dend_35 { pt3dadd( -24.9341, -143.552, 21.5946, 0.52 ) }
    dend_35 { pt3dadd( -25.4692, -144.603, 21.3618, 0.59 ) }
    dend_35 { pt3dadd( -25.6852, -145.139, 21.2936, 0.96 ) }
    dend_35 { pt3dadd( -25.8502, -145.721, 21.2441, 1.18 ) }
    dend_35 { pt3dadd( -25.9045, -146.218, 21.1795, 1.18 ) }
    dend_35 { pt3dadd( -25.884, -146.688, 21.1198, 0.96 ) }
    dend_35 { pt3dadd( -25.7639, -147.378, 20.9931, 0.66 ) }
    dend_35 { pt3dadd( -25.4743, -148.357, 20.6608, 0.52 ) }
    dend_35 { pt3dadd( -25.1478, -149.233, 20.3033, 0.52 ) }
    dend_35 { pt3dadd( -24.727, -150.16, 19.8399, 0.29 ) }
    dend_35 { pt3dadd( -24.5367, -150.508, 19.6259, 0.37 ) }
    dend_35 { pt3dadd( -24.0103, -151.313, 18.985, 0.29 ) }
    dend_35 { pt3dadd( -23.4363, -152.037, 18.1634, 0.29 ) }
    dend_35 { pt3dadd( -23.6896, -159.846, 16.5641, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -5.93397, -75.4303, -7.47456, 0.37 ) }
    dend_31 { pt3dadd( -9.08234, -76.6917, -7.75491, 0.37 ) }
    dend_31 { pt3dadd( -10.6452, -77.359, -7.42363, 0.37 ) }
    dend_31 { pt3dadd( -11.8212, -77.8825, -7.04014, 0.37 ) }
    dend_31 { pt3dadd( -12.6219, -78.2486, -6.76643, 0.37 ) }
    dend_31 { pt3dadd( -13.6371, -78.7237, -6.38535, 0.59 ) }
    dend_31 { pt3dadd( -14.6228, -79.1983, -6.00724, 0.74 ) }
    dend_31 { pt3dadd( -15.4009, -79.5652, -5.5846, 0.52 ) }
    dend_31 { pt3dadd( -15.9897, -79.8482, -5.2599, 0.59 ) }
    dend_31 { pt3dadd( -16.511, -80.1512, -5.00414, 0.74 ) }
    dend_31 { pt3dadd( -17.3939, -80.6736, -4.66358, 0.52 ) }
    dend_31 { pt3dadd( -17.9399, -80.9876, -4.51173, 0.52 ) }
    dend_31 { pt3dadd( -18.4449, -81.2555, -4.41744, 0.74 ) }
    dend_31 { pt3dadd( -19.0079, -81.5374, -4.33539, 0.74 ) }
    dend_31 { pt3dadd( -19.5442, -81.8146, -4.2674, 0.52 ) }
    dend_31 { pt3dadd( -20.3199, -82.2119, -4.17911, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.93397, -75.4303, -7.47456, 0.88 ) }
    dend_18 { pt3dadd( -6.2048, -76.7107, -7.63063, 0.88 ) }
    dend_18 { pt3dadd( -6.73126, -78.3218, -7.71125, 0.66 ) }
    dend_18 { pt3dadd( -7.28861, -79.4607, -7.52586, 0.74 ) }
    dend_18 { pt3dadd( -7.76787, -80.2186, -7.32406, 0.88 ) }
    dend_18 { pt3dadd( -8.59966, -81.3645, -6.99192, 0.88 ) }
    dend_18 { pt3dadd( -9.12712, -82.0566, -6.79769, 1.03 ) }
    dend_18 { pt3dadd( -9.77394, -82.8131, -6.53436, 1.03 ) }
    dend_18 { pt3dadd( -11.2515, -84.5773, -5.89209, 1.03 ) }
    dend_18 { pt3dadd( -12.0932, -85.6871, -5.52482, 1.03 ) }
    dend_18 { pt3dadd( -12.787, -86.8087, -5.22174, 0.88 ) }
    dend_18 { pt3dadd( -13.1796, -87.7722, -5.04595, 0.88 ) }
    dend_18 { pt3dadd( -13.3276, -88.6748, -4.92527, 0.88 ) }
    dend_18 { pt3dadd( -13.1771, -90.4321, -4.82385, 1.25 ) }
    dend_18 { pt3dadd( -13.0174, -91.0732, -4.80373, 1.55 ) }
    dend_18 { pt3dadd( -12.6974, -91.9798, -4.72139, 1.55 ) }
    dend_18 { pt3dadd( -12.1734, -93.2448, -4.47234, 1.55 ) }
    dend_18 { pt3dadd( -11.8087, -94.0385, -4.21373, 1.55 ) }
    dend_18 { pt3dadd( -11.1191, -95.4229, -3.56349, 1.03 ) }
    dend_18 { pt3dadd( -10.5693, -96.4224, -2.91036, 1.03 ) }
    dend_18 { pt3dadd( -10.1041, -97.2148, -2.29311, 0.81 ) }
    dend_18 { pt3dadd( -9.35301, -98.4002, -1.20497, 0.81 ) }
    dend_18 { pt3dadd( -8.81672, -99.1825, -0.404096, 1.03 ) }
    dend_18 { pt3dadd( -8.27905, -99.8685, 0.341056, 1.03 ) }
    dend_18 { pt3dadd( -7.6433, -100.582, 1.12428, 1.03 ) }
    dend_18 { pt3dadd( -7.0979, -101.164, 1.68017, 0.88 ) }
    dend_18 { pt3dadd( -6.24011, -102.114, 2.42994, 0.88 ) }
    dend_18 { pt3dadd( -5.79968, -102.62, 2.74897, 0.96 ) }
    dend_18 { pt3dadd( -5.2879, -103.27, 3.08016, 0.96 ) }
    dend_18 { pt3dadd( -4.59005, -104.254, 3.49549, 1.33 ) }
    dend_18 { pt3dadd( -4.21813, -104.841, 3.68853, 1.62 ) }
    dend_18 { pt3dadd( -3.91051, -105.373, 3.84591, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.09033, -28.5817, -5.18607, 0.66 ) }
    dend_16 { pt3dadd( 5.24047, -32.9203, -2.40248, 0.66 ) }
    dend_16 { pt3dadd( 4.90861, -34.3303, -1.64799, 0.88 ) }
    dend_16 { pt3dadd( 4.30783, -37.1157, -0.375997, 1.03 ) }
    dend_16 { pt3dadd( 4.0757, -38.4416, 0.178049, 1.03 ) }
    dend_16 { pt3dadd( 3.92087, -39.6106, 0.655769, 1.03 ) }
    dend_16 { pt3dadd( 3.79403, -41.0559, 1.25612, 0.37 ) }
    dend_16 { pt3dadd( 3.70699, -42.6025, 1.7453, 0.37 ) }
    dend_16 { pt3dadd( 3.82978, -44.1539, 2.26816, 0.59 ) }
    dend_16 { pt3dadd( 4.31524, -45.5017, 2.81097, 0.81 ) }
    dend_16 { pt3dadd( 4.77462, -46.2763, 3.25054, 0.81 ) }
    dend_16 { pt3dadd( 5.31232, -46.9716, 3.79634, 0.52 ) }
    dend_16 { pt3dadd( 5.81078, -47.5426, 4.34806, 0.81 ) }
    dend_16 { pt3dadd( 6.52661, -48.3697, 5.21541, 1.25 ) }
    dend_16 { pt3dadd( 6.78731, -48.7781, 5.60288, 1.69 ) }
    dend_16 { pt3dadd( 7.03752, -49.4892, 6.1346, 1.69 ) }
    dend_16 { pt3dadd( 7.1513, -51.1672, 6.96262, 0.96 ) }
    dend_16 { pt3dadd( 7.05266, -52.2425, 7.2947, 0.66 ) }
    dend_16 { pt3dadd( 6.9217, -53.0765, 7.48527, 0.81 ) }
    dend_16 { pt3dadd( 6.61603, -54.8215, 7.84981, 0.44 ) }
    dend_16 { pt3dadd( 6.42917, -56.2121, 8.18205, 0.44 ) }
    dend_16 { pt3dadd( 6.35485, -57.3136, 8.48964, 0.44 ) }
    dend_16 { pt3dadd( 6.39232, -58.3167, 8.91781, 0.88 ) }
    dend_16 { pt3dadd( 6.60131, -59.6496, 9.83624, 1.25 ) }
    dend_16 { pt3dadd( 6.93603, -60.9138, 10.9808, 0.66 ) }
    dend_16 { pt3dadd( 7.28798, -61.8845, 11.9908, 0.52 ) }
    dend_16 { pt3dadd( 7.51411, -62.4533, 12.5935, 0.52 ) }
    dend_16 { pt3dadd( 8.05003, -63.9171, 14.0748, 0.74 ) }
    dend_16 { pt3dadd( 8.48103, -65.2143, 15.2507, 1.25 ) }
    dend_16 { pt3dadd( 8.65886, -65.7661, 15.6664, 1.25 ) }
    dend_16 { pt3dadd( 8.96826, -66.7091, 16.2391, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 9.39422, -67.921, 16.794, 0.44 ) }
    dend_16 { pt3dadd( 10.0112, -69.5178, 17.3366, 0.37 ) }
    dend_16 { pt3dadd( 10.4343, -70.4554, 17.5483, 0.37 ) }
    dend_16 { pt3dadd( 10.9144, -71.395, 17.7084, 0.96 ) }
    dend_16 { pt3dadd( 11.2979, -72.094, 17.8206, 1.33 ) }
    dend_16 { pt3dadd( 12.4737, -74.0, 18.1518, 0.29 ) }
    dend_16 { pt3dadd( 12.918, -74.6179, 18.2755, 0.29 ) }
    dend_16 { pt3dadd( 13.3802, -75.1762, 18.395, 0.29 ) }
    dend_16 { pt3dadd( 13.5522, -75.3835, 18.4412, 0.44 ) }
    dend_16 { pt3dadd( 16.5676, -86.8455, 23.1988, 0.44 ) }
    dend_16 { pt3dadd( 21.5204, -97.772, 27.4466, 0.44 ) }
    dend_16 { pt3dadd( 25.7609, -109.538, 30.1876, 0.44 ) }
    dend_16 { pt3dadd( 30.352, -120.93, 33.6759, 0.44 ) }
    dend_16 { pt3dadd( 34.1377, -132.426, 37.7656, 0.44 ) }
    dend_16 { pt3dadd( 37.8903, -144.281, 40.846, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.09033, -28.5817, -5.18607, 1.03 ) }
    dend_11 { pt3dadd( 6.05186, -30.5599, -5.55789, 1.03 ) }
    dend_11 { pt3dadd( 6.20178, -32.5354, -5.86582, 1.03 ) }
    dend_11 { pt3dadd( 6.45439, -33.9711, -6.04561, 0.96 ) }
    dend_11 { pt3dadd( 6.79432, -35.3316, -6.18553, 0.96 ) }
    dend_11 { pt3dadd( 7.21843, -36.6507, -6.29261, 0.96 ) }
    dend_11 { pt3dadd( 7.56053, -37.5431, -6.3142, 1.18 ) }
    dend_11 { pt3dadd( 8.27537, -38.7617, -6.15649, 1.47 ) }
    dend_11 { pt3dadd( 9.01024, -39.7392, -5.88278, 2.21 ) }
    dend_11 { pt3dadd( 9.31981, -40.1248, -5.72933, 2.21 ) }
    dend_11 { pt3dadd( 9.78295, -40.7562, -5.42015, 1.99 ) }
    dend_11 { pt3dadd( 10.5469, -42.0081, -4.75543, 1.33 ) }
    dend_11 { pt3dadd( 11.1818, -43.4037, -4.04146, 0.88 ) }
    dend_11 { pt3dadd( 11.5224, -44.5308, -3.50471, 0.74 ) }
    dend_11 { pt3dadd( 11.6756, -45.5957, -3.08112, 0.74 ) }
    dend_11 { pt3dadd( 11.7096, -46.8715, -2.67852, 1.33 ) }
    dend_11 { pt3dadd( 11.6688, -47.6455, -2.4974, 1.62 ) }
    dend_11 { pt3dadd( 11.5864, -48.4895, -2.36771, 1.92 ) }
    dend_11 { pt3dadd( 11.4976, -49.3909, -2.29985, 1.69 ) }
    dend_11 { pt3dadd( 11.4267, -51.1035, -2.25441, 1.33 ) }
    dend_11 { pt3dadd( 11.4958, -52.8348, -2.27066, 1.03 ) }
    dend_11 { pt3dadd( 11.6504, -54.0232, -2.31485, 0.88 ) }
    dend_11 { pt3dadd( 11.9009, -55.1198, -2.36599, 1.03 ) }
    dend_11 { pt3dadd( 12.348, -56.5505, -2.44474, 1.03 ) }
    dend_11 { pt3dadd( 12.909, -57.9816, -2.54715, 1.03 ) }
    dend_11 { pt3dadd( 13.4548, -59.1942, -2.68, 1.33 ) }
    dend_11 { pt3dadd( 13.8678, -60.1029, -2.83653, 1.69 ) }
    dend_11 { pt3dadd( 14.3202, -61.2031, -3.09546, 1.47 ) }
    dend_11 { pt3dadd( 14.5803, -61.9711, -3.32958, 1.03 ) }
    dend_11 { pt3dadd( 14.8738, -63.1379, -3.75221, 0.96 ) }
    dend_11 { pt3dadd( 15.0622, -64.1982, -4.20188, 0.96 ) }
    dend_11 { pt3dadd( 15.2101, -65.4941, -4.79524, 1.4 ) }
    dend_11 { pt3dadd( 15.3074, -66.8688, -5.42971, 1.4 ) }
    dend_11 { pt3dadd( 15.3823, -68.0697, -5.97631, 1.55 ) }
    dend_11 { pt3dadd( 15.4461, -68.7247, -6.24475, 1.77 ) }
    dend_11 { pt3dadd( 15.6281, -69.9881, -6.68307, 0.96 ) }
    dend_11 { pt3dadd( 15.8696, -71.1287, -6.97454, 0.66 ) }
    dend_11 { pt3dadd( 16.1909, -72.2095, -7.09658, 0.66 ) }
    dend_11 { pt3dadd( 16.6311, -73.2583, -7.06273, 0.96 ) }
    dend_11 { pt3dadd( 17.2076, -74.3011, -6.90573, 1.11 ) }
    dend_11 { pt3dadd( 17.5211, -74.7579, -6.80273, 1.4 ) }
    dend_11 { pt3dadd( 17.8123, -75.1204, -6.7059, 1.4 ) }
    dend_11 { pt3dadd( 18.4254, -75.874, -6.50527, 1.4 ) }
    dend_11 { pt3dadd( 19.1512, -76.8537, -6.29861, 0.66 ) }
    dend_11 { pt3dadd( 19.4739, -77.3754, -6.24668, 0.52 ) }
    dend_11 { pt3dadd( 19.8393, -78.1147, -6.24275, 0.52 ) }
    dend_11 { pt3dadd( 20.3047, -79.3221, -6.26735, 0.81 ) }
    dend_11 { pt3dadd( 20.6984, -80.6722, -6.26936, 1.03 ) }
    dend_11 { pt3dadd( 20.881, -81.5618, -6.2785, 1.03 ) }
    dend_11 { pt3dadd( 21.0279, -82.761, -6.27812, 1.03 ) }
    dend_11 { pt3dadd( 21.1209, -83.9504, -6.34047, 1.03 ) }
    dend_11 { pt3dadd( 21.1834, -85.1834, -6.45495, 0.88 ) }
    dend_11 { pt3dadd( 21.2718, -86.6836, -6.69524, 1.03 ) }
    dend_11 { pt3dadd( 21.3919, -88.0173, -6.98429, 0.52 ) }
    dend_11 { pt3dadd( 21.566, -89.275, -7.33948, 0.52 ) }
    dend_11 { pt3dadd( 21.8967, -91.0986, -8.02163, 0.88 ) }
    dend_11 { pt3dadd( 22.06, -91.8392, -8.36638, 1.11 ) }
    dend_11 { pt3dadd( 22.3393, -93.0072, -8.99454, 0.59 ) }
    dend_11 { pt3dadd( 22.4545, -93.5021, -9.26035, 0.59 ) }
    dend_11 { pt3dadd( 22.6601, -94.6216, -9.71948, 0.52 ) }
    dend_11 { pt3dadd( 22.7616, -95.8249, -9.99649, 0.52 ) }
    dend_11 { pt3dadd( 22.6784, -96.8121, -9.97779, 1.11 ) }
    dend_11 { pt3dadd( 22.4858, -97.6493, -9.84701, 1.25 ) }
    dend_11 { pt3dadd( 22.057, -98.9179, -9.5166, 1.18 ) }
    dend_11 { pt3dadd( 21.5794, -100.159, -9.12777, 0.52 ) }
    dend_11 { pt3dadd( 21.2316, -101.025, -8.79558, 0.52 ) }
    dend_11 { pt3dadd( 20.8103, -102.213, -8.34423, 0.52 ) }
    dend_11 { pt3dadd( 20.6832, -102.66, -8.20881, 0.81 ) }
    dend_11 { pt3dadd( 20.5231, -103.477, -8.05523, 0.74 ) }
    dend_11 { pt3dadd( 20.3783, -104.523, -8.00306, 0.74 ) }
    dend_11 { pt3dadd( 20.246, -105.554, -8.05384, 1.03 ) }
    dend_11 { pt3dadd( 20.0384, -106.912, -8.23885, 0.66 ) }
    dend_11 { pt3dadd( 19.8544, -107.801, -8.41816, 0.52 ) }
    dend_11 { pt3dadd( 19.548, -108.82, -8.69212, 1.11 ) }
    dend_11 { pt3dadd( 19.2266, -109.663, -9.02305, 1.11 ) }
    dend_11 { pt3dadd( 18.7213, -110.848, -9.60577, 0.81 ) }
    dend_11 { pt3dadd( 18.1897, -112.078, -10.3139, 0.66 ) }
    dend_11 { pt3dadd( 17.8341, -112.938, -10.8355, 0.88 ) }
    dend_11 { pt3dadd( 17.4333, -114.111, -11.5872, 0.66 ) }
    dend_11 { pt3dadd( 17.0247, -115.655, -12.7053, 0.59 ) }
    dend_11 { pt3dadd( 16.8398, -116.664, -13.5074, 0.88 ) }
    dend_11 { pt3dadd( 16.7355, -117.546, -14.2481, 1.18 ) }
    dend_11 { pt3dadd( 16.6754, -118.185, -14.7877, 0.96 ) }
    dend_11 { pt3dadd( 16.6074, -119.03, -15.5014, 0.96 ) }
    dend_11 { pt3dadd( 16.4721, -120.577, -16.7146, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 16.4084, -121.089, -17.0741, 0.81 ) }
    dend_11 { pt3dadd( 16.2701, -122.095, -17.7164, 0.66 ) }
    dend_11 { pt3dadd( 16.1502, -122.869, -18.0893, 0.66 ) }
    dend_11 { pt3dadd( 15.9928, -123.838, -18.3803, 0.96 ) }
    dend_11 { pt3dadd( 15.7807, -125.052, -18.3566, 0.88 ) }
    dend_11 { pt3dadd( 15.6066, -126.13, -18.1071, 0.88 ) }
    dend_11 { pt3dadd( 15.4555, -127.073, -17.8296, 0.37 ) }
    dend_11 { pt3dadd( 15.2108, -128.802, -17.2619, 1.03 ) }
    dend_11 { pt3dadd( 15.0829, -129.711, -16.9837, 1.03 ) }
    dend_11 { pt3dadd( 14.7375, -131.717, -16.4365, 0.44 ) }
    dend_11 { pt3dadd( 14.491, -133.164, -16.1922, 0.44 ) }
    dend_11 { pt3dadd( 14.3988, -133.998, -16.2228, 0.74 ) }
    dend_11 { pt3dadd( 14.4125, -134.847, -16.5028, 0.74 ) }
    dend_11 { pt3dadd( 14.5674, -136.012, -17.1541, 0.44 ) }
    dend_11 { pt3dadd( 14.7652, -136.943, -17.7642, 0.66 ) }
    dend_11 { pt3dadd( 15.1364, -138.281, -18.725, 0.44 ) }
    dend_11 { pt3dadd( 15.7211, -140.196, -20.0995, 0.88 ) }
    dend_11 { pt3dadd( 16.3798, -142.304, -21.5233, 0.52 ) }
    dend_11 { pt3dadd( 16.7284, -143.38, -22.2239, 0.74 ) }
    dend_11 { pt3dadd( 17.2155, -144.829, -23.1211, 1.33 ) }
    dend_11 { pt3dadd( 17.4768, -145.654, -23.5941, 1.33 ) }
    dend_11 { pt3dadd( 17.9047, -147.358, -24.4435, 0.74 ) }
    dend_11 { pt3dadd( 18.0923, -148.447, -24.8778, 0.66 ) }
    dend_11 { pt3dadd( 18.2222, -149.994, -25.3962, 0.66 ) }
    dend_11 { pt3dadd( 18.2196, -151.067, -25.7575, 0.81 ) }
    dend_11 { pt3dadd( 18.1083, -152.154, -26.1575, 0.59 ) }
    dend_11 { pt3dadd( 17.9564, -152.88, -26.4227, 1.18 ) }
    dend_11 { pt3dadd( 17.852, -153.216, -26.55, 1.18 ) }
    dend_11 { pt3dadd( 17.4204, -154.4, -26.9939, 0.44 ) }
    dend_11 { pt3dadd( 17.02, -155.436, -27.2906, 0.44 ) }
    dend_11 { pt3dadd( 16.7123, -156.314, -27.4779, 1.03 ) }
    dend_11 { pt3dadd( 16.5513, -156.948, -27.5464, 1.4 ) }
    dend_11 { pt3dadd( 16.3626, -158.314, -27.4479, 0.52 ) }
    dend_11 { pt3dadd( 16.3039, -159.246, -27.3136, 0.52 ) }
    dend_11 { pt3dadd( 16.3622, -160.488, -26.9839, 0.74 ) }
    dend_11 { pt3dadd( 16.4155, -160.943, -26.7953, 0.74 ) }
    dend_11 { pt3dadd( 16.5419, -161.866, -26.2457, 0.59 ) }
    dend_11 { pt3dadd( 16.7192, -162.923, -25.4104, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.09033, -28.5817, -5.18607, 0.88 ) }
    dend_2 { pt3dadd( 8.22144, -28.574, -8.34104, 0.88 ) }
    dend_2 { pt3dadd( 8.86079, -28.5324, -9.15613, 0.88 ) }
    dend_2 { pt3dadd( 9.52989, -28.4779, -9.88635, 1.03 ) }
    dend_2 { pt3dadd( 9.99969, -28.4355, -10.3322, 1.33 ) }
    dend_2 { pt3dadd( 10.4407, -28.3991, -10.7186, 1.62 ) }
    dend_2 { pt3dadd( 11.086, -28.3581, -11.2539, 1.84 ) }
    dend_2 { pt3dadd( 11.6656, -28.2764, -11.6286, 1.47 ) }
    dend_2 { pt3dadd( 12.3191, -28.1954, -12.1774, 1.18 ) }
    dend_2 { pt3dadd( 12.7055, -28.138, -12.8244, 0.81 ) }
    dend_2 { pt3dadd( 13.0318, -28.0704, -13.7067, 0.81 ) }
    dend_2 { pt3dadd( 13.2129, -28.043, -14.324, 1.11 ) }
    dend_2 { pt3dadd( 13.5563, -28.0516, -15.7297, 1.33 ) }
    dend_2 { pt3dadd( 13.8947, -28.1076, -17.2616, 1.77 ) }
    dend_2 { pt3dadd( 14.6506, -28.3356, -20.7888, 1.47 ) }
    dend_2 { pt3dadd( 14.9068, -28.4304, -21.8969, 1.11 ) }
    dend_2 { pt3dadd( 15.1947, -28.5324, -22.9693, 1.11 ) }
    dend_2 { pt3dadd( 15.641, -28.659, -24.2721, 0.81 ) }
    dend_2 { pt3dadd( 15.9625, -28.7317, -24.9454, 0.96 ) }
    dend_2 { pt3dadd( 16.5607, -28.7989, -25.7988, 0.88 ) }
    dend_2 { pt3dadd( 17.0903, -28.7377, -26.3952, 0.74 ) }
    dend_2 { pt3dadd( 17.4794, -28.5742, -26.8873, 0.59 ) }
    dend_2 { pt3dadd( 17.9387, -28.2124, -27.6194, 1.03 ) }
    dend_2 { pt3dadd( 18.2674, -27.8709, -28.1916, 1.55 ) }
    dend_2 { pt3dadd( 18.5655, -27.5354, -28.727, 1.69 ) }
    dend_2 { pt3dadd( 19.4383, -26.5241, -30.3741, 1.69 ) }
    dend_2 { pt3dadd( 19.7028, -26.2271, -30.8973, 1.69 ) }
    dend_2 { pt3dadd( 20.3734, -25.5444, -32.1963, 0.88 ) }
    dend_2 { pt3dadd( 20.7707, -25.2164, -32.8963, 0.81 ) }
    dend_2 { pt3dadd( 21.2823, -24.9102, -33.6518, 1.11 ) }
    dend_2 { pt3dadd( 21.997, -24.6349, -34.5285, 1.18 ) }
    dend_2 { pt3dadd( 22.6997, -24.5189, -35.2025, 0.59 ) }
    dend_2 { pt3dadd( 23.024, -24.5243, -35.4825, 0.59 ) }
    dend_2 { pt3dadd( 23.8533, -24.7064, -36.0727, 0.96 ) }
    dend_2 { pt3dadd( 24.4587, -24.9613, -36.4715, 1.18 ) }
    dend_2 { pt3dadd( 24.9898, -25.2742, -36.7742, 1.18 ) }
    dend_2 { pt3dadd( 25.5519, -25.6558, -37.0301, 1.4 ) }
    dend_2 { pt3dadd( 26.2114, -26.1324, -37.2914, 1.4 ) }
    dend_2 { pt3dadd( 26.8269, -26.5577, -37.5245, 1.11 ) }
    dend_2 { pt3dadd( 27.2644, -26.8133, -37.6797, 1.11 ) }
    dend_2 { pt3dadd( 27.803, -27.0337, -37.8676, 1.03 ) }
    dend_2 { pt3dadd( 28.5078, -27.2087, -38.1076, 1.03 ) }
    dend_2 { pt3dadd( 29.1222, -27.2749, -38.3111, 1.03 ) }
    dend_2 { pt3dadd( 29.8312, -27.2743, -38.539, 0.96 ) }
    dend_2 { pt3dadd( 30.8054, -27.1878, -38.8553, 0.88 ) }
    dend_2 { pt3dadd( 31.8714, -27.0271, -39.1772, 0.88 ) }
    dend_2 { pt3dadd( 32.5814, -26.8783, -39.378, 1.03 ) }
    dend_2 { pt3dadd( 33.1355, -26.7428, -39.5437, 1.11 ) }
    dend_2 { pt3dadd( 33.5842, -26.63, -39.6983, 1.18 ) }
    dend_2 { pt3dadd( 33.9727, -26.5533, -39.8875, 1.18 ) }
    dend_2 { pt3dadd( 34.6972, -26.5086, -40.4314, 0.81 ) }
    dend_2 { pt3dadd( 35.1741, -26.5821, -40.9393, 0.74 ) }
    dend_2 { pt3dadd( 35.7656, -26.7733, -41.6937, 1.18 ) }
    dend_2 { pt3dadd( 36.2029, -26.9582, -42.308, 1.4 ) }
    dend_2 { pt3dadd( 37.0642, -27.3705, -43.6324, 1.18 ) }
    dend_2 { pt3dadd( 37.7083, -27.6823, -44.6977, 0.88 ) }
    dend_2 { pt3dadd( 38.1697, -27.8872, -45.5422, 0.74 ) }
    dend_2 { pt3dadd( 38.637, -28.0451, -46.3929, 0.74 ) }
    dend_2 { pt3dadd( 39.0745, -28.112, -47.135, 1.11 ) }
    dend_2 { pt3dadd( 39.5486, -28.0945, -47.9034, 1.4 ) }
    dend_2 { pt3dadd( 40.028, -28.0282, -48.6456, 1.4 ) }
    dend_2 { pt3dadd( 40.6911, -27.9421, -49.6921, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 41.0728, -27.9211, -50.3295, 0.74 ) }
    dend_2 { pt3dadd( 41.5458, -27.9792, -51.1598, 0.66 ) }
    dend_2 { pt3dadd( 42.105, -28.1912, -52.1744, 0.81 ) }
    dend_2 { pt3dadd( 42.6901, -28.5518, -53.1551, 0.74 ) }
    dend_2 { pt3dadd( 43.1866, -28.9365, -53.9571, 1.25 ) }
    dend_2 { pt3dadd( 43.4704, -29.1678, -54.3813, 1.69 ) }
    dend_2 { pt3dadd( 43.8487, -29.4441, -54.9102, 1.69 ) }
    dend_2 { pt3dadd( 44.2634, -29.6475, -55.3962, 1.4 ) }
    dend_2 { pt3dadd( 44.9416, -29.7712, -56.0362, 0.88 ) }
    dend_2 { pt3dadd( 45.9568, -29.6761, -56.8633, 0.81 ) }
    dend_2 { pt3dadd( 46.4245, -29.5746, -57.2127, 0.81 ) }
    dend_2 { pt3dadd( 47.0893, -29.4196, -57.6582, 0.81 ) }
    dend_2 { pt3dadd( 47.9644, -29.2227, -58.1648, 0.81 ) }
    dend_2 { pt3dadd( 48.5243, -29.123, -58.4396, 0.81 ) }
    dend_2 { pt3dadd( 49.3313, -29.0522, -58.7799, 0.81 ) }
    dend_2 { pt3dadd( 49.8889, -29.09, -58.9628, 0.96 ) }
    dend_2 { pt3dadd( 50.7422, -29.3135, -59.2589, 0.96 ) }
    dend_2 { pt3dadd( 51.3053, -29.578, -59.5105, 1.18 ) }
    dend_2 { pt3dadd( 51.7865, -29.8905, -59.7999, 1.47 ) }
    dend_2 { pt3dadd( 52.2653, -30.2444, -60.1355, 1.47 ) }
    dend_2 { pt3dadd( 52.9527, -30.7688, -60.6576, 0.74 ) }
    dend_2 { pt3dadd( 53.744, -31.3395, -61.2894, 0.74 ) }
    dend_2 { pt3dadd( 54.7023, -31.956, -62.0975, 0.66 ) }
    dend_2 { pt3dadd( 55.5826, -32.4635, -62.8916, 0.74 ) }
    dend_2 { pt3dadd( 56.1289, -32.7235, -63.395, 0.81 ) }
    dend_2 { pt3dadd( 56.7561, -32.9367, -63.965, 0.81 ) }
    dend_2 { pt3dadd( 57.0773, -32.9951, -64.2443, 1.11 ) }
    dend_2 { pt3dadd( 57.8511, -33.0103, -64.8981, 1.25 ) }
    dend_2 { pt3dadd( 58.1817, -32.9671, -65.2147, 1.62 ) }
    dend_2 { pt3dadd( 58.5197, -32.8752, -65.6397, 1.62 ) }
    dend_2 { pt3dadd( 59.1428, -32.657, -66.574, 0.59 ) }
    dend_2 { pt3dadd( 59.5154, -32.5158, -67.2019, 0.59 ) }
    dend_2 { pt3dadd( 60.0689, -32.3167, -68.1666, 0.88 ) }
    dend_2 { pt3dadd( 60.8112, -32.0792, -69.4671, 1.4 ) }
    dend_2 { pt3dadd( 61.5744, -31.8854, -70.7439, 0.74 ) }
    dend_2 { pt3dadd( 62.0347, -31.8037, -71.4708, 0.59 ) }
    dend_2 { pt3dadd( 62.4433, -31.7683, -72.0435, 0.81 ) }
    dend_2 { pt3dadd( 62.8378, -31.7736, -72.4639, 0.81 ) }
    dend_2 { pt3dadd( 63.2524, -31.8079, -72.7546, 0.96 ) }
    dend_2 { pt3dadd( 63.705, -31.8423, -72.9719, 0.96 ) }
    dend_2 { pt3dadd( 64.255, -31.867, -73.1984, 0.59 ) }
    dend_2 { pt3dadd( 65.1055, -31.8583, -73.569, 0.59 ) }
    dend_2 { pt3dadd( 65.9245, -31.797, -73.9316, 0.66 ) }
    dend_2 { pt3dadd( 66.3854, -31.7331, -74.1869, 1.03 ) }
    dend_2 { pt3dadd( 67.1213, -31.6009, -74.6552, 1.03 ) }
    dend_2 { pt3dadd( 67.779, -31.4162, -75.3333, 0.59 ) }
    dend_2 { pt3dadd( 68.0782, -31.2916, -75.7574, 0.59 ) }
    dend_2 { pt3dadd( 68.4448, -31.1045, -76.3915, 0.59 ) }
    dend_2 { pt3dadd( 68.9831, -30.8487, -77.4158, 1.11 ) }
    dend_2 { pt3dadd( 69.2244, -30.7639, -77.8771, 1.33 ) }
    dend_2 { pt3dadd( 70.6163, -30.4231, -80.3774, 1.03 ) }
    dend_2 { pt3dadd( 70.8771, -30.3712, -80.7997, 1.4 ) }
    dend_2 { pt3dadd( 71.4174, -30.2748, -81.5692, 0.81 ) }
    dend_2 { pt3dadd( 71.9894, -30.1754, -82.268, 0.74 ) }
    dend_2 { pt3dadd( 72.757, -30.0415, -83.0291, 0.59 ) }
    dend_2 { pt3dadd( 73.289, -29.9461, -83.4685, 0.59 ) }
    dend_2 { pt3dadd( 74.1908, -29.7875, -84.0244, 0.59 ) }
    dend_2 { pt3dadd( 75.2577, -29.5438, -84.6826, 0.88 ) }
    dend_2 { pt3dadd( 75.6359, -29.4098, -84.9135, 1.25 ) }
    dend_2 { pt3dadd( 75.9712, -29.2463, -85.1166, 1.55 ) }
    dend_2 { pt3dadd( 76.4635, -28.9609, -85.4277, 1.55 ) }
    dend_2 { pt3dadd( 76.8581, -28.7217, -85.6926, 1.33 ) }
    dend_2 { pt3dadd( 77.3446, -28.4247, -86.0246, 0.66 ) }
    dend_2 { pt3dadd( 77.9681, -28.0609, -86.4455, 0.66 ) }
    dend_2 { pt3dadd( 78.3716, -27.8426, -86.7696, 0.66 ) }
    dend_2 { pt3dadd( 79.0764, -27.4642, -87.4653, 0.66 ) }
    dend_2 { pt3dadd( 79.3412, -27.3598, -87.9266, 0.66 ) }
    dend_2 { pt3dadd( 79.4857, -27.3255, -88.2643, 0.96 ) }
    dend_2 { pt3dadd( 79.6477, -27.3105, -88.698, 0.96 ) }
    dend_2 { pt3dadd( 80.1293, -27.3415, -90.024, 0.74 ) }
    dend_2 { pt3dadd( 80.4215, -27.3864, -90.8108, 1.62 ) }
    dend_2 { pt3dadd( 81.6273, -27.609, -93.8425, 0.66 ) }
    dend_2 { pt3dadd( 81.8153, -27.6331, -94.2847, 0.66 ) }
    dend_2 { pt3dadd( 82.1205, -27.6515, -94.9116, 1.11 ) }
    dend_2 { pt3dadd( 82.5438, -27.6574, -95.6555, 1.11 ) }
    dend_2 { pt3dadd( 83.011, -27.6267, -96.3014, 0.52 ) }
    dend_2 { pt3dadd( 83.5069, -27.5432, -96.8311, 0.52 ) }
    dend_2 { pt3dadd( 84.1703, -27.3319, -97.3873, 1.25 ) }
    dend_2 { pt3dadd( 84.6793, -27.1394, -97.8227, 0.88 ) }
    dend_2 { pt3dadd( 85.6434, -26.6959, -98.6574, 0.44 ) }
    dend_2 { pt3dadd( 86.1956, -26.3949, -99.1257, 0.44 ) }
    dend_2 { pt3dadd( 87.016, -25.8918, -99.805, 0.52 ) }
    dend_2 { pt3dadd( 87.5607, -25.5278, -100.246, 0.88 ) }
    dend_2 { pt3dadd( 87.8326, -25.3382, -100.458, 1.11 ) }
    dend_2 { pt3dadd( 88.0538, -25.1573, -100.674, 1.11 ) }
    dend_2 { pt3dadd( 88.2194, -24.9908, -100.888, 1.11 ) }
    dend_2 { pt3dadd( 88.7005, -24.4022, -101.786, 0.52 ) }
    dend_2 { pt3dadd( 88.8616, -24.1724, -102.249, 0.52 ) }
    dend_2 { pt3dadd( 89.0654, -23.8711, -102.96, 0.81 ) }
    dend_2 { pt3dadd( 89.5361, -23.2232, -104.663, 0.81 ) }
    dend_2 { pt3dadd( 89.7655, -22.934, -105.45, 1.11 ) }
    dend_2 { pt3dadd( 89.8766, -22.8158, -105.767, 1.92 ) }
    dend_2 { pt3dadd( 90.6125, -22.2026, -107.358, 0.59 ) }
    dend_2 { pt3dadd( 90.719, -22.1363, -107.524, 0.59 ) }
    dend_2 { pt3dadd( 91.1641, -21.9453, -107.962, 0.88 ) }
    dend_2 { pt3dadd( 91.7943, -21.7577, -108.356, 0.44 ) }
    dend_2 { pt3dadd( 92.8488, -21.5078, -108.931, 0.44 ) }
    dend_2 { pt3dadd( 93.6906, -21.342, -109.356, 0.74 ) }
    dend_2 { pt3dadd( 94.1625, -21.2752, -109.612, 0.74 ) }
    dend_2 { pt3dadd( 94.8318, -21.2394, -110.116, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 95.2048, -21.2671, -110.517, 0.52 ) }
    dend_2 { pt3dadd( 95.7267, -21.3735, -111.26, 0.59 ) }
    dend_2 { pt3dadd( 95.9152, -21.4183, -111.575, 0.59 ) }
    dend_2 { pt3dadd( 96.7168, -21.5679, -113.024, 0.59 ) }
    dend_2 { pt3dadd( 97.2423, -21.6113, -113.982, 0.81 ) }
    dend_2 { pt3dadd( 97.7329, -21.5896, -114.886, 1.4 ) }
    dend_2 { pt3dadd( 98.0, -21.5239, -115.34, 1.55 ) }
    dend_2 { pt3dadd( 98.648, -21.1949, -116.271, 0.44 ) }
    dend_2 { pt3dadd( 98.9405, -20.971, -116.603, 0.88 ) }
    dend_2 { pt3dadd( 99.3293, -20.6225, -116.907, 0.88 ) }
    dend_2 { pt3dadd( 99.7564, -20.2381, -117.224, 0.59 ) }
    dend_2 { pt3dadd( 100.416, -19.682, -117.722, 0.59 ) }
    dend_2 { pt3dadd( 100.844, -19.376, -118.128, 0.81 ) }
    dend_2 { pt3dadd( 101.316, -19.1142, -118.657, 0.81 ) }
    dend_2 { pt3dadd( 101.916, -18.8391, -119.454, 0.52 ) }
    dend_2 { pt3dadd( 102.564, -18.5664, -120.475, 0.74 ) }
    dend_2 { pt3dadd( 102.745, -18.4798, -120.917, 0.74 ) }
    dend_2 { pt3dadd( 103.022, -18.2411, -122.226, 0.37 ) }
    dend_2 { pt3dadd( 103.084, -18.0937, -122.916, 0.37 ) }
    dend_2 { pt3dadd( 103.091, -17.8096, -124.013, 0.37 ) }
    dend_2 { pt3dadd( 103.039, -17.5012, -124.974, 0.59 ) }
    dend_2 { pt3dadd( 102.866, -16.5245, -127.603, 0.88 ) }
    dend_2 { pt3dadd( 102.8, -16.0508, -128.805, 0.52 ) }
    dend_2 { pt3dadd( 102.791, -15.8991, -129.232, 0.52 ) }
    dend_2 { pt3dadd( 102.806, -15.6492, -130.167, 0.52 ) }
    dend_2 { pt3dadd( 102.869, -15.4905, -130.867, 0.81 ) }
    dend_2 { pt3dadd( 103.015, -15.3195, -131.691, 0.59 ) }
    dend_2 { pt3dadd( 103.187, -15.2005, -132.335, 0.59 ) }
    dend_2 { pt3dadd( 103.806, -14.9095, -134.414, 1.18 ) }
    dend_2 { pt3dadd( 104.507, -14.6602, -136.983, 0.74 ) }
    dend_2 { pt3dadd( 104.661, -14.6214, -137.649, 0.74 ) }
    dend_2 { pt3dadd( 104.784, -14.5988, -138.31, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -46.6384, 116.864, -37.9916, 0.29 ) }
    dend_87 { pt3dadd( -47.4163, 116.769, -38.2101, 0.29 ) }
    dend_87 { pt3dadd( -48.0412, 116.79, -38.4063, 0.29 ) }
    dend_87 { pt3dadd( -48.3576, 116.889, -38.5632, 0.59 ) }
    dend_87 { pt3dadd( -48.7111, 117.092, -38.7785, 0.59 ) }
    dend_87 { pt3dadd( -48.9975, 117.3, -38.9593, 0.59 ) }
    dend_87 { pt3dadd( -49.3042, 117.555, -39.1465, 0.44 ) }
    dend_87 { pt3dadd( -49.5367, 117.851, -39.3097, 0.59 ) }
    dend_87 { pt3dadd( -49.9492, 118.448, -39.6718, 0.37 ) }
    dend_87 { pt3dadd( -50.1493, 118.735, -39.8667, 0.29 ) }
    dend_87 { pt3dadd( -50.3565, 118.996, -40.0576, 0.59 ) }
    dend_87 { pt3dadd( -50.5859, 119.261, -40.2575, 0.59 ) }
    dend_87 { pt3dadd( -51.0881, 119.817, -40.6835, 0.29 ) }
    dend_87 { pt3dadd( -51.5513, 120.352, -41.0987, 0.29 ) }
    dend_87 { pt3dadd( -51.7638, 120.61, -41.3125, 0.29 ) }
    dend_87 { pt3dadd( -52.1625, 121.106, -41.794, 0.29 ) }
    dend_87 { pt3dadd( -52.4093, 121.416, -42.157, 0.29 ) }
    dend_87 { pt3dadd( -52.6664, 121.74, -42.5812, 0.52 ) }
    dend_87 { pt3dadd( -52.8978, 122.04, -42.9878, 0.66 ) }
    dend_87 { pt3dadd( -53.2334, 122.519, -43.6159, 0.44 ) }
    dend_87 { pt3dadd( -53.4926, 122.907, -44.1687, 0.59 ) }
    dend_87 { pt3dadd( -53.8022, 123.358, -44.9393, 0.96 ) }
    dend_87 { pt3dadd( -53.9275, 123.491, -45.2273, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -46.6384, 116.864, -37.9916, 0.66 ) }
    dend_86 { pt3dadd( -45.3956, 116.762, -38.726, 0.66 ) }
    dend_86 { pt3dadd( -44.4027, 116.682, -39.3128, 0.29 ) }
    dend_86 { pt3dadd( -43.6819, 116.623, -39.7388, 0.44 ) }
    dend_86 { pt3dadd( -42.7934, 116.551, -40.2639, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -66.6843, 130.702, -30.3967, 0.29 ) }
    dend_82 { pt3dadd( -67.4521, 131.456, -31.0485, 0.29 ) }
    dend_82 { pt3dadd( -68.4379, 132.322, -31.8672, 0.59 ) }
    dend_82 { pt3dadd( -69.0867, 132.893, -32.4172, 0.44 ) }
    dend_82 { pt3dadd( -70.0227, 133.779, -33.234, 0.88 ) }
    dend_82 { pt3dadd( -70.443, 134.23, -33.6368, 1.03 ) }
    dend_82 { pt3dadd( -71.3886, 135.38, -34.6206, 0.52 ) }
    dend_82 { pt3dadd( -71.7002, 135.8, -34.9823, 0.44 ) }
    dend_82 { pt3dadd( -72.2999, 136.713, -35.6897, 0.66 ) }
    dend_82 { pt3dadd( -72.748, 137.463, -36.2324, 0.88 ) }
    dend_82 { pt3dadd( -73.5773, 138.942, -37.1927, 0.59 ) }
    dend_82 { pt3dadd( -74.1183, 139.925, -37.7812, 0.74 ) }
    dend_82 { pt3dadd( -74.6602, 140.929, -38.3324, 0.74 ) }
    dend_82 { pt3dadd( -75.4186, 142.255, -39.042, 0.37 ) }
    dend_82 { pt3dadd( -75.7708, 142.814, -39.3328, 0.37 ) }
    dend_82 { pt3dadd( -76.6018, 143.996, -39.9123, 0.66 ) }
    dend_82 { pt3dadd( -77.1798, 144.707, -40.2228, 0.66 ) }
    dend_82 { pt3dadd( -77.7878, 145.342, -40.4707, 0.52 ) }
    dend_82 { pt3dadd( -78.6678, 146.127, -40.726, 0.88 ) }
    dend_82 { pt3dadd( -79.2678, 146.591, -40.8377, 0.88 ) }
    dend_82 { pt3dadd( -80.1461, 147.179, -40.9064, 0.52 ) }
    dend_82 { pt3dadd( -81.1966, 147.815, -40.8986, 0.52 ) }
    dend_82 { pt3dadd( -82.4906, 148.589, -40.8242, 0.88 ) }
    dend_82 { pt3dadd( -83.3207, 149.109, -40.7531, 0.88 ) }
    dend_82 { pt3dadd( -84.3452, 149.779, -40.6375, 0.52 ) }
    dend_82 { pt3dadd( -85.2181, 150.37, -40.5312, 0.44 ) }
    dend_82 { pt3dadd( -86.2106, 151.055, -40.4147, 0.37 ) }
    dend_82 { pt3dadd( -87.1787, 151.783, -40.3056, 0.37 ) }
    dend_82 { pt3dadd( -88.1408, 152.576, -40.2169, 0.29 ) }
    dend_82 { pt3dadd( -89.7066, 153.963, -40.1158, 0.29 ) }
    dend_82 { pt3dadd( -90.4384, 154.629, -40.0804, 0.29 ) }
    dend_82 { pt3dadd( -91.2828, 155.377, -40.0391, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -66.6843, 130.702, -30.3967, 0.29 ) }
    dend_81 { pt3dadd( -68.3386, 129.529, -29.5237, 0.29 ) }
    dend_81 { pt3dadd( -69.2389, 128.89, -29.0485, 0.29 ) }
    dend_81 { pt3dadd( -69.8767, 128.438, -28.7119, 0.22 ) }
    dend_81 { pt3dadd( -70.6905, 127.861, -28.2824, 0.22 ) }
    dend_81 { pt3dadd( -71.596, 127.219, -27.8046, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 131.107, 56.3074, 86.6164, 0.29 ) }
    dend_75 { pt3dadd( 131.7, 64.4121, 95.4692, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 133.072, 71.3933, 105.069, 0.29 ) }
    dend_75 { pt3dadd( 135.739, 77.9984, 114.63, 0.29 ) }
    dend_75 { pt3dadd( 137.421, 82.7686, 125.347, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 131.107, 56.3074, 86.6164, 0.29 ) }
    dend_72 { pt3dadd( 140.57, 55.4554, 90.4255, 0.29 ) }
    dend_72 { pt3dadd( 149.593, 56.3854, 95.1312, 0.29 ) }
    dend_72 { pt3dadd( 157.597, 58.7015, 101.064, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 78.096, 41.1, 2.21838, 0.37 ) }
    dend_68 { pt3dadd( 78.2987, 41.9549, 2.37629, 0.37 ) }
    dend_68 { pt3dadd( 78.5506, 43.2292, 2.65652, 0.37 ) }
    dend_68 { pt3dadd( 78.733, 44.1523, 2.85953, 0.22 ) }
    dend_68 { pt3dadd( 79.1167, 46.0931, 3.28634, 0.22 ) }
    dend_68 { pt3dadd( 79.4091, 47.5723, 3.61164, 0.66 ) }
    dend_68 { pt3dadd( 79.7612, 49.3537, 4.00341, 1.11 ) }
    dend_68 { pt3dadd( 79.8306, 49.7994, 4.12495, 1.11 ) }
    dend_68 { pt3dadd( 82.5614, 60.7842, 5.23583, 1.11 ) }
    dend_68 { pt3dadd( 85.9003, 71.6018, 6.23063, 1.11 ) }
    dend_68 { pt3dadd( 89.7848, 82.0385, 8.21929, 1.11 ) }
    dend_68 { pt3dadd( 93.5383, 92.166, 11.4094, 1.11 ) }
    dend_68 { pt3dadd( 98.6443, 102.142, 12.8196, 1.11 ) }
    dend_68 { pt3dadd( 103.931, 111.945, 14.5803, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 78.096, 41.1, 2.21838, 0.44 ) }
    dend_59 { pt3dadd( 78.9085, 41.3052, 2.32087, 0.44 ) }
    dend_59 { pt3dadd( 79.7782, 41.4807, 2.44162, 0.44 ) }
    dend_59 { pt3dadd( 80.707, 41.6477, 2.63792, 0.74 ) }
    dend_59 { pt3dadd( 81.2707, 41.7413, 2.78031, 1.03 ) }
    dend_59 { pt3dadd( 81.7977, 41.8249, 2.93094, 1.03 ) }
    dend_59 { pt3dadd( 82.2151, 41.8861, 3.03648, 1.03 ) }
    dend_59 { pt3dadd( 82.9253, 41.9809, 3.14733, 0.66 ) }
    dend_59 { pt3dadd( 83.9112, 42.1381, 3.19363, 0.66 ) }
    dend_59 { pt3dadd( 84.2627, 42.2213, 3.15428, 0.81 ) }
    dend_59 { pt3dadd( 84.8006, 42.4061, 3.02598, 0.44 ) }
    dend_59 { pt3dadd( 85.9003, 42.8999, 2.65796, 0.44 ) }
    dend_59 { pt3dadd( 87.2108, 43.6094, 2.1415, 0.37 ) }
    dend_59 { pt3dadd( 87.6721, 43.8874, 1.92876, 0.37 ) }
    dend_59 { pt3dadd( 88.3861, 44.3352, 1.57392, 0.37 ) }
    dend_59 { pt3dadd( 89.2424, 44.8975, 1.16897, 0.66 ) }
    dend_59 { pt3dadd( 89.7405, 45.2425, 0.958847, 0.66 ) }
    dend_59 { pt3dadd( 90.4342, 45.7373, 0.75675, 0.37 ) }
    dend_59 { pt3dadd( 90.8468, 46.0189, 0.688841, 0.37 ) }
    dend_59 { pt3dadd( 91.3701, 46.3668, 0.615514, 0.59 ) }
    dend_59 { pt3dadd( 91.8362, 46.6796, 0.535751, 0.59 ) }
    dend_59 { pt3dadd( 92.2933, 46.9765, 0.379117, 0.44 ) }
    dend_59 { pt3dadd( 93.0709, 47.4129, 0.0658426, 0.66 ) }
    dend_59 { pt3dadd( 93.2129, 47.4804, 0.00688783, 0.96 ) }
    dend_59 { pt3dadd( 93.7546, 47.6799, -0.19367, 0.96 ) }
    dend_59 { pt3dadd( 94.5452, 47.8823, -0.460298, 1.11 ) }
    dend_59 { pt3dadd( 96.3617, 48.2172, -0.975831, 0.44 ) }
    dend_59 { pt3dadd( 97.3762, 48.3643, -1.21084, 0.44 ) }
    dend_59 { pt3dadd( 98.1644, 48.4672, -1.353, 0.37 ) }
    dend_59 { pt3dadd( 99.1338, 48.6049, -1.52208, 0.37 ) }
    dend_59 { pt3dadd( 99.7222, 48.705, -1.61107, 0.29 ) }
    dend_59 { pt3dadd( 100.536, 48.9091, -1.72181, 0.22 ) }
    dend_59 { pt3dadd( 101.09, 49.1662, -1.83574, 0.59 ) }
    dend_59 { pt3dadd( 101.384, 49.4063, -1.96469, 0.59 ) }
    dend_59 { pt3dadd( 102.245, 50.2082, -2.52331, 0.29 ) }
    dend_59 { pt3dadd( 102.611, 50.5513, -2.78648, 0.37 ) }
    dend_59 { pt3dadd( 103.046, 50.9276, -3.09589, 0.52 ) }
    dend_59 { pt3dadd( 103.521, 51.2449, -3.41278, 0.74 ) }
    dend_59 { pt3dadd( 104.196, 51.5704, -3.92327, 0.96 ) }
    dend_59 { pt3dadd( 105.41, 52.0312, -4.9916, 0.29 ) }
    dend_59 { pt3dadd( 105.882, 52.1991, -5.47995, 0.52 ) }
    dend_59 { pt3dadd( 106.094, 52.2803, -5.74165, 0.81 ) }
    dend_59 { pt3dadd( 106.794, 52.6062, -6.74682, 1.11 ) }
    dend_59 { pt3dadd( 108.072, 53.315, -8.83484, 0.81 ) }
    dend_59 { pt3dadd( 108.629, 53.7031, -9.85605, 0.96 ) }
    dend_59 { pt3dadd( 109.219, 54.2224, -11.0332, 0.66 ) }
    dend_59 { pt3dadd( 109.659, 54.658, -11.9185, 0.52 ) }
    dend_59 { pt3dadd( 110.098, 55.124, -12.7118, 0.52 ) }
    dend_59 { pt3dadd( 110.286, 55.3335, -12.9651, 0.74 ) }
    dend_59 { pt3dadd( 110.768, 55.7521, -13.2657, 0.74 ) }
    dend_59 { pt3dadd( 111.085, 55.9575, -13.3751, 0.96 ) }
    dend_59 { pt3dadd( 111.58, 56.188, -13.4926, 0.96 ) }
    dend_59 { pt3dadd( 112.394, 56.5044, -13.7404, 0.74 ) }
    dend_59 { pt3dadd( 113.201, 56.823, -14.0596, 0.44 ) }
    dend_59 { pt3dadd( 114.094, 57.2442, -14.5774, 0.44 ) }
    dend_59 { pt3dadd( 114.435, 57.4436, -14.8391, 0.96 ) }
    dend_59 { pt3dadd( 115.056, 57.8999, -15.4891, 1.18 ) }
    dend_59 { pt3dadd( 115.924, 58.685, -16.6534, 0.66 ) }
    dend_59 { pt3dadd( 116.24, 59.0234, -17.1807, 0.66 ) }
    dend_59 { pt3dadd( 116.81, 59.709, -18.3113, 0.59 ) }
    dend_59 { pt3dadd( 117.021, 59.9873, -18.7381, 0.52 ) }
    dend_59 { pt3dadd( 117.611, 60.7678, -19.8344, 0.52 ) }
    dend_59 { pt3dadd( 117.775, 61.0074, -20.1183, 0.96 ) }
    dend_59 { pt3dadd( 118.122, 61.5217, -20.6386, 0.96 ) }
    dend_59 { pt3dadd( 118.773, 62.5218, -21.513, 0.59 ) }
    dend_59 { pt3dadd( 119.328, 63.4427, -22.1709, 0.59 ) }
    dend_59 { pt3dadd( 119.677, 64.0545, -22.5597, 0.88 ) }
    dend_59 { pt3dadd( 120.179, 64.9707, -23.0419, 0.74 ) }
    dend_59 { pt3dadd( 120.624, 65.7108, -23.3975, 0.74 ) }
    dend_59 { pt3dadd( 121.148, 66.4639, -23.6993, 0.88 ) }
    dend_59 { pt3dadd( 121.483, 66.8286, -23.8349, 0.88 ) }
    dend_59 { pt3dadd( 122.121, 67.323, -24.0798, 0.37 ) }
    dend_59 { pt3dadd( 122.8, 67.7328, -24.3386, 0.37 ) }
    dend_59 { pt3dadd( 123.874, 68.2417, -24.7399, 0.37 ) }
    dend_59 { pt3dadd( 124.63, 68.5564, -25.0515, 0.37 ) }
    dend_59 { pt3dadd( 125.516, 68.8954, -25.4548, 0.37 ) }
    dend_59 { pt3dadd( 126.051, 69.115, -25.7067, 0.59 ) }
    dend_59 { pt3dadd( 126.715, 69.4142, -26.0175, 0.74 ) }
    dend_59 { pt3dadd( 127.161, 69.6425, -26.2375, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 128.005, 70.147, -26.6981, 0.44 ) }
    dend_59 { pt3dadd( 128.455, 70.4208, -26.9349, 0.37 ) }
    dend_59 { pt3dadd( 129.764, 71.1356, -27.4703, 0.37 ) }
    dend_59 { pt3dadd( 130.383, 71.4131, -27.664, 0.74 ) }
    dend_59 { pt3dadd( 130.711, 71.5281, -27.7412, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 94.39, 74.8197, 17.9235, 0.29 ) }
    dend_57 { pt3dadd( 98.9761, 81.9472, 19.9448, 0.29 ) }
    dend_57 { pt3dadd( 104.365, 88.8019, 20.3963, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 94.39, 74.8197, 17.9235, 0.29 ) }
    dend_56 { pt3dadd( 100.738, 85.5816, 20.2387, 0.29 ) }
    dend_56 { pt3dadd( 106.813, 96.0292, 23.9876, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -23.6896, -159.846, 16.5641, 0.29 ) }
    dend_37 { pt3dadd( -20.8426, -171.794, 13.6334, 0.29 ) }
    dend_37 { pt3dadd( -19.3358, -184.335, 12.4967, 0.29 ) }
    dend_37 { pt3dadd( -18.562, -196.659, 9.68543, 0.29 ) }
    dend_37 { pt3dadd( -19.0917, -209.288, 8.52517, 0.29 ) }
    dend_37 { pt3dadd( -20.6709, -221.831, 7.47162, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -23.6896, -159.846, 16.5641, 0.29 ) }
    dend_36 { pt3dadd( -26.1974, -168.269, 12.3143, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.91051, -105.373, 3.84591, 0.37 ) }
    dend_24 { pt3dadd( -4.85075, -107.081, 1.92213, 0.37 ) }
    dend_24 { pt3dadd( -5.47333, -107.978, 0.911517, 0.37 ) }
    dend_24 { pt3dadd( -6.11386, -108.749, -0.00404059, 0.44 ) }
    dend_24 { pt3dadd( -6.91279, -109.58, -1.02269, 0.74 ) }
    dend_24 { pt3dadd( -7.73579, -110.339, -1.96811, 0.59 ) }
    dend_24 { pt3dadd( -8.62129, -111.04, -2.87561, 0.59 ) }
    dend_24 { pt3dadd( -9.19494, -111.313, -3.30336, 0.74 ) }
    dend_24 { pt3dadd( -10.1831, -111.589, -3.91041, 0.88 ) }
    dend_24 { pt3dadd( -10.8269, -111.683, -4.2304, 1.18 ) }
    dend_24 { pt3dadd( -11.4922, -111.712, -4.5081, 0.59 ) }
    dend_24 { pt3dadd( -12.5142, -111.696, -4.90053, 0.44 ) }
    dend_24 { pt3dadd( -13.5256, -111.66, -5.29372, 0.52 ) }
    dend_24 { pt3dadd( -13.9894, -111.662, -5.48967, 0.74 ) }
    dend_24 { pt3dadd( -14.7814, -111.78, -5.8284, 0.74 ) }
    dend_24 { pt3dadd( -15.3415, -111.985, -6.10625, 0.59 ) }
    dend_24 { pt3dadd( -15.9037, -112.339, -6.41778, 0.59 ) }
    dend_24 { pt3dadd( -16.6283, -113.02, -6.85064, 0.59 ) }
    dend_24 { pt3dadd( -17.3907, -113.971, -7.31029, 0.44 ) }
    dend_24 { pt3dadd( -18.2566, -115.247, -7.81208, 0.37 ) }
    dend_24 { pt3dadd( -18.7553, -116.111, -8.08642, 1.03 ) }
    dend_24 { pt3dadd( -19.0847, -116.768, -8.26935, 1.03 ) }
    dend_24 { pt3dadd( -19.3453, -117.374, -8.4156, 0.96 ) }
    dend_24 { pt3dadd( -19.7844, -118.639, -8.65763, 0.66 ) }
    dend_24 { pt3dadd( -20.1131, -119.781, -8.84432, 0.66 ) }
    dend_24 { pt3dadd( -20.4209, -121.089, -9.05711, 0.88 ) }
    dend_24 { pt3dadd( -20.577, -121.894, -9.18205, 1.03 ) }
    dend_24 { pt3dadd( -20.7462, -123.039, -9.36421, 0.88 ) }
    dend_24 { pt3dadd( -20.9059, -124.514, -9.61302, 0.52 ) }
    dend_24 { pt3dadd( -20.9915, -125.666, -9.82268, 0.52 ) }
    dend_24 { pt3dadd( -21.038, -126.542, -10.0002, 0.96 ) }
    dend_24 { pt3dadd( -21.0695, -127.112, -10.1281, 0.96 ) }
    dend_24 { pt3dadd( -21.1918, -128.51, -10.4899, 0.59 ) }
    dend_24 { pt3dadd( -21.3473, -129.617, -10.8181, 0.66 ) }
    dend_24 { pt3dadd( -21.5279, -130.44, -11.102, 0.81 ) }
    dend_24 { pt3dadd( -21.8051, -131.436, -11.4938, 0.81 ) }
    dend_24 { pt3dadd( -21.9948, -131.988, -11.7404, 0.81 ) }
    dend_24 { pt3dadd( -22.346, -132.99, -12.2756, 0.44 ) }
    dend_24 { pt3dadd( -22.5197, -133.512, -12.5914, 0.81 ) }
    dend_24 { pt3dadd( -22.7183, -134.266, -13.0815, 0.81 ) }
    dend_24 { pt3dadd( -22.9033, -135.347, -13.7866, 0.52 ) }
    dend_24 { pt3dadd( -22.9484, -136.23, -14.3416, 0.52 ) }
    dend_24 { pt3dadd( -22.8595, -137.852, -15.3082, 0.74 ) }
    dend_24 { pt3dadd( -22.7599, -138.65, -15.7524, 1.11 ) }
    dend_24 { pt3dadd( -22.6674, -139.386, -16.1315, 1.11 ) }
    dend_24 { pt3dadd( -22.5789, -140.325, -16.5655, 0.96 ) }
    dend_24 { pt3dadd( -22.5505, -141.378, -17.0093, 0.59 ) }
    dend_24 { pt3dadd( -22.6356, -142.674, -17.5194, 0.44 ) }
    dend_24 { pt3dadd( -22.9384, -144.1, -18.0576, 0.44 ) }
    dend_24 { pt3dadd( -23.2877, -145.165, -18.4723, 0.44 ) }
    dend_24 { pt3dadd( -23.693, -146.158, -18.8494, 0.74 ) }
    dend_24 { pt3dadd( -24.0047, -146.887, -19.1145, 0.74 ) }
    dend_24 { pt3dadd( -24.3127, -147.593, -19.3492, 0.74 ) }
    dend_24 { pt3dadd( -24.8606, -148.858, -19.726, 0.66 ) }
    dend_24 { pt3dadd( -25.2592, -149.803, -19.9778, 0.44 ) }
    dend_24 { pt3dadd( -25.7655, -151.026, -20.2888, 0.44 ) }
    dend_24 { pt3dadd( -26.5652, -152.727, -20.7004, 0.44 ) }
    dend_24 { pt3dadd( -27.0237, -153.512, -20.8807, 0.88 ) }
    dend_24 { pt3dadd( -27.5646, -154.239, -21.0374, 1.18 ) }
    dend_24 { pt3dadd( -27.9916, -154.706, -21.1221, 1.18 ) }
    dend_24 { pt3dadd( -28.5317, -155.208, -21.2047, 1.03 ) }
    dend_24 { pt3dadd( -30.0707, -156.424, -21.4145, 0.66 ) }
    dend_24 { pt3dadd( -31.4906, -157.387, -21.5807, 0.66 ) }
    dend_24 { pt3dadd( -32.6971, -158.174, -21.716, 1.25 ) }
    dend_24 { pt3dadd( -33.3384, -158.597, -21.7855, 1.55 ) }
    dend_24 { pt3dadd( -34.1135, -159.12, -21.8701, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.91051, -105.373, 3.84591, 0.74 ) }
    dend_19 { pt3dadd( -4.3917, -106.432, 2.98474, 0.74 ) }
    dend_19 { pt3dadd( -4.95665, -107.646, 1.97766, 0.74 ) }
    dend_19 { pt3dadd( -5.25868, -108.378, 1.46509, 0.74 ) }
    dend_19 { pt3dadd( -5.55132, -109.202, 0.965105, 0.81 ) }
    dend_19 { pt3dadd( -6.10291, -111.109, 0.00845337, 0.52 ) }
    dend_19 { pt3dadd( -6.44368, -112.637, -0.625854, 0.74 ) }
    dend_19 { pt3dadd( -6.56465, -113.457, -0.884891, 0.74 ) }
    dend_19 { pt3dadd( -6.47237, -115.307, -1.07289, 0.74 ) }
    dend_19 { pt3dadd( -6.20346, -116.241, -0.994851, 0.81 ) }
    dend_19 { pt3dadd( -5.6407, -117.39, -0.715933, 0.66 ) }
    dend_19 { pt3dadd( -5.28473, -117.963, -0.513817, 1.11 ) }
    dend_19 { pt3dadd( -4.9071, -118.521, -0.324937, 1.11 ) }
    dend_19 { pt3dadd( -4.41774, -119.23, -0.156146, 0.81 ) }
    dend_19 { pt3dadd( -3.79029, -120.182, -0.0822393, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( -3.22573, -121.106, -0.075176, 0.96 ) }
    dend_19 { pt3dadd( -2.72788, -121.966, -0.0969218, 0.88 ) }
    dend_19 { pt3dadd( -2.13867, -123.021, -0.118201, 0.96 ) }
    dend_19 { pt3dadd( -1.7328, -123.805, -0.151781, 1.11 ) }
    dend_19 { pt3dadd( -1.28871, -124.779, -0.242511, 1.11 ) }
    dend_19 { pt3dadd( -0.934078, -125.687, -0.372677, 0.74 ) }
    dend_19 { pt3dadd( -0.494292, -127.098, -0.624959, 0.66 ) }
    dend_19 { pt3dadd( -0.310052, -127.834, -0.770717, 0.66 ) }
    dend_19 { pt3dadd( -0.00556588, -129.532, -1.10695, 0.66 ) }
    dend_19 { pt3dadd( 0.159793, -131.31, -1.461, 0.59 ) }
    dend_19 { pt3dadd( 0.167199, -132.336, -1.67929, 0.96 ) }
    dend_19 { pt3dadd( 0.078969, -133.61, -1.96813, 1.18 ) }
    dend_19 { pt3dadd( -0.0562858, -134.556, -2.18007, 1.03 ) }
    dend_19 { pt3dadd( -0.258377, -135.668, -2.41414, 0.88 ) }
    dend_19 { pt3dadd( -0.524153, -137.112, -2.66555, 0.74 ) }
    dend_19 { pt3dadd( -0.716169, -138.374, -2.76981, 0.59 ) }
    dend_19 { pt3dadd( -0.858306, -139.446, -2.78375, 0.59 ) }
    dend_19 { pt3dadd( -0.983802, -140.338, -2.72494, 1.4 ) }
    dend_19 { pt3dadd( -1.10371, -140.997, -2.63225, 1.4 ) }
    dend_19 { pt3dadd( -1.4347, -142.687, -2.25497, 0.88 ) }
    dend_19 { pt3dadd( -1.81656, -144.681, -1.58087, 0.66 ) }
    dend_19 { pt3dadd( -1.98556, -145.52, -1.23764, 0.88 ) }
    dend_19 { pt3dadd( -2.21286, -146.585, -0.768535, 0.88 ) }
    dend_19 { pt3dadd( -2.59578, -148.244, -0.0331625, 0.59 ) }
    dend_19 { pt3dadd( -2.87861, -149.3, 0.416338, 0.81 ) }
    dend_19 { pt3dadd( -3.41463, -151.042, 1.09272, 0.81 ) }
    dend_19 { pt3dadd( -3.69851, -151.936, 1.35436, 1.11 ) }
    dend_19 { pt3dadd( -3.91761, -152.67, 1.52574, 1.11 ) }
    dend_19 { pt3dadd( -4.1917, -153.722, 1.67948, 0.52 ) }
    dend_19 { pt3dadd( -4.40208, -154.717, 1.76296, 0.74 ) }
    dend_19 { pt3dadd( -4.56986, -155.604, 1.79066, 1.03 ) }
    dend_19 { pt3dadd( -4.66143, -156.345, 1.77191, 1.25 ) }
    dend_19 { pt3dadd( -4.69054, -157.079, 1.80241, 1.33 ) }
    dend_19 { pt3dadd( -4.64934, -158.294, 2.01469, 1.03 ) }
    dend_19 { pt3dadd( -4.48751, -159.439, 2.3517, 0.74 ) }
    dend_19 { pt3dadd( -4.25086, -160.374, 2.71336, 0.44 ) }
    dend_19 { pt3dadd( -3.9397, -161.227, 3.11062, 0.29 ) }
    dend_19 { pt3dadd( -3.34826, -162.409, 3.76743, 0.29 ) }
    dend_19 { pt3dadd( -2.49026, -163.716, 4.63252, 0.29 ) }
    dend_19 { pt3dadd( -1.96455, -164.309, 5.1054, 0.29 ) }
    dend_19 { pt3dadd( -1.44514, -164.73, 5.49113, 0.88 ) }
    dend_19 { pt3dadd( -1.0025, -165.032, 5.78839, 0.88 ) }
    dend_19 { pt3dadd( -0.259155, -165.498, 6.24698, 0.52 ) }
    dend_19 { pt3dadd( 0.0908371, -165.706, 6.4114, 0.52 ) }
    dend_19 { pt3dadd( 0.726504, -166.117, 6.69154, 0.52 ) }
    dend_19 { pt3dadd( 1.20002, -166.561, 6.95843, 0.52 ) }
    dend_19 { pt3dadd( 1.80874, -167.375, 7.29072, 0.52 ) }
    dend_19 { pt3dadd( 2.09446, -167.889, 7.42219, 0.88 ) }
    dend_19 { pt3dadd( 2.40221, -168.523, 7.51385, 0.88 ) }
    dend_19 { pt3dadd( 2.79417, -169.296, 7.54736, 1.11 ) }
    dend_19 { pt3dadd( 3.2156, -170.016, 7.5553, 0.66 ) }
    dend_19 { pt3dadd( 4.06208, -171.166, 7.52563, 0.66 ) }
    dend_19 { pt3dadd( 4.48188, -171.581, 7.51992, 0.66 ) }
    dend_19 { pt3dadd( 5.22845, -172.177, 7.55204, 0.66 ) }
    dend_19 { pt3dadd( 5.83421, -172.603, 7.60746, 0.52 ) }
    dend_19 { pt3dadd( 6.86777, -173.326, 7.68767, 0.66 ) }
    dend_19 { pt3dadd( 7.19453, -173.564, 7.74702, 0.66 ) }
    dend_19 { pt3dadd( 7.88862, -174.102, 8.00816, 0.44 ) }
    dend_19 { pt3dadd( 8.44712, -174.574, 8.32441, 0.44 ) }
    dend_19 { pt3dadd( 9.1982, -175.29, 8.89714, 0.52 ) }
    dend_19 { pt3dadd( 10.0618, -176.214, 9.74228, 0.66 ) }
    dend_19 { pt3dadd( 10.7853, -177.057, 10.545, 0.44 ) }
    dend_19 { pt3dadd( 11.55, -177.98, 11.4662, 0.81 ) }
    dend_19 { pt3dadd( 12.2674, -178.836, 12.3008, 0.52 ) }
    dend_19 { pt3dadd( 12.7478, -179.397, 12.8113, 0.74 ) }
    dend_19 { pt3dadd( 13.3457, -180.079, 13.3606, 0.29 ) }
    dend_19 { pt3dadd( 13.677, -180.449, 13.58, 0.52 ) }
    dend_19 { pt3dadd( 14.203, -181.022, 13.7279, 0.59 ) }
    dend_19 { pt3dadd( 15.2257, -182.162, 13.8926, 0.37 ) }
    dend_19 { pt3dadd( 15.9783, -182.994, 13.9301, 0.66 ) }
    dend_19 { pt3dadd( 16.4112, -183.463, 13.927, 1.03 ) }
    dend_19 { pt3dadd( 17.1097, -184.208, 13.8937, 1.03 ) }
    dend_19 { pt3dadd( 17.8746, -185.034, 13.8958, 0.74 ) }
    dend_19 { pt3dadd( 19.0893, -186.363, 14.0283, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 16.7192, -162.923, -25.4104, 0.44 ) }
    dend_13 { pt3dadd( 16.638, -163.909, -25.3747, 0.44 ) }
    dend_13 { pt3dadd( 16.575, -164.597, -25.3499, 0.81 ) }
    dend_13 { pt3dadd( 16.5187, -165.126, -25.3322, 1.18 ) }
    dend_13 { pt3dadd( 16.4371, -165.832, -25.3123, 0.74 ) }
    dend_13 { pt3dadd( 16.3508, -166.566, -25.2956, 0.44 ) }
    dend_13 { pt3dadd( 16.2735, -167.212, -25.2836, 0.96 ) }
    dend_13 { pt3dadd( 16.1912, -167.881, -25.2754, 0.96 ) }
    dend_13 { pt3dadd( 16.1094, -168.516, -25.2722, 1.18 ) }
    dend_13 { pt3dadd( 15.9533, -169.462, -25.2736, 0.74 ) }
    dend_13 { pt3dadd( 15.7601, -170.316, -25.304, 0.66 ) }
    dend_13 { pt3dadd( 15.5559, -171.008, -25.3555, 0.66 ) }
    dend_13 { pt3dadd( 15.2577, -171.871, -25.4662, 0.66 ) }
    dend_13 { pt3dadd( 15.0951, -172.295, -25.5428, 1.03 ) }
    dend_13 { pt3dadd( 14.8528, -172.88, -25.6768, 0.81 ) }
    dend_13 { pt3dadd( 14.4832, -173.809, -25.964, 0.52 ) }
    dend_13 { pt3dadd( 14.307, -174.369, -26.1415, 0.44 ) }
    dend_13 { pt3dadd( 14.1681, -175.08, -26.336, 0.37 ) }
    dend_13 { pt3dadd( 14.1342, -175.488, -26.4192, 0.66 ) }
    dend_13 { pt3dadd( 14.1192, -175.941, -26.4728, 0.66 ) }
    dend_13 { pt3dadd( 14.1276, -177.129, -26.5681, 0.44 ) }
    dend_13 { pt3dadd( 14.1336, -178.326, -26.6106, 0.44 ) }
    dend_13 { pt3dadd( 14.0991, -179.281, -26.6212, 0.66 ) }
    dend_13 { pt3dadd( 14.0143, -180.122, -26.6163, 0.81 ) }
    dend_13 { pt3dadd( 13.8463, -181.033, -26.6259, 0.96 ) }
    dend_13 { pt3dadd( 13.5504, -181.988, -26.6509, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 13.23, -182.725, -26.6828, 0.81 ) }
    dend_13 { pt3dadd( 12.9074, -183.371, -26.7532, 0.88 ) }
    dend_13 { pt3dadd( 12.6561, -183.873, -26.8332, 0.66 ) }
    dend_13 { pt3dadd( 12.3043, -184.578, -26.9695, 0.29 ) }
    dend_13 { pt3dadd( 11.8654, -185.482, -27.1547, 0.29 ) }
    dend_13 { pt3dadd( 11.6096, -186.006, -27.2526, 0.52 ) }
    dend_13 { pt3dadd( 11.2102, -186.818, -27.4127, 0.52 ) }
    dend_13 { pt3dadd( 10.8768, -187.485, -27.5422, 0.37 ) }
    dend_13 { pt3dadd( 10.5592, -188.085, -27.6547, 0.29 ) }
    dend_13 { pt3dadd( 10.245, -188.608, -27.7399, 0.29 ) }
    dend_13 { pt3dadd( 10.1057, -188.797, -27.7754, 0.88 ) }
    dend_13 { pt3dadd( 9.77443, -189.111, -27.853, 1.11 ) }
    dend_13 { pt3dadd( 9.35775, -189.382, -27.9364, 0.44 ) }
    dend_13 { pt3dadd( 8.82493, -189.642, -28.0321, 0.37 ) }
    dend_13 { pt3dadd( 8.30784, -189.848, -28.129, 0.59 ) }
    dend_13 { pt3dadd( 7.84317, -190.003, -28.2228, 0.74 ) }
    dend_13 { pt3dadd( 7.23033, -190.191, -28.3533, 0.44 ) }
    dend_13 { pt3dadd( 6.69798, -190.356, -28.4641, 0.37 ) }
    dend_13 { pt3dadd( 6.34523, -190.48, -28.5336, 0.88 ) }
    dend_13 { pt3dadd( 5.941, -190.655, -28.6033, 1.11 ) }
    dend_13 { pt3dadd( 5.65188, -190.809, -28.6411, 1.11 ) }
    dend_13 { pt3dadd( 5.35596, -190.974, -28.6638, 1.11 ) }
    dend_13 { pt3dadd( 4.62504, -191.403, -28.6971, 0.29 ) }
    dend_13 { pt3dadd( 4.14365, -191.698, -28.7172, 0.59 ) }
    dend_13 { pt3dadd( 3.82464, -191.899, -28.7281, 0.59 ) }
    dend_13 { pt3dadd( 3.04379, -192.436, -28.7442, 0.29 ) }
    dend_13 { pt3dadd( 2.56982, -192.8, -28.7445, 0.29 ) }
    dend_13 { pt3dadd( 2.20063, -193.122, -28.7404, 0.52 ) }
    dend_13 { pt3dadd( 1.77128, -193.537, -28.7344, 0.52 ) }
    dend_13 { pt3dadd( 1.54487, -193.768, -28.7305, 0.81 ) }
    dend_13 { pt3dadd( 1.16386, -194.224, -28.7255, 0.81 ) }
    dend_13 { pt3dadd( 0.790811, -194.803, -28.7235, 0.29 ) }
    dend_13 { pt3dadd( 0.36577, -195.587, -28.7182, 0.29 ) }
    dend_13 { pt3dadd( 0.133791, -196.045, -28.7091, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.7192, -162.923, -25.4104, 0.22 ) }
    dend_12 { pt3dadd( 18.0965, -163.721, -25.2752, 0.22 ) }
    dend_12 { pt3dadd( 19.5488, -164.562, -25.1327, 0.22 ) }
    dend_12 { pt3dadd( 21.3022, -165.578, -24.9605, 0.22 ) }
    dend_12 { pt3dadd( 22.5092, -166.277, -24.8421, 0.22 ) }
    dend_12 { pt3dadd( 23.7899, -167.019, -24.7163, 0.22 ) }
    dend_12 { pt3dadd( 25.1074, -167.782, -24.587, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 104.784, -14.5988, -138.31, 0.74 ) }
    dend_10 { pt3dadd( 106.848, -15.8939, -139.788, 0.74 ) }
    dend_10 { pt3dadd( 107.461, -16.293, -140.086, 0.44 ) }
    dend_10 { pt3dadd( 107.925, -16.5663, -140.267, 0.74 ) }
    dend_10 { pt3dadd( 108.66, -16.9353, -140.518, 0.52 ) }
    dend_10 { pt3dadd( 109.655, -17.337, -140.821, 0.52 ) }
    dend_10 { pt3dadd( 110.708, -17.6866, -141.162, 0.52 ) }
    dend_10 { pt3dadd( 111.52, -17.8676, -141.323, 0.52 ) }
    dend_10 { pt3dadd( 112.342, -17.9903, -141.514, 0.52 ) }
    dend_10 { pt3dadd( 113.329, -18.0379, -141.847, 0.52 ) }
    dend_10 { pt3dadd( 114.102, -17.9691, -142.199, 0.74 ) }
    dend_10 { pt3dadd( 114.858, -17.7995, -142.637, 1.03 ) }
    dend_10 { pt3dadd( 115.125, -17.7157, -142.819, 1.4 ) }
    dend_10 { pt3dadd( 115.383, -17.6267, -143.014, 1.4 ) }
    dend_10 { pt3dadd( 116.403, -17.2949, -143.837, 0.44 ) }
    dend_10 { pt3dadd( 116.811, -17.1695, -144.11, 0.74 ) }
    dend_10 { pt3dadd( 117.461, -16.984, -144.417, 0.74 ) }
    dend_10 { pt3dadd( 117.939, -16.8471, -144.55, 0.96 ) }
    dend_10 { pt3dadd( 118.421, -16.7123, -144.598, 0.96 ) }
    dend_10 { pt3dadd( 119.095, -16.5523, -144.572, 0.96 ) }
    dend_10 { pt3dadd( 120.804, -16.2555, -144.27, 0.66 ) }
    dend_10 { pt3dadd( 121.546, -16.1801, -144.072, 0.81 ) }
    dend_10 { pt3dadd( 122.007, -16.1642, -143.907, 0.81 ) }
    dend_10 { pt3dadd( 123.156, -16.1724, -143.447, 0.52 ) }
    dend_10 { pt3dadd( 124.022, -16.204, -143.094, 0.52 ) }
    dend_10 { pt3dadd( 124.967, -16.2688, -142.743, 0.52 ) }
    dend_10 { pt3dadd( 125.859, -16.3558, -142.5, 0.52 ) }
    dend_10 { pt3dadd( 126.978, -16.4624, -142.267, 0.44 ) }
    dend_10 { pt3dadd( 127.563, -16.5114, -142.214, 0.96 ) }
    dend_10 { pt3dadd( 128.142, -16.5631, -142.302, 1.11 ) }
    dend_10 { pt3dadd( 128.901, -16.6453, -142.61, 0.44 ) }
    dend_10 { pt3dadd( 129.524, -16.7804, -143.044, 0.37 ) }
    dend_10 { pt3dadd( 129.943, -16.9499, -143.454, 0.37 ) }
    dend_10 { pt3dadd( 130.572, -17.3276, -144.252, 0.66 ) }
    dend_10 { pt3dadd( 131.233, -17.8299, -145.249, 0.74 ) }
    dend_10 { pt3dadd( 131.5, -18.0592, -145.709, 0.81 ) }
    dend_10 { pt3dadd( 131.864, -18.3993, -146.429, 0.81 ) }
    dend_10 { pt3dadd( 132.313, -18.8203, -147.401, 0.66 ) }
    dend_10 { pt3dadd( 132.726, -19.1535, -148.272, 0.66 ) }
    dend_10 { pt3dadd( 133.133, -19.4246, -149.055, 0.29 ) }
    dend_10 { pt3dadd( 133.428, -19.5935, -149.567, 0.59 ) }
    dend_10 { pt3dadd( 133.753, -19.7519, -150.092, 0.74 ) }
    dend_10 { pt3dadd( 134.061, -19.8878, -150.588, 0.44 ) }
    dend_10 { pt3dadd( 134.47, -20.0453, -151.22, 0.37 ) }
    dend_10 { pt3dadd( 134.901, -20.2165, -151.854, 0.37 ) }
    dend_10 { pt3dadd( 135.337, -20.3989, -152.448, 0.59 ) }
    dend_10 { pt3dadd( 135.692, -20.5629, -152.903, 0.59 ) }
    dend_10 { pt3dadd( 136.576, -21.1139, -154.173, 0.29 ) }
    dend_10 { pt3dadd( 137.13, -21.569, -155.046, 0.29 ) }
    dend_10 { pt3dadd( 137.406, -21.8546, -155.526, 0.29 ) }
    dend_10 { pt3dadd( 137.646, -22.1255, -155.943, 0.74 ) }
    dend_10 { pt3dadd( 137.884, -22.4174, -156.364, 0.74 ) }
    dend_10 { pt3dadd( 138.849, -23.7863, -158.049, 0.37 ) }
    dend_10 { pt3dadd( 139.146, -24.2885, -158.549, 0.52 ) }
    dend_10 { pt3dadd( 139.363, -24.7551, -158.968, 0.81 ) }
    dend_10 { pt3dadd( 139.578, -25.29, -159.456, 0.37 ) }
    dend_10 { pt3dadd( 139.75, -25.7715, -159.934, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 104.784, -14.5988, -138.31, 0.88 ) }
    dend_3 { pt3dadd( 104.927, -14.4721, -139.437, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 104.996, -14.5059, -139.921, 1.25 ) }
    dend_3 { pt3dadd( 105.054, -14.5962, -140.402, 1.25 ) }
    dend_3 { pt3dadd( 105.113, -14.7392, -141.077, 0.59 ) }
    dend_3 { pt3dadd( 105.268, -15.1214, -142.882, 0.59 ) }
    dend_3 { pt3dadd( 105.425, -15.5054, -144.695, 0.96 ) }
    dend_3 { pt3dadd( 105.511, -15.776, -145.66, 1.11 ) }
    dend_3 { pt3dadd( 105.643, -16.3584, -147.408, 1.25 ) }
    dend_3 { pt3dadd( 105.707, -16.7849, -148.506, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -91.2828, 155.377, -40.0391, 0.22 ) }
    dend_84 { pt3dadd( -91.0596, 154.452, -39.2955, 0.22 ) }
    dend_84 { pt3dadd( -90.9205, 153.875, -38.8322, 0.22 ) }
    dend_84 { pt3dadd( -90.6092, 152.584, -37.7949, 0.22 ) }
    dend_84 { pt3dadd( -90.4192, 151.797, -37.162, 0.22 ) }
    dend_84 { pt3dadd( -90.256, 151.12, -36.6181, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -91.2828, 155.377, -40.0391, 0.22 ) }
    dend_83 { pt3dadd( -91.9509, 156.066, -39.6594, 0.22 ) }
    dend_83 { pt3dadd( -92.5374, 156.697, -39.3342, 0.22 ) }
    dend_83 { pt3dadd( -93.0953, 157.296, -39.0248, 0.22 ) }
    dend_83 { pt3dadd( -93.6291, 157.87, -38.7288, 0.22 ) }
    dend_83 { pt3dadd( -94.4325, 158.734, -38.2833, 0.22 ) }
    dend_83 { pt3dadd( -94.8424, 159.174, -38.056, 0.37 ) }
    dend_83 { pt3dadd( -95.2368, 159.664, -37.8168, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 137.421, 82.7686, 125.347, 0.29 ) }
    dend_77 { pt3dadd( 139.627, 89.0097, 135.408, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 137.421, 82.7686, 125.347, 0.29 ) }
    dend_76 { pt3dadd( 138.81, 90.5717, 134.023, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 157.597, 58.7015, 101.064, 0.29 ) }
    dend_74 { pt3dadd( 158.395, 68.8079, 90.0204, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 157.597, 58.7015, 101.064, 0.29 ) }
    dend_73 { pt3dadd( 152.156, 56.4443, 102.11, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 130.711, 71.5281, -27.7412, 0.37 ) }
    dend_61 { pt3dadd( 130.157, 71.6573, -28.4145, 0.37 ) }
    dend_61 { pt3dadd( 129.512, 71.7085, -29.5709, 0.66 ) }
    dend_61 { pt3dadd( 129.214, 71.6284, -30.5117, 0.29 ) }
    dend_61 { pt3dadd( 129.001, 71.5297, -31.3789, 0.29 ) }
    dend_61 { pt3dadd( 128.754, 71.4158, -32.4721, 0.29 ) }
    dend_61 { pt3dadd( 128.228, 71.2207, -34.8502, 0.29 ) }
    dend_61 { pt3dadd( 128.0, 71.0904, -35.9564, 0.81 ) }
    dend_61 { pt3dadd( 127.391, 70.6012, -39.2958, 0.44 ) }
    dend_61 { pt3dadd( 127.216, 70.4074, -40.4727, 0.96 ) }
    dend_61 { pt3dadd( 127.107, 70.2572, -41.4893, 1.18 ) }
    dend_61 { pt3dadd( 127.018, 70.0897, -42.8269, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 130.711, 71.5281, -27.7412, 0.37 ) }
    dend_60 { pt3dadd( 132.174, 71.7603, -27.7049, 0.37 ) }
    dend_60 { pt3dadd( 133.88, 72.2983, -27.6442, 0.29 ) }
    dend_60 { pt3dadd( 134.509, 72.5529, -27.6148, 0.66 ) }
    dend_60 { pt3dadd( 135.125, 72.8446, -27.5679, 0.66 ) }
    dend_60 { pt3dadd( 135.891, 73.2944, -27.5129, 0.37 ) }
    dend_60 { pt3dadd( 136.958, 73.9671, -27.4501, 0.37 ) }
    dend_60 { pt3dadd( 138.11, 74.8215, -27.3861, 0.81 ) }
    dend_60 { pt3dadd( 138.583, 75.2111, -27.3242, 1.11 ) }
    dend_60 { pt3dadd( 139.242, 75.7779, -27.1977, 1.33 ) }
    dend_60 { pt3dadd( 140.561, 77.0172, -26.8487, 0.44 ) }
    dend_60 { pt3dadd( 141.325, 77.8108, -26.5522, 0.52 ) }
    dend_60 { pt3dadd( 142.305, 78.9501, -26.0444, 1.03 ) }
    dend_60 { pt3dadd( 143.333, 80.308, -25.3807, 0.52 ) }
    dend_60 { pt3dadd( 143.808, 80.9944, -25.0065, 0.66 ) }
    dend_60 { pt3dadd( 144.277, 81.7591, -24.5499, 0.66 ) }
    dend_60 { pt3dadd( 144.917, 83.0105, -23.7389, 0.44 ) }
    dend_60 { pt3dadd( 145.185, 83.7271, -23.3297, 0.29 ) }
    dend_60 { pt3dadd( 145.477, 84.6423, -22.8916, 0.44 ) }
    dend_60 { pt3dadd( 145.863, 85.7134, -22.5003, 0.66 ) }
    dend_60 { pt3dadd( 146.252, 86.6115, -22.2255, 0.37 ) }
    dend_60 { pt3dadd( 146.747, 87.6561, -21.9716, 0.37 ) }
    dend_60 { pt3dadd( 147.551, 89.3745, -21.647, 0.29 ) }
    dend_60 { pt3dadd( 148.049, 90.4859, -21.442, 0.29 ) }
    dend_60 { pt3dadd( 148.771, 92.3727, -21.1066, 0.29 ) }
    dend_60 { pt3dadd( 149.17, 93.6687, -20.8318, 0.29 ) }
    dend_60 { pt3dadd( 149.389, 94.6776, -20.5648, 1.55 ) }
    dend_60 { pt3dadd( 149.481, 95.5116, -20.2929, 1.18 ) }
    dend_60 { pt3dadd( 149.432, 96.3917, -19.8866, 0.96 ) }
    dend_60 { pt3dadd( 149.062, 97.8078, -19.0905, 0.52 ) }
    dend_60 { pt3dadd( 148.292, 99.4322, -18.0294, 0.29 ) }
    dend_60 { pt3dadd( 147.638, 100.428, -17.328, 0.29 ) }
    dend_60 { pt3dadd( 147.284, 100.895, -16.9931, 0.29 ) }
    dend_60 { pt3dadd( 146.293, 102.172, -16.1244, 0.22 ) }
    dend_60 { pt3dadd( 145.992, 102.571, -15.8834, 0.66 ) }
    dend_60 { pt3dadd( 145.631, 103.083, -15.6125, 0.66 ) }
    dend_60 { pt3dadd( 145.046, 104.07, -15.2185, 0.37 ) }
    dend_60 { pt3dadd( 144.651, 105.07, -14.891, 0.29 ) }
    dend_60 { pt3dadd( 144.421, 106.086, -14.6549, 0.22 ) }
    dend_60 { pt3dadd( 144.317, 107.0, -14.4402, 0.22 ) }
    dend_60 { pt3dadd( 144.271, 108.397, -14.0275, 0.22 ) }
    dend_60 { pt3dadd( 144.309, 109.023, -13.8139, 0.29 ) }
    dend_60 { pt3dadd( 144.444, 109.951, -13.448, 0.29 ) }
    dend_60 { pt3dadd( 144.718, 111.33, -12.8533, 0.29 ) }
    dend_60 { pt3dadd( 145.179, 113.112, -12.0778, 0.29 ) }
    dend_60 { pt3dadd( 145.499, 114.215, -11.5778, 0.29 ) }
    dend_60 { pt3dadd( 145.806, 115.099, -11.1652, 0.29 ) }
    dend_60 { pt3dadd( 146.234, 116.25, -10.6027, 0.29 ) }
    dend_60 { pt3dadd( 146.952, 117.979, -9.71971, 0.29 ) }
    dend_60 { pt3dadd( 147.583, 119.306, -9.0442, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -20.6709, -221.831, 7.47162, 0.29 ) }
    dend_39 { pt3dadd( -21.1652, -231.12, 5.64854, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -20.6709, -221.831, 7.47162, 0.29 ) }
    dend_38 { pt3dadd( -10.736, -218.577, 12.9255, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -34.1135, -159.12, -21.8701, 0.37 ) }
    dend_26 { pt3dadd( -34.5776, -160.297, -22.2999, 0.37 ) }
    dend_26 { pt3dadd( -34.7994, -160.859, -22.5052, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -34.1135, -159.12, -21.8701, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -35.4956, -158.762, -24.7142, 0.29 ) }
    dend_25 { pt3dadd( -35.9168, -158.657, -25.5297, 0.22 ) }
    dend_25 { pt3dadd( -36.5143, -158.592, -26.5781, 0.22 ) }
    dend_25 { pt3dadd( -36.8941, -158.606, -27.1748, 1.47 ) }
    dend_25 { pt3dadd( -37.1756, -158.617, -27.6172, 1.69 ) }
    dend_25 { pt3dadd( -37.4446, -158.627, -28.0399, 1.69 ) }
    dend_25 { pt3dadd( -38.3637, -158.619, -28.9891, 0.96 ) }
    dend_25 { pt3dadd( -38.9863, -158.71, -29.7244, 0.29 ) }
    dend_25 { pt3dadd( -39.4894, -158.917, -30.3981, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 19.0893, -186.363, 14.0283, 0.29 ) }
    dend_21 { pt3dadd( 19.5089, -187.311, 12.5232, 0.29 ) }
    dend_21 { pt3dadd( 19.8748, -188.137, 11.2105, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 19.0893, -186.363, 14.0283, 0.29 ) }
    dend_20 { pt3dadd( 19.319, -184.443, 13.0166, 0.29 ) }
    dend_20 { pt3dadd( 19.4916, -183.264, 11.8427, 0.29 ) }
    dend_20 { pt3dadd( 19.5821, -182.76, 10.8134, 0.29 ) }
    dend_20 { pt3dadd( 19.6699, -182.272, 9.81466, 0.52 ) }
    dend_20 { pt3dadd( 19.9182, -180.891, 6.98992, 0.44 ) }
    dend_20 { pt3dadd( 20.0015, -180.427, 6.0421, 0.29 ) }
    dend_20 { pt3dadd( 20.0407, -180.615, 4.4477, 0.29 ) }
    dend_20 { pt3dadd( 20.0416, -180.807, 3.87295, 0.29 ) }
    dend_20 { pt3dadd( 20.0112, -175.847, -4.53739, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.133791, -196.045, -28.7091, 0.22 ) }
    dend_15 { pt3dadd( -0.013442, -197.558, -28.5601, 0.22 ) }
    dend_15 { pt3dadd( -0.163408, -199.299, -28.2942, 0.22 ) }
    dend_15 { pt3dadd( -0.303889, -201.562, -27.931, 0.22 ) }
    dend_15 { pt3dadd( -0.396439, -203.421, -27.6296, 0.22 ) }
    dend_15 { pt3dadd( -0.472428, -205.816, -27.2532, 0.22 ) }
    dend_15 { pt3dadd( -0.532709, -207.716, -26.9546, 0.22 ) }
    dend_15 { pt3dadd( -0.59152, -209.933, -26.6275, 0.22 ) }
    dend_15 { pt3dadd( -0.580144, -211.339, -26.4216, 0.37 ) }
    dend_15 { pt3dadd( -0.551508, -211.824, -26.3393, 0.37 ) }
    dend_15 { pt3dadd( -0.431626, -213.183, -26.0715, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.133791, -196.045, -28.7091, 1.55 ) }
    dend_14 { pt3dadd( -0.59925, -196.469, -28.678, 1.55 ) }
    dend_14 { pt3dadd( -1.03003, -196.776, -28.6752, 1.55 ) }
    dend_14 { pt3dadd( -1.8827, -197.409, -28.6692, 0.29 ) }
    dend_14 { pt3dadd( -3.12402, -198.335, -28.6301, 0.44 ) }
    dend_14 { pt3dadd( -3.44294, -198.543, -28.6419, 0.44 ) }
    dend_14 { pt3dadd( -4.79789, -199.262, -28.7557, 0.29 ) }
    dend_14 { pt3dadd( -5.65599, -199.648, -28.8559, 0.29 ) }
    dend_14 { pt3dadd( -6.50972, -199.979, -28.9497, 0.29 ) }
    dend_14 { pt3dadd( -7.45429, -200.276, -29.0284, 0.29 ) }
    dend_14 { pt3dadd( -9.31313, -200.683, -29.0779, 0.29 ) }
    dend_14 { pt3dadd( -10.9495, -200.871, -29.0593, 0.29 ) }
    dend_14 { pt3dadd( -11.978, -200.865, -29.0095, 0.22 ) }
    dend_14 { pt3dadd( -13.0053, -200.786, -28.9249, 0.22 ) }
    dend_14 { pt3dadd( -13.8031, -200.698, -28.8345, 0.22 ) }
    dend_14 { pt3dadd( -14.6692, -200.58, -28.6959, 0.22 ) }
    dend_14 { pt3dadd( -15.722, -200.442, -28.4051, 0.22 ) }
    dend_14 { pt3dadd( -16.5034, -200.294, -28.1558, 0.22 ) }
    dend_14 { pt3dadd( -17.0509, -200.137, -27.998, 0.52 ) }
    dend_14 { pt3dadd( -17.5399, -199.953, -27.8758, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 105.707, -16.7849, -148.506, 0.81 ) }
    dend_9 { pt3dadd( 108.083, -16.8566, -150.987, 0.81 ) }
    dend_9 { pt3dadd( 109.888, -17.0535, -152.816, 0.88 ) }
    dend_9 { pt3dadd( 111.283, -17.296, -154.311, 0.37 ) }
    dend_9 { pt3dadd( 111.688, -17.3666, -154.739, 0.37 ) }
    dend_9 { pt3dadd( 112.575, -17.5209, -155.675, 0.66 ) }
    dend_9 { pt3dadd( 113.152, -17.6213, -156.284, 0.74 ) }
    dend_9 { pt3dadd( 113.338, -17.646, -156.531, 0.74 ) }
    dend_9 { pt3dadd( 114.428, -17.997, -157.65, 0.37 ) }
    dend_9 { pt3dadd( 114.952, -18.2327, -158.219, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 105.707, -16.7849, -148.506, 0.44 ) }
    dend_4 { pt3dadd( 106.129, -16.1009, -150.527, 0.44 ) }
    dend_4 { pt3dadd( 106.427, -15.6178, -151.955, 0.44 ) }
    dend_4 { pt3dadd( 106.592, -15.3509, -152.744, 0.44 ) }
    dend_4 { pt3dadd( 106.915, -14.8264, -154.294, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 127.018, 70.0897, -42.8269, 0.96 ) }
    dend_65 { pt3dadd( 126.814, 69.5, -45.7582, 0.96 ) }
    dend_65 { pt3dadd( 126.427, 68.8425, -48.7085, 0.59 ) }
    dend_65 { pt3dadd( 126.327, 68.69, -49.4163, 0.59 ) }
    dend_65 { pt3dadd( 126.247, 68.5595, -50.0915, 0.37 ) }
    dend_65 { pt3dadd( 126.103, 68.3115, -51.6645, 0.29 ) }
    dend_65 { pt3dadd( 126.023, 68.179, -52.6833, 0.29 ) }
    dend_65 { pt3dadd( 125.955, 68.1579, -53.3553, 0.66 ) }
    dend_65 { pt3dadd( 125.875, 68.2927, -54.6297, 0.22 ) }
    dend_65 { pt3dadd( 125.874, 68.3766, -55.3995, 0.22 ) }
    dend_65 { pt3dadd( 125.885, 68.4641, -56.3813, 0.88 ) }
    dend_65 { pt3dadd( 125.88, 68.5163, -56.9795, 0.88 ) }
    dend_65 { pt3dadd( 125.791, 68.6286, -58.616, 0.37 ) }
    dend_65 { pt3dadd( 125.712, 68.6166, -59.3769, 0.96 ) }
    dend_65 { pt3dadd( 125.614, 68.5401, -60.1278, 1.11 ) }
    dend_65 { pt3dadd( 125.44, 68.3275, -61.5511, 0.44 ) }
    dend_65 { pt3dadd( 125.361, 68.1877, -62.4174, 0.37 ) }
    dend_65 { pt3dadd( 125.321, 68.0845, -63.1021, 0.52 ) }
    dend_65 { pt3dadd( 125.202, 67.6903, -66.0273, 0.37 ) }
    dend_65 { pt3dadd( 125.221, 67.5508, -67.4136, 0.96 ) }
    dend_65 { pt3dadd( 125.27, 67.4971, -68.4934, 0.96 ) }
    dend_65 { pt3dadd( 125.342, 67.4651, -69.591, 0.52 ) }
    dend_65 { pt3dadd( 125.41, 67.4158, -70.4068, 1.33 ) }
    dend_65 { pt3dadd( 125.493, 67.3238, -71.3887, 1.33 ) }
    dend_65 { pt3dadd( 125.732, 66.8943, -75.4235, 0.52 ) }
    dend_65 { pt3dadd( 125.752, 66.8409, -75.8782, 0.52 ) }
    dend_65 { pt3dadd( 125.782, 66.7089, -76.8512, 0.52 ) }
    dend_65 { pt3dadd( 125.846, 66.0491, -80.9557, 0.44 ) }
    dend_65 { pt3dadd( 125.823, 65.7366, -82.8249, 0.59 ) }
    dend_65 { pt3dadd( 125.776, 65.5763, -83.9416, 0.59 ) }
    dend_65 { pt3dadd( 125.667, 65.4756, -85.0083, 0.88 ) }
    dend_65 { pt3dadd( 125.614, 65.4661, -85.3767, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 125.462, 65.5324, -86.0244, 1.47 ) }
    dend_65 { pt3dadd( 124.947, 65.941, -87.3301, 0.29 ) }
    dend_65 { pt3dadd( 124.435, 66.409, -88.4837, 0.29 ) }
    dend_65 { pt3dadd( 124.219, 66.6106, -88.9397, 0.29 ) }
    dend_65 { pt3dadd( 123.83, 66.9857, -89.704, 0.29 ) }
    dend_65 { pt3dadd( 123.585, 67.2458, -90.1979, 0.29 ) }
    dend_65 { pt3dadd( 123.003, 67.9194, -91.3869, 0.29 ) }
    dend_65 { pt3dadd( 122.772, 68.1782, -91.8541, 0.29 ) }
    dend_65 { pt3dadd( 122.448, 68.4565, -92.4517, 0.96 ) }
    dend_65 { pt3dadd( 122.242, 68.643, -92.8741, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 127.018, 70.0897, -42.8269, 0.15 ) }
    dend_62 { pt3dadd( 127.563, 71.2982, -42.6747, 0.15 ) }
    dend_62 { pt3dadd( 127.861, 71.9603, -42.5913, 0.15 ) }
    dend_62 { pt3dadd( 128.102, 72.4924, -42.5243, 0.81 ) }
    dend_62 { pt3dadd( 128.31, 72.9543, -42.4661, 1.03 ) }
    dend_62 { pt3dadd( 128.585, 73.5631, -42.3895, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -34.7994, -160.859, -22.5052, 0.52 ) }
    dend_28 { pt3dadd( -34.9483, -161.312, -22.8172, 0.52 ) }
    dend_28 { pt3dadd( -35.1573, -162.052, -23.2383, 0.52 ) }
    dend_28 { pt3dadd( -35.44, -163.002, -23.6672, 0.37 ) }
    dend_28 { pt3dadd( -35.5722, -163.441, -23.8563, 0.52 ) }
    dend_28 { pt3dadd( -35.7533, -164.031, -24.1016, 0.44 ) }
    dend_28 { pt3dadd( -35.9643, -164.685, -24.377, 0.37 ) }
    dend_28 { pt3dadd( -36.1911, -165.351, -24.628, 0.29 ) }
    dend_28 { pt3dadd( -36.4411, -166.057, -24.8476, 0.29 ) }
    dend_28 { pt3dadd( -36.7484, -166.979, -25.1055, 1.03 ) }
    dend_28 { pt3dadd( -36.8375, -167.237, -25.1798, 1.18 ) }
    dend_28 { pt3dadd( -37.1158, -167.971, -25.4084, 0.88 ) }
    dend_28 { pt3dadd( -37.315, -168.496, -25.584, 0.44 ) }
    dend_28 { pt3dadd( -37.5374, -169.179, -25.8281, 0.37 ) }
    dend_28 { pt3dadd( -37.6193, -169.579, -25.9814, 0.59 ) }
    dend_28 { pt3dadd( -37.6495, -169.956, -26.1238, 0.44 ) }
    dend_28 { pt3dadd( -37.6149, -170.722, -26.4226, 0.44 ) }
    dend_28 { pt3dadd( -37.5334, -171.266, -26.636, 0.44 ) }
    dend_28 { pt3dadd( -37.3698, -172.101, -26.9596, 0.52 ) }
    dend_28 { pt3dadd( -37.2231, -172.878, -27.2522, 0.66 ) }
    dend_28 { pt3dadd( -37.1368, -173.524, -27.447, 0.88 ) }
    dend_28 { pt3dadd( -37.1172, -173.978, -27.534, 0.88 ) }
    dend_28 { pt3dadd( -37.1819, -174.678, -27.5656, 0.52 ) }
    dend_28 { pt3dadd( -37.3684, -175.288, -27.5053, 0.29 ) }
    dend_28 { pt3dadd( -37.7308, -176.02, -27.3459, 0.29 ) }
    dend_28 { pt3dadd( -38.2409, -176.851, -27.1622, 0.29 ) }
    dend_28 { pt3dadd( -38.6182, -177.394, -27.074, 0.96 ) }
    dend_28 { pt3dadd( -38.8629, -177.754, -27.0622, 1.18 ) }
    dend_28 { pt3dadd( -39.1064, -178.151, -27.0815, 1.18 ) }
    dend_28 { pt3dadd( -39.4679, -178.893, -27.1987, 0.59 ) }
    dend_28 { pt3dadd( -39.7276, -179.676, -27.3535, 0.52 ) }
    dend_28 { pt3dadd( -39.9081, -180.439, -27.5079, 0.52 ) }
    dend_28 { pt3dadd( -40.0971, -181.425, -27.729, 0.66 ) }
    dend_28 { pt3dadd( -40.2004, -182.079, -27.8715, 0.66 ) }
    dend_28 { pt3dadd( -40.2819, -182.786, -28.0129, 0.81 ) }
    dend_28 { pt3dadd( -40.3328, -183.815, -28.155, 0.81 ) }
    dend_28 { pt3dadd( -40.3228, -184.567, -28.1421, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -34.7994, -160.859, -22.5052, 0.37 ) }
    dend_27 { pt3dadd( -35.1724, -160.822, -21.7075, 0.37 ) }
    dend_27 { pt3dadd( -35.7096, -160.823, -20.6926, 0.37 ) }
    dend_27 { pt3dadd( -35.9841, -160.823, -20.2244, 0.37 ) }
    dend_27 { pt3dadd( -36.6296, -160.804, -19.2183, 0.29 ) }
    dend_27 { pt3dadd( -37.0307, -160.772, -18.634, 0.29 ) }
    dend_27 { pt3dadd( -37.5062, -160.734, -17.9412, 0.29 ) }
    dend_27 { pt3dadd( -37.9618, -160.717, -17.2711, 0.37 ) }
    dend_27 { pt3dadd( -38.217, -160.725, -16.9674, 0.37 ) }
    dend_27 { pt3dadd( -38.4952, -160.743, -16.6964, 0.29 ) }
    dend_27 { pt3dadd( -38.8434, -160.737, -16.4488, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 19.8748, -188.137, 11.2105, 0.22 ) }
    dend_23 { pt3dadd( 18.9927, -189.195, 11.0494, 0.22 ) }
    dend_23 { pt3dadd( 17.7217, -190.719, 10.8172, 0.22 ) }
    dend_23 { pt3dadd( 16.9992, -191.585, 10.6853, 0.29 ) }
    dend_23 { pt3dadd( 16.6054, -192.057, 10.6133, 0.29 ) }
    dend_23 { pt3dadd( 15.585, -193.281, 10.4269, 0.22 ) }
    dend_23 { pt3dadd( 14.9182, -194.08, 10.3051, 0.22 ) }
    dend_23 { pt3dadd( 9.33885, -204.455, 8.40507, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 19.8748, -188.137, 11.2105, 0.37 ) }
    dend_22 { pt3dadd( 19.6395, -189.218, 11.5956, 0.37 ) }
    dend_22 { pt3dadd( 19.3601, -190.19, 11.7898, 0.96 ) }
    dend_22 { pt3dadd( 18.9477, -191.394, 11.8659, 0.59 ) }
    dend_22 { pt3dadd( 18.6198, -192.308, 11.8134, 0.59 ) }
    dend_22 { pt3dadd( 18.2721, -193.277, 11.7577, 0.22 ) }
    dend_22 { pt3dadd( 17.9409, -194.199, 11.7047, 0.22 ) }
    dend_22 { pt3dadd( 17.5144, -195.18, 11.5348, 0.22 ) }
    dend_22 { pt3dadd( 17.1248, -196.004, 11.2556, 0.22 ) }
    dend_22 { pt3dadd( 16.6676, -196.843, 10.8235, 0.22 ) }
    dend_22 { pt3dadd( 14.6533, -205.511, 11.5205, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 106.915, -14.8264, -154.294, 0.37 ) }
    dend_6 { pt3dadd( 106.72, -15.7062, -158.762, 0.37 ) }
    dend_6 { pt3dadd( 106.675, -15.8351, -159.524, 0.66 ) }
    dend_6 { pt3dadd( 106.617, -15.9097, -160.121, 0.66 ) }
    dend_6 { pt3dadd( 106.583, -15.935, -160.408, 0.96 ) }
    dend_6 { pt3dadd( 106.482, -15.9538, -161.145, 1.11 ) }
    dend_6 { pt3dadd( 106.36, -15.921, -162.008, 1.11 ) }
    dend_6 { pt3dadd( 106.218, -15.5974, -163.08, 0.81 ) }
    dend_6 { pt3dadd( 106.118, -15.2613, -163.865, 1.4 ) }
    dend_6 { pt3dadd( 106.09, -15.1262, -164.104, 1.4 ) }
    dend_6 { pt3dadd( 106.025, -14.5205, -164.917, 0.37 ) }
    dend_6 { pt3dadd( 106.018, -14.0309, -165.392, 0.37 ) }
    dend_6 { pt3dadd( 106.069, -13.3881, -165.851, 0.37 ) }
    dend_6 { pt3dadd( 106.139, -12.841, -166.144, 0.66 ) }
    dend_6 { pt3dadd( 106.196, -12.3803, -166.35, 0.66 ) }
    dend_6 { pt3dadd( 106.217, -11.7242, -166.626, 0.29 ) }
    dend_6 { pt3dadd( 106.176, -11.2184, -166.818, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 106.112, -10.8538, -166.955, 0.52 ) }
    dend_6 { pt3dadd( 105.971, -10.2499, -167.207, 0.29 ) }
    dend_6 { pt3dadd( 105.82, -9.63157, -167.496, 1.03 ) }
    dend_6 { pt3dadd( 105.601, -8.72099, -167.993, 0.66 ) }
    dend_6 { pt3dadd( 105.466, -8.1473, -168.334, 0.44 ) }
    dend_6 { pt3dadd( 105.421, -7.94297, -168.46, 0.66 ) }
    dend_6 { pt3dadd( 105.28, -7.31503, -168.859, 0.37 ) }
    dend_6 { pt3dadd( 105.221, -6.99474, -169.055, 0.52 ) }
    dend_6 { pt3dadd( 105.14, -6.36461, -169.411, 0.37 ) }
    dend_6 { pt3dadd( 105.118, -5.91857, -169.624, 0.37 ) }
    dend_6 { pt3dadd( 105.101, -5.44182, -169.848, 0.37 ) }
    dend_6 { pt3dadd( 105.053, -4.90775, -170.086, 0.37 ) }
    dend_6 { pt3dadd( 104.98, -4.39237, -170.296, 0.96 ) }
    dend_6 { pt3dadd( 104.951, -4.17496, -170.382, 0.96 ) }
    dend_6 { pt3dadd( 104.861, -3.29819, -170.717, 0.29 ) }
    dend_6 { pt3dadd( 104.801, -2.58777, -170.999, 0.29 ) }
    dend_6 { pt3dadd( 104.756, -1.92868, -171.272, 0.29 ) }
    dend_6 { pt3dadd( 104.721, -1.3782, -171.508, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 106.915, -14.8264, -154.294, 0.52 ) }
    dend_5 { pt3dadd( 103.849, -11.5413, -158.139, 0.52 ) }
    dend_5 { pt3dadd( 103.595, -11.26, -158.437, 0.52 ) }
    dend_5 { pt3dadd( 102.38, -9.90508, -159.76, 0.37 ) }
    dend_5 { pt3dadd( 102.04, -9.52585, -160.13, 0.29 ) }
    dend_5 { pt3dadd( 101.012, -8.37858, -161.25, 0.29 ) }
    dend_5 { pt3dadd( 100.137, -7.40324, -162.202, 0.29 ) }
    dend_5 { pt3dadd( 99.3585, -6.24928, -162.777, 0.29 ) }
    dend_5 { pt3dadd( 99.014, -5.7593, -163.035, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 122.242, 68.643, -92.8741, 0.29 ) }
    dend_67 { pt3dadd( 122.044, 68.8305, -94.7854, 0.29 ) }
    dend_67 { pt3dadd( 122.027, 68.7585, -95.3387, 0.29 ) }
    dend_67 { pt3dadd( 122.034, 68.5867, -96.0979, 0.29 ) }
    dend_67 { pt3dadd( 122.059, 68.2751, -97.4665, 0.29 ) }
    dend_67 { pt3dadd( 122.062, 68.175, -97.9903, 0.44 ) }
    dend_67 { pt3dadd( 122.066, 68.039, -98.7015, 0.44 ) }
    dend_67 { pt3dadd( 122.063, 67.531, -100.764, 0.29 ) }
    dend_67 { pt3dadd( 122.087, 67.2458, -101.739, 0.29 ) }
    dend_67 { pt3dadd( 122.123, 67.0619, -102.307, 0.29 ) }
    dend_67 { pt3dadd( 122.188, 66.7785, -103.174, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 122.242, 68.643, -92.8741, 0.22 ) }
    dend_66 { pt3dadd( 121.145, 67.7249, -92.1436, 0.22 ) }
    dend_66 { pt3dadd( 120.225, 67.0546, -91.5804, 0.22 ) }
    dend_66 { pt3dadd( 119.054, 66.326, -90.895, 1.4 ) }
    dend_66 { pt3dadd( 117.742, 65.5087, -90.1262, 0.22 ) }
    dend_66 { pt3dadd( 116.277, 64.5967, -89.2684, 1.84 ) }
    dend_66 { pt3dadd( 114.994, 63.798, -88.5171, 0.22 ) }
    dend_66 { pt3dadd( 113.852, 63.2226, -87.836, 0.22 ) }
    dend_66 { pt3dadd( 112.766, 62.7553, -87.1955, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 128.585, 73.5631, -42.3895, 0.74 ) }
    dend_64 { pt3dadd( 128.644, 74.1064, -41.8066, 0.74 ) }
    dend_64 { pt3dadd( 128.697, 74.9543, -40.8481, 0.22 ) }
    dend_64 { pt3dadd( 128.676, 75.4652, -40.2621, 0.22 ) }
    dend_64 { pt3dadd( 128.546, 76.4552, -39.0837, 0.22 ) }
    dend_64 { pt3dadd( 128.405, 77.2811, -37.9843, 1.33 ) }
    dend_64 { pt3dadd( 128.344, 77.665, -37.4181, 1.33 ) }
    dend_64 { pt3dadd( 128.207, 78.3706, -36.2034, 0.22 ) }
    dend_64 { pt3dadd( 128.084, 78.8211, -35.3029, 0.22 ) }
    dend_64 { pt3dadd( 127.982, 79.0862, -34.7226, 0.22 ) }
    dend_64 { pt3dadd( 127.703, 79.6736, -33.4767, 0.22 ) }
    dend_64 { pt3dadd( 127.533, 80.0701, -32.5107, 0.22 ) }
    dend_64 { pt3dadd( 127.487, 80.3339, -31.8815, 0.37 ) }
    dend_64 { pt3dadd( 127.514, 80.6167, -31.2473, 0.37 ) }
    dend_64 { pt3dadd( 127.645, 80.9441, -30.5334, 0.37 ) }
    dend_64 { pt3dadd( 127.791, 81.2206, -30.0119, 0.15 ) }
    dend_64 { pt3dadd( 128.165, 82.0743, -28.6361, 0.22 ) }
    dend_64 { pt3dadd( 128.454, 82.8174, -27.5307, 0.22 ) }
    dend_64 { pt3dadd( 128.643, 83.3319, -26.7435, 0.22 ) }
    dend_64 { pt3dadd( 128.896, 84.2853, -25.3209, 0.22 ) }
    dend_64 { pt3dadd( 128.991, 84.9411, -24.3103, 0.22 ) }
    dend_64 { pt3dadd( 129.035, 85.7471, -23.0088, 0.22 ) }
    dend_64 { pt3dadd( 129.025, 86.0382, -22.5298, 0.74 ) }
    dend_64 { pt3dadd( 128.887, 87.1793, -20.5402, 0.29 ) }
    dend_64 { pt3dadd( 128.76, 87.8607, -19.354, 0.29 ) }
    dend_64 { pt3dadd( 128.621, 88.5423, -18.2064, 0.29 ) }
    dend_64 { pt3dadd( 128.549, 89.0072, -17.3428, 0.29 ) }
    dend_64 { pt3dadd( 128.543, 89.5086, -16.2524, 0.52 ) }
    dend_64 { pt3dadd( 128.572, 89.9256, -15.2366, 0.37 ) }
    dend_64 { pt3dadd( 128.656, 90.4477, -13.8883, 0.29 ) }
    dend_64 { pt3dadd( 128.685, 90.5688, -13.5527, 0.37 ) }
    dend_64 { pt3dadd( 128.8, 91.0405, -12.243, 0.37 ) }
    dend_64 { pt3dadd( 128.92, 91.6518, -10.4873, 0.37 ) }
    dend_64 { pt3dadd( 128.99, 92.0974, -9.11464, 0.22 ) }
    dend_64 { pt3dadd( 129.04, 92.3222, -8.34979, 0.22 ) }
    dend_64 { pt3dadd( 129.092, 92.5582, -7.52411, 0.74 ) }
    dend_64 { pt3dadd( 129.108, 92.701, -7.07147, 0.88 ) }
    dend_64 { pt3dadd( 129.107, 93.2399, -5.70881, 0.59 ) }
    dend_64 { pt3dadd( 129.003, 93.994, -4.21027, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 128.585, 73.5631, -42.3895, 0.29 ) }
    dend_63 { pt3dadd( 129.952, 74.1506, -43.1056, 0.29 ) }
    dend_63 { pt3dadd( 131.138, 74.5906, -44.0105, 0.29 ) }
    dend_63 { pt3dadd( 132.29, 74.9754, -45.0274, 1.03 ) }
    dend_63 { pt3dadd( 132.828, 75.1479, -45.5369, 1.03 ) }
    dend_63 { pt3dadd( 134.162, 75.4918, -46.7847, 0.44 ) }
    dend_63 { pt3dadd( 135.185, 75.7065, -47.6982, 0.29 ) }
    dend_63 { pt3dadd( 136.531, 75.8656, -48.9474, 0.96 ) }
    dend_63 { pt3dadd( 136.985, 75.8896, -49.3601, 0.96 ) }
    dend_63 { pt3dadd( 138.346, 75.9316, -50.4732, 0.22 ) }
    dend_63 { pt3dadd( 139.412, 75.9875, -51.2479, 0.22 ) }
    dend_63 { pt3dadd( 140.552, 76.0744, -51.9077, 0.22 ) }
    dend_63 { pt3dadd( 141.818, 76.2279, -52.5311, 0.22 ) }
    dend_63 { pt3dadd( 143.31, 76.4954, -53.1612, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 144.253, 76.7179, -53.5219, 0.52 ) }
    dend_63 { pt3dadd( 145.041, 76.9802, -53.7691, 0.29 ) }
    dend_63 { pt3dadd( 146.053, 77.4583, -53.9971, 1.03 ) }
    dend_63 { pt3dadd( 146.738, 77.8676, -54.0281, 1.03 ) }
    dend_63 { pt3dadd( 147.36, 78.3593, -53.9266, 0.88 ) }
    dend_63 { pt3dadd( 147.994, 78.9051, -53.7234, 0.66 ) }
    dend_63 { pt3dadd( 148.787, 79.6382, -53.3721, 0.37 ) }
    dend_63 { pt3dadd( 149.594, 80.4385, -52.8993, 0.59 ) }
    dend_63 { pt3dadd( 150.543, 81.4513, -52.2078, 0.29 ) }
    dend_63 { pt3dadd( 151.372, 82.3296, -51.514, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -40.3228, -184.567, -28.1421, 0.74 ) }
    dend_30 { pt3dadd( -41.0002, -185.62, -28.0579, 0.74 ) }
    dend_30 { pt3dadd( -42.1524, -187.162, -27.9714, 0.66 ) }
    dend_30 { pt3dadd( -43.0537, -188.163, -27.9677, 0.52 ) }
    dend_30 { pt3dadd( -44.3109, -189.36, -28.0508, 0.37 ) }
    dend_30 { pt3dadd( -45.0207, -190.014, -28.1258, 0.74 ) }
    dend_30 { pt3dadd( -45.6179, -190.572, -28.1703, 1.03 ) }
    dend_30 { pt3dadd( -46.4364, -191.306, -28.2323, 0.74 ) }
    dend_30 { pt3dadd( -47.6018, -192.369, -28.3242, 0.52 ) }
    dend_30 { pt3dadd( -48.7633, -193.568, -28.3983, 0.52 ) }
    dend_30 { pt3dadd( -49.5316, -194.545, -28.4386, 0.66 ) }
    dend_30 { pt3dadd( -50.5915, -196.274, -28.4731, 0.88 ) }
    dend_30 { pt3dadd( -50.8938, -196.897, -28.4814, 1.18 ) }
    dend_30 { pt3dadd( -51.2837, -197.91, -28.4868, 0.81 ) }
    dend_30 { pt3dadd( -51.7171, -199.359, -28.4922, 0.52 ) }
    dend_30 { pt3dadd( -52.0257, -200.59, -28.5464, 0.52 ) }
    dend_30 { pt3dadd( -52.3829, -202.053, -28.6922, 0.52 ) }
    dend_30 { pt3dadd( -52.5527, -202.75, -28.8131, 0.52 ) }
    dend_30 { pt3dadd( -52.9032, -204.118, -29.0789, 0.52 ) }
    dend_30 { pt3dadd( -53.2799, -205.469, -29.3674, 0.52 ) }
    dend_30 { pt3dadd( -53.6145, -206.603, -29.6514, 1.03 ) }
    dend_30 { pt3dadd( -53.8781, -207.426, -29.8751, 1.25 ) }
    dend_30 { pt3dadd( -54.2626, -208.444, -30.1975, 0.66 ) }
    dend_30 { pt3dadd( -54.7023, -209.428, -30.5698, 0.29 ) }
    dend_30 { pt3dadd( -55.3395, -210.374, -31.0918, 0.29 ) }
    dend_30 { pt3dadd( -55.7644, -210.203, -31.3864, 0.52 ) }
    dend_30 { pt3dadd( -56.8302, -209.197, -32.09, 0.29 ) }
    dend_30 { pt3dadd( -57.6469, -208.267, -32.6346, 0.29 ) }
    dend_30 { pt3dadd( -58.4941, -207.13, -33.1991, 0.22 ) }
    dend_30 { pt3dadd( -58.6493, -206.889, -33.3055, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -40.3228, -184.567, -28.1421, 0.22 ) }
    dend_29 { pt3dadd( -40.4382, -186.702, -28.8875, 0.22 ) }
    dend_29 { pt3dadd( -40.475, -187.557, -29.1899, 0.22 ) }
    dend_29 { pt3dadd( -40.5143, -189.264, -29.7354, 0.22 ) }
    dend_29 { pt3dadd( -40.5451, -191.2, -30.2964, 0.22 ) }
    dend_29 { pt3dadd( -40.5701, -192.77, -30.751, 0.22 ) }
    dend_29 { pt3dadd( -40.6185, -195.817, -31.6335, 0.22 ) }
    dend_29 { pt3dadd( -40.686, -197.121, -31.9989, 0.22 ) }
    dend_29 { pt3dadd( -40.776, -199.695, -32.7384, 0.22 ) }
    dend_29 { pt3dadd( -40.7608, -201.135, -33.141, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 104.721, -1.3782, -171.508, 0.29 ) }
    dend_8 { pt3dadd( 105.93, -1.90415, -171.977, 0.29 ) }
    dend_8 { pt3dadd( 106.625, -2.20667, -172.246, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 104.721, -1.3782, -171.508, 0.37 ) }
    dend_7 { pt3dadd( 104.782, -0.510215, -171.719, 0.37 ) }
    dend_7 { pt3dadd( 104.853, 0.511891, -171.967, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_78 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 ModelViewParmSubset_3.append()
    dend_88 ModelViewParmSubset_3.append()
    dend_79 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_85 ModelViewParmSubset_3.append()
    dend_80 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_87 ModelViewParmSubset_3.append()
    dend_86 ModelViewParmSubset_3.append()
    dend_82 ModelViewParmSubset_3.append()
    dend_81 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_84 ModelViewParmSubset_3.append()
    dend_83 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 5
    dend_50 nseg = 7
    dend_41 nseg = 7
    dend_32 nseg = 3
    dend_88 nseg = 5
    dend_69 nseg = 5
    dend_54 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 7
    dend_43 nseg = 5
    dend_42 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_80 nseg = 3
    dend_71 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 7
    dend_11 nseg = 7
    dend_2 nseg = 9
    dend_75 nseg = 3
    dend_68 nseg = 3
    dend_59 nseg = 3
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
    dend_64 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_ChC_2f130a9db3_0_0


