// Cell: dSTUT214_L5_NBC_2518b7a9e0_0_0
/*
{
  "id" : "dSTUT214_L5_NBC_2518b7a9e0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.9016, -1.97873, -2.50057, 3.38117", "-9.79478, -1.80994, -2.24302, 5.67833", "-8.68798, -1.64115, -1.98548, 7.15072", "-7.58118, -1.47235, -1.72793, 8.64399", "-6.47438, -1.30356, -1.47039, 10.0299", "-5.36758, -1.13477, -1.21284, 11.2674", "-4.26078, -0.965972, -0.955299, 11.9107", "-3.15398, -0.797179, -0.697754, 12.2563", "-2.04718, -0.628385, -0.440209, 12.5208", "-0.940378, -0.459592, -0.182664, 12.7145", "0.166423, -0.290798, 0.0748807, 12.541", "1.27322, -0.122005, 0.332426, 12.2075", "2.38002, 0.0467885, 0.589971, 11.6554", "3.48682, 0.215582, 0.847516, 11.0225", "4.59362, 0.384375, 1.10506, 10.3416", "5.70042, 0.553169, 1.36261, 9.80603", "6.80722, 0.721962, 1.62015, 9.2712", "7.91403, 0.890756, 1.8777, 8.04801", "9.02083, 1.05955, 2.13524, 5.78101", "10.1276, 1.22834, 2.39279, 3.52734", "11.2344, 1.39714, 2.65033, 2.23302" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.34928, -3.49233, -7.98898, 1.25", "7.30318, -4.1603, -8.36276, 1.25", "8.06475, -4.81086, -9.2149, 1.25", "8.67635, -5.44018, -10.1526, 0.88", "9.1827, -6.05863, -11.0584, 0.88", "9.63426, -6.71576, -11.9503, 0.88", "10.7315, -8.73331, -14.4666, 1.18", "11.3445, -10.5444, -16.66, 1.18", "11.4373, -10.9745, -17.1235, 1.69", "11.5368, -11.5597, -17.6554, 1.84", "11.7035, -12.3925, -18.2657, 1.62", "12.0674, -13.6768, -18.8988, 1.11", "12.6177, -15.0101, -19.1974, 1.11", "13.4285, -16.6311, -19.3726, 1.11", "14.1485, -17.9968, -19.4389, 1.11", "14.8813, -19.4037, -19.4414, 1.11", "15.5474, -20.8408, -19.3795, 1.11", "16.1029, -22.2745, -19.2588, 1.18", "16.3613, -23.3027, -19.157, 1.33", "16.4604, -24.9426, -19.0154, 1.25", "16.3113, -26.293, -18.9428, 0.88", "15.8805, -28.0163, -18.9478, 1.25", "15.6071, -28.7943, -19.0077, 1.55", "15.3079, -29.6311, -19.0768, 1.55", "14.9556, -30.7883, -19.171, 1.33", "14.6989, -32.0138, -19.251, 1.11", "14.5761, -33.6412, -19.28, 0.81", "14.7437, -35.5115, -19.2219, 0.59", "15.3593, -37.8224, -19.0184, 0.59", "15.9007, -38.8935, -18.8548, 0.74", "16.9068, -40.1273, -18.5808, 0.96", "17.7266, -40.8506, -18.387, 1.18", "18.3707, -41.3015, -18.2741, 1.18", "19.2409, -41.8437, -18.18, 1.18", "20.2232, -42.4876, -18.1751, 0.88", "21.2267, -43.3921, -18.2924, 0.88", "21.6779, -44.0126, -18.4361, 1.11", "22.2495, -45.1058, -18.7122, 1.11", "22.5838, -45.8982, -18.9187, 0.96", "22.8856, -46.6881, -19.1272, 1.25", "23.5257, -48.2311, -19.5675, 0.66", "23.9587, -49.0793, -19.8198, 0.66", "24.4947, -49.8128, -20.0332, 0.66", "25.1161, -50.3382, -20.2012, 0.74", "25.9969, -50.8182, -20.4318, 0.59", "27.1555, -51.3122, -20.7285, 0.88", "27.8019, -51.5706, -20.9016, 0.88", "28.4247, -51.8616, -21.079, 1.11", "29.5854, -52.5548, -21.4514, 0.66", "30.5834, -53.3717, -21.8189, 0.59", "31.3967, -54.3876, -22.1759, 0.66", "32.0024, -55.5372, -22.4589, 0.81", "32.4719, -56.7472, -22.7237, 1.4", "32.6262, -57.2725, -22.8219, 1.55", "32.8475, -58.288, -22.9673, 0.96", "33.0954, -59.6108, -23.1232, 0.52", "33.3172, -60.5895, -23.2731, 0.52", "33.6478, -61.7062, -23.4681, 0.96", "33.899, -62.4421, -23.6252, 1.03", "34.0798, -62.9367, -23.7243, 1.11", "34.2769, -63.4647, -23.8086, 1.11", "34.8077, -64.923, -24.0198, 0.52", "35.2084, -66.2355, -24.1315, 0.59", "35.5421, -67.497, -24.1544, 0.59", "35.8607, -68.7381, -24.1509, 1.18", "36.1377, -69.7383, -24.1724, 1.55", "36.3159, -70.3099, -24.2037, 1.55", "36.8643, -71.815, -24.4989, 0.81", "37.2739, -72.7298, -24.8725, 0.52", "37.7321, -73.5974, -25.389, 0.44", "38.3636, -74.7121, -26.2088, 0.81", "38.7452, -75.3647, -26.7314, 0.96", "39.7829, -77.1236, -28.1572, 0.52", "40.2109, -77.8494, -28.7505, 0.96", "40.5408, -78.4712, -29.1711, 1.25", "40.8772, -79.2085, -29.5361, 1.03", "41.2193, -80.0564, -29.8123, 0.74", "41.4285, -80.6041, -29.935, 0.74", "41.8333, -81.5962, -30.064, 0.74", "42.3046, -82.6704, -30.2501, 0.44", "42.8511, -83.872, -30.4709, 0.96", "43.1894, -84.6097, -30.606, 1.55", "43.4547, -85.2292, -30.6392, 1.69", "43.7455, -85.9558, -30.5866, 1.25", "44.2995, -87.3263, -30.4436, 0.59", "44.8565, -88.6466, -30.2838, 0.59", "45.4932, -90.0769, -30.1622, 1.25", "46.7676, -92.9051, -30.0867, 0.52", "47.417, -94.3475, -30.0992, 0.44", "48.1941, -96.085, -30.1682, 0.96", "48.5187, -96.814, -30.2213, 0.96", "49.2512, -98.3895, -30.4725, 0.52", "49.9551, -99.7873, -30.8206, 0.52", "50.7067, -101.161, -31.2984, 1.11", "51.0218, -101.735, -31.4626, 1.55", "51.3412, -102.359, -31.5731, 1.77", "51.5552, -102.776, -31.666, 1.84", "51.8616, -103.352, -31.84, 1.47", "52.3386, -104.166, -32.2264, 1.11", "52.7957, -104.913, -32.6857, 0.81", "53.4657, -106.092, -33.501, 0.44", "54.207, -107.549, -34.5727, 0.96", "54.5748, -108.371, -35.1821, 1.11", "54.8462, -109.032, -35.6887, 0.81", "55.1469, -109.823, -36.2401, 0.29", "55.4855, -110.716, -36.7091, 0.29", "55.78, -111.447, -36.8959, 0.59", "56.1775, -112.387, -36.9384, 0.88", "56.4964, -113.097, -36.8973, 1.03", "57.2044, -114.6, -36.7369, 1.03", "57.8205, -115.774, -36.5755, 0.59", "58.4962, -116.935, -36.4086, 0.59", "59.1072, -117.949, -36.2729, 0.88", "59.6444, -118.923, -36.1451, 1.25", "59.9431, -119.535, -36.0893, 1.47", "60.1132, -119.972, -36.0788, 1.47", "60.432, -121.125, -36.0721, 0.37", "60.6212, -122.312, -36.0738, 0.37", "60.6887, -123.872, -36.0998, 0.74", "60.6228, -124.841, -36.1416, 0.66", "60.4911, -126.042, -36.2003, 0.52", "60.4158, -126.62, -36.2103, 0.88", "60.3181, -127.296, -36.188, 0.88", "60.2895, -128.058, -35.9386, 0.37", "60.5442, -128.781, -35.0383, 0.37", "60.8117, -129.358, -34.1068, 0.37", "61.1708, -129.979, -33.0617, 0.37", "61.4713, -130.454, -32.2776, 0.44", "62.5939, -132.044, -29.7127, 1.18", "63.1295, -132.782, -28.618, 1.18", "63.7449, -133.627, -27.4186, 0.37", "64.1957, -134.321, -26.5658, 0.81", "64.422, -134.691, -26.1916, 0.81", "64.7452, -135.237, -25.7452, 0.81", "65.3667, -136.237, -25.1243, 0.37", "66.3487, -137.657, -24.2246, 1.33", "66.7259, -138.128, -23.8756, 1.69", "67.4595, -138.98, -23.1744, 1.25", "68.051, -139.589, -22.6482, 0.66", "68.8251, -140.274, -22.0534, 0.52", "69.6013, -140.842, -21.6117, 0.81", "69.9786, -141.124, -21.458, 0.81", "70.4016, -141.464, -21.3, 0.81", "70.9553, -141.974, -21.1149, 0.44", "71.518, -142.611, -20.9027, 0.37", "71.8175, -143.209, -20.7683, 0.37", "72.132, -144.741, -20.5706, 0.37", "72.2335, -145.523, -20.504, 0.74", "72.3171, -146.242, -20.463, 0.81", "72.385, -146.795, -20.444, 0.81", "72.5573, -147.771, -20.4428, 0.37", "72.8361, -148.773, -20.4021, 0.37", "73.4209, -150.138, -20.3096, 0.37", "73.9079, -151.057, -20.2019, 0.66", "74.2317, -151.597, -20.118, 0.81", "74.7588, -152.397, -19.9699, 0.81", "75.8093, -153.864, -19.6624, 0.52", "76.156, -154.355, -19.5574, 0.52", "76.8237, -155.474, -19.3508, 0.88", "77.051, -155.975, -19.2922, 1.18", "77.2172, -156.459, -19.285, 1.18", "77.3704, -157.118, -19.3417, 1.18", "77.463, -157.889, -19.5018, 0.96", "77.5136, -158.927, -19.8196, 0.52", "77.5776, -160.183, -20.3297, 0.52", "77.6611, -160.997, -20.7003, 0.74", "77.738, -161.475, -20.9311, 0.74", "77.9957, -162.511, -21.376, 0.52", "78.5496, -163.921, -21.8991, 0.52", "79.0911, -164.826, -22.191, 0.59", "79.8354, -165.791, -22.4437, 0.81", "80.5963, -166.657, -22.6044, 0.59", "81.7477, -167.817, -22.8275, 0.37", "82.553, -168.563, -22.9739, 0.37", "83.4021, -169.38, -23.0585, 1.11", "83.6034, -169.584, -23.0779, 1.4", "84.272, -170.251, -23.152, 1.03", "85.2241, -171.234, -23.2778, 0.52", "86.1281, -172.263, -23.4626, 0.52", "87.0307, -173.399, -23.6422, 1.18", "87.3656, -173.848, -23.7281, 1.47", "87.7026, -174.292, -23.8444, 1.47", "88.5922, -175.542, -24.2416, 0.52", "89.2503, -176.564, -24.6983, 0.88", "89.5891, -177.173, -25.0622, 0.88", "90.2139, -178.344, -26.0259, 0.59", "90.6679, -179.237, -26.8647, 1.03", "90.9962, -179.886, -27.5286, 1.03", "91.6551, -181.154, -28.9587, 0.44", "91.9161, -181.706, -29.5984, 0.44", "92.427, -183.034, -31.1008, 1.03", "92.5682, -183.574, -31.6473, 1.18", "92.6934, -184.289, -32.2867, 0.74", "92.8508, -185.587, -33.3039, 0.44", "92.8654, -186.535, -33.8193, 0.44", "92.8324, -187.582, -34.2482, 0.44", "92.7488, -189.043, -34.6336, 1.11", "92.7496, -189.603, -34.7412, 1.47", "92.829, -190.494, -34.8379, 1.47", "93.1942, -192.287, -34.8652, 0.44", "93.557, -193.395, -34.8419, 0.44", "94.0967, -194.683, -34.8001, 0.44", "94.6456, -195.85, -34.7712, 0.44", "95.0175, -196.674, -34.8003, 0.29", "95.5008, -197.853, -34.9566, 0.29", "95.7042, -198.487, -35.1254, 1.4", "95.8317, -199.202, -35.3578, 1.99", "95.9039, -200.141, -35.7018, 1.47", "95.9262, -201.651, -36.3075, 0.44", "95.9336, -202.878, -36.7458, 0.37", "95.9726, -204.035, -37.1061, 0.37", "96.0261, -205.041, -37.3623, 0.74", "96.1044, -205.748, -37.5222, 0.88", "96.2245, -206.407, -37.6384, 0.37", "96.7322, -208.337, -37.851, 0.29", "97.023, -209.149, -37.8877, 0.29", "97.3536, -209.889, -37.906, 0.96", "98.1632, -211.471, -38.0932, 0.37", "98.7306, -212.521, -38.316, 0.66", "98.9687, -212.952, -38.4486, 0.66", "99.7286, -214.354, -39.079, 0.37", "99.9366, -214.735, -39.2672, 0.81", "101.016, -216.566, -40.208, 0.37", "101.282, -216.96, -40.4321, 0.88", "101.552, -217.302, -40.6625, 0.88", "102.279, -218.071, -41.2703, 0.44", "102.776, -218.553, -41.6961, 0.44", "103.499, -219.197, -42.228, 0.81", "104.702, -220.137, -42.9984, 1.55", "105.152, -220.467, -43.2786, 1.69", "106.381, -221.356, -44.0659, 0.37", "107.245, -221.989, -44.6346, 0.37", "108.097, -222.68, -45.2555, 0.37", "109.0, -223.494, -45.9358, 0.44", "109.621, -224.098, -46.3825, 1.03", "110.094, -224.543, -46.6991, 1.4", "110.484, -224.894, -46.9297, 1.4", "111.649, -225.837, -47.5178, 0.29", "112.502, -226.556, -47.8807, 0.29", "113.18, -227.13, -48.1065, 0.29", "113.697, -227.55, -48.2486, 0.29", "114.36, -228.067, -48.3996, 0.74", "114.918, -228.486, -48.5118, 1.11", "116.077, -229.294, -48.6987, 0.52", "116.718, -229.746, -48.8057, 0.81", "117.443, -230.311, -48.933, 0.66", "118.228, -230.957, -49.1016, 0.29", "118.917, -231.507, -49.2658, 0.29", "119.847, -232.207, -49.4968, 0.29", "121.042, -233.025, -49.7887, 0.44", "121.625, -233.415, -49.9136, 0.44", "122.506, -234.001, -50.1037, 0.29", "122.954, -234.312, -50.1944, 0.59", "123.27, -234.544, -50.2625, 0.59", "123.814, -234.984, -50.4033, 0.29", "124.554, -235.61, -50.6255, 0.29", "125.238, -236.222, -50.8526, 0.59", "125.592, -236.564, -50.9725, 0.74", "125.82, -236.803, -51.06, 0.74", "126.831, -237.943, -51.4978, 0.29", "127.553, -238.827, -51.8605, 0.44", "128.008, -239.411, -52.1186, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.86928, -3.72807, 4.08102, 1.25", "7.86928, -3.72807, 4.08102, 1.25", "7.62876, -4.6212, 4.36635, 1.25", "7.23196, -6.16135, 4.79788, 1.4", "6.84329, -7.85578, 5.21111, 1.4", "6.55712, -9.453, 5.55373, 1.18", "6.34343, -11.0816, 5.86991, 1.18", "6.26089, -12.4404, 6.09434, 1.4", "6.35539, -14.3694, 6.35976, 1.4", "6.5582, -16.4517, 6.58037, 1.4", "6.84009, -18.1932, 6.70909, 1.62", "7.12217, -19.3472, 6.78724, 1.47", "7.75317, -21.1927, 6.87835, 1.03", "8.6725, -23.2037, 6.97655, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.81072, -2.96957, -6.35898, 1.18", "-9.81072, -2.96957, -6.35898, 1.18", "-10.6124, -3.90414, -6.43703, 1.18", "-11.6717, -5.35186, -6.65883, 1.11", "-12.2536, -6.25419, -6.82752, 1.18", "-12.7944, -7.21092, -7.04788, 1.03", "-13.431, -8.33703, -7.30725, 0.96", "-13.9619, -9.3637, -7.56424, 1.4", "-14.4724, -10.5858, -7.92094, 1.62", "-14.6559, -11.2206, -8.13977, 1.84", "-14.8884, -12.3318, -8.58202, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.60072, -7.20283, -1.54898, 1.4", "-3.60072, -7.20283, -1.54898, 1.4", "-4.2269, -7.94688, -1.9832, 1.11", "-5.15892, -8.89504, -2.45287, 0.96", "-5.46728, -9.16466, -2.56539, 0.96", "-6.21656, -9.7119, -2.7594, 0.66", "-6.86277, -10.1276, -2.85438, 0.66", "-7.28808, -10.3447, -2.86064, 1.03", "-8.08529, -10.6696, -2.78009, 1.33", "-8.62873, -10.886, -2.69133, 1.47", "-9.35746, -11.219, -2.59223, 1.11", "-10.0771, -11.6442, -2.5514, 0.96", "-10.8877, -12.3303, -2.62414, 0.66", "-11.4605, -13.0201, -2.78689, 0.52", "-11.8398, -13.7049, -3.05743, 0.44", "-12.1081, -14.5218, -3.48802, 0.44", "-12.3328, -15.5589, -4.11806, 1.4", "-12.407, -16.0446, -4.42774, 1.84", "-12.456, -16.4895, -4.70627, 2.14", "-12.5655, -17.5792, -5.33189, 1.99", "-12.7479, -19.273, -6.13836, 1.03", "-12.8967, -20.5023, -6.5959, 0.88", "-13.0368, -21.4253, -6.72722, 0.81", "-13.1682, -22.0863, -6.61937, 0.66", "-13.4167, -23.0913, -6.16755, 0.66", "-13.6615, -23.912, -5.58646, 0.96", "-13.7993, -24.3126, -5.21591, 1.11", "-14.6774, -26.7152, -2.88036, 0.44", "-14.9632, -27.4533, -2.19433, 1.03", "-15.0366, -27.6363, -2.04687, 1.4", "-15.2425, -28.0941, -1.76227, 1.69", "-15.4289, -28.4642, -1.64661, 1.69", "-16.127, -29.6874, -1.62649, 0.81", "-16.5554, -30.2796, -1.80699, 1.18", "-17.1146, -30.8817, -2.02343, 1.47", "-17.5043, -31.2431, -2.14185, 1.47", "-18.051, -31.7176, -2.24144, 1.4", "-18.7549, -32.3001, -2.28904, 1.11", "-19.9016, -33.2106, -2.22932, 0.52", "-20.6187, -33.8173, -2.1295, 0.52", "-21.3892, -34.6045, -1.93003, 0.52", "-22.1173, -35.6617, -1.62729, 1.18", "-22.3267, -36.1207, -1.52146, 1.55", "-22.4185, -36.4505, -1.48292, 1.69", "-22.5205, -36.9738, -1.49173, 1.92", "-22.6742, -37.8344, -1.64549, 0.74", "-22.8636, -38.9534, -1.86144, 0.44", "-23.1327, -40.4336, -2.15072, 0.44", "-23.3799, -41.6897, -2.35905, 0.44", "-23.7054, -43.1549, -2.54817, 0.74", "-23.9802, -44.1193, -2.62976, 0.52", "-24.7155, -46.1689, -2.69384, 1.03", "-24.923, -46.6857, -2.66919, 1.25", "-25.1871, -47.3527, -2.57865, 0.66", "-25.4774, -48.1742, -2.40354, 0.29", "-25.7618, -49.1623, -2.15885, 0.29", "-25.9055, -49.7625, -2.01825, 0.59", "-26.104, -50.9517, -1.79509, 0.59", "-26.145, -51.7578, -1.61232, 1.03", "-26.0826, -53.1554, -1.2959, 1.4", "-26.018, -53.7862, -1.16079, 1.77", "-25.9563, -54.3056, -1.08075, 2.14", "-25.8985, -55.1005, -1.00804, 2.36", "-25.9706, -56.2162, -1.04023, 0.74", "-26.1752, -57.0737, -1.1536, 0.44", "-26.4499, -57.7457, -1.33727, 0.44", "-26.95, -58.7406, -1.6001, 0.74", "-27.2303, -59.2454, -1.70551, 0.74", "-27.7368, -60.1282, -1.83255, 0.66", "-28.0867, -60.776, -1.84712, 0.44", "-28.3963, -61.5204, -1.76222, 0.44", "-28.7143, -62.6255, -1.53742, 0.59", "-28.8883, -63.3796, -1.33161, 0.81", "-29.0566, -63.9992, -1.15539, 0.96", "-29.2663, -64.5795, -0.984061, 0.74", "-29.5683, -65.1576, -0.843079, 0.44", "-29.9856, -65.7082, -0.739643, 0.44", "-30.5191, -66.2514, -0.717137, 0.74", "-31.508, -67.1759, -0.721985, 0.88", "-32.0194, -67.6488, -0.699834, 1.4", "-32.279, -67.9149, -0.65211, 1.4", "-32.7042, -68.4787, -0.495145, 1.18", "-32.9871, -69.0482, -0.301344, 0.81", "-33.2188, -69.924, 0.0165895, 0.52", "-33.3121, -70.7739, 0.327101, 0.52", "-33.3628, -71.9686, 0.758101, 0.74", "-33.3794, -72.81, 1.03912, 0.52", "-33.389, -73.2638, 1.17981, 1.11", "-33.4157, -73.811, 1.34323, 1.4", "-33.4554, -74.2673, 1.45454, 1.55", "-33.5373, -74.9309, 1.57907, 0.74", "-33.7434, -76.1657, 1.76517, 0.44", "-33.9347, -77.053, 1.94051, 0.81", "-34.2012, -78.0795, 2.18018, 1.11", "-34.4366, -78.811, 2.37112, 1.33", "-34.6617, -79.3839, 2.53496, 1.55", "-34.9379, -79.924, 2.72047, 1.18", "-35.6571, -80.9045, 3.20161, 0.59", "-35.9888, -81.2403, 3.42703, 0.96", "-36.3773, -81.5718, 3.68144, 1.11", "-36.7791, -81.8962, 3.94986, 1.11", "-37.5167, -82.4885, 4.44704, 0.59", "-38.3142, -83.1479, 4.97229, 0.81", "-39.0272, -83.7792, 5.41826, 0.59", "-39.7759, -84.5306, 5.88836, 0.59", "-40.5011, -85.3855, 6.33958, 0.44", "-41.0282, -86.1596, 6.61577, 0.81", "-41.3238, -86.7313, 6.72314, 0.96", "-41.5013, -87.2281, 6.74445, 0.96", "-41.6453, -87.9174, 6.70226, 0.96", "-41.7251, -88.6341, 6.62418, 0.66", "-41.7678, -90.083, 6.41376, 0.52", "-41.7539, -90.8327, 6.29936, 0.66", "-41.7188, -91.7261, 6.17867, 1.33", "-41.7015, -92.3607, 6.10766, 1.99", "-41.7343, -93.8867, 5.98522, 0.44", "-41.8281, -94.7056, 5.95681, 0.44", "-41.9621, -95.275, 5.96912, 0.74", "-42.119, -95.7224, 5.97928, 0.74", "-42.4148, -96.3582, 6.01177, 0.74", "-42.7982, -97.039, 6.05505, 0.37", "-43.3986, -97.9398, 6.12019, 0.29", "-43.8926, -98.5442, 6.18016, 0.29", "-44.493, -99.1888, 6.2573, 0.29", "-45.0293, -99.7157, 6.35711, 0.22", "-45.3294, -99.9905, 6.42692, 0.22", "-45.8153, -100.447, 6.55849, 0.81", "-46.0988, -100.735, 6.64391, 0.96", "-46.7726, -101.43, 6.8569, 0.22", "-47.3448, -102.067, 7.04191, 1.33", "-47.7194, -102.551, 7.15765, 1.55", "-48.2595, -103.339, 7.34516, 1.11", "-48.555, -103.823, 7.46705, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.23072, 4.61543, 5.70102, 1.33", "-2.23072, 4.61543, 5.70102, 1.33", "-3.18399, 5.32289, 5.70102, 1.55", "-4.15742, 5.98529, 5.70102, 1.4", "-5.24833, 6.65715, 5.70102, 1.18", "-6.03817, 7.11498, 5.70388, 1.47", "-7.09303, 7.72514, 5.74225, 1.77", "-7.85506, 8.15784, 5.80587, 1.99", "-8.69015, 8.64318, 5.94407, 1.99", "-9.68282, 9.2954, 6.21429, 1.62", "-10.8044, 10.2307, 6.68803, 1.11", "-11.505, 11.0196, 7.13474, 1.11", "-12.0225, 11.8723, 7.63896, 1.25", "-12.4343, 12.9925, 8.2997, 1.47", "-12.6101, 14.078, 8.94537, 1.69", "-12.5847, 14.9752, 9.47199, 1.92", "-12.4123, 16.0071, 10.0501, 1.77", "-12.2034, 16.7787, 10.4385, 1.4", "-11.8499, 17.7827, 10.8882, 1.18", "-11.46, 18.774, 11.2975, 1.11", "-10.8897, 20.075, 11.8168, 1.62", "-10.6194, 20.6443, 12.0372, 1.99", "-10.2115, 21.4408, 12.3378, 2.21", "-9.86384, 22.074, 12.5709, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.9007, 0.894672, -3.98898, 1.77", "-10.9491, 0.904285, -3.98898, 1.77", "-11.7346, 1.07394, -3.98898, 1.77", "-12.4551, 1.25376, -3.98898, 1.62", "-13.3115, 1.49627, -3.98898, 1.62", "-14.2108, 1.78424, -3.98898, 1.84", "-14.8466, 2.01917, -3.98898, 1.92", "-15.4521, 2.27368, -4.00489, 2.14", "-16.1627, 2.62453, -4.04218, 2.14", "-16.7825, 2.98766, -4.09776, 2.14", "-17.2989, 3.34452, -4.1828, 2.14", "-18.0669, 3.95217, -4.3613, 2.14", "-18.6848, 4.49398, -4.58019, 2.14", "-19.0493, 4.83289, -4.73164, 2.21", "-19.4602, 5.23482, -4.93496, 1.99", "-19.9653, 5.75411, -5.23194, 1.99", "-20.3985, 6.21634, -5.53333, 2.14", "-21.0692, 6.97965, -6.10201, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.2344, 1.39714, 2.65033, 3.17", "26.063, 3.65858, 2.65033, 3.17", "40.8915, 5.92002, 2.65033, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "8.6725, -23.2037, 6.97655, 1.25", "8.9771, -24.4883, 6.90693, 1.25", "8.85471, -26.1466, 6.97725, 1.03", "8.3767, -27.4675, 7.1634, 0.66", "7.95503, -28.4169, 7.33413, 0.96", "7.55243, -29.4079, 7.51238, 1.18", "7.07288, -30.844, 7.75061, 1.18", "6.76646, -31.7569, 7.88414, 1.47", "6.29571, -33.2113, 8.12155, 0.81", "6.09961, -34.1958, 8.27709, 0.81", "6.2113, -35.4438, 8.36809, 0.96", "6.60073, -36.4969, 8.38287, 0.88", "7.16844, -37.6317, 8.40966, 1.33", "7.52025, -38.3017, 8.44698, 1.55", "7.91469, -39.0651, 8.51672, 1.33", "8.25282, -39.8705, 8.63703, 0.81", "8.63671, -41.3069, 8.93599, 0.66", "8.84656, -42.7493, 9.27292, 0.96", "8.8966, -43.6945, 9.49005, 1.4", "8.89486, -44.4666, 9.65346, 1.4", "8.87888, -45.2441, 9.83656, 1.4", "8.82193, -46.5667, 10.2215, 0.96", "8.79893, -47.1852, 10.4478, 0.81", "8.7998, -48.3104, 11.0004, 0.81", "8.81775, -49.1236, 11.4736, 0.74", "8.89383, -50.7656, 12.5601, 0.74", "8.9685, -52.0126, 13.3902, 0.88", "9.05018, -53.0422, 14.0426, 0.88", "9.17759, -54.219, 14.6609, 1.47", "9.34476, -55.3605, 15.0268, 0.81", "9.59677, -56.7519, 15.1252, 0.59", "9.92102, -58.3466, 14.9876, 0.88", "10.1685, -59.4914, 14.8572, 0.88", "10.4307, -60.8516, 14.7359, 0.66", "10.6684, -62.3337, 14.6865, 0.59", "10.8064, -63.5541, 14.7857, 0.59", "10.8859, -64.8536, 15.0585, 0.59", "10.944, -66.092, 15.4889, 0.88", "10.9738, -67.4625, 16.126, 0.66", "10.9793, -68.5399, 16.7156, 1.03", "10.9624, -69.909, 17.5374, 1.25", "10.9243, -71.2641, 18.3641, 1.25", "10.8985, -72.1564, 18.8733, 1.84", "10.9027, -73.0287, 19.3388, 2.28", "10.9511, -73.7845, 19.7903, 1.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.6725, -23.2037, 6.97655, 0.74", "7.75088, -26.5558, 10.5588, 0.74", "7.69833, -27.2572, 11.6272, 0.74", "7.68187, -27.8604, 12.6626, 0.74", "7.64221, -28.83, 14.2812, 1.11", "7.62986, -29.3274, 15.0315, 1.11", "7.64111, -30.5901, 16.6726, 0.66", "7.88476, -33.1515, 19.479, 1.4", "7.95487, -34.254, 20.6547, 0.96", "7.94239, -35.1737, 21.563, 1.18", "7.82279, -36.4382, 22.6086, 0.88", "7.50994, -38.1656, 23.7382, 0.66", "7.00183, -40.1238, 24.623, 0.66", "6.66212, -41.2919, 25.0075, 0.59", "6.14106, -43.0182, 25.5498, 0.74", "5.75902, -44.1187, 25.9265, 1.03", "5.28147, -45.1637, 26.3186, 1.18", "4.51644, -46.4873, 26.8046, 1.4" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.8884, -12.3318, -8.58202, 0.81", "-16.1583, -13.5182, -8.45429, 0.81", "-16.8938, -14.3147, -8.25231, 0.88", "-17.5628, -15.1553, -7.99901, 1.03", "-18.0744, -15.9123, -7.77027, 1.03", "-18.5317, -16.7494, -7.5345, 0.52", "-18.879, -17.6705, -7.26883, 0.52", "-19.0487, -18.9128, -6.84582, 0.74", "-19.0433, -19.4393, -6.6741, 0.96", "-18.9833, -20.0694, -6.47376, 0.59", "-18.8904, -20.8802, -6.23991, 0.44", "-18.7582, -22.3996, -5.93088, 0.44", "-18.7388, -23.0294, -5.80513, 0.81", "-18.7987, -23.7637, -5.63238, 0.96", "-18.9663, -24.7612, -5.33635, 1.03", "-19.1058, -25.4139, -5.13321, 0.96", "-19.3024, -26.3059, -4.88112, 0.37", "-19.583, -27.9416, -4.49261, 0.37", "-19.6657, -28.8006, -4.30955, 0.29", "-19.6811, -29.5849, -4.18693, 0.37", "-19.6689, -30.6698, -4.0806, 0.37", "-19.6267, -31.7705, -4.01274, 0.81", "-19.5857, -32.8181, -3.99105, 1.25", "-19.5839, -33.1276, -4.00809, 1.55", "-19.6437, -34.3293, -4.07292, 0.37", "-19.8005, -35.0169, -4.08902, 0.37", "-19.9666, -35.3449, -4.07413, 0.44", "-20.4517, -36.021, -4.02377, 0.59", "-20.7823, -36.4268, -4.00374, 0.66", "-21.1965, -36.9141, -3.97961, 0.37", "-21.6753, -37.4692, -3.95785, 0.59", "-22.1719, -38.0971, -3.98318, 0.88", "-22.4538, -38.4826, -4.02538, 1.03", "-22.9266, -39.2849, -4.08249, 0.37", "-23.0705, -39.5651, -4.08358, 0.37", "-23.3301, -40.091, -4.04941, 0.37", "-23.6689, -40.78, -3.96294, 0.66", "-23.931, -41.2745, -3.87414, 0.88", "-24.8586, -42.8381, -3.54982, 0.29", "-25.2616, -43.4855, -3.41922, 0.29", "-25.6526, -44.1529, -3.3159, 0.96", "-25.8548, -44.5303, -3.27083, 1.33", "-26.2086, -45.2924, -3.2221, 1.11", "-26.5918, -46.2887, -3.1517, 0.59", "-26.9359, -47.2046, -3.17477, 0.37", "-27.1456, -48.0686, -3.01164, 0.66", "-27.252, -48.6084, -2.79668, 0.52", "-27.3694, -49.2612, -2.41349, 0.29", "-27.624, -50.7594, -1.33158, 0.29", "-27.828, -51.8524, -0.380033, 0.81", "-28.3981, -54.1954, 2.21078, 0.88", "-28.5614, -54.6695, 2.85131, 0.29", "-28.6634, -54.8904, 3.20014, 0.29", "-28.9028, -55.3003, 4.00234, 0.66", "-29.0101, -55.4655, 4.39919, 0.66", "-31.1336, -65.0967, 7.09928, 0.66", "-33.8749, -74.6141, 9.6231, 0.66", "-36.8867, -84.0421, 12.156, 0.66", "-39.1171, -93.796, 14.3141, 0.66", "-39.5248, -103.173, 18.3304, 0.66", "-38.8093, -112.711, 21.9448, 0.66", "-38.3574, -121.731, 26.6718, 0.66", "-36.1269, -131.041, 30.2557, 0.66", "-32.6615, -139.909, 33.9479, 0.66", "-27.7287, -148.492, 36.4852, 0.66", "-22.4301, -157.082, 38.1625, 0.66", "-17.3697, -165.749, 40.1446, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-14.8884, -12.3318, -8.58202, 1.03", "-14.0915, -13.2936, -9.44291, 1.03", "-12.6586, -14.7307, -10.622, 0.81", "-11.6568, -15.7698, -11.3979, 1.03", "-10.563, -17.0267, -12.2298, 0.88", "-9.76758, -18.0455, -12.8537, 1.11", "-9.14878, -18.967, -13.3834, 0.74", "-8.54429, -20.0544, -13.8986, 0.52", "-8.00721, -21.6207, -14.5217, 0.88", "-7.89385, -22.7724, -14.9936, 1.47", "-7.95039, -23.5729, -15.2899, 1.25", "-8.13648, -24.8742, -15.7164, 1.25", "-8.32371, -25.9335, -16.0252, 0.81", "-8.629, -27.6688, -16.4229, 0.66", "-8.80827, -29.2975, -16.672, 0.66", "-8.88868, -31.2653, -16.866, 0.96", "-8.8617, -32.2875, -16.9051, 1.11", "-8.78111, -33.2497, -16.8975, 1.11", "-8.62379, -34.6003, -16.8402, 0.74", "-8.43947, -36.0107, -16.7426, 0.52", "-8.33032, -37.1056, -16.673, 0.74", "-8.32174, -37.8988, -16.6674, 1.11", "-8.47408, -39.0578, -16.7082, 0.96", "-8.87116, -40.2324, -16.7826, 0.74", "-9.24686, -40.9415, -16.8302, 0.74", "-9.62259, -41.5579, -16.8425, 0.74", "-10.1368, -42.4305, -16.8243, 0.59", "-10.7329, -43.5422, -16.7716, 0.52", "-11.264, -44.7598, -16.6822, 0.52", "-11.672, -46.0165, -16.5888, 0.74", "-12.0146, -47.7376, -16.4837, 0.88", "-12.0964, -48.7735, -16.4372, 1.18", "-12.0696, -49.5634, -16.4356, 1.4", "-11.96, -50.6061, -16.4742, 1.62", "-11.8797, -51.2537, -16.5244, 1.77", "-11.7973, -52.1338, -16.6356, 1.4", "-11.7624, -53.2068, -16.8029, 0.66", "-11.8262, -54.4097, -17.0055, 0.44", "-11.991, -55.3879, -17.1727, 0.81", "-12.1829, -56.0564, -17.3178, 1.25", "-12.3108, -56.4357, -17.4361, 1.4", "-12.4453, -56.7835, -17.5882, 1.4", "-12.7587, -57.5207, -17.9557, 0.88", "-13.2691, -58.6911, -18.582, 0.59", "-13.7563, -59.8481, -19.2378, 0.59", "-14.3576, -61.3037, -20.0691, 0.88", "-14.8981, -62.667, -20.8499, 0.52", "-15.2739, -63.6914, -21.4576, 0.52", "-15.4366, -64.2398, -21.801, 1.11", "-15.5666, -64.8784, -22.2105, 1.55", "-15.6177, -65.5031, -22.5696, 1.77", "-15.5876, -66.1605, -22.905, 1.4", "-15.3501, -67.4621, -23.5235, 0.66", "-15.0187, -68.6702, -24.0862, 0.44", "-14.6752, -69.6978, -24.5303, 0.44", "-14.2284, -70.8729, -24.9914, 0.44", "-14.0262, -71.3923, -25.1665, 0.88", "-13.8541, -71.8515, -25.2738, 1.25", "-13.6709, -72.3983, -25.3482, 1.55", "-13.576, -72.8076, -25.3815, 1.55", "-13.4647, -73.6788, -25.4374, 1.25", "-13.4606, -75.167, -25.4921, 0.59", "-13.6134, -76.418, -25.5519, 0.59", "-13.7623, -77.0594, -25.5547, 0.96", "-14.0541, -77.9417, -25.5229, 0.96", "-14.4142, -78.7892, -25.4552, 0.81", "-15.1786, -80.2663, -25.264, 0.37", "-15.9847, -81.5619, -25.0417, 0.37", "-16.8063, -82.7742, -24.8019, 1.18", "-17.106, -83.2066, -24.6875, 1.62", "-17.4309, -83.6498, -24.5354, 1.62", "-17.9699, -84.3642, -24.2144, 1.33", "-18.8205, -85.459, -23.5965, 0.44", "-19.5813, -86.407, -22.9771, 0.44", "-20.1822, -87.1461, -22.5026, 0.66", "-20.8929, -88.032, -21.9396, 0.66", "-21.5886, -88.927, -21.3959, 0.44", "-22.0137, -89.5026, -21.0731, 0.81", "-22.338, -89.9647, -20.8523, 1.25", "-22.7254, -90.5275, -20.6262, 1.55", "-23.1385, -91.145, -20.4304, 1.25", "-23.6163, -91.895, -20.2338, 0.52", "-24.0934, -92.6453, -20.0754, 0.37", "-24.5653, -93.4512, -19.8529, 0.29", "-25.1679, -94.5502, -19.4357, 0.81", "-25.4627, -95.1309, -19.1391, 1.25", "-25.7289, -95.7523, -18.7226, 0.81", "-26.0424, -96.6401, -18.0394, 0.37", "-26.4337, -98.0276, -16.8956, 0.37", "-26.5793, -98.6289, -16.3901, 0.74", "-26.7701, -99.4414, -15.7305, 0.81", "-27.046, -100.517, -14.8889, 0.29", "-27.2167, -101.171, -14.4222, 0.88", "-27.3024, -101.529, -14.2241, 1.18", "-27.4627, -102.232, -14.0175, 1.18", "-27.6321, -102.985, -13.9178, 0.81", "-27.9028, -104.15, -13.9033, 0.29", "-28.1391, -105.126, -13.9574, 0.29", "-28.3118, -105.943, -14.0047, 0.29", "-28.4062, -106.5, -14.0568, 0.66", "-28.493, -107.197, -14.138, 0.96", "-28.5774, -107.966, -14.2667, 0.96", "-28.6775, -108.814, -14.4415, 0.52", "-28.8628, -110.021, -14.7158, 0.37", "-29.0001, -110.837, -14.9451, 0.74", "-29.1592, -111.714, -15.23, 0.44", "-29.3408, -112.575, -15.5402, 1.11", "-29.4801, -113.098, -15.741, 1.11", "-29.7063, -113.7, -15.9714, 0.81", "-30.3059, -115.045, -16.4341, 0.37", "-30.6919, -115.802, -16.6178, 0.66", "-30.8918, -116.154, -16.6791, 0.96", "-31.2175, -116.73, -16.6857, 0.96", "-31.7444, -117.789, -16.3406, 0.29", "-31.9441, -118.449, -15.5956, 0.29", "-32.0068, -118.948, -14.8116, 0.96", "-31.9974, -119.19, -14.3663, 1.25", "-31.9292, -119.902, -12.9615, 0.44", "-31.7128, -121.201, -10.1779, 0.81", "-31.2446, -123.081, -5.72531, 0.22", "-31.0724, -123.646, -4.25132, 1.18", "-30.851, -124.197, -2.72227, 1.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-48.555, -103.823, 7.46705, 0.29", "-46.5342, -104.619, 7.60955, 0.29", "-45.0074, -105.221, 7.71721, 0.29", "-43.1607, -105.949, 7.84742, 0.29", "-41.7191, -106.517, 7.94907, 0.15", "-40.5903, -106.962, 8.02867, 0.29", "-39.9677, -107.207, 8.07257, 0.29", "-28.5355, -113.03, 7.56677, 0.29", "-18.178, -120.662, 8.25886, 0.29", "-7.85508, -128.342, 7.54541, 0.29", "1.8198, -136.74, 9.11367, 0.29", "10.7962, -146.057, 9.17982, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-48.555, -103.823, 7.46705, 0.29", "-49.4145, -104.642, 7.5832, 0.29", "-50.2912, -105.456, 7.69912, 0.29", "-51.1783, -106.28, 7.81642, 0.29", "-52.2413, -107.266, 7.95697, 0.29", "-52.8394, -107.822, 8.03606, 0.29", "-53.4668, -108.404, 8.11902, 0.81", "-53.889, -108.738, 8.16208, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-9.86384, 22.074, 12.5709, 0.66", "-12.8138, 23.6863, 12.9254, 0.66", "-14.3313, 24.4794, 13.0607, 0.66", "-15.7551, 25.194, 13.0925, 0.59", "-16.9011, 25.771, 13.1246, 1.11", "-17.6869, 26.1695, 13.229, 1.4", "-18.2357, 26.4681, 13.3478, 1.4", "-19.2374, 27.0643, 13.6267, 0.66", "-20.0262, 27.7377, 14.2116, 0.44", "-20.6122, 28.4413, 14.9719, 0.44", "-21.6586, 30.0924, 16.7878, 0.74", "-22.2609, 31.1564, 17.8848, 0.52", "-22.6462, 31.7978, 18.4715, 0.44", "-23.1265, 32.556, 19.0838, 0.74", "-23.7387, 33.3559, 19.6625, 0.74", "-24.2747, 33.898, 19.9477, 0.74", "-24.9915, 34.4544, 20.2227, 0.29", "-26.3837, 35.2338, 20.9999, 0.29", "-26.6417, 35.3605, 21.1883, 0.81", "-27.4436, 35.7484, 21.869, 0.81", "-28.2152, 36.175, 22.5843, 0.74", "-29.356, 36.8839, 23.6867, 0.81", "-31.5968, 38.4614, 25.9144, 1.69", "-33.0177, 39.5878, 27.2996, 0.52", "-33.5477, 40.0518, 27.8143, 0.59", "-34.5764, 41.0116, 28.7506, 0.59", "-35.2809, 41.6744, 29.3464, 0.66", "-35.8259, 42.2003, 29.7272, 1.03", "-36.3416, 42.6764, 29.9974, 1.03", "-37.8245, 43.8214, 30.7501, 0.81", "-38.6429, 44.3981, 31.1801, 0.59", "-39.8333, 45.2049, 31.8012, 0.52", "-40.5931, 45.7823, 32.191, 0.52", "-41.489, 46.5902, 32.6295, 0.59", "-42.1451, 47.2387, 32.9369, 0.88", "-42.7024, 47.9262, 33.1362, 1.03", "-43.3189, 48.8927, 33.3557, 0.59", "-43.7562, 49.7696, 33.4747, 0.52", "-44.0842, 50.5565, 33.5654, 0.81", "-51.8251, 59.614, 38.8005, 0.81", "-60.1503, 67.5041, 44.8723, 0.81", "-67.827, 75.3097, 51.8386, 0.81", "-73.7254, 83.3669, 60.1409, 0.81", "-79.852, 92.2322, 67.4309, 0.81", "-85.409, 100.313, 75.9446, 0.81", "-89.295, 108.635, 85.1396, 0.81", "-90.9935, 115.741, 95.848, 0.81", "-91.8863, 123.064, 106.516, 0.81", "-93.9282, 130.795, 116.741, 0.81", "-97.0452, 138.432, 126.759, 0.81" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.86384, 22.074, 12.5709, 1.11", "-9.08687, 23.6995, 12.2198, 1.11", "-8.45525, 25.5474, 11.7766, 0.81", "-8.04123, 27.5522, 11.162, 0.74", "-7.93424, 28.5961, 10.807, 1.11", "-7.90735, 29.5552, 10.4888, 1.18", "-7.9352, 31.0114, 10.0421, 1.47", "-8.05692, 32.0828, 9.70518, 1.47", "-8.34961, 33.9476, 9.16193, 1.18", "-8.62568, 35.7906, 8.73601, 0.96", "-8.78588, 37.3705, 8.45308, 1.03", "-8.83374, 38.9883, 8.23442, 1.4", "-8.74178, 40.7735, 8.08557, 1.4", "-8.41838, 42.798, 8.01631, 1.03", "-7.95803, 44.4342, 8.04002, 1.03", "-7.43049, 45.8182, 8.09362, 1.25", "-6.49798, 47.7779, 8.12231, 1.11", "-5.72957, 49.2147, 8.1127, 1.11", "-4.68216, 51.0935, 7.97516, 1.11", "-3.48076, 53.2422, 7.63845, 1.11", "-2.69894, 54.7337, 7.26795, 1.11", "-1.73107, 56.8411, 6.53913, 1.33", "-1.31981, 58.1507, 5.92219, 1.03", "-1.01665, 60.4204, 4.55513, 1.18", "-1.08038, 61.2952, 3.9421, 1.47", "-1.33789, 62.202, 3.27857, 1.47", "-1.71971, 63.0003, 2.73249, 1.69", "-3.11447, 65.0899, 1.58685, 0.88", "-4.07274, 66.3435, 1.08368, 1.11", "-5.01454, 67.5667, 0.883084, 1.11", "-6.00873, 68.9951, 0.877695, 0.96", "-6.86066, 70.4894, 1.07619, 0.88", "-7.58292, 72.2197, 1.4804, 1.18", "-8.06179, 73.8858, 2.01513, 1.47", "-8.51137, 76.3654, 2.90849, 1.4", "-8.66399, 78.0546, 3.53338, 0.88", "-8.70991, 80.3186, 4.33681, 0.81", "-8.62339, 82.4781, 5.09848, 1.69", "-8.53618, 83.4024, 5.43753, 1.99", "-8.41066, 84.3925, 5.79647, 1.99", "-8.313, 85.1912, 6.03793, 2.21", "-8.192, 86.6813, 6.53376, 1.99" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-21.0692, 6.97965, -6.10201, 1.4", "-21.2528, 9.04435, -6.4728, 1.4", "-21.0979, 10.0899, -7.28278, 1.4", "-20.9813, 10.7874, -7.85295, 1.33", "-20.81, 12.2256, -8.97089, 1.62", "-20.7279, 13.4476, -9.8209, 1.25", "-20.6892, 16.061, -11.4356, 1.03", "-20.801, 19.381, -13.5694, 1.4", "-20.892, 20.3262, -14.1182, 1.4", "-21.0874, 21.3837, -14.6362, 1.11", "-21.4564, 22.6455, -15.0594, 1.33", "-21.894, 23.6646, -15.295, 1.69", "-22.5186, 24.6858, -15.4393, 1.69", "-23.0506, 25.4039, -15.5429, 1.69", "-24.1328, 26.9453, -15.9938, 0.74", "-24.5418, 27.6196, -16.258, 0.74", "-25.0235, 28.5939, -16.738, 0.59", "-25.6579, 30.2492, -17.6001, 1.18", "-26.0443, 31.7254, -18.4339, 1.18", "-26.3005, 33.1318, -19.2229, 1.18", "-26.4032, 34.1811, -19.7949, 1.18", "-26.4266, 35.8619, -20.733, 0.81", "-26.418, 36.8507, -21.2608, 0.66", "-26.4364, 39.4268, -22.5581, 0.66", "-26.4775, 39.9486, -22.8138, 1.25", "-26.7974, 41.6119, -23.6005, 1.47", "-27.4483, 43.3776, -24.3826, 0.59", "-28.316, 44.9386, -24.9081, 1.03", "-28.8662, 45.7173, -25.0847, 1.4", "-29.402, 46.3626, -25.1404, 1.47", "-30.3877, 47.5467, -25.1588, 1.11", "-31.4923, 48.9305, -25.0151, 0.81", "-32.2806, 50.2173, -24.8419, 0.96", "-32.5712, 51.2138, -24.7343, 1.25", "-32.6706, 52.0447, -24.6527, 1.55", "-32.718, 53.1432, -24.5491, 1.55", "-32.7187, 54.3615, -24.4355, 0.96", "-32.7292, 56.1658, -24.2738, 0.66", "-32.8673, 57.4134, -24.1765, 0.66", "-33.1434, 58.2001, -24.1088, 0.74", "-33.897, 59.2742, -24.0574, 1.03", "-34.5496, 59.8861, -24.0778, 1.47", "-35.0347, 60.2639, -24.1273, 1.77", "-35.6398, 60.6986, -24.2227, 1.62", "-37.0335, 61.7631, -24.5376, 0.88", "-38.0283, 62.6318, -24.8046, 0.66", "-39.0749, 63.7249, -25.1163, 0.59", "-39.9766, 64.8815, -25.3872, 0.81", "-40.4782, 65.704, -25.5148, 0.59", "-41.0215, 66.881, -25.5988, 0.81", "-41.2654, 67.6015, -25.5805, 1.03", "-41.4803, 68.3274, -25.493, 1.03", "-41.7214, 69.1526, -25.2992, 0.74", "-42.0526, 70.1464, -24.9573, 0.52", "-42.3172, 70.825, -24.6794, 0.52", "-42.7545, 71.7537, -24.2789, 1.11", "-43.1605, 72.4807, -23.9713, 1.4", "-43.8176, 73.5511, -23.5382, 1.4", "-44.2039, 74.1968, -23.2881, 1.03", "-44.4859, 74.7522, -23.0969, 0.74", "-44.8595, 75.7513, -22.8192, 0.59", "-45.0059, 76.4489, -22.6882, 0.52", "-45.0839, 77.375, -22.59, 0.52", "-45.1031, 78.7458, -22.5588, 0.52", "-45.0916, 79.8068, -22.5653, 0.52", "-45.0715, 80.7086, -22.6401, 0.52", "-45.0749, 81.6, -22.8175, 0.52", "-45.1602, 82.1519, -22.9862, 0.52", "-45.3957, 82.7048, -23.2329, 0.81", "-45.8076, 83.223, -23.5324, 0.96", "-46.6703, 83.938, -24.029, 0.96", "-47.512, 84.4867, -24.4339, 0.52", "-48.4699, 85.0577, -24.856, 0.81", "-48.949, 85.3578, -25.0652, 1.18", "-49.4665, 85.7236, -25.282, 1.18", "-50.3398, 86.4855, -25.5916, 0.44", "-50.8699, 87.1115, -25.7333, 0.44", "-51.2648, 87.8605, -25.823, 0.74", "-51.4499, 88.6099, -25.8978, 0.74", "-51.5223, 89.2923, -25.9395, 0.44", "-51.5588, 90.4117, -25.9577, 0.66", "-51.5466, 91.5702, -25.9307, 0.96", "-51.5352, 92.4604, -25.8973, 0.74", "-51.5684, 93.8311, -25.8163, 0.37", "-51.6534, 94.9206, -25.7158, 0.37", "-51.817, 95.9489, -25.5958, 0.88", "-51.9471, 96.3734, -25.5192, 1.18", "-52.26, 96.8764, -25.3873, 1.18", "-52.7198, 97.3351, -25.2768, 1.18", "-53.178, 97.7151, -25.184, 1.11", "-53.7239, 98.1605, -25.087, 0.44", "-54.5815, 98.9023, -24.9323, 0.44", "-55.978, 100.227, -24.6552, 0.44", "-56.9157, 101.214, -24.4724, 0.44", "-57.8371, 102.297, -24.2864, 0.44", "-58.4108, 103.11, -24.1846, 0.44", "-58.8807, 103.95, -24.1015, 1.47", "-59.179, 104.682, -24.0583, 1.47", "-59.4788, 105.684, -24.0353, 1.18", "-59.7527, 106.706, -24.1192, 0.66", "-60.015, 108.119, -24.5257, 0.44", "-60.0912, 108.972, -24.8513, 0.59", "-60.0921, 110.079, -25.3863, 0.59", "-60.0341, 111.045, -25.923, 0.74", "-59.8362, 112.835, -27.095, 1.25", "-59.5205, 115.3, -28.9116, 0.66", "-59.395, 116.377, -29.7763, 0.66", "-59.2256, 117.921, -31.0827, 1.25", "-59.1565, 118.712, -31.7436, 1.62", "-59.0081, 121.342, -33.792, 1.4", "-58.963, 122.446, -34.5823, 1.11", "-58.9479, 123.874, -35.5449, 1.25", "-58.9196, 125.158, -36.3619, 0.96", "-58.8664, 126.19, -36.8971, 1.18", "-58.7879, 127.347, -37.383, 1.4", "-58.7102, 128.73, -37.8243, 0.37", "-58.664, 129.898, -38.2423, 0.37", "-58.6275, 130.955, -38.6594, 0.88", "-58.6189, 131.814, -39.0499, 0.88", "-58.6131, 132.674, -39.4994, 0.88", "-58.6375, 134.236, -40.4244, 0.37", "-58.7828, 136.051, -41.5163, 1.03", "-58.8924, 136.927, -42.107, 1.03", "-58.9825, 137.461, -42.5315, 1.03", "-59.2924, 138.786, -43.727, 0.29", "-59.5881, 140.02, -44.9074, 0.29", "-59.8515, 141.09, -45.9873, 0.29", "-60.2201, 142.455, -47.4141, 1.25", "-60.7246, 144.027, -49.1213, 1.25", "-61.1476, 145.232, -50.4799, 0.96", "-61.7167, 146.764, -52.1651, 0.37", "-61.8815, 147.283, -52.6798, 0.66", "-62.0723, 148.008, -53.3707, 1.03", "-62.2457, 148.912, -54.1, 1.03", "-62.4864, 150.881, -55.455, 0.52", "-62.5715, 151.806, -56.0169, 1.03", "-62.8207, 152.905, -56.6596, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-21.0692, 6.97965, -6.10201, 0.74", "-22.1939, 6.20751, -6.01794, 0.74", "-23.2732, 5.35792, -5.94558, 0.74", "-24.3719, 4.49299, -5.87191, 1.03", "-25.089, 3.92843, -5.82383, 1.4", "-26.1452, 3.09703, -5.75302, 1.84", "-26.828, 2.55947, -5.70724, 2.14", "-27.2924, 2.05246, -5.66947, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.8915, 5.92002, 2.65033, 0.29", "55.72, 8.18146, 2.65033, 0.29", "70.5486, 10.4429, 2.65033, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "10.9511, -73.7845, 19.7903, 0.52", "11.1605, -72.1823, 20.7492, 0.52", "11.2422, -71.5578, 21.1229, 0.52", "11.3456, -70.7663, 21.5966, 1.25", "11.3954, -70.3852, 21.8248, 1.4", "11.4884, -69.6736, 22.2506, 0.37", "11.5461, -69.2321, 22.5148, 0.29", "11.9893, -62.7402, 25.1883, 0.29", "11.1331, -56.2729, 27.809, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "10.9511, -73.7845, 19.7903, 0.66", "11.6405, -75.0998, 19.4479, 0.66", "12.3133, -76.254, 19.1531, 0.59", "13.1738, -77.7311, 18.8085, 0.59", "13.5778, -78.4432, 18.6718, 0.88", "14.038, -79.3035, 18.5357, 0.88", "14.5675, -80.4537, 18.3654, 0.52", "14.9423, -81.4378, 18.2369, 0.52", "15.1105, -82.1268, 18.2169, 1.11", "15.1073, -82.894, 18.2852, 1.47", "14.9734, -83.4587, 18.3979, 1.18", "14.3658, -84.6467, 18.8018, 0.59", "13.9171, -85.2495, 19.1421, 0.59", "13.3778, -85.8548, 19.633, 0.37", "13.1129, -86.1595, 19.9339, 0.59", "12.8246, -86.5454, 20.3443, 0.59", "12.4303, -87.3386, 21.1741, 0.44", "12.2808, -88.5122, 22.2262, 0.37", "12.4329, -89.2943, 22.7073, 0.66", "12.7719, -90.1565, 23.0788, 0.96", "13.1744, -90.9309, 23.333, 0.74", "13.7651, -91.8964, 23.5463, 0.52", "14.5549, -93.0585, 23.682, 0.81", "15.1584, -93.8997, 23.6951, 0.96", "15.5799, -94.478, 23.6853, 1.03", "16.213, -95.3997, 23.6478, 0.81", "16.7564, -96.2529, 23.5925, 0.74", "17.1513, -96.9, 23.5135, 1.11", "17.518, -97.5382, 23.3737, 1.11", "17.9877, -98.4167, 23.1118, 0.81", "18.3718, -99.1964, 22.8394, 0.52", "18.6306, -99.8397, 22.6253, 0.74", "18.8681, -100.563, 22.452, 0.74", "19.1196, -101.53, 22.3105, 0.52", "19.2531, -102.218, 22.2752, 0.81", "19.3562, -102.789, 22.2748, 0.81", "19.6263, -104.036, 22.3572, 0.59", "19.8692, -104.926, 22.4472, 0.81", "20.1394, -105.649, 22.5804, 0.81", "20.5549, -106.517, 22.7993, 0.44", "21.0567, -107.367, 23.0471, 0.81", "21.7062, -108.28, 23.3078, 0.66", "22.4307, -109.15, 23.5079, 0.29", "23.6822, -110.609, 23.73, 0.74", "24.1414, -111.149, 23.7848, 1.25", "24.5441, -111.621, 23.8306, 1.25", "25.4144, -112.732, 23.9375, 0.37", "26.1108, -113.749, 23.9811, 0.37", "26.8221, -114.859, 23.958, 0.37", "27.1629, -115.46, 23.8455, 0.37" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "4.51644, -46.4873, 26.8046, 0.44", "5.15955, -46.1241, 28.4776, 0.44", "5.4732, -45.9471, 29.2936, 0.29", "5.88529, -45.7144, 30.3657, 0.52", "6.09873, -45.5938, 30.9209, 0.74", "6.20424, -45.5343, 31.1954, 0.74", "9.88665, -43.5282, 39.2305, 0.74", "14.6881, -40.4739, 46.2914, 0.74", "18.9029, -38.9505, 54.166, 0.74", "22.8722, -36.7737, 62.0185, 0.74", "26.7128, -35.0867, 70.0507, 0.74", "31.8576, -34.325, 77.4696, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "4.51644, -46.4873, 26.8046, 0.44", "4.04278, -47.7779, 27.4693, 0.44", "3.76247, -48.5415, 27.8626, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-17.3697, -165.749, 40.1446, 0.29", "-14.3983, -171.031, 39.2291, 0.29", "-11.376, -175.969, 37.2145, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-17.3697, -165.749, 40.1446, 0.22", "-25.0777, -172.941, 46.2459, 0.29", "-34.0562, -179.932, 50.6038, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "10.7962, -146.057, 9.17982, 0.37", "18.2963, -151.373, 9.612, 0.37", "26.6241, -155.178, 10.0599, 0.37", "35.0649, -158.628, 10.933, 0.37", "42.8962, -163.383, 10.2308, 0.37", "50.5853, -168.219, 8.82642, 0.37", "57.3787, -174.238, 7.17817, 0.37", "63.9483, -180.663, 6.22753, 0.37", "69.8941, -187.744, 6.73911, 0.37", "75.3687, -195.201, 7.39983, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.7962, -146.057, 9.17982, 0.22", "20.6663, -153.06, 9.10867, 0.37", "31.079, -158.795, 7.00327, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-53.889, -108.738, 8.16208, 0.22", "-53.8572, -110.391, 7.48089, 0.22", "-53.8328, -111.66, 6.95829, 0.22", "-53.814, -112.635, 6.55656, 0.37", "-53.7857, -114.107, 5.95001, 0.37", "-51.6439, -125.973, 2.15221, 0.37", "-48.4862, -137.258, -2.5317, 0.37", "-46.2938, -148.804, -7.16713, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-53.889, -108.738, 8.16208, 0.22", "-54.7436, -110.2, 8.83628, 0.22", "-54.7855, -110.255, 8.86645, 0.44", "-55.2837, -110.775, 9.14827, 0.15", "-55.4627, -110.932, 9.22782, 0.37", "-56.0554, -111.424, 9.45655, 0.15", "-56.813, -112.043, 9.68218, 0.22", "-57.466, -112.535, 9.87654, 0.22", "-57.9959, -112.997, 10.1611, 0.66", "-58.652, -113.555, 10.5479, 0.22", "-58.9008, -113.771, 10.7092, 0.88", "-59.4307, -114.274, 11.1196, 0.74", "-60.3909, -115.49, 12.1024, 1.4", "-60.9285, -116.648, 13.2118, 1.18", "-65.629, -123.16, 18.1796, 1.18", "-69.4325, -130.052, 23.4168, 1.18", "-74.4777, -136.169, 28.524, 1.18", "-80.0843, -142.757, 32.3246, 1.18", "-84.876, -149.5, 36.8981, 1.18", "-90.1215, -155.456, 41.985, 1.18", "-94.5301, -161.809, 47.3946, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-97.0452, 138.432, 126.759, 0.37", "-101.27, 143.979, 132.076, 0.37", "-106.4, 147.929, 137.926, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-97.0452, 138.432, 126.759, 0.29", "-102.28, 145.602, 133.959, 0.37", "-106.972, 153.241, 141.072, 0.37", "-111.449, 159.233, 149.669, 0.37", "-115.079, 166.425, 157.773, 0.37", "-118.484, 171.623, 167.3, 0.37", "-121.803, 177.383, 176.545, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.192, 86.6813, 6.53376, 0.96", "-7.90795, 88.802, 6.23151, 0.96", "-7.80234, 90.1864, 5.9455, 0.81", "-7.79011, 91.2931, 5.68529, 0.81", "-7.79393, 92.4574, 5.29858, 1.18", "-7.80744, 95.0695, 4.35023, 1.18", "-7.80809, 95.7327, 4.1116, 1.18", "-7.82999, 96.7586, 3.68037, 0.81", "-7.85374, 97.5851, 3.38523, 0.81", "-7.91125, 99.6114, 3.01991, 0.66", "-7.93483, 100.667, 3.13173, 0.96", "-7.9465, 101.652, 3.52602, 1.11", "-7.94673, 102.631, 4.10456, 0.81", "-7.922, 104.234, 5.24957, 0.59", "-7.85977, 105.9, 6.5024, 0.81", "-7.79936, 107.296, 7.57373, 1.11", "-7.71956, 108.336, 8.25944, 1.25", "-7.56273, 109.97, 9.12814, 0.59", "-7.46401, 110.817, 9.39884, 0.59", "-7.25915, 112.531, 9.36003, 0.59", "-7.17386, 113.573, 8.96866, 0.44", "-7.07181, 115.421, 7.87509, 1.11", "-7.05016, 115.968, 7.48297, 1.4", "-6.98543, 117.364, 6.3767, 0.88", "-6.94689, 118.454, 5.52826, 0.52", "-6.92016, 119.309, 4.93596, 0.52", "-6.77275, 120.389, 4.36401, 0.74", "-6.50379, 121.174, 4.18142, 1.11", "-6.00076, 122.064, 4.19395, 1.33", "-5.62958, 122.551, 4.30248, 1.62", "-5.03402, 123.161, 4.5178, 1.47", "-3.90354, 124.123, 4.96506, 0.96", "-3.1252, 124.717, 5.27238, 0.81", "-2.35626, 125.308, 5.58398, 0.81", "-1.48807, 126.019, 5.94972, 0.66", "-0.624243, 126.816, 6.2971, 0.59", "-0.12161, 127.373, 6.4716, 0.59", "0.499702, 128.224, 6.65296, 0.44", "1.07959, 129.205, 6.7946, 0.81", "1.61206, 130.264, 6.8693, 0.81", "2.17471, 131.501, 6.90265, 1.03", "2.76437, 132.774, 6.82344, 1.25", "3.06053, 133.355, 6.71091, 1.25", "3.51631, 134.054, 6.40054, 1.18", "4.30358, 135.087, 5.78665, 0.66", "4.725, 135.625, 5.4738, 0.59", "5.90864, 137.147, 4.65931, 1.25", "6.86157, 138.412, 4.09054, 1.99", "8.92595, 141.414, 3.10204, 0.59", "9.44164, 142.267, 2.94933, 0.66", "10.615, 144.669, 2.96678, 0.52", "10.9954, 145.646, 3.14225, 1.03", "11.3462, 146.806, 3.53068, 1.25", "11.6787, 148.147, 4.08645, 0.74", "11.8781, 149.147, 4.53105, 0.59", "12.067, 149.995, 4.80015, 0.59", "12.4184, 151.184, 5.02818, 0.88", "12.7971, 152.165, 5.18817, 1.11", "13.2043, 152.979, 5.30604, 1.11", "13.7786, 153.914, 5.45508, 1.03", "14.6969, 155.141, 5.70941, 0.66", "15.5144, 155.996, 5.95483, 0.66", "16.8712, 157.085, 6.40357, 0.96", "17.9118, 157.74, 6.71, 1.4", "18.5311, 158.078, 6.87189, 1.4", "19.2473, 158.434, 7.02236, 1.4", "20.3474, 158.98, 7.15516, 0.74", "21.4362, 159.641, 7.0839, 0.37", "22.8866, 160.716, 6.62551, 0.37", "23.54, 161.241, 6.30834, 0.96", "24.1099, 161.706, 5.98663, 0.96", "24.995, 162.416, 5.42348, 0.66", "26.3019, 163.452, 4.55786, 0.52", "27.0365, 164.049, 4.09406, 0.37", "27.8126, 164.704, 3.71226, 0.81", "28.4588, 165.306, 3.43192, 0.52", "29.3533, 166.329, 3.04718, 0.52", "29.8427, 167.045, 2.78183, 0.66", "30.3987, 168.254, 2.3388, 0.66", "30.6926, 169.337, 1.85661, 0.66", "30.9199, 170.634, 1.20321, 0.66", "31.1144, 171.997, 0.468672, 0.81", "31.3433, 173.413, -0.340578, 1.03", "31.5163, 174.132, -0.799864, 1.25", "31.9548, 175.356, -1.64229, 0.52", "32.3519, 176.132, -2.19954, 0.37", "32.9928, 176.923, -2.75492, 0.37", "34.1902, 177.977, -3.48162, 1.11", "35.0918, 178.609, -3.95134, 1.62", "35.5149, 178.863, -4.15971, 1.69", "36.3045, 179.328, -4.55915, 1.69", "38.1536, 180.574, -5.63697, 0.44", "39.1201, 181.366, -6.30345, 0.96", "40.0102, 182.255, -6.99026, 1.03", "40.5003, 182.897, -7.40305, 0.88", "41.2069, 184.094, -8.07995, 0.44", "41.8201, 185.375, -8.69586, 0.74", "42.1084, 186.164, -9.00298, 1.03", "42.4593, 186.89, -9.27119, 1.03", "43.1895, 187.872, -9.66497, 0.59", "44.1435, 188.684, -10.0551, 0.59", "45.2121, 189.309, -10.3949, 0.59", "45.9899, 189.702, -10.6305, 0.74", "47.8935, 190.744, -11.2665, 0.74", "48.547, 191.198, -11.5443, 0.96", "49.1216, 191.811, -11.8027, 1.11", "49.4368, 192.394, -11.9259, 1.11", "49.8475, 193.562, -12.042, 0.66", "50.2302, 195.007, -12.0226, 0.52", "50.5875, 196.506, -11.8122, 0.52", "51.2011, 198.878, -11.317, 1.11", "51.4256, 199.74, -11.1047, 1.33", "51.6325, 200.57, -10.8727, 1.33", "51.9504, 202.02, -10.4353, 0.44", "52.206, 203.185, -10.0991, 0.44", "52.4363, 204.198, -9.87693, 0.74", "52.5996, 204.977, -9.78929, 0.74", "52.8137, 206.245, -9.68367, 0.52", "53.0263, 207.82, -9.58442, 0.44", "53.1502, 209.308, -9.54384, 0.44", "53.2283, 210.838, -9.55188, 1.18", "53.2676, 211.757, -9.5925, 1.18", "53.3349, 212.98, -9.69549, 0.96", "53.4236, 214.195, -9.85485, 0.44", "53.6481, 215.978, -10.1754, 0.37", "53.7803, 216.669, -10.338, 0.37", "54.2003, 218.112, -10.7278, 0.88", "54.6178, 219.182, -10.9585, 1.18", "54.9994, 219.946, -11.027, 1.18", "55.8432, 221.396, -10.8764, 0.59", "56.6537, 222.713, -10.4757, 0.52", "57.1811, 223.605, -10.0818, 0.44", "58.2259, 225.474, -8.94152, 0.74", "58.7961, 226.563, -8.16709, 1.25", "59.2689, 227.532, -7.42991, 1.55", "59.6279, 228.386, -6.7549, 1.62", "60.0387, 229.473, -5.87726, 0.81", "60.5079, 230.749, -4.88281, 0.37", "60.9049, 231.789, -4.13951, 0.37", "61.1696, 232.582, -3.60658, 0.37", "61.4006, 233.539, -3.03093, 0.37", "61.4782, 234.152, -2.73005, 0.37", "61.539, 235.021, -2.42955, 0.66", "61.5939, 235.931, -2.12374, 0.96", "61.6476, 236.635, -1.79808, 1.18", "61.8102, 237.732, -1.17997, 0.52", "62.1222, 239.025, -0.383918, 0.66", "62.45, 240.158, 0.322054, 0.59", "63.1636, 242.398, 1.74803, 0.52", "63.6788, 243.749, 2.65148, 0.96", "64.0553, 244.578, 3.24067, 0.96", "64.6105, 245.527, 3.95347, 0.66", "65.4375, 246.72, 4.88726, 0.44", "66.1333, 247.641, 5.56282, 0.44", "66.8727, 248.544, 6.09831, 0.52", "67.5513, 249.359, 6.55647, 0.52", "68.7555, 250.79, 7.42807, 0.81", "69.572, 251.824, 8.07322, 0.52", "70.2818, 252.941, 8.75991, 0.52", "70.7774, 253.999, 9.36055, 1.47", "71.0153, 254.652, 9.70951, 1.77", "71.1916, 255.191, 9.98215, 1.77", "71.5486, 256.313, 10.524, 0.66", "72.1179, 257.735, 11.1736, 0.52", "72.7338, 258.944, 11.7436, 0.52", "73.4385, 260.119, 12.2902, 0.52", "73.9289, 260.899, 12.6193, 0.52", "74.2913, 261.484, 12.8379, 0.81", "74.8737, 262.45, 13.1592, 1.03", "75.409, 263.519, 13.4359, 1.55", "75.6275, 264.031, 13.5577, 1.33", "76.0706, 265.063, 13.8145, 0.88", "76.5061, 265.895, 14.0607, 0.81", "77.0243, 266.595, 14.3231, 0.59", "78.2133, 267.66, 14.8557, 0.44", "79.1935, 268.257, 15.3102, 0.66", "80.1283, 268.717, 15.7608, 0.81", "81.1113, 269.138, 16.2491, 0.44", "81.9699, 269.503, 16.7337, 0.81", "82.6148, 269.81, 17.1398, 0.81", "83.5704, 270.304, 17.7867, 0.52", "84.2992, 270.769, 18.2888, 0.52", "85.0892, 271.332, 18.8326, 0.52", "85.9179, 271.937, 19.3797, 0.37", "87.0256, 272.713, 19.9986, 0.37", "87.9422, 273.309, 20.3907, 0.59", "88.8824, 273.889, 20.7523, 1.18", "89.2065, 274.092, 20.8999, 1.47", "89.8707, 274.552, 21.2478, 1.47", "90.9077, 275.347, 21.8434, 0.52", "91.6688, 275.986, 22.3277, 0.52", "93.0246, 277.184, 23.2056, 0.96", "94.1849, 278.166, 23.9323, 0.52", "95.2757, 279.015, 24.5376, 0.96", "95.8919, 279.456, 24.8301, 0.96", "97.106, 280.176, 25.2943, 0.52", "97.8026, 280.509, 25.4466, 0.37", "98.948, 280.886, 25.5147, 0.37", "99.7968, 281.055, 25.5167, 0.81", "100.534, 281.132, 25.5287, 0.81", "101.669, 281.22, 25.5673, 0.52", "102.485, 281.291, 25.6233, 0.74", "103.715, 281.442, 25.7546, 0.74", "104.755, 281.615, 25.8916, 0.52", "105.976, 281.961, 26.0442, 0.52", "107.18, 282.521, 26.1889, 0.96", "107.781, 282.935, 26.2539, 1.55", "108.273, 283.362, 26.3173, 1.69", "108.565, 283.657, 26.3614, 1.69", "110.003, 285.114, 26.6293, 0.52", "111.023, 286.062, 26.8584, 0.66", "111.659, 286.549, 27.0338, 0.74", "112.82, 287.253, 27.3359, 0.44", "114.053, 287.912, 27.6549, 0.37", "115.187, 288.458, 27.9606, 1.11", "116.049, 288.844, 28.2172, 1.55", "117.045, 289.336, 28.4647, 0.81", "118.333, 290.216, 28.6978, 0.52", "118.997, 290.918, 28.7599, 0.66", "119.319, 291.366, 28.7465, 0.66", "120.001, 292.508, 28.6557, 0.44", "120.596, 293.547, 28.5589, 0.44", "121.294, 294.516, 28.4385, 0.52", "122.336, 295.431, 28.287, 0.74", "123.35, 295.962, 28.0853, 1.11", "123.502, 296.015, 28.0519, 1.33", "124.114, 296.17, 27.9182, 1.33", "125.96, 296.574, 27.4598, 0.37", "126.797, 296.764, 27.226, 0.37", "128.187, 297.161, 26.823, 0.66", "129.246, 297.572, 26.514, 0.44", "129.849, 297.86, 26.3405, 0.44", "131.195, 298.588, 25.9913, 1.18", "131.832, 298.955, 25.902, 1.47", "132.63, 299.424, 25.9052, 1.47", "134.102, 300.341, 26.1435, 0.52", "134.8, 300.84, 26.3619, 0.52", "135.898, 301.771, 26.8668, 0.52", "137.087, 302.972, 27.6228, 0.88", "137.837, 303.883, 28.1943, 0.66", "138.689, 305.107, 28.9617, 0.96", "139.374, 306.242, 29.6724, 0.96", "140.006, 307.309, 30.3074, 0.96", "140.505, 308.114, 30.7639, 0.96", "141.082, 308.872, 31.1675, 0.96", "141.753, 309.482, 31.5513, 0.96", "142.799, 310.108, 32.0539, 0.37", "143.985, 310.647, 32.5511, 0.37", "145.062, 311.073, 32.9933, 0.66", "146.006, 311.46, 33.38, 1.33", "146.687, 311.789, 33.662, 1.33", "147.579, 312.394, 34.0462, 0.52", "148.551, 313.219, 34.4785, 0.52", "148.996, 313.642, 34.6802, 0.88", "149.575, 314.161, 34.9028, 0.88", "150.394, 314.774, 35.1574, 0.88", "151.52, 315.404, 35.4759, 0.44", "152.671, 315.897, 35.7663, 0.44", "153.968, 316.263, 36.056, 0.81", "155.452, 316.52, 36.3584, 1.47", "156.121, 316.559, 36.48, 1.77", "157.291, 316.49, 36.6596, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.192, 86.6813, 6.53376, 0.52", "-9.28564, 87.4785, 5.76114, 0.52", "-10.1086, 88.1698, 5.21197, 0.52", "-11.0454, 89.1127, 4.60617, 0.52", "-11.685, 89.8948, 4.19457, 0.74", "-12.0909, 90.5443, 3.89477, 0.74", "-12.429, 91.3151, 3.53189, 0.59", "-12.4925, 91.8632, 3.31472, 0.37", "-12.4433, 92.6732, 3.03192, 0.37", "-12.3231, 93.5023, 2.79143, 0.37", "-12.1495, 94.6455, 2.5043, 0.37", "-12.0519, 96.0086, 2.1833, 0.37", "-12.158, 96.5406, 2.06843, 0.44", "-12.507, 97.0739, 1.97618, 0.59", "-12.896, 97.4412, 1.91838, 0.59", "-14.2401, 98.4625, 1.77651, 0.88", "-14.8884, 98.8816, 1.73097, 1.03", "-16.1501, 99.6345, 1.62718, 0.37", "-17.0372, 100.157, 1.49091, 0.44", "-17.6572, 100.548, 1.32888, 0.74", "-18.208, 100.942, 1.12061, 0.74", "-18.9817, 101.627, 0.702109, 0.44", "-19.5576, 102.303, 0.295017, 0.29", "-19.8008, 102.847, -0.0331083, 0.29", "-19.9384, 103.842, -0.635574, 1.03", "-19.8843, 104.421, -0.993017, 1.4", "-19.7804, 104.901, -1.28739, 1.4", "-19.5225, 105.843, -1.86179, 0.96", "-19.1016, 107.458, -2.78795, 0.52", "-18.9489, 108.185, -3.18775, 0.52", "-18.8121, 109.274, -3.7402, 0.52", "-18.8687, 109.825, -3.9763, 0.52", "-19.2964, 110.609, -4.14475, 0.52", "-19.9944, 111.381, -4.19459, 0.88", "-20.433, 111.798, -4.1927, 1.25", "-20.976, 112.315, -4.17879, 1.47", "-21.8871, 113.252, -4.14405, 0.59", "-22.6104, 114.162, -4.15825, 0.37", "-23.3103, 115.289, -4.221, 0.29", "-23.6226, 115.934, -4.28972, 0.59", "-23.9368, 116.751, -4.41528, 0.88", "-24.2319, 117.619, -4.58767, 1.11", "-24.5619, 118.603, -4.8079, 1.33", "-24.8059, 119.28, -4.95821, 1.03", "-25.1619, 120.174, -5.1455, 0.81", "-25.5641, 121.058, -5.32587, 0.52", "-26.2892, 122.582, -5.60394, 0.52", "-26.7802, 123.646, -5.78773, 0.52", "-27.0148, 124.179, -5.86954, 0.66", "-27.2566, 124.832, -5.96623, 0.66", "-27.5485, 125.902, -6.1013, 0.37", "-27.7348, 127.034, -6.2059, 0.37", "-27.8097, 128.074, -6.28729, 0.88", "-27.8429, 128.649, -6.31943, 0.88", "-27.9389, 129.796, -6.38564, 0.37", "-28.0675, 130.646, -6.4402, 0.29", "-28.3398, 131.868, -6.51395, 0.81", "-28.4849, 132.386, -6.50934, 1.18", "-28.7667, 133.297, -6.43656, 1.18", "-29.0192, 134.155, -6.32611, 0.59", "-29.313, 135.393, -6.1358, 0.44", "-29.4817, 136.733, -5.91285, 0.44", "-29.4868, 138.152, -5.68507, 1.11", "-29.4397, 138.653, -5.62193, 1.11", "-29.3149, 139.429, -5.55577, 0.81", "-29.0964, 140.614, -5.49402, 0.52", "-28.9457, 141.541, -5.53101, 0.52", "-28.89, 142.418, -5.66334, 0.44", "-28.935, 143.165, -5.83621, 0.44", "-29.0611, 143.891, -6.0176, 0.52", "-29.2327, 144.563, -6.18604, 0.81", "-29.5882, 145.734, -6.44072, 1.11", "-29.8018, 146.388, -6.57456, 1.11", "-30.0987, 147.293, -6.69652, 0.81", "-30.4066, 148.242, -6.76907, 0.37", "-30.7696, 149.382, -6.78436, 0.37", "-31.1286, 150.513, -6.72089, 0.29", "-31.398, 151.34, -6.59374, 0.88", "-31.7444, 152.455, -6.35563, 1.55", "-31.904, 153.005, -6.21277, 1.55", "-32.1352, 153.867, -5.98184, 1.18", "-32.3766, 154.834, -5.77845, 0.81", "-32.7481, 156.272, -5.5076, 0.44", "-33.1748, 157.768, -5.2479, 0.29", "-33.4957, 158.697, -5.11147, 0.29", "-33.9187, 159.76, -4.96163, 1.25", "-34.6016, 161.124, -4.73227, 0.29", "-35.3779, 162.366, -4.46504, 0.29", "-35.9936, 163.176, -4.25305, 0.29", "-36.6444, 163.904, -3.99843, 0.59", "-36.9926, 164.263, -3.84511, 0.88", "-38.0667, 165.407, -3.26303, 0.44", "-38.3991, 165.832, -3.05065, 0.29", "-38.7094, 166.403, -2.83955, 0.44", "-38.9106, 166.968, -2.65756, 0.29", "-39.1238, 168.046, -2.27543, 0.29", "-39.182, 168.786, -1.98391, 0.29", "-39.1859, 169.581, -1.6904, 0.66", "-39.1983, 170.059, -1.51023, 0.81", "-39.237, 170.693, -1.27021, 0.81", "-39.3489, 171.879, -0.841881, 0.29", "-39.4793, 172.881, -0.509802, 0.37", "-39.7687, 174.264, -0.0952722, 0.37", "-39.9943, 175.115, 0.0684383, 0.37", "-40.3095, 176.271, 0.177606, 1.33", "-40.4598, 176.847, 0.184762, 1.55", "-40.5446, 177.247, 0.149006, 1.55", "-40.6407, 177.836, 0.0477416, 1.18", "-40.8984, 179.722, -0.431506, 0.37", "-41.0138, 180.425, -0.714579, 0.59", "-41.1606, 181.122, -1.1175, 0.59", "-41.3494, 181.833, -1.63743, 0.29", "-41.5002, 182.423, -2.22851, 0.29", "-41.6408, 183.009, -2.91195, 0.29", "-41.8465, 183.86, -3.98574, 0.59", "-41.9414, 184.265, -4.50445, 0.59", "-42.1744, 185.502, -6.05805, 0.88", "-42.333, 187.113, -7.9108, 0.44", "-42.3122, 188.069, -8.8804, 0.29", "-42.2799, 188.395, -9.18286, 0.81", "-42.2383, 188.726, -9.46317, 1.11", "-42.1417, 189.555, -10.1459, 0.81", "-42.0988, 190.648, -11.0934, 0.15", "-42.1611, 191.168, -11.6311, 0.15", "-42.2275, 191.555, -12.1903, 0.15", "-42.2582, 191.849, -12.7116, 0.66", "-42.2601, 192.074, -13.1537, 0.81", "-42.2353, 192.861, -14.6493, 0.15", "-42.2051, 193.948, -16.6165, 0.66", "-42.196, 194.249, -17.1224, 0.96", "-42.1516, 194.902, -18.1125, 0.81", "-42.071, 196.084, -19.7854, 0.29", "-42.049, 196.69, -20.5691, 0.29", "-42.0766, 197.466, -21.4696, 0.29", "-42.2874, 198.365, -22.4978, 1.18", "-42.491, 198.841, -23.0506, 1.18", "-43.0714, 199.817, -24.147, 0.37", "-43.4219, 200.316, -24.6843, 0.37", "-43.8119, 200.871, -25.261, 0.88", "-44.2891, 201.661, -25.9835, 0.96", "-44.9479, 202.971, -27.0505, 0.44", "-45.2453, 203.623, -27.5623, 0.66", "-45.4933, 204.181, -27.9911, 0.37", "-45.7788, 204.766, -28.4793, 0.37", "-46.2145, 205.664, -29.249, 0.44", "-46.6144, 206.534, -29.9748, 0.37", "-47.2145, 207.804, -31.0357, 0.66", "-47.5373, 208.365, -31.5526, 0.66", "-48.0425, 209.051, -32.2955, 0.29", "-48.563, 209.578, -32.9604, 0.52", "-49.0373, 209.965, -33.4952, 0.59", "-49.8097, 210.554, -34.3348, 0.29", "-50.3716, 211.01, -34.9809, 0.29", "-51.1164, 211.655, -35.8217, 0.29", "-51.664, 212.153, -36.4732, 0.44", "-52.0407, 212.462, -36.9181, 0.74", "-52.6273, 212.938, -37.5838, 0.74", "-53.4197, 213.565, -38.4277, 1.11", "-53.9692, 214.03, -38.9962, 1.62", "-55.0873, 215.001, -40.09, 0.88", "-55.9675, 215.752, -40.9368, 0.37", "-56.7331, 216.363, -41.6629, 0.29", "-57.3065, 216.78, -42.1856, 0.29", "-57.7537, 217.088, -42.5581, 0.81", "-58.1116, 217.331, -42.8376, 1.18", "-58.5604, 217.653, -43.1321, 0.88", "-59.4416, 218.436, -43.6982, 0.29", "-59.8563, 218.953, -44.042, 0.29", "-60.2023, 219.555, -44.3901, 0.59", "-60.3352, 219.875, -44.5947, 0.88", "-60.4363, 220.267, -44.8739, 0.59", "-60.4727, 220.741, -45.3377, 0.37", "-60.4358, 221.534, -46.3109, 0.37", "-60.3969, 221.964, -46.9154, 0.74", "-60.3141, 222.766, -48.1854, 0.52", "-60.2554, 223.38, -49.2308, 1.11", "-60.1566, 224.865, -52.05, 1.25", "-60.1149, 225.832, -54.1021, 0.66", "-60.1198, 226.451, -55.5504, 0.44", "-60.163, 227.098, -57.1904, 1.03", "-60.2663, 227.607, -58.5743, 1.03", "-60.6217, 228.416, -61.0801, 0.29", "-60.9141, 228.767, -62.3536, 0.29", "-61.1773, 228.994, -63.2634, 1.25", "-61.2753, 229.073, -63.5585, 1.69", "-61.5255, 229.275, -64.2351, 1.69", "-62.2503, 229.88, -65.9718, 0.29", "-62.8153, 230.443, -67.2118, 0.29", "-63.1091, 230.811, -67.8696, 0.29", "-63.4812, 231.383, -68.7851, 0.29", "-63.8663, 231.998, -69.765, 0.81", "-64.0952, 232.352, -70.3166, 0.88", "-64.5897, 233.057, -71.3551, 0.29", "-65.1047, 233.696, -72.3532, 0.81", "-65.3773, 233.971, -72.8362, 0.81", "-65.8094, 234.354, -73.5691, 0.22", "-66.0885, 234.613, -74.0082, 0.52", "-66.2084, 234.732, -74.2001, 0.59", "-66.8756, 235.293, -75.0859, 0.22", "-67.144, 235.457, -75.3959, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-62.8207, 152.905, -56.6596, 0.52", "-62.4706, 155.02, -56.2837, 0.52", "-62.2512, 156.523, -56.047, 0.81", "-62.0784, 157.605, -55.9434, 0.59", "-61.6123, 159.931, -55.7409, 0.96", "-61.2644, 161.406, -55.6464, 0.96", "-60.8514, 163.163, -55.5535, 0.52", "-60.5831, 164.307, -55.5674, 0.52", "-60.0827, 166.328, -55.6871, 0.52", "-59.7809, 167.547, -55.7542, 0.52", "-59.4413, 169.054, -55.7565, 0.66", "-59.2701, 170.04, -55.7668, 0.96", "-59.0994, 171.345, -55.7791, 0.96", "-58.9772, 172.909, -55.8498, 0.37", "-58.9721, 174.278, -55.92, 0.37", "-59.0463, 175.602, -56.0109, 0.37", "-59.2674, 178.121, -56.2534, 0.44", "-59.3147, 178.66, -56.3279, 0.74", "-59.427, 179.887, -56.5052, 0.74", "-59.5542, 181.046, -56.6951, 0.37", "-59.6334, 182.099, -56.8595, 0.37", "-59.6563, 183.327, -56.9473, 0.37", "-59.5985, 184.213, -56.8739, 0.37", "-59.45, 185.607, -56.7124, 0.37", "-59.3937, 185.992, -56.6444, 0.81", "-59.1762, 187.089, -56.4043, 0.37", "-58.9523, 187.941, -56.1758, 0.37", "-58.6438, 189.001, -55.777, 0.66", "-58.4291, 189.762, -55.4798, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-62.8207, 152.905, -56.6596, 0.44", "-63.3051, 153.879, -56.221, 0.44", "-63.808, 154.627, -55.9646, 0.37", "-64.3606, 155.325, -55.7954, 0.88", "-64.6781, 155.716, -55.7424, 0.88", "-65.2028, 156.357, -55.6956, 0.52", "-65.6854, 157.092, -55.7883, 0.29", "-66.2262, 158.014, -56.0643, 0.22", "-66.5314, 158.539, -56.2701, 0.22", "-66.9902, 159.325, -56.6295, 0.88", "-67.292, 159.873, -56.9052, 1.25", "-68.4798, 162.314, -58.2339, 0.44", "-68.8652, 163.271, -58.7708, 0.96", "-68.993, 163.693, -59.0092, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-27.2924, 2.05246, -5.66947, 0.81", "-28.1006, 1.52033, -7.15283, 0.81", "-28.5049, 1.31038, -7.80468, 0.81", "-31.0457, 0.389101, -11.3383, 1.62", "-32.8578, -0.0112028, -13.5476, 0.66", "-33.9636, -0.175481, -14.767, 0.66", "-34.6977, -0.283152, -15.5139, 0.88", "-35.5446, -0.361286, -16.2654, 0.96", "-36.933, -0.486811, -17.3054, 0.81", "-38.3093, -0.67832, -17.9787, 0.52", "-39.5261, -1.03427, -18.451, 0.52", "-40.8512, -1.7014, -18.8915, 0.74", "-42.034, -2.54854, -19.2109, 1.11", "-42.4178, -2.90437, -19.2756, 1.25", "-43.2434, -3.82827, -19.3561, 0.96", "-44.2298, -5.02658, -19.4027, 0.66", "-45.1553, -6.13321, -19.4306, 0.88", "-46.1179, -7.20609, -19.4808, 0.81", "-47.1365, -8.2542, -19.6004, 0.96", "-47.942, -9.05735, -19.7657, 1.18", "-48.8321, -9.96489, -20.0234, 1.11", "-49.5903, -10.7866, -20.3362, 1.18", "-50.3545, -11.6712, -20.7761, 1.33", "-51.5842, -13.0856, -21.6027, 0.66", "-52.4925, -14.0632, -22.2314, 0.88", "-53.2397, -14.8048, -22.7217, 0.88", "-54.4528, -15.9084, -23.4694, 0.59", "-55.18, -16.473, -23.8477, 0.59", "-55.8187, -16.8296, -24.0879, 0.81", "-56.8251, -17.1185, -24.2059, 1.33", "-57.6877, -17.2426, -24.1327, 1.4", "-58.2451, -17.3221, -24.0049, 1.25", "-59.3318, -17.5748, -23.5946, 0.52", "-59.9535, -17.8398, -23.317, 0.52", "-60.7489, -18.4195, -22.989, 0.66", "-61.46, -19.1123, -22.7271, 0.81", "-62.2267, -19.9282, -22.4796, 0.81", "-62.7311, -20.5101, -22.3733, 1.11", "-63.1462, -21.0468, -22.3379, 1.33", "-63.7476, -21.8889, -22.4028, 1.33", "-64.0665, -22.3636, -22.5221, 1.33", "-64.7066, -23.3501, -22.9497, 0.81", "-65.4237, -24.4583, -23.5366, 0.52", "-65.972, -25.2869, -24.0107, 0.74", "-66.7647, -26.4623, -24.6914, 0.96", "-67.3934, -27.3551, -25.183, 0.81", "-68.2744, -28.5234, -25.8246, 0.66", "-69.0218, -29.442, -26.2885, 0.59", "-69.5489, -30.035, -26.5399, 1.03", "-69.9834, -30.5243, -26.7056, 1.25", "-70.6011, -31.2655, -26.8682, 1.25", "-71.4847, -32.4907, -27.1254, 0.81", "-71.9554, -33.2769, -27.3207, 0.52", "-72.6285, -34.4342, -27.7803, 0.52", "-73.1331, -35.2284, -28.1527, 0.44", "-73.4342, -35.6695, -28.392, 0.44", "-74.3397, -36.9668, -29.1421, 0.96", "-74.7231, -37.5023, -29.4546, 1.4", "-75.7086, -38.7483, -30.3265, 0.88", "-76.5732, -39.7887, -31.0744, 0.66", "-77.7926, -41.2792, -32.0949, 0.66", "-78.6311, -42.4448, -32.8797, 0.59", "-79.4678, -43.8129, -33.7582, 1.77", "-80.63, -46.0742, -35.1291, 0.59", "-80.9839, -46.8587, -35.5731, 0.74", "-81.3847, -47.7593, -36.0676, 0.74", "-82.3435, -49.7185, -37.0552, 0.59", "-82.8242, -50.5726, -37.4304, 0.59", "-83.3453, -51.4112, -37.7095, 0.74", "-84.117, -52.5601, -37.942, 0.74", "-84.8662, -53.5182, -38.0967, 0.74", "-85.7273, -54.5433, -38.3335, 0.52", "-86.5137, -55.3727, -38.532, 0.37", "-86.9655, -55.826, -38.6854, 1.11", "-87.2705, -56.1054, -38.8218, 1.11", "-87.8246, -56.5714, -39.1116, 0.96", "-90.2048, -58.2834, -40.3913, 0.59", "-90.7981, -58.6138, -40.6677, 0.52", "-91.3997, -58.8705, -40.9742, 0.81", "-92.3755, -59.2428, -41.479, 0.81", "-93.2394, -59.5442, -41.9175, 1.11", "-94.1678, -59.8643, -42.3526, 1.25", "-95.0681, -60.1837, -42.6961, 0.96", "-97.0744, -61.0867, -43.5722, 0.52", "-97.9332, -61.562, -43.9718, 0.52", "-98.619, -62.0534, -44.3008, 0.81", "-99.3034, -62.7227, -44.6592, 0.88", "-99.6538, -63.1898, -44.8664, 1.03", "-100.125, -63.9844, -45.1567, 0.88", "-100.556, -64.8415, -45.3937, 0.44", "-100.997, -65.8193, -45.6402, 0.44", "-101.744, -67.8302, -46.1174, 1.33", "-102.45, -69.9245, -46.5999, 0.59", "-102.699, -70.6841, -46.7964, 1.03", "-102.878, -71.236, -46.9436, 1.18", "-103.153, -72.0541, -47.1777, 0.81", "-103.735, -73.5634, -47.6124, 0.59", "-104.187, -74.5341, -47.8986, 0.37", "-105.016, -75.9902, -48.4379, 0.37", "-105.268, -76.341, -48.6018, 0.96", "-105.484, -76.5952, -48.7383, 1.25", "-105.794, -76.8927, -48.9162, 1.25", "-107.002, -77.8445, -49.4913, 0.52", "-107.84, -78.4506, -49.8161, 0.52", "-108.764, -79.0819, -50.0633, 0.52", "-109.025, -79.2526, -50.1268, 1.18", "-109.472, -79.5518, -50.2746, 1.18", "-109.874, -79.8308, -50.4161, 1.18", "-110.535, -80.299, -50.5723, 0.88", "-111.843, -81.2243, -51.0434, 0.44", "-112.032, -81.3624, -51.1433, 0.81", "-113.962, -82.8014, -52.3315, 0.52", "-114.634, -83.3281, -52.7945, 0.81", "-115.797, -84.2789, -53.6327, 0.44", "-117.734, -85.9609, -55.1235, 0.74", "-118.579, -86.7319, -55.7719, 0.44", "-118.976, -87.1217, -56.0518, 1.33", "-119.245, -87.4212, -56.2356, 1.33", "-119.81, -88.0899, -56.6628, 0.74", "-120.845, -89.2878, -57.4616, 0.44", "-121.143, -89.6115, -57.6315, 0.74", "-121.644, -90.0862, -57.9358, 0.74", "-122.83, -90.9257, -58.8493, 0.37", "-123.343, -91.1255, -59.3226, 0.37", "-123.907, -91.177, -59.9347, 0.66", "-124.32, -91.1457, -60.3876, 0.88", "-124.687, -91.1017, -60.7836, 0.88", "-125.792, -90.9886, -61.9249, 0.59", "-126.415, -90.9437, -62.49, 0.29", "-126.99, -90.9683, -62.9561, 0.29", "-128.082, -91.1713, -63.6996, 0.96", "-128.355, -91.258, -63.8438, 1.18", "-129.745, -91.9464, -64.4499, 0.59", "-130.345, -92.37, -64.7642, 0.81", "-130.824, -92.753, -65.0525, 0.81", "-131.465, -93.2715, -65.4635, 0.37", "-132.205, -93.877, -65.9599, 0.37", "-133.315, -94.8028, -66.7513, 1.11", "-135.476, -96.636, -68.2979, 0.52", "-135.861, -96.967, -68.5824, 0.52", "-136.685, -97.655, -69.1981, 0.44", "-137.116, -97.9967, -69.5484, 1.47", "-139.007, -99.3695, -71.1603, 0.59", "-139.539, -99.7152, -71.6092, 0.88", "-140.173, -100.126, -72.1851, 0.88", "-141.34, -100.902, -73.4428, 0.52", "-142.37, -101.574, -74.672, 0.74", "-142.798, -101.825, -75.2068, 0.96", "-143.074, -101.974, -75.5459, 0.96", "-144.433, -102.752, -77.1816, 0.29", "-145.617, -103.479, -78.6923, 0.96", "-146.011, -103.726, -79.1849, 1.18", "-147.293, -104.57, -80.7774, 0.37", "-147.856, -104.98, -81.4947, 0.37", "-148.275, -105.295, -82.0307, 0.74", "-150.4, -106.839, -84.8017, 0.88", "-150.781, -107.086, -85.3129, 0.88", "-151.886, -107.742, -86.8254, 0.37", "-152.299, -107.968, -87.3719, 0.37", "-152.829, -108.233, -88.0332, 0.37", "-153.549, -108.57, -88.8115, 0.37", "-154.662, -109.127, -89.7264, 0.74", "-156.396, -110.073, -91.0851, 0.44", "-156.842, -110.31, -91.391, 1.03", "-157.272, -110.565, -91.6789, 1.03", "-157.601, -110.814, -91.892, 1.03", "-158.5, -111.674, -92.3869, 0.44", "-159.113, -112.351, -92.6697, 0.59", "-159.794, -113.075, -92.9254, 0.37", "-160.544, -113.832, -93.242, 0.29", "-160.951, -114.234, -93.465, 0.44", "-161.258, -114.558, -93.6595, 0.44", "-162.207, -115.608, -94.3056, 0.29", "-162.599, -116.049, -94.5861, 0.52", "-162.819, -116.279, -94.766, 0.74", "-163.862, -117.099, -95.6602, 0.29", "-164.299, -117.393, -96.047, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-27.2924, 2.05246, -5.66947, 0.88", "-28.4206, 5.91635, -6.16254, 0.88", "-28.9808, 7.70576, -6.24362, 0.52", "-29.35, 8.74947, -6.24668, 0.88", "-30.1122, 10.6621, -6.20804, 0.88", "-31.4933, 13.7414, -6.10501, 0.52", "-32.3904, 15.3996, -6.03363, 0.52", "-33.5819, 17.3278, -5.77122, 0.44", "-34.5976, 18.6176, -5.56945, 0.59", "-35.6847, 19.796, -5.32044, 0.74", "-36.611, 20.6573, -5.08685, 0.74", "-38.7806, 22.374, -4.62371, 1.25", "-39.5079, 22.8751, -4.50385, 1.25", "-41.0264, 23.7406, -4.36437, 0.66", "-42.9434, 24.6989, -4.3061, 0.81", "-43.7375, 25.055, -4.29939, 0.66", "-45.543, 25.8102, -4.33005, 0.88", "-48.6221, 26.9998, -4.4603, 0.88", "-49.9076, 27.4424, -4.54598, 0.66", "-50.7331, 27.6854, -4.63224, 0.52", "-52.4818, 28.1084, -4.81986, 1.03", "-53.1713, 28.3094, -4.77973, 1.33", "-53.6496, 28.496, -4.67224, 1.55", "-54.1226, 28.7148, -4.53201, 1.55", "-54.8746, 29.1002, -4.32193, 1.33", "-56.1275, 29.8029, -4.02887, 0.74", "-57.6154, 30.7189, -3.73427, 0.59", "-59.1051, 31.8268, -3.45677, 0.59", "-60.0542, 32.6936, -3.30139, 0.59", "-60.554, 33.2652, -3.2278, 1.11", "-61.3932, 34.5224, -3.17379, 1.55", "-61.6874, 35.147, -3.19749, 1.77", "-62.2617, 37.1261, -3.24243, 0.74", "-62.4806, 38.3857, -3.23295, 0.96", "-62.5872, 39.3552, -3.20278, 0.74", "-62.7059, 40.7318, -3.1087, 0.52", "-62.7992, 41.78, -2.99394, 0.44", "-63.2423, 44.7271, -2.5008, 0.88", "-63.4163, 45.5669, -2.35343, 1.11", "-63.6086, 46.3354, -2.23697, 1.11", "-63.9828, 47.6982, -2.08525, 0.74", "-64.3638, 48.9188, -2.0015, 0.44", "-64.8383, 50.2482, -2.06038, 0.29", "-65.4387, 51.8187, -2.33557, 0.59", "-65.8092, 52.8428, -2.52318, 0.44", "-66.174, 53.9075, -2.72899, 1.25", "-66.3365, 54.426, -2.83178, 1.25", "-66.5275, 55.1128, -2.93634, 0.81", "-66.8039, 56.1088, -3.02257, 0.29", "-67.1773, 57.231, -3.03925, 0.59", "-67.4224, 57.8807, -3.05421, 0.74", "-67.667, 58.4396, -3.07627, 0.88", "-68.0097, 59.1236, -3.11481, 0.88", "-68.495, 59.9785, -3.18383, 0.44", "-68.9867, 60.7814, -3.27182, 0.81", "-69.4583, 61.5206, -3.352, 0.81", "-70.1921, 62.6413, -3.47277, 0.37", "-70.6333, 63.3099, -3.53077, 0.37", "-71.5219, 64.6647, -3.59442, 0.29", "-72.4546, 66.09, -3.58926, 0.29", "-72.8241, 66.6637, -3.56435, 0.29", "-73.3979, 67.5802, -3.49815, 0.88", "-73.769, 68.2141, -3.43823, 1.18", "-74.3134, 69.1817, -3.32025, 1.18", "-74.8325, 70.0753, -3.15953, 0.59", "-75.3624, 70.9597, -2.94657, 0.59", "-75.8836, 71.8328, -2.71599, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "27.1629, -115.46, 23.8455, 0.29", "26.4731, -116.18, 24.2968, 0.29", "25.7448, -116.941, 24.7732, 0.15", "25.4026, -117.298, 24.9971, 0.15", "24.6655, -118.068, 25.4792, 0.44", "24.2277, -118.526, 25.7657, 0.44", "23.653, -119.126, 26.1417, 0.74", "17.1355, -127.5, 29.3055, 0.74", "11.9808, -136.099, 34.0394, 0.74", "8.20516, -145.922, 37.6488, 0.74", "4.8146, -156.23, 40.1526, 0.74", "1.82559, -166.957, 40.2493, 0.74", "0.156393, -177.737, 38.1139, 0.74", "-1.01663, -188.197, 34.6254, 0.74", "-2.43504, -198.955, 32.2379, 0.74", "-5.39641, -209.612, 31.0643, 0.74", "-8.2322, -219.978, 28.2932, 0.74", "-10.705, -230.374, 25.3059, 0.74", "-12.9152, -241.238, 24.3234, 0.74", "-16.418, -251.795, 23.9976, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "27.1629, -115.46, 23.8455, 0.22", "27.7526, -115.212, 23.1659, 0.22", "28.4135, -114.934, 22.4041, 0.59", "28.6866, -114.819, 22.0893, 0.59", "29.2647, -114.576, 21.423, 0.37", "29.6499, -114.415, 20.979, 0.37", "36.9592, -112.806, 14.6935, 0.37", "42.9249, -109.272, 7.74098, 0.37", "50.0033, -106.461, 1.57703, 0.37", "57.9807, -103.592, -3.32559, 0.37", "65.8384, -99.4944, -7.55478, 0.37", "74.189, -94.992, -10.0856, 0.37" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "3.76247, -48.5415, 27.8626, 0.52", "3.22079, -49.4104, 27.4511, 0.52", "2.72791, -50.201, 27.0766, 0.52", "2.23176, -50.9967, 26.6996, 0.44", "1.88325, -51.5558, 26.4348, 0.29", "1.57333, -52.0529, 26.1994, 0.74", "-3.33827, -59.6122, 23.1178, 0.74", "-8.10552, -67.2227, 19.9294, 0.74", "-12.8375, -74.2482, 15.6027, 0.74", "-18.2616, -80.6746, 11.205, 0.74", "-24.1521, -85.9533, 6.02111, 0.74", "-30.892, -90.2261, 0.99489, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "3.76247, -48.5415, 27.8626, 0.29", "4.48205, -48.496, 27.5878, 0.29", "5.62392, -48.3638, 27.2086, 0.29", "6.11823, -48.2796, 27.0634, 0.44", "6.86248, -48.0956, 26.8542, 0.44", "7.47244, -47.8829, 26.6862, 0.37", "7.85804, -47.7089, 26.5749, 0.22", "8.10682, -47.4449, 26.5055, 0.59", "8.14814, -47.1161, 26.4887, 0.74", "7.99844, -46.4104, 26.4778, 0.22", "7.72435, -45.7757, 26.4793, 0.22", "7.28142, -45.0189, 26.4754, 0.22", "6.77044, -44.3139, 26.4457, 0.81", "11.6453, -38.7894, 24.9771, 0.81", "15.9926, -32.7066, 24.0494, 0.81" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "31.079, -158.795, 7.00327, 0.37", "41.1143, -164.65, 4.64345, 0.37", "50.3088, -171.739, 2.08523, 0.37", "59.9409, -177.881, -1.11402, 0.37", "69.3809, -184.442, -4.08729, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "31.079, -158.795, 7.00327, 0.22", "35.4285, -161.547, 7.12474, 0.37", "39.5308, -164.54, 8.00459, 0.37", "43.3652, -168.005, 7.93363, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-46.2938, -148.804, -7.16713, 0.37", "-46.5053, -157.106, -12.3855, 0.37", "-46.2327, -164.748, -18.4926, 0.37", "-46.1891, -173.464, -23.012, 0.37", "-45.8937, -181.494, -28.6181, 0.37", "-44.9578, -190.239, -32.9708, 0.37", "-43.3236, -198.431, -38.0841, 0.37", "-41.2471, -206.729, -42.8525, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-46.2938, -148.804, -7.16713, 0.22", "-44.8936, -159.516, -12.3248, 0.37", "-41.2745, -169.626, -17.5369, 0.37", "-40.0243, -179.682, -23.8797, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "157.291, 316.49, 36.6596, 0.37", "158.693, 317.727, 37.7546, 0.37", "159.244, 318.105, 38.1001, 0.37", "160.197, 318.586, 38.5821, 0.29", "160.883, 318.849, 38.8994, 0.29", "161.766, 319.144, 39.3205, 0.74", "162.585, 319.442, 39.7356, 0.96", "163.235, 319.673, 40.0265, 0.52", "164.292, 320.089, 40.5116, 0.44", "165.306, 320.547, 41.0312, 0.37", "165.873, 320.927, 41.3848, 0.29", "166.502, 321.545, 41.8631, 0.29", "166.889, 322.03, 42.1812, 0.29", "167.527, 322.812, 42.6741, 0.74", "168.241, 323.608, 43.1674, 1.11", "168.935, 324.292, 43.5798, 1.11", "169.603, 324.851, 43.9245, 0.81", "170.973, 325.841, 44.5698, 0.37", "172.137, 326.619, 45.0927, 0.37", "172.896, 327.119, 45.4575, 0.37", "173.555, 327.576, 45.7704, 0.37", "173.965, 327.885, 45.9759, 1.03", "174.624, 328.446, 46.3542, 1.33", "174.926, 328.746, 46.5726, 1.33", "176.037, 330.087, 47.6868, 0.29", "176.689, 330.996, 48.5081, 0.29", "177.332, 331.979, 49.4387, 0.88", "177.697, 332.595, 50.0212, 0.88", "178.222, 333.532, 50.8924, 0.74", "179.059, 334.965, 52.1647, 0.66", "179.485, 335.694, 52.7082, 0.74", "180.082, 336.771, 53.3488, 0.44", "180.512, 337.628, 53.6774, 0.44", "181.036, 338.746, 53.8855, 0.37", "181.879, 340.66, 53.9539, 0.37", "182.616, 342.29, 53.8581, 0.37", "183.229, 343.661, 53.7063, 0.37", "183.901, 345.32, 53.4227, 1.77", "184.226, 346.279, 53.2062, 1.77", "184.405, 347.106, 52.9701, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "157.291, 316.49, 36.6596, 1.11", "158.356, 317.351, 35.5243, 1.11", "159.482, 318.115, 34.3804, 0.74", "160.038, 318.388, 33.8169, 0.29", "160.638, 318.666, 33.1652, 0.44", "161.258, 319.0, 32.4459, 0.37", "162.031, 319.477, 31.5427, 0.74", "162.343, 319.721, 31.1912, 0.88", "163.13, 320.304, 30.3604, 0.29", "163.798, 320.752, 29.6992, 0.44", "164.522, 321.197, 29.0854, 0.29", "164.971, 321.48, 28.7273, 0.96", "165.348, 321.754, 28.4708, 1.25", "165.602, 321.938, 28.3228, 1.25", "166.652, 322.672, 27.8456, 0.37", "167.232, 323.019, 27.6367, 0.74", "168.462, 323.656, 27.2507, 0.88", "168.886, 323.862, 27.126, 1.11", "169.497, 324.161, 26.9702, 0.52", "169.916, 324.375, 26.8897, 0.52", "170.38, 324.62, 26.8419, 0.29", "170.777, 324.82, 26.8131, 0.29", "171.42, 325.093, 26.8086, 1.25", "171.577, 325.155, 26.8022, 1.55", "171.86, 325.261, 26.786, 1.55", "172.581, 325.513, 26.734, 0.37", "173.404, 325.763, 26.6827, 0.44", "174.074, 325.933, 26.6595, 0.81", "174.223, 325.959, 26.6607, 1.11", "174.704, 326.027, 26.6701, 1.11", "175.542, 326.109, 26.7115, 0.29", "176.269, 326.128, 26.7965, 0.37", "176.741, 326.089, 26.8661, 0.37", "177.246, 326.002, 26.9309, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-68.993, 163.693, -59.0092, 0.44", "-67.8981, 164.915, -58.7448, 0.44", "-66.9405, 166.133, -58.6671, 0.29", "-66.4139, 166.911, -58.6829, 0.44", "-65.8414, 167.899, -58.7255, 0.44", "-65.4791, 168.624, -58.7527, 0.81", "-65.0225, 169.659, -58.7996, 0.81", "-64.5823, 170.938, -58.9748, 0.52", "-64.4285, 171.765, -59.1515, 0.37", "-64.355, 172.642, -59.3622, 0.37", "-64.3304, 173.52, -59.5952, 0.81", "-64.3064, 174.326, -59.8056, 0.88", "-64.2013, 175.584, -60.1018, 0.88", "-63.8867, 176.931, -60.4744, 0.52", "-63.6381, 177.512, -60.6938, 0.81", "-62.8204, 178.75, -61.2781, 0.52", "-62.2425, 179.404, -61.6105, 0.52", "-61.4194, 180.146, -61.9668, 0.52", "-59.6735, 181.483, -62.5648, 0.52", "-58.794, 182.133, -62.896, 0.52", "-57.9737, 182.731, -63.2487, 0.81", "-57.3572, 183.186, -63.5198, 1.03", "-56.7459, 183.657, -63.8012, 0.59", "-55.5147, 184.683, -64.358, 0.66", "-53.5029, 186.552, -65.1403, 0.52", "-52.7552, 187.318, -65.4068, 0.52", "-51.9068, 188.307, -65.7287, 1.11", "-51.5186, 188.853, -65.8702, 1.11", "-51.2069, 189.331, -65.9746, 1.25", "-50.6563, 190.367, -66.0415, 0.66", "-50.3055, 191.455, -65.8621, 0.44", "-50.1831, 192.347, -65.6846, 0.44", "-50.2322, 193.819, -65.4118, 0.81" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-68.993, 163.693, -59.0092, 0.44", "-69.6532, 165.052, -60.0114, 0.44", "-69.9542, 165.648, -60.4866, 0.37", "-70.2878, 166.296, -61.0129, 0.37", "-70.5854, 166.804, -61.4098, 0.88", "-70.9429, 167.352, -61.818, 0.88", "-71.5982, 168.232, -62.4679, 0.59", "-72.2474, 169.037, -63.0232, 0.22", "-72.6233, 169.497, -63.3892, 0.66", "-73.1573, 170.13, -63.9443, 0.37", "-73.459, 170.481, -64.2585, 0.29", "-73.9868, 171.193, -64.8896, 0.29", "-74.4733, 172.057, -65.6271, 0.66", "-74.9138, 173.198, -66.6054, 1.03", "-75.0169, 173.54, -66.8939, 1.33", "-75.0781, 173.788, -67.1015, 1.33", "-75.3296, 174.93, -68.0298, 0.44", "-75.5703, 176.115, -68.9926, 0.29", "-75.7147, 176.841, -69.5659, 0.59", "-75.8278, 177.452, -70.0493, 0.59", "-75.8807, 177.788, -70.3131, 0.88", "-75.974, 178.38, -70.772, 0.88", "-76.2682, 179.806, -71.8967, 0.29", "-76.3538, 180.311, -72.2766, 0.29", "-76.4096, 180.742, -72.5859, 0.29", "-76.4753, 181.421, -73.0691, 0.96", "-76.532, 181.922, -73.4107, 0.96", "-76.7966, 183.424, -74.3346, 0.29", "-77.0245, 184.209, -74.7555, 0.29", "-77.1494, 184.513, -74.9176, 0.29", "-77.4321, 185.091, -75.1973, 0.29", "-77.6915, 185.58, -75.4147, 0.29", "-77.9835, 186.131, -75.6273, 0.81", "-78.2274, 186.611, -75.7982, 0.88", "-78.8114, 187.826, -76.2896, 0.29", "-79.1076, 188.47, -76.5572, 0.59", "-79.3269, 188.967, -76.7557, 0.59", "-79.5555, 189.493, -76.9564, 0.29", "-79.9078, 190.341, -77.2695, 0.29", "-80.1394, 190.979, -77.4889, 0.29", "-80.3863, 191.702, -77.7126, 0.29", "-80.5835, 192.292, -77.9124, 0.29", "-80.8313, 193.044, -78.1481, 0.29", "-80.9542, 193.4, -78.2418, 0.29", "-81.3003, 194.327, -78.4457, 0.88", "-81.444, 194.738, -78.5201, 1.11", "-81.8823, 196.247, -78.7429, 0.29", "-82.0285, 196.834, -78.8471, 0.59", "-82.2105, 197.623, -79.0194, 0.29", "-82.3146, 198.02, -79.1151, 0.29", "-82.4829, 198.628, -79.2431, 0.29", "-82.6125, 199.127, -79.3272, 0.29", "-82.9212, 200.231, -79.5259, 0.66", "-83.1125, 200.765, -79.6716, 0.66", "-83.5002, 201.846, -80.0765, 0.37", "-83.7338, 202.487, -80.3533, 0.37", "-84.1121, 203.337, -80.7774, 0.37", "-84.5803, 204.238, -81.2581, 0.37", "-85.0822, 205.107, -81.6905, 0.37", "-85.8415, 206.35, -82.3035, 0.29", "-86.0612, 206.699, -82.4945, 0.29", "-86.614, 207.54, -83.009, 0.29", "-86.8683, 207.925, -83.2534, 0.29", "-87.4188, 208.833, -83.7117, 1.4", "-87.5447, 209.049, -83.7864, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "69.3809, -184.442, -4.08729, 0.37", "79.4497, -190.852, -4.92304, 0.37", "88.8932, -197.999, -6.77903, 0.37", "98.8689, -204.403, -8.41348, 0.37", "108.276, -211.169, -11.4493, 0.37", "117.344, -218.731, -13.5968, 0.37", "127.329, -224.483, -16.7711, 0.37", "136.456, -230.28, -21.8765, 0.37", "145.326, -237.57, -25.3494, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "69.3809, -184.442, -4.08729, 0.22", "73.8843, -187.918, -6.71149, 0.37", "79.0306, -190.613, -9.00856, 0.37", "83.6109, -193.393, -12.2241, 0.37", "88.0614, -195.33, -16.1354, 0.37", "92.1398, -197.885, -20.1139, 0.37", "96.5995, -200.865, -23.3283, 0.37", "101.136, -204.715, -25.3249, 0.37", "105.461, -208.418, -27.9531, 0.37", "110.816, -210.781, -30.1171, 0.37", "116.071, -213.781, -31.6952, 0.37", "122.025, -215.471, -32.4099, 0.37", "128.12, -216.644, -32.8864, 0.37", "134.309, -216.87, -32.3107, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "43.3652, -168.005, 7.93363, 0.37", "48.7075, -172.039, 9.57053, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "43.3652, -168.005, 7.93363, 0.22", "52.0591, -174.468, 8.88165, 0.37", "60.3145, -181.222, 11.0298, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-40.0243, -179.682, -23.8797, 0.37", "-36.635, -189.024, -25.3651, 0.37", "-30.893, -197.192, -25.6397, 0.37", "-25.27, -205.421, -24.9994, 0.37", "-19.2795, -213.347, -24.1229, 0.37", "-12.7379, -220.283, -21.34, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-40.0243, -179.682, -23.8797, 0.22", "-39.4516, -186.241, -28.2473, 0.37", "-40.0683, -192.596, -32.9019, 0.37", "-40.6525, -199.651, -36.4522, 0.37", "-41.6607, -206.841, -39.6255, 0.37", "-41.1146, -214.002, -42.9525, 0.37", "-39.2762, -221.14, -45.8009, 0.37", "-36.637, -228.381, -47.4882, 0.37", "-34.2992, -235.901, -47.9746, 0.37", "-31.8309, -243.296, -46.9158, 0.37", "-30.7923, -251.005, -45.6255, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "184.405, 347.106, 52.9701, 0.29", "186.146, 349.204, 51.716, 0.29", "186.741, 349.944, 51.3398, 0.29", "187.221, 350.609, 51.0919, 0.29", "187.528, 351.092, 50.9651, 0.29", "188.046, 352.004, 50.7873, 0.74", "188.199, 352.294, 50.7483, 0.74", "188.757, 353.538, 50.7814, 0.22", "189.254, 354.678, 50.8089, 0.22", "189.619, 355.661, 50.8398, 0.22", "189.811, 356.237, 50.8731, 0.52", "190.104, 357.167, 50.9884, 0.22", "190.213, 357.539, 51.0442, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "184.405, 347.106, 52.9701, 0.44", "184.081, 348.723, 53.9741, 0.44", "183.943, 349.935, 54.7372, 0.44", "183.829, 351.24, 55.5358, 0.44", "183.77, 352.12, 56.0584, 0.44", "183.705, 353.186, 56.6534, 0.37", "183.67, 353.817, 56.9847, 0.37", "183.658, 354.922, 57.664, 0.88", "183.684, 355.336, 57.9023, 1.47", "183.723, 355.792, 58.1157, 1.47", "183.794, 357.02, 58.5757, 0.37", "183.775, 357.733, 58.7816, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "177.246, 326.002, 26.9309, 0.29", "177.818, 326.397, 27.104, 0.29", "178.716, 326.932, 27.3231, 0.81", "179.369, 327.264, 27.4641, 0.81", "180.288, 327.632, 27.6197, 0.22", "180.823, 327.806, 27.6855, 0.59", "182.607, 328.278, 27.8689, 0.22", "183.854, 328.52, 27.9369, 0.81", "184.508, 328.624, 27.939, 0.81", "185.825, 328.846, 27.8741, 0.29", "187.25, 329.143, 27.7571, 0.29", "188.858, 329.583, 27.5874, 0.22", "189.817, 329.919, 27.4834, 0.22", "191.057, 330.49, 27.2985, 0.81", "192.541, 331.359, 27.068, 0.22", "193.554, 332.114, 26.9122, 0.22", "194.443, 332.885, 26.7603, 0.44", "195.03, 333.486, 26.6458, 0.15", "195.521, 334.049, 26.5635, 0.22", "196.215, 334.948, 26.479, 0.15", "196.672, 335.572, 26.4668, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "177.246, 326.002, 26.9309, 0.22", "178.554, 326.289, 27.2061, 0.22", "179.039, 326.396, 27.308, 0.81", "179.563, 326.511, 27.4181, 0.52", "180.647, 326.749, 27.6461, 1.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-50.2322, 193.819, -65.4118, 0.37", "-49.4837, 195.929, -65.3125, 0.37", "-48.9564, 197.703, -65.3723, 0.37", "-48.5555, 199.052, -65.4177, 0.37", "-48.1293, 200.486, -65.4661, 0.81", "-47.9311, 201.152, -65.4886, 0.81", "-47.419, 202.875, -65.5467, 0.52", "-47.2183, 204.274, -65.6893, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-50.2322, 193.819, -65.4118, 0.29", "-49.8914, 195.17, -65.3217, 0.29", "-49.6476, 196.137, -65.2573, 0.88", "-49.3854, 197.177, -65.188, 0.29", "-49.1945, 197.934, -65.1375, 0.88", "-48.9749, 198.805, -65.0795, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "60.3145, -181.222, 11.0298, 0.37", "66.8911, -186.562, 9.57079, 0.37", "73.295, -191.938, 7.5719, 0.37", "78.7616, -198.497, 6.27771, 0.37", "83.9336, -205.332, 5.1336, 0.37", "88.8657, -212.44, 4.8409, 0.37", "94.0813, -219.238, 5.98437, 0.37", "99.5325, -225.807, 7.29041, 0.37", "104.83, -232.138, 9.79779, 0.37", "110.455, -238.289, 11.9966, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "60.3145, -181.222, 11.0298, 0.22", "67.3783, -186.747, 11.2254, 0.37", "73.3511, -193.494, 11.2645, 0.37", "79.621, -199.95, 11.2585, 0.37", "85.9836, -206.283, 11.8343, 0.37", "92.8392, -212.08, 11.7624, 0.37", "100.475, -216.681, 12.5028, 0.37", "107.815, -221.19, 14.9045, 0.37", "115.582, -223.962, 18.2745, 0.37", "123.313, -225.033, 22.5411, 0.37", "130.464, -227.126, 27.4106, 0.37", "137.608, -230.319, 31.6836, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "183.775, 357.733, 58.7816, 0.29", "183.339, 359.226, 58.9643, 0.29", "183.011, 360.214, 59.0771, 0.29", "182.797, 360.838, 59.1469, 0.66", "182.725, 361.057, 59.173, 0.66", "182.508, 361.854, 59.28, 0.22", "182.31, 362.752, 59.4117, 0.22", "182.206, 363.438, 59.5243, 0.22", "182.179, 363.819, 59.5931, 0.59", "182.198, 364.286, 59.6877, 0.59", "182.307, 365.292, 59.9048, 0.29", "182.415, 365.96, 60.0816, 0.88", "182.523, 366.54, 60.2506, 0.88", "182.86, 368.324, 60.7821, 0.29", "183.033, 369.243, 61.0614, 0.29", "183.127, 369.773, 61.2257, 0.59", "183.396, 371.421, 61.7627, 0.29", "183.528, 372.235, 62.0462, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "183.775, 357.733, 58.7816, 0.29", "184.06, 359.142, 59.1, 0.29", "184.416, 360.44, 59.5425, 0.29", "184.701, 361.345, 59.8939, 0.29", "185.212, 362.804, 60.482, 0.29", "185.497, 363.574, 60.7972, 0.29", "185.967, 364.796, 61.3007, 0.29", "186.494, 366.122, 61.8644, 1.03", "186.92, 367.106, 62.3388, 1.69", "187.531, 368.397, 63.0186, 0.22", "187.836, 369.0, 63.3513, 0.52", "187.995, 369.319, 63.5261, 0.59", "188.407, 370.262, 64.0715, 0.22", "188.763, 371.168, 64.6656, 0.52", "188.937, 371.687, 65.0943, 0.66", "189.108, 372.322, 65.7699, 0.22", "189.215, 372.683, 66.226, 0.22", "189.581, 373.709, 67.6884, 0.66", "189.801, 374.205, 68.5211, 1.03", "190.082, 374.672, 69.4378, 1.03", "190.522, 375.323, 70.7212, 0.29", "190.823, 375.765, 71.5259, 0.37", "191.087, 376.175, 72.1656, 0.37", "191.535, 376.839, 73.0435, 0.29", "191.926, 377.365, 73.702, 0.29", "192.308, 377.876, 74.2946, 0.29", "192.648, 378.409, 74.789, 0.66", "192.916, 378.958, 75.2168, 0.66", "193.252, 379.907, 75.8463, 0.29", "193.437, 380.699, 76.2525, 0.29", "193.525, 381.236, 76.4869, 0.29", "193.66, 382.219, 76.8612, 0.66", "193.733, 382.887, 77.0949, 0.74", "193.941, 384.608, 77.5683, 0.29", "194.13, 386.021, 77.8747, 0.29", "194.318, 387.152, 78.0592, 0.88", "194.432, 387.667, 78.1215, 1.03", "194.711, 388.61, 78.2, 0.74", "195.285, 390.153, 78.2633, 0.29", "195.641, 390.926, 78.2078, 0.59", "196.131, 391.896, 78.0629, 0.29", "196.551, 392.745, 77.8707, 0.59", "196.822, 393.31, 77.6981, 0.29", "197.149, 394.078, 77.4284, 0.81", "197.728, 395.72, 76.8913, 0.29", "198.045, 396.757, 76.5581, 0.29", "198.28, 397.588, 76.2999, 0.29", "198.578, 398.651, 75.9645, 0.22", "199.068, 400.51, 75.4174, 0.22", "199.626, 402.929, 74.7904, 0.22", "200.051, 404.936, 74.3289, 0.22", "200.426, 406.774, 73.9405, 0.74", "200.604, 407.673, 73.7701, 0.96", "200.941, 409.465, 73.473, 0.22", "201.271, 411.278, 73.1674, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "180.647, 326.749, 27.6461, 0.22", "180.886, 328.417, 27.6393, 0.22", "180.976, 329.039, 27.6368, 0.37", "181.151, 330.262, 27.6318, 0.22", "181.283, 331.181, 27.6281, 0.22", "181.455, 332.379, 27.6233, 0.22", "181.638, 333.651, 27.6181, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "180.647, 326.749, 27.6461, 0.22", "182.427, 326.008, 27.4093, 0.22", "183.066, 325.742, 27.3244, 0.22", "183.809, 325.433, 27.2256, 0.52", "184.664, 325.077, 27.112, 1.11", "185.499, 324.729, 27.001, 0.81", "186.41, 324.35, 26.88, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-47.2183, 204.274, -65.6893, 0.59", "-47.8881, 205.905, -65.3896, 0.59", "-48.055, 206.411, -65.3245, 0.88", "-48.3765, 207.412, -65.2227, 0.29", "-48.6275, 208.194, -65.1502, 0.29", "-48.9007, 208.999, -65.0791, 0.37", "-49.1675, 209.74, -65.0147, 0.37", "-49.7015, 211.049, -64.8877, 0.29", "-49.9403, 211.625, -64.8598, 0.29", "-50.3409, 212.609, -64.8326, 0.29", "-50.6031, 213.287, -64.8013, 0.96", "-50.7866, 213.749, -64.77, 0.96", "-50.9789, 214.213, -64.7188, 0.74", "-51.454, 215.285, -64.5299, 0.29", "-51.8487, 216.221, -64.3616, 0.29", "-52.107, 216.846, -64.2423, 0.29", "-52.4017, 217.573, -64.081, 0.74", "-52.5212, 217.864, -64.0083, 0.74", "-52.6813, 218.246, -63.9017, 0.44", "-53.0882, 219.136, -63.6453, 0.29", "-53.4405, 219.816, -63.457, 0.29", "-54.1936, 221.198, -63.0263, 0.29", "-54.5264, 221.805, -62.8057, 0.96", "-54.7617, 222.233, -62.6134, 0.59", "-55.0629, 222.789, -62.3031, 0.29", "-55.481, 223.547, -61.7953, 0.22", "-55.8832, 224.254, -61.2619, 0.22", "-56.1164, 224.648, -60.9305, 0.22", "-56.4816, 225.268, -60.438, 0.22", "-56.8015, 225.841, -60.0234, 0.22", "-57.0686, 226.408, -59.651, 0.81", "-57.1309, 226.573, -59.5616, 1.18", "-57.263, 227.003, -59.4046, 1.18", "-57.5368, 228.037, -59.1517, 0.29", "-57.6613, 228.624, -59.0529, 0.29", "-57.7735, 229.349, -58.938, 0.66", "-57.799, 229.603, -58.8914, 0.66", "-57.8512, 230.708, -58.7134, 0.37", "-57.8762, 231.366, -58.627, 0.37", "-57.9327, 232.033, -58.5676, 0.37", "-58.0111, 232.556, -58.5641, 0.74", "-58.1177, 233.102, -58.5965, 0.74", "-58.3506, 234.269, -58.6945, 0.29", "-58.4764, 235.005, -58.7539, 0.29", "-58.5963, 235.987, -58.8562, 0.29", "-58.7032, 236.981, -58.9653, 0.88", "-58.7625, 237.537, -59.0175, 0.88", "-58.8437, 238.312, -59.0756, 0.29", "-58.9596, 239.253, -59.0993, 0.29", "-59.0116, 239.736, -59.1056, 0.29", "-59.1333, 240.531, -59.1125, 0.74", "-59.2445, 241.019, -59.1135, 0.74", "-59.5112, 241.961, -59.1129, 0.37", "-59.7548, 242.719, -59.1093, 0.59", "-59.9386, 243.244, -59.0994, 0.59", "-60.1818, 243.994, -59.0639, 0.29", "-60.4248, 244.875, -58.9942, 0.29", "-60.5456, 245.332, -58.935, 0.29", "-60.6902, 245.869, -58.8321, 0.52", "-60.8063, 246.309, -58.7324, 1.03", "-60.9506, 246.918, -58.5561, 1.03", "-61.1809, 248.009, -58.1862, 0.22", "-61.4534, 249.354, -57.673, 0.22", "-61.6407, 250.303, -57.2862, 0.96", "-61.7556, 250.866, -57.0445, 0.96", "-62.0227, 252.249, -56.4101, 0.29", "-62.2161, 253.313, -55.8853, 0.29", "-62.3412, 254.014, -55.5263, 0.88", "-62.4387, 254.547, -55.2546, 1.18", "-62.6921, 255.824, -54.6537, 0.37", "-62.9773, 256.891, -54.0929, 0.37", "-63.4383, 258.303, -53.2751, 0.37", "-63.7355, 259.131, -52.705, 0.37", "-63.9416, 259.691, -52.2486, 0.96", "-64.1612, 260.31, -51.6444, 0.96", "-64.633, 261.894, -49.6967, 0.29", "-64.6839, 262.184, -49.2905, 0.29", "-64.6921, 262.706, -48.5149, 0.88", "-64.6501, 263.086, -47.9635, 0.88", "-64.595, 263.399, -47.5456, 0.59", "-64.3532, 264.635, -46.1079, 0.29", "-64.1548, 265.726, -45.1287, 0.29", "-64.0666, 266.425, -44.5776, 0.81", "-64.0361, 266.764, -44.3454, 0.81", "-64.0296, 267.336, -44.0055, 0.52", "-64.0786, 268.207, -43.5602, 0.22", "-64.3135, 269.789, -42.9121, 0.22", "-64.5195, 270.709, -42.5883, 0.74", "-64.6522, 271.181, -42.4395, 0.74", "-65.0841, 272.479, -42.0633, 0.22", "-65.2918, 273.014, -41.917, 0.22", "-65.5998, 273.693, -41.7415, 0.52", "-65.6873, 273.865, -41.699, 0.59", "-66.1357, 274.725, -41.5117, 0.22", "-66.4821, 275.429, -41.4165, 0.44", "-67.1442, 276.788, -41.3775, 0.22", "-67.4415, 277.38, -41.4381, 0.66", "-67.9038, 278.241, -41.6239, 0.22", "-68.4697, 279.26, -41.9474, 0.74", "-69.0223, 280.223, -42.3453, 0.59", "-69.4963, 281.057, -42.7155, 0.29", "-69.8864, 281.746, -43.0235, 0.52", "-70.5335, 282.872, -43.5402, 0.22", "-70.9656, 283.598, -43.8549, 0.59", "-71.1353, 283.875, -43.9368, 0.59", "-71.6787, 284.818, -44.0506, 0.22", "-71.9733, 285.47, -44.0383, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-47.2183, 204.274, -65.6893, 0.52", "-46.49, 205.722, -66.0316, 0.52", "-46.0616, 206.597, -66.2245, 0.29", "-45.6555, 207.488, -66.3838, 0.29", "-45.0944, 208.745, -66.5748, 0.29", "-44.6888, 209.628, -66.7026, 0.59", "-44.5308, 209.945, -66.7546, 0.66", "-44.0096, 210.883, -66.8846, 0.29", "-43.6337, 211.452, -66.9869, 0.81", "-43.5272, 211.614, -67.0127, 0.81", "-43.0071, 212.346, -67.1021, 0.29", "-42.4499, 213.067, -67.2774, 0.44", "-42.2682, 213.265, -67.3402, 0.66", "-41.9007, 213.542, -67.4599, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "186.41, 324.35, 26.88, 0.37", "188.414, 323.742, 26.4676, 0.37", "189.265, 323.54, 26.3036, 0.22", "190.356, 323.281, 26.0935, 0.22", "190.59, 323.225, 26.0484, 0.66", "191.789, 322.941, 25.8174, 0.22", "192.862, 322.686, 25.6107, 0.22", "193.124, 322.643, 25.589, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "186.41, 324.35, 26.88, 0.22", "187.341, 324.324, 27.1102, 0.22", "187.536, 324.32, 27.1651, 0.88", "187.995, 324.31, 27.2946, 0.22", "188.191, 324.306, 27.3498, 0.74", "188.888, 324.291, 27.5462, 0.22", "189.182, 324.285, 27.6293, 0.44", "189.525, 324.273, 27.7929, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_55", "dend_55", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_NBC_2518b7a9e0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.45000090983035473)
    connect dend_56(0), soma_0(0.45000090983035473)
    connect dend_51(0), soma_0(0.45000090983035473)
    connect dend_32(0), soma_0(0.45000090983035473)
    connect dend_13(0), soma_0(0.45000090983035473)
    connect dend_0(0), soma_0(0.45000090983035473)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.9016, -1.97873, -2.50057, 3.38117 ) }
    soma_0 { pt3dadd( -9.79478, -1.80994, -2.24302, 5.67833 ) }
    soma_0 { pt3dadd( -8.68798, -1.64115, -1.98548, 7.15072 ) }
    soma_0 { pt3dadd( -7.58118, -1.47235, -1.72793, 8.64399 ) }
    soma_0 { pt3dadd( -6.47438, -1.30356, -1.47039, 10.0299 ) }
    soma_0 { pt3dadd( -5.36758, -1.13477, -1.21284, 11.2674 ) }
    soma_0 { pt3dadd( -4.26078, -0.965972, -0.955299, 11.9107 ) }
    soma_0 { pt3dadd( -3.15398, -0.797179, -0.697754, 12.2563 ) }
    soma_0 { pt3dadd( -2.04718, -0.628385, -0.440209, 12.5208 ) }
    soma_0 { pt3dadd( -0.940378, -0.459592, -0.182664, 12.7145 ) }
    soma_0 { pt3dadd( 0.166423, -0.290798, 0.0748807, 12.541 ) }
    soma_0 { pt3dadd( 1.27322, -0.122005, 0.332426, 12.2075 ) }
    soma_0 { pt3dadd( 2.38002, 0.0467885, 0.589971, 11.6554 ) }
    soma_0 { pt3dadd( 3.48682, 0.215582, 0.847516, 11.0225 ) }
    soma_0 { pt3dadd( 4.59362, 0.384375, 1.10506, 10.3416 ) }
    soma_0 { pt3dadd( 5.70042, 0.553169, 1.36261, 9.80603 ) }
    soma_0 { pt3dadd( 6.80722, 0.721962, 1.62015, 9.2712 ) }
    soma_0 { pt3dadd( 7.91403, 0.890756, 1.8777, 8.04801 ) }
    soma_0 { pt3dadd( 9.02083, 1.05955, 2.13524, 5.78101 ) }
    soma_0 { pt3dadd( 10.1276, 1.22834, 2.39279, 3.52734 ) }
    soma_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 2.23302 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.34928, -3.49233, -7.98898, 1.25 ) }
    dend_67 { pt3dadd( 7.30318, -4.1603, -8.36276, 1.25 ) }
    dend_67 { pt3dadd( 8.06475, -4.81086, -9.2149, 1.25 ) }
    dend_67 { pt3dadd( 8.67635, -5.44018, -10.1526, 0.88 ) }
    dend_67 { pt3dadd( 9.1827, -6.05863, -11.0584, 0.88 ) }
    dend_67 { pt3dadd( 9.63426, -6.71576, -11.9503, 0.88 ) }
    dend_67 { pt3dadd( 10.7315, -8.73331, -14.4666, 1.18 ) }
    dend_67 { pt3dadd( 11.3445, -10.5444, -16.66, 1.18 ) }
    dend_67 { pt3dadd( 11.4373, -10.9745, -17.1235, 1.69 ) }
    dend_67 { pt3dadd( 11.5368, -11.5597, -17.6554, 1.84 ) }
    dend_67 { pt3dadd( 11.7035, -12.3925, -18.2657, 1.62 ) }
    dend_67 { pt3dadd( 12.0674, -13.6768, -18.8988, 1.11 ) }
    dend_67 { pt3dadd( 12.6177, -15.0101, -19.1974, 1.11 ) }
    dend_67 { pt3dadd( 13.4285, -16.6311, -19.3726, 1.11 ) }
    dend_67 { pt3dadd( 14.1485, -17.9968, -19.4389, 1.11 ) }
    dend_67 { pt3dadd( 14.8813, -19.4037, -19.4414, 1.11 ) }
    dend_67 { pt3dadd( 15.5474, -20.8408, -19.3795, 1.11 ) }
    dend_67 { pt3dadd( 16.1029, -22.2745, -19.2588, 1.18 ) }
    dend_67 { pt3dadd( 16.3613, -23.3027, -19.157, 1.33 ) }
    dend_67 { pt3dadd( 16.4604, -24.9426, -19.0154, 1.25 ) }
    dend_67 { pt3dadd( 16.3113, -26.293, -18.9428, 0.88 ) }
    dend_67 { pt3dadd( 15.8805, -28.0163, -18.9478, 1.25 ) }
    dend_67 { pt3dadd( 15.6071, -28.7943, -19.0077, 1.55 ) }
    dend_67 { pt3dadd( 15.3079, -29.6311, -19.0768, 1.55 ) }
    dend_67 { pt3dadd( 14.9556, -30.7883, -19.171, 1.33 ) }
    dend_67 { pt3dadd( 14.6989, -32.0138, -19.251, 1.11 ) }
    dend_67 { pt3dadd( 14.5761, -33.6412, -19.28, 0.81 ) }
    dend_67 { pt3dadd( 14.7437, -35.5115, -19.2219, 0.59 ) }
    dend_67 { pt3dadd( 15.3593, -37.8224, -19.0184, 0.59 ) }
    dend_67 { pt3dadd( 15.9007, -38.8935, -18.8548, 0.74 ) }
    dend_67 { pt3dadd( 16.9068, -40.1273, -18.5808, 0.96 ) }
    dend_67 { pt3dadd( 17.7266, -40.8506, -18.387, 1.18 ) }
    dend_67 { pt3dadd( 18.3707, -41.3015, -18.2741, 1.18 ) }
    dend_67 { pt3dadd( 19.2409, -41.8437, -18.18, 1.18 ) }
    dend_67 { pt3dadd( 20.2232, -42.4876, -18.1751, 0.88 ) }
    dend_67 { pt3dadd( 21.2267, -43.3921, -18.2924, 0.88 ) }
    dend_67 { pt3dadd( 21.6779, -44.0126, -18.4361, 1.11 ) }
    dend_67 { pt3dadd( 22.2495, -45.1058, -18.7122, 1.11 ) }
    dend_67 { pt3dadd( 22.5838, -45.8982, -18.9187, 0.96 ) }
    dend_67 { pt3dadd( 22.8856, -46.6881, -19.1272, 1.25 ) }
    dend_67 { pt3dadd( 23.5257, -48.2311, -19.5675, 0.66 ) }
    dend_67 { pt3dadd( 23.9587, -49.0793, -19.8198, 0.66 ) }
    dend_67 { pt3dadd( 24.4947, -49.8128, -20.0332, 0.66 ) }
    dend_67 { pt3dadd( 25.1161, -50.3382, -20.2012, 0.74 ) }
    dend_67 { pt3dadd( 25.9969, -50.8182, -20.4318, 0.59 ) }
    dend_67 { pt3dadd( 27.1555, -51.3122, -20.7285, 0.88 ) }
    dend_67 { pt3dadd( 27.8019, -51.5706, -20.9016, 0.88 ) }
    dend_67 { pt3dadd( 28.4247, -51.8616, -21.079, 1.11 ) }
    dend_67 { pt3dadd( 29.5854, -52.5548, -21.4514, 0.66 ) }
    dend_67 { pt3dadd( 30.5834, -53.3717, -21.8189, 0.59 ) }
    dend_67 { pt3dadd( 31.3967, -54.3876, -22.1759, 0.66 ) }
    dend_67 { pt3dadd( 32.0024, -55.5372, -22.4589, 0.81 ) }
    dend_67 { pt3dadd( 32.4719, -56.7472, -22.7237, 1.4 ) }
    dend_67 { pt3dadd( 32.6262, -57.2725, -22.8219, 1.55 ) }
    dend_67 { pt3dadd( 32.8475, -58.288, -22.9673, 0.96 ) }
    dend_67 { pt3dadd( 33.0954, -59.6108, -23.1232, 0.52 ) }
    dend_67 { pt3dadd( 33.3172, -60.5895, -23.2731, 0.52 ) }
    dend_67 { pt3dadd( 33.6478, -61.7062, -23.4681, 0.96 ) }
    dend_67 { pt3dadd( 33.899, -62.4421, -23.6252, 1.03 ) }
    dend_67 { pt3dadd( 34.0798, -62.9367, -23.7243, 1.11 ) }
    dend_67 { pt3dadd( 34.2769, -63.4647, -23.8086, 1.11 ) }
    dend_67 { pt3dadd( 34.8077, -64.923, -24.0198, 0.52 ) }
    dend_67 { pt3dadd( 35.2084, -66.2355, -24.1315, 0.59 ) }
    dend_67 { pt3dadd( 35.5421, -67.497, -24.1544, 0.59 ) }
    dend_67 { pt3dadd( 35.8607, -68.7381, -24.1509, 1.18 ) }
    dend_67 { pt3dadd( 36.1377, -69.7383, -24.1724, 1.55 ) }
    dend_67 { pt3dadd( 36.3159, -70.3099, -24.2037, 1.55 ) }
    dend_67 { pt3dadd( 36.8643, -71.815, -24.4989, 0.81 ) }
    dend_67 { pt3dadd( 37.2739, -72.7298, -24.8725, 0.52 ) }
    dend_67 { pt3dadd( 37.7321, -73.5974, -25.389, 0.44 ) }
    dend_67 { pt3dadd( 38.3636, -74.7121, -26.2088, 0.81 ) }
    dend_67 { pt3dadd( 38.7452, -75.3647, -26.7314, 0.96 ) }
    dend_67 { pt3dadd( 39.7829, -77.1236, -28.1572, 0.52 ) }
    dend_67 { pt3dadd( 40.2109, -77.8494, -28.7505, 0.96 ) }
    dend_67 { pt3dadd( 40.5408, -78.4712, -29.1711, 1.25 ) }
    dend_67 { pt3dadd( 40.8772, -79.2085, -29.5361, 1.03 ) }
    dend_67 { pt3dadd( 41.2193, -80.0564, -29.8123, 0.74 ) }
    dend_67 { pt3dadd( 41.4285, -80.6041, -29.935, 0.74 ) }
    dend_67 { pt3dadd( 41.8333, -81.5962, -30.064, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_67 { pt3dadd( 42.3046, -82.6704, -30.2501, 0.44 ) }
    dend_67 { pt3dadd( 42.8511, -83.872, -30.4709, 0.96 ) }
    dend_67 { pt3dadd( 43.1894, -84.6097, -30.606, 1.55 ) }
    dend_67 { pt3dadd( 43.4547, -85.2292, -30.6392, 1.69 ) }
    dend_67 { pt3dadd( 43.7455, -85.9558, -30.5866, 1.25 ) }
    dend_67 { pt3dadd( 44.2995, -87.3263, -30.4436, 0.59 ) }
    dend_67 { pt3dadd( 44.8565, -88.6466, -30.2838, 0.59 ) }
    dend_67 { pt3dadd( 45.4932, -90.0769, -30.1622, 1.25 ) }
    dend_67 { pt3dadd( 46.7676, -92.9051, -30.0867, 0.52 ) }
    dend_67 { pt3dadd( 47.417, -94.3475, -30.0992, 0.44 ) }
    dend_67 { pt3dadd( 48.1941, -96.085, -30.1682, 0.96 ) }
    dend_67 { pt3dadd( 48.5187, -96.814, -30.2213, 0.96 ) }
    dend_67 { pt3dadd( 49.2512, -98.3895, -30.4725, 0.52 ) }
    dend_67 { pt3dadd( 49.9551, -99.7873, -30.8206, 0.52 ) }
    dend_67 { pt3dadd( 50.7067, -101.161, -31.2984, 1.11 ) }
    dend_67 { pt3dadd( 51.0218, -101.735, -31.4626, 1.55 ) }
    dend_67 { pt3dadd( 51.3412, -102.359, -31.5731, 1.77 ) }
    dend_67 { pt3dadd( 51.5552, -102.776, -31.666, 1.84 ) }
    dend_67 { pt3dadd( 51.8616, -103.352, -31.84, 1.47 ) }
    dend_67 { pt3dadd( 52.3386, -104.166, -32.2264, 1.11 ) }
    dend_67 { pt3dadd( 52.7957, -104.913, -32.6857, 0.81 ) }
    dend_67 { pt3dadd( 53.4657, -106.092, -33.501, 0.44 ) }
    dend_67 { pt3dadd( 54.207, -107.549, -34.5727, 0.96 ) }
    dend_67 { pt3dadd( 54.5748, -108.371, -35.1821, 1.11 ) }
    dend_67 { pt3dadd( 54.8462, -109.032, -35.6887, 0.81 ) }
    dend_67 { pt3dadd( 55.1469, -109.823, -36.2401, 0.29 ) }
    dend_67 { pt3dadd( 55.4855, -110.716, -36.7091, 0.29 ) }
    dend_67 { pt3dadd( 55.78, -111.447, -36.8959, 0.59 ) }
    dend_67 { pt3dadd( 56.1775, -112.387, -36.9384, 0.88 ) }
    dend_67 { pt3dadd( 56.4964, -113.097, -36.8973, 1.03 ) }
    dend_67 { pt3dadd( 57.2044, -114.6, -36.7369, 1.03 ) }
    dend_67 { pt3dadd( 57.8205, -115.774, -36.5755, 0.59 ) }
    dend_67 { pt3dadd( 58.4962, -116.935, -36.4086, 0.59 ) }
    dend_67 { pt3dadd( 59.1072, -117.949, -36.2729, 0.88 ) }
    dend_67 { pt3dadd( 59.6444, -118.923, -36.1451, 1.25 ) }
    dend_67 { pt3dadd( 59.9431, -119.535, -36.0893, 1.47 ) }
    dend_67 { pt3dadd( 60.1132, -119.972, -36.0788, 1.47 ) }
    dend_67 { pt3dadd( 60.432, -121.125, -36.0721, 0.37 ) }
    dend_67 { pt3dadd( 60.6212, -122.312, -36.0738, 0.37 ) }
    dend_67 { pt3dadd( 60.6887, -123.872, -36.0998, 0.74 ) }
    dend_67 { pt3dadd( 60.6228, -124.841, -36.1416, 0.66 ) }
    dend_67 { pt3dadd( 60.4911, -126.042, -36.2003, 0.52 ) }
    dend_67 { pt3dadd( 60.4158, -126.62, -36.2103, 0.88 ) }
    dend_67 { pt3dadd( 60.3181, -127.296, -36.188, 0.88 ) }
    dend_67 { pt3dadd( 60.2895, -128.058, -35.9386, 0.37 ) }
    dend_67 { pt3dadd( 60.5442, -128.781, -35.0383, 0.37 ) }
    dend_67 { pt3dadd( 60.8117, -129.358, -34.1068, 0.37 ) }
    dend_67 { pt3dadd( 61.1708, -129.979, -33.0617, 0.37 ) }
    dend_67 { pt3dadd( 61.4713, -130.454, -32.2776, 0.44 ) }
    dend_67 { pt3dadd( 62.5939, -132.044, -29.7127, 1.18 ) }
    dend_67 { pt3dadd( 63.1295, -132.782, -28.618, 1.18 ) }
    dend_67 { pt3dadd( 63.7449, -133.627, -27.4186, 0.37 ) }
    dend_67 { pt3dadd( 64.1957, -134.321, -26.5658, 0.81 ) }
    dend_67 { pt3dadd( 64.422, -134.691, -26.1916, 0.81 ) }
    dend_67 { pt3dadd( 64.7452, -135.237, -25.7452, 0.81 ) }
    dend_67 { pt3dadd( 65.3667, -136.237, -25.1243, 0.37 ) }
    dend_67 { pt3dadd( 66.3487, -137.657, -24.2246, 1.33 ) }
    dend_67 { pt3dadd( 66.7259, -138.128, -23.8756, 1.69 ) }
    dend_67 { pt3dadd( 67.4595, -138.98, -23.1744, 1.25 ) }
    dend_67 { pt3dadd( 68.051, -139.589, -22.6482, 0.66 ) }
    dend_67 { pt3dadd( 68.8251, -140.274, -22.0534, 0.52 ) }
    dend_67 { pt3dadd( 69.6013, -140.842, -21.6117, 0.81 ) }
    dend_67 { pt3dadd( 69.9786, -141.124, -21.458, 0.81 ) }
    dend_67 { pt3dadd( 70.4016, -141.464, -21.3, 0.81 ) }
    dend_67 { pt3dadd( 70.9553, -141.974, -21.1149, 0.44 ) }
    dend_67 { pt3dadd( 71.518, -142.611, -20.9027, 0.37 ) }
    dend_67 { pt3dadd( 71.8175, -143.209, -20.7683, 0.37 ) }
    dend_67 { pt3dadd( 72.132, -144.741, -20.5706, 0.37 ) }
    dend_67 { pt3dadd( 72.2335, -145.523, -20.504, 0.74 ) }
    dend_67 { pt3dadd( 72.3171, -146.242, -20.463, 0.81 ) }
    dend_67 { pt3dadd( 72.385, -146.795, -20.444, 0.81 ) }
    dend_67 { pt3dadd( 72.5573, -147.771, -20.4428, 0.37 ) }
    dend_67 { pt3dadd( 72.8361, -148.773, -20.4021, 0.37 ) }
    dend_67 { pt3dadd( 73.4209, -150.138, -20.3096, 0.37 ) }
    dend_67 { pt3dadd( 73.9079, -151.057, -20.2019, 0.66 ) }
    dend_67 { pt3dadd( 74.2317, -151.597, -20.118, 0.81 ) }
    dend_67 { pt3dadd( 74.7588, -152.397, -19.9699, 0.81 ) }
    dend_67 { pt3dadd( 75.8093, -153.864, -19.6624, 0.52 ) }
    dend_67 { pt3dadd( 76.156, -154.355, -19.5574, 0.52 ) }
    dend_67 { pt3dadd( 76.8237, -155.474, -19.3508, 0.88 ) }
    dend_67 { pt3dadd( 77.051, -155.975, -19.2922, 1.18 ) }
    dend_67 { pt3dadd( 77.2172, -156.459, -19.285, 1.18 ) }
    dend_67 { pt3dadd( 77.3704, -157.118, -19.3417, 1.18 ) }
    dend_67 { pt3dadd( 77.463, -157.889, -19.5018, 0.96 ) }
    dend_67 { pt3dadd( 77.5136, -158.927, -19.8196, 0.52 ) }
    dend_67 { pt3dadd( 77.5776, -160.183, -20.3297, 0.52 ) }
    dend_67 { pt3dadd( 77.6611, -160.997, -20.7003, 0.74 ) }
    dend_67 { pt3dadd( 77.738, -161.475, -20.9311, 0.74 ) }
    dend_67 { pt3dadd( 77.9957, -162.511, -21.376, 0.52 ) }
    dend_67 { pt3dadd( 78.5496, -163.921, -21.8991, 0.52 ) }
    dend_67 { pt3dadd( 79.0911, -164.826, -22.191, 0.59 ) }
    dend_67 { pt3dadd( 79.8354, -165.791, -22.4437, 0.81 ) }
    dend_67 { pt3dadd( 80.5963, -166.657, -22.6044, 0.59 ) }
    dend_67 { pt3dadd( 81.7477, -167.817, -22.8275, 0.37 ) }
    dend_67 { pt3dadd( 82.553, -168.563, -22.9739, 0.37 ) }
    dend_67 { pt3dadd( 83.4021, -169.38, -23.0585, 1.11 ) }
    dend_67 { pt3dadd( 83.6034, -169.584, -23.0779, 1.4 ) }
    dend_67 { pt3dadd( 84.272, -170.251, -23.152, 1.03 ) }
    dend_67 { pt3dadd( 85.2241, -171.234, -23.2778, 0.52 ) }
    dend_67 { pt3dadd( 86.1281, -172.263, -23.4626, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_67 { pt3dadd( 87.0307, -173.399, -23.6422, 1.18 ) }
    dend_67 { pt3dadd( 87.3656, -173.848, -23.7281, 1.47 ) }
    dend_67 { pt3dadd( 87.7026, -174.292, -23.8444, 1.47 ) }
    dend_67 { pt3dadd( 88.5922, -175.542, -24.2416, 0.52 ) }
    dend_67 { pt3dadd( 89.2503, -176.564, -24.6983, 0.88 ) }
    dend_67 { pt3dadd( 89.5891, -177.173, -25.0622, 0.88 ) }
    dend_67 { pt3dadd( 90.2139, -178.344, -26.0259, 0.59 ) }
    dend_67 { pt3dadd( 90.6679, -179.237, -26.8647, 1.03 ) }
    dend_67 { pt3dadd( 90.9962, -179.886, -27.5286, 1.03 ) }
    dend_67 { pt3dadd( 91.6551, -181.154, -28.9587, 0.44 ) }
    dend_67 { pt3dadd( 91.9161, -181.706, -29.5984, 0.44 ) }
    dend_67 { pt3dadd( 92.427, -183.034, -31.1008, 1.03 ) }
    dend_67 { pt3dadd( 92.5682, -183.574, -31.6473, 1.18 ) }
    dend_67 { pt3dadd( 92.6934, -184.289, -32.2867, 0.74 ) }
    dend_67 { pt3dadd( 92.8508, -185.587, -33.3039, 0.44 ) }
    dend_67 { pt3dadd( 92.8654, -186.535, -33.8193, 0.44 ) }
    dend_67 { pt3dadd( 92.8324, -187.582, -34.2482, 0.44 ) }
    dend_67 { pt3dadd( 92.7488, -189.043, -34.6336, 1.11 ) }
    dend_67 { pt3dadd( 92.7496, -189.603, -34.7412, 1.47 ) }
    dend_67 { pt3dadd( 92.829, -190.494, -34.8379, 1.47 ) }
    dend_67 { pt3dadd( 93.1942, -192.287, -34.8652, 0.44 ) }
    dend_67 { pt3dadd( 93.557, -193.395, -34.8419, 0.44 ) }
    dend_67 { pt3dadd( 94.0967, -194.683, -34.8001, 0.44 ) }
    dend_67 { pt3dadd( 94.6456, -195.85, -34.7712, 0.44 ) }
    dend_67 { pt3dadd( 95.0175, -196.674, -34.8003, 0.29 ) }
    dend_67 { pt3dadd( 95.5008, -197.853, -34.9566, 0.29 ) }
    dend_67 { pt3dadd( 95.7042, -198.487, -35.1254, 1.4 ) }
    dend_67 { pt3dadd( 95.8317, -199.202, -35.3578, 1.99 ) }
    dend_67 { pt3dadd( 95.9039, -200.141, -35.7018, 1.47 ) }
    dend_67 { pt3dadd( 95.9262, -201.651, -36.3075, 0.44 ) }
    dend_67 { pt3dadd( 95.9336, -202.878, -36.7458, 0.37 ) }
    dend_67 { pt3dadd( 95.9726, -204.035, -37.1061, 0.37 ) }
    dend_67 { pt3dadd( 96.0261, -205.041, -37.3623, 0.74 ) }
    dend_67 { pt3dadd( 96.1044, -205.748, -37.5222, 0.88 ) }
    dend_67 { pt3dadd( 96.2245, -206.407, -37.6384, 0.37 ) }
    dend_67 { pt3dadd( 96.7322, -208.337, -37.851, 0.29 ) }
    dend_67 { pt3dadd( 97.023, -209.149, -37.8877, 0.29 ) }
    dend_67 { pt3dadd( 97.3536, -209.889, -37.906, 0.96 ) }
    dend_67 { pt3dadd( 98.1632, -211.471, -38.0932, 0.37 ) }
    dend_67 { pt3dadd( 98.7306, -212.521, -38.316, 0.66 ) }
    dend_67 { pt3dadd( 98.9687, -212.952, -38.4486, 0.66 ) }
    dend_67 { pt3dadd( 99.7286, -214.354, -39.079, 0.37 ) }
    dend_67 { pt3dadd( 99.9366, -214.735, -39.2672, 0.81 ) }
    dend_67 { pt3dadd( 101.016, -216.566, -40.208, 0.37 ) }
    dend_67 { pt3dadd( 101.282, -216.96, -40.4321, 0.88 ) }
    dend_67 { pt3dadd( 101.552, -217.302, -40.6625, 0.88 ) }
    dend_67 { pt3dadd( 102.279, -218.071, -41.2703, 0.44 ) }
    dend_67 { pt3dadd( 102.776, -218.553, -41.6961, 0.44 ) }
    dend_67 { pt3dadd( 103.499, -219.197, -42.228, 0.81 ) }
    dend_67 { pt3dadd( 104.702, -220.137, -42.9984, 1.55 ) }
    dend_67 { pt3dadd( 105.152, -220.467, -43.2786, 1.69 ) }
    dend_67 { pt3dadd( 106.381, -221.356, -44.0659, 0.37 ) }
    dend_67 { pt3dadd( 107.245, -221.989, -44.6346, 0.37 ) }
    dend_67 { pt3dadd( 108.097, -222.68, -45.2555, 0.37 ) }
    dend_67 { pt3dadd( 109.0, -223.494, -45.9358, 0.44 ) }
    dend_67 { pt3dadd( 109.621, -224.098, -46.3825, 1.03 ) }
    dend_67 { pt3dadd( 110.094, -224.543, -46.6991, 1.4 ) }
    dend_67 { pt3dadd( 110.484, -224.894, -46.9297, 1.4 ) }
    dend_67 { pt3dadd( 111.649, -225.837, -47.5178, 0.29 ) }
    dend_67 { pt3dadd( 112.502, -226.556, -47.8807, 0.29 ) }
    dend_67 { pt3dadd( 113.18, -227.13, -48.1065, 0.29 ) }
    dend_67 { pt3dadd( 113.697, -227.55, -48.2486, 0.29 ) }
    dend_67 { pt3dadd( 114.36, -228.067, -48.3996, 0.74 ) }
    dend_67 { pt3dadd( 114.918, -228.486, -48.5118, 1.11 ) }
    dend_67 { pt3dadd( 116.077, -229.294, -48.6987, 0.52 ) }
    dend_67 { pt3dadd( 116.718, -229.746, -48.8057, 0.81 ) }
    dend_67 { pt3dadd( 117.443, -230.311, -48.933, 0.66 ) }
    dend_67 { pt3dadd( 118.228, -230.957, -49.1016, 0.29 ) }
    dend_67 { pt3dadd( 118.917, -231.507, -49.2658, 0.29 ) }
    dend_67 { pt3dadd( 119.847, -232.207, -49.4968, 0.29 ) }
    dend_67 { pt3dadd( 121.042, -233.025, -49.7887, 0.44 ) }
    dend_67 { pt3dadd( 121.625, -233.415, -49.9136, 0.44 ) }
    dend_67 { pt3dadd( 122.506, -234.001, -50.1037, 0.29 ) }
    dend_67 { pt3dadd( 122.954, -234.312, -50.1944, 0.59 ) }
    dend_67 { pt3dadd( 123.27, -234.544, -50.2625, 0.59 ) }
    dend_67 { pt3dadd( 123.814, -234.984, -50.4033, 0.29 ) }
    dend_67 { pt3dadd( 124.554, -235.61, -50.6255, 0.29 ) }
    dend_67 { pt3dadd( 125.238, -236.222, -50.8526, 0.59 ) }
    dend_67 { pt3dadd( 125.592, -236.564, -50.9725, 0.74 ) }
    dend_67 { pt3dadd( 125.82, -236.803, -51.06, 0.74 ) }
    dend_67 { pt3dadd( 126.831, -237.943, -51.4978, 0.29 ) }
    dend_67 { pt3dadd( 127.553, -238.827, -51.8605, 0.44 ) }
    dend_67 { pt3dadd( 128.008, -239.411, -52.1186, 1.11 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.86928, -3.72807, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.86928, -3.72807, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.62876, -4.6212, 4.36635, 1.25 ) }
    dend_56 { pt3dadd( 7.23196, -6.16135, 4.79788, 1.4 ) }
    dend_56 { pt3dadd( 6.84329, -7.85578, 5.21111, 1.4 ) }
    dend_56 { pt3dadd( 6.55712, -9.453, 5.55373, 1.18 ) }
    dend_56 { pt3dadd( 6.34343, -11.0816, 5.86991, 1.18 ) }
    dend_56 { pt3dadd( 6.26089, -12.4404, 6.09434, 1.4 ) }
    dend_56 { pt3dadd( 6.35539, -14.3694, 6.35976, 1.4 ) }
    dend_56 { pt3dadd( 6.5582, -16.4517, 6.58037, 1.4 ) }
    dend_56 { pt3dadd( 6.84009, -18.1932, 6.70909, 1.62 ) }
    dend_56 { pt3dadd( 7.12217, -19.3472, 6.78724, 1.47 ) }
    dend_56 { pt3dadd( 7.75317, -21.1927, 6.87835, 1.03 ) }
    dend_56 { pt3dadd( 8.6725, -23.2037, 6.97655, 1.03 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 97/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.81072, -2.96957, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -9.81072, -2.96957, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -10.6124, -3.90414, -6.43703, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -11.6717, -5.35186, -6.65883, 1.11 ) }
    dend_51 { pt3dadd( -12.2536, -6.25419, -6.82752, 1.18 ) }
    dend_51 { pt3dadd( -12.7944, -7.21092, -7.04788, 1.03 ) }
    dend_51 { pt3dadd( -13.431, -8.33703, -7.30725, 0.96 ) }
    dend_51 { pt3dadd( -13.9619, -9.3637, -7.56424, 1.4 ) }
    dend_51 { pt3dadd( -14.4724, -10.5858, -7.92094, 1.62 ) }
    dend_51 { pt3dadd( -14.6559, -11.2206, -8.13977, 1.84 ) }
    dend_51 { pt3dadd( -14.8884, -12.3318, -8.58202, 1.84 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 8/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.60072, -7.20283, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -3.60072, -7.20283, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -4.2269, -7.94688, -1.9832, 1.11 ) }
    dend_32 { pt3dadd( -5.15892, -8.89504, -2.45287, 0.96 ) }
    dend_32 { pt3dadd( -5.46728, -9.16466, -2.56539, 0.96 ) }
    dend_32 { pt3dadd( -6.21656, -9.7119, -2.7594, 0.66 ) }
    dend_32 { pt3dadd( -6.86277, -10.1276, -2.85438, 0.66 ) }
    dend_32 { pt3dadd( -7.28808, -10.3447, -2.86064, 1.03 ) }
    dend_32 { pt3dadd( -8.08529, -10.6696, -2.78009, 1.33 ) }
    dend_32 { pt3dadd( -8.62873, -10.886, -2.69133, 1.47 ) }
    dend_32 { pt3dadd( -9.35746, -11.219, -2.59223, 1.11 ) }
    dend_32 { pt3dadd( -10.0771, -11.6442, -2.5514, 0.96 ) }
    dend_32 { pt3dadd( -10.8877, -12.3303, -2.62414, 0.66 ) }
    dend_32 { pt3dadd( -11.4605, -13.0201, -2.78689, 0.52 ) }
    dend_32 { pt3dadd( -11.8398, -13.7049, -3.05743, 0.44 ) }
    dend_32 { pt3dadd( -12.1081, -14.5218, -3.48802, 0.44 ) }
    dend_32 { pt3dadd( -12.3328, -15.5589, -4.11806, 1.4 ) }
    dend_32 { pt3dadd( -12.407, -16.0446, -4.42774, 1.84 ) }
    dend_32 { pt3dadd( -12.456, -16.4895, -4.70627, 2.14 ) }
    dend_32 { pt3dadd( -12.5655, -17.5792, -5.33189, 1.99 ) }
    dend_32 { pt3dadd( -12.7479, -19.273, -6.13836, 1.03 ) }
    dend_32 { pt3dadd( -12.8967, -20.5023, -6.5959, 0.88 ) }
    dend_32 { pt3dadd( -13.0368, -21.4253, -6.72722, 0.81 ) }
    dend_32 { pt3dadd( -13.1682, -22.0863, -6.61937, 0.66 ) }
    dend_32 { pt3dadd( -13.4167, -23.0913, -6.16755, 0.66 ) }
    dend_32 { pt3dadd( -13.6615, -23.912, -5.58646, 0.96 ) }
    dend_32 { pt3dadd( -13.7993, -24.3126, -5.21591, 1.11 ) }
    dend_32 { pt3dadd( -14.6774, -26.7152, -2.88036, 0.44 ) }
    dend_32 { pt3dadd( -14.9632, -27.4533, -2.19433, 1.03 ) }
    dend_32 { pt3dadd( -15.0366, -27.6363, -2.04687, 1.4 ) }
    dend_32 { pt3dadd( -15.2425, -28.0941, -1.76227, 1.69 ) }
    dend_32 { pt3dadd( -15.4289, -28.4642, -1.64661, 1.69 ) }
    dend_32 { pt3dadd( -16.127, -29.6874, -1.62649, 0.81 ) }
    dend_32 { pt3dadd( -16.5554, -30.2796, -1.80699, 1.18 ) }
    dend_32 { pt3dadd( -17.1146, -30.8817, -2.02343, 1.47 ) }
    dend_32 { pt3dadd( -17.5043, -31.2431, -2.14185, 1.47 ) }
    dend_32 { pt3dadd( -18.051, -31.7176, -2.24144, 1.4 ) }
    dend_32 { pt3dadd( -18.7549, -32.3001, -2.28904, 1.11 ) }
    dend_32 { pt3dadd( -19.9016, -33.2106, -2.22932, 0.52 ) }
    dend_32 { pt3dadd( -20.6187, -33.8173, -2.1295, 0.52 ) }
    dend_32 { pt3dadd( -21.3892, -34.6045, -1.93003, 0.52 ) }
    dend_32 { pt3dadd( -22.1173, -35.6617, -1.62729, 1.18 ) }
    dend_32 { pt3dadd( -22.3267, -36.1207, -1.52146, 1.55 ) }
    dend_32 { pt3dadd( -22.4185, -36.4505, -1.48292, 1.69 ) }
    dend_32 { pt3dadd( -22.5205, -36.9738, -1.49173, 1.92 ) }
    dend_32 { pt3dadd( -22.6742, -37.8344, -1.64549, 0.74 ) }
    dend_32 { pt3dadd( -22.8636, -38.9534, -1.86144, 0.44 ) }
    dend_32 { pt3dadd( -23.1327, -40.4336, -2.15072, 0.44 ) }
    dend_32 { pt3dadd( -23.3799, -41.6897, -2.35905, 0.44 ) }
    dend_32 { pt3dadd( -23.7054, -43.1549, -2.54817, 0.74 ) }
    dend_32 { pt3dadd( -23.9802, -44.1193, -2.62976, 0.52 ) }
    dend_32 { pt3dadd( -24.7155, -46.1689, -2.69384, 1.03 ) }
    dend_32 { pt3dadd( -24.923, -46.6857, -2.66919, 1.25 ) }
    dend_32 { pt3dadd( -25.1871, -47.3527, -2.57865, 0.66 ) }
    dend_32 { pt3dadd( -25.4774, -48.1742, -2.40354, 0.29 ) }
    dend_32 { pt3dadd( -25.7618, -49.1623, -2.15885, 0.29 ) }
    dend_32 { pt3dadd( -25.9055, -49.7625, -2.01825, 0.59 ) }
    dend_32 { pt3dadd( -26.104, -50.9517, -1.79509, 0.59 ) }
    dend_32 { pt3dadd( -26.145, -51.7578, -1.61232, 1.03 ) }
    dend_32 { pt3dadd( -26.0826, -53.1554, -1.2959, 1.4 ) }
    dend_32 { pt3dadd( -26.018, -53.7862, -1.16079, 1.77 ) }
    dend_32 { pt3dadd( -25.9563, -54.3056, -1.08075, 2.14 ) }
    dend_32 { pt3dadd( -25.8985, -55.1005, -1.00804, 2.36 ) }
    dend_32 { pt3dadd( -25.9706, -56.2162, -1.04023, 0.74 ) }
    dend_32 { pt3dadd( -26.1752, -57.0737, -1.1536, 0.44 ) }
    dend_32 { pt3dadd( -26.4499, -57.7457, -1.33727, 0.44 ) }
    dend_32 { pt3dadd( -26.95, -58.7406, -1.6001, 0.74 ) }
    dend_32 { pt3dadd( -27.2303, -59.2454, -1.70551, 0.74 ) }
    dend_32 { pt3dadd( -27.7368, -60.1282, -1.83255, 0.66 ) }
    dend_32 { pt3dadd( -28.0867, -60.776, -1.84712, 0.44 ) }
    dend_32 { pt3dadd( -28.3963, -61.5204, -1.76222, 0.44 ) }
    dend_32 { pt3dadd( -28.7143, -62.6255, -1.53742, 0.59 ) }
    dend_32 { pt3dadd( -28.8883, -63.3796, -1.33161, 0.81 ) }
    dend_32 { pt3dadd( -29.0566, -63.9992, -1.15539, 0.96 ) }
    dend_32 { pt3dadd( -29.2663, -64.5795, -0.984061, 0.74 ) }
    dend_32 { pt3dadd( -29.5683, -65.1576, -0.843079, 0.44 ) }
    dend_32 { pt3dadd( -29.9856, -65.7082, -0.739643, 0.44 ) }
    dend_32 { pt3dadd( -30.5191, -66.2514, -0.717137, 0.74 ) }
    dend_32 { pt3dadd( -31.508, -67.1759, -0.721985, 0.88 ) }
    dend_32 { pt3dadd( -32.0194, -67.6488, -0.699834, 1.4 ) }
    dend_32 { pt3dadd( -32.279, -67.9149, -0.65211, 1.4 ) }
    dend_32 { pt3dadd( -32.7042, -68.4787, -0.495145, 1.18 ) }
    dend_32 { pt3dadd( -32.9871, -69.0482, -0.301344, 0.81 ) }
    dend_32 { pt3dadd( -33.2188, -69.924, 0.0165895, 0.52 ) }
    dend_32 { pt3dadd( -33.3121, -70.7739, 0.327101, 0.52 ) }
    dend_32 { pt3dadd( -33.3628, -71.9686, 0.758101, 0.74 ) }
    dend_32 { pt3dadd( -33.3794, -72.81, 1.03912, 0.52 ) }
    dend_32 { pt3dadd( -33.389, -73.2638, 1.17981, 1.11 ) }
    dend_32 { pt3dadd( -33.4157, -73.811, 1.34323, 1.4 ) }
    dend_32 { pt3dadd( -33.4554, -74.2673, 1.45454, 1.55 ) }
    dend_32 { pt3dadd( -33.5373, -74.9309, 1.57907, 0.74 ) }
    dend_32 { pt3dadd( -33.7434, -76.1657, 1.76517, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -33.9347, -77.053, 1.94051, 0.81 ) }
    dend_32 { pt3dadd( -34.2012, -78.0795, 2.18018, 1.11 ) }
    dend_32 { pt3dadd( -34.4366, -78.811, 2.37112, 1.33 ) }
    dend_32 { pt3dadd( -34.6617, -79.3839, 2.53496, 1.55 ) }
    dend_32 { pt3dadd( -34.9379, -79.924, 2.72047, 1.18 ) }
    dend_32 { pt3dadd( -35.6571, -80.9045, 3.20161, 0.59 ) }
    dend_32 { pt3dadd( -35.9888, -81.2403, 3.42703, 0.96 ) }
    dend_32 { pt3dadd( -36.3773, -81.5718, 3.68144, 1.11 ) }
    dend_32 { pt3dadd( -36.7791, -81.8962, 3.94986, 1.11 ) }
    dend_32 { pt3dadd( -37.5167, -82.4885, 4.44704, 0.59 ) }
    dend_32 { pt3dadd( -38.3142, -83.1479, 4.97229, 0.81 ) }
    dend_32 { pt3dadd( -39.0272, -83.7792, 5.41826, 0.59 ) }
    dend_32 { pt3dadd( -39.7759, -84.5306, 5.88836, 0.59 ) }
    dend_32 { pt3dadd( -40.5011, -85.3855, 6.33958, 0.44 ) }
    dend_32 { pt3dadd( -41.0282, -86.1596, 6.61577, 0.81 ) }
    dend_32 { pt3dadd( -41.3238, -86.7313, 6.72314, 0.96 ) }
    dend_32 { pt3dadd( -41.5013, -87.2281, 6.74445, 0.96 ) }
    dend_32 { pt3dadd( -41.6453, -87.9174, 6.70226, 0.96 ) }
    dend_32 { pt3dadd( -41.7251, -88.6341, 6.62418, 0.66 ) }
    dend_32 { pt3dadd( -41.7678, -90.083, 6.41376, 0.52 ) }
    dend_32 { pt3dadd( -41.7539, -90.8327, 6.29936, 0.66 ) }
    dend_32 { pt3dadd( -41.7188, -91.7261, 6.17867, 1.33 ) }
    dend_32 { pt3dadd( -41.7015, -92.3607, 6.10766, 1.99 ) }
    dend_32 { pt3dadd( -41.7343, -93.8867, 5.98522, 0.44 ) }
    dend_32 { pt3dadd( -41.8281, -94.7056, 5.95681, 0.44 ) }
    dend_32 { pt3dadd( -41.9621, -95.275, 5.96912, 0.74 ) }
    dend_32 { pt3dadd( -42.119, -95.7224, 5.97928, 0.74 ) }
    dend_32 { pt3dadd( -42.4148, -96.3582, 6.01177, 0.74 ) }
    dend_32 { pt3dadd( -42.7982, -97.039, 6.05505, 0.37 ) }
    dend_32 { pt3dadd( -43.3986, -97.9398, 6.12019, 0.29 ) }
    dend_32 { pt3dadd( -43.8926, -98.5442, 6.18016, 0.29 ) }
    dend_32 { pt3dadd( -44.493, -99.1888, 6.2573, 0.29 ) }
    dend_32 { pt3dadd( -45.0293, -99.7157, 6.35711, 0.22 ) }
    dend_32 { pt3dadd( -45.3294, -99.9905, 6.42692, 0.22 ) }
    dend_32 { pt3dadd( -45.8153, -100.447, 6.55849, 0.81 ) }
    dend_32 { pt3dadd( -46.0988, -100.735, 6.64391, 0.96 ) }
    dend_32 { pt3dadd( -46.7726, -101.43, 6.8569, 0.22 ) }
    dend_32 { pt3dadd( -47.3448, -102.067, 7.04191, 1.33 ) }
    dend_32 { pt3dadd( -47.7194, -102.551, 7.15765, 1.55 ) }
    dend_32 { pt3dadd( -48.2595, -103.339, 7.34516, 1.11 ) }
    dend_32 { pt3dadd( -48.555, -103.823, 7.46705, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.23072, 4.61543, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -2.23072, 4.61543, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -3.18399, 5.32289, 5.70102, 1.55 ) }
    dend_13 { pt3dadd( -4.15742, 5.98529, 5.70102, 1.4 ) }
    dend_13 { pt3dadd( -5.24833, 6.65715, 5.70102, 1.18 ) }
    dend_13 { pt3dadd( -6.03817, 7.11498, 5.70388, 1.47 ) }
    dend_13 { pt3dadd( -7.09303, 7.72514, 5.74225, 1.77 ) }
    dend_13 { pt3dadd( -7.85506, 8.15784, 5.80587, 1.99 ) }
    dend_13 { pt3dadd( -8.69015, 8.64318, 5.94407, 1.99 ) }
    dend_13 { pt3dadd( -9.68282, 9.2954, 6.21429, 1.62 ) }
    dend_13 { pt3dadd( -10.8044, 10.2307, 6.68803, 1.11 ) }
    dend_13 { pt3dadd( -11.505, 11.0196, 7.13474, 1.11 ) }
    dend_13 { pt3dadd( -12.0225, 11.8723, 7.63896, 1.25 ) }
    dend_13 { pt3dadd( -12.4343, 12.9925, 8.2997, 1.47 ) }
    dend_13 { pt3dadd( -12.6101, 14.078, 8.94537, 1.69 ) }
    dend_13 { pt3dadd( -12.5847, 14.9752, 9.47199, 1.92 ) }
    dend_13 { pt3dadd( -12.4123, 16.0071, 10.0501, 1.77 ) }
    dend_13 { pt3dadd( -12.2034, 16.7787, 10.4385, 1.4 ) }
    dend_13 { pt3dadd( -11.8499, 17.7827, 10.8882, 1.18 ) }
    dend_13 { pt3dadd( -11.46, 18.774, 11.2975, 1.11 ) }
    dend_13 { pt3dadd( -10.8897, 20.075, 11.8168, 1.62 ) }
    dend_13 { pt3dadd( -10.6194, 20.6443, 12.0372, 1.99 ) }
    dend_13 { pt3dadd( -10.2115, 21.4408, 12.3378, 2.21 ) }
    dend_13 { pt3dadd( -9.86384, 22.074, 12.5709, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.9007, 0.894672, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -10.9491, 0.904285, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -11.7346, 1.07394, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -12.4551, 1.25376, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -13.3115, 1.49627, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -14.2108, 1.78424, -3.98898, 1.84 ) }
    dend_0 { pt3dadd( -14.8466, 2.01917, -3.98898, 1.92 ) }
    dend_0 { pt3dadd( -15.4521, 2.27368, -4.00489, 2.14 ) }
    dend_0 { pt3dadd( -16.1627, 2.62453, -4.04218, 2.14 ) }
    dend_0 { pt3dadd( -16.7825, 2.98766, -4.09776, 2.14 ) }
    dend_0 { pt3dadd( -17.2989, 3.34452, -4.1828, 2.14 ) }
    dend_0 { pt3dadd( -18.0669, 3.95217, -4.3613, 2.14 ) }
    dend_0 { pt3dadd( -18.6848, 4.49398, -4.58019, 2.14 ) }
    dend_0 { pt3dadd( -19.0493, 4.83289, -4.73164, 2.21 ) }
    dend_0 { pt3dadd( -19.4602, 5.23482, -4.93496, 1.99 ) }
    dend_0 { pt3dadd( -19.9653, 5.75411, -5.23194, 1.99 ) }
    dend_0 { pt3dadd( -20.3985, 6.21634, -5.53333, 2.14 ) }
    dend_0 { pt3dadd( -21.0692, 6.97965, -6.10201, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 26.063, 3.65858, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 40.8915, 5.92002, 2.65033, 3.17 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 86/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 8.6725, -23.2037, 6.97655, 1.25 ) }
    dend_62 { pt3dadd( 8.9771, -24.4883, 6.90693, 1.25 ) }
    dend_62 { pt3dadd( 8.85471, -26.1466, 6.97725, 1.03 ) }
    dend_62 { pt3dadd( 8.3767, -27.4675, 7.1634, 0.66 ) }
    dend_62 { pt3dadd( 7.95503, -28.4169, 7.33413, 0.96 ) }
    dend_62 { pt3dadd( 7.55243, -29.4079, 7.51238, 1.18 ) }
    dend_62 { pt3dadd( 7.07288, -30.844, 7.75061, 1.18 ) }
    dend_62 { pt3dadd( 6.76646, -31.7569, 7.88414, 1.47 ) }
    dend_62 { pt3dadd( 6.29571, -33.2113, 8.12155, 0.81 ) }
    dend_62 { pt3dadd( 6.09961, -34.1958, 8.27709, 0.81 ) }
    dend_62 { pt3dadd( 6.2113, -35.4438, 8.36809, 0.96 ) }
    dend_62 { pt3dadd( 6.60073, -36.4969, 8.38287, 0.88 ) }
    dend_62 { pt3dadd( 7.16844, -37.6317, 8.40966, 1.33 ) }
    dend_62 { pt3dadd( 7.52025, -38.3017, 8.44698, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_62 { pt3dadd( 7.91469, -39.0651, 8.51672, 1.33 ) }
    dend_62 { pt3dadd( 8.25282, -39.8705, 8.63703, 0.81 ) }
    dend_62 { pt3dadd( 8.63671, -41.3069, 8.93599, 0.66 ) }
    dend_62 { pt3dadd( 8.84656, -42.7493, 9.27292, 0.96 ) }
    dend_62 { pt3dadd( 8.8966, -43.6945, 9.49005, 1.4 ) }
    dend_62 { pt3dadd( 8.89486, -44.4666, 9.65346, 1.4 ) }
    dend_62 { pt3dadd( 8.87888, -45.2441, 9.83656, 1.4 ) }
    dend_62 { pt3dadd( 8.82193, -46.5667, 10.2215, 0.96 ) }
    dend_62 { pt3dadd( 8.79893, -47.1852, 10.4478, 0.81 ) }
    dend_62 { pt3dadd( 8.7998, -48.3104, 11.0004, 0.81 ) }
    dend_62 { pt3dadd( 8.81775, -49.1236, 11.4736, 0.74 ) }
    dend_62 { pt3dadd( 8.89383, -50.7656, 12.5601, 0.74 ) }
    dend_62 { pt3dadd( 8.9685, -52.0126, 13.3902, 0.88 ) }
    dend_62 { pt3dadd( 9.05018, -53.0422, 14.0426, 0.88 ) }
    dend_62 { pt3dadd( 9.17759, -54.219, 14.6609, 1.47 ) }
    dend_62 { pt3dadd( 9.34476, -55.3605, 15.0268, 0.81 ) }
    dend_62 { pt3dadd( 9.59677, -56.7519, 15.1252, 0.59 ) }
    dend_62 { pt3dadd( 9.92102, -58.3466, 14.9876, 0.88 ) }
    dend_62 { pt3dadd( 10.1685, -59.4914, 14.8572, 0.88 ) }
    dend_62 { pt3dadd( 10.4307, -60.8516, 14.7359, 0.66 ) }
    dend_62 { pt3dadd( 10.6684, -62.3337, 14.6865, 0.59 ) }
    dend_62 { pt3dadd( 10.8064, -63.5541, 14.7857, 0.59 ) }
    dend_62 { pt3dadd( 10.8859, -64.8536, 15.0585, 0.59 ) }
    dend_62 { pt3dadd( 10.944, -66.092, 15.4889, 0.88 ) }
    dend_62 { pt3dadd( 10.9738, -67.4625, 16.126, 0.66 ) }
    dend_62 { pt3dadd( 10.9793, -68.5399, 16.7156, 1.03 ) }
    dend_62 { pt3dadd( 10.9624, -69.909, 17.5374, 1.25 ) }
    dend_62 { pt3dadd( 10.9243, -71.2641, 18.3641, 1.25 ) }
    dend_62 { pt3dadd( 10.8985, -72.1564, 18.8733, 1.84 ) }
    dend_62 { pt3dadd( 10.9027, -73.0287, 19.3388, 2.28 ) }
    dend_62 { pt3dadd( 10.9511, -73.7845, 19.7903, 1.69 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 31/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.6725, -23.2037, 6.97655, 0.74 ) }
    dend_57 { pt3dadd( 7.75088, -26.5558, 10.5588, 0.74 ) }
    dend_57 { pt3dadd( 7.69833, -27.2572, 11.6272, 0.74 ) }
    dend_57 { pt3dadd( 7.68187, -27.8604, 12.6626, 0.74 ) }
    dend_57 { pt3dadd( 7.64221, -28.83, 14.2812, 1.11 ) }
    dend_57 { pt3dadd( 7.62986, -29.3274, 15.0315, 1.11 ) }
    dend_57 { pt3dadd( 7.64111, -30.5901, 16.6726, 0.66 ) }
    dend_57 { pt3dadd( 7.88476, -33.1515, 19.479, 1.4 ) }
    dend_57 { pt3dadd( 7.95487, -34.254, 20.6547, 0.96 ) }
    dend_57 { pt3dadd( 7.94239, -35.1737, 21.563, 1.18 ) }
    dend_57 { pt3dadd( 7.82279, -36.4382, 22.6086, 0.88 ) }
    dend_57 { pt3dadd( 7.50994, -38.1656, 23.7382, 0.66 ) }
    dend_57 { pt3dadd( 7.00183, -40.1238, 24.623, 0.66 ) }
    dend_57 { pt3dadd( 6.66212, -41.2919, 25.0075, 0.59 ) }
    dend_57 { pt3dadd( 6.14106, -43.0182, 25.5498, 0.74 ) }
    dend_57 { pt3dadd( 5.75902, -44.1187, 25.9265, 1.03 ) }
    dend_57 { pt3dadd( 5.28147, -45.1637, 26.3186, 1.18 ) }
    dend_57 { pt3dadd( 4.51644, -46.4873, 26.8046, 1.4 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.8884, -12.3318, -8.58202, 0.81 ) }
    dend_53 { pt3dadd( -16.1583, -13.5182, -8.45429, 0.81 ) }
    dend_53 { pt3dadd( -16.8938, -14.3147, -8.25231, 0.88 ) }
    dend_53 { pt3dadd( -17.5628, -15.1553, -7.99901, 1.03 ) }
    dend_53 { pt3dadd( -18.0744, -15.9123, -7.77027, 1.03 ) }
    dend_53 { pt3dadd( -18.5317, -16.7494, -7.5345, 0.52 ) }
    dend_53 { pt3dadd( -18.879, -17.6705, -7.26883, 0.52 ) }
    dend_53 { pt3dadd( -19.0487, -18.9128, -6.84582, 0.74 ) }
    dend_53 { pt3dadd( -19.0433, -19.4393, -6.6741, 0.96 ) }
    dend_53 { pt3dadd( -18.9833, -20.0694, -6.47376, 0.59 ) }
    dend_53 { pt3dadd( -18.8904, -20.8802, -6.23991, 0.44 ) }
    dend_53 { pt3dadd( -18.7582, -22.3996, -5.93088, 0.44 ) }
    dend_53 { pt3dadd( -18.7388, -23.0294, -5.80513, 0.81 ) }
    dend_53 { pt3dadd( -18.7987, -23.7637, -5.63238, 0.96 ) }
    dend_53 { pt3dadd( -18.9663, -24.7612, -5.33635, 1.03 ) }
    dend_53 { pt3dadd( -19.1058, -25.4139, -5.13321, 0.96 ) }
    dend_53 { pt3dadd( -19.3024, -26.3059, -4.88112, 0.37 ) }
    dend_53 { pt3dadd( -19.583, -27.9416, -4.49261, 0.37 ) }
    dend_53 { pt3dadd( -19.6657, -28.8006, -4.30955, 0.29 ) }
    dend_53 { pt3dadd( -19.6811, -29.5849, -4.18693, 0.37 ) }
    dend_53 { pt3dadd( -19.6689, -30.6698, -4.0806, 0.37 ) }
    dend_53 { pt3dadd( -19.6267, -31.7705, -4.01274, 0.81 ) }
    dend_53 { pt3dadd( -19.5857, -32.8181, -3.99105, 1.25 ) }
    dend_53 { pt3dadd( -19.5839, -33.1276, -4.00809, 1.55 ) }
    dend_53 { pt3dadd( -19.6437, -34.3293, -4.07292, 0.37 ) }
    dend_53 { pt3dadd( -19.8005, -35.0169, -4.08902, 0.37 ) }
    dend_53 { pt3dadd( -19.9666, -35.3449, -4.07413, 0.44 ) }
    dend_53 { pt3dadd( -20.4517, -36.021, -4.02377, 0.59 ) }
    dend_53 { pt3dadd( -20.7823, -36.4268, -4.00374, 0.66 ) }
    dend_53 { pt3dadd( -21.1965, -36.9141, -3.97961, 0.37 ) }
    dend_53 { pt3dadd( -21.6753, -37.4692, -3.95785, 0.59 ) }
    dend_53 { pt3dadd( -22.1719, -38.0971, -3.98318, 0.88 ) }
    dend_53 { pt3dadd( -22.4538, -38.4826, -4.02538, 1.03 ) }
    dend_53 { pt3dadd( -22.9266, -39.2849, -4.08249, 0.37 ) }
    dend_53 { pt3dadd( -23.0705, -39.5651, -4.08358, 0.37 ) }
    dend_53 { pt3dadd( -23.3301, -40.091, -4.04941, 0.37 ) }
    dend_53 { pt3dadd( -23.6689, -40.78, -3.96294, 0.66 ) }
    dend_53 { pt3dadd( -23.931, -41.2745, -3.87414, 0.88 ) }
    dend_53 { pt3dadd( -24.8586, -42.8381, -3.54982, 0.29 ) }
    dend_53 { pt3dadd( -25.2616, -43.4855, -3.41922, 0.29 ) }
    dend_53 { pt3dadd( -25.6526, -44.1529, -3.3159, 0.96 ) }
    dend_53 { pt3dadd( -25.8548, -44.5303, -3.27083, 1.33 ) }
    dend_53 { pt3dadd( -26.2086, -45.2924, -3.2221, 1.11 ) }
    dend_53 { pt3dadd( -26.5918, -46.2887, -3.1517, 0.59 ) }
    dend_53 { pt3dadd( -26.9359, -47.2046, -3.17477, 0.37 ) }
    dend_53 { pt3dadd( -27.1456, -48.0686, -3.01164, 0.66 ) }
    dend_53 { pt3dadd( -27.252, -48.6084, -2.79668, 0.52 ) }
    dend_53 { pt3dadd( -27.3694, -49.2612, -2.41349, 0.29 ) }
    dend_53 { pt3dadd( -27.624, -50.7594, -1.33158, 0.29 ) }
    dend_53 { pt3dadd( -27.828, -51.8524, -0.380033, 0.81 ) }
    dend_53 { pt3dadd( -28.3981, -54.1954, 2.21078, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -28.5614, -54.6695, 2.85131, 0.29 ) }
    dend_53 { pt3dadd( -28.6634, -54.8904, 3.20014, 0.29 ) }
    dend_53 { pt3dadd( -28.9028, -55.3003, 4.00234, 0.66 ) }
    dend_53 { pt3dadd( -29.0101, -55.4655, 4.39919, 0.66 ) }
    dend_53 { pt3dadd( -31.1336, -65.0967, 7.09928, 0.66 ) }
    dend_53 { pt3dadd( -33.8749, -74.6141, 9.6231, 0.66 ) }
    dend_53 { pt3dadd( -36.8867, -84.0421, 12.156, 0.66 ) }
    dend_53 { pt3dadd( -39.1171, -93.796, 14.3141, 0.66 ) }
    dend_53 { pt3dadd( -39.5248, -103.173, 18.3304, 0.66 ) }
    dend_53 { pt3dadd( -38.8093, -112.711, 21.9448, 0.66 ) }
    dend_53 { pt3dadd( -38.3574, -121.731, 26.6718, 0.66 ) }
    dend_53 { pt3dadd( -36.1269, -131.041, 30.2557, 0.66 ) }
    dend_53 { pt3dadd( -32.6615, -139.909, 33.9479, 0.66 ) }
    dend_53 { pt3dadd( -27.7287, -148.492, 36.4852, 0.66 ) }
    dend_53 { pt3dadd( -22.4301, -157.082, 38.1625, 0.66 ) }
    dend_53 { pt3dadd( -17.3697, -165.749, 40.1446, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 16/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -14.8884, -12.3318, -8.58202, 1.03 ) }
    dend_52 { pt3dadd( -14.0915, -13.2936, -9.44291, 1.03 ) }
    dend_52 { pt3dadd( -12.6586, -14.7307, -10.622, 0.81 ) }
    dend_52 { pt3dadd( -11.6568, -15.7698, -11.3979, 1.03 ) }
    dend_52 { pt3dadd( -10.563, -17.0267, -12.2298, 0.88 ) }
    dend_52 { pt3dadd( -9.76758, -18.0455, -12.8537, 1.11 ) }
    dend_52 { pt3dadd( -9.14878, -18.967, -13.3834, 0.74 ) }
    dend_52 { pt3dadd( -8.54429, -20.0544, -13.8986, 0.52 ) }
    dend_52 { pt3dadd( -8.00721, -21.6207, -14.5217, 0.88 ) }
    dend_52 { pt3dadd( -7.89385, -22.7724, -14.9936, 1.47 ) }
    dend_52 { pt3dadd( -7.95039, -23.5729, -15.2899, 1.25 ) }
    dend_52 { pt3dadd( -8.13648, -24.8742, -15.7164, 1.25 ) }
    dend_52 { pt3dadd( -8.32371, -25.9335, -16.0252, 0.81 ) }
    dend_52 { pt3dadd( -8.629, -27.6688, -16.4229, 0.66 ) }
    dend_52 { pt3dadd( -8.80827, -29.2975, -16.672, 0.66 ) }
    dend_52 { pt3dadd( -8.88868, -31.2653, -16.866, 0.96 ) }
    dend_52 { pt3dadd( -8.8617, -32.2875, -16.9051, 1.11 ) }
    dend_52 { pt3dadd( -8.78111, -33.2497, -16.8975, 1.11 ) }
    dend_52 { pt3dadd( -8.62379, -34.6003, -16.8402, 0.74 ) }
    dend_52 { pt3dadd( -8.43947, -36.0107, -16.7426, 0.52 ) }
    dend_52 { pt3dadd( -8.33032, -37.1056, -16.673, 0.74 ) }
    dend_52 { pt3dadd( -8.32174, -37.8988, -16.6674, 1.11 ) }
    dend_52 { pt3dadd( -8.47408, -39.0578, -16.7082, 0.96 ) }
    dend_52 { pt3dadd( -8.87116, -40.2324, -16.7826, 0.74 ) }
    dend_52 { pt3dadd( -9.24686, -40.9415, -16.8302, 0.74 ) }
    dend_52 { pt3dadd( -9.62259, -41.5579, -16.8425, 0.74 ) }
    dend_52 { pt3dadd( -10.1368, -42.4305, -16.8243, 0.59 ) }
    dend_52 { pt3dadd( -10.7329, -43.5422, -16.7716, 0.52 ) }
    dend_52 { pt3dadd( -11.264, -44.7598, -16.6822, 0.52 ) }
    dend_52 { pt3dadd( -11.672, -46.0165, -16.5888, 0.74 ) }
    dend_52 { pt3dadd( -12.0146, -47.7376, -16.4837, 0.88 ) }
    dend_52 { pt3dadd( -12.0964, -48.7735, -16.4372, 1.18 ) }
    dend_52 { pt3dadd( -12.0696, -49.5634, -16.4356, 1.4 ) }
    dend_52 { pt3dadd( -11.96, -50.6061, -16.4742, 1.62 ) }
    dend_52 { pt3dadd( -11.8797, -51.2537, -16.5244, 1.77 ) }
    dend_52 { pt3dadd( -11.7973, -52.1338, -16.6356, 1.4 ) }
    dend_52 { pt3dadd( -11.7624, -53.2068, -16.8029, 0.66 ) }
    dend_52 { pt3dadd( -11.8262, -54.4097, -17.0055, 0.44 ) }
    dend_52 { pt3dadd( -11.991, -55.3879, -17.1727, 0.81 ) }
    dend_52 { pt3dadd( -12.1829, -56.0564, -17.3178, 1.25 ) }
    dend_52 { pt3dadd( -12.3108, -56.4357, -17.4361, 1.4 ) }
    dend_52 { pt3dadd( -12.4453, -56.7835, -17.5882, 1.4 ) }
    dend_52 { pt3dadd( -12.7587, -57.5207, -17.9557, 0.88 ) }
    dend_52 { pt3dadd( -13.2691, -58.6911, -18.582, 0.59 ) }
    dend_52 { pt3dadd( -13.7563, -59.8481, -19.2378, 0.59 ) }
    dend_52 { pt3dadd( -14.3576, -61.3037, -20.0691, 0.88 ) }
    dend_52 { pt3dadd( -14.8981, -62.667, -20.8499, 0.52 ) }
    dend_52 { pt3dadd( -15.2739, -63.6914, -21.4576, 0.52 ) }
    dend_52 { pt3dadd( -15.4366, -64.2398, -21.801, 1.11 ) }
    dend_52 { pt3dadd( -15.5666, -64.8784, -22.2105, 1.55 ) }
    dend_52 { pt3dadd( -15.6177, -65.5031, -22.5696, 1.77 ) }
    dend_52 { pt3dadd( -15.5876, -66.1605, -22.905, 1.4 ) }
    dend_52 { pt3dadd( -15.3501, -67.4621, -23.5235, 0.66 ) }
    dend_52 { pt3dadd( -15.0187, -68.6702, -24.0862, 0.44 ) }
    dend_52 { pt3dadd( -14.6752, -69.6978, -24.5303, 0.44 ) }
    dend_52 { pt3dadd( -14.2284, -70.8729, -24.9914, 0.44 ) }
    dend_52 { pt3dadd( -14.0262, -71.3923, -25.1665, 0.88 ) }
    dend_52 { pt3dadd( -13.8541, -71.8515, -25.2738, 1.25 ) }
    dend_52 { pt3dadd( -13.6709, -72.3983, -25.3482, 1.55 ) }
    dend_52 { pt3dadd( -13.576, -72.8076, -25.3815, 1.55 ) }
    dend_52 { pt3dadd( -13.4647, -73.6788, -25.4374, 1.25 ) }
    dend_52 { pt3dadd( -13.4606, -75.167, -25.4921, 0.59 ) }
    dend_52 { pt3dadd( -13.6134, -76.418, -25.5519, 0.59 ) }
    dend_52 { pt3dadd( -13.7623, -77.0594, -25.5547, 0.96 ) }
    dend_52 { pt3dadd( -14.0541, -77.9417, -25.5229, 0.96 ) }
    dend_52 { pt3dadd( -14.4142, -78.7892, -25.4552, 0.81 ) }
    dend_52 { pt3dadd( -15.1786, -80.2663, -25.264, 0.37 ) }
    dend_52 { pt3dadd( -15.9847, -81.5619, -25.0417, 0.37 ) }
    dend_52 { pt3dadd( -16.8063, -82.7742, -24.8019, 1.18 ) }
    dend_52 { pt3dadd( -17.106, -83.2066, -24.6875, 1.62 ) }
    dend_52 { pt3dadd( -17.4309, -83.6498, -24.5354, 1.62 ) }
    dend_52 { pt3dadd( -17.9699, -84.3642, -24.2144, 1.33 ) }
    dend_52 { pt3dadd( -18.8205, -85.459, -23.5965, 0.44 ) }
    dend_52 { pt3dadd( -19.5813, -86.407, -22.9771, 0.44 ) }
    dend_52 { pt3dadd( -20.1822, -87.1461, -22.5026, 0.66 ) }
    dend_52 { pt3dadd( -20.8929, -88.032, -21.9396, 0.66 ) }
    dend_52 { pt3dadd( -21.5886, -88.927, -21.3959, 0.44 ) }
    dend_52 { pt3dadd( -22.0137, -89.5026, -21.0731, 0.81 ) }
    dend_52 { pt3dadd( -22.338, -89.9647, -20.8523, 1.25 ) }
    dend_52 { pt3dadd( -22.7254, -90.5275, -20.6262, 1.55 ) }
    dend_52 { pt3dadd( -23.1385, -91.145, -20.4304, 1.25 ) }
    dend_52 { pt3dadd( -23.6163, -91.895, -20.2338, 0.52 ) }
    dend_52 { pt3dadd( -24.0934, -92.6453, -20.0754, 0.37 ) }
    dend_52 { pt3dadd( -24.5653, -93.4512, -19.8529, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_52 { pt3dadd( -25.1679, -94.5502, -19.4357, 0.81 ) }
    dend_52 { pt3dadd( -25.4627, -95.1309, -19.1391, 1.25 ) }
    dend_52 { pt3dadd( -25.7289, -95.7523, -18.7226, 0.81 ) }
    dend_52 { pt3dadd( -26.0424, -96.6401, -18.0394, 0.37 ) }
    dend_52 { pt3dadd( -26.4337, -98.0276, -16.8956, 0.37 ) }
    dend_52 { pt3dadd( -26.5793, -98.6289, -16.3901, 0.74 ) }
    dend_52 { pt3dadd( -26.7701, -99.4414, -15.7305, 0.81 ) }
    dend_52 { pt3dadd( -27.046, -100.517, -14.8889, 0.29 ) }
    dend_52 { pt3dadd( -27.2167, -101.171, -14.4222, 0.88 ) }
    dend_52 { pt3dadd( -27.3024, -101.529, -14.2241, 1.18 ) }
    dend_52 { pt3dadd( -27.4627, -102.232, -14.0175, 1.18 ) }
    dend_52 { pt3dadd( -27.6321, -102.985, -13.9178, 0.81 ) }
    dend_52 { pt3dadd( -27.9028, -104.15, -13.9033, 0.29 ) }
    dend_52 { pt3dadd( -28.1391, -105.126, -13.9574, 0.29 ) }
    dend_52 { pt3dadd( -28.3118, -105.943, -14.0047, 0.29 ) }
    dend_52 { pt3dadd( -28.4062, -106.5, -14.0568, 0.66 ) }
    dend_52 { pt3dadd( -28.493, -107.197, -14.138, 0.96 ) }
    dend_52 { pt3dadd( -28.5774, -107.966, -14.2667, 0.96 ) }
    dend_52 { pt3dadd( -28.6775, -108.814, -14.4415, 0.52 ) }
    dend_52 { pt3dadd( -28.8628, -110.021, -14.7158, 0.37 ) }
    dend_52 { pt3dadd( -29.0001, -110.837, -14.9451, 0.74 ) }
    dend_52 { pt3dadd( -29.1592, -111.714, -15.23, 0.44 ) }
    dend_52 { pt3dadd( -29.3408, -112.575, -15.5402, 1.11 ) }
    dend_52 { pt3dadd( -29.4801, -113.098, -15.741, 1.11 ) }
    dend_52 { pt3dadd( -29.7063, -113.7, -15.9714, 0.81 ) }
    dend_52 { pt3dadd( -30.3059, -115.045, -16.4341, 0.37 ) }
    dend_52 { pt3dadd( -30.6919, -115.802, -16.6178, 0.66 ) }
    dend_52 { pt3dadd( -30.8918, -116.154, -16.6791, 0.96 ) }
    dend_52 { pt3dadd( -31.2175, -116.73, -16.6857, 0.96 ) }
    dend_52 { pt3dadd( -31.7444, -117.789, -16.3406, 0.29 ) }
    dend_52 { pt3dadd( -31.9441, -118.449, -15.5956, 0.29 ) }
    dend_52 { pt3dadd( -32.0068, -118.948, -14.8116, 0.96 ) }
    dend_52 { pt3dadd( -31.9974, -119.19, -14.3663, 1.25 ) }
    dend_52 { pt3dadd( -31.9292, -119.902, -12.9615, 0.44 ) }
    dend_52 { pt3dadd( -31.7128, -121.201, -10.1779, 0.81 ) }
    dend_52 { pt3dadd( -31.2446, -123.081, -5.72531, 0.22 ) }
    dend_52 { pt3dadd( -31.0724, -123.646, -4.25132, 1.18 ) }
    dend_52 { pt3dadd( -30.851, -124.197, -2.72227, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -48.555, -103.823, 7.46705, 0.29 ) }
    dend_40 { pt3dadd( -46.5342, -104.619, 7.60955, 0.29 ) }
    dend_40 { pt3dadd( -45.0074, -105.221, 7.71721, 0.29 ) }
    dend_40 { pt3dadd( -43.1607, -105.949, 7.84742, 0.29 ) }
    dend_40 { pt3dadd( -41.7191, -106.517, 7.94907, 0.15 ) }
    dend_40 { pt3dadd( -40.5903, -106.962, 8.02867, 0.29 ) }
    dend_40 { pt3dadd( -39.9677, -107.207, 8.07257, 0.29 ) }
    dend_40 { pt3dadd( -28.5355, -113.03, 7.56677, 0.29 ) }
    dend_40 { pt3dadd( -18.178, -120.662, 8.25886, 0.29 ) }
    dend_40 { pt3dadd( -7.85508, -128.342, 7.54541, 0.29 ) }
    dend_40 { pt3dadd( 1.8198, -136.74, 9.11367, 0.29 ) }
    dend_40 { pt3dadd( 10.7962, -146.057, 9.17982, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -48.555, -103.823, 7.46705, 0.29 ) }
    dend_33 { pt3dadd( -49.4145, -104.642, 7.5832, 0.29 ) }
    dend_33 { pt3dadd( -50.2912, -105.456, 7.69912, 0.29 ) }
    dend_33 { pt3dadd( -51.1783, -106.28, 7.81642, 0.29 ) }
    dend_33 { pt3dadd( -52.2413, -107.266, 7.95697, 0.29 ) }
    dend_33 { pt3dadd( -52.8394, -107.822, 8.03606, 0.29 ) }
    dend_33 { pt3dadd( -53.4668, -108.404, 8.11902, 0.81 ) }
    dend_33 { pt3dadd( -53.889, -108.738, 8.16208, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 58/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -9.86384, 22.074, 12.5709, 0.66 ) }
    dend_29 { pt3dadd( -12.8138, 23.6863, 12.9254, 0.66 ) }
    dend_29 { pt3dadd( -14.3313, 24.4794, 13.0607, 0.66 ) }
    dend_29 { pt3dadd( -15.7551, 25.194, 13.0925, 0.59 ) }
    dend_29 { pt3dadd( -16.9011, 25.771, 13.1246, 1.11 ) }
    dend_29 { pt3dadd( -17.6869, 26.1695, 13.229, 1.4 ) }
    dend_29 { pt3dadd( -18.2357, 26.4681, 13.3478, 1.4 ) }
    dend_29 { pt3dadd( -19.2374, 27.0643, 13.6267, 0.66 ) }
    dend_29 { pt3dadd( -20.0262, 27.7377, 14.2116, 0.44 ) }
    dend_29 { pt3dadd( -20.6122, 28.4413, 14.9719, 0.44 ) }
    dend_29 { pt3dadd( -21.6586, 30.0924, 16.7878, 0.74 ) }
    dend_29 { pt3dadd( -22.2609, 31.1564, 17.8848, 0.52 ) }
    dend_29 { pt3dadd( -22.6462, 31.7978, 18.4715, 0.44 ) }
    dend_29 { pt3dadd( -23.1265, 32.556, 19.0838, 0.74 ) }
    dend_29 { pt3dadd( -23.7387, 33.3559, 19.6625, 0.74 ) }
    dend_29 { pt3dadd( -24.2747, 33.898, 19.9477, 0.74 ) }
    dend_29 { pt3dadd( -24.9915, 34.4544, 20.2227, 0.29 ) }
    dend_29 { pt3dadd( -26.3837, 35.2338, 20.9999, 0.29 ) }
    dend_29 { pt3dadd( -26.6417, 35.3605, 21.1883, 0.81 ) }
    dend_29 { pt3dadd( -27.4436, 35.7484, 21.869, 0.81 ) }
    dend_29 { pt3dadd( -28.2152, 36.175, 22.5843, 0.74 ) }
    dend_29 { pt3dadd( -29.356, 36.8839, 23.6867, 0.81 ) }
    dend_29 { pt3dadd( -31.5968, 38.4614, 25.9144, 1.69 ) }
    dend_29 { pt3dadd( -33.0177, 39.5878, 27.2996, 0.52 ) }
    dend_29 { pt3dadd( -33.5477, 40.0518, 27.8143, 0.59 ) }
    dend_29 { pt3dadd( -34.5764, 41.0116, 28.7506, 0.59 ) }
    dend_29 { pt3dadd( -35.2809, 41.6744, 29.3464, 0.66 ) }
    dend_29 { pt3dadd( -35.8259, 42.2003, 29.7272, 1.03 ) }
    dend_29 { pt3dadd( -36.3416, 42.6764, 29.9974, 1.03 ) }
    dend_29 { pt3dadd( -37.8245, 43.8214, 30.7501, 0.81 ) }
    dend_29 { pt3dadd( -38.6429, 44.3981, 31.1801, 0.59 ) }
    dend_29 { pt3dadd( -39.8333, 45.2049, 31.8012, 0.52 ) }
    dend_29 { pt3dadd( -40.5931, 45.7823, 32.191, 0.52 ) }
    dend_29 { pt3dadd( -41.489, 46.5902, 32.6295, 0.59 ) }
    dend_29 { pt3dadd( -42.1451, 47.2387, 32.9369, 0.88 ) }
    dend_29 { pt3dadd( -42.7024, 47.9262, 33.1362, 1.03 ) }
    dend_29 { pt3dadd( -43.3189, 48.8927, 33.3557, 0.59 ) }
    dend_29 { pt3dadd( -43.7562, 49.7696, 33.4747, 0.52 ) }
    dend_29 { pt3dadd( -44.0842, 50.5565, 33.5654, 0.81 ) }
    dend_29 { pt3dadd( -51.8251, 59.614, 38.8005, 0.81 ) }
    dend_29 { pt3dadd( -60.1503, 67.5041, 44.8723, 0.81 ) }
    dend_29 { pt3dadd( -67.827, 75.3097, 51.8386, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -73.7254, 83.3669, 60.1409, 0.81 ) }
    dend_29 { pt3dadd( -79.852, 92.2322, 67.4309, 0.81 ) }
    dend_29 { pt3dadd( -85.409, 100.313, 75.9446, 0.81 ) }
    dend_29 { pt3dadd( -89.295, 108.635, 85.1396, 0.81 ) }
    dend_29 { pt3dadd( -90.9935, 115.741, 95.848, 0.81 ) }
    dend_29 { pt3dadd( -91.8863, 123.064, 106.516, 0.81 ) }
    dend_29 { pt3dadd( -93.9282, 130.795, 116.741, 0.81 ) }
    dend_29 { pt3dadd( -97.0452, 138.432, 126.759, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 8/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.86384, 22.074, 12.5709, 1.11 ) }
    dend_14 { pt3dadd( -9.08687, 23.6995, 12.2198, 1.11 ) }
    dend_14 { pt3dadd( -8.45525, 25.5474, 11.7766, 0.81 ) }
    dend_14 { pt3dadd( -8.04123, 27.5522, 11.162, 0.74 ) }
    dend_14 { pt3dadd( -7.93424, 28.5961, 10.807, 1.11 ) }
    dend_14 { pt3dadd( -7.90735, 29.5552, 10.4888, 1.18 ) }
    dend_14 { pt3dadd( -7.9352, 31.0114, 10.0421, 1.47 ) }
    dend_14 { pt3dadd( -8.05692, 32.0828, 9.70518, 1.47 ) }
    dend_14 { pt3dadd( -8.34961, 33.9476, 9.16193, 1.18 ) }
    dend_14 { pt3dadd( -8.62568, 35.7906, 8.73601, 0.96 ) }
    dend_14 { pt3dadd( -8.78588, 37.3705, 8.45308, 1.03 ) }
    dend_14 { pt3dadd( -8.83374, 38.9883, 8.23442, 1.4 ) }
    dend_14 { pt3dadd( -8.74178, 40.7735, 8.08557, 1.4 ) }
    dend_14 { pt3dadd( -8.41838, 42.798, 8.01631, 1.03 ) }
    dend_14 { pt3dadd( -7.95803, 44.4342, 8.04002, 1.03 ) }
    dend_14 { pt3dadd( -7.43049, 45.8182, 8.09362, 1.25 ) }
    dend_14 { pt3dadd( -6.49798, 47.7779, 8.12231, 1.11 ) }
    dend_14 { pt3dadd( -5.72957, 49.2147, 8.1127, 1.11 ) }
    dend_14 { pt3dadd( -4.68216, 51.0935, 7.97516, 1.11 ) }
    dend_14 { pt3dadd( -3.48076, 53.2422, 7.63845, 1.11 ) }
    dend_14 { pt3dadd( -2.69894, 54.7337, 7.26795, 1.11 ) }
    dend_14 { pt3dadd( -1.73107, 56.8411, 6.53913, 1.33 ) }
    dend_14 { pt3dadd( -1.31981, 58.1507, 5.92219, 1.03 ) }
    dend_14 { pt3dadd( -1.01665, 60.4204, 4.55513, 1.18 ) }
    dend_14 { pt3dadd( -1.08038, 61.2952, 3.9421, 1.47 ) }
    dend_14 { pt3dadd( -1.33789, 62.202, 3.27857, 1.47 ) }
    dend_14 { pt3dadd( -1.71971, 63.0003, 2.73249, 1.69 ) }
    dend_14 { pt3dadd( -3.11447, 65.0899, 1.58685, 0.88 ) }
    dend_14 { pt3dadd( -4.07274, 66.3435, 1.08368, 1.11 ) }
    dend_14 { pt3dadd( -5.01454, 67.5667, 0.883084, 1.11 ) }
    dend_14 { pt3dadd( -6.00873, 68.9951, 0.877695, 0.96 ) }
    dend_14 { pt3dadd( -6.86066, 70.4894, 1.07619, 0.88 ) }
    dend_14 { pt3dadd( -7.58292, 72.2197, 1.4804, 1.18 ) }
    dend_14 { pt3dadd( -8.06179, 73.8858, 2.01513, 1.47 ) }
    dend_14 { pt3dadd( -8.51137, 76.3654, 2.90849, 1.4 ) }
    dend_14 { pt3dadd( -8.66399, 78.0546, 3.53338, 0.88 ) }
    dend_14 { pt3dadd( -8.70991, 80.3186, 4.33681, 0.81 ) }
    dend_14 { pt3dadd( -8.62339, 82.4781, 5.09848, 1.69 ) }
    dend_14 { pt3dadd( -8.53618, 83.4024, 5.43753, 1.99 ) }
    dend_14 { pt3dadd( -8.41066, 84.3925, 5.79647, 1.99 ) }
    dend_14 { pt3dadd( -8.313, 85.1912, 6.03793, 2.21 ) }
    dend_14 { pt3dadd( -8.192, 86.6813, 6.53376, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -21.0692, 6.97965, -6.10201, 1.4 ) }
    dend_4 { pt3dadd( -21.2528, 9.04435, -6.4728, 1.4 ) }
    dend_4 { pt3dadd( -21.0979, 10.0899, -7.28278, 1.4 ) }
    dend_4 { pt3dadd( -20.9813, 10.7874, -7.85295, 1.33 ) }
    dend_4 { pt3dadd( -20.81, 12.2256, -8.97089, 1.62 ) }
    dend_4 { pt3dadd( -20.7279, 13.4476, -9.8209, 1.25 ) }
    dend_4 { pt3dadd( -20.6892, 16.061, -11.4356, 1.03 ) }
    dend_4 { pt3dadd( -20.801, 19.381, -13.5694, 1.4 ) }
    dend_4 { pt3dadd( -20.892, 20.3262, -14.1182, 1.4 ) }
    dend_4 { pt3dadd( -21.0874, 21.3837, -14.6362, 1.11 ) }
    dend_4 { pt3dadd( -21.4564, 22.6455, -15.0594, 1.33 ) }
    dend_4 { pt3dadd( -21.894, 23.6646, -15.295, 1.69 ) }
    dend_4 { pt3dadd( -22.5186, 24.6858, -15.4393, 1.69 ) }
    dend_4 { pt3dadd( -23.0506, 25.4039, -15.5429, 1.69 ) }
    dend_4 { pt3dadd( -24.1328, 26.9453, -15.9938, 0.74 ) }
    dend_4 { pt3dadd( -24.5418, 27.6196, -16.258, 0.74 ) }
    dend_4 { pt3dadd( -25.0235, 28.5939, -16.738, 0.59 ) }
    dend_4 { pt3dadd( -25.6579, 30.2492, -17.6001, 1.18 ) }
    dend_4 { pt3dadd( -26.0443, 31.7254, -18.4339, 1.18 ) }
    dend_4 { pt3dadd( -26.3005, 33.1318, -19.2229, 1.18 ) }
    dend_4 { pt3dadd( -26.4032, 34.1811, -19.7949, 1.18 ) }
    dend_4 { pt3dadd( -26.4266, 35.8619, -20.733, 0.81 ) }
    dend_4 { pt3dadd( -26.418, 36.8507, -21.2608, 0.66 ) }
    dend_4 { pt3dadd( -26.4364, 39.4268, -22.5581, 0.66 ) }
    dend_4 { pt3dadd( -26.4775, 39.9486, -22.8138, 1.25 ) }
    dend_4 { pt3dadd( -26.7974, 41.6119, -23.6005, 1.47 ) }
    dend_4 { pt3dadd( -27.4483, 43.3776, -24.3826, 0.59 ) }
    dend_4 { pt3dadd( -28.316, 44.9386, -24.9081, 1.03 ) }
    dend_4 { pt3dadd( -28.8662, 45.7173, -25.0847, 1.4 ) }
    dend_4 { pt3dadd( -29.402, 46.3626, -25.1404, 1.47 ) }
    dend_4 { pt3dadd( -30.3877, 47.5467, -25.1588, 1.11 ) }
    dend_4 { pt3dadd( -31.4923, 48.9305, -25.0151, 0.81 ) }
    dend_4 { pt3dadd( -32.2806, 50.2173, -24.8419, 0.96 ) }
    dend_4 { pt3dadd( -32.5712, 51.2138, -24.7343, 1.25 ) }
    dend_4 { pt3dadd( -32.6706, 52.0447, -24.6527, 1.55 ) }
    dend_4 { pt3dadd( -32.718, 53.1432, -24.5491, 1.55 ) }
    dend_4 { pt3dadd( -32.7187, 54.3615, -24.4355, 0.96 ) }
    dend_4 { pt3dadd( -32.7292, 56.1658, -24.2738, 0.66 ) }
    dend_4 { pt3dadd( -32.8673, 57.4134, -24.1765, 0.66 ) }
    dend_4 { pt3dadd( -33.1434, 58.2001, -24.1088, 0.74 ) }
    dend_4 { pt3dadd( -33.897, 59.2742, -24.0574, 1.03 ) }
    dend_4 { pt3dadd( -34.5496, 59.8861, -24.0778, 1.47 ) }
    dend_4 { pt3dadd( -35.0347, 60.2639, -24.1273, 1.77 ) }
    dend_4 { pt3dadd( -35.6398, 60.6986, -24.2227, 1.62 ) }
    dend_4 { pt3dadd( -37.0335, 61.7631, -24.5376, 0.88 ) }
    dend_4 { pt3dadd( -38.0283, 62.6318, -24.8046, 0.66 ) }
    dend_4 { pt3dadd( -39.0749, 63.7249, -25.1163, 0.59 ) }
    dend_4 { pt3dadd( -39.9766, 64.8815, -25.3872, 0.81 ) }
    dend_4 { pt3dadd( -40.4782, 65.704, -25.5148, 0.59 ) }
    dend_4 { pt3dadd( -41.0215, 66.881, -25.5988, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -41.2654, 67.6015, -25.5805, 1.03 ) }
    dend_4 { pt3dadd( -41.4803, 68.3274, -25.493, 1.03 ) }
    dend_4 { pt3dadd( -41.7214, 69.1526, -25.2992, 0.74 ) }
    dend_4 { pt3dadd( -42.0526, 70.1464, -24.9573, 0.52 ) }
    dend_4 { pt3dadd( -42.3172, 70.825, -24.6794, 0.52 ) }
    dend_4 { pt3dadd( -42.7545, 71.7537, -24.2789, 1.11 ) }
    dend_4 { pt3dadd( -43.1605, 72.4807, -23.9713, 1.4 ) }
    dend_4 { pt3dadd( -43.8176, 73.5511, -23.5382, 1.4 ) }
    dend_4 { pt3dadd( -44.2039, 74.1968, -23.2881, 1.03 ) }
    dend_4 { pt3dadd( -44.4859, 74.7522, -23.0969, 0.74 ) }
    dend_4 { pt3dadd( -44.8595, 75.7513, -22.8192, 0.59 ) }
    dend_4 { pt3dadd( -45.0059, 76.4489, -22.6882, 0.52 ) }
    dend_4 { pt3dadd( -45.0839, 77.375, -22.59, 0.52 ) }
    dend_4 { pt3dadd( -45.1031, 78.7458, -22.5588, 0.52 ) }
    dend_4 { pt3dadd( -45.0916, 79.8068, -22.5653, 0.52 ) }
    dend_4 { pt3dadd( -45.0715, 80.7086, -22.6401, 0.52 ) }
    dend_4 { pt3dadd( -45.0749, 81.6, -22.8175, 0.52 ) }
    dend_4 { pt3dadd( -45.1602, 82.1519, -22.9862, 0.52 ) }
    dend_4 { pt3dadd( -45.3957, 82.7048, -23.2329, 0.81 ) }
    dend_4 { pt3dadd( -45.8076, 83.223, -23.5324, 0.96 ) }
    dend_4 { pt3dadd( -46.6703, 83.938, -24.029, 0.96 ) }
    dend_4 { pt3dadd( -47.512, 84.4867, -24.4339, 0.52 ) }
    dend_4 { pt3dadd( -48.4699, 85.0577, -24.856, 0.81 ) }
    dend_4 { pt3dadd( -48.949, 85.3578, -25.0652, 1.18 ) }
    dend_4 { pt3dadd( -49.4665, 85.7236, -25.282, 1.18 ) }
    dend_4 { pt3dadd( -50.3398, 86.4855, -25.5916, 0.44 ) }
    dend_4 { pt3dadd( -50.8699, 87.1115, -25.7333, 0.44 ) }
    dend_4 { pt3dadd( -51.2648, 87.8605, -25.823, 0.74 ) }
    dend_4 { pt3dadd( -51.4499, 88.6099, -25.8978, 0.74 ) }
    dend_4 { pt3dadd( -51.5223, 89.2923, -25.9395, 0.44 ) }
    dend_4 { pt3dadd( -51.5588, 90.4117, -25.9577, 0.66 ) }
    dend_4 { pt3dadd( -51.5466, 91.5702, -25.9307, 0.96 ) }
    dend_4 { pt3dadd( -51.5352, 92.4604, -25.8973, 0.74 ) }
    dend_4 { pt3dadd( -51.5684, 93.8311, -25.8163, 0.37 ) }
    dend_4 { pt3dadd( -51.6534, 94.9206, -25.7158, 0.37 ) }
    dend_4 { pt3dadd( -51.817, 95.9489, -25.5958, 0.88 ) }
    dend_4 { pt3dadd( -51.9471, 96.3734, -25.5192, 1.18 ) }
    dend_4 { pt3dadd( -52.26, 96.8764, -25.3873, 1.18 ) }
    dend_4 { pt3dadd( -52.7198, 97.3351, -25.2768, 1.18 ) }
    dend_4 { pt3dadd( -53.178, 97.7151, -25.184, 1.11 ) }
    dend_4 { pt3dadd( -53.7239, 98.1605, -25.087, 0.44 ) }
    dend_4 { pt3dadd( -54.5815, 98.9023, -24.9323, 0.44 ) }
    dend_4 { pt3dadd( -55.978, 100.227, -24.6552, 0.44 ) }
    dend_4 { pt3dadd( -56.9157, 101.214, -24.4724, 0.44 ) }
    dend_4 { pt3dadd( -57.8371, 102.297, -24.2864, 0.44 ) }
    dend_4 { pt3dadd( -58.4108, 103.11, -24.1846, 0.44 ) }
    dend_4 { pt3dadd( -58.8807, 103.95, -24.1015, 1.47 ) }
    dend_4 { pt3dadd( -59.179, 104.682, -24.0583, 1.47 ) }
    dend_4 { pt3dadd( -59.4788, 105.684, -24.0353, 1.18 ) }
    dend_4 { pt3dadd( -59.7527, 106.706, -24.1192, 0.66 ) }
    dend_4 { pt3dadd( -60.015, 108.119, -24.5257, 0.44 ) }
    dend_4 { pt3dadd( -60.0912, 108.972, -24.8513, 0.59 ) }
    dend_4 { pt3dadd( -60.0921, 110.079, -25.3863, 0.59 ) }
    dend_4 { pt3dadd( -60.0341, 111.045, -25.923, 0.74 ) }
    dend_4 { pt3dadd( -59.8362, 112.835, -27.095, 1.25 ) }
    dend_4 { pt3dadd( -59.5205, 115.3, -28.9116, 0.66 ) }
    dend_4 { pt3dadd( -59.395, 116.377, -29.7763, 0.66 ) }
    dend_4 { pt3dadd( -59.2256, 117.921, -31.0827, 1.25 ) }
    dend_4 { pt3dadd( -59.1565, 118.712, -31.7436, 1.62 ) }
    dend_4 { pt3dadd( -59.0081, 121.342, -33.792, 1.4 ) }
    dend_4 { pt3dadd( -58.963, 122.446, -34.5823, 1.11 ) }
    dend_4 { pt3dadd( -58.9479, 123.874, -35.5449, 1.25 ) }
    dend_4 { pt3dadd( -58.9196, 125.158, -36.3619, 0.96 ) }
    dend_4 { pt3dadd( -58.8664, 126.19, -36.8971, 1.18 ) }
    dend_4 { pt3dadd( -58.7879, 127.347, -37.383, 1.4 ) }
    dend_4 { pt3dadd( -58.7102, 128.73, -37.8243, 0.37 ) }
    dend_4 { pt3dadd( -58.664, 129.898, -38.2423, 0.37 ) }
    dend_4 { pt3dadd( -58.6275, 130.955, -38.6594, 0.88 ) }
    dend_4 { pt3dadd( -58.6189, 131.814, -39.0499, 0.88 ) }
    dend_4 { pt3dadd( -58.6131, 132.674, -39.4994, 0.88 ) }
    dend_4 { pt3dadd( -58.6375, 134.236, -40.4244, 0.37 ) }
    dend_4 { pt3dadd( -58.7828, 136.051, -41.5163, 1.03 ) }
    dend_4 { pt3dadd( -58.8924, 136.927, -42.107, 1.03 ) }
    dend_4 { pt3dadd( -58.9825, 137.461, -42.5315, 1.03 ) }
    dend_4 { pt3dadd( -59.2924, 138.786, -43.727, 0.29 ) }
    dend_4 { pt3dadd( -59.5881, 140.02, -44.9074, 0.29 ) }
    dend_4 { pt3dadd( -59.8515, 141.09, -45.9873, 0.29 ) }
    dend_4 { pt3dadd( -60.2201, 142.455, -47.4141, 1.25 ) }
    dend_4 { pt3dadd( -60.7246, 144.027, -49.1213, 1.25 ) }
    dend_4 { pt3dadd( -61.1476, 145.232, -50.4799, 0.96 ) }
    dend_4 { pt3dadd( -61.7167, 146.764, -52.1651, 0.37 ) }
    dend_4 { pt3dadd( -61.8815, 147.283, -52.6798, 0.66 ) }
    dend_4 { pt3dadd( -62.0723, 148.008, -53.3707, 1.03 ) }
    dend_4 { pt3dadd( -62.2457, 148.912, -54.1, 1.03 ) }
    dend_4 { pt3dadd( -62.4864, 150.881, -55.455, 0.52 ) }
    dend_4 { pt3dadd( -62.5715, 151.806, -56.0169, 1.03 ) }
    dend_4 { pt3dadd( -62.8207, 152.905, -56.6596, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -21.0692, 6.97965, -6.10201, 0.74 ) }
    dend_1 { pt3dadd( -22.1939, 6.20751, -6.01794, 0.74 ) }
    dend_1 { pt3dadd( -23.2732, 5.35792, -5.94558, 0.74 ) }
    dend_1 { pt3dadd( -24.3719, 4.49299, -5.87191, 1.03 ) }
    dend_1 { pt3dadd( -25.089, 3.92843, -5.82383, 1.4 ) }
    dend_1 { pt3dadd( -26.1452, 3.09703, -5.75302, 1.84 ) }
    dend_1 { pt3dadd( -26.828, 2.55947, -5.70724, 2.14 ) }
    dend_1 { pt3dadd( -27.2924, 2.05246, -5.66947, 2.36 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 95/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.8915, 5.92002, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 55.72, 8.18146, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 70.5486, 10.4429, 2.65033, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 98/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 10.9511, -73.7845, 19.7903, 0.52 ) }
    dend_66 { pt3dadd( 11.1605, -72.1823, 20.7492, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_66 { pt3dadd( 11.2422, -71.5578, 21.1229, 0.52 ) }
    dend_66 { pt3dadd( 11.3456, -70.7663, 21.5966, 1.25 ) }
    dend_66 { pt3dadd( 11.3954, -70.3852, 21.8248, 1.4 ) }
    dend_66 { pt3dadd( 11.4884, -69.6736, 22.2506, 0.37 ) }
    dend_66 { pt3dadd( 11.5461, -69.2321, 22.5148, 0.29 ) }
    dend_66 { pt3dadd( 11.9893, -62.7402, 25.1883, 0.29 ) }
    dend_66 { pt3dadd( 11.1331, -56.2729, 27.809, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 7/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 10.9511, -73.7845, 19.7903, 0.66 ) }
    dend_63 { pt3dadd( 11.6405, -75.0998, 19.4479, 0.66 ) }
    dend_63 { pt3dadd( 12.3133, -76.254, 19.1531, 0.59 ) }
    dend_63 { pt3dadd( 13.1738, -77.7311, 18.8085, 0.59 ) }
    dend_63 { pt3dadd( 13.5778, -78.4432, 18.6718, 0.88 ) }
    dend_63 { pt3dadd( 14.038, -79.3035, 18.5357, 0.88 ) }
    dend_63 { pt3dadd( 14.5675, -80.4537, 18.3654, 0.52 ) }
    dend_63 { pt3dadd( 14.9423, -81.4378, 18.2369, 0.52 ) }
    dend_63 { pt3dadd( 15.1105, -82.1268, 18.2169, 1.11 ) }
    dend_63 { pt3dadd( 15.1073, -82.894, 18.2852, 1.47 ) }
    dend_63 { pt3dadd( 14.9734, -83.4587, 18.3979, 1.18 ) }
    dend_63 { pt3dadd( 14.3658, -84.6467, 18.8018, 0.59 ) }
    dend_63 { pt3dadd( 13.9171, -85.2495, 19.1421, 0.59 ) }
    dend_63 { pt3dadd( 13.3778, -85.8548, 19.633, 0.37 ) }
    dend_63 { pt3dadd( 13.1129, -86.1595, 19.9339, 0.59 ) }
    dend_63 { pt3dadd( 12.8246, -86.5454, 20.3443, 0.59 ) }
    dend_63 { pt3dadd( 12.4303, -87.3386, 21.1741, 0.44 ) }
    dend_63 { pt3dadd( 12.2808, -88.5122, 22.2262, 0.37 ) }
    dend_63 { pt3dadd( 12.4329, -89.2943, 22.7073, 0.66 ) }
    dend_63 { pt3dadd( 12.7719, -90.1565, 23.0788, 0.96 ) }
    dend_63 { pt3dadd( 13.1744, -90.9309, 23.333, 0.74 ) }
    dend_63 { pt3dadd( 13.7651, -91.8964, 23.5463, 0.52 ) }
    dend_63 { pt3dadd( 14.5549, -93.0585, 23.682, 0.81 ) }
    dend_63 { pt3dadd( 15.1584, -93.8997, 23.6951, 0.96 ) }
    dend_63 { pt3dadd( 15.5799, -94.478, 23.6853, 1.03 ) }
    dend_63 { pt3dadd( 16.213, -95.3997, 23.6478, 0.81 ) }
    dend_63 { pt3dadd( 16.7564, -96.2529, 23.5925, 0.74 ) }
    dend_63 { pt3dadd( 17.1513, -96.9, 23.5135, 1.11 ) }
    dend_63 { pt3dadd( 17.518, -97.5382, 23.3737, 1.11 ) }
    dend_63 { pt3dadd( 17.9877, -98.4167, 23.1118, 0.81 ) }
    dend_63 { pt3dadd( 18.3718, -99.1964, 22.8394, 0.52 ) }
    dend_63 { pt3dadd( 18.6306, -99.8397, 22.6253, 0.74 ) }
    dend_63 { pt3dadd( 18.8681, -100.563, 22.452, 0.74 ) }
    dend_63 { pt3dadd( 19.1196, -101.53, 22.3105, 0.52 ) }
    dend_63 { pt3dadd( 19.2531, -102.218, 22.2752, 0.81 ) }
    dend_63 { pt3dadd( 19.3562, -102.789, 22.2748, 0.81 ) }
    dend_63 { pt3dadd( 19.6263, -104.036, 22.3572, 0.59 ) }
    dend_63 { pt3dadd( 19.8692, -104.926, 22.4472, 0.81 ) }
    dend_63 { pt3dadd( 20.1394, -105.649, 22.5804, 0.81 ) }
    dend_63 { pt3dadd( 20.5549, -106.517, 22.7993, 0.44 ) }
    dend_63 { pt3dadd( 21.0567, -107.367, 23.0471, 0.81 ) }
    dend_63 { pt3dadd( 21.7062, -108.28, 23.3078, 0.66 ) }
    dend_63 { pt3dadd( 22.4307, -109.15, 23.5079, 0.29 ) }
    dend_63 { pt3dadd( 23.6822, -110.609, 23.73, 0.74 ) }
    dend_63 { pt3dadd( 24.1414, -111.149, 23.7848, 1.25 ) }
    dend_63 { pt3dadd( 24.5441, -111.621, 23.8306, 1.25 ) }
    dend_63 { pt3dadd( 25.4144, -112.732, 23.9375, 0.37 ) }
    dend_63 { pt3dadd( 26.1108, -113.749, 23.9811, 0.37 ) }
    dend_63 { pt3dadd( 26.8221, -114.859, 23.958, 0.37 ) }
    dend_63 { pt3dadd( 27.1629, -115.46, 23.8455, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 4.51644, -46.4873, 26.8046, 0.44 ) }
    dend_61 { pt3dadd( 5.15955, -46.1241, 28.4776, 0.44 ) }
    dend_61 { pt3dadd( 5.4732, -45.9471, 29.2936, 0.29 ) }
    dend_61 { pt3dadd( 5.88529, -45.7144, 30.3657, 0.52 ) }
    dend_61 { pt3dadd( 6.09873, -45.5938, 30.9209, 0.74 ) }
    dend_61 { pt3dadd( 6.20424, -45.5343, 31.1954, 0.74 ) }
    dend_61 { pt3dadd( 9.88665, -43.5282, 39.2305, 0.74 ) }
    dend_61 { pt3dadd( 14.6881, -40.4739, 46.2914, 0.74 ) }
    dend_61 { pt3dadd( 18.9029, -38.9505, 54.166, 0.74 ) }
    dend_61 { pt3dadd( 22.8722, -36.7737, 62.0185, 0.74 ) }
    dend_61 { pt3dadd( 26.7128, -35.0867, 70.0507, 0.74 ) }
    dend_61 { pt3dadd( 31.8576, -34.325, 77.4696, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 4.51644, -46.4873, 26.8046, 0.44 ) }
    dend_58 { pt3dadd( 4.04278, -47.7779, 27.4693, 0.44 ) }
    dend_58 { pt3dadd( 3.76247, -48.5415, 27.8626, 0.74 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -17.3697, -165.749, 40.1446, 0.29 ) }
    dend_55 { pt3dadd( -14.3983, -171.031, 39.2291, 0.29 ) }
    dend_55 { pt3dadd( -11.376, -175.969, 37.2145, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 75/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -17.3697, -165.749, 40.1446, 0.22 ) }
    dend_54 { pt3dadd( -25.0777, -172.941, 46.2459, 0.29 ) }
    dend_54 { pt3dadd( -34.0562, -179.932, 50.6038, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 78/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 10.7962, -146.057, 9.17982, 0.37 ) }
    dend_50 { pt3dadd( 18.2963, -151.373, 9.612, 0.37 ) }
    dend_50 { pt3dadd( 26.6241, -155.178, 10.0599, 0.37 ) }
    dend_50 { pt3dadd( 35.0649, -158.628, 10.933, 0.37 ) }
    dend_50 { pt3dadd( 42.8962, -163.383, 10.2308, 0.37 ) }
    dend_50 { pt3dadd( 50.5853, -168.219, 8.82642, 0.37 ) }
    dend_50 { pt3dadd( 57.3787, -174.238, 7.17817, 0.37 ) }
    dend_50 { pt3dadd( 63.9483, -180.663, 6.22753, 0.37 ) }
    dend_50 { pt3dadd( 69.8941, -187.744, 6.73911, 0.37 ) }
    dend_50 { pt3dadd( 75.3687, -195.201, 7.39983, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 88/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.7962, -146.057, 9.17982, 0.22 ) }
    dend_41 { pt3dadd( 20.6663, -153.06, 9.10867, 0.37 ) }
    dend_41 { pt3dadd( 31.079, -158.795, 7.00327, 0.37 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 91/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -53.889, -108.738, 8.16208, 0.22 ) }
    dend_35 { pt3dadd( -53.8572, -110.391, 7.48089, 0.22 ) }
    dend_35 { pt3dadd( -53.8328, -111.66, 6.95829, 0.22 ) }
    dend_35 { pt3dadd( -53.814, -112.635, 6.55656, 0.37 ) }
    dend_35 { pt3dadd( -53.7857, -114.107, 5.95001, 0.37 ) }
    dend_35 { pt3dadd( -51.6439, -125.973, 2.15221, 0.37 ) }
    dend_35 { pt3dadd( -48.4862, -137.258, -2.5317, 0.37 ) }
    dend_35 { pt3dadd( -46.2938, -148.804, -7.16713, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -53.889, -108.738, 8.16208, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -54.7436, -110.2, 8.83628, 0.22 ) }
    dend_34 { pt3dadd( -54.7855, -110.255, 8.86645, 0.44 ) }
    dend_34 { pt3dadd( -55.2837, -110.775, 9.14827, 0.15 ) }
    dend_34 { pt3dadd( -55.4627, -110.932, 9.22782, 0.37 ) }
    dend_34 { pt3dadd( -56.0554, -111.424, 9.45655, 0.15 ) }
    dend_34 { pt3dadd( -56.813, -112.043, 9.68218, 0.22 ) }
    dend_34 { pt3dadd( -57.466, -112.535, 9.87654, 0.22 ) }
    dend_34 { pt3dadd( -57.9959, -112.997, 10.1611, 0.66 ) }
    dend_34 { pt3dadd( -58.652, -113.555, 10.5479, 0.22 ) }
    dend_34 { pt3dadd( -58.9008, -113.771, 10.7092, 0.88 ) }
    dend_34 { pt3dadd( -59.4307, -114.274, 11.1196, 0.74 ) }
    dend_34 { pt3dadd( -60.3909, -115.49, 12.1024, 1.4 ) }
    dend_34 { pt3dadd( -60.9285, -116.648, 13.2118, 1.18 ) }
    dend_34 { pt3dadd( -65.629, -123.16, 18.1796, 1.18 ) }
    dend_34 { pt3dadd( -69.4325, -130.052, 23.4168, 1.18 ) }
    dend_34 { pt3dadd( -74.4777, -136.169, 28.524, 1.18 ) }
    dend_34 { pt3dadd( -80.0843, -142.757, 32.3246, 1.18 ) }
    dend_34 { pt3dadd( -84.876, -149.5, 36.8981, 1.18 ) }
    dend_34 { pt3dadd( -90.1215, -155.456, 41.985, 1.18 ) }
    dend_34 { pt3dadd( -94.5301, -161.809, 47.3946, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -97.0452, 138.432, 126.759, 0.37 ) }
    dend_31 { pt3dadd( -101.27, 143.979, 132.076, 0.37 ) }
    dend_31 { pt3dadd( -106.4, 147.929, 137.926, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 23/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -97.0452, 138.432, 126.759, 0.29 ) }
    dend_30 { pt3dadd( -102.28, 145.602, 133.959, 0.37 ) }
    dend_30 { pt3dadd( -106.972, 153.241, 141.072, 0.37 ) }
    dend_30 { pt3dadd( -111.449, 159.233, 149.669, 0.37 ) }
    dend_30 { pt3dadd( -115.079, 166.425, 157.773, 0.37 ) }
    dend_30 { pt3dadd( -118.484, 171.623, 167.3, 0.37 ) }
    dend_30 { pt3dadd( -121.803, 177.383, 176.545, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.192, 86.6813, 6.53376, 0.96 ) }
    dend_16 { pt3dadd( -7.90795, 88.802, 6.23151, 0.96 ) }
    dend_16 { pt3dadd( -7.80234, 90.1864, 5.9455, 0.81 ) }
    dend_16 { pt3dadd( -7.79011, 91.2931, 5.68529, 0.81 ) }
    dend_16 { pt3dadd( -7.79393, 92.4574, 5.29858, 1.18 ) }
    dend_16 { pt3dadd( -7.80744, 95.0695, 4.35023, 1.18 ) }
    dend_16 { pt3dadd( -7.80809, 95.7327, 4.1116, 1.18 ) }
    dend_16 { pt3dadd( -7.82999, 96.7586, 3.68037, 0.81 ) }
    dend_16 { pt3dadd( -7.85374, 97.5851, 3.38523, 0.81 ) }
    dend_16 { pt3dadd( -7.91125, 99.6114, 3.01991, 0.66 ) }
    dend_16 { pt3dadd( -7.93483, 100.667, 3.13173, 0.96 ) }
    dend_16 { pt3dadd( -7.9465, 101.652, 3.52602, 1.11 ) }
    dend_16 { pt3dadd( -7.94673, 102.631, 4.10456, 0.81 ) }
    dend_16 { pt3dadd( -7.922, 104.234, 5.24957, 0.59 ) }
    dend_16 { pt3dadd( -7.85977, 105.9, 6.5024, 0.81 ) }
    dend_16 { pt3dadd( -7.79936, 107.296, 7.57373, 1.11 ) }
    dend_16 { pt3dadd( -7.71956, 108.336, 8.25944, 1.25 ) }
    dend_16 { pt3dadd( -7.56273, 109.97, 9.12814, 0.59 ) }
    dend_16 { pt3dadd( -7.46401, 110.817, 9.39884, 0.59 ) }
    dend_16 { pt3dadd( -7.25915, 112.531, 9.36003, 0.59 ) }
    dend_16 { pt3dadd( -7.17386, 113.573, 8.96866, 0.44 ) }
    dend_16 { pt3dadd( -7.07181, 115.421, 7.87509, 1.11 ) }
    dend_16 { pt3dadd( -7.05016, 115.968, 7.48297, 1.4 ) }
    dend_16 { pt3dadd( -6.98543, 117.364, 6.3767, 0.88 ) }
    dend_16 { pt3dadd( -6.94689, 118.454, 5.52826, 0.52 ) }
    dend_16 { pt3dadd( -6.92016, 119.309, 4.93596, 0.52 ) }
    dend_16 { pt3dadd( -6.77275, 120.389, 4.36401, 0.74 ) }
    dend_16 { pt3dadd( -6.50379, 121.174, 4.18142, 1.11 ) }
    dend_16 { pt3dadd( -6.00076, 122.064, 4.19395, 1.33 ) }
    dend_16 { pt3dadd( -5.62958, 122.551, 4.30248, 1.62 ) }
    dend_16 { pt3dadd( -5.03402, 123.161, 4.5178, 1.47 ) }
    dend_16 { pt3dadd( -3.90354, 124.123, 4.96506, 0.96 ) }
    dend_16 { pt3dadd( -3.1252, 124.717, 5.27238, 0.81 ) }
    dend_16 { pt3dadd( -2.35626, 125.308, 5.58398, 0.81 ) }
    dend_16 { pt3dadd( -1.48807, 126.019, 5.94972, 0.66 ) }
    dend_16 { pt3dadd( -0.624243, 126.816, 6.2971, 0.59 ) }
    dend_16 { pt3dadd( -0.12161, 127.373, 6.4716, 0.59 ) }
    dend_16 { pt3dadd( 0.499702, 128.224, 6.65296, 0.44 ) }
    dend_16 { pt3dadd( 1.07959, 129.205, 6.7946, 0.81 ) }
    dend_16 { pt3dadd( 1.61206, 130.264, 6.8693, 0.81 ) }
    dend_16 { pt3dadd( 2.17471, 131.501, 6.90265, 1.03 ) }
    dend_16 { pt3dadd( 2.76437, 132.774, 6.82344, 1.25 ) }
    dend_16 { pt3dadd( 3.06053, 133.355, 6.71091, 1.25 ) }
    dend_16 { pt3dadd( 3.51631, 134.054, 6.40054, 1.18 ) }
    dend_16 { pt3dadd( 4.30358, 135.087, 5.78665, 0.66 ) }
    dend_16 { pt3dadd( 4.725, 135.625, 5.4738, 0.59 ) }
    dend_16 { pt3dadd( 5.90864, 137.147, 4.65931, 1.25 ) }
    dend_16 { pt3dadd( 6.86157, 138.412, 4.09054, 1.99 ) }
    dend_16 { pt3dadd( 8.92595, 141.414, 3.10204, 0.59 ) }
    dend_16 { pt3dadd( 9.44164, 142.267, 2.94933, 0.66 ) }
    dend_16 { pt3dadd( 10.615, 144.669, 2.96678, 0.52 ) }
    dend_16 { pt3dadd( 10.9954, 145.646, 3.14225, 1.03 ) }
    dend_16 { pt3dadd( 11.3462, 146.806, 3.53068, 1.25 ) }
    dend_16 { pt3dadd( 11.6787, 148.147, 4.08645, 0.74 ) }
    dend_16 { pt3dadd( 11.8781, 149.147, 4.53105, 0.59 ) }
    dend_16 { pt3dadd( 12.067, 149.995, 4.80015, 0.59 ) }
    dend_16 { pt3dadd( 12.4184, 151.184, 5.02818, 0.88 ) }
    dend_16 { pt3dadd( 12.7971, 152.165, 5.18817, 1.11 ) }
    dend_16 { pt3dadd( 13.2043, 152.979, 5.30604, 1.11 ) }
    dend_16 { pt3dadd( 13.7786, 153.914, 5.45508, 1.03 ) }
    dend_16 { pt3dadd( 14.6969, 155.141, 5.70941, 0.66 ) }
    dend_16 { pt3dadd( 15.5144, 155.996, 5.95483, 0.66 ) }
    dend_16 { pt3dadd( 16.8712, 157.085, 6.40357, 0.96 ) }
    dend_16 { pt3dadd( 17.9118, 157.74, 6.71, 1.4 ) }
    dend_16 { pt3dadd( 18.5311, 158.078, 6.87189, 1.4 ) }
    dend_16 { pt3dadd( 19.2473, 158.434, 7.02236, 1.4 ) }
    dend_16 { pt3dadd( 20.3474, 158.98, 7.15516, 0.74 ) }
    dend_16 { pt3dadd( 21.4362, 159.641, 7.0839, 0.37 ) }
    dend_16 { pt3dadd( 22.8866, 160.716, 6.62551, 0.37 ) }
    dend_16 { pt3dadd( 23.54, 161.241, 6.30834, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( 24.1099, 161.706, 5.98663, 0.96 ) }
    dend_16 { pt3dadd( 24.995, 162.416, 5.42348, 0.66 ) }
    dend_16 { pt3dadd( 26.3019, 163.452, 4.55786, 0.52 ) }
    dend_16 { pt3dadd( 27.0365, 164.049, 4.09406, 0.37 ) }
    dend_16 { pt3dadd( 27.8126, 164.704, 3.71226, 0.81 ) }
    dend_16 { pt3dadd( 28.4588, 165.306, 3.43192, 0.52 ) }
    dend_16 { pt3dadd( 29.3533, 166.329, 3.04718, 0.52 ) }
    dend_16 { pt3dadd( 29.8427, 167.045, 2.78183, 0.66 ) }
    dend_16 { pt3dadd( 30.3987, 168.254, 2.3388, 0.66 ) }
    dend_16 { pt3dadd( 30.6926, 169.337, 1.85661, 0.66 ) }
    dend_16 { pt3dadd( 30.9199, 170.634, 1.20321, 0.66 ) }
    dend_16 { pt3dadd( 31.1144, 171.997, 0.468672, 0.81 ) }
    dend_16 { pt3dadd( 31.3433, 173.413, -0.340578, 1.03 ) }
    dend_16 { pt3dadd( 31.5163, 174.132, -0.799864, 1.25 ) }
    dend_16 { pt3dadd( 31.9548, 175.356, -1.64229, 0.52 ) }
    dend_16 { pt3dadd( 32.3519, 176.132, -2.19954, 0.37 ) }
    dend_16 { pt3dadd( 32.9928, 176.923, -2.75492, 0.37 ) }
    dend_16 { pt3dadd( 34.1902, 177.977, -3.48162, 1.11 ) }
    dend_16 { pt3dadd( 35.0918, 178.609, -3.95134, 1.62 ) }
    dend_16 { pt3dadd( 35.5149, 178.863, -4.15971, 1.69 ) }
    dend_16 { pt3dadd( 36.3045, 179.328, -4.55915, 1.69 ) }
    dend_16 { pt3dadd( 38.1536, 180.574, -5.63697, 0.44 ) }
    dend_16 { pt3dadd( 39.1201, 181.366, -6.30345, 0.96 ) }
    dend_16 { pt3dadd( 40.0102, 182.255, -6.99026, 1.03 ) }
    dend_16 { pt3dadd( 40.5003, 182.897, -7.40305, 0.88 ) }
    dend_16 { pt3dadd( 41.2069, 184.094, -8.07995, 0.44 ) }
    dend_16 { pt3dadd( 41.8201, 185.375, -8.69586, 0.74 ) }
    dend_16 { pt3dadd( 42.1084, 186.164, -9.00298, 1.03 ) }
    dend_16 { pt3dadd( 42.4593, 186.89, -9.27119, 1.03 ) }
    dend_16 { pt3dadd( 43.1895, 187.872, -9.66497, 0.59 ) }
    dend_16 { pt3dadd( 44.1435, 188.684, -10.0551, 0.59 ) }
    dend_16 { pt3dadd( 45.2121, 189.309, -10.3949, 0.59 ) }
    dend_16 { pt3dadd( 45.9899, 189.702, -10.6305, 0.74 ) }
    dend_16 { pt3dadd( 47.8935, 190.744, -11.2665, 0.74 ) }
    dend_16 { pt3dadd( 48.547, 191.198, -11.5443, 0.96 ) }
    dend_16 { pt3dadd( 49.1216, 191.811, -11.8027, 1.11 ) }
    dend_16 { pt3dadd( 49.4368, 192.394, -11.9259, 1.11 ) }
    dend_16 { pt3dadd( 49.8475, 193.562, -12.042, 0.66 ) }
    dend_16 { pt3dadd( 50.2302, 195.007, -12.0226, 0.52 ) }
    dend_16 { pt3dadd( 50.5875, 196.506, -11.8122, 0.52 ) }
    dend_16 { pt3dadd( 51.2011, 198.878, -11.317, 1.11 ) }
    dend_16 { pt3dadd( 51.4256, 199.74, -11.1047, 1.33 ) }
    dend_16 { pt3dadd( 51.6325, 200.57, -10.8727, 1.33 ) }
    dend_16 { pt3dadd( 51.9504, 202.02, -10.4353, 0.44 ) }
    dend_16 { pt3dadd( 52.206, 203.185, -10.0991, 0.44 ) }
    dend_16 { pt3dadd( 52.4363, 204.198, -9.87693, 0.74 ) }
    dend_16 { pt3dadd( 52.5996, 204.977, -9.78929, 0.74 ) }
    dend_16 { pt3dadd( 52.8137, 206.245, -9.68367, 0.52 ) }
    dend_16 { pt3dadd( 53.0263, 207.82, -9.58442, 0.44 ) }
    dend_16 { pt3dadd( 53.1502, 209.308, -9.54384, 0.44 ) }
    dend_16 { pt3dadd( 53.2283, 210.838, -9.55188, 1.18 ) }
    dend_16 { pt3dadd( 53.2676, 211.757, -9.5925, 1.18 ) }
    dend_16 { pt3dadd( 53.3349, 212.98, -9.69549, 0.96 ) }
    dend_16 { pt3dadd( 53.4236, 214.195, -9.85485, 0.44 ) }
    dend_16 { pt3dadd( 53.6481, 215.978, -10.1754, 0.37 ) }
    dend_16 { pt3dadd( 53.7803, 216.669, -10.338, 0.37 ) }
    dend_16 { pt3dadd( 54.2003, 218.112, -10.7278, 0.88 ) }
    dend_16 { pt3dadd( 54.6178, 219.182, -10.9585, 1.18 ) }
    dend_16 { pt3dadd( 54.9994, 219.946, -11.027, 1.18 ) }
    dend_16 { pt3dadd( 55.8432, 221.396, -10.8764, 0.59 ) }
    dend_16 { pt3dadd( 56.6537, 222.713, -10.4757, 0.52 ) }
    dend_16 { pt3dadd( 57.1811, 223.605, -10.0818, 0.44 ) }
    dend_16 { pt3dadd( 58.2259, 225.474, -8.94152, 0.74 ) }
    dend_16 { pt3dadd( 58.7961, 226.563, -8.16709, 1.25 ) }
    dend_16 { pt3dadd( 59.2689, 227.532, -7.42991, 1.55 ) }
    dend_16 { pt3dadd( 59.6279, 228.386, -6.7549, 1.62 ) }
    dend_16 { pt3dadd( 60.0387, 229.473, -5.87726, 0.81 ) }
    dend_16 { pt3dadd( 60.5079, 230.749, -4.88281, 0.37 ) }
    dend_16 { pt3dadd( 60.9049, 231.789, -4.13951, 0.37 ) }
    dend_16 { pt3dadd( 61.1696, 232.582, -3.60658, 0.37 ) }
    dend_16 { pt3dadd( 61.4006, 233.539, -3.03093, 0.37 ) }
    dend_16 { pt3dadd( 61.4782, 234.152, -2.73005, 0.37 ) }
    dend_16 { pt3dadd( 61.539, 235.021, -2.42955, 0.66 ) }
    dend_16 { pt3dadd( 61.5939, 235.931, -2.12374, 0.96 ) }
    dend_16 { pt3dadd( 61.6476, 236.635, -1.79808, 1.18 ) }
    dend_16 { pt3dadd( 61.8102, 237.732, -1.17997, 0.52 ) }
    dend_16 { pt3dadd( 62.1222, 239.025, -0.383918, 0.66 ) }
    dend_16 { pt3dadd( 62.45, 240.158, 0.322054, 0.59 ) }
    dend_16 { pt3dadd( 63.1636, 242.398, 1.74803, 0.52 ) }
    dend_16 { pt3dadd( 63.6788, 243.749, 2.65148, 0.96 ) }
    dend_16 { pt3dadd( 64.0553, 244.578, 3.24067, 0.96 ) }
    dend_16 { pt3dadd( 64.6105, 245.527, 3.95347, 0.66 ) }
    dend_16 { pt3dadd( 65.4375, 246.72, 4.88726, 0.44 ) }
    dend_16 { pt3dadd( 66.1333, 247.641, 5.56282, 0.44 ) }
    dend_16 { pt3dadd( 66.8727, 248.544, 6.09831, 0.52 ) }
    dend_16 { pt3dadd( 67.5513, 249.359, 6.55647, 0.52 ) }
    dend_16 { pt3dadd( 68.7555, 250.79, 7.42807, 0.81 ) }
    dend_16 { pt3dadd( 69.572, 251.824, 8.07322, 0.52 ) }
    dend_16 { pt3dadd( 70.2818, 252.941, 8.75991, 0.52 ) }
    dend_16 { pt3dadd( 70.7774, 253.999, 9.36055, 1.47 ) }
    dend_16 { pt3dadd( 71.0153, 254.652, 9.70951, 1.77 ) }
    dend_16 { pt3dadd( 71.1916, 255.191, 9.98215, 1.77 ) }
    dend_16 { pt3dadd( 71.5486, 256.313, 10.524, 0.66 ) }
    dend_16 { pt3dadd( 72.1179, 257.735, 11.1736, 0.52 ) }
    dend_16 { pt3dadd( 72.7338, 258.944, 11.7436, 0.52 ) }
    dend_16 { pt3dadd( 73.4385, 260.119, 12.2902, 0.52 ) }
    dend_16 { pt3dadd( 73.9289, 260.899, 12.6193, 0.52 ) }
    dend_16 { pt3dadd( 74.2913, 261.484, 12.8379, 0.81 ) }
    dend_16 { pt3dadd( 74.8737, 262.45, 13.1592, 1.03 ) }
    dend_16 { pt3dadd( 75.409, 263.519, 13.4359, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 75.6275, 264.031, 13.5577, 1.33 ) }
    dend_16 { pt3dadd( 76.0706, 265.063, 13.8145, 0.88 ) }
    dend_16 { pt3dadd( 76.5061, 265.895, 14.0607, 0.81 ) }
    dend_16 { pt3dadd( 77.0243, 266.595, 14.3231, 0.59 ) }
    dend_16 { pt3dadd( 78.2133, 267.66, 14.8557, 0.44 ) }
    dend_16 { pt3dadd( 79.1935, 268.257, 15.3102, 0.66 ) }
    dend_16 { pt3dadd( 80.1283, 268.717, 15.7608, 0.81 ) }
    dend_16 { pt3dadd( 81.1113, 269.138, 16.2491, 0.44 ) }
    dend_16 { pt3dadd( 81.9699, 269.503, 16.7337, 0.81 ) }
    dend_16 { pt3dadd( 82.6148, 269.81, 17.1398, 0.81 ) }
    dend_16 { pt3dadd( 83.5704, 270.304, 17.7867, 0.52 ) }
    dend_16 { pt3dadd( 84.2992, 270.769, 18.2888, 0.52 ) }
    dend_16 { pt3dadd( 85.0892, 271.332, 18.8326, 0.52 ) }
    dend_16 { pt3dadd( 85.9179, 271.937, 19.3797, 0.37 ) }
    dend_16 { pt3dadd( 87.0256, 272.713, 19.9986, 0.37 ) }
    dend_16 { pt3dadd( 87.9422, 273.309, 20.3907, 0.59 ) }
    dend_16 { pt3dadd( 88.8824, 273.889, 20.7523, 1.18 ) }
    dend_16 { pt3dadd( 89.2065, 274.092, 20.8999, 1.47 ) }
    dend_16 { pt3dadd( 89.8707, 274.552, 21.2478, 1.47 ) }
    dend_16 { pt3dadd( 90.9077, 275.347, 21.8434, 0.52 ) }
    dend_16 { pt3dadd( 91.6688, 275.986, 22.3277, 0.52 ) }
    dend_16 { pt3dadd( 93.0246, 277.184, 23.2056, 0.96 ) }
    dend_16 { pt3dadd( 94.1849, 278.166, 23.9323, 0.52 ) }
    dend_16 { pt3dadd( 95.2757, 279.015, 24.5376, 0.96 ) }
    dend_16 { pt3dadd( 95.8919, 279.456, 24.8301, 0.96 ) }
    dend_16 { pt3dadd( 97.106, 280.176, 25.2943, 0.52 ) }
    dend_16 { pt3dadd( 97.8026, 280.509, 25.4466, 0.37 ) }
    dend_16 { pt3dadd( 98.948, 280.886, 25.5147, 0.37 ) }
    dend_16 { pt3dadd( 99.7968, 281.055, 25.5167, 0.81 ) }
    dend_16 { pt3dadd( 100.534, 281.132, 25.5287, 0.81 ) }
    dend_16 { pt3dadd( 101.669, 281.22, 25.5673, 0.52 ) }
    dend_16 { pt3dadd( 102.485, 281.291, 25.6233, 0.74 ) }
    dend_16 { pt3dadd( 103.715, 281.442, 25.7546, 0.74 ) }
    dend_16 { pt3dadd( 104.755, 281.615, 25.8916, 0.52 ) }
    dend_16 { pt3dadd( 105.976, 281.961, 26.0442, 0.52 ) }
    dend_16 { pt3dadd( 107.18, 282.521, 26.1889, 0.96 ) }
    dend_16 { pt3dadd( 107.781, 282.935, 26.2539, 1.55 ) }
    dend_16 { pt3dadd( 108.273, 283.362, 26.3173, 1.69 ) }
    dend_16 { pt3dadd( 108.565, 283.657, 26.3614, 1.69 ) }
    dend_16 { pt3dadd( 110.003, 285.114, 26.6293, 0.52 ) }
    dend_16 { pt3dadd( 111.023, 286.062, 26.8584, 0.66 ) }
    dend_16 { pt3dadd( 111.659, 286.549, 27.0338, 0.74 ) }
    dend_16 { pt3dadd( 112.82, 287.253, 27.3359, 0.44 ) }
    dend_16 { pt3dadd( 114.053, 287.912, 27.6549, 0.37 ) }
    dend_16 { pt3dadd( 115.187, 288.458, 27.9606, 1.11 ) }
    dend_16 { pt3dadd( 116.049, 288.844, 28.2172, 1.55 ) }
    dend_16 { pt3dadd( 117.045, 289.336, 28.4647, 0.81 ) }
    dend_16 { pt3dadd( 118.333, 290.216, 28.6978, 0.52 ) }
    dend_16 { pt3dadd( 118.997, 290.918, 28.7599, 0.66 ) }
    dend_16 { pt3dadd( 119.319, 291.366, 28.7465, 0.66 ) }
    dend_16 { pt3dadd( 120.001, 292.508, 28.6557, 0.44 ) }
    dend_16 { pt3dadd( 120.596, 293.547, 28.5589, 0.44 ) }
    dend_16 { pt3dadd( 121.294, 294.516, 28.4385, 0.52 ) }
    dend_16 { pt3dadd( 122.336, 295.431, 28.287, 0.74 ) }
    dend_16 { pt3dadd( 123.35, 295.962, 28.0853, 1.11 ) }
    dend_16 { pt3dadd( 123.502, 296.015, 28.0519, 1.33 ) }
    dend_16 { pt3dadd( 124.114, 296.17, 27.9182, 1.33 ) }
    dend_16 { pt3dadd( 125.96, 296.574, 27.4598, 0.37 ) }
    dend_16 { pt3dadd( 126.797, 296.764, 27.226, 0.37 ) }
    dend_16 { pt3dadd( 128.187, 297.161, 26.823, 0.66 ) }
    dend_16 { pt3dadd( 129.246, 297.572, 26.514, 0.44 ) }
    dend_16 { pt3dadd( 129.849, 297.86, 26.3405, 0.44 ) }
    dend_16 { pt3dadd( 131.195, 298.588, 25.9913, 1.18 ) }
    dend_16 { pt3dadd( 131.832, 298.955, 25.902, 1.47 ) }
    dend_16 { pt3dadd( 132.63, 299.424, 25.9052, 1.47 ) }
    dend_16 { pt3dadd( 134.102, 300.341, 26.1435, 0.52 ) }
    dend_16 { pt3dadd( 134.8, 300.84, 26.3619, 0.52 ) }
    dend_16 { pt3dadd( 135.898, 301.771, 26.8668, 0.52 ) }
    dend_16 { pt3dadd( 137.087, 302.972, 27.6228, 0.88 ) }
    dend_16 { pt3dadd( 137.837, 303.883, 28.1943, 0.66 ) }
    dend_16 { pt3dadd( 138.689, 305.107, 28.9617, 0.96 ) }
    dend_16 { pt3dadd( 139.374, 306.242, 29.6724, 0.96 ) }
    dend_16 { pt3dadd( 140.006, 307.309, 30.3074, 0.96 ) }
    dend_16 { pt3dadd( 140.505, 308.114, 30.7639, 0.96 ) }
    dend_16 { pt3dadd( 141.082, 308.872, 31.1675, 0.96 ) }
    dend_16 { pt3dadd( 141.753, 309.482, 31.5513, 0.96 ) }
    dend_16 { pt3dadd( 142.799, 310.108, 32.0539, 0.37 ) }
    dend_16 { pt3dadd( 143.985, 310.647, 32.5511, 0.37 ) }
    dend_16 { pt3dadd( 145.062, 311.073, 32.9933, 0.66 ) }
    dend_16 { pt3dadd( 146.006, 311.46, 33.38, 1.33 ) }
    dend_16 { pt3dadd( 146.687, 311.789, 33.662, 1.33 ) }
    dend_16 { pt3dadd( 147.579, 312.394, 34.0462, 0.52 ) }
    dend_16 { pt3dadd( 148.551, 313.219, 34.4785, 0.52 ) }
    dend_16 { pt3dadd( 148.996, 313.642, 34.6802, 0.88 ) }
    dend_16 { pt3dadd( 149.575, 314.161, 34.9028, 0.88 ) }
    dend_16 { pt3dadd( 150.394, 314.774, 35.1574, 0.88 ) }
    dend_16 { pt3dadd( 151.52, 315.404, 35.4759, 0.44 ) }
    dend_16 { pt3dadd( 152.671, 315.897, 35.7663, 0.44 ) }
    dend_16 { pt3dadd( 153.968, 316.263, 36.056, 0.81 ) }
    dend_16 { pt3dadd( 155.452, 316.52, 36.3584, 1.47 ) }
    dend_16 { pt3dadd( 156.121, 316.559, 36.48, 1.77 ) }
    dend_16 { pt3dadd( 157.291, 316.49, 36.6596, 1.77 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 92/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.192, 86.6813, 6.53376, 0.52 ) }
    dend_15 { pt3dadd( -9.28564, 87.4785, 5.76114, 0.52 ) }
    dend_15 { pt3dadd( -10.1086, 88.1698, 5.21197, 0.52 ) }
    dend_15 { pt3dadd( -11.0454, 89.1127, 4.60617, 0.52 ) }
    dend_15 { pt3dadd( -11.685, 89.8948, 4.19457, 0.74 ) }
    dend_15 { pt3dadd( -12.0909, 90.5443, 3.89477, 0.74 ) }
    dend_15 { pt3dadd( -12.429, 91.3151, 3.53189, 0.59 ) }
    dend_15 { pt3dadd( -12.4925, 91.8632, 3.31472, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( -12.4433, 92.6732, 3.03192, 0.37 ) }
    dend_15 { pt3dadd( -12.3231, 93.5023, 2.79143, 0.37 ) }
    dend_15 { pt3dadd( -12.1495, 94.6455, 2.5043, 0.37 ) }
    dend_15 { pt3dadd( -12.0519, 96.0086, 2.1833, 0.37 ) }
    dend_15 { pt3dadd( -12.158, 96.5406, 2.06843, 0.44 ) }
    dend_15 { pt3dadd( -12.507, 97.0739, 1.97618, 0.59 ) }
    dend_15 { pt3dadd( -12.896, 97.4412, 1.91838, 0.59 ) }
    dend_15 { pt3dadd( -14.2401, 98.4625, 1.77651, 0.88 ) }
    dend_15 { pt3dadd( -14.8884, 98.8816, 1.73097, 1.03 ) }
    dend_15 { pt3dadd( -16.1501, 99.6345, 1.62718, 0.37 ) }
    dend_15 { pt3dadd( -17.0372, 100.157, 1.49091, 0.44 ) }
    dend_15 { pt3dadd( -17.6572, 100.548, 1.32888, 0.74 ) }
    dend_15 { pt3dadd( -18.208, 100.942, 1.12061, 0.74 ) }
    dend_15 { pt3dadd( -18.9817, 101.627, 0.702109, 0.44 ) }
    dend_15 { pt3dadd( -19.5576, 102.303, 0.295017, 0.29 ) }
    dend_15 { pt3dadd( -19.8008, 102.847, -0.0331083, 0.29 ) }
    dend_15 { pt3dadd( -19.9384, 103.842, -0.635574, 1.03 ) }
    dend_15 { pt3dadd( -19.8843, 104.421, -0.993017, 1.4 ) }
    dend_15 { pt3dadd( -19.7804, 104.901, -1.28739, 1.4 ) }
    dend_15 { pt3dadd( -19.5225, 105.843, -1.86179, 0.96 ) }
    dend_15 { pt3dadd( -19.1016, 107.458, -2.78795, 0.52 ) }
    dend_15 { pt3dadd( -18.9489, 108.185, -3.18775, 0.52 ) }
    dend_15 { pt3dadd( -18.8121, 109.274, -3.7402, 0.52 ) }
    dend_15 { pt3dadd( -18.8687, 109.825, -3.9763, 0.52 ) }
    dend_15 { pt3dadd( -19.2964, 110.609, -4.14475, 0.52 ) }
    dend_15 { pt3dadd( -19.9944, 111.381, -4.19459, 0.88 ) }
    dend_15 { pt3dadd( -20.433, 111.798, -4.1927, 1.25 ) }
    dend_15 { pt3dadd( -20.976, 112.315, -4.17879, 1.47 ) }
    dend_15 { pt3dadd( -21.8871, 113.252, -4.14405, 0.59 ) }
    dend_15 { pt3dadd( -22.6104, 114.162, -4.15825, 0.37 ) }
    dend_15 { pt3dadd( -23.3103, 115.289, -4.221, 0.29 ) }
    dend_15 { pt3dadd( -23.6226, 115.934, -4.28972, 0.59 ) }
    dend_15 { pt3dadd( -23.9368, 116.751, -4.41528, 0.88 ) }
    dend_15 { pt3dadd( -24.2319, 117.619, -4.58767, 1.11 ) }
    dend_15 { pt3dadd( -24.5619, 118.603, -4.8079, 1.33 ) }
    dend_15 { pt3dadd( -24.8059, 119.28, -4.95821, 1.03 ) }
    dend_15 { pt3dadd( -25.1619, 120.174, -5.1455, 0.81 ) }
    dend_15 { pt3dadd( -25.5641, 121.058, -5.32587, 0.52 ) }
    dend_15 { pt3dadd( -26.2892, 122.582, -5.60394, 0.52 ) }
    dend_15 { pt3dadd( -26.7802, 123.646, -5.78773, 0.52 ) }
    dend_15 { pt3dadd( -27.0148, 124.179, -5.86954, 0.66 ) }
    dend_15 { pt3dadd( -27.2566, 124.832, -5.96623, 0.66 ) }
    dend_15 { pt3dadd( -27.5485, 125.902, -6.1013, 0.37 ) }
    dend_15 { pt3dadd( -27.7348, 127.034, -6.2059, 0.37 ) }
    dend_15 { pt3dadd( -27.8097, 128.074, -6.28729, 0.88 ) }
    dend_15 { pt3dadd( -27.8429, 128.649, -6.31943, 0.88 ) }
    dend_15 { pt3dadd( -27.9389, 129.796, -6.38564, 0.37 ) }
    dend_15 { pt3dadd( -28.0675, 130.646, -6.4402, 0.29 ) }
    dend_15 { pt3dadd( -28.3398, 131.868, -6.51395, 0.81 ) }
    dend_15 { pt3dadd( -28.4849, 132.386, -6.50934, 1.18 ) }
    dend_15 { pt3dadd( -28.7667, 133.297, -6.43656, 1.18 ) }
    dend_15 { pt3dadd( -29.0192, 134.155, -6.32611, 0.59 ) }
    dend_15 { pt3dadd( -29.313, 135.393, -6.1358, 0.44 ) }
    dend_15 { pt3dadd( -29.4817, 136.733, -5.91285, 0.44 ) }
    dend_15 { pt3dadd( -29.4868, 138.152, -5.68507, 1.11 ) }
    dend_15 { pt3dadd( -29.4397, 138.653, -5.62193, 1.11 ) }
    dend_15 { pt3dadd( -29.3149, 139.429, -5.55577, 0.81 ) }
    dend_15 { pt3dadd( -29.0964, 140.614, -5.49402, 0.52 ) }
    dend_15 { pt3dadd( -28.9457, 141.541, -5.53101, 0.52 ) }
    dend_15 { pt3dadd( -28.89, 142.418, -5.66334, 0.44 ) }
    dend_15 { pt3dadd( -28.935, 143.165, -5.83621, 0.44 ) }
    dend_15 { pt3dadd( -29.0611, 143.891, -6.0176, 0.52 ) }
    dend_15 { pt3dadd( -29.2327, 144.563, -6.18604, 0.81 ) }
    dend_15 { pt3dadd( -29.5882, 145.734, -6.44072, 1.11 ) }
    dend_15 { pt3dadd( -29.8018, 146.388, -6.57456, 1.11 ) }
    dend_15 { pt3dadd( -30.0987, 147.293, -6.69652, 0.81 ) }
    dend_15 { pt3dadd( -30.4066, 148.242, -6.76907, 0.37 ) }
    dend_15 { pt3dadd( -30.7696, 149.382, -6.78436, 0.37 ) }
    dend_15 { pt3dadd( -31.1286, 150.513, -6.72089, 0.29 ) }
    dend_15 { pt3dadd( -31.398, 151.34, -6.59374, 0.88 ) }
    dend_15 { pt3dadd( -31.7444, 152.455, -6.35563, 1.55 ) }
    dend_15 { pt3dadd( -31.904, 153.005, -6.21277, 1.55 ) }
    dend_15 { pt3dadd( -32.1352, 153.867, -5.98184, 1.18 ) }
    dend_15 { pt3dadd( -32.3766, 154.834, -5.77845, 0.81 ) }
    dend_15 { pt3dadd( -32.7481, 156.272, -5.5076, 0.44 ) }
    dend_15 { pt3dadd( -33.1748, 157.768, -5.2479, 0.29 ) }
    dend_15 { pt3dadd( -33.4957, 158.697, -5.11147, 0.29 ) }
    dend_15 { pt3dadd( -33.9187, 159.76, -4.96163, 1.25 ) }
    dend_15 { pt3dadd( -34.6016, 161.124, -4.73227, 0.29 ) }
    dend_15 { pt3dadd( -35.3779, 162.366, -4.46504, 0.29 ) }
    dend_15 { pt3dadd( -35.9936, 163.176, -4.25305, 0.29 ) }
    dend_15 { pt3dadd( -36.6444, 163.904, -3.99843, 0.59 ) }
    dend_15 { pt3dadd( -36.9926, 164.263, -3.84511, 0.88 ) }
    dend_15 { pt3dadd( -38.0667, 165.407, -3.26303, 0.44 ) }
    dend_15 { pt3dadd( -38.3991, 165.832, -3.05065, 0.29 ) }
    dend_15 { pt3dadd( -38.7094, 166.403, -2.83955, 0.44 ) }
    dend_15 { pt3dadd( -38.9106, 166.968, -2.65756, 0.29 ) }
    dend_15 { pt3dadd( -39.1238, 168.046, -2.27543, 0.29 ) }
    dend_15 { pt3dadd( -39.182, 168.786, -1.98391, 0.29 ) }
    dend_15 { pt3dadd( -39.1859, 169.581, -1.6904, 0.66 ) }
    dend_15 { pt3dadd( -39.1983, 170.059, -1.51023, 0.81 ) }
    dend_15 { pt3dadd( -39.237, 170.693, -1.27021, 0.81 ) }
    dend_15 { pt3dadd( -39.3489, 171.879, -0.841881, 0.29 ) }
    dend_15 { pt3dadd( -39.4793, 172.881, -0.509802, 0.37 ) }
    dend_15 { pt3dadd( -39.7687, 174.264, -0.0952722, 0.37 ) }
    dend_15 { pt3dadd( -39.9943, 175.115, 0.0684383, 0.37 ) }
    dend_15 { pt3dadd( -40.3095, 176.271, 0.177606, 1.33 ) }
    dend_15 { pt3dadd( -40.4598, 176.847, 0.184762, 1.55 ) }
    dend_15 { pt3dadd( -40.5446, 177.247, 0.149006, 1.55 ) }
    dend_15 { pt3dadd( -40.6407, 177.836, 0.0477416, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -40.8984, 179.722, -0.431506, 0.37 ) }
    dend_15 { pt3dadd( -41.0138, 180.425, -0.714579, 0.59 ) }
    dend_15 { pt3dadd( -41.1606, 181.122, -1.1175, 0.59 ) }
    dend_15 { pt3dadd( -41.3494, 181.833, -1.63743, 0.29 ) }
    dend_15 { pt3dadd( -41.5002, 182.423, -2.22851, 0.29 ) }
    dend_15 { pt3dadd( -41.6408, 183.009, -2.91195, 0.29 ) }
    dend_15 { pt3dadd( -41.8465, 183.86, -3.98574, 0.59 ) }
    dend_15 { pt3dadd( -41.9414, 184.265, -4.50445, 0.59 ) }
    dend_15 { pt3dadd( -42.1744, 185.502, -6.05805, 0.88 ) }
    dend_15 { pt3dadd( -42.333, 187.113, -7.9108, 0.44 ) }
    dend_15 { pt3dadd( -42.3122, 188.069, -8.8804, 0.29 ) }
    dend_15 { pt3dadd( -42.2799, 188.395, -9.18286, 0.81 ) }
    dend_15 { pt3dadd( -42.2383, 188.726, -9.46317, 1.11 ) }
    dend_15 { pt3dadd( -42.1417, 189.555, -10.1459, 0.81 ) }
    dend_15 { pt3dadd( -42.0988, 190.648, -11.0934, 0.15 ) }
    dend_15 { pt3dadd( -42.1611, 191.168, -11.6311, 0.15 ) }
    dend_15 { pt3dadd( -42.2275, 191.555, -12.1903, 0.15 ) }
    dend_15 { pt3dadd( -42.2582, 191.849, -12.7116, 0.66 ) }
    dend_15 { pt3dadd( -42.2601, 192.074, -13.1537, 0.81 ) }
    dend_15 { pt3dadd( -42.2353, 192.861, -14.6493, 0.15 ) }
    dend_15 { pt3dadd( -42.2051, 193.948, -16.6165, 0.66 ) }
    dend_15 { pt3dadd( -42.196, 194.249, -17.1224, 0.96 ) }
    dend_15 { pt3dadd( -42.1516, 194.902, -18.1125, 0.81 ) }
    dend_15 { pt3dadd( -42.071, 196.084, -19.7854, 0.29 ) }
    dend_15 { pt3dadd( -42.049, 196.69, -20.5691, 0.29 ) }
    dend_15 { pt3dadd( -42.0766, 197.466, -21.4696, 0.29 ) }
    dend_15 { pt3dadd( -42.2874, 198.365, -22.4978, 1.18 ) }
    dend_15 { pt3dadd( -42.491, 198.841, -23.0506, 1.18 ) }
    dend_15 { pt3dadd( -43.0714, 199.817, -24.147, 0.37 ) }
    dend_15 { pt3dadd( -43.4219, 200.316, -24.6843, 0.37 ) }
    dend_15 { pt3dadd( -43.8119, 200.871, -25.261, 0.88 ) }
    dend_15 { pt3dadd( -44.2891, 201.661, -25.9835, 0.96 ) }
    dend_15 { pt3dadd( -44.9479, 202.971, -27.0505, 0.44 ) }
    dend_15 { pt3dadd( -45.2453, 203.623, -27.5623, 0.66 ) }
    dend_15 { pt3dadd( -45.4933, 204.181, -27.9911, 0.37 ) }
    dend_15 { pt3dadd( -45.7788, 204.766, -28.4793, 0.37 ) }
    dend_15 { pt3dadd( -46.2145, 205.664, -29.249, 0.44 ) }
    dend_15 { pt3dadd( -46.6144, 206.534, -29.9748, 0.37 ) }
    dend_15 { pt3dadd( -47.2145, 207.804, -31.0357, 0.66 ) }
    dend_15 { pt3dadd( -47.5373, 208.365, -31.5526, 0.66 ) }
    dend_15 { pt3dadd( -48.0425, 209.051, -32.2955, 0.29 ) }
    dend_15 { pt3dadd( -48.563, 209.578, -32.9604, 0.52 ) }
    dend_15 { pt3dadd( -49.0373, 209.965, -33.4952, 0.59 ) }
    dend_15 { pt3dadd( -49.8097, 210.554, -34.3348, 0.29 ) }
    dend_15 { pt3dadd( -50.3716, 211.01, -34.9809, 0.29 ) }
    dend_15 { pt3dadd( -51.1164, 211.655, -35.8217, 0.29 ) }
    dend_15 { pt3dadd( -51.664, 212.153, -36.4732, 0.44 ) }
    dend_15 { pt3dadd( -52.0407, 212.462, -36.9181, 0.74 ) }
    dend_15 { pt3dadd( -52.6273, 212.938, -37.5838, 0.74 ) }
    dend_15 { pt3dadd( -53.4197, 213.565, -38.4277, 1.11 ) }
    dend_15 { pt3dadd( -53.9692, 214.03, -38.9962, 1.62 ) }
    dend_15 { pt3dadd( -55.0873, 215.001, -40.09, 0.88 ) }
    dend_15 { pt3dadd( -55.9675, 215.752, -40.9368, 0.37 ) }
    dend_15 { pt3dadd( -56.7331, 216.363, -41.6629, 0.29 ) }
    dend_15 { pt3dadd( -57.3065, 216.78, -42.1856, 0.29 ) }
    dend_15 { pt3dadd( -57.7537, 217.088, -42.5581, 0.81 ) }
    dend_15 { pt3dadd( -58.1116, 217.331, -42.8376, 1.18 ) }
    dend_15 { pt3dadd( -58.5604, 217.653, -43.1321, 0.88 ) }
    dend_15 { pt3dadd( -59.4416, 218.436, -43.6982, 0.29 ) }
    dend_15 { pt3dadd( -59.8563, 218.953, -44.042, 0.29 ) }
    dend_15 { pt3dadd( -60.2023, 219.555, -44.3901, 0.59 ) }
    dend_15 { pt3dadd( -60.3352, 219.875, -44.5947, 0.88 ) }
    dend_15 { pt3dadd( -60.4363, 220.267, -44.8739, 0.59 ) }
    dend_15 { pt3dadd( -60.4727, 220.741, -45.3377, 0.37 ) }
    dend_15 { pt3dadd( -60.4358, 221.534, -46.3109, 0.37 ) }
    dend_15 { pt3dadd( -60.3969, 221.964, -46.9154, 0.74 ) }
    dend_15 { pt3dadd( -60.3141, 222.766, -48.1854, 0.52 ) }
    dend_15 { pt3dadd( -60.2554, 223.38, -49.2308, 1.11 ) }
    dend_15 { pt3dadd( -60.1566, 224.865, -52.05, 1.25 ) }
    dend_15 { pt3dadd( -60.1149, 225.832, -54.1021, 0.66 ) }
    dend_15 { pt3dadd( -60.1198, 226.451, -55.5504, 0.44 ) }
    dend_15 { pt3dadd( -60.163, 227.098, -57.1904, 1.03 ) }
    dend_15 { pt3dadd( -60.2663, 227.607, -58.5743, 1.03 ) }
    dend_15 { pt3dadd( -60.6217, 228.416, -61.0801, 0.29 ) }
    dend_15 { pt3dadd( -60.9141, 228.767, -62.3536, 0.29 ) }
    dend_15 { pt3dadd( -61.1773, 228.994, -63.2634, 1.25 ) }
    dend_15 { pt3dadd( -61.2753, 229.073, -63.5585, 1.69 ) }
    dend_15 { pt3dadd( -61.5255, 229.275, -64.2351, 1.69 ) }
    dend_15 { pt3dadd( -62.2503, 229.88, -65.9718, 0.29 ) }
    dend_15 { pt3dadd( -62.8153, 230.443, -67.2118, 0.29 ) }
    dend_15 { pt3dadd( -63.1091, 230.811, -67.8696, 0.29 ) }
    dend_15 { pt3dadd( -63.4812, 231.383, -68.7851, 0.29 ) }
    dend_15 { pt3dadd( -63.8663, 231.998, -69.765, 0.81 ) }
    dend_15 { pt3dadd( -64.0952, 232.352, -70.3166, 0.88 ) }
    dend_15 { pt3dadd( -64.5897, 233.057, -71.3551, 0.29 ) }
    dend_15 { pt3dadd( -65.1047, 233.696, -72.3532, 0.81 ) }
    dend_15 { pt3dadd( -65.3773, 233.971, -72.8362, 0.81 ) }
    dend_15 { pt3dadd( -65.8094, 234.354, -73.5691, 0.22 ) }
    dend_15 { pt3dadd( -66.0885, 234.613, -74.0082, 0.52 ) }
    dend_15 { pt3dadd( -66.2084, 234.732, -74.2001, 0.59 ) }
    dend_15 { pt3dadd( -66.8756, 235.293, -75.0859, 0.22 ) }
    dend_15 { pt3dadd( -67.144, 235.457, -75.3959, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -62.8207, 152.905, -56.6596, 0.52 ) }
    dend_12 { pt3dadd( -62.4706, 155.02, -56.2837, 0.52 ) }
    dend_12 { pt3dadd( -62.2512, 156.523, -56.047, 0.81 ) }
    dend_12 { pt3dadd( -62.0784, 157.605, -55.9434, 0.59 ) }
    dend_12 { pt3dadd( -61.6123, 159.931, -55.7409, 0.96 ) }
    dend_12 { pt3dadd( -61.2644, 161.406, -55.6464, 0.96 ) }
    dend_12 { pt3dadd( -60.8514, 163.163, -55.5535, 0.52 ) }
    dend_12 { pt3dadd( -60.5831, 164.307, -55.5674, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -60.0827, 166.328, -55.6871, 0.52 ) }
    dend_12 { pt3dadd( -59.7809, 167.547, -55.7542, 0.52 ) }
    dend_12 { pt3dadd( -59.4413, 169.054, -55.7565, 0.66 ) }
    dend_12 { pt3dadd( -59.2701, 170.04, -55.7668, 0.96 ) }
    dend_12 { pt3dadd( -59.0994, 171.345, -55.7791, 0.96 ) }
    dend_12 { pt3dadd( -58.9772, 172.909, -55.8498, 0.37 ) }
    dend_12 { pt3dadd( -58.9721, 174.278, -55.92, 0.37 ) }
    dend_12 { pt3dadd( -59.0463, 175.602, -56.0109, 0.37 ) }
    dend_12 { pt3dadd( -59.2674, 178.121, -56.2534, 0.44 ) }
    dend_12 { pt3dadd( -59.3147, 178.66, -56.3279, 0.74 ) }
    dend_12 { pt3dadd( -59.427, 179.887, -56.5052, 0.74 ) }
    dend_12 { pt3dadd( -59.5542, 181.046, -56.6951, 0.37 ) }
    dend_12 { pt3dadd( -59.6334, 182.099, -56.8595, 0.37 ) }
    dend_12 { pt3dadd( -59.6563, 183.327, -56.9473, 0.37 ) }
    dend_12 { pt3dadd( -59.5985, 184.213, -56.8739, 0.37 ) }
    dend_12 { pt3dadd( -59.45, 185.607, -56.7124, 0.37 ) }
    dend_12 { pt3dadd( -59.3937, 185.992, -56.6444, 0.81 ) }
    dend_12 { pt3dadd( -59.1762, 187.089, -56.4043, 0.37 ) }
    dend_12 { pt3dadd( -58.9523, 187.941, -56.1758, 0.37 ) }
    dend_12 { pt3dadd( -58.6438, 189.001, -55.777, 0.66 ) }
    dend_12 { pt3dadd( -58.4291, 189.762, -55.4798, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -62.8207, 152.905, -56.6596, 0.44 ) }
    dend_5 { pt3dadd( -63.3051, 153.879, -56.221, 0.44 ) }
    dend_5 { pt3dadd( -63.808, 154.627, -55.9646, 0.37 ) }
    dend_5 { pt3dadd( -64.3606, 155.325, -55.7954, 0.88 ) }
    dend_5 { pt3dadd( -64.6781, 155.716, -55.7424, 0.88 ) }
    dend_5 { pt3dadd( -65.2028, 156.357, -55.6956, 0.52 ) }
    dend_5 { pt3dadd( -65.6854, 157.092, -55.7883, 0.29 ) }
    dend_5 { pt3dadd( -66.2262, 158.014, -56.0643, 0.22 ) }
    dend_5 { pt3dadd( -66.5314, 158.539, -56.2701, 0.22 ) }
    dend_5 { pt3dadd( -66.9902, 159.325, -56.6295, 0.88 ) }
    dend_5 { pt3dadd( -67.292, 159.873, -56.9052, 1.25 ) }
    dend_5 { pt3dadd( -68.4798, 162.314, -58.2339, 0.44 ) }
    dend_5 { pt3dadd( -68.8652, 163.271, -58.7708, 0.96 ) }
    dend_5 { pt3dadd( -68.993, 163.693, -59.0092, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -27.2924, 2.05246, -5.66947, 0.81 ) }
    dend_3 { pt3dadd( -28.1006, 1.52033, -7.15283, 0.81 ) }
    dend_3 { pt3dadd( -28.5049, 1.31038, -7.80468, 0.81 ) }
    dend_3 { pt3dadd( -31.0457, 0.389101, -11.3383, 1.62 ) }
    dend_3 { pt3dadd( -32.8578, -0.0112028, -13.5476, 0.66 ) }
    dend_3 { pt3dadd( -33.9636, -0.175481, -14.767, 0.66 ) }
    dend_3 { pt3dadd( -34.6977, -0.283152, -15.5139, 0.88 ) }
    dend_3 { pt3dadd( -35.5446, -0.361286, -16.2654, 0.96 ) }
    dend_3 { pt3dadd( -36.933, -0.486811, -17.3054, 0.81 ) }
    dend_3 { pt3dadd( -38.3093, -0.67832, -17.9787, 0.52 ) }
    dend_3 { pt3dadd( -39.5261, -1.03427, -18.451, 0.52 ) }
    dend_3 { pt3dadd( -40.8512, -1.7014, -18.8915, 0.74 ) }
    dend_3 { pt3dadd( -42.034, -2.54854, -19.2109, 1.11 ) }
    dend_3 { pt3dadd( -42.4178, -2.90437, -19.2756, 1.25 ) }
    dend_3 { pt3dadd( -43.2434, -3.82827, -19.3561, 0.96 ) }
    dend_3 { pt3dadd( -44.2298, -5.02658, -19.4027, 0.66 ) }
    dend_3 { pt3dadd( -45.1553, -6.13321, -19.4306, 0.88 ) }
    dend_3 { pt3dadd( -46.1179, -7.20609, -19.4808, 0.81 ) }
    dend_3 { pt3dadd( -47.1365, -8.2542, -19.6004, 0.96 ) }
    dend_3 { pt3dadd( -47.942, -9.05735, -19.7657, 1.18 ) }
    dend_3 { pt3dadd( -48.8321, -9.96489, -20.0234, 1.11 ) }
    dend_3 { pt3dadd( -49.5903, -10.7866, -20.3362, 1.18 ) }
    dend_3 { pt3dadd( -50.3545, -11.6712, -20.7761, 1.33 ) }
    dend_3 { pt3dadd( -51.5842, -13.0856, -21.6027, 0.66 ) }
    dend_3 { pt3dadd( -52.4925, -14.0632, -22.2314, 0.88 ) }
    dend_3 { pt3dadd( -53.2397, -14.8048, -22.7217, 0.88 ) }
    dend_3 { pt3dadd( -54.4528, -15.9084, -23.4694, 0.59 ) }
    dend_3 { pt3dadd( -55.18, -16.473, -23.8477, 0.59 ) }
    dend_3 { pt3dadd( -55.8187, -16.8296, -24.0879, 0.81 ) }
    dend_3 { pt3dadd( -56.8251, -17.1185, -24.2059, 1.33 ) }
    dend_3 { pt3dadd( -57.6877, -17.2426, -24.1327, 1.4 ) }
    dend_3 { pt3dadd( -58.2451, -17.3221, -24.0049, 1.25 ) }
    dend_3 { pt3dadd( -59.3318, -17.5748, -23.5946, 0.52 ) }
    dend_3 { pt3dadd( -59.9535, -17.8398, -23.317, 0.52 ) }
    dend_3 { pt3dadd( -60.7489, -18.4195, -22.989, 0.66 ) }
    dend_3 { pt3dadd( -61.46, -19.1123, -22.7271, 0.81 ) }
    dend_3 { pt3dadd( -62.2267, -19.9282, -22.4796, 0.81 ) }
    dend_3 { pt3dadd( -62.7311, -20.5101, -22.3733, 1.11 ) }
    dend_3 { pt3dadd( -63.1462, -21.0468, -22.3379, 1.33 ) }
    dend_3 { pt3dadd( -63.7476, -21.8889, -22.4028, 1.33 ) }
    dend_3 { pt3dadd( -64.0665, -22.3636, -22.5221, 1.33 ) }
    dend_3 { pt3dadd( -64.7066, -23.3501, -22.9497, 0.81 ) }
    dend_3 { pt3dadd( -65.4237, -24.4583, -23.5366, 0.52 ) }
    dend_3 { pt3dadd( -65.972, -25.2869, -24.0107, 0.74 ) }
    dend_3 { pt3dadd( -66.7647, -26.4623, -24.6914, 0.96 ) }
    dend_3 { pt3dadd( -67.3934, -27.3551, -25.183, 0.81 ) }
    dend_3 { pt3dadd( -68.2744, -28.5234, -25.8246, 0.66 ) }
    dend_3 { pt3dadd( -69.0218, -29.442, -26.2885, 0.59 ) }
    dend_3 { pt3dadd( -69.5489, -30.035, -26.5399, 1.03 ) }
    dend_3 { pt3dadd( -69.9834, -30.5243, -26.7056, 1.25 ) }
    dend_3 { pt3dadd( -70.6011, -31.2655, -26.8682, 1.25 ) }
    dend_3 { pt3dadd( -71.4847, -32.4907, -27.1254, 0.81 ) }
    dend_3 { pt3dadd( -71.9554, -33.2769, -27.3207, 0.52 ) }
    dend_3 { pt3dadd( -72.6285, -34.4342, -27.7803, 0.52 ) }
    dend_3 { pt3dadd( -73.1331, -35.2284, -28.1527, 0.44 ) }
    dend_3 { pt3dadd( -73.4342, -35.6695, -28.392, 0.44 ) }
    dend_3 { pt3dadd( -74.3397, -36.9668, -29.1421, 0.96 ) }
    dend_3 { pt3dadd( -74.7231, -37.5023, -29.4546, 1.4 ) }
    dend_3 { pt3dadd( -75.7086, -38.7483, -30.3265, 0.88 ) }
    dend_3 { pt3dadd( -76.5732, -39.7887, -31.0744, 0.66 ) }
    dend_3 { pt3dadd( -77.7926, -41.2792, -32.0949, 0.66 ) }
    dend_3 { pt3dadd( -78.6311, -42.4448, -32.8797, 0.59 ) }
    dend_3 { pt3dadd( -79.4678, -43.8129, -33.7582, 1.77 ) }
    dend_3 { pt3dadd( -80.63, -46.0742, -35.1291, 0.59 ) }
    dend_3 { pt3dadd( -80.9839, -46.8587, -35.5731, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_3 { pt3dadd( -81.3847, -47.7593, -36.0676, 0.74 ) }
    dend_3 { pt3dadd( -82.3435, -49.7185, -37.0552, 0.59 ) }
    dend_3 { pt3dadd( -82.8242, -50.5726, -37.4304, 0.59 ) }
    dend_3 { pt3dadd( -83.3453, -51.4112, -37.7095, 0.74 ) }
    dend_3 { pt3dadd( -84.117, -52.5601, -37.942, 0.74 ) }
    dend_3 { pt3dadd( -84.8662, -53.5182, -38.0967, 0.74 ) }
    dend_3 { pt3dadd( -85.7273, -54.5433, -38.3335, 0.52 ) }
    dend_3 { pt3dadd( -86.5137, -55.3727, -38.532, 0.37 ) }
    dend_3 { pt3dadd( -86.9655, -55.826, -38.6854, 1.11 ) }
    dend_3 { pt3dadd( -87.2705, -56.1054, -38.8218, 1.11 ) }
    dend_3 { pt3dadd( -87.8246, -56.5714, -39.1116, 0.96 ) }
    dend_3 { pt3dadd( -90.2048, -58.2834, -40.3913, 0.59 ) }
    dend_3 { pt3dadd( -90.7981, -58.6138, -40.6677, 0.52 ) }
    dend_3 { pt3dadd( -91.3997, -58.8705, -40.9742, 0.81 ) }
    dend_3 { pt3dadd( -92.3755, -59.2428, -41.479, 0.81 ) }
    dend_3 { pt3dadd( -93.2394, -59.5442, -41.9175, 1.11 ) }
    dend_3 { pt3dadd( -94.1678, -59.8643, -42.3526, 1.25 ) }
    dend_3 { pt3dadd( -95.0681, -60.1837, -42.6961, 0.96 ) }
    dend_3 { pt3dadd( -97.0744, -61.0867, -43.5722, 0.52 ) }
    dend_3 { pt3dadd( -97.9332, -61.562, -43.9718, 0.52 ) }
    dend_3 { pt3dadd( -98.619, -62.0534, -44.3008, 0.81 ) }
    dend_3 { pt3dadd( -99.3034, -62.7227, -44.6592, 0.88 ) }
    dend_3 { pt3dadd( -99.6538, -63.1898, -44.8664, 1.03 ) }
    dend_3 { pt3dadd( -100.125, -63.9844, -45.1567, 0.88 ) }
    dend_3 { pt3dadd( -100.556, -64.8415, -45.3937, 0.44 ) }
    dend_3 { pt3dadd( -100.997, -65.8193, -45.6402, 0.44 ) }
    dend_3 { pt3dadd( -101.744, -67.8302, -46.1174, 1.33 ) }
    dend_3 { pt3dadd( -102.45, -69.9245, -46.5999, 0.59 ) }
    dend_3 { pt3dadd( -102.699, -70.6841, -46.7964, 1.03 ) }
    dend_3 { pt3dadd( -102.878, -71.236, -46.9436, 1.18 ) }
    dend_3 { pt3dadd( -103.153, -72.0541, -47.1777, 0.81 ) }
    dend_3 { pt3dadd( -103.735, -73.5634, -47.6124, 0.59 ) }
    dend_3 { pt3dadd( -104.187, -74.5341, -47.8986, 0.37 ) }
    dend_3 { pt3dadd( -105.016, -75.9902, -48.4379, 0.37 ) }
    dend_3 { pt3dadd( -105.268, -76.341, -48.6018, 0.96 ) }
    dend_3 { pt3dadd( -105.484, -76.5952, -48.7383, 1.25 ) }
    dend_3 { pt3dadd( -105.794, -76.8927, -48.9162, 1.25 ) }
    dend_3 { pt3dadd( -107.002, -77.8445, -49.4913, 0.52 ) }
    dend_3 { pt3dadd( -107.84, -78.4506, -49.8161, 0.52 ) }
    dend_3 { pt3dadd( -108.764, -79.0819, -50.0633, 0.52 ) }
    dend_3 { pt3dadd( -109.025, -79.2526, -50.1268, 1.18 ) }
    dend_3 { pt3dadd( -109.472, -79.5518, -50.2746, 1.18 ) }
    dend_3 { pt3dadd( -109.874, -79.8308, -50.4161, 1.18 ) }
    dend_3 { pt3dadd( -110.535, -80.299, -50.5723, 0.88 ) }
    dend_3 { pt3dadd( -111.843, -81.2243, -51.0434, 0.44 ) }
    dend_3 { pt3dadd( -112.032, -81.3624, -51.1433, 0.81 ) }
    dend_3 { pt3dadd( -113.962, -82.8014, -52.3315, 0.52 ) }
    dend_3 { pt3dadd( -114.634, -83.3281, -52.7945, 0.81 ) }
    dend_3 { pt3dadd( -115.797, -84.2789, -53.6327, 0.44 ) }
    dend_3 { pt3dadd( -117.734, -85.9609, -55.1235, 0.74 ) }
    dend_3 { pt3dadd( -118.579, -86.7319, -55.7719, 0.44 ) }
    dend_3 { pt3dadd( -118.976, -87.1217, -56.0518, 1.33 ) }
    dend_3 { pt3dadd( -119.245, -87.4212, -56.2356, 1.33 ) }
    dend_3 { pt3dadd( -119.81, -88.0899, -56.6628, 0.74 ) }
    dend_3 { pt3dadd( -120.845, -89.2878, -57.4616, 0.44 ) }
    dend_3 { pt3dadd( -121.143, -89.6115, -57.6315, 0.74 ) }
    dend_3 { pt3dadd( -121.644, -90.0862, -57.9358, 0.74 ) }
    dend_3 { pt3dadd( -122.83, -90.9257, -58.8493, 0.37 ) }
    dend_3 { pt3dadd( -123.343, -91.1255, -59.3226, 0.37 ) }
    dend_3 { pt3dadd( -123.907, -91.177, -59.9347, 0.66 ) }
    dend_3 { pt3dadd( -124.32, -91.1457, -60.3876, 0.88 ) }
    dend_3 { pt3dadd( -124.687, -91.1017, -60.7836, 0.88 ) }
    dend_3 { pt3dadd( -125.792, -90.9886, -61.9249, 0.59 ) }
    dend_3 { pt3dadd( -126.415, -90.9437, -62.49, 0.29 ) }
    dend_3 { pt3dadd( -126.99, -90.9683, -62.9561, 0.29 ) }
    dend_3 { pt3dadd( -128.082, -91.1713, -63.6996, 0.96 ) }
    dend_3 { pt3dadd( -128.355, -91.258, -63.8438, 1.18 ) }
    dend_3 { pt3dadd( -129.745, -91.9464, -64.4499, 0.59 ) }
    dend_3 { pt3dadd( -130.345, -92.37, -64.7642, 0.81 ) }
    dend_3 { pt3dadd( -130.824, -92.753, -65.0525, 0.81 ) }
    dend_3 { pt3dadd( -131.465, -93.2715, -65.4635, 0.37 ) }
    dend_3 { pt3dadd( -132.205, -93.877, -65.9599, 0.37 ) }
    dend_3 { pt3dadd( -133.315, -94.8028, -66.7513, 1.11 ) }
    dend_3 { pt3dadd( -135.476, -96.636, -68.2979, 0.52 ) }
    dend_3 { pt3dadd( -135.861, -96.967, -68.5824, 0.52 ) }
    dend_3 { pt3dadd( -136.685, -97.655, -69.1981, 0.44 ) }
    dend_3 { pt3dadd( -137.116, -97.9967, -69.5484, 1.47 ) }
    dend_3 { pt3dadd( -139.007, -99.3695, -71.1603, 0.59 ) }
    dend_3 { pt3dadd( -139.539, -99.7152, -71.6092, 0.88 ) }
    dend_3 { pt3dadd( -140.173, -100.126, -72.1851, 0.88 ) }
    dend_3 { pt3dadd( -141.34, -100.902, -73.4428, 0.52 ) }
    dend_3 { pt3dadd( -142.37, -101.574, -74.672, 0.74 ) }
    dend_3 { pt3dadd( -142.798, -101.825, -75.2068, 0.96 ) }
    dend_3 { pt3dadd( -143.074, -101.974, -75.5459, 0.96 ) }
    dend_3 { pt3dadd( -144.433, -102.752, -77.1816, 0.29 ) }
    dend_3 { pt3dadd( -145.617, -103.479, -78.6923, 0.96 ) }
    dend_3 { pt3dadd( -146.011, -103.726, -79.1849, 1.18 ) }
    dend_3 { pt3dadd( -147.293, -104.57, -80.7774, 0.37 ) }
    dend_3 { pt3dadd( -147.856, -104.98, -81.4947, 0.37 ) }
    dend_3 { pt3dadd( -148.275, -105.295, -82.0307, 0.74 ) }
    dend_3 { pt3dadd( -150.4, -106.839, -84.8017, 0.88 ) }
    dend_3 { pt3dadd( -150.781, -107.086, -85.3129, 0.88 ) }
    dend_3 { pt3dadd( -151.886, -107.742, -86.8254, 0.37 ) }
    dend_3 { pt3dadd( -152.299, -107.968, -87.3719, 0.37 ) }
    dend_3 { pt3dadd( -152.829, -108.233, -88.0332, 0.37 ) }
    dend_3 { pt3dadd( -153.549, -108.57, -88.8115, 0.37 ) }
    dend_3 { pt3dadd( -154.662, -109.127, -89.7264, 0.74 ) }
    dend_3 { pt3dadd( -156.396, -110.073, -91.0851, 0.44 ) }
    dend_3 { pt3dadd( -156.842, -110.31, -91.391, 1.03 ) }
    dend_3 { pt3dadd( -157.272, -110.565, -91.6789, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( -157.601, -110.814, -91.892, 1.03 ) }
    dend_3 { pt3dadd( -158.5, -111.674, -92.3869, 0.44 ) }
    dend_3 { pt3dadd( -159.113, -112.351, -92.6697, 0.59 ) }
    dend_3 { pt3dadd( -159.794, -113.075, -92.9254, 0.37 ) }
    dend_3 { pt3dadd( -160.544, -113.832, -93.242, 0.29 ) }
    dend_3 { pt3dadd( -160.951, -114.234, -93.465, 0.44 ) }
    dend_3 { pt3dadd( -161.258, -114.558, -93.6595, 0.44 ) }
    dend_3 { pt3dadd( -162.207, -115.608, -94.3056, 0.29 ) }
    dend_3 { pt3dadd( -162.599, -116.049, -94.5861, 0.52 ) }
    dend_3 { pt3dadd( -162.819, -116.279, -94.766, 0.74 ) }
    dend_3 { pt3dadd( -163.862, -117.099, -95.6602, 0.29 ) }
    dend_3 { pt3dadd( -164.299, -117.393, -96.047, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -27.2924, 2.05246, -5.66947, 0.88 ) }
    dend_2 { pt3dadd( -28.4206, 5.91635, -6.16254, 0.88 ) }
    dend_2 { pt3dadd( -28.9808, 7.70576, -6.24362, 0.52 ) }
    dend_2 { pt3dadd( -29.35, 8.74947, -6.24668, 0.88 ) }
    dend_2 { pt3dadd( -30.1122, 10.6621, -6.20804, 0.88 ) }
    dend_2 { pt3dadd( -31.4933, 13.7414, -6.10501, 0.52 ) }
    dend_2 { pt3dadd( -32.3904, 15.3996, -6.03363, 0.52 ) }
    dend_2 { pt3dadd( -33.5819, 17.3278, -5.77122, 0.44 ) }
    dend_2 { pt3dadd( -34.5976, 18.6176, -5.56945, 0.59 ) }
    dend_2 { pt3dadd( -35.6847, 19.796, -5.32044, 0.74 ) }
    dend_2 { pt3dadd( -36.611, 20.6573, -5.08685, 0.74 ) }
    dend_2 { pt3dadd( -38.7806, 22.374, -4.62371, 1.25 ) }
    dend_2 { pt3dadd( -39.5079, 22.8751, -4.50385, 1.25 ) }
    dend_2 { pt3dadd( -41.0264, 23.7406, -4.36437, 0.66 ) }
    dend_2 { pt3dadd( -42.9434, 24.6989, -4.3061, 0.81 ) }
    dend_2 { pt3dadd( -43.7375, 25.055, -4.29939, 0.66 ) }
    dend_2 { pt3dadd( -45.543, 25.8102, -4.33005, 0.88 ) }
    dend_2 { pt3dadd( -48.6221, 26.9998, -4.4603, 0.88 ) }
    dend_2 { pt3dadd( -49.9076, 27.4424, -4.54598, 0.66 ) }
    dend_2 { pt3dadd( -50.7331, 27.6854, -4.63224, 0.52 ) }
    dend_2 { pt3dadd( -52.4818, 28.1084, -4.81986, 1.03 ) }
    dend_2 { pt3dadd( -53.1713, 28.3094, -4.77973, 1.33 ) }
    dend_2 { pt3dadd( -53.6496, 28.496, -4.67224, 1.55 ) }
    dend_2 { pt3dadd( -54.1226, 28.7148, -4.53201, 1.55 ) }
    dend_2 { pt3dadd( -54.8746, 29.1002, -4.32193, 1.33 ) }
    dend_2 { pt3dadd( -56.1275, 29.8029, -4.02887, 0.74 ) }
    dend_2 { pt3dadd( -57.6154, 30.7189, -3.73427, 0.59 ) }
    dend_2 { pt3dadd( -59.1051, 31.8268, -3.45677, 0.59 ) }
    dend_2 { pt3dadd( -60.0542, 32.6936, -3.30139, 0.59 ) }
    dend_2 { pt3dadd( -60.554, 33.2652, -3.2278, 1.11 ) }
    dend_2 { pt3dadd( -61.3932, 34.5224, -3.17379, 1.55 ) }
    dend_2 { pt3dadd( -61.6874, 35.147, -3.19749, 1.77 ) }
    dend_2 { pt3dadd( -62.2617, 37.1261, -3.24243, 0.74 ) }
    dend_2 { pt3dadd( -62.4806, 38.3857, -3.23295, 0.96 ) }
    dend_2 { pt3dadd( -62.5872, 39.3552, -3.20278, 0.74 ) }
    dend_2 { pt3dadd( -62.7059, 40.7318, -3.1087, 0.52 ) }
    dend_2 { pt3dadd( -62.7992, 41.78, -2.99394, 0.44 ) }
    dend_2 { pt3dadd( -63.2423, 44.7271, -2.5008, 0.88 ) }
    dend_2 { pt3dadd( -63.4163, 45.5669, -2.35343, 1.11 ) }
    dend_2 { pt3dadd( -63.6086, 46.3354, -2.23697, 1.11 ) }
    dend_2 { pt3dadd( -63.9828, 47.6982, -2.08525, 0.74 ) }
    dend_2 { pt3dadd( -64.3638, 48.9188, -2.0015, 0.44 ) }
    dend_2 { pt3dadd( -64.8383, 50.2482, -2.06038, 0.29 ) }
    dend_2 { pt3dadd( -65.4387, 51.8187, -2.33557, 0.59 ) }
    dend_2 { pt3dadd( -65.8092, 52.8428, -2.52318, 0.44 ) }
    dend_2 { pt3dadd( -66.174, 53.9075, -2.72899, 1.25 ) }
    dend_2 { pt3dadd( -66.3365, 54.426, -2.83178, 1.25 ) }
    dend_2 { pt3dadd( -66.5275, 55.1128, -2.93634, 0.81 ) }
    dend_2 { pt3dadd( -66.8039, 56.1088, -3.02257, 0.29 ) }
    dend_2 { pt3dadd( -67.1773, 57.231, -3.03925, 0.59 ) }
    dend_2 { pt3dadd( -67.4224, 57.8807, -3.05421, 0.74 ) }
    dend_2 { pt3dadd( -67.667, 58.4396, -3.07627, 0.88 ) }
    dend_2 { pt3dadd( -68.0097, 59.1236, -3.11481, 0.88 ) }
    dend_2 { pt3dadd( -68.495, 59.9785, -3.18383, 0.44 ) }
    dend_2 { pt3dadd( -68.9867, 60.7814, -3.27182, 0.81 ) }
    dend_2 { pt3dadd( -69.4583, 61.5206, -3.352, 0.81 ) }
    dend_2 { pt3dadd( -70.1921, 62.6413, -3.47277, 0.37 ) }
    dend_2 { pt3dadd( -70.6333, 63.3099, -3.53077, 0.37 ) }
    dend_2 { pt3dadd( -71.5219, 64.6647, -3.59442, 0.29 ) }
    dend_2 { pt3dadd( -72.4546, 66.09, -3.58926, 0.29 ) }
    dend_2 { pt3dadd( -72.8241, 66.6637, -3.56435, 0.29 ) }
    dend_2 { pt3dadd( -73.3979, 67.5802, -3.49815, 0.88 ) }
    dend_2 { pt3dadd( -73.769, 68.2141, -3.43823, 1.18 ) }
    dend_2 { pt3dadd( -74.3134, 69.1817, -3.32025, 1.18 ) }
    dend_2 { pt3dadd( -74.8325, 70.0753, -3.15953, 0.59 ) }
    dend_2 { pt3dadd( -75.3624, 70.9597, -2.94657, 0.59 ) }
    dend_2 { pt3dadd( -75.8836, 71.8328, -2.71599, 0.52 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 79/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 27.1629, -115.46, 23.8455, 0.29 ) }
    dend_65 { pt3dadd( 26.4731, -116.18, 24.2968, 0.29 ) }
    dend_65 { pt3dadd( 25.7448, -116.941, 24.7732, 0.15 ) }
    dend_65 { pt3dadd( 25.4026, -117.298, 24.9971, 0.15 ) }
    dend_65 { pt3dadd( 24.6655, -118.068, 25.4792, 0.44 ) }
    dend_65 { pt3dadd( 24.2277, -118.526, 25.7657, 0.44 ) }
    dend_65 { pt3dadd( 23.653, -119.126, 26.1417, 0.74 ) }
    dend_65 { pt3dadd( 17.1355, -127.5, 29.3055, 0.74 ) }
    dend_65 { pt3dadd( 11.9808, -136.099, 34.0394, 0.74 ) }
    dend_65 { pt3dadd( 8.20516, -145.922, 37.6488, 0.74 ) }
    dend_65 { pt3dadd( 4.8146, -156.23, 40.1526, 0.74 ) }
    dend_65 { pt3dadd( 1.82559, -166.957, 40.2493, 0.74 ) }
    dend_65 { pt3dadd( 0.156393, -177.737, 38.1139, 0.74 ) }
    dend_65 { pt3dadd( -1.01663, -188.197, 34.6254, 0.74 ) }
    dend_65 { pt3dadd( -2.43504, -198.955, 32.2379, 0.74 ) }
    dend_65 { pt3dadd( -5.39641, -209.612, 31.0643, 0.74 ) }
    dend_65 { pt3dadd( -8.2322, -219.978, 28.2932, 0.74 ) }
    dend_65 { pt3dadd( -10.705, -230.374, 25.3059, 0.74 ) }
    dend_65 { pt3dadd( -12.9152, -241.238, 24.3234, 0.74 ) }
    dend_65 { pt3dadd( -16.418, -251.795, 23.9976, 0.74 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 27.1629, -115.46, 23.8455, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_64 { pt3dadd( 27.7526, -115.212, 23.1659, 0.22 ) }
    dend_64 { pt3dadd( 28.4135, -114.934, 22.4041, 0.59 ) }
    dend_64 { pt3dadd( 28.6866, -114.819, 22.0893, 0.59 ) }
    dend_64 { pt3dadd( 29.2647, -114.576, 21.423, 0.37 ) }
    dend_64 { pt3dadd( 29.6499, -114.415, 20.979, 0.37 ) }
    dend_64 { pt3dadd( 36.9592, -112.806, 14.6935, 0.37 ) }
    dend_64 { pt3dadd( 42.9249, -109.272, 7.74098, 0.37 ) }
    dend_64 { pt3dadd( 50.0033, -106.461, 1.57703, 0.37 ) }
    dend_64 { pt3dadd( 57.9807, -103.592, -3.32559, 0.37 ) }
    dend_64 { pt3dadd( 65.8384, -99.4944, -7.55478, 0.37 ) }
    dend_64 { pt3dadd( 74.189, -94.992, -10.0856, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 11/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 3.76247, -48.5415, 27.8626, 0.52 ) }
    dend_60 { pt3dadd( 3.22079, -49.4104, 27.4511, 0.52 ) }
    dend_60 { pt3dadd( 2.72791, -50.201, 27.0766, 0.52 ) }
    dend_60 { pt3dadd( 2.23176, -50.9967, 26.6996, 0.44 ) }
    dend_60 { pt3dadd( 1.88325, -51.5558, 26.4348, 0.29 ) }
    dend_60 { pt3dadd( 1.57333, -52.0529, 26.1994, 0.74 ) }
    dend_60 { pt3dadd( -3.33827, -59.6122, 23.1178, 0.74 ) }
    dend_60 { pt3dadd( -8.10552, -67.2227, 19.9294, 0.74 ) }
    dend_60 { pt3dadd( -12.8375, -74.2482, 15.6027, 0.74 ) }
    dend_60 { pt3dadd( -18.2616, -80.6746, 11.205, 0.74 ) }
    dend_60 { pt3dadd( -24.1521, -85.9533, 6.02111, 0.74 ) }
    dend_60 { pt3dadd( -30.892, -90.2261, 0.99489, 0.74 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 23/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 3.76247, -48.5415, 27.8626, 0.29 ) }
    dend_59 { pt3dadd( 4.48205, -48.496, 27.5878, 0.29 ) }
    dend_59 { pt3dadd( 5.62392, -48.3638, 27.2086, 0.29 ) }
    dend_59 { pt3dadd( 6.11823, -48.2796, 27.0634, 0.44 ) }
    dend_59 { pt3dadd( 6.86248, -48.0956, 26.8542, 0.44 ) }
    dend_59 { pt3dadd( 7.47244, -47.8829, 26.6862, 0.37 ) }
    dend_59 { pt3dadd( 7.85804, -47.7089, 26.5749, 0.22 ) }
    dend_59 { pt3dadd( 8.10682, -47.4449, 26.5055, 0.59 ) }
    dend_59 { pt3dadd( 8.14814, -47.1161, 26.4887, 0.74 ) }
    dend_59 { pt3dadd( 7.99844, -46.4104, 26.4778, 0.22 ) }
    dend_59 { pt3dadd( 7.72435, -45.7757, 26.4793, 0.22 ) }
    dend_59 { pt3dadd( 7.28142, -45.0189, 26.4754, 0.22 ) }
    dend_59 { pt3dadd( 6.77044, -44.3139, 26.4457, 0.81 ) }
    dend_59 { pt3dadd( 11.6453, -38.7894, 24.9771, 0.81 ) }
    dend_59 { pt3dadd( 15.9926, -32.7066, 24.0494, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 38/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 31.079, -158.795, 7.00327, 0.37 ) }
    dend_47 { pt3dadd( 41.1143, -164.65, 4.64345, 0.37 ) }
    dend_47 { pt3dadd( 50.3088, -171.739, 2.08523, 0.37 ) }
    dend_47 { pt3dadd( 59.9409, -177.881, -1.11402, 0.37 ) }
    dend_47 { pt3dadd( 69.3809, -184.442, -4.08729, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 31.079, -158.795, 7.00327, 0.22 ) }
    dend_42 { pt3dadd( 35.4285, -161.547, 7.12474, 0.37 ) }
    dend_42 { pt3dadd( 39.5308, -164.54, 8.00459, 0.37 ) }
    dend_42 { pt3dadd( 43.3652, -168.005, 7.93363, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -46.2938, -148.804, -7.16713, 0.37 ) }
    dend_39 { pt3dadd( -46.5053, -157.106, -12.3855, 0.37 ) }
    dend_39 { pt3dadd( -46.2327, -164.748, -18.4926, 0.37 ) }
    dend_39 { pt3dadd( -46.1891, -173.464, -23.012, 0.37 ) }
    dend_39 { pt3dadd( -45.8937, -181.494, -28.6181, 0.37 ) }
    dend_39 { pt3dadd( -44.9578, -190.239, -32.9708, 0.37 ) }
    dend_39 { pt3dadd( -43.3236, -198.431, -38.0841, 0.37 ) }
    dend_39 { pt3dadd( -41.2471, -206.729, -42.8525, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -46.2938, -148.804, -7.16713, 0.22 ) }
    dend_36 { pt3dadd( -44.8936, -159.516, -12.3248, 0.37 ) }
    dend_36 { pt3dadd( -41.2745, -169.626, -17.5369, 0.37 ) }
    dend_36 { pt3dadd( -40.0243, -179.682, -23.8797, 0.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 157.291, 316.49, 36.6596, 0.37 ) }
    dend_24 { pt3dadd( 158.693, 317.727, 37.7546, 0.37 ) }
    dend_24 { pt3dadd( 159.244, 318.105, 38.1001, 0.37 ) }
    dend_24 { pt3dadd( 160.197, 318.586, 38.5821, 0.29 ) }
    dend_24 { pt3dadd( 160.883, 318.849, 38.8994, 0.29 ) }
    dend_24 { pt3dadd( 161.766, 319.144, 39.3205, 0.74 ) }
    dend_24 { pt3dadd( 162.585, 319.442, 39.7356, 0.96 ) }
    dend_24 { pt3dadd( 163.235, 319.673, 40.0265, 0.52 ) }
    dend_24 { pt3dadd( 164.292, 320.089, 40.5116, 0.44 ) }
    dend_24 { pt3dadd( 165.306, 320.547, 41.0312, 0.37 ) }
    dend_24 { pt3dadd( 165.873, 320.927, 41.3848, 0.29 ) }
    dend_24 { pt3dadd( 166.502, 321.545, 41.8631, 0.29 ) }
    dend_24 { pt3dadd( 166.889, 322.03, 42.1812, 0.29 ) }
    dend_24 { pt3dadd( 167.527, 322.812, 42.6741, 0.74 ) }
    dend_24 { pt3dadd( 168.241, 323.608, 43.1674, 1.11 ) }
    dend_24 { pt3dadd( 168.935, 324.292, 43.5798, 1.11 ) }
    dend_24 { pt3dadd( 169.603, 324.851, 43.9245, 0.81 ) }
    dend_24 { pt3dadd( 170.973, 325.841, 44.5698, 0.37 ) }
    dend_24 { pt3dadd( 172.137, 326.619, 45.0927, 0.37 ) }
    dend_24 { pt3dadd( 172.896, 327.119, 45.4575, 0.37 ) }
    dend_24 { pt3dadd( 173.555, 327.576, 45.7704, 0.37 ) }
    dend_24 { pt3dadd( 173.965, 327.885, 45.9759, 1.03 ) }
    dend_24 { pt3dadd( 174.624, 328.446, 46.3542, 1.33 ) }
    dend_24 { pt3dadd( 174.926, 328.746, 46.5726, 1.33 ) }
    dend_24 { pt3dadd( 176.037, 330.087, 47.6868, 0.29 ) }
    dend_24 { pt3dadd( 176.689, 330.996, 48.5081, 0.29 ) }
    dend_24 { pt3dadd( 177.332, 331.979, 49.4387, 0.88 ) }
    dend_24 { pt3dadd( 177.697, 332.595, 50.0212, 0.88 ) }
    dend_24 { pt3dadd( 178.222, 333.532, 50.8924, 0.74 ) }
    dend_24 { pt3dadd( 179.059, 334.965, 52.1647, 0.66 ) }
    dend_24 { pt3dadd( 179.485, 335.694, 52.7082, 0.74 ) }
    dend_24 { pt3dadd( 180.082, 336.771, 53.3488, 0.44 ) }
    dend_24 { pt3dadd( 180.512, 337.628, 53.6774, 0.44 ) }
    dend_24 { pt3dadd( 181.036, 338.746, 53.8855, 0.37 ) }
    dend_24 { pt3dadd( 181.879, 340.66, 53.9539, 0.37 ) }
    dend_24 { pt3dadd( 182.616, 342.29, 53.8581, 0.37 ) }
    dend_24 { pt3dadd( 183.229, 343.661, 53.7063, 0.37 ) }
    dend_24 { pt3dadd( 183.901, 345.32, 53.4227, 1.77 ) }
    dend_24 { pt3dadd( 184.226, 346.279, 53.2062, 1.77 ) }
    dend_24 { pt3dadd( 184.405, 347.106, 52.9701, 1.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 157.291, 316.49, 36.6596, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_17 { pt3dadd( 158.356, 317.351, 35.5243, 1.11 ) }
    dend_17 { pt3dadd( 159.482, 318.115, 34.3804, 0.74 ) }
    dend_17 { pt3dadd( 160.038, 318.388, 33.8169, 0.29 ) }
    dend_17 { pt3dadd( 160.638, 318.666, 33.1652, 0.44 ) }
    dend_17 { pt3dadd( 161.258, 319.0, 32.4459, 0.37 ) }
    dend_17 { pt3dadd( 162.031, 319.477, 31.5427, 0.74 ) }
    dend_17 { pt3dadd( 162.343, 319.721, 31.1912, 0.88 ) }
    dend_17 { pt3dadd( 163.13, 320.304, 30.3604, 0.29 ) }
    dend_17 { pt3dadd( 163.798, 320.752, 29.6992, 0.44 ) }
    dend_17 { pt3dadd( 164.522, 321.197, 29.0854, 0.29 ) }
    dend_17 { pt3dadd( 164.971, 321.48, 28.7273, 0.96 ) }
    dend_17 { pt3dadd( 165.348, 321.754, 28.4708, 1.25 ) }
    dend_17 { pt3dadd( 165.602, 321.938, 28.3228, 1.25 ) }
    dend_17 { pt3dadd( 166.652, 322.672, 27.8456, 0.37 ) }
    dend_17 { pt3dadd( 167.232, 323.019, 27.6367, 0.74 ) }
    dend_17 { pt3dadd( 168.462, 323.656, 27.2507, 0.88 ) }
    dend_17 { pt3dadd( 168.886, 323.862, 27.126, 1.11 ) }
    dend_17 { pt3dadd( 169.497, 324.161, 26.9702, 0.52 ) }
    dend_17 { pt3dadd( 169.916, 324.375, 26.8897, 0.52 ) }
    dend_17 { pt3dadd( 170.38, 324.62, 26.8419, 0.29 ) }
    dend_17 { pt3dadd( 170.777, 324.82, 26.8131, 0.29 ) }
    dend_17 { pt3dadd( 171.42, 325.093, 26.8086, 1.25 ) }
    dend_17 { pt3dadd( 171.577, 325.155, 26.8022, 1.55 ) }
    dend_17 { pt3dadd( 171.86, 325.261, 26.786, 1.55 ) }
    dend_17 { pt3dadd( 172.581, 325.513, 26.734, 0.37 ) }
    dend_17 { pt3dadd( 173.404, 325.763, 26.6827, 0.44 ) }
    dend_17 { pt3dadd( 174.074, 325.933, 26.6595, 0.81 ) }
    dend_17 { pt3dadd( 174.223, 325.959, 26.6607, 1.11 ) }
    dend_17 { pt3dadd( 174.704, 326.027, 26.6701, 1.11 ) }
    dend_17 { pt3dadd( 175.542, 326.109, 26.7115, 0.29 ) }
    dend_17 { pt3dadd( 176.269, 326.128, 26.7965, 0.37 ) }
    dend_17 { pt3dadd( 176.741, 326.089, 26.8661, 0.37 ) }
    dend_17 { pt3dadd( 177.246, 326.002, 26.9309, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -68.993, 163.693, -59.0092, 0.44 ) }
    dend_7 { pt3dadd( -67.8981, 164.915, -58.7448, 0.44 ) }
    dend_7 { pt3dadd( -66.9405, 166.133, -58.6671, 0.29 ) }
    dend_7 { pt3dadd( -66.4139, 166.911, -58.6829, 0.44 ) }
    dend_7 { pt3dadd( -65.8414, 167.899, -58.7255, 0.44 ) }
    dend_7 { pt3dadd( -65.4791, 168.624, -58.7527, 0.81 ) }
    dend_7 { pt3dadd( -65.0225, 169.659, -58.7996, 0.81 ) }
    dend_7 { pt3dadd( -64.5823, 170.938, -58.9748, 0.52 ) }
    dend_7 { pt3dadd( -64.4285, 171.765, -59.1515, 0.37 ) }
    dend_7 { pt3dadd( -64.355, 172.642, -59.3622, 0.37 ) }
    dend_7 { pt3dadd( -64.3304, 173.52, -59.5952, 0.81 ) }
    dend_7 { pt3dadd( -64.3064, 174.326, -59.8056, 0.88 ) }
    dend_7 { pt3dadd( -64.2013, 175.584, -60.1018, 0.88 ) }
    dend_7 { pt3dadd( -63.8867, 176.931, -60.4744, 0.52 ) }
    dend_7 { pt3dadd( -63.6381, 177.512, -60.6938, 0.81 ) }
    dend_7 { pt3dadd( -62.8204, 178.75, -61.2781, 0.52 ) }
    dend_7 { pt3dadd( -62.2425, 179.404, -61.6105, 0.52 ) }
    dend_7 { pt3dadd( -61.4194, 180.146, -61.9668, 0.52 ) }
    dend_7 { pt3dadd( -59.6735, 181.483, -62.5648, 0.52 ) }
    dend_7 { pt3dadd( -58.794, 182.133, -62.896, 0.52 ) }
    dend_7 { pt3dadd( -57.9737, 182.731, -63.2487, 0.81 ) }
    dend_7 { pt3dadd( -57.3572, 183.186, -63.5198, 1.03 ) }
    dend_7 { pt3dadd( -56.7459, 183.657, -63.8012, 0.59 ) }
    dend_7 { pt3dadd( -55.5147, 184.683, -64.358, 0.66 ) }
    dend_7 { pt3dadd( -53.5029, 186.552, -65.1403, 0.52 ) }
    dend_7 { pt3dadd( -52.7552, 187.318, -65.4068, 0.52 ) }
    dend_7 { pt3dadd( -51.9068, 188.307, -65.7287, 1.11 ) }
    dend_7 { pt3dadd( -51.5186, 188.853, -65.8702, 1.11 ) }
    dend_7 { pt3dadd( -51.2069, 189.331, -65.9746, 1.25 ) }
    dend_7 { pt3dadd( -50.6563, 190.367, -66.0415, 0.66 ) }
    dend_7 { pt3dadd( -50.3055, 191.455, -65.8621, 0.44 ) }
    dend_7 { pt3dadd( -50.1831, 192.347, -65.6846, 0.44 ) }
    dend_7 { pt3dadd( -50.2322, 193.819, -65.4118, 0.81 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -68.993, 163.693, -59.0092, 0.44 ) }
    dend_6 { pt3dadd( -69.6532, 165.052, -60.0114, 0.44 ) }
    dend_6 { pt3dadd( -69.9542, 165.648, -60.4866, 0.37 ) }
    dend_6 { pt3dadd( -70.2878, 166.296, -61.0129, 0.37 ) }
    dend_6 { pt3dadd( -70.5854, 166.804, -61.4098, 0.88 ) }
    dend_6 { pt3dadd( -70.9429, 167.352, -61.818, 0.88 ) }
    dend_6 { pt3dadd( -71.5982, 168.232, -62.4679, 0.59 ) }
    dend_6 { pt3dadd( -72.2474, 169.037, -63.0232, 0.22 ) }
    dend_6 { pt3dadd( -72.6233, 169.497, -63.3892, 0.66 ) }
    dend_6 { pt3dadd( -73.1573, 170.13, -63.9443, 0.37 ) }
    dend_6 { pt3dadd( -73.459, 170.481, -64.2585, 0.29 ) }
    dend_6 { pt3dadd( -73.9868, 171.193, -64.8896, 0.29 ) }
    dend_6 { pt3dadd( -74.4733, 172.057, -65.6271, 0.66 ) }
    dend_6 { pt3dadd( -74.9138, 173.198, -66.6054, 1.03 ) }
    dend_6 { pt3dadd( -75.0169, 173.54, -66.8939, 1.33 ) }
    dend_6 { pt3dadd( -75.0781, 173.788, -67.1015, 1.33 ) }
    dend_6 { pt3dadd( -75.3296, 174.93, -68.0298, 0.44 ) }
    dend_6 { pt3dadd( -75.5703, 176.115, -68.9926, 0.29 ) }
    dend_6 { pt3dadd( -75.7147, 176.841, -69.5659, 0.59 ) }
    dend_6 { pt3dadd( -75.8278, 177.452, -70.0493, 0.59 ) }
    dend_6 { pt3dadd( -75.8807, 177.788, -70.3131, 0.88 ) }
    dend_6 { pt3dadd( -75.974, 178.38, -70.772, 0.88 ) }
    dend_6 { pt3dadd( -76.2682, 179.806, -71.8967, 0.29 ) }
    dend_6 { pt3dadd( -76.3538, 180.311, -72.2766, 0.29 ) }
    dend_6 { pt3dadd( -76.4096, 180.742, -72.5859, 0.29 ) }
    dend_6 { pt3dadd( -76.4753, 181.421, -73.0691, 0.96 ) }
    dend_6 { pt3dadd( -76.532, 181.922, -73.4107, 0.96 ) }
    dend_6 { pt3dadd( -76.7966, 183.424, -74.3346, 0.29 ) }
    dend_6 { pt3dadd( -77.0245, 184.209, -74.7555, 0.29 ) }
    dend_6 { pt3dadd( -77.1494, 184.513, -74.9176, 0.29 ) }
    dend_6 { pt3dadd( -77.4321, 185.091, -75.1973, 0.29 ) }
    dend_6 { pt3dadd( -77.6915, 185.58, -75.4147, 0.29 ) }
    dend_6 { pt3dadd( -77.9835, 186.131, -75.6273, 0.81 ) }
    dend_6 { pt3dadd( -78.2274, 186.611, -75.7982, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -78.8114, 187.826, -76.2896, 0.29 ) }
    dend_6 { pt3dadd( -79.1076, 188.47, -76.5572, 0.59 ) }
    dend_6 { pt3dadd( -79.3269, 188.967, -76.7557, 0.59 ) }
    dend_6 { pt3dadd( -79.5555, 189.493, -76.9564, 0.29 ) }
    dend_6 { pt3dadd( -79.9078, 190.341, -77.2695, 0.29 ) }
    dend_6 { pt3dadd( -80.1394, 190.979, -77.4889, 0.29 ) }
    dend_6 { pt3dadd( -80.3863, 191.702, -77.7126, 0.29 ) }
    dend_6 { pt3dadd( -80.5835, 192.292, -77.9124, 0.29 ) }
    dend_6 { pt3dadd( -80.8313, 193.044, -78.1481, 0.29 ) }
    dend_6 { pt3dadd( -80.9542, 193.4, -78.2418, 0.29 ) }
    dend_6 { pt3dadd( -81.3003, 194.327, -78.4457, 0.88 ) }
    dend_6 { pt3dadd( -81.444, 194.738, -78.5201, 1.11 ) }
    dend_6 { pt3dadd( -81.8823, 196.247, -78.7429, 0.29 ) }
    dend_6 { pt3dadd( -82.0285, 196.834, -78.8471, 0.59 ) }
    dend_6 { pt3dadd( -82.2105, 197.623, -79.0194, 0.29 ) }
    dend_6 { pt3dadd( -82.3146, 198.02, -79.1151, 0.29 ) }
    dend_6 { pt3dadd( -82.4829, 198.628, -79.2431, 0.29 ) }
    dend_6 { pt3dadd( -82.6125, 199.127, -79.3272, 0.29 ) }
    dend_6 { pt3dadd( -82.9212, 200.231, -79.5259, 0.66 ) }
    dend_6 { pt3dadd( -83.1125, 200.765, -79.6716, 0.66 ) }
    dend_6 { pt3dadd( -83.5002, 201.846, -80.0765, 0.37 ) }
    dend_6 { pt3dadd( -83.7338, 202.487, -80.3533, 0.37 ) }
    dend_6 { pt3dadd( -84.1121, 203.337, -80.7774, 0.37 ) }
    dend_6 { pt3dadd( -84.5803, 204.238, -81.2581, 0.37 ) }
    dend_6 { pt3dadd( -85.0822, 205.107, -81.6905, 0.37 ) }
    dend_6 { pt3dadd( -85.8415, 206.35, -82.3035, 0.29 ) }
    dend_6 { pt3dadd( -86.0612, 206.699, -82.4945, 0.29 ) }
    dend_6 { pt3dadd( -86.614, 207.54, -83.009, 0.29 ) }
    dend_6 { pt3dadd( -86.8683, 207.925, -83.2534, 0.29 ) }
    dend_6 { pt3dadd( -87.4188, 208.833, -83.7117, 1.4 ) }
    dend_6 { pt3dadd( -87.5447, 209.049, -83.7864, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 69.3809, -184.442, -4.08729, 0.37 ) }
    dend_49 { pt3dadd( 79.4497, -190.852, -4.92304, 0.37 ) }
    dend_49 { pt3dadd( 88.8932, -197.999, -6.77903, 0.37 ) }
    dend_49 { pt3dadd( 98.8689, -204.403, -8.41348, 0.37 ) }
    dend_49 { pt3dadd( 108.276, -211.169, -11.4493, 0.37 ) }
    dend_49 { pt3dadd( 117.344, -218.731, -13.5968, 0.37 ) }
    dend_49 { pt3dadd( 127.329, -224.483, -16.7711, 0.37 ) }
    dend_49 { pt3dadd( 136.456, -230.28, -21.8765, 0.37 ) }
    dend_49 { pt3dadd( 145.326, -237.57, -25.3494, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 69.3809, -184.442, -4.08729, 0.22 ) }
    dend_48 { pt3dadd( 73.8843, -187.918, -6.71149, 0.37 ) }
    dend_48 { pt3dadd( 79.0306, -190.613, -9.00856, 0.37 ) }
    dend_48 { pt3dadd( 83.6109, -193.393, -12.2241, 0.37 ) }
    dend_48 { pt3dadd( 88.0614, -195.33, -16.1354, 0.37 ) }
    dend_48 { pt3dadd( 92.1398, -197.885, -20.1139, 0.37 ) }
    dend_48 { pt3dadd( 96.5995, -200.865, -23.3283, 0.37 ) }
    dend_48 { pt3dadd( 101.136, -204.715, -25.3249, 0.37 ) }
    dend_48 { pt3dadd( 105.461, -208.418, -27.9531, 0.37 ) }
    dend_48 { pt3dadd( 110.816, -210.781, -30.1171, 0.37 ) }
    dend_48 { pt3dadd( 116.071, -213.781, -31.6952, 0.37 ) }
    dend_48 { pt3dadd( 122.025, -215.471, -32.4099, 0.37 ) }
    dend_48 { pt3dadd( 128.12, -216.644, -32.8864, 0.37 ) }
    dend_48 { pt3dadd( 134.309, -216.87, -32.3107, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 43.3652, -168.005, 7.93363, 0.37 ) }
    dend_46 { pt3dadd( 48.7075, -172.039, 9.57053, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 43.3652, -168.005, 7.93363, 0.22 ) }
    dend_43 { pt3dadd( 52.0591, -174.468, 8.88165, 0.37 ) }
    dend_43 { pt3dadd( 60.3145, -181.222, 11.0298, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 59/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -40.0243, -179.682, -23.8797, 0.37 ) }
    dend_38 { pt3dadd( -36.635, -189.024, -25.3651, 0.37 ) }
    dend_38 { pt3dadd( -30.893, -197.192, -25.6397, 0.37 ) }
    dend_38 { pt3dadd( -25.27, -205.421, -24.9994, 0.37 ) }
    dend_38 { pt3dadd( -19.2795, -213.347, -24.1229, 0.37 ) }
    dend_38 { pt3dadd( -12.7379, -220.283, -21.34, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -40.0243, -179.682, -23.8797, 0.22 ) }
    dend_37 { pt3dadd( -39.4516, -186.241, -28.2473, 0.37 ) }
    dend_37 { pt3dadd( -40.0683, -192.596, -32.9019, 0.37 ) }
    dend_37 { pt3dadd( -40.6525, -199.651, -36.4522, 0.37 ) }
    dend_37 { pt3dadd( -41.6607, -206.841, -39.6255, 0.37 ) }
    dend_37 { pt3dadd( -41.1146, -214.002, -42.9525, 0.37 ) }
    dend_37 { pt3dadd( -39.2762, -221.14, -45.8009, 0.37 ) }
    dend_37 { pt3dadd( -36.637, -228.381, -47.4882, 0.37 ) }
    dend_37 { pt3dadd( -34.2992, -235.901, -47.9746, 0.37 ) }
    dend_37 { pt3dadd( -31.8309, -243.296, -46.9158, 0.37 ) }
    dend_37 { pt3dadd( -30.7923, -251.005, -45.6255, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 184.405, 347.106, 52.9701, 0.29 ) }
    dend_28 { pt3dadd( 186.146, 349.204, 51.716, 0.29 ) }
    dend_28 { pt3dadd( 186.741, 349.944, 51.3398, 0.29 ) }
    dend_28 { pt3dadd( 187.221, 350.609, 51.0919, 0.29 ) }
    dend_28 { pt3dadd( 187.528, 351.092, 50.9651, 0.29 ) }
    dend_28 { pt3dadd( 188.046, 352.004, 50.7873, 0.74 ) }
    dend_28 { pt3dadd( 188.199, 352.294, 50.7483, 0.74 ) }
    dend_28 { pt3dadd( 188.757, 353.538, 50.7814, 0.22 ) }
    dend_28 { pt3dadd( 189.254, 354.678, 50.8089, 0.22 ) }
    dend_28 { pt3dadd( 189.619, 355.661, 50.8398, 0.22 ) }
    dend_28 { pt3dadd( 189.811, 356.237, 50.8731, 0.52 ) }
    dend_28 { pt3dadd( 190.104, 357.167, 50.9884, 0.22 ) }
    dend_28 { pt3dadd( 190.213, 357.539, 51.0442, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 184.405, 347.106, 52.9701, 0.44 ) }
    dend_25 { pt3dadd( 184.081, 348.723, 53.9741, 0.44 ) }
    dend_25 { pt3dadd( 183.943, 349.935, 54.7372, 0.44 ) }
    dend_25 { pt3dadd( 183.829, 351.24, 55.5358, 0.44 ) }
    dend_25 { pt3dadd( 183.77, 352.12, 56.0584, 0.44 ) }
    dend_25 { pt3dadd( 183.705, 353.186, 56.6534, 0.37 ) }
    dend_25 { pt3dadd( 183.67, 353.817, 56.9847, 0.37 ) }
    dend_25 { pt3dadd( 183.658, 354.922, 57.664, 0.88 ) }
    dend_25 { pt3dadd( 183.684, 355.336, 57.9023, 1.47 ) }
    dend_25 { pt3dadd( 183.723, 355.792, 58.1157, 1.47 ) }
    dend_25 { pt3dadd( 183.794, 357.02, 58.5757, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( 183.775, 357.733, 58.7816, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 177.246, 326.002, 26.9309, 0.29 ) }
    dend_23 { pt3dadd( 177.818, 326.397, 27.104, 0.29 ) }
    dend_23 { pt3dadd( 178.716, 326.932, 27.3231, 0.81 ) }
    dend_23 { pt3dadd( 179.369, 327.264, 27.4641, 0.81 ) }
    dend_23 { pt3dadd( 180.288, 327.632, 27.6197, 0.22 ) }
    dend_23 { pt3dadd( 180.823, 327.806, 27.6855, 0.59 ) }
    dend_23 { pt3dadd( 182.607, 328.278, 27.8689, 0.22 ) }
    dend_23 { pt3dadd( 183.854, 328.52, 27.9369, 0.81 ) }
    dend_23 { pt3dadd( 184.508, 328.624, 27.939, 0.81 ) }
    dend_23 { pt3dadd( 185.825, 328.846, 27.8741, 0.29 ) }
    dend_23 { pt3dadd( 187.25, 329.143, 27.7571, 0.29 ) }
    dend_23 { pt3dadd( 188.858, 329.583, 27.5874, 0.22 ) }
    dend_23 { pt3dadd( 189.817, 329.919, 27.4834, 0.22 ) }
    dend_23 { pt3dadd( 191.057, 330.49, 27.2985, 0.81 ) }
    dend_23 { pt3dadd( 192.541, 331.359, 27.068, 0.22 ) }
    dend_23 { pt3dadd( 193.554, 332.114, 26.9122, 0.22 ) }
    dend_23 { pt3dadd( 194.443, 332.885, 26.7603, 0.44 ) }
    dend_23 { pt3dadd( 195.03, 333.486, 26.6458, 0.15 ) }
    dend_23 { pt3dadd( 195.521, 334.049, 26.5635, 0.22 ) }
    dend_23 { pt3dadd( 196.215, 334.948, 26.479, 0.15 ) }
    dend_23 { pt3dadd( 196.672, 335.572, 26.4668, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 177.246, 326.002, 26.9309, 0.22 ) }
    dend_18 { pt3dadd( 178.554, 326.289, 27.2061, 0.22 ) }
    dend_18 { pt3dadd( 179.039, 326.396, 27.308, 0.81 ) }
    dend_18 { pt3dadd( 179.563, 326.511, 27.4181, 0.52 ) }
    dend_18 { pt3dadd( 180.647, 326.749, 27.6461, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -50.2322, 193.819, -65.4118, 0.37 ) }
    dend_9 { pt3dadd( -49.4837, 195.929, -65.3125, 0.37 ) }
    dend_9 { pt3dadd( -48.9564, 197.703, -65.3723, 0.37 ) }
    dend_9 { pt3dadd( -48.5555, 199.052, -65.4177, 0.37 ) }
    dend_9 { pt3dadd( -48.1293, 200.486, -65.4661, 0.81 ) }
    dend_9 { pt3dadd( -47.9311, 201.152, -65.4886, 0.81 ) }
    dend_9 { pt3dadd( -47.419, 202.875, -65.5467, 0.52 ) }
    dend_9 { pt3dadd( -47.2183, 204.274, -65.6893, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -50.2322, 193.819, -65.4118, 0.29 ) }
    dend_8 { pt3dadd( -49.8914, 195.17, -65.3217, 0.29 ) }
    dend_8 { pt3dadd( -49.6476, 196.137, -65.2573, 0.88 ) }
    dend_8 { pt3dadd( -49.3854, 197.177, -65.188, 0.29 ) }
    dend_8 { pt3dadd( -49.1945, 197.934, -65.1375, 0.88 ) }
    dend_8 { pt3dadd( -48.9749, 198.805, -65.0795, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 60.3145, -181.222, 11.0298, 0.37 ) }
    dend_45 { pt3dadd( 66.8911, -186.562, 9.57079, 0.37 ) }
    dend_45 { pt3dadd( 73.295, -191.938, 7.5719, 0.37 ) }
    dend_45 { pt3dadd( 78.7616, -198.497, 6.27771, 0.37 ) }
    dend_45 { pt3dadd( 83.9336, -205.332, 5.1336, 0.37 ) }
    dend_45 { pt3dadd( 88.8657, -212.44, 4.8409, 0.37 ) }
    dend_45 { pt3dadd( 94.0813, -219.238, 5.98437, 0.37 ) }
    dend_45 { pt3dadd( 99.5325, -225.807, 7.29041, 0.37 ) }
    dend_45 { pt3dadd( 104.83, -232.138, 9.79779, 0.37 ) }
    dend_45 { pt3dadd( 110.455, -238.289, 11.9966, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 51/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 60.3145, -181.222, 11.0298, 0.22 ) }
    dend_44 { pt3dadd( 67.3783, -186.747, 11.2254, 0.37 ) }
    dend_44 { pt3dadd( 73.3511, -193.494, 11.2645, 0.37 ) }
    dend_44 { pt3dadd( 79.621, -199.95, 11.2585, 0.37 ) }
    dend_44 { pt3dadd( 85.9836, -206.283, 11.8343, 0.37 ) }
    dend_44 { pt3dadd( 92.8392, -212.08, 11.7624, 0.37 ) }
    dend_44 { pt3dadd( 100.475, -216.681, 12.5028, 0.37 ) }
    dend_44 { pt3dadd( 107.815, -221.19, 14.9045, 0.37 ) }
    dend_44 { pt3dadd( 115.582, -223.962, 18.2745, 0.37 ) }
    dend_44 { pt3dadd( 123.313, -225.033, 22.5411, 0.37 ) }
    dend_44 { pt3dadd( 130.464, -227.126, 27.4106, 0.37 ) }
    dend_44 { pt3dadd( 137.608, -230.319, 31.6836, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 183.775, 357.733, 58.7816, 0.29 ) }
    dend_27 { pt3dadd( 183.339, 359.226, 58.9643, 0.29 ) }
    dend_27 { pt3dadd( 183.011, 360.214, 59.0771, 0.29 ) }
    dend_27 { pt3dadd( 182.797, 360.838, 59.1469, 0.66 ) }
    dend_27 { pt3dadd( 182.725, 361.057, 59.173, 0.66 ) }
    dend_27 { pt3dadd( 182.508, 361.854, 59.28, 0.22 ) }
    dend_27 { pt3dadd( 182.31, 362.752, 59.4117, 0.22 ) }
    dend_27 { pt3dadd( 182.206, 363.438, 59.5243, 0.22 ) }
    dend_27 { pt3dadd( 182.179, 363.819, 59.5931, 0.59 ) }
    dend_27 { pt3dadd( 182.198, 364.286, 59.6877, 0.59 ) }
    dend_27 { pt3dadd( 182.307, 365.292, 59.9048, 0.29 ) }
    dend_27 { pt3dadd( 182.415, 365.96, 60.0816, 0.88 ) }
    dend_27 { pt3dadd( 182.523, 366.54, 60.2506, 0.88 ) }
    dend_27 { pt3dadd( 182.86, 368.324, 60.7821, 0.29 ) }
    dend_27 { pt3dadd( 183.033, 369.243, 61.0614, 0.29 ) }
    dend_27 { pt3dadd( 183.127, 369.773, 61.2257, 0.59 ) }
    dend_27 { pt3dadd( 183.396, 371.421, 61.7627, 0.29 ) }
    dend_27 { pt3dadd( 183.528, 372.235, 62.0462, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 183.775, 357.733, 58.7816, 0.29 ) }
    dend_26 { pt3dadd( 184.06, 359.142, 59.1, 0.29 ) }
    dend_26 { pt3dadd( 184.416, 360.44, 59.5425, 0.29 ) }
    dend_26 { pt3dadd( 184.701, 361.345, 59.8939, 0.29 ) }
    dend_26 { pt3dadd( 185.212, 362.804, 60.482, 0.29 ) }
    dend_26 { pt3dadd( 185.497, 363.574, 60.7972, 0.29 ) }
    dend_26 { pt3dadd( 185.967, 364.796, 61.3007, 0.29 ) }
    dend_26 { pt3dadd( 186.494, 366.122, 61.8644, 1.03 ) }
    dend_26 { pt3dadd( 186.92, 367.106, 62.3388, 1.69 ) }
    dend_26 { pt3dadd( 187.531, 368.397, 63.0186, 0.22 ) }
    dend_26 { pt3dadd( 187.836, 369.0, 63.3513, 0.52 ) }
    dend_26 { pt3dadd( 187.995, 369.319, 63.5261, 0.59 ) }
    dend_26 { pt3dadd( 188.407, 370.262, 64.0715, 0.22 ) }
    dend_26 { pt3dadd( 188.763, 371.168, 64.6656, 0.52 ) }
    dend_26 { pt3dadd( 188.937, 371.687, 65.0943, 0.66 ) }
    dend_26 { pt3dadd( 189.108, 372.322, 65.7699, 0.22 ) }
    dend_26 { pt3dadd( 189.215, 372.683, 66.226, 0.22 ) }
    dend_26 { pt3dadd( 189.581, 373.709, 67.6884, 0.66 ) }
    dend_26 { pt3dadd( 189.801, 374.205, 68.5211, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 190.082, 374.672, 69.4378, 1.03 ) }
    dend_26 { pt3dadd( 190.522, 375.323, 70.7212, 0.29 ) }
    dend_26 { pt3dadd( 190.823, 375.765, 71.5259, 0.37 ) }
    dend_26 { pt3dadd( 191.087, 376.175, 72.1656, 0.37 ) }
    dend_26 { pt3dadd( 191.535, 376.839, 73.0435, 0.29 ) }
    dend_26 { pt3dadd( 191.926, 377.365, 73.702, 0.29 ) }
    dend_26 { pt3dadd( 192.308, 377.876, 74.2946, 0.29 ) }
    dend_26 { pt3dadd( 192.648, 378.409, 74.789, 0.66 ) }
    dend_26 { pt3dadd( 192.916, 378.958, 75.2168, 0.66 ) }
    dend_26 { pt3dadd( 193.252, 379.907, 75.8463, 0.29 ) }
    dend_26 { pt3dadd( 193.437, 380.699, 76.2525, 0.29 ) }
    dend_26 { pt3dadd( 193.525, 381.236, 76.4869, 0.29 ) }
    dend_26 { pt3dadd( 193.66, 382.219, 76.8612, 0.66 ) }
    dend_26 { pt3dadd( 193.733, 382.887, 77.0949, 0.74 ) }
    dend_26 { pt3dadd( 193.941, 384.608, 77.5683, 0.29 ) }
    dend_26 { pt3dadd( 194.13, 386.021, 77.8747, 0.29 ) }
    dend_26 { pt3dadd( 194.318, 387.152, 78.0592, 0.88 ) }
    dend_26 { pt3dadd( 194.432, 387.667, 78.1215, 1.03 ) }
    dend_26 { pt3dadd( 194.711, 388.61, 78.2, 0.74 ) }
    dend_26 { pt3dadd( 195.285, 390.153, 78.2633, 0.29 ) }
    dend_26 { pt3dadd( 195.641, 390.926, 78.2078, 0.59 ) }
    dend_26 { pt3dadd( 196.131, 391.896, 78.0629, 0.29 ) }
    dend_26 { pt3dadd( 196.551, 392.745, 77.8707, 0.59 ) }
    dend_26 { pt3dadd( 196.822, 393.31, 77.6981, 0.29 ) }
    dend_26 { pt3dadd( 197.149, 394.078, 77.4284, 0.81 ) }
    dend_26 { pt3dadd( 197.728, 395.72, 76.8913, 0.29 ) }
    dend_26 { pt3dadd( 198.045, 396.757, 76.5581, 0.29 ) }
    dend_26 { pt3dadd( 198.28, 397.588, 76.2999, 0.29 ) }
    dend_26 { pt3dadd( 198.578, 398.651, 75.9645, 0.22 ) }
    dend_26 { pt3dadd( 199.068, 400.51, 75.4174, 0.22 ) }
    dend_26 { pt3dadd( 199.626, 402.929, 74.7904, 0.22 ) }
    dend_26 { pt3dadd( 200.051, 404.936, 74.3289, 0.22 ) }
    dend_26 { pt3dadd( 200.426, 406.774, 73.9405, 0.74 ) }
    dend_26 { pt3dadd( 200.604, 407.673, 73.7701, 0.96 ) }
    dend_26 { pt3dadd( 200.941, 409.465, 73.473, 0.22 ) }
    dend_26 { pt3dadd( 201.271, 411.278, 73.1674, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 180.647, 326.749, 27.6461, 0.22 ) }
    dend_22 { pt3dadd( 180.886, 328.417, 27.6393, 0.22 ) }
    dend_22 { pt3dadd( 180.976, 329.039, 27.6368, 0.37 ) }
    dend_22 { pt3dadd( 181.151, 330.262, 27.6318, 0.22 ) }
    dend_22 { pt3dadd( 181.283, 331.181, 27.6281, 0.22 ) }
    dend_22 { pt3dadd( 181.455, 332.379, 27.6233, 0.22 ) }
    dend_22 { pt3dadd( 181.638, 333.651, 27.6181, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 43/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 180.647, 326.749, 27.6461, 0.22 ) }
    dend_19 { pt3dadd( 182.427, 326.008, 27.4093, 0.22 ) }
    dend_19 { pt3dadd( 183.066, 325.742, 27.3244, 0.22 ) }
    dend_19 { pt3dadd( 183.809, 325.433, 27.2256, 0.52 ) }
    dend_19 { pt3dadd( 184.664, 325.077, 27.112, 1.11 ) }
    dend_19 { pt3dadd( 185.499, 324.729, 27.001, 0.81 ) }
    dend_19 { pt3dadd( 186.41, 324.35, 26.88, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -47.2183, 204.274, -65.6893, 0.59 ) }
    dend_11 { pt3dadd( -47.8881, 205.905, -65.3896, 0.59 ) }
    dend_11 { pt3dadd( -48.055, 206.411, -65.3245, 0.88 ) }
    dend_11 { pt3dadd( -48.3765, 207.412, -65.2227, 0.29 ) }
    dend_11 { pt3dadd( -48.6275, 208.194, -65.1502, 0.29 ) }
    dend_11 { pt3dadd( -48.9007, 208.999, -65.0791, 0.37 ) }
    dend_11 { pt3dadd( -49.1675, 209.74, -65.0147, 0.37 ) }
    dend_11 { pt3dadd( -49.7015, 211.049, -64.8877, 0.29 ) }
    dend_11 { pt3dadd( -49.9403, 211.625, -64.8598, 0.29 ) }
    dend_11 { pt3dadd( -50.3409, 212.609, -64.8326, 0.29 ) }
    dend_11 { pt3dadd( -50.6031, 213.287, -64.8013, 0.96 ) }
    dend_11 { pt3dadd( -50.7866, 213.749, -64.77, 0.96 ) }
    dend_11 { pt3dadd( -50.9789, 214.213, -64.7188, 0.74 ) }
    dend_11 { pt3dadd( -51.454, 215.285, -64.5299, 0.29 ) }
    dend_11 { pt3dadd( -51.8487, 216.221, -64.3616, 0.29 ) }
    dend_11 { pt3dadd( -52.107, 216.846, -64.2423, 0.29 ) }
    dend_11 { pt3dadd( -52.4017, 217.573, -64.081, 0.74 ) }
    dend_11 { pt3dadd( -52.5212, 217.864, -64.0083, 0.74 ) }
    dend_11 { pt3dadd( -52.6813, 218.246, -63.9017, 0.44 ) }
    dend_11 { pt3dadd( -53.0882, 219.136, -63.6453, 0.29 ) }
    dend_11 { pt3dadd( -53.4405, 219.816, -63.457, 0.29 ) }
    dend_11 { pt3dadd( -54.1936, 221.198, -63.0263, 0.29 ) }
    dend_11 { pt3dadd( -54.5264, 221.805, -62.8057, 0.96 ) }
    dend_11 { pt3dadd( -54.7617, 222.233, -62.6134, 0.59 ) }
    dend_11 { pt3dadd( -55.0629, 222.789, -62.3031, 0.29 ) }
    dend_11 { pt3dadd( -55.481, 223.547, -61.7953, 0.22 ) }
    dend_11 { pt3dadd( -55.8832, 224.254, -61.2619, 0.22 ) }
    dend_11 { pt3dadd( -56.1164, 224.648, -60.9305, 0.22 ) }
    dend_11 { pt3dadd( -56.4816, 225.268, -60.438, 0.22 ) }
    dend_11 { pt3dadd( -56.8015, 225.841, -60.0234, 0.22 ) }
    dend_11 { pt3dadd( -57.0686, 226.408, -59.651, 0.81 ) }
    dend_11 { pt3dadd( -57.1309, 226.573, -59.5616, 1.18 ) }
    dend_11 { pt3dadd( -57.263, 227.003, -59.4046, 1.18 ) }
    dend_11 { pt3dadd( -57.5368, 228.037, -59.1517, 0.29 ) }
    dend_11 { pt3dadd( -57.6613, 228.624, -59.0529, 0.29 ) }
    dend_11 { pt3dadd( -57.7735, 229.349, -58.938, 0.66 ) }
    dend_11 { pt3dadd( -57.799, 229.603, -58.8914, 0.66 ) }
    dend_11 { pt3dadd( -57.8512, 230.708, -58.7134, 0.37 ) }
    dend_11 { pt3dadd( -57.8762, 231.366, -58.627, 0.37 ) }
    dend_11 { pt3dadd( -57.9327, 232.033, -58.5676, 0.37 ) }
    dend_11 { pt3dadd( -58.0111, 232.556, -58.5641, 0.74 ) }
    dend_11 { pt3dadd( -58.1177, 233.102, -58.5965, 0.74 ) }
    dend_11 { pt3dadd( -58.3506, 234.269, -58.6945, 0.29 ) }
    dend_11 { pt3dadd( -58.4764, 235.005, -58.7539, 0.29 ) }
    dend_11 { pt3dadd( -58.5963, 235.987, -58.8562, 0.29 ) }
    dend_11 { pt3dadd( -58.7032, 236.981, -58.9653, 0.88 ) }
    dend_11 { pt3dadd( -58.7625, 237.537, -59.0175, 0.88 ) }
    dend_11 { pt3dadd( -58.8437, 238.312, -59.0756, 0.29 ) }
    dend_11 { pt3dadd( -58.9596, 239.253, -59.0993, 0.29 ) }
    dend_11 { pt3dadd( -59.0116, 239.736, -59.1056, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_11 { pt3dadd( -59.1333, 240.531, -59.1125, 0.74 ) }
    dend_11 { pt3dadd( -59.2445, 241.019, -59.1135, 0.74 ) }
    dend_11 { pt3dadd( -59.5112, 241.961, -59.1129, 0.37 ) }
    dend_11 { pt3dadd( -59.7548, 242.719, -59.1093, 0.59 ) }
    dend_11 { pt3dadd( -59.9386, 243.244, -59.0994, 0.59 ) }
    dend_11 { pt3dadd( -60.1818, 243.994, -59.0639, 0.29 ) }
    dend_11 { pt3dadd( -60.4248, 244.875, -58.9942, 0.29 ) }
    dend_11 { pt3dadd( -60.5456, 245.332, -58.935, 0.29 ) }
    dend_11 { pt3dadd( -60.6902, 245.869, -58.8321, 0.52 ) }
    dend_11 { pt3dadd( -60.8063, 246.309, -58.7324, 1.03 ) }
    dend_11 { pt3dadd( -60.9506, 246.918, -58.5561, 1.03 ) }
    dend_11 { pt3dadd( -61.1809, 248.009, -58.1862, 0.22 ) }
    dend_11 { pt3dadd( -61.4534, 249.354, -57.673, 0.22 ) }
    dend_11 { pt3dadd( -61.6407, 250.303, -57.2862, 0.96 ) }
    dend_11 { pt3dadd( -61.7556, 250.866, -57.0445, 0.96 ) }
    dend_11 { pt3dadd( -62.0227, 252.249, -56.4101, 0.29 ) }
    dend_11 { pt3dadd( -62.2161, 253.313, -55.8853, 0.29 ) }
    dend_11 { pt3dadd( -62.3412, 254.014, -55.5263, 0.88 ) }
    dend_11 { pt3dadd( -62.4387, 254.547, -55.2546, 1.18 ) }
    dend_11 { pt3dadd( -62.6921, 255.824, -54.6537, 0.37 ) }
    dend_11 { pt3dadd( -62.9773, 256.891, -54.0929, 0.37 ) }
    dend_11 { pt3dadd( -63.4383, 258.303, -53.2751, 0.37 ) }
    dend_11 { pt3dadd( -63.7355, 259.131, -52.705, 0.37 ) }
    dend_11 { pt3dadd( -63.9416, 259.691, -52.2486, 0.96 ) }
    dend_11 { pt3dadd( -64.1612, 260.31, -51.6444, 0.96 ) }
    dend_11 { pt3dadd( -64.633, 261.894, -49.6967, 0.29 ) }
    dend_11 { pt3dadd( -64.6839, 262.184, -49.2905, 0.29 ) }
    dend_11 { pt3dadd( -64.6921, 262.706, -48.5149, 0.88 ) }
    dend_11 { pt3dadd( -64.6501, 263.086, -47.9635, 0.88 ) }
    dend_11 { pt3dadd( -64.595, 263.399, -47.5456, 0.59 ) }
    dend_11 { pt3dadd( -64.3532, 264.635, -46.1079, 0.29 ) }
    dend_11 { pt3dadd( -64.1548, 265.726, -45.1287, 0.29 ) }
    dend_11 { pt3dadd( -64.0666, 266.425, -44.5776, 0.81 ) }
    dend_11 { pt3dadd( -64.0361, 266.764, -44.3454, 0.81 ) }
    dend_11 { pt3dadd( -64.0296, 267.336, -44.0055, 0.52 ) }
    dend_11 { pt3dadd( -64.0786, 268.207, -43.5602, 0.22 ) }
    dend_11 { pt3dadd( -64.3135, 269.789, -42.9121, 0.22 ) }
    dend_11 { pt3dadd( -64.5195, 270.709, -42.5883, 0.74 ) }
    dend_11 { pt3dadd( -64.6522, 271.181, -42.4395, 0.74 ) }
    dend_11 { pt3dadd( -65.0841, 272.479, -42.0633, 0.22 ) }
    dend_11 { pt3dadd( -65.2918, 273.014, -41.917, 0.22 ) }
    dend_11 { pt3dadd( -65.5998, 273.693, -41.7415, 0.52 ) }
    dend_11 { pt3dadd( -65.6873, 273.865, -41.699, 0.59 ) }
    dend_11 { pt3dadd( -66.1357, 274.725, -41.5117, 0.22 ) }
    dend_11 { pt3dadd( -66.4821, 275.429, -41.4165, 0.44 ) }
    dend_11 { pt3dadd( -67.1442, 276.788, -41.3775, 0.22 ) }
    dend_11 { pt3dadd( -67.4415, 277.38, -41.4381, 0.66 ) }
    dend_11 { pt3dadd( -67.9038, 278.241, -41.6239, 0.22 ) }
    dend_11 { pt3dadd( -68.4697, 279.26, -41.9474, 0.74 ) }
    dend_11 { pt3dadd( -69.0223, 280.223, -42.3453, 0.59 ) }
    dend_11 { pt3dadd( -69.4963, 281.057, -42.7155, 0.29 ) }
    dend_11 { pt3dadd( -69.8864, 281.746, -43.0235, 0.52 ) }
    dend_11 { pt3dadd( -70.5335, 282.872, -43.5402, 0.22 ) }
    dend_11 { pt3dadd( -70.9656, 283.598, -43.8549, 0.59 ) }
    dend_11 { pt3dadd( -71.1353, 283.875, -43.9368, 0.59 ) }
    dend_11 { pt3dadd( -71.6787, 284.818, -44.0506, 0.22 ) }
    dend_11 { pt3dadd( -71.9733, 285.47, -44.0383, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -47.2183, 204.274, -65.6893, 0.52 ) }
    dend_10 { pt3dadd( -46.49, 205.722, -66.0316, 0.52 ) }
    dend_10 { pt3dadd( -46.0616, 206.597, -66.2245, 0.29 ) }
    dend_10 { pt3dadd( -45.6555, 207.488, -66.3838, 0.29 ) }
    dend_10 { pt3dadd( -45.0944, 208.745, -66.5748, 0.29 ) }
    dend_10 { pt3dadd( -44.6888, 209.628, -66.7026, 0.59 ) }
    dend_10 { pt3dadd( -44.5308, 209.945, -66.7546, 0.66 ) }
    dend_10 { pt3dadd( -44.0096, 210.883, -66.8846, 0.29 ) }
    dend_10 { pt3dadd( -43.6337, 211.452, -66.9869, 0.81 ) }
    dend_10 { pt3dadd( -43.5272, 211.614, -67.0127, 0.81 ) }
    dend_10 { pt3dadd( -43.0071, 212.346, -67.1021, 0.29 ) }
    dend_10 { pt3dadd( -42.4499, 213.067, -67.2774, 0.44 ) }
    dend_10 { pt3dadd( -42.2682, 213.265, -67.3402, 0.66 ) }
    dend_10 { pt3dadd( -41.9007, 213.542, -67.4599, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 186.41, 324.35, 26.88, 0.37 ) }
    dend_21 { pt3dadd( 188.414, 323.742, 26.4676, 0.37 ) }
    dend_21 { pt3dadd( 189.265, 323.54, 26.3036, 0.22 ) }
    dend_21 { pt3dadd( 190.356, 323.281, 26.0935, 0.22 ) }
    dend_21 { pt3dadd( 190.59, 323.225, 26.0484, 0.66 ) }
    dend_21 { pt3dadd( 191.789, 322.941, 25.8174, 0.22 ) }
    dend_21 { pt3dadd( 192.862, 322.686, 25.6107, 0.22 ) }
    dend_21 { pt3dadd( 193.124, 322.643, 25.589, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 186.41, 324.35, 26.88, 0.22 ) }
    dend_20 { pt3dadd( 187.341, 324.324, 27.1102, 0.22 ) }
    dend_20 { pt3dadd( 187.536, 324.32, 27.1651, 0.88 ) }
    dend_20 { pt3dadd( 187.995, 324.31, 27.2946, 0.22 ) }
    dend_20 { pt3dadd( 188.191, 324.306, 27.3498, 0.74 ) }
    dend_20 { pt3dadd( 188.888, 324.291, 27.5462, 0.22 ) }
    dend_20 { pt3dadd( 189.182, 324.285, 27.6293, 0.44 ) }
    dend_20 { pt3dadd( 189.525, 324.273, 27.7929, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_62 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_53 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_52 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_63 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_61 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_35 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_30 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_65 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_64 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_60 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_48 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_57 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_66 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_42 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_43 OneSecGrp_SectionRef_53.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_10 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 15
    dend_32 nseg = 5
    dend_62 nseg = 3
    dend_53 nseg = 9
    dend_52 nseg = 7
    dend_40 nseg = 3
    dend_29 nseg = 9
    dend_14 nseg = 3
    dend_4 nseg = 9
    dend_63 nseg = 3
    dend_61 nseg = 3
    dend_50 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_30 nseg = 3
    dend_16 nseg = 17
    dend_15 nseg = 11
    dend_3 nseg = 11
    dend_2 nseg = 5
    dend_65 nseg = 7
    dend_64 nseg = 3
    dend_60 nseg = 3
    dend_47 nseg = 3
    dend_39 nseg = 3
    dend_24 nseg = 3
    dend_6 nseg = 3
    dend_49 nseg = 5
    dend_48 nseg = 5
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_45 nseg = 3
    dend_44 nseg = 5
    dend_26 nseg = 3
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_NBC_2518b7a9e0_0_0


