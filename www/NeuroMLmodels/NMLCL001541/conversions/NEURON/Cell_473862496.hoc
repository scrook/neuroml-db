// Cell: Cell_473862496
/*
{
  "id" : "Cell_473862496",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "288.677, 438.15, 37.8459, 14.2848", "295.819, 438.15, 37.8459, 14.2848", "302.961, 438.15, 37.8459, 14.2848" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "295.819, 438.15, 37.8459, 1.0", "301.66, 451.966, 37.8459, 1.0", "307.502, 465.782, 37.8459, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "290.963, 438.088, 49.7157, 0.2288", "290.153, 438.077, 51.6933, 0.2288", "289.343, 438.066, 53.6715, 0.2796", "288.534, 438.056, 55.6503, 0.3814", "287.851, 437.839, 56.1022, 0.483", "286.951, 437.661, 54.5916, 0.483", "285.846, 437.504, 54.2128, 0.4068", "285.08, 437.509, 55.3904, 0.356", "284.572, 437.295, 57.1197, 0.356", "284.059, 436.629, 55.2818, 0.356", "283.306, 435.925, 54.5507, 0.3304", "282.45, 435.311, 55.4257, 0.305", "281.861, 434.892, 57.2754, 0.3304", "281.493, 435.18, 59.7713, 0.3814", "280.564, 435.5, 59.1066, 0.4576", "279.654, 435.643, 58.06, 0.5338", "278.553, 435.704, 58.5245, 0.5338", "277.444, 435.509, 58.693, 0.5084", "276.316, 435.346, 58.7952, 0.4322", "275.19, 435.398, 58.5707, 0.4576", "274.311, 435.515, 60.02, 0.483", "273.256, 435.808, 60.7384, 0.5338", "272.194, 436.051, 61.5146, 0.5084", "271.404, 435.359, 61.0736, 0.4576", "270.654, 434.834, 62.6805, 0.3814", "269.525, 434.715, 62.4302, 0.3814", "268.58, 434.119, 61.9046, 0.4322", "267.652, 433.626, 61.693, 0.5338", "266.827, 433.698, 63.28, 0.5338", "265.971, 433.14, 63.5144, 0.5592", "264.93, 433.318, 62.8956, 0.5592", "263.984, 433.017, 64.0744, 0.6356", "263.057, 432.433, 64.085, 0.6356", "262.397, 431.514, 64.3541, 0.6356", "261.58, 430.78, 64.9135, 0.5848", "260.532, 430.423, 64.7024, 0.5338", "259.473, 430.257, 65.2971, 0.4576", "258.958, 429.566, 63.9573, 0.4322", "258.31, 428.647, 63.5844, 0.4576", "257.289, 428.613, 64.5988, 0.5084", "256.322, 428.796, 65.9254, 0.483", "255.305, 428.642, 66.9183, 0.3814", "254.263, 428.207, 67.2711, 0.305", "253.354, 427.715, 66.2805, 0.2796", "253.033, 426.71, 66.6159, 0.3304", "252.332, 426.217, 68.2424, 0.3304", "252.128, 425.145, 68.1184, 0.356", "251.832, 424.424, 68.521, 0.356", "251.118, 423.612, 68.6871, 0.4068", "250.786, 422.536, 68.7123, 0.4068", "249.87, 422.1, 69.5002, 0.4068", "248.945, 421.724, 70.737, 0.356", "247.822, 421.718, 70.5639, 0.3304", "246.793, 421.291, 70.261, 0.305", "245.745, 420.984, 70.2752, 0.3304", "244.803, 420.582, 71.398, 0.356", "244.086, 420.581, 73.5252, 0.3814", "243.062, 420.856, 72.9126, 0.4068", "242.344, 420.448, 74.7174, 0.483", "241.466, 419.873, 75.565, 0.5338", "240.843, 419.011, 76.5523, 0.5338", "240.17, 418.159, 77.2178, 0.4322", "239.387, 417.562, 78.3504, 0.356", "238.482, 417.722, 79.8568, 0.2796", "237.723, 418.475, 80.64, 0.2542" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "298.023, 444.484, 40.0235, 0.2288", "298.598, 445.471, 40.0901, 0.2288", "299.265, 446.391, 40.115, 0.2288", "299.997, 447.268, 40.0484, 0.2288", "300.703, 448.032, 40.9002, 0.2288", "301.459, 448.812, 41.3815, 0.2288", "302.229, 449.657, 41.3641, 0.2288", "302.53, 450.702, 41.3291, 0.2288", "302.493, 451.843, 41.3381, 0.2542", "302.399, 452.983, 41.3787, 0.2796", "302.804, 453.99, 41.4145, 0.305", "303.595, 454.806, 41.3941, 0.2796", "304.437, 455.441, 42.2752, 0.2542", "305.018, 455.739, 44.4976, 0.2288", "305.334, 456.598, 45.92, 0.2288", "305.338, 457.742, 45.92, 0.2288", "305.423, 458.882, 45.92, 0.2288", "305.448, 460.026, 45.92, 0.2288", "305.448, 461.17, 45.92, 0.2542", "305.448, 462.314, 45.92, 0.3304", "305.448, 463.458, 45.92, 0.4068", "305.477, 464.597, 45.92, 0.4322", "305.944, 465.617, 46.1306, 0.356", "306.249, 466.608, 47.119, 0.2796", "306.249, 467.747, 47.32, 0.2542", "306.168, 468.866, 47.549, 0.305", "305.732, 469.804, 48.5363, 0.356", "305.097, 470.647, 49.28, 0.3814", "304.5, 471.617, 49.28, 0.3814", "304.079, 472.636, 49.28, 0.3814", "303.803, 473.732, 49.28, 0.3814", "303.236, 474.716, 49.28, 0.356", "302.331, 475.342, 49.28, 0.3304", "301.468, 476.039, 49.28, 0.2796", "300.872, 477.001, 49.4872, 0.2542", "300.589, 478.003, 50.4496, 0.2542", "300.525, 479.096, 50.9432, 0.2796", "299.985, 480.013, 51.1515, 0.305", "299.111, 480.743, 51.3461, 0.2796", "298.341, 481.578, 51.4836, 0.2542", "297.629, 482.473, 51.52, 0.2288", "297.332, 483.545, 51.536, 0.2796", "296.832, 484.499, 52.2082, 0.356", "296.576, 485.589, 52.4303, 0.4322", "296.381, 486.701, 52.8497, 0.4068", "296.304, 487.839, 52.92, 0.356", "295.408, 488.255, 53.7468, 0.305", "294.267, 488.259, 53.76, 0.305", "293.779, 488.902, 55.5727, 0.2796", "293.802, 489.855, 57.0682, 0.305", "294.185, 490.778, 57.68, 0.3304", "295.173, 491.351, 57.68, 0.3814", "295.948, 492.11, 57.68, 0.3304", "296.416, 493.129, 58.088, 0.305", "297.22, 493.694, 59.0072, 0.305", "297.99, 494.401, 59.838, 0.356", "298.547, 495.243, 61.04, 0.4068", "299.656, 495.437, 61.0767, 0.4068", "300.239, 496.355, 61.88, 0.4068", "301.044, 497.162, 61.88, 0.3304", "302.031, 497.734, 61.952, 0.2796", "303.027, 498.235, 62.44, 0.2288", "304.046, 498.652, 62.6758, 0.2288", "304.771, 499.457, 63.5298, 0.2288", "305.568, 500.24, 63.84, 0.2542", "306.551, 500.82, 63.84, 0.2796", "307.582, 501.317, 63.84, 0.3304", "308.596, 501.772, 64.2645, 0.3304", "309.375, 502.205, 65.8448, 0.3304", "310.221, 502.429, 67.3019, 0.2796", "311.152, 502.444, 68.7529, 0.2542", "312.156, 502.281, 69.44, 0.2288", "313.251, 501.956, 69.44, 0.2288", "314.327, 501.589, 69.7147, 0.2288", "315.398, 501.204, 69.956, 0.2288", "316.334, 500.565, 70.0, 0.2542", "316.748, 499.539, 70.0, 0.2796", "317.572, 498.815, 70.0146, 0.305", "318.659, 498.483, 70.2705, 0.2796", "319.652, 497.928, 70.5558, 0.2542", "320.686, 497.439, 70.56, 0.2288", "321.57, 496.713, 70.56, 0.2288", "322.494, 496.038, 70.56, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "289.637, 440.813, 41.7805, 0.2288", "288.589, 441.246, 42.0028, 0.2542", "287.477, 441.457, 41.9728, 0.3304", "286.536, 441.97, 41.8118, 0.4068", "285.867, 442.885, 41.7598, 0.4576", "285.427, 443.922, 41.4565, 0.4322", "285.205, 444.857, 40.0646, 0.4322", "285.085, 445.855, 38.7332, 0.4322" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "298.988, 443.469, 32.4691, 0.3304", "299.308, 444.462, 31.785, 0.3814", "299.212, 445.591, 31.5728, 0.3814", "299.222, 446.733, 31.3922, 0.4322", "298.601, 447.606, 31.2878, 0.483", "298.495, 448.652, 31.92, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "302.401, 437.557, 41.8894, 0.2542", "303.493, 437.47, 42.4472, 0.3304", "304.449, 437.47, 40.9637, 0.4068", "305.202, 437.383, 39.002, 0.4576", "305.933, 437.618, 37.0703, 0.4068", "307.01, 437.785, 37.0454, 0.4068", "307.975, 437.535, 37.4209, 0.4322", "308.579, 436.867, 36.9256, 0.5084", "309.43, 436.493, 35.8148, 0.483", "310.053, 435.615, 35.4564, 0.3814", "310.031, 434.547, 35.6499, 0.2796", "309.786, 433.47, 36.3695, 0.2796", "310.118, 432.828, 35.3394, 0.3814", "310.853, 433.464, 35.8137, 0.483", "311.431, 434.437, 35.5771, 0.5084", "312.167, 434.879, 34.6562, 0.4322", "312.979, 434.768, 33.369, 0.3814", "313.99, 434.861, 33.1545, 0.356", "315.084, 434.66, 33.7795, 0.4322", "316.163, 434.388, 34.4282, 0.5084", "317.269, 434.642, 34.6797, 0.5848", "318.142, 434.922, 33.0775, 0.5848", "319.175, 434.703, 32.0799, 0.5338", "320.284, 434.577, 32.2459, 0.4576", "321.217, 434.33, 32.7676, 0.4322", "322.226, 434.127, 32.3201, 0.4068", "323.363, 434.092, 32.3257, 0.4576", "324.429, 434.255, 33.033, 0.483", "325.15, 434.737, 31.6652, 0.5848", "326.051, 435.331, 31.9687, 0.6356", "326.934, 435.943, 31.899, 0.661", "327.913, 436.436, 32.4755, 0.6102", "328.876, 436.829, 33.5493, 0.5592", "329.629, 437.618, 33.9086, 0.5338", "330.112, 438.397, 32.5738, 0.5592", "330.96, 438.93, 31.4513, 0.5338", "331.626, 439.393, 33.2623, 0.483", "332.025, 439.319, 35.3508, 0.4068", "332.925, 438.883, 34.1034, 0.4322", "333.9, 439.002, 32.8521, 0.5084", "334.927, 439.455, 32.4974, 0.5592", "335.926, 439.651, 33.4387, 0.5592", "337.0, 439.54, 33.5446, 0.5338", "337.864, 439.836, 32.1924, 0.5084", "338.913, 439.579, 32.5562, 0.4576", "339.908, 439.583, 31.5143, 0.3814", "340.933, 440.013, 31.4594, 0.356", "341.974, 440.44, 31.9186, 0.356", "343.051, 440.808, 32.0566, 0.4322", "344.044, 441.125, 31.1556, 0.483", "345.089, 441.301, 31.183, 0.5592", "346.006, 441.754, 32.3156, 0.6102", "347.117, 441.841, 32.2479, 0.6864", "348.161, 442.244, 32.692, 0.7626", "349.24, 442.169, 31.8716, 0.788", "350.286, 442.26, 31.6982, 0.7626", "351.218, 441.716, 31.3989, 0.6864", "352.349, 441.59, 31.5431, 0.6356", "353.463, 441.745, 31.843, 0.6102", "354.487, 442.196, 31.4608, 0.6102", "355.519, 442.392, 30.4346, 0.6102", "356.452, 443.047, 30.4212, 0.5848", "357.272, 443.812, 30.7115, 0.5592", "358.364, 444.087, 31.0741, 0.5084", "359.492, 444.01, 31.2631, 0.5084", "360.585, 443.761, 30.7546, 0.4576", "361.668, 443.418, 30.4856, 0.4576", "362.741, 443.513, 30.0082, 0.4068", "363.742, 443.901, 30.6412, 0.4322", "364.694, 443.872, 29.846, 0.4068", "365.703, 443.822, 28.8876, 0.4322", "366.578, 444.445, 28.7048, 0.4068", "367.55, 444.761, 28.6832, 0.4322", "368.321, 444.953, 30.6824, 0.4068", "369.249, 444.723, 31.6022, 0.4068", "370.284, 444.632, 30.8756, 0.356", "371.237, 444.219, 30.8983, 0.356", "371.948, 443.429, 31.1368, 0.4068", "372.581, 442.6, 30.9086, 0.5084", "373.378, 442.124, 31.7313, 0.5848", "374.494, 442.081, 31.5932, 0.6102", "375.548, 442.149, 32.4453, 0.6102", "376.582, 441.8, 33.1778, 0.6102", "377.698, 441.682, 33.523, 0.5592", "378.759, 441.299, 33.0957, 0.4576", "379.722, 440.737, 33.2125, 0.3304", "380.604, 440.394, 34.1398, 0.2796", "381.685, 440.399, 34.7119, 0.3304", "382.515, 439.781, 35.4592, 0.4576", "383.04, 438.814, 35.9335, 0.5592", "383.688, 438.014, 37.1076, 0.5592", "384.473, 437.289, 38.1041, 0.5084", "385.33, 436.613, 38.2066, 0.483", "386.272, 436.057, 38.7346, 0.5338", "387.126, 435.323, 38.5207, 0.5848", "388.148, 434.828, 38.3824, 0.5592", "389.18, 434.448, 37.9014, 0.5084", "390.313, 434.431, 37.9254, 0.4322", "391.445, 434.548, 37.9282, 0.4068", "392.49, 434.286, 38.0086, 0.4068", "393.591, 434.077, 38.3482, 0.4068", "394.665, 434.039, 39.0718, 0.4068", "395.721, 434.242, 38.5664, 0.356", "396.12, 434.919, 38.7344, 0.3304", "396.879, 435.195, 40.3147, 0.305", "397.883, 435.635, 39.76, 0.2796" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "290.23, 436.089, 29.6554, 0.2542", "289.28, 435.746, 28.3478, 0.2796", "288.239, 435.515, 28.5558, 0.305" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "301.901, 435.334, 31.0394, 0.356", "302.426, 434.353, 31.0677, 0.4322", "302.705, 433.326, 31.9598, 0.4068", "302.819, 432.242, 32.4178, 0.3304", "302.821, 431.111, 32.0491, 0.2542", "302.96, 429.984, 31.92, 0.2542", "303.468, 428.978, 31.92, 0.305", "304.195, 428.1, 31.92, 0.3814", "304.796, 427.128, 31.92, 0.4576", "305.791, 426.598, 31.92, 0.5084" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "297.073, 431.634, 34.7192, 0.4068", "297.086, 431.16, 37.0476, 0.3814", "296.765, 431.238, 39.7194, 0.4068", "296.496, 430.698, 41.167, 0.4322", "296.627, 429.69, 40.2777, 0.5592", "297.008, 428.788, 38.8427, 0.6102", "297.446, 427.882, 37.5147, 0.6356", "297.581, 426.809, 37.7152, 0.5848", "298.114, 425.885, 38.5753, 0.5338", "298.126, 424.996, 40.32, 0.4322" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "302.01, 440.375, 33.4466, 0.356", "303.048, 440.815, 33.1125, 0.4322", "304.092, 441.242, 32.9092, 0.4322", "305.154, 441.41, 32.0841, 0.4068", "306.176, 441.157, 31.197, 0.3814", "307.178, 440.68, 31.2085, 0.3814", "308.243, 440.337, 31.7083, 0.3814", "309.016, 439.846, 30.6653, 0.4068", "309.93, 439.384, 29.7623, 0.483", "310.86, 439.447, 28.3293, 0.6356", "311.737, 440.123, 29.0226, 0.7626", "312.723, 440.631, 29.3303, 0.788", "313.849, 440.797, 29.2023, 0.6864", "314.908, 440.66, 29.8032, 0.6102", "315.94, 440.535, 30.3929, 0.6102", "317.01, 440.902, 30.4634, 0.6102", "318.083, 441.25, 30.2014, 0.5848", "318.768, 441.956, 29.0898, 0.5084", "319.715, 442.278, 27.9656, 0.5592", "320.812, 442.356, 28.1487, 0.6102", "321.568, 441.8, 28.562, 0.7118", "322.052, 442.091, 26.6644, 0.6864", "322.892, 442.735, 26.6874, 0.6102", "323.922, 442.966, 25.8129, 0.5084", "324.875, 443.245, 25.7082, 0.4576", "325.953, 443.425, 25.433, 0.483", "326.62, 442.559, 25.3868, 0.5084", "327.088, 441.687, 25.739, 0.5592", "328.057, 441.149, 26.3802, 0.6102", "328.977, 441.354, 27.6158, 0.661", "329.537, 441.992, 28.4595, 0.6864", "330.449, 442.56, 27.5618, 0.661", "331.452, 443.004, 27.2031, 0.6356", "332.566, 443.007, 27.6612, 0.6102", "333.228, 442.637, 25.7734, 0.6102", "333.827, 441.819, 25.3725, 0.6102", "334.903, 441.955, 25.5312, 0.5592", "335.894, 442.391, 26.3542, 0.5084", "336.93, 442.745, 27.141, 0.4322", "337.868, 443.078, 26.3329, 0.4576", "338.72, 443.016, 25.0502, 0.5084", "339.567, 442.296, 25.4201, 0.5592", "340.609, 441.9, 25.0524, 0.5084", "341.59, 442.369, 25.1798, 0.4068", "342.585, 442.92, 24.9082, 0.3814", "343.64, 443.236, 24.6571, 0.4322", "344.775, 443.237, 24.6907, 0.483", "345.9, 443.336, 25.0146, 0.483", "346.839, 443.403, 23.933, 0.4576", "347.799, 443.761, 24.3172, 0.483", "348.872, 444.071, 24.9141, 0.5084", "349.942, 443.895, 24.0685, 0.5592", "351.036, 443.863, 24.2721, 0.6102", "352.114, 443.922, 24.7951, 0.661", "353.243, 444.079, 24.7052, 0.6864", "354.36, 444.318, 24.8366, 0.6356", "355.485, 444.336, 24.9099, 0.5592", "356.612, 444.312, 24.5781, 0.4576", "357.729, 444.42, 24.0363, 0.4576", "358.59, 443.707, 24.2749, 0.5084", "359.642, 443.521, 24.3793, 0.6102", "360.743, 443.62, 23.9641, 0.661", "361.841, 443.53, 23.3604, 0.6864", "362.869, 443.234, 23.1028, 0.661", "363.884, 442.735, 23.5155, 0.6356", "364.912, 442.325, 23.9579, 0.6102", "365.676, 441.489, 23.9254, 0.6102", "366.613, 440.919, 24.1881, 0.5592", "367.567, 440.326, 24.64, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "307.502, 465.782, 37.8459, 1.0", "313.343, 479.598, 37.8459, 1.0", "319.184, 493.414, 37.8459, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "285.085, 445.855, 38.7332, 0.4322", "284.562, 445.546, 41.4333, 0.2796", "284.07, 445.255, 43.8085, 0.2542", "283.118, 444.644, 43.8802, 0.2542", "282.72, 443.587, 43.8962, 0.305", "282.948, 442.47, 43.913, 0.3814", "283.32, 441.439, 44.0227, 0.4068", "282.658, 440.545, 44.0958, 0.3814", "281.72, 440.227, 43.8175, 0.305", "280.694, 440.463, 44.5441, 0.305", "279.766, 440.803, 45.6176, 0.356", "278.967, 441.362, 45.2158, 0.483", "278.621, 440.446, 43.9984, 0.5592", "278.435, 439.336, 43.6176, 0.6356", "277.839, 438.443, 42.9436, 0.6864", "277.481, 437.477, 43.946, 0.7118", "277.059, 436.465, 44.7384, 0.661" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "285.085, 445.855, 38.7332, 0.4322", "284.862, 446.366, 40.2172, 0.356", "284.068, 447.088, 39.48, 0.3304" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "298.495, 448.652, 31.92, 0.483", "298.17, 448.82, 33.5804, 0.4322", "297.485, 449.32, 35.0837, 0.4068", "297.111, 450.331, 35.3245, 0.3814", "296.706, 451.219, 34.062, 0.4068", "297.124, 452.152, 34.6542, 0.4322", "297.624, 453.174, 34.921, 0.4576", "298.316, 453.997, 34.0808, 0.483", "299.253, 454.604, 34.1804, 0.483", "300.242, 455.107, 33.5174, 0.4576", "301.215, 455.653, 33.2161, 0.356", "301.437, 456.218, 34.5797, 0.305", "300.94, 457.1, 34.841, 0.305", "300.136, 457.888, 34.8452, 0.4068", "299.463, 458.745, 34.1342, 0.483", "299.028, 459.705, 33.0593, 0.5084", "298.703, 460.699, 33.9976, 0.483", "298.431, 461.744, 34.3451, 0.4322", "297.846, 462.548, 33.9494, 0.4576", "297.69, 463.477, 32.5626, 0.4322", "297.402, 464.137, 33.5675, 0.4576", "297.092, 465.043, 34.4672, 0.4068", "296.939, 466.163, 34.3482, 0.4576", "296.104, 466.849, 34.2451, 0.5084", "295.976, 467.946, 33.7022, 0.5848", "295.602, 469.003, 33.9816, 0.6102", "295.248, 470.056, 34.617, 0.6356", "295.016, 471.159, 34.7864, 0.661", "294.376, 471.721, 33.2055, 0.7372", "293.934, 472.748, 33.7022, 0.788", "293.395, 473.727, 33.4348, 0.839", "292.612, 474.53, 32.9188, 0.788", "292.214, 475.546, 33.0014, 0.661", "292.253, 476.682, 33.0417, 0.5338", "292.406, 477.798, 33.4757, 0.4068", "292.125, 478.382, 33.5266, 0.3814", "291.472, 479.314, 33.5871, 0.3304", "291.027, 480.351, 33.6, 0.3304", "290.925, 481.481, 33.6482, 0.2796", "290.694, 482.577, 34.0822, 0.2796", "290.224, 483.593, 34.6156, 0.2796", "290.118, 484.707, 34.72, 0.305", "290.118, 485.851, 34.7421, 0.2796", "290.118, 486.992, 34.9266, 0.2542", "290.118, 488.136, 34.9941, 0.2288", "289.835, 489.234, 35.0, 0.2288", "289.341, 490.259, 35.243, 0.2288", "288.844, 491.289, 35.28, 0.2542", "288.458, 492.365, 35.28, 0.3304", "288.237, 493.486, 35.296, 0.4068", "288.074, 494.614, 35.5208, 0.4322", "288.08, 495.756, 35.5586, 0.356", "288.746, 496.64, 35.56, 0.2796", "288.746, 497.784, 35.56, 0.2796", "288.746, 498.912, 35.6728, 0.3304", "288.746, 499.843, 37.2431, 0.4068", "288.746, 500.958, 37.8535, 0.4322", "288.773, 502.086, 38.2446, 0.4576", "288.941, 503.175, 38.9085, 0.4576", "289.276, 504.258, 38.92, 0.4068", "289.835, 505.251, 38.8623, 0.356", "290.2, 506.309, 38.4168, 0.2796", "290.347, 507.39, 37.7712, 0.2542", "290.311, 508.532, 37.6463, 0.2542", "290.155, 509.661, 37.52, 0.2796", "290.037, 510.788, 37.52, 0.305", "290.098, 511.93, 37.52, 0.2796", "290.092, 513.073, 37.52, 0.2796", "289.933, 514.199, 37.52, 0.305", "289.717, 515.318, 37.52, 0.356", "289.632, 516.456, 37.6348, 0.3814", "289.525, 517.591, 37.8, 0.4322", "289.432, 518.729, 37.8, 0.5084", "289.432, 519.87, 37.9168, 0.5592", "289.411, 521.011, 38.08, 0.483", "289.355, 522.154, 38.08, 0.356", "289.286, 523.295, 38.08, 0.2542", "289.183, 524.434, 38.0461, 0.2796", "288.947, 525.544, 37.8801, 0.4068", "288.746, 526.645, 37.5217, 0.5338", "288.746, 527.781, 37.2565, 0.5592", "288.746, 528.925, 37.24, 0.4322", "288.678, 530.064, 37.24, 0.305", "288.336, 531.134, 37.24, 0.2796", "287.779, 532.134, 37.2627, 0.3304", "287.331, 533.177, 37.3974, 0.4068", "287.067, 534.286, 37.5528, 0.4068", "286.591, 535.252, 37.8862, 0.4068", "286.058, 536.195, 38.6086, 0.4068", "285.62, 537.238, 38.894, 0.4068", "285.274, 538.326, 38.92, 0.4068", "285.069, 539.45, 38.92, 0.3304", "284.895, 540.58, 38.92, 0.3304", "284.568, 541.674, 38.92, 0.3304", "284.332, 542.791, 38.92, 0.3814", "284.005, 543.839, 38.2071, 0.356", "283.59, 544.892, 37.8392, 0.356", "282.932, 545.815, 37.5488, 0.4068", "282.503, 546.865, 37.2638, 0.5338", "282.147, 547.942, 36.9032, 0.6102", "281.449, 548.808, 36.3303, 0.5848", "280.583, 549.487, 35.5821, 0.4576", "280.018, 550.477, 35.5491, 0.356", "279.25, 551.294, 35.0, 0.305" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "298.495, 448.652, 31.92, 0.483", "299.301, 448.772, 32.2118, 0.483", "300.211, 449.235, 31.8338, 0.4322", "300.942, 450.091, 32.1712, 0.4322", "302.003, 450.495, 32.2, 0.3304" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "288.239, 435.515, 28.5558, 0.305", "288.488, 434.894, 28.8109, 0.2796", "289.014, 433.899, 29.08, 0.2796", "289.705, 432.987, 29.0914, 0.305", "290.544, 432.366, 28.0532, 0.305", "291.403, 431.786, 26.8671, 0.305", "292.244, 431.069, 26.4684, 0.305", "292.673, 430.066, 26.4667, 0.3304", "292.333, 429.033, 26.6031, 0.356", "293.032, 428.343, 26.4676, 0.3814", "294.113, 428.688, 26.397, 0.3814", "294.594, 429.725, 26.388, 0.4068", "294.67, 430.664, 25.1101, 0.4322", "294.612, 431.571, 23.408, 0.4068", "294.638, 432.37, 21.411, 0.4068", "294.673, 433.161, 19.3886, 0.4068" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "288.239, 435.515, 28.5558, 0.305", "287.409, 434.417, 28.569, 0.5338", "287.057, 433.446, 28.0865, 0.5338", "286.864, 432.339, 27.666, 0.5084", "286.205, 431.471, 27.4022, 0.6102", "285.354, 430.733, 26.9735, 0.6864", "284.363, 430.524, 25.8014, 0.7626", "283.407, 430.123, 26.5894, 0.7372", "282.908, 429.253, 27.6928, 0.7118", "282.218, 428.349, 27.4761, 0.6864", "281.435, 427.541, 27.3174, 0.661", "280.759, 426.699, 28.0801, 0.6356", "280.099, 425.822, 28.282, 0.6356", "279.559, 424.893, 28.8252, 0.6864", "278.61, 424.41, 28.9139, 0.7626", "277.926, 423.579, 28.077, 0.8136", "277.502, 422.538, 27.862, 0.839", "277.497, 421.451, 27.7886, 0.8136", "277.699, 420.391, 28.5536, 0.788", "277.68, 419.253, 28.7442, 0.7372", "277.386, 418.372, 29.7581, 0.7118", "277.105, 417.555, 30.9882, 0.6864", "276.587, 416.669, 31.0265, 0.7118", "275.792, 415.892, 30.4825, 0.7372", "275.236, 414.921, 30.217, 0.6864", "275.014, 413.815, 30.0314, 0.6102", "274.766, 412.711, 30.235, 0.5592", "274.25, 411.711, 30.0283, 0.6102", "273.646, 410.81, 30.7535, 0.6864", "272.764, 410.159, 30.3825, 0.6864", "272.17, 409.469, 31.8237, 0.6864", "271.13, 409.064, 32.4321, 0.6356", "270.164, 408.556, 32.4803, 0.6102", "269.58, 407.771, 32.8202, 0.5338", "269.345, 406.758, 32.8252, 0.5084", "268.424, 406.223, 32.1401, 0.5338", "267.586, 405.562, 31.3569, 0.5848", "266.513, 405.639, 31.472, 0.6102", "265.743, 404.99, 32.4439, 0.6102", "264.677, 404.918, 33.2136, 0.6102", "263.776, 404.803, 34.2871, 0.5338", "262.904, 404.404, 33.2889, 0.4322" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "298.126, 424.996, 40.32, 0.4322", "298.702, 425.044, 37.8568, 0.4322", "299.268, 425.091, 35.4276, 0.4576", "300.023, 425.234, 35.5841, 0.5338", "300.536, 425.282, 37.9966, 0.5592", "301.383, 424.998, 39.5702, 0.5592", "302.478, 424.969, 40.1948, 0.483", "303.51, 424.907, 40.1055, 0.4068", "304.433, 424.315, 39.4167, 0.356", "305.467, 423.998, 39.6922, 0.3814", "306.315, 424.523, 39.8205, 0.4576", "307.266, 424.646, 39.4481, 0.4576", "307.761, 425.107, 37.2543, 0.4322", "308.531, 425.598, 35.9008, 0.4322", "308.577, 425.693, 37.8722, 0.5338", "309.454, 425.704, 39.5867, 0.6356", "310.54, 425.819, 40.2184, 0.661", "311.634, 425.91, 39.4453, 0.5848", "312.695, 426.033, 38.6159, 0.483", "313.728, 425.99, 38.7089, 0.4068", "314.526, 425.186, 38.6865, 0.4322", "315.254, 424.322, 38.3816, 0.5848", "316.165, 423.9, 37.984, 0.7626", "317.187, 423.993, 36.769, 0.8898", "318.265, 424.31, 37.2422, 0.8898", "319.328, 424.327, 38.26, 0.839", "320.432, 424.315, 38.4087, 0.788", "321.354, 424.551, 37.1988, 0.7372", "322.367, 424.592, 36.7206, 0.6864", "323.464, 424.766, 37.3265, 0.661", "324.467, 424.947, 36.2723, 0.6864", "325.513, 424.7, 37.1722, 0.788", "326.629, 424.553, 37.1759, 0.8136", "327.618, 424.013, 36.7282, 0.7372", "328.441, 423.451, 35.5634, 0.5848", "329.173, 422.747, 34.8398, 0.5338", "330.185, 422.755, 35.4236, 0.5592", "331.101, 423.286, 36.4314, 0.6102", "331.914, 423.926, 36.9902, 0.5848", "332.524, 424.401, 35.9719, 0.6102", "333.398, 424.629, 37.3234, 0.6102", "334.49, 424.788, 37.4772, 0.661", "335.587, 424.663, 36.813, 0.6864", "336.612, 424.639, 35.637, 0.7626", "337.688, 424.835, 35.1842, 0.8136", "338.808, 424.997, 35.5838, 0.788", "339.939, 425.02, 35.4777, 0.7118", "341.05, 424.872, 34.974, 0.5848", "342.172, 424.756, 34.5402, 0.5338", "343.311, 424.691, 34.3879, 0.5592", "344.39, 424.486, 33.7235, 0.661", "345.483, 424.514, 34.0127, 0.7118", "346.538, 424.908, 33.9668, 0.6356", "347.036, 425.585, 32.2546, 0.5338", "347.909, 426.195, 31.4171, 0.4576", "349.038, 426.262, 31.2057, 0.4576", "350.022, 425.738, 30.9142, 0.4322", "350.936, 425.371, 30.525, 0.4068", "351.646, 426.089, 30.3696, 0.4576", "351.961, 427.17, 30.7395, 0.5592", "352.148, 428.287, 30.7339, 0.6864", "352.201, 429.324, 29.703, 0.7118", "352.341, 430.425, 29.6472, 0.6864", "353.038, 431.288, 29.96, 0.6356" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "298.126, 424.996, 40.32, 0.4322", "298.145, 423.623, 41.6142, 0.6356", "297.924, 422.551, 41.0631, 0.8136", "298.374, 421.541, 40.3925, 0.966", "298.59, 420.537, 39.3109, 1.0424", "298.974, 419.556, 38.5518, 1.0168", "299.317, 418.493, 38.3505, 0.9152", "299.633, 417.4, 38.1248, 0.788", "299.996, 416.324, 38.4003, 0.8136", "300.599, 415.36, 38.3734, 0.8898", "301.118, 414.398, 39.02, 0.9914", "301.968, 413.72, 39.8846, 0.9406", "302.676, 412.888, 40.6081, 0.8898", "303.189, 411.889, 40.684, 0.8136", "303.53, 410.821, 40.1792, 0.7118", "303.732, 409.781, 40.88, 0.5592" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "277.059, 436.465, 44.7384, 0.661", "276.761, 435.981, 44.7686, 0.4576", "276.51, 434.929, 44.3626, 0.483", "276.42, 433.856, 43.4487, 0.5084", "275.883, 432.967, 43.0035, 0.5084", "275.21, 432.667, 44.4853, 0.5592", "274.285, 432.131, 43.5968, 0.6102", "273.785, 431.487, 44.7222, 0.6356", "273.312, 430.716, 44.7082, 0.6356", "272.899, 429.678, 44.6496, 0.5848", "272.091, 428.897, 44.6768, 0.6356", "271.555, 428.061, 43.5411, 0.6356", "271.164, 427.047, 43.7654, 0.661", "271.174, 425.911, 43.8894, 0.5848", "270.903, 424.866, 43.2754, 0.6102", "270.559, 423.822, 43.0864, 0.661", "269.707, 423.153, 43.036, 0.7118", "268.977, 422.375, 43.8561, 0.7372", "268.262, 421.591, 42.9489, 0.7372", "267.802, 420.809, 41.3465, 0.7626", "267.054, 420.045, 41.7379, 0.7372", "266.785, 419.005, 41.5416, 0.6864", "266.567, 417.926, 42.2657, 0.6102", "266.204, 416.918, 43.0758, 0.5592", "265.437, 416.208, 42.5001, 0.483", "265.431, 415.224, 41.4504, 0.5084", "265.059, 414.147, 41.6598, 0.5338", "264.44, 413.236, 41.5999, 0.661", "263.629, 412.475, 41.2014, 0.6864", "262.898, 411.623, 40.7918, 0.6864", "262.095, 410.892, 39.998, 0.5848", "261.468, 409.997, 40.1332, 0.483" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "277.059, 436.465, 44.7384, 0.661", "277.401, 435.927, 47.2198, 0.4322", "277.728, 435.413, 49.5905, 0.3814", "277.939, 434.562, 50.68, 0.2796", "277.992, 433.422, 50.68, 0.2796", "277.838, 432.297, 50.68, 0.305", "277.082, 431.573, 50.68, 0.356", "276.146, 430.929, 50.68, 0.356", "275.163, 430.354, 50.68, 0.3304", "274.113, 429.901, 50.68, 0.305", "273.001, 429.657, 50.68, 0.3304", "271.891, 429.381, 50.68, 0.3304" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "284.068, 447.088, 39.48, 0.3304", "284.461, 447.407, 42.0255, 0.356", "284.85, 447.723, 44.5427, 0.2796", "285.24, 448.037, 47.0599, 0.356", "285.629, 448.353, 49.5771, 0.5084", "285.556, 449.068, 50.8844, 0.6356", "285.618, 450.122, 50.2634, 0.6356", "285.482, 451.234, 50.206, 0.5338", "286.259, 451.986, 50.4554, 0.4068", "286.836, 452.927, 50.7136, 0.3304", "287.318, 453.78, 50.6696, 0.305", "287.909, 454.59, 51.6326, 0.3304", "288.166, 455.567, 50.8483, 0.356", "287.995, 456.617, 49.9139, 0.4322", "287.977, 457.632, 51.0306, 0.5084", "288.228, 458.673, 51.8017, 0.6102", "288.659, 459.68, 51.1823, 0.6356", "289.319, 460.507, 50.2524, 0.6102", "289.811, 461.452, 50.3166, 0.5592", "290.702, 461.978, 51.088, 0.5084", "291.807, 461.864, 50.7038, 0.4576", "292.918, 461.761, 51.0068, 0.3814", "293.751, 462.469, 51.0376, 0.356", "293.932, 463.536, 51.3584, 0.4068", "294.658, 464.338, 50.6635, 0.483", "295.568, 464.9, 51.1986, 0.5338", "296.521, 465.15, 52.4213, 0.5084", "297.172, 465.623, 53.9812, 0.5592", "297.332, 466.734, 53.8322, 0.5848", "297.491, 467.801, 54.5765, 0.6356", "298.272, 468.5, 54.371, 0.5084", "299.357, 468.625, 53.7684, 0.4068", "299.77, 469.268, 54.6454, 0.3304", "299.301, 470.186, 55.5794, 0.4322", "299.557, 471.122, 56.4438, 0.5592", "300.229, 471.925, 57.2897, 0.6102", "300.885, 472.712, 56.6359, 0.5338", "301.763, 473.164, 57.1113, 0.4068", "301.678, 473.489, 59.5638, 0.3814", "301.859, 474.412, 58.48, 0.4322", "302.388, 475.254, 58.1336, 0.5592", "302.755, 475.992, 59.9847, 0.6356", "303.259, 476.674, 61.6445, 0.6356", "304.097, 477.365, 61.6745, 0.5338", "304.503, 478.342, 62.3608, 0.3814", "304.653, 479.419, 62.4375, 0.2796", "304.057, 480.344, 62.9476, 0.2542", "304.322, 480.799, 64.5784, 0.2796", "305.173, 481.06, 64.4711, 0.305", "305.456, 481.91, 63.8954, 0.2796", "305.411, 482.425, 65.9784, 0.2542", "306.137, 482.424, 66.4311, 0.2288", "306.399, 483.247, 64.8424, 0.2288", "306.19, 484.283, 64.4319, 0.2288", "306.116, 485.198, 65.8776, 0.2288", "306.093, 485.931, 68.026, 0.2288", "305.996, 486.662, 70.1593, 0.2288", "305.536, 487.315, 72.0275, 0.2288", "304.82, 487.902, 73.6725, 0.2288", "304.104, 488.489, 75.3178, 0.2288", "303.532, 489.163, 77.0493, 0.2288", "303.716, 489.979, 78.5842, 0.2288", "304.231, 490.828, 79.9753, 0.2288", "304.751, 491.74, 81.0471, 0.2288", "305.276, 492.689, 81.942, 0.2288", "305.8, 493.638, 82.8316, 0.2288", "306.325, 494.588, 83.7211, 0.2288", "307.012, 495.46, 84.2716, 0.2288", "307.87, 496.208, 84.3968, 0.2288", "308.767, 496.917, 84.4088, 0.2288", "309.73, 497.529, 84.3226, 0.2288", "310.796, 497.9, 84.0249, 0.2288", "311.892, 498.19, 83.6584, 0.2288", "312.988, 498.481, 83.2919, 0.2288", "314.085, 498.771, 82.9256, 0.2288", "315.181, 499.062, 82.5594, 0.2288", "316.277, 499.353, 82.1929, 0.2288", "317.358, 499.715, 82.0487, 0.2288", "318.318, 500.27, 82.5756, 0.2288", "319.236, 500.882, 83.3126, 0.2288", "320.154, 501.495, 84.0493, 0.2288", "321.072, 502.107, 84.7862, 0.2288", "321.989, 502.72, 85.5232, 0.2288", "322.908, 503.332, 86.2602, 0.2288", "323.825, 503.946, 86.9968, 0.2288", "324.744, 504.559, 87.7335, 0.2288", "325.651, 505.209, 88.338, 0.2288", "326.541, 505.903, 88.7852, 0.2288", "327.427, 506.608, 89.1932, 0.2288", "328.312, 507.312, 89.6006, 0.2288", "329.197, 508.017, 90.0085, 0.2288", "330.218, 508.406, 90.6618, 0.2288", "331.301, 508.55, 91.4718, 0.2288", "332.346, 508.241, 92.1169, 0.2288", "332.886, 507.252, 92.1404, 0.2796", "333.962, 506.932, 92.1738, 0.3304" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "284.068, 447.088, 39.48, 0.3304", "283.958, 447.485, 39.2336, 0.5084", "283.429, 448.312, 38.5174, 0.5338", "282.352, 448.252, 38.2432, 0.5338", "281.322, 448.017, 38.5862, 0.5338", "280.224, 448.267, 38.3718, 0.5338", "279.102, 448.332, 37.9336, 0.5084", "278.335, 448.219, 39.76, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "302.003, 450.495, 32.2, 0.3304", "301.946, 451.143, 34.869, 0.2542", "301.91, 451.978, 36.5859, 0.2288", "301.76, 453.076, 36.96, 0.2288", "301.62, 454.21, 36.96, 0.2542", "301.415, 455.334, 36.96, 0.2796", "301.333, 456.47, 36.96, 0.305", "301.33, 457.614, 36.96, 0.2796", "301.328, 458.758, 36.96, 0.2542", "301.198, 459.89, 36.96, 0.2288", "301.006, 461.018, 36.96, 0.2542", "300.729, 462.127, 36.96, 0.2796", "300.643, 463.253, 37.2257, 0.3304", "300.643, 464.303, 38.2698, 0.3814", "300.643, 465.394, 39.079, 0.4322", "300.643, 466.531, 39.2, 0.483", "300.643, 467.675, 39.2, 0.4576", "300.643, 468.819, 39.2, 0.4322", "300.643, 469.963, 39.2, 0.356", "300.386, 471.026, 39.9011, 0.3814", "299.614, 471.823, 40.3514, 0.483", "299.499, 472.953, 40.7058, 0.5848", "299.499, 474.067, 41.3358, 0.5848", "299.489, 475.183, 41.9261, 0.4576", "299.101, 476.133, 42.0465, 0.3814", "297.987, 476.213, 42.4026, 0.3814", "297.053, 476.81, 42.9848, 0.4068", "296.528, 477.737, 43.4, 0.3814", "296.525, 478.881, 43.4, 0.305", "296.591, 480.018, 43.4, 0.2542", "297.171, 480.711, 43.4, 0.2288", "297.98, 481.149, 43.4, 0.2796", "298.396, 482.194, 43.6265, 0.356", "299.171, 482.954, 44.2033, 0.4576", "300.159, 483.497, 44.5124, 0.4576", "301.116, 484.048, 45.0548, 0.4322", "301.33, 485.046, 45.6389, 0.3814", "301.081, 486.088, 46.5464, 0.3814", "300.891, 487.172, 47.2718, 0.356", "300.872, 488.307, 47.572, 0.3304", "300.872, 489.451, 47.6, 0.305", "300.872, 490.593, 47.7406, 0.305", "300.677, 491.588, 48.9644, 0.2796", "300.425, 492.7, 49.0048, 0.2542", "300.411, 493.841, 49.2134, 0.2542", "300.279, 494.977, 49.28, 0.2796", "300.072, 496.1, 49.28, 0.305", "300.112, 497.244, 49.28, 0.2796", "300.186, 498.386, 49.28, 0.2542", "300.16, 499.522, 49.28, 0.2288", "299.471, 500.411, 49.28, 0.2288", "298.477, 500.897, 49.2876, 0.2288", "298.007, 501.877, 49.7389, 0.2288", "297.588, 502.691, 51.3878, 0.2288", "297.44, 503.706, 52.318, 0.2288", "297.44, 504.821, 52.8368, 0.2288", "297.44, 505.935, 53.3761, 0.2542", "297.36, 507.072, 53.48, 0.2796", "297.246, 508.207, 53.5928, 0.305", "297.211, 509.267, 54.4351, 0.2796", "297.254, 510.33, 55.1468, 0.2796", "297.369, 511.467, 55.1695, 0.2796", "297.498, 512.578, 55.6044, 0.305", "297.552, 513.694, 56.1168, 0.305", "297.566, 514.833, 56.3685, 0.305", "297.93, 515.869, 56.5225, 0.3304", "298.684, 516.716, 56.56, 0.3304", "299.543, 517.472, 56.56, 0.3304", "300.493, 518.095, 56.56, 0.3304", "301.558, 518.463, 56.8333, 0.4068", "302.573, 518.901, 57.4557, 0.5084", "303.398, 519.655, 57.68, 0.5592", "304.212, 520.451, 57.9124, 0.5084", "304.847, 521.394, 57.96, 0.4068", "305.505, 522.33, 57.96, 0.3304", "306.515, 522.841, 57.96, 0.305", "307.304, 523.661, 57.96, 0.305", "308.322, 524.17, 57.96, 0.2796", "309.463, 524.181, 57.96, 0.2796", "310.596, 524.295, 57.68, 0.305" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "302.003, 450.495, 32.2, 0.3304", "302.375, 450.21, 32.2428, 0.4322", "303.253, 449.494, 32.163, 0.5592", "304.352, 449.218, 32.2613, 0.6356", "305.438, 449.026, 31.612, 0.5848", "306.547, 448.848, 31.2827, 0.5084", "307.393, 448.247, 30.8132, 0.5084", "307.862, 447.222, 31.1606, 0.6356", "308.246, 446.173, 30.877, 0.8136", "308.751, 445.662, 28.9654, 0.9152", "309.698, 445.256, 28.0605, 0.8898", "310.749, 444.915, 27.9966, 0.7372", "311.774, 444.612, 28.2391, 0.5848", "312.83, 444.279, 28.523, 0.5338", "313.79, 444.443, 27.4274, 0.5848", "314.559, 444.894, 25.6827, 0.6864", "315.61, 444.741, 25.6256, 0.661", "316.521, 445.065, 26.5714, 0.6102", "317.514, 444.823, 25.9238, 0.5592", "318.043, 443.981, 24.9234, 0.5592", "318.455, 443.044, 23.8244, 0.5592", "318.596, 442.154, 25.1168, 0.5592", "319.531, 441.638, 25.7046, 0.6356", "319.583, 440.511, 25.8586, 0.6864", "319.888, 439.445, 25.9697, 0.6864", "320.7, 438.662, 26.4191, 0.6102", "321.59, 437.957, 26.7313, 0.5848", "322.41, 437.239, 26.5314, 0.6102", "323.169, 436.468, 25.9476, 0.6864", "323.572, 435.543, 25.3876, 0.7372", "324.23, 434.697, 24.8436, 0.7372", "325.002, 433.917, 24.323, 0.661", "326.039, 433.459, 24.6109, 0.5592", "327.099, 433.256, 25.1894, 0.4576", "328.059, 433.177, 26.532, 0.4322", "328.889, 432.538, 26.2693, 0.4576", "329.775, 432.02, 25.3845, 0.483", "330.858, 432.177, 25.5998, 0.5084", "331.925, 432.305, 24.8041, 0.483", "332.831, 431.717, 24.0335, 0.5338", "333.818, 431.191, 24.3676, 0.5592", "334.888, 430.888, 24.7654, 0.6356", "335.896, 430.452, 24.9396, 0.6102", "336.707, 429.931, 24.1394, 0.5848", "337.62, 429.514, 24.5482, 0.5592", "338.659, 429.192, 25.3996, 0.6356", "338.986, 428.248, 24.3628, 0.6864", "339.514, 427.249, 24.3656, 0.6864", "340.374, 426.64, 23.8638, 0.6356", "341.366, 426.388, 24.8749, 0.6356", "342.463, 426.385, 25.0729, 0.6102", "343.435, 426.906, 25.3201, 0.5848", "344.427, 427.028, 24.6053, 0.483", "345.528, 427.092, 24.0439, 0.483", "346.289, 427.398, 25.76, 0.4322" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "262.904, 404.404, 33.2889, 0.4322", "262.149, 403.905, 32.8476, 0.4576", "261.16, 403.361, 32.6334, 0.4322", "260.403, 402.634, 33.2965, 0.4576", "260.152, 401.55, 33.5854, 0.5084", "260.237, 400.416, 33.6431, 0.5848", "259.895, 399.409, 34.2216, 0.5592", "259.03, 398.961, 35.5925, 0.5338", "258.248, 398.494, 36.0545, 0.483", "257.647, 397.805, 34.7732, 0.483", "256.98, 396.931, 34.6671, 0.4068", "255.981, 396.612, 35.5082, 0.3814", "255.895, 395.601, 34.5878, 0.3814", "255.356, 394.657, 34.3426, 0.483", "254.341, 394.852, 33.9282, 0.5084", "253.563, 394.385, 35.3842, 0.5592", "252.691, 393.999, 36.2382, 0.5592", "251.616, 394.289, 36.0923, 0.6356", "250.549, 393.989, 35.9369, 0.6356", "249.423, 393.983, 36.3835, 0.6356", "248.363, 393.943, 36.2082, 0.5848", "247.373, 393.553, 35.6014, 0.5084", "246.494, 392.949, 36.4524, 0.3814", "245.902, 392.163, 35.5242, 0.305", "246.606, 391.688, 36.1654, 0.2796", "246.119, 390.769, 37.1655, 0.305", "245.444, 390.325, 38.9539, 0.2796", "244.75, 389.856, 39.9146, 0.2796", "244.063, 389.223, 38.6686, 0.3304", "243.068, 389.402, 37.5161, 0.4322", "242.023, 389.295, 37.2282, 0.483", "241.104, 388.789, 37.5455, 0.4576", "239.995, 388.809, 38.0061, 0.4068", "238.988, 388.45, 37.2224, 0.3814", "237.895, 388.203, 37.2394, 0.356", "236.852, 388.077, 38.0856, 0.3304", "235.848, 388.613, 38.2365, 0.3304", "234.836, 389.111, 37.9476, 0.3814", "233.726, 389.237, 37.9411, 0.4322", "232.64, 389.344, 38.351, 0.4322", "231.556, 389.677, 38.3667, 0.3814", "230.483, 390.056, 38.407, 0.3304", "229.459, 390.535, 38.0164, 0.305", "228.406, 390.685, 39.0186, 0.305", "227.299, 390.78, 39.6687, 0.305", "226.236, 390.905, 39.5909, 0.305", "225.242, 391.016, 39.2563, 0.305", "224.174, 391.19, 40.1313, 0.3304", "223.142, 390.852, 39.8202, 0.4068", "222.549, 390.126, 41.2101, 0.5338", "221.704, 389.387, 41.5447, 0.5848", "220.768, 388.831, 40.915, 0.5338", "219.859, 388.185, 41.3022, 0.4068", "218.994, 387.504, 41.9804, 0.3814", "217.965, 387.263, 42.9576, 0.4322", "217.214, 386.575, 42.2013, 0.5338", "216.639, 385.776, 43.2975, 0.5338", "215.889, 384.941, 43.1906, 0.5084", "214.979, 384.266, 43.1528, 0.4322", "214.242, 383.557, 43.608, 0.4576", "213.57, 382.94, 43.6038, 0.5084", "213.083, 382.069, 42.3836, 0.5592", "212.515, 381.087, 42.4494, 0.6102", "212.099, 380.159, 43.6086, 0.6356", "211.885, 379.214, 42.1484, 0.7118", "211.648, 378.219, 42.04, 0.6864", "211.376, 377.335, 42.8672, 0.661", "210.709, 376.43, 42.4547, 0.6102", "210.03, 375.519, 42.1534, 0.5848", "209.725, 374.467, 42.3116, 0.5338", "209.473, 373.374, 41.9784, 0.5084", "209.145, 372.345, 42.84, 0.5338", "208.746, 371.276, 42.8277, 0.6356", "208.046, 370.379, 42.6891, 0.7372", "207.298, 369.534, 43.1362, 0.7626", "206.454, 368.8, 43.3359, 0.661", "205.753, 368.13, 43.6481, 0.483", "205.226, 367.243, 44.4321, 0.356", "204.485, 366.488, 45.2819, 0.3304", "203.999, 365.667, 46.4226, 0.3304", "203.297, 365.122, 45.3776, 0.3304", "202.639, 365.503, 43.5408, 0.2796", "201.916, 366.309, 43.4, 0.2796" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "262.904, 404.404, 33.2889, 0.4322", "262.356, 404.467, 31.67, 0.305", "261.427, 404.323, 30.4772, 0.356", "260.344, 404.044, 29.9138, 0.3814", "259.273, 403.869, 29.0466, 0.356", "258.519, 404.016, 30.373, 0.3304", "258.224, 404.672, 29.4619, 0.2796", "257.465, 404.924, 31.3527, 0.305", "256.834, 404.376, 32.3954, 0.356", "256.254, 403.743, 30.931, 0.4322", "255.192, 403.552, 31.4266, 0.4068", "254.374, 403.208, 33.1248, 0.3304", "253.35, 403.165, 33.1013, 0.2542", "252.263, 403.373, 32.4708, 0.2288", "251.176, 403.261, 33.0445, 0.2288", "250.554, 402.658, 34.1191, 0.2542", "249.679, 402.501, 35.2265, 0.2796", "249.202, 402.353, 33.4958, 0.3304", "248.369, 402.179, 31.7192, 0.356", "247.427, 402.344, 30.7499, 0.4068", "246.327, 402.28, 30.6275, 0.4322", "245.316, 402.59, 29.7968, 0.4322", "244.229, 402.92, 29.8802, 0.3814", "243.258, 402.392, 29.4134, 0.305", "242.308, 401.917, 29.4347, 0.2542", "241.249, 401.894, 29.3448, 0.2288", "240.357, 401.782, 28.9514, 0.2288", "239.39, 402.092, 27.9258, 0.2542", "239.041, 401.642, 29.6408, 0.305", "238.14, 401.031, 28.877, 0.356", "237.252, 400.36, 29.1486, 0.356", "236.425, 399.668, 28.5953, 0.3304", "235.356, 399.366, 28.9108, 0.356", "234.233, 399.267, 29.3787, 0.4322", "233.128, 399.178, 30.0356, 0.5084", "232.055, 398.828, 30.0555, 0.5084", "231.072, 398.341, 30.7588, 0.4576", "230.151, 397.682, 30.8456, 0.4068", "229.22, 397.664, 30.6118, 0.3814", "228.15, 397.587, 30.2705, 0.3814", "227.111, 397.137, 30.6331, 0.3814", "226.037, 396.839, 30.9851, 0.356", "225.182, 396.351, 30.2193, 0.356", "224.389, 395.644, 30.2285, 0.3814", "223.423, 395.252, 29.4, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "353.038, 431.288, 29.96, 0.6356", "353.475, 431.081, 29.0772, 0.5848", "354.439, 430.807, 27.8925, 0.6356", "355.514, 430.994, 27.4842, 0.7118", "356.48, 431.556, 27.0757, 0.6864", "357.414, 432.096, 27.263, 0.661", "358.114, 432.88, 27.7928, 0.5848", "358.931, 433.646, 27.8807, 0.5848", "359.97, 434.018, 27.1914, 0.5592", "361.01, 434.476, 26.8881, 0.5592", "362.14, 434.604, 27.1538, 0.5084", "363.25, 434.459, 26.6165, 0.4576", "364.215, 433.853, 26.836, 0.4322", "365.205, 433.329, 27.0794, 0.4322", "366.293, 433.123, 26.6118, 0.4576", "367.119, 432.435, 25.9994, 0.4322", "367.77, 431.675, 24.8651, 0.4068", "368.728, 431.153, 24.7545, 0.4068", "369.828, 430.896, 25.1244, 0.4322", "370.869, 430.732, 26.1433, 0.4576", "371.915, 430.395, 26.7422, 0.4576", "372.99, 430.112, 27.3888, 0.4322", "374.111, 430.258, 27.1936, 0.4068", "375.231, 430.135, 26.9713, 0.356", "376.239, 430.008, 28.2271, 0.3304", "377.311, 429.767, 28.9612, 0.2796", "378.442, 429.675, 29.2564, 0.305", "379.575, 429.565, 29.2642, 0.3304", "380.625, 429.247, 28.66, 0.4068", "381.49, 429.543, 29.1119, 0.3814", "382.56, 429.796, 28.9551, 0.3814", "383.653, 429.562, 29.484, 0.356", "384.718, 429.154, 29.5392, 0.4068", "385.645, 428.884, 28.3086, 0.4322", "386.738, 428.716, 28.0823, 0.4576", "387.801, 428.434, 27.48, 0.483", "388.731, 427.799, 27.9616, 0.5338", "389.643, 427.109, 28.007, 0.5592", "390.528, 426.471, 27.5094, 0.5084", "391.182, 425.744, 27.1256, 0.3814", "391.587, 424.718, 27.8614, 0.3304", "392.506, 424.195, 27.44, 0.3814" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "353.038, 431.288, 29.96, 0.6356", "353.273, 431.691, 29.5078, 0.5084", "354.195, 432.347, 29.43, 0.5592", "355.291, 432.646, 29.4647, 0.5592", "356.403, 432.744, 29.2984, 0.5592", "357.483, 432.672, 30.1395, 0.6102", "358.504, 432.85, 31.0108, 0.6356", "359.465, 433.33, 31.6274, 0.5848", "360.444, 433.819, 32.037, 0.483", "360.426, 434.435, 30.3005, 0.4068", "361.006, 434.673, 28.2397, 0.4068", "361.694, 434.781, 28.597, 0.4576", "362.3, 434.909, 29.9846, 0.5338", "363.202, 435.425, 30.2369, 0.6102", "363.808, 436.287, 30.3758, 0.6356", "363.797, 437.323, 31.4216, 0.6356", "363.016, 437.784, 32.7384, 0.6102", "362.44, 438.562, 34.1015, 0.6102", "361.862, 439.524, 34.3409, 0.6102", "362.289, 440.551, 33.971, 0.6102", "363.132, 441.169, 33.6636, 0.6102", "363.91, 441.676, 35.2772, 0.5592", "364.268, 442.392, 36.988, 0.483", "364.902, 443.051, 38.4317, 0.4068", "365.721, 443.791, 38.1424, 0.4576", "366.683, 444.354, 37.627, 0.5592", "367.671, 444.815, 37.3534, 0.661", "368.368, 445.702, 37.52, 0.6102" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "303.732, 409.781, 40.88, 0.5592", "303.845, 410.19, 41.5204, 0.305", "304.104, 411.131, 42.9862, 0.3304", "304.363, 412.07, 44.4531, 0.4068", "304.622, 413.009, 45.92, 0.5084", "304.541, 412.919, 47.749, 0.6864", "304.842, 413.947, 48.6368, 0.7372", "305.078, 415.041, 49.072, 0.788", "305.967, 415.494, 47.9142, 0.839", "307.003, 415.854, 48.6758, 0.8898", "308.086, 416.089, 49.1826, 0.839", "309.024, 416.185, 50.64, 0.6864", "309.263, 416.139, 52.9043, 0.5084", "308.667, 415.603, 54.7476, 0.4322", "308.023, 415.479, 56.6003, 0.4322", "307.479, 415.286, 58.8538, 0.483", "306.451, 415.01, 59.4843, 0.483", "305.674, 414.726, 60.2566, 0.5338", "305.647, 414.301, 62.3734, 0.5592", "304.829, 414.547, 63.2419, 0.5848", "303.747, 414.888, 63.602, 0.5848", "303.39, 415.237, 66.008, 0.5338", "302.692, 415.005, 68.1215, 0.5338", "302.627, 414.944, 70.7252, 0.4322", "303.07, 414.296, 71.4918, 0.3814", "303.94, 413.731, 70.826, 0.2796", "305.01, 413.555, 71.3905, 0.2542", "305.594, 412.716, 70.8809, 0.2288", "306.235, 411.95, 70.6252, 0.2288", "307.297, 411.959, 71.2953, 0.2542", "307.725, 412.378, 73.1788, 0.3304", "307.439, 412.94, 75.4712, 0.4068", "307.202, 413.724, 77.0053, 0.4322", "307.929, 414.351, 78.4398, 0.4068", "308.552, 414.787, 80.4633, 0.4322", "308.962, 414.548, 82.6664, 0.5338", "308.753, 414.738, 85.2757, 0.5848", "308.048, 413.682, 84.7801, 0.483", "308.254, 412.839, 83.9866, 0.4322", "309.225, 412.875, 83.2325, 0.3304", "309.592, 412.325, 85.2194, 0.2796", "310.272, 411.77, 86.3808, 0.2542", "310.802, 410.953, 87.6336, 0.305", "310.931, 410.068, 89.1932, 0.356", "311.779, 409.418, 89.3824, 0.3814", "312.463, 409.161, 91.3256, 0.356", "312.798, 408.224, 92.4185, 0.3304", "312.926, 407.16, 93.3918, 0.305", "313.483, 406.581, 94.878, 0.356", "313.7, 405.626, 95.3884, 0.4322", "313.774, 404.494, 95.0914, 0.483", "313.701, 403.357, 95.0345, 0.4322", "314.297, 402.543, 94.0696, 0.3304", "314.471, 401.507, 93.0961, 0.2542", "314.375, 400.421, 92.2575, 0.2288", "314.468, 399.325, 91.4967, 0.2542", "314.714, 398.226, 91.0, 0.2796" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "303.732, 409.781, 40.88, 0.5592", "303.576, 409.343, 41.0906, 0.4068", "303.139, 408.463, 40.0884, 0.4576", "302.495, 407.624, 40.2931, 0.5848", "302.645, 406.564, 40.4197, 0.661", "303.077, 405.539, 40.8411, 0.7118", "303.654, 404.607, 41.3246, 0.839", "304.197, 403.612, 41.265, 0.9914", "304.662, 402.587, 41.6872, 1.0678", "304.766, 401.477, 42.1744, 0.9914", "305.33, 400.514, 42.0353, 0.8644", "305.793, 399.483, 42.278, 0.788", "305.877, 398.362, 42.1943, 0.7626", "306.568, 397.504, 41.5741, 0.7626", "307.036, 396.529, 42.0658, 0.7372", "307.546, 395.715, 42.5835, 0.661", "307.85, 394.808, 43.4241, 0.5592", "308.346, 393.917, 42.84, 0.483" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "261.468, 409.997, 40.1332, 0.483", "261.037, 409.792, 40.9802, 0.2542", "260.181, 409.407, 42.579, 0.2542", "259.578, 408.691, 43.4, 0.305", "259.227, 407.603, 43.4, 0.356", "258.635, 406.638, 43.4, 0.4068", "257.768, 405.915, 43.4, 0.4322", "257.019, 405.078, 43.4, 0.5084", "256.594, 404.028, 43.4, 0.5084", "256.083, 403.012, 43.4, 0.483", "255.84, 401.914, 43.4, 0.356", "255.216, 401.008, 43.4, 0.2796", "254.673, 400.005, 43.4, 0.2288", "254.463, 398.882, 43.4, 0.2542", "253.739, 397.998, 43.4, 0.2796" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "261.468, 409.997, 40.1332, 0.483", "261.462, 409.446, 41.7631, 0.305", "261.604, 408.406, 41.1477, 0.3304", "261.713, 407.398, 39.8563, 0.356", "261.246, 406.376, 39.76, 0.4322", "260.856, 405.301, 39.76, 0.483", "259.849, 404.793, 39.76, 0.5338", "259.052, 403.974, 39.76, 0.483", "258.07, 403.387, 39.76, 0.3814", "257.608, 402.344, 39.76, 0.3304", "257.366, 401.228, 39.76, 0.4068", "256.939, 400.167, 39.76, 0.5848", "256.433, 399.151, 39.758, 0.6864", "255.603, 398.376, 39.6301, 0.661", "254.96, 397.506, 38.92, 0.5848", "254.547, 396.445, 38.894, 0.5592", "253.89, 395.521, 38.6946, 0.6102", "253.175, 394.673, 38.36, 0.6356", "252.77, 393.603, 38.36, 0.6102", "252.173, 392.687, 38.36, 0.5084", "251.145, 392.215, 38.36, 0.4322", "250.019, 392.049, 38.36, 0.356", "248.882, 392.088, 38.2088, 0.3304", "247.797, 392.146, 37.4629, 0.2796", "246.881, 391.786, 36.68, 0.2542", "246.074, 390.977, 36.68, 0.2288", "245.041, 390.676, 36.68, 0.2542", "244.238, 390.087, 36.68, 0.2796", "244.13, 389.079, 37.7384, 0.305", "244.13, 387.951, 38.061, 0.2796", "243.942, 386.824, 38.08, 0.2796", "243.306, 385.885, 38.2511, 0.305", "242.796, 384.866, 38.4689, 0.356", "242.361, 383.81, 38.6366, 0.3814", "241.997, 382.731, 38.8998, 0.356", "241.616, 381.652, 38.9869, 0.3304", "241.057, 380.675, 39.2, 0.2796", "240.071, 380.111, 39.2, 0.2796", "238.96, 379.852, 39.2, 0.2796", "237.939, 379.357, 39.2, 0.305", "237.151, 378.534, 39.2, 0.305", "236.428, 377.729, 38.8321, 0.305", "235.45, 377.339, 37.9271, 0.305", "234.327, 377.167, 37.8, 0.3304", "233.231, 376.956, 37.8, 0.3814", "232.221, 376.52, 37.3682, 0.4322", "231.339, 375.964, 36.7186, 0.4068", "230.571, 375.115, 36.68, 0.356", "229.704, 374.376, 36.68, 0.305", "228.675, 373.938, 36.4314, 0.3304", "227.558, 373.731, 36.1782, 0.3814", "226.517, 373.302, 36.2835, 0.483", "225.631, 372.591, 36.3863, 0.5338", "224.967, 371.671, 36.4, 0.5084", "224.115, 370.937, 36.4, 0.3814", "223.064, 370.507, 36.4, 0.2796", "222.286, 369.73, 36.1976, 0.2288", "221.242, 369.48, 35.8943, 0.2288", "220.13, 369.227, 35.84, 0.2796", "219.19, 368.597, 35.84, 0.356" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "271.891, 429.381, 50.68, 0.3304", "271.085, 428.735, 50.68, 0.4068", "270.786, 427.7, 50.68, 0.4068", "270.785, 426.556, 50.68, 0.4068", "270.614, 425.434, 50.68, 0.4322", "270.209, 424.369, 50.68, 0.4576", "269.616, 423.399, 50.8082, 0.5338", "269.144, 422.38, 51.1983, 0.5848", "268.196, 421.899, 51.4858, 0.6102", "267.346, 421.163, 51.6995, 0.5848", "266.587, 420.39, 52.5722, 0.5084", "266.552, 419.262, 52.6389, 0.3814", "266.552, 418.118, 52.64, 0.2796", "266.55, 416.974, 52.64, 0.2288", "266.311, 415.857, 52.64, 0.2288", "266.255, 415.418, 53.2804, 0.2796", "266.128, 414.443, 54.7084, 0.4068", "266.002, 413.467, 56.1366, 0.5848", "265.897, 412.454, 57.332, 0.6864", "265.866, 411.323, 57.68, 0.6864", "265.866, 410.179, 57.68, 0.5848", "265.834, 409.036, 57.68, 0.483", "265.751, 407.897, 57.68, 0.356", "265.751, 406.753, 57.68, 0.2796", "265.751, 405.609, 57.68, 0.2542", "265.702, 404.468, 57.68, 0.2796", "265.561, 403.334, 57.68, 0.356", "265.52, 402.191, 57.68, 0.4322", "265.447, 401.1, 58.0826, 0.5084", "265.209, 400.089, 59.1758, 0.483", "265.065, 398.979, 59.684, 0.4068", "265.065, 397.842, 59.92, 0.3304", "265.065, 396.698, 59.92, 0.3814", "265.065, 395.554, 59.92, 0.4576", "265.065, 394.434, 60.2806, 0.5848", "265.065, 393.339, 61.0865, 0.5592", "265.065, 392.235, 61.8187, 0.5338", "265.065, 391.11, 62.16, 0.4068", "265.065, 389.991, 62.5887, 0.356", "265.065, 388.866, 62.9614, 0.305", "265.065, 387.722, 63.0112, 0.3304", "265.139, 386.643, 63.7123, 0.3814", "265.296, 385.546, 64.2499, 0.4322", "265.391, 384.431, 64.7816, 0.4322", "265.408, 383.301, 65.1647, 0.4068", "265.56, 382.173, 65.3139, 0.356", "266.235, 381.359, 65.9322, 0.3304", "266.618, 380.408, 66.9852, 0.2796", "266.891, 379.337, 67.6822, 0.2542", "267.14, 378.224, 67.76, 0.2288", "267.41, 377.112, 67.76, 0.2288", "267.464, 375.972, 67.76, 0.2288", "267.467, 374.829, 67.8684, 0.2288", "267.467, 373.769, 68.8632, 0.2288", "267.467, 372.636, 69.1418, 0.2542", "267.467, 371.492, 69.16, 0.305", "267.467, 370.348, 69.16, 0.356", "267.467, 369.204, 69.16, 0.356", "267.818, 368.122, 69.16, 0.305", "268.258, 367.066, 69.16, 0.2542", "268.714, 366.017, 69.16, 0.2288", "269.298, 365.033, 69.16, 0.2288", "269.977, 364.113, 69.16, 0.2288", "270.416, 363.058, 69.16, 0.2288", "270.554, 361.923, 69.16, 0.2288", "270.556, 360.779, 69.16, 0.2288", "270.556, 359.635, 69.16, 0.2288", "270.556, 358.491, 69.16, 0.2288", "270.556, 357.347, 69.16, 0.2288", "270.556, 356.203, 69.16, 0.2288", "270.556, 355.059, 69.16, 0.2288", "270.556, 353.915, 69.16, 0.2288", "270.27, 352.809, 69.16, 0.2288", "270.213, 351.666, 69.16, 0.2542" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "271.891, 429.381, 50.68, 0.3304", "271.088, 430.059, 52.2256, 0.2288", "270.34, 430.737, 53.48, 0.2288", "269.594, 431.602, 53.48, 0.2288", "268.702, 432.315, 53.48, 0.2288", "267.762, 432.943, 53.48, 0.2288", "267.22, 433.947, 53.48, 0.2288", "266.894, 435.043, 53.48, 0.2542", "266.533, 436.107, 53.48, 0.2796", "265.703, 436.879, 53.48, 0.305", "264.687, 437.405, 53.4828, 0.3304", "263.639, 437.858, 53.5564, 0.3814", "262.555, 438.191, 53.76, 0.4576", "261.422, 438.349, 53.76, 0.4576", "260.369, 438.694, 53.76, 0.4068", "259.445, 439.345, 53.879, 0.305", "258.477, 439.914, 54.3122, 0.2542", "257.596, 440.621, 54.6, 0.2288", "256.643, 441.236, 54.6, 0.2288", "255.549, 441.465, 54.6, 0.2288", "254.407, 441.531, 54.6, 0.305", "253.332, 441.863, 54.6, 0.3814" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "278.335, 448.219, 39.76, 0.4576", "278.491, 449.37, 40.1626, 0.4576", "278.038, 450.346, 40.8388, 0.5084", "277.901, 451.322, 41.5649, 0.483", "278.011, 452.436, 41.298, 0.5338", "278.337, 453.378, 42.3077, 0.5084", "279.237, 453.882, 42.7613, 0.5338", "280.353, 453.876, 42.5916, 0.5084", "281.309, 454.322, 43.1609, 0.5592", "281.22, 455.242, 43.2373, 0.5592", "280.739, 456.146, 42.1005, 0.5592", "280.513, 457.058, 43.1141, 0.5592", "280.826, 458.107, 43.0772, 0.6102", "281.318, 459.065, 43.2104, 0.6356", "281.295, 460.126, 43.6293, 0.6356", "281.378, 461.154, 44.6748, 0.6102", "281.746, 462.091, 45.9701, 0.6102", "281.998, 463.117, 46.9795, 0.5592", "282.809, 463.892, 46.7911, 0.4576" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "278.335, 448.219, 39.76, 0.4576", "277.39, 448.219, 40.1475, 0.5338", "276.285, 448.121, 39.5727, 0.5848", "275.209, 447.855, 39.5391, 0.6356", "274.43, 447.162, 40.4074, 0.661", "273.832, 446.365, 41.6349, 0.5848", "273.732, 445.771, 43.7385, 0.5084", "273.797, 444.711, 43.4, 0.483" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "308.346, 393.917, 42.84, 0.483", "308.603, 393.949, 40.3486, 0.5848", "308.89, 393.539, 39.1793, 0.6102", "309.452, 392.684, 40.0156, 0.6864", "310.254, 391.909, 40.5364, 0.8136", "311.072, 391.247, 39.7334, 0.9406", "312.114, 390.794, 39.4352, 0.9406", "313.165, 390.374, 39.076, 0.8136", "314.18, 389.966, 38.3158, 0.661", "315.276, 389.76, 37.7504, 0.5592", "316.245, 389.352, 37.2977, 0.5848", "316.449, 388.465, 36.0867, 0.6864", "316.11, 387.406, 35.5146, 0.7372", "315.778, 386.338, 35.5004, 0.7372", "315.515, 385.233, 35.597, 0.6102", "316.189, 384.536, 35.4752, 0.5338", "316.864, 383.651, 35.0087, 0.4322", "317.412, 382.766, 34.512, 0.5084", "316.758, 381.926, 34.2672, 0.6356", "316.084, 381.138, 33.4482, 0.7626", "315.418, 380.235, 33.0688, 0.7372", "314.782, 379.301, 32.7583, 0.661", "314.814, 378.24, 32.489, 0.5848", "315.189, 377.161, 32.4075, 0.5338", "315.475, 376.12, 33.1761, 0.4576", "315.277, 375.116, 32.2879, 0.4576", "314.209, 374.88, 31.5899, 0.5084", "313.116, 374.65, 31.8931, 0.5592", "312.214, 373.97, 31.5857, 0.5338", "311.304, 373.376, 30.7518, 0.5084", "310.578, 372.613, 30.4769, 0.5592", "310.581, 371.547, 30.5102, 0.6102", "310.716, 370.419, 30.5094, 0.6102", "310.581, 369.293, 30.7401, 0.5338", "310.423, 368.163, 30.7518, 0.483", "310.707, 367.081, 30.6191, 0.4576", "311.242, 366.073, 30.5318, 0.483", "311.455, 364.97, 30.8602, 0.5084", "311.843, 363.977, 30.1672, 0.483", "311.978, 363.114, 28.5888, 0.4068", "311.925, 362.131, 27.3148, 0.3814", "312.287, 361.194, 27.5405, 0.4576", "312.845, 360.291, 27.9916, 0.5592", "313.248, 359.42, 26.6034, 0.5848", "313.898, 358.736, 25.1936, 0.5592", "314.836, 358.127, 25.5475, 0.5338", "315.663, 357.396, 25.8084, 0.5338", "316.616, 357.112, 24.8203, 0.5084", "317.7, 357.418, 24.491, 0.5084", "318.709, 357.056, 24.6358, 0.5338", "319.058, 356.025, 25.1322, 0.5592", "319.991, 355.42, 25.1009, 0.5338", "321.062, 355.218, 25.1233, 0.4576", "321.71, 354.491, 25.6127, 0.483", "321.613, 353.382, 25.6161, 0.5084", "321.669, 352.388, 24.4202, 0.5848", "321.951, 351.691, 22.5378, 0.5338", "322.347, 350.703, 23.0731, 0.5084", "322.945, 349.863, 22.8298, 0.4068", "323.093, 349.026, 22.1612, 0.356", "323.603, 348.223, 22.6355, 0.3304", "324.08, 347.255, 22.118, 0.356", "324.048, 346.214, 21.754, 0.356", "323.638, 345.717, 21.56, 0.3304" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "308.346, 393.917, 42.84, 0.483", "308.554, 392.737, 43.2471, 0.6102", "308.612, 391.599, 43.2569, 0.7118", "308.629, 390.46, 43.1368, 0.7626", "308.879, 389.403, 42.3461, 0.7626", "309.328, 388.386, 41.7085, 0.788", "309.948, 387.439, 41.4775, 0.839", "310.86, 386.784, 41.855, 0.9152", "311.813, 386.182, 41.44, 0.9406", "312.702, 385.463, 41.44, 0.9406", "313.572, 384.733, 41.599, 0.9406", "314.517, 384.128, 42.0549, 0.966", "315.386, 383.447, 42.373, 0.9914", "316.138, 382.626, 42.9374, 0.9406", "316.594, 381.628, 43.1362, 0.839", "317.505, 381.15, 42.9125, 0.661", "318.363, 380.457, 42.3422, 0.483" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "253.332, 441.863, 54.6, 0.3814", "252.782, 442.267, 54.6, 0.2796", "251.912, 442.966, 54.6, 0.305", "251.187, 443.786, 54.6, 0.2796", "250.133, 444.23, 54.6, 0.2796", "249.133, 444.667, 55.057, 0.2796", "248.153, 444.902, 56.1879, 0.3304", "247.057, 444.902, 56.9929, 0.3304", "245.939, 444.917, 57.4, 0.3304", "245.055, 445.404, 57.7049, 0.2796", "244.135, 445.896, 57.96, 0.2542", "242.998, 446.012, 57.96, 0.2288", "241.855, 446.046, 57.96, 0.2288", "240.711, 446.046, 57.96, 0.2288", "239.6, 446.255, 57.96, 0.2288", "238.714, 446.921, 58.1493, 0.2288", "237.759, 447.512, 58.4528, 0.2288", "236.744, 448.037, 58.52, 0.2288", "235.806, 448.689, 58.52, 0.2288", "234.978, 449.478, 58.52, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "253.332, 441.863, 54.6, 0.3814", "253.976, 442.842, 53.7762, 0.2288", "254.456, 443.818, 53.2, 0.2288", "254.719, 444.926, 53.2, 0.2288", "255.174, 445.972, 53.2, 0.2288", "255.42, 447.072, 53.2, 0.2288", "255.455, 448.214, 53.2126, 0.2288", "255.455, 449.354, 53.3985, 0.2796", "255.455, 450.497, 53.48, 0.3304", "255.455, 451.641, 53.4811, 0.3814", "255.455, 452.769, 53.8647, 0.356", "255.455, 453.906, 54.0369, 0.3304", "255.926, 454.896, 54.1531, 0.356", "256.465, 455.717, 55.5229, 0.4068", "257.112, 456.56, 56.5524, 0.4576", "258.187, 456.913, 56.84, 0.4322", "258.995, 457.694, 56.84, 0.3814", "259.573, 458.627, 56.8842, 0.3304", "260.363, 459.12, 57.7553, 0.2796", "260.489, 459.845, 59.5647, 0.2796", "260.489, 460.97, 59.939, 0.2796", "260.489, 462.039, 60.648, 0.305", "260.609, 463.053, 61.8638, 0.2796", "260.78, 464.144, 62.3974, 0.2542", "261.018, 465.187, 63.1347, 0.2288", "261.255, 466.258, 63.8683, 0.2542", "261.29, 467.393, 64.0959, 0.2796", "261.29, 468.534, 64.2824, 0.305", "261.363, 469.675, 64.3868, 0.2796", "261.399, 470.818, 64.4, 0.2542", "261.467, 471.96, 64.4, 0.2288", "261.785, 473.054, 64.4, 0.2288", "262.583, 473.849, 64.4, 0.2288", "262.976, 474.917, 64.4, 0.2288", "263.406, 475.976, 64.4, 0.2288", "263.806, 477.048, 64.4, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "282.809, 463.892, 46.7911, 0.4576", "283.917, 464.519, 45.7632, 0.5084", "284.768, 465.263, 45.3782, 0.6356", "285.543, 466.027, 44.8409, 0.7118", "286.079, 467.03, 45.0237, 0.7118", "286.708, 467.867, 45.8984, 0.6356", "287.146, 468.873, 46.4834, 0.5592", "287.145, 469.923, 45.5462, 0.5592", "286.962, 470.976, 45.7201, 0.5592", "286.802, 472.065, 46.4831, 0.5592", "286.601, 473.187, 46.6656, 0.5084", "286.37, 474.233, 46.5688, 0.5084", "286.113, 475.222, 46.0984, 0.483", "285.89, 476.291, 46.9378, 0.4576", "285.276, 477.072, 46.774, 0.4068", "284.625, 477.923, 46.8168, 0.4068", "284.506, 478.97, 47.6546, 0.483", "284.389, 479.91, 46.1714, 0.5338", "284.285, 481.029, 45.9508, 0.5338", "284.292, 482.117, 46.6192, 0.4322", "284.403, 483.148, 46.5553, 0.3814", "283.989, 483.907, 47.7697, 0.3814", "283.601, 484.887, 47.126, 0.4576", "283.807, 485.988, 46.6365, 0.5084", "284.18, 487.053, 46.2311, 0.5338", "284.436, 487.977, 46.8642, 0.5084", "284.579, 489.011, 47.8125, 0.4576", "284.711, 490.133, 48.2118, 0.4068", "284.742, 491.267, 48.1211, 0.4322", "284.775, 492.378, 48.5288, 0.5084", "284.488, 493.472, 48.5369, 0.5592", "284.451, 494.583, 48.547, 0.5338", "284.598, 495.701, 48.9367, 0.4576", "284.794, 496.827, 48.9454, 0.4068", "285.316, 497.716, 49.5687, 0.356", "285.507, 498.667, 49.8162, 0.3304", "286.229, 498.773, 51.2053, 0.305", "285.65, 499.621, 51.681, 0.3304", "285.102, 500.426, 52.7358, 0.4068", "284.718, 501.472, 52.3454, 0.483", "285.031, 502.491, 51.9901, 0.5592", "285.199, 502.814, 54.2867, 0.5338", "286.09, 503.376, 54.5132, 0.483", "287.0, 504.013, 54.4547, 0.3814", "287.788, 504.753, 54.5734, 0.3304", "287.999, 505.846, 54.3816, 0.3304", "288.358, 506.85, 53.536, 0.356", "288.58, 507.95, 53.8577, 0.4068", "288.686, 509.001, 54.8772, 0.4068", "288.971, 509.987, 55.5461, 0.3814", "289.083, 511.076, 55.1393, 0.305", "288.72, 512.098, 55.6881, 0.2542", "288.786, 513.081, 56.5908, 0.2542", "288.897, 514.165, 56.1372, 0.305", "289.613, 514.935, 55.3952, 0.356", "290.672, 515.15, 54.6, 0.356", "291.698, 515.466, 55.0438, 0.3814", "292.389, 516.049, 56.6546, 0.4576", "292.427, 517.098, 57.0576, 0.5592", "292.302, 518.192, 56.3713, 0.5592", "292.251, 518.703, 58.6247, 0.4576", "292.108, 519.721, 59.8186, 0.4068", "291.683, 520.718, 60.4534, 0.4322", "291.066, 521.566, 59.7968, 0.5592", "290.792, 522.503, 58.6048, 0.6102", "290.789, 523.617, 58.0006, 0.5848", "290.696, 523.898, 60.0415, 0.483", "290.423, 524.571, 61.4432, 0.3814", "290.118, 525.52, 60.1096, 0.356", "289.713, 526.535, 59.4308, 0.356", "289.784, 527.162, 57.7371, 0.4068", "289.87, 528.014, 59.5342, 0.4068", "290.367, 528.71, 60.3039, 0.4322", "290.576, 529.727, 60.0169, 0.4068", "290.93, 530.735, 59.1601, 0.4576", "291.186, 531.826, 59.5053, 0.4322", "291.308, 532.793, 60.9652, 0.4322", "291.456, 533.852, 61.88, 0.3304", "291.663, 534.976, 61.88, 0.305", "292.147, 535.963, 61.88, 0.305", "293.018, 536.638, 61.929, 0.356", "293.357, 537.717, 62.1995, 0.4068", "293.641, 538.782, 62.6027, 0.4068", "294.054, 539.768, 63.3111, 0.4068", "294.275, 540.845, 63.8355, 0.3304", "294.747, 541.878, 63.84, 0.2796", "295.682, 542.396, 63.84, 0.2288", "296.813, 542.518, 63.873, 0.2288", "297.286, 543.062, 65.2722, 0.2288", "297.326, 544.115, 65.7933, 0.2288", "297.332, 545.259, 65.8, 0.2288", "297.651, 546.342, 65.8, 0.2288", "298.529, 547.001, 65.8059, 0.2288", "299.649, 547.161, 66.0257, 0.2288", "300.674, 547.652, 66.0775, 0.2288", "301.737, 548.073, 66.08, 0.2288", "302.872, 548.2, 66.08, 0.2288", "304.016, 548.205, 66.08, 0.2288", "305.105, 547.862, 66.08, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "282.809, 463.892, 46.7911, 0.4576", "282.64, 464.542, 46.846, 0.2288", "282.479, 465.664, 46.5041, 0.2796", "282.067, 466.723, 46.251, 0.3814", "281.184, 467.139, 44.8899, 0.483", "280.552, 467.758, 43.5579, 0.5084", "280.385, 468.845, 43.1852, 0.483", "280.152, 469.939, 43.0136, 0.483", "279.586, 470.814, 43.7791, 0.483", "278.941, 471.709, 44.172, 0.483", "278.02, 472.233, 45.0719, 0.4576", "277.394, 473.121, 44.3498, 0.483", "277.142, 474.122, 43.6428, 0.483", "276.234, 474.791, 44.0824, 0.483", "275.413, 475.522, 43.6514, 0.483", "274.537, 476.135, 42.7067, 0.483", "273.501, 476.609, 42.4878, 0.5084", "272.599, 477.256, 42.2624, 0.483", "271.623, 477.677, 42.3259, 0.483", "270.873, 478.491, 42.089, 0.4322", "270.442, 479.541, 42.005, 0.4068", "270.164, 480.587, 41.2115, 0.3814", "269.816, 481.669, 41.2728, 0.3814", "269.068, 482.457, 41.3314, 0.3814", "268.168, 483.053, 40.7226, 0.4068", "267.188, 483.554, 40.4132, 0.4322", "266.285, 484.182, 39.7004, 0.4322", "265.54, 485.008, 39.6119, 0.3814", "265.033, 485.952, 40.0033, 0.3304", "264.815, 487.037, 39.4926, 0.305", "264.82, 488.136, 38.7909, 0.3304", "264.67, 489.251, 38.7999, 0.3814", "264.706, 490.388, 38.9088, 0.4576", "264.825, 491.513, 39.3022, 0.5084", "264.607, 492.624, 39.2972, 0.5084", "263.906, 493.525, 39.2389, 0.4576", "263.301, 494.484, 39.5595, 0.4068", "262.676, 495.383, 40.1282, 0.4068", "261.696, 495.926, 40.2091, 0.4322", "260.872, 496.633, 40.0501, 0.4322", "259.888, 497.131, 40.5, 0.3814", "258.887, 496.839, 41.44, 0.356" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "273.797, 444.711, 43.4, 0.483", "273.28, 444.444, 41.4403, 0.3814", "272.622, 444.055, 39.5699, 0.5084", "271.774, 443.314, 39.5875, 0.5848", "271.048, 442.48, 40.2732, 0.5848", "270.325, 441.927, 41.6618, 0.4576", "269.363, 441.819, 41.8368, 0.3814", "268.785, 442.458, 40.36, 0.3814", "267.947, 441.899, 40.0249, 0.4576", "267.002, 442.047, 41.2709, 0.5084", "265.878, 442.124, 40.8738, 0.5592", "264.796, 441.888, 40.9066, 0.5338", "263.915, 442.5, 40.6076, 0.5338", "263.107, 443.3, 40.2889, 0.4576" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "273.797, 444.711, 43.4, 0.483", "273.569, 443.253, 44.0247, 0.661", "273.004, 442.268, 44.2403, 0.7626", "271.951, 441.859, 44.515, 0.788", "270.932, 441.458, 43.7262, 0.7372", "270.008, 440.826, 43.7884, 0.6356", "269.062, 440.35, 44.6421, 0.5592", "267.995, 440.129, 45.1954, 0.5338", "266.908, 439.97, 44.52, 0.5338" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "318.363, 380.457, 42.3422, 0.483", "318.605, 380.332, 43.3236, 0.356", "319.176, 380.037, 45.64, 0.4322" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "318.363, 380.457, 42.3422, 0.483", "318.47, 379.523, 41.5439, 0.5338", "319.201, 378.687, 41.4666, 0.5592", "319.515, 377.593, 41.7194, 0.5338", "319.596, 376.453, 41.72, 0.483" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "263.107, 443.3, 40.2889, 0.4576", "262.54, 443.199, 40.2158, 0.3304", "261.415, 442.999, 40.0711, 0.305", "260.284, 443.084, 39.8832, 0.356", "259.188, 443.148, 40.3864, 0.483", "258.204, 443.109, 41.1477, 0.5592", "257.723, 443.369, 39.594, 0.6356", "257.131, 443.824, 38.8441, 0.661", "255.992, 443.864, 38.9413, 0.661", "254.866, 443.978, 39.333, 0.6356", "253.84, 444.001, 39.9406, 0.5848", "252.933, 443.506, 38.8721, 0.5338", "251.874, 443.129, 38.6358, 0.483", "251.201, 443.08, 36.9314, 0.4576", "250.225, 442.845, 37.5466, 0.5084", "249.495, 443.293, 36.3986, 0.5338", "248.394, 443.378, 36.7562, 0.5592", "247.364, 443.021, 37.028, 0.483", "246.443, 442.737, 35.6913, 0.4322", "245.419, 442.296, 35.7952, 0.3814", "244.393, 441.869, 36.4151, 0.4068", "243.308, 442.054, 36.9463, 0.4322", "242.52, 442.84, 37.3352, 0.4576", "241.693, 443.182, 37.5466, 0.4322", "240.956, 442.402, 37.564, 0.4068", "239.977, 441.983, 36.9667, 0.356", "238.856, 441.788, 36.8668, 0.356", "237.833, 441.346, 36.3524, 0.3304", "236.793, 441.019, 37.0227, 0.3814", "235.703, 441.033, 36.6114, 0.4322", "234.718, 441.587, 36.2544, 0.5338", "233.652, 441.991, 36.1371, 0.5592", "232.553, 442.266, 36.3653, 0.5338", "231.482, 442.554, 36.3367, 0.483", "230.367, 442.614, 36.6198, 0.4576", "229.248, 442.398, 36.68, 0.4322", "228.152, 442.571, 37.1258, 0.3814", "227.185, 442.408, 35.84, 0.3304", "226.075, 442.617, 35.9066, 0.356", "225.04, 442.939, 36.3762, 0.4322", "223.977, 443.158, 36.5016, 0.483", "222.916, 443.157, 35.6944, 0.4576", "221.802, 442.952, 35.7132, 0.4068", "220.697, 443.035, 36.062, 0.4322", "219.818, 443.767, 36.1332, 0.5084", "218.951, 444.504, 36.0301, 0.6102", "217.989, 445.089, 35.6112, 0.6864", "217.126, 445.723, 34.956, 0.6864", "216.245, 446.308, 35.0081, 0.661", "215.55, 447.158, 34.8866, 0.5592", "214.744, 447.908, 34.1998, 0.5338", "213.814, 448.432, 34.4156, 0.5084", "212.694, 448.414, 34.6133, 0.5084", "211.625, 448.319, 33.7963, 0.483", "210.584, 448.041, 32.9647, 0.4576", "209.638, 448.292, 33.3192, 0.5084", "209.063, 449.205, 34.0998, 0.5338", "208.247, 449.987, 34.1085, 0.5338", "207.237, 450.501, 34.3916, 0.5084", "206.275, 451.065, 33.9004, 0.5592", "205.572, 451.952, 34.2082, 0.661", "204.698, 452.648, 34.4319, 0.7118", "203.921, 453.398, 34.7626, 0.661", "203.21, 454.209, 35.6468, 0.5848", "202.259, 454.735, 35.4015, 0.5084", "201.145, 454.893, 35.0689, 0.483", "200.017, 454.756, 35.1249, 0.4068", "198.99, 454.947, 36.0422, 0.3814", "197.925, 454.717, 35.4774, 0.3814", "197.225, 454.114, 36.6982, 0.483", "196.31, 453.71, 37.52, 0.5592" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "263.107, 443.3, 40.2889, 0.4576", "262.587, 443.556, 40.894, 0.5848", "261.502, 443.668, 40.4457, 0.5592", "260.512, 444.094, 41.2628, 0.5084", "259.535, 444.6, 40.973, 0.5084", "258.669, 445.118, 40.7257, 0.483", "257.837, 445.697, 40.2942, 0.483", "256.833, 446.127, 39.6012, 0.483", "255.855, 446.695, 39.6914, 0.5338", "254.825, 447.174, 39.8796, 0.5848", "254.18, 447.908, 41.0522, 0.5592", "253.542, 448.777, 40.1304, 0.483", "252.776, 449.54, 39.8051, 0.4068", "251.659, 449.754, 39.8437, 0.4068", "250.65, 450.106, 39.9994, 0.4322", "249.792, 450.73, 39.2826, 0.483", "248.829, 451.19, 38.724, 0.483", "247.978, 451.669, 39.1566, 0.483", "247.085, 452.312, 39.5251, 0.4576", "245.998, 452.592, 39.3506, 0.4576", "244.876, 452.72, 39.7149, 0.4322", "243.856, 453.083, 40.5726, 0.3814", "242.989, 453.775, 40.1593, 0.3814", "242.377, 454.681, 39.8961, 0.4068", "241.662, 455.483, 40.5997, 0.483", "240.952, 456.355, 40.3052, 0.5084", "240.558, 457.385, 40.4152, 0.5338", "240.262, 458.475, 40.6207, 0.483", "239.62, 459.39, 40.6, 0.4068", "238.678, 459.83, 41.4364, 0.356", "237.66, 460.148, 40.945, 0.3814", "236.569, 460.441, 40.6174, 0.4068", "235.539, 460.864, 40.7378, 0.4068", "234.732, 461.509, 39.6981, 0.4068", "233.732, 462.055, 39.6035, 0.4576", "232.679, 462.421, 39.2328, 0.483", "231.657, 462.811, 39.3915, 0.4322", "230.765, 463.481, 39.5472, 0.356", "229.784, 464.014, 39.1381, 0.305", "228.686, 464.235, 38.64, 0.3304" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "266.908, 439.97, 44.52, 0.5338", "265.336, 439.913, 44.24, 0.3304", "264.211, 440.115, 44.24, 0.2796", "263.089, 440.312, 44.24, 0.2542", "261.945, 440.323, 44.24, 0.2796", "260.989, 440.033, 44.24, 0.305", "260.533, 439.156, 45.0817, 0.3304", "260.036, 438.562, 47.0333, 0.3814", "258.93, 438.446, 47.32, 0.4322", "257.932, 438.979, 47.32, 0.4322", "257.175, 439.831, 47.32, 0.3814", "256.548, 440.788, 47.32, 0.3304", "255.858, 441.697, 47.32, 0.2796", "255.024, 442.474, 47.32, 0.2796", "254.051, 443.067, 47.3903, 0.2796", "252.99, 443.462, 47.6, 0.3304", "251.86, 443.621, 47.637, 0.356", "250.749, 443.764, 47.9741, 0.4068", "249.756, 444.213, 48.7388, 0.4068", "249.051, 445.029, 49.0, 0.3814", "248.397, 445.736, 49.0, 0.305", "247.258, 445.817, 49.0, 0.2542", "246.167, 446.043, 49.0, 0.2288", "245.142, 446.552, 49.0, 0.2288", "244.403, 447.363, 49.0, 0.2288", "243.697, 448.251, 49.1238, 0.2288", "242.846, 449.01, 49.25, 0.2288", "242.138, 449.891, 49.28, 0.2288", "241.44, 450.652, 50.2009, 0.2288", "240.678, 451.353, 51.3867, 0.2288", "239.636, 451.774, 51.52, 0.2288", "238.6, 452.168, 52.1637, 0.2288", "237.592, 452.671, 52.6288, 0.2288", "236.894, 453.574, 52.64, 0.2542", "235.949, 454.206, 52.9136, 0.2796", "235.09, 454.961, 52.92, 0.305", "234.616, 456.002, 52.9256, 0.2796", "233.961, 456.906, 53.5021, 0.2542", "233.543, 457.932, 53.9479, 0.2288", "232.62, 458.514, 54.6, 0.2288", "231.519, 458.823, 54.6, 0.2288", "230.395, 459.025, 54.6, 0.2288", "229.275, 459.192, 54.6, 0.2288", "228.281, 459.729, 54.7142, 0.2288", "227.67, 460.59, 55.1088, 0.2288", "227.607, 461.711, 55.5162, 0.2288", "227.361, 462.754, 56.4497, 0.2288", "226.779, 463.616, 57.4073, 0.2288", "226.018, 464.406, 57.918, 0.2288", "225.43, 465.386, 57.96, 0.2288", "224.759, 466.307, 57.962, 0.2288", "223.969, 466.972, 58.8344, 0.2288", "223.301, 467.791, 59.5238, 0.2288", "222.506, 468.565, 59.9749, 0.2288", "221.933, 469.458, 60.8401, 0.2288", "221.236, 470.122, 62.2866, 0.2288", "220.229, 470.591, 62.7127, 0.2288", "219.631, 471.512, 63.2632, 0.2288", "219.194, 472.569, 63.28, 0.2542", "218.733, 473.616, 63.28, 0.305" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "266.908, 439.97, 44.52, 0.5338", "266.573, 439.361, 44.1034, 0.3814", "265.764, 438.877, 42.9517, 0.4576", "264.897, 438.584, 41.7698, 0.5084", "264.088, 437.824, 41.104, 0.5084", "263.723, 436.946, 41.9793, 0.483", "263.038, 436.131, 42.7126, 0.4322", "262.136, 435.561, 41.7421, 0.4322", "261.347, 434.818, 41.2437, 0.3814", "260.909, 433.96, 40.3329, 0.4068", "260.87, 432.888, 41.202, 0.4322", "260.477, 431.924, 40.6714, 0.5338", "259.592, 431.646, 39.212, 0.5848", "258.663, 431.693, 38.1489, 0.6102", "257.704, 431.091, 38.3516, 0.6356", "256.83, 430.356, 38.2259, 0.661", "255.955, 429.677, 38.7145, 0.661", "254.895, 429.468, 38.5084, 0.6356", "253.768, 429.616, 38.3211, 0.5848", "252.835, 429.865, 37.0597, 0.5848", "251.873, 429.831, 37.9585, 0.5592", "251.251, 429.063, 37.9148, 0.5848", "250.287, 428.696, 37.4898, 0.5592", "249.36, 429.12, 38.5232, 0.5592", "248.497, 429.726, 37.6373, 0.483", "247.742, 430.054, 35.8884, 0.4322", "246.733, 429.869, 36.143, 0.3814", "245.764, 429.911, 36.1029, 0.4322", "244.774, 429.801, 35.4054, 0.4576", "243.699, 430.051, 35.4306, 0.483", "242.649, 430.029, 34.8944, 0.4322", "241.673, 429.452, 34.7458, 0.4322", "240.655, 429.009, 35.0605, 0.4068", "239.541, 428.789, 35.3024, 0.4068", "238.475, 428.994, 34.5394, 0.4068", "237.673, 429.778, 34.5279, 0.4576", "236.88, 430.494, 34.3692, 0.483", "235.975, 431.107, 35.0759, 0.483", "234.962, 431.458, 34.4918, 0.4322", "233.871, 431.563, 33.7131, 0.4322", "232.865, 431.997, 33.0156, 0.3814", "231.802, 432.376, 33.3894, 0.3814", "230.809, 432.846, 33.0574, 0.356", "229.749, 432.615, 33.6658, 0.4068", "228.913, 431.879, 34.2636, 0.4322", "228.204, 431.023, 34.8676, 0.4576", "227.347, 430.309, 34.741, 0.4576", "226.227, 430.255, 35.1207, 0.4576", "225.122, 430.257, 35.0731, 0.4576", "224.24, 430.901, 34.9902, 0.4576", "223.609, 431.717, 34.6284, 0.4576", "222.734, 432.318, 34.8228, 0.4576", "221.882, 432.997, 34.0197, 0.4576", "220.814, 433.241, 33.4681, 0.4576", "219.702, 433.367, 33.7655, 0.5084", "218.758, 433.696, 32.6096, 0.5848", "217.724, 434.002, 32.8812, 0.6864", "216.594, 433.989, 33.01, 0.6864", "215.544, 434.319, 32.5506, 0.661", "214.483, 434.654, 32.0533, 0.6102", "213.405, 434.966, 32.3834, 0.6102", "212.352, 435.059, 33.3292, 0.6102", "211.256, 434.813, 32.8098, 0.6102", "210.171, 434.47, 32.8042, 0.6356", "209.22, 433.9, 32.3019, 0.6356", "208.114, 433.844, 32.8485, 0.6102", "207.066, 433.994, 33.775, 0.5592", "205.945, 434.045, 33.7392, 0.5848", "204.881, 434.401, 33.4099, 0.6356", "203.806, 434.757, 33.6034, 0.6864", "202.727, 435.054, 33.8836, 0.6356", "201.748, 435.162, 33.5577, 0.5848", "200.707, 435.012, 33.544, 0.5084", "199.659, 434.79, 34.4932, 0.5084", "198.593, 435.008, 34.7312, 0.5338", "197.533, 435.424, 34.4848, 0.5848", "196.551, 435.961, 34.9322, 0.6102", "195.821, 436.733, 35.924, 0.6102", "194.692, 436.804, 35.98, 0.6356", "193.641, 436.932, 36.2314, 0.6356", "192.679, 437.0, 35.3424, 0.6356", "191.585, 436.95, 35.7176, 0.6102", "190.453, 437.058, 35.4012, 0.6356", "189.363, 437.114, 35.9022, 0.661", "188.392, 436.693, 36.6688, 0.661", "187.462, 436.045, 36.9488, 0.661", "186.569, 435.331, 36.9524, 0.661", "185.662, 434.662, 36.8068, 0.6864", "184.997, 433.752, 37.0513, 0.6864", "184.151, 433.036, 37.52, 0.6864", "183.153, 432.508, 37.2445, 0.7118", "182.214, 431.927, 36.6512, 0.6864", "181.252, 431.438, 36.8332, 0.6356", "180.223, 431.281, 37.9383, 0.5592", "179.251, 430.9, 38.9256, 0.5592", "178.724, 429.974, 38.5798, 0.5592", "178.041, 429.056, 38.5045, 0.5592", "177.25, 428.285, 38.7419, 0.483", "176.207, 427.91, 39.3156, 0.4322", "175.223, 427.429, 38.995, 0.3814", "174.228, 427.421, 38.1612, 0.3814", "173.17, 427.58, 37.4763, 0.4068", "172.09, 427.65, 36.5946, 0.4322", "171.257, 427.742, 34.72, 0.483" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "319.596, 376.453, 41.72, 0.483", "320.239, 374.977, 41.592, 0.6356", "320.193, 373.932, 42.583, 0.661", "319.465, 373.071, 42.66, 0.661", "319.441, 371.964, 43.2494, 0.6864", "319.557, 370.841, 43.6682, 0.6864", "319.751, 369.72, 43.5812, 0.7118", "319.858, 368.607, 43.2104, 0.7626", "320.257, 367.541, 43.3244, 0.788", "320.344, 366.44, 42.9632, 0.7626", "320.005, 365.429, 43.5523, 0.7118", "320.004, 364.3, 43.4048, 0.6356", "320.63, 363.377, 42.8926, 0.5848", "320.764, 362.269, 43.1449, 0.5338", "321.303, 361.35, 43.195, 0.5848", "321.464, 360.267, 42.8268, 0.6102", "321.69, 359.241, 43.619, 0.6356", "321.856, 358.35, 45.2183, 0.5848", "321.576, 357.392, 46.3632, 0.5848", "321.907, 356.394, 46.7538, 0.5848", "322.517, 355.435, 46.4806, 0.6356", "323.063, 354.436, 46.5872, 0.6356", "322.944, 353.314, 47.0414, 0.5848", "322.862, 352.19, 47.5082, 0.483", "322.926, 351.097, 47.5485, 0.4576", "323.322, 350.162, 46.527, 0.5338", "323.487, 349.093, 46.7802, 0.6356", "323.484, 347.982, 47.3312, 0.6102", "323.634, 346.884, 46.9207, 0.5338", "323.517, 345.769, 46.5108, 0.4576", "323.362, 344.772, 47.651, 0.5084", "323.789, 343.739, 47.6372, 0.5592", "324.302, 342.864, 47.1702, 0.6102", "324.799, 341.995, 48.4439, 0.5848", "325.271, 341.142, 49.6787, 0.5338", "325.69, 340.207, 50.5599, 0.483", "326.363, 339.297, 50.9242, 0.483", "327.026, 338.375, 51.2196, 0.5084", "327.536, 337.354, 51.1162, 0.5338", "327.862, 336.306, 50.7416, 0.5338", "327.429, 335.29, 50.8516, 0.5338", "327.167, 334.296, 50.7441, 0.5592", "327.134, 333.183, 51.0516, 0.6102", "326.758, 332.107, 51.1462, 0.661", "326.872, 330.993, 50.7178, 0.6864", "327.121, 329.887, 50.9407, 0.6356", "327.941, 329.131, 51.3122, 0.6102", "328.536, 328.23, 51.4464, 0.5592", "329.332, 327.484, 50.974, 0.5848", "330.028, 326.591, 51.0406, 0.5592", "330.648, 325.668, 50.7668, 0.5592", "331.328, 324.777, 50.631, 0.483", "332.079, 323.917, 50.6033, 0.4322", "332.872, 323.485, 49.1476, 0.4322", "332.826, 322.54, 50.7066, 0.5338", "332.817, 321.458, 51.52, 0.6356", "333.063, 320.348, 51.52, 0.6356", "333.564, 319.321, 51.52, 0.5592", "334.212, 318.384, 51.5211, 0.4576", "335.034, 317.6, 51.6454, 0.4068", "335.854, 316.85, 52.0766, 0.3814", "336.291, 315.819, 52.1959, 0.4576", "336.336, 314.681, 52.4339, 0.5848", "336.336, 313.541, 52.64, 0.7372", "336.366, 312.4, 52.7156, 0.788", "336.521, 311.273, 52.92, 0.7118", "336.926, 310.227, 52.92, 0.6102", "337.589, 309.301, 53.0118, 0.5338", "337.94, 308.264, 53.4509, 0.5848", "338.013, 307.146, 53.9232, 0.6356", "338.198, 306.02, 54.04, 0.6864", "338.521, 304.929, 54.04, 0.661", "339.092, 303.949, 54.04, 0.6356", "339.888, 303.139, 54.1262, 0.5848", "340.833, 302.506, 54.2738, 0.5592", "341.852, 301.986, 54.32, 0.5338", "342.882, 301.492, 54.4309, 0.5848", "343.805, 300.908, 55.0701, 0.6864", "344.621, 300.167, 55.6539, 0.8136", "345.363, 299.302, 55.72, 0.8644", "346.023, 298.405, 56.189, 0.788", "346.663, 297.509, 56.9262, 0.6864", "347.233, 296.528, 57.12, 0.5848", "347.535, 295.44, 57.3233, 0.5848", "347.649, 294.305, 57.4, 0.5848", "347.949, 293.254, 58.0418, 0.6864", "348.627, 292.372, 58.4494, 0.788", "349.262, 291.432, 58.7409, 0.8898", "349.489, 290.329, 58.8, 0.8644", "349.717, 289.209, 58.8, 0.788", "349.896, 288.089, 59.1203, 0.6864", "350.046, 286.959, 59.3306, 0.6356", "350.182, 285.824, 59.36, 0.6356", "350.361, 284.694, 59.36, 0.661", "350.574, 283.57, 59.36, 0.7118", "350.646, 282.43, 59.36, 0.788", "350.906, 281.32, 59.36, 0.8898", "351.104, 280.197, 59.5162, 0.966", "351.493, 279.153, 60.0897, 0.9152", "351.92, 278.099, 60.3719, 0.8136", "352.338, 277.072, 61.0378, 0.7372", "352.352, 275.928, 61.0781, 0.8136", "352.352, 274.789, 61.32, 0.8898", "352.352, 273.645, 61.32, 0.8644" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "319.596, 376.453, 41.72, 0.483", "320.969, 376.59, 41.216, 0.4068", "322.025, 376.309, 41.8883, 0.3814", "323.027, 375.89, 42.7692, 0.3814", "323.879, 375.613, 44.3643, 0.4576" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "352.352, 273.645, 61.32, 0.8644", "351.238, 273.088, 61.8444, 0.4322", "350.23, 272.583, 62.319, 0.356", "349.445, 271.793, 62.6816, 0.3304", "348.705, 270.922, 62.72, 0.4068", "348.026, 270.0, 62.72, 0.5084", "347.633, 268.929, 62.72, 0.5592", "347.016, 267.968, 62.72, 0.5338", "346.394, 267.009, 62.72, 0.4576", "346.181, 265.887, 62.72, 0.4068", "345.875, 264.786, 62.72, 0.3814", "345.612, 263.671, 62.72, 0.356", "345.062, 262.669, 62.72, 0.3304", "344.803, 261.556, 62.72, 0.2796", "344.549, 260.441, 62.72, 0.2542", "344.016, 259.43, 62.72, 0.2288", "343.333, 258.512, 62.72, 0.2542", "342.761, 257.522, 62.7124, 0.2796", "342.022, 256.656, 62.4809, 0.3304", "341.525, 255.658, 61.875, 0.356", "341.069, 254.612, 61.6725, 0.4068", "340.649, 253.548, 61.6, 0.4576", "340.192, 252.5, 61.6, 0.483", "339.912, 251.392, 61.6, 0.5084", "339.731, 250.266, 61.5754, 0.4576", "339.27, 249.225, 61.32, 0.4322", "338.761, 248.201, 61.3071, 0.3304", "338.256, 247.176, 61.1848, 0.2796", "337.782, 246.142, 61.04, 0.2542", "337.549, 245.023, 61.04, 0.305", "337.21, 243.932, 61.04, 0.356", "336.664, 242.946, 61.04, 0.356", "335.938, 242.089, 61.04, 0.3304", "335.392, 241.099, 61.04, 0.356", "334.633, 240.245, 61.04, 0.4068", "333.938, 239.341, 61.04, 0.4322", "333.297, 238.398, 61.04, 0.4322", "332.499, 237.584, 61.04, 0.483", "331.58, 236.906, 61.04, 0.5848", "330.611, 236.299, 61.04, 0.6102", "329.74, 235.577, 61.04, 0.5338", "329.02, 234.691, 60.9507, 0.4068", "328.263, 233.838, 60.795, 0.305", "327.393, 233.099, 60.76, 0.2796", "326.868, 232.146, 60.76, 0.2796", "326.319, 231.162, 60.76, 0.356", "325.368, 230.692, 60.359, 0.4068", "324.54, 229.983, 60.2, 0.483", "324.02, 228.966, 60.2, 0.4576", "323.018, 228.423, 60.2, 0.4322", "321.921, 228.096, 60.2, 0.356", "320.805, 227.846, 60.1143, 0.3304", "319.682, 227.645, 59.92, 0.2796", "318.583, 227.331, 59.92, 0.2542", "317.737, 226.562, 59.92, 0.2288", "317.047, 225.651, 59.92, 0.2796", "316.77, 224.541, 59.92, 0.3814", "316.313, 223.501, 59.92, 0.5338", "315.465, 222.745, 59.92, 0.6356", "314.989, 221.706, 59.92, 0.661", "314.642, 220.625, 59.8959, 0.661", "313.868, 219.797, 59.6347, 0.661", "312.919, 219.163, 59.5302, 0.6864", "312.015, 218.502, 59.08, 0.661", "310.946, 218.097, 59.08, 0.5848", "309.847, 217.783, 59.08, 0.5338", "308.92, 217.214, 59.08, 0.483", "308.186, 216.361, 59.08, 0.5084", "307.705, 215.397, 59.08, 0.4576", "307.165, 214.421, 59.08, 0.4068", "306.431, 213.544, 59.08, 0.305", "305.984, 212.501, 59.08, 0.2796", "305.614, 211.419, 59.08, 0.2796", "304.99, 210.496, 58.52, 0.305" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "352.352, 273.645, 61.32, 0.8644", "353.115, 272.453, 61.32, 0.7118", "353.958, 271.717, 61.878, 0.7372", "354.83, 271.099, 62.72, 0.6864", "355.477, 270.157, 62.72, 0.6102", "356.123, 269.213, 62.72, 0.5592", "356.748, 268.257, 62.72, 0.5338", "357.182, 267.227, 62.9289, 0.5592", "357.27, 266.14, 63.6894, 0.5848", "357.303, 265.001, 63.84, 0.6356", "357.538, 263.898, 63.8487, 0.661", "358.216, 263.031, 63.9506, 0.6356", "359.15, 262.395, 64.12, 0.5592", "359.849, 261.508, 64.1654, 0.4576", "360.282, 260.466, 64.4977, 0.4576", "360.751, 259.458, 64.9491, 0.5338", "361.359, 258.495, 65.1221, 0.6102", "362.019, 257.584, 65.24, 0.661", "362.835, 256.782, 65.24, 0.5848", "363.464, 255.86, 65.5301, 0.6102", "363.672, 254.775, 65.9523, 0.6102", "363.678, 253.636, 66.2393, 0.7372", "363.678, 252.496, 66.36, 0.8136", "363.678, 251.352, 66.36, 0.8136", "363.678, 250.208, 66.36, 0.7372", "363.678, 249.064, 66.36, 0.5592", "363.749, 247.923, 66.36, 0.5338", "364.113, 246.861, 66.451, 0.5592", "364.723, 245.906, 66.78, 0.661", "365.394, 244.99, 67.1135, 0.661", "366.15, 244.137, 67.2, 0.6102", "366.902, 243.327, 67.7975, 0.5848", "367.708, 242.537, 68.04, 0.6102", "368.534, 241.745, 68.04, 0.6356", "369.144, 240.838, 68.6697, 0.661", "369.558, 239.785, 68.8708, 0.661", "369.624, 238.651, 68.88, 0.7626", "369.729, 237.513, 68.9553, 0.788", "369.939, 236.392, 69.1365, 0.839", "370.03, 235.252, 69.16, 0.788", "370.816, 234.471, 69.16, 0.788", "371.332, 233.474, 69.561, 0.661", "371.959, 232.526, 69.8617, 0.5084", "372.581, 231.636, 70.6989, 0.3814", "372.889, 230.538, 70.84, 0.3814", "372.962, 229.398, 70.84, 0.4576", "373.23, 228.285, 70.84, 0.5084", "373.448, 227.163, 70.84, 0.5338", "373.803, 226.077, 70.84, 0.5338", "374.353, 225.08, 70.8638, 0.5592", "375.175, 224.292, 71.1236, 0.6102", "375.968, 223.5, 71.4277, 0.661", "376.387, 222.446, 71.689, 0.6864", "376.601, 221.358, 72.24, 0.661", "376.694, 220.226, 72.24, 0.661", "377.072, 219.148, 72.24, 0.6356", "377.597, 218.136, 72.24, 0.7118", "378.254, 217.2, 72.24, 0.788", "378.908, 216.269, 72.4055, 0.8898", "379.522, 215.344, 73.0635, 0.8136", "380.086, 214.403, 73.8385, 0.6864", "380.638, 213.421, 74.2, 0.5592", "381.183, 212.416, 74.2, 0.5592", "381.703, 211.396, 74.2, 0.5848", "382.081, 210.332, 74.2, 0.5592", "382.295, 209.215, 74.384, 0.5338", "382.812, 208.251, 74.685, 0.5084", "383.366, 207.28, 74.76, 0.5338", "383.968, 206.325, 74.76, 0.5084", "384.629, 205.394, 74.76, 0.4322", "384.981, 204.328, 74.76, 0.356", "385.39, 203.272, 74.76, 0.3304", "385.852, 202.227, 74.76, 0.356", "386.285, 201.168, 74.76, 0.3814", "386.816, 200.182, 75.2276, 0.356", "386.998, 199.089, 75.803, 0.356", "387.015, 197.954, 76.1208, 0.3814", "387.106, 196.816, 76.16, 0.483", "387.218, 195.68, 76.3507, 0.5338", "387.778, 194.71, 76.6808, 0.5338", "388.668, 194.005, 76.72, 0.4068", "389.625, 193.377, 76.72, 0.305", "390.26, 192.436, 76.72, 0.2542", "390.787, 191.421, 76.72, 0.2796", "391.115, 190.343, 77.1826, 0.356", "391.298, 189.217, 77.2761, 0.4322", "391.359, 188.075, 77.28, 0.5592", "391.409, 186.932, 77.28, 0.6102", "391.707, 185.829, 77.292, 0.5848", "391.913, 184.742, 77.9932, 0.483", "391.933, 183.606, 78.272, 0.3814", "392.044, 182.474, 78.566, 0.3304", "392.161, 181.347, 78.9533, 0.2796", "392.577, 180.282, 78.96, 0.2542", "393.164, 179.3, 78.96, 0.2288", "394.077, 178.612, 78.96, 0.2796", "394.902, 177.82, 78.9614, 0.3814", "395.271, 176.766, 79.5648, 0.5338", "395.699, 175.748, 80.08, 0.661", "395.71, 174.604, 80.08, 0.7626", "395.71, 173.46, 80.0808, 0.8136", "395.71, 172.317, 80.1301, 0.8136", "395.71, 171.178, 80.36, 0.7372", "395.757, 170.043, 80.442, 0.6102", "396.094, 168.972, 80.9088, 0.4576", "396.697, 168.026, 81.2, 0.3304", "397.527, 167.241, 81.2232, 0.2796", "398.122, 166.322, 81.4962, 0.2796", "398.226, 165.227, 82.2489, 0.3304", "398.226, 164.119, 82.9506, 0.3304", "398.226, 163.003, 83.44, 0.3304", "398.226, 161.86, 83.5358, 0.305", "398.226, 160.721, 83.72, 0.3304", "398.226, 159.577, 83.72, 0.356", "398.226, 158.433, 83.72, 0.4068", "398.253, 157.293, 83.8589, 0.4068", "398.426, 156.213, 84.5188, 0.4322", "398.742, 155.186, 85.4092, 0.4322", "398.908, 154.073, 85.8001, 0.4576", "398.983, 152.956, 86.2518, 0.4322", "399.296, 151.9, 86.7681, 0.356", "399.597, 150.855, 87.1825, 0.2796", "399.599, 149.742, 87.64, 0.2796", "399.599, 148.598, 87.64, 0.3304", "399.647, 147.464, 87.8688, 0.4068", "400.004, 146.574, 89.0064, 0.3814", "400.593, 145.785, 90.3767, 0.356", "400.835, 144.798, 91.5099, 0.2796", "400.858, 143.682, 91.8347, 0.2542", "400.858, 142.538, 91.84, 0.2542", "400.858, 141.394, 91.84, 0.305", "400.858, 140.254, 92.0447, 0.356", "401.142, 139.18, 92.5361, 0.356", "401.525, 138.137, 93.2005, 0.305", "402.246, 137.257, 93.24, 0.2542", "402.852, 136.287, 93.24, 0.2288", "403.607, 135.428, 93.24, 0.2288", "404.595, 134.852, 93.24, 0.2288", "404.968, 134.164, 94.3382, 0.2288", "405.442, 133.291, 95.7289, 0.2288", "405.915, 132.418, 97.1197, 0.2288", "406.377, 131.531, 98.4729, 0.2288", "406.715, 130.537, 99.4, 0.2288", "406.854, 129.406, 99.4, 0.2288", "407.218, 128.326, 99.4, 0.2288", "407.642, 127.279, 99.4, 0.2288", "407.766, 126.142, 99.4, 0.2288", "407.94, 125.012, 99.4, 0.2288", "408.065, 123.877, 99.4, 0.2288", "408.065, 122.733, 99.4, 0.2288", "408.065, 121.589, 99.4, 0.2288", "408.065, 120.445, 99.4, 0.2288", "408.188, 119.327, 99.4, 0.2288", "408.546, 118.259, 99.5854, 0.2288", "408.637, 117.138, 99.96, 0.2288", "408.729, 116.033, 100.324, 0.2288", "409.101, 115.121, 101.657, 0.2542", "409.303, 114.094, 102.2, 0.305", "409.323, 112.951, 102.2, 0.4068", "409.347, 111.808, 102.289, 0.483", "409.531, 110.782, 103.249, 0.5084", "409.979, 109.779, 103.812, 0.4322", "410.555, 108.794, 103.941, 0.356", "411.035, 107.76, 104.114, 0.305", "411.345, 107.075, 105.956, 0.305", "411.408, 106.313, 108.017, 0.2796", "411.603, 105.238, 108.625, 0.2542", "411.673, 104.097, 108.64, 0.2542", "411.724, 102.954, 108.64, 0.305", "411.726, 101.81, 108.64, 0.4068", "411.727, 100.673, 108.94, 0.483", "411.957, 99.6751, 110.17, 0.5338", "412.322, 98.616, 110.728, 0.483", "412.655, 97.5768, 111.526, 0.4068", "412.745, 96.4554, 112.022, 0.305", "412.781, 95.3346, 112.442, 0.2542", "412.978, 94.298, 113.464, 0.2288", "413.291, 93.2141, 113.847, 0.2796", "413.634, 92.1947, 114.763, 0.356", "413.795, 91.1284, 115.642, 0.4322", "413.923, 89.9999, 115.92, 0.4068", "413.992, 88.8581, 115.92, 0.3814", "414.014, 87.7145, 115.92, 0.4068", "414.058, 86.5894, 116.165, 0.483", "414.269, 85.5114, 116.917, 0.483", "414.664, 84.4623, 117.401, 0.3814", "415.095, 83.4124, 117.6, 0.2796", "415.272, 82.2959, 117.6, 0.2288", "415.272, 81.1571, 117.786, 0.2288", "415.272, 80.4306, 119.343, 0.305", "415.269, 79.7234, 121.255, 0.3814", "415.051, 78.7141, 122.382, 0.5084", "414.875, 77.6181, 122.853, 0.5592", "414.63, 76.5052, 122.923, 0.661", "414.103, 75.5643, 123.625, 0.7118", "413.748, 74.7202, 125.225, 0.6864", "413.673, 73.7465, 126.631, 0.5592", "413.67, 72.6398, 127.272, 0.4068", "413.67, 71.6002, 128.409, 0.3304", "413.67, 70.4719, 128.776, 0.3304", "413.682, 69.3285, 128.8, 0.356", "414.568, 68.6723, 128.8, 0.4322", "415.272, 67.8519, 129.671, 0.5084" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "323.879, 375.613, 44.3643, 0.4576", "323.156, 376.729, 44.212, 0.6102", "322.387, 377.546, 44.1694, 0.6102", "321.549, 378.052, 45.379, 0.661", "320.747, 378.484, 46.2325, 0.661", "320.008, 379.276, 45.4451, 0.5848", "319.189, 379.96, 45.7332, 0.483" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "323.879, 375.613, 44.3643, 0.4576", "324.127, 374.621, 45.1433, 0.3814", "324.458, 373.57, 45.1226, 0.356", "324.989, 372.652, 45.1654, 0.356", "325.237, 372.14, 43.2939, 0.4322", "326.034, 372.151, 41.697, 0.4576", "327.035, 371.659, 41.2602, 0.483", "328.05, 371.428, 40.8772, 0.4576", "329.037, 371.255, 40.04, 0.5084", "330.003, 370.68, 40.2083, 0.5592", "330.798, 370.267, 41.2992, 0.5848", "331.44, 369.552, 39.7916, 0.5592", "332.08, 368.704, 39.7617, 0.5592", "332.54, 367.682, 40.1839, 0.5848", "333.172, 366.745, 40.3312, 0.6356", "334.048, 366.072, 40.8545, 0.6864", "334.816, 365.284, 40.4211, 0.7372", "335.669, 364.725, 39.8297, 0.7372", "336.199, 363.763, 39.4069, 0.7118", "336.405, 362.742, 38.8363, 0.6864", "336.268, 361.609, 38.6705, 0.6864", "336.13, 360.514, 39.2661, 0.661", "336.482, 359.611, 38.4448, 0.661", "337.348, 359.071, 37.5469, 0.6356", "338.395, 358.655, 37.7843, 0.6102", "339.289, 358.044, 37.1781, 0.5592", "340.094, 357.384, 36.0363, 0.5338", "340.433, 356.401, 35.5376, 0.5592", "340.886, 355.769, 33.889, 0.5338", "341.355, 354.92, 35.3189, 0.5338", "341.803, 353.941, 35.7232, 0.4576", "342.741, 353.458, 35.2103, 0.483", "343.852, 353.514, 35.2654, 0.483", "344.973, 353.574, 35.7921, 0.5848", "345.453, 352.757, 34.3888, 0.6102", "346.271, 352.512, 33.2444, 0.6102", "347.283, 353.016, 32.9826, 0.5338", "348.257, 352.876, 32.6682, 0.483", "348.777, 352.088, 31.5104, 0.5084", "348.682, 352.041, 28.8982, 0.5848", "349.534, 352.278, 27.141, 0.661", "350.554, 352.519, 26.1979, 0.661", "351.638, 352.788, 26.4216, 0.6102", "352.707, 353.084, 26.4832, 0.5592", "353.793, 353.323, 26.8383, 0.5084", "354.837, 353.67, 27.2023, 0.483", "355.771, 353.134, 26.7011, 0.4576", "356.862, 353.039, 26.6431, 0.483", "357.924, 353.075, 26.2032, 0.5084", "358.888, 353.614, 26.2643, 0.5338", "359.81, 354.155, 25.412, 0.5084", "360.585, 353.436, 24.67, 0.5084", "360.685, 352.35, 24.115, 0.5338", "360.669, 351.261, 24.8114, 0.5848", "361.153, 350.264, 24.9928, 0.6102", "361.853, 349.428, 24.5364, 0.5592", "362.345, 348.434, 24.3631, 0.483", "362.876, 347.564, 23.359, 0.3814", "363.043, 346.551, 23.3775, 0.356", "363.546, 345.647, 24.4146, 0.356", "363.457, 344.566, 24.003, 0.3814", "363.499, 343.599, 24.9332, 0.3814", "364.125, 342.842, 24.1637, 0.4322", "365.194, 342.801, 24.0789, 0.4576", "366.154, 342.312, 24.0475, 0.483", "366.75, 341.491, 25.048, 0.4322", "367.076, 340.454, 24.5325, 0.4322", "367.391, 339.516, 24.1441, 0.4322", "368.406, 339.187, 24.4978, 0.4322", "369.397, 338.908, 23.9803, 0.3814", "370.141, 338.125, 24.2273, 0.305", "370.44, 337.075, 23.501, 0.2542", "370.388, 336.063, 22.2415, 0.2288", "369.97, 335.078, 22.12, 0.3304" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "323.879, 375.613, 44.3643, 0.4576", "323.798, 375.423, 45.6478, 0.483", "324.218, 374.428, 46.1415, 0.661", "324.308, 373.299, 46.1782, 0.661", "324.557, 372.228, 46.4075, 0.5592", "324.776, 371.145, 46.9938, 0.4322", "325.479, 370.275, 46.902, 0.4322", "326.494, 369.776, 46.62, 0.5592", "327.512, 369.366, 47.2696, 0.6864", "328.471, 368.907, 47.9937, 0.7118", "329.496, 368.652, 48.8748, 0.6102", "330.529, 368.728, 49.7512, 0.5338", "331.602, 368.983, 49.3424, 0.5084", "332.605, 369.332, 49.6166, 0.5084", "333.541, 368.772, 49.3072, 0.483", "334.385, 368.08, 48.5934, 0.483", "335.144, 367.274, 48.7911, 0.5592", "335.535, 366.335, 49.938, 0.6356", "335.811, 365.244, 50.3292, 0.6864", "336.358, 364.395, 50.993, 0.6864", "337.406, 364.068, 51.5057, 0.6356", "338.283, 363.726, 52.8881, 0.5338", "339.273, 363.568, 54.0806, 0.3814", "339.834, 363.126, 52.736, 0.305", "339.996, 362.243, 53.592, 0.305", "339.889, 361.248, 54.3267, 0.3814", "340.625, 360.552, 55.13, 0.4068", "341.481, 360.744, 55.8085, 0.4322", "342.089, 359.945, 56.1058, 0.4322", "343.103, 359.912, 55.0043, 0.483", "344.042, 359.863, 53.5382, 0.4576", "345.059, 359.97, 54.0436, 0.4322", "346.125, 359.678, 54.3435, 0.4068", "346.845, 358.824, 54.8565, 0.4322", "347.755, 358.193, 55.3202, 0.4322", "348.516, 357.625, 56.6028, 0.4068", "349.508, 357.475, 56.8187, 0.3814", "350.618, 357.537, 56.2383, 0.4068", "351.702, 357.461, 56.8224, 0.4576", "352.556, 356.753, 56.3928, 0.5338", "353.523, 356.247, 56.8991, 0.6102", "354.591, 355.949, 57.0819, 0.6356", "355.628, 355.578, 57.3241, 0.6356", "356.401, 354.85, 58.1, 0.6102", "356.997, 354.049, 57.0534, 0.5848", "357.526, 353.211, 57.6134, 0.5338", "358.608, 353.209, 57.6884, 0.4322", "359.684, 353.458, 57.2068, 0.356", "360.775, 353.277, 56.8254, 0.305", "361.692, 352.898, 58.0703, 0.356", "362.714, 352.558, 57.9326, 0.4322", "363.646, 352.438, 59.1282, 0.5084", "364.592, 352.091, 59.2558, 0.483", "365.676, 352.329, 58.856, 0.3814", "366.202, 353.002, 60.06, 0.2796", "367.201, 352.654, 61.0033, 0.2288", "368.326, 352.581, 61.1965, 0.2288", "369.408, 352.383, 60.734, 0.2542", "370.447, 352.06, 59.9528, 0.305", "371.551, 352.065, 59.3947, 0.356", "372.22, 352.123, 57.6542, 0.3814", "372.961, 352.454, 57.5786, 0.3814", "373.891, 352.692, 59.0663, 0.3814", "375.018, 352.574, 59.134, 0.356", "376.151, 352.725, 59.0388, 0.305", "377.24, 352.681, 58.4506, 0.2542", "378.251, 352.274, 57.969, 0.2796", "379.309, 351.882, 58.0801, 0.356", "380.401, 351.607, 58.5371, 0.4322", "381.483, 351.261, 58.5785, 0.4322", "382.548, 350.848, 58.4514, 0.3814", "383.471, 350.206, 58.8011, 0.356", "384.405, 349.606, 59.4264, 0.3814", "385.459, 349.276, 60.0393, 0.4576", "386.457, 348.724, 60.0146, 0.483", "387.433, 348.159, 60.3868, 0.483", "388.431, 347.609, 60.2, 0.483", "389.413, 347.031, 60.1224, 0.5338", "390.431, 346.571, 60.2806, 0.5338", "391.407, 346.137, 60.1748, 0.4576", "392.393, 345.642, 59.7257, 0.3304", "393.272, 344.933, 59.5118, 0.2542", "394.298, 344.591, 59.6834, 0.2288", "395.071, 343.838, 59.7341, 0.2542", "396.013, 343.257, 60.0743, 0.3304", "396.513, 342.247, 59.7587, 0.4576", "396.778, 341.153, 59.7187, 0.5592", "397.231, 340.116, 59.7559, 0.5848", "397.667, 339.085, 59.9183, 0.5084", "398.039, 338.162, 59.2841, 0.4068", "398.113, 337.123, 58.8087, 0.3304", "398.684, 336.222, 59.36, 0.356" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "415.272, 67.8519, 129.671, 0.5084", "415.574, 67.9849, 131.331, 0.2796", "416.033, 68.1869, 133.848, 0.2542", "416.491, 68.3888, 136.365, 0.2288", "416.949, 68.5906, 138.883, 0.2288", "417.408, 68.7925, 141.4, 0.2288", "418.177, 69.1708, 141.4, 0.2288", "419.168, 69.7357, 141.4, 0.2542", "420.194, 70.2405, 141.4, 0.2796", "421.315, 70.3536, 141.4, 0.305", "422.459, 70.357, 141.4, 0.2796", "423.399, 70.9254, 141.4, 0.2542", "424.061, 71.8461, 141.4, 0.2288", "424.715, 72.7846, 141.4, 0.2288", "425.415, 73.6898, 141.4, 0.2288", "426.14, 74.5738, 141.4, 0.2288", "427.284, 74.5888, 141.4, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "415.272, 67.8519, 129.671, 0.5084", "415.35, 67.4737, 130.077, 0.2288", "415.386, 66.352, 130.444, 0.2288", "415.208, 65.2359, 130.822, 0.2288", "415.16, 64.0985, 131.017, 0.2288", "415.107, 62.9562, 131.04, 0.2288", "414.718, 61.8993, 131.369, 0.2288", "414.445, 60.8861, 132.467, 0.2542", "413.961, 59.8787, 133.0, 0.305", "413.251, 58.9975, 133.0, 0.356", "412.284, 58.387, 133.0, 0.356", "411.311, 57.8008, 133.0, 0.305", "410.209, 57.4987, 133.0, 0.2542", "409.133, 57.1268, 133.0, 0.2288", "408.154, 56.5373, 133.0, 0.2288", "407.147, 55.999, 133.0, 0.2288", "406.223, 55.3256, 133.0, 0.2288", "405.279, 54.7602, 133.0, 0.2542", "404.232, 54.4362, 133.0, 0.2796", "403.427, 53.7209, 132.427, 0.305", "402.467, 53.2764, 131.693, 0.2796", "401.874, 52.4318, 131.344, 0.2542", "401.366, 51.4169, 131.087, 0.2288", "401.099, 50.3961, 130.152, 0.2288", "401.025, 49.2637, 129.93, 0.2288", "400.749, 48.198, 129.217, 0.2288", "400.195, 47.2153, 128.8, 0.2288", "399.63, 46.2205, 128.8, 0.2288", "399.056, 45.2316, 128.8, 0.2288", "398.591, 44.2048, 128.8, 0.2288", "398.232, 43.1327, 128.697, 0.2288", "397.642, 42.1613, 128.414, 0.2288", "397.062, 41.1842, 128.24, 0.2288", "396.666, 40.1169, 128.212, 0.2288", "396.308, 39.0547, 127.826, 0.2288", "395.835, 38.0523, 127.133, 0.2288", "395.395, 37.0276, 126.539, 0.2288", "394.799, 36.0987, 126.125, 0.2288", "394.098, 35.2051, 126.0, 0.2288", "393.376, 34.3221, 126.0, 0.2288", "392.445, 33.6997, 125.8, 0.2288", "391.574, 33.0792, 124.909, 0.2288", "390.939, 32.1789, 124.39, 0.2288", "390.262, 31.2608, 124.32, 0.2288", "389.642, 30.3009, 124.32, 0.2288", "388.931, 29.4074, 124.32, 0.2288", "388.199, 28.5293, 124.386, 0.2288", "387.501, 27.6432, 124.825, 0.2288", "386.77, 26.7735, 124.618, 0.2288", "386.051, 25.9156, 124.047, 0.2796", "385.299, 25.0536, 124.04, 0.4068" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_256",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_257",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_36", "dend_13", "dend_8", "dend_7", "dend_2", "dend_1", "apic_0", "dend_0", "dend_27", "dend_14", "dend_12", "dend_9", "dend_6", "dend_3", "apic_17", "apic_1", "dend_33", "dend_28", "dend_26", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "apic_19", "apic_18", "apic_16", "apic_2", "dend_35", "dend_34", "dend_32", "dend_29", "dend_23", "dend_16", "apic_15", "apic_3", "dend_31", "dend_30", "dend_25", "dend_24", "dend_20", "dend_17", "apic_14", "apic_4", "dend_22", "dend_21", "dend_19", "dend_18", "apic_9", "apic_5", "apic_13", "apic_10", "apic_8", "apic_7", "apic_6", "apic_12", "apic_11" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_36", "dend_13", "dend_8", "dend_7", "dend_2", "dend_1", "dend_0", "dend_27", "dend_14", "dend_12", "dend_9", "dend_6", "dend_3", "dend_33", "dend_28", "dend_26", "dend_15", "dend_11", "dend_10", "dend_5", "dend_4", "dend_35", "dend_34", "dend_32", "dend_29", "dend_23", "dend_16", "dend_31", "dend_30", "dend_25", "dend_24", "dend_20", "dend_17", "dend_22", "dend_21", "dend_19", "dend_18" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_17", "apic_1", "apic_19", "apic_18", "apic_16", "apic_2", "apic_15", "apic_3", "apic_14", "apic_4", "apic_9", "apic_5", "apic_13", "apic_10", "apic_8", "apic_7", "apic_6", "apic_12", "apic_11" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12081",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "apic_14", "apic_14", "apic_4", "apic_4", "apic_4", "apic_4", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_5", "apic_5", "apic_5", "apic_5", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.41"
  }, {
    "group" : "dend",
    "value" : "2.41"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "87.55"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0019314326",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.004652238",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.3221471",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "8.0676115E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0028963906",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.7002557E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.463046E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.06675621",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "7.1672804E-4",
    "erev" : "-94.96627"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "9.800171E-4",
    "erev" : "-94.96627"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "5.007056E-6",
    "erev" : "-94.96627"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "2.4252391E-5",
    "erev" : "-94.96627"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.5103264E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0018091077",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473862496

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: soma_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_13
create dend_27
public dend_27
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_17, id: apic_17, parent: apic_0
create apic_17
public apic_17
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_1
create apic_16
public apic_16
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: apic_15, id: apic_15, parent: apic_2
create apic_15
public apic_15
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: apic_14, id: apic_14, parent: apic_3
create apic_14
public apic_14
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: apic_9, id: apic_9, parent: apic_4
create apic_9
public apic_9
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_8, id: apic_8, parent: apic_5
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_256, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_256
// Group: {name=ModelViewParmSubset_257, groups=[], sections=[dend_37, dend_36, dend_13, dend_8, dend_7, dend_2, dend_1, apic_0, dend_0, dend_27, dend_14, dend_12, dend_9, dend_6, dend_3, apic_17, apic_1, dend_33, dend_28, dend_26, dend_15, dend_11, dend_10, dend_5, dend_4, apic_19, apic_18, apic_16, apic_2, dend_35, dend_34, dend_32, dend_29, dend_23, dend_16, apic_15, apic_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_17, apic_14, apic_4, dend_22, dend_21, dend_19, dend_18, apic_9, apic_5, apic_13, apic_10, apic_8, apic_7, apic_6, apic_12, apic_11]}
objref ModelViewParmSubset_257
// Group: {name=dend, groups=[], sections=[dend_37, dend_36, dend_13, dend_8, dend_7, dend_2, dend_1, dend_0, dend_27, dend_14, dend_12, dend_9, dend_6, dend_3, dend_33, dend_28, dend_26, dend_15, dend_11, dend_10, dend_5, dend_4, dend_35, dend_34, dend_32, dend_29, dend_23, dend_16, dend_31, dend_30, dend_25, dend_24, dend_20, dend_17, dend_22, dend_21, dend_19, dend_18]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_17, apic_1, apic_19, apic_18, apic_16, apic_2, apic_15, apic_3, apic_14, apic_4, apic_9, apic_5, apic_13, apic_10, apic_8, apic_7, apic_6, apic_12, apic_11]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_12081, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_12081
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, apic_14, apic_14, apic_4, apic_4, apic_4, apic_4, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_37(0), soma_0(0.5)
    connect dend_36(0), soma_0(0.5)
    connect dend_13(0), soma_0(0.5)
    connect dend_8(0), soma_0(0.5)
    connect dend_7(0), soma_0(0.5)
    connect dend_2(0), soma_0(0.5)
    connect dend_1(0), soma_0(0.5)
    connect apic_0(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_17(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect apic_15(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect apic_14(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect apic_9(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_8(0), apic_5(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 288.677, 438.15, 37.8459, 14.2848 ) }
    soma_0 { pt3dadd( 295.819, 438.15, 37.8459, 14.2848 ) }
    soma_0 { pt3dadd( 302.961, 438.15, 37.8459, 14.2848 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 295.819, 438.15, 37.8459, 1.0 ) }
    axon_0 { pt3dadd( 301.66, 451.966, 37.8459, 1.0 ) }
    axon_0 { pt3dadd( 307.502, 465.782, 37.8459, 1.0 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 290.963, 438.088, 49.7157, 0.2288 ) }
    dend_37 { pt3dadd( 290.153, 438.077, 51.6933, 0.2288 ) }
    dend_37 { pt3dadd( 289.343, 438.066, 53.6715, 0.2796 ) }
    dend_37 { pt3dadd( 288.534, 438.056, 55.6503, 0.3814 ) }
    dend_37 { pt3dadd( 287.851, 437.839, 56.1022, 0.483 ) }
    dend_37 { pt3dadd( 286.951, 437.661, 54.5916, 0.483 ) }
    dend_37 { pt3dadd( 285.846, 437.504, 54.2128, 0.4068 ) }
    dend_37 { pt3dadd( 285.08, 437.509, 55.3904, 0.356 ) }
    dend_37 { pt3dadd( 284.572, 437.295, 57.1197, 0.356 ) }
    dend_37 { pt3dadd( 284.059, 436.629, 55.2818, 0.356 ) }
    dend_37 { pt3dadd( 283.306, 435.925, 54.5507, 0.3304 ) }
    dend_37 { pt3dadd( 282.45, 435.311, 55.4257, 0.305 ) }
    dend_37 { pt3dadd( 281.861, 434.892, 57.2754, 0.3304 ) }
    dend_37 { pt3dadd( 281.493, 435.18, 59.7713, 0.3814 ) }
    dend_37 { pt3dadd( 280.564, 435.5, 59.1066, 0.4576 ) }
    dend_37 { pt3dadd( 279.654, 435.643, 58.06, 0.5338 ) }
    dend_37 { pt3dadd( 278.553, 435.704, 58.5245, 0.5338 ) }
    dend_37 { pt3dadd( 277.444, 435.509, 58.693, 0.5084 ) }
    dend_37 { pt3dadd( 276.316, 435.346, 58.7952, 0.4322 ) }
    dend_37 { pt3dadd( 275.19, 435.398, 58.5707, 0.4576 ) }
    dend_37 { pt3dadd( 274.311, 435.515, 60.02, 0.483 ) }
    dend_37 { pt3dadd( 273.256, 435.808, 60.7384, 0.5338 ) }
    dend_37 { pt3dadd( 272.194, 436.051, 61.5146, 0.5084 ) }
    dend_37 { pt3dadd( 271.404, 435.359, 61.0736, 0.4576 ) }
    dend_37 { pt3dadd( 270.654, 434.834, 62.6805, 0.3814 ) }
    dend_37 { pt3dadd( 269.525, 434.715, 62.4302, 0.3814 ) }
    dend_37 { pt3dadd( 268.58, 434.119, 61.9046, 0.4322 ) }
    dend_37 { pt3dadd( 267.652, 433.626, 61.693, 0.5338 ) }
    dend_37 { pt3dadd( 266.827, 433.698, 63.28, 0.5338 ) }
    dend_37 { pt3dadd( 265.971, 433.14, 63.5144, 0.5592 ) }
    dend_37 { pt3dadd( 264.93, 433.318, 62.8956, 0.5592 ) }
    dend_37 { pt3dadd( 263.984, 433.017, 64.0744, 0.6356 ) }
    dend_37 { pt3dadd( 263.057, 432.433, 64.085, 0.6356 ) }
    dend_37 { pt3dadd( 262.397, 431.514, 64.3541, 0.6356 ) }
    dend_37 { pt3dadd( 261.58, 430.78, 64.9135, 0.5848 ) }
    dend_37 { pt3dadd( 260.532, 430.423, 64.7024, 0.5338 ) }
    dend_37 { pt3dadd( 259.473, 430.257, 65.2971, 0.4576 ) }
    dend_37 { pt3dadd( 258.958, 429.566, 63.9573, 0.4322 ) }
    dend_37 { pt3dadd( 258.31, 428.647, 63.5844, 0.4576 ) }
    dend_37 { pt3dadd( 257.289, 428.613, 64.5988, 0.5084 ) }
    dend_37 { pt3dadd( 256.322, 428.796, 65.9254, 0.483 ) }
    dend_37 { pt3dadd( 255.305, 428.642, 66.9183, 0.3814 ) }
    dend_37 { pt3dadd( 254.263, 428.207, 67.2711, 0.305 ) }
    dend_37 { pt3dadd( 253.354, 427.715, 66.2805, 0.2796 ) }
    dend_37 { pt3dadd( 253.033, 426.71, 66.6159, 0.3304 ) }
    dend_37 { pt3dadd( 252.332, 426.217, 68.2424, 0.3304 ) }
    dend_37 { pt3dadd( 252.128, 425.145, 68.1184, 0.356 ) }
    dend_37 { pt3dadd( 251.832, 424.424, 68.521, 0.356 ) }
    dend_37 { pt3dadd( 251.118, 423.612, 68.6871, 0.4068 ) }
    dend_37 { pt3dadd( 250.786, 422.536, 68.7123, 0.4068 ) }
    dend_37 { pt3dadd( 249.87, 422.1, 69.5002, 0.4068 ) }
    dend_37 { pt3dadd( 248.945, 421.724, 70.737, 0.356 ) }
    dend_37 { pt3dadd( 247.822, 421.718, 70.5639, 0.3304 ) }
    dend_37 { pt3dadd( 246.793, 421.291, 70.261, 0.305 ) }
    dend_37 { pt3dadd( 245.745, 420.984, 70.2752, 0.3304 ) }
    dend_37 { pt3dadd( 244.803, 420.582, 71.398, 0.356 ) }
    dend_37 { pt3dadd( 244.086, 420.581, 73.5252, 0.3814 ) }
    dend_37 { pt3dadd( 243.062, 420.856, 72.9126, 0.4068 ) }
    dend_37 { pt3dadd( 242.344, 420.448, 74.7174, 0.483 ) }
    dend_37 { pt3dadd( 241.466, 419.873, 75.565, 0.5338 ) }
    dend_37 { pt3dadd( 240.843, 419.011, 76.5523, 0.5338 ) }
    dend_37 { pt3dadd( 240.17, 418.159, 77.2178, 0.4322 ) }
    dend_37 { pt3dadd( 239.387, 417.562, 78.3504, 0.356 ) }
    dend_37 { pt3dadd( 238.482, 417.722, 79.8568, 0.2796 ) }
    dend_37 { pt3dadd( 237.723, 418.475, 80.64, 0.2542 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 71/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 298.023, 444.484, 40.0235, 0.2288 ) }
    dend_36 { pt3dadd( 298.598, 445.471, 40.0901, 0.2288 ) }
    dend_36 { pt3dadd( 299.265, 446.391, 40.115, 0.2288 ) }
    dend_36 { pt3dadd( 299.997, 447.268, 40.0484, 0.2288 ) }
    dend_36 { pt3dadd( 300.703, 448.032, 40.9002, 0.2288 ) }
    dend_36 { pt3dadd( 301.459, 448.812, 41.3815, 0.2288 ) }
    dend_36 { pt3dadd( 302.229, 449.657, 41.3641, 0.2288 ) }
    dend_36 { pt3dadd( 302.53, 450.702, 41.3291, 0.2288 ) }
    dend_36 { pt3dadd( 302.493, 451.843, 41.3381, 0.2542 ) }
    dend_36 { pt3dadd( 302.399, 452.983, 41.3787, 0.2796 ) }
    dend_36 { pt3dadd( 302.804, 453.99, 41.4145, 0.305 ) }
    dend_36 { pt3dadd( 303.595, 454.806, 41.3941, 0.2796 ) }
    dend_36 { pt3dadd( 304.437, 455.441, 42.2752, 0.2542 ) }
    dend_36 { pt3dadd( 305.018, 455.739, 44.4976, 0.2288 ) }
    dend_36 { pt3dadd( 305.334, 456.598, 45.92, 0.2288 ) }
    dend_36 { pt3dadd( 305.338, 457.742, 45.92, 0.2288 ) }
    dend_36 { pt3dadd( 305.423, 458.882, 45.92, 0.2288 ) }
    dend_36 { pt3dadd( 305.448, 460.026, 45.92, 0.2288 ) }
    dend_36 { pt3dadd( 305.448, 461.17, 45.92, 0.2542 ) }
    dend_36 { pt3dadd( 305.448, 462.314, 45.92, 0.3304 ) }
    dend_36 { pt3dadd( 305.448, 463.458, 45.92, 0.4068 ) }
    dend_36 { pt3dadd( 305.477, 464.597, 45.92, 0.4322 ) }
    dend_36 { pt3dadd( 305.944, 465.617, 46.1306, 0.356 ) }
    dend_36 { pt3dadd( 306.249, 466.608, 47.119, 0.2796 ) }
    dend_36 { pt3dadd( 306.249, 467.747, 47.32, 0.2542 ) }
    dend_36 { pt3dadd( 306.168, 468.866, 47.549, 0.305 ) }
    dend_36 { pt3dadd( 305.732, 469.804, 48.5363, 0.356 ) }
    dend_36 { pt3dadd( 305.097, 470.647, 49.28, 0.3814 ) }
    dend_36 { pt3dadd( 304.5, 471.617, 49.28, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_36 { pt3dadd( 304.079, 472.636, 49.28, 0.3814 ) }
    dend_36 { pt3dadd( 303.803, 473.732, 49.28, 0.3814 ) }
    dend_36 { pt3dadd( 303.236, 474.716, 49.28, 0.356 ) }
    dend_36 { pt3dadd( 302.331, 475.342, 49.28, 0.3304 ) }
    dend_36 { pt3dadd( 301.468, 476.039, 49.28, 0.2796 ) }
    dend_36 { pt3dadd( 300.872, 477.001, 49.4872, 0.2542 ) }
    dend_36 { pt3dadd( 300.589, 478.003, 50.4496, 0.2542 ) }
    dend_36 { pt3dadd( 300.525, 479.096, 50.9432, 0.2796 ) }
    dend_36 { pt3dadd( 299.985, 480.013, 51.1515, 0.305 ) }
    dend_36 { pt3dadd( 299.111, 480.743, 51.3461, 0.2796 ) }
    dend_36 { pt3dadd( 298.341, 481.578, 51.4836, 0.2542 ) }
    dend_36 { pt3dadd( 297.629, 482.473, 51.52, 0.2288 ) }
    dend_36 { pt3dadd( 297.332, 483.545, 51.536, 0.2796 ) }
    dend_36 { pt3dadd( 296.832, 484.499, 52.2082, 0.356 ) }
    dend_36 { pt3dadd( 296.576, 485.589, 52.4303, 0.4322 ) }
    dend_36 { pt3dadd( 296.381, 486.701, 52.8497, 0.4068 ) }
    dend_36 { pt3dadd( 296.304, 487.839, 52.92, 0.356 ) }
    dend_36 { pt3dadd( 295.408, 488.255, 53.7468, 0.305 ) }
    dend_36 { pt3dadd( 294.267, 488.259, 53.76, 0.305 ) }
    dend_36 { pt3dadd( 293.779, 488.902, 55.5727, 0.2796 ) }
    dend_36 { pt3dadd( 293.802, 489.855, 57.0682, 0.305 ) }
    dend_36 { pt3dadd( 294.185, 490.778, 57.68, 0.3304 ) }
    dend_36 { pt3dadd( 295.173, 491.351, 57.68, 0.3814 ) }
    dend_36 { pt3dadd( 295.948, 492.11, 57.68, 0.3304 ) }
    dend_36 { pt3dadd( 296.416, 493.129, 58.088, 0.305 ) }
    dend_36 { pt3dadd( 297.22, 493.694, 59.0072, 0.305 ) }
    dend_36 { pt3dadd( 297.99, 494.401, 59.838, 0.356 ) }
    dend_36 { pt3dadd( 298.547, 495.243, 61.04, 0.4068 ) }
    dend_36 { pt3dadd( 299.656, 495.437, 61.0767, 0.4068 ) }
    dend_36 { pt3dadd( 300.239, 496.355, 61.88, 0.4068 ) }
    dend_36 { pt3dadd( 301.044, 497.162, 61.88, 0.3304 ) }
    dend_36 { pt3dadd( 302.031, 497.734, 61.952, 0.2796 ) }
    dend_36 { pt3dadd( 303.027, 498.235, 62.44, 0.2288 ) }
    dend_36 { pt3dadd( 304.046, 498.652, 62.6758, 0.2288 ) }
    dend_36 { pt3dadd( 304.771, 499.457, 63.5298, 0.2288 ) }
    dend_36 { pt3dadd( 305.568, 500.24, 63.84, 0.2542 ) }
    dend_36 { pt3dadd( 306.551, 500.82, 63.84, 0.2796 ) }
    dend_36 { pt3dadd( 307.582, 501.317, 63.84, 0.3304 ) }
    dend_36 { pt3dadd( 308.596, 501.772, 64.2645, 0.3304 ) }
    dend_36 { pt3dadd( 309.375, 502.205, 65.8448, 0.3304 ) }
    dend_36 { pt3dadd( 310.221, 502.429, 67.3019, 0.2796 ) }
    dend_36 { pt3dadd( 311.152, 502.444, 68.7529, 0.2542 ) }
    dend_36 { pt3dadd( 312.156, 502.281, 69.44, 0.2288 ) }
    dend_36 { pt3dadd( 313.251, 501.956, 69.44, 0.2288 ) }
    dend_36 { pt3dadd( 314.327, 501.589, 69.7147, 0.2288 ) }
    dend_36 { pt3dadd( 315.398, 501.204, 69.956, 0.2288 ) }
    dend_36 { pt3dadd( 316.334, 500.565, 70.0, 0.2542 ) }
    dend_36 { pt3dadd( 316.748, 499.539, 70.0, 0.2796 ) }
    dend_36 { pt3dadd( 317.572, 498.815, 70.0146, 0.305 ) }
    dend_36 { pt3dadd( 318.659, 498.483, 70.2705, 0.2796 ) }
    dend_36 { pt3dadd( 319.652, 497.928, 70.5558, 0.2542 ) }
    dend_36 { pt3dadd( 320.686, 497.439, 70.56, 0.2288 ) }
    dend_36 { pt3dadd( 321.57, 496.713, 70.56, 0.2288 ) }
    dend_36 { pt3dadd( 322.494, 496.038, 70.56, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 54/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 289.637, 440.813, 41.7805, 0.2288 ) }
    dend_13 { pt3dadd( 288.589, 441.246, 42.0028, 0.2542 ) }
    dend_13 { pt3dadd( 287.477, 441.457, 41.9728, 0.3304 ) }
    dend_13 { pt3dadd( 286.536, 441.97, 41.8118, 0.4068 ) }
    dend_13 { pt3dadd( 285.867, 442.885, 41.7598, 0.4576 ) }
    dend_13 { pt3dadd( 285.427, 443.922, 41.4565, 0.4322 ) }
    dend_13 { pt3dadd( 285.205, 444.857, 40.0646, 0.4322 ) }
    dend_13 { pt3dadd( 285.085, 445.855, 38.7332, 0.4322 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 62/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 298.988, 443.469, 32.4691, 0.3304 ) }
    dend_8 { pt3dadd( 299.308, 444.462, 31.785, 0.3814 ) }
    dend_8 { pt3dadd( 299.212, 445.591, 31.5728, 0.3814 ) }
    dend_8 { pt3dadd( 299.222, 446.733, 31.3922, 0.4322 ) }
    dend_8 { pt3dadd( 298.601, 447.606, 31.2878, 0.483 ) }
    dend_8 { pt3dadd( 298.495, 448.652, 31.92, 0.483 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 68/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 302.401, 437.557, 41.8894, 0.2542 ) }
    dend_7 { pt3dadd( 303.493, 437.47, 42.4472, 0.3304 ) }
    dend_7 { pt3dadd( 304.449, 437.47, 40.9637, 0.4068 ) }
    dend_7 { pt3dadd( 305.202, 437.383, 39.002, 0.4576 ) }
    dend_7 { pt3dadd( 305.933, 437.618, 37.0703, 0.4068 ) }
    dend_7 { pt3dadd( 307.01, 437.785, 37.0454, 0.4068 ) }
    dend_7 { pt3dadd( 307.975, 437.535, 37.4209, 0.4322 ) }
    dend_7 { pt3dadd( 308.579, 436.867, 36.9256, 0.5084 ) }
    dend_7 { pt3dadd( 309.43, 436.493, 35.8148, 0.483 ) }
    dend_7 { pt3dadd( 310.053, 435.615, 35.4564, 0.3814 ) }
    dend_7 { pt3dadd( 310.031, 434.547, 35.6499, 0.2796 ) }
    dend_7 { pt3dadd( 309.786, 433.47, 36.3695, 0.2796 ) }
    dend_7 { pt3dadd( 310.118, 432.828, 35.3394, 0.3814 ) }
    dend_7 { pt3dadd( 310.853, 433.464, 35.8137, 0.483 ) }
    dend_7 { pt3dadd( 311.431, 434.437, 35.5771, 0.5084 ) }
    dend_7 { pt3dadd( 312.167, 434.879, 34.6562, 0.4322 ) }
    dend_7 { pt3dadd( 312.979, 434.768, 33.369, 0.3814 ) }
    dend_7 { pt3dadd( 313.99, 434.861, 33.1545, 0.356 ) }
    dend_7 { pt3dadd( 315.084, 434.66, 33.7795, 0.4322 ) }
    dend_7 { pt3dadd( 316.163, 434.388, 34.4282, 0.5084 ) }
    dend_7 { pt3dadd( 317.269, 434.642, 34.6797, 0.5848 ) }
    dend_7 { pt3dadd( 318.142, 434.922, 33.0775, 0.5848 ) }
    dend_7 { pt3dadd( 319.175, 434.703, 32.0799, 0.5338 ) }
    dend_7 { pt3dadd( 320.284, 434.577, 32.2459, 0.4576 ) }
    dend_7 { pt3dadd( 321.217, 434.33, 32.7676, 0.4322 ) }
    dend_7 { pt3dadd( 322.226, 434.127, 32.3201, 0.4068 ) }
    dend_7 { pt3dadd( 323.363, 434.092, 32.3257, 0.4576 ) }
    dend_7 { pt3dadd( 324.429, 434.255, 33.033, 0.483 ) }
    dend_7 { pt3dadd( 325.15, 434.737, 31.6652, 0.5848 ) }
    dend_7 { pt3dadd( 326.051, 435.331, 31.9687, 0.6356 ) }
    dend_7 { pt3dadd( 326.934, 435.943, 31.899, 0.661 ) }
    dend_7 { pt3dadd( 327.913, 436.436, 32.4755, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_7 { pt3dadd( 328.876, 436.829, 33.5493, 0.5592 ) }
    dend_7 { pt3dadd( 329.629, 437.618, 33.9086, 0.5338 ) }
    dend_7 { pt3dadd( 330.112, 438.397, 32.5738, 0.5592 ) }
    dend_7 { pt3dadd( 330.96, 438.93, 31.4513, 0.5338 ) }
    dend_7 { pt3dadd( 331.626, 439.393, 33.2623, 0.483 ) }
    dend_7 { pt3dadd( 332.025, 439.319, 35.3508, 0.4068 ) }
    dend_7 { pt3dadd( 332.925, 438.883, 34.1034, 0.4322 ) }
    dend_7 { pt3dadd( 333.9, 439.002, 32.8521, 0.5084 ) }
    dend_7 { pt3dadd( 334.927, 439.455, 32.4974, 0.5592 ) }
    dend_7 { pt3dadd( 335.926, 439.651, 33.4387, 0.5592 ) }
    dend_7 { pt3dadd( 337.0, 439.54, 33.5446, 0.5338 ) }
    dend_7 { pt3dadd( 337.864, 439.836, 32.1924, 0.5084 ) }
    dend_7 { pt3dadd( 338.913, 439.579, 32.5562, 0.4576 ) }
    dend_7 { pt3dadd( 339.908, 439.583, 31.5143, 0.3814 ) }
    dend_7 { pt3dadd( 340.933, 440.013, 31.4594, 0.356 ) }
    dend_7 { pt3dadd( 341.974, 440.44, 31.9186, 0.356 ) }
    dend_7 { pt3dadd( 343.051, 440.808, 32.0566, 0.4322 ) }
    dend_7 { pt3dadd( 344.044, 441.125, 31.1556, 0.483 ) }
    dend_7 { pt3dadd( 345.089, 441.301, 31.183, 0.5592 ) }
    dend_7 { pt3dadd( 346.006, 441.754, 32.3156, 0.6102 ) }
    dend_7 { pt3dadd( 347.117, 441.841, 32.2479, 0.6864 ) }
    dend_7 { pt3dadd( 348.161, 442.244, 32.692, 0.7626 ) }
    dend_7 { pt3dadd( 349.24, 442.169, 31.8716, 0.788 ) }
    dend_7 { pt3dadd( 350.286, 442.26, 31.6982, 0.7626 ) }
    dend_7 { pt3dadd( 351.218, 441.716, 31.3989, 0.6864 ) }
    dend_7 { pt3dadd( 352.349, 441.59, 31.5431, 0.6356 ) }
    dend_7 { pt3dadd( 353.463, 441.745, 31.843, 0.6102 ) }
    dend_7 { pt3dadd( 354.487, 442.196, 31.4608, 0.6102 ) }
    dend_7 { pt3dadd( 355.519, 442.392, 30.4346, 0.6102 ) }
    dend_7 { pt3dadd( 356.452, 443.047, 30.4212, 0.5848 ) }
    dend_7 { pt3dadd( 357.272, 443.812, 30.7115, 0.5592 ) }
    dend_7 { pt3dadd( 358.364, 444.087, 31.0741, 0.5084 ) }
    dend_7 { pt3dadd( 359.492, 444.01, 31.2631, 0.5084 ) }
    dend_7 { pt3dadd( 360.585, 443.761, 30.7546, 0.4576 ) }
    dend_7 { pt3dadd( 361.668, 443.418, 30.4856, 0.4576 ) }
    dend_7 { pt3dadd( 362.741, 443.513, 30.0082, 0.4068 ) }
    dend_7 { pt3dadd( 363.742, 443.901, 30.6412, 0.4322 ) }
    dend_7 { pt3dadd( 364.694, 443.872, 29.846, 0.4068 ) }
    dend_7 { pt3dadd( 365.703, 443.822, 28.8876, 0.4322 ) }
    dend_7 { pt3dadd( 366.578, 444.445, 28.7048, 0.4068 ) }
    dend_7 { pt3dadd( 367.55, 444.761, 28.6832, 0.4322 ) }
    dend_7 { pt3dadd( 368.321, 444.953, 30.6824, 0.4068 ) }
    dend_7 { pt3dadd( 369.249, 444.723, 31.6022, 0.4068 ) }
    dend_7 { pt3dadd( 370.284, 444.632, 30.8756, 0.356 ) }
    dend_7 { pt3dadd( 371.237, 444.219, 30.8983, 0.356 ) }
    dend_7 { pt3dadd( 371.948, 443.429, 31.1368, 0.4068 ) }
    dend_7 { pt3dadd( 372.581, 442.6, 30.9086, 0.5084 ) }
    dend_7 { pt3dadd( 373.378, 442.124, 31.7313, 0.5848 ) }
    dend_7 { pt3dadd( 374.494, 442.081, 31.5932, 0.6102 ) }
    dend_7 { pt3dadd( 375.548, 442.149, 32.4453, 0.6102 ) }
    dend_7 { pt3dadd( 376.582, 441.8, 33.1778, 0.6102 ) }
    dend_7 { pt3dadd( 377.698, 441.682, 33.523, 0.5592 ) }
    dend_7 { pt3dadd( 378.759, 441.299, 33.0957, 0.4576 ) }
    dend_7 { pt3dadd( 379.722, 440.737, 33.2125, 0.3304 ) }
    dend_7 { pt3dadd( 380.604, 440.394, 34.1398, 0.2796 ) }
    dend_7 { pt3dadd( 381.685, 440.399, 34.7119, 0.3304 ) }
    dend_7 { pt3dadd( 382.515, 439.781, 35.4592, 0.4576 ) }
    dend_7 { pt3dadd( 383.04, 438.814, 35.9335, 0.5592 ) }
    dend_7 { pt3dadd( 383.688, 438.014, 37.1076, 0.5592 ) }
    dend_7 { pt3dadd( 384.473, 437.289, 38.1041, 0.5084 ) }
    dend_7 { pt3dadd( 385.33, 436.613, 38.2066, 0.483 ) }
    dend_7 { pt3dadd( 386.272, 436.057, 38.7346, 0.5338 ) }
    dend_7 { pt3dadd( 387.126, 435.323, 38.5207, 0.5848 ) }
    dend_7 { pt3dadd( 388.148, 434.828, 38.3824, 0.5592 ) }
    dend_7 { pt3dadd( 389.18, 434.448, 37.9014, 0.5084 ) }
    dend_7 { pt3dadd( 390.313, 434.431, 37.9254, 0.4322 ) }
    dend_7 { pt3dadd( 391.445, 434.548, 37.9282, 0.4068 ) }
    dend_7 { pt3dadd( 392.49, 434.286, 38.0086, 0.4068 ) }
    dend_7 { pt3dadd( 393.591, 434.077, 38.3482, 0.4068 ) }
    dend_7 { pt3dadd( 394.665, 434.039, 39.0718, 0.4068 ) }
    dend_7 { pt3dadd( 395.721, 434.242, 38.5664, 0.356 ) }
    dend_7 { pt3dadd( 396.12, 434.919, 38.7344, 0.3304 ) }
    dend_7 { pt3dadd( 396.879, 435.195, 40.3147, 0.305 ) }
    dend_7 { pt3dadd( 397.883, 435.635, 39.76, 0.2796 ) }
    // Section: dend_2, id: dend_2, parent: soma_0 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 290.23, 436.089, 29.6554, 0.2542 ) }
    dend_2 { pt3dadd( 289.28, 435.746, 28.3478, 0.2796 ) }
    dend_2 { pt3dadd( 288.239, 435.515, 28.5558, 0.305 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 77/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 301.901, 435.334, 31.0394, 0.356 ) }
    dend_1 { pt3dadd( 302.426, 434.353, 31.0677, 0.4322 ) }
    dend_1 { pt3dadd( 302.705, 433.326, 31.9598, 0.4068 ) }
    dend_1 { pt3dadd( 302.819, 432.242, 32.4178, 0.3304 ) }
    dend_1 { pt3dadd( 302.821, 431.111, 32.0491, 0.2542 ) }
    dend_1 { pt3dadd( 302.96, 429.984, 31.92, 0.2542 ) }
    dend_1 { pt3dadd( 303.468, 428.978, 31.92, 0.305 ) }
    dend_1 { pt3dadd( 304.195, 428.1, 31.92, 0.3814 ) }
    dend_1 { pt3dadd( 304.796, 427.128, 31.92, 0.4576 ) }
    dend_1 { pt3dadd( 305.791, 426.598, 31.92, 0.5084 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 87/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 297.073, 431.634, 34.7192, 0.4068 ) }
    apic_0 { pt3dadd( 297.086, 431.16, 37.0476, 0.3814 ) }
    apic_0 { pt3dadd( 296.765, 431.238, 39.7194, 0.4068 ) }
    apic_0 { pt3dadd( 296.496, 430.698, 41.167, 0.4322 ) }
    apic_0 { pt3dadd( 296.627, 429.69, 40.2777, 0.5592 ) }
    apic_0 { pt3dadd( 297.008, 428.788, 38.8427, 0.6102 ) }
    apic_0 { pt3dadd( 297.446, 427.882, 37.5147, 0.6356 ) }
    apic_0 { pt3dadd( 297.581, 426.809, 37.7152, 0.5848 ) }
    apic_0 { pt3dadd( 298.114, 425.885, 38.5753, 0.5338 ) }
    apic_0 { pt3dadd( 298.126, 424.996, 40.32, 0.4322 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 97/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 302.01, 440.375, 33.4466, 0.356 ) }
    dend_0 { pt3dadd( 303.048, 440.815, 33.1125, 0.4322 ) }
    dend_0 { pt3dadd( 304.092, 441.242, 32.9092, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_0 { pt3dadd( 305.154, 441.41, 32.0841, 0.4068 ) }
    dend_0 { pt3dadd( 306.176, 441.157, 31.197, 0.3814 ) }
    dend_0 { pt3dadd( 307.178, 440.68, 31.2085, 0.3814 ) }
    dend_0 { pt3dadd( 308.243, 440.337, 31.7083, 0.3814 ) }
    dend_0 { pt3dadd( 309.016, 439.846, 30.6653, 0.4068 ) }
    dend_0 { pt3dadd( 309.93, 439.384, 29.7623, 0.483 ) }
    dend_0 { pt3dadd( 310.86, 439.447, 28.3293, 0.6356 ) }
    dend_0 { pt3dadd( 311.737, 440.123, 29.0226, 0.7626 ) }
    dend_0 { pt3dadd( 312.723, 440.631, 29.3303, 0.788 ) }
    dend_0 { pt3dadd( 313.849, 440.797, 29.2023, 0.6864 ) }
    dend_0 { pt3dadd( 314.908, 440.66, 29.8032, 0.6102 ) }
    dend_0 { pt3dadd( 315.94, 440.535, 30.3929, 0.6102 ) }
    dend_0 { pt3dadd( 317.01, 440.902, 30.4634, 0.6102 ) }
    dend_0 { pt3dadd( 318.083, 441.25, 30.2014, 0.5848 ) }
    dend_0 { pt3dadd( 318.768, 441.956, 29.0898, 0.5084 ) }
    dend_0 { pt3dadd( 319.715, 442.278, 27.9656, 0.5592 ) }
    dend_0 { pt3dadd( 320.812, 442.356, 28.1487, 0.6102 ) }
    dend_0 { pt3dadd( 321.568, 441.8, 28.562, 0.7118 ) }
    dend_0 { pt3dadd( 322.052, 442.091, 26.6644, 0.6864 ) }
    dend_0 { pt3dadd( 322.892, 442.735, 26.6874, 0.6102 ) }
    dend_0 { pt3dadd( 323.922, 442.966, 25.8129, 0.5084 ) }
    dend_0 { pt3dadd( 324.875, 443.245, 25.7082, 0.4576 ) }
    dend_0 { pt3dadd( 325.953, 443.425, 25.433, 0.483 ) }
    dend_0 { pt3dadd( 326.62, 442.559, 25.3868, 0.5084 ) }
    dend_0 { pt3dadd( 327.088, 441.687, 25.739, 0.5592 ) }
    dend_0 { pt3dadd( 328.057, 441.149, 26.3802, 0.6102 ) }
    dend_0 { pt3dadd( 328.977, 441.354, 27.6158, 0.661 ) }
    dend_0 { pt3dadd( 329.537, 441.992, 28.4595, 0.6864 ) }
    dend_0 { pt3dadd( 330.449, 442.56, 27.5618, 0.661 ) }
    dend_0 { pt3dadd( 331.452, 443.004, 27.2031, 0.6356 ) }
    dend_0 { pt3dadd( 332.566, 443.007, 27.6612, 0.6102 ) }
    dend_0 { pt3dadd( 333.228, 442.637, 25.7734, 0.6102 ) }
    dend_0 { pt3dadd( 333.827, 441.819, 25.3725, 0.6102 ) }
    dend_0 { pt3dadd( 334.903, 441.955, 25.5312, 0.5592 ) }
    dend_0 { pt3dadd( 335.894, 442.391, 26.3542, 0.5084 ) }
    dend_0 { pt3dadd( 336.93, 442.745, 27.141, 0.4322 ) }
    dend_0 { pt3dadd( 337.868, 443.078, 26.3329, 0.4576 ) }
    dend_0 { pt3dadd( 338.72, 443.016, 25.0502, 0.5084 ) }
    dend_0 { pt3dadd( 339.567, 442.296, 25.4201, 0.5592 ) }
    dend_0 { pt3dadd( 340.609, 441.9, 25.0524, 0.5084 ) }
    dend_0 { pt3dadd( 341.59, 442.369, 25.1798, 0.4068 ) }
    dend_0 { pt3dadd( 342.585, 442.92, 24.9082, 0.3814 ) }
    dend_0 { pt3dadd( 343.64, 443.236, 24.6571, 0.4322 ) }
    dend_0 { pt3dadd( 344.775, 443.237, 24.6907, 0.483 ) }
    dend_0 { pt3dadd( 345.9, 443.336, 25.0146, 0.483 ) }
    dend_0 { pt3dadd( 346.839, 443.403, 23.933, 0.4576 ) }
    dend_0 { pt3dadd( 347.799, 443.761, 24.3172, 0.483 ) }
    dend_0 { pt3dadd( 348.872, 444.071, 24.9141, 0.5084 ) }
    dend_0 { pt3dadd( 349.942, 443.895, 24.0685, 0.5592 ) }
    dend_0 { pt3dadd( 351.036, 443.863, 24.2721, 0.6102 ) }
    dend_0 { pt3dadd( 352.114, 443.922, 24.7951, 0.661 ) }
    dend_0 { pt3dadd( 353.243, 444.079, 24.7052, 0.6864 ) }
    dend_0 { pt3dadd( 354.36, 444.318, 24.8366, 0.6356 ) }
    dend_0 { pt3dadd( 355.485, 444.336, 24.9099, 0.5592 ) }
    dend_0 { pt3dadd( 356.612, 444.312, 24.5781, 0.4576 ) }
    dend_0 { pt3dadd( 357.729, 444.42, 24.0363, 0.4576 ) }
    dend_0 { pt3dadd( 358.59, 443.707, 24.2749, 0.5084 ) }
    dend_0 { pt3dadd( 359.642, 443.521, 24.3793, 0.6102 ) }
    dend_0 { pt3dadd( 360.743, 443.62, 23.9641, 0.661 ) }
    dend_0 { pt3dadd( 361.841, 443.53, 23.3604, 0.6864 ) }
    dend_0 { pt3dadd( 362.869, 443.234, 23.1028, 0.661 ) }
    dend_0 { pt3dadd( 363.884, 442.735, 23.5155, 0.6356 ) }
    dend_0 { pt3dadd( 364.912, 442.325, 23.9579, 0.6102 ) }
    dend_0 { pt3dadd( 365.676, 441.489, 23.9254, 0.6102 ) }
    dend_0 { pt3dadd( 366.613, 440.919, 24.1881, 0.5592 ) }
    dend_0 { pt3dadd( 367.567, 440.326, 24.64, 0.4576 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 66/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 307.502, 465.782, 37.8459, 1.0 ) }
    axon_1 { pt3dadd( 313.343, 479.598, 37.8459, 1.0 ) }
    axon_1 { pt3dadd( 319.184, 493.414, 37.8459, 1.0 ) }
    // Section: dend_27, id: dend_27, parent: dend_13 (entry count 69/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 285.085, 445.855, 38.7332, 0.4322 ) }
    dend_27 { pt3dadd( 284.562, 445.546, 41.4333, 0.2796 ) }
    dend_27 { pt3dadd( 284.07, 445.255, 43.8085, 0.2542 ) }
    dend_27 { pt3dadd( 283.118, 444.644, 43.8802, 0.2542 ) }
    dend_27 { pt3dadd( 282.72, 443.587, 43.8962, 0.305 ) }
    dend_27 { pt3dadd( 282.948, 442.47, 43.913, 0.3814 ) }
    dend_27 { pt3dadd( 283.32, 441.439, 44.0227, 0.4068 ) }
    dend_27 { pt3dadd( 282.658, 440.545, 44.0958, 0.3814 ) }
    dend_27 { pt3dadd( 281.72, 440.227, 43.8175, 0.305 ) }
    dend_27 { pt3dadd( 280.694, 440.463, 44.5441, 0.305 ) }
    dend_27 { pt3dadd( 279.766, 440.803, 45.6176, 0.356 ) }
    dend_27 { pt3dadd( 278.967, 441.362, 45.2158, 0.483 ) }
    dend_27 { pt3dadd( 278.621, 440.446, 43.9984, 0.5592 ) }
    dend_27 { pt3dadd( 278.435, 439.336, 43.6176, 0.6356 ) }
    dend_27 { pt3dadd( 277.839, 438.443, 42.9436, 0.6864 ) }
    dend_27 { pt3dadd( 277.481, 437.477, 43.946, 0.7118 ) }
    dend_27 { pt3dadd( 277.059, 436.465, 44.7384, 0.661 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 86/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 285.085, 445.855, 38.7332, 0.4322 ) }
    dend_14 { pt3dadd( 284.862, 446.366, 40.2172, 0.356 ) }
    dend_14 { pt3dadd( 284.068, 447.088, 39.48, 0.3304 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 298.495, 448.652, 31.92, 0.483 ) }
    dend_12 { pt3dadd( 298.17, 448.82, 33.5804, 0.4322 ) }
    dend_12 { pt3dadd( 297.485, 449.32, 35.0837, 0.4068 ) }
    dend_12 { pt3dadd( 297.111, 450.331, 35.3245, 0.3814 ) }
    dend_12 { pt3dadd( 296.706, 451.219, 34.062, 0.4068 ) }
    dend_12 { pt3dadd( 297.124, 452.152, 34.6542, 0.4322 ) }
    dend_12 { pt3dadd( 297.624, 453.174, 34.921, 0.4576 ) }
    dend_12 { pt3dadd( 298.316, 453.997, 34.0808, 0.483 ) }
    dend_12 { pt3dadd( 299.253, 454.604, 34.1804, 0.483 ) }
    dend_12 { pt3dadd( 300.242, 455.107, 33.5174, 0.4576 ) }
    dend_12 { pt3dadd( 301.215, 455.653, 33.2161, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 301.437, 456.218, 34.5797, 0.305 ) }
    dend_12 { pt3dadd( 300.94, 457.1, 34.841, 0.305 ) }
    dend_12 { pt3dadd( 300.136, 457.888, 34.8452, 0.4068 ) }
    dend_12 { pt3dadd( 299.463, 458.745, 34.1342, 0.483 ) }
    dend_12 { pt3dadd( 299.028, 459.705, 33.0593, 0.5084 ) }
    dend_12 { pt3dadd( 298.703, 460.699, 33.9976, 0.483 ) }
    dend_12 { pt3dadd( 298.431, 461.744, 34.3451, 0.4322 ) }
    dend_12 { pt3dadd( 297.846, 462.548, 33.9494, 0.4576 ) }
    dend_12 { pt3dadd( 297.69, 463.477, 32.5626, 0.4322 ) }
    dend_12 { pt3dadd( 297.402, 464.137, 33.5675, 0.4576 ) }
    dend_12 { pt3dadd( 297.092, 465.043, 34.4672, 0.4068 ) }
    dend_12 { pt3dadd( 296.939, 466.163, 34.3482, 0.4576 ) }
    dend_12 { pt3dadd( 296.104, 466.849, 34.2451, 0.5084 ) }
    dend_12 { pt3dadd( 295.976, 467.946, 33.7022, 0.5848 ) }
    dend_12 { pt3dadd( 295.602, 469.003, 33.9816, 0.6102 ) }
    dend_12 { pt3dadd( 295.248, 470.056, 34.617, 0.6356 ) }
    dend_12 { pt3dadd( 295.016, 471.159, 34.7864, 0.661 ) }
    dend_12 { pt3dadd( 294.376, 471.721, 33.2055, 0.7372 ) }
    dend_12 { pt3dadd( 293.934, 472.748, 33.7022, 0.788 ) }
    dend_12 { pt3dadd( 293.395, 473.727, 33.4348, 0.839 ) }
    dend_12 { pt3dadd( 292.612, 474.53, 32.9188, 0.788 ) }
    dend_12 { pt3dadd( 292.214, 475.546, 33.0014, 0.661 ) }
    dend_12 { pt3dadd( 292.253, 476.682, 33.0417, 0.5338 ) }
    dend_12 { pt3dadd( 292.406, 477.798, 33.4757, 0.4068 ) }
    dend_12 { pt3dadd( 292.125, 478.382, 33.5266, 0.3814 ) }
    dend_12 { pt3dadd( 291.472, 479.314, 33.5871, 0.3304 ) }
    dend_12 { pt3dadd( 291.027, 480.351, 33.6, 0.3304 ) }
    dend_12 { pt3dadd( 290.925, 481.481, 33.6482, 0.2796 ) }
    dend_12 { pt3dadd( 290.694, 482.577, 34.0822, 0.2796 ) }
    dend_12 { pt3dadd( 290.224, 483.593, 34.6156, 0.2796 ) }
    dend_12 { pt3dadd( 290.118, 484.707, 34.72, 0.305 ) }
    dend_12 { pt3dadd( 290.118, 485.851, 34.7421, 0.2796 ) }
    dend_12 { pt3dadd( 290.118, 486.992, 34.9266, 0.2542 ) }
    dend_12 { pt3dadd( 290.118, 488.136, 34.9941, 0.2288 ) }
    dend_12 { pt3dadd( 289.835, 489.234, 35.0, 0.2288 ) }
    dend_12 { pt3dadd( 289.341, 490.259, 35.243, 0.2288 ) }
    dend_12 { pt3dadd( 288.844, 491.289, 35.28, 0.2542 ) }
    dend_12 { pt3dadd( 288.458, 492.365, 35.28, 0.3304 ) }
    dend_12 { pt3dadd( 288.237, 493.486, 35.296, 0.4068 ) }
    dend_12 { pt3dadd( 288.074, 494.614, 35.5208, 0.4322 ) }
    dend_12 { pt3dadd( 288.08, 495.756, 35.5586, 0.356 ) }
    dend_12 { pt3dadd( 288.746, 496.64, 35.56, 0.2796 ) }
    dend_12 { pt3dadd( 288.746, 497.784, 35.56, 0.2796 ) }
    dend_12 { pt3dadd( 288.746, 498.912, 35.6728, 0.3304 ) }
    dend_12 { pt3dadd( 288.746, 499.843, 37.2431, 0.4068 ) }
    dend_12 { pt3dadd( 288.746, 500.958, 37.8535, 0.4322 ) }
    dend_12 { pt3dadd( 288.773, 502.086, 38.2446, 0.4576 ) }
    dend_12 { pt3dadd( 288.941, 503.175, 38.9085, 0.4576 ) }
    dend_12 { pt3dadd( 289.276, 504.258, 38.92, 0.4068 ) }
    dend_12 { pt3dadd( 289.835, 505.251, 38.8623, 0.356 ) }
    dend_12 { pt3dadd( 290.2, 506.309, 38.4168, 0.2796 ) }
    dend_12 { pt3dadd( 290.347, 507.39, 37.7712, 0.2542 ) }
    dend_12 { pt3dadd( 290.311, 508.532, 37.6463, 0.2542 ) }
    dend_12 { pt3dadd( 290.155, 509.661, 37.52, 0.2796 ) }
    dend_12 { pt3dadd( 290.037, 510.788, 37.52, 0.305 ) }
    dend_12 { pt3dadd( 290.098, 511.93, 37.52, 0.2796 ) }
    dend_12 { pt3dadd( 290.092, 513.073, 37.52, 0.2796 ) }
    dend_12 { pt3dadd( 289.933, 514.199, 37.52, 0.305 ) }
    dend_12 { pt3dadd( 289.717, 515.318, 37.52, 0.356 ) }
    dend_12 { pt3dadd( 289.632, 516.456, 37.6348, 0.3814 ) }
    dend_12 { pt3dadd( 289.525, 517.591, 37.8, 0.4322 ) }
    dend_12 { pt3dadd( 289.432, 518.729, 37.8, 0.5084 ) }
    dend_12 { pt3dadd( 289.432, 519.87, 37.9168, 0.5592 ) }
    dend_12 { pt3dadd( 289.411, 521.011, 38.08, 0.483 ) }
    dend_12 { pt3dadd( 289.355, 522.154, 38.08, 0.356 ) }
    dend_12 { pt3dadd( 289.286, 523.295, 38.08, 0.2542 ) }
    dend_12 { pt3dadd( 289.183, 524.434, 38.0461, 0.2796 ) }
    dend_12 { pt3dadd( 288.947, 525.544, 37.8801, 0.4068 ) }
    dend_12 { pt3dadd( 288.746, 526.645, 37.5217, 0.5338 ) }
    dend_12 { pt3dadd( 288.746, 527.781, 37.2565, 0.5592 ) }
    dend_12 { pt3dadd( 288.746, 528.925, 37.24, 0.4322 ) }
    dend_12 { pt3dadd( 288.678, 530.064, 37.24, 0.305 ) }
    dend_12 { pt3dadd( 288.336, 531.134, 37.24, 0.2796 ) }
    dend_12 { pt3dadd( 287.779, 532.134, 37.2627, 0.3304 ) }
    dend_12 { pt3dadd( 287.331, 533.177, 37.3974, 0.4068 ) }
    dend_12 { pt3dadd( 287.067, 534.286, 37.5528, 0.4068 ) }
    dend_12 { pt3dadd( 286.591, 535.252, 37.8862, 0.4068 ) }
    dend_12 { pt3dadd( 286.058, 536.195, 38.6086, 0.4068 ) }
    dend_12 { pt3dadd( 285.62, 537.238, 38.894, 0.4068 ) }
    dend_12 { pt3dadd( 285.274, 538.326, 38.92, 0.4068 ) }
    dend_12 { pt3dadd( 285.069, 539.45, 38.92, 0.3304 ) }
    dend_12 { pt3dadd( 284.895, 540.58, 38.92, 0.3304 ) }
    dend_12 { pt3dadd( 284.568, 541.674, 38.92, 0.3304 ) }
    dend_12 { pt3dadd( 284.332, 542.791, 38.92, 0.3814 ) }
    dend_12 { pt3dadd( 284.005, 543.839, 38.2071, 0.356 ) }
    dend_12 { pt3dadd( 283.59, 544.892, 37.8392, 0.356 ) }
    dend_12 { pt3dadd( 282.932, 545.815, 37.5488, 0.4068 ) }
    dend_12 { pt3dadd( 282.503, 546.865, 37.2638, 0.5338 ) }
    dend_12 { pt3dadd( 282.147, 547.942, 36.9032, 0.6102 ) }
    dend_12 { pt3dadd( 281.449, 548.808, 36.3303, 0.5848 ) }
    dend_12 { pt3dadd( 280.583, 549.487, 35.5821, 0.4576 ) }
    dend_12 { pt3dadd( 280.018, 550.477, 35.5491, 0.356 ) }
    dend_12 { pt3dadd( 279.25, 551.294, 35.0, 0.305 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 298.495, 448.652, 31.92, 0.483 ) }
    dend_9 { pt3dadd( 299.301, 448.772, 32.2118, 0.483 ) }
    dend_9 { pt3dadd( 300.211, 449.235, 31.8338, 0.4322 ) }
    dend_9 { pt3dadd( 300.942, 450.091, 32.1712, 0.4322 ) }
    dend_9 { pt3dadd( 302.003, 450.495, 32.2, 0.3304 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 98/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 288.239, 435.515, 28.5558, 0.305 ) }
    dend_6 { pt3dadd( 288.488, 434.894, 28.8109, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( 289.014, 433.899, 29.08, 0.2796 ) }
    dend_6 { pt3dadd( 289.705, 432.987, 29.0914, 0.305 ) }
    dend_6 { pt3dadd( 290.544, 432.366, 28.0532, 0.305 ) }
    dend_6 { pt3dadd( 291.403, 431.786, 26.8671, 0.305 ) }
    dend_6 { pt3dadd( 292.244, 431.069, 26.4684, 0.305 ) }
    dend_6 { pt3dadd( 292.673, 430.066, 26.4667, 0.3304 ) }
    dend_6 { pt3dadd( 292.333, 429.033, 26.6031, 0.356 ) }
    dend_6 { pt3dadd( 293.032, 428.343, 26.4676, 0.3814 ) }
    dend_6 { pt3dadd( 294.113, 428.688, 26.397, 0.3814 ) }
    dend_6 { pt3dadd( 294.594, 429.725, 26.388, 0.4068 ) }
    dend_6 { pt3dadd( 294.67, 430.664, 25.1101, 0.4322 ) }
    dend_6 { pt3dadd( 294.612, 431.571, 23.408, 0.4068 ) }
    dend_6 { pt3dadd( 294.638, 432.37, 21.411, 0.4068 ) }
    dend_6 { pt3dadd( 294.673, 433.161, 19.3886, 0.4068 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 14/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 288.239, 435.515, 28.5558, 0.305 ) }
    dend_3 { pt3dadd( 287.409, 434.417, 28.569, 0.5338 ) }
    dend_3 { pt3dadd( 287.057, 433.446, 28.0865, 0.5338 ) }
    dend_3 { pt3dadd( 286.864, 432.339, 27.666, 0.5084 ) }
    dend_3 { pt3dadd( 286.205, 431.471, 27.4022, 0.6102 ) }
    dend_3 { pt3dadd( 285.354, 430.733, 26.9735, 0.6864 ) }
    dend_3 { pt3dadd( 284.363, 430.524, 25.8014, 0.7626 ) }
    dend_3 { pt3dadd( 283.407, 430.123, 26.5894, 0.7372 ) }
    dend_3 { pt3dadd( 282.908, 429.253, 27.6928, 0.7118 ) }
    dend_3 { pt3dadd( 282.218, 428.349, 27.4761, 0.6864 ) }
    dend_3 { pt3dadd( 281.435, 427.541, 27.3174, 0.661 ) }
    dend_3 { pt3dadd( 280.759, 426.699, 28.0801, 0.6356 ) }
    dend_3 { pt3dadd( 280.099, 425.822, 28.282, 0.6356 ) }
    dend_3 { pt3dadd( 279.559, 424.893, 28.8252, 0.6864 ) }
    dend_3 { pt3dadd( 278.61, 424.41, 28.9139, 0.7626 ) }
    dend_3 { pt3dadd( 277.926, 423.579, 28.077, 0.8136 ) }
    dend_3 { pt3dadd( 277.502, 422.538, 27.862, 0.839 ) }
    dend_3 { pt3dadd( 277.497, 421.451, 27.7886, 0.8136 ) }
    dend_3 { pt3dadd( 277.699, 420.391, 28.5536, 0.788 ) }
    dend_3 { pt3dadd( 277.68, 419.253, 28.7442, 0.7372 ) }
    dend_3 { pt3dadd( 277.386, 418.372, 29.7581, 0.7118 ) }
    dend_3 { pt3dadd( 277.105, 417.555, 30.9882, 0.6864 ) }
    dend_3 { pt3dadd( 276.587, 416.669, 31.0265, 0.7118 ) }
    dend_3 { pt3dadd( 275.792, 415.892, 30.4825, 0.7372 ) }
    dend_3 { pt3dadd( 275.236, 414.921, 30.217, 0.6864 ) }
    dend_3 { pt3dadd( 275.014, 413.815, 30.0314, 0.6102 ) }
    dend_3 { pt3dadd( 274.766, 412.711, 30.235, 0.5592 ) }
    dend_3 { pt3dadd( 274.25, 411.711, 30.0283, 0.6102 ) }
    dend_3 { pt3dadd( 273.646, 410.81, 30.7535, 0.6864 ) }
    dend_3 { pt3dadd( 272.764, 410.159, 30.3825, 0.6864 ) }
    dend_3 { pt3dadd( 272.17, 409.469, 31.8237, 0.6864 ) }
    dend_3 { pt3dadd( 271.13, 409.064, 32.4321, 0.6356 ) }
    dend_3 { pt3dadd( 270.164, 408.556, 32.4803, 0.6102 ) }
    dend_3 { pt3dadd( 269.58, 407.771, 32.8202, 0.5338 ) }
    dend_3 { pt3dadd( 269.345, 406.758, 32.8252, 0.5084 ) }
    dend_3 { pt3dadd( 268.424, 406.223, 32.1401, 0.5338 ) }
    dend_3 { pt3dadd( 267.586, 405.562, 31.3569, 0.5848 ) }
    dend_3 { pt3dadd( 266.513, 405.639, 31.472, 0.6102 ) }
    dend_3 { pt3dadd( 265.743, 404.99, 32.4439, 0.6102 ) }
    dend_3 { pt3dadd( 264.677, 404.918, 33.2136, 0.6102 ) }
    dend_3 { pt3dadd( 263.776, 404.803, 34.2871, 0.5338 ) }
    dend_3 { pt3dadd( 262.904, 404.404, 33.2889, 0.4322 ) }
    // Section: apic_17, id: apic_17, parent: apic_0 (entry count 56/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 298.126, 424.996, 40.32, 0.4322 ) }
    apic_17 { pt3dadd( 298.702, 425.044, 37.8568, 0.4322 ) }
    apic_17 { pt3dadd( 299.268, 425.091, 35.4276, 0.4576 ) }
    apic_17 { pt3dadd( 300.023, 425.234, 35.5841, 0.5338 ) }
    apic_17 { pt3dadd( 300.536, 425.282, 37.9966, 0.5592 ) }
    apic_17 { pt3dadd( 301.383, 424.998, 39.5702, 0.5592 ) }
    apic_17 { pt3dadd( 302.478, 424.969, 40.1948, 0.483 ) }
    apic_17 { pt3dadd( 303.51, 424.907, 40.1055, 0.4068 ) }
    apic_17 { pt3dadd( 304.433, 424.315, 39.4167, 0.356 ) }
    apic_17 { pt3dadd( 305.467, 423.998, 39.6922, 0.3814 ) }
    apic_17 { pt3dadd( 306.315, 424.523, 39.8205, 0.4576 ) }
    apic_17 { pt3dadd( 307.266, 424.646, 39.4481, 0.4576 ) }
    apic_17 { pt3dadd( 307.761, 425.107, 37.2543, 0.4322 ) }
    apic_17 { pt3dadd( 308.531, 425.598, 35.9008, 0.4322 ) }
    apic_17 { pt3dadd( 308.577, 425.693, 37.8722, 0.5338 ) }
    apic_17 { pt3dadd( 309.454, 425.704, 39.5867, 0.6356 ) }
    apic_17 { pt3dadd( 310.54, 425.819, 40.2184, 0.661 ) }
    apic_17 { pt3dadd( 311.634, 425.91, 39.4453, 0.5848 ) }
    apic_17 { pt3dadd( 312.695, 426.033, 38.6159, 0.483 ) }
    apic_17 { pt3dadd( 313.728, 425.99, 38.7089, 0.4068 ) }
    apic_17 { pt3dadd( 314.526, 425.186, 38.6865, 0.4322 ) }
    apic_17 { pt3dadd( 315.254, 424.322, 38.3816, 0.5848 ) }
    apic_17 { pt3dadd( 316.165, 423.9, 37.984, 0.7626 ) }
    apic_17 { pt3dadd( 317.187, 423.993, 36.769, 0.8898 ) }
    apic_17 { pt3dadd( 318.265, 424.31, 37.2422, 0.8898 ) }
    apic_17 { pt3dadd( 319.328, 424.327, 38.26, 0.839 ) }
    apic_17 { pt3dadd( 320.432, 424.315, 38.4087, 0.788 ) }
    apic_17 { pt3dadd( 321.354, 424.551, 37.1988, 0.7372 ) }
    apic_17 { pt3dadd( 322.367, 424.592, 36.7206, 0.6864 ) }
    apic_17 { pt3dadd( 323.464, 424.766, 37.3265, 0.661 ) }
    apic_17 { pt3dadd( 324.467, 424.947, 36.2723, 0.6864 ) }
    apic_17 { pt3dadd( 325.513, 424.7, 37.1722, 0.788 ) }
    apic_17 { pt3dadd( 326.629, 424.553, 37.1759, 0.8136 ) }
    apic_17 { pt3dadd( 327.618, 424.013, 36.7282, 0.7372 ) }
    apic_17 { pt3dadd( 328.441, 423.451, 35.5634, 0.5848 ) }
    apic_17 { pt3dadd( 329.173, 422.747, 34.8398, 0.5338 ) }
    apic_17 { pt3dadd( 330.185, 422.755, 35.4236, 0.5592 ) }
    apic_17 { pt3dadd( 331.101, 423.286, 36.4314, 0.6102 ) }
    apic_17 { pt3dadd( 331.914, 423.926, 36.9902, 0.5848 ) }
    apic_17 { pt3dadd( 332.524, 424.401, 35.9719, 0.6102 ) }
    apic_17 { pt3dadd( 333.398, 424.629, 37.3234, 0.6102 ) }
    apic_17 { pt3dadd( 334.49, 424.788, 37.4772, 0.661 ) }
    apic_17 { pt3dadd( 335.587, 424.663, 36.813, 0.6864 ) }
    apic_17 { pt3dadd( 336.612, 424.639, 35.637, 0.7626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_17 { pt3dadd( 337.688, 424.835, 35.1842, 0.8136 ) }
    apic_17 { pt3dadd( 338.808, 424.997, 35.5838, 0.788 ) }
    apic_17 { pt3dadd( 339.939, 425.02, 35.4777, 0.7118 ) }
    apic_17 { pt3dadd( 341.05, 424.872, 34.974, 0.5848 ) }
    apic_17 { pt3dadd( 342.172, 424.756, 34.5402, 0.5338 ) }
    apic_17 { pt3dadd( 343.311, 424.691, 34.3879, 0.5592 ) }
    apic_17 { pt3dadd( 344.39, 424.486, 33.7235, 0.661 ) }
    apic_17 { pt3dadd( 345.483, 424.514, 34.0127, 0.7118 ) }
    apic_17 { pt3dadd( 346.538, 424.908, 33.9668, 0.6356 ) }
    apic_17 { pt3dadd( 347.036, 425.585, 32.2546, 0.5338 ) }
    apic_17 { pt3dadd( 347.909, 426.195, 31.4171, 0.4576 ) }
    apic_17 { pt3dadd( 349.038, 426.262, 31.2057, 0.4576 ) }
    apic_17 { pt3dadd( 350.022, 425.738, 30.9142, 0.4322 ) }
    apic_17 { pt3dadd( 350.936, 425.371, 30.525, 0.4068 ) }
    apic_17 { pt3dadd( 351.646, 426.089, 30.3696, 0.4576 ) }
    apic_17 { pt3dadd( 351.961, 427.17, 30.7395, 0.5592 ) }
    apic_17 { pt3dadd( 352.148, 428.287, 30.7339, 0.6864 ) }
    apic_17 { pt3dadd( 352.201, 429.324, 29.703, 0.7118 ) }
    apic_17 { pt3dadd( 352.341, 430.425, 29.6472, 0.6864 ) }
    apic_17 { pt3dadd( 353.038, 431.288, 29.96, 0.6356 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 20/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 298.126, 424.996, 40.32, 0.4322 ) }
    apic_1 { pt3dadd( 298.145, 423.623, 41.6142, 0.6356 ) }
    apic_1 { pt3dadd( 297.924, 422.551, 41.0631, 0.8136 ) }
    apic_1 { pt3dadd( 298.374, 421.541, 40.3925, 0.966 ) }
    apic_1 { pt3dadd( 298.59, 420.537, 39.3109, 1.0424 ) }
    apic_1 { pt3dadd( 298.974, 419.556, 38.5518, 1.0168 ) }
    apic_1 { pt3dadd( 299.317, 418.493, 38.3505, 0.9152 ) }
    apic_1 { pt3dadd( 299.633, 417.4, 38.1248, 0.788 ) }
    apic_1 { pt3dadd( 299.996, 416.324, 38.4003, 0.8136 ) }
    apic_1 { pt3dadd( 300.599, 415.36, 38.3734, 0.8898 ) }
    apic_1 { pt3dadd( 301.118, 414.398, 39.02, 0.9914 ) }
    apic_1 { pt3dadd( 301.968, 413.72, 39.8846, 0.9406 ) }
    apic_1 { pt3dadd( 302.676, 412.888, 40.6081, 0.8898 ) }
    apic_1 { pt3dadd( 303.189, 411.889, 40.684, 0.8136 ) }
    apic_1 { pt3dadd( 303.53, 410.821, 40.1792, 0.7118 ) }
    apic_1 { pt3dadd( 303.732, 409.781, 40.88, 0.5592 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 36/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 277.059, 436.465, 44.7384, 0.661 ) }
    dend_33 { pt3dadd( 276.761, 435.981, 44.7686, 0.4576 ) }
    dend_33 { pt3dadd( 276.51, 434.929, 44.3626, 0.483 ) }
    dend_33 { pt3dadd( 276.42, 433.856, 43.4487, 0.5084 ) }
    dend_33 { pt3dadd( 275.883, 432.967, 43.0035, 0.5084 ) }
    dend_33 { pt3dadd( 275.21, 432.667, 44.4853, 0.5592 ) }
    dend_33 { pt3dadd( 274.285, 432.131, 43.5968, 0.6102 ) }
    dend_33 { pt3dadd( 273.785, 431.487, 44.7222, 0.6356 ) }
    dend_33 { pt3dadd( 273.312, 430.716, 44.7082, 0.6356 ) }
    dend_33 { pt3dadd( 272.899, 429.678, 44.6496, 0.5848 ) }
    dend_33 { pt3dadd( 272.091, 428.897, 44.6768, 0.6356 ) }
    dend_33 { pt3dadd( 271.555, 428.061, 43.5411, 0.6356 ) }
    dend_33 { pt3dadd( 271.164, 427.047, 43.7654, 0.661 ) }
    dend_33 { pt3dadd( 271.174, 425.911, 43.8894, 0.5848 ) }
    dend_33 { pt3dadd( 270.903, 424.866, 43.2754, 0.6102 ) }
    dend_33 { pt3dadd( 270.559, 423.822, 43.0864, 0.661 ) }
    dend_33 { pt3dadd( 269.707, 423.153, 43.036, 0.7118 ) }
    dend_33 { pt3dadd( 268.977, 422.375, 43.8561, 0.7372 ) }
    dend_33 { pt3dadd( 268.262, 421.591, 42.9489, 0.7372 ) }
    dend_33 { pt3dadd( 267.802, 420.809, 41.3465, 0.7626 ) }
    dend_33 { pt3dadd( 267.054, 420.045, 41.7379, 0.7372 ) }
    dend_33 { pt3dadd( 266.785, 419.005, 41.5416, 0.6864 ) }
    dend_33 { pt3dadd( 266.567, 417.926, 42.2657, 0.6102 ) }
    dend_33 { pt3dadd( 266.204, 416.918, 43.0758, 0.5592 ) }
    dend_33 { pt3dadd( 265.437, 416.208, 42.5001, 0.483 ) }
    dend_33 { pt3dadd( 265.431, 415.224, 41.4504, 0.5084 ) }
    dend_33 { pt3dadd( 265.059, 414.147, 41.6598, 0.5338 ) }
    dend_33 { pt3dadd( 264.44, 413.236, 41.5999, 0.661 ) }
    dend_33 { pt3dadd( 263.629, 412.475, 41.2014, 0.6864 ) }
    dend_33 { pt3dadd( 262.898, 411.623, 40.7918, 0.6864 ) }
    dend_33 { pt3dadd( 262.095, 410.892, 39.998, 0.5848 ) }
    dend_33 { pt3dadd( 261.468, 409.997, 40.1332, 0.483 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 277.059, 436.465, 44.7384, 0.661 ) }
    dend_28 { pt3dadd( 277.401, 435.927, 47.2198, 0.4322 ) }
    dend_28 { pt3dadd( 277.728, 435.413, 49.5905, 0.3814 ) }
    dend_28 { pt3dadd( 277.939, 434.562, 50.68, 0.2796 ) }
    dend_28 { pt3dadd( 277.992, 433.422, 50.68, 0.2796 ) }
    dend_28 { pt3dadd( 277.838, 432.297, 50.68, 0.305 ) }
    dend_28 { pt3dadd( 277.082, 431.573, 50.68, 0.356 ) }
    dend_28 { pt3dadd( 276.146, 430.929, 50.68, 0.356 ) }
    dend_28 { pt3dadd( 275.163, 430.354, 50.68, 0.3304 ) }
    dend_28 { pt3dadd( 274.113, 429.901, 50.68, 0.305 ) }
    dend_28 { pt3dadd( 273.001, 429.657, 50.68, 0.3304 ) }
    dend_28 { pt3dadd( 271.891, 429.381, 50.68, 0.3304 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 284.068, 447.088, 39.48, 0.3304 ) }
    dend_26 { pt3dadd( 284.461, 447.407, 42.0255, 0.356 ) }
    dend_26 { pt3dadd( 284.85, 447.723, 44.5427, 0.2796 ) }
    dend_26 { pt3dadd( 285.24, 448.037, 47.0599, 0.356 ) }
    dend_26 { pt3dadd( 285.629, 448.353, 49.5771, 0.5084 ) }
    dend_26 { pt3dadd( 285.556, 449.068, 50.8844, 0.6356 ) }
    dend_26 { pt3dadd( 285.618, 450.122, 50.2634, 0.6356 ) }
    dend_26 { pt3dadd( 285.482, 451.234, 50.206, 0.5338 ) }
    dend_26 { pt3dadd( 286.259, 451.986, 50.4554, 0.4068 ) }
    dend_26 { pt3dadd( 286.836, 452.927, 50.7136, 0.3304 ) }
    dend_26 { pt3dadd( 287.318, 453.78, 50.6696, 0.305 ) }
    dend_26 { pt3dadd( 287.909, 454.59, 51.6326, 0.3304 ) }
    dend_26 { pt3dadd( 288.166, 455.567, 50.8483, 0.356 ) }
    dend_26 { pt3dadd( 287.995, 456.617, 49.9139, 0.4322 ) }
    dend_26 { pt3dadd( 287.977, 457.632, 51.0306, 0.5084 ) }
    dend_26 { pt3dadd( 288.228, 458.673, 51.8017, 0.6102 ) }
    dend_26 { pt3dadd( 288.659, 459.68, 51.1823, 0.6356 ) }
    dend_26 { pt3dadd( 289.319, 460.507, 50.2524, 0.6102 ) }
    dend_26 { pt3dadd( 289.811, 461.452, 50.3166, 0.5592 ) }
    dend_26 { pt3dadd( 290.702, 461.978, 51.088, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_26 { pt3dadd( 291.807, 461.864, 50.7038, 0.4576 ) }
    dend_26 { pt3dadd( 292.918, 461.761, 51.0068, 0.3814 ) }
    dend_26 { pt3dadd( 293.751, 462.469, 51.0376, 0.356 ) }
    dend_26 { pt3dadd( 293.932, 463.536, 51.3584, 0.4068 ) }
    dend_26 { pt3dadd( 294.658, 464.338, 50.6635, 0.483 ) }
    dend_26 { pt3dadd( 295.568, 464.9, 51.1986, 0.5338 ) }
    dend_26 { pt3dadd( 296.521, 465.15, 52.4213, 0.5084 ) }
    dend_26 { pt3dadd( 297.172, 465.623, 53.9812, 0.5592 ) }
    dend_26 { pt3dadd( 297.332, 466.734, 53.8322, 0.5848 ) }
    dend_26 { pt3dadd( 297.491, 467.801, 54.5765, 0.6356 ) }
    dend_26 { pt3dadd( 298.272, 468.5, 54.371, 0.5084 ) }
    dend_26 { pt3dadd( 299.357, 468.625, 53.7684, 0.4068 ) }
    dend_26 { pt3dadd( 299.77, 469.268, 54.6454, 0.3304 ) }
    dend_26 { pt3dadd( 299.301, 470.186, 55.5794, 0.4322 ) }
    dend_26 { pt3dadd( 299.557, 471.122, 56.4438, 0.5592 ) }
    dend_26 { pt3dadd( 300.229, 471.925, 57.2897, 0.6102 ) }
    dend_26 { pt3dadd( 300.885, 472.712, 56.6359, 0.5338 ) }
    dend_26 { pt3dadd( 301.763, 473.164, 57.1113, 0.4068 ) }
    dend_26 { pt3dadd( 301.678, 473.489, 59.5638, 0.3814 ) }
    dend_26 { pt3dadd( 301.859, 474.412, 58.48, 0.4322 ) }
    dend_26 { pt3dadd( 302.388, 475.254, 58.1336, 0.5592 ) }
    dend_26 { pt3dadd( 302.755, 475.992, 59.9847, 0.6356 ) }
    dend_26 { pt3dadd( 303.259, 476.674, 61.6445, 0.6356 ) }
    dend_26 { pt3dadd( 304.097, 477.365, 61.6745, 0.5338 ) }
    dend_26 { pt3dadd( 304.503, 478.342, 62.3608, 0.3814 ) }
    dend_26 { pt3dadd( 304.653, 479.419, 62.4375, 0.2796 ) }
    dend_26 { pt3dadd( 304.057, 480.344, 62.9476, 0.2542 ) }
    dend_26 { pt3dadd( 304.322, 480.799, 64.5784, 0.2796 ) }
    dend_26 { pt3dadd( 305.173, 481.06, 64.4711, 0.305 ) }
    dend_26 { pt3dadd( 305.456, 481.91, 63.8954, 0.2796 ) }
    dend_26 { pt3dadd( 305.411, 482.425, 65.9784, 0.2542 ) }
    dend_26 { pt3dadd( 306.137, 482.424, 66.4311, 0.2288 ) }
    dend_26 { pt3dadd( 306.399, 483.247, 64.8424, 0.2288 ) }
    dend_26 { pt3dadd( 306.19, 484.283, 64.4319, 0.2288 ) }
    dend_26 { pt3dadd( 306.116, 485.198, 65.8776, 0.2288 ) }
    dend_26 { pt3dadd( 306.093, 485.931, 68.026, 0.2288 ) }
    dend_26 { pt3dadd( 305.996, 486.662, 70.1593, 0.2288 ) }
    dend_26 { pt3dadd( 305.536, 487.315, 72.0275, 0.2288 ) }
    dend_26 { pt3dadd( 304.82, 487.902, 73.6725, 0.2288 ) }
    dend_26 { pt3dadd( 304.104, 488.489, 75.3178, 0.2288 ) }
    dend_26 { pt3dadd( 303.532, 489.163, 77.0493, 0.2288 ) }
    dend_26 { pt3dadd( 303.716, 489.979, 78.5842, 0.2288 ) }
    dend_26 { pt3dadd( 304.231, 490.828, 79.9753, 0.2288 ) }
    dend_26 { pt3dadd( 304.751, 491.74, 81.0471, 0.2288 ) }
    dend_26 { pt3dadd( 305.276, 492.689, 81.942, 0.2288 ) }
    dend_26 { pt3dadd( 305.8, 493.638, 82.8316, 0.2288 ) }
    dend_26 { pt3dadd( 306.325, 494.588, 83.7211, 0.2288 ) }
    dend_26 { pt3dadd( 307.012, 495.46, 84.2716, 0.2288 ) }
    dend_26 { pt3dadd( 307.87, 496.208, 84.3968, 0.2288 ) }
    dend_26 { pt3dadd( 308.767, 496.917, 84.4088, 0.2288 ) }
    dend_26 { pt3dadd( 309.73, 497.529, 84.3226, 0.2288 ) }
    dend_26 { pt3dadd( 310.796, 497.9, 84.0249, 0.2288 ) }
    dend_26 { pt3dadd( 311.892, 498.19, 83.6584, 0.2288 ) }
    dend_26 { pt3dadd( 312.988, 498.481, 83.2919, 0.2288 ) }
    dend_26 { pt3dadd( 314.085, 498.771, 82.9256, 0.2288 ) }
    dend_26 { pt3dadd( 315.181, 499.062, 82.5594, 0.2288 ) }
    dend_26 { pt3dadd( 316.277, 499.353, 82.1929, 0.2288 ) }
    dend_26 { pt3dadd( 317.358, 499.715, 82.0487, 0.2288 ) }
    dend_26 { pt3dadd( 318.318, 500.27, 82.5756, 0.2288 ) }
    dend_26 { pt3dadd( 319.236, 500.882, 83.3126, 0.2288 ) }
    dend_26 { pt3dadd( 320.154, 501.495, 84.0493, 0.2288 ) }
    dend_26 { pt3dadd( 321.072, 502.107, 84.7862, 0.2288 ) }
    dend_26 { pt3dadd( 321.989, 502.72, 85.5232, 0.2288 ) }
    dend_26 { pt3dadd( 322.908, 503.332, 86.2602, 0.2288 ) }
    dend_26 { pt3dadd( 323.825, 503.946, 86.9968, 0.2288 ) }
    dend_26 { pt3dadd( 324.744, 504.559, 87.7335, 0.2288 ) }
    dend_26 { pt3dadd( 325.651, 505.209, 88.338, 0.2288 ) }
    dend_26 { pt3dadd( 326.541, 505.903, 88.7852, 0.2288 ) }
    dend_26 { pt3dadd( 327.427, 506.608, 89.1932, 0.2288 ) }
    dend_26 { pt3dadd( 328.312, 507.312, 89.6006, 0.2288 ) }
    dend_26 { pt3dadd( 329.197, 508.017, 90.0085, 0.2288 ) }
    dend_26 { pt3dadd( 330.218, 508.406, 90.6618, 0.2288 ) }
    dend_26 { pt3dadd( 331.301, 508.55, 91.4718, 0.2288 ) }
    dend_26 { pt3dadd( 332.346, 508.241, 92.1169, 0.2288 ) }
    dend_26 { pt3dadd( 332.886, 507.252, 92.1404, 0.2796 ) }
    dend_26 { pt3dadd( 333.962, 506.932, 92.1738, 0.3304 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 76/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 284.068, 447.088, 39.48, 0.3304 ) }
    dend_15 { pt3dadd( 283.958, 447.485, 39.2336, 0.5084 ) }
    dend_15 { pt3dadd( 283.429, 448.312, 38.5174, 0.5338 ) }
    dend_15 { pt3dadd( 282.352, 448.252, 38.2432, 0.5338 ) }
    dend_15 { pt3dadd( 281.322, 448.017, 38.5862, 0.5338 ) }
    dend_15 { pt3dadd( 280.224, 448.267, 38.3718, 0.5338 ) }
    dend_15 { pt3dadd( 279.102, 448.332, 37.9336, 0.5084 ) }
    dend_15 { pt3dadd( 278.335, 448.219, 39.76, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 302.003, 450.495, 32.2, 0.3304 ) }
    dend_11 { pt3dadd( 301.946, 451.143, 34.869, 0.2542 ) }
    dend_11 { pt3dadd( 301.91, 451.978, 36.5859, 0.2288 ) }
    dend_11 { pt3dadd( 301.76, 453.076, 36.96, 0.2288 ) }
    dend_11 { pt3dadd( 301.62, 454.21, 36.96, 0.2542 ) }
    dend_11 { pt3dadd( 301.415, 455.334, 36.96, 0.2796 ) }
    dend_11 { pt3dadd( 301.333, 456.47, 36.96, 0.305 ) }
    dend_11 { pt3dadd( 301.33, 457.614, 36.96, 0.2796 ) }
    dend_11 { pt3dadd( 301.328, 458.758, 36.96, 0.2542 ) }
    dend_11 { pt3dadd( 301.198, 459.89, 36.96, 0.2288 ) }
    dend_11 { pt3dadd( 301.006, 461.018, 36.96, 0.2542 ) }
    dend_11 { pt3dadd( 300.729, 462.127, 36.96, 0.2796 ) }
    dend_11 { pt3dadd( 300.643, 463.253, 37.2257, 0.3304 ) }
    dend_11 { pt3dadd( 300.643, 464.303, 38.2698, 0.3814 ) }
    dend_11 { pt3dadd( 300.643, 465.394, 39.079, 0.4322 ) }
    dend_11 { pt3dadd( 300.643, 466.531, 39.2, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 300.643, 467.675, 39.2, 0.4576 ) }
    dend_11 { pt3dadd( 300.643, 468.819, 39.2, 0.4322 ) }
    dend_11 { pt3dadd( 300.643, 469.963, 39.2, 0.356 ) }
    dend_11 { pt3dadd( 300.386, 471.026, 39.9011, 0.3814 ) }
    dend_11 { pt3dadd( 299.614, 471.823, 40.3514, 0.483 ) }
    dend_11 { pt3dadd( 299.499, 472.953, 40.7058, 0.5848 ) }
    dend_11 { pt3dadd( 299.499, 474.067, 41.3358, 0.5848 ) }
    dend_11 { pt3dadd( 299.489, 475.183, 41.9261, 0.4576 ) }
    dend_11 { pt3dadd( 299.101, 476.133, 42.0465, 0.3814 ) }
    dend_11 { pt3dadd( 297.987, 476.213, 42.4026, 0.3814 ) }
    dend_11 { pt3dadd( 297.053, 476.81, 42.9848, 0.4068 ) }
    dend_11 { pt3dadd( 296.528, 477.737, 43.4, 0.3814 ) }
    dend_11 { pt3dadd( 296.525, 478.881, 43.4, 0.305 ) }
    dend_11 { pt3dadd( 296.591, 480.018, 43.4, 0.2542 ) }
    dend_11 { pt3dadd( 297.171, 480.711, 43.4, 0.2288 ) }
    dend_11 { pt3dadd( 297.98, 481.149, 43.4, 0.2796 ) }
    dend_11 { pt3dadd( 298.396, 482.194, 43.6265, 0.356 ) }
    dend_11 { pt3dadd( 299.171, 482.954, 44.2033, 0.4576 ) }
    dend_11 { pt3dadd( 300.159, 483.497, 44.5124, 0.4576 ) }
    dend_11 { pt3dadd( 301.116, 484.048, 45.0548, 0.4322 ) }
    dend_11 { pt3dadd( 301.33, 485.046, 45.6389, 0.3814 ) }
    dend_11 { pt3dadd( 301.081, 486.088, 46.5464, 0.3814 ) }
    dend_11 { pt3dadd( 300.891, 487.172, 47.2718, 0.356 ) }
    dend_11 { pt3dadd( 300.872, 488.307, 47.572, 0.3304 ) }
    dend_11 { pt3dadd( 300.872, 489.451, 47.6, 0.305 ) }
    dend_11 { pt3dadd( 300.872, 490.593, 47.7406, 0.305 ) }
    dend_11 { pt3dadd( 300.677, 491.588, 48.9644, 0.2796 ) }
    dend_11 { pt3dadd( 300.425, 492.7, 49.0048, 0.2542 ) }
    dend_11 { pt3dadd( 300.411, 493.841, 49.2134, 0.2542 ) }
    dend_11 { pt3dadd( 300.279, 494.977, 49.28, 0.2796 ) }
    dend_11 { pt3dadd( 300.072, 496.1, 49.28, 0.305 ) }
    dend_11 { pt3dadd( 300.112, 497.244, 49.28, 0.2796 ) }
    dend_11 { pt3dadd( 300.186, 498.386, 49.28, 0.2542 ) }
    dend_11 { pt3dadd( 300.16, 499.522, 49.28, 0.2288 ) }
    dend_11 { pt3dadd( 299.471, 500.411, 49.28, 0.2288 ) }
    dend_11 { pt3dadd( 298.477, 500.897, 49.2876, 0.2288 ) }
    dend_11 { pt3dadd( 298.007, 501.877, 49.7389, 0.2288 ) }
    dend_11 { pt3dadd( 297.588, 502.691, 51.3878, 0.2288 ) }
    dend_11 { pt3dadd( 297.44, 503.706, 52.318, 0.2288 ) }
    dend_11 { pt3dadd( 297.44, 504.821, 52.8368, 0.2288 ) }
    dend_11 { pt3dadd( 297.44, 505.935, 53.3761, 0.2542 ) }
    dend_11 { pt3dadd( 297.36, 507.072, 53.48, 0.2796 ) }
    dend_11 { pt3dadd( 297.246, 508.207, 53.5928, 0.305 ) }
    dend_11 { pt3dadd( 297.211, 509.267, 54.4351, 0.2796 ) }
    dend_11 { pt3dadd( 297.254, 510.33, 55.1468, 0.2796 ) }
    dend_11 { pt3dadd( 297.369, 511.467, 55.1695, 0.2796 ) }
    dend_11 { pt3dadd( 297.498, 512.578, 55.6044, 0.305 ) }
    dend_11 { pt3dadd( 297.552, 513.694, 56.1168, 0.305 ) }
    dend_11 { pt3dadd( 297.566, 514.833, 56.3685, 0.305 ) }
    dend_11 { pt3dadd( 297.93, 515.869, 56.5225, 0.3304 ) }
    dend_11 { pt3dadd( 298.684, 516.716, 56.56, 0.3304 ) }
    dend_11 { pt3dadd( 299.543, 517.472, 56.56, 0.3304 ) }
    dend_11 { pt3dadd( 300.493, 518.095, 56.56, 0.3304 ) }
    dend_11 { pt3dadd( 301.558, 518.463, 56.8333, 0.4068 ) }
    dend_11 { pt3dadd( 302.573, 518.901, 57.4557, 0.5084 ) }
    dend_11 { pt3dadd( 303.398, 519.655, 57.68, 0.5592 ) }
    dend_11 { pt3dadd( 304.212, 520.451, 57.9124, 0.5084 ) }
    dend_11 { pt3dadd( 304.847, 521.394, 57.96, 0.4068 ) }
    dend_11 { pt3dadd( 305.505, 522.33, 57.96, 0.3304 ) }
    dend_11 { pt3dadd( 306.515, 522.841, 57.96, 0.305 ) }
    dend_11 { pt3dadd( 307.304, 523.661, 57.96, 0.305 ) }
    dend_11 { pt3dadd( 308.322, 524.17, 57.96, 0.2796 ) }
    dend_11 { pt3dadd( 309.463, 524.181, 57.96, 0.2796 ) }
    dend_11 { pt3dadd( 310.596, 524.295, 57.68, 0.305 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 302.003, 450.495, 32.2, 0.3304 ) }
    dend_10 { pt3dadd( 302.375, 450.21, 32.2428, 0.4322 ) }
    dend_10 { pt3dadd( 303.253, 449.494, 32.163, 0.5592 ) }
    dend_10 { pt3dadd( 304.352, 449.218, 32.2613, 0.6356 ) }
    dend_10 { pt3dadd( 305.438, 449.026, 31.612, 0.5848 ) }
    dend_10 { pt3dadd( 306.547, 448.848, 31.2827, 0.5084 ) }
    dend_10 { pt3dadd( 307.393, 448.247, 30.8132, 0.5084 ) }
    dend_10 { pt3dadd( 307.862, 447.222, 31.1606, 0.6356 ) }
    dend_10 { pt3dadd( 308.246, 446.173, 30.877, 0.8136 ) }
    dend_10 { pt3dadd( 308.751, 445.662, 28.9654, 0.9152 ) }
    dend_10 { pt3dadd( 309.698, 445.256, 28.0605, 0.8898 ) }
    dend_10 { pt3dadd( 310.749, 444.915, 27.9966, 0.7372 ) }
    dend_10 { pt3dadd( 311.774, 444.612, 28.2391, 0.5848 ) }
    dend_10 { pt3dadd( 312.83, 444.279, 28.523, 0.5338 ) }
    dend_10 { pt3dadd( 313.79, 444.443, 27.4274, 0.5848 ) }
    dend_10 { pt3dadd( 314.559, 444.894, 25.6827, 0.6864 ) }
    dend_10 { pt3dadd( 315.61, 444.741, 25.6256, 0.661 ) }
    dend_10 { pt3dadd( 316.521, 445.065, 26.5714, 0.6102 ) }
    dend_10 { pt3dadd( 317.514, 444.823, 25.9238, 0.5592 ) }
    dend_10 { pt3dadd( 318.043, 443.981, 24.9234, 0.5592 ) }
    dend_10 { pt3dadd( 318.455, 443.044, 23.8244, 0.5592 ) }
    dend_10 { pt3dadd( 318.596, 442.154, 25.1168, 0.5592 ) }
    dend_10 { pt3dadd( 319.531, 441.638, 25.7046, 0.6356 ) }
    dend_10 { pt3dadd( 319.583, 440.511, 25.8586, 0.6864 ) }
    dend_10 { pt3dadd( 319.888, 439.445, 25.9697, 0.6864 ) }
    dend_10 { pt3dadd( 320.7, 438.662, 26.4191, 0.6102 ) }
    dend_10 { pt3dadd( 321.59, 437.957, 26.7313, 0.5848 ) }
    dend_10 { pt3dadd( 322.41, 437.239, 26.5314, 0.6102 ) }
    dend_10 { pt3dadd( 323.169, 436.468, 25.9476, 0.6864 ) }
    dend_10 { pt3dadd( 323.572, 435.543, 25.3876, 0.7372 ) }
    dend_10 { pt3dadd( 324.23, 434.697, 24.8436, 0.7372 ) }
    dend_10 { pt3dadd( 325.002, 433.917, 24.323, 0.661 ) }
    dend_10 { pt3dadd( 326.039, 433.459, 24.6109, 0.5592 ) }
    dend_10 { pt3dadd( 327.099, 433.256, 25.1894, 0.4576 ) }
    dend_10 { pt3dadd( 328.059, 433.177, 26.532, 0.4322 ) }
    dend_10 { pt3dadd( 328.889, 432.538, 26.2693, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( 329.775, 432.02, 25.3845, 0.483 ) }
    dend_10 { pt3dadd( 330.858, 432.177, 25.5998, 0.5084 ) }
    dend_10 { pt3dadd( 331.925, 432.305, 24.8041, 0.483 ) }
    dend_10 { pt3dadd( 332.831, 431.717, 24.0335, 0.5338 ) }
    dend_10 { pt3dadd( 333.818, 431.191, 24.3676, 0.5592 ) }
    dend_10 { pt3dadd( 334.888, 430.888, 24.7654, 0.6356 ) }
    dend_10 { pt3dadd( 335.896, 430.452, 24.9396, 0.6102 ) }
    dend_10 { pt3dadd( 336.707, 429.931, 24.1394, 0.5848 ) }
    dend_10 { pt3dadd( 337.62, 429.514, 24.5482, 0.5592 ) }
    dend_10 { pt3dadd( 338.659, 429.192, 25.3996, 0.6356 ) }
    dend_10 { pt3dadd( 338.986, 428.248, 24.3628, 0.6864 ) }
    dend_10 { pt3dadd( 339.514, 427.249, 24.3656, 0.6864 ) }
    dend_10 { pt3dadd( 340.374, 426.64, 23.8638, 0.6356 ) }
    dend_10 { pt3dadd( 341.366, 426.388, 24.8749, 0.6356 ) }
    dend_10 { pt3dadd( 342.463, 426.385, 25.0729, 0.6102 ) }
    dend_10 { pt3dadd( 343.435, 426.906, 25.3201, 0.5848 ) }
    dend_10 { pt3dadd( 344.427, 427.028, 24.6053, 0.483 ) }
    dend_10 { pt3dadd( 345.528, 427.092, 24.0439, 0.483 ) }
    dend_10 { pt3dadd( 346.289, 427.398, 25.76, 0.4322 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 19/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 262.904, 404.404, 33.2889, 0.4322 ) }
    dend_5 { pt3dadd( 262.149, 403.905, 32.8476, 0.4576 ) }
    dend_5 { pt3dadd( 261.16, 403.361, 32.6334, 0.4322 ) }
    dend_5 { pt3dadd( 260.403, 402.634, 33.2965, 0.4576 ) }
    dend_5 { pt3dadd( 260.152, 401.55, 33.5854, 0.5084 ) }
    dend_5 { pt3dadd( 260.237, 400.416, 33.6431, 0.5848 ) }
    dend_5 { pt3dadd( 259.895, 399.409, 34.2216, 0.5592 ) }
    dend_5 { pt3dadd( 259.03, 398.961, 35.5925, 0.5338 ) }
    dend_5 { pt3dadd( 258.248, 398.494, 36.0545, 0.483 ) }
    dend_5 { pt3dadd( 257.647, 397.805, 34.7732, 0.483 ) }
    dend_5 { pt3dadd( 256.98, 396.931, 34.6671, 0.4068 ) }
    dend_5 { pt3dadd( 255.981, 396.612, 35.5082, 0.3814 ) }
    dend_5 { pt3dadd( 255.895, 395.601, 34.5878, 0.3814 ) }
    dend_5 { pt3dadd( 255.356, 394.657, 34.3426, 0.483 ) }
    dend_5 { pt3dadd( 254.341, 394.852, 33.9282, 0.5084 ) }
    dend_5 { pt3dadd( 253.563, 394.385, 35.3842, 0.5592 ) }
    dend_5 { pt3dadd( 252.691, 393.999, 36.2382, 0.5592 ) }
    dend_5 { pt3dadd( 251.616, 394.289, 36.0923, 0.6356 ) }
    dend_5 { pt3dadd( 250.549, 393.989, 35.9369, 0.6356 ) }
    dend_5 { pt3dadd( 249.423, 393.983, 36.3835, 0.6356 ) }
    dend_5 { pt3dadd( 248.363, 393.943, 36.2082, 0.5848 ) }
    dend_5 { pt3dadd( 247.373, 393.553, 35.6014, 0.5084 ) }
    dend_5 { pt3dadd( 246.494, 392.949, 36.4524, 0.3814 ) }
    dend_5 { pt3dadd( 245.902, 392.163, 35.5242, 0.305 ) }
    dend_5 { pt3dadd( 246.606, 391.688, 36.1654, 0.2796 ) }
    dend_5 { pt3dadd( 246.119, 390.769, 37.1655, 0.305 ) }
    dend_5 { pt3dadd( 245.444, 390.325, 38.9539, 0.2796 ) }
    dend_5 { pt3dadd( 244.75, 389.856, 39.9146, 0.2796 ) }
    dend_5 { pt3dadd( 244.063, 389.223, 38.6686, 0.3304 ) }
    dend_5 { pt3dadd( 243.068, 389.402, 37.5161, 0.4322 ) }
    dend_5 { pt3dadd( 242.023, 389.295, 37.2282, 0.483 ) }
    dend_5 { pt3dadd( 241.104, 388.789, 37.5455, 0.4576 ) }
    dend_5 { pt3dadd( 239.995, 388.809, 38.0061, 0.4068 ) }
    dend_5 { pt3dadd( 238.988, 388.45, 37.2224, 0.3814 ) }
    dend_5 { pt3dadd( 237.895, 388.203, 37.2394, 0.356 ) }
    dend_5 { pt3dadd( 236.852, 388.077, 38.0856, 0.3304 ) }
    dend_5 { pt3dadd( 235.848, 388.613, 38.2365, 0.3304 ) }
    dend_5 { pt3dadd( 234.836, 389.111, 37.9476, 0.3814 ) }
    dend_5 { pt3dadd( 233.726, 389.237, 37.9411, 0.4322 ) }
    dend_5 { pt3dadd( 232.64, 389.344, 38.351, 0.4322 ) }
    dend_5 { pt3dadd( 231.556, 389.677, 38.3667, 0.3814 ) }
    dend_5 { pt3dadd( 230.483, 390.056, 38.407, 0.3304 ) }
    dend_5 { pt3dadd( 229.459, 390.535, 38.0164, 0.305 ) }
    dend_5 { pt3dadd( 228.406, 390.685, 39.0186, 0.305 ) }
    dend_5 { pt3dadd( 227.299, 390.78, 39.6687, 0.305 ) }
    dend_5 { pt3dadd( 226.236, 390.905, 39.5909, 0.305 ) }
    dend_5 { pt3dadd( 225.242, 391.016, 39.2563, 0.305 ) }
    dend_5 { pt3dadd( 224.174, 391.19, 40.1313, 0.3304 ) }
    dend_5 { pt3dadd( 223.142, 390.852, 39.8202, 0.4068 ) }
    dend_5 { pt3dadd( 222.549, 390.126, 41.2101, 0.5338 ) }
    dend_5 { pt3dadd( 221.704, 389.387, 41.5447, 0.5848 ) }
    dend_5 { pt3dadd( 220.768, 388.831, 40.915, 0.5338 ) }
    dend_5 { pt3dadd( 219.859, 388.185, 41.3022, 0.4068 ) }
    dend_5 { pt3dadd( 218.994, 387.504, 41.9804, 0.3814 ) }
    dend_5 { pt3dadd( 217.965, 387.263, 42.9576, 0.4322 ) }
    dend_5 { pt3dadd( 217.214, 386.575, 42.2013, 0.5338 ) }
    dend_5 { pt3dadd( 216.639, 385.776, 43.2975, 0.5338 ) }
    dend_5 { pt3dadd( 215.889, 384.941, 43.1906, 0.5084 ) }
    dend_5 { pt3dadd( 214.979, 384.266, 43.1528, 0.4322 ) }
    dend_5 { pt3dadd( 214.242, 383.557, 43.608, 0.4576 ) }
    dend_5 { pt3dadd( 213.57, 382.94, 43.6038, 0.5084 ) }
    dend_5 { pt3dadd( 213.083, 382.069, 42.3836, 0.5592 ) }
    dend_5 { pt3dadd( 212.515, 381.087, 42.4494, 0.6102 ) }
    dend_5 { pt3dadd( 212.099, 380.159, 43.6086, 0.6356 ) }
    dend_5 { pt3dadd( 211.885, 379.214, 42.1484, 0.7118 ) }
    dend_5 { pt3dadd( 211.648, 378.219, 42.04, 0.6864 ) }
    dend_5 { pt3dadd( 211.376, 377.335, 42.8672, 0.661 ) }
    dend_5 { pt3dadd( 210.709, 376.43, 42.4547, 0.6102 ) }
    dend_5 { pt3dadd( 210.03, 375.519, 42.1534, 0.5848 ) }
    dend_5 { pt3dadd( 209.725, 374.467, 42.3116, 0.5338 ) }
    dend_5 { pt3dadd( 209.473, 373.374, 41.9784, 0.5084 ) }
    dend_5 { pt3dadd( 209.145, 372.345, 42.84, 0.5338 ) }
    dend_5 { pt3dadd( 208.746, 371.276, 42.8277, 0.6356 ) }
    dend_5 { pt3dadd( 208.046, 370.379, 42.6891, 0.7372 ) }
    dend_5 { pt3dadd( 207.298, 369.534, 43.1362, 0.7626 ) }
    dend_5 { pt3dadd( 206.454, 368.8, 43.3359, 0.661 ) }
    dend_5 { pt3dadd( 205.753, 368.13, 43.6481, 0.483 ) }
    dend_5 { pt3dadd( 205.226, 367.243, 44.4321, 0.356 ) }
    dend_5 { pt3dadd( 204.485, 366.488, 45.2819, 0.3304 ) }
    dend_5 { pt3dadd( 203.999, 365.667, 46.4226, 0.3304 ) }
    dend_5 { pt3dadd( 203.297, 365.122, 45.3776, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( 202.639, 365.503, 43.5408, 0.2796 ) }
    dend_5 { pt3dadd( 201.916, 366.309, 43.4, 0.2796 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 2/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 262.904, 404.404, 33.2889, 0.4322 ) }
    dend_4 { pt3dadd( 262.356, 404.467, 31.67, 0.305 ) }
    dend_4 { pt3dadd( 261.427, 404.323, 30.4772, 0.356 ) }
    dend_4 { pt3dadd( 260.344, 404.044, 29.9138, 0.3814 ) }
    dend_4 { pt3dadd( 259.273, 403.869, 29.0466, 0.356 ) }
    dend_4 { pt3dadd( 258.519, 404.016, 30.373, 0.3304 ) }
    dend_4 { pt3dadd( 258.224, 404.672, 29.4619, 0.2796 ) }
    dend_4 { pt3dadd( 257.465, 404.924, 31.3527, 0.305 ) }
    dend_4 { pt3dadd( 256.834, 404.376, 32.3954, 0.356 ) }
    dend_4 { pt3dadd( 256.254, 403.743, 30.931, 0.4322 ) }
    dend_4 { pt3dadd( 255.192, 403.552, 31.4266, 0.4068 ) }
    dend_4 { pt3dadd( 254.374, 403.208, 33.1248, 0.3304 ) }
    dend_4 { pt3dadd( 253.35, 403.165, 33.1013, 0.2542 ) }
    dend_4 { pt3dadd( 252.263, 403.373, 32.4708, 0.2288 ) }
    dend_4 { pt3dadd( 251.176, 403.261, 33.0445, 0.2288 ) }
    dend_4 { pt3dadd( 250.554, 402.658, 34.1191, 0.2542 ) }
    dend_4 { pt3dadd( 249.679, 402.501, 35.2265, 0.2796 ) }
    dend_4 { pt3dadd( 249.202, 402.353, 33.4958, 0.3304 ) }
    dend_4 { pt3dadd( 248.369, 402.179, 31.7192, 0.356 ) }
    dend_4 { pt3dadd( 247.427, 402.344, 30.7499, 0.4068 ) }
    dend_4 { pt3dadd( 246.327, 402.28, 30.6275, 0.4322 ) }
    dend_4 { pt3dadd( 245.316, 402.59, 29.7968, 0.4322 ) }
    dend_4 { pt3dadd( 244.229, 402.92, 29.8802, 0.3814 ) }
    dend_4 { pt3dadd( 243.258, 402.392, 29.4134, 0.305 ) }
    dend_4 { pt3dadd( 242.308, 401.917, 29.4347, 0.2542 ) }
    dend_4 { pt3dadd( 241.249, 401.894, 29.3448, 0.2288 ) }
    dend_4 { pt3dadd( 240.357, 401.782, 28.9514, 0.2288 ) }
    dend_4 { pt3dadd( 239.39, 402.092, 27.9258, 0.2542 ) }
    dend_4 { pt3dadd( 239.041, 401.642, 29.6408, 0.305 ) }
    dend_4 { pt3dadd( 238.14, 401.031, 28.877, 0.356 ) }
    dend_4 { pt3dadd( 237.252, 400.36, 29.1486, 0.356 ) }
    dend_4 { pt3dadd( 236.425, 399.668, 28.5953, 0.3304 ) }
    dend_4 { pt3dadd( 235.356, 399.366, 28.9108, 0.356 ) }
    dend_4 { pt3dadd( 234.233, 399.267, 29.3787, 0.4322 ) }
    dend_4 { pt3dadd( 233.128, 399.178, 30.0356, 0.5084 ) }
    dend_4 { pt3dadd( 232.055, 398.828, 30.0555, 0.5084 ) }
    dend_4 { pt3dadd( 231.072, 398.341, 30.7588, 0.4576 ) }
    dend_4 { pt3dadd( 230.151, 397.682, 30.8456, 0.4068 ) }
    dend_4 { pt3dadd( 229.22, 397.664, 30.6118, 0.3814 ) }
    dend_4 { pt3dadd( 228.15, 397.587, 30.2705, 0.3814 ) }
    dend_4 { pt3dadd( 227.111, 397.137, 30.6331, 0.3814 ) }
    dend_4 { pt3dadd( 226.037, 396.839, 30.9851, 0.356 ) }
    dend_4 { pt3dadd( 225.182, 396.351, 30.2193, 0.356 ) }
    dend_4 { pt3dadd( 224.389, 395.644, 30.2285, 0.3814 ) }
    dend_4 { pt3dadd( 223.423, 395.252, 29.4, 0.4576 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 47/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 353.038, 431.288, 29.96, 0.6356 ) }
    apic_19 { pt3dadd( 353.475, 431.081, 29.0772, 0.5848 ) }
    apic_19 { pt3dadd( 354.439, 430.807, 27.8925, 0.6356 ) }
    apic_19 { pt3dadd( 355.514, 430.994, 27.4842, 0.7118 ) }
    apic_19 { pt3dadd( 356.48, 431.556, 27.0757, 0.6864 ) }
    apic_19 { pt3dadd( 357.414, 432.096, 27.263, 0.661 ) }
    apic_19 { pt3dadd( 358.114, 432.88, 27.7928, 0.5848 ) }
    apic_19 { pt3dadd( 358.931, 433.646, 27.8807, 0.5848 ) }
    apic_19 { pt3dadd( 359.97, 434.018, 27.1914, 0.5592 ) }
    apic_19 { pt3dadd( 361.01, 434.476, 26.8881, 0.5592 ) }
    apic_19 { pt3dadd( 362.14, 434.604, 27.1538, 0.5084 ) }
    apic_19 { pt3dadd( 363.25, 434.459, 26.6165, 0.4576 ) }
    apic_19 { pt3dadd( 364.215, 433.853, 26.836, 0.4322 ) }
    apic_19 { pt3dadd( 365.205, 433.329, 27.0794, 0.4322 ) }
    apic_19 { pt3dadd( 366.293, 433.123, 26.6118, 0.4576 ) }
    apic_19 { pt3dadd( 367.119, 432.435, 25.9994, 0.4322 ) }
    apic_19 { pt3dadd( 367.77, 431.675, 24.8651, 0.4068 ) }
    apic_19 { pt3dadd( 368.728, 431.153, 24.7545, 0.4068 ) }
    apic_19 { pt3dadd( 369.828, 430.896, 25.1244, 0.4322 ) }
    apic_19 { pt3dadd( 370.869, 430.732, 26.1433, 0.4576 ) }
    apic_19 { pt3dadd( 371.915, 430.395, 26.7422, 0.4576 ) }
    apic_19 { pt3dadd( 372.99, 430.112, 27.3888, 0.4322 ) }
    apic_19 { pt3dadd( 374.111, 430.258, 27.1936, 0.4068 ) }
    apic_19 { pt3dadd( 375.231, 430.135, 26.9713, 0.356 ) }
    apic_19 { pt3dadd( 376.239, 430.008, 28.2271, 0.3304 ) }
    apic_19 { pt3dadd( 377.311, 429.767, 28.9612, 0.2796 ) }
    apic_19 { pt3dadd( 378.442, 429.675, 29.2564, 0.305 ) }
    apic_19 { pt3dadd( 379.575, 429.565, 29.2642, 0.3304 ) }
    apic_19 { pt3dadd( 380.625, 429.247, 28.66, 0.4068 ) }
    apic_19 { pt3dadd( 381.49, 429.543, 29.1119, 0.3814 ) }
    apic_19 { pt3dadd( 382.56, 429.796, 28.9551, 0.3814 ) }
    apic_19 { pt3dadd( 383.653, 429.562, 29.484, 0.356 ) }
    apic_19 { pt3dadd( 384.718, 429.154, 29.5392, 0.4068 ) }
    apic_19 { pt3dadd( 385.645, 428.884, 28.3086, 0.4322 ) }
    apic_19 { pt3dadd( 386.738, 428.716, 28.0823, 0.4576 ) }
    apic_19 { pt3dadd( 387.801, 428.434, 27.48, 0.483 ) }
    apic_19 { pt3dadd( 388.731, 427.799, 27.9616, 0.5338 ) }
    apic_19 { pt3dadd( 389.643, 427.109, 28.007, 0.5592 ) }
    apic_19 { pt3dadd( 390.528, 426.471, 27.5094, 0.5084 ) }
    apic_19 { pt3dadd( 391.182, 425.744, 27.1256, 0.3814 ) }
    apic_19 { pt3dadd( 391.587, 424.718, 27.8614, 0.3304 ) }
    apic_19 { pt3dadd( 392.506, 424.195, 27.44, 0.3814 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 89/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 353.038, 431.288, 29.96, 0.6356 ) }
    apic_18 { pt3dadd( 353.273, 431.691, 29.5078, 0.5084 ) }
    apic_18 { pt3dadd( 354.195, 432.347, 29.43, 0.5592 ) }
    apic_18 { pt3dadd( 355.291, 432.646, 29.4647, 0.5592 ) }
    apic_18 { pt3dadd( 356.403, 432.744, 29.2984, 0.5592 ) }
    apic_18 { pt3dadd( 357.483, 432.672, 30.1395, 0.6102 ) }
    apic_18 { pt3dadd( 358.504, 432.85, 31.0108, 0.6356 ) }
    apic_18 { pt3dadd( 359.465, 433.33, 31.6274, 0.5848 ) }
    apic_18 { pt3dadd( 360.444, 433.819, 32.037, 0.483 ) }
    apic_18 { pt3dadd( 360.426, 434.435, 30.3005, 0.4068 ) }
    apic_18 { pt3dadd( 361.006, 434.673, 28.2397, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_18 { pt3dadd( 361.694, 434.781, 28.597, 0.4576 ) }
    apic_18 { pt3dadd( 362.3, 434.909, 29.9846, 0.5338 ) }
    apic_18 { pt3dadd( 363.202, 435.425, 30.2369, 0.6102 ) }
    apic_18 { pt3dadd( 363.808, 436.287, 30.3758, 0.6356 ) }
    apic_18 { pt3dadd( 363.797, 437.323, 31.4216, 0.6356 ) }
    apic_18 { pt3dadd( 363.016, 437.784, 32.7384, 0.6102 ) }
    apic_18 { pt3dadd( 362.44, 438.562, 34.1015, 0.6102 ) }
    apic_18 { pt3dadd( 361.862, 439.524, 34.3409, 0.6102 ) }
    apic_18 { pt3dadd( 362.289, 440.551, 33.971, 0.6102 ) }
    apic_18 { pt3dadd( 363.132, 441.169, 33.6636, 0.6102 ) }
    apic_18 { pt3dadd( 363.91, 441.676, 35.2772, 0.5592 ) }
    apic_18 { pt3dadd( 364.268, 442.392, 36.988, 0.483 ) }
    apic_18 { pt3dadd( 364.902, 443.051, 38.4317, 0.4068 ) }
    apic_18 { pt3dadd( 365.721, 443.791, 38.1424, 0.4576 ) }
    apic_18 { pt3dadd( 366.683, 444.354, 37.627, 0.5592 ) }
    apic_18 { pt3dadd( 367.671, 444.815, 37.3534, 0.661 ) }
    apic_18 { pt3dadd( 368.368, 445.702, 37.52, 0.6102 ) }
    // Section: apic_16, id: apic_16, parent: apic_1 (entry count 17/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 303.732, 409.781, 40.88, 0.5592 ) }
    apic_16 { pt3dadd( 303.845, 410.19, 41.5204, 0.305 ) }
    apic_16 { pt3dadd( 304.104, 411.131, 42.9862, 0.3304 ) }
    apic_16 { pt3dadd( 304.363, 412.07, 44.4531, 0.4068 ) }
    apic_16 { pt3dadd( 304.622, 413.009, 45.92, 0.5084 ) }
    apic_16 { pt3dadd( 304.541, 412.919, 47.749, 0.6864 ) }
    apic_16 { pt3dadd( 304.842, 413.947, 48.6368, 0.7372 ) }
    apic_16 { pt3dadd( 305.078, 415.041, 49.072, 0.788 ) }
    apic_16 { pt3dadd( 305.967, 415.494, 47.9142, 0.839 ) }
    apic_16 { pt3dadd( 307.003, 415.854, 48.6758, 0.8898 ) }
    apic_16 { pt3dadd( 308.086, 416.089, 49.1826, 0.839 ) }
    apic_16 { pt3dadd( 309.024, 416.185, 50.64, 0.6864 ) }
    apic_16 { pt3dadd( 309.263, 416.139, 52.9043, 0.5084 ) }
    apic_16 { pt3dadd( 308.667, 415.603, 54.7476, 0.4322 ) }
    apic_16 { pt3dadd( 308.023, 415.479, 56.6003, 0.4322 ) }
    apic_16 { pt3dadd( 307.479, 415.286, 58.8538, 0.483 ) }
    apic_16 { pt3dadd( 306.451, 415.01, 59.4843, 0.483 ) }
    apic_16 { pt3dadd( 305.674, 414.726, 60.2566, 0.5338 ) }
    apic_16 { pt3dadd( 305.647, 414.301, 62.3734, 0.5592 ) }
    apic_16 { pt3dadd( 304.829, 414.547, 63.2419, 0.5848 ) }
    apic_16 { pt3dadd( 303.747, 414.888, 63.602, 0.5848 ) }
    apic_16 { pt3dadd( 303.39, 415.237, 66.008, 0.5338 ) }
    apic_16 { pt3dadd( 302.692, 415.005, 68.1215, 0.5338 ) }
    apic_16 { pt3dadd( 302.627, 414.944, 70.7252, 0.4322 ) }
    apic_16 { pt3dadd( 303.07, 414.296, 71.4918, 0.3814 ) }
    apic_16 { pt3dadd( 303.94, 413.731, 70.826, 0.2796 ) }
    apic_16 { pt3dadd( 305.01, 413.555, 71.3905, 0.2542 ) }
    apic_16 { pt3dadd( 305.594, 412.716, 70.8809, 0.2288 ) }
    apic_16 { pt3dadd( 306.235, 411.95, 70.6252, 0.2288 ) }
    apic_16 { pt3dadd( 307.297, 411.959, 71.2953, 0.2542 ) }
    apic_16 { pt3dadd( 307.725, 412.378, 73.1788, 0.3304 ) }
    apic_16 { pt3dadd( 307.439, 412.94, 75.4712, 0.4068 ) }
    apic_16 { pt3dadd( 307.202, 413.724, 77.0053, 0.4322 ) }
    apic_16 { pt3dadd( 307.929, 414.351, 78.4398, 0.4068 ) }
    apic_16 { pt3dadd( 308.552, 414.787, 80.4633, 0.4322 ) }
    apic_16 { pt3dadd( 308.962, 414.548, 82.6664, 0.5338 ) }
    apic_16 { pt3dadd( 308.753, 414.738, 85.2757, 0.5848 ) }
    apic_16 { pt3dadd( 308.048, 413.682, 84.7801, 0.483 ) }
    apic_16 { pt3dadd( 308.254, 412.839, 83.9866, 0.4322 ) }
    apic_16 { pt3dadd( 309.225, 412.875, 83.2325, 0.3304 ) }
    apic_16 { pt3dadd( 309.592, 412.325, 85.2194, 0.2796 ) }
    apic_16 { pt3dadd( 310.272, 411.77, 86.3808, 0.2542 ) }
    apic_16 { pt3dadd( 310.802, 410.953, 87.6336, 0.305 ) }
    apic_16 { pt3dadd( 310.931, 410.068, 89.1932, 0.356 ) }
    apic_16 { pt3dadd( 311.779, 409.418, 89.3824, 0.3814 ) }
    apic_16 { pt3dadd( 312.463, 409.161, 91.3256, 0.356 ) }
    apic_16 { pt3dadd( 312.798, 408.224, 92.4185, 0.3304 ) }
    apic_16 { pt3dadd( 312.926, 407.16, 93.3918, 0.305 ) }
    apic_16 { pt3dadd( 313.483, 406.581, 94.878, 0.356 ) }
    apic_16 { pt3dadd( 313.7, 405.626, 95.3884, 0.4322 ) }
    apic_16 { pt3dadd( 313.774, 404.494, 95.0914, 0.483 ) }
    apic_16 { pt3dadd( 313.701, 403.357, 95.0345, 0.4322 ) }
    apic_16 { pt3dadd( 314.297, 402.543, 94.0696, 0.3304 ) }
    apic_16 { pt3dadd( 314.471, 401.507, 93.0961, 0.2542 ) }
    apic_16 { pt3dadd( 314.375, 400.421, 92.2575, 0.2288 ) }
    apic_16 { pt3dadd( 314.468, 399.325, 91.4967, 0.2542 ) }
    apic_16 { pt3dadd( 314.714, 398.226, 91.0, 0.2796 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 74/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 303.732, 409.781, 40.88, 0.5592 ) }
    apic_2 { pt3dadd( 303.576, 409.343, 41.0906, 0.4068 ) }
    apic_2 { pt3dadd( 303.139, 408.463, 40.0884, 0.4576 ) }
    apic_2 { pt3dadd( 302.495, 407.624, 40.2931, 0.5848 ) }
    apic_2 { pt3dadd( 302.645, 406.564, 40.4197, 0.661 ) }
    apic_2 { pt3dadd( 303.077, 405.539, 40.8411, 0.7118 ) }
    apic_2 { pt3dadd( 303.654, 404.607, 41.3246, 0.839 ) }
    apic_2 { pt3dadd( 304.197, 403.612, 41.265, 0.9914 ) }
    apic_2 { pt3dadd( 304.662, 402.587, 41.6872, 1.0678 ) }
    apic_2 { pt3dadd( 304.766, 401.477, 42.1744, 0.9914 ) }
    apic_2 { pt3dadd( 305.33, 400.514, 42.0353, 0.8644 ) }
    apic_2 { pt3dadd( 305.793, 399.483, 42.278, 0.788 ) }
    apic_2 { pt3dadd( 305.877, 398.362, 42.1943, 0.7626 ) }
    apic_2 { pt3dadd( 306.568, 397.504, 41.5741, 0.7626 ) }
    apic_2 { pt3dadd( 307.036, 396.529, 42.0658, 0.7372 ) }
    apic_2 { pt3dadd( 307.546, 395.715, 42.5835, 0.661 ) }
    apic_2 { pt3dadd( 307.85, 394.808, 43.4241, 0.5592 ) }
    apic_2 { pt3dadd( 308.346, 393.917, 42.84, 0.483 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 261.468, 409.997, 40.1332, 0.483 ) }
    dend_35 { pt3dadd( 261.037, 409.792, 40.9802, 0.2542 ) }
    dend_35 { pt3dadd( 260.181, 409.407, 42.579, 0.2542 ) }
    dend_35 { pt3dadd( 259.578, 408.691, 43.4, 0.305 ) }
    dend_35 { pt3dadd( 259.227, 407.603, 43.4, 0.356 ) }
    dend_35 { pt3dadd( 258.635, 406.638, 43.4, 0.4068 ) }
    dend_35 { pt3dadd( 257.768, 405.915, 43.4, 0.4322 ) }
    dend_35 { pt3dadd( 257.019, 405.078, 43.4, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_35 { pt3dadd( 256.594, 404.028, 43.4, 0.5084 ) }
    dend_35 { pt3dadd( 256.083, 403.012, 43.4, 0.483 ) }
    dend_35 { pt3dadd( 255.84, 401.914, 43.4, 0.356 ) }
    dend_35 { pt3dadd( 255.216, 401.008, 43.4, 0.2796 ) }
    dend_35 { pt3dadd( 254.673, 400.005, 43.4, 0.2288 ) }
    dend_35 { pt3dadd( 254.463, 398.882, 43.4, 0.2542 ) }
    dend_35 { pt3dadd( 253.739, 397.998, 43.4, 0.2796 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 7/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 261.468, 409.997, 40.1332, 0.483 ) }
    dend_34 { pt3dadd( 261.462, 409.446, 41.7631, 0.305 ) }
    dend_34 { pt3dadd( 261.604, 408.406, 41.1477, 0.3304 ) }
    dend_34 { pt3dadd( 261.713, 407.398, 39.8563, 0.356 ) }
    dend_34 { pt3dadd( 261.246, 406.376, 39.76, 0.4322 ) }
    dend_34 { pt3dadd( 260.856, 405.301, 39.76, 0.483 ) }
    dend_34 { pt3dadd( 259.849, 404.793, 39.76, 0.5338 ) }
    dend_34 { pt3dadd( 259.052, 403.974, 39.76, 0.483 ) }
    dend_34 { pt3dadd( 258.07, 403.387, 39.76, 0.3814 ) }
    dend_34 { pt3dadd( 257.608, 402.344, 39.76, 0.3304 ) }
    dend_34 { pt3dadd( 257.366, 401.228, 39.76, 0.4068 ) }
    dend_34 { pt3dadd( 256.939, 400.167, 39.76, 0.5848 ) }
    dend_34 { pt3dadd( 256.433, 399.151, 39.758, 0.6864 ) }
    dend_34 { pt3dadd( 255.603, 398.376, 39.6301, 0.661 ) }
    dend_34 { pt3dadd( 254.96, 397.506, 38.92, 0.5848 ) }
    dend_34 { pt3dadd( 254.547, 396.445, 38.894, 0.5592 ) }
    dend_34 { pt3dadd( 253.89, 395.521, 38.6946, 0.6102 ) }
    dend_34 { pt3dadd( 253.175, 394.673, 38.36, 0.6356 ) }
    dend_34 { pt3dadd( 252.77, 393.603, 38.36, 0.6102 ) }
    dend_34 { pt3dadd( 252.173, 392.687, 38.36, 0.5084 ) }
    dend_34 { pt3dadd( 251.145, 392.215, 38.36, 0.4322 ) }
    dend_34 { pt3dadd( 250.019, 392.049, 38.36, 0.356 ) }
    dend_34 { pt3dadd( 248.882, 392.088, 38.2088, 0.3304 ) }
    dend_34 { pt3dadd( 247.797, 392.146, 37.4629, 0.2796 ) }
    dend_34 { pt3dadd( 246.881, 391.786, 36.68, 0.2542 ) }
    dend_34 { pt3dadd( 246.074, 390.977, 36.68, 0.2288 ) }
    dend_34 { pt3dadd( 245.041, 390.676, 36.68, 0.2542 ) }
    dend_34 { pt3dadd( 244.238, 390.087, 36.68, 0.2796 ) }
    dend_34 { pt3dadd( 244.13, 389.079, 37.7384, 0.305 ) }
    dend_34 { pt3dadd( 244.13, 387.951, 38.061, 0.2796 ) }
    dend_34 { pt3dadd( 243.942, 386.824, 38.08, 0.2796 ) }
    dend_34 { pt3dadd( 243.306, 385.885, 38.2511, 0.305 ) }
    dend_34 { pt3dadd( 242.796, 384.866, 38.4689, 0.356 ) }
    dend_34 { pt3dadd( 242.361, 383.81, 38.6366, 0.3814 ) }
    dend_34 { pt3dadd( 241.997, 382.731, 38.8998, 0.356 ) }
    dend_34 { pt3dadd( 241.616, 381.652, 38.9869, 0.3304 ) }
    dend_34 { pt3dadd( 241.057, 380.675, 39.2, 0.2796 ) }
    dend_34 { pt3dadd( 240.071, 380.111, 39.2, 0.2796 ) }
    dend_34 { pt3dadd( 238.96, 379.852, 39.2, 0.2796 ) }
    dend_34 { pt3dadd( 237.939, 379.357, 39.2, 0.305 ) }
    dend_34 { pt3dadd( 237.151, 378.534, 39.2, 0.305 ) }
    dend_34 { pt3dadd( 236.428, 377.729, 38.8321, 0.305 ) }
    dend_34 { pt3dadd( 235.45, 377.339, 37.9271, 0.305 ) }
    dend_34 { pt3dadd( 234.327, 377.167, 37.8, 0.3304 ) }
    dend_34 { pt3dadd( 233.231, 376.956, 37.8, 0.3814 ) }
    dend_34 { pt3dadd( 232.221, 376.52, 37.3682, 0.4322 ) }
    dend_34 { pt3dadd( 231.339, 375.964, 36.7186, 0.4068 ) }
    dend_34 { pt3dadd( 230.571, 375.115, 36.68, 0.356 ) }
    dend_34 { pt3dadd( 229.704, 374.376, 36.68, 0.305 ) }
    dend_34 { pt3dadd( 228.675, 373.938, 36.4314, 0.3304 ) }
    dend_34 { pt3dadd( 227.558, 373.731, 36.1782, 0.3814 ) }
    dend_34 { pt3dadd( 226.517, 373.302, 36.2835, 0.483 ) }
    dend_34 { pt3dadd( 225.631, 372.591, 36.3863, 0.5338 ) }
    dend_34 { pt3dadd( 224.967, 371.671, 36.4, 0.5084 ) }
    dend_34 { pt3dadd( 224.115, 370.937, 36.4, 0.3814 ) }
    dend_34 { pt3dadd( 223.064, 370.507, 36.4, 0.2796 ) }
    dend_34 { pt3dadd( 222.286, 369.73, 36.1976, 0.2288 ) }
    dend_34 { pt3dadd( 221.242, 369.48, 35.8943, 0.2288 ) }
    dend_34 { pt3dadd( 220.13, 369.227, 35.84, 0.2796 ) }
    dend_34 { pt3dadd( 219.19, 368.597, 35.84, 0.356 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 271.891, 429.381, 50.68, 0.3304 ) }
    dend_32 { pt3dadd( 271.085, 428.735, 50.68, 0.4068 ) }
    dend_32 { pt3dadd( 270.786, 427.7, 50.68, 0.4068 ) }
    dend_32 { pt3dadd( 270.785, 426.556, 50.68, 0.4068 ) }
    dend_32 { pt3dadd( 270.614, 425.434, 50.68, 0.4322 ) }
    dend_32 { pt3dadd( 270.209, 424.369, 50.68, 0.4576 ) }
    dend_32 { pt3dadd( 269.616, 423.399, 50.8082, 0.5338 ) }
    dend_32 { pt3dadd( 269.144, 422.38, 51.1983, 0.5848 ) }
    dend_32 { pt3dadd( 268.196, 421.899, 51.4858, 0.6102 ) }
    dend_32 { pt3dadd( 267.346, 421.163, 51.6995, 0.5848 ) }
    dend_32 { pt3dadd( 266.587, 420.39, 52.5722, 0.5084 ) }
    dend_32 { pt3dadd( 266.552, 419.262, 52.6389, 0.3814 ) }
    dend_32 { pt3dadd( 266.552, 418.118, 52.64, 0.2796 ) }
    dend_32 { pt3dadd( 266.55, 416.974, 52.64, 0.2288 ) }
    dend_32 { pt3dadd( 266.311, 415.857, 52.64, 0.2288 ) }
    dend_32 { pt3dadd( 266.255, 415.418, 53.2804, 0.2796 ) }
    dend_32 { pt3dadd( 266.128, 414.443, 54.7084, 0.4068 ) }
    dend_32 { pt3dadd( 266.002, 413.467, 56.1366, 0.5848 ) }
    dend_32 { pt3dadd( 265.897, 412.454, 57.332, 0.6864 ) }
    dend_32 { pt3dadd( 265.866, 411.323, 57.68, 0.6864 ) }
    dend_32 { pt3dadd( 265.866, 410.179, 57.68, 0.5848 ) }
    dend_32 { pt3dadd( 265.834, 409.036, 57.68, 0.483 ) }
    dend_32 { pt3dadd( 265.751, 407.897, 57.68, 0.356 ) }
    dend_32 { pt3dadd( 265.751, 406.753, 57.68, 0.2796 ) }
    dend_32 { pt3dadd( 265.751, 405.609, 57.68, 0.2542 ) }
    dend_32 { pt3dadd( 265.702, 404.468, 57.68, 0.2796 ) }
    dend_32 { pt3dadd( 265.561, 403.334, 57.68, 0.356 ) }
    dend_32 { pt3dadd( 265.52, 402.191, 57.68, 0.4322 ) }
    dend_32 { pt3dadd( 265.447, 401.1, 58.0826, 0.5084 ) }
    dend_32 { pt3dadd( 265.209, 400.089, 59.1758, 0.483 ) }
    dend_32 { pt3dadd( 265.065, 398.979, 59.684, 0.4068 ) }
    dend_32 { pt3dadd( 265.065, 397.842, 59.92, 0.3304 ) }
    dend_32 { pt3dadd( 265.065, 396.698, 59.92, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_32 { pt3dadd( 265.065, 395.554, 59.92, 0.4576 ) }
    dend_32 { pt3dadd( 265.065, 394.434, 60.2806, 0.5848 ) }
    dend_32 { pt3dadd( 265.065, 393.339, 61.0865, 0.5592 ) }
    dend_32 { pt3dadd( 265.065, 392.235, 61.8187, 0.5338 ) }
    dend_32 { pt3dadd( 265.065, 391.11, 62.16, 0.4068 ) }
    dend_32 { pt3dadd( 265.065, 389.991, 62.5887, 0.356 ) }
    dend_32 { pt3dadd( 265.065, 388.866, 62.9614, 0.305 ) }
    dend_32 { pt3dadd( 265.065, 387.722, 63.0112, 0.3304 ) }
    dend_32 { pt3dadd( 265.139, 386.643, 63.7123, 0.3814 ) }
    dend_32 { pt3dadd( 265.296, 385.546, 64.2499, 0.4322 ) }
    dend_32 { pt3dadd( 265.391, 384.431, 64.7816, 0.4322 ) }
    dend_32 { pt3dadd( 265.408, 383.301, 65.1647, 0.4068 ) }
    dend_32 { pt3dadd( 265.56, 382.173, 65.3139, 0.356 ) }
    dend_32 { pt3dadd( 266.235, 381.359, 65.9322, 0.3304 ) }
    dend_32 { pt3dadd( 266.618, 380.408, 66.9852, 0.2796 ) }
    dend_32 { pt3dadd( 266.891, 379.337, 67.6822, 0.2542 ) }
    dend_32 { pt3dadd( 267.14, 378.224, 67.76, 0.2288 ) }
    dend_32 { pt3dadd( 267.41, 377.112, 67.76, 0.2288 ) }
    dend_32 { pt3dadd( 267.464, 375.972, 67.76, 0.2288 ) }
    dend_32 { pt3dadd( 267.467, 374.829, 67.8684, 0.2288 ) }
    dend_32 { pt3dadd( 267.467, 373.769, 68.8632, 0.2288 ) }
    dend_32 { pt3dadd( 267.467, 372.636, 69.1418, 0.2542 ) }
    dend_32 { pt3dadd( 267.467, 371.492, 69.16, 0.305 ) }
    dend_32 { pt3dadd( 267.467, 370.348, 69.16, 0.356 ) }
    dend_32 { pt3dadd( 267.467, 369.204, 69.16, 0.356 ) }
    dend_32 { pt3dadd( 267.818, 368.122, 69.16, 0.305 ) }
    dend_32 { pt3dadd( 268.258, 367.066, 69.16, 0.2542 ) }
    dend_32 { pt3dadd( 268.714, 366.017, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 269.298, 365.033, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 269.977, 364.113, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.416, 363.058, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.554, 361.923, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.556, 360.779, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.556, 359.635, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.556, 358.491, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.556, 357.347, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.556, 356.203, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.556, 355.059, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.556, 353.915, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.27, 352.809, 69.16, 0.2288 ) }
    dend_32 { pt3dadd( 270.213, 351.666, 69.16, 0.2542 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 41/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 271.891, 429.381, 50.68, 0.3304 ) }
    dend_29 { pt3dadd( 271.088, 430.059, 52.2256, 0.2288 ) }
    dend_29 { pt3dadd( 270.34, 430.737, 53.48, 0.2288 ) }
    dend_29 { pt3dadd( 269.594, 431.602, 53.48, 0.2288 ) }
    dend_29 { pt3dadd( 268.702, 432.315, 53.48, 0.2288 ) }
    dend_29 { pt3dadd( 267.762, 432.943, 53.48, 0.2288 ) }
    dend_29 { pt3dadd( 267.22, 433.947, 53.48, 0.2288 ) }
    dend_29 { pt3dadd( 266.894, 435.043, 53.48, 0.2542 ) }
    dend_29 { pt3dadd( 266.533, 436.107, 53.48, 0.2796 ) }
    dend_29 { pt3dadd( 265.703, 436.879, 53.48, 0.305 ) }
    dend_29 { pt3dadd( 264.687, 437.405, 53.4828, 0.3304 ) }
    dend_29 { pt3dadd( 263.639, 437.858, 53.5564, 0.3814 ) }
    dend_29 { pt3dadd( 262.555, 438.191, 53.76, 0.4576 ) }
    dend_29 { pt3dadd( 261.422, 438.349, 53.76, 0.4576 ) }
    dend_29 { pt3dadd( 260.369, 438.694, 53.76, 0.4068 ) }
    dend_29 { pt3dadd( 259.445, 439.345, 53.879, 0.305 ) }
    dend_29 { pt3dadd( 258.477, 439.914, 54.3122, 0.2542 ) }
    dend_29 { pt3dadd( 257.596, 440.621, 54.6, 0.2288 ) }
    dend_29 { pt3dadd( 256.643, 441.236, 54.6, 0.2288 ) }
    dend_29 { pt3dadd( 255.549, 441.465, 54.6, 0.2288 ) }
    dend_29 { pt3dadd( 254.407, 441.531, 54.6, 0.305 ) }
    dend_29 { pt3dadd( 253.332, 441.863, 54.6, 0.3814 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 63/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 278.335, 448.219, 39.76, 0.4576 ) }
    dend_23 { pt3dadd( 278.491, 449.37, 40.1626, 0.4576 ) }
    dend_23 { pt3dadd( 278.038, 450.346, 40.8388, 0.5084 ) }
    dend_23 { pt3dadd( 277.901, 451.322, 41.5649, 0.483 ) }
    dend_23 { pt3dadd( 278.011, 452.436, 41.298, 0.5338 ) }
    dend_23 { pt3dadd( 278.337, 453.378, 42.3077, 0.5084 ) }
    dend_23 { pt3dadd( 279.237, 453.882, 42.7613, 0.5338 ) }
    dend_23 { pt3dadd( 280.353, 453.876, 42.5916, 0.5084 ) }
    dend_23 { pt3dadd( 281.309, 454.322, 43.1609, 0.5592 ) }
    dend_23 { pt3dadd( 281.22, 455.242, 43.2373, 0.5592 ) }
    dend_23 { pt3dadd( 280.739, 456.146, 42.1005, 0.5592 ) }
    dend_23 { pt3dadd( 280.513, 457.058, 43.1141, 0.5592 ) }
    dend_23 { pt3dadd( 280.826, 458.107, 43.0772, 0.6102 ) }
    dend_23 { pt3dadd( 281.318, 459.065, 43.2104, 0.6356 ) }
    dend_23 { pt3dadd( 281.295, 460.126, 43.6293, 0.6356 ) }
    dend_23 { pt3dadd( 281.378, 461.154, 44.6748, 0.6102 ) }
    dend_23 { pt3dadd( 281.746, 462.091, 45.9701, 0.6102 ) }
    dend_23 { pt3dadd( 281.998, 463.117, 46.9795, 0.5592 ) }
    dend_23 { pt3dadd( 282.809, 463.892, 46.7911, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 82/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 278.335, 448.219, 39.76, 0.4576 ) }
    dend_16 { pt3dadd( 277.39, 448.219, 40.1475, 0.5338 ) }
    dend_16 { pt3dadd( 276.285, 448.121, 39.5727, 0.5848 ) }
    dend_16 { pt3dadd( 275.209, 447.855, 39.5391, 0.6356 ) }
    dend_16 { pt3dadd( 274.43, 447.162, 40.4074, 0.661 ) }
    dend_16 { pt3dadd( 273.832, 446.365, 41.6349, 0.5848 ) }
    dend_16 { pt3dadd( 273.732, 445.771, 43.7385, 0.5084 ) }
    dend_16 { pt3dadd( 273.797, 444.711, 43.4, 0.483 ) }
    // Section: apic_15, id: apic_15, parent: apic_2 (entry count 90/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 308.346, 393.917, 42.84, 0.483 ) }
    apic_15 { pt3dadd( 308.603, 393.949, 40.3486, 0.5848 ) }
    apic_15 { pt3dadd( 308.89, 393.539, 39.1793, 0.6102 ) }
    apic_15 { pt3dadd( 309.452, 392.684, 40.0156, 0.6864 ) }
    apic_15 { pt3dadd( 310.254, 391.909, 40.5364, 0.8136 ) }
    apic_15 { pt3dadd( 311.072, 391.247, 39.7334, 0.9406 ) }
    apic_15 { pt3dadd( 312.114, 390.794, 39.4352, 0.9406 ) }
    apic_15 { pt3dadd( 313.165, 390.374, 39.076, 0.8136 ) }
    apic_15 { pt3dadd( 314.18, 389.966, 38.3158, 0.661 ) }
    apic_15 { pt3dadd( 315.276, 389.76, 37.7504, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_15 { pt3dadd( 316.245, 389.352, 37.2977, 0.5848 ) }
    apic_15 { pt3dadd( 316.449, 388.465, 36.0867, 0.6864 ) }
    apic_15 { pt3dadd( 316.11, 387.406, 35.5146, 0.7372 ) }
    apic_15 { pt3dadd( 315.778, 386.338, 35.5004, 0.7372 ) }
    apic_15 { pt3dadd( 315.515, 385.233, 35.597, 0.6102 ) }
    apic_15 { pt3dadd( 316.189, 384.536, 35.4752, 0.5338 ) }
    apic_15 { pt3dadd( 316.864, 383.651, 35.0087, 0.4322 ) }
    apic_15 { pt3dadd( 317.412, 382.766, 34.512, 0.5084 ) }
    apic_15 { pt3dadd( 316.758, 381.926, 34.2672, 0.6356 ) }
    apic_15 { pt3dadd( 316.084, 381.138, 33.4482, 0.7626 ) }
    apic_15 { pt3dadd( 315.418, 380.235, 33.0688, 0.7372 ) }
    apic_15 { pt3dadd( 314.782, 379.301, 32.7583, 0.661 ) }
    apic_15 { pt3dadd( 314.814, 378.24, 32.489, 0.5848 ) }
    apic_15 { pt3dadd( 315.189, 377.161, 32.4075, 0.5338 ) }
    apic_15 { pt3dadd( 315.475, 376.12, 33.1761, 0.4576 ) }
    apic_15 { pt3dadd( 315.277, 375.116, 32.2879, 0.4576 ) }
    apic_15 { pt3dadd( 314.209, 374.88, 31.5899, 0.5084 ) }
    apic_15 { pt3dadd( 313.116, 374.65, 31.8931, 0.5592 ) }
    apic_15 { pt3dadd( 312.214, 373.97, 31.5857, 0.5338 ) }
    apic_15 { pt3dadd( 311.304, 373.376, 30.7518, 0.5084 ) }
    apic_15 { pt3dadd( 310.578, 372.613, 30.4769, 0.5592 ) }
    apic_15 { pt3dadd( 310.581, 371.547, 30.5102, 0.6102 ) }
    apic_15 { pt3dadd( 310.716, 370.419, 30.5094, 0.6102 ) }
    apic_15 { pt3dadd( 310.581, 369.293, 30.7401, 0.5338 ) }
    apic_15 { pt3dadd( 310.423, 368.163, 30.7518, 0.483 ) }
    apic_15 { pt3dadd( 310.707, 367.081, 30.6191, 0.4576 ) }
    apic_15 { pt3dadd( 311.242, 366.073, 30.5318, 0.483 ) }
    apic_15 { pt3dadd( 311.455, 364.97, 30.8602, 0.5084 ) }
    apic_15 { pt3dadd( 311.843, 363.977, 30.1672, 0.483 ) }
    apic_15 { pt3dadd( 311.978, 363.114, 28.5888, 0.4068 ) }
    apic_15 { pt3dadd( 311.925, 362.131, 27.3148, 0.3814 ) }
    apic_15 { pt3dadd( 312.287, 361.194, 27.5405, 0.4576 ) }
    apic_15 { pt3dadd( 312.845, 360.291, 27.9916, 0.5592 ) }
    apic_15 { pt3dadd( 313.248, 359.42, 26.6034, 0.5848 ) }
    apic_15 { pt3dadd( 313.898, 358.736, 25.1936, 0.5592 ) }
    apic_15 { pt3dadd( 314.836, 358.127, 25.5475, 0.5338 ) }
    apic_15 { pt3dadd( 315.663, 357.396, 25.8084, 0.5338 ) }
    apic_15 { pt3dadd( 316.616, 357.112, 24.8203, 0.5084 ) }
    apic_15 { pt3dadd( 317.7, 357.418, 24.491, 0.5084 ) }
    apic_15 { pt3dadd( 318.709, 357.056, 24.6358, 0.5338 ) }
    apic_15 { pt3dadd( 319.058, 356.025, 25.1322, 0.5592 ) }
    apic_15 { pt3dadd( 319.991, 355.42, 25.1009, 0.5338 ) }
    apic_15 { pt3dadd( 321.062, 355.218, 25.1233, 0.4576 ) }
    apic_15 { pt3dadd( 321.71, 354.491, 25.6127, 0.483 ) }
    apic_15 { pt3dadd( 321.613, 353.382, 25.6161, 0.5084 ) }
    apic_15 { pt3dadd( 321.669, 352.388, 24.4202, 0.5848 ) }
    apic_15 { pt3dadd( 321.951, 351.691, 22.5378, 0.5338 ) }
    apic_15 { pt3dadd( 322.347, 350.703, 23.0731, 0.5084 ) }
    apic_15 { pt3dadd( 322.945, 349.863, 22.8298, 0.4068 ) }
    apic_15 { pt3dadd( 323.093, 349.026, 22.1612, 0.356 ) }
    apic_15 { pt3dadd( 323.603, 348.223, 22.6355, 0.3304 ) }
    apic_15 { pt3dadd( 324.08, 347.255, 22.118, 0.356 ) }
    apic_15 { pt3dadd( 324.048, 346.214, 21.754, 0.356 ) }
    apic_15 { pt3dadd( 323.638, 345.717, 21.56, 0.3304 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 54/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 308.346, 393.917, 42.84, 0.483 ) }
    apic_3 { pt3dadd( 308.554, 392.737, 43.2471, 0.6102 ) }
    apic_3 { pt3dadd( 308.612, 391.599, 43.2569, 0.7118 ) }
    apic_3 { pt3dadd( 308.629, 390.46, 43.1368, 0.7626 ) }
    apic_3 { pt3dadd( 308.879, 389.403, 42.3461, 0.7626 ) }
    apic_3 { pt3dadd( 309.328, 388.386, 41.7085, 0.788 ) }
    apic_3 { pt3dadd( 309.948, 387.439, 41.4775, 0.839 ) }
    apic_3 { pt3dadd( 310.86, 386.784, 41.855, 0.9152 ) }
    apic_3 { pt3dadd( 311.813, 386.182, 41.44, 0.9406 ) }
    apic_3 { pt3dadd( 312.702, 385.463, 41.44, 0.9406 ) }
    apic_3 { pt3dadd( 313.572, 384.733, 41.599, 0.9406 ) }
    apic_3 { pt3dadd( 314.517, 384.128, 42.0549, 0.966 ) }
    apic_3 { pt3dadd( 315.386, 383.447, 42.373, 0.9914 ) }
    apic_3 { pt3dadd( 316.138, 382.626, 42.9374, 0.9406 ) }
    apic_3 { pt3dadd( 316.594, 381.628, 43.1362, 0.839 ) }
    apic_3 { pt3dadd( 317.505, 381.15, 42.9125, 0.661 ) }
    apic_3 { pt3dadd( 318.363, 380.457, 42.3422, 0.483 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 253.332, 441.863, 54.6, 0.3814 ) }
    dend_31 { pt3dadd( 252.782, 442.267, 54.6, 0.2796 ) }
    dend_31 { pt3dadd( 251.912, 442.966, 54.6, 0.305 ) }
    dend_31 { pt3dadd( 251.187, 443.786, 54.6, 0.2796 ) }
    dend_31 { pt3dadd( 250.133, 444.23, 54.6, 0.2796 ) }
    dend_31 { pt3dadd( 249.133, 444.667, 55.057, 0.2796 ) }
    dend_31 { pt3dadd( 248.153, 444.902, 56.1879, 0.3304 ) }
    dend_31 { pt3dadd( 247.057, 444.902, 56.9929, 0.3304 ) }
    dend_31 { pt3dadd( 245.939, 444.917, 57.4, 0.3304 ) }
    dend_31 { pt3dadd( 245.055, 445.404, 57.7049, 0.2796 ) }
    dend_31 { pt3dadd( 244.135, 445.896, 57.96, 0.2542 ) }
    dend_31 { pt3dadd( 242.998, 446.012, 57.96, 0.2288 ) }
    dend_31 { pt3dadd( 241.855, 446.046, 57.96, 0.2288 ) }
    dend_31 { pt3dadd( 240.711, 446.046, 57.96, 0.2288 ) }
    dend_31 { pt3dadd( 239.6, 446.255, 57.96, 0.2288 ) }
    dend_31 { pt3dadd( 238.714, 446.921, 58.1493, 0.2288 ) }
    dend_31 { pt3dadd( 237.759, 447.512, 58.4528, 0.2288 ) }
    dend_31 { pt3dadd( 236.744, 448.037, 58.52, 0.2288 ) }
    dend_31 { pt3dadd( 235.806, 448.689, 58.52, 0.2288 ) }
    dend_31 { pt3dadd( 234.978, 449.478, 58.52, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 91/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 253.332, 441.863, 54.6, 0.3814 ) }
    dend_30 { pt3dadd( 253.976, 442.842, 53.7762, 0.2288 ) }
    dend_30 { pt3dadd( 254.456, 443.818, 53.2, 0.2288 ) }
    dend_30 { pt3dadd( 254.719, 444.926, 53.2, 0.2288 ) }
    dend_30 { pt3dadd( 255.174, 445.972, 53.2, 0.2288 ) }
    dend_30 { pt3dadd( 255.42, 447.072, 53.2, 0.2288 ) }
    dend_30 { pt3dadd( 255.455, 448.214, 53.2126, 0.2288 ) }
    dend_30 { pt3dadd( 255.455, 449.354, 53.3985, 0.2796 ) }
    dend_30 { pt3dadd( 255.455, 450.497, 53.48, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_30 { pt3dadd( 255.455, 451.641, 53.4811, 0.3814 ) }
    dend_30 { pt3dadd( 255.455, 452.769, 53.8647, 0.356 ) }
    dend_30 { pt3dadd( 255.455, 453.906, 54.0369, 0.3304 ) }
    dend_30 { pt3dadd( 255.926, 454.896, 54.1531, 0.356 ) }
    dend_30 { pt3dadd( 256.465, 455.717, 55.5229, 0.4068 ) }
    dend_30 { pt3dadd( 257.112, 456.56, 56.5524, 0.4576 ) }
    dend_30 { pt3dadd( 258.187, 456.913, 56.84, 0.4322 ) }
    dend_30 { pt3dadd( 258.995, 457.694, 56.84, 0.3814 ) }
    dend_30 { pt3dadd( 259.573, 458.627, 56.8842, 0.3304 ) }
    dend_30 { pt3dadd( 260.363, 459.12, 57.7553, 0.2796 ) }
    dend_30 { pt3dadd( 260.489, 459.845, 59.5647, 0.2796 ) }
    dend_30 { pt3dadd( 260.489, 460.97, 59.939, 0.2796 ) }
    dend_30 { pt3dadd( 260.489, 462.039, 60.648, 0.305 ) }
    dend_30 { pt3dadd( 260.609, 463.053, 61.8638, 0.2796 ) }
    dend_30 { pt3dadd( 260.78, 464.144, 62.3974, 0.2542 ) }
    dend_30 { pt3dadd( 261.018, 465.187, 63.1347, 0.2288 ) }
    dend_30 { pt3dadd( 261.255, 466.258, 63.8683, 0.2542 ) }
    dend_30 { pt3dadd( 261.29, 467.393, 64.0959, 0.2796 ) }
    dend_30 { pt3dadd( 261.29, 468.534, 64.2824, 0.305 ) }
    dend_30 { pt3dadd( 261.363, 469.675, 64.3868, 0.2796 ) }
    dend_30 { pt3dadd( 261.399, 470.818, 64.4, 0.2542 ) }
    dend_30 { pt3dadd( 261.467, 471.96, 64.4, 0.2288 ) }
    dend_30 { pt3dadd( 261.785, 473.054, 64.4, 0.2288 ) }
    dend_30 { pt3dadd( 262.583, 473.849, 64.4, 0.2288 ) }
    dend_30 { pt3dadd( 262.976, 474.917, 64.4, 0.2288 ) }
    dend_30 { pt3dadd( 263.406, 475.976, 64.4, 0.2288 ) }
    dend_30 { pt3dadd( 263.806, 477.048, 64.4, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 282.809, 463.892, 46.7911, 0.4576 ) }
    dend_25 { pt3dadd( 283.917, 464.519, 45.7632, 0.5084 ) }
    dend_25 { pt3dadd( 284.768, 465.263, 45.3782, 0.6356 ) }
    dend_25 { pt3dadd( 285.543, 466.027, 44.8409, 0.7118 ) }
    dend_25 { pt3dadd( 286.079, 467.03, 45.0237, 0.7118 ) }
    dend_25 { pt3dadd( 286.708, 467.867, 45.8984, 0.6356 ) }
    dend_25 { pt3dadd( 287.146, 468.873, 46.4834, 0.5592 ) }
    dend_25 { pt3dadd( 287.145, 469.923, 45.5462, 0.5592 ) }
    dend_25 { pt3dadd( 286.962, 470.976, 45.7201, 0.5592 ) }
    dend_25 { pt3dadd( 286.802, 472.065, 46.4831, 0.5592 ) }
    dend_25 { pt3dadd( 286.601, 473.187, 46.6656, 0.5084 ) }
    dend_25 { pt3dadd( 286.37, 474.233, 46.5688, 0.5084 ) }
    dend_25 { pt3dadd( 286.113, 475.222, 46.0984, 0.483 ) }
    dend_25 { pt3dadd( 285.89, 476.291, 46.9378, 0.4576 ) }
    dend_25 { pt3dadd( 285.276, 477.072, 46.774, 0.4068 ) }
    dend_25 { pt3dadd( 284.625, 477.923, 46.8168, 0.4068 ) }
    dend_25 { pt3dadd( 284.506, 478.97, 47.6546, 0.483 ) }
    dend_25 { pt3dadd( 284.389, 479.91, 46.1714, 0.5338 ) }
    dend_25 { pt3dadd( 284.285, 481.029, 45.9508, 0.5338 ) }
    dend_25 { pt3dadd( 284.292, 482.117, 46.6192, 0.4322 ) }
    dend_25 { pt3dadd( 284.403, 483.148, 46.5553, 0.3814 ) }
    dend_25 { pt3dadd( 283.989, 483.907, 47.7697, 0.3814 ) }
    dend_25 { pt3dadd( 283.601, 484.887, 47.126, 0.4576 ) }
    dend_25 { pt3dadd( 283.807, 485.988, 46.6365, 0.5084 ) }
    dend_25 { pt3dadd( 284.18, 487.053, 46.2311, 0.5338 ) }
    dend_25 { pt3dadd( 284.436, 487.977, 46.8642, 0.5084 ) }
    dend_25 { pt3dadd( 284.579, 489.011, 47.8125, 0.4576 ) }
    dend_25 { pt3dadd( 284.711, 490.133, 48.2118, 0.4068 ) }
    dend_25 { pt3dadd( 284.742, 491.267, 48.1211, 0.4322 ) }
    dend_25 { pt3dadd( 284.775, 492.378, 48.5288, 0.5084 ) }
    dend_25 { pt3dadd( 284.488, 493.472, 48.5369, 0.5592 ) }
    dend_25 { pt3dadd( 284.451, 494.583, 48.547, 0.5338 ) }
    dend_25 { pt3dadd( 284.598, 495.701, 48.9367, 0.4576 ) }
    dend_25 { pt3dadd( 284.794, 496.827, 48.9454, 0.4068 ) }
    dend_25 { pt3dadd( 285.316, 497.716, 49.5687, 0.356 ) }
    dend_25 { pt3dadd( 285.507, 498.667, 49.8162, 0.3304 ) }
    dend_25 { pt3dadd( 286.229, 498.773, 51.2053, 0.305 ) }
    dend_25 { pt3dadd( 285.65, 499.621, 51.681, 0.3304 ) }
    dend_25 { pt3dadd( 285.102, 500.426, 52.7358, 0.4068 ) }
    dend_25 { pt3dadd( 284.718, 501.472, 52.3454, 0.483 ) }
    dend_25 { pt3dadd( 285.031, 502.491, 51.9901, 0.5592 ) }
    dend_25 { pt3dadd( 285.199, 502.814, 54.2867, 0.5338 ) }
    dend_25 { pt3dadd( 286.09, 503.376, 54.5132, 0.483 ) }
    dend_25 { pt3dadd( 287.0, 504.013, 54.4547, 0.3814 ) }
    dend_25 { pt3dadd( 287.788, 504.753, 54.5734, 0.3304 ) }
    dend_25 { pt3dadd( 287.999, 505.846, 54.3816, 0.3304 ) }
    dend_25 { pt3dadd( 288.358, 506.85, 53.536, 0.356 ) }
    dend_25 { pt3dadd( 288.58, 507.95, 53.8577, 0.4068 ) }
    dend_25 { pt3dadd( 288.686, 509.001, 54.8772, 0.4068 ) }
    dend_25 { pt3dadd( 288.971, 509.987, 55.5461, 0.3814 ) }
    dend_25 { pt3dadd( 289.083, 511.076, 55.1393, 0.305 ) }
    dend_25 { pt3dadd( 288.72, 512.098, 55.6881, 0.2542 ) }
    dend_25 { pt3dadd( 288.786, 513.081, 56.5908, 0.2542 ) }
    dend_25 { pt3dadd( 288.897, 514.165, 56.1372, 0.305 ) }
    dend_25 { pt3dadd( 289.613, 514.935, 55.3952, 0.356 ) }
    dend_25 { pt3dadd( 290.672, 515.15, 54.6, 0.356 ) }
    dend_25 { pt3dadd( 291.698, 515.466, 55.0438, 0.3814 ) }
    dend_25 { pt3dadd( 292.389, 516.049, 56.6546, 0.4576 ) }
    dend_25 { pt3dadd( 292.427, 517.098, 57.0576, 0.5592 ) }
    dend_25 { pt3dadd( 292.302, 518.192, 56.3713, 0.5592 ) }
    dend_25 { pt3dadd( 292.251, 518.703, 58.6247, 0.4576 ) }
    dend_25 { pt3dadd( 292.108, 519.721, 59.8186, 0.4068 ) }
    dend_25 { pt3dadd( 291.683, 520.718, 60.4534, 0.4322 ) }
    dend_25 { pt3dadd( 291.066, 521.566, 59.7968, 0.5592 ) }
    dend_25 { pt3dadd( 290.792, 522.503, 58.6048, 0.6102 ) }
    dend_25 { pt3dadd( 290.789, 523.617, 58.0006, 0.5848 ) }
    dend_25 { pt3dadd( 290.696, 523.898, 60.0415, 0.483 ) }
    dend_25 { pt3dadd( 290.423, 524.571, 61.4432, 0.3814 ) }
    dend_25 { pt3dadd( 290.118, 525.52, 60.1096, 0.356 ) }
    dend_25 { pt3dadd( 289.713, 526.535, 59.4308, 0.356 ) }
    dend_25 { pt3dadd( 289.784, 527.162, 57.7371, 0.4068 ) }
    dend_25 { pt3dadd( 289.87, 528.014, 59.5342, 0.4068 ) }
    dend_25 { pt3dadd( 290.367, 528.71, 60.3039, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_25 { pt3dadd( 290.576, 529.727, 60.0169, 0.4068 ) }
    dend_25 { pt3dadd( 290.93, 530.735, 59.1601, 0.4576 ) }
    dend_25 { pt3dadd( 291.186, 531.826, 59.5053, 0.4322 ) }
    dend_25 { pt3dadd( 291.308, 532.793, 60.9652, 0.4322 ) }
    dend_25 { pt3dadd( 291.456, 533.852, 61.88, 0.3304 ) }
    dend_25 { pt3dadd( 291.663, 534.976, 61.88, 0.305 ) }
    dend_25 { pt3dadd( 292.147, 535.963, 61.88, 0.305 ) }
    dend_25 { pt3dadd( 293.018, 536.638, 61.929, 0.356 ) }
    dend_25 { pt3dadd( 293.357, 537.717, 62.1995, 0.4068 ) }
    dend_25 { pt3dadd( 293.641, 538.782, 62.6027, 0.4068 ) }
    dend_25 { pt3dadd( 294.054, 539.768, 63.3111, 0.4068 ) }
    dend_25 { pt3dadd( 294.275, 540.845, 63.8355, 0.3304 ) }
    dend_25 { pt3dadd( 294.747, 541.878, 63.84, 0.2796 ) }
    dend_25 { pt3dadd( 295.682, 542.396, 63.84, 0.2288 ) }
    dend_25 { pt3dadd( 296.813, 542.518, 63.873, 0.2288 ) }
    dend_25 { pt3dadd( 297.286, 543.062, 65.2722, 0.2288 ) }
    dend_25 { pt3dadd( 297.326, 544.115, 65.7933, 0.2288 ) }
    dend_25 { pt3dadd( 297.332, 545.259, 65.8, 0.2288 ) }
    dend_25 { pt3dadd( 297.651, 546.342, 65.8, 0.2288 ) }
    dend_25 { pt3dadd( 298.529, 547.001, 65.8059, 0.2288 ) }
    dend_25 { pt3dadd( 299.649, 547.161, 66.0257, 0.2288 ) }
    dend_25 { pt3dadd( 300.674, 547.652, 66.0775, 0.2288 ) }
    dend_25 { pt3dadd( 301.737, 548.073, 66.08, 0.2288 ) }
    dend_25 { pt3dadd( 302.872, 548.2, 66.08, 0.2288 ) }
    dend_25 { pt3dadd( 304.016, 548.205, 66.08, 0.2288 ) }
    dend_25 { pt3dadd( 305.105, 547.862, 66.08, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 26/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 282.809, 463.892, 46.7911, 0.4576 ) }
    dend_24 { pt3dadd( 282.64, 464.542, 46.846, 0.2288 ) }
    dend_24 { pt3dadd( 282.479, 465.664, 46.5041, 0.2796 ) }
    dend_24 { pt3dadd( 282.067, 466.723, 46.251, 0.3814 ) }
    dend_24 { pt3dadd( 281.184, 467.139, 44.8899, 0.483 ) }
    dend_24 { pt3dadd( 280.552, 467.758, 43.5579, 0.5084 ) }
    dend_24 { pt3dadd( 280.385, 468.845, 43.1852, 0.483 ) }
    dend_24 { pt3dadd( 280.152, 469.939, 43.0136, 0.483 ) }
    dend_24 { pt3dadd( 279.586, 470.814, 43.7791, 0.483 ) }
    dend_24 { pt3dadd( 278.941, 471.709, 44.172, 0.483 ) }
    dend_24 { pt3dadd( 278.02, 472.233, 45.0719, 0.4576 ) }
    dend_24 { pt3dadd( 277.394, 473.121, 44.3498, 0.483 ) }
    dend_24 { pt3dadd( 277.142, 474.122, 43.6428, 0.483 ) }
    dend_24 { pt3dadd( 276.234, 474.791, 44.0824, 0.483 ) }
    dend_24 { pt3dadd( 275.413, 475.522, 43.6514, 0.483 ) }
    dend_24 { pt3dadd( 274.537, 476.135, 42.7067, 0.483 ) }
    dend_24 { pt3dadd( 273.501, 476.609, 42.4878, 0.5084 ) }
    dend_24 { pt3dadd( 272.599, 477.256, 42.2624, 0.483 ) }
    dend_24 { pt3dadd( 271.623, 477.677, 42.3259, 0.483 ) }
    dend_24 { pt3dadd( 270.873, 478.491, 42.089, 0.4322 ) }
    dend_24 { pt3dadd( 270.442, 479.541, 42.005, 0.4068 ) }
    dend_24 { pt3dadd( 270.164, 480.587, 41.2115, 0.3814 ) }
    dend_24 { pt3dadd( 269.816, 481.669, 41.2728, 0.3814 ) }
    dend_24 { pt3dadd( 269.068, 482.457, 41.3314, 0.3814 ) }
    dend_24 { pt3dadd( 268.168, 483.053, 40.7226, 0.4068 ) }
    dend_24 { pt3dadd( 267.188, 483.554, 40.4132, 0.4322 ) }
    dend_24 { pt3dadd( 266.285, 484.182, 39.7004, 0.4322 ) }
    dend_24 { pt3dadd( 265.54, 485.008, 39.6119, 0.3814 ) }
    dend_24 { pt3dadd( 265.033, 485.952, 40.0033, 0.3304 ) }
    dend_24 { pt3dadd( 264.815, 487.037, 39.4926, 0.305 ) }
    dend_24 { pt3dadd( 264.82, 488.136, 38.7909, 0.3304 ) }
    dend_24 { pt3dadd( 264.67, 489.251, 38.7999, 0.3814 ) }
    dend_24 { pt3dadd( 264.706, 490.388, 38.9088, 0.4576 ) }
    dend_24 { pt3dadd( 264.825, 491.513, 39.3022, 0.5084 ) }
    dend_24 { pt3dadd( 264.607, 492.624, 39.2972, 0.5084 ) }
    dend_24 { pt3dadd( 263.906, 493.525, 39.2389, 0.4576 ) }
    dend_24 { pt3dadd( 263.301, 494.484, 39.5595, 0.4068 ) }
    dend_24 { pt3dadd( 262.676, 495.383, 40.1282, 0.4068 ) }
    dend_24 { pt3dadd( 261.696, 495.926, 40.2091, 0.4322 ) }
    dend_24 { pt3dadd( 260.872, 496.633, 40.0501, 0.4322 ) }
    dend_24 { pt3dadd( 259.888, 497.131, 40.5, 0.3814 ) }
    dend_24 { pt3dadd( 258.887, 496.839, 41.44, 0.356 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 68/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 273.797, 444.711, 43.4, 0.483 ) }
    dend_20 { pt3dadd( 273.28, 444.444, 41.4403, 0.3814 ) }
    dend_20 { pt3dadd( 272.622, 444.055, 39.5699, 0.5084 ) }
    dend_20 { pt3dadd( 271.774, 443.314, 39.5875, 0.5848 ) }
    dend_20 { pt3dadd( 271.048, 442.48, 40.2732, 0.5848 ) }
    dend_20 { pt3dadd( 270.325, 441.927, 41.6618, 0.4576 ) }
    dend_20 { pt3dadd( 269.363, 441.819, 41.8368, 0.3814 ) }
    dend_20 { pt3dadd( 268.785, 442.458, 40.36, 0.3814 ) }
    dend_20 { pt3dadd( 267.947, 441.899, 40.0249, 0.4576 ) }
    dend_20 { pt3dadd( 267.002, 442.047, 41.2709, 0.5084 ) }
    dend_20 { pt3dadd( 265.878, 442.124, 40.8738, 0.5592 ) }
    dend_20 { pt3dadd( 264.796, 441.888, 40.9066, 0.5338 ) }
    dend_20 { pt3dadd( 263.915, 442.5, 40.6076, 0.5338 ) }
    dend_20 { pt3dadd( 263.107, 443.3, 40.2889, 0.4576 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 82/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 273.797, 444.711, 43.4, 0.483 ) }
    dend_17 { pt3dadd( 273.569, 443.253, 44.0247, 0.661 ) }
    dend_17 { pt3dadd( 273.004, 442.268, 44.2403, 0.7626 ) }
    dend_17 { pt3dadd( 271.951, 441.859, 44.515, 0.788 ) }
    dend_17 { pt3dadd( 270.932, 441.458, 43.7262, 0.7372 ) }
    dend_17 { pt3dadd( 270.008, 440.826, 43.7884, 0.6356 ) }
    dend_17 { pt3dadd( 269.062, 440.35, 44.6421, 0.5592 ) }
    dend_17 { pt3dadd( 267.995, 440.129, 45.1954, 0.5338 ) }
    dend_17 { pt3dadd( 266.908, 439.97, 44.52, 0.5338 ) }
    // Section: apic_14, id: apic_14, parent: apic_3 (entry count 91/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 318.363, 380.457, 42.3422, 0.483 ) }
    apic_14 { pt3dadd( 318.605, 380.332, 43.3236, 0.356 ) }
    apic_14 { pt3dadd( 319.176, 380.037, 45.64, 0.4322 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 94/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 318.363, 380.457, 42.3422, 0.483 ) }
    apic_4 { pt3dadd( 318.47, 379.523, 41.5439, 0.5338 ) }
    apic_4 { pt3dadd( 319.201, 378.687, 41.4666, 0.5592 ) }
    apic_4 { pt3dadd( 319.515, 377.593, 41.7194, 0.5338 ) }
    apic_4 { pt3dadd( 319.596, 376.453, 41.72, 0.483 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 99/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 263.107, 443.3, 40.2889, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( 262.54, 443.199, 40.2158, 0.3304 ) }
    dend_22 { pt3dadd( 261.415, 442.999, 40.0711, 0.305 ) }
    dend_22 { pt3dadd( 260.284, 443.084, 39.8832, 0.356 ) }
    dend_22 { pt3dadd( 259.188, 443.148, 40.3864, 0.483 ) }
    dend_22 { pt3dadd( 258.204, 443.109, 41.1477, 0.5592 ) }
    dend_22 { pt3dadd( 257.723, 443.369, 39.594, 0.6356 ) }
    dend_22 { pt3dadd( 257.131, 443.824, 38.8441, 0.661 ) }
    dend_22 { pt3dadd( 255.992, 443.864, 38.9413, 0.661 ) }
    dend_22 { pt3dadd( 254.866, 443.978, 39.333, 0.6356 ) }
    dend_22 { pt3dadd( 253.84, 444.001, 39.9406, 0.5848 ) }
    dend_22 { pt3dadd( 252.933, 443.506, 38.8721, 0.5338 ) }
    dend_22 { pt3dadd( 251.874, 443.129, 38.6358, 0.483 ) }
    dend_22 { pt3dadd( 251.201, 443.08, 36.9314, 0.4576 ) }
    dend_22 { pt3dadd( 250.225, 442.845, 37.5466, 0.5084 ) }
    dend_22 { pt3dadd( 249.495, 443.293, 36.3986, 0.5338 ) }
    dend_22 { pt3dadd( 248.394, 443.378, 36.7562, 0.5592 ) }
    dend_22 { pt3dadd( 247.364, 443.021, 37.028, 0.483 ) }
    dend_22 { pt3dadd( 246.443, 442.737, 35.6913, 0.4322 ) }
    dend_22 { pt3dadd( 245.419, 442.296, 35.7952, 0.3814 ) }
    dend_22 { pt3dadd( 244.393, 441.869, 36.4151, 0.4068 ) }
    dend_22 { pt3dadd( 243.308, 442.054, 36.9463, 0.4322 ) }
    dend_22 { pt3dadd( 242.52, 442.84, 37.3352, 0.4576 ) }
    dend_22 { pt3dadd( 241.693, 443.182, 37.5466, 0.4322 ) }
    dend_22 { pt3dadd( 240.956, 442.402, 37.564, 0.4068 ) }
    dend_22 { pt3dadd( 239.977, 441.983, 36.9667, 0.356 ) }
    dend_22 { pt3dadd( 238.856, 441.788, 36.8668, 0.356 ) }
    dend_22 { pt3dadd( 237.833, 441.346, 36.3524, 0.3304 ) }
    dend_22 { pt3dadd( 236.793, 441.019, 37.0227, 0.3814 ) }
    dend_22 { pt3dadd( 235.703, 441.033, 36.6114, 0.4322 ) }
    dend_22 { pt3dadd( 234.718, 441.587, 36.2544, 0.5338 ) }
    dend_22 { pt3dadd( 233.652, 441.991, 36.1371, 0.5592 ) }
    dend_22 { pt3dadd( 232.553, 442.266, 36.3653, 0.5338 ) }
    dend_22 { pt3dadd( 231.482, 442.554, 36.3367, 0.483 ) }
    dend_22 { pt3dadd( 230.367, 442.614, 36.6198, 0.4576 ) }
    dend_22 { pt3dadd( 229.248, 442.398, 36.68, 0.4322 ) }
    dend_22 { pt3dadd( 228.152, 442.571, 37.1258, 0.3814 ) }
    dend_22 { pt3dadd( 227.185, 442.408, 35.84, 0.3304 ) }
    dend_22 { pt3dadd( 226.075, 442.617, 35.9066, 0.356 ) }
    dend_22 { pt3dadd( 225.04, 442.939, 36.3762, 0.4322 ) }
    dend_22 { pt3dadd( 223.977, 443.158, 36.5016, 0.483 ) }
    dend_22 { pt3dadd( 222.916, 443.157, 35.6944, 0.4576 ) }
    dend_22 { pt3dadd( 221.802, 442.952, 35.7132, 0.4068 ) }
    dend_22 { pt3dadd( 220.697, 443.035, 36.062, 0.4322 ) }
    dend_22 { pt3dadd( 219.818, 443.767, 36.1332, 0.5084 ) }
    dend_22 { pt3dadd( 218.951, 444.504, 36.0301, 0.6102 ) }
    dend_22 { pt3dadd( 217.989, 445.089, 35.6112, 0.6864 ) }
    dend_22 { pt3dadd( 217.126, 445.723, 34.956, 0.6864 ) }
    dend_22 { pt3dadd( 216.245, 446.308, 35.0081, 0.661 ) }
    dend_22 { pt3dadd( 215.55, 447.158, 34.8866, 0.5592 ) }
    dend_22 { pt3dadd( 214.744, 447.908, 34.1998, 0.5338 ) }
    dend_22 { pt3dadd( 213.814, 448.432, 34.4156, 0.5084 ) }
    dend_22 { pt3dadd( 212.694, 448.414, 34.6133, 0.5084 ) }
    dend_22 { pt3dadd( 211.625, 448.319, 33.7963, 0.483 ) }
    dend_22 { pt3dadd( 210.584, 448.041, 32.9647, 0.4576 ) }
    dend_22 { pt3dadd( 209.638, 448.292, 33.3192, 0.5084 ) }
    dend_22 { pt3dadd( 209.063, 449.205, 34.0998, 0.5338 ) }
    dend_22 { pt3dadd( 208.247, 449.987, 34.1085, 0.5338 ) }
    dend_22 { pt3dadd( 207.237, 450.501, 34.3916, 0.5084 ) }
    dend_22 { pt3dadd( 206.275, 451.065, 33.9004, 0.5592 ) }
    dend_22 { pt3dadd( 205.572, 451.952, 34.2082, 0.661 ) }
    dend_22 { pt3dadd( 204.698, 452.648, 34.4319, 0.7118 ) }
    dend_22 { pt3dadd( 203.921, 453.398, 34.7626, 0.661 ) }
    dend_22 { pt3dadd( 203.21, 454.209, 35.6468, 0.5848 ) }
    dend_22 { pt3dadd( 202.259, 454.735, 35.4015, 0.5084 ) }
    dend_22 { pt3dadd( 201.145, 454.893, 35.0689, 0.483 ) }
    dend_22 { pt3dadd( 200.017, 454.756, 35.1249, 0.4068 ) }
    dend_22 { pt3dadd( 198.99, 454.947, 36.0422, 0.3814 ) }
    dend_22 { pt3dadd( 197.925, 454.717, 35.4774, 0.3814 ) }
    dend_22 { pt3dadd( 197.225, 454.114, 36.6982, 0.483 ) }
    dend_22 { pt3dadd( 196.31, 453.71, 37.52, 0.5592 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 70/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 263.107, 443.3, 40.2889, 0.4576 ) }
    dend_21 { pt3dadd( 262.587, 443.556, 40.894, 0.5848 ) }
    dend_21 { pt3dadd( 261.502, 443.668, 40.4457, 0.5592 ) }
    dend_21 { pt3dadd( 260.512, 444.094, 41.2628, 0.5084 ) }
    dend_21 { pt3dadd( 259.535, 444.6, 40.973, 0.5084 ) }
    dend_21 { pt3dadd( 258.669, 445.118, 40.7257, 0.483 ) }
    dend_21 { pt3dadd( 257.837, 445.697, 40.2942, 0.483 ) }
    dend_21 { pt3dadd( 256.833, 446.127, 39.6012, 0.483 ) }
    dend_21 { pt3dadd( 255.855, 446.695, 39.6914, 0.5338 ) }
    dend_21 { pt3dadd( 254.825, 447.174, 39.8796, 0.5848 ) }
    dend_21 { pt3dadd( 254.18, 447.908, 41.0522, 0.5592 ) }
    dend_21 { pt3dadd( 253.542, 448.777, 40.1304, 0.483 ) }
    dend_21 { pt3dadd( 252.776, 449.54, 39.8051, 0.4068 ) }
    dend_21 { pt3dadd( 251.659, 449.754, 39.8437, 0.4068 ) }
    dend_21 { pt3dadd( 250.65, 450.106, 39.9994, 0.4322 ) }
    dend_21 { pt3dadd( 249.792, 450.73, 39.2826, 0.483 ) }
    dend_21 { pt3dadd( 248.829, 451.19, 38.724, 0.483 ) }
    dend_21 { pt3dadd( 247.978, 451.669, 39.1566, 0.483 ) }
    dend_21 { pt3dadd( 247.085, 452.312, 39.5251, 0.4576 ) }
    dend_21 { pt3dadd( 245.998, 452.592, 39.3506, 0.4576 ) }
    dend_21 { pt3dadd( 244.876, 452.72, 39.7149, 0.4322 ) }
    dend_21 { pt3dadd( 243.856, 453.083, 40.5726, 0.3814 ) }
    dend_21 { pt3dadd( 242.989, 453.775, 40.1593, 0.3814 ) }
    dend_21 { pt3dadd( 242.377, 454.681, 39.8961, 0.4068 ) }
    dend_21 { pt3dadd( 241.662, 455.483, 40.5997, 0.483 ) }
    dend_21 { pt3dadd( 240.952, 456.355, 40.3052, 0.5084 ) }
    dend_21 { pt3dadd( 240.558, 457.385, 40.4152, 0.5338 ) }
    dend_21 { pt3dadd( 240.262, 458.475, 40.6207, 0.483 ) }
    dend_21 { pt3dadd( 239.62, 459.39, 40.6, 0.4068 ) }
    dend_21 { pt3dadd( 238.678, 459.83, 41.4364, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_21 { pt3dadd( 237.66, 460.148, 40.945, 0.3814 ) }
    dend_21 { pt3dadd( 236.569, 460.441, 40.6174, 0.4068 ) }
    dend_21 { pt3dadd( 235.539, 460.864, 40.7378, 0.4068 ) }
    dend_21 { pt3dadd( 234.732, 461.509, 39.6981, 0.4068 ) }
    dend_21 { pt3dadd( 233.732, 462.055, 39.6035, 0.4576 ) }
    dend_21 { pt3dadd( 232.679, 462.421, 39.2328, 0.483 ) }
    dend_21 { pt3dadd( 231.657, 462.811, 39.3915, 0.4322 ) }
    dend_21 { pt3dadd( 230.765, 463.481, 39.5472, 0.356 ) }
    dend_21 { pt3dadd( 229.784, 464.014, 39.1381, 0.305 ) }
    dend_21 { pt3dadd( 228.686, 464.235, 38.64, 0.3304 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 10/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 266.908, 439.97, 44.52, 0.5338 ) }
    dend_19 { pt3dadd( 265.336, 439.913, 44.24, 0.3304 ) }
    dend_19 { pt3dadd( 264.211, 440.115, 44.24, 0.2796 ) }
    dend_19 { pt3dadd( 263.089, 440.312, 44.24, 0.2542 ) }
    dend_19 { pt3dadd( 261.945, 440.323, 44.24, 0.2796 ) }
    dend_19 { pt3dadd( 260.989, 440.033, 44.24, 0.305 ) }
    dend_19 { pt3dadd( 260.533, 439.156, 45.0817, 0.3304 ) }
    dend_19 { pt3dadd( 260.036, 438.562, 47.0333, 0.3814 ) }
    dend_19 { pt3dadd( 258.93, 438.446, 47.32, 0.4322 ) }
    dend_19 { pt3dadd( 257.932, 438.979, 47.32, 0.4322 ) }
    dend_19 { pt3dadd( 257.175, 439.831, 47.32, 0.3814 ) }
    dend_19 { pt3dadd( 256.548, 440.788, 47.32, 0.3304 ) }
    dend_19 { pt3dadd( 255.858, 441.697, 47.32, 0.2796 ) }
    dend_19 { pt3dadd( 255.024, 442.474, 47.32, 0.2796 ) }
    dend_19 { pt3dadd( 254.051, 443.067, 47.3903, 0.2796 ) }
    dend_19 { pt3dadd( 252.99, 443.462, 47.6, 0.3304 ) }
    dend_19 { pt3dadd( 251.86, 443.621, 47.637, 0.356 ) }
    dend_19 { pt3dadd( 250.749, 443.764, 47.9741, 0.4068 ) }
    dend_19 { pt3dadd( 249.756, 444.213, 48.7388, 0.4068 ) }
    dend_19 { pt3dadd( 249.051, 445.029, 49.0, 0.3814 ) }
    dend_19 { pt3dadd( 248.397, 445.736, 49.0, 0.305 ) }
    dend_19 { pt3dadd( 247.258, 445.817, 49.0, 0.2542 ) }
    dend_19 { pt3dadd( 246.167, 446.043, 49.0, 0.2288 ) }
    dend_19 { pt3dadd( 245.142, 446.552, 49.0, 0.2288 ) }
    dend_19 { pt3dadd( 244.403, 447.363, 49.0, 0.2288 ) }
    dend_19 { pt3dadd( 243.697, 448.251, 49.1238, 0.2288 ) }
    dend_19 { pt3dadd( 242.846, 449.01, 49.25, 0.2288 ) }
    dend_19 { pt3dadd( 242.138, 449.891, 49.28, 0.2288 ) }
    dend_19 { pt3dadd( 241.44, 450.652, 50.2009, 0.2288 ) }
    dend_19 { pt3dadd( 240.678, 451.353, 51.3867, 0.2288 ) }
    dend_19 { pt3dadd( 239.636, 451.774, 51.52, 0.2288 ) }
    dend_19 { pt3dadd( 238.6, 452.168, 52.1637, 0.2288 ) }
    dend_19 { pt3dadd( 237.592, 452.671, 52.6288, 0.2288 ) }
    dend_19 { pt3dadd( 236.894, 453.574, 52.64, 0.2542 ) }
    dend_19 { pt3dadd( 235.949, 454.206, 52.9136, 0.2796 ) }
    dend_19 { pt3dadd( 235.09, 454.961, 52.92, 0.305 ) }
    dend_19 { pt3dadd( 234.616, 456.002, 52.9256, 0.2796 ) }
    dend_19 { pt3dadd( 233.961, 456.906, 53.5021, 0.2542 ) }
    dend_19 { pt3dadd( 233.543, 457.932, 53.9479, 0.2288 ) }
    dend_19 { pt3dadd( 232.62, 458.514, 54.6, 0.2288 ) }
    dend_19 { pt3dadd( 231.519, 458.823, 54.6, 0.2288 ) }
    dend_19 { pt3dadd( 230.395, 459.025, 54.6, 0.2288 ) }
    dend_19 { pt3dadd( 229.275, 459.192, 54.6, 0.2288 ) }
    dend_19 { pt3dadd( 228.281, 459.729, 54.7142, 0.2288 ) }
    dend_19 { pt3dadd( 227.67, 460.59, 55.1088, 0.2288 ) }
    dend_19 { pt3dadd( 227.607, 461.711, 55.5162, 0.2288 ) }
    dend_19 { pt3dadd( 227.361, 462.754, 56.4497, 0.2288 ) }
    dend_19 { pt3dadd( 226.779, 463.616, 57.4073, 0.2288 ) }
    dend_19 { pt3dadd( 226.018, 464.406, 57.918, 0.2288 ) }
    dend_19 { pt3dadd( 225.43, 465.386, 57.96, 0.2288 ) }
    dend_19 { pt3dadd( 224.759, 466.307, 57.962, 0.2288 ) }
    dend_19 { pt3dadd( 223.969, 466.972, 58.8344, 0.2288 ) }
    dend_19 { pt3dadd( 223.301, 467.791, 59.5238, 0.2288 ) }
    dend_19 { pt3dadd( 222.506, 468.565, 59.9749, 0.2288 ) }
    dend_19 { pt3dadd( 221.933, 469.458, 60.8401, 0.2288 ) }
    dend_19 { pt3dadd( 221.236, 470.122, 62.2866, 0.2288 ) }
    dend_19 { pt3dadd( 220.229, 470.591, 62.7127, 0.2288 ) }
    dend_19 { pt3dadd( 219.631, 471.512, 63.2632, 0.2288 ) }
    dend_19 { pt3dadd( 219.194, 472.569, 63.28, 0.2542 ) }
    dend_19 { pt3dadd( 218.733, 473.616, 63.28, 0.305 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 70/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 266.908, 439.97, 44.52, 0.5338 ) }
    dend_18 { pt3dadd( 266.573, 439.361, 44.1034, 0.3814 ) }
    dend_18 { pt3dadd( 265.764, 438.877, 42.9517, 0.4576 ) }
    dend_18 { pt3dadd( 264.897, 438.584, 41.7698, 0.5084 ) }
    dend_18 { pt3dadd( 264.088, 437.824, 41.104, 0.5084 ) }
    dend_18 { pt3dadd( 263.723, 436.946, 41.9793, 0.483 ) }
    dend_18 { pt3dadd( 263.038, 436.131, 42.7126, 0.4322 ) }
    dend_18 { pt3dadd( 262.136, 435.561, 41.7421, 0.4322 ) }
    dend_18 { pt3dadd( 261.347, 434.818, 41.2437, 0.3814 ) }
    dend_18 { pt3dadd( 260.909, 433.96, 40.3329, 0.4068 ) }
    dend_18 { pt3dadd( 260.87, 432.888, 41.202, 0.4322 ) }
    dend_18 { pt3dadd( 260.477, 431.924, 40.6714, 0.5338 ) }
    dend_18 { pt3dadd( 259.592, 431.646, 39.212, 0.5848 ) }
    dend_18 { pt3dadd( 258.663, 431.693, 38.1489, 0.6102 ) }
    dend_18 { pt3dadd( 257.704, 431.091, 38.3516, 0.6356 ) }
    dend_18 { pt3dadd( 256.83, 430.356, 38.2259, 0.661 ) }
    dend_18 { pt3dadd( 255.955, 429.677, 38.7145, 0.661 ) }
    dend_18 { pt3dadd( 254.895, 429.468, 38.5084, 0.6356 ) }
    dend_18 { pt3dadd( 253.768, 429.616, 38.3211, 0.5848 ) }
    dend_18 { pt3dadd( 252.835, 429.865, 37.0597, 0.5848 ) }
    dend_18 { pt3dadd( 251.873, 429.831, 37.9585, 0.5592 ) }
    dend_18 { pt3dadd( 251.251, 429.063, 37.9148, 0.5848 ) }
    dend_18 { pt3dadd( 250.287, 428.696, 37.4898, 0.5592 ) }
    dend_18 { pt3dadd( 249.36, 429.12, 38.5232, 0.5592 ) }
    dend_18 { pt3dadd( 248.497, 429.726, 37.6373, 0.483 ) }
    dend_18 { pt3dadd( 247.742, 430.054, 35.8884, 0.4322 ) }
    dend_18 { pt3dadd( 246.733, 429.869, 36.143, 0.3814 ) }
    dend_18 { pt3dadd( 245.764, 429.911, 36.1029, 0.4322 ) }
    dend_18 { pt3dadd( 244.774, 429.801, 35.4054, 0.4576 ) }
    dend_18 { pt3dadd( 243.699, 430.051, 35.4306, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_18 { pt3dadd( 242.649, 430.029, 34.8944, 0.4322 ) }
    dend_18 { pt3dadd( 241.673, 429.452, 34.7458, 0.4322 ) }
    dend_18 { pt3dadd( 240.655, 429.009, 35.0605, 0.4068 ) }
    dend_18 { pt3dadd( 239.541, 428.789, 35.3024, 0.4068 ) }
    dend_18 { pt3dadd( 238.475, 428.994, 34.5394, 0.4068 ) }
    dend_18 { pt3dadd( 237.673, 429.778, 34.5279, 0.4576 ) }
    dend_18 { pt3dadd( 236.88, 430.494, 34.3692, 0.483 ) }
    dend_18 { pt3dadd( 235.975, 431.107, 35.0759, 0.483 ) }
    dend_18 { pt3dadd( 234.962, 431.458, 34.4918, 0.4322 ) }
    dend_18 { pt3dadd( 233.871, 431.563, 33.7131, 0.4322 ) }
    dend_18 { pt3dadd( 232.865, 431.997, 33.0156, 0.3814 ) }
    dend_18 { pt3dadd( 231.802, 432.376, 33.3894, 0.3814 ) }
    dend_18 { pt3dadd( 230.809, 432.846, 33.0574, 0.356 ) }
    dend_18 { pt3dadd( 229.749, 432.615, 33.6658, 0.4068 ) }
    dend_18 { pt3dadd( 228.913, 431.879, 34.2636, 0.4322 ) }
    dend_18 { pt3dadd( 228.204, 431.023, 34.8676, 0.4576 ) }
    dend_18 { pt3dadd( 227.347, 430.309, 34.741, 0.4576 ) }
    dend_18 { pt3dadd( 226.227, 430.255, 35.1207, 0.4576 ) }
    dend_18 { pt3dadd( 225.122, 430.257, 35.0731, 0.4576 ) }
    dend_18 { pt3dadd( 224.24, 430.901, 34.9902, 0.4576 ) }
    dend_18 { pt3dadd( 223.609, 431.717, 34.6284, 0.4576 ) }
    dend_18 { pt3dadd( 222.734, 432.318, 34.8228, 0.4576 ) }
    dend_18 { pt3dadd( 221.882, 432.997, 34.0197, 0.4576 ) }
    dend_18 { pt3dadd( 220.814, 433.241, 33.4681, 0.4576 ) }
    dend_18 { pt3dadd( 219.702, 433.367, 33.7655, 0.5084 ) }
    dend_18 { pt3dadd( 218.758, 433.696, 32.6096, 0.5848 ) }
    dend_18 { pt3dadd( 217.724, 434.002, 32.8812, 0.6864 ) }
    dend_18 { pt3dadd( 216.594, 433.989, 33.01, 0.6864 ) }
    dend_18 { pt3dadd( 215.544, 434.319, 32.5506, 0.661 ) }
    dend_18 { pt3dadd( 214.483, 434.654, 32.0533, 0.6102 ) }
    dend_18 { pt3dadd( 213.405, 434.966, 32.3834, 0.6102 ) }
    dend_18 { pt3dadd( 212.352, 435.059, 33.3292, 0.6102 ) }
    dend_18 { pt3dadd( 211.256, 434.813, 32.8098, 0.6102 ) }
    dend_18 { pt3dadd( 210.171, 434.47, 32.8042, 0.6356 ) }
    dend_18 { pt3dadd( 209.22, 433.9, 32.3019, 0.6356 ) }
    dend_18 { pt3dadd( 208.114, 433.844, 32.8485, 0.6102 ) }
    dend_18 { pt3dadd( 207.066, 433.994, 33.775, 0.5592 ) }
    dend_18 { pt3dadd( 205.945, 434.045, 33.7392, 0.5848 ) }
    dend_18 { pt3dadd( 204.881, 434.401, 33.4099, 0.6356 ) }
    dend_18 { pt3dadd( 203.806, 434.757, 33.6034, 0.6864 ) }
    dend_18 { pt3dadd( 202.727, 435.054, 33.8836, 0.6356 ) }
    dend_18 { pt3dadd( 201.748, 435.162, 33.5577, 0.5848 ) }
    dend_18 { pt3dadd( 200.707, 435.012, 33.544, 0.5084 ) }
    dend_18 { pt3dadd( 199.659, 434.79, 34.4932, 0.5084 ) }
    dend_18 { pt3dadd( 198.593, 435.008, 34.7312, 0.5338 ) }
    dend_18 { pt3dadd( 197.533, 435.424, 34.4848, 0.5848 ) }
    dend_18 { pt3dadd( 196.551, 435.961, 34.9322, 0.6102 ) }
    dend_18 { pt3dadd( 195.821, 436.733, 35.924, 0.6102 ) }
    dend_18 { pt3dadd( 194.692, 436.804, 35.98, 0.6356 ) }
    dend_18 { pt3dadd( 193.641, 436.932, 36.2314, 0.6356 ) }
    dend_18 { pt3dadd( 192.679, 437.0, 35.3424, 0.6356 ) }
    dend_18 { pt3dadd( 191.585, 436.95, 35.7176, 0.6102 ) }
    dend_18 { pt3dadd( 190.453, 437.058, 35.4012, 0.6356 ) }
    dend_18 { pt3dadd( 189.363, 437.114, 35.9022, 0.661 ) }
    dend_18 { pt3dadd( 188.392, 436.693, 36.6688, 0.661 ) }
    dend_18 { pt3dadd( 187.462, 436.045, 36.9488, 0.661 ) }
    dend_18 { pt3dadd( 186.569, 435.331, 36.9524, 0.661 ) }
    dend_18 { pt3dadd( 185.662, 434.662, 36.8068, 0.6864 ) }
    dend_18 { pt3dadd( 184.997, 433.752, 37.0513, 0.6864 ) }
    dend_18 { pt3dadd( 184.151, 433.036, 37.52, 0.6864 ) }
    dend_18 { pt3dadd( 183.153, 432.508, 37.2445, 0.7118 ) }
    dend_18 { pt3dadd( 182.214, 431.927, 36.6512, 0.6864 ) }
    dend_18 { pt3dadd( 181.252, 431.438, 36.8332, 0.6356 ) }
    dend_18 { pt3dadd( 180.223, 431.281, 37.9383, 0.5592 ) }
    dend_18 { pt3dadd( 179.251, 430.9, 38.9256, 0.5592 ) }
    dend_18 { pt3dadd( 178.724, 429.974, 38.5798, 0.5592 ) }
    dend_18 { pt3dadd( 178.041, 429.056, 38.5045, 0.5592 ) }
    dend_18 { pt3dadd( 177.25, 428.285, 38.7419, 0.483 ) }
    dend_18 { pt3dadd( 176.207, 427.91, 39.3156, 0.4322 ) }
    dend_18 { pt3dadd( 175.223, 427.429, 38.995, 0.3814 ) }
    dend_18 { pt3dadd( 174.228, 427.421, 38.1612, 0.3814 ) }
    dend_18 { pt3dadd( 173.17, 427.58, 37.4763, 0.4068 ) }
    dend_18 { pt3dadd( 172.09, 427.65, 36.5946, 0.4322 ) }
    dend_18 { pt3dadd( 171.257, 427.742, 34.72, 0.483 ) }
    // Section: apic_9, id: apic_9, parent: apic_4 (entry count 74/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 319.596, 376.453, 41.72, 0.483 ) }
    apic_9 { pt3dadd( 320.239, 374.977, 41.592, 0.6356 ) }
    apic_9 { pt3dadd( 320.193, 373.932, 42.583, 0.661 ) }
    apic_9 { pt3dadd( 319.465, 373.071, 42.66, 0.661 ) }
    apic_9 { pt3dadd( 319.441, 371.964, 43.2494, 0.6864 ) }
    apic_9 { pt3dadd( 319.557, 370.841, 43.6682, 0.6864 ) }
    apic_9 { pt3dadd( 319.751, 369.72, 43.5812, 0.7118 ) }
    apic_9 { pt3dadd( 319.858, 368.607, 43.2104, 0.7626 ) }
    apic_9 { pt3dadd( 320.257, 367.541, 43.3244, 0.788 ) }
    apic_9 { pt3dadd( 320.344, 366.44, 42.9632, 0.7626 ) }
    apic_9 { pt3dadd( 320.005, 365.429, 43.5523, 0.7118 ) }
    apic_9 { pt3dadd( 320.004, 364.3, 43.4048, 0.6356 ) }
    apic_9 { pt3dadd( 320.63, 363.377, 42.8926, 0.5848 ) }
    apic_9 { pt3dadd( 320.764, 362.269, 43.1449, 0.5338 ) }
    apic_9 { pt3dadd( 321.303, 361.35, 43.195, 0.5848 ) }
    apic_9 { pt3dadd( 321.464, 360.267, 42.8268, 0.6102 ) }
    apic_9 { pt3dadd( 321.69, 359.241, 43.619, 0.6356 ) }
    apic_9 { pt3dadd( 321.856, 358.35, 45.2183, 0.5848 ) }
    apic_9 { pt3dadd( 321.576, 357.392, 46.3632, 0.5848 ) }
    apic_9 { pt3dadd( 321.907, 356.394, 46.7538, 0.5848 ) }
    apic_9 { pt3dadd( 322.517, 355.435, 46.4806, 0.6356 ) }
    apic_9 { pt3dadd( 323.063, 354.436, 46.5872, 0.6356 ) }
    apic_9 { pt3dadd( 322.944, 353.314, 47.0414, 0.5848 ) }
    apic_9 { pt3dadd( 322.862, 352.19, 47.5082, 0.483 ) }
    apic_9 { pt3dadd( 322.926, 351.097, 47.5485, 0.4576 ) }
    apic_9 { pt3dadd( 323.322, 350.162, 46.527, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_9 { pt3dadd( 323.487, 349.093, 46.7802, 0.6356 ) }
    apic_9 { pt3dadd( 323.484, 347.982, 47.3312, 0.6102 ) }
    apic_9 { pt3dadd( 323.634, 346.884, 46.9207, 0.5338 ) }
    apic_9 { pt3dadd( 323.517, 345.769, 46.5108, 0.4576 ) }
    apic_9 { pt3dadd( 323.362, 344.772, 47.651, 0.5084 ) }
    apic_9 { pt3dadd( 323.789, 343.739, 47.6372, 0.5592 ) }
    apic_9 { pt3dadd( 324.302, 342.864, 47.1702, 0.6102 ) }
    apic_9 { pt3dadd( 324.799, 341.995, 48.4439, 0.5848 ) }
    apic_9 { pt3dadd( 325.271, 341.142, 49.6787, 0.5338 ) }
    apic_9 { pt3dadd( 325.69, 340.207, 50.5599, 0.483 ) }
    apic_9 { pt3dadd( 326.363, 339.297, 50.9242, 0.483 ) }
    apic_9 { pt3dadd( 327.026, 338.375, 51.2196, 0.5084 ) }
    apic_9 { pt3dadd( 327.536, 337.354, 51.1162, 0.5338 ) }
    apic_9 { pt3dadd( 327.862, 336.306, 50.7416, 0.5338 ) }
    apic_9 { pt3dadd( 327.429, 335.29, 50.8516, 0.5338 ) }
    apic_9 { pt3dadd( 327.167, 334.296, 50.7441, 0.5592 ) }
    apic_9 { pt3dadd( 327.134, 333.183, 51.0516, 0.6102 ) }
    apic_9 { pt3dadd( 326.758, 332.107, 51.1462, 0.661 ) }
    apic_9 { pt3dadd( 326.872, 330.993, 50.7178, 0.6864 ) }
    apic_9 { pt3dadd( 327.121, 329.887, 50.9407, 0.6356 ) }
    apic_9 { pt3dadd( 327.941, 329.131, 51.3122, 0.6102 ) }
    apic_9 { pt3dadd( 328.536, 328.23, 51.4464, 0.5592 ) }
    apic_9 { pt3dadd( 329.332, 327.484, 50.974, 0.5848 ) }
    apic_9 { pt3dadd( 330.028, 326.591, 51.0406, 0.5592 ) }
    apic_9 { pt3dadd( 330.648, 325.668, 50.7668, 0.5592 ) }
    apic_9 { pt3dadd( 331.328, 324.777, 50.631, 0.483 ) }
    apic_9 { pt3dadd( 332.079, 323.917, 50.6033, 0.4322 ) }
    apic_9 { pt3dadd( 332.872, 323.485, 49.1476, 0.4322 ) }
    apic_9 { pt3dadd( 332.826, 322.54, 50.7066, 0.5338 ) }
    apic_9 { pt3dadd( 332.817, 321.458, 51.52, 0.6356 ) }
    apic_9 { pt3dadd( 333.063, 320.348, 51.52, 0.6356 ) }
    apic_9 { pt3dadd( 333.564, 319.321, 51.52, 0.5592 ) }
    apic_9 { pt3dadd( 334.212, 318.384, 51.5211, 0.4576 ) }
    apic_9 { pt3dadd( 335.034, 317.6, 51.6454, 0.4068 ) }
    apic_9 { pt3dadd( 335.854, 316.85, 52.0766, 0.3814 ) }
    apic_9 { pt3dadd( 336.291, 315.819, 52.1959, 0.4576 ) }
    apic_9 { pt3dadd( 336.336, 314.681, 52.4339, 0.5848 ) }
    apic_9 { pt3dadd( 336.336, 313.541, 52.64, 0.7372 ) }
    apic_9 { pt3dadd( 336.366, 312.4, 52.7156, 0.788 ) }
    apic_9 { pt3dadd( 336.521, 311.273, 52.92, 0.7118 ) }
    apic_9 { pt3dadd( 336.926, 310.227, 52.92, 0.6102 ) }
    apic_9 { pt3dadd( 337.589, 309.301, 53.0118, 0.5338 ) }
    apic_9 { pt3dadd( 337.94, 308.264, 53.4509, 0.5848 ) }
    apic_9 { pt3dadd( 338.013, 307.146, 53.9232, 0.6356 ) }
    apic_9 { pt3dadd( 338.198, 306.02, 54.04, 0.6864 ) }
    apic_9 { pt3dadd( 338.521, 304.929, 54.04, 0.661 ) }
    apic_9 { pt3dadd( 339.092, 303.949, 54.04, 0.6356 ) }
    apic_9 { pt3dadd( 339.888, 303.139, 54.1262, 0.5848 ) }
    apic_9 { pt3dadd( 340.833, 302.506, 54.2738, 0.5592 ) }
    apic_9 { pt3dadd( 341.852, 301.986, 54.32, 0.5338 ) }
    apic_9 { pt3dadd( 342.882, 301.492, 54.4309, 0.5848 ) }
    apic_9 { pt3dadd( 343.805, 300.908, 55.0701, 0.6864 ) }
    apic_9 { pt3dadd( 344.621, 300.167, 55.6539, 0.8136 ) }
    apic_9 { pt3dadd( 345.363, 299.302, 55.72, 0.8644 ) }
    apic_9 { pt3dadd( 346.023, 298.405, 56.189, 0.788 ) }
    apic_9 { pt3dadd( 346.663, 297.509, 56.9262, 0.6864 ) }
    apic_9 { pt3dadd( 347.233, 296.528, 57.12, 0.5848 ) }
    apic_9 { pt3dadd( 347.535, 295.44, 57.3233, 0.5848 ) }
    apic_9 { pt3dadd( 347.649, 294.305, 57.4, 0.5848 ) }
    apic_9 { pt3dadd( 347.949, 293.254, 58.0418, 0.6864 ) }
    apic_9 { pt3dadd( 348.627, 292.372, 58.4494, 0.788 ) }
    apic_9 { pt3dadd( 349.262, 291.432, 58.7409, 0.8898 ) }
    apic_9 { pt3dadd( 349.489, 290.329, 58.8, 0.8644 ) }
    apic_9 { pt3dadd( 349.717, 289.209, 58.8, 0.788 ) }
    apic_9 { pt3dadd( 349.896, 288.089, 59.1203, 0.6864 ) }
    apic_9 { pt3dadd( 350.046, 286.959, 59.3306, 0.6356 ) }
    apic_9 { pt3dadd( 350.182, 285.824, 59.36, 0.6356 ) }
    apic_9 { pt3dadd( 350.361, 284.694, 59.36, 0.661 ) }
    apic_9 { pt3dadd( 350.574, 283.57, 59.36, 0.7118 ) }
    apic_9 { pt3dadd( 350.646, 282.43, 59.36, 0.788 ) }
    apic_9 { pt3dadd( 350.906, 281.32, 59.36, 0.8898 ) }
    apic_9 { pt3dadd( 351.104, 280.197, 59.5162, 0.966 ) }
    apic_9 { pt3dadd( 351.493, 279.153, 60.0897, 0.9152 ) }
    apic_9 { pt3dadd( 351.92, 278.099, 60.3719, 0.8136 ) }
    apic_9 { pt3dadd( 352.338, 277.072, 61.0378, 0.7372 ) }
    apic_9 { pt3dadd( 352.352, 275.928, 61.0781, 0.8136 ) }
    apic_9 { pt3dadd( 352.352, 274.789, 61.32, 0.8898 ) }
    apic_9 { pt3dadd( 352.352, 273.645, 61.32, 0.8644 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 78/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 319.596, 376.453, 41.72, 0.483 ) }
    apic_5 { pt3dadd( 320.969, 376.59, 41.216, 0.4068 ) }
    apic_5 { pt3dadd( 322.025, 376.309, 41.8883, 0.3814 ) }
    apic_5 { pt3dadd( 323.027, 375.89, 42.7692, 0.3814 ) }
    apic_5 { pt3dadd( 323.879, 375.613, 44.3643, 0.4576 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 83/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 352.352, 273.645, 61.32, 0.8644 ) }
    apic_13 { pt3dadd( 351.238, 273.088, 61.8444, 0.4322 ) }
    apic_13 { pt3dadd( 350.23, 272.583, 62.319, 0.356 ) }
    apic_13 { pt3dadd( 349.445, 271.793, 62.6816, 0.3304 ) }
    apic_13 { pt3dadd( 348.705, 270.922, 62.72, 0.4068 ) }
    apic_13 { pt3dadd( 348.026, 270.0, 62.72, 0.5084 ) }
    apic_13 { pt3dadd( 347.633, 268.929, 62.72, 0.5592 ) }
    apic_13 { pt3dadd( 347.016, 267.968, 62.72, 0.5338 ) }
    apic_13 { pt3dadd( 346.394, 267.009, 62.72, 0.4576 ) }
    apic_13 { pt3dadd( 346.181, 265.887, 62.72, 0.4068 ) }
    apic_13 { pt3dadd( 345.875, 264.786, 62.72, 0.3814 ) }
    apic_13 { pt3dadd( 345.612, 263.671, 62.72, 0.356 ) }
    apic_13 { pt3dadd( 345.062, 262.669, 62.72, 0.3304 ) }
    apic_13 { pt3dadd( 344.803, 261.556, 62.72, 0.2796 ) }
    apic_13 { pt3dadd( 344.549, 260.441, 62.72, 0.2542 ) }
    apic_13 { pt3dadd( 344.016, 259.43, 62.72, 0.2288 ) }
    apic_13 { pt3dadd( 343.333, 258.512, 62.72, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_13 { pt3dadd( 342.761, 257.522, 62.7124, 0.2796 ) }
    apic_13 { pt3dadd( 342.022, 256.656, 62.4809, 0.3304 ) }
    apic_13 { pt3dadd( 341.525, 255.658, 61.875, 0.356 ) }
    apic_13 { pt3dadd( 341.069, 254.612, 61.6725, 0.4068 ) }
    apic_13 { pt3dadd( 340.649, 253.548, 61.6, 0.4576 ) }
    apic_13 { pt3dadd( 340.192, 252.5, 61.6, 0.483 ) }
    apic_13 { pt3dadd( 339.912, 251.392, 61.6, 0.5084 ) }
    apic_13 { pt3dadd( 339.731, 250.266, 61.5754, 0.4576 ) }
    apic_13 { pt3dadd( 339.27, 249.225, 61.32, 0.4322 ) }
    apic_13 { pt3dadd( 338.761, 248.201, 61.3071, 0.3304 ) }
    apic_13 { pt3dadd( 338.256, 247.176, 61.1848, 0.2796 ) }
    apic_13 { pt3dadd( 337.782, 246.142, 61.04, 0.2542 ) }
    apic_13 { pt3dadd( 337.549, 245.023, 61.04, 0.305 ) }
    apic_13 { pt3dadd( 337.21, 243.932, 61.04, 0.356 ) }
    apic_13 { pt3dadd( 336.664, 242.946, 61.04, 0.356 ) }
    apic_13 { pt3dadd( 335.938, 242.089, 61.04, 0.3304 ) }
    apic_13 { pt3dadd( 335.392, 241.099, 61.04, 0.356 ) }
    apic_13 { pt3dadd( 334.633, 240.245, 61.04, 0.4068 ) }
    apic_13 { pt3dadd( 333.938, 239.341, 61.04, 0.4322 ) }
    apic_13 { pt3dadd( 333.297, 238.398, 61.04, 0.4322 ) }
    apic_13 { pt3dadd( 332.499, 237.584, 61.04, 0.483 ) }
    apic_13 { pt3dadd( 331.58, 236.906, 61.04, 0.5848 ) }
    apic_13 { pt3dadd( 330.611, 236.299, 61.04, 0.6102 ) }
    apic_13 { pt3dadd( 329.74, 235.577, 61.04, 0.5338 ) }
    apic_13 { pt3dadd( 329.02, 234.691, 60.9507, 0.4068 ) }
    apic_13 { pt3dadd( 328.263, 233.838, 60.795, 0.305 ) }
    apic_13 { pt3dadd( 327.393, 233.099, 60.76, 0.2796 ) }
    apic_13 { pt3dadd( 326.868, 232.146, 60.76, 0.2796 ) }
    apic_13 { pt3dadd( 326.319, 231.162, 60.76, 0.356 ) }
    apic_13 { pt3dadd( 325.368, 230.692, 60.359, 0.4068 ) }
    apic_13 { pt3dadd( 324.54, 229.983, 60.2, 0.483 ) }
    apic_13 { pt3dadd( 324.02, 228.966, 60.2, 0.4576 ) }
    apic_13 { pt3dadd( 323.018, 228.423, 60.2, 0.4322 ) }
    apic_13 { pt3dadd( 321.921, 228.096, 60.2, 0.356 ) }
    apic_13 { pt3dadd( 320.805, 227.846, 60.1143, 0.3304 ) }
    apic_13 { pt3dadd( 319.682, 227.645, 59.92, 0.2796 ) }
    apic_13 { pt3dadd( 318.583, 227.331, 59.92, 0.2542 ) }
    apic_13 { pt3dadd( 317.737, 226.562, 59.92, 0.2288 ) }
    apic_13 { pt3dadd( 317.047, 225.651, 59.92, 0.2796 ) }
    apic_13 { pt3dadd( 316.77, 224.541, 59.92, 0.3814 ) }
    apic_13 { pt3dadd( 316.313, 223.501, 59.92, 0.5338 ) }
    apic_13 { pt3dadd( 315.465, 222.745, 59.92, 0.6356 ) }
    apic_13 { pt3dadd( 314.989, 221.706, 59.92, 0.661 ) }
    apic_13 { pt3dadd( 314.642, 220.625, 59.8959, 0.661 ) }
    apic_13 { pt3dadd( 313.868, 219.797, 59.6347, 0.661 ) }
    apic_13 { pt3dadd( 312.919, 219.163, 59.5302, 0.6864 ) }
    apic_13 { pt3dadd( 312.015, 218.502, 59.08, 0.661 ) }
    apic_13 { pt3dadd( 310.946, 218.097, 59.08, 0.5848 ) }
    apic_13 { pt3dadd( 309.847, 217.783, 59.08, 0.5338 ) }
    apic_13 { pt3dadd( 308.92, 217.214, 59.08, 0.483 ) }
    apic_13 { pt3dadd( 308.186, 216.361, 59.08, 0.5084 ) }
    apic_13 { pt3dadd( 307.705, 215.397, 59.08, 0.4576 ) }
    apic_13 { pt3dadd( 307.165, 214.421, 59.08, 0.4068 ) }
    apic_13 { pt3dadd( 306.431, 213.544, 59.08, 0.305 ) }
    apic_13 { pt3dadd( 305.984, 212.501, 59.08, 0.2796 ) }
    apic_13 { pt3dadd( 305.614, 211.419, 59.08, 0.2796 ) }
    apic_13 { pt3dadd( 304.99, 210.496, 58.52, 0.305 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 57/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 352.352, 273.645, 61.32, 0.8644 ) }
    apic_10 { pt3dadd( 353.115, 272.453, 61.32, 0.7118 ) }
    apic_10 { pt3dadd( 353.958, 271.717, 61.878, 0.7372 ) }
    apic_10 { pt3dadd( 354.83, 271.099, 62.72, 0.6864 ) }
    apic_10 { pt3dadd( 355.477, 270.157, 62.72, 0.6102 ) }
    apic_10 { pt3dadd( 356.123, 269.213, 62.72, 0.5592 ) }
    apic_10 { pt3dadd( 356.748, 268.257, 62.72, 0.5338 ) }
    apic_10 { pt3dadd( 357.182, 267.227, 62.9289, 0.5592 ) }
    apic_10 { pt3dadd( 357.27, 266.14, 63.6894, 0.5848 ) }
    apic_10 { pt3dadd( 357.303, 265.001, 63.84, 0.6356 ) }
    apic_10 { pt3dadd( 357.538, 263.898, 63.8487, 0.661 ) }
    apic_10 { pt3dadd( 358.216, 263.031, 63.9506, 0.6356 ) }
    apic_10 { pt3dadd( 359.15, 262.395, 64.12, 0.5592 ) }
    apic_10 { pt3dadd( 359.849, 261.508, 64.1654, 0.4576 ) }
    apic_10 { pt3dadd( 360.282, 260.466, 64.4977, 0.4576 ) }
    apic_10 { pt3dadd( 360.751, 259.458, 64.9491, 0.5338 ) }
    apic_10 { pt3dadd( 361.359, 258.495, 65.1221, 0.6102 ) }
    apic_10 { pt3dadd( 362.019, 257.584, 65.24, 0.661 ) }
    apic_10 { pt3dadd( 362.835, 256.782, 65.24, 0.5848 ) }
    apic_10 { pt3dadd( 363.464, 255.86, 65.5301, 0.6102 ) }
    apic_10 { pt3dadd( 363.672, 254.775, 65.9523, 0.6102 ) }
    apic_10 { pt3dadd( 363.678, 253.636, 66.2393, 0.7372 ) }
    apic_10 { pt3dadd( 363.678, 252.496, 66.36, 0.8136 ) }
    apic_10 { pt3dadd( 363.678, 251.352, 66.36, 0.8136 ) }
    apic_10 { pt3dadd( 363.678, 250.208, 66.36, 0.7372 ) }
    apic_10 { pt3dadd( 363.678, 249.064, 66.36, 0.5592 ) }
    apic_10 { pt3dadd( 363.749, 247.923, 66.36, 0.5338 ) }
    apic_10 { pt3dadd( 364.113, 246.861, 66.451, 0.5592 ) }
    apic_10 { pt3dadd( 364.723, 245.906, 66.78, 0.661 ) }
    apic_10 { pt3dadd( 365.394, 244.99, 67.1135, 0.661 ) }
    apic_10 { pt3dadd( 366.15, 244.137, 67.2, 0.6102 ) }
    apic_10 { pt3dadd( 366.902, 243.327, 67.7975, 0.5848 ) }
    apic_10 { pt3dadd( 367.708, 242.537, 68.04, 0.6102 ) }
    apic_10 { pt3dadd( 368.534, 241.745, 68.04, 0.6356 ) }
    apic_10 { pt3dadd( 369.144, 240.838, 68.6697, 0.661 ) }
    apic_10 { pt3dadd( 369.558, 239.785, 68.8708, 0.661 ) }
    apic_10 { pt3dadd( 369.624, 238.651, 68.88, 0.7626 ) }
    apic_10 { pt3dadd( 369.729, 237.513, 68.9553, 0.788 ) }
    apic_10 { pt3dadd( 369.939, 236.392, 69.1365, 0.839 ) }
    apic_10 { pt3dadd( 370.03, 235.252, 69.16, 0.788 ) }
    apic_10 { pt3dadd( 370.816, 234.471, 69.16, 0.788 ) }
    apic_10 { pt3dadd( 371.332, 233.474, 69.561, 0.661 ) }
    apic_10 { pt3dadd( 371.959, 232.526, 69.8617, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_10 { pt3dadd( 372.581, 231.636, 70.6989, 0.3814 ) }
    apic_10 { pt3dadd( 372.889, 230.538, 70.84, 0.3814 ) }
    apic_10 { pt3dadd( 372.962, 229.398, 70.84, 0.4576 ) }
    apic_10 { pt3dadd( 373.23, 228.285, 70.84, 0.5084 ) }
    apic_10 { pt3dadd( 373.448, 227.163, 70.84, 0.5338 ) }
    apic_10 { pt3dadd( 373.803, 226.077, 70.84, 0.5338 ) }
    apic_10 { pt3dadd( 374.353, 225.08, 70.8638, 0.5592 ) }
    apic_10 { pt3dadd( 375.175, 224.292, 71.1236, 0.6102 ) }
    apic_10 { pt3dadd( 375.968, 223.5, 71.4277, 0.661 ) }
    apic_10 { pt3dadd( 376.387, 222.446, 71.689, 0.6864 ) }
    apic_10 { pt3dadd( 376.601, 221.358, 72.24, 0.661 ) }
    apic_10 { pt3dadd( 376.694, 220.226, 72.24, 0.661 ) }
    apic_10 { pt3dadd( 377.072, 219.148, 72.24, 0.6356 ) }
    apic_10 { pt3dadd( 377.597, 218.136, 72.24, 0.7118 ) }
    apic_10 { pt3dadd( 378.254, 217.2, 72.24, 0.788 ) }
    apic_10 { pt3dadd( 378.908, 216.269, 72.4055, 0.8898 ) }
    apic_10 { pt3dadd( 379.522, 215.344, 73.0635, 0.8136 ) }
    apic_10 { pt3dadd( 380.086, 214.403, 73.8385, 0.6864 ) }
    apic_10 { pt3dadd( 380.638, 213.421, 74.2, 0.5592 ) }
    apic_10 { pt3dadd( 381.183, 212.416, 74.2, 0.5592 ) }
    apic_10 { pt3dadd( 381.703, 211.396, 74.2, 0.5848 ) }
    apic_10 { pt3dadd( 382.081, 210.332, 74.2, 0.5592 ) }
    apic_10 { pt3dadd( 382.295, 209.215, 74.384, 0.5338 ) }
    apic_10 { pt3dadd( 382.812, 208.251, 74.685, 0.5084 ) }
    apic_10 { pt3dadd( 383.366, 207.28, 74.76, 0.5338 ) }
    apic_10 { pt3dadd( 383.968, 206.325, 74.76, 0.5084 ) }
    apic_10 { pt3dadd( 384.629, 205.394, 74.76, 0.4322 ) }
    apic_10 { pt3dadd( 384.981, 204.328, 74.76, 0.356 ) }
    apic_10 { pt3dadd( 385.39, 203.272, 74.76, 0.3304 ) }
    apic_10 { pt3dadd( 385.852, 202.227, 74.76, 0.356 ) }
    apic_10 { pt3dadd( 386.285, 201.168, 74.76, 0.3814 ) }
    apic_10 { pt3dadd( 386.816, 200.182, 75.2276, 0.356 ) }
    apic_10 { pt3dadd( 386.998, 199.089, 75.803, 0.356 ) }
    apic_10 { pt3dadd( 387.015, 197.954, 76.1208, 0.3814 ) }
    apic_10 { pt3dadd( 387.106, 196.816, 76.16, 0.483 ) }
    apic_10 { pt3dadd( 387.218, 195.68, 76.3507, 0.5338 ) }
    apic_10 { pt3dadd( 387.778, 194.71, 76.6808, 0.5338 ) }
    apic_10 { pt3dadd( 388.668, 194.005, 76.72, 0.4068 ) }
    apic_10 { pt3dadd( 389.625, 193.377, 76.72, 0.305 ) }
    apic_10 { pt3dadd( 390.26, 192.436, 76.72, 0.2542 ) }
    apic_10 { pt3dadd( 390.787, 191.421, 76.72, 0.2796 ) }
    apic_10 { pt3dadd( 391.115, 190.343, 77.1826, 0.356 ) }
    apic_10 { pt3dadd( 391.298, 189.217, 77.2761, 0.4322 ) }
    apic_10 { pt3dadd( 391.359, 188.075, 77.28, 0.5592 ) }
    apic_10 { pt3dadd( 391.409, 186.932, 77.28, 0.6102 ) }
    apic_10 { pt3dadd( 391.707, 185.829, 77.292, 0.5848 ) }
    apic_10 { pt3dadd( 391.913, 184.742, 77.9932, 0.483 ) }
    apic_10 { pt3dadd( 391.933, 183.606, 78.272, 0.3814 ) }
    apic_10 { pt3dadd( 392.044, 182.474, 78.566, 0.3304 ) }
    apic_10 { pt3dadd( 392.161, 181.347, 78.9533, 0.2796 ) }
    apic_10 { pt3dadd( 392.577, 180.282, 78.96, 0.2542 ) }
    apic_10 { pt3dadd( 393.164, 179.3, 78.96, 0.2288 ) }
    apic_10 { pt3dadd( 394.077, 178.612, 78.96, 0.2796 ) }
    apic_10 { pt3dadd( 394.902, 177.82, 78.9614, 0.3814 ) }
    apic_10 { pt3dadd( 395.271, 176.766, 79.5648, 0.5338 ) }
    apic_10 { pt3dadd( 395.699, 175.748, 80.08, 0.661 ) }
    apic_10 { pt3dadd( 395.71, 174.604, 80.08, 0.7626 ) }
    apic_10 { pt3dadd( 395.71, 173.46, 80.0808, 0.8136 ) }
    apic_10 { pt3dadd( 395.71, 172.317, 80.1301, 0.8136 ) }
    apic_10 { pt3dadd( 395.71, 171.178, 80.36, 0.7372 ) }
    apic_10 { pt3dadd( 395.757, 170.043, 80.442, 0.6102 ) }
    apic_10 { pt3dadd( 396.094, 168.972, 80.9088, 0.4576 ) }
    apic_10 { pt3dadd( 396.697, 168.026, 81.2, 0.3304 ) }
    apic_10 { pt3dadd( 397.527, 167.241, 81.2232, 0.2796 ) }
    apic_10 { pt3dadd( 398.122, 166.322, 81.4962, 0.2796 ) }
    apic_10 { pt3dadd( 398.226, 165.227, 82.2489, 0.3304 ) }
    apic_10 { pt3dadd( 398.226, 164.119, 82.9506, 0.3304 ) }
    apic_10 { pt3dadd( 398.226, 163.003, 83.44, 0.3304 ) }
    apic_10 { pt3dadd( 398.226, 161.86, 83.5358, 0.305 ) }
    apic_10 { pt3dadd( 398.226, 160.721, 83.72, 0.3304 ) }
    apic_10 { pt3dadd( 398.226, 159.577, 83.72, 0.356 ) }
    apic_10 { pt3dadd( 398.226, 158.433, 83.72, 0.4068 ) }
    apic_10 { pt3dadd( 398.253, 157.293, 83.8589, 0.4068 ) }
    apic_10 { pt3dadd( 398.426, 156.213, 84.5188, 0.4322 ) }
    apic_10 { pt3dadd( 398.742, 155.186, 85.4092, 0.4322 ) }
    apic_10 { pt3dadd( 398.908, 154.073, 85.8001, 0.4576 ) }
    apic_10 { pt3dadd( 398.983, 152.956, 86.2518, 0.4322 ) }
    apic_10 { pt3dadd( 399.296, 151.9, 86.7681, 0.356 ) }
    apic_10 { pt3dadd( 399.597, 150.855, 87.1825, 0.2796 ) }
    apic_10 { pt3dadd( 399.599, 149.742, 87.64, 0.2796 ) }
    apic_10 { pt3dadd( 399.599, 148.598, 87.64, 0.3304 ) }
    apic_10 { pt3dadd( 399.647, 147.464, 87.8688, 0.4068 ) }
    apic_10 { pt3dadd( 400.004, 146.574, 89.0064, 0.3814 ) }
    apic_10 { pt3dadd( 400.593, 145.785, 90.3767, 0.356 ) }
    apic_10 { pt3dadd( 400.835, 144.798, 91.5099, 0.2796 ) }
    apic_10 { pt3dadd( 400.858, 143.682, 91.8347, 0.2542 ) }
    apic_10 { pt3dadd( 400.858, 142.538, 91.84, 0.2542 ) }
    apic_10 { pt3dadd( 400.858, 141.394, 91.84, 0.305 ) }
    apic_10 { pt3dadd( 400.858, 140.254, 92.0447, 0.356 ) }
    apic_10 { pt3dadd( 401.142, 139.18, 92.5361, 0.356 ) }
    apic_10 { pt3dadd( 401.525, 138.137, 93.2005, 0.305 ) }
    apic_10 { pt3dadd( 402.246, 137.257, 93.24, 0.2542 ) }
    apic_10 { pt3dadd( 402.852, 136.287, 93.24, 0.2288 ) }
    apic_10 { pt3dadd( 403.607, 135.428, 93.24, 0.2288 ) }
    apic_10 { pt3dadd( 404.595, 134.852, 93.24, 0.2288 ) }
    apic_10 { pt3dadd( 404.968, 134.164, 94.3382, 0.2288 ) }
    apic_10 { pt3dadd( 405.442, 133.291, 95.7289, 0.2288 ) }
    apic_10 { pt3dadd( 405.915, 132.418, 97.1197, 0.2288 ) }
    apic_10 { pt3dadd( 406.377, 131.531, 98.4729, 0.2288 ) }
    apic_10 { pt3dadd( 406.715, 130.537, 99.4, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_10 { pt3dadd( 406.854, 129.406, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 407.218, 128.326, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 407.642, 127.279, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 407.766, 126.142, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 407.94, 125.012, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 408.065, 123.877, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 408.065, 122.733, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 408.065, 121.589, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 408.065, 120.445, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 408.188, 119.327, 99.4, 0.2288 ) }
    apic_10 { pt3dadd( 408.546, 118.259, 99.5854, 0.2288 ) }
    apic_10 { pt3dadd( 408.637, 117.138, 99.96, 0.2288 ) }
    apic_10 { pt3dadd( 408.729, 116.033, 100.324, 0.2288 ) }
    apic_10 { pt3dadd( 409.101, 115.121, 101.657, 0.2542 ) }
    apic_10 { pt3dadd( 409.303, 114.094, 102.2, 0.305 ) }
    apic_10 { pt3dadd( 409.323, 112.951, 102.2, 0.4068 ) }
    apic_10 { pt3dadd( 409.347, 111.808, 102.289, 0.483 ) }
    apic_10 { pt3dadd( 409.531, 110.782, 103.249, 0.5084 ) }
    apic_10 { pt3dadd( 409.979, 109.779, 103.812, 0.4322 ) }
    apic_10 { pt3dadd( 410.555, 108.794, 103.941, 0.356 ) }
    apic_10 { pt3dadd( 411.035, 107.76, 104.114, 0.305 ) }
    apic_10 { pt3dadd( 411.345, 107.075, 105.956, 0.305 ) }
    apic_10 { pt3dadd( 411.408, 106.313, 108.017, 0.2796 ) }
    apic_10 { pt3dadd( 411.603, 105.238, 108.625, 0.2542 ) }
    apic_10 { pt3dadd( 411.673, 104.097, 108.64, 0.2542 ) }
    apic_10 { pt3dadd( 411.724, 102.954, 108.64, 0.305 ) }
    apic_10 { pt3dadd( 411.726, 101.81, 108.64, 0.4068 ) }
    apic_10 { pt3dadd( 411.727, 100.673, 108.94, 0.483 ) }
    apic_10 { pt3dadd( 411.957, 99.6751, 110.17, 0.5338 ) }
    apic_10 { pt3dadd( 412.322, 98.616, 110.728, 0.483 ) }
    apic_10 { pt3dadd( 412.655, 97.5768, 111.526, 0.4068 ) }
    apic_10 { pt3dadd( 412.745, 96.4554, 112.022, 0.305 ) }
    apic_10 { pt3dadd( 412.781, 95.3346, 112.442, 0.2542 ) }
    apic_10 { pt3dadd( 412.978, 94.298, 113.464, 0.2288 ) }
    apic_10 { pt3dadd( 413.291, 93.2141, 113.847, 0.2796 ) }
    apic_10 { pt3dadd( 413.634, 92.1947, 114.763, 0.356 ) }
    apic_10 { pt3dadd( 413.795, 91.1284, 115.642, 0.4322 ) }
    apic_10 { pt3dadd( 413.923, 89.9999, 115.92, 0.4068 ) }
    apic_10 { pt3dadd( 413.992, 88.8581, 115.92, 0.3814 ) }
    apic_10 { pt3dadd( 414.014, 87.7145, 115.92, 0.4068 ) }
    apic_10 { pt3dadd( 414.058, 86.5894, 116.165, 0.483 ) }
    apic_10 { pt3dadd( 414.269, 85.5114, 116.917, 0.483 ) }
    apic_10 { pt3dadd( 414.664, 84.4623, 117.401, 0.3814 ) }
    apic_10 { pt3dadd( 415.095, 83.4124, 117.6, 0.2796 ) }
    apic_10 { pt3dadd( 415.272, 82.2959, 117.6, 0.2288 ) }
    apic_10 { pt3dadd( 415.272, 81.1571, 117.786, 0.2288 ) }
    apic_10 { pt3dadd( 415.272, 80.4306, 119.343, 0.305 ) }
    apic_10 { pt3dadd( 415.269, 79.7234, 121.255, 0.3814 ) }
    apic_10 { pt3dadd( 415.051, 78.7141, 122.382, 0.5084 ) }
    apic_10 { pt3dadd( 414.875, 77.6181, 122.853, 0.5592 ) }
    apic_10 { pt3dadd( 414.63, 76.5052, 122.923, 0.661 ) }
    apic_10 { pt3dadd( 414.103, 75.5643, 123.625, 0.7118 ) }
    apic_10 { pt3dadd( 413.748, 74.7202, 125.225, 0.6864 ) }
    apic_10 { pt3dadd( 413.673, 73.7465, 126.631, 0.5592 ) }
    apic_10 { pt3dadd( 413.67, 72.6398, 127.272, 0.4068 ) }
    apic_10 { pt3dadd( 413.67, 71.6002, 128.409, 0.3304 ) }
    apic_10 { pt3dadd( 413.67, 70.4719, 128.776, 0.3304 ) }
    apic_10 { pt3dadd( 413.682, 69.3285, 128.8, 0.356 ) }
    apic_10 { pt3dadd( 414.568, 68.6723, 128.8, 0.4322 ) }
    apic_10 { pt3dadd( 415.272, 67.8519, 129.671, 0.5084 ) }
    // Section: apic_8, id: apic_8, parent: apic_5 (entry count 60/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 323.879, 375.613, 44.3643, 0.4576 ) }
    apic_8 { pt3dadd( 323.156, 376.729, 44.212, 0.6102 ) }
    apic_8 { pt3dadd( 322.387, 377.546, 44.1694, 0.6102 ) }
    apic_8 { pt3dadd( 321.549, 378.052, 45.379, 0.661 ) }
    apic_8 { pt3dadd( 320.747, 378.484, 46.2325, 0.661 ) }
    apic_8 { pt3dadd( 320.008, 379.276, 45.4451, 0.5848 ) }
    apic_8 { pt3dadd( 319.189, 379.96, 45.7332, 0.483 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 67/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 323.879, 375.613, 44.3643, 0.4576 ) }
    apic_7 { pt3dadd( 324.127, 374.621, 45.1433, 0.3814 ) }
    apic_7 { pt3dadd( 324.458, 373.57, 45.1226, 0.356 ) }
    apic_7 { pt3dadd( 324.989, 372.652, 45.1654, 0.356 ) }
    apic_7 { pt3dadd( 325.237, 372.14, 43.2939, 0.4322 ) }
    apic_7 { pt3dadd( 326.034, 372.151, 41.697, 0.4576 ) }
    apic_7 { pt3dadd( 327.035, 371.659, 41.2602, 0.483 ) }
    apic_7 { pt3dadd( 328.05, 371.428, 40.8772, 0.4576 ) }
    apic_7 { pt3dadd( 329.037, 371.255, 40.04, 0.5084 ) }
    apic_7 { pt3dadd( 330.003, 370.68, 40.2083, 0.5592 ) }
    apic_7 { pt3dadd( 330.798, 370.267, 41.2992, 0.5848 ) }
    apic_7 { pt3dadd( 331.44, 369.552, 39.7916, 0.5592 ) }
    apic_7 { pt3dadd( 332.08, 368.704, 39.7617, 0.5592 ) }
    apic_7 { pt3dadd( 332.54, 367.682, 40.1839, 0.5848 ) }
    apic_7 { pt3dadd( 333.172, 366.745, 40.3312, 0.6356 ) }
    apic_7 { pt3dadd( 334.048, 366.072, 40.8545, 0.6864 ) }
    apic_7 { pt3dadd( 334.816, 365.284, 40.4211, 0.7372 ) }
    apic_7 { pt3dadd( 335.669, 364.725, 39.8297, 0.7372 ) }
    apic_7 { pt3dadd( 336.199, 363.763, 39.4069, 0.7118 ) }
    apic_7 { pt3dadd( 336.405, 362.742, 38.8363, 0.6864 ) }
    apic_7 { pt3dadd( 336.268, 361.609, 38.6705, 0.6864 ) }
    apic_7 { pt3dadd( 336.13, 360.514, 39.2661, 0.661 ) }
    apic_7 { pt3dadd( 336.482, 359.611, 38.4448, 0.661 ) }
    apic_7 { pt3dadd( 337.348, 359.071, 37.5469, 0.6356 ) }
    apic_7 { pt3dadd( 338.395, 358.655, 37.7843, 0.6102 ) }
    apic_7 { pt3dadd( 339.289, 358.044, 37.1781, 0.5592 ) }
    apic_7 { pt3dadd( 340.094, 357.384, 36.0363, 0.5338 ) }
    apic_7 { pt3dadd( 340.433, 356.401, 35.5376, 0.5592 ) }
    apic_7 { pt3dadd( 340.886, 355.769, 33.889, 0.5338 ) }
    apic_7 { pt3dadd( 341.355, 354.92, 35.3189, 0.5338 ) }
    apic_7 { pt3dadd( 341.803, 353.941, 35.7232, 0.4576 ) }
    apic_7 { pt3dadd( 342.741, 353.458, 35.2103, 0.483 ) }
    apic_7 { pt3dadd( 343.852, 353.514, 35.2654, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_7 { pt3dadd( 344.973, 353.574, 35.7921, 0.5848 ) }
    apic_7 { pt3dadd( 345.453, 352.757, 34.3888, 0.6102 ) }
    apic_7 { pt3dadd( 346.271, 352.512, 33.2444, 0.6102 ) }
    apic_7 { pt3dadd( 347.283, 353.016, 32.9826, 0.5338 ) }
    apic_7 { pt3dadd( 348.257, 352.876, 32.6682, 0.483 ) }
    apic_7 { pt3dadd( 348.777, 352.088, 31.5104, 0.5084 ) }
    apic_7 { pt3dadd( 348.682, 352.041, 28.8982, 0.5848 ) }
    apic_7 { pt3dadd( 349.534, 352.278, 27.141, 0.661 ) }
    apic_7 { pt3dadd( 350.554, 352.519, 26.1979, 0.661 ) }
    apic_7 { pt3dadd( 351.638, 352.788, 26.4216, 0.6102 ) }
    apic_7 { pt3dadd( 352.707, 353.084, 26.4832, 0.5592 ) }
    apic_7 { pt3dadd( 353.793, 353.323, 26.8383, 0.5084 ) }
    apic_7 { pt3dadd( 354.837, 353.67, 27.2023, 0.483 ) }
    apic_7 { pt3dadd( 355.771, 353.134, 26.7011, 0.4576 ) }
    apic_7 { pt3dadd( 356.862, 353.039, 26.6431, 0.483 ) }
    apic_7 { pt3dadd( 357.924, 353.075, 26.2032, 0.5084 ) }
    apic_7 { pt3dadd( 358.888, 353.614, 26.2643, 0.5338 ) }
    apic_7 { pt3dadd( 359.81, 354.155, 25.412, 0.5084 ) }
    apic_7 { pt3dadd( 360.585, 353.436, 24.67, 0.5084 ) }
    apic_7 { pt3dadd( 360.685, 352.35, 24.115, 0.5338 ) }
    apic_7 { pt3dadd( 360.669, 351.261, 24.8114, 0.5848 ) }
    apic_7 { pt3dadd( 361.153, 350.264, 24.9928, 0.6102 ) }
    apic_7 { pt3dadd( 361.853, 349.428, 24.5364, 0.5592 ) }
    apic_7 { pt3dadd( 362.345, 348.434, 24.3631, 0.483 ) }
    apic_7 { pt3dadd( 362.876, 347.564, 23.359, 0.3814 ) }
    apic_7 { pt3dadd( 363.043, 346.551, 23.3775, 0.356 ) }
    apic_7 { pt3dadd( 363.546, 345.647, 24.4146, 0.356 ) }
    apic_7 { pt3dadd( 363.457, 344.566, 24.003, 0.3814 ) }
    apic_7 { pt3dadd( 363.499, 343.599, 24.9332, 0.3814 ) }
    apic_7 { pt3dadd( 364.125, 342.842, 24.1637, 0.4322 ) }
    apic_7 { pt3dadd( 365.194, 342.801, 24.0789, 0.4576 ) }
    apic_7 { pt3dadd( 366.154, 342.312, 24.0475, 0.483 ) }
    apic_7 { pt3dadd( 366.75, 341.491, 25.048, 0.4322 ) }
    apic_7 { pt3dadd( 367.076, 340.454, 24.5325, 0.4322 ) }
    apic_7 { pt3dadd( 367.391, 339.516, 24.1441, 0.4322 ) }
    apic_7 { pt3dadd( 368.406, 339.187, 24.4978, 0.4322 ) }
    apic_7 { pt3dadd( 369.397, 338.908, 23.9803, 0.3814 ) }
    apic_7 { pt3dadd( 370.141, 338.125, 24.2273, 0.305 ) }
    apic_7 { pt3dadd( 370.44, 337.075, 23.501, 0.2542 ) }
    apic_7 { pt3dadd( 370.388, 336.063, 22.2415, 0.2288 ) }
    apic_7 { pt3dadd( 369.97, 335.078, 22.12, 0.3304 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 41/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 323.879, 375.613, 44.3643, 0.4576 ) }
    apic_6 { pt3dadd( 323.798, 375.423, 45.6478, 0.483 ) }
    apic_6 { pt3dadd( 324.218, 374.428, 46.1415, 0.661 ) }
    apic_6 { pt3dadd( 324.308, 373.299, 46.1782, 0.661 ) }
    apic_6 { pt3dadd( 324.557, 372.228, 46.4075, 0.5592 ) }
    apic_6 { pt3dadd( 324.776, 371.145, 46.9938, 0.4322 ) }
    apic_6 { pt3dadd( 325.479, 370.275, 46.902, 0.4322 ) }
    apic_6 { pt3dadd( 326.494, 369.776, 46.62, 0.5592 ) }
    apic_6 { pt3dadd( 327.512, 369.366, 47.2696, 0.6864 ) }
    apic_6 { pt3dadd( 328.471, 368.907, 47.9937, 0.7118 ) }
    apic_6 { pt3dadd( 329.496, 368.652, 48.8748, 0.6102 ) }
    apic_6 { pt3dadd( 330.529, 368.728, 49.7512, 0.5338 ) }
    apic_6 { pt3dadd( 331.602, 368.983, 49.3424, 0.5084 ) }
    apic_6 { pt3dadd( 332.605, 369.332, 49.6166, 0.5084 ) }
    apic_6 { pt3dadd( 333.541, 368.772, 49.3072, 0.483 ) }
    apic_6 { pt3dadd( 334.385, 368.08, 48.5934, 0.483 ) }
    apic_6 { pt3dadd( 335.144, 367.274, 48.7911, 0.5592 ) }
    apic_6 { pt3dadd( 335.535, 366.335, 49.938, 0.6356 ) }
    apic_6 { pt3dadd( 335.811, 365.244, 50.3292, 0.6864 ) }
    apic_6 { pt3dadd( 336.358, 364.395, 50.993, 0.6864 ) }
    apic_6 { pt3dadd( 337.406, 364.068, 51.5057, 0.6356 ) }
    apic_6 { pt3dadd( 338.283, 363.726, 52.8881, 0.5338 ) }
    apic_6 { pt3dadd( 339.273, 363.568, 54.0806, 0.3814 ) }
    apic_6 { pt3dadd( 339.834, 363.126, 52.736, 0.305 ) }
    apic_6 { pt3dadd( 339.996, 362.243, 53.592, 0.305 ) }
    apic_6 { pt3dadd( 339.889, 361.248, 54.3267, 0.3814 ) }
    apic_6 { pt3dadd( 340.625, 360.552, 55.13, 0.4068 ) }
    apic_6 { pt3dadd( 341.481, 360.744, 55.8085, 0.4322 ) }
    apic_6 { pt3dadd( 342.089, 359.945, 56.1058, 0.4322 ) }
    apic_6 { pt3dadd( 343.103, 359.912, 55.0043, 0.483 ) }
    apic_6 { pt3dadd( 344.042, 359.863, 53.5382, 0.4576 ) }
    apic_6 { pt3dadd( 345.059, 359.97, 54.0436, 0.4322 ) }
    apic_6 { pt3dadd( 346.125, 359.678, 54.3435, 0.4068 ) }
    apic_6 { pt3dadd( 346.845, 358.824, 54.8565, 0.4322 ) }
    apic_6 { pt3dadd( 347.755, 358.193, 55.3202, 0.4322 ) }
    apic_6 { pt3dadd( 348.516, 357.625, 56.6028, 0.4068 ) }
    apic_6 { pt3dadd( 349.508, 357.475, 56.8187, 0.3814 ) }
    apic_6 { pt3dadd( 350.618, 357.537, 56.2383, 0.4068 ) }
    apic_6 { pt3dadd( 351.702, 357.461, 56.8224, 0.4576 ) }
    apic_6 { pt3dadd( 352.556, 356.753, 56.3928, 0.5338 ) }
    apic_6 { pt3dadd( 353.523, 356.247, 56.8991, 0.6102 ) }
    apic_6 { pt3dadd( 354.591, 355.949, 57.0819, 0.6356 ) }
    apic_6 { pt3dadd( 355.628, 355.578, 57.3241, 0.6356 ) }
    apic_6 { pt3dadd( 356.401, 354.85, 58.1, 0.6102 ) }
    apic_6 { pt3dadd( 356.997, 354.049, 57.0534, 0.5848 ) }
    apic_6 { pt3dadd( 357.526, 353.211, 57.6134, 0.5338 ) }
    apic_6 { pt3dadd( 358.608, 353.209, 57.6884, 0.4322 ) }
    apic_6 { pt3dadd( 359.684, 353.458, 57.2068, 0.356 ) }
    apic_6 { pt3dadd( 360.775, 353.277, 56.8254, 0.305 ) }
    apic_6 { pt3dadd( 361.692, 352.898, 58.0703, 0.356 ) }
    apic_6 { pt3dadd( 362.714, 352.558, 57.9326, 0.4322 ) }
    apic_6 { pt3dadd( 363.646, 352.438, 59.1282, 0.5084 ) }
    apic_6 { pt3dadd( 364.592, 352.091, 59.2558, 0.483 ) }
    apic_6 { pt3dadd( 365.676, 352.329, 58.856, 0.3814 ) }
    apic_6 { pt3dadd( 366.202, 353.002, 60.06, 0.2796 ) }
    apic_6 { pt3dadd( 367.201, 352.654, 61.0033, 0.2288 ) }
    apic_6 { pt3dadd( 368.326, 352.581, 61.1965, 0.2288 ) }
    apic_6 { pt3dadd( 369.408, 352.383, 60.734, 0.2542 ) }
    apic_6 { pt3dadd( 370.447, 352.06, 59.9528, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_6 { pt3dadd( 371.551, 352.065, 59.3947, 0.356 ) }
    apic_6 { pt3dadd( 372.22, 352.123, 57.6542, 0.3814 ) }
    apic_6 { pt3dadd( 372.961, 352.454, 57.5786, 0.3814 ) }
    apic_6 { pt3dadd( 373.891, 352.692, 59.0663, 0.3814 ) }
    apic_6 { pt3dadd( 375.018, 352.574, 59.134, 0.356 ) }
    apic_6 { pt3dadd( 376.151, 352.725, 59.0388, 0.305 ) }
    apic_6 { pt3dadd( 377.24, 352.681, 58.4506, 0.2542 ) }
    apic_6 { pt3dadd( 378.251, 352.274, 57.969, 0.2796 ) }
    apic_6 { pt3dadd( 379.309, 351.882, 58.0801, 0.356 ) }
    apic_6 { pt3dadd( 380.401, 351.607, 58.5371, 0.4322 ) }
    apic_6 { pt3dadd( 381.483, 351.261, 58.5785, 0.4322 ) }
    apic_6 { pt3dadd( 382.548, 350.848, 58.4514, 0.3814 ) }
    apic_6 { pt3dadd( 383.471, 350.206, 58.8011, 0.356 ) }
    apic_6 { pt3dadd( 384.405, 349.606, 59.4264, 0.3814 ) }
    apic_6 { pt3dadd( 385.459, 349.276, 60.0393, 0.4576 ) }
    apic_6 { pt3dadd( 386.457, 348.724, 60.0146, 0.483 ) }
    apic_6 { pt3dadd( 387.433, 348.159, 60.3868, 0.483 ) }
    apic_6 { pt3dadd( 388.431, 347.609, 60.2, 0.483 ) }
    apic_6 { pt3dadd( 389.413, 347.031, 60.1224, 0.5338 ) }
    apic_6 { pt3dadd( 390.431, 346.571, 60.2806, 0.5338 ) }
    apic_6 { pt3dadd( 391.407, 346.137, 60.1748, 0.4576 ) }
    apic_6 { pt3dadd( 392.393, 345.642, 59.7257, 0.3304 ) }
    apic_6 { pt3dadd( 393.272, 344.933, 59.5118, 0.2542 ) }
    apic_6 { pt3dadd( 394.298, 344.591, 59.6834, 0.2288 ) }
    apic_6 { pt3dadd( 395.071, 343.838, 59.7341, 0.2542 ) }
    apic_6 { pt3dadd( 396.013, 343.257, 60.0743, 0.3304 ) }
    apic_6 { pt3dadd( 396.513, 342.247, 59.7587, 0.4576 ) }
    apic_6 { pt3dadd( 396.778, 341.153, 59.7187, 0.5592 ) }
    apic_6 { pt3dadd( 397.231, 340.116, 59.7559, 0.5848 ) }
    apic_6 { pt3dadd( 397.667, 339.085, 59.9183, 0.5084 ) }
    apic_6 { pt3dadd( 398.039, 338.162, 59.2841, 0.4068 ) }
    apic_6 { pt3dadd( 398.113, 337.123, 58.8087, 0.3304 ) }
    apic_6 { pt3dadd( 398.684, 336.222, 59.36, 0.356 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 33/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 415.272, 67.8519, 129.671, 0.5084 ) }
    apic_12 { pt3dadd( 415.574, 67.9849, 131.331, 0.2796 ) }
    apic_12 { pt3dadd( 416.033, 68.1869, 133.848, 0.2542 ) }
    apic_12 { pt3dadd( 416.491, 68.3888, 136.365, 0.2288 ) }
    apic_12 { pt3dadd( 416.949, 68.5906, 138.883, 0.2288 ) }
    apic_12 { pt3dadd( 417.408, 68.7925, 141.4, 0.2288 ) }
    apic_12 { pt3dadd( 418.177, 69.1708, 141.4, 0.2288 ) }
    apic_12 { pt3dadd( 419.168, 69.7357, 141.4, 0.2542 ) }
    apic_12 { pt3dadd( 420.194, 70.2405, 141.4, 0.2796 ) }
    apic_12 { pt3dadd( 421.315, 70.3536, 141.4, 0.305 ) }
    apic_12 { pt3dadd( 422.459, 70.357, 141.4, 0.2796 ) }
    apic_12 { pt3dadd( 423.399, 70.9254, 141.4, 0.2542 ) }
    apic_12 { pt3dadd( 424.061, 71.8461, 141.4, 0.2288 ) }
    apic_12 { pt3dadd( 424.715, 72.7846, 141.4, 0.2288 ) }
    apic_12 { pt3dadd( 425.415, 73.6898, 141.4, 0.2288 ) }
    apic_12 { pt3dadd( 426.14, 74.5738, 141.4, 0.2288 ) }
    apic_12 { pt3dadd( 427.284, 74.5888, 141.4, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 50/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 415.272, 67.8519, 129.671, 0.5084 ) }
    apic_11 { pt3dadd( 415.35, 67.4737, 130.077, 0.2288 ) }
    apic_11 { pt3dadd( 415.386, 66.352, 130.444, 0.2288 ) }
    apic_11 { pt3dadd( 415.208, 65.2359, 130.822, 0.2288 ) }
    apic_11 { pt3dadd( 415.16, 64.0985, 131.017, 0.2288 ) }
    apic_11 { pt3dadd( 415.107, 62.9562, 131.04, 0.2288 ) }
    apic_11 { pt3dadd( 414.718, 61.8993, 131.369, 0.2288 ) }
    apic_11 { pt3dadd( 414.445, 60.8861, 132.467, 0.2542 ) }
    apic_11 { pt3dadd( 413.961, 59.8787, 133.0, 0.305 ) }
    apic_11 { pt3dadd( 413.251, 58.9975, 133.0, 0.356 ) }
    apic_11 { pt3dadd( 412.284, 58.387, 133.0, 0.356 ) }
    apic_11 { pt3dadd( 411.311, 57.8008, 133.0, 0.305 ) }
    apic_11 { pt3dadd( 410.209, 57.4987, 133.0, 0.2542 ) }
    apic_11 { pt3dadd( 409.133, 57.1268, 133.0, 0.2288 ) }
    apic_11 { pt3dadd( 408.154, 56.5373, 133.0, 0.2288 ) }
    apic_11 { pt3dadd( 407.147, 55.999, 133.0, 0.2288 ) }
    apic_11 { pt3dadd( 406.223, 55.3256, 133.0, 0.2288 ) }
    apic_11 { pt3dadd( 405.279, 54.7602, 133.0, 0.2542 ) }
    apic_11 { pt3dadd( 404.232, 54.4362, 133.0, 0.2796 ) }
    apic_11 { pt3dadd( 403.427, 53.7209, 132.427, 0.305 ) }
    apic_11 { pt3dadd( 402.467, 53.2764, 131.693, 0.2796 ) }
    apic_11 { pt3dadd( 401.874, 52.4318, 131.344, 0.2542 ) }
    apic_11 { pt3dadd( 401.366, 51.4169, 131.087, 0.2288 ) }
    apic_11 { pt3dadd( 401.099, 50.3961, 130.152, 0.2288 ) }
    apic_11 { pt3dadd( 401.025, 49.2637, 129.93, 0.2288 ) }
    apic_11 { pt3dadd( 400.749, 48.198, 129.217, 0.2288 ) }
    apic_11 { pt3dadd( 400.195, 47.2153, 128.8, 0.2288 ) }
    apic_11 { pt3dadd( 399.63, 46.2205, 128.8, 0.2288 ) }
    apic_11 { pt3dadd( 399.056, 45.2316, 128.8, 0.2288 ) }
    apic_11 { pt3dadd( 398.591, 44.2048, 128.8, 0.2288 ) }
    apic_11 { pt3dadd( 398.232, 43.1327, 128.697, 0.2288 ) }
    apic_11 { pt3dadd( 397.642, 42.1613, 128.414, 0.2288 ) }
    apic_11 { pt3dadd( 397.062, 41.1842, 128.24, 0.2288 ) }
    apic_11 { pt3dadd( 396.666, 40.1169, 128.212, 0.2288 ) }
    apic_11 { pt3dadd( 396.308, 39.0547, 127.826, 0.2288 ) }
    apic_11 { pt3dadd( 395.835, 38.0523, 127.133, 0.2288 ) }
    apic_11 { pt3dadd( 395.395, 37.0276, 126.539, 0.2288 ) }
    apic_11 { pt3dadd( 394.799, 36.0987, 126.125, 0.2288 ) }
    apic_11 { pt3dadd( 394.098, 35.2051, 126.0, 0.2288 ) }
    apic_11 { pt3dadd( 393.376, 34.3221, 126.0, 0.2288 ) }
    apic_11 { pt3dadd( 392.445, 33.6997, 125.8, 0.2288 ) }
    apic_11 { pt3dadd( 391.574, 33.0792, 124.909, 0.2288 ) }
    apic_11 { pt3dadd( 390.939, 32.1789, 124.39, 0.2288 ) }
    apic_11 { pt3dadd( 390.262, 31.2608, 124.32, 0.2288 ) }
    apic_11 { pt3dadd( 389.642, 30.3009, 124.32, 0.2288 ) }
    apic_11 { pt3dadd( 388.931, 29.4074, 124.32, 0.2288 ) }
    apic_11 { pt3dadd( 388.199, 28.5293, 124.386, 0.2288 ) }
    apic_11 { pt3dadd( 387.501, 27.6432, 124.825, 0.2288 ) }
    apic_11 { pt3dadd( 386.77, 26.7735, 124.618, 0.2288 ) }
    apic_11 { pt3dadd( 386.051, 25.9156, 124.047, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_11 { pt3dadd( 385.299, 25.0536, 124.04, 0.4068 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_256, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_256 = new SectionList()
    soma_0 ModelViewParmSubset_256.append()
    axon_0 ModelViewParmSubset_256.append()
    axon_1 ModelViewParmSubset_256.append()

    // Group: {name=ModelViewParmSubset_257, groups=[], sections=[dend_37, dend_36, dend_13, dend_8, dend_7, dend_2, dend_1, apic_0, dend_0, dend_27, dend_14, dend_12, dend_9, dend_6, dend_3, apic_17, apic_1, dend_33, dend_28, dend_26, dend_15, dend_11, dend_10, dend_5, dend_4, apic_19, apic_18, apic_16, apic_2, dend_35, dend_34, dend_32, dend_29, dend_23, dend_16, apic_15, apic_3, dend_31, dend_30, dend_25, dend_24, dend_20, dend_17, apic_14, apic_4, dend_22, dend_21, dend_19, dend_18, apic_9, apic_5, apic_13, apic_10, apic_8, apic_7, apic_6, apic_12, apic_11]}
    ModelViewParmSubset_257 = new SectionList()
    dend_37 ModelViewParmSubset_257.append()
    dend_36 ModelViewParmSubset_257.append()
    dend_13 ModelViewParmSubset_257.append()
    dend_8 ModelViewParmSubset_257.append()
    dend_7 ModelViewParmSubset_257.append()
    dend_2 ModelViewParmSubset_257.append()
    dend_1 ModelViewParmSubset_257.append()
    apic_0 ModelViewParmSubset_257.append()
    dend_0 ModelViewParmSubset_257.append()
    dend_27 ModelViewParmSubset_257.append()
    dend_14 ModelViewParmSubset_257.append()
    dend_12 ModelViewParmSubset_257.append()
    dend_9 ModelViewParmSubset_257.append()
    dend_6 ModelViewParmSubset_257.append()
    dend_3 ModelViewParmSubset_257.append()
    apic_17 ModelViewParmSubset_257.append()
    apic_1 ModelViewParmSubset_257.append()
    dend_33 ModelViewParmSubset_257.append()
    dend_28 ModelViewParmSubset_257.append()
    dend_26 ModelViewParmSubset_257.append()
    dend_15 ModelViewParmSubset_257.append()
    dend_11 ModelViewParmSubset_257.append()
    dend_10 ModelViewParmSubset_257.append()
    dend_5 ModelViewParmSubset_257.append()
    dend_4 ModelViewParmSubset_257.append()
    apic_19 ModelViewParmSubset_257.append()
    apic_18 ModelViewParmSubset_257.append()
    apic_16 ModelViewParmSubset_257.append()
    apic_2 ModelViewParmSubset_257.append()
    dend_35 ModelViewParmSubset_257.append()
    dend_34 ModelViewParmSubset_257.append()
    dend_32 ModelViewParmSubset_257.append()
    dend_29 ModelViewParmSubset_257.append()
    dend_23 ModelViewParmSubset_257.append()
    dend_16 ModelViewParmSubset_257.append()
    apic_15 ModelViewParmSubset_257.append()
    apic_3 ModelViewParmSubset_257.append()
    dend_31 ModelViewParmSubset_257.append()
    dend_30 ModelViewParmSubset_257.append()
    dend_25 ModelViewParmSubset_257.append()
    dend_24 ModelViewParmSubset_257.append()
    dend_20 ModelViewParmSubset_257.append()
    dend_17 ModelViewParmSubset_257.append()
    apic_14 ModelViewParmSubset_257.append()
    apic_4 ModelViewParmSubset_257.append()
    dend_22 ModelViewParmSubset_257.append()
    dend_21 ModelViewParmSubset_257.append()
    dend_19 ModelViewParmSubset_257.append()
    dend_18 ModelViewParmSubset_257.append()
    apic_9 ModelViewParmSubset_257.append()
    apic_5 ModelViewParmSubset_257.append()
    apic_13 ModelViewParmSubset_257.append()
    apic_10 ModelViewParmSubset_257.append()
    apic_8 ModelViewParmSubset_257.append()
    apic_7 ModelViewParmSubset_257.append()
    apic_6 ModelViewParmSubset_257.append()
    apic_12 ModelViewParmSubset_257.append()
    apic_11 ModelViewParmSubset_257.append()

    // Group: {name=dend, groups=[], sections=[dend_37, dend_36, dend_13, dend_8, dend_7, dend_2, dend_1, dend_0, dend_27, dend_14, dend_12, dend_9, dend_6, dend_3, dend_33, dend_28, dend_26, dend_15, dend_11, dend_10, dend_5, dend_4, dend_35, dend_34, dend_32, dend_29, dend_23, dend_16, dend_31, dend_30, dend_25, dend_24, dend_20, dend_17, dend_22, dend_21, dend_19, dend_18]}
    dend = new SectionList()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_0 dend.append()
    dend_27 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_33 dend.append()
    dend_28 dend.append()
    dend_26 dend.append()
    dend_15 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_23 dend.append()
    dend_16 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_17 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=apic, groups=[], sections=[apic_0, apic_17, apic_1, apic_19, apic_18, apic_16, apic_2, apic_15, apic_3, apic_14, apic_4, apic_9, apic_5, apic_13, apic_10, apic_8, apic_7, apic_6, apic_12, apic_11]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_17 apic.append()
    apic_1 apic.append()
    apic_19 apic.append()
    apic_18 apic.append()
    apic_16 apic.append()
    apic_2 apic.append()
    apic_15 apic.append()
    apic_3 apic.append()
    apic_14 apic.append()
    apic_4 apic.append()
    apic_9 apic.append()
    apic_5 apic.append()
    apic_13 apic.append()
    apic_10 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()
    apic_12 apic.append()
    apic_11 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_12081, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_12081 = new SectionList()
    soma_0 OneSecGrp_SectionRef_12081.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, apic_14, apic_14, apic_4, apic_4, apic_4, apic_4, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_5, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.41  // units: uF/cm2
    forsec dend cm = 2.41  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 87.55  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0019314326  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 0.004652238  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.3221471  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 8.0676115E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.0028963906  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.7002557E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 6.463046E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.06675621  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 7.1672804E-4  // units: S cm-2
        e_pas_nml2 = -94.96627  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 9.800171E-4  // units: S cm-2
        e_pas_nml2 = -94.96627  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 5.007056E-6  // units: S cm-2
        e_pas_nml2 = -94.96627  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 2.4252391E-5  // units: S cm-2
        e_pas_nml2 = -94.96627  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 1.5103264E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0018091077  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_37 nseg = 5
    dend_36 nseg = 5
    dend_7 nseg = 7
    dend_0 nseg = 5
    dend_12 nseg = 7
    dend_3 nseg = 3
    apic_17 nseg = 5
    dend_26 nseg = 7
    dend_11 nseg = 5
    dend_10 nseg = 3
    dend_5 nseg = 5
    dend_4 nseg = 3
    apic_19 nseg = 3
    apic_16 nseg = 5
    dend_34 nseg = 3
    dend_32 nseg = 5
    apic_15 nseg = 3
    dend_30 nseg = 3
    dend_25 nseg = 7
    dend_24 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_19 nseg = 3
    dend_18 nseg = 7
    apic_9 nseg = 7
    apic_13 nseg = 5
    apic_10 nseg = 13
    apic_7 nseg = 5
    apic_6 nseg = 5
    apic_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473862496


