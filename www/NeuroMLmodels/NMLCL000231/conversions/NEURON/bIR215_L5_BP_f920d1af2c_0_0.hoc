// Cell: bIR215_L5_BP_f920d1af2c_0_0
/*
{
  "id" : "bIR215_L5_BP_f920d1af2c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-4.02723, 9.23924, 3.04307, 0.83", "-8.19081, 12.4664, 3.67099, 1.11", "-10.6457, 14.3678, 3.99763, 0.83", "-13.0307, 16.1991, 4.29029, 0.83", "-14.4428, 17.2434, 4.45066, 1.11", "-18.8649, 20.5066, 4.96465, 1.11", "-26.7742, 26.0932, 5.87323, 0.83", "-29.6236, 28.0291, 6.17327, 0.83", "-31.8801, 29.5166, 6.35963, 0.83", "-34.0804, 30.9908, 6.52095, 0.83", "-35.8716, 32.2059, 6.60798, 0.55", "-37.2179, 33.0286, 6.69632, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.80895, 6.32984, -6.28525, 0.55", "7.78125, 6.97281, -6.94902, 0.55", "9.50598, 7.13512, -7.82733, 0.83", "12.2356, 7.30785, -9.45885, 0.55", "13.5533, 7.39123, -10.2464, 1.38", "16.7932, 7.59624, -12.1828, 0.55", "18.1731, 7.52682, -13.1068, 0.83", "25.3111, 6.25364, -18.2982, 0.55", "26.0016, 6.08243, -18.8693, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.696027, -11.5374, 3.60907, 1.11", "-0.76698, -17.7976, 5.85334, 1.11", "-0.795875, -20.3472, 6.76735, 0.83", "-0.834266, -23.7344, 7.98167, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.816595, 9.42088, -1.34692, 1.11", "0.845608, 11.0264, -1.33383, 1.11", "0.874602, 13.6459, -1.2184, 1.38", "0.87841, 13.7919, -1.20908, 1.38", "1.0312, 15.6002, -1.06254, 0.83", "1.25736, 17.5143, -0.797104, 0.83", "1.66411, 19.6798, -0.216673, 0.83", "1.90671, 20.5036, 0.115402, 0.83", "2.15407, 21.102, 0.424599, 1.11", "2.89617, 22.5628, 1.23489, 0.55", "3.76115, 24.0901, 2.20097, 0.83", "4.92264, 25.6674, 3.31842, 0.55", "5.52526, 26.3254, 3.83361, 0.83", "6.36009, 27.2173, 4.62605, 0.55", "7.38437, 28.3512, 5.68756, 0.55", "8.79788, 30.0548, 7.29285, 0.55", "10.3535, 32.0006, 9.06466, 0.55", "11.3126, 33.2628, 10.3667, 0.55", "12.4613, 34.8581, 12.183, 0.55", "12.6966, 35.1783, 12.5924, 0.83", "13.3101, 36.0246, 13.742, 0.55", "13.8347, 36.6854, 14.6492, 0.83", "15.029, 38.4842, 16.7945, 0.55", "15.4988, 39.1413, 17.4341, 0.83", "15.9591, 39.628, 17.8833, 0.55", "16.4275, 40.0485, 18.2404, 0.83", "17.4841, 40.8344, 18.9102, 0.83", "18.8962, 41.9031, 19.6595, 0.83", "19.7729, 42.6077, 20.0175, 0.55", "20.4393, 43.2153, 20.2942, 0.55", "22.1897, 44.7858, 20.9915, 0.83", "23.326, 45.7931, 21.3931, 0.55", "25.0606, 47.27, 21.9282, 0.55", "26.6601, 48.5113, 22.3518, 0.55", "28.0967, 49.5645, 22.6905, 0.55", "29.9237, 50.8014, 23.0327, 0.55", "31.0481, 51.4125, 23.2048, 0.55", "31.8271, 51.759, 23.2283, 0.55", "32.876, 52.0279, 23.1721, 0.55", "34.4613, 52.1751, 22.9619, 0.55", "35.4567, 52.1436, 22.7939, 0.55", "36.9017, 52.0591, 22.6479, 0.55", "39.6262, 51.9846, 22.6101, 0.55", "41.7456, 52.0245, 22.7306, 0.55", "43.975, 52.1741, 22.9916, 0.55", "45.3912, 52.3195, 23.2722, 0.55", "49.0358, 53.0371, 24.2456, 0.55", "51.1703, 53.6328, 24.9873, 0.55", "52.7516, 54.1887, 25.6981, 0.55", "53.7041, 54.6945, 26.1686, 0.55", "54.805, 55.4391, 26.7076, 0.55", "56.6824, 56.8993, 27.4427, 0.55", "57.1193, 57.2503, 27.5485, 0.55", "58.3836, 58.1907, 27.7662, 0.55", "59.5427, 59.1881, 27.9613, 0.83", "60.1761, 59.7411, 28.0574, 0.55", "61.126, 60.6869, 28.1621, 0.83", "65.9808, 65.7386, 30.0699, 0.83", "70.2066, 71.499, 31.3692, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-37.2179, 33.0286, 6.69632, 0.55", "-38.5931, 34.1573, 5.77339, 0.55", "-40.0885, 35.3846, 4.7698, 0.55", "-41.8931, 36.8657, 3.55868, 0.55", "-43.3832, 38.0888, 2.55862, 0.83", "-44.6319, 39.1136, 1.72058, 0.55", "-46.9497, 41.016, 0.16505, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-37.2179, 33.0286, 6.69632, 0.55", "-39.7066, 33.4961, 6.38717, 0.55", "-42.3565, 33.9067, 6.32163, 0.55", "-45.3619, 34.3663, 6.32076, 0.55", "-49.7173, 34.9789, 6.71956, 0.55", "-53.3635, 35.3816, 7.3118, 0.55", "-57.1889, 35.7425, 8.09613, 0.55", "-60.8892, 35.8347, 9.25133, 0.55", "-64.0766, 35.5987, 10.5517, 0.55", "-68.051, 35.0194, 12.5966, 0.55", "-69.7806, 34.6369, 13.7263, 0.55", "-71.6494, 34.2026, 15.0274, 0.55", "-74.9448, 33.1885, 17.1688, 0.55", "-76.6969, 32.6583, 18.0309, 0.55", "-78.5321, 32.0466, 18.9223, 0.55", "-80.7131, 31.3502, 19.7601, 0.55", "-83.0829, 30.6438, 20.606, 0.55", "-86.4647, 29.6283, 21.7389, 0.55", "-90.9789, 28.5812, 22.8479, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "26.0016, 6.08243, -18.8693, 0.55", "32.583, 8.86612, -20.5756, 0.55", "36.4691, 10.1079, -22.0463, 0.55", "40.3439, 11.1501, -23.5081, 0.55", "43.0123, 11.7595, -24.4784, 0.55", "46.9275, 12.5703, -25.8437, 0.55", "55.1016, 14.0383, -28.8839, 0.55", "64.4379, 15.4954, -32.92, 0.55", "69.046, 15.8568, -35.1085, 0.55", "71.5387, 15.9547, -36.4195, 0.55", "74.2784, 16.0479, -37.9646, 0.55", "79.1915, 16.0929, -40.6702, 0.55", "81.0001, 15.9991, -41.6825, 0.55", "88.6683, 15.6369, -46.5602, 0.55", "94.1118, 15.3656, -50.4042, 0.55", "97.2414, 15.2443, -52.7112, 0.55", "100.368, 15.0991, -55.0034, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.0016, 6.08243, -18.8693, 0.83", "28.5973, 7.87423, -18.9755, 0.83", "30.0824, 8.89272, -19.1066, 0.55", "32.2695, 10.4301, -19.496, 0.83", "33.7389, 11.5, -19.8065, 0.55", "35.7617, 13.0338, -20.2071, 0.83", "38.1897, 14.9332, -20.5983, 0.55", "39.4153, 15.7981, -20.7365, 0.55", "42.2532, 17.4032, -20.8229, 0.83", "44.84, 18.5612, -20.5349, 0.55", "46.2839, 19.2018, -20.2302, 0.83", "48.4429, 20.2265, -19.5408, 0.55", "51.5325, 21.781, -18.1431, 0.55", "55.8306, 23.7242, -15.9585, 0.55", "59.931, 25.4429, -13.5715, 0.55", "63.1803, 26.7724, -11.6175, 0.55", "68.5349, 28.9919, -8.36857, 0.55", "72.4442, 30.7378, -5.90926, 0.55", "74.7911, 32.0028, -4.34677, 0.55", "79.0862, 34.7975, -1.45583, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.834266, -23.7344, 7.98167, 0.83", "-1.03818, -26.4373, 7.87143, 0.83", "-1.23685, -29.0706, 7.76403, 0.83", "-1.45867, -32.0108, 7.64412, 0.83", "-1.5745, -33.5461, 7.5815, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.834266, -23.7344, 7.98167, 0.55", "-0.350526, -25.3588, 9.26022, 0.55", "0.0241452, -27.3618, 10.8753, 0.55", "0.0920775, -30.0145, 13.021, 0.55", "0.0412766, -31.0506, 13.8692, 0.83", "-0.385805, -33.7109, 16.288, 0.55", "-0.722286, -35.0924, 17.5419, 0.55", "-1.4537, -37.7826, 20.0817, 0.83", "-2.13334, -39.7878, 22.0707, 0.55", "-2.83264, -41.4518, 23.6591, 0.55", "-4.21531, -44.6082, 26.5989, 0.55", "-5.30939, -47.1238, 28.9139, 0.55", "-6.15207, -49.1377, 30.8047, 0.55", "-6.92004, -51.2681, 32.7683, 0.28", "-7.16099, -52.1506, 33.5667, 0.55", "-7.5473, -53.7777, 34.9586, 0.28", "-7.73785, -56.295, 36.8083, 0.55", "-10.4512, -64.8069, 43.0326, 0.55", "-13.5466, -72.6955, 49.8697, 0.55", "-16.5084, -79.1694, 58.1081, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.55", "-2.9529, -54.079, 0.177868, 0.55", "-3.75134, -69.0578, 0.177868, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-46.9497, 41.016, 0.16505, 0.55", "-50.8654, 41.6011, 2.38483, 0.55", "-52.5077, 41.7623, 3.53027, 0.83", "-54.4216, 41.8607, 5.13634, 0.55", "-55.8809, 41.9397, 6.50287, 0.83", "-59.7023, 42.2863, 10.044, 0.55", "-61.1481, 42.4429, 11.3958, 0.28", "-63.5499, 42.7384, 13.861, 0.55", "-66.7727, 43.1542, 17.1523, 0.55", "-69.2242, 43.467, 19.5337, 0.55", "-72.5033, 43.8807, 22.6057, 0.28", "-73.3593, 43.9915, 23.2963, 0.55", "-75.133, 44.2404, 24.6556, 0.28", "-76.3411, 44.4382, 25.4602, 0.55", "-78.8164, 44.8173, 26.8819, 0.28", "-80.2749, 44.955, 27.6414, 0.55", "-82.8532, 45.0065, 29.0095, 0.28", "-84.5876, 45.0276, 29.8664, 0.55", "-94.9937, 44.4456, 39.9231, 0.55", "-104.49, 42.4925, 50.6826, 0.55", "-113.649, 39.1692, 61.3979, 0.55", "-122.824, 34.174, 71.4295, 0.55", "-130.349, 29.7534, 82.9885, 0.55", "-138.935, 25.8777, 93.989, 0.55", "-147.605, 24.361, 105.49, 0.55", "-156.27, 21.6992, 116.786, 0.55", "-164.629, 19.9938, 128.49, 0.55", "-172.321, 18.068, 140.61, 0.55", "-178.646, 14.4824, 153.136, 0.55", "-185.055, 12.2385, 165.929, 0.55", "-191.706, 8.55979, 178.257, 0.55", "-196.694, 4.23039, 191.147, 0.55", "-199.235, 0.81497, 204.99, 0.55", "-201.79, -5.25057, 217.892, 0.55", "-202.291, -11.6514, 230.874, 0.55", "-203.535, -17.4245, 244.099, 0.55", "-206.281, -22.1067, 257.526, 0.55", "-211.939, -24.4492, 270.651, 0.55", "-216.405, -28.4277, 283.841, 0.55", "-218.087, -30.0953, 298.13, 0.55", "-222.037, -30.628, 312.055, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-46.9497, 41.016, 0.16505, 0.55", "-48.0449, 42.1894, -1.79533, 0.55", "-48.7373, 43.4585, -3.86218, 0.55", "-49.322, 44.9292, -5.98583, 0.55", "-49.6881, 45.8501, -7.31563, 0.55", "-50.356, 47.53, -9.74135, 0.83", "-50.8446, 48.759, -11.516, 0.55", "-51.2645, 50.4643, -14.0748, 0.83", "-51.293, 51.5345, -15.4379, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-90.9789, 28.5812, 22.8479, 0.28", "-91.5496, 27.1933, 23.2446, 0.28", "-91.8354, 26.5737, 23.3762, 0.28", "-92.2036, 25.689, 23.5293, 0.55", "-92.5019, 24.9159, 23.6659, 0.28", "-92.9368, 23.7454, 23.8839, 0.55", "-94.123, 20.3342, 24.5597, 0.28", "-94.5116, 19.1049, 24.71, 0.55", "-95.1042, 17.1891, 24.8867, 0.28", "-95.446, 16.0258, 24.9476, 0.55", "-95.6842, 15.2171, 24.9741, 0.28", "-95.9544, 14.2918, 25.0102, 0.55", "-96.7403, 11.2409, 25.1757, 0.28", "-96.9938, 10.3051, 25.2011, 0.55", "-97.4681, 8.81444, 25.1322, 0.28", "-97.8842, 7.82188, 25.0392, 0.28", "-98.2727, 7.14095, 24.9738, 0.55", "-99.6451, 5.22135, 24.868, 0.28", "-100.287, 4.44157, 24.8491, 0.55", "-101.876, 2.6197, 24.7424, 0.28", "-103.48, 0.977375, 24.6465, 0.28", "-105.241, -0.634689, 24.5296, 0.28", "-106.054, -1.25731, 24.5014, 0.55", "-109.656, -7.11081, 24.7889, 0.55", "-113.561, -12.564, 26.3168, 0.55", "-117.523, -18.1657, 26.8134, 0.55", "-121.719, -23.6144, 26.6436, 0.55", "-126.102, -28.8438, 25.7724, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-90.9789, 28.5812, 22.8479, 0.55", "-91.7128, 28.5182, 22.9538, 0.55", "-93.781, 28.3534, 23.5217, 0.55", "-94.5578, 28.273, 23.7776, 0.55", "-96.384, 28.0295, 24.4096, 0.55", "-99.1937, 27.6784, 25.2438, 0.55", "-100.654, 27.5401, 25.6495, 0.28", "-102.927, 27.2735, 26.2381, 0.55", "-104.615, 27.0383, 26.6155, 0.55", "-105.328, 26.9343, 26.7766, 0.28", "-109.604, 26.3081, 27.7374, 0.55", "-111.603, 25.9181, 28.0673, 0.28", "-114.301, 25.3757, 28.354, 0.28", "-116.627, 24.937, 28.4631, 0.55", "-125.699, 24.6349, 30.8157, 0.55", "-134.45, 24.1375, 34.1467, 0.55", "-142.68, 22.7272, 38.4123, 0.55", "-150.668, 22.9175, 43.3194, 0.55", "-157.471, 22.8636, 49.7732, 0.55", "-162.91, 23.3797, 57.3937, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "100.368, 15.0991, -55.0034, 0.55", "105.982, 16.934, -59.6536, 0.55", "107.769, 17.4227, -61.227, 0.55", "110.012, 17.9639, -63.1607, 0.55", "114.095, 18.8827, -66.9048, 0.55", "118.38, 19.6545, -70.8971, 0.55", "120.491, 19.8712, -72.7769, 0.83", "122.245, 19.9165, -74.4398, 0.55", "123.574, 19.8292, -75.8008, 0.83", "126.83, 19.1599, -79.245, 0.55", "129.537, 18.3674, -82.0705, 0.55", "132.648, 17.4526, -85.1727, 0.55", "136.104, 16.5206, -88.7046, 0.55", "138.429, 15.837, -91.1222, 0.55", "141.057, 15.0492, -93.9279, 0.55", "143.324, 14.4272, -96.5116, 0.55", "144.744, 14.139, -98.3315, 0.55", "146.601, 13.5248, -102.028, 0.55", "147.634, 13.053, -104.334, 0.55", "148.592, 12.2446, -107.393, 0.55", "149.974, 10.692, -112.548, 0.55", "150.267, 10.2946, -113.706, 0.28", "154.019, 5.31999, -127.754, 0.28", "155.244, 3.90259, -131.878, 0.83", "159.999, -1.35304, -146.461, 0.83", "162.425, -4.05434, -153.194, 0.83", "163.569, -5.24794, -155.901, 0.55", "164.848, -6.40642, -158.534, 0.55", "168.221, -8.57101, -163.369, 0.55", "171.764, -10.4593, -167.594, 0.28", "172.776, -10.7048, -167.791, 0.55", "174.959, -11.0049, -167.477, 0.28", "176.293, -11.0739, -167.103, 0.55", "177.681, -11.1504, -166.592, 0.28", "179.336, -11.1504, -165.913, 0.55", "181.809, -11.0509, -165.178, 0.28", "183.802, -11.0398, -164.645, 0.55", "186.001, -10.9022, -164.249, 0.28", "188.998, -10.7364, -163.978, 0.55", "192.359, -10.4967, -163.885, 0.55", "195.319, -10.2741, -164.004, 0.28", "199.419, -9.95542, -164.399, 0.55", "206.517, -9.29823, -165.858, 0.55", "209.65, -8.89107, -166.9, 0.55", "210.996, -8.67734, -167.498, 0.83", "213.568, -8.2797, -168.875, 0.55", "215.349, -7.94504, -169.951, 0.83", "220.13, -6.92543, -172.916, 0.55", "223.074, -6.51252, -174.777, 0.28", "224.316, -6.39867, -175.413, 0.55", "227.736, -6.35357, -176.744, 0.28", "228.943, -6.43664, -177.119, 0.55", "231.431, -6.71529, -177.499, 0.28", "233.972, -7.1875, -177.428, 0.55", "239.099, -8.30426, -176.376, 0.28", "241.465, -8.89124, -175.634, 0.55", "244.996, -9.93822, -174.323, 0.28", "249.449, -11.2256, -172.513, 0.55", "252.664, -12.108, -171.16, 0.55", "258.211, -13.4568, -168.748, 0.28", "260.484, -13.9298, -167.954, 0.55", "264.396, -14.5771, -167.033, 0.28", "268.273, -14.9627, -166.416, 0.55", "270.387, -14.9728, -166.399, 0.28", "272.276, -14.746, -166.563, 0.55", "277.594, -13.8484, -167.57, 0.28", "281.367, -12.9517, -168.383, 0.28", "284.625, -11.937, -169.169, 0.55", "288.217, -10.7369, -170.234, 0.28", "289.115, -10.3732, -170.479, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "100.368, 15.0991, -55.0034, 0.55", "101.374, 12.5419, -56.6249, 0.55", "102.026, 10.3558, -57.8464, 0.28", "102.617, 8.35442, -58.7935, 0.55", "104.088, 4.13781, -60.8369, 0.28", "104.174, 3.8712, -61.0036, 0.55", "104.668, 2.47803, -61.9919, 0.28", "104.977, 1.3113, -62.9965, 0.55", "105.234, 0.0839386, -64.1857, 0.28", "105.539, -1.59661, -65.8858, 0.55", "106.3, -5.81612, -70.0757, 0.55", "106.952, -9.66771, -73.9633, 0.55", "107.444, -12.7497, -77.0753, 0.55", "107.871, -15.7853, -80.0822, 0.55", "107.978, -16.5696, -80.8262, 0.28", "108.114, -17.404, -81.5516, 0.55", "108.404, -18.5464, -82.4484, 0.28", "109.125, -20.5687, -83.8643, 0.55", "110.818, -24.3973, -85.9497, 0.55", "111.741, -26.4522, -86.8826, 0.28", "112.56, -28.5562, -87.9265, 0.55", "113.494, -31.529, -89.5054, 0.28", "114.097, -33.9463, -90.8392, 0.55", "114.847, -37.5783, -92.8435, 0.28", "115.646, -41.332, -94.8016, 0.55", "116.737, -46.7907, -97.6935, 0.28", "117.257, -49.7078, -99.2456, 0.55", "117.743, -52.6977, -100.904, 0.28", "118.149, -55.3354, -102.526, 0.28", "118.776, -58.6259, -104.833, 0.55", "119.56, -61.6518, -106.891, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "79.0862, 34.7975, -1.45583, 0.55", "80.9884, 34.5964, -1.14041, 0.55", "82.3702, 34.4065, -1.04528, 0.55", "85.3887, 33.9677, -0.996931, 0.55", "86.741, 33.7512, -1.09791, 0.55", "88.2124, 33.5518, -1.28071, 0.55", "90.1802, 33.3294, -1.66388, 0.55", "92.2476, 33.0538, -2.27082, 0.55", "93.3268, 32.904, -2.71593, 0.55", "95.5044, 32.6212, -3.92532, 0.55", "96.5054, 32.502, -4.51435, 0.55", "98.8489, 32.1807, -5.96072, 0.55", "100.439, 31.8959, -6.93203, 0.55", "101.611, 31.6748, -7.59262, 0.83", "103.488, 31.2478, -8.6319, 0.55", "105.331, 30.7316, -9.58372, 0.83", "106.9, 30.2153, -10.34, 0.55", "108.3, 29.7712, -10.9366, 0.55", "109.097, 29.5511, -11.2283, 0.83", "110.965, 29.0358, -11.8087, 0.28", "111.896, 28.8143, -12.0344, 0.28", "112.796, 28.5453, -12.3045, 0.28", "113.767, 28.2813, -12.5989, 0.28", "115.32, 27.8911, -13.1001, 0.28", "115.945, 27.7406, -13.2823, 0.55", "117.449, 27.3852, -13.5681, 0.55", "120.164, 26.709, -13.9471, 0.55", "120.918, 26.4993, -14.0204, 0.55", "121.593, 26.2878, -14.0588, 0.83", "123.065, 25.865, -14.0199, 0.55", "124.345, 25.4985, -13.9655, 0.55", "125.555, 25.1569, -13.908, 0.55", "126.491, 24.878, -13.8913, 0.55", "127.973, 24.3373, -13.9457, 0.55", "129.717, 23.5526, -14.1194, 0.55", "132.42, 22.04, -14.6056, 0.55", "133.901, 20.9957, -14.9861, 0.55", "135.184, 19.8725, -15.4001, 0.28", "135.566, 19.4538, -15.5533, 0.55", "136.412, 18.2708, -15.959, 0.28", "137.139, 16.9331, -16.3745, 0.55", "137.83, 15.2448, -16.745, 0.55", "138.3, 14.1317, -16.9354, 0.28", "138.473, 13.7374, -16.9836, 0.55", "138.922, 12.7576, -17.0904, 0.28", "139.536, 11.4819, -17.1999, 0.55", "141.14, 8.40762, -17.3925, 0.55", "141.977, 6.85721, -17.4581, 0.55", "142.755, 5.43584, -17.5059, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "79.0862, 34.7975, -1.45583, 0.55", "81.1888, 35.6091, 0.372545, 0.55", "81.8674, 35.8593, 0.919692, 0.55", "84.4186, 36.64, 2.86567, 0.55", "87.2574, 37.5794, 5.07198, 0.55", "90.8858, 38.7937, 8.00389, 0.55", "91.8886, 39.1289, 8.80637, 0.55", "93.6958, 39.6533, 10.2406, 0.55", "95.6813, 40.262, 11.7249, 0.55", "97.9957, 41.0177, 13.3285, 0.55", "100.174, 41.764, 14.8421, 0.55", "101.37, 42.2201, 15.6036, 0.55", "102.77, 42.798, 16.4875, 0.55", "104.502, 43.5598, 17.5384, 0.83", "107.372, 44.7433, 18.9474, 0.55", "109.289, 45.4309, 19.7991, 0.83", "111.97, 46.2414, 20.9096, 0.55", "112.798, 46.4419, 21.2467, 0.55", "115.385, 46.9233, 22.2611, 0.55", "120.055, 47.466, 23.9393, 0.55", "123.499, 47.6574, 25.1235, 0.55", "126.229, 47.694, 26.1474, 0.55", "129.014, 47.6022, 27.3125, 0.55", "129.601, 47.5677, 27.5633, 0.28", "130.796, 47.4497, 28.0776, 0.83", "135.703, 46.8991, 30.2302, 0.55", "139.142, 46.5058, 31.6691, 0.55", "141.951, 46.2669, 32.9081, 0.55", "143.629, 46.122, 33.6653, 0.83", "144.948, 46.0275, 34.2604, 0.28", "146.145, 45.9417, 34.7886, 0.55", "155.155, 47.79, 39.8472, 0.55", "165.021, 47.7994, 43.4308, 0.55", "174.697, 49.1375, 47.272, 0.55", "183.219, 49.3196, 53.3981, 0.55", "191.182, 48.1485, 60.1361, 0.55", "200.296, 45.0718, 64.3364, 0.55", "209.487, 40.7328, 66.9577, 0.55", "219.508, 38.1645, 68.7385, 0.55", "229.366, 35.5522, 71.2205, 0.55", "239.606, 33.9674, 72.8984, 0.55", "249.648, 33.0613, 75.8175, 0.55", "259.126, 30.4617, 79.5038, 0.55", "268.63, 29.8586, 83.9188, 0.55", "277.469, 30.9788, 89.4681, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.5745, -33.5461, 7.5815, 1.38", "1.10975, -36.493, 6.63891, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.5745, -33.5461, 7.5815, 0.55", "-2.67236, -34.9458, 7.47812, 0.55", "-3.88069, -36.7367, 7.36657, 0.55", "-4.82762, -37.9249, 7.28907, 0.55", "-5.60914, -38.9191, 7.09279, 0.55", "-7.29481, -40.9811, 6.49094, 0.55", "-8.47412, -42.3595, 6.03272, 0.55", "-9.51695, -43.5954, 5.58226, 0.55", "-12.2004, -46.6065, 4.4264, 0.55", "-15.4314, -50.0952, 3.0645, 0.55", "-17.929, -52.739, 1.96209, 0.55", "-19.5187, -54.4742, 1.23372, 0.55", "-21.3412, -56.5543, 0.404758, 0.55", "-23.6496, -59.5313, -0.611016, 0.55", "-24.9954, -61.6373, -1.17127, 0.55", "-26.6661, -64.6602, -1.6991, 0.55", "-27.996, -67.4879, -2.0593, 0.55", "-29.3283, -71.0107, -2.39318, 0.55", "-30.5739, -75.1406, -2.64251, 0.55", "-31.2306, -78.2917, -2.71861, 0.55", "-31.4653, -79.8573, -2.64154, 0.55", "-31.8242, -83.531, -2.23372, 0.55", "-32.1109, -86.9667, -1.7552, 0.55", "-32.2563, -90.4228, -0.996462, 0.55", "-32.374, -92.4052, -0.45655, 0.55", "-32.7299, -98.5321, 1.44102, 0.55", "-32.7601, -98.9832, 1.58821, 0.55", "-32.902, -101.744, 2.56355, 0.55", "-33.3994, -106.686, 4.39309, 0.55", "-33.5627, -108.339, 4.90624, 0.55", "-33.8246, -110.928, 5.26083, 0.55", "-33.8692, -111.891, 5.17791, 0.55", "-33.7996, -115.152, 4.31071, 0.55", "-33.5814, -117.266, 3.32415, 0.55", "-33.0557, -120.636, 1.08892, 0.55", "-32.2072, -124.76, -1.93885, 0.28", "-31.9641, -125.78, -2.82124, 0.55", "-31.5733, -127.327, -4.29281, 0.28", "-31.5149, -127.56, -4.52705, 0.55", "-31.2172, -128.837, -5.70293, 0.28", "-31.1581, -129.27, -6.00756, 0.55", "-30.9561, -131.521, -7.1686, 0.28", "-30.9179, -132.287, -7.55789, 0.55", "-30.8509, -134.503, -8.56291, 0.28", "-30.827, -135.2, -8.87637, 0.55", "-30.7691, -137.606, -9.92181, 0.28", "-30.736, -138.713, -10.4076, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.5084, -79.1694, 58.1081, 0.55", "-20.8898, -86.3803, 65.0432, 0.55", "-26.2432, -92.5595, 72.2852, 0.55", "-31.3714, -99.4608, 79.0203, 0.55", "-36.6899, -106.379, 85.5884, 0.55", "-40.9912, -114.592, 91.3615, 0.55", "-45.1526, -122.48, 97.666, 0.55", "-48.2596, -132.105, 101.789, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-16.5084, -79.1694, 58.1081, 0.55", "-16.5388, -87.7275, 66.31, 0.55", "-15.889, -97.573, 72.8794, 0.55", "-17.1274, -107.526, 79.1974, 0.55", "-18.914, -118.048, 84.3558, 0.55", "-20.2469, -128.52, 89.7468, 0.55", "-21.5779, -138.574, 95.8842, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-51.293, 51.5345, -15.4379, 0.83", "-50.7882, 52.9301, -16.0178, 0.83", "-49.7034, 56.2313, -17.2598, 0.55", "-49.2661, 57.6237, -17.7116, 0.83", "-48.8224, 59.0858, -18.1202, 0.55", "-48.4264, 60.531, -18.3844, 0.55", "-48.2502, 61.2301, -18.4441, 0.28", "-48.1931, 61.6589, -18.4006, 0.55", "-48.0628, 62.992, -17.9803, 0.28", "-48.0034, 63.5522, -17.7692, 0.55", "-47.8481, 65.472, -16.9704, 0.28", "-47.7827, 66.9752, -16.3032, 0.55", "-47.8204, 69.2972, -15.2329, 0.28", "-47.9408, 71.3242, -14.2809, 0.28", "-48.0837, 72.4509, -13.7512, 0.55", "-48.3383, 73.7865, -13.1534, 0.28", "-48.5064, 74.4206, -12.8753, 0.55", "-48.9617, 75.937, -12.3181, 0.28", "-49.3146, 76.9669, -12.0229, 0.28", "-49.6718, 77.9894, -11.7701, 0.28", "-49.8394, 78.5305, -11.6311, 0.55", "-50.3837, 80.7388, -11.0738, 0.28", "-50.9269, 83.3723, -10.4268, 0.55", "-51.1003, 84.2832, -10.2019, 0.55", "-51.2951, 85.1894, -9.96351, 0.55", "-51.7975, 87.1247, -9.52299, 0.55", "-52.1972, 88.4038, -9.28856, 0.28", "-52.4002, 88.8895, -9.22589, 0.55", "-53.0484, 90.1937, -9.06397, 0.28", "-53.7744, 91.6004, -8.96271, 0.55", "-54.9712, 93.6472, -8.95592, 0.28", "-55.5489, 94.5094, -9.01065, 0.28", "-56.4561, 95.7464, -9.24752, 0.55", "-57.4573, 97.056, -9.58227, 0.28", "-57.6387, 97.2643, -9.65391, 0.55", "-58.2911, 97.9357, -9.9362, 0.28", "-60.5505, 100.088, -10.9198, 0.55", "-63.6368, 102.829, -12.5144, 0.28", "-64.1926, 103.308, -12.8583, 0.55", "-65.7059, 104.57, -13.8534, 0.28", "-66.3343, 105.097, -14.2932, 0.28", "-66.8697, 105.549, -14.7094, 0.55", "-68.3795, 106.704, -16.1387, 0.28", "-69.4569, 107.369, -17.147, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-51.293, 51.5345, -15.4379, 0.55", "-51.4187, 53.237, -15.4703, 0.55", "-51.5296, 54.2326, -15.4013, 0.28", "-51.7708, 54.9314, -15.1981, 0.55", "-52.3247, 56.5361, -14.7315, 0.28", "-52.7137, 57.6633, -14.4038, 0.55", "-53.4308, 59.7412, -13.7997, 0.28", "-53.9532, 60.8377, -13.2958, 0.55", "-56.1124, 63.3747, -11.2513, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-126.102, -28.8438, 25.7724, 0.55", "-131.18, -37.7395, 28.1654, 0.55", "-134.511, -47.4688, 30.375, 0.55", "-137.033, -57.6802, 30.4158, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-126.102, -28.8438, 25.7724, 0.55", "-130.985, -36.5586, 25.6879, 0.55", "-135.006, -44.6918, 24.6608, 0.55", "-138.655, -52.9802, 23.4974, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-162.91, 23.3797, 57.3937, 0.55", "-171.902, 24.2026, 63.8272, 0.55", "-181.577, 26.0486, 68.917, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-162.91, 23.3797, 57.3937, 0.55", "-171.655, 22.2656, 60.8751, 0.55", "-180.503, 22.7121, 64.2425, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "119.56, -61.6518, -106.891, 0.28", "128.717, -66.2769, -119.511, 0.28", "129.612, -66.7999, -120.623, 0.55", "131.122, -67.6827, -122.5, 0.28", "132.394, -68.4261, -124.081, 0.28", "134.078, -69.4101, -126.174, 0.55", "136.297, -70.7075, -128.933, 0.55", "139.028, -72.8977, -130.169, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "119.56, -61.6518, -106.891, 0.55", "120.376, -62.8018, -108.006, 0.55", "120.644, -63.3286, -108.505, 0.28", "121.054, -64.2379, -109.381, 0.55", "121.958, -66.241, -111.312, 0.28", "122.585, -67.6292, -112.65, 0.55", "123.646, -69.9812, -114.916, 0.28", "124.869, -72.8745, -117.922, 0.28", "125.374, -74.2125, -119.333, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "142.755, 5.43584, -17.5059, 0.28", "144.959, 2.70222, -16.7846, 0.28", "147.753, -0.912169, -15.5057, 0.28", "149.523, -3.25892, -14.5722, 0.55", "150.59, -4.54714, -13.9863, 0.28", "151.157, -5.24102, -13.6635, 0.28", "153.969, -8.66745, -12.1285, 0.55", "154.617, -9.42532, -11.6769, 0.28", "156.159, -11.431, -10.3376, 0.55", "157.474, -13.1785, -9.25395, 0.28", "158.618, -14.5949, -8.40283, 0.55", "159.959, -16.2941, -7.50262, 0.55", "162.089, -19.0028, -6.44879, 0.55", "162.602, -19.6688, -6.21673, 0.55", "164.44, -22.1618, -5.38152, 0.28", "165.153, -23.1839, -5.07008, 0.55", "166.145, -24.4838, -4.67671, 0.28", "167.545, -26.3325, -4.21071, 0.55", "169.856, -29.2519, -3.93773, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "142.755, 5.43584, -17.5059, 0.55", "139.903, 5.34324, -17.4801, 0.55", "137.586, 5.26803, -17.4591, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.10975, -36.493, 6.63891, 0.83", "1.16073, -36.589, 6.63689, 0.83", "1.73239, -37.4343, 6.69061, 0.83", "2.24043, -38.1741, 6.68721, 0.55", "2.64574, -38.7643, 6.68451, 0.55", "3.50723, -40.0188, 6.67876, 0.83", "4.55217, -41.5404, 6.67178, 0.55", "5.11836, -42.3362, 6.68737, 0.83", "6.10679, -43.599, 6.78374, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.10975, -36.493, 6.63891, 0.55", "0.0827291, -37.5723, 3.55102, 0.55", "-1.01966, -38.7309, 0.236559, 0.55", "-2.32103, -40.0986, -3.6762, 0.55", "-3.90132, -41.7593, -8.42755, 0.55", "-4.79808, -42.7018, -11.1238, 0.55", "-4.97823, -42.8911, -11.6654, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-21.5779, -138.574, 95.8842, 0.55", "-22.167, -150.957, 104.311, 0.55", "-20.8666, -164.251, 111.115, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-21.5779, -138.574, 95.8842, 0.55", "-23.1906, -147.825, 101.004, 0.55", "-25.1139, -156.766, 106.551, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-56.1124, 63.3747, -11.2513, 0.28", "-58.1045, 64.6797, -9.52683, 0.28", "-58.8788, 65.1505, -8.79281, 0.55", "-61.1116, 66.5018, -6.61818, 0.28", "-62.1926, 67.2015, -5.64284, 0.55", "-65.114, 69.124, -3.10398, 0.28", "-68.0831, 71.078, -0.523574, 0.55", "-73.0033, 74.065, 3.72065, 0.28", "-74.0512, 74.7085, 4.62756, 0.55", "-76.3382, 76.2742, 6.58592, 0.28", "-77.2318, 76.9349, 7.36957, 0.55", "-86.7225, 80.9882, 13.0889, 0.55", "-96.3025, 86.9945, 16.4595, 0.55", "-105.13, 92.8588, 21.6457, 0.55", "-112.449, 100.108, 27.3975, 0.55", "-120.719, 107.17, 31.9765, 0.55", "-130.183, 112.24, 36.8693, 0.55", "-139.346, 115.975, 43.2954, 0.55", "-147.864, 118.125, 51.1711, 0.55", "-156.321, 121.02, 58.8735, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-56.1124, 63.3747, -11.2513, 0.55", "-60.0187, 61.9761, -10.9265, 0.55", "-62.047, 61.187, -10.7751, 0.28", "-63.5564, 60.5998, -10.6625, 0.55", "-64.8144, 60.1103, -10.5686, 0.28", "-65.6956, 59.7675, -10.5028, 0.55", "-68.1254, 58.8222, -10.3215, 0.28", "-69.6945, 58.1074, -10.4148, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-137.033, -57.6802, 30.4158, 0.55", "-140.655, -69.5595, 33.4441, 0.55", "-143.732, -81.1801, 37.7915, 0.55", "-146.296, -93.5314, 39.8588, 0.55", "-149.823, -105.206, 43.6892, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-137.033, -57.6802, 30.4158, 0.55", "-139.768, -62.8203, 28.2227, 0.55", "-142.371, -67.5234, 25.0892, 0.55", "-145.332, -72.5508, 22.9287, 0.55", "-149.586, -76.6025, 20.8794, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-138.655, -52.9802, 23.4974, 0.55", "-146.664, -62.1728, 16.2268, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-138.655, -52.9802, 23.4974, 0.55", "-142.112, -64.3451, 28.7687, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "139.028, -72.8977, -130.169, 0.28", "142.74, -74.3786, -131.808, 0.28", "144.465, -75.0665, -132.57, 0.55", "147.753, -76.3783, -134.022, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "139.028, -72.8977, -130.169, 0.55", "138.724, -73.6101, -131.745, 0.55", "138.116, -75.0352, -134.896, 0.28", "137.918, -75.4995, -135.923, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "125.374, -74.2125, -119.333, 0.28", "126.851, -77.5076, -122.671, 0.28", "127.583, -79.1392, -124.323, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "125.374, -74.2125, -119.333, 0.55", "123.458, -75.1736, -118.398, 0.55", "118.114, -77.8537, -115.789, 0.28", "116.845, -78.4904, -115.169, 0.55", "113.372, -80.2321, -113.474, 0.28", "111.134, -81.3547, -112.381, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "6.10679, -43.599, 6.78374, 0.83", "6.15894, -43.8426, 6.75421, 0.83", "6.86041, -47.0304, 6.46837, 0.83", "7.13905, -49.4379, 6.33761, 0.83", "7.17857, -51.7825, 6.39192, 0.83", "7.05504, -54.9195, 6.65487, 0.83", "6.77815, -58.5451, 7.05404, 0.83", "6.42161, -62.6019, 7.70551, 0.83", "6.02186, -66.5506, 8.51024, 0.83", "5.26761, -71.41, 9.29729, 0.83", "4.84374, -73.6433, 9.50278, 0.83", "4.55044, -75.3186, 9.55574, 0.83", "3.9438, -78.5333, 9.57252, 0.83", "3.51174, -81.4021, 9.45793, 0.83", "3.10959, -87.4726, 8.6675, 0.83", "3.05753, -90.7715, 7.83371, 0.83", "3.07529, -93.8013, 6.85155, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.10679, -43.599, 6.78374, 0.55", "4.96862, -46.3547, 6.8639, 0.55", "4.0988, -48.3516, 7.06728, 0.55", "3.56307, -49.6236, 7.32758, 0.55", "2.79864, -51.6052, 7.93664, 0.55", "1.36066, -55.5177, 9.40479, 0.55", "0.214248, -58.4703, 10.8394, 0.55", "-0.728404, -60.8294, 12.2429, 0.55", "-1.75624, -63.2092, 13.8245, 0.55", "-2.63591, -65.1803, 15.2385, 0.28", "-3.40238, -66.7845, 16.6293, 0.55", "-4.90793, -69.6935, 19.5693, 0.55", "-5.95009, -71.4742, 21.5576, 0.55", "-6.54415, -72.4725, 22.6602, 0.55", "-7.29915, -73.6541, 23.8914, 0.83", "-9.54558, -77.1663, 27.3006, 0.28", "-10.2846, -78.3296, 28.3967, 0.55", "-11.5452, -80.4296, 30.3126, 0.28", "-11.9381, -81.0753, 30.9512, 0.55", "-12.7713, -82.5898, 32.4292, 0.28", "-13.2326, -83.4529, 33.2055, 0.55", "-14.8331, -86.2915, 34.9433, 0.55", "-17.5192, -93.7813, 42.839, 0.55", "-19.7334, -100.878, 51.2287, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.97823, -42.8911, -11.6654, 0.55", "-5.75622, -44.2708, -16.3052, 0.55", "-6.0092, -44.5951, -17.639, 0.55", "-6.70188, -45.406, -20.9142, 0.55", "-8.34606, -47.008, -27.9055, 0.28", "-8.62003, -47.2257, -28.9067, 0.55", "-9.84632, -48.2205, -32.9776, 0.55", "-11.7867, -49.5662, -38.2046, 0.55", "-12.5509, -50.0255, -40.1725, 0.28", "-13.2658, -50.3225, -41.8305, 0.28", "-14.6858, -50.7647, -44.3873, 0.55", "-16.3434, -51.1648, -47.6037, 0.28", "-17.8249, -51.2947, -50.6332, 0.55", "-18.9854, -51.2122, -52.9459, 0.55", "-19.7504, -51.0314, -54.5808, 0.55", "-21.9102, -50.3063, -59.4983, 0.55", "-24.2191, -49.2227, -64.6107, 0.55", "-25.1954, -48.6669, -66.6866, 0.28", "-26.105, -48.1692, -68.6859, 0.55", "-27.9863, -47.3978, -72.7054, 0.28", "-28.6288, -47.1735, -74.0469, 0.83", "-29.9203, -46.7207, -76.4238, 0.28", "-30.9854, -46.5116, -77.9541, 0.55", "-32.5654, -46.2914, -80.1341, 0.28", "-33.2125, -46.1899, -80.9764, 0.55", "-34.4694, -46.0316, -82.4569, 0.55", "-36.4126, -45.5165, -84.6142, 0.55", "-37.7325, -45.0665, -85.9432, 0.28", "-38.8504, -44.5224, -86.9237, 0.55", "-40.1516, -43.6754, -88.0902, 0.28", "-40.3592, -43.5144, -88.2905, 0.55", "-42.0277, -41.9891, -90.5133, 0.28", "-43.1272, -40.8529, -92.2936, 0.55", "-44.3809, -39.2063, -94.9294, 0.83", "-45.2847, -37.8129, -97.2918, 0.28", "-45.4895, -37.4588, -97.9452, 0.55", "-46.9388, -34.8108, -103.143, 0.28", "-47.1541, -34.3619, -104.111, 0.55", "-47.7066, -32.902, -107.077, 0.28", "-47.8471, -32.5267, -107.846, 0.55", "-48.2609, -31.5458, -109.741, 0.28", "-48.5888, -30.8371, -111.032, 0.55", "-49.5104, -29.2414, -113.64, 0.28", "-50.0932, -28.3843, -115.145, 0.55", "-51.4355, -26.7243, -118.232, 0.28", "-51.8463, -26.2751, -119.14, 0.55", "-52.5252, -25.6698, -120.522, 0.28", "-53.1313, -25.158, -121.648, 0.55", "-54.4708, -24.1206, -123.871, 0.28", "-54.8883, -23.8229, -124.521, 0.55", "-58.1177, -21.5009, -129.151, 0.28", "-59.3287, -20.5524, -130.643, 0.55", "-61.5911, -18.6974, -133.132, 0.28", "-62.631, -17.802, -134.216, 0.55", "-65.1205, -15.7657, -136.537, 0.28", "-66.0673, -15.0707, -137.343, 0.55", "-69.6495, -12.946, -140.048, 0.28", "-71.17, -12.2919, -141.158, 0.55", "-73.3894, -11.792, -142.71, 0.55", "-74.7829, -11.5865, -143.63, 0.55", "-77.7619, -11.2444, -145.28, 0.28", "-80.7986, -10.9331, -146.721, 0.28", "-83.3669, -10.6608, -147.851, 0.55", "-86.6597, -10.0248, -148.908, 0.28", "-88.3752, -9.49486, -149.232, 0.55", "-92.5797, -7.5814, -149.646, 0.28", "-94.9104, -6.17569, -149.409, 0.55", "-96.5094, -5.0491, -148.983, 0.28", "-98.431, -3.76703, -148.153, 0.55", "-100.905, -2.08607, -146.892, 0.28", "-101.846, -1.49055, -146.424, 0.55", "-106.629, 1.20125, -144.448, 0.28", "-108.246, 2.05484, -143.796, 0.55", "-112.125, 3.96162, -142.168, 0.28", "-114.234, 4.97616, -141.285, 0.55", "-115.969, 5.80753, -140.562, 0.55", "-118.032, 6.78623, -139.743, 0.28", "-119.071, 7.28098, -139.463, 0.55", "-122.496, 9.03397, -138.706, 0.28", "-124.279, 10.1368, -138.276, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.97823, -42.8911, -11.6654, 0.55", "-3.96571, -43.1596, -12.2591, 0.55", "-2.91309, -43.3021, -12.8261, 0.55", "-1.55441, -43.382, -13.4647, 0.55", "-0.415216, -43.3552, -13.9368, 0.55", "7.34051, -42.41, -16.4776, 0.55", "9.11276, -42.0097, -17.0684, 0.55", "11.7479, -41.2417, -17.9878, 0.55", "13.6193, -40.6401, -18.6486, 0.55", "15.4567, -39.9555, -19.254, 0.28", "18.3099, -38.7554, -20.0582, 0.55", "22.5826, -36.8496, -21.0417, 0.28", "22.9479, -36.7512, -21.2111, 0.55", "25.0369, -36.564, -22.9026, 0.28", "26.2431, -36.5334, -24.2742, 0.55", "27.3985, -36.6264, -25.8808, 0.55", "29.4169, -36.9681, -28.7964, 0.55", "33.3884, -37.6888, -34.5065, 0.55", "36.1177, -38.2265, -38.2917, 0.55", "37.0926, -38.4291, -39.572, 0.55", "43.7043, -39.6923, -47.8297, 0.55", "45.5916, -40.0, -49.9879, 0.55", "46.7412, -40.1794, -51.1178, 0.55", "49.6408, -40.7044, -53.5133, 0.55", "56.8916, -42.4336, -58.8407, 0.55", "58.8972, -42.9996, -60.1885, 0.28", "60.0919, -43.3845, -60.8657, 0.55", "61.8741, -44.0372, -61.8333, 0.28", "62.6285, -44.3884, -62.1721, 0.55", "65.0299, -45.7941, -62.5581, 0.28", "66.5011, -47.4377, -61.8144, 0.55", "67.3292, -48.581, -61.2989, 0.28", "68.0037, -49.8118, -60.7094, 0.55", "68.5239, -51.1265, -60.1152, 0.28", "68.7423, -51.7991, -59.8685, 0.55", "69.1847, -53.5449, -59.2237, 0.28", "69.3259, -54.0687, -59.1211, 0.55", "70.208, -57.0826, -58.6833, 0.28", "70.7383, -58.4925, -58.6135, 0.55", "72.1288, -61.5358, -58.695, 0.28", "72.7406, -62.6686, -58.8062, 0.55", "74.9802, -66.414, -59.2884, 0.28", "75.5481, -67.3275, -59.4348, 0.55", "77.3302, -70.2215, -60.0226, 0.28", "77.6906, -70.8934, -60.1365, 0.55", "78.5867, -72.6636, -60.453, 0.28", "79.1625, -73.6979, -60.7147, 0.55", "79.7957, -74.7215, -61.0215, 0.55", "81.0525, -76.7628, -61.6205, 0.28", "81.9962, -78.0437, -62.0553, 0.55", "85.2061, -81.3336, -63.4398, 0.28", "86.5186, -82.4304, -64.0161, 0.55", "87.4371, -83.1352, -64.3936, 0.28", "88.3831, -83.7894, -64.7572, 0.55", "91.3386, -85.652, -65.8119, 0.28", "93.5625, -87.0886, -66.5559, 0.55", "97.2572, -89.76, -67.5695, 0.28", "98.4216, -90.5926, -67.8828, 0.55", "100.623, -92.1264, -68.3072, 0.28", "101.343, -92.6284, -68.3944, 0.55", "102.455, -93.424, -68.344, 0.28", "103.413, -94.0956, -68.219, 0.55", "105.936, -95.7707, -67.6204, 0.28", "108.834, -97.5692, -66.8842, 0.28", "110.272, -98.4062, -66.4088, 0.28", "111.765, -99.2077, -66.0155, 0.55", "113.969, -100.277, -65.4476, 0.28", "114.944, -100.736, -65.1747, 0.83", "117.387, -101.937, -64.3876, 0.28", "118.466, -102.486, -64.1044, 0.55", "123.267, -105.092, -63.0754, 0.28", "125.735, -106.433, -62.7458, 0.28", "127.572, -107.415, -62.616, 0.55", "128.679, -108.013, -62.6516, 0.55", "131.681, -109.65, -62.9542, 0.28", "134.5, -111.299, -63.34, 0.55", "137.053, -112.873, -63.6933, 0.28", "139.392, -114.332, -64.1213, 0.55", "141.326, -115.517, -64.4644, 0.28", "142.905, -116.381, -64.6682, 0.55", "146.702, -118.266, -65.0007, 0.28", "148.606, -119.215, -65.099, 0.55", "151.434, -120.643, -65.1529, 0.28", "153.744, -121.748, -65.1472, 0.55", "159.193, -124.114, -65.1364, 0.28", "161.476, -124.967, -65.2632, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-20.8666, -164.251, 111.115, 0.55", "-20.9499, -171.385, 114.413, 0.55", "-20.1052, -179.032, 116.022, 0.55", "-19.8227, -186.436, 118.647, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-20.8666, -164.251, 111.115, 0.55", "-20.2669, -172.876, 117.251, 0.55", "-21.1333, -180.274, 124.797, 0.55", "-21.9984, -185.956, 133.707, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-25.1139, -156.766, 106.551, 0.55", "-26.4854, -166.446, 111.314, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-25.1139, -156.766, 106.551, 0.55", "-27.7537, -166.046, 112.572, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.07529, -93.8013, 6.85155, 0.83", "3.95325, -97.4716, 7.55168, 0.83", "4.7474, -100.566, 8.40649, 0.83", "5.53681, -103.641, 9.25619, 0.83", "6.28648, -106.562, 10.0631, 0.83", "7.44179, -111.063, 11.3067, 0.83", "8.58875, -115.532, 12.5412, 0.83", "9.43869, -118.492, 13.8005, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.07529, -93.8013, 6.85155, 0.55", "4.06173, -95.1083, 7.24747, 0.55", "4.90025, -96.1192, 7.38459, 0.55", "5.52137, -96.8645, 7.39992, 0.55", "6.17326, -97.7406, 7.2516, 0.83", "6.90611, -98.7329, 6.93747, 0.55", "7.62292, -99.7034, 6.63021, 0.83", "8.38796, -100.754, 6.17603, 0.55", "8.85661, -101.36, 5.85737, 0.83", "10.3639, -103.318, 4.63986, 0.55", "11.4689, -104.858, 3.53155, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-19.7334, -100.878, 51.2287, 0.55", "-24.8378, -110.943, 57.6415, 0.55", "-31.7718, -119.867, 64.0273, 0.55", "-39.7135, -127.623, 70.7562, 0.55", "-48.8394, -133.939, 77.4886, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-19.7334, -100.878, 51.2287, 0.55", "-22.4697, -108.768, 58.5478, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "9.43869, -118.492, 13.8005, 0.55", "9.55487, -120.852, 14.3983, 0.55", "9.76056, -123.861, 15.2573, 0.55", "9.96012, -126.702, 16.0536, 0.55", "10.0883, -128.722, 16.5834, 0.55", "10.2941, -132.328, 17.464, 0.55", "11.0933, -142.448, 19.7344, 0.55", "11.486, -145.876, 20.3861, 0.55", "11.806, -148.288, 20.731, 0.55", "12.2557, -151.036, 20.9178, 0.55", "12.6218, -153.158, 20.8693, 0.55", "13.6779, -158.1, 20.5984, 0.55", "14.3535, -161.861, 20.351, 0.55", "14.8413, -164.328, 20.278, 0.55", "15.9924, -170.737, 20.4017, 0.55", "16.6863, -175.053, 20.663, 0.55", "17.5198, -180.625, 21.3113, 0.55", "18.4102, -186.956, 22.5418, 0.55", "19.1167, -191.178, 23.6692, 0.55", "19.5743, -193.671, 24.4168, 0.55", "19.9566, -195.973, 25.0879, 0.55", "20.5264, -198.879, 25.818, 0.55", "21.9499, -205.878, 27.0933, 0.55", "22.6177, -208.577, 27.514, 0.55", "23.2969, -211.587, 27.9428, 0.55", "24.2871, -216.109, 28.5535, 0.55", "24.8814, -219.598, 29.011, 0.55", "25.2714, -222.923, 29.3514, 0.55", "25.5064, -226.103, 29.638, 0.55", "25.6722, -229.211, 29.9467, 0.55", "25.8093, -231.421, 30.1489, 0.55", "26.0895, -235.033, 30.3649, 0.55", "26.459, -239.363, 30.2879, 0.55", "26.7352, -241.458, 30.1118, 0.55", "27.0365, -243.292, 29.8267, 0.55", "27.818, -246.735, 29.1316, 0.55", "28.3089, -248.917, 28.6249, 0.55", "28.9149, -251.608, 28.109, 0.55", "29.2381, -253.508, 27.8395, 0.55", "29.9365, -258.46, 27.3036, 0.55", "30.2956, -262.182, 27.1368, 0.55", "30.6252, -267.963, 27.3114, 0.55", "30.8171, -271.7, 27.7874, 0.55", "30.9537, -275.629, 28.4023, 0.28", "30.9526, -277.212, 28.7014, 0.28", "30.8349, -281.068, 29.7587, 0.28", "30.6155, -284.64, 30.9978, 0.28", "30.6056, -289.348, 33.2217, 0.28", "32.665, -299.766, 36.0069, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "9.43869, -118.492, 13.8005, 0.55", "10.6411, -119.01, 15.0078, 0.55", "12.9886, -120.364, 17.6779, 0.55", "14.9543, -121.711, 20.0766, 0.28", "17.0141, -123.25, 22.722, 0.55", "18.1116, -124.242, 24.5168, 0.28", "19.8388, -126.043, 27.8638, 0.55", "20.3341, -127.014, 29.5612, 0.28", "20.456, -127.369, 30.2454, 0.28", "20.6549, -127.876, 31.4384, 0.55", "21.6074, -129.528, 35.8915, 0.28", "22.0535, -130.17, 37.7438, 0.55", "23.7709, -132.011, 42.9608, 0.28", "24.8264, -132.908, 45.6643, 0.28", "26.2718, -134.055, 48.8981, 0.55", "28.7039, -135.823, 53.4105, 0.28", "29.078, -136.054, 53.9711, 0.55", "31.0562, -137.175, 56.5739, 0.28", "31.2554, -137.278, 56.7867, 0.55", "32.982, -138.522, 58.7179, 0.28", "33.7629, -139.208, 59.6907, 0.55", "40.1036, -144.264, 67.767, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-48.8394, -133.939, 77.4886, 0.55", "-53.6587, -137.986, 84.7146, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-48.8394, -133.939, 77.4886, 0.55", "-54.0555, -141.082, 80.3145, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_BP_f920d1af2c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -4.02723, 9.23924, 3.04307, 0.83 ) }
    dend_43 { pt3dadd( -8.19081, 12.4664, 3.67099, 1.11 ) }
    dend_43 { pt3dadd( -10.6457, 14.3678, 3.99763, 0.83 ) }
    dend_43 { pt3dadd( -13.0307, 16.1991, 4.29029, 0.83 ) }
    dend_43 { pt3dadd( -14.4428, 17.2434, 4.45066, 1.11 ) }
    dend_43 { pt3dadd( -18.8649, 20.5066, 4.96465, 1.11 ) }
    dend_43 { pt3dadd( -26.7742, 26.0932, 5.87323, 0.83 ) }
    dend_43 { pt3dadd( -29.6236, 28.0291, 6.17327, 0.83 ) }
    dend_43 { pt3dadd( -31.8801, 29.5166, 6.35963, 0.83 ) }
    dend_43 { pt3dadd( -34.0804, 30.9908, 6.52095, 0.83 ) }
    dend_43 { pt3dadd( -35.8716, 32.2059, 6.60798, 0.55 ) }
    dend_43 { pt3dadd( -37.2179, 33.0286, 6.69632, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.80895, 6.32984, -6.28525, 0.55 ) }
    dend_28 { pt3dadd( 7.78125, 6.97281, -6.94902, 0.55 ) }
    dend_28 { pt3dadd( 9.50598, 7.13512, -7.82733, 0.83 ) }
    dend_28 { pt3dadd( 12.2356, 7.30785, -9.45885, 0.55 ) }
    dend_28 { pt3dadd( 13.5533, 7.39123, -10.2464, 1.38 ) }
    dend_28 { pt3dadd( 16.7932, 7.59624, -12.1828, 0.55 ) }
    dend_28 { pt3dadd( 18.1731, 7.52682, -13.1068, 0.83 ) }
    dend_28 { pt3dadd( 25.3111, 6.25364, -18.2982, 0.55 ) }
    dend_28 { pt3dadd( 26.0016, 6.08243, -18.8693, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.696027, -11.5374, 3.60907, 1.11 ) }
    dend_1 { pt3dadd( -0.76698, -17.7976, 5.85334, 1.11 ) }
    dend_1 { pt3dadd( -0.795875, -20.3472, 6.76735, 0.83 ) }
    dend_1 { pt3dadd( -0.834266, -23.7344, 7.98167, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.816595, 9.42088, -1.34692, 1.11 ) }
    dend_0 { pt3dadd( 0.845608, 11.0264, -1.33383, 1.11 ) }
    dend_0 { pt3dadd( 0.874602, 13.6459, -1.2184, 1.38 ) }
    dend_0 { pt3dadd( 0.87841, 13.7919, -1.20908, 1.38 ) }
    dend_0 { pt3dadd( 1.0312, 15.6002, -1.06254, 0.83 ) }
    dend_0 { pt3dadd( 1.25736, 17.5143, -0.797104, 0.83 ) }
    dend_0 { pt3dadd( 1.66411, 19.6798, -0.216673, 0.83 ) }
    dend_0 { pt3dadd( 1.90671, 20.5036, 0.115402, 0.83 ) }
    dend_0 { pt3dadd( 2.15407, 21.102, 0.424599, 1.11 ) }
    dend_0 { pt3dadd( 2.89617, 22.5628, 1.23489, 0.55 ) }
    dend_0 { pt3dadd( 3.76115, 24.0901, 2.20097, 0.83 ) }
    dend_0 { pt3dadd( 4.92264, 25.6674, 3.31842, 0.55 ) }
    dend_0 { pt3dadd( 5.52526, 26.3254, 3.83361, 0.83 ) }
    dend_0 { pt3dadd( 6.36009, 27.2173, 4.62605, 0.55 ) }
    dend_0 { pt3dadd( 7.38437, 28.3512, 5.68756, 0.55 ) }
    dend_0 { pt3dadd( 8.79788, 30.0548, 7.29285, 0.55 ) }
    dend_0 { pt3dadd( 10.3535, 32.0006, 9.06466, 0.55 ) }
    dend_0 { pt3dadd( 11.3126, 33.2628, 10.3667, 0.55 ) }
    dend_0 { pt3dadd( 12.4613, 34.8581, 12.183, 0.55 ) }
    dend_0 { pt3dadd( 12.6966, 35.1783, 12.5924, 0.83 ) }
    dend_0 { pt3dadd( 13.3101, 36.0246, 13.742, 0.55 ) }
    dend_0 { pt3dadd( 13.8347, 36.6854, 14.6492, 0.83 ) }
    dend_0 { pt3dadd( 15.029, 38.4842, 16.7945, 0.55 ) }
    dend_0 { pt3dadd( 15.4988, 39.1413, 17.4341, 0.83 ) }
    dend_0 { pt3dadd( 15.9591, 39.628, 17.8833, 0.55 ) }
    dend_0 { pt3dadd( 16.4275, 40.0485, 18.2404, 0.83 ) }
    dend_0 { pt3dadd( 17.4841, 40.8344, 18.9102, 0.83 ) }
    dend_0 { pt3dadd( 18.8962, 41.9031, 19.6595, 0.83 ) }
    dend_0 { pt3dadd( 19.7729, 42.6077, 20.0175, 0.55 ) }
    dend_0 { pt3dadd( 20.4393, 43.2153, 20.2942, 0.55 ) }
    dend_0 { pt3dadd( 22.1897, 44.7858, 20.9915, 0.83 ) }
    dend_0 { pt3dadd( 23.326, 45.7931, 21.3931, 0.55 ) }
    dend_0 { pt3dadd( 25.0606, 47.27, 21.9282, 0.55 ) }
    dend_0 { pt3dadd( 26.6601, 48.5113, 22.3518, 0.55 ) }
    dend_0 { pt3dadd( 28.0967, 49.5645, 22.6905, 0.55 ) }
    dend_0 { pt3dadd( 29.9237, 50.8014, 23.0327, 0.55 ) }
    dend_0 { pt3dadd( 31.0481, 51.4125, 23.2048, 0.55 ) }
    dend_0 { pt3dadd( 31.8271, 51.759, 23.2283, 0.55 ) }
    dend_0 { pt3dadd( 32.876, 52.0279, 23.1721, 0.55 ) }
    dend_0 { pt3dadd( 34.4613, 52.1751, 22.9619, 0.55 ) }
    dend_0 { pt3dadd( 35.4567, 52.1436, 22.7939, 0.55 ) }
    dend_0 { pt3dadd( 36.9017, 52.0591, 22.6479, 0.55 ) }
    dend_0 { pt3dadd( 39.6262, 51.9846, 22.6101, 0.55 ) }
    dend_0 { pt3dadd( 41.7456, 52.0245, 22.7306, 0.55 ) }
    dend_0 { pt3dadd( 43.975, 52.1741, 22.9916, 0.55 ) }
    dend_0 { pt3dadd( 45.3912, 52.3195, 23.2722, 0.55 ) }
    dend_0 { pt3dadd( 49.0358, 53.0371, 24.2456, 0.55 ) }
    dend_0 { pt3dadd( 51.1703, 53.6328, 24.9873, 0.55 ) }
    dend_0 { pt3dadd( 52.7516, 54.1887, 25.6981, 0.55 ) }
    dend_0 { pt3dadd( 53.7041, 54.6945, 26.1686, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 54.805, 55.4391, 26.7076, 0.55 ) }
    dend_0 { pt3dadd( 56.6824, 56.8993, 27.4427, 0.55 ) }
    dend_0 { pt3dadd( 57.1193, 57.2503, 27.5485, 0.55 ) }
    dend_0 { pt3dadd( 58.3836, 58.1907, 27.7662, 0.55 ) }
    dend_0 { pt3dadd( 59.5427, 59.1881, 27.9613, 0.83 ) }
    dend_0 { pt3dadd( 60.1761, 59.7411, 28.0574, 0.55 ) }
    dend_0 { pt3dadd( 61.126, 60.6869, 28.1621, 0.83 ) }
    dend_0 { pt3dadd( 65.9808, 65.7386, 30.0699, 0.83 ) }
    dend_0 { pt3dadd( 70.2066, 71.499, 31.3692, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -37.2179, 33.0286, 6.69632, 0.55 ) }
    dend_55 { pt3dadd( -38.5931, 34.1573, 5.77339, 0.55 ) }
    dend_55 { pt3dadd( -40.0885, 35.3846, 4.7698, 0.55 ) }
    dend_55 { pt3dadd( -41.8931, 36.8657, 3.55868, 0.55 ) }
    dend_55 { pt3dadd( -43.3832, 38.0888, 2.55862, 0.83 ) }
    dend_55 { pt3dadd( -44.6319, 39.1136, 1.72058, 0.55 ) }
    dend_55 { pt3dadd( -46.9497, 41.016, 0.16505, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -37.2179, 33.0286, 6.69632, 0.55 ) }
    dend_44 { pt3dadd( -39.7066, 33.4961, 6.38717, 0.55 ) }
    dend_44 { pt3dadd( -42.3565, 33.9067, 6.32163, 0.55 ) }
    dend_44 { pt3dadd( -45.3619, 34.3663, 6.32076, 0.55 ) }
    dend_44 { pt3dadd( -49.7173, 34.9789, 6.71956, 0.55 ) }
    dend_44 { pt3dadd( -53.3635, 35.3816, 7.3118, 0.55 ) }
    dend_44 { pt3dadd( -57.1889, 35.7425, 8.09613, 0.55 ) }
    dend_44 { pt3dadd( -60.8892, 35.8347, 9.25133, 0.55 ) }
    dend_44 { pt3dadd( -64.0766, 35.5987, 10.5517, 0.55 ) }
    dend_44 { pt3dadd( -68.051, 35.0194, 12.5966, 0.55 ) }
    dend_44 { pt3dadd( -69.7806, 34.6369, 13.7263, 0.55 ) }
    dend_44 { pt3dadd( -71.6494, 34.2026, 15.0274, 0.55 ) }
    dend_44 { pt3dadd( -74.9448, 33.1885, 17.1688, 0.55 ) }
    dend_44 { pt3dadd( -76.6969, 32.6583, 18.0309, 0.55 ) }
    dend_44 { pt3dadd( -78.5321, 32.0466, 18.9223, 0.55 ) }
    dend_44 { pt3dadd( -80.7131, 31.3502, 19.7601, 0.55 ) }
    dend_44 { pt3dadd( -83.0829, 30.6438, 20.606, 0.55 ) }
    dend_44 { pt3dadd( -86.4647, 29.6283, 21.7389, 0.55 ) }
    dend_44 { pt3dadd( -90.9789, 28.5812, 22.8479, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 26.0016, 6.08243, -18.8693, 0.55 ) }
    dend_34 { pt3dadd( 32.583, 8.86612, -20.5756, 0.55 ) }
    dend_34 { pt3dadd( 36.4691, 10.1079, -22.0463, 0.55 ) }
    dend_34 { pt3dadd( 40.3439, 11.1501, -23.5081, 0.55 ) }
    dend_34 { pt3dadd( 43.0123, 11.7595, -24.4784, 0.55 ) }
    dend_34 { pt3dadd( 46.9275, 12.5703, -25.8437, 0.55 ) }
    dend_34 { pt3dadd( 55.1016, 14.0383, -28.8839, 0.55 ) }
    dend_34 { pt3dadd( 64.4379, 15.4954, -32.92, 0.55 ) }
    dend_34 { pt3dadd( 69.046, 15.8568, -35.1085, 0.55 ) }
    dend_34 { pt3dadd( 71.5387, 15.9547, -36.4195, 0.55 ) }
    dend_34 { pt3dadd( 74.2784, 16.0479, -37.9646, 0.55 ) }
    dend_34 { pt3dadd( 79.1915, 16.0929, -40.6702, 0.55 ) }
    dend_34 { pt3dadd( 81.0001, 15.9991, -41.6825, 0.55 ) }
    dend_34 { pt3dadd( 88.6683, 15.6369, -46.5602, 0.55 ) }
    dend_34 { pt3dadd( 94.1118, 15.3656, -50.4042, 0.55 ) }
    dend_34 { pt3dadd( 97.2414, 15.2443, -52.7112, 0.55 ) }
    dend_34 { pt3dadd( 100.368, 15.0991, -55.0034, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.0016, 6.08243, -18.8693, 0.83 ) }
    dend_29 { pt3dadd( 28.5973, 7.87423, -18.9755, 0.83 ) }
    dend_29 { pt3dadd( 30.0824, 8.89272, -19.1066, 0.55 ) }
    dend_29 { pt3dadd( 32.2695, 10.4301, -19.496, 0.83 ) }
    dend_29 { pt3dadd( 33.7389, 11.5, -19.8065, 0.55 ) }
    dend_29 { pt3dadd( 35.7617, 13.0338, -20.2071, 0.83 ) }
    dend_29 { pt3dadd( 38.1897, 14.9332, -20.5983, 0.55 ) }
    dend_29 { pt3dadd( 39.4153, 15.7981, -20.7365, 0.55 ) }
    dend_29 { pt3dadd( 42.2532, 17.4032, -20.8229, 0.83 ) }
    dend_29 { pt3dadd( 44.84, 18.5612, -20.5349, 0.55 ) }
    dend_29 { pt3dadd( 46.2839, 19.2018, -20.2302, 0.83 ) }
    dend_29 { pt3dadd( 48.4429, 20.2265, -19.5408, 0.55 ) }
    dend_29 { pt3dadd( 51.5325, 21.781, -18.1431, 0.55 ) }
    dend_29 { pt3dadd( 55.8306, 23.7242, -15.9585, 0.55 ) }
    dend_29 { pt3dadd( 59.931, 25.4429, -13.5715, 0.55 ) }
    dend_29 { pt3dadd( 63.1803, 26.7724, -11.6175, 0.55 ) }
    dend_29 { pt3dadd( 68.5349, 28.9919, -8.36857, 0.55 ) }
    dend_29 { pt3dadd( 72.4442, 30.7378, -5.90926, 0.55 ) }
    dend_29 { pt3dadd( 74.7911, 32.0028, -4.34677, 0.55 ) }
    dend_29 { pt3dadd( 79.0862, 34.7975, -1.45583, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.834266, -23.7344, 7.98167, 0.83 ) }
    dend_11 { pt3dadd( -1.03818, -26.4373, 7.87143, 0.83 ) }
    dend_11 { pt3dadd( -1.23685, -29.0706, 7.76403, 0.83 ) }
    dend_11 { pt3dadd( -1.45867, -32.0108, 7.64412, 0.83 ) }
    dend_11 { pt3dadd( -1.5745, -33.5461, 7.5815, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.834266, -23.7344, 7.98167, 0.55 ) }
    dend_2 { pt3dadd( -0.350526, -25.3588, 9.26022, 0.55 ) }
    dend_2 { pt3dadd( 0.0241452, -27.3618, 10.8753, 0.55 ) }
    dend_2 { pt3dadd( 0.0920775, -30.0145, 13.021, 0.55 ) }
    dend_2 { pt3dadd( 0.0412766, -31.0506, 13.8692, 0.83 ) }
    dend_2 { pt3dadd( -0.385805, -33.7109, 16.288, 0.55 ) }
    dend_2 { pt3dadd( -0.722286, -35.0924, 17.5419, 0.55 ) }
    dend_2 { pt3dadd( -1.4537, -37.7826, 20.0817, 0.83 ) }
    dend_2 { pt3dadd( -2.13334, -39.7878, 22.0707, 0.55 ) }
    dend_2 { pt3dadd( -2.83264, -41.4518, 23.6591, 0.55 ) }
    dend_2 { pt3dadd( -4.21531, -44.6082, 26.5989, 0.55 ) }
    dend_2 { pt3dadd( -5.30939, -47.1238, 28.9139, 0.55 ) }
    dend_2 { pt3dadd( -6.15207, -49.1377, 30.8047, 0.55 ) }
    dend_2 { pt3dadd( -6.92004, -51.2681, 32.7683, 0.28 ) }
    dend_2 { pt3dadd( -7.16099, -52.1506, 33.5667, 0.55 ) }
    dend_2 { pt3dadd( -7.5473, -53.7777, 34.9586, 0.28 ) }
    dend_2 { pt3dadd( -7.73785, -56.295, 36.8083, 0.55 ) }
    dend_2 { pt3dadd( -10.4512, -64.8069, 43.0326, 0.55 ) }
    dend_2 { pt3dadd( -13.5466, -72.6955, 49.8697, 0.55 ) }
    dend_2 { pt3dadd( -16.5084, -79.1694, 58.1081, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.55 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -46.9497, 41.016, 0.16505, 0.55 ) }
    dend_61 { pt3dadd( -50.8654, 41.6011, 2.38483, 0.55 ) }
    dend_61 { pt3dadd( -52.5077, 41.7623, 3.53027, 0.83 ) }
    dend_61 { pt3dadd( -54.4216, 41.8607, 5.13634, 0.55 ) }
    dend_61 { pt3dadd( -55.8809, 41.9397, 6.50287, 0.83 ) }
    dend_61 { pt3dadd( -59.7023, 42.2863, 10.044, 0.55 ) }
    dend_61 { pt3dadd( -61.1481, 42.4429, 11.3958, 0.28 ) }
    dend_61 { pt3dadd( -63.5499, 42.7384, 13.861, 0.55 ) }
    dend_61 { pt3dadd( -66.7727, 43.1542, 17.1523, 0.55 ) }
    dend_61 { pt3dadd( -69.2242, 43.467, 19.5337, 0.55 ) }
    dend_61 { pt3dadd( -72.5033, 43.8807, 22.6057, 0.28 ) }
    dend_61 { pt3dadd( -73.3593, 43.9915, 23.2963, 0.55 ) }
    dend_61 { pt3dadd( -75.133, 44.2404, 24.6556, 0.28 ) }
    dend_61 { pt3dadd( -76.3411, 44.4382, 25.4602, 0.55 ) }
    dend_61 { pt3dadd( -78.8164, 44.8173, 26.8819, 0.28 ) }
    dend_61 { pt3dadd( -80.2749, 44.955, 27.6414, 0.55 ) }
    dend_61 { pt3dadd( -82.8532, 45.0065, 29.0095, 0.28 ) }
    dend_61 { pt3dadd( -84.5876, 45.0276, 29.8664, 0.55 ) }
    dend_61 { pt3dadd( -94.9937, 44.4456, 39.9231, 0.55 ) }
    dend_61 { pt3dadd( -104.49, 42.4925, 50.6826, 0.55 ) }
    dend_61 { pt3dadd( -113.649, 39.1692, 61.3979, 0.55 ) }
    dend_61 { pt3dadd( -122.824, 34.174, 71.4295, 0.55 ) }
    dend_61 { pt3dadd( -130.349, 29.7534, 82.9885, 0.55 ) }
    dend_61 { pt3dadd( -138.935, 25.8777, 93.989, 0.55 ) }
    dend_61 { pt3dadd( -147.605, 24.361, 105.49, 0.55 ) }
    dend_61 { pt3dadd( -156.27, 21.6992, 116.786, 0.55 ) }
    dend_61 { pt3dadd( -164.629, 19.9938, 128.49, 0.55 ) }
    dend_61 { pt3dadd( -172.321, 18.068, 140.61, 0.55 ) }
    dend_61 { pt3dadd( -178.646, 14.4824, 153.136, 0.55 ) }
    dend_61 { pt3dadd( -185.055, 12.2385, 165.929, 0.55 ) }
    dend_61 { pt3dadd( -191.706, 8.55979, 178.257, 0.55 ) }
    dend_61 { pt3dadd( -196.694, 4.23039, 191.147, 0.55 ) }
    dend_61 { pt3dadd( -199.235, 0.81497, 204.99, 0.55 ) }
    dend_61 { pt3dadd( -201.79, -5.25057, 217.892, 0.55 ) }
    dend_61 { pt3dadd( -202.291, -11.6514, 230.874, 0.55 ) }
    dend_61 { pt3dadd( -203.535, -17.4245, 244.099, 0.55 ) }
    dend_61 { pt3dadd( -206.281, -22.1067, 257.526, 0.55 ) }
    dend_61 { pt3dadd( -211.939, -24.4492, 270.651, 0.55 ) }
    dend_61 { pt3dadd( -216.405, -28.4277, 283.841, 0.55 ) }
    dend_61 { pt3dadd( -218.087, -30.0953, 298.13, 0.55 ) }
    dend_61 { pt3dadd( -222.037, -30.628, 312.055, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -46.9497, 41.016, 0.16505, 0.55 ) }
    dend_56 { pt3dadd( -48.0449, 42.1894, -1.79533, 0.55 ) }
    dend_56 { pt3dadd( -48.7373, 43.4585, -3.86218, 0.55 ) }
    dend_56 { pt3dadd( -49.322, 44.9292, -5.98583, 0.55 ) }
    dend_56 { pt3dadd( -49.6881, 45.8501, -7.31563, 0.55 ) }
    dend_56 { pt3dadd( -50.356, 47.53, -9.74135, 0.83 ) }
    dend_56 { pt3dadd( -50.8446, 48.759, -11.516, 0.55 ) }
    dend_56 { pt3dadd( -51.2645, 50.4643, -14.0748, 0.83 ) }
    dend_56 { pt3dadd( -51.293, 51.5345, -15.4379, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -90.9789, 28.5812, 22.8479, 0.28 ) }
    dend_48 { pt3dadd( -91.5496, 27.1933, 23.2446, 0.28 ) }
    dend_48 { pt3dadd( -91.8354, 26.5737, 23.3762, 0.28 ) }
    dend_48 { pt3dadd( -92.2036, 25.689, 23.5293, 0.55 ) }
    dend_48 { pt3dadd( -92.5019, 24.9159, 23.6659, 0.28 ) }
    dend_48 { pt3dadd( -92.9368, 23.7454, 23.8839, 0.55 ) }
    dend_48 { pt3dadd( -94.123, 20.3342, 24.5597, 0.28 ) }
    dend_48 { pt3dadd( -94.5116, 19.1049, 24.71, 0.55 ) }
    dend_48 { pt3dadd( -95.1042, 17.1891, 24.8867, 0.28 ) }
    dend_48 { pt3dadd( -95.446, 16.0258, 24.9476, 0.55 ) }
    dend_48 { pt3dadd( -95.6842, 15.2171, 24.9741, 0.28 ) }
    dend_48 { pt3dadd( -95.9544, 14.2918, 25.0102, 0.55 ) }
    dend_48 { pt3dadd( -96.7403, 11.2409, 25.1757, 0.28 ) }
    dend_48 { pt3dadd( -96.9938, 10.3051, 25.2011, 0.55 ) }
    dend_48 { pt3dadd( -97.4681, 8.81444, 25.1322, 0.28 ) }
    dend_48 { pt3dadd( -97.8842, 7.82188, 25.0392, 0.28 ) }
    dend_48 { pt3dadd( -98.2727, 7.14095, 24.9738, 0.55 ) }
    dend_48 { pt3dadd( -99.6451, 5.22135, 24.868, 0.28 ) }
    dend_48 { pt3dadd( -100.287, 4.44157, 24.8491, 0.55 ) }
    dend_48 { pt3dadd( -101.876, 2.6197, 24.7424, 0.28 ) }
    dend_48 { pt3dadd( -103.48, 0.977375, 24.6465, 0.28 ) }
    dend_48 { pt3dadd( -105.241, -0.634689, 24.5296, 0.28 ) }
    dend_48 { pt3dadd( -106.054, -1.25731, 24.5014, 0.55 ) }
    dend_48 { pt3dadd( -109.656, -7.11081, 24.7889, 0.55 ) }
    dend_48 { pt3dadd( -113.561, -12.564, 26.3168, 0.55 ) }
    dend_48 { pt3dadd( -117.523, -18.1657, 26.8134, 0.55 ) }
    dend_48 { pt3dadd( -121.719, -23.6144, 26.6436, 0.55 ) }
    dend_48 { pt3dadd( -126.102, -28.8438, 25.7724, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -90.9789, 28.5812, 22.8479, 0.55 ) }
    dend_45 { pt3dadd( -91.7128, 28.5182, 22.9538, 0.55 ) }
    dend_45 { pt3dadd( -93.781, 28.3534, 23.5217, 0.55 ) }
    dend_45 { pt3dadd( -94.5578, 28.273, 23.7776, 0.55 ) }
    dend_45 { pt3dadd( -96.384, 28.0295, 24.4096, 0.55 ) }
    dend_45 { pt3dadd( -99.1937, 27.6784, 25.2438, 0.55 ) }
    dend_45 { pt3dadd( -100.654, 27.5401, 25.6495, 0.28 ) }
    dend_45 { pt3dadd( -102.927, 27.2735, 26.2381, 0.55 ) }
    dend_45 { pt3dadd( -104.615, 27.0383, 26.6155, 0.55 ) }
    dend_45 { pt3dadd( -105.328, 26.9343, 26.7766, 0.28 ) }
    dend_45 { pt3dadd( -109.604, 26.3081, 27.7374, 0.55 ) }
    dend_45 { pt3dadd( -111.603, 25.9181, 28.0673, 0.28 ) }
    dend_45 { pt3dadd( -114.301, 25.3757, 28.354, 0.28 ) }
    dend_45 { pt3dadd( -116.627, 24.937, 28.4631, 0.55 ) }
    dend_45 { pt3dadd( -125.699, 24.6349, 30.8157, 0.55 ) }
    dend_45 { pt3dadd( -134.45, 24.1375, 34.1467, 0.55 ) }
    dend_45 { pt3dadd( -142.68, 22.7272, 38.4123, 0.55 ) }
    dend_45 { pt3dadd( -150.668, 22.9175, 43.3194, 0.55 ) }
    dend_45 { pt3dadd( -157.471, 22.8636, 49.7732, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -162.91, 23.3797, 57.3937, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 100.368, 15.0991, -55.0034, 0.55 ) }
    dend_42 { pt3dadd( 105.982, 16.934, -59.6536, 0.55 ) }
    dend_42 { pt3dadd( 107.769, 17.4227, -61.227, 0.55 ) }
    dend_42 { pt3dadd( 110.012, 17.9639, -63.1607, 0.55 ) }
    dend_42 { pt3dadd( 114.095, 18.8827, -66.9048, 0.55 ) }
    dend_42 { pt3dadd( 118.38, 19.6545, -70.8971, 0.55 ) }
    dend_42 { pt3dadd( 120.491, 19.8712, -72.7769, 0.83 ) }
    dend_42 { pt3dadd( 122.245, 19.9165, -74.4398, 0.55 ) }
    dend_42 { pt3dadd( 123.574, 19.8292, -75.8008, 0.83 ) }
    dend_42 { pt3dadd( 126.83, 19.1599, -79.245, 0.55 ) }
    dend_42 { pt3dadd( 129.537, 18.3674, -82.0705, 0.55 ) }
    dend_42 { pt3dadd( 132.648, 17.4526, -85.1727, 0.55 ) }
    dend_42 { pt3dadd( 136.104, 16.5206, -88.7046, 0.55 ) }
    dend_42 { pt3dadd( 138.429, 15.837, -91.1222, 0.55 ) }
    dend_42 { pt3dadd( 141.057, 15.0492, -93.9279, 0.55 ) }
    dend_42 { pt3dadd( 143.324, 14.4272, -96.5116, 0.55 ) }
    dend_42 { pt3dadd( 144.744, 14.139, -98.3315, 0.55 ) }
    dend_42 { pt3dadd( 146.601, 13.5248, -102.028, 0.55 ) }
    dend_42 { pt3dadd( 147.634, 13.053, -104.334, 0.55 ) }
    dend_42 { pt3dadd( 148.592, 12.2446, -107.393, 0.55 ) }
    dend_42 { pt3dadd( 149.974, 10.692, -112.548, 0.55 ) }
    dend_42 { pt3dadd( 150.267, 10.2946, -113.706, 0.28 ) }
    dend_42 { pt3dadd( 154.019, 5.31999, -127.754, 0.28 ) }
    dend_42 { pt3dadd( 155.244, 3.90259, -131.878, 0.83 ) }
    dend_42 { pt3dadd( 159.999, -1.35304, -146.461, 0.83 ) }
    dend_42 { pt3dadd( 162.425, -4.05434, -153.194, 0.83 ) }
    dend_42 { pt3dadd( 163.569, -5.24794, -155.901, 0.55 ) }
    dend_42 { pt3dadd( 164.848, -6.40642, -158.534, 0.55 ) }
    dend_42 { pt3dadd( 168.221, -8.57101, -163.369, 0.55 ) }
    dend_42 { pt3dadd( 171.764, -10.4593, -167.594, 0.28 ) }
    dend_42 { pt3dadd( 172.776, -10.7048, -167.791, 0.55 ) }
    dend_42 { pt3dadd( 174.959, -11.0049, -167.477, 0.28 ) }
    dend_42 { pt3dadd( 176.293, -11.0739, -167.103, 0.55 ) }
    dend_42 { pt3dadd( 177.681, -11.1504, -166.592, 0.28 ) }
    dend_42 { pt3dadd( 179.336, -11.1504, -165.913, 0.55 ) }
    dend_42 { pt3dadd( 181.809, -11.0509, -165.178, 0.28 ) }
    dend_42 { pt3dadd( 183.802, -11.0398, -164.645, 0.55 ) }
    dend_42 { pt3dadd( 186.001, -10.9022, -164.249, 0.28 ) }
    dend_42 { pt3dadd( 188.998, -10.7364, -163.978, 0.55 ) }
    dend_42 { pt3dadd( 192.359, -10.4967, -163.885, 0.55 ) }
    dend_42 { pt3dadd( 195.319, -10.2741, -164.004, 0.28 ) }
    dend_42 { pt3dadd( 199.419, -9.95542, -164.399, 0.55 ) }
    dend_42 { pt3dadd( 206.517, -9.29823, -165.858, 0.55 ) }
    dend_42 { pt3dadd( 209.65, -8.89107, -166.9, 0.55 ) }
    dend_42 { pt3dadd( 210.996, -8.67734, -167.498, 0.83 ) }
    dend_42 { pt3dadd( 213.568, -8.2797, -168.875, 0.55 ) }
    dend_42 { pt3dadd( 215.349, -7.94504, -169.951, 0.83 ) }
    dend_42 { pt3dadd( 220.13, -6.92543, -172.916, 0.55 ) }
    dend_42 { pt3dadd( 223.074, -6.51252, -174.777, 0.28 ) }
    dend_42 { pt3dadd( 224.316, -6.39867, -175.413, 0.55 ) }
    dend_42 { pt3dadd( 227.736, -6.35357, -176.744, 0.28 ) }
    dend_42 { pt3dadd( 228.943, -6.43664, -177.119, 0.55 ) }
    dend_42 { pt3dadd( 231.431, -6.71529, -177.499, 0.28 ) }
    dend_42 { pt3dadd( 233.972, -7.1875, -177.428, 0.55 ) }
    dend_42 { pt3dadd( 239.099, -8.30426, -176.376, 0.28 ) }
    dend_42 { pt3dadd( 241.465, -8.89124, -175.634, 0.55 ) }
    dend_42 { pt3dadd( 244.996, -9.93822, -174.323, 0.28 ) }
    dend_42 { pt3dadd( 249.449, -11.2256, -172.513, 0.55 ) }
    dend_42 { pt3dadd( 252.664, -12.108, -171.16, 0.55 ) }
    dend_42 { pt3dadd( 258.211, -13.4568, -168.748, 0.28 ) }
    dend_42 { pt3dadd( 260.484, -13.9298, -167.954, 0.55 ) }
    dend_42 { pt3dadd( 264.396, -14.5771, -167.033, 0.28 ) }
    dend_42 { pt3dadd( 268.273, -14.9627, -166.416, 0.55 ) }
    dend_42 { pt3dadd( 270.387, -14.9728, -166.399, 0.28 ) }
    dend_42 { pt3dadd( 272.276, -14.746, -166.563, 0.55 ) }
    dend_42 { pt3dadd( 277.594, -13.8484, -167.57, 0.28 ) }
    dend_42 { pt3dadd( 281.367, -12.9517, -168.383, 0.28 ) }
    dend_42 { pt3dadd( 284.625, -11.937, -169.169, 0.55 ) }
    dend_42 { pt3dadd( 288.217, -10.7369, -170.234, 0.28 ) }
    dend_42 { pt3dadd( 289.115, -10.3732, -170.479, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 100.368, 15.0991, -55.0034, 0.55 ) }
    dend_35 { pt3dadd( 101.374, 12.5419, -56.6249, 0.55 ) }
    dend_35 { pt3dadd( 102.026, 10.3558, -57.8464, 0.28 ) }
    dend_35 { pt3dadd( 102.617, 8.35442, -58.7935, 0.55 ) }
    dend_35 { pt3dadd( 104.088, 4.13781, -60.8369, 0.28 ) }
    dend_35 { pt3dadd( 104.174, 3.8712, -61.0036, 0.55 ) }
    dend_35 { pt3dadd( 104.668, 2.47803, -61.9919, 0.28 ) }
    dend_35 { pt3dadd( 104.977, 1.3113, -62.9965, 0.55 ) }
    dend_35 { pt3dadd( 105.234, 0.0839386, -64.1857, 0.28 ) }
    dend_35 { pt3dadd( 105.539, -1.59661, -65.8858, 0.55 ) }
    dend_35 { pt3dadd( 106.3, -5.81612, -70.0757, 0.55 ) }
    dend_35 { pt3dadd( 106.952, -9.66771, -73.9633, 0.55 ) }
    dend_35 { pt3dadd( 107.444, -12.7497, -77.0753, 0.55 ) }
    dend_35 { pt3dadd( 107.871, -15.7853, -80.0822, 0.55 ) }
    dend_35 { pt3dadd( 107.978, -16.5696, -80.8262, 0.28 ) }
    dend_35 { pt3dadd( 108.114, -17.404, -81.5516, 0.55 ) }
    dend_35 { pt3dadd( 108.404, -18.5464, -82.4484, 0.28 ) }
    dend_35 { pt3dadd( 109.125, -20.5687, -83.8643, 0.55 ) }
    dend_35 { pt3dadd( 110.818, -24.3973, -85.9497, 0.55 ) }
    dend_35 { pt3dadd( 111.741, -26.4522, -86.8826, 0.28 ) }
    dend_35 { pt3dadd( 112.56, -28.5562, -87.9265, 0.55 ) }
    dend_35 { pt3dadd( 113.494, -31.529, -89.5054, 0.28 ) }
    dend_35 { pt3dadd( 114.097, -33.9463, -90.8392, 0.55 ) }
    dend_35 { pt3dadd( 114.847, -37.5783, -92.8435, 0.28 ) }
    dend_35 { pt3dadd( 115.646, -41.332, -94.8016, 0.55 ) }
    dend_35 { pt3dadd( 116.737, -46.7907, -97.6935, 0.28 ) }
    dend_35 { pt3dadd( 117.257, -49.7078, -99.2456, 0.55 ) }
    dend_35 { pt3dadd( 117.743, -52.6977, -100.904, 0.28 ) }
    dend_35 { pt3dadd( 118.149, -55.3354, -102.526, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 118.776, -58.6259, -104.833, 0.55 ) }
    dend_35 { pt3dadd( 119.56, -61.6518, -106.891, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 79.0862, 34.7975, -1.45583, 0.55 ) }
    dend_31 { pt3dadd( 80.9884, 34.5964, -1.14041, 0.55 ) }
    dend_31 { pt3dadd( 82.3702, 34.4065, -1.04528, 0.55 ) }
    dend_31 { pt3dadd( 85.3887, 33.9677, -0.996931, 0.55 ) }
    dend_31 { pt3dadd( 86.741, 33.7512, -1.09791, 0.55 ) }
    dend_31 { pt3dadd( 88.2124, 33.5518, -1.28071, 0.55 ) }
    dend_31 { pt3dadd( 90.1802, 33.3294, -1.66388, 0.55 ) }
    dend_31 { pt3dadd( 92.2476, 33.0538, -2.27082, 0.55 ) }
    dend_31 { pt3dadd( 93.3268, 32.904, -2.71593, 0.55 ) }
    dend_31 { pt3dadd( 95.5044, 32.6212, -3.92532, 0.55 ) }
    dend_31 { pt3dadd( 96.5054, 32.502, -4.51435, 0.55 ) }
    dend_31 { pt3dadd( 98.8489, 32.1807, -5.96072, 0.55 ) }
    dend_31 { pt3dadd( 100.439, 31.8959, -6.93203, 0.55 ) }
    dend_31 { pt3dadd( 101.611, 31.6748, -7.59262, 0.83 ) }
    dend_31 { pt3dadd( 103.488, 31.2478, -8.6319, 0.55 ) }
    dend_31 { pt3dadd( 105.331, 30.7316, -9.58372, 0.83 ) }
    dend_31 { pt3dadd( 106.9, 30.2153, -10.34, 0.55 ) }
    dend_31 { pt3dadd( 108.3, 29.7712, -10.9366, 0.55 ) }
    dend_31 { pt3dadd( 109.097, 29.5511, -11.2283, 0.83 ) }
    dend_31 { pt3dadd( 110.965, 29.0358, -11.8087, 0.28 ) }
    dend_31 { pt3dadd( 111.896, 28.8143, -12.0344, 0.28 ) }
    dend_31 { pt3dadd( 112.796, 28.5453, -12.3045, 0.28 ) }
    dend_31 { pt3dadd( 113.767, 28.2813, -12.5989, 0.28 ) }
    dend_31 { pt3dadd( 115.32, 27.8911, -13.1001, 0.28 ) }
    dend_31 { pt3dadd( 115.945, 27.7406, -13.2823, 0.55 ) }
    dend_31 { pt3dadd( 117.449, 27.3852, -13.5681, 0.55 ) }
    dend_31 { pt3dadd( 120.164, 26.709, -13.9471, 0.55 ) }
    dend_31 { pt3dadd( 120.918, 26.4993, -14.0204, 0.55 ) }
    dend_31 { pt3dadd( 121.593, 26.2878, -14.0588, 0.83 ) }
    dend_31 { pt3dadd( 123.065, 25.865, -14.0199, 0.55 ) }
    dend_31 { pt3dadd( 124.345, 25.4985, -13.9655, 0.55 ) }
    dend_31 { pt3dadd( 125.555, 25.1569, -13.908, 0.55 ) }
    dend_31 { pt3dadd( 126.491, 24.878, -13.8913, 0.55 ) }
    dend_31 { pt3dadd( 127.973, 24.3373, -13.9457, 0.55 ) }
    dend_31 { pt3dadd( 129.717, 23.5526, -14.1194, 0.55 ) }
    dend_31 { pt3dadd( 132.42, 22.04, -14.6056, 0.55 ) }
    dend_31 { pt3dadd( 133.901, 20.9957, -14.9861, 0.55 ) }
    dend_31 { pt3dadd( 135.184, 19.8725, -15.4001, 0.28 ) }
    dend_31 { pt3dadd( 135.566, 19.4538, -15.5533, 0.55 ) }
    dend_31 { pt3dadd( 136.412, 18.2708, -15.959, 0.28 ) }
    dend_31 { pt3dadd( 137.139, 16.9331, -16.3745, 0.55 ) }
    dend_31 { pt3dadd( 137.83, 15.2448, -16.745, 0.55 ) }
    dend_31 { pt3dadd( 138.3, 14.1317, -16.9354, 0.28 ) }
    dend_31 { pt3dadd( 138.473, 13.7374, -16.9836, 0.55 ) }
    dend_31 { pt3dadd( 138.922, 12.7576, -17.0904, 0.28 ) }
    dend_31 { pt3dadd( 139.536, 11.4819, -17.1999, 0.55 ) }
    dend_31 { pt3dadd( 141.14, 8.40762, -17.3925, 0.55 ) }
    dend_31 { pt3dadd( 141.977, 6.85721, -17.4581, 0.55 ) }
    dend_31 { pt3dadd( 142.755, 5.43584, -17.5059, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 79.0862, 34.7975, -1.45583, 0.55 ) }
    dend_30 { pt3dadd( 81.1888, 35.6091, 0.372545, 0.55 ) }
    dend_30 { pt3dadd( 81.8674, 35.8593, 0.919692, 0.55 ) }
    dend_30 { pt3dadd( 84.4186, 36.64, 2.86567, 0.55 ) }
    dend_30 { pt3dadd( 87.2574, 37.5794, 5.07198, 0.55 ) }
    dend_30 { pt3dadd( 90.8858, 38.7937, 8.00389, 0.55 ) }
    dend_30 { pt3dadd( 91.8886, 39.1289, 8.80637, 0.55 ) }
    dend_30 { pt3dadd( 93.6958, 39.6533, 10.2406, 0.55 ) }
    dend_30 { pt3dadd( 95.6813, 40.262, 11.7249, 0.55 ) }
    dend_30 { pt3dadd( 97.9957, 41.0177, 13.3285, 0.55 ) }
    dend_30 { pt3dadd( 100.174, 41.764, 14.8421, 0.55 ) }
    dend_30 { pt3dadd( 101.37, 42.2201, 15.6036, 0.55 ) }
    dend_30 { pt3dadd( 102.77, 42.798, 16.4875, 0.55 ) }
    dend_30 { pt3dadd( 104.502, 43.5598, 17.5384, 0.83 ) }
    dend_30 { pt3dadd( 107.372, 44.7433, 18.9474, 0.55 ) }
    dend_30 { pt3dadd( 109.289, 45.4309, 19.7991, 0.83 ) }
    dend_30 { pt3dadd( 111.97, 46.2414, 20.9096, 0.55 ) }
    dend_30 { pt3dadd( 112.798, 46.4419, 21.2467, 0.55 ) }
    dend_30 { pt3dadd( 115.385, 46.9233, 22.2611, 0.55 ) }
    dend_30 { pt3dadd( 120.055, 47.466, 23.9393, 0.55 ) }
    dend_30 { pt3dadd( 123.499, 47.6574, 25.1235, 0.55 ) }
    dend_30 { pt3dadd( 126.229, 47.694, 26.1474, 0.55 ) }
    dend_30 { pt3dadd( 129.014, 47.6022, 27.3125, 0.55 ) }
    dend_30 { pt3dadd( 129.601, 47.5677, 27.5633, 0.28 ) }
    dend_30 { pt3dadd( 130.796, 47.4497, 28.0776, 0.83 ) }
    dend_30 { pt3dadd( 135.703, 46.8991, 30.2302, 0.55 ) }
    dend_30 { pt3dadd( 139.142, 46.5058, 31.6691, 0.55 ) }
    dend_30 { pt3dadd( 141.951, 46.2669, 32.9081, 0.55 ) }
    dend_30 { pt3dadd( 143.629, 46.122, 33.6653, 0.83 ) }
    dend_30 { pt3dadd( 144.948, 46.0275, 34.2604, 0.28 ) }
    dend_30 { pt3dadd( 146.145, 45.9417, 34.7886, 0.55 ) }
    dend_30 { pt3dadd( 155.155, 47.79, 39.8472, 0.55 ) }
    dend_30 { pt3dadd( 165.021, 47.7994, 43.4308, 0.55 ) }
    dend_30 { pt3dadd( 174.697, 49.1375, 47.272, 0.55 ) }
    dend_30 { pt3dadd( 183.219, 49.3196, 53.3981, 0.55 ) }
    dend_30 { pt3dadd( 191.182, 48.1485, 60.1361, 0.55 ) }
    dend_30 { pt3dadd( 200.296, 45.0718, 64.3364, 0.55 ) }
    dend_30 { pt3dadd( 209.487, 40.7328, 66.9577, 0.55 ) }
    dend_30 { pt3dadd( 219.508, 38.1645, 68.7385, 0.55 ) }
    dend_30 { pt3dadd( 229.366, 35.5522, 71.2205, 0.55 ) }
    dend_30 { pt3dadd( 239.606, 33.9674, 72.8984, 0.55 ) }
    dend_30 { pt3dadd( 249.648, 33.0613, 75.8175, 0.55 ) }
    dend_30 { pt3dadd( 259.126, 30.4617, 79.5038, 0.55 ) }
    dend_30 { pt3dadd( 268.63, 29.8586, 83.9188, 0.55 ) }
    dend_30 { pt3dadd( 277.469, 30.9788, 89.4681, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.5745, -33.5461, 7.5815, 1.38 ) }
    dend_13 { pt3dadd( 1.10975, -36.493, 6.63891, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.5745, -33.5461, 7.5815, 0.55 ) }
    dend_12 { pt3dadd( -2.67236, -34.9458, 7.47812, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -3.88069, -36.7367, 7.36657, 0.55 ) }
    dend_12 { pt3dadd( -4.82762, -37.9249, 7.28907, 0.55 ) }
    dend_12 { pt3dadd( -5.60914, -38.9191, 7.09279, 0.55 ) }
    dend_12 { pt3dadd( -7.29481, -40.9811, 6.49094, 0.55 ) }
    dend_12 { pt3dadd( -8.47412, -42.3595, 6.03272, 0.55 ) }
    dend_12 { pt3dadd( -9.51695, -43.5954, 5.58226, 0.55 ) }
    dend_12 { pt3dadd( -12.2004, -46.6065, 4.4264, 0.55 ) }
    dend_12 { pt3dadd( -15.4314, -50.0952, 3.0645, 0.55 ) }
    dend_12 { pt3dadd( -17.929, -52.739, 1.96209, 0.55 ) }
    dend_12 { pt3dadd( -19.5187, -54.4742, 1.23372, 0.55 ) }
    dend_12 { pt3dadd( -21.3412, -56.5543, 0.404758, 0.55 ) }
    dend_12 { pt3dadd( -23.6496, -59.5313, -0.611016, 0.55 ) }
    dend_12 { pt3dadd( -24.9954, -61.6373, -1.17127, 0.55 ) }
    dend_12 { pt3dadd( -26.6661, -64.6602, -1.6991, 0.55 ) }
    dend_12 { pt3dadd( -27.996, -67.4879, -2.0593, 0.55 ) }
    dend_12 { pt3dadd( -29.3283, -71.0107, -2.39318, 0.55 ) }
    dend_12 { pt3dadd( -30.5739, -75.1406, -2.64251, 0.55 ) }
    dend_12 { pt3dadd( -31.2306, -78.2917, -2.71861, 0.55 ) }
    dend_12 { pt3dadd( -31.4653, -79.8573, -2.64154, 0.55 ) }
    dend_12 { pt3dadd( -31.8242, -83.531, -2.23372, 0.55 ) }
    dend_12 { pt3dadd( -32.1109, -86.9667, -1.7552, 0.55 ) }
    dend_12 { pt3dadd( -32.2563, -90.4228, -0.996462, 0.55 ) }
    dend_12 { pt3dadd( -32.374, -92.4052, -0.45655, 0.55 ) }
    dend_12 { pt3dadd( -32.7299, -98.5321, 1.44102, 0.55 ) }
    dend_12 { pt3dadd( -32.7601, -98.9832, 1.58821, 0.55 ) }
    dend_12 { pt3dadd( -32.902, -101.744, 2.56355, 0.55 ) }
    dend_12 { pt3dadd( -33.3994, -106.686, 4.39309, 0.55 ) }
    dend_12 { pt3dadd( -33.5627, -108.339, 4.90624, 0.55 ) }
    dend_12 { pt3dadd( -33.8246, -110.928, 5.26083, 0.55 ) }
    dend_12 { pt3dadd( -33.8692, -111.891, 5.17791, 0.55 ) }
    dend_12 { pt3dadd( -33.7996, -115.152, 4.31071, 0.55 ) }
    dend_12 { pt3dadd( -33.5814, -117.266, 3.32415, 0.55 ) }
    dend_12 { pt3dadd( -33.0557, -120.636, 1.08892, 0.55 ) }
    dend_12 { pt3dadd( -32.2072, -124.76, -1.93885, 0.28 ) }
    dend_12 { pt3dadd( -31.9641, -125.78, -2.82124, 0.55 ) }
    dend_12 { pt3dadd( -31.5733, -127.327, -4.29281, 0.28 ) }
    dend_12 { pt3dadd( -31.5149, -127.56, -4.52705, 0.55 ) }
    dend_12 { pt3dadd( -31.2172, -128.837, -5.70293, 0.28 ) }
    dend_12 { pt3dadd( -31.1581, -129.27, -6.00756, 0.55 ) }
    dend_12 { pt3dadd( -30.9561, -131.521, -7.1686, 0.28 ) }
    dend_12 { pt3dadd( -30.9179, -132.287, -7.55789, 0.55 ) }
    dend_12 { pt3dadd( -30.8509, -134.503, -8.56291, 0.28 ) }
    dend_12 { pt3dadd( -30.827, -135.2, -8.87637, 0.55 ) }
    dend_12 { pt3dadd( -30.7691, -137.606, -9.92181, 0.28 ) }
    dend_12 { pt3dadd( -30.736, -138.713, -10.4076, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.5084, -79.1694, 58.1081, 0.55 ) }
    dend_10 { pt3dadd( -20.8898, -86.3803, 65.0432, 0.55 ) }
    dend_10 { pt3dadd( -26.2432, -92.5595, 72.2852, 0.55 ) }
    dend_10 { pt3dadd( -31.3714, -99.4608, 79.0203, 0.55 ) }
    dend_10 { pt3dadd( -36.6899, -106.379, 85.5884, 0.55 ) }
    dend_10 { pt3dadd( -40.9912, -114.592, 91.3615, 0.55 ) }
    dend_10 { pt3dadd( -45.1526, -122.48, 97.666, 0.55 ) }
    dend_10 { pt3dadd( -48.2596, -132.105, 101.789, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -16.5084, -79.1694, 58.1081, 0.55 ) }
    dend_3 { pt3dadd( -16.5388, -87.7275, 66.31, 0.55 ) }
    dend_3 { pt3dadd( -15.889, -97.573, 72.8794, 0.55 ) }
    dend_3 { pt3dadd( -17.1274, -107.526, 79.1974, 0.55 ) }
    dend_3 { pt3dadd( -18.914, -118.048, 84.3558, 0.55 ) }
    dend_3 { pt3dadd( -20.2469, -128.52, 89.7468, 0.55 ) }
    dend_3 { pt3dadd( -21.5779, -138.574, 95.8842, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -51.293, 51.5345, -15.4379, 0.83 ) }
    dend_60 { pt3dadd( -50.7882, 52.9301, -16.0178, 0.83 ) }
    dend_60 { pt3dadd( -49.7034, 56.2313, -17.2598, 0.55 ) }
    dend_60 { pt3dadd( -49.2661, 57.6237, -17.7116, 0.83 ) }
    dend_60 { pt3dadd( -48.8224, 59.0858, -18.1202, 0.55 ) }
    dend_60 { pt3dadd( -48.4264, 60.531, -18.3844, 0.55 ) }
    dend_60 { pt3dadd( -48.2502, 61.2301, -18.4441, 0.28 ) }
    dend_60 { pt3dadd( -48.1931, 61.6589, -18.4006, 0.55 ) }
    dend_60 { pt3dadd( -48.0628, 62.992, -17.9803, 0.28 ) }
    dend_60 { pt3dadd( -48.0034, 63.5522, -17.7692, 0.55 ) }
    dend_60 { pt3dadd( -47.8481, 65.472, -16.9704, 0.28 ) }
    dend_60 { pt3dadd( -47.7827, 66.9752, -16.3032, 0.55 ) }
    dend_60 { pt3dadd( -47.8204, 69.2972, -15.2329, 0.28 ) }
    dend_60 { pt3dadd( -47.9408, 71.3242, -14.2809, 0.28 ) }
    dend_60 { pt3dadd( -48.0837, 72.4509, -13.7512, 0.55 ) }
    dend_60 { pt3dadd( -48.3383, 73.7865, -13.1534, 0.28 ) }
    dend_60 { pt3dadd( -48.5064, 74.4206, -12.8753, 0.55 ) }
    dend_60 { pt3dadd( -48.9617, 75.937, -12.3181, 0.28 ) }
    dend_60 { pt3dadd( -49.3146, 76.9669, -12.0229, 0.28 ) }
    dend_60 { pt3dadd( -49.6718, 77.9894, -11.7701, 0.28 ) }
    dend_60 { pt3dadd( -49.8394, 78.5305, -11.6311, 0.55 ) }
    dend_60 { pt3dadd( -50.3837, 80.7388, -11.0738, 0.28 ) }
    dend_60 { pt3dadd( -50.9269, 83.3723, -10.4268, 0.55 ) }
    dend_60 { pt3dadd( -51.1003, 84.2832, -10.2019, 0.55 ) }
    dend_60 { pt3dadd( -51.2951, 85.1894, -9.96351, 0.55 ) }
    dend_60 { pt3dadd( -51.7975, 87.1247, -9.52299, 0.55 ) }
    dend_60 { pt3dadd( -52.1972, 88.4038, -9.28856, 0.28 ) }
    dend_60 { pt3dadd( -52.4002, 88.8895, -9.22589, 0.55 ) }
    dend_60 { pt3dadd( -53.0484, 90.1937, -9.06397, 0.28 ) }
    dend_60 { pt3dadd( -53.7744, 91.6004, -8.96271, 0.55 ) }
    dend_60 { pt3dadd( -54.9712, 93.6472, -8.95592, 0.28 ) }
    dend_60 { pt3dadd( -55.5489, 94.5094, -9.01065, 0.28 ) }
    dend_60 { pt3dadd( -56.4561, 95.7464, -9.24752, 0.55 ) }
    dend_60 { pt3dadd( -57.4573, 97.056, -9.58227, 0.28 ) }
    dend_60 { pt3dadd( -57.6387, 97.2643, -9.65391, 0.55 ) }
    dend_60 { pt3dadd( -58.2911, 97.9357, -9.9362, 0.28 ) }
    dend_60 { pt3dadd( -60.5505, 100.088, -10.9198, 0.55 ) }
    dend_60 { pt3dadd( -63.6368, 102.829, -12.5144, 0.28 ) }
    dend_60 { pt3dadd( -64.1926, 103.308, -12.8583, 0.55 ) }
    dend_60 { pt3dadd( -65.7059, 104.57, -13.8534, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -66.3343, 105.097, -14.2932, 0.28 ) }
    dend_60 { pt3dadd( -66.8697, 105.549, -14.7094, 0.55 ) }
    dend_60 { pt3dadd( -68.3795, 106.704, -16.1387, 0.28 ) }
    dend_60 { pt3dadd( -69.4569, 107.369, -17.147, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -51.293, 51.5345, -15.4379, 0.55 ) }
    dend_57 { pt3dadd( -51.4187, 53.237, -15.4703, 0.55 ) }
    dend_57 { pt3dadd( -51.5296, 54.2326, -15.4013, 0.28 ) }
    dend_57 { pt3dadd( -51.7708, 54.9314, -15.1981, 0.55 ) }
    dend_57 { pt3dadd( -52.3247, 56.5361, -14.7315, 0.28 ) }
    dend_57 { pt3dadd( -52.7137, 57.6633, -14.4038, 0.55 ) }
    dend_57 { pt3dadd( -53.4308, 59.7412, -13.7997, 0.28 ) }
    dend_57 { pt3dadd( -53.9532, 60.8377, -13.2958, 0.55 ) }
    dend_57 { pt3dadd( -56.1124, 63.3747, -11.2513, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -126.102, -28.8438, 25.7724, 0.55 ) }
    dend_52 { pt3dadd( -131.18, -37.7395, 28.1654, 0.55 ) }
    dend_52 { pt3dadd( -134.511, -47.4688, 30.375, 0.55 ) }
    dend_52 { pt3dadd( -137.033, -57.6802, 30.4158, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -126.102, -28.8438, 25.7724, 0.55 ) }
    dend_49 { pt3dadd( -130.985, -36.5586, 25.6879, 0.55 ) }
    dend_49 { pt3dadd( -135.006, -44.6918, 24.6608, 0.55 ) }
    dend_49 { pt3dadd( -138.655, -52.9802, 23.4974, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -162.91, 23.3797, 57.3937, 0.55 ) }
    dend_47 { pt3dadd( -171.902, 24.2026, 63.8272, 0.55 ) }
    dend_47 { pt3dadd( -181.577, 26.0486, 68.917, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -162.91, 23.3797, 57.3937, 0.55 ) }
    dend_46 { pt3dadd( -171.655, 22.2656, 60.8751, 0.55 ) }
    dend_46 { pt3dadd( -180.503, 22.7121, 64.2425, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 119.56, -61.6518, -106.891, 0.28 ) }
    dend_39 { pt3dadd( 128.717, -66.2769, -119.511, 0.28 ) }
    dend_39 { pt3dadd( 129.612, -66.7999, -120.623, 0.55 ) }
    dend_39 { pt3dadd( 131.122, -67.6827, -122.5, 0.28 ) }
    dend_39 { pt3dadd( 132.394, -68.4261, -124.081, 0.28 ) }
    dend_39 { pt3dadd( 134.078, -69.4101, -126.174, 0.55 ) }
    dend_39 { pt3dadd( 136.297, -70.7075, -128.933, 0.55 ) }
    dend_39 { pt3dadd( 139.028, -72.8977, -130.169, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 119.56, -61.6518, -106.891, 0.55 ) }
    dend_36 { pt3dadd( 120.376, -62.8018, -108.006, 0.55 ) }
    dend_36 { pt3dadd( 120.644, -63.3286, -108.505, 0.28 ) }
    dend_36 { pt3dadd( 121.054, -64.2379, -109.381, 0.55 ) }
    dend_36 { pt3dadd( 121.958, -66.241, -111.312, 0.28 ) }
    dend_36 { pt3dadd( 122.585, -67.6292, -112.65, 0.55 ) }
    dend_36 { pt3dadd( 123.646, -69.9812, -114.916, 0.28 ) }
    dend_36 { pt3dadd( 124.869, -72.8745, -117.922, 0.28 ) }
    dend_36 { pt3dadd( 125.374, -74.2125, -119.333, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 142.755, 5.43584, -17.5059, 0.28 ) }
    dend_33 { pt3dadd( 144.959, 2.70222, -16.7846, 0.28 ) }
    dend_33 { pt3dadd( 147.753, -0.912169, -15.5057, 0.28 ) }
    dend_33 { pt3dadd( 149.523, -3.25892, -14.5722, 0.55 ) }
    dend_33 { pt3dadd( 150.59, -4.54714, -13.9863, 0.28 ) }
    dend_33 { pt3dadd( 151.157, -5.24102, -13.6635, 0.28 ) }
    dend_33 { pt3dadd( 153.969, -8.66745, -12.1285, 0.55 ) }
    dend_33 { pt3dadd( 154.617, -9.42532, -11.6769, 0.28 ) }
    dend_33 { pt3dadd( 156.159, -11.431, -10.3376, 0.55 ) }
    dend_33 { pt3dadd( 157.474, -13.1785, -9.25395, 0.28 ) }
    dend_33 { pt3dadd( 158.618, -14.5949, -8.40283, 0.55 ) }
    dend_33 { pt3dadd( 159.959, -16.2941, -7.50262, 0.55 ) }
    dend_33 { pt3dadd( 162.089, -19.0028, -6.44879, 0.55 ) }
    dend_33 { pt3dadd( 162.602, -19.6688, -6.21673, 0.55 ) }
    dend_33 { pt3dadd( 164.44, -22.1618, -5.38152, 0.28 ) }
    dend_33 { pt3dadd( 165.153, -23.1839, -5.07008, 0.55 ) }
    dend_33 { pt3dadd( 166.145, -24.4838, -4.67671, 0.28 ) }
    dend_33 { pt3dadd( 167.545, -26.3325, -4.21071, 0.55 ) }
    dend_33 { pt3dadd( 169.856, -29.2519, -3.93773, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 142.755, 5.43584, -17.5059, 0.55 ) }
    dend_32 { pt3dadd( 139.903, 5.34324, -17.4801, 0.55 ) }
    dend_32 { pt3dadd( 137.586, 5.26803, -17.4591, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.10975, -36.493, 6.63891, 0.83 ) }
    dend_17 { pt3dadd( 1.16073, -36.589, 6.63689, 0.83 ) }
    dend_17 { pt3dadd( 1.73239, -37.4343, 6.69061, 0.83 ) }
    dend_17 { pt3dadd( 2.24043, -38.1741, 6.68721, 0.55 ) }
    dend_17 { pt3dadd( 2.64574, -38.7643, 6.68451, 0.55 ) }
    dend_17 { pt3dadd( 3.50723, -40.0188, 6.67876, 0.83 ) }
    dend_17 { pt3dadd( 4.55217, -41.5404, 6.67178, 0.55 ) }
    dend_17 { pt3dadd( 5.11836, -42.3362, 6.68737, 0.83 ) }
    dend_17 { pt3dadd( 6.10679, -43.599, 6.78374, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.10975, -36.493, 6.63891, 0.55 ) }
    dend_14 { pt3dadd( 0.0827291, -37.5723, 3.55102, 0.55 ) }
    dend_14 { pt3dadd( -1.01966, -38.7309, 0.236559, 0.55 ) }
    dend_14 { pt3dadd( -2.32103, -40.0986, -3.6762, 0.55 ) }
    dend_14 { pt3dadd( -3.90132, -41.7593, -8.42755, 0.55 ) }
    dend_14 { pt3dadd( -4.79808, -42.7018, -11.1238, 0.55 ) }
    dend_14 { pt3dadd( -4.97823, -42.8911, -11.6654, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -21.5779, -138.574, 95.8842, 0.55 ) }
    dend_7 { pt3dadd( -22.167, -150.957, 104.311, 0.55 ) }
    dend_7 { pt3dadd( -20.8666, -164.251, 111.115, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -21.5779, -138.574, 95.8842, 0.55 ) }
    dend_4 { pt3dadd( -23.1906, -147.825, 101.004, 0.55 ) }
    dend_4 { pt3dadd( -25.1139, -156.766, 106.551, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -56.1124, 63.3747, -11.2513, 0.28 ) }
    dend_59 { pt3dadd( -58.1045, 64.6797, -9.52683, 0.28 ) }
    dend_59 { pt3dadd( -58.8788, 65.1505, -8.79281, 0.55 ) }
    dend_59 { pt3dadd( -61.1116, 66.5018, -6.61818, 0.28 ) }
    dend_59 { pt3dadd( -62.1926, 67.2015, -5.64284, 0.55 ) }
    dend_59 { pt3dadd( -65.114, 69.124, -3.10398, 0.28 ) }
    dend_59 { pt3dadd( -68.0831, 71.078, -0.523574, 0.55 ) }
    dend_59 { pt3dadd( -73.0033, 74.065, 3.72065, 0.28 ) }
    dend_59 { pt3dadd( -74.0512, 74.7085, 4.62756, 0.55 ) }
    dend_59 { pt3dadd( -76.3382, 76.2742, 6.58592, 0.28 ) }
    dend_59 { pt3dadd( -77.2318, 76.9349, 7.36957, 0.55 ) }
    dend_59 { pt3dadd( -86.7225, 80.9882, 13.0889, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -96.3025, 86.9945, 16.4595, 0.55 ) }
    dend_59 { pt3dadd( -105.13, 92.8588, 21.6457, 0.55 ) }
    dend_59 { pt3dadd( -112.449, 100.108, 27.3975, 0.55 ) }
    dend_59 { pt3dadd( -120.719, 107.17, 31.9765, 0.55 ) }
    dend_59 { pt3dadd( -130.183, 112.24, 36.8693, 0.55 ) }
    dend_59 { pt3dadd( -139.346, 115.975, 43.2954, 0.55 ) }
    dend_59 { pt3dadd( -147.864, 118.125, 51.1711, 0.55 ) }
    dend_59 { pt3dadd( -156.321, 121.02, 58.8735, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -56.1124, 63.3747, -11.2513, 0.55 ) }
    dend_58 { pt3dadd( -60.0187, 61.9761, -10.9265, 0.55 ) }
    dend_58 { pt3dadd( -62.047, 61.187, -10.7751, 0.28 ) }
    dend_58 { pt3dadd( -63.5564, 60.5998, -10.6625, 0.55 ) }
    dend_58 { pt3dadd( -64.8144, 60.1103, -10.5686, 0.28 ) }
    dend_58 { pt3dadd( -65.6956, 59.7675, -10.5028, 0.55 ) }
    dend_58 { pt3dadd( -68.1254, 58.8222, -10.3215, 0.28 ) }
    dend_58 { pt3dadd( -69.6945, 58.1074, -10.4148, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -137.033, -57.6802, 30.4158, 0.55 ) }
    dend_54 { pt3dadd( -140.655, -69.5595, 33.4441, 0.55 ) }
    dend_54 { pt3dadd( -143.732, -81.1801, 37.7915, 0.55 ) }
    dend_54 { pt3dadd( -146.296, -93.5314, 39.8588, 0.55 ) }
    dend_54 { pt3dadd( -149.823, -105.206, 43.6892, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -137.033, -57.6802, 30.4158, 0.55 ) }
    dend_53 { pt3dadd( -139.768, -62.8203, 28.2227, 0.55 ) }
    dend_53 { pt3dadd( -142.371, -67.5234, 25.0892, 0.55 ) }
    dend_53 { pt3dadd( -145.332, -72.5508, 22.9287, 0.55 ) }
    dend_53 { pt3dadd( -149.586, -76.6025, 20.8794, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -138.655, -52.9802, 23.4974, 0.55 ) }
    dend_51 { pt3dadd( -146.664, -62.1728, 16.2268, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -138.655, -52.9802, 23.4974, 0.55 ) }
    dend_50 { pt3dadd( -142.112, -64.3451, 28.7687, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 139.028, -72.8977, -130.169, 0.28 ) }
    dend_41 { pt3dadd( 142.74, -74.3786, -131.808, 0.28 ) }
    dend_41 { pt3dadd( 144.465, -75.0665, -132.57, 0.55 ) }
    dend_41 { pt3dadd( 147.753, -76.3783, -134.022, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 139.028, -72.8977, -130.169, 0.55 ) }
    dend_40 { pt3dadd( 138.724, -73.6101, -131.745, 0.55 ) }
    dend_40 { pt3dadd( 138.116, -75.0352, -134.896, 0.28 ) }
    dend_40 { pt3dadd( 137.918, -75.4995, -135.923, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 125.374, -74.2125, -119.333, 0.28 ) }
    dend_38 { pt3dadd( 126.851, -77.5076, -122.671, 0.28 ) }
    dend_38 { pt3dadd( 127.583, -79.1392, -124.323, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 125.374, -74.2125, -119.333, 0.55 ) }
    dend_37 { pt3dadd( 123.458, -75.1736, -118.398, 0.55 ) }
    dend_37 { pt3dadd( 118.114, -77.8537, -115.789, 0.28 ) }
    dend_37 { pt3dadd( 116.845, -78.4904, -115.169, 0.55 ) }
    dend_37 { pt3dadd( 113.372, -80.2321, -113.474, 0.28 ) }
    dend_37 { pt3dadd( 111.134, -81.3547, -112.381, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 6.10679, -43.599, 6.78374, 0.83 ) }
    dend_23 { pt3dadd( 6.15894, -43.8426, 6.75421, 0.83 ) }
    dend_23 { pt3dadd( 6.86041, -47.0304, 6.46837, 0.83 ) }
    dend_23 { pt3dadd( 7.13905, -49.4379, 6.33761, 0.83 ) }
    dend_23 { pt3dadd( 7.17857, -51.7825, 6.39192, 0.83 ) }
    dend_23 { pt3dadd( 7.05504, -54.9195, 6.65487, 0.83 ) }
    dend_23 { pt3dadd( 6.77815, -58.5451, 7.05404, 0.83 ) }
    dend_23 { pt3dadd( 6.42161, -62.6019, 7.70551, 0.83 ) }
    dend_23 { pt3dadd( 6.02186, -66.5506, 8.51024, 0.83 ) }
    dend_23 { pt3dadd( 5.26761, -71.41, 9.29729, 0.83 ) }
    dend_23 { pt3dadd( 4.84374, -73.6433, 9.50278, 0.83 ) }
    dend_23 { pt3dadd( 4.55044, -75.3186, 9.55574, 0.83 ) }
    dend_23 { pt3dadd( 3.9438, -78.5333, 9.57252, 0.83 ) }
    dend_23 { pt3dadd( 3.51174, -81.4021, 9.45793, 0.83 ) }
    dend_23 { pt3dadd( 3.10959, -87.4726, 8.6675, 0.83 ) }
    dend_23 { pt3dadd( 3.05753, -90.7715, 7.83371, 0.83 ) }
    dend_23 { pt3dadd( 3.07529, -93.8013, 6.85155, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.10679, -43.599, 6.78374, 0.55 ) }
    dend_18 { pt3dadd( 4.96862, -46.3547, 6.8639, 0.55 ) }
    dend_18 { pt3dadd( 4.0988, -48.3516, 7.06728, 0.55 ) }
    dend_18 { pt3dadd( 3.56307, -49.6236, 7.32758, 0.55 ) }
    dend_18 { pt3dadd( 2.79864, -51.6052, 7.93664, 0.55 ) }
    dend_18 { pt3dadd( 1.36066, -55.5177, 9.40479, 0.55 ) }
    dend_18 { pt3dadd( 0.214248, -58.4703, 10.8394, 0.55 ) }
    dend_18 { pt3dadd( -0.728404, -60.8294, 12.2429, 0.55 ) }
    dend_18 { pt3dadd( -1.75624, -63.2092, 13.8245, 0.55 ) }
    dend_18 { pt3dadd( -2.63591, -65.1803, 15.2385, 0.28 ) }
    dend_18 { pt3dadd( -3.40238, -66.7845, 16.6293, 0.55 ) }
    dend_18 { pt3dadd( -4.90793, -69.6935, 19.5693, 0.55 ) }
    dend_18 { pt3dadd( -5.95009, -71.4742, 21.5576, 0.55 ) }
    dend_18 { pt3dadd( -6.54415, -72.4725, 22.6602, 0.55 ) }
    dend_18 { pt3dadd( -7.29915, -73.6541, 23.8914, 0.83 ) }
    dend_18 { pt3dadd( -9.54558, -77.1663, 27.3006, 0.28 ) }
    dend_18 { pt3dadd( -10.2846, -78.3296, 28.3967, 0.55 ) }
    dend_18 { pt3dadd( -11.5452, -80.4296, 30.3126, 0.28 ) }
    dend_18 { pt3dadd( -11.9381, -81.0753, 30.9512, 0.55 ) }
    dend_18 { pt3dadd( -12.7713, -82.5898, 32.4292, 0.28 ) }
    dend_18 { pt3dadd( -13.2326, -83.4529, 33.2055, 0.55 ) }
    dend_18 { pt3dadd( -14.8331, -86.2915, 34.9433, 0.55 ) }
    dend_18 { pt3dadd( -17.5192, -93.7813, 42.839, 0.55 ) }
    dend_18 { pt3dadd( -19.7334, -100.878, 51.2287, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.97823, -42.8911, -11.6654, 0.55 ) }
    dend_16 { pt3dadd( -5.75622, -44.2708, -16.3052, 0.55 ) }
    dend_16 { pt3dadd( -6.0092, -44.5951, -17.639, 0.55 ) }
    dend_16 { pt3dadd( -6.70188, -45.406, -20.9142, 0.55 ) }
    dend_16 { pt3dadd( -8.34606, -47.008, -27.9055, 0.28 ) }
    dend_16 { pt3dadd( -8.62003, -47.2257, -28.9067, 0.55 ) }
    dend_16 { pt3dadd( -9.84632, -48.2205, -32.9776, 0.55 ) }
    dend_16 { pt3dadd( -11.7867, -49.5662, -38.2046, 0.55 ) }
    dend_16 { pt3dadd( -12.5509, -50.0255, -40.1725, 0.28 ) }
    dend_16 { pt3dadd( -13.2658, -50.3225, -41.8305, 0.28 ) }
    dend_16 { pt3dadd( -14.6858, -50.7647, -44.3873, 0.55 ) }
    dend_16 { pt3dadd( -16.3434, -51.1648, -47.6037, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -17.8249, -51.2947, -50.6332, 0.55 ) }
    dend_16 { pt3dadd( -18.9854, -51.2122, -52.9459, 0.55 ) }
    dend_16 { pt3dadd( -19.7504, -51.0314, -54.5808, 0.55 ) }
    dend_16 { pt3dadd( -21.9102, -50.3063, -59.4983, 0.55 ) }
    dend_16 { pt3dadd( -24.2191, -49.2227, -64.6107, 0.55 ) }
    dend_16 { pt3dadd( -25.1954, -48.6669, -66.6866, 0.28 ) }
    dend_16 { pt3dadd( -26.105, -48.1692, -68.6859, 0.55 ) }
    dend_16 { pt3dadd( -27.9863, -47.3978, -72.7054, 0.28 ) }
    dend_16 { pt3dadd( -28.6288, -47.1735, -74.0469, 0.83 ) }
    dend_16 { pt3dadd( -29.9203, -46.7207, -76.4238, 0.28 ) }
    dend_16 { pt3dadd( -30.9854, -46.5116, -77.9541, 0.55 ) }
    dend_16 { pt3dadd( -32.5654, -46.2914, -80.1341, 0.28 ) }
    dend_16 { pt3dadd( -33.2125, -46.1899, -80.9764, 0.55 ) }
    dend_16 { pt3dadd( -34.4694, -46.0316, -82.4569, 0.55 ) }
    dend_16 { pt3dadd( -36.4126, -45.5165, -84.6142, 0.55 ) }
    dend_16 { pt3dadd( -37.7325, -45.0665, -85.9432, 0.28 ) }
    dend_16 { pt3dadd( -38.8504, -44.5224, -86.9237, 0.55 ) }
    dend_16 { pt3dadd( -40.1516, -43.6754, -88.0902, 0.28 ) }
    dend_16 { pt3dadd( -40.3592, -43.5144, -88.2905, 0.55 ) }
    dend_16 { pt3dadd( -42.0277, -41.9891, -90.5133, 0.28 ) }
    dend_16 { pt3dadd( -43.1272, -40.8529, -92.2936, 0.55 ) }
    dend_16 { pt3dadd( -44.3809, -39.2063, -94.9294, 0.83 ) }
    dend_16 { pt3dadd( -45.2847, -37.8129, -97.2918, 0.28 ) }
    dend_16 { pt3dadd( -45.4895, -37.4588, -97.9452, 0.55 ) }
    dend_16 { pt3dadd( -46.9388, -34.8108, -103.143, 0.28 ) }
    dend_16 { pt3dadd( -47.1541, -34.3619, -104.111, 0.55 ) }
    dend_16 { pt3dadd( -47.7066, -32.902, -107.077, 0.28 ) }
    dend_16 { pt3dadd( -47.8471, -32.5267, -107.846, 0.55 ) }
    dend_16 { pt3dadd( -48.2609, -31.5458, -109.741, 0.28 ) }
    dend_16 { pt3dadd( -48.5888, -30.8371, -111.032, 0.55 ) }
    dend_16 { pt3dadd( -49.5104, -29.2414, -113.64, 0.28 ) }
    dend_16 { pt3dadd( -50.0932, -28.3843, -115.145, 0.55 ) }
    dend_16 { pt3dadd( -51.4355, -26.7243, -118.232, 0.28 ) }
    dend_16 { pt3dadd( -51.8463, -26.2751, -119.14, 0.55 ) }
    dend_16 { pt3dadd( -52.5252, -25.6698, -120.522, 0.28 ) }
    dend_16 { pt3dadd( -53.1313, -25.158, -121.648, 0.55 ) }
    dend_16 { pt3dadd( -54.4708, -24.1206, -123.871, 0.28 ) }
    dend_16 { pt3dadd( -54.8883, -23.8229, -124.521, 0.55 ) }
    dend_16 { pt3dadd( -58.1177, -21.5009, -129.151, 0.28 ) }
    dend_16 { pt3dadd( -59.3287, -20.5524, -130.643, 0.55 ) }
    dend_16 { pt3dadd( -61.5911, -18.6974, -133.132, 0.28 ) }
    dend_16 { pt3dadd( -62.631, -17.802, -134.216, 0.55 ) }
    dend_16 { pt3dadd( -65.1205, -15.7657, -136.537, 0.28 ) }
    dend_16 { pt3dadd( -66.0673, -15.0707, -137.343, 0.55 ) }
    dend_16 { pt3dadd( -69.6495, -12.946, -140.048, 0.28 ) }
    dend_16 { pt3dadd( -71.17, -12.2919, -141.158, 0.55 ) }
    dend_16 { pt3dadd( -73.3894, -11.792, -142.71, 0.55 ) }
    dend_16 { pt3dadd( -74.7829, -11.5865, -143.63, 0.55 ) }
    dend_16 { pt3dadd( -77.7619, -11.2444, -145.28, 0.28 ) }
    dend_16 { pt3dadd( -80.7986, -10.9331, -146.721, 0.28 ) }
    dend_16 { pt3dadd( -83.3669, -10.6608, -147.851, 0.55 ) }
    dend_16 { pt3dadd( -86.6597, -10.0248, -148.908, 0.28 ) }
    dend_16 { pt3dadd( -88.3752, -9.49486, -149.232, 0.55 ) }
    dend_16 { pt3dadd( -92.5797, -7.5814, -149.646, 0.28 ) }
    dend_16 { pt3dadd( -94.9104, -6.17569, -149.409, 0.55 ) }
    dend_16 { pt3dadd( -96.5094, -5.0491, -148.983, 0.28 ) }
    dend_16 { pt3dadd( -98.431, -3.76703, -148.153, 0.55 ) }
    dend_16 { pt3dadd( -100.905, -2.08607, -146.892, 0.28 ) }
    dend_16 { pt3dadd( -101.846, -1.49055, -146.424, 0.55 ) }
    dend_16 { pt3dadd( -106.629, 1.20125, -144.448, 0.28 ) }
    dend_16 { pt3dadd( -108.246, 2.05484, -143.796, 0.55 ) }
    dend_16 { pt3dadd( -112.125, 3.96162, -142.168, 0.28 ) }
    dend_16 { pt3dadd( -114.234, 4.97616, -141.285, 0.55 ) }
    dend_16 { pt3dadd( -115.969, 5.80753, -140.562, 0.55 ) }
    dend_16 { pt3dadd( -118.032, 6.78623, -139.743, 0.28 ) }
    dend_16 { pt3dadd( -119.071, 7.28098, -139.463, 0.55 ) }
    dend_16 { pt3dadd( -122.496, 9.03397, -138.706, 0.28 ) }
    dend_16 { pt3dadd( -124.279, 10.1368, -138.276, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.97823, -42.8911, -11.6654, 0.55 ) }
    dend_15 { pt3dadd( -3.96571, -43.1596, -12.2591, 0.55 ) }
    dend_15 { pt3dadd( -2.91309, -43.3021, -12.8261, 0.55 ) }
    dend_15 { pt3dadd( -1.55441, -43.382, -13.4647, 0.55 ) }
    dend_15 { pt3dadd( -0.415216, -43.3552, -13.9368, 0.55 ) }
    dend_15 { pt3dadd( 7.34051, -42.41, -16.4776, 0.55 ) }
    dend_15 { pt3dadd( 9.11276, -42.0097, -17.0684, 0.55 ) }
    dend_15 { pt3dadd( 11.7479, -41.2417, -17.9878, 0.55 ) }
    dend_15 { pt3dadd( 13.6193, -40.6401, -18.6486, 0.55 ) }
    dend_15 { pt3dadd( 15.4567, -39.9555, -19.254, 0.28 ) }
    dend_15 { pt3dadd( 18.3099, -38.7554, -20.0582, 0.55 ) }
    dend_15 { pt3dadd( 22.5826, -36.8496, -21.0417, 0.28 ) }
    dend_15 { pt3dadd( 22.9479, -36.7512, -21.2111, 0.55 ) }
    dend_15 { pt3dadd( 25.0369, -36.564, -22.9026, 0.28 ) }
    dend_15 { pt3dadd( 26.2431, -36.5334, -24.2742, 0.55 ) }
    dend_15 { pt3dadd( 27.3985, -36.6264, -25.8808, 0.55 ) }
    dend_15 { pt3dadd( 29.4169, -36.9681, -28.7964, 0.55 ) }
    dend_15 { pt3dadd( 33.3884, -37.6888, -34.5065, 0.55 ) }
    dend_15 { pt3dadd( 36.1177, -38.2265, -38.2917, 0.55 ) }
    dend_15 { pt3dadd( 37.0926, -38.4291, -39.572, 0.55 ) }
    dend_15 { pt3dadd( 43.7043, -39.6923, -47.8297, 0.55 ) }
    dend_15 { pt3dadd( 45.5916, -40.0, -49.9879, 0.55 ) }
    dend_15 { pt3dadd( 46.7412, -40.1794, -51.1178, 0.55 ) }
    dend_15 { pt3dadd( 49.6408, -40.7044, -53.5133, 0.55 ) }
    dend_15 { pt3dadd( 56.8916, -42.4336, -58.8407, 0.55 ) }
    dend_15 { pt3dadd( 58.8972, -42.9996, -60.1885, 0.28 ) }
    dend_15 { pt3dadd( 60.0919, -43.3845, -60.8657, 0.55 ) }
    dend_15 { pt3dadd( 61.8741, -44.0372, -61.8333, 0.28 ) }
    dend_15 { pt3dadd( 62.6285, -44.3884, -62.1721, 0.55 ) }
    dend_15 { pt3dadd( 65.0299, -45.7941, -62.5581, 0.28 ) }
    dend_15 { pt3dadd( 66.5011, -47.4377, -61.8144, 0.55 ) }
    dend_15 { pt3dadd( 67.3292, -48.581, -61.2989, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 68.0037, -49.8118, -60.7094, 0.55 ) }
    dend_15 { pt3dadd( 68.5239, -51.1265, -60.1152, 0.28 ) }
    dend_15 { pt3dadd( 68.7423, -51.7991, -59.8685, 0.55 ) }
    dend_15 { pt3dadd( 69.1847, -53.5449, -59.2237, 0.28 ) }
    dend_15 { pt3dadd( 69.3259, -54.0687, -59.1211, 0.55 ) }
    dend_15 { pt3dadd( 70.208, -57.0826, -58.6833, 0.28 ) }
    dend_15 { pt3dadd( 70.7383, -58.4925, -58.6135, 0.55 ) }
    dend_15 { pt3dadd( 72.1288, -61.5358, -58.695, 0.28 ) }
    dend_15 { pt3dadd( 72.7406, -62.6686, -58.8062, 0.55 ) }
    dend_15 { pt3dadd( 74.9802, -66.414, -59.2884, 0.28 ) }
    dend_15 { pt3dadd( 75.5481, -67.3275, -59.4348, 0.55 ) }
    dend_15 { pt3dadd( 77.3302, -70.2215, -60.0226, 0.28 ) }
    dend_15 { pt3dadd( 77.6906, -70.8934, -60.1365, 0.55 ) }
    dend_15 { pt3dadd( 78.5867, -72.6636, -60.453, 0.28 ) }
    dend_15 { pt3dadd( 79.1625, -73.6979, -60.7147, 0.55 ) }
    dend_15 { pt3dadd( 79.7957, -74.7215, -61.0215, 0.55 ) }
    dend_15 { pt3dadd( 81.0525, -76.7628, -61.6205, 0.28 ) }
    dend_15 { pt3dadd( 81.9962, -78.0437, -62.0553, 0.55 ) }
    dend_15 { pt3dadd( 85.2061, -81.3336, -63.4398, 0.28 ) }
    dend_15 { pt3dadd( 86.5186, -82.4304, -64.0161, 0.55 ) }
    dend_15 { pt3dadd( 87.4371, -83.1352, -64.3936, 0.28 ) }
    dend_15 { pt3dadd( 88.3831, -83.7894, -64.7572, 0.55 ) }
    dend_15 { pt3dadd( 91.3386, -85.652, -65.8119, 0.28 ) }
    dend_15 { pt3dadd( 93.5625, -87.0886, -66.5559, 0.55 ) }
    dend_15 { pt3dadd( 97.2572, -89.76, -67.5695, 0.28 ) }
    dend_15 { pt3dadd( 98.4216, -90.5926, -67.8828, 0.55 ) }
    dend_15 { pt3dadd( 100.623, -92.1264, -68.3072, 0.28 ) }
    dend_15 { pt3dadd( 101.343, -92.6284, -68.3944, 0.55 ) }
    dend_15 { pt3dadd( 102.455, -93.424, -68.344, 0.28 ) }
    dend_15 { pt3dadd( 103.413, -94.0956, -68.219, 0.55 ) }
    dend_15 { pt3dadd( 105.936, -95.7707, -67.6204, 0.28 ) }
    dend_15 { pt3dadd( 108.834, -97.5692, -66.8842, 0.28 ) }
    dend_15 { pt3dadd( 110.272, -98.4062, -66.4088, 0.28 ) }
    dend_15 { pt3dadd( 111.765, -99.2077, -66.0155, 0.55 ) }
    dend_15 { pt3dadd( 113.969, -100.277, -65.4476, 0.28 ) }
    dend_15 { pt3dadd( 114.944, -100.736, -65.1747, 0.83 ) }
    dend_15 { pt3dadd( 117.387, -101.937, -64.3876, 0.28 ) }
    dend_15 { pt3dadd( 118.466, -102.486, -64.1044, 0.55 ) }
    dend_15 { pt3dadd( 123.267, -105.092, -63.0754, 0.28 ) }
    dend_15 { pt3dadd( 125.735, -106.433, -62.7458, 0.28 ) }
    dend_15 { pt3dadd( 127.572, -107.415, -62.616, 0.55 ) }
    dend_15 { pt3dadd( 128.679, -108.013, -62.6516, 0.55 ) }
    dend_15 { pt3dadd( 131.681, -109.65, -62.9542, 0.28 ) }
    dend_15 { pt3dadd( 134.5, -111.299, -63.34, 0.55 ) }
    dend_15 { pt3dadd( 137.053, -112.873, -63.6933, 0.28 ) }
    dend_15 { pt3dadd( 139.392, -114.332, -64.1213, 0.55 ) }
    dend_15 { pt3dadd( 141.326, -115.517, -64.4644, 0.28 ) }
    dend_15 { pt3dadd( 142.905, -116.381, -64.6682, 0.55 ) }
    dend_15 { pt3dadd( 146.702, -118.266, -65.0007, 0.28 ) }
    dend_15 { pt3dadd( 148.606, -119.215, -65.099, 0.55 ) }
    dend_15 { pt3dadd( 151.434, -120.643, -65.1529, 0.28 ) }
    dend_15 { pt3dadd( 153.744, -121.748, -65.1472, 0.55 ) }
    dend_15 { pt3dadd( 159.193, -124.114, -65.1364, 0.28 ) }
    dend_15 { pt3dadd( 161.476, -124.967, -65.2632, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -20.8666, -164.251, 111.115, 0.55 ) }
    dend_9 { pt3dadd( -20.9499, -171.385, 114.413, 0.55 ) }
    dend_9 { pt3dadd( -20.1052, -179.032, 116.022, 0.55 ) }
    dend_9 { pt3dadd( -19.8227, -186.436, 118.647, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -20.8666, -164.251, 111.115, 0.55 ) }
    dend_8 { pt3dadd( -20.2669, -172.876, 117.251, 0.55 ) }
    dend_8 { pt3dadd( -21.1333, -180.274, 124.797, 0.55 ) }
    dend_8 { pt3dadd( -21.9984, -185.956, 133.707, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -25.1139, -156.766, 106.551, 0.55 ) }
    dend_6 { pt3dadd( -26.4854, -166.446, 111.314, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -25.1139, -156.766, 106.551, 0.55 ) }
    dend_5 { pt3dadd( -27.7537, -166.046, 112.572, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.07529, -93.8013, 6.85155, 0.83 ) }
    dend_25 { pt3dadd( 3.95325, -97.4716, 7.55168, 0.83 ) }
    dend_25 { pt3dadd( 4.7474, -100.566, 8.40649, 0.83 ) }
    dend_25 { pt3dadd( 5.53681, -103.641, 9.25619, 0.83 ) }
    dend_25 { pt3dadd( 6.28648, -106.562, 10.0631, 0.83 ) }
    dend_25 { pt3dadd( 7.44179, -111.063, 11.3067, 0.83 ) }
    dend_25 { pt3dadd( 8.58875, -115.532, 12.5412, 0.83 ) }
    dend_25 { pt3dadd( 9.43869, -118.492, 13.8005, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.07529, -93.8013, 6.85155, 0.55 ) }
    dend_24 { pt3dadd( 4.06173, -95.1083, 7.24747, 0.55 ) }
    dend_24 { pt3dadd( 4.90025, -96.1192, 7.38459, 0.55 ) }
    dend_24 { pt3dadd( 5.52137, -96.8645, 7.39992, 0.55 ) }
    dend_24 { pt3dadd( 6.17326, -97.7406, 7.2516, 0.83 ) }
    dend_24 { pt3dadd( 6.90611, -98.7329, 6.93747, 0.55 ) }
    dend_24 { pt3dadd( 7.62292, -99.7034, 6.63021, 0.83 ) }
    dend_24 { pt3dadd( 8.38796, -100.754, 6.17603, 0.55 ) }
    dend_24 { pt3dadd( 8.85661, -101.36, 5.85737, 0.83 ) }
    dend_24 { pt3dadd( 10.3639, -103.318, 4.63986, 0.55 ) }
    dend_24 { pt3dadd( 11.4689, -104.858, 3.53155, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -19.7334, -100.878, 51.2287, 0.55 ) }
    dend_20 { pt3dadd( -24.8378, -110.943, 57.6415, 0.55 ) }
    dend_20 { pt3dadd( -31.7718, -119.867, 64.0273, 0.55 ) }
    dend_20 { pt3dadd( -39.7135, -127.623, 70.7562, 0.55 ) }
    dend_20 { pt3dadd( -48.8394, -133.939, 77.4886, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -19.7334, -100.878, 51.2287, 0.55 ) }
    dend_19 { pt3dadd( -22.4697, -108.768, 58.5478, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 9.43869, -118.492, 13.8005, 0.55 ) }
    dend_27 { pt3dadd( 9.55487, -120.852, 14.3983, 0.55 ) }
    dend_27 { pt3dadd( 9.76056, -123.861, 15.2573, 0.55 ) }
    dend_27 { pt3dadd( 9.96012, -126.702, 16.0536, 0.55 ) }
    dend_27 { pt3dadd( 10.0883, -128.722, 16.5834, 0.55 ) }
    dend_27 { pt3dadd( 10.2941, -132.328, 17.464, 0.55 ) }
    dend_27 { pt3dadd( 11.0933, -142.448, 19.7344, 0.55 ) }
    dend_27 { pt3dadd( 11.486, -145.876, 20.3861, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 11.806, -148.288, 20.731, 0.55 ) }
    dend_27 { pt3dadd( 12.2557, -151.036, 20.9178, 0.55 ) }
    dend_27 { pt3dadd( 12.6218, -153.158, 20.8693, 0.55 ) }
    dend_27 { pt3dadd( 13.6779, -158.1, 20.5984, 0.55 ) }
    dend_27 { pt3dadd( 14.3535, -161.861, 20.351, 0.55 ) }
    dend_27 { pt3dadd( 14.8413, -164.328, 20.278, 0.55 ) }
    dend_27 { pt3dadd( 15.9924, -170.737, 20.4017, 0.55 ) }
    dend_27 { pt3dadd( 16.6863, -175.053, 20.663, 0.55 ) }
    dend_27 { pt3dadd( 17.5198, -180.625, 21.3113, 0.55 ) }
    dend_27 { pt3dadd( 18.4102, -186.956, 22.5418, 0.55 ) }
    dend_27 { pt3dadd( 19.1167, -191.178, 23.6692, 0.55 ) }
    dend_27 { pt3dadd( 19.5743, -193.671, 24.4168, 0.55 ) }
    dend_27 { pt3dadd( 19.9566, -195.973, 25.0879, 0.55 ) }
    dend_27 { pt3dadd( 20.5264, -198.879, 25.818, 0.55 ) }
    dend_27 { pt3dadd( 21.9499, -205.878, 27.0933, 0.55 ) }
    dend_27 { pt3dadd( 22.6177, -208.577, 27.514, 0.55 ) }
    dend_27 { pt3dadd( 23.2969, -211.587, 27.9428, 0.55 ) }
    dend_27 { pt3dadd( 24.2871, -216.109, 28.5535, 0.55 ) }
    dend_27 { pt3dadd( 24.8814, -219.598, 29.011, 0.55 ) }
    dend_27 { pt3dadd( 25.2714, -222.923, 29.3514, 0.55 ) }
    dend_27 { pt3dadd( 25.5064, -226.103, 29.638, 0.55 ) }
    dend_27 { pt3dadd( 25.6722, -229.211, 29.9467, 0.55 ) }
    dend_27 { pt3dadd( 25.8093, -231.421, 30.1489, 0.55 ) }
    dend_27 { pt3dadd( 26.0895, -235.033, 30.3649, 0.55 ) }
    dend_27 { pt3dadd( 26.459, -239.363, 30.2879, 0.55 ) }
    dend_27 { pt3dadd( 26.7352, -241.458, 30.1118, 0.55 ) }
    dend_27 { pt3dadd( 27.0365, -243.292, 29.8267, 0.55 ) }
    dend_27 { pt3dadd( 27.818, -246.735, 29.1316, 0.55 ) }
    dend_27 { pt3dadd( 28.3089, -248.917, 28.6249, 0.55 ) }
    dend_27 { pt3dadd( 28.9149, -251.608, 28.109, 0.55 ) }
    dend_27 { pt3dadd( 29.2381, -253.508, 27.8395, 0.55 ) }
    dend_27 { pt3dadd( 29.9365, -258.46, 27.3036, 0.55 ) }
    dend_27 { pt3dadd( 30.2956, -262.182, 27.1368, 0.55 ) }
    dend_27 { pt3dadd( 30.6252, -267.963, 27.3114, 0.55 ) }
    dend_27 { pt3dadd( 30.8171, -271.7, 27.7874, 0.55 ) }
    dend_27 { pt3dadd( 30.9537, -275.629, 28.4023, 0.28 ) }
    dend_27 { pt3dadd( 30.9526, -277.212, 28.7014, 0.28 ) }
    dend_27 { pt3dadd( 30.8349, -281.068, 29.7587, 0.28 ) }
    dend_27 { pt3dadd( 30.6155, -284.64, 30.9978, 0.28 ) }
    dend_27 { pt3dadd( 30.6056, -289.348, 33.2217, 0.28 ) }
    dend_27 { pt3dadd( 32.665, -299.766, 36.0069, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 9.43869, -118.492, 13.8005, 0.55 ) }
    dend_26 { pt3dadd( 10.6411, -119.01, 15.0078, 0.55 ) }
    dend_26 { pt3dadd( 12.9886, -120.364, 17.6779, 0.55 ) }
    dend_26 { pt3dadd( 14.9543, -121.711, 20.0766, 0.28 ) }
    dend_26 { pt3dadd( 17.0141, -123.25, 22.722, 0.55 ) }
    dend_26 { pt3dadd( 18.1116, -124.242, 24.5168, 0.28 ) }
    dend_26 { pt3dadd( 19.8388, -126.043, 27.8638, 0.55 ) }
    dend_26 { pt3dadd( 20.3341, -127.014, 29.5612, 0.28 ) }
    dend_26 { pt3dadd( 20.456, -127.369, 30.2454, 0.28 ) }
    dend_26 { pt3dadd( 20.6549, -127.876, 31.4384, 0.55 ) }
    dend_26 { pt3dadd( 21.6074, -129.528, 35.8915, 0.28 ) }
    dend_26 { pt3dadd( 22.0535, -130.17, 37.7438, 0.55 ) }
    dend_26 { pt3dadd( 23.7709, -132.011, 42.9608, 0.28 ) }
    dend_26 { pt3dadd( 24.8264, -132.908, 45.6643, 0.28 ) }
    dend_26 { pt3dadd( 26.2718, -134.055, 48.8981, 0.55 ) }
    dend_26 { pt3dadd( 28.7039, -135.823, 53.4105, 0.28 ) }
    dend_26 { pt3dadd( 29.078, -136.054, 53.9711, 0.55 ) }
    dend_26 { pt3dadd( 31.0562, -137.175, 56.5739, 0.28 ) }
    dend_26 { pt3dadd( 31.2554, -137.278, 56.7867, 0.55 ) }
    dend_26 { pt3dadd( 32.982, -138.522, 58.7179, 0.28 ) }
    dend_26 { pt3dadd( 33.7629, -139.208, 59.6907, 0.55 ) }
    dend_26 { pt3dadd( 40.1036, -144.264, 67.767, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -48.8394, -133.939, 77.4886, 0.55 ) }
    dend_22 { pt3dadd( -53.6587, -137.986, 84.7146, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -48.8394, -133.939, 77.4886, 0.55 ) }
    dend_21 { pt3dadd( -54.0555, -141.082, 80.3145, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 5
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 19
    dend_48 nseg = 3
    dend_45 nseg = 5
    dend_42 nseg = 13
    dend_35 nseg = 5
    dend_31 nseg = 3
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_BP_f920d1af2c_0_0


