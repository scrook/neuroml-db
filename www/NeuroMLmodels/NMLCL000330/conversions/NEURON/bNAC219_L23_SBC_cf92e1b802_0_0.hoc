// Cell: bNAC219_L23_SBC_cf92e1b802_0_0
/*
{
  "id" : "bNAC219_L23_SBC_cf92e1b802_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.35607, -9.92062, 3.55793, 1.62771", "-2.13329, -8.93909, 3.21226, 2.54602", "-1.91051, -7.95756, 2.86658, 3.70659", "-1.68773, -6.97603, 2.5209, 4.24829", "-1.46495, -5.9945, 2.17523, 4.82907", "-1.24217, -5.01297, 1.82955, 5.75298", "-1.01939, -4.03144, 1.48387, 7.46986", "-0.796609, -3.04991, 1.1382, 8.54216", "-0.573829, -2.06838, 0.792522, 9.30242", "-0.351049, -1.08685, 0.446846, 9.90814", "-0.128269, -0.105321, 0.101169, 9.87151", "0.0945111, 0.876209, -0.244507, 9.88205", "0.317291, 1.85774, -0.590184, 9.8926", "0.540071, 2.83927, -0.93586, 9.86833", "0.762851, 3.8208, -1.28154, 10.2216", "0.985631, 4.80233, -1.62721, 11.2292", "1.20841, 5.78386, -1.97289, 10.7799", "1.43119, 6.76539, -2.31857, 9.31788", "1.65397, 7.74692, -2.66424, 7.45624", "1.87675, 8.72845, -3.00992, 5.40977", "2.09953, 9.70998, -3.3556, 3.05031" ]
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.4238, 8.10063, -8.54536, 0.55", "-3.50537, 8.21108, -10.9736, 0.55", "-5.71635, 8.43687, -15.9375, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999054568372
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.713799, -11.1181, -13.5654, 0.83", "-1.52047, -15.293, -14.0009, 0.83", "-2.17629, -18.6871, -14.355, 0.55", "-2.60107, -20.8856, -14.5844, 0.55", "-2.94596, -22.6705, -14.7706, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999054568372
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.1062, 0.392636, -8.79536, 0.55", "3.55575, -0.036957, -9.7984, 0.55", "4.1915, -0.644493, -11.2169, 0.55", "5.71848, -2.10369, -14.624, 1.11", "8.35861, -4.62664, -20.5147, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999054568372
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.9762, 5.76364, 1.85464, 1.11", "8.95767, 5.0779, 2.01173, 1.11", "11.3696, 4.24319, 2.20294, 0.83", "13.8867, 3.37208, 2.40249, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999054568372
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.09953, 9.70998, -3.3556, 1.38", "5.41967, 24.3379, -3.3556, 1.38", "8.7398, 38.9659, -3.3556, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-5.71635, 8.43687, -15.9375, 0.55", "-7.23412, 8.84074, -16.4747, 0.55", "-8.87294, 9.20249, -17.1339, 0.55", "-11.7373, 10.0666, -18.4218, 0.55", "-15.2841, 11.3145, -20.1483, 0.55", "-17.0272, 12.0179, -21.1764, 0.55", "-19.1621, 12.9433, -22.49, 0.55", "-21.3477, 13.843, -23.9137, 0.55", "-25.4538, 15.3059, -26.5339, 0.55", "-28.061, 16.1058, -28.1277, 0.55", "-32.5076, 17.2262, -30.5131, 0.55", "-34.9688, 17.7144, -31.7253, 0.55", "-38.3464, 18.2364, -33.1284, 0.55", "-41.8254, 18.5776, -34.2289, 0.55", "-44.2356, 18.5904, -34.5118, 0.55", "-46.2468, 18.5998, -34.3533, 0.55", "-47.4207, 18.6386, -34.0434, 0.55", "-49.3718, 18.9039, -33.1911, 0.55", "-51.4143, 19.4142, -32.0005, 0.55", "-56.5471, 21.1739, -28.7333, 0.55", "-58.0086, 21.7474, -27.8332, 0.55", "-59.4618, 22.3039, -26.9781, 0.55", "-63.1354, 23.5728, -25.1069, 0.28", "-64.7909, 24.0366, -24.4757, 0.55", "-68.1151, 24.7117, -23.9757, 0.55", "-70.495, 25.1631, -24.0032, 0.28", "-71.7282, 25.3373, -24.0834, 0.55", "-74.1, 25.6061, -24.4801, 0.28", "-76.9972, 25.7803, -25.493, 0.55", "-80.761, 25.8903, -27.1548, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.71635, 8.43687, -15.9375, 0.55", "-7.05676, 10.8798, -16.4609, 0.55", "-7.79734, 12.1266, -16.6928, 0.55", "-8.98322, 14.2144, -17.0638, 0.55", "-10.6726, 17.3297, -17.5862, 0.55", "-12.0594, 20.1051, -18.0102, 0.55", "-13.3506, 22.7233, -18.3824, 0.55", "-14.4149, 24.7598, -18.6876, 0.55", "-15.3067, 26.5553, -19.0035, 0.55", "-15.8551, 27.7804, -19.2574, 0.55", "-16.9031, 30.0737, -19.8657, 0.55", "-17.4263, 31.3572, -20.3909, 0.28", "-17.8354, 32.4659, -20.9583, 0.55", "-19.0699, 35.1969, -22.6301, 0.28", "-19.7916, 36.4846, -23.4818, 0.55", "-20.8356, 38.0999, -24.6202, 0.55", "-22.3145, 40.1598, -26.107, 0.55", "-23.8114, 42.1256, -27.4175, 0.55", "-25.4065, 43.9298, -28.5139, 0.55", "-26.6428, 45.1948, -29.2269, 0.55", "-27.0111, 45.5435, -29.4502, 0.55", "-28.8678, 47.2257, -30.6396, 0.55", "-31.6705, 49.6246, -32.3434, 0.55", "-33.0663, 50.7602, -33.2434, 0.55", "-35.0192, 52.416, -34.6169, 0.55", "-36.8638, 53.9881, -36.0215, 0.55", "-38.4717, 55.3476, -37.3003, 0.55", "-39.763, 56.3461, -38.384, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.94596, -22.6705, -14.7706, 0.55", "-1.7586, -22.6641, -14.1292, 0.55", "-0.721914, -22.7081, -13.5372, 0.28", "0.031258, -22.8242, -13.1256, 0.55", "1.35454, -23.2245, -12.4769, 0.55", "3.69103, -24.1562, -11.3926, 0.55", "4.37281, -24.4846, -11.0865, 0.83", "5.17599, -25.0149, -10.712, 0.55", "6.43076, -26.0241, -10.1421, 0.55", "8.03277, -27.5968, -9.51172, 0.83", "8.45764, -28.1011, -9.36705, 0.83", "8.88597, -28.6804, -9.22736, 0.55", "9.51401, -29.627, -8.99111, 0.83", "9.89297, -30.2751, -8.81316, 0.28", "10.2095, -30.911, -8.59538, 0.83", "10.6587, -32.0447, -8.05334, 0.83", "11.2808, -33.5431, -7.11795, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.94596, -22.6705, -14.7706, 0.55", "-2.6094, -27.6979, -16.3751, 0.55", "-2.09795, -30.6258, -17.1933, 0.55", "-1.47036, -33.7284, -17.9273, 0.55", "-0.81572, -37.2271, -18.7375, 0.55", "-0.193809, -40.3857, -19.4097, 0.55", "0.433185, -44.003, -20.1501, 0.55", "1.48328, -50.8737, -21.3834, 0.55", "2.05176, -54.6809, -22.0433, 0.55", "2.4904, -58.5064, -22.6578, 0.55", "2.79307, -62.566, -23.2082, 0.55", "2.87396, -66.2916, -23.6619, 0.55", "2.70653, -69.7268, -24.0992, 0.55", "2.26084, -73.8253, -24.6178, 0.55", "1.97386, -76.5215, -24.9331, 0.55", "1.60389, -80.1068, -25.2838, 0.55", "1.27646, -83.2018, -25.5666, 0.55", "1.15539, -85.0168, -25.6619, 0.83", "0.773659, -90.3113, -25.7799, 0.28", "0.683308, -91.6613, -25.7668, 0.55", "0.65207, -93.1217, -25.7471, 0.28", "0.650447, -94.815, -25.7152, 0.55", "0.713803, -97.8202, -25.792, 0.55", "0.726684, -99.1924, -26.0269, 0.55", "0.772772, -101.139, -26.8537, 0.83", "0.865809, -103.328, -28.0966, 0.28", "0.962718, -104.503, -29.0005, 0.55", "1.24358, -107.081, -31.3263, 0.28", "1.73001, -110.214, -34.3181, 0.83", "2.05686, -111.795, -35.8124, 0.28", "2.17839, -112.27, -36.2496, 0.55", "3.19933, -115.235, -38.5714, 0.28", "3.75959, -116.588, -39.4345, 0.83", "4.64362, -118.536, -40.3209, 0.28", "6.05167, -121.331, -41.3214, 0.83", "6.93494, -123.223, -41.6838, 0.55", "8.15838, -126.034, -41.8703, 0.28", "8.67992, -127.3, -41.7418, 0.83", "9.68111, -129.786, -41.2686, 0.28", "10.2758, -131.367, -40.8564, 0.83", "11.9366, -136.405, -38.972, 0.28", "12.3464, -137.936, -38.3009, 0.83", "12.8642, -140.237, -37.0999, 0.28", "12.9996, -140.855, -36.7113, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "8.35861, -4.62664, -20.5147, 0.55", "8.61976, -7.57878, -20.0273, 0.55", "8.78765, -9.47663, -19.7139, 0.55", "8.96906, -11.5274, -19.3753, 0.55", "9.10429, -13.0562, -19.1229, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.35861, -4.62664, -20.5147, 0.55", "10.4514, -4.34172, -23.7214, 0.55", "13.1039, -3.91071, -27.6726, 0.55", "16.1033, -3.24168, -32.2798, 0.55", "18.3076, -2.67004, -35.6241, 0.28", "18.9031, -2.47752, -36.4974, 0.55", "22.49, -1.11003, -41.5358, 0.28", "23.2431, -0.787493, -42.5665, 0.55", "26.7085, 0.972575, -47.1357, 0.28", "27.3443, 1.35589, -47.9454, 0.55", "29.4512, 2.81707, -50.6594, 0.28", "30.6032, 3.7046, -52.1213, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "13.8867, 3.37208, 2.40249, 0.55", "14.9911, 3.26005, 1.01127, 0.55", "17.6271, 3.1259, -2.05428, 0.55", "21.9055, 2.9153, -6.92932, 0.55", "23.741, 2.8701, -8.90693, 0.83", "28.8751, 2.74909, -14.4826, 0.55", "30.5828, 2.67442, -16.3376, 0.55", "32.077, 2.58167, -17.9872, 0.83", "35.4135, 2.35895, -21.6713, 0.55", "37.8274, 2.17022, -24.0852, 0.55", "40.5353, 1.83711, -26.8985, 0.55", "43.6424, 1.4161, -30.3326, 0.55", "44.5915, 1.25813, -31.4426, 0.55", "46.5587, 0.925875, -33.801, 0.28", "47.193, 0.836675, -34.568, 0.83", "52.6815, 0.177307, -41.2936, 0.28", "54.994, 0.00737894, -43.9951, 0.83", "56.241, -0.0206891, -45.41, 0.28", "58.0731, -0.0258081, -47.4256, 0.28", "60.7947, 0.113049, -50.1675, 0.55", "63.577, 0.307638, -52.5146, 0.28", "64.5459, 0.420398, -53.1003, 0.55", "66.2596, 0.610736, -54.0142, 0.28", "66.5441, 0.638437, -54.1624, 0.55", "68.7455, 0.859495, -55.1496, 0.28", "72.5873, 1.25098, -56.5015, 0.55", "75.0472, 1.48602, -57.2514, 0.28", "76.0064, 1.58192, -57.512, 0.55", "79.7168, 1.90586, -58.3437, 0.28", "80.6869, 1.98323, -58.5533, 0.55", "82.7363, 2.12642, -58.9466, 0.28", "84.2761, 2.23468, -59.2538, 0.28", "86.3189, 2.34721, -59.5846, 0.28", "88.0684, 2.41437, -59.9668, 0.55", "90.7346, 2.51813, -60.6408, 0.28", "92.0076, 2.55795, -61.0273, 0.28", "96.55, 2.67356, -62.7363, 0.28", "99.4609, 2.73436, -63.9984, 0.55", "102.758, 2.7431, -65.651, 0.28", "103.876, 2.7689, -66.249, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "13.8867, 3.37208, 2.40249, 0.55", "14.2189, 0.946665, 0.861538, 0.55", "14.3827, -1.0509, -0.60637, 0.55", "14.4216, -1.9037, -1.35577, 0.55", "14.404, -3.8019, -3.34894, 0.55", "14.258, -6.67189, -6.54793, 0.55", "14.0975, -8.21733, -8.44854, 0.55", "13.6754, -10.1677, -11.1327, 0.55", "12.9613, -12.6042, -14.841, 0.55", "12.3062, -14.3663, -17.8305, 0.28", "12.0113, -14.9663, -18.9616, 0.83", "10.9847, -16.7029, -22.3198, 0.55", "10.3454, -17.6732, -24.2057, 0.55", "9.62459, -18.8037, -26.0667, 0.55", "9.15427, -19.6118, -27.1109, 0.55", "8.88221, -20.2506, -27.6942, 0.55", "8.28951, -22.0714, -28.9586, 0.55", "8.02922, -23.0746, -29.408, 0.55", "7.60312, -24.6378, -29.9942, 0.28", "7.3519, -25.4997, -30.2657, 0.83", "6.87875, -27.1564, -30.709, 0.28", "6.61708, -28.0364, -31.0154, 0.83", "5.71182, -30.6411, -32.2251, 0.55", "5.27559, -31.6299, -33.054, 0.55", "4.77428, -32.5992, -34.1578, 0.55", "4.15725, -33.7926, -35.607, 0.28", "3.18867, -35.75, -38.0875, 0.55", "2.73885, -36.687, -39.2683, 0.83", "1.17163, -40.1645, -43.5334, 0.28", "0.836599, -40.9501, -44.5062, 0.55", "-0.0740469, -43.1103, -47.154, 0.28", "-0.284619, -43.6083, -47.7596, 0.83", "-0.878822, -45.1722, -49.3186, 0.28", "-1.1643, -46.0301, -50.0211, 0.55", "-1.83379, -48.3338, -51.309, 0.28", "-2.0577, -49.0453, -51.7893, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.7398, 38.9659, -3.3556, 0.28", "12.0599, 53.5938, -3.3556, 0.28", "15.3801, 68.2217, -3.3556, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.2808, -33.5431, -7.11795, 0.55", "11.5003, -34.5985, -5.17707, 0.55", "11.7398, -35.75, -3.05927, 0.55", "12.4433, -39.1334, 3.16294, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.2808, -33.5431, -7.11795, 0.55", "14.0507, -35.0082, -4.5533, 0.55", "15.1723, -35.6495, -3.44298, 0.55", "16.2574, -36.2838, -2.28871, 0.55", "17.2861, -36.801, -1.24498, 0.55", "19.0589, -37.7075, 0.843732, 0.55", "22.1033, -39.3895, 5.12105, 0.55", "23.2491, -39.9836, 6.95965, 0.55", "25.0535, -40.7906, 9.89653, 0.55", "26.3241, -41.3673, 12.0119, 0.55", "29.1695, -42.6628, 17.0824, 0.55", "31.1294, -43.6344, 20.717, 0.83", "32.6614, -44.3864, 23.3654, 0.55", "34.1649, -45.1, 25.9115, 0.55", "36.6735, -46.4053, 29.9765, 0.55", "38.8148, -47.5253, 33.1691, 0.83", "40.3404, -48.2169, 35.0537, 0.55", "41.896, -48.903, 36.7952, 0.55", "44.5087, -50.0912, 39.6898, 0.55", "46.3524, -50.8934, 41.6737, 0.55", "47.7307, -51.4066, 42.9994, 0.55", "48.3776, -51.6422, 43.5661, 0.55", "49.9539, -52.123, 44.9106, 0.55", "51.1081, -52.4493, 45.9517, 0.28", "52.5308, -52.8267, 47.2249, 0.55", "54.1625, -53.2487, 48.7504, 0.28", "54.8773, -53.4795, 49.4857, 0.55", "56.2555, -53.9359, 50.9741, 0.28", "57.895, -54.4275, 52.7731, 0.28", "58.8592, -54.7385, 53.8061, 0.55", "65.7468, -58.5863, 60.2717, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.10429, -13.0562, -19.1229, 0.55", "8.45239, -14.7812, -24.1437, 0.55", "8.28455, -15.2592, -25.5142, 0.55", "7.07046, -18.0517, -33.863, 0.55", "6.72278, -18.7752, -36.0516, 0.55", "5.90864, -20.2794, -40.9145, 0.55", "5.1216, -21.7019, -45.5447, 0.55", "4.85246, -22.1602, -47.2017, 0.55", "4.25857, -23.1132, -50.2132, 0.55", "3.66587, -23.9346, -52.2252, 0.55", "2.009, -25.6447, -55.8075, 0.55", "-1.1422, -28.3296, -59.721, 0.55", "-2.55754, -29.4446, -61.0371, 0.55", "-4.64005, -31.0484, -62.8539, 0.55", "-7.4907, -33.2147, -64.8638, 0.28", "-10.0694, -35.0775, -66.3186, 0.55", "-13.0108, -37.1013, -67.5061, 0.55", "-16.4529, -39.2136, -68.5416, 0.28", "-19.1001, -40.7669, -69.5745, 0.55", "-21.1634, -42.0418, -70.8571, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "9.10429, -13.0562, -19.1229, 0.55", "11.2937, -15.3914, -18.1826, 0.55", "15.0401, -19.0925, -16.2246, 0.55", "17.4713, -21.5753, -14.7834, 0.55", "21.5253, -25.7151, -12.0452, 0.55", "23.9406, -28.1658, -10.3409, 0.55", "26.5535, -30.8378, -8.52738, 0.55", "30.374, -34.6861, -5.76826, 0.55", "32.7923, -37.0435, -3.92265, 0.55", "36.1971, -40.4633, -1.29651, 0.28", "36.5819, -40.8644, -1.02322, 0.55", "38.4695, -42.7818, 0.455677, 0.28", "39.4798, -43.9399, 1.31606, 0.28", "39.9903, -44.5286, 1.6156, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "12.4433, -39.1334, 3.16294, 0.55", "10.3586, -38.9708, 1.87654, 0.55", "9.23083, -38.8828, 1.18066, 0.28", "8.33592, -38.813, 0.628449, 0.55", "7.48293, -38.7464, 0.102108, 0.28", "5.73692, -38.6102, -0.975275, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "12.4433, -39.1334, 3.16294, 0.55", "13.0513, -39.2721, 3.79734, 0.55", "14.0313, -39.455, 4.77495, 0.55", "15.3611, -39.6031, 6.32357, 0.55", "17.414, -39.9045, 8.89925, 0.83", "18.8098, -40.1659, 10.7451, 0.28", "19.0147, -40.214, 11.0304, 0.55", "20.3251, -40.5321, 13.1803, 0.55", "22.0717, -41.08, 16.54, 0.55", "22.7265, -41.4074, 18.0599, 0.55", "22.9614, -41.585, 18.6146, 0.55", "23.215, -41.8771, 19.2955, 0.55", "24.3955, -43.816, 22.9943, 0.55", "24.4797, -44.6139, 23.6544, 0.55", "24.4029, -45.2395, 23.747, 0.55", "23.8759, -47.2403, 23.2892, 0.55", "22.4871, -51.2767, 21.3863, 0.55", "21.4733, -53.7911, 19.7958, 0.28", "20.9458, -54.9915, 18.9355, 0.55", "23.8629, -58.8826, 23.0428, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-21.1634, -42.0418, -70.8571, 0.55", "-21.2941, -43.0632, -73.2328, 0.55", "-21.4141, -44.0622, -75.9114, 0.55", "-21.7251, -46.5483, -82.8674, 0.55", "-21.8174, -47.0058, -84.0278, 0.55", "-21.9565, -47.5981, -85.461, 0.55", "-22.4744, -50.0564, -90.6681, 0.28", "-22.885, -51.8046, -94.2922, 0.55", "-23.3553, -53.6722, -97.9751, 0.55", "-23.7264, -55.1304, -100.43, 0.55", "-24.1342, -56.5305, -102.813, 0.83", "-24.6737, -58.3003, -105.701, 0.28", "-25.2464, -60.6518, -109.148, 0.55", "-25.6448, -62.6768, -111.986, 0.28", "-25.6863, -62.9291, -112.344, 0.55", "-25.9609, -64.9021, -115.319, 0.28", "-26.0305, -65.2993, -115.881, 0.55", "-26.1459, -65.8044, -116.722, 0.28", "-26.1732, -66.0088, -116.966, 0.55", "-26.2222, -67.2667, -117.923, 0.28", "-26.4208, -68.6752, -118.675, 0.83", "-26.8792, -69.989, -118.777, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-21.1634, -42.0418, -70.8571, 0.28", "-22.7203, -43.5352, -73.4948, 0.28", "-23.5543, -44.4473, -75.1449, 0.55", "-25.6654, -47.1153, -79.9463, 0.28", "-26.939, -48.7248, -82.8428, 0.55", "-27.9233, -49.9688, -85.0813, 0.28", "-28.362, -50.5233, -86.0792, 0.55", "-29.071, -51.5528, -88.1704, 0.28", "-29.3151, -51.99, -89.1322, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_10", "dend_3", "dend_0", "dend_19", "dend_18", "dend_12", "dend_11", "dend_5", "dend_4", "dend_2", "dend_1", "dend_14", "dend_13", "dend_7", "dend_6", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_17", "dend_10", "dend_3", "dend_0", "dend_19", "dend_18", "dend_12", "dend_11", "dend_5", "dend_4", "dend_2", "dend_1", "dend_14", "dend_13", "dend_7", "dend_6", "dend_16", "dend_15", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_17", "dend_17", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_SBC_cf92e1b802_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_17, dend_10, dend_3, dend_0, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_14, dend_13, dend_7, dend_6, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_17, dend_10, dend_3, dend_0, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_14, dend_13, dend_7, dend_6, dend_16, dend_15, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, axon_0, axon_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_17(0), soma_0(0.4999999054568372)
    connect dend_10(0), soma_0(0.4999999054568372)
    connect dend_3(0), soma_0(0.4999999054568372)
    connect dend_0(0), soma_0(0.4999999054568372)
    connect axon_0(0), soma_0(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.35607, -9.92062, 3.55793, 1.62771 ) }
    soma_0 { pt3dadd( -2.13329, -8.93909, 3.21226, 2.54602 ) }
    soma_0 { pt3dadd( -1.91051, -7.95756, 2.86658, 3.70659 ) }
    soma_0 { pt3dadd( -1.68773, -6.97603, 2.5209, 4.24829 ) }
    soma_0 { pt3dadd( -1.46495, -5.9945, 2.17523, 4.82907 ) }
    soma_0 { pt3dadd( -1.24217, -5.01297, 1.82955, 5.75298 ) }
    soma_0 { pt3dadd( -1.01939, -4.03144, 1.48387, 7.46986 ) }
    soma_0 { pt3dadd( -0.796609, -3.04991, 1.1382, 8.54216 ) }
    soma_0 { pt3dadd( -0.573829, -2.06838, 0.792522, 9.30242 ) }
    soma_0 { pt3dadd( -0.351049, -1.08685, 0.446846, 9.90814 ) }
    soma_0 { pt3dadd( -0.128269, -0.105321, 0.101169, 9.87151 ) }
    soma_0 { pt3dadd( 0.0945111, 0.876209, -0.244507, 9.88205 ) }
    soma_0 { pt3dadd( 0.317291, 1.85774, -0.590184, 9.8926 ) }
    soma_0 { pt3dadd( 0.540071, 2.83927, -0.93586, 9.86833 ) }
    soma_0 { pt3dadd( 0.762851, 3.8208, -1.28154, 10.2216 ) }
    soma_0 { pt3dadd( 0.985631, 4.80233, -1.62721, 11.2292 ) }
    soma_0 { pt3dadd( 1.20841, 5.78386, -1.97289, 10.7799 ) }
    soma_0 { pt3dadd( 1.43119, 6.76539, -2.31857, 9.31788 ) }
    soma_0 { pt3dadd( 1.65397, 7.74692, -2.66424, 7.45624 ) }
    soma_0 { pt3dadd( 1.87675, 8.72845, -3.00992, 5.40977 ) }
    soma_0 { pt3dadd( 2.09953, 9.70998, -3.3556, 3.05031 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.4238, 8.10063, -8.54536, 0.55 ) }
    dend_17 { pt3dadd( -3.50537, 8.21108, -10.9736, 0.55 ) }
    dend_17 { pt3dadd( -5.71635, 8.43687, -15.9375, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.713799, -11.1181, -13.5654, 0.83 ) }
    dend_10 { pt3dadd( -1.52047, -15.293, -14.0009, 0.83 ) }
    dend_10 { pt3dadd( -2.17629, -18.6871, -14.355, 0.55 ) }
    dend_10 { pt3dadd( -2.60107, -20.8856, -14.5844, 0.55 ) }
    dend_10 { pt3dadd( -2.94596, -22.6705, -14.7706, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 29/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.1062, 0.392636, -8.79536, 0.55 ) }
    dend_3 { pt3dadd( 3.55575, -0.036957, -9.7984, 0.55 ) }
    dend_3 { pt3dadd( 4.1915, -0.644493, -11.2169, 0.55 ) }
    dend_3 { pt3dadd( 5.71848, -2.10369, -14.624, 1.11 ) }
    dend_3 { pt3dadd( 8.35861, -4.62664, -20.5147, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 34/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.9762, 5.76364, 1.85464, 1.11 ) }
    dend_0 { pt3dadd( 8.95767, 5.0779, 2.01173, 1.11 ) }
    dend_0 { pt3dadd( 11.3696, 4.24319, 2.20294, 0.83 ) }
    dend_0 { pt3dadd( 13.8867, 3.37208, 2.40249, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 38/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.09953, 9.70998, -3.3556, 1.38 ) }
    axon_0 { pt3dadd( 5.41967, 24.3379, -3.3556, 1.38 ) }
    axon_0 { pt3dadd( 8.7398, 38.9659, -3.3556, 1.38 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 41/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -5.71635, 8.43687, -15.9375, 0.55 ) }
    dend_19 { pt3dadd( -7.23412, 8.84074, -16.4747, 0.55 ) }
    dend_19 { pt3dadd( -8.87294, 9.20249, -17.1339, 0.55 ) }
    dend_19 { pt3dadd( -11.7373, 10.0666, -18.4218, 0.55 ) }
    dend_19 { pt3dadd( -15.2841, 11.3145, -20.1483, 0.55 ) }
    dend_19 { pt3dadd( -17.0272, 12.0179, -21.1764, 0.55 ) }
    dend_19 { pt3dadd( -19.1621, 12.9433, -22.49, 0.55 ) }
    dend_19 { pt3dadd( -21.3477, 13.843, -23.9137, 0.55 ) }
    dend_19 { pt3dadd( -25.4538, 15.3059, -26.5339, 0.55 ) }
    dend_19 { pt3dadd( -28.061, 16.1058, -28.1277, 0.55 ) }
    dend_19 { pt3dadd( -32.5076, 17.2262, -30.5131, 0.55 ) }
    dend_19 { pt3dadd( -34.9688, 17.7144, -31.7253, 0.55 ) }
    dend_19 { pt3dadd( -38.3464, 18.2364, -33.1284, 0.55 ) }
    dend_19 { pt3dadd( -41.8254, 18.5776, -34.2289, 0.55 ) }
    dend_19 { pt3dadd( -44.2356, 18.5904, -34.5118, 0.55 ) }
    dend_19 { pt3dadd( -46.2468, 18.5998, -34.3533, 0.55 ) }
    dend_19 { pt3dadd( -47.4207, 18.6386, -34.0434, 0.55 ) }
    dend_19 { pt3dadd( -49.3718, 18.9039, -33.1911, 0.55 ) }
    dend_19 { pt3dadd( -51.4143, 19.4142, -32.0005, 0.55 ) }
    dend_19 { pt3dadd( -56.5471, 21.1739, -28.7333, 0.55 ) }
    dend_19 { pt3dadd( -58.0086, 21.7474, -27.8332, 0.55 ) }
    dend_19 { pt3dadd( -59.4618, 22.3039, -26.9781, 0.55 ) }
    dend_19 { pt3dadd( -63.1354, 23.5728, -25.1069, 0.28 ) }
    dend_19 { pt3dadd( -64.7909, 24.0366, -24.4757, 0.55 ) }
    dend_19 { pt3dadd( -68.1151, 24.7117, -23.9757, 0.55 ) }
    dend_19 { pt3dadd( -70.495, 25.1631, -24.0032, 0.28 ) }
    dend_19 { pt3dadd( -71.7282, 25.3373, -24.0834, 0.55 ) }
    dend_19 { pt3dadd( -74.1, 25.6061, -24.4801, 0.28 ) }
    dend_19 { pt3dadd( -76.9972, 25.7803, -25.493, 0.55 ) }
    dend_19 { pt3dadd( -80.761, 25.8903, -27.1548, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.71635, 8.43687, -15.9375, 0.55 ) }
    dend_18 { pt3dadd( -7.05676, 10.8798, -16.4609, 0.55 ) }
    dend_18 { pt3dadd( -7.79734, 12.1266, -16.6928, 0.55 ) }
    dend_18 { pt3dadd( -8.98322, 14.2144, -17.0638, 0.55 ) }
    dend_18 { pt3dadd( -10.6726, 17.3297, -17.5862, 0.55 ) }
    dend_18 { pt3dadd( -12.0594, 20.1051, -18.0102, 0.55 ) }
    dend_18 { pt3dadd( -13.3506, 22.7233, -18.3824, 0.55 ) }
    dend_18 { pt3dadd( -14.4149, 24.7598, -18.6876, 0.55 ) }
    dend_18 { pt3dadd( -15.3067, 26.5553, -19.0035, 0.55 ) }
    dend_18 { pt3dadd( -15.8551, 27.7804, -19.2574, 0.55 ) }
    dend_18 { pt3dadd( -16.9031, 30.0737, -19.8657, 0.55 ) }
    dend_18 { pt3dadd( -17.4263, 31.3572, -20.3909, 0.28 ) }
    dend_18 { pt3dadd( -17.8354, 32.4659, -20.9583, 0.55 ) }
    dend_18 { pt3dadd( -19.0699, 35.1969, -22.6301, 0.28 ) }
    dend_18 { pt3dadd( -19.7916, 36.4846, -23.4818, 0.55 ) }
    dend_18 { pt3dadd( -20.8356, 38.0999, -24.6202, 0.55 ) }
    dend_18 { pt3dadd( -22.3145, 40.1598, -26.107, 0.55 ) }
    dend_18 { pt3dadd( -23.8114, 42.1256, -27.4175, 0.55 ) }
    dend_18 { pt3dadd( -25.4065, 43.9298, -28.5139, 0.55 ) }
    dend_18 { pt3dadd( -26.6428, 45.1948, -29.2269, 0.55 ) }
    dend_18 { pt3dadd( -27.0111, 45.5435, -29.4502, 0.55 ) }
    dend_18 { pt3dadd( -28.8678, 47.2257, -30.6396, 0.55 ) }
    dend_18 { pt3dadd( -31.6705, 49.6246, -32.3434, 0.55 ) }
    dend_18 { pt3dadd( -33.0663, 50.7602, -33.2434, 0.55 ) }
    dend_18 { pt3dadd( -35.0192, 52.416, -34.6169, 0.55 ) }
    dend_18 { pt3dadd( -36.8638, 53.9881, -36.0215, 0.55 ) }
    dend_18 { pt3dadd( -38.4717, 55.3476, -37.3003, 0.55 ) }
    dend_18 { pt3dadd( -39.763, 56.3461, -38.384, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 99/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.94596, -22.6705, -14.7706, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( -1.7586, -22.6641, -14.1292, 0.55 ) }
    dend_12 { pt3dadd( -0.721914, -22.7081, -13.5372, 0.28 ) }
    dend_12 { pt3dadd( 0.031258, -22.8242, -13.1256, 0.55 ) }
    dend_12 { pt3dadd( 1.35454, -23.2245, -12.4769, 0.55 ) }
    dend_12 { pt3dadd( 3.69103, -24.1562, -11.3926, 0.55 ) }
    dend_12 { pt3dadd( 4.37281, -24.4846, -11.0865, 0.83 ) }
    dend_12 { pt3dadd( 5.17599, -25.0149, -10.712, 0.55 ) }
    dend_12 { pt3dadd( 6.43076, -26.0241, -10.1421, 0.55 ) }
    dend_12 { pt3dadd( 8.03277, -27.5968, -9.51172, 0.83 ) }
    dend_12 { pt3dadd( 8.45764, -28.1011, -9.36705, 0.83 ) }
    dend_12 { pt3dadd( 8.88597, -28.6804, -9.22736, 0.55 ) }
    dend_12 { pt3dadd( 9.51401, -29.627, -8.99111, 0.83 ) }
    dend_12 { pt3dadd( 9.89297, -30.2751, -8.81316, 0.28 ) }
    dend_12 { pt3dadd( 10.2095, -30.911, -8.59538, 0.83 ) }
    dend_12 { pt3dadd( 10.6587, -32.0447, -8.05334, 0.83 ) }
    dend_12 { pt3dadd( 11.2808, -33.5431, -7.11795, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.94596, -22.6705, -14.7706, 0.55 ) }
    dend_11 { pt3dadd( -2.6094, -27.6979, -16.3751, 0.55 ) }
    dend_11 { pt3dadd( -2.09795, -30.6258, -17.1933, 0.55 ) }
    dend_11 { pt3dadd( -1.47036, -33.7284, -17.9273, 0.55 ) }
    dend_11 { pt3dadd( -0.81572, -37.2271, -18.7375, 0.55 ) }
    dend_11 { pt3dadd( -0.193809, -40.3857, -19.4097, 0.55 ) }
    dend_11 { pt3dadd( 0.433185, -44.003, -20.1501, 0.55 ) }
    dend_11 { pt3dadd( 1.48328, -50.8737, -21.3834, 0.55 ) }
    dend_11 { pt3dadd( 2.05176, -54.6809, -22.0433, 0.55 ) }
    dend_11 { pt3dadd( 2.4904, -58.5064, -22.6578, 0.55 ) }
    dend_11 { pt3dadd( 2.79307, -62.566, -23.2082, 0.55 ) }
    dend_11 { pt3dadd( 2.87396, -66.2916, -23.6619, 0.55 ) }
    dend_11 { pt3dadd( 2.70653, -69.7268, -24.0992, 0.55 ) }
    dend_11 { pt3dadd( 2.26084, -73.8253, -24.6178, 0.55 ) }
    dend_11 { pt3dadd( 1.97386, -76.5215, -24.9331, 0.55 ) }
    dend_11 { pt3dadd( 1.60389, -80.1068, -25.2838, 0.55 ) }
    dend_11 { pt3dadd( 1.27646, -83.2018, -25.5666, 0.55 ) }
    dend_11 { pt3dadd( 1.15539, -85.0168, -25.6619, 0.83 ) }
    dend_11 { pt3dadd( 0.773659, -90.3113, -25.7799, 0.28 ) }
    dend_11 { pt3dadd( 0.683308, -91.6613, -25.7668, 0.55 ) }
    dend_11 { pt3dadd( 0.65207, -93.1217, -25.7471, 0.28 ) }
    dend_11 { pt3dadd( 0.650447, -94.815, -25.7152, 0.55 ) }
    dend_11 { pt3dadd( 0.713803, -97.8202, -25.792, 0.55 ) }
    dend_11 { pt3dadd( 0.726684, -99.1924, -26.0269, 0.55 ) }
    dend_11 { pt3dadd( 0.772772, -101.139, -26.8537, 0.83 ) }
    dend_11 { pt3dadd( 0.865809, -103.328, -28.0966, 0.28 ) }
    dend_11 { pt3dadd( 0.962718, -104.503, -29.0005, 0.55 ) }
    dend_11 { pt3dadd( 1.24358, -107.081, -31.3263, 0.28 ) }
    dend_11 { pt3dadd( 1.73001, -110.214, -34.3181, 0.83 ) }
    dend_11 { pt3dadd( 2.05686, -111.795, -35.8124, 0.28 ) }
    dend_11 { pt3dadd( 2.17839, -112.27, -36.2496, 0.55 ) }
    dend_11 { pt3dadd( 3.19933, -115.235, -38.5714, 0.28 ) }
    dend_11 { pt3dadd( 3.75959, -116.588, -39.4345, 0.83 ) }
    dend_11 { pt3dadd( 4.64362, -118.536, -40.3209, 0.28 ) }
    dend_11 { pt3dadd( 6.05167, -121.331, -41.3214, 0.83 ) }
    dend_11 { pt3dadd( 6.93494, -123.223, -41.6838, 0.55 ) }
    dend_11 { pt3dadd( 8.15838, -126.034, -41.8703, 0.28 ) }
    dend_11 { pt3dadd( 8.67992, -127.3, -41.7418, 0.83 ) }
    dend_11 { pt3dadd( 9.68111, -129.786, -41.2686, 0.28 ) }
    dend_11 { pt3dadd( 10.2758, -131.367, -40.8564, 0.83 ) }
    dend_11 { pt3dadd( 11.9366, -136.405, -38.972, 0.28 ) }
    dend_11 { pt3dadd( 12.3464, -137.936, -38.3009, 0.83 ) }
    dend_11 { pt3dadd( 12.8642, -140.237, -37.0999, 0.28 ) }
    dend_11 { pt3dadd( 12.9996, -140.855, -36.7113, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 8.35861, -4.62664, -20.5147, 0.55 ) }
    dend_5 { pt3dadd( 8.61976, -7.57878, -20.0273, 0.55 ) }
    dend_5 { pt3dadd( 8.78765, -9.47663, -19.7139, 0.55 ) }
    dend_5 { pt3dadd( 8.96906, -11.5274, -19.3753, 0.55 ) }
    dend_5 { pt3dadd( 9.10429, -13.0562, -19.1229, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 65/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.35861, -4.62664, -20.5147, 0.55 ) }
    dend_4 { pt3dadd( 10.4514, -4.34172, -23.7214, 0.55 ) }
    dend_4 { pt3dadd( 13.1039, -3.91071, -27.6726, 0.55 ) }
    dend_4 { pt3dadd( 16.1033, -3.24168, -32.2798, 0.55 ) }
    dend_4 { pt3dadd( 18.3076, -2.67004, -35.6241, 0.28 ) }
    dend_4 { pt3dadd( 18.9031, -2.47752, -36.4974, 0.55 ) }
    dend_4 { pt3dadd( 22.49, -1.11003, -41.5358, 0.28 ) }
    dend_4 { pt3dadd( 23.2431, -0.787493, -42.5665, 0.55 ) }
    dend_4 { pt3dadd( 26.7085, 0.972575, -47.1357, 0.28 ) }
    dend_4 { pt3dadd( 27.3443, 1.35589, -47.9454, 0.55 ) }
    dend_4 { pt3dadd( 29.4512, 2.81707, -50.6594, 0.28 ) }
    dend_4 { pt3dadd( 30.6032, 3.7046, -52.1213, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 77/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 13.8867, 3.37208, 2.40249, 0.55 ) }
    dend_2 { pt3dadd( 14.9911, 3.26005, 1.01127, 0.55 ) }
    dend_2 { pt3dadd( 17.6271, 3.1259, -2.05428, 0.55 ) }
    dend_2 { pt3dadd( 21.9055, 2.9153, -6.92932, 0.55 ) }
    dend_2 { pt3dadd( 23.741, 2.8701, -8.90693, 0.83 ) }
    dend_2 { pt3dadd( 28.8751, 2.74909, -14.4826, 0.55 ) }
    dend_2 { pt3dadd( 30.5828, 2.67442, -16.3376, 0.55 ) }
    dend_2 { pt3dadd( 32.077, 2.58167, -17.9872, 0.83 ) }
    dend_2 { pt3dadd( 35.4135, 2.35895, -21.6713, 0.55 ) }
    dend_2 { pt3dadd( 37.8274, 2.17022, -24.0852, 0.55 ) }
    dend_2 { pt3dadd( 40.5353, 1.83711, -26.8985, 0.55 ) }
    dend_2 { pt3dadd( 43.6424, 1.4161, -30.3326, 0.55 ) }
    dend_2 { pt3dadd( 44.5915, 1.25813, -31.4426, 0.55 ) }
    dend_2 { pt3dadd( 46.5587, 0.925875, -33.801, 0.28 ) }
    dend_2 { pt3dadd( 47.193, 0.836675, -34.568, 0.83 ) }
    dend_2 { pt3dadd( 52.6815, 0.177307, -41.2936, 0.28 ) }
    dend_2 { pt3dadd( 54.994, 0.00737894, -43.9951, 0.83 ) }
    dend_2 { pt3dadd( 56.241, -0.0206891, -45.41, 0.28 ) }
    dend_2 { pt3dadd( 58.0731, -0.0258081, -47.4256, 0.28 ) }
    dend_2 { pt3dadd( 60.7947, 0.113049, -50.1675, 0.55 ) }
    dend_2 { pt3dadd( 63.577, 0.307638, -52.5146, 0.28 ) }
    dend_2 { pt3dadd( 64.5459, 0.420398, -53.1003, 0.55 ) }
    dend_2 { pt3dadd( 66.2596, 0.610736, -54.0142, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 66.5441, 0.638437, -54.1624, 0.55 ) }
    dend_2 { pt3dadd( 68.7455, 0.859495, -55.1496, 0.28 ) }
    dend_2 { pt3dadd( 72.5873, 1.25098, -56.5015, 0.55 ) }
    dend_2 { pt3dadd( 75.0472, 1.48602, -57.2514, 0.28 ) }
    dend_2 { pt3dadd( 76.0064, 1.58192, -57.512, 0.55 ) }
    dend_2 { pt3dadd( 79.7168, 1.90586, -58.3437, 0.28 ) }
    dend_2 { pt3dadd( 80.6869, 1.98323, -58.5533, 0.55 ) }
    dend_2 { pt3dadd( 82.7363, 2.12642, -58.9466, 0.28 ) }
    dend_2 { pt3dadd( 84.2761, 2.23468, -59.2538, 0.28 ) }
    dend_2 { pt3dadd( 86.3189, 2.34721, -59.5846, 0.28 ) }
    dend_2 { pt3dadd( 88.0684, 2.41437, -59.9668, 0.55 ) }
    dend_2 { pt3dadd( 90.7346, 2.51813, -60.6408, 0.28 ) }
    dend_2 { pt3dadd( 92.0076, 2.55795, -61.0273, 0.28 ) }
    dend_2 { pt3dadd( 96.55, 2.67356, -62.7363, 0.28 ) }
    dend_2 { pt3dadd( 99.4609, 2.73436, -63.9984, 0.55 ) }
    dend_2 { pt3dadd( 102.758, 2.7431, -65.651, 0.28 ) }
    dend_2 { pt3dadd( 103.876, 2.7689, -66.249, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 17/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 13.8867, 3.37208, 2.40249, 0.55 ) }
    dend_1 { pt3dadd( 14.2189, 0.946665, 0.861538, 0.55 ) }
    dend_1 { pt3dadd( 14.3827, -1.0509, -0.60637, 0.55 ) }
    dend_1 { pt3dadd( 14.4216, -1.9037, -1.35577, 0.55 ) }
    dend_1 { pt3dadd( 14.404, -3.8019, -3.34894, 0.55 ) }
    dend_1 { pt3dadd( 14.258, -6.67189, -6.54793, 0.55 ) }
    dend_1 { pt3dadd( 14.0975, -8.21733, -8.44854, 0.55 ) }
    dend_1 { pt3dadd( 13.6754, -10.1677, -11.1327, 0.55 ) }
    dend_1 { pt3dadd( 12.9613, -12.6042, -14.841, 0.55 ) }
    dend_1 { pt3dadd( 12.3062, -14.3663, -17.8305, 0.28 ) }
    dend_1 { pt3dadd( 12.0113, -14.9663, -18.9616, 0.83 ) }
    dend_1 { pt3dadd( 10.9847, -16.7029, -22.3198, 0.55 ) }
    dend_1 { pt3dadd( 10.3454, -17.6732, -24.2057, 0.55 ) }
    dend_1 { pt3dadd( 9.62459, -18.8037, -26.0667, 0.55 ) }
    dend_1 { pt3dadd( 9.15427, -19.6118, -27.1109, 0.55 ) }
    dend_1 { pt3dadd( 8.88221, -20.2506, -27.6942, 0.55 ) }
    dend_1 { pt3dadd( 8.28951, -22.0714, -28.9586, 0.55 ) }
    dend_1 { pt3dadd( 8.02922, -23.0746, -29.408, 0.55 ) }
    dend_1 { pt3dadd( 7.60312, -24.6378, -29.9942, 0.28 ) }
    dend_1 { pt3dadd( 7.3519, -25.4997, -30.2657, 0.83 ) }
    dend_1 { pt3dadd( 6.87875, -27.1564, -30.709, 0.28 ) }
    dend_1 { pt3dadd( 6.61708, -28.0364, -31.0154, 0.83 ) }
    dend_1 { pt3dadd( 5.71182, -30.6411, -32.2251, 0.55 ) }
    dend_1 { pt3dadd( 5.27559, -31.6299, -33.054, 0.55 ) }
    dend_1 { pt3dadd( 4.77428, -32.5992, -34.1578, 0.55 ) }
    dend_1 { pt3dadd( 4.15725, -33.7926, -35.607, 0.28 ) }
    dend_1 { pt3dadd( 3.18867, -35.75, -38.0875, 0.55 ) }
    dend_1 { pt3dadd( 2.73885, -36.687, -39.2683, 0.83 ) }
    dend_1 { pt3dadd( 1.17163, -40.1645, -43.5334, 0.28 ) }
    dend_1 { pt3dadd( 0.836599, -40.9501, -44.5062, 0.55 ) }
    dend_1 { pt3dadd( -0.0740469, -43.1103, -47.154, 0.28 ) }
    dend_1 { pt3dadd( -0.284619, -43.6083, -47.7596, 0.83 ) }
    dend_1 { pt3dadd( -0.878822, -45.1722, -49.3186, 0.28 ) }
    dend_1 { pt3dadd( -1.1643, -46.0301, -50.0211, 0.55 ) }
    dend_1 { pt3dadd( -1.83379, -48.3338, -51.309, 0.28 ) }
    dend_1 { pt3dadd( -2.0577, -49.0453, -51.7893, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 53/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.7398, 38.9659, -3.3556, 0.28 ) }
    axon_1 { pt3dadd( 12.0599, 53.5938, -3.3556, 0.28 ) }
    axon_1 { pt3dadd( 15.3801, 68.2217, -3.3556, 0.28 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 56/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.2808, -33.5431, -7.11795, 0.55 ) }
    dend_14 { pt3dadd( 11.5003, -34.5985, -5.17707, 0.55 ) }
    dend_14 { pt3dadd( 11.7398, -35.75, -3.05927, 0.55 ) }
    dend_14 { pt3dadd( 12.4433, -39.1334, 3.16294, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 60/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.2808, -33.5431, -7.11795, 0.55 ) }
    dend_13 { pt3dadd( 14.0507, -35.0082, -4.5533, 0.55 ) }
    dend_13 { pt3dadd( 15.1723, -35.6495, -3.44298, 0.55 ) }
    dend_13 { pt3dadd( 16.2574, -36.2838, -2.28871, 0.55 ) }
    dend_13 { pt3dadd( 17.2861, -36.801, -1.24498, 0.55 ) }
    dend_13 { pt3dadd( 19.0589, -37.7075, 0.843732, 0.55 ) }
    dend_13 { pt3dadd( 22.1033, -39.3895, 5.12105, 0.55 ) }
    dend_13 { pt3dadd( 23.2491, -39.9836, 6.95965, 0.55 ) }
    dend_13 { pt3dadd( 25.0535, -40.7906, 9.89653, 0.55 ) }
    dend_13 { pt3dadd( 26.3241, -41.3673, 12.0119, 0.55 ) }
    dend_13 { pt3dadd( 29.1695, -42.6628, 17.0824, 0.55 ) }
    dend_13 { pt3dadd( 31.1294, -43.6344, 20.717, 0.83 ) }
    dend_13 { pt3dadd( 32.6614, -44.3864, 23.3654, 0.55 ) }
    dend_13 { pt3dadd( 34.1649, -45.1, 25.9115, 0.55 ) }
    dend_13 { pt3dadd( 36.6735, -46.4053, 29.9765, 0.55 ) }
    dend_13 { pt3dadd( 38.8148, -47.5253, 33.1691, 0.83 ) }
    dend_13 { pt3dadd( 40.3404, -48.2169, 35.0537, 0.55 ) }
    dend_13 { pt3dadd( 41.896, -48.903, 36.7952, 0.55 ) }
    dend_13 { pt3dadd( 44.5087, -50.0912, 39.6898, 0.55 ) }
    dend_13 { pt3dadd( 46.3524, -50.8934, 41.6737, 0.55 ) }
    dend_13 { pt3dadd( 47.7307, -51.4066, 42.9994, 0.55 ) }
    dend_13 { pt3dadd( 48.3776, -51.6422, 43.5661, 0.55 ) }
    dend_13 { pt3dadd( 49.9539, -52.123, 44.9106, 0.55 ) }
    dend_13 { pt3dadd( 51.1081, -52.4493, 45.9517, 0.28 ) }
    dend_13 { pt3dadd( 52.5308, -52.8267, 47.2249, 0.55 ) }
    dend_13 { pt3dadd( 54.1625, -53.2487, 48.7504, 0.28 ) }
    dend_13 { pt3dadd( 54.8773, -53.4795, 49.4857, 0.55 ) }
    dend_13 { pt3dadd( 56.2555, -53.9359, 50.9741, 0.28 ) }
    dend_13 { pt3dadd( 57.895, -54.4275, 52.7731, 0.28 ) }
    dend_13 { pt3dadd( 58.8592, -54.7385, 53.8061, 0.55 ) }
    dend_13 { pt3dadd( 65.7468, -58.5863, 60.2717, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 91/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.10429, -13.0562, -19.1229, 0.55 ) }
    dend_7 { pt3dadd( 8.45239, -14.7812, -24.1437, 0.55 ) }
    dend_7 { pt3dadd( 8.28455, -15.2592, -25.5142, 0.55 ) }
    dend_7 { pt3dadd( 7.07046, -18.0517, -33.863, 0.55 ) }
    dend_7 { pt3dadd( 6.72278, -18.7752, -36.0516, 0.55 ) }
    dend_7 { pt3dadd( 5.90864, -20.2794, -40.9145, 0.55 ) }
    dend_7 { pt3dadd( 5.1216, -21.7019, -45.5447, 0.55 ) }
    dend_7 { pt3dadd( 4.85246, -22.1602, -47.2017, 0.55 ) }
    dend_7 { pt3dadd( 4.25857, -23.1132, -50.2132, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( 3.66587, -23.9346, -52.2252, 0.55 ) }
    dend_7 { pt3dadd( 2.009, -25.6447, -55.8075, 0.55 ) }
    dend_7 { pt3dadd( -1.1422, -28.3296, -59.721, 0.55 ) }
    dend_7 { pt3dadd( -2.55754, -29.4446, -61.0371, 0.55 ) }
    dend_7 { pt3dadd( -4.64005, -31.0484, -62.8539, 0.55 ) }
    dend_7 { pt3dadd( -7.4907, -33.2147, -64.8638, 0.28 ) }
    dend_7 { pt3dadd( -10.0694, -35.0775, -66.3186, 0.55 ) }
    dend_7 { pt3dadd( -13.0108, -37.1013, -67.5061, 0.55 ) }
    dend_7 { pt3dadd( -16.4529, -39.2136, -68.5416, 0.28 ) }
    dend_7 { pt3dadd( -19.1001, -40.7669, -69.5745, 0.55 ) }
    dend_7 { pt3dadd( -21.1634, -42.0418, -70.8571, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 11/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 9.10429, -13.0562, -19.1229, 0.55 ) }
    dend_6 { pt3dadd( 11.2937, -15.3914, -18.1826, 0.55 ) }
    dend_6 { pt3dadd( 15.0401, -19.0925, -16.2246, 0.55 ) }
    dend_6 { pt3dadd( 17.4713, -21.5753, -14.7834, 0.55 ) }
    dend_6 { pt3dadd( 21.5253, -25.7151, -12.0452, 0.55 ) }
    dend_6 { pt3dadd( 23.9406, -28.1658, -10.3409, 0.55 ) }
    dend_6 { pt3dadd( 26.5535, -30.8378, -8.52738, 0.55 ) }
    dend_6 { pt3dadd( 30.374, -34.6861, -5.76826, 0.55 ) }
    dend_6 { pt3dadd( 32.7923, -37.0435, -3.92265, 0.55 ) }
    dend_6 { pt3dadd( 36.1971, -40.4633, -1.29651, 0.28 ) }
    dend_6 { pt3dadd( 36.5819, -40.8644, -1.02322, 0.55 ) }
    dend_6 { pt3dadd( 38.4695, -42.7818, 0.455677, 0.28 ) }
    dend_6 { pt3dadd( 39.4798, -43.9399, 1.31606, 0.28 ) }
    dend_6 { pt3dadd( 39.9903, -44.5286, 1.6156, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 12.4433, -39.1334, 3.16294, 0.55 ) }
    dend_16 { pt3dadd( 10.3586, -38.9708, 1.87654, 0.55 ) }
    dend_16 { pt3dadd( 9.23083, -38.8828, 1.18066, 0.28 ) }
    dend_16 { pt3dadd( 8.33592, -38.813, 0.628449, 0.55 ) }
    dend_16 { pt3dadd( 7.48293, -38.7464, 0.102108, 0.28 ) }
    dend_16 { pt3dadd( 5.73692, -38.6102, -0.975275, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 12.4433, -39.1334, 3.16294, 0.55 ) }
    dend_15 { pt3dadd( 13.0513, -39.2721, 3.79734, 0.55 ) }
    dend_15 { pt3dadd( 14.0313, -39.455, 4.77495, 0.55 ) }
    dend_15 { pt3dadd( 15.3611, -39.6031, 6.32357, 0.55 ) }
    dend_15 { pt3dadd( 17.414, -39.9045, 8.89925, 0.83 ) }
    dend_15 { pt3dadd( 18.8098, -40.1659, 10.7451, 0.28 ) }
    dend_15 { pt3dadd( 19.0147, -40.214, 11.0304, 0.55 ) }
    dend_15 { pt3dadd( 20.3251, -40.5321, 13.1803, 0.55 ) }
    dend_15 { pt3dadd( 22.0717, -41.08, 16.54, 0.55 ) }
    dend_15 { pt3dadd( 22.7265, -41.4074, 18.0599, 0.55 ) }
    dend_15 { pt3dadd( 22.9614, -41.585, 18.6146, 0.55 ) }
    dend_15 { pt3dadd( 23.215, -41.8771, 19.2955, 0.55 ) }
    dend_15 { pt3dadd( 24.3955, -43.816, 22.9943, 0.55 ) }
    dend_15 { pt3dadd( 24.4797, -44.6139, 23.6544, 0.55 ) }
    dend_15 { pt3dadd( 24.4029, -45.2395, 23.747, 0.55 ) }
    dend_15 { pt3dadd( 23.8759, -47.2403, 23.2892, 0.55 ) }
    dend_15 { pt3dadd( 22.4871, -51.2767, 21.3863, 0.55 ) }
    dend_15 { pt3dadd( 21.4733, -53.7911, 19.7958, 0.28 ) }
    dend_15 { pt3dadd( 20.9458, -54.9915, 18.9355, 0.55 ) }
    dend_15 { pt3dadd( 23.8629, -58.8826, 23.0428, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -21.1634, -42.0418, -70.8571, 0.55 ) }
    dend_9 { pt3dadd( -21.2941, -43.0632, -73.2328, 0.55 ) }
    dend_9 { pt3dadd( -21.4141, -44.0622, -75.9114, 0.55 ) }
    dend_9 { pt3dadd( -21.7251, -46.5483, -82.8674, 0.55 ) }
    dend_9 { pt3dadd( -21.8174, -47.0058, -84.0278, 0.55 ) }
    dend_9 { pt3dadd( -21.9565, -47.5981, -85.461, 0.55 ) }
    dend_9 { pt3dadd( -22.4744, -50.0564, -90.6681, 0.28 ) }
    dend_9 { pt3dadd( -22.885, -51.8046, -94.2922, 0.55 ) }
    dend_9 { pt3dadd( -23.3553, -53.6722, -97.9751, 0.55 ) }
    dend_9 { pt3dadd( -23.7264, -55.1304, -100.43, 0.55 ) }
    dend_9 { pt3dadd( -24.1342, -56.5305, -102.813, 0.83 ) }
    dend_9 { pt3dadd( -24.6737, -58.3003, -105.701, 0.28 ) }
    dend_9 { pt3dadd( -25.2464, -60.6518, -109.148, 0.55 ) }
    dend_9 { pt3dadd( -25.6448, -62.6768, -111.986, 0.28 ) }
    dend_9 { pt3dadd( -25.6863, -62.9291, -112.344, 0.55 ) }
    dend_9 { pt3dadd( -25.9609, -64.9021, -115.319, 0.28 ) }
    dend_9 { pt3dadd( -26.0305, -65.2993, -115.881, 0.55 ) }
    dend_9 { pt3dadd( -26.1459, -65.8044, -116.722, 0.28 ) }
    dend_9 { pt3dadd( -26.1732, -66.0088, -116.966, 0.55 ) }
    dend_9 { pt3dadd( -26.2222, -67.2667, -117.923, 0.28 ) }
    dend_9 { pt3dadd( -26.4208, -68.6752, -118.675, 0.83 ) }
    dend_9 { pt3dadd( -26.8792, -69.989, -118.777, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 73/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -21.1634, -42.0418, -70.8571, 0.28 ) }
    dend_8 { pt3dadd( -22.7203, -43.5352, -73.4948, 0.28 ) }
    dend_8 { pt3dadd( -23.5543, -44.4473, -75.1449, 0.55 ) }
    dend_8 { pt3dadd( -25.6654, -47.1153, -79.9463, 0.28 ) }
    dend_8 { pt3dadd( -26.939, -48.7248, -82.8428, 0.55 ) }
    dend_8 { pt3dadd( -27.9233, -49.9688, -85.0813, 0.28 ) }
    dend_8 { pt3dadd( -28.362, -50.5233, -86.0792, 0.55 ) }
    dend_8 { pt3dadd( -29.071, -51.5528, -88.1704, 0.28 ) }
    dend_8 { pt3dadd( -29.3151, -51.99, -89.1322, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_17, dend_10, dend_3, dend_0, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_14, dend_13, dend_7, dend_6, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_17, dend_10, dend_3, dend_0, dend_19, dend_18, dend_12, dend_11, dend_5, dend_4, dend_2, dend_1, dend_14, dend_13, dend_7, dend_6, dend_16, dend_15, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_19 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_18 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_11 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_2 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_7 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_9 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_17 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_10 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_3 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_5 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_8 OneSecGrp_SectionRef_23.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_17, dend_17, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, axon_0, axon_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 5
    dend_18 nseg = 3
    dend_11 nseg = 7
    dend_2 nseg = 5
    dend_1 nseg = 3
    dend_13 nseg = 5
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_15 nseg = 3
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_SBC_cf92e1b802_0_0


