// Cell: cNAC187_L6_BP_e2f954f49d_0_0
/*
{
  "id" : "cNAC187_L6_BP_e2f954f49d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.55624, 7.7466, 2.72839, 0.83", "-4.65666, 9.37459, 3.04516, 1.11", "-5.89507, 10.3338, 3.20994, 0.83", "-7.09824, 11.2577, 3.35758, 0.83", "-7.81061, 11.7845, 3.43848, 1.11", "-10.0415, 13.4307, 3.69778, 1.11", "-14.0315, 16.249, 4.15613, 0.83", "-15.4689, 17.2256, 4.30749, 0.83", "-16.6073, 17.976, 4.4015, 0.83", "-17.7173, 18.7197, 4.48288, 0.83", "-18.6209, 19.3326, 4.52679, 0.55", "-19.3001, 19.7477, 4.57136, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.35858, 6.13661, -6.15321, 0.55", "6.68032, 6.63885, -6.6717, 0.55", "8.02754, 6.76564, -7.35776, 0.83", "10.1597, 6.90056, -8.63218, 0.55", "11.189, 6.96569, -9.24737, 1.38", "13.7197, 7.12583, -10.76, 0.55", "14.7976, 7.0716, -11.4817, 0.83", "20.3733, 6.07709, -15.5368, 0.55", "20.9127, 5.94335, -15.9829, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.689927, -10.9992, 3.41615, 1.11", "-0.74929, -16.2369, 5.29383, 1.11", "-0.773466, -18.37, 6.05854, 0.83", "-0.805587, -21.2039, 7.0745, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.999297, 10.5619, -1.42621, 1.11", "1.1953, 13.174, -1.41398, 1.11", "1.52147, 17.4352, -1.23779, 1.38", "1.54421, 17.6723, -1.22421, 1.38", "2.00494, 20.6009, -1.04659, 0.83", "2.63626, 23.6925, -0.707808, 0.83", "3.69511, 27.1709, 0.0630993, 0.83", "4.27904, 28.4839, 0.499793, 0.83", "4.84152, 29.4298, 0.898047, 1.11", "6.45461, 31.726, 1.90615, 0.55", "8.32707, 34.116, 3.11521, 0.83", "10.7309, 36.5582, 4.45269, 0.55", "11.9392, 37.5655, 5.04392, 0.83", "13.6411, 38.9274, 5.98785, 0.55", "15.7664, 40.6606, 7.28765, 0.55", "18.7647, 43.2756, 9.30443, 0.55", "22.0729, 46.2687, 11.5322, 0.55", "24.197, 48.2114, 13.2385, 0.55", "26.8454, 50.6683, 15.6898, 0.55", "27.4015, 51.1601, 16.2513, 0.83", "28.883, 52.459, 17.8454, 0.55", "30.1156, 53.4689, 19.0882, 0.83", "32.9787, 56.2461, 22.0448, 0.55", "34.0233, 57.2608, 22.8835, 0.83", "34.9658, 58.0032, 23.4235, 0.55", "35.8806, 58.639, 23.8141, 0.83", "37.878, 59.8114, 24.4795, 0.83", "40.4943, 61.4114, 25.1374, 0.83", "42.082, 62.4743, 25.3759, 0.55", "43.297, 63.3994, 25.5645, 0.55", "46.4752, 65.7883, 26.013, 0.83", "48.518, 67.3203, 26.2231, 0.55", "51.6016, 69.5618, 26.4201, 0.55", "54.4077, 71.4338, 26.4907, 0.55", "56.9068, 73.0159, 26.4877, 0.55", "60.0425, 74.8627, 26.3433, 0.55", "61.944, 75.7557, 26.1932, 0.55", "63.2186, 76.2512, 25.937, 0.55", "64.8838, 76.5985, 25.4525, 0.55", "67.3298, 76.7042, 24.5211, 0.55", "68.841, 76.5694, 23.8789, 0.55", "71.0679, 76.3085, 23.1019, 0.55", "75.3641, 75.9493, 22.0139, 0.55", "78.7713, 75.826, 21.4056, 0.55", "82.4157, 75.8685, 20.9789, 0.55", "84.7785, 75.9752, 20.8901, 0.55", "90.985, 76.803, 21.0608, 0.55", "94.7004, 77.5695, 21.4333, 0.55", "97.5239, 78.3206, 21.9657, 0.55", "99.2561, 79.0504, 22.3537, 0.55", "101.271, 80.1547, 22.7948, 0.55", "104.655, 82.352, 23.2552, 0.55", "105.419, 82.883, 23.2588, 0.55", "107.589, 84.299, 23.1287, 0.55", "109.589, 85.8175, 23.0025, 0.83", "110.679, 86.6605, 22.9169, 0.55", "112.309, 88.1154, 22.726, 0.83", "121.177, 95.8751, 23.9295, 0.83", "128.883, 104.858, 24.4057, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-19.3001, 19.7477, 4.57136, 0.55", "-21.0264, 20.2479, 4.04898, 0.55", "-22.9037, 20.7919, 3.48096, 0.55", "-25.1691, 21.4483, 2.79547, 0.55", "-27.0398, 21.9904, 2.22944, 0.83", "-28.6074, 22.4446, 1.75512, 0.55", "-31.5171, 23.2877, 0.874695, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-19.3001, 19.7477, 4.57136, 0.55", "-21.2968, 20.0925, 4.39713, 0.55", "-23.4129, 20.4, 4.42453, 0.55", "-25.8102, 20.7465, 4.51427, 0.55", "-29.2697, 21.2208, 4.96456, 0.55", "-32.156, 21.5396, 5.55111, 0.55", "-35.1778, 21.8309, 6.29837, 0.55", "-38.0847, 21.9227, 7.34602, 0.55", "-40.5754, 21.7617, 8.5028, 0.55", "-43.6638, 21.3496, 10.2924, 0.55", "-44.9983, 21.0751, 11.2668, 0.55", "-46.4371, 20.7648, 12.3843, 0.55", "-48.9779, 20.0143, 14.2423, 0.55", "-50.3385, 19.6123, 15.0099, 0.55", "-51.7636, 19.1459, 15.8067, 0.55", "-53.4654, 18.6079, 16.5764, 0.55", "-55.3172, 18.0609, 17.3595, 0.55", "-57.9622, 17.2719, 18.4182, 0.55", "-61.5098, 16.4493, 19.4995, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.9127, 5.94335, -15.9829, 0.55", "25.7324, 7.14972, -17.0047, 0.55", "28.5049, 7.69997, -17.9923, 0.55", "31.2388, 8.1217, -19.0126, 0.55", "33.1054, 8.33497, -19.7128, 0.55", "35.8324, 8.58213, -20.7181, 0.55", "41.4865, 8.99321, -22.9865, 0.55", "47.8974, 9.43869, -25.9915, 0.55", "51.0011, 9.4694, -27.6747, 0.55", "52.6619, 9.44971, -28.6881, 0.55", "54.4827, 9.44051, -29.8734, 0.55", "57.7302, 9.33193, -31.9802, 0.55", "58.908, 9.22437, -32.7883, 0.55", "63.8941, 8.9131, -36.5928, 0.55", "67.4227, 8.76224, -39.5473, 0.55", "69.4547, 8.71801, -41.303, 0.55", "71.4809, 8.65572, -43.0533, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "20.9127, 5.94335, -15.9829, 0.83", "22.873, 7.06363, -15.9652, 0.83", "23.993, 7.70612, -16.0056, 0.55", "25.6415, 8.69629, -16.2011, 0.83", "26.7506, 9.39206, -16.3639, 0.55", "28.2816, 10.3906, -16.5637, 0.83", "30.1245, 11.6225, -16.7348, 0.55", "31.0498, 12.1726, -16.7873, 0.55", "33.1713, 13.1444, -16.7777, 0.83", "35.0921, 13.7818, -16.5353, 0.55", "36.1662, 14.1207, -16.2983, 0.83", "37.7805, 14.6539, -15.7722, 0.55", "40.103, 15.4427, -14.7199, 0.55", "43.3241, 16.3636, -13.1046, 0.55", "46.3937, 17.1194, -11.3604, 0.55", "48.8251, 17.6899, -9.93679, 0.55", "52.8342, 18.6477, -7.56773, 0.55", "55.7705, 19.4279, -5.7652, 0.55", "57.5484, 20.0421, -4.60306, 0.55", "60.8327, 21.5025, -2.41212, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.805587, -21.2039, 7.0745, 0.83", "-1.08975, -24.4673, 6.94171, 0.83", "-1.36661, -27.6468, 6.81233, 0.83", "-1.67571, -31.1967, 6.66788, 0.83", "-1.83713, -33.0504, 6.59244, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.805587, -21.2039, 7.0745, 0.55", "0.0362325, -23.2659, 8.34128, 0.55", "0.839729, -25.7806, 10.0377, 0.55", "1.42343, -29.055, 12.4667, 0.55", "1.56831, -30.324, 13.4585, 0.83", "1.70356, -33.5529, 16.3998, 0.55", "1.64353, -35.2144, 17.9716, 0.55", "1.48053, -38.4437, 21.1747, 0.83", "1.24632, -40.8368, 23.7261, 0.55", "0.874098, -42.8024, 25.8281, 0.55", "0.0749038, -46.5206, 29.7549, 0.55", "-0.56455, -49.4839, 32.8495, 0.55", "-1.02379, -51.862, 35.3559, 0.55", "-1.38516, -54.3926, 37.9155, 0.28", "-1.45388, -55.4504, 38.9272, 0.55", "-1.54782, -57.4053, 40.6779, 0.28", "-1.35734, -60.4714, 42.8753, 0.55", "-3.05943, -70.565, 51.1156, 0.55", "-4.85784, -79.8849, 60.2032, 0.55", "-5.74155, -87.5818, 70.8172, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-31.5171, 23.2877, 0.874695, 0.55", "-34.0356, 24.3528, 3.56593, 0.55", "-35.0186, 24.8033, 4.87506, 0.83", "-36.074, 25.3467, 6.62379, 0.55", "-36.8389, 25.81, 8.05924, 0.83", "-38.8732, 27.1202, 11.7503, 0.55", "-39.6431, 27.6398, 13.1482, 0.28", "-40.8649, 28.6015, 15.6197, 0.55", "-42.5119, 29.9017, 18.9184, 0.55", "-43.799, 30.8484, 21.3398, 0.55", "-45.5521, 32.0743, 24.4975, 0.28", "-46.0418, 32.3604, 25.2402, 0.55", "-47.0797, 32.945, 26.7211, 0.28", "-47.8252, 33.3259, 27.6334, 0.55", "-49.4134, 34.0123, 29.3455, 0.28", "-50.3589, 34.3247, 30.3223, 0.55", "-51.9949, 34.7352, 32.1233, 0.28", "-53.1114, 34.9803, 33.2928, 0.55", "-58.3093, 37.4923, 44.0885, 0.55", "-62.3945, 39.1885, 55.5037, 0.55", "-66.0279, 39.8111, 67.1779, 0.55", "-69.6221, 38.9074, 78.8458, 0.55", "-71.575, 38.9943, 90.9311, 0.55", "-74.5976, 39.2948, 102.79, 0.55", "-77.8893, 41.5959, 114.355, 0.55", "-81.0678, 42.9368, 126.101, 0.55", "-84.0304, 45.1651, 137.769, 0.55", "-86.3214, 47.3751, 149.59, 0.55", "-87.1831, 48.4611, 161.754, 0.55", "-88.2322, 50.6778, 173.748, 0.55", "-89.3926, 51.6177, 185.899, 0.55", "-88.9961, 52.2793, 198.117, 0.55", "-86.5478, 54.033, 209.983, 0.55", "-83.99, 53.4134, 221.939, 0.55", "-79.753, 52.6169, 233.397, 0.55", "-76.1201, 52.3676, 245.085, 0.55", "-73.7642, 52.9924, 257.083, 0.55", "-74.1173, 55.261, 269.108, 0.55", "-73.2787, 56.3089, 281.276, 0.55", "-70.2882, 59.5946, 292.684, 0.55", "-69.3426, 63.583, 304.22, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-31.5171, 23.2877, 0.874695, 0.55", "-33.3079, 23.2346, -0.296997, 0.55", "-34.8687, 23.1785, -1.74709, 0.55", "-36.4156, 23.2312, -3.3632, 0.55", "-37.3843, 23.2642, -4.37519, 0.55", "-39.1514, 23.3243, -6.22118, 0.83", "-40.4441, 23.3683, -7.57173, 0.55", "-42.0885, 23.3714, -9.61437, 0.83", "-42.8572, 23.4766, -10.8563, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-61.5098, 16.4493, 19.4995, 0.28", "-62.4598, 14.2507, 19.9785, 0.28", "-62.9329, 13.2752, 20.1211, 0.28", "-63.5457, 11.8846, 20.2699, 0.55", "-64.0444, 10.6682, 20.4042, 0.28", "-64.7731, 8.82455, 20.625, 0.55", "-66.7685, 3.44429, 21.3314, 0.28", "-67.4268, 1.51377, 21.4394, 0.55", "-68.4324, -1.48923, 21.5173, 0.28", "-69.0147, -3.30839, 21.4916, 0.55", "-69.4205, -4.57139, 21.4489, 0.28", "-69.8811, -6.01709, 21.4091, 0.55", "-71.2347, -10.793, 21.3502, 0.28", "-71.6695, -12.2548, 21.2925, 0.55", "-72.4733, -14.5689, 21.0292, 0.28", "-73.1665, -16.101, 20.7803, 0.28", "-73.8041, -17.1479, 20.6078, 0.55", "-76.0374, -20.097, 20.2463, 0.28", "-77.0785, -21.2943, 20.1376, 0.55", "-79.6491, -24.0816, 19.7863, 0.28", "-82.2355, -26.5877, 19.471, 0.28", "-85.0683, -29.0381, 19.1268, 0.28", "-86.3705, -29.9812, 19.0213, 0.55", "-92.2622, -39.061, 18.8733, 0.55", "-98.6108, -47.6326, 20.717, 0.55", "-105.057, -56.3256, 20.9262, 0.55", "-111.869, -64.6988, 20.1066, 0.55", "-118.969, -72.6463, 18.2101, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-61.5098, 16.4493, 19.4995, 0.55", "-61.9856, 16.4109, 19.5805, 0.55", "-63.3219, 16.3083, 19.9843, 0.55", "-63.8232, 16.2574, 20.1635, 0.55", "-65.0013, 16.1019, 20.604, 0.55", "-66.8163, 15.8793, 21.1922, 0.55", "-67.76, 15.7926, 21.4801, 0.28", "-69.2296, 15.6246, 21.9, 0.55", "-70.3224, 15.4762, 22.1726, 0.55", "-70.7839, 15.4105, 22.2889, 0.28", "-73.5518, 15.0146, 22.9823, 0.55", "-74.8484, 14.7675, 23.2281, 0.28", "-76.6006, 14.4248, 23.4565, 0.28", "-78.1143, 14.1494, 23.5638, 0.55", "-83.976, 13.9746, 25.2486, 0.55", "-89.6131, 13.6625, 27.5624, 0.55", "-94.9, 12.7455, 30.4669, 0.55", "-100.01, 12.8629, 33.7987, 0.55", "-104.323, 12.8018, 38.1137, 0.55", "-107.727, 13.0946, 43.1691, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "71.4809, 8.65572, -43.0533, 0.55", "76.969, 10.5252, -47.31, 0.55", "78.6918, 11.0633, -48.7764, 0.55", "80.84, 11.6623, -50.6001, 0.55", "84.7284, 12.7603, -54.1422, 0.55", "88.7637, 13.7606, -57.9707, 0.55", "90.7181, 14.0826, -59.8237, 0.83", "92.3098, 14.2603, -61.4933, 0.55", "93.4848, 14.3172, -62.8843, 0.83", "96.26, 14.0847, -66.5202, 0.55", "98.5163, 13.6708, -69.575, 0.55", "101.113, 13.1485, -72.9549, 0.55", "104.013, 12.6686, -76.7639, 0.55", "105.951, 12.3077, -79.3801, 0.55", "108.134, 11.9082, -82.4079, 0.55", "110.027, 11.6628, -85.1522, 0.55", "111.228, 11.6589, -87.0258, 0.55", "112.707, 11.8327, -90.7399, 0.55", "113.493, 11.8879, -93.07, 0.55", "114.111, 11.8825, -96.1712, 0.55", "114.895, 11.7518, -101.431, 0.55", "115.044, 11.6827, -102.624, 0.28", "117.002, 10.6694, -117.162, 0.28", "117.702, 10.385, -121.43, 0.83", "120.514, 9.07801, -136.631, 0.83", "121.966, 8.1841, -143.749, 0.83", "122.682, 7.69551, -146.657, 0.55", "123.535, 7.18846, -149.501, 0.55", "126.044, 6.0177, -154.834, 0.55", "128.792, 4.87683, -159.551, 0.28", "129.672, 4.51293, -159.898, 0.55", "131.646, 3.71243, -159.908, 0.28", "132.883, 3.27056, -159.716, 0.55", "134.173, 2.77095, -159.408, 0.28", "135.733, 2.23533, -158.951, 0.55", "138.078, 1.60607, -158.494, 0.28", "139.951, 1.05521, -158.199, 0.55", "142.038, 0.615659, -158.014, 0.28", "144.871, 0.0764697, -158.011, 0.55", "148.054, -0.417838, -158.185, 0.55", "150.853, -0.783443, -158.517, 0.28", "154.726, -1.2127, -159.184, 0.55", "161.429, -1.63271, -161.014, 0.55", "164.402, -1.5965, -162.15, 0.55", "165.684, -1.5019, -162.764, 0.83", "168.122, -1.26135, -164.154, 0.55", "169.821, -1.00606, -165.211, 0.83", "174.405, -0.190549, -168.084, 0.55", "177.178, 0.131713, -169.945, 0.28", "178.339, 0.169935, -170.612, 0.55", "181.49, -0.0875813, -172.141, 0.28", "182.583, -0.294194, -172.623, 0.55", "184.824, -0.93202, -173.287, 0.28", "187.084, -1.88548, -173.602, 0.55", "191.638, -4.22416, -173.457, 0.28", "193.731, -5.44287, -173.176, 0.55", "196.823, -7.47355, -172.621, 0.28", "200.734, -10.0516, -171.769, 0.55", "203.569, -11.8848, -171.099, 0.55", "208.503, -14.9169, -169.822, 0.28", "210.536, -16.031, -169.453, 0.55", "214.059, -17.6688, -169.177, 0.28", "217.599, -18.9772, -169.101, 0.55", "219.564, -19.4185, -169.293, 0.28", "221.366, -19.5505, -169.561, 0.55", "226.482, -19.5314, -170.74, 0.28", "230.166, -19.258, -171.593, 0.28", "233.398, -18.7839, -172.337, 0.55", "236.973, -18.1299, -173.317, 0.28", "237.882, -17.9164, -173.524, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "71.4809, 8.65572, -43.0533, 0.55", "72.013, 6.4846, -44.8996, 0.55", "72.2873, 4.63004, -46.3191, 0.28", "72.5384, 2.90941, -47.4647, 0.55", "73.269, -0.735575, -49.9335, 0.28", "73.3079, -0.96011, -50.1229, 0.55", "73.5459, -2.12221, -51.22, 0.28", "73.644, -3.05871, -52.292, 0.55", "73.6822, -4.01778, -53.535, 0.28", "73.6894, -5.31554, -55.2988, 0.55", "73.7057, -8.58422, -59.6566, 0.55", "73.6803, -11.5542, -63.6887, 0.55", "73.6327, -13.9272, -66.9146, 0.55", "73.5367, -16.2657, -70.0366, 0.55", "73.51, -16.874, -70.8135, 0.28", "73.5035, -17.5329, -71.5819, 0.55", "73.5922, -18.4605, -72.553, 0.28", "73.9413, -20.1504, -74.1291, 0.55", "74.9183, -23.47, -76.5961, 0.55", "75.4623, -25.2791, -77.7536, 0.28", "75.9025, -27.1045, -79.0118, 0.55", "76.3203, -29.6432, -80.8709, 0.28", "76.5174, -31.6824, -82.4191, 0.55", "76.6733, -34.728, -84.7372, 0.28", "76.8602, -37.8941, -87.0325, 0.55", "77.0664, -42.4839, -90.4065, 0.28", "77.1193, -44.9283, -92.2122, 0.55", "77.1295, -47.4191, -94.121, 0.28", "77.1121, -49.5918, -95.9464, 0.28", "77.1882, -52.2771, -98.4839, 0.55", "77.4478, -54.7795, -100.773, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "60.8327, 21.5025, -2.41212, 0.55", "63.2323, 20.9564, -2.28563, 0.55", "64.9593, 20.5466, -2.37173, 0.55", "68.7164, 19.6703, -2.76333, 0.55", "70.3874, 19.2905, -3.09572, 0.55", "72.2045, 18.9441, -3.53648, 0.55", "74.6297, 18.5773, -4.28373, 0.55", "77.156, 18.2026, -5.33293, 0.55", "78.464, 18.0387, -6.04037, 0.55", "81.0815, 17.8267, -7.84546, 0.55", "82.2836, 17.7524, -8.71284, 0.55", "85.0868, 17.5474, -10.8389, 0.55", "86.9802, 17.3233, -12.2886, 0.55", "88.3802, 17.1272, -13.2925, 0.83", "90.6121, 16.7183, -14.8986, 0.55", "92.7979, 16.1765, -16.4199, 0.83", "94.6523, 15.6044, -17.671, 0.55", "96.3151, 15.0906, -18.6862, 0.55", "97.2707, 14.8236, -19.1954, 0.83", "99.516, 14.1674, -20.2615, 0.28", "100.646, 13.8643, -20.7041, 0.28", "101.725, 13.5198, -21.2122, 0.28", "102.895, 13.1812, -21.7562, 0.28", "104.765, 12.6883, -22.6542, 0.28", "105.52, 12.4919, -22.9897, 0.55", "107.35, 11.9815, -23.6069, 0.55", "110.66, 10.9758, -24.5627, 0.55", "111.579, 10.6599, -24.7953, 0.55", "112.4, 10.3395, -24.9769, 0.83", "114.207, 9.65077, -25.2107, 0.55", "115.78, 9.04698, -25.3883, 0.55", "117.268, 8.48041, -25.5474, 0.55", "118.415, 8.03251, -25.7089, 0.55", "120.211, 7.22614, -26.0936, 0.55", "122.297, 6.12818, -26.7251, 0.55", "125.476, 4.12798, -28.0588, 0.55", "127.181, 2.80166, -28.9938, 0.55", "128.623, 1.40977, -29.9723, 0.28", "129.04, 0.9007, -30.3255, 0.55", "129.922, -0.520486, -31.2648, 0.28", "130.636, -2.11652, -32.2494, 0.55", "131.262, -4.15347, -33.2782, 0.55", "131.696, -5.51418, -33.8918, 0.28", "131.86, -6.00288, -34.086, 0.55", "132.292, -7.22297, -34.555, 0.28", "132.895, -8.8238, -35.1323, 0.55", "134.508, -12.7162, -36.4488, 0.55", "135.359, -14.6919, -37.077, 0.55", "136.154, -16.5079, -37.6387, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "60.8327, 21.5025, -2.41212, 0.55", "62.1201, 21.972, -1.2637, 0.55", "62.5361, 22.1147, -0.919043, 0.55", "64.0948, 22.5493, 0.314047, 0.55", "65.8317, 23.0776, 1.70885, 0.55", "68.0498, 23.7653, 3.55993, 0.55", "68.663, 23.9549, 4.06672, 0.55", "69.7646, 24.2472, 4.97548, 0.55", "70.9784, 24.5849, 5.91652, 0.55", "72.3984, 25.0023, 6.93413, 0.55", "73.7358, 25.4168, 7.89323, 0.55", "74.4741, 25.6703, 8.37551, 0.55", "75.3411, 25.9936, 8.93389, 0.55", "76.4162, 26.4208, 9.5969, 0.83", "78.2016, 27.0682, 10.494, 0.55", "79.3911, 27.4342, 11.0418, 0.83", "81.0498, 27.8505, 11.7636, 0.55", "81.5601, 27.9483, 11.9847, 0.55", "83.1476, 28.1635, 12.6566, 0.55", "86.0023, 28.3461, 13.7869, 0.55", "88.0987, 28.3508, 14.5949, 0.55", "89.7532, 28.2869, 15.2918, 0.55", "91.4326, 28.1471, 16.0813, 0.55", "91.7857, 28.1085, 16.2515, 0.28", "92.5018, 28.0009, 16.6018, 0.83", "95.4398, 27.5196, 18.0678, 0.55", "97.5002, 27.1752, 19.0526, 0.55", "99.1859, 26.9467, 19.8933, 0.55", "100.192, 26.8096, 20.4061, 0.83", "100.984, 26.7137, 20.8084, 0.28", "101.703, 26.6261, 21.1662, 0.55", "107.206, 27.5367, 24.438, 0.55", "113.183, 27.2266, 26.889, 0.55", "119.099, 27.7494, 29.4472, 0.55", "124.201, 27.6993, 33.4208, 0.55", "128.882, 26.8672, 37.8036, 0.55", "134.239, 24.7209, 40.7224, 0.55", "139.62, 21.7391, 42.7167, 0.55", "145.611, 19.7748, 44.1536, 0.55", "151.485, 17.8167, 46.0189, 0.55", "157.659, 16.4419, 47.3638, 0.55", "163.716, 15.5379, 49.4429, 0.55", "169.33, 13.649, 52.0382, 0.55", "175.036, 13.0101, 55.0124, 0.55", "180.39, 13.4999, 58.6069, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.83713, -33.0504, 6.59244, 1.38", "2.48643, -37.5179, 5.62764, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.83713, -33.0504, 6.59244, 0.55", "-3.37332, -34.8677, 6.66889, 0.55", "-5.07553, -37.2021, 6.75335, 0.55", "-6.3972, -38.7443, 6.83488, 0.55", "-7.51601, -40.0327, 6.72738, 0.55", "-9.96217, -42.6987, 6.26081, 0.55", "-11.6782, -44.4776, 5.88601, 0.55", "-13.2058, -46.0725, 5.49466, 0.55", "-17.1278, -49.9507, 4.49372, 0.55", "-21.8375, -54.4381, 3.32932, 0.55", "-25.4858, -57.8352, 2.36425, 0.55", "-27.816, -60.067, 1.71421, 0.55", "-30.4905, -62.7471, 0.97605, 0.55", "-33.8872, -66.5992, 0.0826127, 0.55", "-35.8786, -69.3402, -0.39995, 0.55", "-38.3354, -73.2911, -0.781995, 0.55", "-40.2987, -77.0, -1.01136, 0.55", "-42.2927, -81.6373, -1.2128, 0.55", "-44.1838, -87.0906, -1.32694, 0.55", "-45.2158, -91.2668, -1.32423, 0.55", "-45.584, -93.3479, -1.19026, 0.55", "-46.1478, -98.2439, -0.61604, 0.55", "-46.5905, -102.827, 0.0390087, 0.55", "-46.7898, -107.448, 1.0344, 0.55", "-46.9277, -110.099, 1.75067, 0.55", "-47.2963, -118.297, 4.26486, 0.55", "-47.3272, -118.901, 4.46067, 0.55", "-47.4441, -122.599, 5.74852, 0.55", "-47.957, -129.206, 8.21466, 0.55", "-48.1449, -131.415, 8.9085, 0.55", "-48.5403, -134.866, 9.40371, 0.55", "-48.6621, -136.148, 9.29343, 0.55", "-48.9047, -140.49, 8.10028, 0.55", "-48.9214, -143.305, 6.73079, 0.55", "-48.8504, -147.79, 3.63634, 0.55", "-48.5533, -153.28, -0.578943, 0.28", "-48.4636, -154.638, -1.80465, 0.55", "-48.3259, -156.695, -3.84412, 0.28", "-48.3085, -157.005, -4.16783, 0.55", "-48.2196, -158.703, -5.7949, 0.28", "-48.2252, -159.279, -6.21377, 0.55", "-48.306, -162.273, -7.8116, 0.28", "-48.3725, -163.29, -8.34136, 0.55", "-48.5972, -166.234, -9.70494, 0.28", "-48.6637, -167.16, -10.1309, 0.55", "-48.918, -170.357, -11.5479, 0.28", "-49.0274, -171.828, -12.2075, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.74155, -87.5818, 70.8172, 0.55", "-9.17564, -95.5083, 78.3521, 0.55", "-13.7863, -102.511, 86.1687, 0.55", "-18.0432, -110.244, 93.481, 0.55", "-22.4936, -118.032, 100.618, 0.55", "-25.6745, -127.027, 106.971, 0.55", "-28.7668, -135.643, 113.87, 0.55", "-30.4697, -145.969, 118.548, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.74155, -87.5818, 70.8172, 0.55", "-4.90533, -92.2782, 75.4273, 0.55", "-3.78379, -97.6949, 79.0894, 0.55", "-3.72426, -103.221, 82.7584, 0.55", "-4.0422, -109.092, 85.831, 0.55", "-4.09237, -114.922, 88.9971, 0.55", "-4.09533, -120.509, 92.5739, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-42.8572, 23.4766, -10.8563, 0.83", "-43.0408, 24.1888, -12.1621, 0.83", "-43.5049, 25.9525, -15.1153, 0.55", "-43.6851, 26.7371, -16.3056, 0.83", "-43.8576, 27.5979, -17.5065, 0.55", "-44.0005, 28.5281, -18.5848, 0.55", "-44.052, 29.0162, -19.0561, 0.28", "-44.0888, 29.3631, -19.2696, 0.55", "-44.1155, 30.5999, -19.731, 0.28", "-44.1078, 31.1381, -19.9056, 0.55", "-44.0869, 33.027, -20.4327, 0.28", "-44.0968, 34.5331, -20.7913, 0.55", "-44.2052, 36.8911, -21.2519, 0.28", "-44.3618, 38.9658, -21.5995, 0.28", "-44.5091, 40.1249, -21.7548, 0.55", "-44.7649, 41.4888, -21.9158, 0.28", "-44.9265, 42.1368, -21.9724, 0.55", "-45.4028, 43.6314, -22.1493, 0.28", "-45.7978, 44.6045, -22.3001, 0.28", "-46.2132, 45.5492, -22.4717, 0.28", "-46.4135, 46.0504, -22.5699, 0.55", "-47.1245, 48.08, -23.0457, 0.28", "-47.8958, 50.4828, -23.6767, 0.55", "-48.1506, 51.3135, -23.9013, 0.55", "-48.4154, 52.1496, -24.1046, 0.55", "-49.0798, 53.904, -24.5392, 0.55", "-49.5977, 55.0377, -24.8286, 0.28", "-49.8469, 55.4577, -24.9297, 0.55", "-50.6007, 56.5895, -25.1542, 0.28", "-51.4676, 57.7723, -25.4292, 0.55", "-52.9026, 59.4272, -25.848, 0.28", "-53.591, 60.0984, -26.0243, 0.28", "-54.711, 60.9809, -26.3379, 0.55", "-55.966, 61.8726, -26.7024, 0.28", "-56.1914, 62.006, -26.761, 0.55", "-56.9944, 62.4132, -26.9487, 0.28", "-59.7372, 63.6884, -27.5166, 0.55", "-63.5469, 65.1407, -28.3508, 0.28", "-64.2547, 65.3609, -28.5299, 0.55", "-66.1972, 65.8943, -29.0322, 0.28", "-67.0162, 66.1035, -29.2588, 0.28", "-67.7331, 66.2618, -29.4797, 0.55", "-69.8387, 66.4772, -30.2035, 0.28", "-71.2986, 66.5159, -30.6339, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-42.8572, 23.4766, -10.8563, 0.55", "-43.3388, 24.7798, -11.4956, 0.55", "-43.6177, 25.5812, -11.7934, 0.28", "-43.8855, 26.2126, -11.8273, 0.55", "-44.5006, 27.6624, -11.9052, 0.28", "-44.9327, 28.6808, -11.9599, 0.55", "-45.7292, 30.5581, -12.0608, 0.28", "-46.1951, 31.6313, -11.9263, 0.55", "-47.7012, 34.5051, -10.6112, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-118.969, -72.6463, 18.2101, 0.55", "-125.174, -82.4122, 17.9209, 0.55", "-129.616, -93.0391, 16.7815, 0.55", "-133.569, -103.281, 13.1161, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-118.969, -72.6463, 18.2101, 0.55", "-124.326, -80.0193, 16.8874, 0.55", "-128.902, -87.6406, 14.4839, 0.55", "-133.123, -95.4015, 11.8856, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-107.727, 13.0946, 43.1691, 0.55", "-113.141, 13.67, 47.2854, 0.55", "-119.007, 14.8465, 50.5699, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-107.727, 13.0946, 43.1691, 0.55", "-118.66, 11.7835, 48.4325, 0.55", "-129.876, 12.4105, 53.2038, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "77.4478, -54.7795, -100.773, 0.28", "87.1947, -60.1846, -118.254, 0.28", "88.161, -60.8102, -119.812, 0.55", "89.7923, -61.8663, -122.444, 0.28", "91.1659, -62.7556, -124.66, 0.28", "92.9842, -63.9328, -127.594, 0.55", "95.3815, -65.4848, -131.461, 0.55", "98.6014, -68.2762, -133.518, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "77.4478, -54.7795, -100.773, 0.55", "78.0618, -55.8247, -102.482, 0.55", "78.2263, -56.261, -103.253, 0.28", "78.4575, -56.9848, -104.6, 0.55", "78.9669, -58.5795, -107.569, 0.28", "79.3199, -59.6846, -109.627, 0.55", "79.9179, -61.557, -113.113, 0.28", "80.6027, -63.7332, -117.636, 0.28", "80.8588, -64.704, -119.751, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "136.154, -16.5079, -37.6387, 0.28", "138.21, -19.3642, -37.3493, 0.28", "140.839, -23.1616, -36.6377, 0.28", "142.513, -25.6335, -36.071, 0.55", "143.531, -27.0016, -35.6967, 0.28", "144.073, -27.7387, -35.4873, 0.28", "146.753, -31.3742, -34.5123, 0.55", "147.381, -32.1891, -34.1895, 0.28", "148.886, -34.3486, -33.1782, 0.55", "150.163, -36.2215, -32.376, 0.28", "151.272, -37.7415, -31.7595, 0.55", "152.561, -39.5531, -31.1352, 0.55", "154.575, -42.4089, -30.512, 0.55", "155.057, -43.1082, -30.3842, 0.55", "156.78, -45.7188, -29.9312, 0.28", "157.443, -46.7843, -29.7719, 0.55", "158.371, -48.1439, -29.58, 0.28", "159.671, -50.069, -29.3973, 0.55", "161.782, -53.0755, -29.5707, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "136.154, -16.5079, -37.6387, 0.55", "133.323, -16.06, -37.4329, 0.55", "131.024, -15.6963, -37.2658, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.48643, -37.5179, 5.62764, 0.83", "2.62901, -37.777, 5.63949, 0.83", "4.19276, -40.0524, 5.9773, 0.83", "5.59875, -42.0436, 6.13928, 0.55", "6.72044, -43.6322, 6.2685, 0.55", "9.10461, -47.0087, 6.54317, 0.83", "11.9964, -51.1041, 6.87632, 0.55", "13.5557, -53.2451, 7.10898, 0.83", "16.2498, -56.6386, 7.70125, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.48643, -37.5179, 5.62764, 0.55", "2.322, -38.4016, 3.01406, 0.55", "2.14551, -39.3501, 0.208702, 0.55", "1.93716, -40.4698, -3.10305, 0.55", "1.68416, -41.8295, -7.12458, 0.55", "1.54059, -42.6011, -9.40667, 0.55", "1.51175, -42.7561, -9.8651, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.09533, -120.509, 92.5739, 0.55", "-3.52214, -126.32, 96.8898, 0.55", "-1.8874, -132.386, 100.528, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.09533, -120.509, 92.5739, 0.55", "-4.02327, -129.427, 97.7865, 0.55", "-4.42214, -138.153, 103.3, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-47.7012, 34.5051, -10.6112, 0.28", "-48.6688, 36.7509, -9.32178, 0.28", "-49.0031, 37.6356, -8.76702, 0.55", "-49.9361, 40.2168, -7.13326, 0.28", "-50.4391, 41.4529, -6.40803, 0.55", "-51.8555, 44.7585, -4.51675, 0.28", "-53.2951, 48.1182, -2.59452, 0.55", "-55.6297, 53.4874, 0.71212, 0.28", "-56.1274, 54.6379, 1.4139, 0.55", "-57.2672, 57.2517, 2.84579, 0.28", "-57.7163, 58.319, 3.38805, 0.55", "-63.0075, 65.9901, 9.40679, 0.55", "-70.0713, 73.6748, 13.1642, 0.55", "-75.6194, 82.2267, 17.5404, 0.55", "-80.1254, 91.8847, 20.6208, 0.55", "-85.8822, 100.85, 23.711, 0.55", "-91.8418, 108.753, 28.7209, 0.55", "-96.447, 116.569, 35.1061, 0.55", "-99.416, 124.02, 42.77, 0.55", "-102.624, 131.891, 49.8991, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-47.7012, 34.5051, -10.6112, 0.55", "-50.2926, 34.3216, -7.14922, 0.55", "-51.6294, 34.1657, -5.32251, 0.28", "-52.6241, 34.0497, -3.96315, 0.55", "-53.4532, 33.953, -2.83017, 0.28", "-54.034, 33.8852, -2.0366, 0.55", "-55.6353, 33.6985, 0.151645, 0.28", "-56.7585, 33.3569, 1.51075, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-133.569, -103.281, 13.1161, 0.55", "-137.104, -113.07, 12.7006, 0.55", "-140.065, -123.039, 13.3022, 0.55", "-142.868, -132.976, 11.9149, 0.55", "-146.241, -142.829, 12.1557, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-133.569, -103.281, 13.1161, 0.55", "-141.13, -113.106, 5.62263, 0.55", "-148.47, -121.379, -3.73285, 0.55", "-156.53, -130.946, -11.0375, 0.55", "-167.404, -138.247, -17.2273, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-133.123, -95.4015, 11.8856, 0.55", "-139.637, -100.351, 5.85404, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-133.123, -95.4015, 11.8856, 0.55", "-136.899, -104.722, 17.2384, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "98.6014, -68.2762, -133.518, 0.28", "101.899, -70.0538, -135.523, 0.28", "103.43, -70.8795, -136.454, 0.55", "106.35, -72.454, -138.23, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "98.6014, -68.2762, -133.518, 0.55", "98.1655, -68.8202, -134.931, 0.55", "97.2936, -69.9082, -137.759, 0.28", "97.0096, -70.2626, -138.68, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "80.8588, -64.704, -119.751, 0.28", "81.3337, -66.1861, -122.481, 0.28", "81.5688, -66.92, -123.833, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "80.8588, -64.704, -119.751, 0.55", "78.6794, -64.6598, -119.579, 0.55", "72.6021, -64.5366, -119.099, 0.28", "71.1584, -64.5073, -118.985, 0.55", "67.2091, -64.4272, -118.674, 0.28", "64.6634, -64.3755, -118.473, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "16.2498, -56.6386, 7.70125, 0.83", "16.3427, -56.9466, 7.67301, 0.83", "17.537, -60.9852, 7.43331, 0.83", "18.0981, -64.0532, 7.24425, 0.83", "18.2849, -67.0664, 7.17723, 0.83", "18.2382, -71.1215, 7.23954, 0.83", "17.9804, -75.8221, 7.36741, 0.83", "17.5458, -81.1008, 7.73727, 0.83", "16.9844, -86.2555, 8.28006, 0.83", "16.0654, -92.5934, 8.5868, 0.83", "15.6181, -95.4966, 8.50501, 0.83", "15.3568, -97.6646, 8.33234, 0.83", "14.8394, -101.82, 7.87919, 0.83", "14.5665, -105.512, 7.36655, 0.83", "14.848, -113.257, 5.84597, 0.83", "15.3792, -117.425, 4.60488, 0.83", "16.0411, -121.232, 3.23262, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.2498, -56.6386, 7.70125, 0.55", "15.1456, -59.6863, 7.36485, 0.55", "14.2564, -61.9028, 7.2612, 0.55", "13.6719, -63.3198, 7.33823, 0.55", "12.777, -65.5339, 7.69285, 0.55", "11.0093, -69.9149, 8.69338, 0.55", "9.51736, -73.2375, 9.77498, 0.55", "8.22353, -75.9043, 10.9026, 0.55", "6.78986, -78.6044, 12.1927, 0.55", "5.54277, -80.8462, 13.3626, 0.28", "4.40585, -82.683, 14.5532, 0.55", "2.10278, -86.0359, 17.1192, 0.55", "0.511983, -88.1006, 18.854, 0.55", "-0.386714, -89.2578, 19.8109, 0.55", "-1.48398, -90.6259, 20.851, 0.83", "-4.67611, -94.6818, 23.6778, 0.28", "-5.71862, -96.0235, 24.5807, 0.55", "-7.50517, -98.4405, 26.1656, 0.28", "-8.07422, -99.1861, 26.7036, 0.55", "-9.3102, -100.931, 27.9698, 0.28", "-9.98149, -101.922, 28.6258, 0.55", "-12.0437, -105.148, 29.9002, 0.55", "-16.8126, -113.756, 37.1926, 0.55", "-21.2425, -121.942, 45.1546, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.51175, -42.7561, -9.8651, 0.55", "1.86518, -43.8765, -13.6884, 0.55", "1.94147, -44.1405, -14.7935, 0.55", "2.0727, -44.8027, -17.5213, 0.55", "2.21815, -46.1159, -23.3775, 0.28", "2.20818, -46.2956, -24.2239, 0.55", "2.08216, -47.1185, -27.6875, 0.55", "1.63328, -48.2417, -32.2078, 0.55", "1.4362, -48.6269, -33.9164, 0.28", "1.21139, -48.8802, -35.3703, 0.28", "0.613212, -49.2671, -37.6759, 0.55", "-0.0421896, -49.6228, -40.5508, 0.28", "-0.603731, -49.7541, -43.2431, 0.55", "-1.06117, -49.7072, -45.3045, 0.55", "-1.34433, -49.5725, -46.7508, 0.55", "-2.09, -49.0155, -51.0733, 0.55", "-2.92505, -48.1694, -55.5803, 0.55", "-3.29827, -47.7326, -57.4182, 0.28", "-3.63231, -47.3416, -59.1822, 0.55", "-4.33865, -46.744, -62.7388, 0.28", "-4.58497, -46.572, -63.9287, 0.83", "-5.14409, -46.2265, -66.0676, 0.28", "-5.68625, -46.0782, -67.4913, 0.55", "-6.50582, -45.9319, -69.5319, 0.28", "-6.85194, -45.863, -70.3276, 0.55", "-7.55415, -45.7619, -71.7502, 0.55", "-8.67406, -45.3859, -73.8458, 0.55", "-9.46499, -45.0497, -75.1616, 0.28", "-10.1687, -44.6329, -76.1615, 0.55", "-10.9892, -43.9734, -77.3456, 0.28", "-11.118, -43.847, -77.5458, 0.55", "-12.0376, -42.639, -79.6399, 0.28", "-12.5845, -41.7343, -81.2695, 0.55", "-13.0973, -40.4129, -83.6075, 0.83", "-13.3807, -39.2894, -85.6588, 0.28", "-13.4225, -39.0029, -86.2171, 0.55", "-13.6075, -36.8559, -90.6219, 0.28", "-13.5976, -36.4905, -91.4307, 0.55", "-13.4846, -35.299, -93.8897, 0.28", "-13.453, -34.9927, -94.5266, 0.55", "-13.4303, -34.1939, -96.1096, 0.28", "-13.4525, -33.6182, -97.1972, 0.55", "-13.7069, -32.3288, -99.4466, 0.28", "-13.892, -31.6382, -100.756, 0.55", "-14.3852, -30.3059, -103.468, 0.28", "-14.5417, -29.9463, -104.269, 0.55", "-14.8199, -29.4645, -105.499, 0.28", "-15.089, -29.0582, -106.511, 0.55", "-15.7343, -28.2385, -108.539, 0.28", "-15.9431, -28.0042, -109.137, 0.55", "-17.6389, -26.178, -113.448, 0.28", "-18.3258, -25.4312, -114.872, 0.55", "-19.6716, -23.9702, -117.296, 0.28", "-20.3034, -23.2641, -118.362, 0.55", "-21.8674, -21.6628, -120.699, 0.28", "-22.4752, -21.119, -121.527, 0.55", "-24.8289, -19.4752, -124.386, 0.28", "-25.8282, -18.9796, -125.569, 0.55", "-27.287, -18.6276, -127.241, 0.55", "-28.2107, -18.4952, -128.248, 0.55", "-30.2456, -18.2934, -130.149, 0.28", "-32.367, -18.1195, -131.896, 0.28", "-34.1792, -17.9657, -133.304, 0.55", "-36.5894, -17.5367, -134.8, 0.28", "-37.8964, -17.1527, -135.4, 0.55", "-41.1935, -15.7125, -136.571, 0.28", "-43.1247, -14.6356, -136.852, 0.55", "-44.5072, -13.7661, -136.836, 0.28", "-46.2298, -12.7816, -136.566, 0.55", "-48.4872, -11.4904, -136.066, 0.28", "-49.3427, -11.035, -135.885, 0.55", "-53.5983, -8.99108, -135.282, 0.28", "-55.0315, -8.34597, -135.091, 0.55", "-58.4792, -6.91369, -134.582, 0.28", "-60.3533, -6.15306, -134.307, 0.55", "-61.8936, -5.52992, -134.084, 0.55", "-63.717, -4.79678, -133.85, 0.28", "-64.6085, -4.42524, -133.837, 0.55", "-67.5193, -3.10009, -133.925, 0.28", "-69.047, -2.25532, -133.944, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.51175, -42.7561, -9.8651, 0.55", "2.28489, -42.8914, -10.1792, 0.55", "3.07678, -42.9363, -10.4718, 0.55", "4.08459, -42.9215, -10.7854, 0.55", "4.91868, -42.8435, -11.0049, 0.55", "10.4932, -41.7776, -12.0369, 0.55", "11.7585, -41.405, -12.2812, 0.55", "13.6349, -40.7299, -12.6742, 0.55", "14.9652, -40.2113, -12.9591, 0.55", "16.2625, -39.6362, -13.2094, 0.28", "18.2566, -38.6472, -13.5044, 0.55", "21.2163, -37.0901, -13.7936, 0.28", "21.4808, -37.0022, -13.8772, 0.55", "23.0825, -36.7625, -14.8552, 0.28", "24.0492, -36.6784, -15.694, 0.55", "25.0095, -36.6836, -16.7002, 0.55", "26.707, -36.8181, -18.5325, 0.55", "30.0469, -37.1166, -22.1188, 0.55", "32.331, -37.3514, -24.4865, 0.55", "33.1405, -37.4427, -25.2822, 0.55", "38.5842, -37.9839, -30.3838, 0.55", "40.1163, -38.1013, -31.7021, 0.55", "41.0313, -38.1671, -32.3767, 0.55", "43.2996, -38.384, -33.7616, 0.55", "48.9295, -39.2176, -36.7605, 0.55", "50.4791, -39.5095, -37.5019, 0.28", "51.3926, -39.7168, -37.8558, 0.55", "52.7554, -40.0811, -38.3535, 0.28", "53.3293, -40.2877, -38.5144, 0.55", "55.1046, -41.1467, -38.5428, 0.28", "56.1386, -42.2207, -37.8727, 0.55", "56.7225, -42.978, -37.4266, 0.28", "57.1973, -43.8044, -36.943, 0.55", "57.569, -44.6978, -36.4703, 0.28", "57.7316, -45.1572, -36.2729, 0.55", "58.0668, -46.3564, -35.7693, 0.28", "58.1819, -46.7158, -35.6807, 0.55", "58.9073, -48.7801, -35.2697, 0.28", "59.3413, -49.7396, -35.1601, 0.55", "60.4708, -51.7979, -35.0615, 0.28", "60.9643, -52.5592, -35.072, 0.55", "62.7574, -55.065, -35.1657, 0.28", "63.2125, -55.675, -35.2065, 0.55", "64.6544, -57.6085, -35.4237, 0.28", "64.9501, -58.0602, -35.4635, 0.55", "65.6934, -59.253, -35.5849, 0.28", "66.1713, -59.9472, -35.7043, 0.55", "66.6928, -60.631, -35.8496, 0.55", "67.7275, -61.9948, -36.131, 0.28", "68.4899, -62.8425, -36.3338, 0.55", "71.0191, -64.9789, -36.9656, 0.28", "72.0414, -65.6785, -37.2328, 0.55", "72.7512, -66.1242, -37.4023, 0.28", "73.476, -66.533, -37.5599, 0.55", "75.7234, -67.6832, -37.9971, 0.28", "77.4115, -68.5733, -38.2912, 0.55", "80.2095, -70.2512, -38.6232, 0.28", "81.0902, -70.7735, -38.7236, 0.55", "82.7369, -71.7327, -38.7969, 0.28", "83.2706, -72.0467, -38.7851, 0.55", "84.0778, -72.5458, -38.6378, 0.28", "84.7649, -72.9661, -38.4543, 0.55", "86.5443, -74.0072, -37.7842, 0.28", "88.5765, -75.1152, -36.9817, 0.28", "89.5712, -75.6262, -36.5074, 0.28", "90.611, -76.1094, -36.0851, 0.55", "92.1405, -76.7431, -35.4713, 0.28", "92.8142, -77.014, -35.1849, 0.83", "94.4948, -77.727, -34.3949, 0.28", "95.2447, -78.0549, -34.0906, 0.55", "98.6102, -79.6291, -32.8966, 0.28", "100.361, -80.4397, -32.4213, 0.28", "101.673, -81.0309, -32.148, 0.55", "102.475, -81.3925, -32.0625, 0.55", "104.671, -82.3818, -31.9738, 0.28", "106.748, -83.3897, -31.9603, 0.55", "108.635, -84.3587, -31.9502, 0.28", "110.373, -85.2583, -32.0134, 0.55", "111.809, -85.9871, -32.0584, 0.28", "112.968, -86.51, -32.0427, 0.55", "115.731, -87.6313, -31.8969, 0.28", "117.11, -88.1967, -31.7761, 0.55", "119.15, -89.0494, -31.5326, 0.28", "120.809, -89.7024, -31.2995, 0.55", "124.71, -91.0747, -30.7533, 0.28", "126.35, -91.5534, -30.6167, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.8874, -132.386, 100.528, 0.55", "-0.145821, -143.27, 106.247, 0.55", "3.49141, -154.687, 109.506, 0.55", "6.00465, -165.884, 114.249, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.8874, -132.386, 100.528, 0.55", "0.341693, -142.603, 108.817, 0.55", "0.244119, -151.678, 118.598, 0.55", "-0.517668, -158.605, 129.977, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.42214, -138.153, 103.3, 0.55", "-3.43609, -145.731, 107.967, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.42214, -138.153, 103.3, 0.55", "-5.09284, -146.114, 108.059, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "16.0411, -121.232, 3.23262, 0.83", "16.5661, -123.731, 3.76296, 0.83", "16.979, -125.848, 4.39075, 0.83", "17.3893, -127.953, 5.01477, 0.83", "17.7791, -129.951, 5.60739, 0.83", "18.3796, -133.031, 6.52065, 0.83", "18.9759, -136.089, 7.42732, 0.83", "19.3211, -138.132, 8.32946, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "16.0411, -121.232, 3.23262, 0.55", "18.0203, -123.619, 3.66338, 0.55", "19.6417, -125.461, 3.66451, 0.55", "20.818, -126.819, 3.50702, 0.55", "22.0098, -128.417, 3.03867, 0.83", "23.308, -130.227, 2.24142, 0.55", "24.5777, -131.997, 1.4616, 0.83", "25.8976, -133.913, 0.39729, 0.55", "26.693, -135.017, -0.328495, 0.83", "29.1969, -138.582, -3.01664, 0.55", "30.9755, -141.389, -5.38477, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-21.2425, -121.942, 45.1546, 0.55", "-24.9131, -128.214, 48.5036, 0.55", "-29.6756, -133.729, 51.8101, 0.55", "-35.0392, -138.508, 55.334, 0.55", "-41.0911, -142.367, 58.8706, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-21.2425, -121.942, 45.1546, 0.55", "-23.8642, -127.445, 49.4269, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "19.3211, -138.132, 8.32946, 0.55", "19.26, -140.267, 8.5914, 0.55", "19.1508, -143.001, 9.01913, 0.55", "19.0606, -145.58, 9.41816, 0.55", "19.0126, -147.41, 9.67202, 0.55", "18.9571, -150.667, 10.0726, 0.55", "19.0613, -159.779, 11.2313, 0.55", "19.244, -162.846, 11.6391, 0.55", "19.4731, -164.99, 11.8906, 0.55", "19.9194, -167.403, 12.117, 0.55", "20.4024, -169.24, 12.1949, 0.55", "21.7487, -173.496, 12.423, 0.55", "22.7271, -176.732, 12.4872, 0.55", "23.3353, -178.865, 12.61, 0.55", "24.6413, -184.45, 13.0294, 0.55", "25.3563, -188.236, 13.3585, 0.55", "26.0376, -193.165, 13.9184, 0.55", "26.452, -198.831, 14.7977, 0.55", "26.5896, -202.647, 15.6343, 0.55", "26.6397, -204.91, 16.2021, 0.55", "26.6756, -206.997, 16.6884, 0.55", "26.8486, -209.616, 17.2942, 0.55", "27.6145, -215.859, 18.513, 0.55", "28.025, -218.254, 19.0223, 0.55", "28.4721, -220.922, 19.5233, 0.55", "29.1485, -224.926, 20.2367, 0.55", "29.5824, -228.017, 20.6653, 0.55", "29.9583, -230.955, 20.9009, 0.55", "30.2647, -233.763, 21.0113, 0.55", "30.5085, -236.513, 21.0926, 0.55", "30.7044, -238.466, 21.1532, 0.55", "31.1325, -241.641, 21.2253, 0.55", "31.8876, -245.403, 21.1429, 0.55", "32.4007, -247.203, 21.0896, 0.55", "32.9707, -248.76, 21.0084, 0.55", "34.2703, -251.658, 20.9099, 0.55", "35.1353, -253.486, 20.8069, 0.55", "36.1301, -255.755, 20.7423, 0.55", "36.7099, -257.371, 20.6802, 0.55", "38.028, -261.609, 20.5166, 0.55", "38.7674, -264.828, 20.4165, 0.55", "39.4981, -269.891, 20.3544, 0.55", "39.7175, -273.211, 20.5068, 0.55", "39.8352, -276.718, 20.6882, 0.28", "39.8164, -278.139, 20.7529, 0.28", "39.4871, -281.645, 21.02, 0.28", "38.9467, -284.93, 21.3412, 0.28", "38.0029, -289.329, 22.2882, 0.28", "38.5211, -298.737, 24.567, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "19.3211, -138.132, 8.32946, 0.55", "19.4141, -138.344, 8.90316, 0.55", "19.5413, -138.89, 10.1005, 0.55", "19.6209, -139.427, 11.1423, 0.28", "19.6808, -140.039, 12.267, 0.55", "19.6375, -140.44, 12.9673, 0.28", "19.4675, -141.174, 14.2064, 0.55", "19.2789, -141.572, 14.7523, 0.28", "19.1804, -141.72, 14.9566, 0.28", "19.0009, -141.941, 15.3127, 0.55", "18.3803, -142.678, 16.6924, 0.28", "18.1343, -142.969, 17.2781, 0.55", "17.5688, -143.793, 19.0251, 0.28", "17.3192, -144.198, 19.9671, 0.28", "17.0732, -144.706, 21.1311, 0.55", "16.8496, -145.468, 22.8397, 0.28", "16.8419, -145.565, 23.067, 0.55", "16.874, -146.032, 24.1729, 0.28", "16.8873, -146.074, 24.271, 0.55", "16.9964, -146.56, 25.1366, 0.28", "17.029, -146.826, 25.5523, 0.55", "17.2387, -148.816, 28.9883, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-41.0911, -142.367, 58.8706, 0.55", "-45.5032, -145.904, 64.535, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-41.0911, -142.367, 58.8706, 0.55", "-45.0289, -146.897, 60.7675, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_BP_e2f954f49d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.55624, 7.7466, 2.72839, 0.83 ) }
    dend_43 { pt3dadd( -4.65666, 9.37459, 3.04516, 1.11 ) }
    dend_43 { pt3dadd( -5.89507, 10.3338, 3.20994, 0.83 ) }
    dend_43 { pt3dadd( -7.09824, 11.2577, 3.35758, 0.83 ) }
    dend_43 { pt3dadd( -7.81061, 11.7845, 3.43848, 1.11 ) }
    dend_43 { pt3dadd( -10.0415, 13.4307, 3.69778, 1.11 ) }
    dend_43 { pt3dadd( -14.0315, 16.249, 4.15613, 0.83 ) }
    dend_43 { pt3dadd( -15.4689, 17.2256, 4.30749, 0.83 ) }
    dend_43 { pt3dadd( -16.6073, 17.976, 4.4015, 0.83 ) }
    dend_43 { pt3dadd( -17.7173, 18.7197, 4.48288, 0.83 ) }
    dend_43 { pt3dadd( -18.6209, 19.3326, 4.52679, 0.55 ) }
    dend_43 { pt3dadd( -19.3001, 19.7477, 4.57136, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.35858, 6.13661, -6.15321, 0.55 ) }
    dend_28 { pt3dadd( 6.68032, 6.63885, -6.6717, 0.55 ) }
    dend_28 { pt3dadd( 8.02754, 6.76564, -7.35776, 0.83 ) }
    dend_28 { pt3dadd( 10.1597, 6.90056, -8.63218, 0.55 ) }
    dend_28 { pt3dadd( 11.189, 6.96569, -9.24737, 1.38 ) }
    dend_28 { pt3dadd( 13.7197, 7.12583, -10.76, 0.55 ) }
    dend_28 { pt3dadd( 14.7976, 7.0716, -11.4817, 0.83 ) }
    dend_28 { pt3dadd( 20.3733, 6.07709, -15.5368, 0.55 ) }
    dend_28 { pt3dadd( 20.9127, 5.94335, -15.9829, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.689927, -10.9992, 3.41615, 1.11 ) }
    dend_1 { pt3dadd( -0.74929, -16.2369, 5.29383, 1.11 ) }
    dend_1 { pt3dadd( -0.773466, -18.37, 6.05854, 0.83 ) }
    dend_1 { pt3dadd( -0.805587, -21.2039, 7.0745, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.999297, 10.5619, -1.42621, 1.11 ) }
    dend_0 { pt3dadd( 1.1953, 13.174, -1.41398, 1.11 ) }
    dend_0 { pt3dadd( 1.52147, 17.4352, -1.23779, 1.38 ) }
    dend_0 { pt3dadd( 1.54421, 17.6723, -1.22421, 1.38 ) }
    dend_0 { pt3dadd( 2.00494, 20.6009, -1.04659, 0.83 ) }
    dend_0 { pt3dadd( 2.63626, 23.6925, -0.707808, 0.83 ) }
    dend_0 { pt3dadd( 3.69511, 27.1709, 0.0630993, 0.83 ) }
    dend_0 { pt3dadd( 4.27904, 28.4839, 0.499793, 0.83 ) }
    dend_0 { pt3dadd( 4.84152, 29.4298, 0.898047, 1.11 ) }
    dend_0 { pt3dadd( 6.45461, 31.726, 1.90615, 0.55 ) }
    dend_0 { pt3dadd( 8.32707, 34.116, 3.11521, 0.83 ) }
    dend_0 { pt3dadd( 10.7309, 36.5582, 4.45269, 0.55 ) }
    dend_0 { pt3dadd( 11.9392, 37.5655, 5.04392, 0.83 ) }
    dend_0 { pt3dadd( 13.6411, 38.9274, 5.98785, 0.55 ) }
    dend_0 { pt3dadd( 15.7664, 40.6606, 7.28765, 0.55 ) }
    dend_0 { pt3dadd( 18.7647, 43.2756, 9.30443, 0.55 ) }
    dend_0 { pt3dadd( 22.0729, 46.2687, 11.5322, 0.55 ) }
    dend_0 { pt3dadd( 24.197, 48.2114, 13.2385, 0.55 ) }
    dend_0 { pt3dadd( 26.8454, 50.6683, 15.6898, 0.55 ) }
    dend_0 { pt3dadd( 27.4015, 51.1601, 16.2513, 0.83 ) }
    dend_0 { pt3dadd( 28.883, 52.459, 17.8454, 0.55 ) }
    dend_0 { pt3dadd( 30.1156, 53.4689, 19.0882, 0.83 ) }
    dend_0 { pt3dadd( 32.9787, 56.2461, 22.0448, 0.55 ) }
    dend_0 { pt3dadd( 34.0233, 57.2608, 22.8835, 0.83 ) }
    dend_0 { pt3dadd( 34.9658, 58.0032, 23.4235, 0.55 ) }
    dend_0 { pt3dadd( 35.8806, 58.639, 23.8141, 0.83 ) }
    dend_0 { pt3dadd( 37.878, 59.8114, 24.4795, 0.83 ) }
    dend_0 { pt3dadd( 40.4943, 61.4114, 25.1374, 0.83 ) }
    dend_0 { pt3dadd( 42.082, 62.4743, 25.3759, 0.55 ) }
    dend_0 { pt3dadd( 43.297, 63.3994, 25.5645, 0.55 ) }
    dend_0 { pt3dadd( 46.4752, 65.7883, 26.013, 0.83 ) }
    dend_0 { pt3dadd( 48.518, 67.3203, 26.2231, 0.55 ) }
    dend_0 { pt3dadd( 51.6016, 69.5618, 26.4201, 0.55 ) }
    dend_0 { pt3dadd( 54.4077, 71.4338, 26.4907, 0.55 ) }
    dend_0 { pt3dadd( 56.9068, 73.0159, 26.4877, 0.55 ) }
    dend_0 { pt3dadd( 60.0425, 74.8627, 26.3433, 0.55 ) }
    dend_0 { pt3dadd( 61.944, 75.7557, 26.1932, 0.55 ) }
    dend_0 { pt3dadd( 63.2186, 76.2512, 25.937, 0.55 ) }
    dend_0 { pt3dadd( 64.8838, 76.5985, 25.4525, 0.55 ) }
    dend_0 { pt3dadd( 67.3298, 76.7042, 24.5211, 0.55 ) }
    dend_0 { pt3dadd( 68.841, 76.5694, 23.8789, 0.55 ) }
    dend_0 { pt3dadd( 71.0679, 76.3085, 23.1019, 0.55 ) }
    dend_0 { pt3dadd( 75.3641, 75.9493, 22.0139, 0.55 ) }
    dend_0 { pt3dadd( 78.7713, 75.826, 21.4056, 0.55 ) }
    dend_0 { pt3dadd( 82.4157, 75.8685, 20.9789, 0.55 ) }
    dend_0 { pt3dadd( 84.7785, 75.9752, 20.8901, 0.55 ) }
    dend_0 { pt3dadd( 90.985, 76.803, 21.0608, 0.55 ) }
    dend_0 { pt3dadd( 94.7004, 77.5695, 21.4333, 0.55 ) }
    dend_0 { pt3dadd( 97.5239, 78.3206, 21.9657, 0.55 ) }
    dend_0 { pt3dadd( 99.2561, 79.0504, 22.3537, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 101.271, 80.1547, 22.7948, 0.55 ) }
    dend_0 { pt3dadd( 104.655, 82.352, 23.2552, 0.55 ) }
    dend_0 { pt3dadd( 105.419, 82.883, 23.2588, 0.55 ) }
    dend_0 { pt3dadd( 107.589, 84.299, 23.1287, 0.55 ) }
    dend_0 { pt3dadd( 109.589, 85.8175, 23.0025, 0.83 ) }
    dend_0 { pt3dadd( 110.679, 86.6605, 22.9169, 0.55 ) }
    dend_0 { pt3dadd( 112.309, 88.1154, 22.726, 0.83 ) }
    dend_0 { pt3dadd( 121.177, 95.8751, 23.9295, 0.83 ) }
    dend_0 { pt3dadd( 128.883, 104.858, 24.4057, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -19.3001, 19.7477, 4.57136, 0.55 ) }
    dend_55 { pt3dadd( -21.0264, 20.2479, 4.04898, 0.55 ) }
    dend_55 { pt3dadd( -22.9037, 20.7919, 3.48096, 0.55 ) }
    dend_55 { pt3dadd( -25.1691, 21.4483, 2.79547, 0.55 ) }
    dend_55 { pt3dadd( -27.0398, 21.9904, 2.22944, 0.83 ) }
    dend_55 { pt3dadd( -28.6074, 22.4446, 1.75512, 0.55 ) }
    dend_55 { pt3dadd( -31.5171, 23.2877, 0.874695, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -19.3001, 19.7477, 4.57136, 0.55 ) }
    dend_44 { pt3dadd( -21.2968, 20.0925, 4.39713, 0.55 ) }
    dend_44 { pt3dadd( -23.4129, 20.4, 4.42453, 0.55 ) }
    dend_44 { pt3dadd( -25.8102, 20.7465, 4.51427, 0.55 ) }
    dend_44 { pt3dadd( -29.2697, 21.2208, 4.96456, 0.55 ) }
    dend_44 { pt3dadd( -32.156, 21.5396, 5.55111, 0.55 ) }
    dend_44 { pt3dadd( -35.1778, 21.8309, 6.29837, 0.55 ) }
    dend_44 { pt3dadd( -38.0847, 21.9227, 7.34602, 0.55 ) }
    dend_44 { pt3dadd( -40.5754, 21.7617, 8.5028, 0.55 ) }
    dend_44 { pt3dadd( -43.6638, 21.3496, 10.2924, 0.55 ) }
    dend_44 { pt3dadd( -44.9983, 21.0751, 11.2668, 0.55 ) }
    dend_44 { pt3dadd( -46.4371, 20.7648, 12.3843, 0.55 ) }
    dend_44 { pt3dadd( -48.9779, 20.0143, 14.2423, 0.55 ) }
    dend_44 { pt3dadd( -50.3385, 19.6123, 15.0099, 0.55 ) }
    dend_44 { pt3dadd( -51.7636, 19.1459, 15.8067, 0.55 ) }
    dend_44 { pt3dadd( -53.4654, 18.6079, 16.5764, 0.55 ) }
    dend_44 { pt3dadd( -55.3172, 18.0609, 17.3595, 0.55 ) }
    dend_44 { pt3dadd( -57.9622, 17.2719, 18.4182, 0.55 ) }
    dend_44 { pt3dadd( -61.5098, 16.4493, 19.4995, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.9127, 5.94335, -15.9829, 0.55 ) }
    dend_34 { pt3dadd( 25.7324, 7.14972, -17.0047, 0.55 ) }
    dend_34 { pt3dadd( 28.5049, 7.69997, -17.9923, 0.55 ) }
    dend_34 { pt3dadd( 31.2388, 8.1217, -19.0126, 0.55 ) }
    dend_34 { pt3dadd( 33.1054, 8.33497, -19.7128, 0.55 ) }
    dend_34 { pt3dadd( 35.8324, 8.58213, -20.7181, 0.55 ) }
    dend_34 { pt3dadd( 41.4865, 8.99321, -22.9865, 0.55 ) }
    dend_34 { pt3dadd( 47.8974, 9.43869, -25.9915, 0.55 ) }
    dend_34 { pt3dadd( 51.0011, 9.4694, -27.6747, 0.55 ) }
    dend_34 { pt3dadd( 52.6619, 9.44971, -28.6881, 0.55 ) }
    dend_34 { pt3dadd( 54.4827, 9.44051, -29.8734, 0.55 ) }
    dend_34 { pt3dadd( 57.7302, 9.33193, -31.9802, 0.55 ) }
    dend_34 { pt3dadd( 58.908, 9.22437, -32.7883, 0.55 ) }
    dend_34 { pt3dadd( 63.8941, 8.9131, -36.5928, 0.55 ) }
    dend_34 { pt3dadd( 67.4227, 8.76224, -39.5473, 0.55 ) }
    dend_34 { pt3dadd( 69.4547, 8.71801, -41.303, 0.55 ) }
    dend_34 { pt3dadd( 71.4809, 8.65572, -43.0533, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 20.9127, 5.94335, -15.9829, 0.83 ) }
    dend_29 { pt3dadd( 22.873, 7.06363, -15.9652, 0.83 ) }
    dend_29 { pt3dadd( 23.993, 7.70612, -16.0056, 0.55 ) }
    dend_29 { pt3dadd( 25.6415, 8.69629, -16.2011, 0.83 ) }
    dend_29 { pt3dadd( 26.7506, 9.39206, -16.3639, 0.55 ) }
    dend_29 { pt3dadd( 28.2816, 10.3906, -16.5637, 0.83 ) }
    dend_29 { pt3dadd( 30.1245, 11.6225, -16.7348, 0.55 ) }
    dend_29 { pt3dadd( 31.0498, 12.1726, -16.7873, 0.55 ) }
    dend_29 { pt3dadd( 33.1713, 13.1444, -16.7777, 0.83 ) }
    dend_29 { pt3dadd( 35.0921, 13.7818, -16.5353, 0.55 ) }
    dend_29 { pt3dadd( 36.1662, 14.1207, -16.2983, 0.83 ) }
    dend_29 { pt3dadd( 37.7805, 14.6539, -15.7722, 0.55 ) }
    dend_29 { pt3dadd( 40.103, 15.4427, -14.7199, 0.55 ) }
    dend_29 { pt3dadd( 43.3241, 16.3636, -13.1046, 0.55 ) }
    dend_29 { pt3dadd( 46.3937, 17.1194, -11.3604, 0.55 ) }
    dend_29 { pt3dadd( 48.8251, 17.6899, -9.93679, 0.55 ) }
    dend_29 { pt3dadd( 52.8342, 18.6477, -7.56773, 0.55 ) }
    dend_29 { pt3dadd( 55.7705, 19.4279, -5.7652, 0.55 ) }
    dend_29 { pt3dadd( 57.5484, 20.0421, -4.60306, 0.55 ) }
    dend_29 { pt3dadd( 60.8327, 21.5025, -2.41212, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.805587, -21.2039, 7.0745, 0.83 ) }
    dend_11 { pt3dadd( -1.08975, -24.4673, 6.94171, 0.83 ) }
    dend_11 { pt3dadd( -1.36661, -27.6468, 6.81233, 0.83 ) }
    dend_11 { pt3dadd( -1.67571, -31.1967, 6.66788, 0.83 ) }
    dend_11 { pt3dadd( -1.83713, -33.0504, 6.59244, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.805587, -21.2039, 7.0745, 0.55 ) }
    dend_2 { pt3dadd( 0.0362325, -23.2659, 8.34128, 0.55 ) }
    dend_2 { pt3dadd( 0.839729, -25.7806, 10.0377, 0.55 ) }
    dend_2 { pt3dadd( 1.42343, -29.055, 12.4667, 0.55 ) }
    dend_2 { pt3dadd( 1.56831, -30.324, 13.4585, 0.83 ) }
    dend_2 { pt3dadd( 1.70356, -33.5529, 16.3998, 0.55 ) }
    dend_2 { pt3dadd( 1.64353, -35.2144, 17.9716, 0.55 ) }
    dend_2 { pt3dadd( 1.48053, -38.4437, 21.1747, 0.83 ) }
    dend_2 { pt3dadd( 1.24632, -40.8368, 23.7261, 0.55 ) }
    dend_2 { pt3dadd( 0.874098, -42.8024, 25.8281, 0.55 ) }
    dend_2 { pt3dadd( 0.0749038, -46.5206, 29.7549, 0.55 ) }
    dend_2 { pt3dadd( -0.56455, -49.4839, 32.8495, 0.55 ) }
    dend_2 { pt3dadd( -1.02379, -51.862, 35.3559, 0.55 ) }
    dend_2 { pt3dadd( -1.38516, -54.3926, 37.9155, 0.28 ) }
    dend_2 { pt3dadd( -1.45388, -55.4504, 38.9272, 0.55 ) }
    dend_2 { pt3dadd( -1.54782, -57.4053, 40.6779, 0.28 ) }
    dend_2 { pt3dadd( -1.35734, -60.4714, 42.8753, 0.55 ) }
    dend_2 { pt3dadd( -3.05943, -70.565, 51.1156, 0.55 ) }
    dend_2 { pt3dadd( -4.85784, -79.8849, 60.2032, 0.55 ) }
    dend_2 { pt3dadd( -5.74155, -87.5818, 70.8172, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -31.5171, 23.2877, 0.874695, 0.55 ) }
    dend_61 { pt3dadd( -34.0356, 24.3528, 3.56593, 0.55 ) }
    dend_61 { pt3dadd( -35.0186, 24.8033, 4.87506, 0.83 ) }
    dend_61 { pt3dadd( -36.074, 25.3467, 6.62379, 0.55 ) }
    dend_61 { pt3dadd( -36.8389, 25.81, 8.05924, 0.83 ) }
    dend_61 { pt3dadd( -38.8732, 27.1202, 11.7503, 0.55 ) }
    dend_61 { pt3dadd( -39.6431, 27.6398, 13.1482, 0.28 ) }
    dend_61 { pt3dadd( -40.8649, 28.6015, 15.6197, 0.55 ) }
    dend_61 { pt3dadd( -42.5119, 29.9017, 18.9184, 0.55 ) }
    dend_61 { pt3dadd( -43.799, 30.8484, 21.3398, 0.55 ) }
    dend_61 { pt3dadd( -45.5521, 32.0743, 24.4975, 0.28 ) }
    dend_61 { pt3dadd( -46.0418, 32.3604, 25.2402, 0.55 ) }
    dend_61 { pt3dadd( -47.0797, 32.945, 26.7211, 0.28 ) }
    dend_61 { pt3dadd( -47.8252, 33.3259, 27.6334, 0.55 ) }
    dend_61 { pt3dadd( -49.4134, 34.0123, 29.3455, 0.28 ) }
    dend_61 { pt3dadd( -50.3589, 34.3247, 30.3223, 0.55 ) }
    dend_61 { pt3dadd( -51.9949, 34.7352, 32.1233, 0.28 ) }
    dend_61 { pt3dadd( -53.1114, 34.9803, 33.2928, 0.55 ) }
    dend_61 { pt3dadd( -58.3093, 37.4923, 44.0885, 0.55 ) }
    dend_61 { pt3dadd( -62.3945, 39.1885, 55.5037, 0.55 ) }
    dend_61 { pt3dadd( -66.0279, 39.8111, 67.1779, 0.55 ) }
    dend_61 { pt3dadd( -69.6221, 38.9074, 78.8458, 0.55 ) }
    dend_61 { pt3dadd( -71.575, 38.9943, 90.9311, 0.55 ) }
    dend_61 { pt3dadd( -74.5976, 39.2948, 102.79, 0.55 ) }
    dend_61 { pt3dadd( -77.8893, 41.5959, 114.355, 0.55 ) }
    dend_61 { pt3dadd( -81.0678, 42.9368, 126.101, 0.55 ) }
    dend_61 { pt3dadd( -84.0304, 45.1651, 137.769, 0.55 ) }
    dend_61 { pt3dadd( -86.3214, 47.3751, 149.59, 0.55 ) }
    dend_61 { pt3dadd( -87.1831, 48.4611, 161.754, 0.55 ) }
    dend_61 { pt3dadd( -88.2322, 50.6778, 173.748, 0.55 ) }
    dend_61 { pt3dadd( -89.3926, 51.6177, 185.899, 0.55 ) }
    dend_61 { pt3dadd( -88.9961, 52.2793, 198.117, 0.55 ) }
    dend_61 { pt3dadd( -86.5478, 54.033, 209.983, 0.55 ) }
    dend_61 { pt3dadd( -83.99, 53.4134, 221.939, 0.55 ) }
    dend_61 { pt3dadd( -79.753, 52.6169, 233.397, 0.55 ) }
    dend_61 { pt3dadd( -76.1201, 52.3676, 245.085, 0.55 ) }
    dend_61 { pt3dadd( -73.7642, 52.9924, 257.083, 0.55 ) }
    dend_61 { pt3dadd( -74.1173, 55.261, 269.108, 0.55 ) }
    dend_61 { pt3dadd( -73.2787, 56.3089, 281.276, 0.55 ) }
    dend_61 { pt3dadd( -70.2882, 59.5946, 292.684, 0.55 ) }
    dend_61 { pt3dadd( -69.3426, 63.583, 304.22, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -31.5171, 23.2877, 0.874695, 0.55 ) }
    dend_56 { pt3dadd( -33.3079, 23.2346, -0.296997, 0.55 ) }
    dend_56 { pt3dadd( -34.8687, 23.1785, -1.74709, 0.55 ) }
    dend_56 { pt3dadd( -36.4156, 23.2312, -3.3632, 0.55 ) }
    dend_56 { pt3dadd( -37.3843, 23.2642, -4.37519, 0.55 ) }
    dend_56 { pt3dadd( -39.1514, 23.3243, -6.22118, 0.83 ) }
    dend_56 { pt3dadd( -40.4441, 23.3683, -7.57173, 0.55 ) }
    dend_56 { pt3dadd( -42.0885, 23.3714, -9.61437, 0.83 ) }
    dend_56 { pt3dadd( -42.8572, 23.4766, -10.8563, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -61.5098, 16.4493, 19.4995, 0.28 ) }
    dend_48 { pt3dadd( -62.4598, 14.2507, 19.9785, 0.28 ) }
    dend_48 { pt3dadd( -62.9329, 13.2752, 20.1211, 0.28 ) }
    dend_48 { pt3dadd( -63.5457, 11.8846, 20.2699, 0.55 ) }
    dend_48 { pt3dadd( -64.0444, 10.6682, 20.4042, 0.28 ) }
    dend_48 { pt3dadd( -64.7731, 8.82455, 20.625, 0.55 ) }
    dend_48 { pt3dadd( -66.7685, 3.44429, 21.3314, 0.28 ) }
    dend_48 { pt3dadd( -67.4268, 1.51377, 21.4394, 0.55 ) }
    dend_48 { pt3dadd( -68.4324, -1.48923, 21.5173, 0.28 ) }
    dend_48 { pt3dadd( -69.0147, -3.30839, 21.4916, 0.55 ) }
    dend_48 { pt3dadd( -69.4205, -4.57139, 21.4489, 0.28 ) }
    dend_48 { pt3dadd( -69.8811, -6.01709, 21.4091, 0.55 ) }
    dend_48 { pt3dadd( -71.2347, -10.793, 21.3502, 0.28 ) }
    dend_48 { pt3dadd( -71.6695, -12.2548, 21.2925, 0.55 ) }
    dend_48 { pt3dadd( -72.4733, -14.5689, 21.0292, 0.28 ) }
    dend_48 { pt3dadd( -73.1665, -16.101, 20.7803, 0.28 ) }
    dend_48 { pt3dadd( -73.8041, -17.1479, 20.6078, 0.55 ) }
    dend_48 { pt3dadd( -76.0374, -20.097, 20.2463, 0.28 ) }
    dend_48 { pt3dadd( -77.0785, -21.2943, 20.1376, 0.55 ) }
    dend_48 { pt3dadd( -79.6491, -24.0816, 19.7863, 0.28 ) }
    dend_48 { pt3dadd( -82.2355, -26.5877, 19.471, 0.28 ) }
    dend_48 { pt3dadd( -85.0683, -29.0381, 19.1268, 0.28 ) }
    dend_48 { pt3dadd( -86.3705, -29.9812, 19.0213, 0.55 ) }
    dend_48 { pt3dadd( -92.2622, -39.061, 18.8733, 0.55 ) }
    dend_48 { pt3dadd( -98.6108, -47.6326, 20.717, 0.55 ) }
    dend_48 { pt3dadd( -105.057, -56.3256, 20.9262, 0.55 ) }
    dend_48 { pt3dadd( -111.869, -64.6988, 20.1066, 0.55 ) }
    dend_48 { pt3dadd( -118.969, -72.6463, 18.2101, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -61.5098, 16.4493, 19.4995, 0.55 ) }
    dend_45 { pt3dadd( -61.9856, 16.4109, 19.5805, 0.55 ) }
    dend_45 { pt3dadd( -63.3219, 16.3083, 19.9843, 0.55 ) }
    dend_45 { pt3dadd( -63.8232, 16.2574, 20.1635, 0.55 ) }
    dend_45 { pt3dadd( -65.0013, 16.1019, 20.604, 0.55 ) }
    dend_45 { pt3dadd( -66.8163, 15.8793, 21.1922, 0.55 ) }
    dend_45 { pt3dadd( -67.76, 15.7926, 21.4801, 0.28 ) }
    dend_45 { pt3dadd( -69.2296, 15.6246, 21.9, 0.55 ) }
    dend_45 { pt3dadd( -70.3224, 15.4762, 22.1726, 0.55 ) }
    dend_45 { pt3dadd( -70.7839, 15.4105, 22.2889, 0.28 ) }
    dend_45 { pt3dadd( -73.5518, 15.0146, 22.9823, 0.55 ) }
    dend_45 { pt3dadd( -74.8484, 14.7675, 23.2281, 0.28 ) }
    dend_45 { pt3dadd( -76.6006, 14.4248, 23.4565, 0.28 ) }
    dend_45 { pt3dadd( -78.1143, 14.1494, 23.5638, 0.55 ) }
    dend_45 { pt3dadd( -83.976, 13.9746, 25.2486, 0.55 ) }
    dend_45 { pt3dadd( -89.6131, 13.6625, 27.5624, 0.55 ) }
    dend_45 { pt3dadd( -94.9, 12.7455, 30.4669, 0.55 ) }
    dend_45 { pt3dadd( -100.01, 12.8629, 33.7987, 0.55 ) }
    dend_45 { pt3dadd( -104.323, 12.8018, 38.1137, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -107.727, 13.0946, 43.1691, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 71.4809, 8.65572, -43.0533, 0.55 ) }
    dend_42 { pt3dadd( 76.969, 10.5252, -47.31, 0.55 ) }
    dend_42 { pt3dadd( 78.6918, 11.0633, -48.7764, 0.55 ) }
    dend_42 { pt3dadd( 80.84, 11.6623, -50.6001, 0.55 ) }
    dend_42 { pt3dadd( 84.7284, 12.7603, -54.1422, 0.55 ) }
    dend_42 { pt3dadd( 88.7637, 13.7606, -57.9707, 0.55 ) }
    dend_42 { pt3dadd( 90.7181, 14.0826, -59.8237, 0.83 ) }
    dend_42 { pt3dadd( 92.3098, 14.2603, -61.4933, 0.55 ) }
    dend_42 { pt3dadd( 93.4848, 14.3172, -62.8843, 0.83 ) }
    dend_42 { pt3dadd( 96.26, 14.0847, -66.5202, 0.55 ) }
    dend_42 { pt3dadd( 98.5163, 13.6708, -69.575, 0.55 ) }
    dend_42 { pt3dadd( 101.113, 13.1485, -72.9549, 0.55 ) }
    dend_42 { pt3dadd( 104.013, 12.6686, -76.7639, 0.55 ) }
    dend_42 { pt3dadd( 105.951, 12.3077, -79.3801, 0.55 ) }
    dend_42 { pt3dadd( 108.134, 11.9082, -82.4079, 0.55 ) }
    dend_42 { pt3dadd( 110.027, 11.6628, -85.1522, 0.55 ) }
    dend_42 { pt3dadd( 111.228, 11.6589, -87.0258, 0.55 ) }
    dend_42 { pt3dadd( 112.707, 11.8327, -90.7399, 0.55 ) }
    dend_42 { pt3dadd( 113.493, 11.8879, -93.07, 0.55 ) }
    dend_42 { pt3dadd( 114.111, 11.8825, -96.1712, 0.55 ) }
    dend_42 { pt3dadd( 114.895, 11.7518, -101.431, 0.55 ) }
    dend_42 { pt3dadd( 115.044, 11.6827, -102.624, 0.28 ) }
    dend_42 { pt3dadd( 117.002, 10.6694, -117.162, 0.28 ) }
    dend_42 { pt3dadd( 117.702, 10.385, -121.43, 0.83 ) }
    dend_42 { pt3dadd( 120.514, 9.07801, -136.631, 0.83 ) }
    dend_42 { pt3dadd( 121.966, 8.1841, -143.749, 0.83 ) }
    dend_42 { pt3dadd( 122.682, 7.69551, -146.657, 0.55 ) }
    dend_42 { pt3dadd( 123.535, 7.18846, -149.501, 0.55 ) }
    dend_42 { pt3dadd( 126.044, 6.0177, -154.834, 0.55 ) }
    dend_42 { pt3dadd( 128.792, 4.87683, -159.551, 0.28 ) }
    dend_42 { pt3dadd( 129.672, 4.51293, -159.898, 0.55 ) }
    dend_42 { pt3dadd( 131.646, 3.71243, -159.908, 0.28 ) }
    dend_42 { pt3dadd( 132.883, 3.27056, -159.716, 0.55 ) }
    dend_42 { pt3dadd( 134.173, 2.77095, -159.408, 0.28 ) }
    dend_42 { pt3dadd( 135.733, 2.23533, -158.951, 0.55 ) }
    dend_42 { pt3dadd( 138.078, 1.60607, -158.494, 0.28 ) }
    dend_42 { pt3dadd( 139.951, 1.05521, -158.199, 0.55 ) }
    dend_42 { pt3dadd( 142.038, 0.615659, -158.014, 0.28 ) }
    dend_42 { pt3dadd( 144.871, 0.0764697, -158.011, 0.55 ) }
    dend_42 { pt3dadd( 148.054, -0.417838, -158.185, 0.55 ) }
    dend_42 { pt3dadd( 150.853, -0.783443, -158.517, 0.28 ) }
    dend_42 { pt3dadd( 154.726, -1.2127, -159.184, 0.55 ) }
    dend_42 { pt3dadd( 161.429, -1.63271, -161.014, 0.55 ) }
    dend_42 { pt3dadd( 164.402, -1.5965, -162.15, 0.55 ) }
    dend_42 { pt3dadd( 165.684, -1.5019, -162.764, 0.83 ) }
    dend_42 { pt3dadd( 168.122, -1.26135, -164.154, 0.55 ) }
    dend_42 { pt3dadd( 169.821, -1.00606, -165.211, 0.83 ) }
    dend_42 { pt3dadd( 174.405, -0.190549, -168.084, 0.55 ) }
    dend_42 { pt3dadd( 177.178, 0.131713, -169.945, 0.28 ) }
    dend_42 { pt3dadd( 178.339, 0.169935, -170.612, 0.55 ) }
    dend_42 { pt3dadd( 181.49, -0.0875813, -172.141, 0.28 ) }
    dend_42 { pt3dadd( 182.583, -0.294194, -172.623, 0.55 ) }
    dend_42 { pt3dadd( 184.824, -0.93202, -173.287, 0.28 ) }
    dend_42 { pt3dadd( 187.084, -1.88548, -173.602, 0.55 ) }
    dend_42 { pt3dadd( 191.638, -4.22416, -173.457, 0.28 ) }
    dend_42 { pt3dadd( 193.731, -5.44287, -173.176, 0.55 ) }
    dend_42 { pt3dadd( 196.823, -7.47355, -172.621, 0.28 ) }
    dend_42 { pt3dadd( 200.734, -10.0516, -171.769, 0.55 ) }
    dend_42 { pt3dadd( 203.569, -11.8848, -171.099, 0.55 ) }
    dend_42 { pt3dadd( 208.503, -14.9169, -169.822, 0.28 ) }
    dend_42 { pt3dadd( 210.536, -16.031, -169.453, 0.55 ) }
    dend_42 { pt3dadd( 214.059, -17.6688, -169.177, 0.28 ) }
    dend_42 { pt3dadd( 217.599, -18.9772, -169.101, 0.55 ) }
    dend_42 { pt3dadd( 219.564, -19.4185, -169.293, 0.28 ) }
    dend_42 { pt3dadd( 221.366, -19.5505, -169.561, 0.55 ) }
    dend_42 { pt3dadd( 226.482, -19.5314, -170.74, 0.28 ) }
    dend_42 { pt3dadd( 230.166, -19.258, -171.593, 0.28 ) }
    dend_42 { pt3dadd( 233.398, -18.7839, -172.337, 0.55 ) }
    dend_42 { pt3dadd( 236.973, -18.1299, -173.317, 0.28 ) }
    dend_42 { pt3dadd( 237.882, -17.9164, -173.524, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 71.4809, 8.65572, -43.0533, 0.55 ) }
    dend_35 { pt3dadd( 72.013, 6.4846, -44.8996, 0.55 ) }
    dend_35 { pt3dadd( 72.2873, 4.63004, -46.3191, 0.28 ) }
    dend_35 { pt3dadd( 72.5384, 2.90941, -47.4647, 0.55 ) }
    dend_35 { pt3dadd( 73.269, -0.735575, -49.9335, 0.28 ) }
    dend_35 { pt3dadd( 73.3079, -0.96011, -50.1229, 0.55 ) }
    dend_35 { pt3dadd( 73.5459, -2.12221, -51.22, 0.28 ) }
    dend_35 { pt3dadd( 73.644, -3.05871, -52.292, 0.55 ) }
    dend_35 { pt3dadd( 73.6822, -4.01778, -53.535, 0.28 ) }
    dend_35 { pt3dadd( 73.6894, -5.31554, -55.2988, 0.55 ) }
    dend_35 { pt3dadd( 73.7057, -8.58422, -59.6566, 0.55 ) }
    dend_35 { pt3dadd( 73.6803, -11.5542, -63.6887, 0.55 ) }
    dend_35 { pt3dadd( 73.6327, -13.9272, -66.9146, 0.55 ) }
    dend_35 { pt3dadd( 73.5367, -16.2657, -70.0366, 0.55 ) }
    dend_35 { pt3dadd( 73.51, -16.874, -70.8135, 0.28 ) }
    dend_35 { pt3dadd( 73.5035, -17.5329, -71.5819, 0.55 ) }
    dend_35 { pt3dadd( 73.5922, -18.4605, -72.553, 0.28 ) }
    dend_35 { pt3dadd( 73.9413, -20.1504, -74.1291, 0.55 ) }
    dend_35 { pt3dadd( 74.9183, -23.47, -76.5961, 0.55 ) }
    dend_35 { pt3dadd( 75.4623, -25.2791, -77.7536, 0.28 ) }
    dend_35 { pt3dadd( 75.9025, -27.1045, -79.0118, 0.55 ) }
    dend_35 { pt3dadd( 76.3203, -29.6432, -80.8709, 0.28 ) }
    dend_35 { pt3dadd( 76.5174, -31.6824, -82.4191, 0.55 ) }
    dend_35 { pt3dadd( 76.6733, -34.728, -84.7372, 0.28 ) }
    dend_35 { pt3dadd( 76.8602, -37.8941, -87.0325, 0.55 ) }
    dend_35 { pt3dadd( 77.0664, -42.4839, -90.4065, 0.28 ) }
    dend_35 { pt3dadd( 77.1193, -44.9283, -92.2122, 0.55 ) }
    dend_35 { pt3dadd( 77.1295, -47.4191, -94.121, 0.28 ) }
    dend_35 { pt3dadd( 77.1121, -49.5918, -95.9464, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 77.1882, -52.2771, -98.4839, 0.55 ) }
    dend_35 { pt3dadd( 77.4478, -54.7795, -100.773, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 60.8327, 21.5025, -2.41212, 0.55 ) }
    dend_31 { pt3dadd( 63.2323, 20.9564, -2.28563, 0.55 ) }
    dend_31 { pt3dadd( 64.9593, 20.5466, -2.37173, 0.55 ) }
    dend_31 { pt3dadd( 68.7164, 19.6703, -2.76333, 0.55 ) }
    dend_31 { pt3dadd( 70.3874, 19.2905, -3.09572, 0.55 ) }
    dend_31 { pt3dadd( 72.2045, 18.9441, -3.53648, 0.55 ) }
    dend_31 { pt3dadd( 74.6297, 18.5773, -4.28373, 0.55 ) }
    dend_31 { pt3dadd( 77.156, 18.2026, -5.33293, 0.55 ) }
    dend_31 { pt3dadd( 78.464, 18.0387, -6.04037, 0.55 ) }
    dend_31 { pt3dadd( 81.0815, 17.8267, -7.84546, 0.55 ) }
    dend_31 { pt3dadd( 82.2836, 17.7524, -8.71284, 0.55 ) }
    dend_31 { pt3dadd( 85.0868, 17.5474, -10.8389, 0.55 ) }
    dend_31 { pt3dadd( 86.9802, 17.3233, -12.2886, 0.55 ) }
    dend_31 { pt3dadd( 88.3802, 17.1272, -13.2925, 0.83 ) }
    dend_31 { pt3dadd( 90.6121, 16.7183, -14.8986, 0.55 ) }
    dend_31 { pt3dadd( 92.7979, 16.1765, -16.4199, 0.83 ) }
    dend_31 { pt3dadd( 94.6523, 15.6044, -17.671, 0.55 ) }
    dend_31 { pt3dadd( 96.3151, 15.0906, -18.6862, 0.55 ) }
    dend_31 { pt3dadd( 97.2707, 14.8236, -19.1954, 0.83 ) }
    dend_31 { pt3dadd( 99.516, 14.1674, -20.2615, 0.28 ) }
    dend_31 { pt3dadd( 100.646, 13.8643, -20.7041, 0.28 ) }
    dend_31 { pt3dadd( 101.725, 13.5198, -21.2122, 0.28 ) }
    dend_31 { pt3dadd( 102.895, 13.1812, -21.7562, 0.28 ) }
    dend_31 { pt3dadd( 104.765, 12.6883, -22.6542, 0.28 ) }
    dend_31 { pt3dadd( 105.52, 12.4919, -22.9897, 0.55 ) }
    dend_31 { pt3dadd( 107.35, 11.9815, -23.6069, 0.55 ) }
    dend_31 { pt3dadd( 110.66, 10.9758, -24.5627, 0.55 ) }
    dend_31 { pt3dadd( 111.579, 10.6599, -24.7953, 0.55 ) }
    dend_31 { pt3dadd( 112.4, 10.3395, -24.9769, 0.83 ) }
    dend_31 { pt3dadd( 114.207, 9.65077, -25.2107, 0.55 ) }
    dend_31 { pt3dadd( 115.78, 9.04698, -25.3883, 0.55 ) }
    dend_31 { pt3dadd( 117.268, 8.48041, -25.5474, 0.55 ) }
    dend_31 { pt3dadd( 118.415, 8.03251, -25.7089, 0.55 ) }
    dend_31 { pt3dadd( 120.211, 7.22614, -26.0936, 0.55 ) }
    dend_31 { pt3dadd( 122.297, 6.12818, -26.7251, 0.55 ) }
    dend_31 { pt3dadd( 125.476, 4.12798, -28.0588, 0.55 ) }
    dend_31 { pt3dadd( 127.181, 2.80166, -28.9938, 0.55 ) }
    dend_31 { pt3dadd( 128.623, 1.40977, -29.9723, 0.28 ) }
    dend_31 { pt3dadd( 129.04, 0.9007, -30.3255, 0.55 ) }
    dend_31 { pt3dadd( 129.922, -0.520486, -31.2648, 0.28 ) }
    dend_31 { pt3dadd( 130.636, -2.11652, -32.2494, 0.55 ) }
    dend_31 { pt3dadd( 131.262, -4.15347, -33.2782, 0.55 ) }
    dend_31 { pt3dadd( 131.696, -5.51418, -33.8918, 0.28 ) }
    dend_31 { pt3dadd( 131.86, -6.00288, -34.086, 0.55 ) }
    dend_31 { pt3dadd( 132.292, -7.22297, -34.555, 0.28 ) }
    dend_31 { pt3dadd( 132.895, -8.8238, -35.1323, 0.55 ) }
    dend_31 { pt3dadd( 134.508, -12.7162, -36.4488, 0.55 ) }
    dend_31 { pt3dadd( 135.359, -14.6919, -37.077, 0.55 ) }
    dend_31 { pt3dadd( 136.154, -16.5079, -37.6387, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 60.8327, 21.5025, -2.41212, 0.55 ) }
    dend_30 { pt3dadd( 62.1201, 21.972, -1.2637, 0.55 ) }
    dend_30 { pt3dadd( 62.5361, 22.1147, -0.919043, 0.55 ) }
    dend_30 { pt3dadd( 64.0948, 22.5493, 0.314047, 0.55 ) }
    dend_30 { pt3dadd( 65.8317, 23.0776, 1.70885, 0.55 ) }
    dend_30 { pt3dadd( 68.0498, 23.7653, 3.55993, 0.55 ) }
    dend_30 { pt3dadd( 68.663, 23.9549, 4.06672, 0.55 ) }
    dend_30 { pt3dadd( 69.7646, 24.2472, 4.97548, 0.55 ) }
    dend_30 { pt3dadd( 70.9784, 24.5849, 5.91652, 0.55 ) }
    dend_30 { pt3dadd( 72.3984, 25.0023, 6.93413, 0.55 ) }
    dend_30 { pt3dadd( 73.7358, 25.4168, 7.89323, 0.55 ) }
    dend_30 { pt3dadd( 74.4741, 25.6703, 8.37551, 0.55 ) }
    dend_30 { pt3dadd( 75.3411, 25.9936, 8.93389, 0.55 ) }
    dend_30 { pt3dadd( 76.4162, 26.4208, 9.5969, 0.83 ) }
    dend_30 { pt3dadd( 78.2016, 27.0682, 10.494, 0.55 ) }
    dend_30 { pt3dadd( 79.3911, 27.4342, 11.0418, 0.83 ) }
    dend_30 { pt3dadd( 81.0498, 27.8505, 11.7636, 0.55 ) }
    dend_30 { pt3dadd( 81.5601, 27.9483, 11.9847, 0.55 ) }
    dend_30 { pt3dadd( 83.1476, 28.1635, 12.6566, 0.55 ) }
    dend_30 { pt3dadd( 86.0023, 28.3461, 13.7869, 0.55 ) }
    dend_30 { pt3dadd( 88.0987, 28.3508, 14.5949, 0.55 ) }
    dend_30 { pt3dadd( 89.7532, 28.2869, 15.2918, 0.55 ) }
    dend_30 { pt3dadd( 91.4326, 28.1471, 16.0813, 0.55 ) }
    dend_30 { pt3dadd( 91.7857, 28.1085, 16.2515, 0.28 ) }
    dend_30 { pt3dadd( 92.5018, 28.0009, 16.6018, 0.83 ) }
    dend_30 { pt3dadd( 95.4398, 27.5196, 18.0678, 0.55 ) }
    dend_30 { pt3dadd( 97.5002, 27.1752, 19.0526, 0.55 ) }
    dend_30 { pt3dadd( 99.1859, 26.9467, 19.8933, 0.55 ) }
    dend_30 { pt3dadd( 100.192, 26.8096, 20.4061, 0.83 ) }
    dend_30 { pt3dadd( 100.984, 26.7137, 20.8084, 0.28 ) }
    dend_30 { pt3dadd( 101.703, 26.6261, 21.1662, 0.55 ) }
    dend_30 { pt3dadd( 107.206, 27.5367, 24.438, 0.55 ) }
    dend_30 { pt3dadd( 113.183, 27.2266, 26.889, 0.55 ) }
    dend_30 { pt3dadd( 119.099, 27.7494, 29.4472, 0.55 ) }
    dend_30 { pt3dadd( 124.201, 27.6993, 33.4208, 0.55 ) }
    dend_30 { pt3dadd( 128.882, 26.8672, 37.8036, 0.55 ) }
    dend_30 { pt3dadd( 134.239, 24.7209, 40.7224, 0.55 ) }
    dend_30 { pt3dadd( 139.62, 21.7391, 42.7167, 0.55 ) }
    dend_30 { pt3dadd( 145.611, 19.7748, 44.1536, 0.55 ) }
    dend_30 { pt3dadd( 151.485, 17.8167, 46.0189, 0.55 ) }
    dend_30 { pt3dadd( 157.659, 16.4419, 47.3638, 0.55 ) }
    dend_30 { pt3dadd( 163.716, 15.5379, 49.4429, 0.55 ) }
    dend_30 { pt3dadd( 169.33, 13.649, 52.0382, 0.55 ) }
    dend_30 { pt3dadd( 175.036, 13.0101, 55.0124, 0.55 ) }
    dend_30 { pt3dadd( 180.39, 13.4999, 58.6069, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.83713, -33.0504, 6.59244, 1.38 ) }
    dend_13 { pt3dadd( 2.48643, -37.5179, 5.62764, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.83713, -33.0504, 6.59244, 0.55 ) }
    dend_12 { pt3dadd( -3.37332, -34.8677, 6.66889, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.07553, -37.2021, 6.75335, 0.55 ) }
    dend_12 { pt3dadd( -6.3972, -38.7443, 6.83488, 0.55 ) }
    dend_12 { pt3dadd( -7.51601, -40.0327, 6.72738, 0.55 ) }
    dend_12 { pt3dadd( -9.96217, -42.6987, 6.26081, 0.55 ) }
    dend_12 { pt3dadd( -11.6782, -44.4776, 5.88601, 0.55 ) }
    dend_12 { pt3dadd( -13.2058, -46.0725, 5.49466, 0.55 ) }
    dend_12 { pt3dadd( -17.1278, -49.9507, 4.49372, 0.55 ) }
    dend_12 { pt3dadd( -21.8375, -54.4381, 3.32932, 0.55 ) }
    dend_12 { pt3dadd( -25.4858, -57.8352, 2.36425, 0.55 ) }
    dend_12 { pt3dadd( -27.816, -60.067, 1.71421, 0.55 ) }
    dend_12 { pt3dadd( -30.4905, -62.7471, 0.97605, 0.55 ) }
    dend_12 { pt3dadd( -33.8872, -66.5992, 0.0826127, 0.55 ) }
    dend_12 { pt3dadd( -35.8786, -69.3402, -0.39995, 0.55 ) }
    dend_12 { pt3dadd( -38.3354, -73.2911, -0.781995, 0.55 ) }
    dend_12 { pt3dadd( -40.2987, -77.0, -1.01136, 0.55 ) }
    dend_12 { pt3dadd( -42.2927, -81.6373, -1.2128, 0.55 ) }
    dend_12 { pt3dadd( -44.1838, -87.0906, -1.32694, 0.55 ) }
    dend_12 { pt3dadd( -45.2158, -91.2668, -1.32423, 0.55 ) }
    dend_12 { pt3dadd( -45.584, -93.3479, -1.19026, 0.55 ) }
    dend_12 { pt3dadd( -46.1478, -98.2439, -0.61604, 0.55 ) }
    dend_12 { pt3dadd( -46.5905, -102.827, 0.0390087, 0.55 ) }
    dend_12 { pt3dadd( -46.7898, -107.448, 1.0344, 0.55 ) }
    dend_12 { pt3dadd( -46.9277, -110.099, 1.75067, 0.55 ) }
    dend_12 { pt3dadd( -47.2963, -118.297, 4.26486, 0.55 ) }
    dend_12 { pt3dadd( -47.3272, -118.901, 4.46067, 0.55 ) }
    dend_12 { pt3dadd( -47.4441, -122.599, 5.74852, 0.55 ) }
    dend_12 { pt3dadd( -47.957, -129.206, 8.21466, 0.55 ) }
    dend_12 { pt3dadd( -48.1449, -131.415, 8.9085, 0.55 ) }
    dend_12 { pt3dadd( -48.5403, -134.866, 9.40371, 0.55 ) }
    dend_12 { pt3dadd( -48.6621, -136.148, 9.29343, 0.55 ) }
    dend_12 { pt3dadd( -48.9047, -140.49, 8.10028, 0.55 ) }
    dend_12 { pt3dadd( -48.9214, -143.305, 6.73079, 0.55 ) }
    dend_12 { pt3dadd( -48.8504, -147.79, 3.63634, 0.55 ) }
    dend_12 { pt3dadd( -48.5533, -153.28, -0.578943, 0.28 ) }
    dend_12 { pt3dadd( -48.4636, -154.638, -1.80465, 0.55 ) }
    dend_12 { pt3dadd( -48.3259, -156.695, -3.84412, 0.28 ) }
    dend_12 { pt3dadd( -48.3085, -157.005, -4.16783, 0.55 ) }
    dend_12 { pt3dadd( -48.2196, -158.703, -5.7949, 0.28 ) }
    dend_12 { pt3dadd( -48.2252, -159.279, -6.21377, 0.55 ) }
    dend_12 { pt3dadd( -48.306, -162.273, -7.8116, 0.28 ) }
    dend_12 { pt3dadd( -48.3725, -163.29, -8.34136, 0.55 ) }
    dend_12 { pt3dadd( -48.5972, -166.234, -9.70494, 0.28 ) }
    dend_12 { pt3dadd( -48.6637, -167.16, -10.1309, 0.55 ) }
    dend_12 { pt3dadd( -48.918, -170.357, -11.5479, 0.28 ) }
    dend_12 { pt3dadd( -49.0274, -171.828, -12.2075, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.74155, -87.5818, 70.8172, 0.55 ) }
    dend_10 { pt3dadd( -9.17564, -95.5083, 78.3521, 0.55 ) }
    dend_10 { pt3dadd( -13.7863, -102.511, 86.1687, 0.55 ) }
    dend_10 { pt3dadd( -18.0432, -110.244, 93.481, 0.55 ) }
    dend_10 { pt3dadd( -22.4936, -118.032, 100.618, 0.55 ) }
    dend_10 { pt3dadd( -25.6745, -127.027, 106.971, 0.55 ) }
    dend_10 { pt3dadd( -28.7668, -135.643, 113.87, 0.55 ) }
    dend_10 { pt3dadd( -30.4697, -145.969, 118.548, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.74155, -87.5818, 70.8172, 0.55 ) }
    dend_3 { pt3dadd( -4.90533, -92.2782, 75.4273, 0.55 ) }
    dend_3 { pt3dadd( -3.78379, -97.6949, 79.0894, 0.55 ) }
    dend_3 { pt3dadd( -3.72426, -103.221, 82.7584, 0.55 ) }
    dend_3 { pt3dadd( -4.0422, -109.092, 85.831, 0.55 ) }
    dend_3 { pt3dadd( -4.09237, -114.922, 88.9971, 0.55 ) }
    dend_3 { pt3dadd( -4.09533, -120.509, 92.5739, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -42.8572, 23.4766, -10.8563, 0.83 ) }
    dend_60 { pt3dadd( -43.0408, 24.1888, -12.1621, 0.83 ) }
    dend_60 { pt3dadd( -43.5049, 25.9525, -15.1153, 0.55 ) }
    dend_60 { pt3dadd( -43.6851, 26.7371, -16.3056, 0.83 ) }
    dend_60 { pt3dadd( -43.8576, 27.5979, -17.5065, 0.55 ) }
    dend_60 { pt3dadd( -44.0005, 28.5281, -18.5848, 0.55 ) }
    dend_60 { pt3dadd( -44.052, 29.0162, -19.0561, 0.28 ) }
    dend_60 { pt3dadd( -44.0888, 29.3631, -19.2696, 0.55 ) }
    dend_60 { pt3dadd( -44.1155, 30.5999, -19.731, 0.28 ) }
    dend_60 { pt3dadd( -44.1078, 31.1381, -19.9056, 0.55 ) }
    dend_60 { pt3dadd( -44.0869, 33.027, -20.4327, 0.28 ) }
    dend_60 { pt3dadd( -44.0968, 34.5331, -20.7913, 0.55 ) }
    dend_60 { pt3dadd( -44.2052, 36.8911, -21.2519, 0.28 ) }
    dend_60 { pt3dadd( -44.3618, 38.9658, -21.5995, 0.28 ) }
    dend_60 { pt3dadd( -44.5091, 40.1249, -21.7548, 0.55 ) }
    dend_60 { pt3dadd( -44.7649, 41.4888, -21.9158, 0.28 ) }
    dend_60 { pt3dadd( -44.9265, 42.1368, -21.9724, 0.55 ) }
    dend_60 { pt3dadd( -45.4028, 43.6314, -22.1493, 0.28 ) }
    dend_60 { pt3dadd( -45.7978, 44.6045, -22.3001, 0.28 ) }
    dend_60 { pt3dadd( -46.2132, 45.5492, -22.4717, 0.28 ) }
    dend_60 { pt3dadd( -46.4135, 46.0504, -22.5699, 0.55 ) }
    dend_60 { pt3dadd( -47.1245, 48.08, -23.0457, 0.28 ) }
    dend_60 { pt3dadd( -47.8958, 50.4828, -23.6767, 0.55 ) }
    dend_60 { pt3dadd( -48.1506, 51.3135, -23.9013, 0.55 ) }
    dend_60 { pt3dadd( -48.4154, 52.1496, -24.1046, 0.55 ) }
    dend_60 { pt3dadd( -49.0798, 53.904, -24.5392, 0.55 ) }
    dend_60 { pt3dadd( -49.5977, 55.0377, -24.8286, 0.28 ) }
    dend_60 { pt3dadd( -49.8469, 55.4577, -24.9297, 0.55 ) }
    dend_60 { pt3dadd( -50.6007, 56.5895, -25.1542, 0.28 ) }
    dend_60 { pt3dadd( -51.4676, 57.7723, -25.4292, 0.55 ) }
    dend_60 { pt3dadd( -52.9026, 59.4272, -25.848, 0.28 ) }
    dend_60 { pt3dadd( -53.591, 60.0984, -26.0243, 0.28 ) }
    dend_60 { pt3dadd( -54.711, 60.9809, -26.3379, 0.55 ) }
    dend_60 { pt3dadd( -55.966, 61.8726, -26.7024, 0.28 ) }
    dend_60 { pt3dadd( -56.1914, 62.006, -26.761, 0.55 ) }
    dend_60 { pt3dadd( -56.9944, 62.4132, -26.9487, 0.28 ) }
    dend_60 { pt3dadd( -59.7372, 63.6884, -27.5166, 0.55 ) }
    dend_60 { pt3dadd( -63.5469, 65.1407, -28.3508, 0.28 ) }
    dend_60 { pt3dadd( -64.2547, 65.3609, -28.5299, 0.55 ) }
    dend_60 { pt3dadd( -66.1972, 65.8943, -29.0322, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -67.0162, 66.1035, -29.2588, 0.28 ) }
    dend_60 { pt3dadd( -67.7331, 66.2618, -29.4797, 0.55 ) }
    dend_60 { pt3dadd( -69.8387, 66.4772, -30.2035, 0.28 ) }
    dend_60 { pt3dadd( -71.2986, 66.5159, -30.6339, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -42.8572, 23.4766, -10.8563, 0.55 ) }
    dend_57 { pt3dadd( -43.3388, 24.7798, -11.4956, 0.55 ) }
    dend_57 { pt3dadd( -43.6177, 25.5812, -11.7934, 0.28 ) }
    dend_57 { pt3dadd( -43.8855, 26.2126, -11.8273, 0.55 ) }
    dend_57 { pt3dadd( -44.5006, 27.6624, -11.9052, 0.28 ) }
    dend_57 { pt3dadd( -44.9327, 28.6808, -11.9599, 0.55 ) }
    dend_57 { pt3dadd( -45.7292, 30.5581, -12.0608, 0.28 ) }
    dend_57 { pt3dadd( -46.1951, 31.6313, -11.9263, 0.55 ) }
    dend_57 { pt3dadd( -47.7012, 34.5051, -10.6112, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -118.969, -72.6463, 18.2101, 0.55 ) }
    dend_52 { pt3dadd( -125.174, -82.4122, 17.9209, 0.55 ) }
    dend_52 { pt3dadd( -129.616, -93.0391, 16.7815, 0.55 ) }
    dend_52 { pt3dadd( -133.569, -103.281, 13.1161, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -118.969, -72.6463, 18.2101, 0.55 ) }
    dend_49 { pt3dadd( -124.326, -80.0193, 16.8874, 0.55 ) }
    dend_49 { pt3dadd( -128.902, -87.6406, 14.4839, 0.55 ) }
    dend_49 { pt3dadd( -133.123, -95.4015, 11.8856, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -107.727, 13.0946, 43.1691, 0.55 ) }
    dend_47 { pt3dadd( -113.141, 13.67, 47.2854, 0.55 ) }
    dend_47 { pt3dadd( -119.007, 14.8465, 50.5699, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -107.727, 13.0946, 43.1691, 0.55 ) }
    dend_46 { pt3dadd( -118.66, 11.7835, 48.4325, 0.55 ) }
    dend_46 { pt3dadd( -129.876, 12.4105, 53.2038, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 77.4478, -54.7795, -100.773, 0.28 ) }
    dend_39 { pt3dadd( 87.1947, -60.1846, -118.254, 0.28 ) }
    dend_39 { pt3dadd( 88.161, -60.8102, -119.812, 0.55 ) }
    dend_39 { pt3dadd( 89.7923, -61.8663, -122.444, 0.28 ) }
    dend_39 { pt3dadd( 91.1659, -62.7556, -124.66, 0.28 ) }
    dend_39 { pt3dadd( 92.9842, -63.9328, -127.594, 0.55 ) }
    dend_39 { pt3dadd( 95.3815, -65.4848, -131.461, 0.55 ) }
    dend_39 { pt3dadd( 98.6014, -68.2762, -133.518, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 77.4478, -54.7795, -100.773, 0.55 ) }
    dend_36 { pt3dadd( 78.0618, -55.8247, -102.482, 0.55 ) }
    dend_36 { pt3dadd( 78.2263, -56.261, -103.253, 0.28 ) }
    dend_36 { pt3dadd( 78.4575, -56.9848, -104.6, 0.55 ) }
    dend_36 { pt3dadd( 78.9669, -58.5795, -107.569, 0.28 ) }
    dend_36 { pt3dadd( 79.3199, -59.6846, -109.627, 0.55 ) }
    dend_36 { pt3dadd( 79.9179, -61.557, -113.113, 0.28 ) }
    dend_36 { pt3dadd( 80.6027, -63.7332, -117.636, 0.28 ) }
    dend_36 { pt3dadd( 80.8588, -64.704, -119.751, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 136.154, -16.5079, -37.6387, 0.28 ) }
    dend_33 { pt3dadd( 138.21, -19.3642, -37.3493, 0.28 ) }
    dend_33 { pt3dadd( 140.839, -23.1616, -36.6377, 0.28 ) }
    dend_33 { pt3dadd( 142.513, -25.6335, -36.071, 0.55 ) }
    dend_33 { pt3dadd( 143.531, -27.0016, -35.6967, 0.28 ) }
    dend_33 { pt3dadd( 144.073, -27.7387, -35.4873, 0.28 ) }
    dend_33 { pt3dadd( 146.753, -31.3742, -34.5123, 0.55 ) }
    dend_33 { pt3dadd( 147.381, -32.1891, -34.1895, 0.28 ) }
    dend_33 { pt3dadd( 148.886, -34.3486, -33.1782, 0.55 ) }
    dend_33 { pt3dadd( 150.163, -36.2215, -32.376, 0.28 ) }
    dend_33 { pt3dadd( 151.272, -37.7415, -31.7595, 0.55 ) }
    dend_33 { pt3dadd( 152.561, -39.5531, -31.1352, 0.55 ) }
    dend_33 { pt3dadd( 154.575, -42.4089, -30.512, 0.55 ) }
    dend_33 { pt3dadd( 155.057, -43.1082, -30.3842, 0.55 ) }
    dend_33 { pt3dadd( 156.78, -45.7188, -29.9312, 0.28 ) }
    dend_33 { pt3dadd( 157.443, -46.7843, -29.7719, 0.55 ) }
    dend_33 { pt3dadd( 158.371, -48.1439, -29.58, 0.28 ) }
    dend_33 { pt3dadd( 159.671, -50.069, -29.3973, 0.55 ) }
    dend_33 { pt3dadd( 161.782, -53.0755, -29.5707, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 136.154, -16.5079, -37.6387, 0.55 ) }
    dend_32 { pt3dadd( 133.323, -16.06, -37.4329, 0.55 ) }
    dend_32 { pt3dadd( 131.024, -15.6963, -37.2658, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.48643, -37.5179, 5.62764, 0.83 ) }
    dend_17 { pt3dadd( 2.62901, -37.777, 5.63949, 0.83 ) }
    dend_17 { pt3dadd( 4.19276, -40.0524, 5.9773, 0.83 ) }
    dend_17 { pt3dadd( 5.59875, -42.0436, 6.13928, 0.55 ) }
    dend_17 { pt3dadd( 6.72044, -43.6322, 6.2685, 0.55 ) }
    dend_17 { pt3dadd( 9.10461, -47.0087, 6.54317, 0.83 ) }
    dend_17 { pt3dadd( 11.9964, -51.1041, 6.87632, 0.55 ) }
    dend_17 { pt3dadd( 13.5557, -53.2451, 7.10898, 0.83 ) }
    dend_17 { pt3dadd( 16.2498, -56.6386, 7.70125, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.48643, -37.5179, 5.62764, 0.55 ) }
    dend_14 { pt3dadd( 2.322, -38.4016, 3.01406, 0.55 ) }
    dend_14 { pt3dadd( 2.14551, -39.3501, 0.208702, 0.55 ) }
    dend_14 { pt3dadd( 1.93716, -40.4698, -3.10305, 0.55 ) }
    dend_14 { pt3dadd( 1.68416, -41.8295, -7.12458, 0.55 ) }
    dend_14 { pt3dadd( 1.54059, -42.6011, -9.40667, 0.55 ) }
    dend_14 { pt3dadd( 1.51175, -42.7561, -9.8651, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.09533, -120.509, 92.5739, 0.55 ) }
    dend_7 { pt3dadd( -3.52214, -126.32, 96.8898, 0.55 ) }
    dend_7 { pt3dadd( -1.8874, -132.386, 100.528, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.09533, -120.509, 92.5739, 0.55 ) }
    dend_4 { pt3dadd( -4.02327, -129.427, 97.7865, 0.55 ) }
    dend_4 { pt3dadd( -4.42214, -138.153, 103.3, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -47.7012, 34.5051, -10.6112, 0.28 ) }
    dend_59 { pt3dadd( -48.6688, 36.7509, -9.32178, 0.28 ) }
    dend_59 { pt3dadd( -49.0031, 37.6356, -8.76702, 0.55 ) }
    dend_59 { pt3dadd( -49.9361, 40.2168, -7.13326, 0.28 ) }
    dend_59 { pt3dadd( -50.4391, 41.4529, -6.40803, 0.55 ) }
    dend_59 { pt3dadd( -51.8555, 44.7585, -4.51675, 0.28 ) }
    dend_59 { pt3dadd( -53.2951, 48.1182, -2.59452, 0.55 ) }
    dend_59 { pt3dadd( -55.6297, 53.4874, 0.71212, 0.28 ) }
    dend_59 { pt3dadd( -56.1274, 54.6379, 1.4139, 0.55 ) }
    dend_59 { pt3dadd( -57.2672, 57.2517, 2.84579, 0.28 ) }
    dend_59 { pt3dadd( -57.7163, 58.319, 3.38805, 0.55 ) }
    dend_59 { pt3dadd( -63.0075, 65.9901, 9.40679, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -70.0713, 73.6748, 13.1642, 0.55 ) }
    dend_59 { pt3dadd( -75.6194, 82.2267, 17.5404, 0.55 ) }
    dend_59 { pt3dadd( -80.1254, 91.8847, 20.6208, 0.55 ) }
    dend_59 { pt3dadd( -85.8822, 100.85, 23.711, 0.55 ) }
    dend_59 { pt3dadd( -91.8418, 108.753, 28.7209, 0.55 ) }
    dend_59 { pt3dadd( -96.447, 116.569, 35.1061, 0.55 ) }
    dend_59 { pt3dadd( -99.416, 124.02, 42.77, 0.55 ) }
    dend_59 { pt3dadd( -102.624, 131.891, 49.8991, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -47.7012, 34.5051, -10.6112, 0.55 ) }
    dend_58 { pt3dadd( -50.2926, 34.3216, -7.14922, 0.55 ) }
    dend_58 { pt3dadd( -51.6294, 34.1657, -5.32251, 0.28 ) }
    dend_58 { pt3dadd( -52.6241, 34.0497, -3.96315, 0.55 ) }
    dend_58 { pt3dadd( -53.4532, 33.953, -2.83017, 0.28 ) }
    dend_58 { pt3dadd( -54.034, 33.8852, -2.0366, 0.55 ) }
    dend_58 { pt3dadd( -55.6353, 33.6985, 0.151645, 0.28 ) }
    dend_58 { pt3dadd( -56.7585, 33.3569, 1.51075, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -133.569, -103.281, 13.1161, 0.55 ) }
    dend_54 { pt3dadd( -137.104, -113.07, 12.7006, 0.55 ) }
    dend_54 { pt3dadd( -140.065, -123.039, 13.3022, 0.55 ) }
    dend_54 { pt3dadd( -142.868, -132.976, 11.9149, 0.55 ) }
    dend_54 { pt3dadd( -146.241, -142.829, 12.1557, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -133.569, -103.281, 13.1161, 0.55 ) }
    dend_53 { pt3dadd( -141.13, -113.106, 5.62263, 0.55 ) }
    dend_53 { pt3dadd( -148.47, -121.379, -3.73285, 0.55 ) }
    dend_53 { pt3dadd( -156.53, -130.946, -11.0375, 0.55 ) }
    dend_53 { pt3dadd( -167.404, -138.247, -17.2273, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -133.123, -95.4015, 11.8856, 0.55 ) }
    dend_51 { pt3dadd( -139.637, -100.351, 5.85404, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -133.123, -95.4015, 11.8856, 0.55 ) }
    dend_50 { pt3dadd( -136.899, -104.722, 17.2384, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 98.6014, -68.2762, -133.518, 0.28 ) }
    dend_41 { pt3dadd( 101.899, -70.0538, -135.523, 0.28 ) }
    dend_41 { pt3dadd( 103.43, -70.8795, -136.454, 0.55 ) }
    dend_41 { pt3dadd( 106.35, -72.454, -138.23, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 98.6014, -68.2762, -133.518, 0.55 ) }
    dend_40 { pt3dadd( 98.1655, -68.8202, -134.931, 0.55 ) }
    dend_40 { pt3dadd( 97.2936, -69.9082, -137.759, 0.28 ) }
    dend_40 { pt3dadd( 97.0096, -70.2626, -138.68, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 80.8588, -64.704, -119.751, 0.28 ) }
    dend_38 { pt3dadd( 81.3337, -66.1861, -122.481, 0.28 ) }
    dend_38 { pt3dadd( 81.5688, -66.92, -123.833, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 80.8588, -64.704, -119.751, 0.55 ) }
    dend_37 { pt3dadd( 78.6794, -64.6598, -119.579, 0.55 ) }
    dend_37 { pt3dadd( 72.6021, -64.5366, -119.099, 0.28 ) }
    dend_37 { pt3dadd( 71.1584, -64.5073, -118.985, 0.55 ) }
    dend_37 { pt3dadd( 67.2091, -64.4272, -118.674, 0.28 ) }
    dend_37 { pt3dadd( 64.6634, -64.3755, -118.473, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 16.2498, -56.6386, 7.70125, 0.83 ) }
    dend_23 { pt3dadd( 16.3427, -56.9466, 7.67301, 0.83 ) }
    dend_23 { pt3dadd( 17.537, -60.9852, 7.43331, 0.83 ) }
    dend_23 { pt3dadd( 18.0981, -64.0532, 7.24425, 0.83 ) }
    dend_23 { pt3dadd( 18.2849, -67.0664, 7.17723, 0.83 ) }
    dend_23 { pt3dadd( 18.2382, -71.1215, 7.23954, 0.83 ) }
    dend_23 { pt3dadd( 17.9804, -75.8221, 7.36741, 0.83 ) }
    dend_23 { pt3dadd( 17.5458, -81.1008, 7.73727, 0.83 ) }
    dend_23 { pt3dadd( 16.9844, -86.2555, 8.28006, 0.83 ) }
    dend_23 { pt3dadd( 16.0654, -92.5934, 8.5868, 0.83 ) }
    dend_23 { pt3dadd( 15.6181, -95.4966, 8.50501, 0.83 ) }
    dend_23 { pt3dadd( 15.3568, -97.6646, 8.33234, 0.83 ) }
    dend_23 { pt3dadd( 14.8394, -101.82, 7.87919, 0.83 ) }
    dend_23 { pt3dadd( 14.5665, -105.512, 7.36655, 0.83 ) }
    dend_23 { pt3dadd( 14.848, -113.257, 5.84597, 0.83 ) }
    dend_23 { pt3dadd( 15.3792, -117.425, 4.60488, 0.83 ) }
    dend_23 { pt3dadd( 16.0411, -121.232, 3.23262, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.2498, -56.6386, 7.70125, 0.55 ) }
    dend_18 { pt3dadd( 15.1456, -59.6863, 7.36485, 0.55 ) }
    dend_18 { pt3dadd( 14.2564, -61.9028, 7.2612, 0.55 ) }
    dend_18 { pt3dadd( 13.6719, -63.3198, 7.33823, 0.55 ) }
    dend_18 { pt3dadd( 12.777, -65.5339, 7.69285, 0.55 ) }
    dend_18 { pt3dadd( 11.0093, -69.9149, 8.69338, 0.55 ) }
    dend_18 { pt3dadd( 9.51736, -73.2375, 9.77498, 0.55 ) }
    dend_18 { pt3dadd( 8.22353, -75.9043, 10.9026, 0.55 ) }
    dend_18 { pt3dadd( 6.78986, -78.6044, 12.1927, 0.55 ) }
    dend_18 { pt3dadd( 5.54277, -80.8462, 13.3626, 0.28 ) }
    dend_18 { pt3dadd( 4.40585, -82.683, 14.5532, 0.55 ) }
    dend_18 { pt3dadd( 2.10278, -86.0359, 17.1192, 0.55 ) }
    dend_18 { pt3dadd( 0.511983, -88.1006, 18.854, 0.55 ) }
    dend_18 { pt3dadd( -0.386714, -89.2578, 19.8109, 0.55 ) }
    dend_18 { pt3dadd( -1.48398, -90.6259, 20.851, 0.83 ) }
    dend_18 { pt3dadd( -4.67611, -94.6818, 23.6778, 0.28 ) }
    dend_18 { pt3dadd( -5.71862, -96.0235, 24.5807, 0.55 ) }
    dend_18 { pt3dadd( -7.50517, -98.4405, 26.1656, 0.28 ) }
    dend_18 { pt3dadd( -8.07422, -99.1861, 26.7036, 0.55 ) }
    dend_18 { pt3dadd( -9.3102, -100.931, 27.9698, 0.28 ) }
    dend_18 { pt3dadd( -9.98149, -101.922, 28.6258, 0.55 ) }
    dend_18 { pt3dadd( -12.0437, -105.148, 29.9002, 0.55 ) }
    dend_18 { pt3dadd( -16.8126, -113.756, 37.1926, 0.55 ) }
    dend_18 { pt3dadd( -21.2425, -121.942, 45.1546, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.51175, -42.7561, -9.8651, 0.55 ) }
    dend_16 { pt3dadd( 1.86518, -43.8765, -13.6884, 0.55 ) }
    dend_16 { pt3dadd( 1.94147, -44.1405, -14.7935, 0.55 ) }
    dend_16 { pt3dadd( 2.0727, -44.8027, -17.5213, 0.55 ) }
    dend_16 { pt3dadd( 2.21815, -46.1159, -23.3775, 0.28 ) }
    dend_16 { pt3dadd( 2.20818, -46.2956, -24.2239, 0.55 ) }
    dend_16 { pt3dadd( 2.08216, -47.1185, -27.6875, 0.55 ) }
    dend_16 { pt3dadd( 1.63328, -48.2417, -32.2078, 0.55 ) }
    dend_16 { pt3dadd( 1.4362, -48.6269, -33.9164, 0.28 ) }
    dend_16 { pt3dadd( 1.21139, -48.8802, -35.3703, 0.28 ) }
    dend_16 { pt3dadd( 0.613212, -49.2671, -37.6759, 0.55 ) }
    dend_16 { pt3dadd( -0.0421896, -49.6228, -40.5508, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -0.603731, -49.7541, -43.2431, 0.55 ) }
    dend_16 { pt3dadd( -1.06117, -49.7072, -45.3045, 0.55 ) }
    dend_16 { pt3dadd( -1.34433, -49.5725, -46.7508, 0.55 ) }
    dend_16 { pt3dadd( -2.09, -49.0155, -51.0733, 0.55 ) }
    dend_16 { pt3dadd( -2.92505, -48.1694, -55.5803, 0.55 ) }
    dend_16 { pt3dadd( -3.29827, -47.7326, -57.4182, 0.28 ) }
    dend_16 { pt3dadd( -3.63231, -47.3416, -59.1822, 0.55 ) }
    dend_16 { pt3dadd( -4.33865, -46.744, -62.7388, 0.28 ) }
    dend_16 { pt3dadd( -4.58497, -46.572, -63.9287, 0.83 ) }
    dend_16 { pt3dadd( -5.14409, -46.2265, -66.0676, 0.28 ) }
    dend_16 { pt3dadd( -5.68625, -46.0782, -67.4913, 0.55 ) }
    dend_16 { pt3dadd( -6.50582, -45.9319, -69.5319, 0.28 ) }
    dend_16 { pt3dadd( -6.85194, -45.863, -70.3276, 0.55 ) }
    dend_16 { pt3dadd( -7.55415, -45.7619, -71.7502, 0.55 ) }
    dend_16 { pt3dadd( -8.67406, -45.3859, -73.8458, 0.55 ) }
    dend_16 { pt3dadd( -9.46499, -45.0497, -75.1616, 0.28 ) }
    dend_16 { pt3dadd( -10.1687, -44.6329, -76.1615, 0.55 ) }
    dend_16 { pt3dadd( -10.9892, -43.9734, -77.3456, 0.28 ) }
    dend_16 { pt3dadd( -11.118, -43.847, -77.5458, 0.55 ) }
    dend_16 { pt3dadd( -12.0376, -42.639, -79.6399, 0.28 ) }
    dend_16 { pt3dadd( -12.5845, -41.7343, -81.2695, 0.55 ) }
    dend_16 { pt3dadd( -13.0973, -40.4129, -83.6075, 0.83 ) }
    dend_16 { pt3dadd( -13.3807, -39.2894, -85.6588, 0.28 ) }
    dend_16 { pt3dadd( -13.4225, -39.0029, -86.2171, 0.55 ) }
    dend_16 { pt3dadd( -13.6075, -36.8559, -90.6219, 0.28 ) }
    dend_16 { pt3dadd( -13.5976, -36.4905, -91.4307, 0.55 ) }
    dend_16 { pt3dadd( -13.4846, -35.299, -93.8897, 0.28 ) }
    dend_16 { pt3dadd( -13.453, -34.9927, -94.5266, 0.55 ) }
    dend_16 { pt3dadd( -13.4303, -34.1939, -96.1096, 0.28 ) }
    dend_16 { pt3dadd( -13.4525, -33.6182, -97.1972, 0.55 ) }
    dend_16 { pt3dadd( -13.7069, -32.3288, -99.4466, 0.28 ) }
    dend_16 { pt3dadd( -13.892, -31.6382, -100.756, 0.55 ) }
    dend_16 { pt3dadd( -14.3852, -30.3059, -103.468, 0.28 ) }
    dend_16 { pt3dadd( -14.5417, -29.9463, -104.269, 0.55 ) }
    dend_16 { pt3dadd( -14.8199, -29.4645, -105.499, 0.28 ) }
    dend_16 { pt3dadd( -15.089, -29.0582, -106.511, 0.55 ) }
    dend_16 { pt3dadd( -15.7343, -28.2385, -108.539, 0.28 ) }
    dend_16 { pt3dadd( -15.9431, -28.0042, -109.137, 0.55 ) }
    dend_16 { pt3dadd( -17.6389, -26.178, -113.448, 0.28 ) }
    dend_16 { pt3dadd( -18.3258, -25.4312, -114.872, 0.55 ) }
    dend_16 { pt3dadd( -19.6716, -23.9702, -117.296, 0.28 ) }
    dend_16 { pt3dadd( -20.3034, -23.2641, -118.362, 0.55 ) }
    dend_16 { pt3dadd( -21.8674, -21.6628, -120.699, 0.28 ) }
    dend_16 { pt3dadd( -22.4752, -21.119, -121.527, 0.55 ) }
    dend_16 { pt3dadd( -24.8289, -19.4752, -124.386, 0.28 ) }
    dend_16 { pt3dadd( -25.8282, -18.9796, -125.569, 0.55 ) }
    dend_16 { pt3dadd( -27.287, -18.6276, -127.241, 0.55 ) }
    dend_16 { pt3dadd( -28.2107, -18.4952, -128.248, 0.55 ) }
    dend_16 { pt3dadd( -30.2456, -18.2934, -130.149, 0.28 ) }
    dend_16 { pt3dadd( -32.367, -18.1195, -131.896, 0.28 ) }
    dend_16 { pt3dadd( -34.1792, -17.9657, -133.304, 0.55 ) }
    dend_16 { pt3dadd( -36.5894, -17.5367, -134.8, 0.28 ) }
    dend_16 { pt3dadd( -37.8964, -17.1527, -135.4, 0.55 ) }
    dend_16 { pt3dadd( -41.1935, -15.7125, -136.571, 0.28 ) }
    dend_16 { pt3dadd( -43.1247, -14.6356, -136.852, 0.55 ) }
    dend_16 { pt3dadd( -44.5072, -13.7661, -136.836, 0.28 ) }
    dend_16 { pt3dadd( -46.2298, -12.7816, -136.566, 0.55 ) }
    dend_16 { pt3dadd( -48.4872, -11.4904, -136.066, 0.28 ) }
    dend_16 { pt3dadd( -49.3427, -11.035, -135.885, 0.55 ) }
    dend_16 { pt3dadd( -53.5983, -8.99108, -135.282, 0.28 ) }
    dend_16 { pt3dadd( -55.0315, -8.34597, -135.091, 0.55 ) }
    dend_16 { pt3dadd( -58.4792, -6.91369, -134.582, 0.28 ) }
    dend_16 { pt3dadd( -60.3533, -6.15306, -134.307, 0.55 ) }
    dend_16 { pt3dadd( -61.8936, -5.52992, -134.084, 0.55 ) }
    dend_16 { pt3dadd( -63.717, -4.79678, -133.85, 0.28 ) }
    dend_16 { pt3dadd( -64.6085, -4.42524, -133.837, 0.55 ) }
    dend_16 { pt3dadd( -67.5193, -3.10009, -133.925, 0.28 ) }
    dend_16 { pt3dadd( -69.047, -2.25532, -133.944, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.51175, -42.7561, -9.8651, 0.55 ) }
    dend_15 { pt3dadd( 2.28489, -42.8914, -10.1792, 0.55 ) }
    dend_15 { pt3dadd( 3.07678, -42.9363, -10.4718, 0.55 ) }
    dend_15 { pt3dadd( 4.08459, -42.9215, -10.7854, 0.55 ) }
    dend_15 { pt3dadd( 4.91868, -42.8435, -11.0049, 0.55 ) }
    dend_15 { pt3dadd( 10.4932, -41.7776, -12.0369, 0.55 ) }
    dend_15 { pt3dadd( 11.7585, -41.405, -12.2812, 0.55 ) }
    dend_15 { pt3dadd( 13.6349, -40.7299, -12.6742, 0.55 ) }
    dend_15 { pt3dadd( 14.9652, -40.2113, -12.9591, 0.55 ) }
    dend_15 { pt3dadd( 16.2625, -39.6362, -13.2094, 0.28 ) }
    dend_15 { pt3dadd( 18.2566, -38.6472, -13.5044, 0.55 ) }
    dend_15 { pt3dadd( 21.2163, -37.0901, -13.7936, 0.28 ) }
    dend_15 { pt3dadd( 21.4808, -37.0022, -13.8772, 0.55 ) }
    dend_15 { pt3dadd( 23.0825, -36.7625, -14.8552, 0.28 ) }
    dend_15 { pt3dadd( 24.0492, -36.6784, -15.694, 0.55 ) }
    dend_15 { pt3dadd( 25.0095, -36.6836, -16.7002, 0.55 ) }
    dend_15 { pt3dadd( 26.707, -36.8181, -18.5325, 0.55 ) }
    dend_15 { pt3dadd( 30.0469, -37.1166, -22.1188, 0.55 ) }
    dend_15 { pt3dadd( 32.331, -37.3514, -24.4865, 0.55 ) }
    dend_15 { pt3dadd( 33.1405, -37.4427, -25.2822, 0.55 ) }
    dend_15 { pt3dadd( 38.5842, -37.9839, -30.3838, 0.55 ) }
    dend_15 { pt3dadd( 40.1163, -38.1013, -31.7021, 0.55 ) }
    dend_15 { pt3dadd( 41.0313, -38.1671, -32.3767, 0.55 ) }
    dend_15 { pt3dadd( 43.2996, -38.384, -33.7616, 0.55 ) }
    dend_15 { pt3dadd( 48.9295, -39.2176, -36.7605, 0.55 ) }
    dend_15 { pt3dadd( 50.4791, -39.5095, -37.5019, 0.28 ) }
    dend_15 { pt3dadd( 51.3926, -39.7168, -37.8558, 0.55 ) }
    dend_15 { pt3dadd( 52.7554, -40.0811, -38.3535, 0.28 ) }
    dend_15 { pt3dadd( 53.3293, -40.2877, -38.5144, 0.55 ) }
    dend_15 { pt3dadd( 55.1046, -41.1467, -38.5428, 0.28 ) }
    dend_15 { pt3dadd( 56.1386, -42.2207, -37.8727, 0.55 ) }
    dend_15 { pt3dadd( 56.7225, -42.978, -37.4266, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 57.1973, -43.8044, -36.943, 0.55 ) }
    dend_15 { pt3dadd( 57.569, -44.6978, -36.4703, 0.28 ) }
    dend_15 { pt3dadd( 57.7316, -45.1572, -36.2729, 0.55 ) }
    dend_15 { pt3dadd( 58.0668, -46.3564, -35.7693, 0.28 ) }
    dend_15 { pt3dadd( 58.1819, -46.7158, -35.6807, 0.55 ) }
    dend_15 { pt3dadd( 58.9073, -48.7801, -35.2697, 0.28 ) }
    dend_15 { pt3dadd( 59.3413, -49.7396, -35.1601, 0.55 ) }
    dend_15 { pt3dadd( 60.4708, -51.7979, -35.0615, 0.28 ) }
    dend_15 { pt3dadd( 60.9643, -52.5592, -35.072, 0.55 ) }
    dend_15 { pt3dadd( 62.7574, -55.065, -35.1657, 0.28 ) }
    dend_15 { pt3dadd( 63.2125, -55.675, -35.2065, 0.55 ) }
    dend_15 { pt3dadd( 64.6544, -57.6085, -35.4237, 0.28 ) }
    dend_15 { pt3dadd( 64.9501, -58.0602, -35.4635, 0.55 ) }
    dend_15 { pt3dadd( 65.6934, -59.253, -35.5849, 0.28 ) }
    dend_15 { pt3dadd( 66.1713, -59.9472, -35.7043, 0.55 ) }
    dend_15 { pt3dadd( 66.6928, -60.631, -35.8496, 0.55 ) }
    dend_15 { pt3dadd( 67.7275, -61.9948, -36.131, 0.28 ) }
    dend_15 { pt3dadd( 68.4899, -62.8425, -36.3338, 0.55 ) }
    dend_15 { pt3dadd( 71.0191, -64.9789, -36.9656, 0.28 ) }
    dend_15 { pt3dadd( 72.0414, -65.6785, -37.2328, 0.55 ) }
    dend_15 { pt3dadd( 72.7512, -66.1242, -37.4023, 0.28 ) }
    dend_15 { pt3dadd( 73.476, -66.533, -37.5599, 0.55 ) }
    dend_15 { pt3dadd( 75.7234, -67.6832, -37.9971, 0.28 ) }
    dend_15 { pt3dadd( 77.4115, -68.5733, -38.2912, 0.55 ) }
    dend_15 { pt3dadd( 80.2095, -70.2512, -38.6232, 0.28 ) }
    dend_15 { pt3dadd( 81.0902, -70.7735, -38.7236, 0.55 ) }
    dend_15 { pt3dadd( 82.7369, -71.7327, -38.7969, 0.28 ) }
    dend_15 { pt3dadd( 83.2706, -72.0467, -38.7851, 0.55 ) }
    dend_15 { pt3dadd( 84.0778, -72.5458, -38.6378, 0.28 ) }
    dend_15 { pt3dadd( 84.7649, -72.9661, -38.4543, 0.55 ) }
    dend_15 { pt3dadd( 86.5443, -74.0072, -37.7842, 0.28 ) }
    dend_15 { pt3dadd( 88.5765, -75.1152, -36.9817, 0.28 ) }
    dend_15 { pt3dadd( 89.5712, -75.6262, -36.5074, 0.28 ) }
    dend_15 { pt3dadd( 90.611, -76.1094, -36.0851, 0.55 ) }
    dend_15 { pt3dadd( 92.1405, -76.7431, -35.4713, 0.28 ) }
    dend_15 { pt3dadd( 92.8142, -77.014, -35.1849, 0.83 ) }
    dend_15 { pt3dadd( 94.4948, -77.727, -34.3949, 0.28 ) }
    dend_15 { pt3dadd( 95.2447, -78.0549, -34.0906, 0.55 ) }
    dend_15 { pt3dadd( 98.6102, -79.6291, -32.8966, 0.28 ) }
    dend_15 { pt3dadd( 100.361, -80.4397, -32.4213, 0.28 ) }
    dend_15 { pt3dadd( 101.673, -81.0309, -32.148, 0.55 ) }
    dend_15 { pt3dadd( 102.475, -81.3925, -32.0625, 0.55 ) }
    dend_15 { pt3dadd( 104.671, -82.3818, -31.9738, 0.28 ) }
    dend_15 { pt3dadd( 106.748, -83.3897, -31.9603, 0.55 ) }
    dend_15 { pt3dadd( 108.635, -84.3587, -31.9502, 0.28 ) }
    dend_15 { pt3dadd( 110.373, -85.2583, -32.0134, 0.55 ) }
    dend_15 { pt3dadd( 111.809, -85.9871, -32.0584, 0.28 ) }
    dend_15 { pt3dadd( 112.968, -86.51, -32.0427, 0.55 ) }
    dend_15 { pt3dadd( 115.731, -87.6313, -31.8969, 0.28 ) }
    dend_15 { pt3dadd( 117.11, -88.1967, -31.7761, 0.55 ) }
    dend_15 { pt3dadd( 119.15, -89.0494, -31.5326, 0.28 ) }
    dend_15 { pt3dadd( 120.809, -89.7024, -31.2995, 0.55 ) }
    dend_15 { pt3dadd( 124.71, -91.0747, -30.7533, 0.28 ) }
    dend_15 { pt3dadd( 126.35, -91.5534, -30.6167, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.8874, -132.386, 100.528, 0.55 ) }
    dend_9 { pt3dadd( -0.145821, -143.27, 106.247, 0.55 ) }
    dend_9 { pt3dadd( 3.49141, -154.687, 109.506, 0.55 ) }
    dend_9 { pt3dadd( 6.00465, -165.884, 114.249, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.8874, -132.386, 100.528, 0.55 ) }
    dend_8 { pt3dadd( 0.341693, -142.603, 108.817, 0.55 ) }
    dend_8 { pt3dadd( 0.244119, -151.678, 118.598, 0.55 ) }
    dend_8 { pt3dadd( -0.517668, -158.605, 129.977, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.42214, -138.153, 103.3, 0.55 ) }
    dend_6 { pt3dadd( -3.43609, -145.731, 107.967, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.42214, -138.153, 103.3, 0.55 ) }
    dend_5 { pt3dadd( -5.09284, -146.114, 108.059, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 16.0411, -121.232, 3.23262, 0.83 ) }
    dend_25 { pt3dadd( 16.5661, -123.731, 3.76296, 0.83 ) }
    dend_25 { pt3dadd( 16.979, -125.848, 4.39075, 0.83 ) }
    dend_25 { pt3dadd( 17.3893, -127.953, 5.01477, 0.83 ) }
    dend_25 { pt3dadd( 17.7791, -129.951, 5.60739, 0.83 ) }
    dend_25 { pt3dadd( 18.3796, -133.031, 6.52065, 0.83 ) }
    dend_25 { pt3dadd( 18.9759, -136.089, 7.42732, 0.83 ) }
    dend_25 { pt3dadd( 19.3211, -138.132, 8.32946, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 16.0411, -121.232, 3.23262, 0.55 ) }
    dend_24 { pt3dadd( 18.0203, -123.619, 3.66338, 0.55 ) }
    dend_24 { pt3dadd( 19.6417, -125.461, 3.66451, 0.55 ) }
    dend_24 { pt3dadd( 20.818, -126.819, 3.50702, 0.55 ) }
    dend_24 { pt3dadd( 22.0098, -128.417, 3.03867, 0.83 ) }
    dend_24 { pt3dadd( 23.308, -130.227, 2.24142, 0.55 ) }
    dend_24 { pt3dadd( 24.5777, -131.997, 1.4616, 0.83 ) }
    dend_24 { pt3dadd( 25.8976, -133.913, 0.39729, 0.55 ) }
    dend_24 { pt3dadd( 26.693, -135.017, -0.328495, 0.83 ) }
    dend_24 { pt3dadd( 29.1969, -138.582, -3.01664, 0.55 ) }
    dend_24 { pt3dadd( 30.9755, -141.389, -5.38477, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -21.2425, -121.942, 45.1546, 0.55 ) }
    dend_20 { pt3dadd( -24.9131, -128.214, 48.5036, 0.55 ) }
    dend_20 { pt3dadd( -29.6756, -133.729, 51.8101, 0.55 ) }
    dend_20 { pt3dadd( -35.0392, -138.508, 55.334, 0.55 ) }
    dend_20 { pt3dadd( -41.0911, -142.367, 58.8706, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -21.2425, -121.942, 45.1546, 0.55 ) }
    dend_19 { pt3dadd( -23.8642, -127.445, 49.4269, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 19.3211, -138.132, 8.32946, 0.55 ) }
    dend_27 { pt3dadd( 19.26, -140.267, 8.5914, 0.55 ) }
    dend_27 { pt3dadd( 19.1508, -143.001, 9.01913, 0.55 ) }
    dend_27 { pt3dadd( 19.0606, -145.58, 9.41816, 0.55 ) }
    dend_27 { pt3dadd( 19.0126, -147.41, 9.67202, 0.55 ) }
    dend_27 { pt3dadd( 18.9571, -150.667, 10.0726, 0.55 ) }
    dend_27 { pt3dadd( 19.0613, -159.779, 11.2313, 0.55 ) }
    dend_27 { pt3dadd( 19.244, -162.846, 11.6391, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 19.4731, -164.99, 11.8906, 0.55 ) }
    dend_27 { pt3dadd( 19.9194, -167.403, 12.117, 0.55 ) }
    dend_27 { pt3dadd( 20.4024, -169.24, 12.1949, 0.55 ) }
    dend_27 { pt3dadd( 21.7487, -173.496, 12.423, 0.55 ) }
    dend_27 { pt3dadd( 22.7271, -176.732, 12.4872, 0.55 ) }
    dend_27 { pt3dadd( 23.3353, -178.865, 12.61, 0.55 ) }
    dend_27 { pt3dadd( 24.6413, -184.45, 13.0294, 0.55 ) }
    dend_27 { pt3dadd( 25.3563, -188.236, 13.3585, 0.55 ) }
    dend_27 { pt3dadd( 26.0376, -193.165, 13.9184, 0.55 ) }
    dend_27 { pt3dadd( 26.452, -198.831, 14.7977, 0.55 ) }
    dend_27 { pt3dadd( 26.5896, -202.647, 15.6343, 0.55 ) }
    dend_27 { pt3dadd( 26.6397, -204.91, 16.2021, 0.55 ) }
    dend_27 { pt3dadd( 26.6756, -206.997, 16.6884, 0.55 ) }
    dend_27 { pt3dadd( 26.8486, -209.616, 17.2942, 0.55 ) }
    dend_27 { pt3dadd( 27.6145, -215.859, 18.513, 0.55 ) }
    dend_27 { pt3dadd( 28.025, -218.254, 19.0223, 0.55 ) }
    dend_27 { pt3dadd( 28.4721, -220.922, 19.5233, 0.55 ) }
    dend_27 { pt3dadd( 29.1485, -224.926, 20.2367, 0.55 ) }
    dend_27 { pt3dadd( 29.5824, -228.017, 20.6653, 0.55 ) }
    dend_27 { pt3dadd( 29.9583, -230.955, 20.9009, 0.55 ) }
    dend_27 { pt3dadd( 30.2647, -233.763, 21.0113, 0.55 ) }
    dend_27 { pt3dadd( 30.5085, -236.513, 21.0926, 0.55 ) }
    dend_27 { pt3dadd( 30.7044, -238.466, 21.1532, 0.55 ) }
    dend_27 { pt3dadd( 31.1325, -241.641, 21.2253, 0.55 ) }
    dend_27 { pt3dadd( 31.8876, -245.403, 21.1429, 0.55 ) }
    dend_27 { pt3dadd( 32.4007, -247.203, 21.0896, 0.55 ) }
    dend_27 { pt3dadd( 32.9707, -248.76, 21.0084, 0.55 ) }
    dend_27 { pt3dadd( 34.2703, -251.658, 20.9099, 0.55 ) }
    dend_27 { pt3dadd( 35.1353, -253.486, 20.8069, 0.55 ) }
    dend_27 { pt3dadd( 36.1301, -255.755, 20.7423, 0.55 ) }
    dend_27 { pt3dadd( 36.7099, -257.371, 20.6802, 0.55 ) }
    dend_27 { pt3dadd( 38.028, -261.609, 20.5166, 0.55 ) }
    dend_27 { pt3dadd( 38.7674, -264.828, 20.4165, 0.55 ) }
    dend_27 { pt3dadd( 39.4981, -269.891, 20.3544, 0.55 ) }
    dend_27 { pt3dadd( 39.7175, -273.211, 20.5068, 0.55 ) }
    dend_27 { pt3dadd( 39.8352, -276.718, 20.6882, 0.28 ) }
    dend_27 { pt3dadd( 39.8164, -278.139, 20.7529, 0.28 ) }
    dend_27 { pt3dadd( 39.4871, -281.645, 21.02, 0.28 ) }
    dend_27 { pt3dadd( 38.9467, -284.93, 21.3412, 0.28 ) }
    dend_27 { pt3dadd( 38.0029, -289.329, 22.2882, 0.28 ) }
    dend_27 { pt3dadd( 38.5211, -298.737, 24.567, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 19.3211, -138.132, 8.32946, 0.55 ) }
    dend_26 { pt3dadd( 19.4141, -138.344, 8.90316, 0.55 ) }
    dend_26 { pt3dadd( 19.5413, -138.89, 10.1005, 0.55 ) }
    dend_26 { pt3dadd( 19.6209, -139.427, 11.1423, 0.28 ) }
    dend_26 { pt3dadd( 19.6808, -140.039, 12.267, 0.55 ) }
    dend_26 { pt3dadd( 19.6375, -140.44, 12.9673, 0.28 ) }
    dend_26 { pt3dadd( 19.4675, -141.174, 14.2064, 0.55 ) }
    dend_26 { pt3dadd( 19.2789, -141.572, 14.7523, 0.28 ) }
    dend_26 { pt3dadd( 19.1804, -141.72, 14.9566, 0.28 ) }
    dend_26 { pt3dadd( 19.0009, -141.941, 15.3127, 0.55 ) }
    dend_26 { pt3dadd( 18.3803, -142.678, 16.6924, 0.28 ) }
    dend_26 { pt3dadd( 18.1343, -142.969, 17.2781, 0.55 ) }
    dend_26 { pt3dadd( 17.5688, -143.793, 19.0251, 0.28 ) }
    dend_26 { pt3dadd( 17.3192, -144.198, 19.9671, 0.28 ) }
    dend_26 { pt3dadd( 17.0732, -144.706, 21.1311, 0.55 ) }
    dend_26 { pt3dadd( 16.8496, -145.468, 22.8397, 0.28 ) }
    dend_26 { pt3dadd( 16.8419, -145.565, 23.067, 0.55 ) }
    dend_26 { pt3dadd( 16.874, -146.032, 24.1729, 0.28 ) }
    dend_26 { pt3dadd( 16.8873, -146.074, 24.271, 0.55 ) }
    dend_26 { pt3dadd( 16.9964, -146.56, 25.1366, 0.28 ) }
    dend_26 { pt3dadd( 17.029, -146.826, 25.5523, 0.55 ) }
    dend_26 { pt3dadd( 17.2387, -148.816, 28.9883, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -41.0911, -142.367, 58.8706, 0.55 ) }
    dend_22 { pt3dadd( -45.5032, -145.904, 64.535, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -41.0911, -142.367, 58.8706, 0.55 ) }
    dend_21 { pt3dadd( -45.0289, -146.897, 60.7675, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 17
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 13
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 7
    dend_12 nseg = 9
    dend_10 nseg = 5
    dend_60 nseg = 3
    dend_39 nseg = 3
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 7
    dend_8 nseg = 3
    dend_27 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_BP_e2f954f49d_0_0


