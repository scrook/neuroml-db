// Cell: bAC217_L23_LBC_72e65525d3_0_0
/*
{
  "id" : "bAC217_L23_LBC_72e65525d3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.57692, -12.317, 0.00224913, 3.04291", "-4.1223, -11.0092, 0.00199417, 5.29598", "-3.66768, -9.70142, 0.00173921, 6.96143", "-3.21306, -8.39361, 0.00148425, 8.41327", "-2.75844, -7.0858, 0.00122929, 10.0352", "-2.30382, -5.77799, 9.74331E-4, 11.6729", "-1.8492, -4.47018, 7.1937E-4, 13.3983", "-1.39458, -3.16237, 4.6441E-4, 14.8005", "-0.93996, -1.85456, 2.0945E-4, 16.236", "-0.485339, -0.546748, -4.55105E-5, 17.3716", "-0.0307183, 0.761062, -3.00471E-4, 17.7953", "0.423902, 2.06887, -5.55431E-4, 18.1204", "0.878523, 3.37668, -8.10391E-4, 17.9034", "1.33314, 4.68449, -0.00106535, 17.6783", "1.78776, 5.9923, -0.00132031, 17.2859", "2.24238, 7.30011, -0.00157527, 16.2941", "2.69701, 8.60792, -0.00183023, 15.2244", "3.15163, 9.91573, -0.00208519, 13.4378", "3.60625, 11.2235, -0.00234015, 10.8129", "4.06087, 12.5313, -0.00259511, 7.84199", "4.51549, 13.8392, -0.00285007, 4.6247" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "7.60717, 9.2662, 11.7723, 1.03", "7.60717, 9.2662, 11.7723, 1.03", "8.12305, 10.8503, 11.8731, 1.03", "8.65312, 12.0572, 12.0305, 1.03", "9.59597, 13.7091, 12.3925, 1.18", "10.6928, 15.2067, 12.8639, 1.18", "11.9533, 16.6262, 13.4401, 1.03", "13.7339, 18.123, 14.3097, 1.18", "15.3403, 19.0617, 15.117, 1.18", "17.1683, 19.7929, 16.0217, 1.84", "19.1858, 20.3517, 17.0254, 2.14", "20.8386, 20.7091, 17.8288, 1.84", "23.1246, 21.1967, 18.9052, 0.88", "24.6952, 21.6244, 19.6529, 0.52", "25.6283, 22.0456, 20.0741, 0.52", "26.6533, 22.8672, 20.5406, 0.52", "27.5335, 24.0636, 20.9854, 0.96", "28.419, 25.7747, 21.478, 1.47", "29.0637, 27.4089, 21.9101, 1.77", "29.6949, 29.3153, 22.4259, 1.7", "30.3051, 31.3188, 23.0436, 0.96", "30.8056, 32.8471, 23.651, 0.66", "30.9513, 33.189, 23.8573, 0.66", "31.3207, 33.765, 24.351, 0.66", "32.0201, 34.4948, 25.2152, 0.66", "32.8433, 35.209, 26.0626, 0.66", "34.0182, 36.2702, 27.1229, 1.03", "35.0113, 37.2396, 27.911, 1.77", "36.0596, 38.3668, 28.7091, 2.36", "37.2569, 39.747, 29.5348, 1.7", "39.1822, 42.106, 30.7188, 0.52", "40.2713, 43.5207, 31.2793, 0.52", "41.1, 44.6559, 31.6702, 0.96", "42.2337, 46.3064, 32.1835, 2.14", "43.0728, 47.6154, 32.5586, 2.36", "43.9885, 49.1753, 32.9338, 1.77", "45.0694, 51.2106, 33.3585, 0.29", "45.6173, 52.3394, 33.5742, 0.29", "46.0948, 53.4466, 33.7626, 0.37", "46.7258, 55.0512, 33.9781, 0.96", "47.3143, 56.6836, 34.2061, 0.29", "47.6696, 57.6686, 34.3331, 0.29", "47.9008, 58.3055, 34.4022, 0.29", "48.3195, 59.4073, 34.4599, 0.96", "48.7403, 60.4067, 34.4824, 1.7", "49.0767, 61.1473, 34.4793, 1.7", "50.1352, 63.3382, 34.4528, 0.29", "51.0512, 65.1779, 34.4748, 0.52", "51.4681, 66.0249, 34.4992, 0.22", "52.2711, 67.6473, 34.6018, 0.29", "52.719, 68.615, 34.7056, 1.11", "53.0929, 69.4627, 34.8329, 2.06", "53.6553, 70.7438, 35.0723, 2.8", "54.2784, 72.0874, 35.3728, 2.14", "55.1579, 73.9499, 35.8837, 0.52", "56.0254, 75.7639, 36.4382, 0.52", "56.5429, 76.7956, 36.7857, 0.52", "57.2494, 78.1662, 37.2881, 0.52", "57.8259, 79.2999, 37.706, 1.18", "58.4965, 80.5868, 38.1738, 2.43", "59.1876, 81.8087, 38.5728, 2.65", "60.4009, 83.7221, 39.1262, 0.29", "61.3257, 85.0566, 39.4003, 0.29", "62.4845, 86.6173, 39.5725, 0.59", "64.0926, 88.6236, 39.482, 0.22", "65.1348, 89.8153, 39.1829, 1.03", "65.828, 90.5812, 38.8309, 0.66", "67.2105, 92.0839, 37.7841, 0.22", "67.6647, 92.5949, 37.3723, 0.22", "68.5007, 93.604, 36.5396, 1.11", "69.2348, 94.6226, 35.7866, 1.4", "70.3084, 96.2577, 34.8614, 0.22", "71.2777, 97.7445, 34.255, 0.37", "71.9347, 98.6853, 34.039, 0.81", "72.7374, 99.6941, 33.9637, 1.33", "73.7459, 100.809, 34.0866, 0.52", "75.1585, 102.15, 34.5161, 0.22", "76.0616, 102.903, 34.9364, 0.22", "76.9112, 103.623, 35.5476, 0.22", "77.8145, 104.442, 36.4376, 0.22", "78.2832, 104.925, 37.0619, 0.81", "78.9154, 105.676, 38.1029, 1.33", "79.5614, 106.526, 39.2572, 0.88", "80.8822, 108.318, 41.6503, 0.37", "81.7445, 109.51, 43.2454, 0.66", "82.1933, 110.141, 44.0929, 1.33", "82.7747, 111.054, 45.341, 2.43", "83.4776, 112.371, 47.0071, 0.29", "83.8418, 113.125, 47.8804, 0.29", "84.2265, 113.988, 48.7598, 0.29", "84.7042, 115.158, 49.8249, 1.03", "85.48, 117.22, 51.5437, 1.03", "85.9617, 118.78, 52.7327, 0.44", "86.1918, 119.819, 53.4414, 0.22", "86.313, 120.497, 53.8138, 0.44", "86.474, 121.386, 54.1832, 1.11", "86.6749, 122.283, 54.4315, 0.52", "87.0838, 123.693, 54.6738, 0.22", "87.5387, 125.142, 54.9431, 0.22", "87.8725, 126.061, 55.0964, 0.29", "88.2819, 126.928, 55.222, 0.88", "88.927, 128.068, 55.3551, 1.7", "89.5193, 129.036, 55.4603, 1.99", "90.3395, 130.294, 55.5884, 0.74", "91.5727, 132.122, 55.775, 0.29", "92.5009, 133.555, 55.9483, 0.22", "93.1271, 134.631, 56.0826, 0.22", "93.9407, 136.264, 56.296, 0.29", "94.3488, 137.256, 56.4284, 0.29", "94.577, 137.917, 56.5214, 0.88", "94.9066, 138.972, 56.7033, 1.4", "95.6118, 141.147, 57.0988, 0.22", "96.1238, 142.494, 57.3518, 0.22", "96.5738, 143.455, 57.5372, 0.88", "97.3722, 144.83, 57.8224, 1.62", "99.0028, 147.146, 58.3516, 0.22", "100.126, 148.463, 58.6794, 0.22", "100.797, 149.109, 58.8385, 0.22", "101.754, 149.899, 59.0045, 0.29", "103.068, 150.856, 59.2247, 0.22", "104.227, 151.613, 59.4114, 0.81", "104.675, 151.877, 59.4841, 0.88", "106.522, 152.957, 59.8098, 0.22", "107.119, 153.336, 59.9172, 0.74", "108.342, 154.242, 60.1509, 1.47", "109.215, 154.955, 60.3231, 0.59", "110.267, 155.85, 60.5257, 0.22", "111.148, 156.674, 60.6848, 0.22", "111.73, 157.297, 60.8017, 0.22", "112.95, 158.786, 61.0419, 0.29", "113.425, 159.448, 61.1342, 0.81", "113.903, 160.2, 61.2442, 0.96", "114.777, 161.672, 61.4212, 0.22", "115.665, 163.228, 61.5725, 0.22", "116.158, 164.1, 61.6281, 1.18", "116.714, 165.132, 61.6563, 2.29", "117.039, 165.792, 61.6624, 2.06", "118.539, 169.151, 61.6752, 0.22", "118.965, 170.193, 61.6659, 0.22", "119.304, 171.123, 61.6431, 0.29", "119.655, 172.246, 61.6255, 0.37", "119.939, 173.459, 61.6371, 0.22", "120.091, 174.443, 61.6929, 0.22", "120.148, 175.208, 61.779, 0.81", "120.239, 176.232, 61.9353, 1.62", "120.377, 177.56, 62.1847, 0.15", "120.57, 179.157, 62.497, 0.15", "120.646, 179.739, 62.602, 0.15", "120.801, 180.886, 62.8113, 0.59", "120.941, 181.976, 63.0373, 0.22", "121.036, 182.715, 63.2043, 0.22", "121.166, 183.701, 63.4572, 0.29", "121.345, 184.822, 63.7813, 0.29", "121.555, 185.877, 64.1383, 0.22", "121.72, 186.633, 64.4387, 0.81", "121.961, 187.575, 64.8486, 1.11", "122.292, 188.792, 65.3921, 0.15", "122.539, 189.736, 65.8, 0.15", "122.807, 190.908, 66.2404, 0.22", "122.969, 191.61, 66.455, 0.22", "123.204, 192.51, 66.6727, 0.37", "123.576, 193.861, 66.9558, 0.52", "123.928, 195.125, 67.1696, 0.81", "124.29, 196.474, 67.3715, 0.22", "124.565, 197.428, 67.5185, 0.29", "125.069, 198.898, 67.7609, 0.22", "125.381, 199.672, 67.9023, 1.03", "125.901, 200.8, 68.1308, 1.77", "126.197, 201.382, 68.2635, 1.77", "126.998, 202.913, 68.6587, 0.15", "127.42, 203.734, 68.8859, 0.15", "127.808, 204.479, 69.0951, 0.59", "128.151, 205.109, 69.2568, 0.74", "128.936, 206.56, 69.6095, 0.15", "129.633, 207.935, 69.932, 0.15", "129.985, 208.673, 70.1032, 0.52", "130.406, 209.573, 70.3062, 0.52", "130.932, 210.7, 70.5411, 0.15", "131.456, 211.807, 70.7397, 0.52", "132.085, 213.095, 70.9007, 0.15", "132.462, 213.821, 70.9614, 0.37", "132.983, 214.802, 71.0247, 0.22", "133.398, 215.567, 71.0784, 0.74", "134.022, 216.664, 71.1809, 1.55", "135.038, 218.254, 71.4139, 0.07", "135.728, 219.245, 71.6194, 0.15", "136.315, 220.051, 71.8451, 0.15", "136.993, 220.931, 72.1491, 0.81", "137.522, 221.593, 72.4338, 0.22", "138.494, 222.755, 73.0086, 0.22", "139.039, 223.359, 73.3723, 0.22", "139.777, 224.083, 73.8888, 1.03", "140.337, 224.521, 74.2481, 1.03", "141.746, 225.464, 75.0985, 0.15", "142.524, 225.983, 75.5395, 0.29", "143.354, 226.588, 76.0261, 0.15", "144.228, 227.211, 76.5678, 0.74", "145.476, 228.096, 77.383, 0.22", "146.116, 228.553, 77.8049, 0.22", "147.032, 229.195, 78.4245, 0.37", "147.946, 229.845, 79.0848, 0.22", "148.714, 230.418, 79.6834, 0.88", "150.113, 231.493, 80.8876, 0.15", "150.49, 231.76, 81.2544, 0.15", "151.014, 232.056, 81.7728, 0.15", "151.427, 232.25, 82.2076, 0.15", "152.01, 232.58, 82.9242, 0.15", "152.456, 233.019, 83.7248, 0.22", "152.757, 233.57, 84.5653, 0.22", "152.997, 234.218, 85.379, 0.74", "153.191, 234.897, 86.1016, 1.18", "153.466, 235.996, 87.1335, 0.29", "153.642, 236.999, 87.999, 0.29", "153.666, 237.539, 88.4527, 0.15", "153.636, 238.247, 89.0147, 0.22", "153.575, 239.037, 89.6093, 0.15", "153.529, 239.832, 90.1657, 0.29", "153.496, 240.817, 90.8062, 0.22", "153.505, 241.8, 91.4221, 0.22", "153.512, 242.227, 91.6838, 0.22", "153.547, 242.924, 92.0565, 0.22", "153.64, 243.491, 92.3642, 0.29", "153.718, 243.729, 92.5105, 0.29", "154.161, 244.656, 93.1565, 0.22", "154.656, 245.466, 93.8665, 0.22", "155.164, 246.175, 94.5975, 1.33", "156.118, 247.46, 95.9876, 0.22", "156.803, 248.334, 96.9939, 0.29", "157.453, 249.09, 97.9258, 0.15", "158.515, 250.17, 99.4158, 0.15", "158.985, 250.604, 100.112, 0.74" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999986646833033,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.31282, -10.8438, 1.06229, 5.31", "-2.31282, -10.8438, 1.06229, 5.31", "-2.79888, -12.7107, 0.605195, 4.28", "-3.65211, -15.4353, 0.0714018, 4.28", "-4.59646, -18.1492, -0.305747, 4.5", "-5.25705, -19.9284, -0.480661, 4.65", "-5.98665, -21.7858, -0.593611, 4.2", "-7.42542, -25.1738, -0.62333, 3.17", "-8.45911, -27.3686, -0.457869, 3.17", "-9.59732, -29.603, -0.175517, 3.17", "-10.2654, -30.8396, 0.0488419, 3.32", "-11.4355, -32.9658, 0.551947, 3.91", "-12.0702, -34.1154, 0.890573, 3.91", "-13.272, -36.2757, 1.66839, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999986646833033
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.07718, 9.3762, -6.17771, 1.62", "7.07718, 9.3762, -6.17771, 1.62", "7.23896, 9.59374, -6.3652, 1.62", "7.82824, 10.2537, -6.99454, 1.99", "8.50653, 10.8907, -7.68561, 2.36", "9.33319, 11.4842, -8.48298, 2.21", "10.4974, 12.1042, -9.5395, 1.92", "11.4594, 12.5542, -10.3986, 1.11", "12.26, 12.8415, -11.0936, 0.81", "12.9255, 12.9676, -11.6341, 1.18", "14.1884, 12.9668, -12.5993, 1.77", "15.036, 12.7719, -13.1645, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999986646833033
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-5.12283, -1.2038, 15.0323, 2.73", "-5.12283, -1.2038, 15.0323, 2.73", "-5.82874, -1.02033, 15.8452, 2.29", "-6.7597, -0.632804, 16.8797, 1.92", "-7.84852, -0.0650911, 18.0804, 1.92", "-8.76548, 0.46802, 19.0822, 1.92", "-9.95184, 1.15775, 20.3783, 2.14", "-10.9472, 1.81774, 21.4678, 1.99", "-11.6492, 2.38556, 22.2389, 2.65", "-12.6099, 3.31469, 23.2921, 3.1", "-13.3076, 4.04382, 24.0042, 3.1" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999986646833033
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.91717, -2.2938, -5.36771, 6.12", "4.91717, -2.2938, -5.36771, 6.12", "5.59482, -4.89798, -5.36771, 4.79", "5.60888, -4.95203, -5.36771, 4.79" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999986646833033
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.51549, 13.8392, -0.00285007, 0.905618", "9.44069, 28.0076, -0.00285007, 0.905618", "14.3659, 42.1759, -0.00285007, 0.905618" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-13.272, -36.2757, 1.66839, 1.84", "-13.6936, -36.6113, 2.54568, 1.84", "-14.4589, -37.1311, 3.85154, 1.55", "-15.2496, -37.6189, 5.00827, 1.55", "-16.1642, -38.1504, 6.18625, 1.55", "-16.9286, -38.5524, 7.07913, 1.55", "-17.6739, -38.9025, 7.90658, 0.74", "-18.1167, -39.0531, 8.31726, 0.74", "-18.6876, -39.161, 8.73892, 0.74", "-19.4203, -39.184, 9.20363, 0.52", "-19.98, -39.0904, 9.5474, 0.52", "-20.4925, -38.9235, 9.8865, 0.74", "-20.9981, -38.7381, 10.258, 1.4", "-21.545, -38.5531, 10.6946, 1.7", "-22.42, -38.3382, 11.4321, 0.66", "-23.1877, -38.2945, 12.0951, 0.52", "-23.6953, -38.4484, 12.5562, 0.59", "-24.4097, -38.8903, 13.2347, 0.66", "-24.8271, -39.2298, 13.6601, 1.47", "-25.3134, -39.6888, 14.2101, 2.58", "-25.7692, -40.1821, 14.7872, 2.36", "-26.4971, -41.0613, 15.8778, 0.74", "-26.8692, -41.5377, 16.5696, 1.03", "-27.1488, -41.9447, 17.3228, 1.18", "-27.2978, -42.2513, 18.0635, 1.18", "-27.334, -42.3843, 18.5086, 1.33", "-27.3766, -42.565, 19.1841, 1.33", "-27.4632, -42.7984, 19.968, 1.33", "-27.6688, -43.1063, 20.6683, 1.33", "-28.097, -43.5913, 21.399, 1.33", "-28.7429, -44.1672, 22.022, 0.66", "-29.5347, -44.7738, 22.5226, 1.11", "-30.2082, -45.2419, 22.8521, 1.84", "-31.0283, -45.7794, 23.1971, 1.99", "-31.7684, -46.2812, 23.5736, 1.18", "-32.7325, -46.9901, 24.1695, 0.44", "-33.6993, -47.7617, 24.9331, 0.37", "-34.1764, -48.1371, 25.4269, 0.52", "-34.6903, -48.5241, 26.1117, 0.88", "-35.9809, -49.3701, 28.1318, 0.81", "-36.4849, -49.6272, 28.9807, 1.4", "-37.0187, -49.8065, 29.8842, 1.4", "-37.7817, -49.9239, 31.1109, 1.11", "-38.3557, -49.9225, 31.9279, 0.74", "-38.9403, -49.8233, 32.6523, 1.33", "-39.6152, -49.6076, 33.3689, 0.44", "-40.4838, -49.1995, 34.3144, 0.29", "-40.8772, -48.9701, 34.7582, 0.29", "-41.3587, -48.6649, 35.3104, 1.11", "-41.9537, -48.2835, 36.013, 2.43", "-42.3361, -48.0336, 36.5009, 1.92", "-43.101, -47.5801, 37.5349, 0.29", "-43.3989, -47.4431, 37.9401, 0.29", "-43.7308, -47.3438, 38.3549, 0.29", "-44.2489, -47.254, 38.9666, 0.52", "-44.5518, -47.2306, 39.317, 0.59", "-45.1248, -47.1875, 39.9823, 0.22", "-45.4984, -47.0844, 40.4361, 0.22", "-45.7732, -46.956, 40.783, 0.22", "-46.011, -46.8193, 41.102, 1.18", "-46.4725, -46.4951, 41.7567, 2.36", "-46.8128, -46.2142, 42.2735, 2.21", "-47.7263, -45.3519, 43.7757, 0.22", "-48.0141, -45.0897, 44.2774, 0.22", "-48.2518, -44.8889, 44.7292, 0.22", "-48.3618, -44.806, 44.9414, 0.22", "-48.5366, -44.6961, 45.2642, 0.22", "-48.7722, -44.5582, 45.7358, 0.22", "-49.0626, -44.3671, 46.4132, 0.52", "-49.3168, -44.1705, 47.0857, 1.25", "-49.5215, -43.996, 47.6732, 1.47", "-49.959, -43.6627, 48.9064, 0.44", "-50.2783, -43.4639, 49.8391, 1.03", "-50.5896, -43.2879, 50.8003, 2.14", "-50.8662, -43.1378, 51.6575, 2.14", "-51.2448, -42.9336, 52.8487, 0.74", "-51.4782, -42.8055, 53.6094, 1.03", "-51.809, -42.6326, 54.6449, 0.37", "-51.9852, -42.5557, 55.103, 0.37", "-52.3667, -42.4169, 56.0018, 0.59", "-52.7663, -42.2971, 56.8839, 0.44", "-53.1397, -42.1874, 57.6727, 1.33", "-53.5548, -42.037, 58.503, 2.06", "-54.2485, -41.764, 59.8125, 0.37", "-54.4901, -41.683, 60.2518, 0.37", "-54.7513, -41.6189, 60.6904, 0.37", "-55.3315, -41.5004, 61.5436, 0.59", "-56.0635, -41.3453, 62.5533, 0.29", "-56.5435, -41.2375, 63.1944, 1.4", "-57.1204, -41.0998, 63.9609, 2.58", "-57.9411, -40.9043, 65.0474, 0.29", "-58.1673, -40.8624, 65.3563, 0.37", "-58.5548, -40.8321, 65.9306, 0.29", "-58.8852, -40.8167, 66.4778, 0.29", "-59.1458, -40.7942, 66.9433, 0.81", "-59.4441, -40.754, 67.5535, 1.92", "-59.848, -40.706, 68.4847, 0.22", "-60.106, -40.7076, 69.0473, 0.22", "-60.3903, -40.7482, 69.5722, 0.22", "-60.4781, -40.7662, 69.7178, 0.22", "-60.7605, -40.829, 70.1159, 0.22", "-61.0662, -40.8808, 70.4619, 0.44", "-61.4425, -40.9127, 70.7921, 0.44", "-61.8675, -40.9076, 71.0698, 0.22", "-62.211, -40.8657, 71.281, 0.22", "-62.5491, -40.7753, 71.543, 0.66", "-63.1994, -40.5129, 72.1313, 1.62", "-63.4837, -40.3845, 72.4153, 1.11", "-64.0751, -40.1185, 73.0564, 0.59", "-64.6181, -39.9196, 73.6751, 0.66", "-65.4656, -39.7049, 74.6525, 0.29", "-65.6807, -39.6744, 74.9098, 0.29", "-66.1736, -39.6754, 75.5057, 0.59", "-66.4481, -39.7029, 75.8369, 0.29", "-66.9394, -39.7857, 76.4042, 0.29", "-67.2625, -39.8475, 76.7238, 0.96", "-67.7334, -39.9236, 77.1334, 1.62", "-68.7593, -40.0375, 78.0024, 0.29", "-69.2908, -40.0629, 78.4327, 0.29", "-69.8548, -40.058, 78.8693, 0.66", "-70.5401, -40.031, 79.3955, 0.29", "-71.2521, -39.9991, 79.9331, 0.29", "-71.7245, -39.978, 80.2823, 0.96", "-72.5011, -39.9435, 80.8466, 2.14", "-73.4801, -39.9051, 81.5753, 0.29", "-73.9301, -39.8775, 81.9206, 0.29", "-74.3209, -39.8426, 82.2207, 0.52", "-74.9028, -39.7949, 82.6753, 1.11", "-75.7987, -39.7239, 83.3838, 0.22", "-76.2748, -39.6773, 83.7644, 0.22", "-76.9522, -39.5766, 84.2771, 0.74", "-77.5719, -39.4485, 84.7315, 0.29", "-78.0703, -39.2999, 85.1057, 0.29", "-78.3882, -39.176, 85.3485, 0.66", "-78.9048, -38.9146, 85.769, 1.03", "-79.7031, -38.4536, 86.4822, 0.22", "-79.8837, -38.3393, 86.6607, 0.22", "-80.3658, -38.0333, 87.1625, 0.81", "-80.5701, -37.9051, 87.3824, 0.81", "-81.0323, -37.6467, 87.9078, 0.22", "-81.2771, -37.5306, 88.1961, 0.22", "-81.6843, -37.3684, 88.6843, 0.81", "-82.2741, -37.1423, 89.3884, 0.22", "-82.5152, -37.0515, 89.6789, 0.22", "-82.9, -36.8838, 90.141, 0.88", "-83.2937, -36.6908, 90.6105, 1.4", "-83.9844, -36.2905, 91.47, 0.22", "-84.3402, -36.0614, 91.9394, 0.81", "-84.8239, -35.7367, 92.6078, 0.15", "-85.3296, -35.4191, 93.3019, 0.22", "-85.5097, -35.3218, 93.5486, 0.22", "-85.7928, -35.2129, 93.9398, 0.15", "-86.1453, -35.1194, 94.438, 0.37", "-86.6223, -35.0274, 95.1552, 0.22", "-86.7801, -35.0043, 95.418, 0.88", "-87.2618, -34.9556, 96.2714, 1.99", "-88.0262, -34.8748, 97.6801, 0.22", "-88.3756, -34.8324, 98.3658, 0.88", "-88.8945, -34.7639, 99.4896, 0.07", "-89.1305, -34.7404, 100.055, 0.07", "-89.245, -34.7346, 100.353, 0.44", "-89.6596, -34.7715, 101.428, 0.07", "-89.8852, -34.8239, 101.983, 0.44", "-90.3426, -34.9774, 102.97, 0.15", "-90.6889, -35.1131, 103.596, 0.81", "-90.9527, -35.2159, 104.006, 1.55", "-91.7972, -35.5472, 105.164, 0.22", "-92.1564, -35.7057, 105.593, 0.66", "-92.6015, -35.9306, 106.083, 1.4", "-93.5162, -36.468, 107.019, 0.22", "-93.924, -36.7669, 107.432, 0.66", "-94.3123, -37.1609, 107.845, 0.29", "-94.5781, -37.6138, 108.157, 0.15", "-94.8586, -38.31, 108.505, 0.15", "-94.9693, -38.7092, 108.666, 0.59", "-95.1107, -39.4219, 108.909, 1.03", "-95.2335, -40.0402, 109.118, 0.37", "-95.3744, -40.6323, 109.318, 0.22", "-95.642, -41.4336, 109.606, 0.37", "-95.8572, -41.9303, 109.791, 0.22", "-96.1207, -42.4319, 109.995, 0.22", "-96.2912, -42.7093, 110.115, 0.81", "-96.5816, -43.1839, 110.368, 1.47", "-96.9278, -43.7815, 110.747, 0.66", "-97.1334, -44.1846, 111.023, 0.22", "-97.4702, -44.8582, 111.514, 0.22", "-97.7175, -45.3846, 111.942, 1.11", "-98.0931, -46.3532, 112.81, 0.37", "-98.3381, -47.0776, 113.524, 0.22", "-98.5191, -47.6507, 114.155, 0.22", "-98.6575, -48.1409, 114.744, 0.96", "-98.8168, -48.7783, 115.539, 0.15", "-98.9767, -49.4147, 116.359, 0.44", "-99.0461, -49.6874, 116.699, 0.44", "-99.136, -50.1313, 117.249, 0.22", "-99.2004, -50.6487, 117.88, 0.88", "-99.2114, -50.9282, 118.196, 0.88", "-99.2036, -51.6844, 118.996, 0.22", "-99.1491, -52.0767, 119.41, 0.22", "-99.0605, -52.4005, 119.756, 0.37", "-98.7995, -53.1308, 120.541, 0.66", "-98.4906, -53.9132, 121.452, 0.22", "-98.2255, -54.5225, 122.188, 0.66", "-97.8563, -55.3167, 123.187, 0.29", "-97.6363, -55.7884, 123.816, 0.52", "-97.3082, -56.4759, 124.812, 0.22", "-97.0032, -57.0766, 125.77, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-13.272, -36.2757, 1.66839, 2.65", "-13.7052, -40.5015, 1.06944, 2.65", "-14.0373, -43.7412, 0.610277, 2.65", "-14.3362, -46.6564, 0.197085, 2.65", "-14.5493, -48.7357, -0.0976175, 2.95", "-14.7571, -50.7626, -0.3849, 2.95" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "15.036, 12.7719, -13.1645, 1.33", "16.4329, 12.5402, -13.1556, 1.33", "18.3012, 12.2979, -13.3633, 0.81", "19.8466, 12.0942, -13.6902, 0.96", "21.3704, 11.9491, -14.1222, 1.25", "22.7446, 11.9341, -14.5915, 0.74", "24.2155, 12.0634, -15.1374, 1.11", "25.0974, 12.3082, -15.5469, 1.11", "26.1737, 12.8321, -16.1233, 1.55", "27.3839, 13.6475, -16.8359, 0.52", "28.6184, 14.6415, -17.6058, 0.66", "29.5944, 15.4964, -18.2122, 0.52", "30.5725, 16.4823, -18.7973, 0.81", "31.3798, 17.387, -19.2512, 0.44", "32.1985, 18.4133, -19.706, 0.29", "32.6498, 18.9804, -19.9678, 0.15", "33.0387, 19.356, -20.1949, 0.15", "41.923, 23.2889, -25.3737, 0.15" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.036, 12.7719, -13.1645, 1.92", "15.074, 12.7557, -13.2796, 1.92", "15.3851, 12.5546, -14.6025, 1.92", "15.6574, 12.2094, -15.926, 1.11", "15.8077, 12.0269, -16.4175, 1.11", "16.0294, 11.817, -16.9415, 1.11", "16.2063, 11.7047, -17.282, 1.11", "16.6541, 11.5565, -17.9589, 1.11", "17.4773, 11.5779, -18.7283, 1.4", "18.6034, 11.7545, -19.4209, 1.55", "19.2728, 11.855, -19.7339, 1.55", "20.3892, 12.0174, -20.1292, 0.81", "21.0628, 12.118, -20.3106, 0.81", "21.8198, 12.2504, -20.443, 1.03", "22.8614, 12.4788, -20.5596, 0.81", "23.9056, 12.7231, -20.6066, 1.11", "25.1258, 12.9295, -20.6332, 0.37", "25.7551, 12.9843, -20.6267, 0.81", "26.6188, 13.0322, -20.5815, 0.66", "27.1229, 13.063, -20.5411, 0.44", "27.8087, 13.1785, -20.4409, 0.52", "33.3815, 12.1753, -25.458, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-13.3076, 4.04382, 24.0042, 1.55", "-13.1431, 3.08186, 25.0001, 1.55", "-12.7312, 1.7813, 26.3854, 1.33", "-12.004, 0.431757, 28.0414, 0.81", "-11.2107, -0.333053, 29.5571, 0.37", "-10.8734, -0.539187, 30.1426, 0.59", "-10.4409, -0.803575, 30.8934, 1.11", "-9.56758, -1.13296, 32.1448, 0.74", "-8.56967, -1.27392, 33.3848, 1.4", "-6.08082, -1.06297, 36.3911, 2.51", "-5.39961, -0.895294, 37.2715, 3.24" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-13.3076, 4.04382, 24.0042, 0.37", "-12.148, 5.75574, 23.4617, 0.37", "-11.7241, 6.45128, 23.3556, 0.37", "-11.1986, 7.48805, 23.2682, 0.59", "-10.7202, 8.68142, 23.1789, 0.22", "-10.5311, 9.31537, 23.1357, 0.44", "-10.3364, 10.3499, 23.0503, 1.33", "-10.4256, 11.9682, 22.9204, 0.44", "-10.6893, 12.8305, 22.8718, 0.44", "-11.1213, 13.6964, 22.8234, 0.88", "-11.5598, 14.3938, 22.7786, 1.77", "-12.196, 15.2882, 22.7206, 1.92", "-13.5079, 16.9801, 22.6129, 0.44", "-14.152, 17.768, 22.6132, 0.44", "-14.5248, 18.2207, 22.6442, 0.44", "-15.2257, 19.049, 22.7526, 1.55", "-15.9817, 19.8707, 22.8939, 2.43", "-16.5006, 20.388, 23.0339, 1.77", "-18.1991, 21.9503, 23.6692, 0.52", "-18.9218, 22.5612, 23.9315, 1.77", "-19.6579, 23.1409, 24.2026, 2.06", "-21.1121, 24.1818, 24.7485, 0.52", "-22.2596, 24.9352, 25.1932, 0.81", "-23.4582, 25.656, 25.6742, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.60888, -4.95203, -5.36771, 2.58", "4.25444, -4.53952, -6.21765, 2.58", "3.18245, -4.17875, -6.80505, 2.58", "1.47698, -3.51143, -7.6557, 1.4", "0.180382, -2.96062, -8.23806, 0.96", "-1.45628, -2.26762, -8.90212, 0.96", "-3.149, -1.59393, -9.53816, 0.96", "-4.48014, -1.08876, -9.92927, 1.18", "-5.93971, -0.607334, -10.2442, 1.11", "-7.19683, -0.207883, -10.4521, 0.88", "-8.67605, 0.255727, -10.6141, 1.18", "-9.85772, 0.591039, -10.6806, 0.88", "-10.8476, 0.79547, -10.7313, 1.47", "-11.8591, 0.86291, -10.7596, 1.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.60888, -4.95203, -5.36771, 4.06", "5.51272, -7.2816, -5.86225, 4.06", "5.43184, -9.24143, -6.27831, 4.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.3659, 42.1759, -0.00285007, 0.15", "19.2911, 56.3443, -0.00285007, 0.15", "24.2163, 70.5126, -0.00285007, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-14.7571, -50.7626, -0.3849, 1.7", "-13.8973, -51.5629, -0.572019, 1.7", "-13.0662, -52.2006, -0.758934, 0.52", "-12.4417, -52.6034, -0.893095, 0.88", "-11.4799, -53.1, -1.07939, 0.37", "-10.7814, -53.4054, -1.22813, 0.37", "-9.96839, -53.7333, -1.4208, 0.88", "-8.99955, -54.0762, -1.68852, 1.25", "-8.2918, -54.3274, -1.89928, 1.18", "-7.20112, -54.7564, -2.25497, 0.59", "-6.21097, -55.233, -2.63497, 0.81", "-5.56961, -55.6617, -2.93147, 0.52", "-5.09148, -56.1135, -3.21275, 0.74", "-4.38672, -56.9901, -3.72591, 1.03", "-3.87207, -57.7593, -4.12061, 1.03", "-3.37547, -58.5862, -4.47975, 1.33", "-2.88081, -59.4177, -4.75976, 1.18", "-2.24844, -60.4135, -5.00372, 1.4", "-1.79433, -61.0543, -5.09106, 0.88", "-0.800138, -62.3007, -5.0563, 0.37", "-0.284954, -62.8867, -4.91795, 0.37", "0.270439, -63.4739, -4.6534, 0.88", "0.73834, -63.9591, -4.34994, 1.4", "1.2531, -64.529, -3.9501, 1.03", "1.53685, -64.8892, -3.71005, 0.74", "2.01665, -65.6464, -3.30076, 0.29", "2.34534, -66.2817, -3.0982, 0.29", "2.55528, -66.7514, -3.02866, 0.29", "2.91668, -67.659, -3.00702, 0.29", "3.15577, -68.2725, -3.01999, 0.88", "3.49688, -69.0938, -3.065, 1.47", "3.90668, -69.9905, -3.12534, 1.77", "4.20941, -70.5422, -3.15145, 1.7", "4.81037, -71.4434, -3.17309, 0.66", "5.50919, -72.3007, -3.1853, 0.22", "5.78992, -72.5933, -3.20855, 0.22", "6.32008, -73.072, -3.2971, 0.22", "6.75408, -73.4489, -3.40841, 0.22", "7.30974, -73.9717, -3.58847, 0.44", "7.87093, -74.5332, -3.78972, 1.47", "8.48536, -75.1977, -4.04485, 2.43", "8.93036, -75.706, -4.22965, 2.43", "10.0598, -77.0718, -4.691, 0.66", "10.8502, -78.1048, -4.98271, 0.59", "11.448, -78.9507, -5.16523, 0.81", "11.9439, -79.7343, -5.27263, 0.22", "12.225, -80.2717, -5.32279, 0.29", "12.5077, -80.9952, -5.36842, 0.29", "12.707, -81.8743, -5.40071, 0.74", "12.8468, -82.8354, -5.43304, 1.18", "12.9683, -83.8974, -5.47045, 1.84", "13.1211, -85.1309, -5.502, 1.99", "13.2909, -86.2182, -5.53491, 1.18", "13.6481, -87.8025, -5.56852, 0.44", "13.9286, -88.662, -5.58154, 0.37", "14.2597, -89.414, -5.58909, 0.37", "14.6463, -90.1268, -5.61517, 0.88", "15.1063, -90.8411, -5.63696, 1.92", "15.7054, -91.6647, -5.6811, 2.21", "16.3957, -92.5415, -5.71788, 1.11", "17.2434, -93.6228, -5.75922, 0.52", "17.7189, -94.2441, -5.8024, 1.18", "18.2008, -94.889, -5.8853, 1.77", "18.7744, -95.6598, -6.04292, 1.25" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-14.7571, -50.7626, -0.3849, 2.8", "-15.1409, -51.3171, -0.732383, 2.8", "-15.8587, -52.3542, -1.38233, 2.21" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "41.923, 23.2889, -25.3737, 0.22", "48.8897, 26.1972, -28.4425, 0.22", "56.3688, 27.4165, -31.4403, 0.22", "63.8521, 29.0295, -34.2347, 0.22", "71.3766, 31.4773, -36.1841, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "41.923, 23.2889, -25.3737, 0.22", "52.0077, 27.1531, -29.9652, 0.22", "61.426, 31.0569, -35.7764, 0.22", "71.6963, 35.2022, -39.6563, 0.22", "82.1747, 38.6203, -43.6855, 0.22", "92.7451, 42.9784, -46.3289, 0.22", "103.403, 46.7618, -49.4635, 0.22", "113.404, 50.7915, -54.095, 0.22", "122.526, 55.1904, -60.0246, 0.22", "132.573, 58.235, -65.2688, 0.22", "143.342, 61.6394, -68.4527, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "33.3815, 12.1753, -25.458, 0.22", "39.2594, 9.51853, -24.9272, 0.22", "45.3865, 7.59312, -24.1267, 0.22", "51.7655, 6.49819, -24.1393, 0.22", "57.9488, 4.83827, -23.1902, 0.22", "64.3234, 3.86713, -22.6321, 0.22", "70.7513, 3.35028, -22.0804, 0.22", "76.9379, 1.97631, -20.7658, 0.22", "83.2762, 0.68684, -20.5353, 0.22", "89.2911, -1.32274, -19.2419, 0.22", "95.3691, -3.22372, -18.0872, 0.22", "101.225, -5.77286, -17.0341, 0.22", "107.159, -7.68375, -15.2941, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "33.3815, 12.1753, -25.458, 0.22", "37.4537, 15.6526, -30.1061, 0.22", "40.2441, 18.4769, -35.9812, 0.22", "43.0274, 21.7995, -41.5932, 0.22", "46.3144, 25.875, -46.375, 0.22", "50.0298, 28.7029, -51.7116, 0.22", "54.8968, 31.7618, -55.8632, 0.22", "59.9811, 35.4996, -59.0972, 0.22", "64.7692, 39.6381, -62.2951, 0.22", "70.544, 43.3352, -64.1018, 0.22", "76.1399, 47.6485, -64.7028, 0.22", "81.7913, 51.8399, -63.8228, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.39961, -0.895294, 37.2715, 0.59", "-5.72562, -3.24742, 38.536, 0.59", "-5.74132, -4.17779, 39.0559, 1.55", "-5.67099, -5.13838, 39.6281, 2.14", "-5.56945, -6.14418, 40.2742, 0.96", "-5.476, -7.28545, 41.0613, 0.52", "-5.42391, -8.39506, 41.8618, 0.52", "-5.34127, -9.34861, 42.6709, 1.11", "-5.34525, -9.81546, 43.1361, 1.11", "-5.45998, -10.4584, 43.8738, 1.11", "-5.66851, -11.2006, 44.8209, 1.84", "-5.87398, -11.7756, 45.6162, 2.43", "-6.26062, -12.6733, 47.0891, 1.03", "-6.59793, -13.3124, 48.2276, 1.7", "-6.93864, -13.9897, 49.4227, 1.25", "-7.28491, -14.7946, 50.7886, 2.51", "-7.61205, -15.5819, 52.1327, 2.51", "-8.17858, -16.8993, 54.368, 1.77", "-8.68914, -18.0191, 56.1862, 1.25", "-9.05737, -18.7548, 57.2998, 0.37", "-9.34447, -19.2765, 58.0137, 0.59", "-9.69392, -19.8394, 58.6654, 0.59", "-10.1707, -20.5703, 59.3176, 0.22", "-10.5637, -21.1584, 59.7208, 0.52", "-10.9537, -21.6877, 60.0559, 0.37", "-11.3152, -22.1029, 60.3122, 1.33", "-11.8385, -22.6567, 60.6443, 1.92", "-13.1718, -24.0291, 61.431, 0.29", "-13.6227, -24.4802, 61.6691, 1.11", "-14.0457, -24.9171, 61.8945, 1.7", "-15.237, -26.2033, 62.5507, 0.15", "-15.771, -26.7844, 62.8785, 0.74", "-16.5042, -27.5918, 63.355, 0.22", "-16.9961, -28.135, 63.6779, 0.74", "-17.5995, -28.8132, 64.1253, 0.22", "-18.0866, -29.3925, 64.5845, 0.66", "-18.8205, -30.3443, 65.4696, 0.15", "-19.0934, -30.7405, 65.9099, 0.15", "-19.322, -31.1014, 66.3855, 0.74", "-19.817, -31.9382, 67.5888, 0.37", "-20.2373, -32.744, 68.8465, 1.03", "-20.4412, -33.183, 69.5766, 1.7", "-20.8836, -34.1785, 71.4029, 0.44", "-21.2184, -34.8463, 72.7827, 0.74", "-21.4478, -35.2455, 73.6787, 1.7", "-22.0626, -36.1612, 75.7754, 0.15", "-22.3517, -36.5329, 76.6018, 0.52", "-22.7891, -37.0377, 77.7518, 0.22", "-23.2002, -37.4672, 78.7327, 0.66", "-23.7043, -37.9546, 79.8472, 0.22", "-24.2688, -38.4246, 80.9894, 0.15", "-24.6381, -38.6897, 81.5664, 0.88" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.39961, -0.895294, 37.2715, 2.21", "-4.37587, -0.311505, 37.6511, 2.21", "-3.20901, 0.5876, 38.1417, 0.59", "-2.40625, 1.41125, 38.5311, 0.59", "-2.02914, 1.93492, 38.7788, 1.03", "-1.63334, 2.68002, 39.1828, 0.29", "-1.36735, 3.29913, 39.6074, 0.29", "-1.20107, 4.01904, 40.2124, 1.4", "-1.16321, 4.51642, 40.7608, 0.74", "-1.13875, 5.10306, 41.6021, 0.37", "-1.09036, 5.79401, 42.7324, 0.74", "-1.00095, 6.57168, 44.1288, 1.7", "-0.900081, 7.09067, 45.0621, 2.65", "-0.655827, 8.07374, 46.8302, 1.25", "-0.406761, 8.90379, 48.3434, 1.55", "-0.166893, 9.67979, 49.819, 2.73", "-0.118759, 9.84409, 50.1444, 2.73", "0.119727, 10.6844, 51.897, 0.66", "0.282533, 11.2337, 53.1924, 1.33", "0.468809, 11.8936, 54.9103, 2.36", "0.705862, 12.7623, 57.3635, 1.99", "0.825743, 13.1334, 58.5858, 1.99", "1.04986, 13.6689, 60.5885, 1.62", "1.32685, 14.1742, 62.7597, 1.92", "1.66267, 14.5962, 64.6325, 0.44", "1.85112, 14.7755, 65.3373, 0.44", "2.11805, 14.967, 65.9967, 0.44", "2.43278, 15.1704, 66.611, 0.74", "2.77023, 15.3617, 67.1162, 0.96", "3.65175, 15.7806, 68.1518, 0.52", "4.58554, 16.1556, 69.1306, 0.37", "5.17838, 16.4221, 69.7467, 1.18", "5.68226, 16.6936, 70.278, 1.7", "6.4988, 17.2096, 71.152, 0.22", "6.9371, 17.5343, 71.6356, 0.22", "7.04065, 17.6308, 71.7507, 0.22", "7.35502, 17.9595, 72.0774, 0.52", "7.71928, 18.3588, 72.4314, 0.52", "8.20627, 18.9035, 72.8782, 0.22", "8.66917, 19.4133, 73.3051, 1.25", "9.20713, 19.963, 73.8191, 1.47", "10.1754, 20.8428, 74.7265, 0.29", "10.6626, 21.2485, 75.1845, 0.96", "11.1535, 21.6478, 75.6511, 1.25", "11.7955, 22.2336, 76.3292, 0.29", "12.2602, 22.7617, 76.9148, 0.29", "12.3918, 22.9592, 77.1301, 0.29", "12.6012, 23.3693, 77.5471, 0.81", "12.8435, 23.855, 77.9772, 0.81", "13.2643, 24.6713, 78.7027, 0.29", "13.5381, 25.1731, 79.143, 0.29", "13.7834, 25.5034, 79.4612, 0.29", "14.3827, 26.1505, 80.1739, 0.52", "15.2143, 26.9007, 81.0819, 0.37", "16.0616, 27.5871, 81.9624, 1.4", "16.52, 27.9374, 82.4213, 1.92", "17.5471, 28.6991, 83.5027, 0.22", "18.0289, 29.0356, 84.0537, 0.22", "18.3433, 29.2365, 84.4527, 0.59", "18.638, 29.4158, 84.8432, 0.74", "19.1159, 29.7306, 85.4387, 0.37", "19.688, 30.1516, 86.1805, 0.37", "20.1472, 30.5269, 86.7502, 0.81", "20.4498, 30.7675, 87.0873, 0.81", "20.7969, 31.0423, 87.4738, 0.96", "21.5825, 31.6433, 88.3444, 0.44", "22.0161, 31.9628, 88.8232, 0.44", "22.7308, 32.4998, 89.5988, 1.11", "23.4417, 33.0292, 90.3933, 0.29", "24.0397, 33.4612, 91.0976, 0.59", "24.4056, 33.7196, 91.5704, 0.22", "24.7353, 33.9605, 92.0645, 0.22", "24.8528, 34.0672, 92.259, 0.22", "25.0833, 34.2853, 92.6711, 0.22", "25.4255, 34.5853, 93.219, 0.22", "25.7637, 34.8862, 93.7265, 0.59", "26.1523, 35.2654, 94.3113, 1.33", "26.7941, 35.9468, 95.2639, 0.37", "27.38, 36.589, 96.0885, 0.52", "27.7523, 36.9994, 96.5555, 0.22", "28.0232, 37.3066, 96.8636, 0.22", "28.3109, 37.6588, 97.1247, 0.44", "28.6939, 38.1573, 97.3955, 0.66", "29.1817, 38.8202, 97.6578, 0.37", "29.6987, 39.5424, 97.8876, 1.18", "30.0408, 39.9882, 98.0242, 1.55", "31.0773, 41.2433, 98.4279, 0.29", "31.3801, 41.5995, 98.546, 0.29", "31.6992, 41.9685, 98.6681, 0.81", "32.3076, 42.6691, 98.8959, 1.84", "33.3164, 43.8616, 99.2644, 0.22", "33.8291, 44.4985, 99.4635, 0.44", "34.214, 45.0199, 99.6386, 0.44", "34.7321, 45.7791, 99.8928, 0.22", "35.1468, 46.4899, 100.128, 0.74", "35.5265, 47.2746, 100.37, 0.37", "35.7945, 47.9212, 100.587, 0.29", "35.9782, 48.3836, 100.761, 0.81", "36.1553, 48.8508, 100.958, 1.03", "36.6577, 50.1741, 101.57, 0.22", "36.8713, 50.6638, 101.817, 0.44", "37.3311, 51.5486, 102.299, 0.22", "37.6803, 52.1298, 102.62, 0.81", "37.9648, 52.5569, 102.858, 0.81", "38.5988, 53.4036, 103.372, 0.22", "39.2232, 54.1726, 103.886, 0.22", "39.5774, 54.6404, 104.204, 0.22", "39.8498, 55.0492, 104.472, 0.52", "40.0779, 55.4227, 104.707, 0.52", "40.4836, 56.1417, 105.185, 0.15", "40.7289, 56.6426, 105.523, 0.15", "40.9305, 57.1214, 105.844, 0.15", "41.0463, 57.4069, 106.041, 0.37", "41.3193, 58.0544, 106.508, 0.07", "41.7042, 58.9474, 107.123, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-23.4582, 25.656, 25.6742, 0.22", "-23.6641, 27.0426, 26.9187, 0.22", "-23.846, 27.8305, 27.5693, 0.37", "-24.1131, 28.9898, 28.4555, 1.11", "-24.3108, 29.9959, 29.1737, 2.51", "-24.4472, 30.9329, 29.8072, 3.17", "-24.6576, 32.8238, 31.058, 0.22", "-24.7405, 33.3928, 31.3954, 0.22", "-24.8218, 33.9938, 31.7112, 0.52", "-24.8939, 34.6417, 32.0199, 0.88", "-24.9168, 35.7234, 32.529, 0.22", "-24.865, 36.556, 32.9268, 0.22", "-24.8231, 36.9019, 33.1125, 0.59", "-24.7907, 37.6104, 33.523, 1.4", "-24.8924, 38.5396, 34.0967, 0.22", "-25.0343, 39.1789, 34.4844, 0.22", "-25.1235, 39.4896, 34.6576, 0.22", "-25.3661, 40.3033, 35.0663, 0.52", "-25.6004, 40.982, 35.3822, 0.81", "-26.1266, 42.3714, 35.9887, 0.22", "-26.3909, 43.0358, 36.2546, 0.22", "-26.8054, 44.0306, 36.6234, 0.81", "-27.1751, 44.9399, 36.925, 0.22", "-27.5735, 45.9691, 37.2027, 0.22", "-27.7674, 46.5224, 37.3431, 0.37", "-28.0029, 47.1859, 37.524, 1.47", "-28.2593, 47.7827, 37.6997, 2.58", "-28.6643, 48.6353, 37.9745, 2.58", "-29.5405, 50.4603, 38.5851, 0.22", "-29.8865, 51.2372, 38.8466, 0.22", "-30.3805, 52.4154, 39.2411, 0.81", "-30.8208, 53.5257, 39.641, 0.22", "-31.0589, 54.1686, 39.907, 0.22", "-31.2471, 54.7093, 40.1595, 0.44", "-31.4872, 55.4632, 40.5346, 0.88", "-31.7775, 56.3791, 40.9837, 0.37", "-32.0244, 57.2701, 41.4017, 0.37", "-32.2374, 58.0827, 41.7734, 1.03", "-32.4323, 58.7282, 42.053, 2.14", "-32.6736, 59.4114, 42.351, 2.14", "-33.2038, 60.6684, 42.8875, 0.22", "-33.5334, 61.3401, 43.1604, 0.22", "-33.6468, 61.5724, 43.2454, 0.22", "-33.8266, 61.955, 43.3787, 0.22", "-33.9997, 62.3423, 43.5263, 0.52", "-34.2993, 63.0034, 43.81, 0.96", "-34.7949, 63.9357, 44.2928, 0.29", "-35.2039, 64.6433, 44.7011, 0.44", "-35.5422, 65.2197, 45.0518, 0.22", "-35.8782, 65.7999, 45.4143, 1.03", "-36.194, 66.3811, 45.7505, 1.55", "-36.8433, 67.6792, 46.4634, 0.15", "-37.2075, 68.4416, 46.8594, 0.15", "-37.4045, 68.849, 47.0675, 0.66", "-37.8099, 69.6545, 47.486, 1.47", "-38.607, 71.1543, 48.2846, 0.22", "-39.0122, 71.8877, 48.6843, 0.22", "-39.3147, 72.4399, 48.9762, 0.66", "-39.8071, 73.2635, 49.4338, 0.22", "-40.129, 73.7764, 49.7367, 0.22", "-40.4498, 74.233, 50.0299, 0.22", "-40.7044, 74.5518, 50.2581, 0.22", "-41.0051, 74.9413, 50.5326, 0.22", "-41.4817, 75.6307, 51.0118, 0.22", "-41.7805, 76.1272, 51.3294, 0.88", "-42.316, 77.0358, 51.8924, 1.92", "-43.0678, 78.2042, 52.6426, 0.22", "-43.4405, 78.7289, 53.0051, 0.22", "-43.6853, 79.057, 53.2484, 0.22", "-43.8768, 79.3141, 53.4394, 0.22", "-44.4162, 80.0881, 54.0019, 0.59", "-44.8697, 80.8109, 54.5191, 0.15", "-45.1041, 81.1873, 54.7967, 0.22", "-45.4041, 81.716, 55.1676, 0.22", "-45.6048, 82.1058, 55.4377, 0.22", "-45.7593, 82.4311, 55.6688, 0.74", "-45.981, 82.9738, 56.064, 1.7", "-46.4853, 84.1619, 56.9956, 0.15", "-46.7559, 84.7173, 57.4752, 0.22", "-46.9455, 85.064, 57.7968, 0.22", "-47.273, 85.641, 58.3441, 0.59", "-47.6601, 86.2932, 58.9858, 0.22", "-48.1127, 87.0332, 59.7419, 1.11", "-48.4277, 87.5134, 60.2339, 1.47", "-49.1498, 88.5185, 61.2668, 0.15", "-49.5196, 89.0443, 61.76, 0.29", "-49.7972, 89.4403, 62.0831, 0.15", "-49.9783, 89.6699, 62.2413, 0.15", "-50.3825, 90.1303, 62.5067, 0.59", "-50.6929, 90.4452, 62.6662, 0.22", "-51.1641, 90.8669, 62.8474, 0.22", "-51.5898, 91.2464, 62.999, 0.22", "-52.3349, 91.9303, 63.2413, 0.22", "-52.744, 92.312, 63.3691, 0.81", "-53.3475, 92.8726, 63.5574, 1.77", "-54.5342, 93.9781, 63.9155, 0.15", "-54.9249, 94.3599, 64.0284, 0.15", "-55.4033, 94.8763, 64.1537, 0.66", "-55.7886, 95.3611, 64.2309, 0.15", "-56.3186, 96.1339, 64.2996, 0.15", "-56.5376, 96.5283, 64.318, 0.22", "-56.863, 97.2922, 64.3389, 0.81", "-56.9494, 97.5662, 64.3477, 0.81", "-57.0675, 98.1341, 64.3715, 0.15", "-57.1505, 98.7923, 64.4011, 0.29", "-57.2016, 99.5946, 64.4573, 0.15", "-57.2255, 99.9661, 64.5029, 0.22", "-57.3191, 101.239, 64.6998, 0.15", "-57.3827, 101.827, 64.8149, 0.22", "-57.4468, 102.255, 64.9136, 0.59", "-57.6076, 103.024, 65.1083, 1.18", "-57.8652, 103.967, 65.3589, 0.22", "-58.0982, 104.639, 65.5472, 0.52", "-58.5284, 105.621, 65.82, 0.15", "-58.7158, 106.002, 65.9194, 0.22", "-59.1722, 106.846, 66.1188, 0.15", "-59.4355, 107.285, 66.2038, 0.52", "-59.8084, 107.858, 66.2967, 0.52", "-60.2189, 108.437, 66.3767, 0.15", "-60.4988, 108.804, 66.4207, 0.29", "-60.9729, 109.397, 66.4884, 0.07", "-61.2661, 109.747, 66.5231, 0.44", "-61.4689, 109.978, 66.5432, 0.44", "-62.232, 110.821, 66.6161, 0.15", "-62.776, 111.401, 66.662, 0.15", "-63.3843, 111.999, 66.6804, 0.88", "-63.9885, 112.553, 66.6612, 0.52", "-64.8891, 113.345, 66.5969, 0.15", "-65.0883, 113.517, 66.5755, 0.15", "-65.6746, 114.033, 66.4848, 0.29", "-66.8238, 115.084, 66.2568, 0.07", "-67.2104, 115.454, 66.1702, 0.29", "-67.7596, 116.013, 66.0371, 0.74", "-68.4066, 116.739, 65.8696, 0.15", "-68.7829, 117.201, 65.7728, 0.15", "-69.2418, 117.839, 65.6598, 0.15", "-69.6134, 118.432, 65.6029, 0.15", "-70.0399, 119.131, 65.5723, 0.37", "-70.5037, 119.901, 65.5468, 0.07", "-70.7498, 120.301, 65.541, 0.37", "-71.5256, 121.532, 65.5517, 0.07", "-71.9128, 122.175, 65.5744, 0.07", "-72.2623, 122.768, 65.6234, 0.74" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-23.4582, 25.656, 25.6742, 0.15", "-25.9751, 26.0267, 26.0424, 0.15", "-26.5785, 26.1151, 26.0933, 0.74", "-27.7448, 26.2971, 26.1691, 1.7", "-30.2077, 26.6815, 26.3291, 0.15", "-30.8367, 26.7797, 26.3699, 0.29", "-32.2592, 27.0017, 26.4623, 0.07", "-33.4446, 27.1571, 26.4404, 0.07", "-34.3592, 27.2868, 26.4131, 0.59" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-11.8591, 0.86291, -10.7596, 0.59", "-13.6468, 1.4859, -9.86326, 0.59", "-15.0618, 2.09223, -9.45785, 0.81", "-16.2971, 2.63718, -9.05396, 1.03", "-17.5978, 3.21482, -8.62882, 0.66", "-18.7358, 3.72886, -8.2501, 0.59", "-19.4533, 4.07887, -7.99436, 1.18", "-20.5093, 4.69539, -7.65255, 1.4", "-22.9374, 6.21627, -6.77489, 0.52", "-23.8267, 6.78137, -6.44199, 0.74", "-24.5308, 7.21781, -6.1784, 1.11", "-25.6112, 7.83776, -5.81393, 0.59", "-26.7299, 8.38854, -5.54748, 0.66", "-28.0178, 8.90944, -5.45876, 0.37", "-29.4959, 9.34461, -5.68642, 0.74", "-30.7609, 9.60655, -5.98261, 0.96", "-31.7948, 9.75539, -6.23284, 1.47", "-33.5695, 9.94889, -6.65028, 0.59", "-34.6348, 10.0881, -6.83871, 0.29", "-35.5359, 10.281, -6.87654, 0.29", "-36.2351, 10.537, -6.72403, 0.29", "-37.6523, 11.2563, -6.23427, 0.81", "-38.4999, 11.7844, -5.92778, 1.03", "-39.7195, 12.6549, -5.53759, 0.59", "-40.6016, 13.2601, -5.36333, 0.44", "-41.8717, 14.0307, -5.32222, 0.44", "-43.0594, 14.6021, -5.44117, 0.44", "-44.4569, 15.1946, -5.6992, 1.18", "-45.456, 15.5854, -5.91202, 0.96", "-46.9084, 16.1443, -6.22777, 0.88", "-48.4874, 16.7797, -6.54417, 0.44", "-50.4886, 17.7102, -6.85412, 0.37", "-51.6756, 18.3874, -6.91885, 0.37", "-52.4918, 18.9817, -6.87104, 0.52", "-53.2046, 19.6186, -6.74385, 1.33", "-53.7797, 20.2253, -6.57086, 1.92", "-54.6382, 21.206, -6.24177, 1.47", "-55.7743, 22.5074, -5.70763, 0.74", "-56.9331, 23.6927, -5.08163, 0.37", "-57.5889, 24.2966, -4.67444, 0.22", "-57.9933, 24.6272, -4.39589, 0.22", "-58.7616, 25.1964, -3.79047, 0.29", "-59.6255, 25.7637, -3.0899, 0.29", "-60.4235, 26.2515, -2.45549, 1.25", "-61.4816, 26.8729, -1.67412, 1.62", "-62.7679, 27.6735, -0.858693, 0.88", "-63.8578, 28.3966, -0.339844, 0.44", "-65.1409, 29.2765, 0.0514467, 0.44", "-65.9489, 29.7982, 0.136843, 1.11", "-66.3562, 30.0367, 0.117991, 1.47", "-67.6106, 30.6874, -0.0177498, 1.77", "-69.3781, 31.4869, -0.264885, 0.52", "-70.3141, 31.8336, -0.386015, 0.29", "-70.9371, 32.0174, -0.436651, 0.74", "-72.0575, 32.2546, -0.483788, 1.11", "-74.1343, 32.5531, -0.467344, 0.22", "-75.2195, 32.6249, -0.389033, 0.74", "-76.5688, 32.6177, -0.257323, 1.25", "-77.568, 32.556, -0.156057, 0.96", "-78.6613, 32.4153, -0.0643904, 0.22", "-79.1028, 32.3217, -0.0417156, 0.22", "-80.2733, 31.9645, 0.0106511, 0.66", "-80.9057, 31.7343, 0.0890498, 0.22", "-81.5028, 31.4842, 0.198184, 0.22", "-82.2854, 31.1184, 0.365477, 0.22", "-83.1758, 30.687, 0.56227, 0.88", "-84.4307, 30.0902, 0.741017, 0.22", "-85.191, 29.7269, 0.773207, 0.81", "-85.9804, 29.355, 0.712282, 1.62", "-87.046, 28.8385, 0.485136, 0.96", "-87.9814, 28.3804, 0.199789, 0.66", "-89.3747, 27.6989, -0.306819, 0.29", "-90.4795, 27.1742, -0.748411, 0.29", "-91.5179, 26.7023, -1.1111, 0.96", "-92.8091, 26.1716, -1.43836, 1.18", "-94.5843, 25.5484, -1.66579, 0.22", "-95.2802, 25.343, -1.68156, 0.81", "-96.1624, 25.1434, -1.60329, 0.81", "-98.0321, 24.8928, -1.34171, 0.22", "-99.3969, 24.7918, -1.12426, 0.59", "-100.823, 24.744, -0.909195, 0.15", "-101.894, 24.7204, -0.826808, 0.15", "-103.025, 24.6851, -0.850989, 1.99", "-104.294, 24.6254, -1.00079, 1.99", "-105.874, 24.5101, -1.35184, 0.15", "-106.914, 24.384, -1.64359, 0.59", "-108.614, 24.1382, -2.14573, 0.22", "-109.603, 23.9742, -2.42325, 0.22", "-110.13, 23.865, -2.57219, 0.88", "-110.812, 23.6918, -2.75121, 1.55", "-111.817, 23.4109, -3.00662, 0.22", "-112.897, 23.1007, -3.23806, 0.15", "-113.784, 22.8429, -3.39338, 0.59", "-114.629, 22.6114, -3.52163, 0.22", "-115.533, 22.3944, -3.68043, 0.66", "-117.849, 21.9025, -4.15642, 0.22", "-119.276, 21.6418, -4.48467, 0.29", "-119.768, 21.5633, -4.5944, 0.81", "-120.92, 21.4194, -4.84878, 1.33", "-122.68, 21.2452, -5.24343, 0.29", "-123.598, 21.1624, -5.45729, 0.29", "-124.543, 21.0768, -5.67839, 1.03", "-126.228, 20.8842, -6.10321, 2.06", "-128.325, 20.6273, -6.62719, 0.22", "-128.925, 20.554, -6.77735, 0.22", "-129.708, 20.4652, -6.95623, 0.74", "-130.414, 20.3853, -7.11602, 1.11", "-132.312, 20.1763, -7.58095, 0.15", "-133.082, 20.1118, -7.80313, 0.15", "-133.663, 20.0804, -7.96136, 0.15", "-134.341, 20.068, -8.1494, 0.37", "-146.208, 22.8857, -8.80221, 0.37", "-158.292, 24.6067, -8.34262, 0.37", "-170.227, 25.2323, -5.8204, 0.37", "-182.196, 27.4276, -4.77344, 0.37" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-11.8591, 0.86291, -10.7596, 0.44", "-11.8243, 1.24052, -11.1948, 0.44", "-11.7325, 1.66887, -11.645, 0.59", "-11.657, 2.16767, -12.1412, 0.96", "-11.6576, 2.54434, -12.4895, 1.11", "-11.7227, 3.04607, -12.9438, 0.66", "-11.87, 3.55073, -13.3857, 0.59", "-12.029, 3.92967, -13.6867, 0.52", "-12.4299, 4.10108, -13.7784, 0.52", "-13.1862, 4.26401, -13.8196, 0.52", "-13.6349, 4.34478, -13.8264, 0.66", "-14.2869, 4.43734, -13.7901, 0.66", "-14.9256, 4.52726, -13.7091, 0.81", "-15.5564, 4.63686, -13.5896, 0.81", "-16.2334, 4.80461, -13.4339, 0.59", "-16.8424, 5.03822, -13.2728, 0.52", "-17.3889, 5.30326, -13.1134, 0.52", "-17.9765, 5.66782, -12.9122, 0.44", "-18.2679, 5.90336, -12.776, 0.66", "-18.5995, 6.25368, -12.5457, 0.44", "-18.7567, 6.52603, -12.3715, 0.59", "-22.7125, 9.89879, -12.2289, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.43184, -9.24143, -6.27831, 1.25", "5.45216, -9.86078, -5.11818, 1.25", "5.4264, -10.8817, -3.41971, 1.25", "5.30122, -12.0485, -1.63507, 1.03", "5.06609, -13.0484, -0.189256, 1.03", "4.6659, -14.1387, 1.35478, 1.47", "4.29839, -14.8853, 2.43193, 1.7", "3.75261, -15.6589, 3.66271, 1.62", "3.19872, -16.1685, 4.55216, 1.55", "2.10547, -16.9082, 6.02125, 1.47", "1.21383, -17.3873, 7.08955, 1.7", "0.405126, -17.7536, 7.98252, 1.99", "-0.64455, -18.1878, 9.11253, 1.99", "-2.80506, -19.0859, 11.3822, 0.74", "-3.79496, -19.5265, 12.3601, 0.74", "-4.56606, -19.8965, 13.0389, 0.52", "-5.30892, -20.3036, 13.6126, 1.55", "-6.32228, -20.9475, 14.2913, 1.99", "-7.29558, -21.6782, 14.8543, 1.03", "-8.39893, -22.6225, 15.4052, 0.44", "-9.14504, -23.3456, 15.8502, 0.44", "-9.62672, -23.9742, 16.34, 0.44", "-9.82627, -24.4957, 16.895, 0.59", "-9.8205, -25.1732, 17.774, 0.96", "-9.69843, -25.7784, 18.6583, 1.55", "-9.52696, -26.3869, 19.6474, 1.62", "-9.37247, -27.0056, 20.7179, 0.96", "-9.31683, -27.6335, 21.8815, 0.44", "-9.45984, -28.219, 23.0001, 0.74", "-9.6851, -28.5355, 23.572, 0.74", "-10.1924, -29.0229, 24.3672, 0.44", "-10.6861, -29.4476, 25.0114, 1.03", "-11.1629, -29.8423, 25.593, 2.06", "-11.7686, -30.3633, 26.3597, 1.33", "-12.3671, -31.0233, 27.2993, 0.59", "-12.7575, -31.6798, 28.1872, 0.59", "-13.0412, -32.3637, 29.0346, 0.88", "-13.3395, -33.1177, 29.8642, 0.52", "-13.5388, -33.5668, 30.3449, 0.37", "-13.9112, -34.3051, 31.0967, 0.59", "-14.3291, -35.0227, 31.8223, 1.7", "-14.9288, -35.9452, 32.7667, 2.51", "-15.7827, -37.09, 33.9668, 0.88", "-16.7351, -38.2632, 35.2244, 1.11", "-17.4157, -39.096, 36.1425, 1.55", "-18.0759, -39.915, 37.0625, 0.59", "-18.6782, -40.7098, 37.9363, 0.29", "-19.0739, -41.2261, 38.4959, 0.29", "-19.2892, -41.4996, 38.783, 0.29", "-19.6746, -41.9838, 39.1984, 0.29", "-20.1094, -42.5165, 39.601, 1.4", "-20.4372, -42.8814, 39.9014, 1.92", "-21.5199, -43.9218, 40.9074, 0.44", "-22.127, -44.4522, 41.4972, 0.44", "-22.808, -44.9793, 42.1531, 1.33", "-23.3758, -45.364, 42.6909, 1.84", "-24.8218, -46.2639, 44.0645, 0.29", "-25.5078, -46.6913, 44.7243, 0.29", "-26.0101, -47.0473, 45.226, 0.29", "-26.5105, -47.4479, 45.741, 0.29", "-26.946, -47.8436, 46.2145, 0.29", "-27.4897, -48.43, 46.8308, 1.4", "-28.0563, -49.1262, 47.4815, 2.51", "-29.0094, -50.3744, 48.6596, 0.44", "-29.5666, -51.133, 49.4148, 0.52", "-30.1027, -51.9105, 50.2343, 0.37", "-30.5272, -52.5328, 50.9393, 0.74", "-31.0462, -53.3141, 51.8793, 0.22", "-31.3418, -53.7918, 52.4826, 0.81", "-31.5083, -54.1093, 52.9116, 0.81", "-31.7818, -54.7612, 53.8598, 0.44", "-31.9966, -55.3868, 54.9075, 0.44", "-32.2105, -56.0734, 56.3134, 0.81", "-32.3173, -56.436, 57.2813, 0.81", "-32.4355, -56.6897, 58.1565, 0.81", "-32.5323, -56.8478, 58.7382, 0.81", "-32.6888, -57.0489, 59.5161, 0.81", "-32.8445, -57.2223, 60.2262, 0.81", "-33.3165, -57.494, 61.7817, 0.81", "-33.8685, -57.6642, 62.9971, 0.52", "-34.3667, -57.7562, 63.798, 0.52", "-34.6486, -57.7918, 64.1524, 0.52", "-35.1185, -57.8358, 64.6926, 0.52", "-35.7965, -57.869, 65.4397, 0.81", "-36.7221, -57.916, 66.4983, 0.44", "-37.5391, -57.9679, 67.5053, 1.55", "-38.6814, -58.1244, 69.0923, 0.29", "-39.3914, -58.3043, 70.1749, 0.96", "-40.0007, -58.5665, 71.1724, 1.55", "-40.9272, -59.1072, 72.8422, 0.44", "-41.4341, -59.4582, 73.8417, 0.44", "-42.1658, -59.9995, 75.4037, 1.33", "-42.504, -60.2518, 76.1701, 1.62", "-43.3832, -60.882, 78.0811, 0.22", "-43.7656, -61.1503, 78.8872, 0.22", "-43.9602, -61.2786, 79.2661, 0.22", "-44.3552, -61.5748, 80.0187, 0.59", "-44.8411, -61.9931, 80.9052, 0.59", "-45.287, -62.5002, 81.7611, 1.11", "-45.4424, -62.7472, 82.0891, 1.11", "-45.7171, -63.2468, 82.662, 0.37", "-46.0175, -63.7954, 83.2279, 0.22", "-46.3819, -64.4647, 83.9144, 0.81", "-46.7525, -65.0476, 84.6092, 0.52", "-47.3962, -65.8629, 85.8327, 1.11", "-47.6876, -66.1213, 86.3729, 1.25", "-48.4211, -66.5567, 87.6659, 0.37", "-49.2195, -66.8884, 89.043, 0.66", "-50.0585, -67.1471, 90.5072, 1.4", "-50.5249, -67.2554, 91.356, 1.55", "-51.3508, -67.3496, 92.94, 0.29", "-51.6868, -67.3594, 93.6115, 0.59", "-52.2927, -67.2925, 94.771, 0.59", "-52.5784, -67.2408, 95.2911, 0.37", "-53.0213, -67.1424, 96.1168, 0.74", "-53.7035, -66.9843, 97.3977, 0.52", "-54.1616, -66.8702, 98.2593, 1.11", "-54.9337, -66.5971, 99.6078, 0.29", "-55.4094, -66.4068, 100.31, 0.29", "-55.8346, -66.2516, 100.851, 0.29", "-56.1233, -66.183, 101.139, 0.29", "-56.7092, -66.1671, 101.629, 0.29", "-57.4635, -66.2546, 102.218, 0.22", "-58.0645, -66.3659, 102.677, 1.03", "-58.5015, -66.4379, 103.009, 1.55", "-60.0059, -66.5875, 104.217, 0.37", "-60.7696, -66.5943, 104.93, 0.29", "-61.3342, -66.5514, 105.569, 0.29", "-61.7905, -66.4801, 106.22, 0.88", "-62.2595, -66.3876, 107.071, 0.88", "-62.7154, -66.2983, 108.07, 0.66", "-63.1192, -66.2092, 109.157, 0.96", "-63.4531, -66.1066, 109.981, 0.96", "-63.7106, -66.0209, 110.541, 0.96", "-64.1319, -65.9042, 111.266, 0.96", "-64.8659, -65.8449, 112.403, 0.37", "-65.1267, -65.8431, 112.746, 0.37", "-65.7253, -65.8179, 113.429, 0.52", "-66.409, -65.7406, 114.213, 0.29", "-67.0575, -65.6079, 115.032, 1.18", "-68.4712, -65.1942, 117.138, 0.29", "-68.8914, -65.0417, 117.898, 0.29", "-69.2882, -64.8963, 118.746, 0.22", "-69.5925, -64.8327, 119.696, 0.22", "-69.7958, -64.8302, 120.588, 0.66", "-69.9111, -64.8585, 121.37, 0.66", "-69.9555, -64.905, 121.874, 0.66", "-69.9699, -64.9816, 122.191, 0.66", "-69.9874, -66.0828, 124.591, 0.22", "-70.0015, -66.3824, 125.03, 0.22", "-70.0514, -66.7811, 125.504, 0.59", "-70.168, -67.3086, 126.1, 1.11", "-70.3561, -67.8614, 126.729, 1.11", "-70.7075, -68.7409, 127.736, 0.37", "-70.9655, -69.3657, 128.421, 0.37", "-71.2373, -70.0437, 129.193, 0.88", "-71.5758, -70.7147, 130.04, 1.47", "-72.072, -71.4622, 131.069, 0.44", "-72.5662, -72.0718, 131.962, 0.88", "-73.0684, -72.6685, 132.852, 0.52", "-73.6672, -73.4865, 134.025, 1.77", "-74.3905, -74.7036, 135.613, 0.37", "-74.5751, -75.1234, 136.079, 0.66", "-74.6855, -75.4863, 136.434, 0.66", "-74.8935, -76.495, 137.296, 0.22", "-74.9274, -77.4521, 138.005, 0.66", "-74.7599, -78.3727, 138.633, 0.29", "-74.3916, -79.3292, 139.312, 0.29", "-74.1305, -79.884, 139.775, 0.96", "-74.006, -80.1299, 140.005, 1.25", "-73.5239, -81.0817, 140.966, 0.44", "-73.0857, -81.9315, 141.878, 1.25", "-72.5283, -82.973, 143.062, 0.44", "-71.9246, -84.1723, 144.45, 0.22", "-71.7679, -84.5137, 144.822, 0.22", "-71.5495, -85.0368, 145.34, 0.29", "-71.4066, -85.4766, 145.693, 0.29", "-71.1839, -86.3214, 146.193, 0.59", "-70.9653, -86.9903, 146.508, 0.37", "-70.7014, -87.584, 146.798, 0.96", "-70.5022, -87.9527, 147.031, 0.52", "-70.048, -88.7303, 147.562, 0.22", "-69.7736, -89.1985, 147.898, 0.96", "-69.0152, -90.4994, 148.946, 0.15", "-68.6051, -91.1544, 149.561, 0.52", "-68.1244, -91.8493, 150.311, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.43184, -9.24143, -6.27831, 3.91", "5.57175, -10.0248, -6.46582, 3.91", "5.97737, -12.1016, -6.90675, 2.65", "6.37388, -14.0286, -7.31348, 2.21", "6.74798, -15.7353, -7.71497, 2.06", "7.11328, -17.2761, -8.10785, 2.43", "7.506, -18.8149, -8.53717, 2.43", "7.84757, -20.0673, -8.89595, 2.29", "8.29186, -21.5301, -9.37925, 2.14", "8.72434, -22.7942, -9.90905, 2.43", "9.19869, -24.0965, -10.535, 2.73", "9.67945, -25.3663, -11.2163, 2.43", "10.1921, -26.6405, -11.9535, 2.43", "10.8018, -28.1625, -12.8992, 2.65", "11.279, -29.315, -13.6421, 2.95" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "18.7744, -95.6598, -6.04292, 0.59", "19.1014, -97.0433, -5.36015, 0.59", "19.3308, -97.9096, -4.99569, 0.44", "19.5807, -98.7698, -4.73324, 0.88", "19.7392, -99.3286, -4.60702, 1.11", "20.0635, -100.547, -4.43538, 0.22", "20.2445, -101.308, -4.37712, 0.22", "20.3823, -101.958, -4.3956, 0.81", "20.5996, -103.094, -4.44811, 1.62", "20.7565, -104.097, -4.48855, 0.59", "20.9136, -105.411, -4.52199, 0.22", "20.9833, -106.363, -4.52402, 0.81", "21.0342, -107.463, -4.45023, 0.22", "21.0486, -108.236, -4.35879, 0.44", "21.0391, -108.969, -4.23851, 1.25", "21.0199, -109.749, -4.10295, 1.99", "20.9864, -110.746, -3.91348, 1.18", "20.9652, -112.315, -3.61769, 0.44", "20.9628, -113.138, -3.48342, 0.59", "20.9683, -114.28, -3.31798, 1.11", "20.992, -115.575, -3.1045, 0.37", "21.0153, -116.182, -2.98846, 0.22", "21.0793, -117.151, -2.8014, 0.22", "21.1223, -117.578, -2.72061, 0.22", "21.2004, -118.14, -2.59153, 0.59", "21.3705, -119.219, -2.3164, 0.15", "21.4433, -119.675, -2.21755, 0.15", "21.5773, -120.555, -2.07523, 0.66", "21.7126, -121.474, -1.95872, 0.22", "21.837, -122.332, -1.86747, 0.22", "21.9285, -122.989, -1.81254, 0.22", "22.0525, -123.886, -1.76165, 0.88", "22.1456, -124.624, -1.72499, 1.25", "22.3101, -125.945, -1.64775, 0.15", "22.4211, -126.817, -1.59119, 0.22", "22.4876, -127.324, -1.55451, 0.15", "22.5782, -128.011, -1.49644, 0.15", "22.6623, -128.669, -1.42466, 0.52", "22.8235, -129.759, -1.30457, 0.22", "22.9792, -130.68, -1.1978, 0.22", "23.1859, -131.7, -1.04831, 0.22", "23.3077, -132.275, -0.945956, 0.44", "23.4285, -132.886, -0.819455, 1.11", "23.7159, -134.383, -0.48155, 0.07", "23.8507, -135.13, -0.303293, 0.88", "24.1077, -136.76, 0.124728, 0.22", "24.1954, -137.524, 0.343526, 0.59", "24.258, -138.685, 0.701561, 0.22", "24.2457, -139.177, 0.860839, 0.88", "24.1804, -139.67, 1.0281, 1.03", "23.8924, -140.98, 1.48971, 0.22", "23.6892, -141.698, 1.76634, 0.37", "23.4586, -142.499, 2.08921, 0.22", "23.2639, -143.191, 2.37837, 1.25", "23.0507, -144.019, 2.71398, 2.21", "22.7975, -145.081, 3.11933, 0.66", "22.5325, -146.48, 3.59945, 0.22", "22.4383, -147.185, 3.81229, 0.59", "22.4027, -147.541, 3.91165, 0.59", "22.3228, -148.661, 4.21876, 0.22", "22.2926, -149.452, 4.41974, 0.74", "22.271, -150.477, 4.62451, 0.15", "22.2458, -151.059, 4.70009, 0.74" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "18.7744, -95.6598, -6.04292, 0.37", "19.2704, -96.6161, -6.25406, 0.37", "19.6896, -97.3861, -6.45911, 0.37", "19.981, -97.9203, -6.62694, 0.66", "20.3403, -98.5731, -6.8604, 1.55", "20.7715, -99.3882, -7.15734, 2.06", "21.2354, -100.306, -7.48853, 0.74", "21.6067, -101.055, -7.76716, 0.52", "22.1726, -102.187, -8.20222, 0.29", "22.6623, -103.147, -8.53343, 0.22", "22.9232, -103.647, -8.68189, 0.22", "23.1276, -104.041, -8.79066, 0.81", "23.4652, -104.698, -8.98361, 1.47", "23.7482, -105.247, -9.16036, 2.14", "24.2869, -106.262, -9.50002, 0.37", "24.7521, -107.108, -9.80397, 0.22", "25.0695, -107.652, -10.0175, 0.22", "25.3931, -108.189, -10.2502, 0.22", "25.5423, -108.429, -10.3662, 0.52", "25.8474, -108.866, -10.5861, 1.11", "26.0787, -109.124, -10.7235, 1.18", "26.7228, -109.719, -11.0323, 0.52", "27.4589, -110.333, -11.3155, 0.37", "27.9237, -110.703, -11.4642, 0.88", "28.8577, -111.434, -11.7299, 1.99", "30.1981, -112.482, -12.0556, 0.44", "31.0075, -113.145, -12.2185, 0.29", "31.5394, -113.61, -12.2989, 0.88", "32.041, -114.101, -12.3383, 1.4", "32.6319, -114.752, -12.3448, 0.66", "33.0651, -115.265, -12.3143, 0.29", "33.4732, -115.77, -12.268, 0.29", "33.7969, -116.106, -12.2706, 0.29", "34.1638, -116.401, -12.3347, 0.29", "34.606, -116.676, -12.4491, 0.29", "35.4096, -117.103, -12.709, 0.37", "35.9732, -117.386, -12.9112, 0.29", "36.8949, -117.889, -13.2714, 0.66", "37.4566, -118.262, -13.5009, 0.66", "38.316, -118.97, -13.8616, 0.37", "38.9259, -119.589, -14.1425, 1.84", "39.345, -120.091, -14.3507, 2.73", "39.9815, -120.911, -14.6653, 2.43", "40.7083, -121.878, -14.9951, 1.11", "41.3043, -122.662, -15.2686, 0.74", "41.8441, -123.357, -15.5248, 1.33", "42.643, -124.337, -15.9069, 1.99", "43.2696, -125.075, -16.2148, 1.03", "44.0688, -125.995, -16.5995, 0.44", "44.7372, -126.765, -16.9186, 0.81", "45.4449, -127.614, -17.266, 0.96", "46.225, -128.572, -17.6612, 1.4", "47.1264, -129.701, -18.1667, 1.7", "47.9918, -130.797, -18.7335, 0.74", "48.457, -131.387, -19.0883, 0.81", "49.0518, -132.159, -19.5979, 0.37", "49.4554, -132.711, -19.9912, 0.37", "49.701, -133.076, -20.2722, 0.37", "50.0375, -133.629, -20.7143, 0.22", "50.2697, -134.07, -21.0584, 0.29", "50.536, -134.695, -21.4677, 0.88", "50.884, -135.715, -21.9606, 0.37", "51.1425, -136.583, -22.2839, 0.96", "51.3375, -137.275, -22.4888, 0.66", "51.5188, -137.933, -22.636, 0.96", "51.6947, -138.568, -22.751, 0.66", "51.9881, -139.567, -22.912, 0.22", "52.1368, -140.053, -22.9845, 0.29", "52.2792, -140.516, -23.0385, 0.15", "52.5023, -141.233, -23.1069, 0.81", "52.6681, -141.74, -23.1303, 0.15", "52.8027, -142.125, -23.1364, 0.22", "58.5154, -148.634, -24.5528, 0.22", "63.4488, -155.883, -24.9207, 0.22", "68.5185, -163.046, -24.8602, 0.22", "74.483, -169.315, -23.3992, 0.22", "80.2365, -175.765, -21.8824, 0.22", "84.848, -182.789, -19.3497, 0.22", "88.3287, -190.692, -17.7876, 0.22", "92.7002, -198.214, -16.6427, 0.22" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-15.8587, -52.3542, -1.38233, 0.59", "-15.1238, -53.5349, -2.06175, 0.59", "-14.6775, -54.2519, -2.47437, 0.81", "-14.0798, -55.2121, -3.02692, 1.03", "-13.4869, -56.1646, -3.57503, 1.47", "-13.1217, -56.7512, -3.91263, 1.99", "-12.6214, -57.555, -4.37518, 2.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-15.8587, -52.3542, -1.38233, 1.11", "-16.8689, -52.2261, -2.46396, 1.11", "-18.1293, -52.0353, -3.58032, 1.11", "-19.3145, -51.8642, -4.4183, 1.11", "-20.4356, -51.7393, -5.02559, 1.11", "-22.2979, -51.6308, -5.8004, 0.88", "-23.8427, -51.6533, -6.22329, 1.11", "-24.9028, -51.7847, -6.24466, 1.4", "-26.4595, -52.1825, -6.00632, 0.96", "-28.0023, -52.8019, -5.63608, 0.52", "-29.3746, -53.5319, -5.28488, 0.81", "-30.875, -54.4411, -4.89531, 1.25", "-32.1566, -55.2102, -4.60643, 1.7", "-33.4062, -55.9216, -4.38461, 1.7", "-35.2767, -56.9048, -4.17444, 1.4", "-37.1019, -57.7635, -4.09141, 0.44", "-38.3276, -58.2984, -4.07349, 0.44", "-39.836, -58.9454, -4.07476, 0.44", "-40.9185, -59.4233, -4.06305, 0.44", "-42.2771, -60.0573, -4.04346, 0.74", "-43.4647, -60.6543, -4.09333, 1.03", "-45.1043, -61.5159, -4.29514, 0.44", "-46.0505, -62.0181, -4.47763, 0.74", "-47.1215, -62.5294, -4.69344, 0.88", "-48.4505, -63.0547, -4.94157, 0.44", "-49.9417, -63.5646, -5.14826, 0.96", "-51.3115, -63.9884, -5.25567, 1.7", "-52.9264, -64.4797, -5.26596, 1.77", "-55.5198, -65.3634, -5.0447, 0.37", "-56.5413, -65.7626, -4.89625, 0.59", "-57.9808, -66.4329, -4.62952, 1.11", "-59.0549, -66.9949, -4.43009, 1.4", "-60.4946, -67.8333, -4.23057, 0.81", "-61.9957, -68.7721, -4.14919, 0.37", "-63.3522, -69.6365, -4.21599, 1.03", "-64.7763, -70.4792, -4.41866, 0.37", "-66.012, -71.1154, -4.70054, 0.37", "-66.7377, -71.4246, -4.8897, 0.74", "-67.7633, -71.7528, -5.15699, 1.25", "-69.2289, -72.0632, -5.52222, 0.88", "-70.3676, -72.1646, -5.72985, 1.47", "-71.6459, -72.1185, -5.84418, 1.84", "-73.2415, -71.8664, -5.8145, 0.29", "-74.1229, -71.5698, -5.69926, 0.22", "-75.0157, -71.1104, -5.53041, 0.22", "-75.7424, -70.6333, -5.3574, 0.22", "-76.222, -70.2668, -5.20837, 0.59", "-77.0697, -69.5294, -4.89304, 0.81", "-78.7028, -68.0932, -4.28744, 0.37", "-79.486, -67.4592, -4.00674, 0.96", "-80.0122, -67.072, -3.826, 1.55", "-81.0347, -66.3167, -3.47468, 0.52", "-81.6777, -65.7932, -3.25041, 0.22", "-93.7714, -69.7615, -3.31199, 0.22" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-22.7125, 9.89879, -12.2289, 0.22", "-29.1697, 14.8987, -12.9767, 0.22", "-36.5472, 18.4784, -13.0879, 0.22", "-44.361, 20.6689, -11.9048, 0.22", "-52.1988, 21.979, -9.87855, 0.22", "-60.318, 22.6499, -8.93894, 0.22", "-68.2563, 24.7062, -8.84417, 0.22", "-76.3587, 25.7395, -8.11064, 0.22", "-84.5261, 25.4627, -7.42488, 0.22", "-92.7181, 25.6245, -7.0808, 0.22", "-100.862, 26.4836, -7.51244, 0.22", "-108.984, 27.6195, -7.53088, 0.22", "-117.022, 28.3573, -8.97766, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-22.7125, 9.89879, -12.2289, 0.22", "-30.736, 15.6577, -12.7508, 0.22", "-38.7491, 21.2909, -11.3834, 0.22", "-46.5529, 27.3656, -11.2739, 0.22", "-53.5065, 34.3963, -11.1006, 0.22", "-60.4982, 41.2865, -12.3073, 0.22", "-67.4023, 48.2506, -13.5905, 0.22", "-72.8899, 56.218, -15.6452, 0.22", "-78.2162, 63.6058, -19.5006, 0.22", "-84.2852, 71.2519, -21.0873, 0.22", "-89.1225, 79.8092, -22.1761, 0.22", "-94.6999, 87.9466, -22.8765, 0.22", "-100.899, 95.1529, -25.6063, 0.22", "-106.505, 102.445, -29.241, 0.22", "-113.838, 108.698, -31.4624, 0.22", "-121.728, 114.575, -32.4734, 0.22", "-129.8, 120.286, -32.6669, 0.22", "-138.204, 125.472, -33.2088, 0.22", "-146.927, 129.881, -34.7211, 0.22", "-154.784, 135.687, -36.258, 0.22", "-162.69, 140.585, -39.623, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "11.279, -29.315, -13.6421, 1.55", "12.7283, -29.9693, -13.1855, 1.55", "13.6719, -30.5123, -12.9848, 0.59", "14.8293, -31.3492, -12.7955, 0.74", "15.6827, -32.0645, -12.6621, 0.44", "16.3764, -32.706, -12.5609, 0.74", "16.9026, -33.2067, -12.5022, 0.52", "17.4368, -33.7901, -12.4991, 0.81", "18.0216, -34.5139, -12.4795, 0.59", "18.5676, -35.2453, -12.4276, 0.96", "19.0455, -35.8729, -12.3913, 0.44", "19.7432, -36.7185, -12.3329, 0.74", "20.5061, -37.5659, -12.2844, 0.96", "21.2516, -38.2755, -12.2532, 0.52", "21.9324, -38.8285, -12.2614, 0.52", "22.984, -39.5631, -12.3071, 0.96", "23.7443, -40.0079, -12.3727, 0.37", "24.2674, -40.2812, -12.4298, 0.37", "25.5278, -40.8087, -12.6342, 0.81", "26.3553, -41.0681, -12.7831, 0.22", "26.712, -41.1408, -12.8263, 0.22", "27.7108, -41.2184, -12.8726, 0.44", "34.2871, -46.9609, -11.4539, 0.44", "40.4983, -52.6993, -8.85997, 0.44", "46.9321, -58.2544, -6.41392, 0.44", "52.9473, -64.254, -3.95248, 0.44", "58.9531, -69.8817, -0.712941, 0.44", "64.062, -76.3078, 2.57965, 0.44", "70.0309, -82.1075, 5.57508, 0.44", "75.9064, -87.2144, 9.77441, 0.44", "82.0289, -92.6988, 13.0413, 0.44", "89.393, -97.2175, 14.9354, 0.44", "96.6664, -101.693, 17.2386, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "11.279, -29.315, -13.6421, 2.43", "11.2794, -30.7288, -14.5419, 2.43", "11.2801, -32.8447, -15.8886, 1.55", "11.2807, -34.7846, -17.1233, 1.33", "11.2809, -35.61, -17.6486, 1.4" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-12.6214, -57.555, -4.37518, 1.84", "-12.187, -58.0499, -5.16233, 1.84", "-11.8861, -58.5792, -5.79738, 1.62", "-11.5571, -59.3669, -6.50949, 1.18", "-11.3385, -60.0615, -6.9797, 0.88", "-11.1195, -60.9773, -7.44934, 0.52", "-10.9432, -61.7146, -7.82746, 0.52", "-10.8139, -62.6263, -8.14939, 0.74", "-10.7456, -63.6581, -8.37021, 1.11", "-10.7475, -64.428, -8.43409, 1.99", "-10.8011, -65.5558, -8.41104, 2.65" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.6214, -57.555, -4.37518, 0.37", "-13.7734, -58.5774, -3.36984, 0.37", "-14.5142, -59.206, -2.55898, 0.44", "-14.8992, -59.5119, -2.12997, 0.29", "-15.3726, -59.8923, -1.58861, 0.66", "-15.7865, -60.2489, -1.1085, 1.18", "-16.3328, -60.7957, -0.472049, 0.81", "-16.8799, -61.3829, 0.175214, 0.52", "-17.5004, -62.2433, 0.867406, 0.74", "-18.0201, -63.151, 1.28426, 0.37", "-18.3577, -63.8935, 1.42377, 0.37", "-18.8313, -65.1328, 1.433, 0.52", "-19.1261, -66.0281, 1.36032, 0.96", "-19.4541, -67.1131, 1.24168, 1.92", "-19.8976, -68.5289, 1.08877, 2.36", "-20.4792, -70.0665, 0.946993, 0.96", "-21.0003, -71.1597, 0.879065, 0.52", "-21.5643, -72.1377, 0.861486, 0.44", "-22.0801, -72.9213, 0.897674, 0.44", "-22.9011, -73.9889, 0.988047, 0.52", "-23.6178, -74.8421, 1.05687, 0.37", "-24.4365, -75.7604, 1.08929, 0.66", "-24.9756, -76.3774, 1.09321, 1.47", "-25.5121, -77.0236, 1.06162, 2.29", "-26.0012, -77.6596, 1.00995, 2.51", "-27.0201, -79.1237, 0.90342, 0.52", "-27.2616, -79.4766, 0.8885, 0.52", "-27.8974, -80.3682, 0.889334, 0.81", "-28.4662, -81.1137, 0.905917, 0.59", "-29.4131, -82.26, 0.944403, 0.22", "-29.8999, -82.7725, 0.992041, 0.22", "-30.4287, -83.2378, 1.06043, 0.74", "-30.8115, -83.5304, 1.10813, 1.33", "-31.447, -83.9518, 1.1804, 1.84", "-31.9384, -84.2518, 1.23962, 1.84", "-33.5636, -85.2539, 1.41126, 0.37", "-34.047, -85.57, 1.44967, 0.74", "-35.0122, -86.2648, 1.50263, 1.25", "-35.7081, -86.8222, 1.52457, 1.03", "-36.7704, -87.8557, 1.5154, 0.44", "-37.8027, -89.0569, 1.50278, 0.37", "-38.2898, -89.7186, 1.51194, 0.88", "-38.7162, -90.3624, 1.56486, 1.7", "-39.0463, -90.9239, 1.66949, 1.62", "-40.0113, -92.676, 2.18041, 0.37", "-40.4983, -93.5644, 2.51906, 0.37", "-40.9845, -94.3707, 2.89349, 0.96", "-41.5019, -95.1371, 3.29013, 1.7", "-42.4338, -96.3993, 3.99496, 0.44", "-43.2345, -97.4172, 4.60283, 0.22", "-43.7924, -98.0724, 5.02123, 0.74", "-44.2868, -98.6507, 5.35477, 0.22", "-44.7011, -99.1078, 5.59725, 0.22", "-45.0682, -99.4607, 5.77481, 0.81", "-45.5521, -99.8527, 5.98171, 1.03", "-46.3444, -100.42, 6.3233, 0.29", "-46.7586, -100.739, 6.52767, 0.29", "-47.3323, -101.239, 6.83481, 0.52", "-48.0133, -101.887, 7.21319, 0.22", "-48.4511, -102.331, 7.45394, 1.03", "-49.013, -102.92, 7.76028, 1.84", "-50.0946, -104.111, 8.38495, 0.22", "-50.5002, -104.593, 8.64604, 0.37", "-50.7679, -104.955, 8.84985, 0.15", "-51.0731, -105.39, 9.10451, 0.15", "-51.368, -105.731, 9.30853, 0.15", "-51.8803, -106.217, 9.6102, 0.22", "-52.1862, -106.454, 9.75522, 0.52", "-52.7742, -106.878, 10.0181, 1.03", "-53.2907, -107.232, 10.235, 1.4", "-54.5468, -108.078, 10.7628, 0.74", "-55.8403, -108.915, 11.3069, 0.37", "-57.0999, -109.673, 11.8501, 0.37", "-57.6725, -109.991, 12.1144, 0.52", "-58.2197, -110.265, 12.382, 1.33", "-59.2356, -110.74, 12.9163, 1.77", "-60.4122, -111.258, 13.5768, 0.29", "-61.0163, -111.519, 13.906, 0.29", "-61.6866, -111.841, 14.2886, 0.81", "-62.1763, -112.108, 14.6144, 1.25", "-62.5825, -112.352, 14.95, 1.25", "-63.1958, -112.758, 15.5564, 0.81", "-64.0681, -113.412, 16.5478, 0.37", "-64.7368, -113.949, 17.3853, 0.29", "-65.6602, -114.765, 18.7308, 0.88", "-66.2537, -115.317, 19.7081, 1.84", "-66.7108, -115.742, 20.5252, 2.29", "-67.5209, -116.477, 22.0598, 0.37", "-68.0978, -116.983, 23.1426, 0.15", "-68.6952, -117.466, 24.0768, 0.15", "-69.1716, -117.839, 24.7042, 0.15", "-69.4734, -118.08, 25.0788, 0.15", "-69.7572, -118.308, 25.4372, 0.74", "-70.3589, -118.798, 26.2004, 1.62", "-71.0997, -119.416, 27.0882, 0.44", "-71.6359, -119.867, 27.6795, 0.52", "-72.2236, -120.399, 28.3369, 0.52", "-72.5509, -120.705, 28.6942, 0.22", "-72.7242, -120.866, 28.8739, 0.22", "-72.9918, -121.095, 29.1167, 0.22", "-73.4016, -121.421, 29.405, 0.44", "-73.788, -121.706, 29.5877, 0.44", "-74.4194, -122.264, 29.7951, 0.22", "-74.778, -122.613, 29.8882, 0.22", "-75.133, -122.993, 29.9819, 0.66", "-75.613, -123.547, 30.0816, 1.55", "-76.2738, -124.379, 30.1964, 2.21", "-77.5395, -126.066, 30.3793, 0.29", "-78.3738, -127.231, 30.4596, 0.22", "-79.078, -128.208, 30.5046, 0.22", "-79.6333, -128.947, 30.5132, 0.44", "-80.1138, -129.567, 30.4927, 1.18", "-80.5554, -130.113, 30.4353, 1.18", "-81.4715, -131.185, 30.2152, 0.22", "-81.927, -131.708, 30.0657, 0.22", "-82.5825, -132.442, 29.827, 0.22", "-83.0562, -132.969, 29.6839, 0.81", "-83.754, -133.714, 29.4868, 1.7", "-84.3506, -134.325, 29.3514, 0.88", "-84.9846, -134.961, 29.253, 0.29", "-85.7476, -135.76, 29.1861, 0.22", "-86.295, -136.344, 29.1659, 0.52", "-86.7061, -136.778, 29.1677, 0.52", "-87.6655, -137.776, 29.2207, 0.22", "-88.1812, -138.305, 29.2399, 0.22", "-88.4975, -138.625, 29.2327, 0.22", "-89.1027, -139.203, 29.1818, 0.22", "-89.6875, -139.777, 29.0755, 1.03", "-90.0899, -140.204, 28.9586, 1.4", "-90.5997, -140.768, 28.7604, 0.74", "-91.2067, -141.44, 28.4904, 0.22", "-91.6391, -141.912, 28.2942, 0.22", "-92.458, -142.747, 27.9619, 0.44", "-93.3448, -143.622, 27.6373, 0.22", "-93.8796, -144.144, 27.4665, 0.74", "-94.3228, -144.565, 27.355, 1.33", "-94.8575, -145.066, 27.2576, 1.33", "-95.8349, -145.878, 27.194, 0.22", "-96.5332, -146.369, 27.2553, 0.22", "-96.9371, -146.622, 27.3417, 0.74", "-97.4364, -146.915, 27.4964, 0.88", "-98.4045, -147.457, 27.8629, 0.22", "-99.4293, -148.025, 28.3223, 0.22", "-100.088, -148.374, 28.6603, 0.22", "-100.633, -148.647, 28.944, 0.88", "-101.312, -148.986, 29.3069, 1.55", "-101.752, -149.221, 29.552, 1.55", "-102.604, -149.739, 30.0587, 0.37", "-103.612, -150.483, 30.6664, 0.66", "-104.478, -151.229, 31.1883, 0.22", "-104.865, -151.606, 31.4383, 0.29", "-105.35, -152.121, 31.8011, 0.22", "-105.734, -152.569, 32.1633, 0.81", "-106.081, -153.056, 32.6094, 1.11", "-106.449, -153.718, 33.2945, 0.22", "-106.728, -154.314, 33.9639, 0.22", "-107.1, -155.12, 34.8139, 0.81", "-107.378, -155.71, 35.392, 0.52", "-107.696, -156.38, 35.9596, 0.29", "-108.006, -157.041, 36.4246, 0.74", "-108.272, -157.647, 36.7715, 1.18", "-108.862, -159.165, 37.4756, 0.22", "-109.023, -159.598, 37.6408, 0.37", "-109.448, -160.544, 37.9539, 0.96", "-109.849, -161.306, 38.2049, 0.29", "-110.196, -161.907, 38.4111, 0.29", "-110.49, -162.381, 38.5972, 0.29", "-110.962, -163.078, 38.9089, 0.44", "-111.95, -164.488, 39.5692, 0.22", "-112.319, -164.994, 39.811, 0.22", "-112.69, -165.465, 40.0344, 0.74", "-113.212, -166.064, 40.3171, 1.4", "-113.986, -166.906, 40.7329, 0.29", "-114.52, -167.476, 41.0549, 0.22", "-114.822, -167.784, 41.2388, 0.22", "-115.351, -168.235, 41.545, 0.22", "-115.891, -168.622, 41.8564, 0.22", "-116.433, -168.962, 42.1482, 1.11", "-117.148, -169.422, 42.5026, 1.84", "-118.074, -170.069, 42.9532, 0.29", "-118.938, -170.772, 43.3989, 0.22", "-119.316, -171.15, 43.6124, 0.22", "-119.818, -171.73, 43.9233, 0.52", "-120.658, -172.789, 44.5175, 0.22", "-121.08, -173.375, 44.8554, 0.22", "-121.484, -173.984, 45.2219, 0.81", "-121.912, -174.619, 45.595, 1.4", "-122.658, -175.628, 46.2543, 0.22", "-123.255, -176.322, 46.7927, 0.37", "-123.681, -176.731, 47.1701, 0.81", "-123.989, -176.977, 47.3971, 0.81", "-125.244, -177.857, 48.1899, 0.22", "-125.808, -178.225, 48.4985, 0.74", "-126.636, -178.742, 48.8732, 1.7", "-127.271, -179.126, 49.1136, 1.7", "-128.835, -180.062, 49.6176, 0.22", "-129.282, -180.334, 49.7333, 0.44", "-129.788, -180.653, 49.8236, 0.22", "-130.558, -181.168, 49.911, 0.22", "-130.743, -181.306, 49.9231, 0.88", "-131.252, -181.748, 49.9537, 1.4", "-131.786, -182.319, 49.9979, 0.81", "-132.477, -183.21, 50.0366, 0.15", "-132.633, -183.458, 50.0402, 0.37", "-132.953, -184.149, 50.0301, 0.74", "-133.199, -184.812, 50.0214, 0.15", "-133.42, -185.6, 50.0097, 0.15", "-133.574, -186.341, 49.9988, 0.15", "-133.663, -187.001, 49.9784, 0.44", "-133.796, -188.335, 49.9138, 0.15", "-133.836, -188.835, 49.8843, 0.66", "-133.883, -189.412, 49.8486, 0.66", "-133.984, -190.831, 49.7612, 0.15", "-134.027, -191.695, 49.6906, 0.29", "-134.067, -192.869, 49.5776, 0.22", "-134.106, -193.532, 49.5096, 0.81", "-134.236, -194.833, 49.3622, 0.22", "-134.407, -196.02, 49.2315, 0.22", "-134.621, -197.02, 49.1375, 0.22", "-134.874, -197.875, 49.0785, 0.22", "-135.297, -199.032, 49.019, 0.22", "-135.633, -199.852, 48.9858, 1.18", "-135.864, -200.355, 48.9637, 1.62", "-136.53, -201.658, 48.911, 0.07", "-136.944, -202.439, 48.8848, 0.22", "-137.356, -203.239, 48.8568, 0.15", "-137.911, -204.371, 48.7983, 0.15", "-138.175, -204.92, 48.7673, 0.15", "-138.428, -205.471, 48.729, 0.74", "-138.738, -206.171, 48.6727, 1.4", "-139.415, -207.795, 48.5435, 0.22", "-139.756, -208.678, 48.4915, 0.88", "-140.201, -209.933, 48.4486, 0.15", "-140.303, -210.267, 48.4453, 0.15", "-140.466, -210.906, 48.4267, 0.29", "-140.716, -211.983, 48.3586, 0.07", "-140.898, -212.803, 48.2828, 0.88", "-141.125, -213.763, 48.1783, 0.22", "-141.313, -214.489, 48.0731, 0.29", "-141.61, -215.32, 47.9306, 0.15", "-141.966, -216.044, 47.7784, 0.15", "-142.246, -216.489, 47.6756, 0.81", "-142.549, -216.911, 47.5795, 1.25", "-142.979, -217.462, 47.466, 1.03", "-144.437, -219.3, 47.2234, 0.15", "-145.059, -220.122, 47.1765, 0.15", "-145.65, -220.942, 47.162, 0.15", "-146.216, -221.732, 47.1641, 0.96", "-146.923, -222.718, 47.1894, 0.07", "-147.654, -223.745, 47.2399, 0.07", "-148.504, -224.997, 47.3618, 0.07", "-148.817, -225.491, 47.4248, 0.15", "-149.215, -226.107, 47.5165, 0.07", "-149.609, -226.686, 47.6175, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.2809, -35.61, -17.6486, 0.88", "12.2088, -36.1645, -17.3729, 0.88", "12.9206, -36.7004, -17.1275, 0.81", "13.4882, -37.2644, -16.8564, 0.96", "14.024, -37.8588, -16.6363, 1.03", "14.7978, -38.7937, -16.4833, 0.44", "15.114, -39.179, -16.5111, 0.59", "15.7328, -39.9298, -16.7683, 0.37", "16.3636, -40.6221, -17.1843, 0.74", "17.1371, -41.3383, -17.8453, 0.96", "18.1526, -41.969, -18.8326, 1.18", "19.2225, -42.2019, -19.8929, 0.66", "19.9076, -42.0602, -20.5117, 0.52", "20.5903, -41.5945, -21.047, 0.52", "21.1927, -40.7478, -21.5035, 0.37", "21.3588, -40.1132, -21.628, 0.37", "21.475, -39.2945, -21.7055, 1.4", "21.4943, -38.6725, -21.7193, 1.7", "21.367, -37.0708, -21.7107, 0.59", "21.197, -36.1901, -21.719, 0.22", "20.8155, -35.2497, -21.7337, 0.22", "30.352, -34.4158, -25.3081, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "11.2809, -35.61, -17.6486, 1.11", "10.7161, -37.4251, -16.5253, 1.11", "10.3479, -38.6084, -15.7929, 1.4", "9.76005, -40.4973, -14.6238, 1.84" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-10.8011, -65.5558, -8.41104, 0.44", "-9.71677, -67.1343, -7.20629, 0.44", "-9.28226, -68.104, -6.36826, 0.74", "-9.14373, -68.6443, -5.88064, 0.29", "-9.05693, -69.1531, -5.40638, 0.59", "-8.88274, -70.3204, -4.32264, 0.44", "-8.76186, -71.0201, -3.70794, 0.66", "-8.70443, -71.86, -2.95915, 0.52", "-8.63111, -72.7082, -2.27855, 0.29", "-8.46771, -73.4569, -1.80076, 0.29", "-8.26365, -74.0146, -1.54355, 0.74", "-7.83114, -74.8718, -1.28366, 1.7", "-7.29409, -75.8033, -1.09256, 1.92", "-6.69693, -76.7513, -0.972267, 0.96", "-5.71325, -78.2814, -0.927067, 0.44", "-5.30793, -78.9174, -0.961689, 0.88", "-4.85703, -79.6447, -1.0396, 1.84", "-4.29434, -80.5852, -1.16933, 1.11", "-3.32068, -82.2191, -1.46024, 0.29", "-2.62925, -83.4001, -1.65957, 0.37", "-2.28089, -84.0277, -1.75075, 0.22", "-1.85835, -84.81, -1.80773, 0.22", "-1.50606, -85.4501, -1.80636, 0.88", "-1.12594, -86.1292, -1.74759, 1.99", "-0.58787, -87.1394, -1.55706, 2.29", "0.0916635, -88.5359, -1.13948, 0.37", "0.513145, -89.607, -0.775032, 0.22", "0.747536, -90.3384, -0.519837, 0.15", "0.836387, -90.6648, -0.412487, 0.15", "0.934865, -91.1019, -0.302303, 0.37", "1.08718, -91.9322, -0.211609, 0.88", "1.25268, -92.9901, -0.295935, 0.22", "1.31803, -93.4778, -0.404579, 0.22", "1.41018, -94.151, -0.591522, 0.22", "1.55846, -95.0281, -0.867134, 0.22", "1.70237, -95.7565, -1.14269, 0.74", "1.88515, -96.5371, -1.48883, 1.47", "2.1833, -97.7155, -2.05892, 0.22", "2.39599, -98.6227, -2.5243, 0.74", "2.67416, -99.8227, -3.16519, 0.22", "2.86446, -100.597, -3.5724, 0.22", "3.17608, -101.777, -4.16411, 0.29", "3.40483, -102.612, -4.56778, 0.52", "3.59556, -103.295, -4.87869, 1.18", "3.83994, -104.195, -5.22902, 2.29", "4.00561, -104.868, -5.44441, 2.29", "4.4012, -106.799, -5.88889, 0.22", "4.52754, -107.576, -6.01224, 0.37", "4.64472, -108.432, -6.09986, 0.29", "4.72987, -109.162, -6.12943, 0.15", "4.78012, -109.655, -6.12796, 0.22", "4.89127, -110.681, -6.11136, 0.15", "4.95788, -111.204, -6.09687, 0.59", "5.08696, -111.925, -6.0289, 0.22", "5.35936, -113.126, -5.82709, 0.22", "5.57565, -113.897, -5.6628, 0.81", "5.75895, -114.457, -5.53872, 1.77", "5.9426, -114.957, -5.43427, 2.14", "6.6995, -116.809, -5.10491, 0.22", "7.20902, -117.867, -4.96065, 0.22", "7.74708, -118.793, -4.88303, 0.22", "8.06965, -119.273, -4.86294, 0.37", "8.53579, -119.902, -4.87202, 0.81", "8.93403, -120.378, -4.92883, 0.96", "9.67109, -121.104, -5.17196, 0.22", "10.0823, -121.459, -5.28901, 0.22", "10.3566, -121.683, -5.31702, 0.22", "10.7918, -122.025, -5.25022, 0.22", "11.1392, -122.304, -5.11392, 0.22", "11.9808, -123.0, -4.6593, 0.59", "12.5885, -123.505, -4.28139, 0.37", "13.3307, -124.106, -3.82081, 0.88", "14.3867, -124.923, -3.17561, 1.77", "15.6881, -125.866, -2.47055, 0.22", "16.3216, -126.325, -2.19598, 0.66", "16.5169, -126.465, -2.13489, 0.66", "17.7293, -127.321, -1.96404, 0.22", "18.2835, -127.716, -1.98386, 0.88", "19.2371, -128.412, -2.15863, 1.47", "20.4807, -129.348, -2.55185, 0.22", "21.0688, -129.848, -2.78345, 0.29", "21.5444, -130.296, -2.98676, 0.29", "22.152, -130.94, -3.27159, 0.52", "22.5099, -131.356, -3.44004, 1.18", "23.0924, -132.13, -3.69309, 2.29", "24.0858, -133.661, -4.16022, 0.22", "24.4458, -134.271, -4.33663, 0.22", "24.6844, -134.701, -4.45323, 0.22", "24.8302, -134.967, -4.52061, 0.22", "25.1412, -135.518, -4.66959, 0.52", "25.6204, -136.216, -4.8526, 0.22", "26.1319, -136.779, -5.01155, 0.22", "26.4071, -137.033, -5.09636, 0.22", "26.8059, -137.358, -5.21189, 0.74", "27.4995, -137.913, -5.39067, 1.47", "29.0152, -139.101, -5.73351, 0.22", "29.5601, -139.546, -5.83358, 0.22", "30.1416, -140.08, -5.93068, 0.37", "30.482, -140.449, -5.9721, 0.52", "31.4685, -141.746, -6.05724, 0.22", "31.703, -142.118, -6.05271, 0.52", "32.0302, -142.764, -6.01171, 1.18", "32.331, -143.513, -5.96145, 0.44", "32.8191, -145.042, -5.85233, 0.22", "32.9811, -145.749, -5.82188, 0.88", "33.1147, -146.684, -5.8172, 1.99", "33.1683, -147.262, -5.8317, 1.99", "33.2614, -149.144, -5.93349, 0.37", "33.2781, -150.023, -6.00877, 0.88", "33.2636, -151.618, -6.19121, 0.22", "33.2472, -152.616, -6.31927, 0.22", "33.2315, -153.088, -6.39015, 0.44", "33.2034, -153.797, -6.49821, 0.88", "33.1138, -155.336, -6.74401, 0.15", "33.0275, -156.201, -6.89931, 0.22", "32.9093, -156.818, -7.00111, 0.15", "32.7638, -157.333, -7.07383, 0.37", "32.4588, -158.141, -7.19832, 0.15", "32.0716, -158.915, -7.31983, 0.29", "31.7854, -159.389, -7.38676, 1.03", "31.0021, -160.569, -7.53753, 0.22", "30.5608, -161.22, -7.60616, 0.29", "30.0928, -161.91, -7.65834, 0.88", "29.4977, -162.79, -7.70727, 1.7", "28.7475, -163.911, -7.75883, 0.59", "28.2665, -164.622, -7.79808, 0.44", "27.7568, -165.345, -7.85217, 0.74", "26.8499, -166.561, -7.91864, 0.15", "26.6759, -166.787, -7.9227, 0.15", "26.1246, -167.492, -7.93542, 0.44", "25.9403, -167.709, -7.93949, 0.44", "29.7646, -177.72, -8.16303, 0.44" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-10.8011, -65.5558, -8.41104, 1.77", "-12.3207, -66.8112, -9.39377, 1.77", "-13.7416, -68.1797, -10.5673, 1.33", "-14.5652, -69.1622, -11.458, 0.74", "-15.4338, -70.5001, -12.7425, 0.37", "-15.8203, -71.3015, -13.5071, 0.37", "-16.3813, -72.7841, -14.8693, 0.81", "-16.5738, -73.6915, -15.6815, 1.11", "-16.7134, -74.9197, -16.7324, 1.33", "-16.863, -76.2802, -17.7743, 0.88", "-17.0335, -77.5751, -18.6536, 0.74", "-17.3299, -79.0738, -19.5056, 0.74", "-17.6537, -80.2707, -20.0512, 1.03", "-18.1557, -81.8689, -20.6561, 1.18", "-18.9302, -84.0954, -21.352, 0.66", "-19.4319, -85.4056, -21.6995, 1.03", "-20.0295, -86.817, -22.049, 1.47", "-20.6098, -88.1058, -22.3458, 1.18", "-21.5916, -90.2306, -22.7723, 0.74", "-22.132, -91.3765, -22.9503, 0.44", "-22.5202, -92.2275, -23.0194, 0.44", "-22.9419, -93.2421, -22.997, 0.44", "-23.1763, -93.9569, -22.9293, 0.44", "-23.4303, -95.0156, -22.8255, 0.59", "-23.6762, -96.6264, -22.7403, 1.11", "-23.8108, -98.8246, -22.8373, 1.62", "-23.7753, -100.657, -23.1008, 0.96", "-23.6127, -102.669, -23.5886, 0.37", "-23.4306, -103.986, -24.0484, 0.66", "-23.1438, -105.39, -24.7187, 1.25", "-22.6978, -107.009, -25.6835, 1.7", "-22.1206, -108.735, -26.8795, 1.55", "-21.5803, -110.226, -27.9275, 0.66", "-21.1552, -111.417, -28.6998, 0.52", "-20.6127, -113.141, -29.5696, 0.44", "-20.3159, -114.351, -29.9694, 0.59", "-20.2229, -114.999, -30.0605, 0.52", "-20.1733, -117.303, -29.982, 0.37", "-20.2681, -118.631, -29.7717, 0.44", "-20.5418, -120.351, -29.3904, 0.96", "-20.8587, -121.754, -29.0693, 1.47", "-21.2059, -123.101, -28.7867, 1.84", "-21.574, -124.524, -28.5432, 0.66", "-22.0141, -126.326, -28.351, 0.52", "-22.269, -127.728, -28.3404, 0.44", "-22.4799, -129.332, -28.475, 0.44", "-22.6052, -130.781, -28.6794, 0.66", "-22.6613, -131.655, -28.8046, 1.62", "-22.7609, -132.888, -28.9271, 1.99", "-22.9531, -134.508, -28.9663, 0.96", "-23.0823, -135.457, -28.9042, 0.74", "-23.3747, -137.172, -28.7129, 0.44", "-23.6343, -138.447, -28.5832, 0.44", "-24.0677, -140.23, -28.4356, 0.44", "-24.4759, -141.699, -28.3523, 0.44", "-24.926, -143.186, -28.3663, 0.59", "-25.4201, -144.813, -28.517, 0.44", "-25.7845, -146.001, -28.7517, 0.81", "-26.0882, -146.916, -29.0258, 1.4", "-26.4848, -147.956, -29.4176, 1.55", "-27.507, -150.181, -30.3583, 0.59", "-27.7857, -150.715, -30.5854, 0.59", "-28.4665, -151.993, -31.0902, 0.44", "-29.2262, -153.337, -31.5877, 0.44", "-29.7317, -154.184, -31.888, 0.44", "-30.2391, -154.957, -32.1735, 0.44", "-30.7559, -155.656, -32.4633, 0.44", "-31.4708, -156.695, -32.8849, 0.66", "-33.9475, -171.052, -35.5507, 0.66", "-33.8413, -185.849, -36.196, 0.66", "-32.4709, -200.481, -34.363, 0.66", "-32.1028, -214.643, -30.0423, 0.66", "-28.7903, -228.922, -27.9187, 0.66", "-23.6967, -242.729, -26.2531, 0.66", "-21.0953, -257.266, -27.3832, 0.66", "-15.2104, -270.811, -26.2645, 0.66", "-10.3811, -284.809, -25.9649, 0.66", "-5.15261, -298.657, -25.4523, 0.66", "0.426873, -312.03, -22.3852, 0.66", "5.20632, -325.433, -18.2772, 0.66" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "30.352, -34.4158, -25.3081, 0.22", "41.983, -33.3887, -20.5556, 0.22", "53.5935, -30.9466, -16.2947, 0.22", "64.9865, -27.0178, -12.5954, 0.22", "76.9981, -23.6383, -10.8007, 0.22", "88.5817, -19.0619, -8.85134, 0.22", "99.6686, -13.9185, -5.76168, 0.22", "110.092, -7.92814, -1.96834, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "30.352, -34.4158, -25.3081, 0.22", "34.3871, -34.4446, -32.8328, 0.22", "37.9048, -35.7164, -40.5082, 0.22", "42.3759, -38.2707, -47.3191, 0.22", "47.4444, -41.9822, -53.1016, 0.22", "52.5137, -45.2329, -59.1545, 0.22", "58.9678, -47.9453, -64.0424, 0.22", "64.2191, -50.5351, -70.2569, 0.22", "69.2364, -53.6916, -76.4023, 0.22", "73.8911, -57.561, -82.4243, 0.22", "77.6484, -60.1474, -89.6421, 0.22", "79.8493, -61.4036, -97.7957, 0.22", "82.9596, -62.2404, -105.703, 0.22", "86.2134, -61.5953, -113.571, 0.22", "89.5639, -60.7108, -121.374, 0.22", "91.8886, -59.485, -129.498, 0.22", "96.196, -57.9861, -136.717, 0.22", "100.413, -56.411, -143.972, 0.22", "105.86, -53.3563, -149.794, 0.22", "112.521, -49.7296, -153.717, 0.22", "118.971, -46.5177, -158.297, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "9.76005, -40.4973, -14.6238, 1.47", "9.49337, -41.5813, -13.149, 1.47", "9.21284, -42.9735, -11.4182, 1.47", "9.06749, -44.0898, -10.0555, 1.03", "9.02092, -45.2846, -8.59511, 0.66", "9.08, -46.1294, -7.59334, 0.52", "9.14837, -46.5772, -7.07645, 0.44", "9.3096, -47.1494, -6.49073, 0.44", "9.62347, -47.9283, -5.7742, 0.66", "10.0407, -48.7218, -5.06171, 1.18", "10.6912, -49.8039, -4.04361, 0.74", "11.0929, -50.5286, -3.33617, 1.11", "11.4847, -51.5173, -2.47414, 0.66", "11.5296, -52.062, -2.16884, 0.44", "11.4473, -52.3833, -2.11658, 0.44", "11.067, -53.241, -2.18155, 0.44", "10.6626, -54.072, -2.27142, 0.52", "9.94041, -55.6774, -2.43743, 0.52", "9.41773, -56.9977, -2.51991, 0.74", "9.11312, -58.0131, -2.48862, 1.77", "8.98189, -58.6951, -2.37223, 2.14", "8.7753, -61.2654, -1.44922, 0.44", "8.78382, -61.9831, -0.989745, 0.29", "8.83832, -62.6517, -0.360845, 0.29", "8.93527, -63.4487, 0.534302, 0.52", "9.04429, -64.4078, 1.75111, 0.52", "9.0574, -65.0053, 2.5566, 0.81", "8.95824, -65.8136, 3.66056, 1.62", "8.82706, -66.3773, 4.35267, 1.62", "8.55536, -67.3213, 5.31524, 0.37", "8.30785, -68.1652, 5.99526, 0.37", "8.07076, -69.3552, 6.68888, 0.52", "8.07102, -70.1429, 7.01214, 0.22", "8.21275, -70.8828, 7.28101, 0.22", "8.46932, -71.7171, 7.62509, 0.74", "8.7821, -72.5435, 8.03168, 1.03", "9.13618, -73.7602, 8.68488, 0.22", "9.31285, -74.799, 9.35055, 0.44", "9.36602, -76.1799, 10.3413, 1.03", "9.30854, -77.0612, 10.9981, 2.14", "9.20439, -77.821, 11.5704, 2.43", "8.91633, -79.4582, 12.7434, 0.81", "8.6679, -80.8562, 13.6573, 0.37", "8.53412, -81.9047, 14.2285, 0.37", "8.49191, -82.7679, 14.6075, 2.14", "8.50735, -84.4058, 15.2479, 0.88", "8.56417, -85.5874, 15.6591, 0.29", "8.64452, -86.5703, 15.9572, 0.29", "8.6871, -87.4682, 16.179, 0.22", "8.66306, -88.2056, 16.3467, 0.22", "8.57953, -88.841, 16.5435, 0.22", "8.43115, -89.4835, 16.8271, 0.52", "8.21595, -90.2247, 17.2544, 0.74", "8.00423, -90.9318, 17.6988, 0.22", "7.79706, -91.7923, 18.2551, 0.37", "7.55736, -93.1011, 19.0691, 0.96", "7.40425, -94.2503, 19.7626, 2.14", "7.32184, -95.0028, 20.2395, 2.73", "7.1332, -96.8135, 21.4775, 0.22", "7.01811, -97.689, 22.138, 0.22", "6.95744, -98.0237, 22.4176, 0.22", "6.88996, -98.3415, 22.6848, 0.29", "6.71829, -99.1045, 23.3541, 0.29", "6.56472, -99.6405, 23.834, 0.22", "6.29468, -100.487, 24.5638, 0.22", "6.16437, -100.901, 24.8927, 0.96", "5.92291, -101.923, 25.6868, 2.14", "5.71051, -103.476, 26.8389, 0.29", "5.66174, -104.491, 27.5371, 0.29", "5.66222, -105.28, 28.0742, 1.03", "5.65477, -106.284, 28.765, 0.44", "5.65107, -107.474, 29.6348, 0.29", "5.67513, -108.347, 30.3347, 0.59", "5.73606, -108.858, 30.758, 0.22", "5.81557, -109.313, 31.1337, 0.22", "5.98828, -110.3, 31.9076, 0.22", "6.09914, -111.143, 32.5426, 0.22", "6.12149, -111.487, 32.7944, 0.22", "6.13892, -112.223, 33.3594, 1.11", "6.13883, -112.692, 33.7308, 1.62", "6.11785, -114.26, 35.035, 0.22", "6.10162, -115.096, 35.7703, 0.22", "6.08085, -115.606, 36.2308, 0.96", "6.04948, -116.535, 37.1199, 1.77", "6.04299, -117.631, 38.2722, 0.22", "6.09467, -118.301, 39.0413, 0.22", "6.17202, -118.701, 39.5288, 0.22", "6.35998, -119.191, 40.1017, 0.22", "6.6426, -119.664, 40.6584, 0.52", "7.13811, -120.209, 41.2629, 0.22", "7.5298, -120.62, 41.6579, 0.22", "7.6881, -121.013, 41.9397, 0.22", "7.80864, -121.597, 42.3492, 0.22", "7.92812, -122.256, 42.8144, 0.22", "8.00882, -122.732, 43.1832, 0.66", "8.10879, -123.386, 43.7568, 0.74", "8.25641, -124.231, 44.6149, 0.22", "8.45151, -125.052, 45.5525, 0.88", "8.6958, -125.852, 46.5199, 0.22", "8.9247, -126.492, 47.3488, 0.44", "9.22425, -127.224, 48.4062, 1.4", "9.61937, -128.072, 49.7546, 2.29", "10.4876, -129.705, 52.5698, 0.22", "10.8949, -130.389, 53.7972, 1.11", "11.5107, -131.228, 55.3068, 0.22", "11.9617, -131.747, 56.1873, 0.22", "12.2569, -132.04, 56.6759, 0.22", "12.5885, -132.358, 57.1895, 0.96", "12.9595, -132.724, 57.7705, 1.18", "13.7385, -133.831, 59.1905, 0.22", "14.0033, -134.399, 59.7848, 0.22", "14.3053, -135.339, 60.6478, 0.88", "14.5126, -136.283, 61.4666, 1.47", "14.5884, -136.797, 61.9263, 1.47", "14.7082, -138.137, 63.1647, 0.29", "14.7219, -138.738, 63.7535, 0.29", "14.7463, -139.447, 64.5287, 0.88", "14.7973, -140.216, 65.4661, 1.77", "14.9239, -141.197, 66.9809, 1.33", "15.0116, -141.86, 68.2371, 0.37", "15.0372, -142.326, 69.2932, 0.37", "15.0633, -142.861, 70.5901, 0.37", "15.0987, -143.12, 71.2594, 0.37", "15.2679, -143.581, 72.5392, 0.37", "15.6355, -143.959, 73.6718, 0.96", "16.1801, -144.34, 74.8482, 0.37", "16.5716, -144.621, 75.6193, 0.37", "16.939, -144.955, 76.4357, 0.37", "17.2781, -145.323, 77.3066, 1.03", "18.0414, -146.288, 79.5217, 1.77", "18.4088, -146.759, 80.5908, 1.77", "19.0755, -147.716, 82.6122, 0.44", "19.3373, -148.285, 83.6448, 0.44", "19.4359, -148.735, 84.3606, 0.29", "19.4241, -149.908, 85.9724, 1.47", "19.2961, -150.493, 86.6473, 0.66", "19.0659, -151.285, 87.4656, 0.29", "18.8314, -152.01, 88.1656, 0.29", "18.6847, -152.755, 88.899, 0.29", "18.5944, -153.518, 89.727, 0.22", "18.5442, -153.971, 90.2783, 0.22", "18.5231, -154.387, 90.8146, 0.44", "18.5343, -154.93, 91.4614, 0.66", "18.6671, -155.725, 92.3304, 0.29", "18.8865, -156.296, 92.9112, 0.29", "19.0348, -156.598, 93.2306, 0.29", "19.3657, -157.272, 93.9688, 0.96", "19.7182, -158.066, 94.8657, 0.29", "19.9231, -158.547, 95.3589, 0.22", "20.3926, -159.665, 96.4078, 0.52", "20.8389, -160.67, 97.3287, 0.22", "21.2293, -161.614, 98.2142, 0.96", "21.4841, -162.339, 98.9258, 1.7", "21.7888, -163.462, 100.055, 0.29", "21.8992, -164.256, 100.832, 0.22", "21.902, -164.871, 101.39, 0.22", "21.827, -166.016, 102.318, 0.88", "21.6915, -166.964, 103.036, 0.22", "21.5493, -167.522, 103.431, 0.22", "21.294, -168.247, 103.932, 0.22", "21.0631, -168.927, 104.366, 0.88", "20.7536, -170.102, 105.022, 0.29", "20.6105, -170.906, 105.429, 0.22", "20.3671, -172.299, 106.143, 0.37", "20.2469, -172.813, 106.429, 0.22", "20.0998, -173.33, 106.767, 0.22", "19.9572, -173.935, 107.204, 0.22", "19.9499, -174.437, 107.56, 0.22", "20.0164, -175.048, 107.94, 0.22", "20.0936, -175.51, 108.206, 0.37", "20.2447, -176.446, 108.707, 1.18", "20.3765, -177.313, 109.157, 1.77", "20.7243, -179.612, 110.336, 0.29", "20.9444, -180.819, 110.941, 0.29", "21.2092, -181.956, 111.498, 0.29", "21.373, -182.524, 111.785, 1.18", "21.7007, -183.454, 112.274, 1.47", "22.1533, -184.563, 112.892, 0.22", "22.4027, -185.037, 113.162, 0.22", "22.7094, -185.564, 113.453, 0.22", "23.059, -186.175, 113.729, 0.22", "23.2744, -186.619, 113.876, 0.52", "23.7191, -187.792, 114.152, 0.96", "24.1031, -189.124, 114.397, 0.29", "24.2736, -190.132, 114.591, 0.22", "24.3272, -190.715, 114.71, 0.44", "24.3832, -191.884, 114.947, 0.88", "24.4283, -193.286, 115.252, 0.15", "24.4705, -194.229, 115.488, 0.96", "24.572, -195.77, 115.913, 0.22", "24.6662, -196.749, 116.194, 0.22", "24.754, -197.478, 116.41, 0.88", "24.8521, -198.125, 116.611, 1.03", "25.0492, -199.19, 116.917, 0.22", "25.1685, -199.676, 117.046, 0.22", "25.5562, -200.886, 117.335, 0.44", "25.9869, -202.123, 117.621, 0.22", "26.2336, -202.809, 117.763, 0.22", "26.452, -203.417, 117.862, 0.66", "26.7694, -204.274, 117.956, 1.47", "27.2202, -205.405, 118.037, 0.22", "27.4947, -206.01, 118.066, 0.29", "27.796, -206.624, 118.108, 0.22", "28.2014, -207.395, 118.199, 0.22", "28.5331, -208.013, 118.318, 0.88", "28.9206, -208.762, 118.499, 0.22", "29.4566, -209.869, 118.827, 0.29", "29.9868, -211.028, 119.221, 0.88", "30.8296, -212.95, 119.96, 0.15", "31.1076, -213.622, 120.234, 0.59", "31.4338, -214.472, 120.584, 1.18", "31.8806, -215.839, 121.15, 0.15", "31.9542, -216.16, 121.275, 0.15", "32.0214, -216.733, 121.491, 0.74", "32.0727, -217.964, 121.956, 0.15", "32.1027, -218.609, 122.191, 0.22", "32.145, -219.318, 122.465, 0.15", "32.1854, -219.817, 122.678, 0.37", "32.2773, -220.753, 123.168, 0.07", "32.3279, -221.416, 123.629, 0.07", "32.3461, -221.851, 124.08, 0.07", "32.3609, -222.199, 124.493, 0.29", "32.402, -222.759, 125.271, 0.96", "32.4688, -223.432, 126.385, 1.18", "32.4914, -223.955, 127.523, 0.44", "32.4232, -224.324, 128.588, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.76005, -40.4973, -14.6238, 1.62", "9.88281, -41.5917, -15.5275, 1.62", "10.4351, -43.1119, -16.977, 0.81", "11.0598, -44.0327, -17.81, 0.81", "11.9196, -45.0251, -18.6441, 0.81", "12.4736, -45.6872, -19.1236, 0.66", "13.1196, -46.5984, -19.6534, 1.25", "14.0132, -47.862, -20.2331, 1.55", "15.1717, -49.729, -20.9289, 0.66", "15.5616, -50.6592, -21.1727, 0.74", "15.9123, -52.5526, -21.5066, 0.96", "15.9116, -54.8651, -21.8029, 0.88", "15.724, -55.8844, -21.8705, 0.81", "15.2199, -57.3918, -21.9626, 0.59", "14.7058, -58.5327, -22.0699, 0.52", "14.2746, -59.3857, -22.1616, 0.81", "13.7344, -60.4121, -22.3025, 0.74", "12.9158, -62.1238, -22.6008, 0.66", "12.3257, -63.8015, -22.8851, 0.44", "12.1712, -64.6088, -23.0041, 0.74", "12.1315, -65.5864, -23.1433, 1.55", "12.2337, -66.6695, -23.2838, 1.33", "12.6493, -68.2695, -23.4704, 0.59", "13.2501, -69.7844, -23.6464, 0.52", "13.9551, -71.2546, -23.7885, 0.74", "14.4687, -72.2553, -23.8831, 1.25", "14.8802, -73.0421, -23.9668, 1.84", "15.7805, -74.697, -24.1529, 0.44", "16.4672, -75.9457, -24.326, 0.44", "17.2167, -77.392, -24.5965, 0.37", "17.728, -78.4496, -24.8311, 0.29", "18.1783, -79.5072, -25.0728, 0.29", "21.7113, -90.2939, -29.0429, 0.29", "27.0583, -100.327, -32.9614, 0.29", "33.5586, -110.324, -34.5106, 0.29", "41.3744, -119.444, -33.9278, 0.29", "49.2887, -128.052, -31.1238, 0.29", "58.4263, -135.493, -28.7288, 0.29", "68.0132, -142.489, -26.7921, 0.29", "77.0561, -150.411, -26.5364, 0.29", "86.0265, -158.303, -27.8934, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_31", "dend_24", "dend_17", "dend_0", "dend_43", "dend_32", "dend_28", "dend_25", "dend_21", "dend_18", "dend_12", "dend_1", "dend_40", "dend_33", "dend_30", "dend_29", "dend_27", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_16", "dend_13", "dend_11", "dend_2", "dend_42", "dend_41", "dend_35", "dend_34", "dend_15", "dend_14", "dend_10", "dend_3", "dend_37", "dend_36", "dend_7", "dend_4", "dend_39", "dend_38", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_31", "dend_24", "dend_17", "dend_0", "dend_43", "dend_32", "dend_28", "dend_25", "dend_21", "dend_18", "dend_12", "dend_1", "dend_40", "dend_33", "dend_30", "dend_29", "dend_27", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_16", "dend_13", "dend_11", "dend_2", "dend_42", "dend_41", "dend_35", "dend_34", "dend_15", "dend_14", "dend_10", "dend_3", "dend_37", "dend_36", "dend_7", "dend_4", "dend_39", "dend_38", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_LBC_72e65525d3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_43, id: dend_43, parent: dend_31
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_31, dend_24, dend_17, dend_0, dend_43, dend_32, dend_28, dend_25, dend_21, dend_18, dend_12, dend_1, dend_40, dend_33, dend_30, dend_29, dend_27, dend_26, dend_23, dend_22, dend_20, dend_19, dend_16, dend_13, dend_11, dend_2, dend_42, dend_41, dend_35, dend_34, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, dend_7, dend_4, dend_39, dend_38, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_31, dend_24, dend_17, dend_0, dend_43, dend_32, dend_28, dend_25, dend_21, dend_18, dend_12, dend_1, dend_40, dend_33, dend_30, dend_29, dend_27, dend_26, dend_23, dend_22, dend_20, dend_19, dend_16, dend_13, dend_11, dend_2, dend_42, dend_41, dend_35, dend_34, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, dend_7, dend_4, dend_39, dend_38, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4999986646833033)
    connect dend_31(0), soma_0(0.4999986646833033)
    connect dend_24(0), soma_0(0.4999986646833033)
    connect dend_17(0), soma_0(0.4999986646833033)
    connect dend_0(0), soma_0(0.4999986646833033)
    connect axon_0(0), soma_0(1.0)
    connect dend_43(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.57692, -12.317, 0.00224913, 3.04291 ) }
    soma_0 { pt3dadd( -4.1223, -11.0092, 0.00199417, 5.29598 ) }
    soma_0 { pt3dadd( -3.66768, -9.70142, 0.00173921, 6.96143 ) }
    soma_0 { pt3dadd( -3.21306, -8.39361, 0.00148425, 8.41327 ) }
    soma_0 { pt3dadd( -2.75844, -7.0858, 0.00122929, 10.0352 ) }
    soma_0 { pt3dadd( -2.30382, -5.77799, 9.74331E-4, 11.6729 ) }
    soma_0 { pt3dadd( -1.8492, -4.47018, 7.1937E-4, 13.3983 ) }
    soma_0 { pt3dadd( -1.39458, -3.16237, 4.6441E-4, 14.8005 ) }
    soma_0 { pt3dadd( -0.93996, -1.85456, 2.0945E-4, 16.236 ) }
    soma_0 { pt3dadd( -0.485339, -0.546748, -4.55105E-5, 17.3716 ) }
    soma_0 { pt3dadd( -0.0307183, 0.761062, -3.00471E-4, 17.7953 ) }
    soma_0 { pt3dadd( 0.423902, 2.06887, -5.55431E-4, 18.1204 ) }
    soma_0 { pt3dadd( 0.878523, 3.37668, -8.10391E-4, 17.9034 ) }
    soma_0 { pt3dadd( 1.33314, 4.68449, -0.00106535, 17.6783 ) }
    soma_0 { pt3dadd( 1.78776, 5.9923, -0.00132031, 17.2859 ) }
    soma_0 { pt3dadd( 2.24238, 7.30011, -0.00157527, 16.2941 ) }
    soma_0 { pt3dadd( 2.69701, 8.60792, -0.00183023, 15.2244 ) }
    soma_0 { pt3dadd( 3.15163, 9.91573, -0.00208519, 13.4378 ) }
    soma_0 { pt3dadd( 3.60625, 11.2235, -0.00234015, 10.8129 ) }
    soma_0 { pt3dadd( 4.06087, 12.5313, -0.00259511, 7.84199 ) }
    soma_0 { pt3dadd( 4.51549, 13.8392, -0.00285007, 4.6247 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 7.60717, 9.2662, 11.7723, 1.03 ) }
    dend_44 { pt3dadd( 7.60717, 9.2662, 11.7723, 1.03 ) }
    dend_44 { pt3dadd( 8.12305, 10.8503, 11.8731, 1.03 ) }
    dend_44 { pt3dadd( 8.65312, 12.0572, 12.0305, 1.03 ) }
    dend_44 { pt3dadd( 9.59597, 13.7091, 12.3925, 1.18 ) }
    dend_44 { pt3dadd( 10.6928, 15.2067, 12.8639, 1.18 ) }
    dend_44 { pt3dadd( 11.9533, 16.6262, 13.4401, 1.03 ) }
    dend_44 { pt3dadd( 13.7339, 18.123, 14.3097, 1.18 ) }
    dend_44 { pt3dadd( 15.3403, 19.0617, 15.117, 1.18 ) }
    dend_44 { pt3dadd( 17.1683, 19.7929, 16.0217, 1.84 ) }
    dend_44 { pt3dadd( 19.1858, 20.3517, 17.0254, 2.14 ) }
    dend_44 { pt3dadd( 20.8386, 20.7091, 17.8288, 1.84 ) }
    dend_44 { pt3dadd( 23.1246, 21.1967, 18.9052, 0.88 ) }
    dend_44 { pt3dadd( 24.6952, 21.6244, 19.6529, 0.52 ) }
    dend_44 { pt3dadd( 25.6283, 22.0456, 20.0741, 0.52 ) }
    dend_44 { pt3dadd( 26.6533, 22.8672, 20.5406, 0.52 ) }
    dend_44 { pt3dadd( 27.5335, 24.0636, 20.9854, 0.96 ) }
    dend_44 { pt3dadd( 28.419, 25.7747, 21.478, 1.47 ) }
    dend_44 { pt3dadd( 29.0637, 27.4089, 21.9101, 1.77 ) }
    dend_44 { pt3dadd( 29.6949, 29.3153, 22.4259, 1.7 ) }
    dend_44 { pt3dadd( 30.3051, 31.3188, 23.0436, 0.96 ) }
    dend_44 { pt3dadd( 30.8056, 32.8471, 23.651, 0.66 ) }
    dend_44 { pt3dadd( 30.9513, 33.189, 23.8573, 0.66 ) }
    dend_44 { pt3dadd( 31.3207, 33.765, 24.351, 0.66 ) }
    dend_44 { pt3dadd( 32.0201, 34.4948, 25.2152, 0.66 ) }
    dend_44 { pt3dadd( 32.8433, 35.209, 26.0626, 0.66 ) }
    dend_44 { pt3dadd( 34.0182, 36.2702, 27.1229, 1.03 ) }
    dend_44 { pt3dadd( 35.0113, 37.2396, 27.911, 1.77 ) }
    dend_44 { pt3dadd( 36.0596, 38.3668, 28.7091, 2.36 ) }
    dend_44 { pt3dadd( 37.2569, 39.747, 29.5348, 1.7 ) }
    dend_44 { pt3dadd( 39.1822, 42.106, 30.7188, 0.52 ) }
    dend_44 { pt3dadd( 40.2713, 43.5207, 31.2793, 0.52 ) }
    dend_44 { pt3dadd( 41.1, 44.6559, 31.6702, 0.96 ) }
    dend_44 { pt3dadd( 42.2337, 46.3064, 32.1835, 2.14 ) }
    dend_44 { pt3dadd( 43.0728, 47.6154, 32.5586, 2.36 ) }
    dend_44 { pt3dadd( 43.9885, 49.1753, 32.9338, 1.77 ) }
    dend_44 { pt3dadd( 45.0694, 51.2106, 33.3585, 0.29 ) }
    dend_44 { pt3dadd( 45.6173, 52.3394, 33.5742, 0.29 ) }
    dend_44 { pt3dadd( 46.0948, 53.4466, 33.7626, 0.37 ) }
    dend_44 { pt3dadd( 46.7258, 55.0512, 33.9781, 0.96 ) }
    dend_44 { pt3dadd( 47.3143, 56.6836, 34.2061, 0.29 ) }
    dend_44 { pt3dadd( 47.6696, 57.6686, 34.3331, 0.29 ) }
    dend_44 { pt3dadd( 47.9008, 58.3055, 34.4022, 0.29 ) }
    dend_44 { pt3dadd( 48.3195, 59.4073, 34.4599, 0.96 ) }
    dend_44 { pt3dadd( 48.7403, 60.4067, 34.4824, 1.7 ) }
    dend_44 { pt3dadd( 49.0767, 61.1473, 34.4793, 1.7 ) }
    dend_44 { pt3dadd( 50.1352, 63.3382, 34.4528, 0.29 ) }
    dend_44 { pt3dadd( 51.0512, 65.1779, 34.4748, 0.52 ) }
    dend_44 { pt3dadd( 51.4681, 66.0249, 34.4992, 0.22 ) }
    dend_44 { pt3dadd( 52.2711, 67.6473, 34.6018, 0.29 ) }
    dend_44 { pt3dadd( 52.719, 68.615, 34.7056, 1.11 ) }
    dend_44 { pt3dadd( 53.0929, 69.4627, 34.8329, 2.06 ) }
    dend_44 { pt3dadd( 53.6553, 70.7438, 35.0723, 2.8 ) }
    dend_44 { pt3dadd( 54.2784, 72.0874, 35.3728, 2.14 ) }
    dend_44 { pt3dadd( 55.1579, 73.9499, 35.8837, 0.52 ) }
    dend_44 { pt3dadd( 56.0254, 75.7639, 36.4382, 0.52 ) }
    dend_44 { pt3dadd( 56.5429, 76.7956, 36.7857, 0.52 ) }
    dend_44 { pt3dadd( 57.2494, 78.1662, 37.2881, 0.52 ) }
    dend_44 { pt3dadd( 57.8259, 79.2999, 37.706, 1.18 ) }
    dend_44 { pt3dadd( 58.4965, 80.5868, 38.1738, 2.43 ) }
    dend_44 { pt3dadd( 59.1876, 81.8087, 38.5728, 2.65 ) }
    dend_44 { pt3dadd( 60.4009, 83.7221, 39.1262, 0.29 ) }
    dend_44 { pt3dadd( 61.3257, 85.0566, 39.4003, 0.29 ) }
    dend_44 { pt3dadd( 62.4845, 86.6173, 39.5725, 0.59 ) }
    dend_44 { pt3dadd( 64.0926, 88.6236, 39.482, 0.22 ) }
    dend_44 { pt3dadd( 65.1348, 89.8153, 39.1829, 1.03 ) }
    dend_44 { pt3dadd( 65.828, 90.5812, 38.8309, 0.66 ) }
    dend_44 { pt3dadd( 67.2105, 92.0839, 37.7841, 0.22 ) }
    dend_44 { pt3dadd( 67.6647, 92.5949, 37.3723, 0.22 ) }
    dend_44 { pt3dadd( 68.5007, 93.604, 36.5396, 1.11 ) }
    dend_44 { pt3dadd( 69.2348, 94.6226, 35.7866, 1.4 ) }
    dend_44 { pt3dadd( 70.3084, 96.2577, 34.8614, 0.22 ) }
    dend_44 { pt3dadd( 71.2777, 97.7445, 34.255, 0.37 ) }
    dend_44 { pt3dadd( 71.9347, 98.6853, 34.039, 0.81 ) }
    dend_44 { pt3dadd( 72.7374, 99.6941, 33.9637, 1.33 ) }
    dend_44 { pt3dadd( 73.7459, 100.809, 34.0866, 0.52 ) }
    dend_44 { pt3dadd( 75.1585, 102.15, 34.5161, 0.22 ) }
    dend_44 { pt3dadd( 76.0616, 102.903, 34.9364, 0.22 ) }
    dend_44 { pt3dadd( 76.9112, 103.623, 35.5476, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_44 { pt3dadd( 77.8145, 104.442, 36.4376, 0.22 ) }
    dend_44 { pt3dadd( 78.2832, 104.925, 37.0619, 0.81 ) }
    dend_44 { pt3dadd( 78.9154, 105.676, 38.1029, 1.33 ) }
    dend_44 { pt3dadd( 79.5614, 106.526, 39.2572, 0.88 ) }
    dend_44 { pt3dadd( 80.8822, 108.318, 41.6503, 0.37 ) }
    dend_44 { pt3dadd( 81.7445, 109.51, 43.2454, 0.66 ) }
    dend_44 { pt3dadd( 82.1933, 110.141, 44.0929, 1.33 ) }
    dend_44 { pt3dadd( 82.7747, 111.054, 45.341, 2.43 ) }
    dend_44 { pt3dadd( 83.4776, 112.371, 47.0071, 0.29 ) }
    dend_44 { pt3dadd( 83.8418, 113.125, 47.8804, 0.29 ) }
    dend_44 { pt3dadd( 84.2265, 113.988, 48.7598, 0.29 ) }
    dend_44 { pt3dadd( 84.7042, 115.158, 49.8249, 1.03 ) }
    dend_44 { pt3dadd( 85.48, 117.22, 51.5437, 1.03 ) }
    dend_44 { pt3dadd( 85.9617, 118.78, 52.7327, 0.44 ) }
    dend_44 { pt3dadd( 86.1918, 119.819, 53.4414, 0.22 ) }
    dend_44 { pt3dadd( 86.313, 120.497, 53.8138, 0.44 ) }
    dend_44 { pt3dadd( 86.474, 121.386, 54.1832, 1.11 ) }
    dend_44 { pt3dadd( 86.6749, 122.283, 54.4315, 0.52 ) }
    dend_44 { pt3dadd( 87.0838, 123.693, 54.6738, 0.22 ) }
    dend_44 { pt3dadd( 87.5387, 125.142, 54.9431, 0.22 ) }
    dend_44 { pt3dadd( 87.8725, 126.061, 55.0964, 0.29 ) }
    dend_44 { pt3dadd( 88.2819, 126.928, 55.222, 0.88 ) }
    dend_44 { pt3dadd( 88.927, 128.068, 55.3551, 1.7 ) }
    dend_44 { pt3dadd( 89.5193, 129.036, 55.4603, 1.99 ) }
    dend_44 { pt3dadd( 90.3395, 130.294, 55.5884, 0.74 ) }
    dend_44 { pt3dadd( 91.5727, 132.122, 55.775, 0.29 ) }
    dend_44 { pt3dadd( 92.5009, 133.555, 55.9483, 0.22 ) }
    dend_44 { pt3dadd( 93.1271, 134.631, 56.0826, 0.22 ) }
    dend_44 { pt3dadd( 93.9407, 136.264, 56.296, 0.29 ) }
    dend_44 { pt3dadd( 94.3488, 137.256, 56.4284, 0.29 ) }
    dend_44 { pt3dadd( 94.577, 137.917, 56.5214, 0.88 ) }
    dend_44 { pt3dadd( 94.9066, 138.972, 56.7033, 1.4 ) }
    dend_44 { pt3dadd( 95.6118, 141.147, 57.0988, 0.22 ) }
    dend_44 { pt3dadd( 96.1238, 142.494, 57.3518, 0.22 ) }
    dend_44 { pt3dadd( 96.5738, 143.455, 57.5372, 0.88 ) }
    dend_44 { pt3dadd( 97.3722, 144.83, 57.8224, 1.62 ) }
    dend_44 { pt3dadd( 99.0028, 147.146, 58.3516, 0.22 ) }
    dend_44 { pt3dadd( 100.126, 148.463, 58.6794, 0.22 ) }
    dend_44 { pt3dadd( 100.797, 149.109, 58.8385, 0.22 ) }
    dend_44 { pt3dadd( 101.754, 149.899, 59.0045, 0.29 ) }
    dend_44 { pt3dadd( 103.068, 150.856, 59.2247, 0.22 ) }
    dend_44 { pt3dadd( 104.227, 151.613, 59.4114, 0.81 ) }
    dend_44 { pt3dadd( 104.675, 151.877, 59.4841, 0.88 ) }
    dend_44 { pt3dadd( 106.522, 152.957, 59.8098, 0.22 ) }
    dend_44 { pt3dadd( 107.119, 153.336, 59.9172, 0.74 ) }
    dend_44 { pt3dadd( 108.342, 154.242, 60.1509, 1.47 ) }
    dend_44 { pt3dadd( 109.215, 154.955, 60.3231, 0.59 ) }
    dend_44 { pt3dadd( 110.267, 155.85, 60.5257, 0.22 ) }
    dend_44 { pt3dadd( 111.148, 156.674, 60.6848, 0.22 ) }
    dend_44 { pt3dadd( 111.73, 157.297, 60.8017, 0.22 ) }
    dend_44 { pt3dadd( 112.95, 158.786, 61.0419, 0.29 ) }
    dend_44 { pt3dadd( 113.425, 159.448, 61.1342, 0.81 ) }
    dend_44 { pt3dadd( 113.903, 160.2, 61.2442, 0.96 ) }
    dend_44 { pt3dadd( 114.777, 161.672, 61.4212, 0.22 ) }
    dend_44 { pt3dadd( 115.665, 163.228, 61.5725, 0.22 ) }
    dend_44 { pt3dadd( 116.158, 164.1, 61.6281, 1.18 ) }
    dend_44 { pt3dadd( 116.714, 165.132, 61.6563, 2.29 ) }
    dend_44 { pt3dadd( 117.039, 165.792, 61.6624, 2.06 ) }
    dend_44 { pt3dadd( 118.539, 169.151, 61.6752, 0.22 ) }
    dend_44 { pt3dadd( 118.965, 170.193, 61.6659, 0.22 ) }
    dend_44 { pt3dadd( 119.304, 171.123, 61.6431, 0.29 ) }
    dend_44 { pt3dadd( 119.655, 172.246, 61.6255, 0.37 ) }
    dend_44 { pt3dadd( 119.939, 173.459, 61.6371, 0.22 ) }
    dend_44 { pt3dadd( 120.091, 174.443, 61.6929, 0.22 ) }
    dend_44 { pt3dadd( 120.148, 175.208, 61.779, 0.81 ) }
    dend_44 { pt3dadd( 120.239, 176.232, 61.9353, 1.62 ) }
    dend_44 { pt3dadd( 120.377, 177.56, 62.1847, 0.15 ) }
    dend_44 { pt3dadd( 120.57, 179.157, 62.497, 0.15 ) }
    dend_44 { pt3dadd( 120.646, 179.739, 62.602, 0.15 ) }
    dend_44 { pt3dadd( 120.801, 180.886, 62.8113, 0.59 ) }
    dend_44 { pt3dadd( 120.941, 181.976, 63.0373, 0.22 ) }
    dend_44 { pt3dadd( 121.036, 182.715, 63.2043, 0.22 ) }
    dend_44 { pt3dadd( 121.166, 183.701, 63.4572, 0.29 ) }
    dend_44 { pt3dadd( 121.345, 184.822, 63.7813, 0.29 ) }
    dend_44 { pt3dadd( 121.555, 185.877, 64.1383, 0.22 ) }
    dend_44 { pt3dadd( 121.72, 186.633, 64.4387, 0.81 ) }
    dend_44 { pt3dadd( 121.961, 187.575, 64.8486, 1.11 ) }
    dend_44 { pt3dadd( 122.292, 188.792, 65.3921, 0.15 ) }
    dend_44 { pt3dadd( 122.539, 189.736, 65.8, 0.15 ) }
    dend_44 { pt3dadd( 122.807, 190.908, 66.2404, 0.22 ) }
    dend_44 { pt3dadd( 122.969, 191.61, 66.455, 0.22 ) }
    dend_44 { pt3dadd( 123.204, 192.51, 66.6727, 0.37 ) }
    dend_44 { pt3dadd( 123.576, 193.861, 66.9558, 0.52 ) }
    dend_44 { pt3dadd( 123.928, 195.125, 67.1696, 0.81 ) }
    dend_44 { pt3dadd( 124.29, 196.474, 67.3715, 0.22 ) }
    dend_44 { pt3dadd( 124.565, 197.428, 67.5185, 0.29 ) }
    dend_44 { pt3dadd( 125.069, 198.898, 67.7609, 0.22 ) }
    dend_44 { pt3dadd( 125.381, 199.672, 67.9023, 1.03 ) }
    dend_44 { pt3dadd( 125.901, 200.8, 68.1308, 1.77 ) }
    dend_44 { pt3dadd( 126.197, 201.382, 68.2635, 1.77 ) }
    dend_44 { pt3dadd( 126.998, 202.913, 68.6587, 0.15 ) }
    dend_44 { pt3dadd( 127.42, 203.734, 68.8859, 0.15 ) }
    dend_44 { pt3dadd( 127.808, 204.479, 69.0951, 0.59 ) }
    dend_44 { pt3dadd( 128.151, 205.109, 69.2568, 0.74 ) }
    dend_44 { pt3dadd( 128.936, 206.56, 69.6095, 0.15 ) }
    dend_44 { pt3dadd( 129.633, 207.935, 69.932, 0.15 ) }
    dend_44 { pt3dadd( 129.985, 208.673, 70.1032, 0.52 ) }
    dend_44 { pt3dadd( 130.406, 209.573, 70.3062, 0.52 ) }
    dend_44 { pt3dadd( 130.932, 210.7, 70.5411, 0.15 ) }
    dend_44 { pt3dadd( 131.456, 211.807, 70.7397, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_44 { pt3dadd( 132.085, 213.095, 70.9007, 0.15 ) }
    dend_44 { pt3dadd( 132.462, 213.821, 70.9614, 0.37 ) }
    dend_44 { pt3dadd( 132.983, 214.802, 71.0247, 0.22 ) }
    dend_44 { pt3dadd( 133.398, 215.567, 71.0784, 0.74 ) }
    dend_44 { pt3dadd( 134.022, 216.664, 71.1809, 1.55 ) }
    dend_44 { pt3dadd( 135.038, 218.254, 71.4139, 0.07 ) }
    dend_44 { pt3dadd( 135.728, 219.245, 71.6194, 0.15 ) }
    dend_44 { pt3dadd( 136.315, 220.051, 71.8451, 0.15 ) }
    dend_44 { pt3dadd( 136.993, 220.931, 72.1491, 0.81 ) }
    dend_44 { pt3dadd( 137.522, 221.593, 72.4338, 0.22 ) }
    dend_44 { pt3dadd( 138.494, 222.755, 73.0086, 0.22 ) }
    dend_44 { pt3dadd( 139.039, 223.359, 73.3723, 0.22 ) }
    dend_44 { pt3dadd( 139.777, 224.083, 73.8888, 1.03 ) }
    dend_44 { pt3dadd( 140.337, 224.521, 74.2481, 1.03 ) }
    dend_44 { pt3dadd( 141.746, 225.464, 75.0985, 0.15 ) }
    dend_44 { pt3dadd( 142.524, 225.983, 75.5395, 0.29 ) }
    dend_44 { pt3dadd( 143.354, 226.588, 76.0261, 0.15 ) }
    dend_44 { pt3dadd( 144.228, 227.211, 76.5678, 0.74 ) }
    dend_44 { pt3dadd( 145.476, 228.096, 77.383, 0.22 ) }
    dend_44 { pt3dadd( 146.116, 228.553, 77.8049, 0.22 ) }
    dend_44 { pt3dadd( 147.032, 229.195, 78.4245, 0.37 ) }
    dend_44 { pt3dadd( 147.946, 229.845, 79.0848, 0.22 ) }
    dend_44 { pt3dadd( 148.714, 230.418, 79.6834, 0.88 ) }
    dend_44 { pt3dadd( 150.113, 231.493, 80.8876, 0.15 ) }
    dend_44 { pt3dadd( 150.49, 231.76, 81.2544, 0.15 ) }
    dend_44 { pt3dadd( 151.014, 232.056, 81.7728, 0.15 ) }
    dend_44 { pt3dadd( 151.427, 232.25, 82.2076, 0.15 ) }
    dend_44 { pt3dadd( 152.01, 232.58, 82.9242, 0.15 ) }
    dend_44 { pt3dadd( 152.456, 233.019, 83.7248, 0.22 ) }
    dend_44 { pt3dadd( 152.757, 233.57, 84.5653, 0.22 ) }
    dend_44 { pt3dadd( 152.997, 234.218, 85.379, 0.74 ) }
    dend_44 { pt3dadd( 153.191, 234.897, 86.1016, 1.18 ) }
    dend_44 { pt3dadd( 153.466, 235.996, 87.1335, 0.29 ) }
    dend_44 { pt3dadd( 153.642, 236.999, 87.999, 0.29 ) }
    dend_44 { pt3dadd( 153.666, 237.539, 88.4527, 0.15 ) }
    dend_44 { pt3dadd( 153.636, 238.247, 89.0147, 0.22 ) }
    dend_44 { pt3dadd( 153.575, 239.037, 89.6093, 0.15 ) }
    dend_44 { pt3dadd( 153.529, 239.832, 90.1657, 0.29 ) }
    dend_44 { pt3dadd( 153.496, 240.817, 90.8062, 0.22 ) }
    dend_44 { pt3dadd( 153.505, 241.8, 91.4221, 0.22 ) }
    dend_44 { pt3dadd( 153.512, 242.227, 91.6838, 0.22 ) }
    dend_44 { pt3dadd( 153.547, 242.924, 92.0565, 0.22 ) }
    dend_44 { pt3dadd( 153.64, 243.491, 92.3642, 0.29 ) }
    dend_44 { pt3dadd( 153.718, 243.729, 92.5105, 0.29 ) }
    dend_44 { pt3dadd( 154.161, 244.656, 93.1565, 0.22 ) }
    dend_44 { pt3dadd( 154.656, 245.466, 93.8665, 0.22 ) }
    dend_44 { pt3dadd( 155.164, 246.175, 94.5975, 1.33 ) }
    dend_44 { pt3dadd( 156.118, 247.46, 95.9876, 0.22 ) }
    dend_44 { pt3dadd( 156.803, 248.334, 96.9939, 0.29 ) }
    dend_44 { pt3dadd( 157.453, 249.09, 97.9258, 0.15 ) }
    dend_44 { pt3dadd( 158.515, 250.17, 99.4158, 0.15 ) }
    dend_44 { pt3dadd( 158.985, 250.604, 100.112, 0.74 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.31282, -10.8438, 1.06229, 5.31 ) }
    dend_31 { pt3dadd( -2.31282, -10.8438, 1.06229, 5.31 ) }
    dend_31 { pt3dadd( -2.79888, -12.7107, 0.605195, 4.28 ) }
    dend_31 { pt3dadd( -3.65211, -15.4353, 0.0714018, 4.28 ) }
    dend_31 { pt3dadd( -4.59646, -18.1492, -0.305747, 4.5 ) }
    dend_31 { pt3dadd( -5.25705, -19.9284, -0.480661, 4.65 ) }
    dend_31 { pt3dadd( -5.98665, -21.7858, -0.593611, 4.2 ) }
    dend_31 { pt3dadd( -7.42542, -25.1738, -0.62333, 3.17 ) }
    dend_31 { pt3dadd( -8.45911, -27.3686, -0.457869, 3.17 ) }
    dend_31 { pt3dadd( -9.59732, -29.603, -0.175517, 3.17 ) }
    dend_31 { pt3dadd( -10.2654, -30.8396, 0.0488419, 3.32 ) }
    dend_31 { pt3dadd( -11.4355, -32.9658, 0.551947, 3.91 ) }
    dend_31 { pt3dadd( -12.0702, -34.1154, 0.890573, 3.91 ) }
    dend_31 { pt3dadd( -13.272, -36.2757, 1.66839, 4.06 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 66/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.07718, 9.3762, -6.17771, 1.62 ) }
    dend_24 { pt3dadd( 7.07718, 9.3762, -6.17771, 1.62 ) }
    dend_24 { pt3dadd( 7.23896, 9.59374, -6.3652, 1.62 ) }
    dend_24 { pt3dadd( 7.82824, 10.2537, -6.99454, 1.99 ) }
    dend_24 { pt3dadd( 8.50653, 10.8907, -7.68561, 2.36 ) }
    dend_24 { pt3dadd( 9.33319, 11.4842, -8.48298, 2.21 ) }
    dend_24 { pt3dadd( 10.4974, 12.1042, -9.5395, 1.92 ) }
    dend_24 { pt3dadd( 11.4594, 12.5542, -10.3986, 1.11 ) }
    dend_24 { pt3dadd( 12.26, 12.8415, -11.0936, 0.81 ) }
    dend_24 { pt3dadd( 12.9255, 12.9676, -11.6341, 1.18 ) }
    dend_24 { pt3dadd( 14.1884, 12.9668, -12.5993, 1.77 ) }
    dend_24 { pt3dadd( 15.036, 12.7719, -13.1645, 1.77 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 78/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -5.12283, -1.2038, 15.0323, 2.73 ) }
    dend_17 { pt3dadd( -5.12283, -1.2038, 15.0323, 2.73 ) }
    dend_17 { pt3dadd( -5.82874, -1.02033, 15.8452, 2.29 ) }
    dend_17 { pt3dadd( -6.7597, -0.632804, 16.8797, 1.92 ) }
    dend_17 { pt3dadd( -7.84852, -0.0650911, 18.0804, 1.92 ) }
    dend_17 { pt3dadd( -8.76548, 0.46802, 19.0822, 1.92 ) }
    dend_17 { pt3dadd( -9.95184, 1.15775, 20.3783, 2.14 ) }
    dend_17 { pt3dadd( -10.9472, 1.81774, 21.4678, 1.99 ) }
    dend_17 { pt3dadd( -11.6492, 2.38556, 22.2389, 2.65 ) }
    dend_17 { pt3dadd( -12.6099, 3.31469, 23.2921, 3.1 ) }
    dend_17 { pt3dadd( -13.3076, 4.04382, 24.0042, 3.1 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 89/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.91717, -2.2938, -5.36771, 6.12 ) }
    dend_0 { pt3dadd( 4.91717, -2.2938, -5.36771, 6.12 ) }
    dend_0 { pt3dadd( 5.59482, -4.89798, -5.36771, 4.79 ) }
    dend_0 { pt3dadd( 5.60888, -4.95203, -5.36771, 4.79 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 93/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.51549, 13.8392, -0.00285007, 0.905618 ) }
    axon_0 { pt3dadd( 9.44069, 28.0076, -0.00285007, 0.905618 ) }
    axon_0 { pt3dadd( 14.3659, 42.1759, -0.00285007, 0.905618 ) }
    // Section: dend_43, id: dend_43, parent: dend_31 (entry count 96/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -13.272, -36.2757, 1.66839, 1.84 ) }
    dend_43 { pt3dadd( -13.6936, -36.6113, 2.54568, 1.84 ) }
    dend_43 { pt3dadd( -14.4589, -37.1311, 3.85154, 1.55 ) }
    dend_43 { pt3dadd( -15.2496, -37.6189, 5.00827, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( -16.1642, -38.1504, 6.18625, 1.55 ) }
    dend_43 { pt3dadd( -16.9286, -38.5524, 7.07913, 1.55 ) }
    dend_43 { pt3dadd( -17.6739, -38.9025, 7.90658, 0.74 ) }
    dend_43 { pt3dadd( -18.1167, -39.0531, 8.31726, 0.74 ) }
    dend_43 { pt3dadd( -18.6876, -39.161, 8.73892, 0.74 ) }
    dend_43 { pt3dadd( -19.4203, -39.184, 9.20363, 0.52 ) }
    dend_43 { pt3dadd( -19.98, -39.0904, 9.5474, 0.52 ) }
    dend_43 { pt3dadd( -20.4925, -38.9235, 9.8865, 0.74 ) }
    dend_43 { pt3dadd( -20.9981, -38.7381, 10.258, 1.4 ) }
    dend_43 { pt3dadd( -21.545, -38.5531, 10.6946, 1.7 ) }
    dend_43 { pt3dadd( -22.42, -38.3382, 11.4321, 0.66 ) }
    dend_43 { pt3dadd( -23.1877, -38.2945, 12.0951, 0.52 ) }
    dend_43 { pt3dadd( -23.6953, -38.4484, 12.5562, 0.59 ) }
    dend_43 { pt3dadd( -24.4097, -38.8903, 13.2347, 0.66 ) }
    dend_43 { pt3dadd( -24.8271, -39.2298, 13.6601, 1.47 ) }
    dend_43 { pt3dadd( -25.3134, -39.6888, 14.2101, 2.58 ) }
    dend_43 { pt3dadd( -25.7692, -40.1821, 14.7872, 2.36 ) }
    dend_43 { pt3dadd( -26.4971, -41.0613, 15.8778, 0.74 ) }
    dend_43 { pt3dadd( -26.8692, -41.5377, 16.5696, 1.03 ) }
    dend_43 { pt3dadd( -27.1488, -41.9447, 17.3228, 1.18 ) }
    dend_43 { pt3dadd( -27.2978, -42.2513, 18.0635, 1.18 ) }
    dend_43 { pt3dadd( -27.334, -42.3843, 18.5086, 1.33 ) }
    dend_43 { pt3dadd( -27.3766, -42.565, 19.1841, 1.33 ) }
    dend_43 { pt3dadd( -27.4632, -42.7984, 19.968, 1.33 ) }
    dend_43 { pt3dadd( -27.6688, -43.1063, 20.6683, 1.33 ) }
    dend_43 { pt3dadd( -28.097, -43.5913, 21.399, 1.33 ) }
    dend_43 { pt3dadd( -28.7429, -44.1672, 22.022, 0.66 ) }
    dend_43 { pt3dadd( -29.5347, -44.7738, 22.5226, 1.11 ) }
    dend_43 { pt3dadd( -30.2082, -45.2419, 22.8521, 1.84 ) }
    dend_43 { pt3dadd( -31.0283, -45.7794, 23.1971, 1.99 ) }
    dend_43 { pt3dadd( -31.7684, -46.2812, 23.5736, 1.18 ) }
    dend_43 { pt3dadd( -32.7325, -46.9901, 24.1695, 0.44 ) }
    dend_43 { pt3dadd( -33.6993, -47.7617, 24.9331, 0.37 ) }
    dend_43 { pt3dadd( -34.1764, -48.1371, 25.4269, 0.52 ) }
    dend_43 { pt3dadd( -34.6903, -48.5241, 26.1117, 0.88 ) }
    dend_43 { pt3dadd( -35.9809, -49.3701, 28.1318, 0.81 ) }
    dend_43 { pt3dadd( -36.4849, -49.6272, 28.9807, 1.4 ) }
    dend_43 { pt3dadd( -37.0187, -49.8065, 29.8842, 1.4 ) }
    dend_43 { pt3dadd( -37.7817, -49.9239, 31.1109, 1.11 ) }
    dend_43 { pt3dadd( -38.3557, -49.9225, 31.9279, 0.74 ) }
    dend_43 { pt3dadd( -38.9403, -49.8233, 32.6523, 1.33 ) }
    dend_43 { pt3dadd( -39.6152, -49.6076, 33.3689, 0.44 ) }
    dend_43 { pt3dadd( -40.4838, -49.1995, 34.3144, 0.29 ) }
    dend_43 { pt3dadd( -40.8772, -48.9701, 34.7582, 0.29 ) }
    dend_43 { pt3dadd( -41.3587, -48.6649, 35.3104, 1.11 ) }
    dend_43 { pt3dadd( -41.9537, -48.2835, 36.013, 2.43 ) }
    dend_43 { pt3dadd( -42.3361, -48.0336, 36.5009, 1.92 ) }
    dend_43 { pt3dadd( -43.101, -47.5801, 37.5349, 0.29 ) }
    dend_43 { pt3dadd( -43.3989, -47.4431, 37.9401, 0.29 ) }
    dend_43 { pt3dadd( -43.7308, -47.3438, 38.3549, 0.29 ) }
    dend_43 { pt3dadd( -44.2489, -47.254, 38.9666, 0.52 ) }
    dend_43 { pt3dadd( -44.5518, -47.2306, 39.317, 0.59 ) }
    dend_43 { pt3dadd( -45.1248, -47.1875, 39.9823, 0.22 ) }
    dend_43 { pt3dadd( -45.4984, -47.0844, 40.4361, 0.22 ) }
    dend_43 { pt3dadd( -45.7732, -46.956, 40.783, 0.22 ) }
    dend_43 { pt3dadd( -46.011, -46.8193, 41.102, 1.18 ) }
    dend_43 { pt3dadd( -46.4725, -46.4951, 41.7567, 2.36 ) }
    dend_43 { pt3dadd( -46.8128, -46.2142, 42.2735, 2.21 ) }
    dend_43 { pt3dadd( -47.7263, -45.3519, 43.7757, 0.22 ) }
    dend_43 { pt3dadd( -48.0141, -45.0897, 44.2774, 0.22 ) }
    dend_43 { pt3dadd( -48.2518, -44.8889, 44.7292, 0.22 ) }
    dend_43 { pt3dadd( -48.3618, -44.806, 44.9414, 0.22 ) }
    dend_43 { pt3dadd( -48.5366, -44.6961, 45.2642, 0.22 ) }
    dend_43 { pt3dadd( -48.7722, -44.5582, 45.7358, 0.22 ) }
    dend_43 { pt3dadd( -49.0626, -44.3671, 46.4132, 0.52 ) }
    dend_43 { pt3dadd( -49.3168, -44.1705, 47.0857, 1.25 ) }
    dend_43 { pt3dadd( -49.5215, -43.996, 47.6732, 1.47 ) }
    dend_43 { pt3dadd( -49.959, -43.6627, 48.9064, 0.44 ) }
    dend_43 { pt3dadd( -50.2783, -43.4639, 49.8391, 1.03 ) }
    dend_43 { pt3dadd( -50.5896, -43.2879, 50.8003, 2.14 ) }
    dend_43 { pt3dadd( -50.8662, -43.1378, 51.6575, 2.14 ) }
    dend_43 { pt3dadd( -51.2448, -42.9336, 52.8487, 0.74 ) }
    dend_43 { pt3dadd( -51.4782, -42.8055, 53.6094, 1.03 ) }
    dend_43 { pt3dadd( -51.809, -42.6326, 54.6449, 0.37 ) }
    dend_43 { pt3dadd( -51.9852, -42.5557, 55.103, 0.37 ) }
    dend_43 { pt3dadd( -52.3667, -42.4169, 56.0018, 0.59 ) }
    dend_43 { pt3dadd( -52.7663, -42.2971, 56.8839, 0.44 ) }
    dend_43 { pt3dadd( -53.1397, -42.1874, 57.6727, 1.33 ) }
    dend_43 { pt3dadd( -53.5548, -42.037, 58.503, 2.06 ) }
    dend_43 { pt3dadd( -54.2485, -41.764, 59.8125, 0.37 ) }
    dend_43 { pt3dadd( -54.4901, -41.683, 60.2518, 0.37 ) }
    dend_43 { pt3dadd( -54.7513, -41.6189, 60.6904, 0.37 ) }
    dend_43 { pt3dadd( -55.3315, -41.5004, 61.5436, 0.59 ) }
    dend_43 { pt3dadd( -56.0635, -41.3453, 62.5533, 0.29 ) }
    dend_43 { pt3dadd( -56.5435, -41.2375, 63.1944, 1.4 ) }
    dend_43 { pt3dadd( -57.1204, -41.0998, 63.9609, 2.58 ) }
    dend_43 { pt3dadd( -57.9411, -40.9043, 65.0474, 0.29 ) }
    dend_43 { pt3dadd( -58.1673, -40.8624, 65.3563, 0.37 ) }
    dend_43 { pt3dadd( -58.5548, -40.8321, 65.9306, 0.29 ) }
    dend_43 { pt3dadd( -58.8852, -40.8167, 66.4778, 0.29 ) }
    dend_43 { pt3dadd( -59.1458, -40.7942, 66.9433, 0.81 ) }
    dend_43 { pt3dadd( -59.4441, -40.754, 67.5535, 1.92 ) }
    dend_43 { pt3dadd( -59.848, -40.706, 68.4847, 0.22 ) }
    dend_43 { pt3dadd( -60.106, -40.7076, 69.0473, 0.22 ) }
    dend_43 { pt3dadd( -60.3903, -40.7482, 69.5722, 0.22 ) }
    dend_43 { pt3dadd( -60.4781, -40.7662, 69.7178, 0.22 ) }
    dend_43 { pt3dadd( -60.7605, -40.829, 70.1159, 0.22 ) }
    dend_43 { pt3dadd( -61.0662, -40.8808, 70.4619, 0.44 ) }
    dend_43 { pt3dadd( -61.4425, -40.9127, 70.7921, 0.44 ) }
    dend_43 { pt3dadd( -61.8675, -40.9076, 71.0698, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_43 { pt3dadd( -62.211, -40.8657, 71.281, 0.22 ) }
    dend_43 { pt3dadd( -62.5491, -40.7753, 71.543, 0.66 ) }
    dend_43 { pt3dadd( -63.1994, -40.5129, 72.1313, 1.62 ) }
    dend_43 { pt3dadd( -63.4837, -40.3845, 72.4153, 1.11 ) }
    dend_43 { pt3dadd( -64.0751, -40.1185, 73.0564, 0.59 ) }
    dend_43 { pt3dadd( -64.6181, -39.9196, 73.6751, 0.66 ) }
    dend_43 { pt3dadd( -65.4656, -39.7049, 74.6525, 0.29 ) }
    dend_43 { pt3dadd( -65.6807, -39.6744, 74.9098, 0.29 ) }
    dend_43 { pt3dadd( -66.1736, -39.6754, 75.5057, 0.59 ) }
    dend_43 { pt3dadd( -66.4481, -39.7029, 75.8369, 0.29 ) }
    dend_43 { pt3dadd( -66.9394, -39.7857, 76.4042, 0.29 ) }
    dend_43 { pt3dadd( -67.2625, -39.8475, 76.7238, 0.96 ) }
    dend_43 { pt3dadd( -67.7334, -39.9236, 77.1334, 1.62 ) }
    dend_43 { pt3dadd( -68.7593, -40.0375, 78.0024, 0.29 ) }
    dend_43 { pt3dadd( -69.2908, -40.0629, 78.4327, 0.29 ) }
    dend_43 { pt3dadd( -69.8548, -40.058, 78.8693, 0.66 ) }
    dend_43 { pt3dadd( -70.5401, -40.031, 79.3955, 0.29 ) }
    dend_43 { pt3dadd( -71.2521, -39.9991, 79.9331, 0.29 ) }
    dend_43 { pt3dadd( -71.7245, -39.978, 80.2823, 0.96 ) }
    dend_43 { pt3dadd( -72.5011, -39.9435, 80.8466, 2.14 ) }
    dend_43 { pt3dadd( -73.4801, -39.9051, 81.5753, 0.29 ) }
    dend_43 { pt3dadd( -73.9301, -39.8775, 81.9206, 0.29 ) }
    dend_43 { pt3dadd( -74.3209, -39.8426, 82.2207, 0.52 ) }
    dend_43 { pt3dadd( -74.9028, -39.7949, 82.6753, 1.11 ) }
    dend_43 { pt3dadd( -75.7987, -39.7239, 83.3838, 0.22 ) }
    dend_43 { pt3dadd( -76.2748, -39.6773, 83.7644, 0.22 ) }
    dend_43 { pt3dadd( -76.9522, -39.5766, 84.2771, 0.74 ) }
    dend_43 { pt3dadd( -77.5719, -39.4485, 84.7315, 0.29 ) }
    dend_43 { pt3dadd( -78.0703, -39.2999, 85.1057, 0.29 ) }
    dend_43 { pt3dadd( -78.3882, -39.176, 85.3485, 0.66 ) }
    dend_43 { pt3dadd( -78.9048, -38.9146, 85.769, 1.03 ) }
    dend_43 { pt3dadd( -79.7031, -38.4536, 86.4822, 0.22 ) }
    dend_43 { pt3dadd( -79.8837, -38.3393, 86.6607, 0.22 ) }
    dend_43 { pt3dadd( -80.3658, -38.0333, 87.1625, 0.81 ) }
    dend_43 { pt3dadd( -80.5701, -37.9051, 87.3824, 0.81 ) }
    dend_43 { pt3dadd( -81.0323, -37.6467, 87.9078, 0.22 ) }
    dend_43 { pt3dadd( -81.2771, -37.5306, 88.1961, 0.22 ) }
    dend_43 { pt3dadd( -81.6843, -37.3684, 88.6843, 0.81 ) }
    dend_43 { pt3dadd( -82.2741, -37.1423, 89.3884, 0.22 ) }
    dend_43 { pt3dadd( -82.5152, -37.0515, 89.6789, 0.22 ) }
    dend_43 { pt3dadd( -82.9, -36.8838, 90.141, 0.88 ) }
    dend_43 { pt3dadd( -83.2937, -36.6908, 90.6105, 1.4 ) }
    dend_43 { pt3dadd( -83.9844, -36.2905, 91.47, 0.22 ) }
    dend_43 { pt3dadd( -84.3402, -36.0614, 91.9394, 0.81 ) }
    dend_43 { pt3dadd( -84.8239, -35.7367, 92.6078, 0.15 ) }
    dend_43 { pt3dadd( -85.3296, -35.4191, 93.3019, 0.22 ) }
    dend_43 { pt3dadd( -85.5097, -35.3218, 93.5486, 0.22 ) }
    dend_43 { pt3dadd( -85.7928, -35.2129, 93.9398, 0.15 ) }
    dend_43 { pt3dadd( -86.1453, -35.1194, 94.438, 0.37 ) }
    dend_43 { pt3dadd( -86.6223, -35.0274, 95.1552, 0.22 ) }
    dend_43 { pt3dadd( -86.7801, -35.0043, 95.418, 0.88 ) }
    dend_43 { pt3dadd( -87.2618, -34.9556, 96.2714, 1.99 ) }
    dend_43 { pt3dadd( -88.0262, -34.8748, 97.6801, 0.22 ) }
    dend_43 { pt3dadd( -88.3756, -34.8324, 98.3658, 0.88 ) }
    dend_43 { pt3dadd( -88.8945, -34.7639, 99.4896, 0.07 ) }
    dend_43 { pt3dadd( -89.1305, -34.7404, 100.055, 0.07 ) }
    dend_43 { pt3dadd( -89.245, -34.7346, 100.353, 0.44 ) }
    dend_43 { pt3dadd( -89.6596, -34.7715, 101.428, 0.07 ) }
    dend_43 { pt3dadd( -89.8852, -34.8239, 101.983, 0.44 ) }
    dend_43 { pt3dadd( -90.3426, -34.9774, 102.97, 0.15 ) }
    dend_43 { pt3dadd( -90.6889, -35.1131, 103.596, 0.81 ) }
    dend_43 { pt3dadd( -90.9527, -35.2159, 104.006, 1.55 ) }
    dend_43 { pt3dadd( -91.7972, -35.5472, 105.164, 0.22 ) }
    dend_43 { pt3dadd( -92.1564, -35.7057, 105.593, 0.66 ) }
    dend_43 { pt3dadd( -92.6015, -35.9306, 106.083, 1.4 ) }
    dend_43 { pt3dadd( -93.5162, -36.468, 107.019, 0.22 ) }
    dend_43 { pt3dadd( -93.924, -36.7669, 107.432, 0.66 ) }
    dend_43 { pt3dadd( -94.3123, -37.1609, 107.845, 0.29 ) }
    dend_43 { pt3dadd( -94.5781, -37.6138, 108.157, 0.15 ) }
    dend_43 { pt3dadd( -94.8586, -38.31, 108.505, 0.15 ) }
    dend_43 { pt3dadd( -94.9693, -38.7092, 108.666, 0.59 ) }
    dend_43 { pt3dadd( -95.1107, -39.4219, 108.909, 1.03 ) }
    dend_43 { pt3dadd( -95.2335, -40.0402, 109.118, 0.37 ) }
    dend_43 { pt3dadd( -95.3744, -40.6323, 109.318, 0.22 ) }
    dend_43 { pt3dadd( -95.642, -41.4336, 109.606, 0.37 ) }
    dend_43 { pt3dadd( -95.8572, -41.9303, 109.791, 0.22 ) }
    dend_43 { pt3dadd( -96.1207, -42.4319, 109.995, 0.22 ) }
    dend_43 { pt3dadd( -96.2912, -42.7093, 110.115, 0.81 ) }
    dend_43 { pt3dadd( -96.5816, -43.1839, 110.368, 1.47 ) }
    dend_43 { pt3dadd( -96.9278, -43.7815, 110.747, 0.66 ) }
    dend_43 { pt3dadd( -97.1334, -44.1846, 111.023, 0.22 ) }
    dend_43 { pt3dadd( -97.4702, -44.8582, 111.514, 0.22 ) }
    dend_43 { pt3dadd( -97.7175, -45.3846, 111.942, 1.11 ) }
    dend_43 { pt3dadd( -98.0931, -46.3532, 112.81, 0.37 ) }
    dend_43 { pt3dadd( -98.3381, -47.0776, 113.524, 0.22 ) }
    dend_43 { pt3dadd( -98.5191, -47.6507, 114.155, 0.22 ) }
    dend_43 { pt3dadd( -98.6575, -48.1409, 114.744, 0.96 ) }
    dend_43 { pt3dadd( -98.8168, -48.7783, 115.539, 0.15 ) }
    dend_43 { pt3dadd( -98.9767, -49.4147, 116.359, 0.44 ) }
    dend_43 { pt3dadd( -99.0461, -49.6874, 116.699, 0.44 ) }
    dend_43 { pt3dadd( -99.136, -50.1313, 117.249, 0.22 ) }
    dend_43 { pt3dadd( -99.2004, -50.6487, 117.88, 0.88 ) }
    dend_43 { pt3dadd( -99.2114, -50.9282, 118.196, 0.88 ) }
    dend_43 { pt3dadd( -99.2036, -51.6844, 118.996, 0.22 ) }
    dend_43 { pt3dadd( -99.1491, -52.0767, 119.41, 0.22 ) }
    dend_43 { pt3dadd( -99.0605, -52.4005, 119.756, 0.37 ) }
    dend_43 { pt3dadd( -98.7995, -53.1308, 120.541, 0.66 ) }
    dend_43 { pt3dadd( -98.4906, -53.9132, 121.452, 0.22 ) }
    dend_43 { pt3dadd( -98.2255, -54.5225, 122.188, 0.66 ) }
    dend_43 { pt3dadd( -97.8563, -55.3167, 123.187, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( -97.6363, -55.7884, 123.816, 0.52 ) }
    dend_43 { pt3dadd( -97.3082, -56.4759, 124.812, 0.22 ) }
    dend_43 { pt3dadd( -97.0032, -57.0766, 125.77, 0.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 3/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -13.272, -36.2757, 1.66839, 2.65 ) }
    dend_32 { pt3dadd( -13.7052, -40.5015, 1.06944, 2.65 ) }
    dend_32 { pt3dadd( -14.0373, -43.7412, 0.610277, 2.65 ) }
    dend_32 { pt3dadd( -14.3362, -46.6564, 0.197085, 2.65 ) }
    dend_32 { pt3dadd( -14.5493, -48.7357, -0.0976175, 2.95 ) }
    dend_32 { pt3dadd( -14.7571, -50.7626, -0.3849, 2.95 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 9/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 15.036, 12.7719, -13.1645, 1.33 ) }
    dend_28 { pt3dadd( 16.4329, 12.5402, -13.1556, 1.33 ) }
    dend_28 { pt3dadd( 18.3012, 12.2979, -13.3633, 0.81 ) }
    dend_28 { pt3dadd( 19.8466, 12.0942, -13.6902, 0.96 ) }
    dend_28 { pt3dadd( 21.3704, 11.9491, -14.1222, 1.25 ) }
    dend_28 { pt3dadd( 22.7446, 11.9341, -14.5915, 0.74 ) }
    dend_28 { pt3dadd( 24.2155, 12.0634, -15.1374, 1.11 ) }
    dend_28 { pt3dadd( 25.0974, 12.3082, -15.5469, 1.11 ) }
    dend_28 { pt3dadd( 26.1737, 12.8321, -16.1233, 1.55 ) }
    dend_28 { pt3dadd( 27.3839, 13.6475, -16.8359, 0.52 ) }
    dend_28 { pt3dadd( 28.6184, 14.6415, -17.6058, 0.66 ) }
    dend_28 { pt3dadd( 29.5944, 15.4964, -18.2122, 0.52 ) }
    dend_28 { pt3dadd( 30.5725, 16.4823, -18.7973, 0.81 ) }
    dend_28 { pt3dadd( 31.3798, 17.387, -19.2512, 0.44 ) }
    dend_28 { pt3dadd( 32.1985, 18.4133, -19.706, 0.29 ) }
    dend_28 { pt3dadd( 32.6498, 18.9804, -19.9678, 0.15 ) }
    dend_28 { pt3dadd( 33.0387, 19.356, -20.1949, 0.15 ) }
    dend_28 { pt3dadd( 41.923, 23.2889, -25.3737, 0.15 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.036, 12.7719, -13.1645, 1.92 ) }
    dend_25 { pt3dadd( 15.074, 12.7557, -13.2796, 1.92 ) }
    dend_25 { pt3dadd( 15.3851, 12.5546, -14.6025, 1.92 ) }
    dend_25 { pt3dadd( 15.6574, 12.2094, -15.926, 1.11 ) }
    dend_25 { pt3dadd( 15.8077, 12.0269, -16.4175, 1.11 ) }
    dend_25 { pt3dadd( 16.0294, 11.817, -16.9415, 1.11 ) }
    dend_25 { pt3dadd( 16.2063, 11.7047, -17.282, 1.11 ) }
    dend_25 { pt3dadd( 16.6541, 11.5565, -17.9589, 1.11 ) }
    dend_25 { pt3dadd( 17.4773, 11.5779, -18.7283, 1.4 ) }
    dend_25 { pt3dadd( 18.6034, 11.7545, -19.4209, 1.55 ) }
    dend_25 { pt3dadd( 19.2728, 11.855, -19.7339, 1.55 ) }
    dend_25 { pt3dadd( 20.3892, 12.0174, -20.1292, 0.81 ) }
    dend_25 { pt3dadd( 21.0628, 12.118, -20.3106, 0.81 ) }
    dend_25 { pt3dadd( 21.8198, 12.2504, -20.443, 1.03 ) }
    dend_25 { pt3dadd( 22.8614, 12.4788, -20.5596, 0.81 ) }
    dend_25 { pt3dadd( 23.9056, 12.7231, -20.6066, 1.11 ) }
    dend_25 { pt3dadd( 25.1258, 12.9295, -20.6332, 0.37 ) }
    dend_25 { pt3dadd( 25.7551, 12.9843, -20.6267, 0.81 ) }
    dend_25 { pt3dadd( 26.6188, 13.0322, -20.5815, 0.66 ) }
    dend_25 { pt3dadd( 27.1229, 13.063, -20.5411, 0.44 ) }
    dend_25 { pt3dadd( 27.8087, 13.1785, -20.4409, 0.52 ) }
    dend_25 { pt3dadd( 33.3815, 12.1753, -25.458, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 49/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -13.3076, 4.04382, 24.0042, 1.55 ) }
    dend_21 { pt3dadd( -13.1431, 3.08186, 25.0001, 1.55 ) }
    dend_21 { pt3dadd( -12.7312, 1.7813, 26.3854, 1.33 ) }
    dend_21 { pt3dadd( -12.004, 0.431757, 28.0414, 0.81 ) }
    dend_21 { pt3dadd( -11.2107, -0.333053, 29.5571, 0.37 ) }
    dend_21 { pt3dadd( -10.8734, -0.539187, 30.1426, 0.59 ) }
    dend_21 { pt3dadd( -10.4409, -0.803575, 30.8934, 1.11 ) }
    dend_21 { pt3dadd( -9.56758, -1.13296, 32.1448, 0.74 ) }
    dend_21 { pt3dadd( -8.56967, -1.27392, 33.3848, 1.4 ) }
    dend_21 { pt3dadd( -6.08082, -1.06297, 36.3911, 2.51 ) }
    dend_21 { pt3dadd( -5.39961, -0.895294, 37.2715, 3.24 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 60/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -13.3076, 4.04382, 24.0042, 0.37 ) }
    dend_18 { pt3dadd( -12.148, 5.75574, 23.4617, 0.37 ) }
    dend_18 { pt3dadd( -11.7241, 6.45128, 23.3556, 0.37 ) }
    dend_18 { pt3dadd( -11.1986, 7.48805, 23.2682, 0.59 ) }
    dend_18 { pt3dadd( -10.7202, 8.68142, 23.1789, 0.22 ) }
    dend_18 { pt3dadd( -10.5311, 9.31537, 23.1357, 0.44 ) }
    dend_18 { pt3dadd( -10.3364, 10.3499, 23.0503, 1.33 ) }
    dend_18 { pt3dadd( -10.4256, 11.9682, 22.9204, 0.44 ) }
    dend_18 { pt3dadd( -10.6893, 12.8305, 22.8718, 0.44 ) }
    dend_18 { pt3dadd( -11.1213, 13.6964, 22.8234, 0.88 ) }
    dend_18 { pt3dadd( -11.5598, 14.3938, 22.7786, 1.77 ) }
    dend_18 { pt3dadd( -12.196, 15.2882, 22.7206, 1.92 ) }
    dend_18 { pt3dadd( -13.5079, 16.9801, 22.6129, 0.44 ) }
    dend_18 { pt3dadd( -14.152, 17.768, 22.6132, 0.44 ) }
    dend_18 { pt3dadd( -14.5248, 18.2207, 22.6442, 0.44 ) }
    dend_18 { pt3dadd( -15.2257, 19.049, 22.7526, 1.55 ) }
    dend_18 { pt3dadd( -15.9817, 19.8707, 22.8939, 2.43 ) }
    dend_18 { pt3dadd( -16.5006, 20.388, 23.0339, 1.77 ) }
    dend_18 { pt3dadd( -18.1991, 21.9503, 23.6692, 0.52 ) }
    dend_18 { pt3dadd( -18.9218, 22.5612, 23.9315, 1.77 ) }
    dend_18 { pt3dadd( -19.6579, 23.1409, 24.2026, 2.06 ) }
    dend_18 { pt3dadd( -21.1121, 24.1818, 24.7485, 0.52 ) }
    dend_18 { pt3dadd( -22.2596, 24.9352, 25.1932, 0.81 ) }
    dend_18 { pt3dadd( -23.4582, 25.656, 25.6742, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 84/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.60888, -4.95203, -5.36771, 2.58 ) }
    dend_12 { pt3dadd( 4.25444, -4.53952, -6.21765, 2.58 ) }
    dend_12 { pt3dadd( 3.18245, -4.17875, -6.80505, 2.58 ) }
    dend_12 { pt3dadd( 1.47698, -3.51143, -7.6557, 1.4 ) }
    dend_12 { pt3dadd( 0.180382, -2.96062, -8.23806, 0.96 ) }
    dend_12 { pt3dadd( -1.45628, -2.26762, -8.90212, 0.96 ) }
    dend_12 { pt3dadd( -3.149, -1.59393, -9.53816, 0.96 ) }
    dend_12 { pt3dadd( -4.48014, -1.08876, -9.92927, 1.18 ) }
    dend_12 { pt3dadd( -5.93971, -0.607334, -10.2442, 1.11 ) }
    dend_12 { pt3dadd( -7.19683, -0.207883, -10.4521, 0.88 ) }
    dend_12 { pt3dadd( -8.67605, 0.255727, -10.6141, 1.18 ) }
    dend_12 { pt3dadd( -9.85772, 0.591039, -10.6806, 0.88 ) }
    dend_12 { pt3dadd( -10.8476, 0.79547, -10.7313, 1.47 ) }
    dend_12 { pt3dadd( -11.8591, 0.86291, -10.7596, 1.47 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 98/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.60888, -4.95203, -5.36771, 4.06 ) }
    dend_1 { pt3dadd( 5.51272, -7.2816, -5.86225, 4.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 5.43184, -9.24143, -6.27831, 4.06 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 1/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.3659, 42.1759, -0.00285007, 0.15 ) }
    axon_1 { pt3dadd( 19.2911, 56.3443, -0.00285007, 0.15 ) }
    axon_1 { pt3dadd( 24.2163, 70.5126, -0.00285007, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 4/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -14.7571, -50.7626, -0.3849, 1.7 ) }
    dend_40 { pt3dadd( -13.8973, -51.5629, -0.572019, 1.7 ) }
    dend_40 { pt3dadd( -13.0662, -52.2006, -0.758934, 0.52 ) }
    dend_40 { pt3dadd( -12.4417, -52.6034, -0.893095, 0.88 ) }
    dend_40 { pt3dadd( -11.4799, -53.1, -1.07939, 0.37 ) }
    dend_40 { pt3dadd( -10.7814, -53.4054, -1.22813, 0.37 ) }
    dend_40 { pt3dadd( -9.96839, -53.7333, -1.4208, 0.88 ) }
    dend_40 { pt3dadd( -8.99955, -54.0762, -1.68852, 1.25 ) }
    dend_40 { pt3dadd( -8.2918, -54.3274, -1.89928, 1.18 ) }
    dend_40 { pt3dadd( -7.20112, -54.7564, -2.25497, 0.59 ) }
    dend_40 { pt3dadd( -6.21097, -55.233, -2.63497, 0.81 ) }
    dend_40 { pt3dadd( -5.56961, -55.6617, -2.93147, 0.52 ) }
    dend_40 { pt3dadd( -5.09148, -56.1135, -3.21275, 0.74 ) }
    dend_40 { pt3dadd( -4.38672, -56.9901, -3.72591, 1.03 ) }
    dend_40 { pt3dadd( -3.87207, -57.7593, -4.12061, 1.03 ) }
    dend_40 { pt3dadd( -3.37547, -58.5862, -4.47975, 1.33 ) }
    dend_40 { pt3dadd( -2.88081, -59.4177, -4.75976, 1.18 ) }
    dend_40 { pt3dadd( -2.24844, -60.4135, -5.00372, 1.4 ) }
    dend_40 { pt3dadd( -1.79433, -61.0543, -5.09106, 0.88 ) }
    dend_40 { pt3dadd( -0.800138, -62.3007, -5.0563, 0.37 ) }
    dend_40 { pt3dadd( -0.284954, -62.8867, -4.91795, 0.37 ) }
    dend_40 { pt3dadd( 0.270439, -63.4739, -4.6534, 0.88 ) }
    dend_40 { pt3dadd( 0.73834, -63.9591, -4.34994, 1.4 ) }
    dend_40 { pt3dadd( 1.2531, -64.529, -3.9501, 1.03 ) }
    dend_40 { pt3dadd( 1.53685, -64.8892, -3.71005, 0.74 ) }
    dend_40 { pt3dadd( 2.01665, -65.6464, -3.30076, 0.29 ) }
    dend_40 { pt3dadd( 2.34534, -66.2817, -3.0982, 0.29 ) }
    dend_40 { pt3dadd( 2.55528, -66.7514, -3.02866, 0.29 ) }
    dend_40 { pt3dadd( 2.91668, -67.659, -3.00702, 0.29 ) }
    dend_40 { pt3dadd( 3.15577, -68.2725, -3.01999, 0.88 ) }
    dend_40 { pt3dadd( 3.49688, -69.0938, -3.065, 1.47 ) }
    dend_40 { pt3dadd( 3.90668, -69.9905, -3.12534, 1.77 ) }
    dend_40 { pt3dadd( 4.20941, -70.5422, -3.15145, 1.7 ) }
    dend_40 { pt3dadd( 4.81037, -71.4434, -3.17309, 0.66 ) }
    dend_40 { pt3dadd( 5.50919, -72.3007, -3.1853, 0.22 ) }
    dend_40 { pt3dadd( 5.78992, -72.5933, -3.20855, 0.22 ) }
    dend_40 { pt3dadd( 6.32008, -73.072, -3.2971, 0.22 ) }
    dend_40 { pt3dadd( 6.75408, -73.4489, -3.40841, 0.22 ) }
    dend_40 { pt3dadd( 7.30974, -73.9717, -3.58847, 0.44 ) }
    dend_40 { pt3dadd( 7.87093, -74.5332, -3.78972, 1.47 ) }
    dend_40 { pt3dadd( 8.48536, -75.1977, -4.04485, 2.43 ) }
    dend_40 { pt3dadd( 8.93036, -75.706, -4.22965, 2.43 ) }
    dend_40 { pt3dadd( 10.0598, -77.0718, -4.691, 0.66 ) }
    dend_40 { pt3dadd( 10.8502, -78.1048, -4.98271, 0.59 ) }
    dend_40 { pt3dadd( 11.448, -78.9507, -5.16523, 0.81 ) }
    dend_40 { pt3dadd( 11.9439, -79.7343, -5.27263, 0.22 ) }
    dend_40 { pt3dadd( 12.225, -80.2717, -5.32279, 0.29 ) }
    dend_40 { pt3dadd( 12.5077, -80.9952, -5.36842, 0.29 ) }
    dend_40 { pt3dadd( 12.707, -81.8743, -5.40071, 0.74 ) }
    dend_40 { pt3dadd( 12.8468, -82.8354, -5.43304, 1.18 ) }
    dend_40 { pt3dadd( 12.9683, -83.8974, -5.47045, 1.84 ) }
    dend_40 { pt3dadd( 13.1211, -85.1309, -5.502, 1.99 ) }
    dend_40 { pt3dadd( 13.2909, -86.2182, -5.53491, 1.18 ) }
    dend_40 { pt3dadd( 13.6481, -87.8025, -5.56852, 0.44 ) }
    dend_40 { pt3dadd( 13.9286, -88.662, -5.58154, 0.37 ) }
    dend_40 { pt3dadd( 14.2597, -89.414, -5.58909, 0.37 ) }
    dend_40 { pt3dadd( 14.6463, -90.1268, -5.61517, 0.88 ) }
    dend_40 { pt3dadd( 15.1063, -90.8411, -5.63696, 1.92 ) }
    dend_40 { pt3dadd( 15.7054, -91.6647, -5.6811, 2.21 ) }
    dend_40 { pt3dadd( 16.3957, -92.5415, -5.71788, 1.11 ) }
    dend_40 { pt3dadd( 17.2434, -93.6228, -5.75922, 0.52 ) }
    dend_40 { pt3dadd( 17.7189, -94.2441, -5.8024, 1.18 ) }
    dend_40 { pt3dadd( 18.2008, -94.889, -5.8853, 1.77 ) }
    dend_40 { pt3dadd( 18.7744, -95.6598, -6.04292, 1.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 68/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -14.7571, -50.7626, -0.3849, 2.8 ) }
    dend_33 { pt3dadd( -15.1409, -51.3171, -0.732383, 2.8 ) }
    dend_33 { pt3dadd( -15.8587, -52.3542, -1.38233, 2.21 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 71/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 41.923, 23.2889, -25.3737, 0.22 ) }
    dend_30 { pt3dadd( 48.8897, 26.1972, -28.4425, 0.22 ) }
    dend_30 { pt3dadd( 56.3688, 27.4165, -31.4403, 0.22 ) }
    dend_30 { pt3dadd( 63.8521, 29.0295, -34.2347, 0.22 ) }
    dend_30 { pt3dadd( 71.3766, 31.4773, -36.1841, 0.22 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 41.923, 23.2889, -25.3737, 0.22 ) }
    dend_29 { pt3dadd( 52.0077, 27.1531, -29.9652, 0.22 ) }
    dend_29 { pt3dadd( 61.426, 31.0569, -35.7764, 0.22 ) }
    dend_29 { pt3dadd( 71.6963, 35.2022, -39.6563, 0.22 ) }
    dend_29 { pt3dadd( 82.1747, 38.6203, -43.6855, 0.22 ) }
    dend_29 { pt3dadd( 92.7451, 42.9784, -46.3289, 0.22 ) }
    dend_29 { pt3dadd( 103.403, 46.7618, -49.4635, 0.22 ) }
    dend_29 { pt3dadd( 113.404, 50.7915, -54.095, 0.22 ) }
    dend_29 { pt3dadd( 122.526, 55.1904, -60.0246, 0.22 ) }
    dend_29 { pt3dadd( 132.573, 58.235, -65.2688, 0.22 ) }
    dend_29 { pt3dadd( 143.342, 61.6394, -68.4527, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 87/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 33.3815, 12.1753, -25.458, 0.22 ) }
    dend_27 { pt3dadd( 39.2594, 9.51853, -24.9272, 0.22 ) }
    dend_27 { pt3dadd( 45.3865, 7.59312, -24.1267, 0.22 ) }
    dend_27 { pt3dadd( 51.7655, 6.49819, -24.1393, 0.22 ) }
    dend_27 { pt3dadd( 57.9488, 4.83827, -23.1902, 0.22 ) }
    dend_27 { pt3dadd( 64.3234, 3.86713, -22.6321, 0.22 ) }
    dend_27 { pt3dadd( 70.7513, 3.35028, -22.0804, 0.22 ) }
    dend_27 { pt3dadd( 76.9379, 1.97631, -20.7658, 0.22 ) }
    dend_27 { pt3dadd( 83.2762, 0.68684, -20.5353, 0.22 ) }
    dend_27 { pt3dadd( 89.2911, -1.32274, -19.2419, 0.22 ) }
    dend_27 { pt3dadd( 95.3691, -3.22372, -18.0872, 0.22 ) }
    dend_27 { pt3dadd( 101.225, -5.77286, -17.0341, 0.22 ) }
    dend_27 { pt3dadd( 107.159, -7.68375, -15.2941, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 0/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 33.3815, 12.1753, -25.458, 0.22 ) }
    dend_26 { pt3dadd( 37.4537, 15.6526, -30.1061, 0.22 ) }
    dend_26 { pt3dadd( 40.2441, 18.4769, -35.9812, 0.22 ) }
    dend_26 { pt3dadd( 43.0274, 21.7995, -41.5932, 0.22 ) }
    dend_26 { pt3dadd( 46.3144, 25.875, -46.375, 0.22 ) }
    dend_26 { pt3dadd( 50.0298, 28.7029, -51.7116, 0.22 ) }
    dend_26 { pt3dadd( 54.8968, 31.7618, -55.8632, 0.22 ) }
    dend_26 { pt3dadd( 59.9811, 35.4996, -59.0972, 0.22 ) }
    dend_26 { pt3dadd( 64.7692, 39.6381, -62.2951, 0.22 ) }
    dend_26 { pt3dadd( 70.544, 43.3352, -64.1018, 0.22 ) }
    dend_26 { pt3dadd( 76.1399, 47.6485, -64.7028, 0.22 ) }
    dend_26 { pt3dadd( 81.7913, 51.8399, -63.8228, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 12/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.39961, -0.895294, 37.2715, 0.59 ) }
    dend_23 { pt3dadd( -5.72562, -3.24742, 38.536, 0.59 ) }
    dend_23 { pt3dadd( -5.74132, -4.17779, 39.0559, 1.55 ) }
    dend_23 { pt3dadd( -5.67099, -5.13838, 39.6281, 2.14 ) }
    dend_23 { pt3dadd( -5.56945, -6.14418, 40.2742, 0.96 ) }
    dend_23 { pt3dadd( -5.476, -7.28545, 41.0613, 0.52 ) }
    dend_23 { pt3dadd( -5.42391, -8.39506, 41.8618, 0.52 ) }
    dend_23 { pt3dadd( -5.34127, -9.34861, 42.6709, 1.11 ) }
    dend_23 { pt3dadd( -5.34525, -9.81546, 43.1361, 1.11 ) }
    dend_23 { pt3dadd( -5.45998, -10.4584, 43.8738, 1.11 ) }
    dend_23 { pt3dadd( -5.66851, -11.2006, 44.8209, 1.84 ) }
    dend_23 { pt3dadd( -5.87398, -11.7756, 45.6162, 2.43 ) }
    dend_23 { pt3dadd( -6.26062, -12.6733, 47.0891, 1.03 ) }
    dend_23 { pt3dadd( -6.59793, -13.3124, 48.2276, 1.7 ) }
    dend_23 { pt3dadd( -6.93864, -13.9897, 49.4227, 1.25 ) }
    dend_23 { pt3dadd( -7.28491, -14.7946, 50.7886, 2.51 ) }
    dend_23 { pt3dadd( -7.61205, -15.5819, 52.1327, 2.51 ) }
    dend_23 { pt3dadd( -8.17858, -16.8993, 54.368, 1.77 ) }
    dend_23 { pt3dadd( -8.68914, -18.0191, 56.1862, 1.25 ) }
    dend_23 { pt3dadd( -9.05737, -18.7548, 57.2998, 0.37 ) }
    dend_23 { pt3dadd( -9.34447, -19.2765, 58.0137, 0.59 ) }
    dend_23 { pt3dadd( -9.69392, -19.8394, 58.6654, 0.59 ) }
    dend_23 { pt3dadd( -10.1707, -20.5703, 59.3176, 0.22 ) }
    dend_23 { pt3dadd( -10.5637, -21.1584, 59.7208, 0.52 ) }
    dend_23 { pt3dadd( -10.9537, -21.6877, 60.0559, 0.37 ) }
    dend_23 { pt3dadd( -11.3152, -22.1029, 60.3122, 1.33 ) }
    dend_23 { pt3dadd( -11.8385, -22.6567, 60.6443, 1.92 ) }
    dend_23 { pt3dadd( -13.1718, -24.0291, 61.431, 0.29 ) }
    dend_23 { pt3dadd( -13.6227, -24.4802, 61.6691, 1.11 ) }
    dend_23 { pt3dadd( -14.0457, -24.9171, 61.8945, 1.7 ) }
    dend_23 { pt3dadd( -15.237, -26.2033, 62.5507, 0.15 ) }
    dend_23 { pt3dadd( -15.771, -26.7844, 62.8785, 0.74 ) }
    dend_23 { pt3dadd( -16.5042, -27.5918, 63.355, 0.22 ) }
    dend_23 { pt3dadd( -16.9961, -28.135, 63.6779, 0.74 ) }
    dend_23 { pt3dadd( -17.5995, -28.8132, 64.1253, 0.22 ) }
    dend_23 { pt3dadd( -18.0866, -29.3925, 64.5845, 0.66 ) }
    dend_23 { pt3dadd( -18.8205, -30.3443, 65.4696, 0.15 ) }
    dend_23 { pt3dadd( -19.0934, -30.7405, 65.9099, 0.15 ) }
    dend_23 { pt3dadd( -19.322, -31.1014, 66.3855, 0.74 ) }
    dend_23 { pt3dadd( -19.817, -31.9382, 67.5888, 0.37 ) }
    dend_23 { pt3dadd( -20.2373, -32.744, 68.8465, 1.03 ) }
    dend_23 { pt3dadd( -20.4412, -33.183, 69.5766, 1.7 ) }
    dend_23 { pt3dadd( -20.8836, -34.1785, 71.4029, 0.44 ) }
    dend_23 { pt3dadd( -21.2184, -34.8463, 72.7827, 0.74 ) }
    dend_23 { pt3dadd( -21.4478, -35.2455, 73.6787, 1.7 ) }
    dend_23 { pt3dadd( -22.0626, -36.1612, 75.7754, 0.15 ) }
    dend_23 { pt3dadd( -22.3517, -36.5329, 76.6018, 0.52 ) }
    dend_23 { pt3dadd( -22.7891, -37.0377, 77.7518, 0.22 ) }
    dend_23 { pt3dadd( -23.2002, -37.4672, 78.7327, 0.66 ) }
    dend_23 { pt3dadd( -23.7043, -37.9546, 79.8472, 0.22 ) }
    dend_23 { pt3dadd( -24.2688, -38.4246, 80.9894, 0.15 ) }
    dend_23 { pt3dadd( -24.6381, -38.6897, 81.5664, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 64/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.39961, -0.895294, 37.2715, 2.21 ) }
    dend_22 { pt3dadd( -4.37587, -0.311505, 37.6511, 2.21 ) }
    dend_22 { pt3dadd( -3.20901, 0.5876, 38.1417, 0.59 ) }
    dend_22 { pt3dadd( -2.40625, 1.41125, 38.5311, 0.59 ) }
    dend_22 { pt3dadd( -2.02914, 1.93492, 38.7788, 1.03 ) }
    dend_22 { pt3dadd( -1.63334, 2.68002, 39.1828, 0.29 ) }
    dend_22 { pt3dadd( -1.36735, 3.29913, 39.6074, 0.29 ) }
    dend_22 { pt3dadd( -1.20107, 4.01904, 40.2124, 1.4 ) }
    dend_22 { pt3dadd( -1.16321, 4.51642, 40.7608, 0.74 ) }
    dend_22 { pt3dadd( -1.13875, 5.10306, 41.6021, 0.37 ) }
    dend_22 { pt3dadd( -1.09036, 5.79401, 42.7324, 0.74 ) }
    dend_22 { pt3dadd( -1.00095, 6.57168, 44.1288, 1.7 ) }
    dend_22 { pt3dadd( -0.900081, 7.09067, 45.0621, 2.65 ) }
    dend_22 { pt3dadd( -0.655827, 8.07374, 46.8302, 1.25 ) }
    dend_22 { pt3dadd( -0.406761, 8.90379, 48.3434, 1.55 ) }
    dend_22 { pt3dadd( -0.166893, 9.67979, 49.819, 2.73 ) }
    dend_22 { pt3dadd( -0.118759, 9.84409, 50.1444, 2.73 ) }
    dend_22 { pt3dadd( 0.119727, 10.6844, 51.897, 0.66 ) }
    dend_22 { pt3dadd( 0.282533, 11.2337, 53.1924, 1.33 ) }
    dend_22 { pt3dadd( 0.468809, 11.8936, 54.9103, 2.36 ) }
    dend_22 { pt3dadd( 0.705862, 12.7623, 57.3635, 1.99 ) }
    dend_22 { pt3dadd( 0.825743, 13.1334, 58.5858, 1.99 ) }
    dend_22 { pt3dadd( 1.04986, 13.6689, 60.5885, 1.62 ) }
    dend_22 { pt3dadd( 1.32685, 14.1742, 62.7597, 1.92 ) }
    dend_22 { pt3dadd( 1.66267, 14.5962, 64.6325, 0.44 ) }
    dend_22 { pt3dadd( 1.85112, 14.7755, 65.3373, 0.44 ) }
    dend_22 { pt3dadd( 2.11805, 14.967, 65.9967, 0.44 ) }
    dend_22 { pt3dadd( 2.43278, 15.1704, 66.611, 0.74 ) }
    dend_22 { pt3dadd( 2.77023, 15.3617, 67.1162, 0.96 ) }
    dend_22 { pt3dadd( 3.65175, 15.7806, 68.1518, 0.52 ) }
    dend_22 { pt3dadd( 4.58554, 16.1556, 69.1306, 0.37 ) }
    dend_22 { pt3dadd( 5.17838, 16.4221, 69.7467, 1.18 ) }
    dend_22 { pt3dadd( 5.68226, 16.6936, 70.278, 1.7 ) }
    dend_22 { pt3dadd( 6.4988, 17.2096, 71.152, 0.22 ) }
    dend_22 { pt3dadd( 6.9371, 17.5343, 71.6356, 0.22 ) }
    dend_22 { pt3dadd( 7.04065, 17.6308, 71.7507, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 7.35502, 17.9595, 72.0774, 0.52 ) }
    dend_22 { pt3dadd( 7.71928, 18.3588, 72.4314, 0.52 ) }
    dend_22 { pt3dadd( 8.20627, 18.9035, 72.8782, 0.22 ) }
    dend_22 { pt3dadd( 8.66917, 19.4133, 73.3051, 1.25 ) }
    dend_22 { pt3dadd( 9.20713, 19.963, 73.8191, 1.47 ) }
    dend_22 { pt3dadd( 10.1754, 20.8428, 74.7265, 0.29 ) }
    dend_22 { pt3dadd( 10.6626, 21.2485, 75.1845, 0.96 ) }
    dend_22 { pt3dadd( 11.1535, 21.6478, 75.6511, 1.25 ) }
    dend_22 { pt3dadd( 11.7955, 22.2336, 76.3292, 0.29 ) }
    dend_22 { pt3dadd( 12.2602, 22.7617, 76.9148, 0.29 ) }
    dend_22 { pt3dadd( 12.3918, 22.9592, 77.1301, 0.29 ) }
    dend_22 { pt3dadd( 12.6012, 23.3693, 77.5471, 0.81 ) }
    dend_22 { pt3dadd( 12.8435, 23.855, 77.9772, 0.81 ) }
    dend_22 { pt3dadd( 13.2643, 24.6713, 78.7027, 0.29 ) }
    dend_22 { pt3dadd( 13.5381, 25.1731, 79.143, 0.29 ) }
    dend_22 { pt3dadd( 13.7834, 25.5034, 79.4612, 0.29 ) }
    dend_22 { pt3dadd( 14.3827, 26.1505, 80.1739, 0.52 ) }
    dend_22 { pt3dadd( 15.2143, 26.9007, 81.0819, 0.37 ) }
    dend_22 { pt3dadd( 16.0616, 27.5871, 81.9624, 1.4 ) }
    dend_22 { pt3dadd( 16.52, 27.9374, 82.4213, 1.92 ) }
    dend_22 { pt3dadd( 17.5471, 28.6991, 83.5027, 0.22 ) }
    dend_22 { pt3dadd( 18.0289, 29.0356, 84.0537, 0.22 ) }
    dend_22 { pt3dadd( 18.3433, 29.2365, 84.4527, 0.59 ) }
    dend_22 { pt3dadd( 18.638, 29.4158, 84.8432, 0.74 ) }
    dend_22 { pt3dadd( 19.1159, 29.7306, 85.4387, 0.37 ) }
    dend_22 { pt3dadd( 19.688, 30.1516, 86.1805, 0.37 ) }
    dend_22 { pt3dadd( 20.1472, 30.5269, 86.7502, 0.81 ) }
    dend_22 { pt3dadd( 20.4498, 30.7675, 87.0873, 0.81 ) }
    dend_22 { pt3dadd( 20.7969, 31.0423, 87.4738, 0.96 ) }
    dend_22 { pt3dadd( 21.5825, 31.6433, 88.3444, 0.44 ) }
    dend_22 { pt3dadd( 22.0161, 31.9628, 88.8232, 0.44 ) }
    dend_22 { pt3dadd( 22.7308, 32.4998, 89.5988, 1.11 ) }
    dend_22 { pt3dadd( 23.4417, 33.0292, 90.3933, 0.29 ) }
    dend_22 { pt3dadd( 24.0397, 33.4612, 91.0976, 0.59 ) }
    dend_22 { pt3dadd( 24.4056, 33.7196, 91.5704, 0.22 ) }
    dend_22 { pt3dadd( 24.7353, 33.9605, 92.0645, 0.22 ) }
    dend_22 { pt3dadd( 24.8528, 34.0672, 92.259, 0.22 ) }
    dend_22 { pt3dadd( 25.0833, 34.2853, 92.6711, 0.22 ) }
    dend_22 { pt3dadd( 25.4255, 34.5853, 93.219, 0.22 ) }
    dend_22 { pt3dadd( 25.7637, 34.8862, 93.7265, 0.59 ) }
    dend_22 { pt3dadd( 26.1523, 35.2654, 94.3113, 1.33 ) }
    dend_22 { pt3dadd( 26.7941, 35.9468, 95.2639, 0.37 ) }
    dend_22 { pt3dadd( 27.38, 36.589, 96.0885, 0.52 ) }
    dend_22 { pt3dadd( 27.7523, 36.9994, 96.5555, 0.22 ) }
    dend_22 { pt3dadd( 28.0232, 37.3066, 96.8636, 0.22 ) }
    dend_22 { pt3dadd( 28.3109, 37.6588, 97.1247, 0.44 ) }
    dend_22 { pt3dadd( 28.6939, 38.1573, 97.3955, 0.66 ) }
    dend_22 { pt3dadd( 29.1817, 38.8202, 97.6578, 0.37 ) }
    dend_22 { pt3dadd( 29.6987, 39.5424, 97.8876, 1.18 ) }
    dend_22 { pt3dadd( 30.0408, 39.9882, 98.0242, 1.55 ) }
    dend_22 { pt3dadd( 31.0773, 41.2433, 98.4279, 0.29 ) }
    dend_22 { pt3dadd( 31.3801, 41.5995, 98.546, 0.29 ) }
    dend_22 { pt3dadd( 31.6992, 41.9685, 98.6681, 0.81 ) }
    dend_22 { pt3dadd( 32.3076, 42.6691, 98.8959, 1.84 ) }
    dend_22 { pt3dadd( 33.3164, 43.8616, 99.2644, 0.22 ) }
    dend_22 { pt3dadd( 33.8291, 44.4985, 99.4635, 0.44 ) }
    dend_22 { pt3dadd( 34.214, 45.0199, 99.6386, 0.44 ) }
    dend_22 { pt3dadd( 34.7321, 45.7791, 99.8928, 0.22 ) }
    dend_22 { pt3dadd( 35.1468, 46.4899, 100.128, 0.74 ) }
    dend_22 { pt3dadd( 35.5265, 47.2746, 100.37, 0.37 ) }
    dend_22 { pt3dadd( 35.7945, 47.9212, 100.587, 0.29 ) }
    dend_22 { pt3dadd( 35.9782, 48.3836, 100.761, 0.81 ) }
    dend_22 { pt3dadd( 36.1553, 48.8508, 100.958, 1.03 ) }
    dend_22 { pt3dadd( 36.6577, 50.1741, 101.57, 0.22 ) }
    dend_22 { pt3dadd( 36.8713, 50.6638, 101.817, 0.44 ) }
    dend_22 { pt3dadd( 37.3311, 51.5486, 102.299, 0.22 ) }
    dend_22 { pt3dadd( 37.6803, 52.1298, 102.62, 0.81 ) }
    dend_22 { pt3dadd( 37.9648, 52.5569, 102.858, 0.81 ) }
    dend_22 { pt3dadd( 38.5988, 53.4036, 103.372, 0.22 ) }
    dend_22 { pt3dadd( 39.2232, 54.1726, 103.886, 0.22 ) }
    dend_22 { pt3dadd( 39.5774, 54.6404, 104.204, 0.22 ) }
    dend_22 { pt3dadd( 39.8498, 55.0492, 104.472, 0.52 ) }
    dend_22 { pt3dadd( 40.0779, 55.4227, 104.707, 0.52 ) }
    dend_22 { pt3dadd( 40.4836, 56.1417, 105.185, 0.15 ) }
    dend_22 { pt3dadd( 40.7289, 56.6426, 105.523, 0.15 ) }
    dend_22 { pt3dadd( 40.9305, 57.1214, 105.844, 0.15 ) }
    dend_22 { pt3dadd( 41.0463, 57.4069, 106.041, 0.37 ) }
    dend_22 { pt3dadd( 41.3193, 58.0544, 106.508, 0.07 ) }
    dend_22 { pt3dadd( 41.7042, 58.9474, 107.123, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -23.4582, 25.656, 25.6742, 0.22 ) }
    dend_20 { pt3dadd( -23.6641, 27.0426, 26.9187, 0.22 ) }
    dend_20 { pt3dadd( -23.846, 27.8305, 27.5693, 0.37 ) }
    dend_20 { pt3dadd( -24.1131, 28.9898, 28.4555, 1.11 ) }
    dend_20 { pt3dadd( -24.3108, 29.9959, 29.1737, 2.51 ) }
    dend_20 { pt3dadd( -24.4472, 30.9329, 29.8072, 3.17 ) }
    dend_20 { pt3dadd( -24.6576, 32.8238, 31.058, 0.22 ) }
    dend_20 { pt3dadd( -24.7405, 33.3928, 31.3954, 0.22 ) }
    dend_20 { pt3dadd( -24.8218, 33.9938, 31.7112, 0.52 ) }
    dend_20 { pt3dadd( -24.8939, 34.6417, 32.0199, 0.88 ) }
    dend_20 { pt3dadd( -24.9168, 35.7234, 32.529, 0.22 ) }
    dend_20 { pt3dadd( -24.865, 36.556, 32.9268, 0.22 ) }
    dend_20 { pt3dadd( -24.8231, 36.9019, 33.1125, 0.59 ) }
    dend_20 { pt3dadd( -24.7907, 37.6104, 33.523, 1.4 ) }
    dend_20 { pt3dadd( -24.8924, 38.5396, 34.0967, 0.22 ) }
    dend_20 { pt3dadd( -25.0343, 39.1789, 34.4844, 0.22 ) }
    dend_20 { pt3dadd( -25.1235, 39.4896, 34.6576, 0.22 ) }
    dend_20 { pt3dadd( -25.3661, 40.3033, 35.0663, 0.52 ) }
    dend_20 { pt3dadd( -25.6004, 40.982, 35.3822, 0.81 ) }
    dend_20 { pt3dadd( -26.1266, 42.3714, 35.9887, 0.22 ) }
    dend_20 { pt3dadd( -26.3909, 43.0358, 36.2546, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_20 { pt3dadd( -26.8054, 44.0306, 36.6234, 0.81 ) }
    dend_20 { pt3dadd( -27.1751, 44.9399, 36.925, 0.22 ) }
    dend_20 { pt3dadd( -27.5735, 45.9691, 37.2027, 0.22 ) }
    dend_20 { pt3dadd( -27.7674, 46.5224, 37.3431, 0.37 ) }
    dend_20 { pt3dadd( -28.0029, 47.1859, 37.524, 1.47 ) }
    dend_20 { pt3dadd( -28.2593, 47.7827, 37.6997, 2.58 ) }
    dend_20 { pt3dadd( -28.6643, 48.6353, 37.9745, 2.58 ) }
    dend_20 { pt3dadd( -29.5405, 50.4603, 38.5851, 0.22 ) }
    dend_20 { pt3dadd( -29.8865, 51.2372, 38.8466, 0.22 ) }
    dend_20 { pt3dadd( -30.3805, 52.4154, 39.2411, 0.81 ) }
    dend_20 { pt3dadd( -30.8208, 53.5257, 39.641, 0.22 ) }
    dend_20 { pt3dadd( -31.0589, 54.1686, 39.907, 0.22 ) }
    dend_20 { pt3dadd( -31.2471, 54.7093, 40.1595, 0.44 ) }
    dend_20 { pt3dadd( -31.4872, 55.4632, 40.5346, 0.88 ) }
    dend_20 { pt3dadd( -31.7775, 56.3791, 40.9837, 0.37 ) }
    dend_20 { pt3dadd( -32.0244, 57.2701, 41.4017, 0.37 ) }
    dend_20 { pt3dadd( -32.2374, 58.0827, 41.7734, 1.03 ) }
    dend_20 { pt3dadd( -32.4323, 58.7282, 42.053, 2.14 ) }
    dend_20 { pt3dadd( -32.6736, 59.4114, 42.351, 2.14 ) }
    dend_20 { pt3dadd( -33.2038, 60.6684, 42.8875, 0.22 ) }
    dend_20 { pt3dadd( -33.5334, 61.3401, 43.1604, 0.22 ) }
    dend_20 { pt3dadd( -33.6468, 61.5724, 43.2454, 0.22 ) }
    dend_20 { pt3dadd( -33.8266, 61.955, 43.3787, 0.22 ) }
    dend_20 { pt3dadd( -33.9997, 62.3423, 43.5263, 0.52 ) }
    dend_20 { pt3dadd( -34.2993, 63.0034, 43.81, 0.96 ) }
    dend_20 { pt3dadd( -34.7949, 63.9357, 44.2928, 0.29 ) }
    dend_20 { pt3dadd( -35.2039, 64.6433, 44.7011, 0.44 ) }
    dend_20 { pt3dadd( -35.5422, 65.2197, 45.0518, 0.22 ) }
    dend_20 { pt3dadd( -35.8782, 65.7999, 45.4143, 1.03 ) }
    dend_20 { pt3dadd( -36.194, 66.3811, 45.7505, 1.55 ) }
    dend_20 { pt3dadd( -36.8433, 67.6792, 46.4634, 0.15 ) }
    dend_20 { pt3dadd( -37.2075, 68.4416, 46.8594, 0.15 ) }
    dend_20 { pt3dadd( -37.4045, 68.849, 47.0675, 0.66 ) }
    dend_20 { pt3dadd( -37.8099, 69.6545, 47.486, 1.47 ) }
    dend_20 { pt3dadd( -38.607, 71.1543, 48.2846, 0.22 ) }
    dend_20 { pt3dadd( -39.0122, 71.8877, 48.6843, 0.22 ) }
    dend_20 { pt3dadd( -39.3147, 72.4399, 48.9762, 0.66 ) }
    dend_20 { pt3dadd( -39.8071, 73.2635, 49.4338, 0.22 ) }
    dend_20 { pt3dadd( -40.129, 73.7764, 49.7367, 0.22 ) }
    dend_20 { pt3dadd( -40.4498, 74.233, 50.0299, 0.22 ) }
    dend_20 { pt3dadd( -40.7044, 74.5518, 50.2581, 0.22 ) }
    dend_20 { pt3dadd( -41.0051, 74.9413, 50.5326, 0.22 ) }
    dend_20 { pt3dadd( -41.4817, 75.6307, 51.0118, 0.22 ) }
    dend_20 { pt3dadd( -41.7805, 76.1272, 51.3294, 0.88 ) }
    dend_20 { pt3dadd( -42.316, 77.0358, 51.8924, 1.92 ) }
    dend_20 { pt3dadd( -43.0678, 78.2042, 52.6426, 0.22 ) }
    dend_20 { pt3dadd( -43.4405, 78.7289, 53.0051, 0.22 ) }
    dend_20 { pt3dadd( -43.6853, 79.057, 53.2484, 0.22 ) }
    dend_20 { pt3dadd( -43.8768, 79.3141, 53.4394, 0.22 ) }
    dend_20 { pt3dadd( -44.4162, 80.0881, 54.0019, 0.59 ) }
    dend_20 { pt3dadd( -44.8697, 80.8109, 54.5191, 0.15 ) }
    dend_20 { pt3dadd( -45.1041, 81.1873, 54.7967, 0.22 ) }
    dend_20 { pt3dadd( -45.4041, 81.716, 55.1676, 0.22 ) }
    dend_20 { pt3dadd( -45.6048, 82.1058, 55.4377, 0.22 ) }
    dend_20 { pt3dadd( -45.7593, 82.4311, 55.6688, 0.74 ) }
    dend_20 { pt3dadd( -45.981, 82.9738, 56.064, 1.7 ) }
    dend_20 { pt3dadd( -46.4853, 84.1619, 56.9956, 0.15 ) }
    dend_20 { pt3dadd( -46.7559, 84.7173, 57.4752, 0.22 ) }
    dend_20 { pt3dadd( -46.9455, 85.064, 57.7968, 0.22 ) }
    dend_20 { pt3dadd( -47.273, 85.641, 58.3441, 0.59 ) }
    dend_20 { pt3dadd( -47.6601, 86.2932, 58.9858, 0.22 ) }
    dend_20 { pt3dadd( -48.1127, 87.0332, 59.7419, 1.11 ) }
    dend_20 { pt3dadd( -48.4277, 87.5134, 60.2339, 1.47 ) }
    dend_20 { pt3dadd( -49.1498, 88.5185, 61.2668, 0.15 ) }
    dend_20 { pt3dadd( -49.5196, 89.0443, 61.76, 0.29 ) }
    dend_20 { pt3dadd( -49.7972, 89.4403, 62.0831, 0.15 ) }
    dend_20 { pt3dadd( -49.9783, 89.6699, 62.2413, 0.15 ) }
    dend_20 { pt3dadd( -50.3825, 90.1303, 62.5067, 0.59 ) }
    dend_20 { pt3dadd( -50.6929, 90.4452, 62.6662, 0.22 ) }
    dend_20 { pt3dadd( -51.1641, 90.8669, 62.8474, 0.22 ) }
    dend_20 { pt3dadd( -51.5898, 91.2464, 62.999, 0.22 ) }
    dend_20 { pt3dadd( -52.3349, 91.9303, 63.2413, 0.22 ) }
    dend_20 { pt3dadd( -52.744, 92.312, 63.3691, 0.81 ) }
    dend_20 { pt3dadd( -53.3475, 92.8726, 63.5574, 1.77 ) }
    dend_20 { pt3dadd( -54.5342, 93.9781, 63.9155, 0.15 ) }
    dend_20 { pt3dadd( -54.9249, 94.3599, 64.0284, 0.15 ) }
    dend_20 { pt3dadd( -55.4033, 94.8763, 64.1537, 0.66 ) }
    dend_20 { pt3dadd( -55.7886, 95.3611, 64.2309, 0.15 ) }
    dend_20 { pt3dadd( -56.3186, 96.1339, 64.2996, 0.15 ) }
    dend_20 { pt3dadd( -56.5376, 96.5283, 64.318, 0.22 ) }
    dend_20 { pt3dadd( -56.863, 97.2922, 64.3389, 0.81 ) }
    dend_20 { pt3dadd( -56.9494, 97.5662, 64.3477, 0.81 ) }
    dend_20 { pt3dadd( -57.0675, 98.1341, 64.3715, 0.15 ) }
    dend_20 { pt3dadd( -57.1505, 98.7923, 64.4011, 0.29 ) }
    dend_20 { pt3dadd( -57.2016, 99.5946, 64.4573, 0.15 ) }
    dend_20 { pt3dadd( -57.2255, 99.9661, 64.5029, 0.22 ) }
    dend_20 { pt3dadd( -57.3191, 101.239, 64.6998, 0.15 ) }
    dend_20 { pt3dadd( -57.3827, 101.827, 64.8149, 0.22 ) }
    dend_20 { pt3dadd( -57.4468, 102.255, 64.9136, 0.59 ) }
    dend_20 { pt3dadd( -57.6076, 103.024, 65.1083, 1.18 ) }
    dend_20 { pt3dadd( -57.8652, 103.967, 65.3589, 0.22 ) }
    dend_20 { pt3dadd( -58.0982, 104.639, 65.5472, 0.52 ) }
    dend_20 { pt3dadd( -58.5284, 105.621, 65.82, 0.15 ) }
    dend_20 { pt3dadd( -58.7158, 106.002, 65.9194, 0.22 ) }
    dend_20 { pt3dadd( -59.1722, 106.846, 66.1188, 0.15 ) }
    dend_20 { pt3dadd( -59.4355, 107.285, 66.2038, 0.52 ) }
    dend_20 { pt3dadd( -59.8084, 107.858, 66.2967, 0.52 ) }
    dend_20 { pt3dadd( -60.2189, 108.437, 66.3767, 0.15 ) }
    dend_20 { pt3dadd( -60.4988, 108.804, 66.4207, 0.29 ) }
    dend_20 { pt3dadd( -60.9729, 109.397, 66.4884, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( -61.2661, 109.747, 66.5231, 0.44 ) }
    dend_20 { pt3dadd( -61.4689, 109.978, 66.5432, 0.44 ) }
    dend_20 { pt3dadd( -62.232, 110.821, 66.6161, 0.15 ) }
    dend_20 { pt3dadd( -62.776, 111.401, 66.662, 0.15 ) }
    dend_20 { pt3dadd( -63.3843, 111.999, 66.6804, 0.88 ) }
    dend_20 { pt3dadd( -63.9885, 112.553, 66.6612, 0.52 ) }
    dend_20 { pt3dadd( -64.8891, 113.345, 66.5969, 0.15 ) }
    dend_20 { pt3dadd( -65.0883, 113.517, 66.5755, 0.15 ) }
    dend_20 { pt3dadd( -65.6746, 114.033, 66.4848, 0.29 ) }
    dend_20 { pt3dadd( -66.8238, 115.084, 66.2568, 0.07 ) }
    dend_20 { pt3dadd( -67.2104, 115.454, 66.1702, 0.29 ) }
    dend_20 { pt3dadd( -67.7596, 116.013, 66.0371, 0.74 ) }
    dend_20 { pt3dadd( -68.4066, 116.739, 65.8696, 0.15 ) }
    dend_20 { pt3dadd( -68.7829, 117.201, 65.7728, 0.15 ) }
    dend_20 { pt3dadd( -69.2418, 117.839, 65.6598, 0.15 ) }
    dend_20 { pt3dadd( -69.6134, 118.432, 65.6029, 0.15 ) }
    dend_20 { pt3dadd( -70.0399, 119.131, 65.5723, 0.37 ) }
    dend_20 { pt3dadd( -70.5037, 119.901, 65.5468, 0.07 ) }
    dend_20 { pt3dadd( -70.7498, 120.301, 65.541, 0.37 ) }
    dend_20 { pt3dadd( -71.5256, 121.532, 65.5517, 0.07 ) }
    dend_20 { pt3dadd( -71.9128, 122.175, 65.5744, 0.07 ) }
    dend_20 { pt3dadd( -72.2623, 122.768, 65.6234, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 22/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -23.4582, 25.656, 25.6742, 0.15 ) }
    dend_19 { pt3dadd( -25.9751, 26.0267, 26.0424, 0.15 ) }
    dend_19 { pt3dadd( -26.5785, 26.1151, 26.0933, 0.74 ) }
    dend_19 { pt3dadd( -27.7448, 26.2971, 26.1691, 1.7 ) }
    dend_19 { pt3dadd( -30.2077, 26.6815, 26.3291, 0.15 ) }
    dend_19 { pt3dadd( -30.8367, 26.7797, 26.3699, 0.29 ) }
    dend_19 { pt3dadd( -32.2592, 27.0017, 26.4623, 0.07 ) }
    dend_19 { pt3dadd( -33.4446, 27.1571, 26.4404, 0.07 ) }
    dend_19 { pt3dadd( -34.3592, 27.2868, 26.4131, 0.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 31/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -11.8591, 0.86291, -10.7596, 0.59 ) }
    dend_16 { pt3dadd( -13.6468, 1.4859, -9.86326, 0.59 ) }
    dend_16 { pt3dadd( -15.0618, 2.09223, -9.45785, 0.81 ) }
    dend_16 { pt3dadd( -16.2971, 2.63718, -9.05396, 1.03 ) }
    dend_16 { pt3dadd( -17.5978, 3.21482, -8.62882, 0.66 ) }
    dend_16 { pt3dadd( -18.7358, 3.72886, -8.2501, 0.59 ) }
    dend_16 { pt3dadd( -19.4533, 4.07887, -7.99436, 1.18 ) }
    dend_16 { pt3dadd( -20.5093, 4.69539, -7.65255, 1.4 ) }
    dend_16 { pt3dadd( -22.9374, 6.21627, -6.77489, 0.52 ) }
    dend_16 { pt3dadd( -23.8267, 6.78137, -6.44199, 0.74 ) }
    dend_16 { pt3dadd( -24.5308, 7.21781, -6.1784, 1.11 ) }
    dend_16 { pt3dadd( -25.6112, 7.83776, -5.81393, 0.59 ) }
    dend_16 { pt3dadd( -26.7299, 8.38854, -5.54748, 0.66 ) }
    dend_16 { pt3dadd( -28.0178, 8.90944, -5.45876, 0.37 ) }
    dend_16 { pt3dadd( -29.4959, 9.34461, -5.68642, 0.74 ) }
    dend_16 { pt3dadd( -30.7609, 9.60655, -5.98261, 0.96 ) }
    dend_16 { pt3dadd( -31.7948, 9.75539, -6.23284, 1.47 ) }
    dend_16 { pt3dadd( -33.5695, 9.94889, -6.65028, 0.59 ) }
    dend_16 { pt3dadd( -34.6348, 10.0881, -6.83871, 0.29 ) }
    dend_16 { pt3dadd( -35.5359, 10.281, -6.87654, 0.29 ) }
    dend_16 { pt3dadd( -36.2351, 10.537, -6.72403, 0.29 ) }
    dend_16 { pt3dadd( -37.6523, 11.2563, -6.23427, 0.81 ) }
    dend_16 { pt3dadd( -38.4999, 11.7844, -5.92778, 1.03 ) }
    dend_16 { pt3dadd( -39.7195, 12.6549, -5.53759, 0.59 ) }
    dend_16 { pt3dadd( -40.6016, 13.2601, -5.36333, 0.44 ) }
    dend_16 { pt3dadd( -41.8717, 14.0307, -5.32222, 0.44 ) }
    dend_16 { pt3dadd( -43.0594, 14.6021, -5.44117, 0.44 ) }
    dend_16 { pt3dadd( -44.4569, 15.1946, -5.6992, 1.18 ) }
    dend_16 { pt3dadd( -45.456, 15.5854, -5.91202, 0.96 ) }
    dend_16 { pt3dadd( -46.9084, 16.1443, -6.22777, 0.88 ) }
    dend_16 { pt3dadd( -48.4874, 16.7797, -6.54417, 0.44 ) }
    dend_16 { pt3dadd( -50.4886, 17.7102, -6.85412, 0.37 ) }
    dend_16 { pt3dadd( -51.6756, 18.3874, -6.91885, 0.37 ) }
    dend_16 { pt3dadd( -52.4918, 18.9817, -6.87104, 0.52 ) }
    dend_16 { pt3dadd( -53.2046, 19.6186, -6.74385, 1.33 ) }
    dend_16 { pt3dadd( -53.7797, 20.2253, -6.57086, 1.92 ) }
    dend_16 { pt3dadd( -54.6382, 21.206, -6.24177, 1.47 ) }
    dend_16 { pt3dadd( -55.7743, 22.5074, -5.70763, 0.74 ) }
    dend_16 { pt3dadd( -56.9331, 23.6927, -5.08163, 0.37 ) }
    dend_16 { pt3dadd( -57.5889, 24.2966, -4.67444, 0.22 ) }
    dend_16 { pt3dadd( -57.9933, 24.6272, -4.39589, 0.22 ) }
    dend_16 { pt3dadd( -58.7616, 25.1964, -3.79047, 0.29 ) }
    dend_16 { pt3dadd( -59.6255, 25.7637, -3.0899, 0.29 ) }
    dend_16 { pt3dadd( -60.4235, 26.2515, -2.45549, 1.25 ) }
    dend_16 { pt3dadd( -61.4816, 26.8729, -1.67412, 1.62 ) }
    dend_16 { pt3dadd( -62.7679, 27.6735, -0.858693, 0.88 ) }
    dend_16 { pt3dadd( -63.8578, 28.3966, -0.339844, 0.44 ) }
    dend_16 { pt3dadd( -65.1409, 29.2765, 0.0514467, 0.44 ) }
    dend_16 { pt3dadd( -65.9489, 29.7982, 0.136843, 1.11 ) }
    dend_16 { pt3dadd( -66.3562, 30.0367, 0.117991, 1.47 ) }
    dend_16 { pt3dadd( -67.6106, 30.6874, -0.0177498, 1.77 ) }
    dend_16 { pt3dadd( -69.3781, 31.4869, -0.264885, 0.52 ) }
    dend_16 { pt3dadd( -70.3141, 31.8336, -0.386015, 0.29 ) }
    dend_16 { pt3dadd( -70.9371, 32.0174, -0.436651, 0.74 ) }
    dend_16 { pt3dadd( -72.0575, 32.2546, -0.483788, 1.11 ) }
    dend_16 { pt3dadd( -74.1343, 32.5531, -0.467344, 0.22 ) }
    dend_16 { pt3dadd( -75.2195, 32.6249, -0.389033, 0.74 ) }
    dend_16 { pt3dadd( -76.5688, 32.6177, -0.257323, 1.25 ) }
    dend_16 { pt3dadd( -77.568, 32.556, -0.156057, 0.96 ) }
    dend_16 { pt3dadd( -78.6613, 32.4153, -0.0643904, 0.22 ) }
    dend_16 { pt3dadd( -79.1028, 32.3217, -0.0417156, 0.22 ) }
    dend_16 { pt3dadd( -80.2733, 31.9645, 0.0106511, 0.66 ) }
    dend_16 { pt3dadd( -80.9057, 31.7343, 0.0890498, 0.22 ) }
    dend_16 { pt3dadd( -81.5028, 31.4842, 0.198184, 0.22 ) }
    dend_16 { pt3dadd( -82.2854, 31.1184, 0.365477, 0.22 ) }
    dend_16 { pt3dadd( -83.1758, 30.687, 0.56227, 0.88 ) }
    dend_16 { pt3dadd( -84.4307, 30.0902, 0.741017, 0.22 ) }
    dend_16 { pt3dadd( -85.191, 29.7269, 0.773207, 0.81 ) }
    dend_16 { pt3dadd( -85.9804, 29.355, 0.712282, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_16 { pt3dadd( -87.046, 28.8385, 0.485136, 0.96 ) }
    dend_16 { pt3dadd( -87.9814, 28.3804, 0.199789, 0.66 ) }
    dend_16 { pt3dadd( -89.3747, 27.6989, -0.306819, 0.29 ) }
    dend_16 { pt3dadd( -90.4795, 27.1742, -0.748411, 0.29 ) }
    dend_16 { pt3dadd( -91.5179, 26.7023, -1.1111, 0.96 ) }
    dend_16 { pt3dadd( -92.8091, 26.1716, -1.43836, 1.18 ) }
    dend_16 { pt3dadd( -94.5843, 25.5484, -1.66579, 0.22 ) }
    dend_16 { pt3dadd( -95.2802, 25.343, -1.68156, 0.81 ) }
    dend_16 { pt3dadd( -96.1624, 25.1434, -1.60329, 0.81 ) }
    dend_16 { pt3dadd( -98.0321, 24.8928, -1.34171, 0.22 ) }
    dend_16 { pt3dadd( -99.3969, 24.7918, -1.12426, 0.59 ) }
    dend_16 { pt3dadd( -100.823, 24.744, -0.909195, 0.15 ) }
    dend_16 { pt3dadd( -101.894, 24.7204, -0.826808, 0.15 ) }
    dend_16 { pt3dadd( -103.025, 24.6851, -0.850989, 1.99 ) }
    dend_16 { pt3dadd( -104.294, 24.6254, -1.00079, 1.99 ) }
    dend_16 { pt3dadd( -105.874, 24.5101, -1.35184, 0.15 ) }
    dend_16 { pt3dadd( -106.914, 24.384, -1.64359, 0.59 ) }
    dend_16 { pt3dadd( -108.614, 24.1382, -2.14573, 0.22 ) }
    dend_16 { pt3dadd( -109.603, 23.9742, -2.42325, 0.22 ) }
    dend_16 { pt3dadd( -110.13, 23.865, -2.57219, 0.88 ) }
    dend_16 { pt3dadd( -110.812, 23.6918, -2.75121, 1.55 ) }
    dend_16 { pt3dadd( -111.817, 23.4109, -3.00662, 0.22 ) }
    dend_16 { pt3dadd( -112.897, 23.1007, -3.23806, 0.15 ) }
    dend_16 { pt3dadd( -113.784, 22.8429, -3.39338, 0.59 ) }
    dend_16 { pt3dadd( -114.629, 22.6114, -3.52163, 0.22 ) }
    dend_16 { pt3dadd( -115.533, 22.3944, -3.68043, 0.66 ) }
    dend_16 { pt3dadd( -117.849, 21.9025, -4.15642, 0.22 ) }
    dend_16 { pt3dadd( -119.276, 21.6418, -4.48467, 0.29 ) }
    dend_16 { pt3dadd( -119.768, 21.5633, -4.5944, 0.81 ) }
    dend_16 { pt3dadd( -120.92, 21.4194, -4.84878, 1.33 ) }
    dend_16 { pt3dadd( -122.68, 21.2452, -5.24343, 0.29 ) }
    dend_16 { pt3dadd( -123.598, 21.1624, -5.45729, 0.29 ) }
    dend_16 { pt3dadd( -124.543, 21.0768, -5.67839, 1.03 ) }
    dend_16 { pt3dadd( -126.228, 20.8842, -6.10321, 2.06 ) }
    dend_16 { pt3dadd( -128.325, 20.6273, -6.62719, 0.22 ) }
    dend_16 { pt3dadd( -128.925, 20.554, -6.77735, 0.22 ) }
    dend_16 { pt3dadd( -129.708, 20.4652, -6.95623, 0.74 ) }
    dend_16 { pt3dadd( -130.414, 20.3853, -7.11602, 1.11 ) }
    dend_16 { pt3dadd( -132.312, 20.1763, -7.58095, 0.15 ) }
    dend_16 { pt3dadd( -133.082, 20.1118, -7.80313, 0.15 ) }
    dend_16 { pt3dadd( -133.663, 20.0804, -7.96136, 0.15 ) }
    dend_16 { pt3dadd( -134.341, 20.068, -8.1494, 0.37 ) }
    dend_16 { pt3dadd( -146.208, 22.8857, -8.80221, 0.37 ) }
    dend_16 { pt3dadd( -158.292, 24.6067, -8.34262, 0.37 ) }
    dend_16 { pt3dadd( -170.227, 25.2323, -5.8204, 0.37 ) }
    dend_16 { pt3dadd( -182.196, 27.4276, -4.77344, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -11.8591, 0.86291, -10.7596, 0.44 ) }
    dend_13 { pt3dadd( -11.8243, 1.24052, -11.1948, 0.44 ) }
    dend_13 { pt3dadd( -11.7325, 1.66887, -11.645, 0.59 ) }
    dend_13 { pt3dadd( -11.657, 2.16767, -12.1412, 0.96 ) }
    dend_13 { pt3dadd( -11.6576, 2.54434, -12.4895, 1.11 ) }
    dend_13 { pt3dadd( -11.7227, 3.04607, -12.9438, 0.66 ) }
    dend_13 { pt3dadd( -11.87, 3.55073, -13.3857, 0.59 ) }
    dend_13 { pt3dadd( -12.029, 3.92967, -13.6867, 0.52 ) }
    dend_13 { pt3dadd( -12.4299, 4.10108, -13.7784, 0.52 ) }
    dend_13 { pt3dadd( -13.1862, 4.26401, -13.8196, 0.52 ) }
    dend_13 { pt3dadd( -13.6349, 4.34478, -13.8264, 0.66 ) }
    dend_13 { pt3dadd( -14.2869, 4.43734, -13.7901, 0.66 ) }
    dend_13 { pt3dadd( -14.9256, 4.52726, -13.7091, 0.81 ) }
    dend_13 { pt3dadd( -15.5564, 4.63686, -13.5896, 0.81 ) }
    dend_13 { pt3dadd( -16.2334, 4.80461, -13.4339, 0.59 ) }
    dend_13 { pt3dadd( -16.8424, 5.03822, -13.2728, 0.52 ) }
    dend_13 { pt3dadd( -17.3889, 5.30326, -13.1134, 0.52 ) }
    dend_13 { pt3dadd( -17.9765, 5.66782, -12.9122, 0.44 ) }
    dend_13 { pt3dadd( -18.2679, 5.90336, -12.776, 0.66 ) }
    dend_13 { pt3dadd( -18.5995, 6.25368, -12.5457, 0.44 ) }
    dend_13 { pt3dadd( -18.7567, 6.52603, -12.3715, 0.59 ) }
    dend_13 { pt3dadd( -22.7125, 9.89879, -12.2289, 0.59 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 68/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.43184, -9.24143, -6.27831, 1.25 ) }
    dend_11 { pt3dadd( 5.45216, -9.86078, -5.11818, 1.25 ) }
    dend_11 { pt3dadd( 5.4264, -10.8817, -3.41971, 1.25 ) }
    dend_11 { pt3dadd( 5.30122, -12.0485, -1.63507, 1.03 ) }
    dend_11 { pt3dadd( 5.06609, -13.0484, -0.189256, 1.03 ) }
    dend_11 { pt3dadd( 4.6659, -14.1387, 1.35478, 1.47 ) }
    dend_11 { pt3dadd( 4.29839, -14.8853, 2.43193, 1.7 ) }
    dend_11 { pt3dadd( 3.75261, -15.6589, 3.66271, 1.62 ) }
    dend_11 { pt3dadd( 3.19872, -16.1685, 4.55216, 1.55 ) }
    dend_11 { pt3dadd( 2.10547, -16.9082, 6.02125, 1.47 ) }
    dend_11 { pt3dadd( 1.21383, -17.3873, 7.08955, 1.7 ) }
    dend_11 { pt3dadd( 0.405126, -17.7536, 7.98252, 1.99 ) }
    dend_11 { pt3dadd( -0.64455, -18.1878, 9.11253, 1.99 ) }
    dend_11 { pt3dadd( -2.80506, -19.0859, 11.3822, 0.74 ) }
    dend_11 { pt3dadd( -3.79496, -19.5265, 12.3601, 0.74 ) }
    dend_11 { pt3dadd( -4.56606, -19.8965, 13.0389, 0.52 ) }
    dend_11 { pt3dadd( -5.30892, -20.3036, 13.6126, 1.55 ) }
    dend_11 { pt3dadd( -6.32228, -20.9475, 14.2913, 1.99 ) }
    dend_11 { pt3dadd( -7.29558, -21.6782, 14.8543, 1.03 ) }
    dend_11 { pt3dadd( -8.39893, -22.6225, 15.4052, 0.44 ) }
    dend_11 { pt3dadd( -9.14504, -23.3456, 15.8502, 0.44 ) }
    dend_11 { pt3dadd( -9.62672, -23.9742, 16.34, 0.44 ) }
    dend_11 { pt3dadd( -9.82627, -24.4957, 16.895, 0.59 ) }
    dend_11 { pt3dadd( -9.8205, -25.1732, 17.774, 0.96 ) }
    dend_11 { pt3dadd( -9.69843, -25.7784, 18.6583, 1.55 ) }
    dend_11 { pt3dadd( -9.52696, -26.3869, 19.6474, 1.62 ) }
    dend_11 { pt3dadd( -9.37247, -27.0056, 20.7179, 0.96 ) }
    dend_11 { pt3dadd( -9.31683, -27.6335, 21.8815, 0.44 ) }
    dend_11 { pt3dadd( -9.45984, -28.219, 23.0001, 0.74 ) }
    dend_11 { pt3dadd( -9.6851, -28.5355, 23.572, 0.74 ) }
    dend_11 { pt3dadd( -10.1924, -29.0229, 24.3672, 0.44 ) }
    dend_11 { pt3dadd( -10.6861, -29.4476, 25.0114, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_11 { pt3dadd( -11.1629, -29.8423, 25.593, 2.06 ) }
    dend_11 { pt3dadd( -11.7686, -30.3633, 26.3597, 1.33 ) }
    dend_11 { pt3dadd( -12.3671, -31.0233, 27.2993, 0.59 ) }
    dend_11 { pt3dadd( -12.7575, -31.6798, 28.1872, 0.59 ) }
    dend_11 { pt3dadd( -13.0412, -32.3637, 29.0346, 0.88 ) }
    dend_11 { pt3dadd( -13.3395, -33.1177, 29.8642, 0.52 ) }
    dend_11 { pt3dadd( -13.5388, -33.5668, 30.3449, 0.37 ) }
    dend_11 { pt3dadd( -13.9112, -34.3051, 31.0967, 0.59 ) }
    dend_11 { pt3dadd( -14.3291, -35.0227, 31.8223, 1.7 ) }
    dend_11 { pt3dadd( -14.9288, -35.9452, 32.7667, 2.51 ) }
    dend_11 { pt3dadd( -15.7827, -37.09, 33.9668, 0.88 ) }
    dend_11 { pt3dadd( -16.7351, -38.2632, 35.2244, 1.11 ) }
    dend_11 { pt3dadd( -17.4157, -39.096, 36.1425, 1.55 ) }
    dend_11 { pt3dadd( -18.0759, -39.915, 37.0625, 0.59 ) }
    dend_11 { pt3dadd( -18.6782, -40.7098, 37.9363, 0.29 ) }
    dend_11 { pt3dadd( -19.0739, -41.2261, 38.4959, 0.29 ) }
    dend_11 { pt3dadd( -19.2892, -41.4996, 38.783, 0.29 ) }
    dend_11 { pt3dadd( -19.6746, -41.9838, 39.1984, 0.29 ) }
    dend_11 { pt3dadd( -20.1094, -42.5165, 39.601, 1.4 ) }
    dend_11 { pt3dadd( -20.4372, -42.8814, 39.9014, 1.92 ) }
    dend_11 { pt3dadd( -21.5199, -43.9218, 40.9074, 0.44 ) }
    dend_11 { pt3dadd( -22.127, -44.4522, 41.4972, 0.44 ) }
    dend_11 { pt3dadd( -22.808, -44.9793, 42.1531, 1.33 ) }
    dend_11 { pt3dadd( -23.3758, -45.364, 42.6909, 1.84 ) }
    dend_11 { pt3dadd( -24.8218, -46.2639, 44.0645, 0.29 ) }
    dend_11 { pt3dadd( -25.5078, -46.6913, 44.7243, 0.29 ) }
    dend_11 { pt3dadd( -26.0101, -47.0473, 45.226, 0.29 ) }
    dend_11 { pt3dadd( -26.5105, -47.4479, 45.741, 0.29 ) }
    dend_11 { pt3dadd( -26.946, -47.8436, 46.2145, 0.29 ) }
    dend_11 { pt3dadd( -27.4897, -48.43, 46.8308, 1.4 ) }
    dend_11 { pt3dadd( -28.0563, -49.1262, 47.4815, 2.51 ) }
    dend_11 { pt3dadd( -29.0094, -50.3744, 48.6596, 0.44 ) }
    dend_11 { pt3dadd( -29.5666, -51.133, 49.4148, 0.52 ) }
    dend_11 { pt3dadd( -30.1027, -51.9105, 50.2343, 0.37 ) }
    dend_11 { pt3dadd( -30.5272, -52.5328, 50.9393, 0.74 ) }
    dend_11 { pt3dadd( -31.0462, -53.3141, 51.8793, 0.22 ) }
    dend_11 { pt3dadd( -31.3418, -53.7918, 52.4826, 0.81 ) }
    dend_11 { pt3dadd( -31.5083, -54.1093, 52.9116, 0.81 ) }
    dend_11 { pt3dadd( -31.7818, -54.7612, 53.8598, 0.44 ) }
    dend_11 { pt3dadd( -31.9966, -55.3868, 54.9075, 0.44 ) }
    dend_11 { pt3dadd( -32.2105, -56.0734, 56.3134, 0.81 ) }
    dend_11 { pt3dadd( -32.3173, -56.436, 57.2813, 0.81 ) }
    dend_11 { pt3dadd( -32.4355, -56.6897, 58.1565, 0.81 ) }
    dend_11 { pt3dadd( -32.5323, -56.8478, 58.7382, 0.81 ) }
    dend_11 { pt3dadd( -32.6888, -57.0489, 59.5161, 0.81 ) }
    dend_11 { pt3dadd( -32.8445, -57.2223, 60.2262, 0.81 ) }
    dend_11 { pt3dadd( -33.3165, -57.494, 61.7817, 0.81 ) }
    dend_11 { pt3dadd( -33.8685, -57.6642, 62.9971, 0.52 ) }
    dend_11 { pt3dadd( -34.3667, -57.7562, 63.798, 0.52 ) }
    dend_11 { pt3dadd( -34.6486, -57.7918, 64.1524, 0.52 ) }
    dend_11 { pt3dadd( -35.1185, -57.8358, 64.6926, 0.52 ) }
    dend_11 { pt3dadd( -35.7965, -57.869, 65.4397, 0.81 ) }
    dend_11 { pt3dadd( -36.7221, -57.916, 66.4983, 0.44 ) }
    dend_11 { pt3dadd( -37.5391, -57.9679, 67.5053, 1.55 ) }
    dend_11 { pt3dadd( -38.6814, -58.1244, 69.0923, 0.29 ) }
    dend_11 { pt3dadd( -39.3914, -58.3043, 70.1749, 0.96 ) }
    dend_11 { pt3dadd( -40.0007, -58.5665, 71.1724, 1.55 ) }
    dend_11 { pt3dadd( -40.9272, -59.1072, 72.8422, 0.44 ) }
    dend_11 { pt3dadd( -41.4341, -59.4582, 73.8417, 0.44 ) }
    dend_11 { pt3dadd( -42.1658, -59.9995, 75.4037, 1.33 ) }
    dend_11 { pt3dadd( -42.504, -60.2518, 76.1701, 1.62 ) }
    dend_11 { pt3dadd( -43.3832, -60.882, 78.0811, 0.22 ) }
    dend_11 { pt3dadd( -43.7656, -61.1503, 78.8872, 0.22 ) }
    dend_11 { pt3dadd( -43.9602, -61.2786, 79.2661, 0.22 ) }
    dend_11 { pt3dadd( -44.3552, -61.5748, 80.0187, 0.59 ) }
    dend_11 { pt3dadd( -44.8411, -61.9931, 80.9052, 0.59 ) }
    dend_11 { pt3dadd( -45.287, -62.5002, 81.7611, 1.11 ) }
    dend_11 { pt3dadd( -45.4424, -62.7472, 82.0891, 1.11 ) }
    dend_11 { pt3dadd( -45.7171, -63.2468, 82.662, 0.37 ) }
    dend_11 { pt3dadd( -46.0175, -63.7954, 83.2279, 0.22 ) }
    dend_11 { pt3dadd( -46.3819, -64.4647, 83.9144, 0.81 ) }
    dend_11 { pt3dadd( -46.7525, -65.0476, 84.6092, 0.52 ) }
    dend_11 { pt3dadd( -47.3962, -65.8629, 85.8327, 1.11 ) }
    dend_11 { pt3dadd( -47.6876, -66.1213, 86.3729, 1.25 ) }
    dend_11 { pt3dadd( -48.4211, -66.5567, 87.6659, 0.37 ) }
    dend_11 { pt3dadd( -49.2195, -66.8884, 89.043, 0.66 ) }
    dend_11 { pt3dadd( -50.0585, -67.1471, 90.5072, 1.4 ) }
    dend_11 { pt3dadd( -50.5249, -67.2554, 91.356, 1.55 ) }
    dend_11 { pt3dadd( -51.3508, -67.3496, 92.94, 0.29 ) }
    dend_11 { pt3dadd( -51.6868, -67.3594, 93.6115, 0.59 ) }
    dend_11 { pt3dadd( -52.2927, -67.2925, 94.771, 0.59 ) }
    dend_11 { pt3dadd( -52.5784, -67.2408, 95.2911, 0.37 ) }
    dend_11 { pt3dadd( -53.0213, -67.1424, 96.1168, 0.74 ) }
    dend_11 { pt3dadd( -53.7035, -66.9843, 97.3977, 0.52 ) }
    dend_11 { pt3dadd( -54.1616, -66.8702, 98.2593, 1.11 ) }
    dend_11 { pt3dadd( -54.9337, -66.5971, 99.6078, 0.29 ) }
    dend_11 { pt3dadd( -55.4094, -66.4068, 100.31, 0.29 ) }
    dend_11 { pt3dadd( -55.8346, -66.2516, 100.851, 0.29 ) }
    dend_11 { pt3dadd( -56.1233, -66.183, 101.139, 0.29 ) }
    dend_11 { pt3dadd( -56.7092, -66.1671, 101.629, 0.29 ) }
    dend_11 { pt3dadd( -57.4635, -66.2546, 102.218, 0.22 ) }
    dend_11 { pt3dadd( -58.0645, -66.3659, 102.677, 1.03 ) }
    dend_11 { pt3dadd( -58.5015, -66.4379, 103.009, 1.55 ) }
    dend_11 { pt3dadd( -60.0059, -66.5875, 104.217, 0.37 ) }
    dend_11 { pt3dadd( -60.7696, -66.5943, 104.93, 0.29 ) }
    dend_11 { pt3dadd( -61.3342, -66.5514, 105.569, 0.29 ) }
    dend_11 { pt3dadd( -61.7905, -66.4801, 106.22, 0.88 ) }
    dend_11 { pt3dadd( -62.2595, -66.3876, 107.071, 0.88 ) }
    dend_11 { pt3dadd( -62.7154, -66.2983, 108.07, 0.66 ) }
    dend_11 { pt3dadd( -63.1192, -66.2092, 109.157, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_11 { pt3dadd( -63.4531, -66.1066, 109.981, 0.96 ) }
    dend_11 { pt3dadd( -63.7106, -66.0209, 110.541, 0.96 ) }
    dend_11 { pt3dadd( -64.1319, -65.9042, 111.266, 0.96 ) }
    dend_11 { pt3dadd( -64.8659, -65.8449, 112.403, 0.37 ) }
    dend_11 { pt3dadd( -65.1267, -65.8431, 112.746, 0.37 ) }
    dend_11 { pt3dadd( -65.7253, -65.8179, 113.429, 0.52 ) }
    dend_11 { pt3dadd( -66.409, -65.7406, 114.213, 0.29 ) }
    dend_11 { pt3dadd( -67.0575, -65.6079, 115.032, 1.18 ) }
    dend_11 { pt3dadd( -68.4712, -65.1942, 117.138, 0.29 ) }
    dend_11 { pt3dadd( -68.8914, -65.0417, 117.898, 0.29 ) }
    dend_11 { pt3dadd( -69.2882, -64.8963, 118.746, 0.22 ) }
    dend_11 { pt3dadd( -69.5925, -64.8327, 119.696, 0.22 ) }
    dend_11 { pt3dadd( -69.7958, -64.8302, 120.588, 0.66 ) }
    dend_11 { pt3dadd( -69.9111, -64.8585, 121.37, 0.66 ) }
    dend_11 { pt3dadd( -69.9555, -64.905, 121.874, 0.66 ) }
    dend_11 { pt3dadd( -69.9699, -64.9816, 122.191, 0.66 ) }
    dend_11 { pt3dadd( -69.9874, -66.0828, 124.591, 0.22 ) }
    dend_11 { pt3dadd( -70.0015, -66.3824, 125.03, 0.22 ) }
    dend_11 { pt3dadd( -70.0514, -66.7811, 125.504, 0.59 ) }
    dend_11 { pt3dadd( -70.168, -67.3086, 126.1, 1.11 ) }
    dend_11 { pt3dadd( -70.3561, -67.8614, 126.729, 1.11 ) }
    dend_11 { pt3dadd( -70.7075, -68.7409, 127.736, 0.37 ) }
    dend_11 { pt3dadd( -70.9655, -69.3657, 128.421, 0.37 ) }
    dend_11 { pt3dadd( -71.2373, -70.0437, 129.193, 0.88 ) }
    dend_11 { pt3dadd( -71.5758, -70.7147, 130.04, 1.47 ) }
    dend_11 { pt3dadd( -72.072, -71.4622, 131.069, 0.44 ) }
    dend_11 { pt3dadd( -72.5662, -72.0718, 131.962, 0.88 ) }
    dend_11 { pt3dadd( -73.0684, -72.6685, 132.852, 0.52 ) }
    dend_11 { pt3dadd( -73.6672, -73.4865, 134.025, 1.77 ) }
    dend_11 { pt3dadd( -74.3905, -74.7036, 135.613, 0.37 ) }
    dend_11 { pt3dadd( -74.5751, -75.1234, 136.079, 0.66 ) }
    dend_11 { pt3dadd( -74.6855, -75.4863, 136.434, 0.66 ) }
    dend_11 { pt3dadd( -74.8935, -76.495, 137.296, 0.22 ) }
    dend_11 { pt3dadd( -74.9274, -77.4521, 138.005, 0.66 ) }
    dend_11 { pt3dadd( -74.7599, -78.3727, 138.633, 0.29 ) }
    dend_11 { pt3dadd( -74.3916, -79.3292, 139.312, 0.29 ) }
    dend_11 { pt3dadd( -74.1305, -79.884, 139.775, 0.96 ) }
    dend_11 { pt3dadd( -74.006, -80.1299, 140.005, 1.25 ) }
    dend_11 { pt3dadd( -73.5239, -81.0817, 140.966, 0.44 ) }
    dend_11 { pt3dadd( -73.0857, -81.9315, 141.878, 1.25 ) }
    dend_11 { pt3dadd( -72.5283, -82.973, 143.062, 0.44 ) }
    dend_11 { pt3dadd( -71.9246, -84.1723, 144.45, 0.22 ) }
    dend_11 { pt3dadd( -71.7679, -84.5137, 144.822, 0.22 ) }
    dend_11 { pt3dadd( -71.5495, -85.0368, 145.34, 0.29 ) }
    dend_11 { pt3dadd( -71.4066, -85.4766, 145.693, 0.29 ) }
    dend_11 { pt3dadd( -71.1839, -86.3214, 146.193, 0.59 ) }
    dend_11 { pt3dadd( -70.9653, -86.9903, 146.508, 0.37 ) }
    dend_11 { pt3dadd( -70.7014, -87.584, 146.798, 0.96 ) }
    dend_11 { pt3dadd( -70.5022, -87.9527, 147.031, 0.52 ) }
    dend_11 { pt3dadd( -70.048, -88.7303, 147.562, 0.22 ) }
    dend_11 { pt3dadd( -69.7736, -89.1985, 147.898, 0.96 ) }
    dend_11 { pt3dadd( -69.0152, -90.4994, 148.946, 0.15 ) }
    dend_11 { pt3dadd( -68.6051, -91.1544, 149.561, 0.52 ) }
    dend_11 { pt3dadd( -68.1244, -91.8493, 150.311, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 54/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.43184, -9.24143, -6.27831, 3.91 ) }
    dend_2 { pt3dadd( 5.57175, -10.0248, -6.46582, 3.91 ) }
    dend_2 { pt3dadd( 5.97737, -12.1016, -6.90675, 2.65 ) }
    dend_2 { pt3dadd( 6.37388, -14.0286, -7.31348, 2.21 ) }
    dend_2 { pt3dadd( 6.74798, -15.7353, -7.71497, 2.06 ) }
    dend_2 { pt3dadd( 7.11328, -17.2761, -8.10785, 2.43 ) }
    dend_2 { pt3dadd( 7.506, -18.8149, -8.53717, 2.43 ) }
    dend_2 { pt3dadd( 7.84757, -20.0673, -8.89595, 2.29 ) }
    dend_2 { pt3dadd( 8.29186, -21.5301, -9.37925, 2.14 ) }
    dend_2 { pt3dadd( 8.72434, -22.7942, -9.90905, 2.43 ) }
    dend_2 { pt3dadd( 9.19869, -24.0965, -10.535, 2.73 ) }
    dend_2 { pt3dadd( 9.67945, -25.3663, -11.2163, 2.43 ) }
    dend_2 { pt3dadd( 10.1921, -26.6405, -11.9535, 2.43 ) }
    dend_2 { pt3dadd( 10.8018, -28.1625, -12.8992, 2.65 ) }
    dend_2 { pt3dadd( 11.279, -29.315, -13.6421, 2.95 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 69/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 18.7744, -95.6598, -6.04292, 0.59 ) }
    dend_42 { pt3dadd( 19.1014, -97.0433, -5.36015, 0.59 ) }
    dend_42 { pt3dadd( 19.3308, -97.9096, -4.99569, 0.44 ) }
    dend_42 { pt3dadd( 19.5807, -98.7698, -4.73324, 0.88 ) }
    dend_42 { pt3dadd( 19.7392, -99.3286, -4.60702, 1.11 ) }
    dend_42 { pt3dadd( 20.0635, -100.547, -4.43538, 0.22 ) }
    dend_42 { pt3dadd( 20.2445, -101.308, -4.37712, 0.22 ) }
    dend_42 { pt3dadd( 20.3823, -101.958, -4.3956, 0.81 ) }
    dend_42 { pt3dadd( 20.5996, -103.094, -4.44811, 1.62 ) }
    dend_42 { pt3dadd( 20.7565, -104.097, -4.48855, 0.59 ) }
    dend_42 { pt3dadd( 20.9136, -105.411, -4.52199, 0.22 ) }
    dend_42 { pt3dadd( 20.9833, -106.363, -4.52402, 0.81 ) }
    dend_42 { pt3dadd( 21.0342, -107.463, -4.45023, 0.22 ) }
    dend_42 { pt3dadd( 21.0486, -108.236, -4.35879, 0.44 ) }
    dend_42 { pt3dadd( 21.0391, -108.969, -4.23851, 1.25 ) }
    dend_42 { pt3dadd( 21.0199, -109.749, -4.10295, 1.99 ) }
    dend_42 { pt3dadd( 20.9864, -110.746, -3.91348, 1.18 ) }
    dend_42 { pt3dadd( 20.9652, -112.315, -3.61769, 0.44 ) }
    dend_42 { pt3dadd( 20.9628, -113.138, -3.48342, 0.59 ) }
    dend_42 { pt3dadd( 20.9683, -114.28, -3.31798, 1.11 ) }
    dend_42 { pt3dadd( 20.992, -115.575, -3.1045, 0.37 ) }
    dend_42 { pt3dadd( 21.0153, -116.182, -2.98846, 0.22 ) }
    dend_42 { pt3dadd( 21.0793, -117.151, -2.8014, 0.22 ) }
    dend_42 { pt3dadd( 21.1223, -117.578, -2.72061, 0.22 ) }
    dend_42 { pt3dadd( 21.2004, -118.14, -2.59153, 0.59 ) }
    dend_42 { pt3dadd( 21.3705, -119.219, -2.3164, 0.15 ) }
    dend_42 { pt3dadd( 21.4433, -119.675, -2.21755, 0.15 ) }
    dend_42 { pt3dadd( 21.5773, -120.555, -2.07523, 0.66 ) }
    dend_42 { pt3dadd( 21.7126, -121.474, -1.95872, 0.22 ) }
    dend_42 { pt3dadd( 21.837, -122.332, -1.86747, 0.22 ) }
    dend_42 { pt3dadd( 21.9285, -122.989, -1.81254, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_42 { pt3dadd( 22.0525, -123.886, -1.76165, 0.88 ) }
    dend_42 { pt3dadd( 22.1456, -124.624, -1.72499, 1.25 ) }
    dend_42 { pt3dadd( 22.3101, -125.945, -1.64775, 0.15 ) }
    dend_42 { pt3dadd( 22.4211, -126.817, -1.59119, 0.22 ) }
    dend_42 { pt3dadd( 22.4876, -127.324, -1.55451, 0.15 ) }
    dend_42 { pt3dadd( 22.5782, -128.011, -1.49644, 0.15 ) }
    dend_42 { pt3dadd( 22.6623, -128.669, -1.42466, 0.52 ) }
    dend_42 { pt3dadd( 22.8235, -129.759, -1.30457, 0.22 ) }
    dend_42 { pt3dadd( 22.9792, -130.68, -1.1978, 0.22 ) }
    dend_42 { pt3dadd( 23.1859, -131.7, -1.04831, 0.22 ) }
    dend_42 { pt3dadd( 23.3077, -132.275, -0.945956, 0.44 ) }
    dend_42 { pt3dadd( 23.4285, -132.886, -0.819455, 1.11 ) }
    dend_42 { pt3dadd( 23.7159, -134.383, -0.48155, 0.07 ) }
    dend_42 { pt3dadd( 23.8507, -135.13, -0.303293, 0.88 ) }
    dend_42 { pt3dadd( 24.1077, -136.76, 0.124728, 0.22 ) }
    dend_42 { pt3dadd( 24.1954, -137.524, 0.343526, 0.59 ) }
    dend_42 { pt3dadd( 24.258, -138.685, 0.701561, 0.22 ) }
    dend_42 { pt3dadd( 24.2457, -139.177, 0.860839, 0.88 ) }
    dend_42 { pt3dadd( 24.1804, -139.67, 1.0281, 1.03 ) }
    dend_42 { pt3dadd( 23.8924, -140.98, 1.48971, 0.22 ) }
    dend_42 { pt3dadd( 23.6892, -141.698, 1.76634, 0.37 ) }
    dend_42 { pt3dadd( 23.4586, -142.499, 2.08921, 0.22 ) }
    dend_42 { pt3dadd( 23.2639, -143.191, 2.37837, 1.25 ) }
    dend_42 { pt3dadd( 23.0507, -144.019, 2.71398, 2.21 ) }
    dend_42 { pt3dadd( 22.7975, -145.081, 3.11933, 0.66 ) }
    dend_42 { pt3dadd( 22.5325, -146.48, 3.59945, 0.22 ) }
    dend_42 { pt3dadd( 22.4383, -147.185, 3.81229, 0.59 ) }
    dend_42 { pt3dadd( 22.4027, -147.541, 3.91165, 0.59 ) }
    dend_42 { pt3dadd( 22.3228, -148.661, 4.21876, 0.22 ) }
    dend_42 { pt3dadd( 22.2926, -149.452, 4.41974, 0.74 ) }
    dend_42 { pt3dadd( 22.271, -150.477, 4.62451, 0.15 ) }
    dend_42 { pt3dadd( 22.2458, -151.059, 4.70009, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 18.7744, -95.6598, -6.04292, 0.37 ) }
    dend_41 { pt3dadd( 19.2704, -96.6161, -6.25406, 0.37 ) }
    dend_41 { pt3dadd( 19.6896, -97.3861, -6.45911, 0.37 ) }
    dend_41 { pt3dadd( 19.981, -97.9203, -6.62694, 0.66 ) }
    dend_41 { pt3dadd( 20.3403, -98.5731, -6.8604, 1.55 ) }
    dend_41 { pt3dadd( 20.7715, -99.3882, -7.15734, 2.06 ) }
    dend_41 { pt3dadd( 21.2354, -100.306, -7.48853, 0.74 ) }
    dend_41 { pt3dadd( 21.6067, -101.055, -7.76716, 0.52 ) }
    dend_41 { pt3dadd( 22.1726, -102.187, -8.20222, 0.29 ) }
    dend_41 { pt3dadd( 22.6623, -103.147, -8.53343, 0.22 ) }
    dend_41 { pt3dadd( 22.9232, -103.647, -8.68189, 0.22 ) }
    dend_41 { pt3dadd( 23.1276, -104.041, -8.79066, 0.81 ) }
    dend_41 { pt3dadd( 23.4652, -104.698, -8.98361, 1.47 ) }
    dend_41 { pt3dadd( 23.7482, -105.247, -9.16036, 2.14 ) }
    dend_41 { pt3dadd( 24.2869, -106.262, -9.50002, 0.37 ) }
    dend_41 { pt3dadd( 24.7521, -107.108, -9.80397, 0.22 ) }
    dend_41 { pt3dadd( 25.0695, -107.652, -10.0175, 0.22 ) }
    dend_41 { pt3dadd( 25.3931, -108.189, -10.2502, 0.22 ) }
    dend_41 { pt3dadd( 25.5423, -108.429, -10.3662, 0.52 ) }
    dend_41 { pt3dadd( 25.8474, -108.866, -10.5861, 1.11 ) }
    dend_41 { pt3dadd( 26.0787, -109.124, -10.7235, 1.18 ) }
    dend_41 { pt3dadd( 26.7228, -109.719, -11.0323, 0.52 ) }
    dend_41 { pt3dadd( 27.4589, -110.333, -11.3155, 0.37 ) }
    dend_41 { pt3dadd( 27.9237, -110.703, -11.4642, 0.88 ) }
    dend_41 { pt3dadd( 28.8577, -111.434, -11.7299, 1.99 ) }
    dend_41 { pt3dadd( 30.1981, -112.482, -12.0556, 0.44 ) }
    dend_41 { pt3dadd( 31.0075, -113.145, -12.2185, 0.29 ) }
    dend_41 { pt3dadd( 31.5394, -113.61, -12.2989, 0.88 ) }
    dend_41 { pt3dadd( 32.041, -114.101, -12.3383, 1.4 ) }
    dend_41 { pt3dadd( 32.6319, -114.752, -12.3448, 0.66 ) }
    dend_41 { pt3dadd( 33.0651, -115.265, -12.3143, 0.29 ) }
    dend_41 { pt3dadd( 33.4732, -115.77, -12.268, 0.29 ) }
    dend_41 { pt3dadd( 33.7969, -116.106, -12.2706, 0.29 ) }
    dend_41 { pt3dadd( 34.1638, -116.401, -12.3347, 0.29 ) }
    dend_41 { pt3dadd( 34.606, -116.676, -12.4491, 0.29 ) }
    dend_41 { pt3dadd( 35.4096, -117.103, -12.709, 0.37 ) }
    dend_41 { pt3dadd( 35.9732, -117.386, -12.9112, 0.29 ) }
    dend_41 { pt3dadd( 36.8949, -117.889, -13.2714, 0.66 ) }
    dend_41 { pt3dadd( 37.4566, -118.262, -13.5009, 0.66 ) }
    dend_41 { pt3dadd( 38.316, -118.97, -13.8616, 0.37 ) }
    dend_41 { pt3dadd( 38.9259, -119.589, -14.1425, 1.84 ) }
    dend_41 { pt3dadd( 39.345, -120.091, -14.3507, 2.73 ) }
    dend_41 { pt3dadd( 39.9815, -120.911, -14.6653, 2.43 ) }
    dend_41 { pt3dadd( 40.7083, -121.878, -14.9951, 1.11 ) }
    dend_41 { pt3dadd( 41.3043, -122.662, -15.2686, 0.74 ) }
    dend_41 { pt3dadd( 41.8441, -123.357, -15.5248, 1.33 ) }
    dend_41 { pt3dadd( 42.643, -124.337, -15.9069, 1.99 ) }
    dend_41 { pt3dadd( 43.2696, -125.075, -16.2148, 1.03 ) }
    dend_41 { pt3dadd( 44.0688, -125.995, -16.5995, 0.44 ) }
    dend_41 { pt3dadd( 44.7372, -126.765, -16.9186, 0.81 ) }
    dend_41 { pt3dadd( 45.4449, -127.614, -17.266, 0.96 ) }
    dend_41 { pt3dadd( 46.225, -128.572, -17.6612, 1.4 ) }
    dend_41 { pt3dadd( 47.1264, -129.701, -18.1667, 1.7 ) }
    dend_41 { pt3dadd( 47.9918, -130.797, -18.7335, 0.74 ) }
    dend_41 { pt3dadd( 48.457, -131.387, -19.0883, 0.81 ) }
    dend_41 { pt3dadd( 49.0518, -132.159, -19.5979, 0.37 ) }
    dend_41 { pt3dadd( 49.4554, -132.711, -19.9912, 0.37 ) }
    dend_41 { pt3dadd( 49.701, -133.076, -20.2722, 0.37 ) }
    dend_41 { pt3dadd( 50.0375, -133.629, -20.7143, 0.22 ) }
    dend_41 { pt3dadd( 50.2697, -134.07, -21.0584, 0.29 ) }
    dend_41 { pt3dadd( 50.536, -134.695, -21.4677, 0.88 ) }
    dend_41 { pt3dadd( 50.884, -135.715, -21.9606, 0.37 ) }
    dend_41 { pt3dadd( 51.1425, -136.583, -22.2839, 0.96 ) }
    dend_41 { pt3dadd( 51.3375, -137.275, -22.4888, 0.66 ) }
    dend_41 { pt3dadd( 51.5188, -137.933, -22.636, 0.96 ) }
    dend_41 { pt3dadd( 51.6947, -138.568, -22.751, 0.66 ) }
    dend_41 { pt3dadd( 51.9881, -139.567, -22.912, 0.22 ) }
    dend_41 { pt3dadd( 52.1368, -140.053, -22.9845, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_41 { pt3dadd( 52.2792, -140.516, -23.0385, 0.15 ) }
    dend_41 { pt3dadd( 52.5023, -141.233, -23.1069, 0.81 ) }
    dend_41 { pt3dadd( 52.6681, -141.74, -23.1303, 0.15 ) }
    dend_41 { pt3dadd( 52.8027, -142.125, -23.1364, 0.22 ) }
    dend_41 { pt3dadd( 58.5154, -148.634, -24.5528, 0.22 ) }
    dend_41 { pt3dadd( 63.4488, -155.883, -24.9207, 0.22 ) }
    dend_41 { pt3dadd( 68.5185, -163.046, -24.8602, 0.22 ) }
    dend_41 { pt3dadd( 74.483, -169.315, -23.3992, 0.22 ) }
    dend_41 { pt3dadd( 80.2365, -175.765, -21.8824, 0.22 ) }
    dend_41 { pt3dadd( 84.848, -182.789, -19.3497, 0.22 ) }
    dend_41 { pt3dadd( 88.3287, -190.692, -17.7876, 0.22 ) }
    dend_41 { pt3dadd( 92.7002, -198.214, -16.6427, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 12/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -15.8587, -52.3542, -1.38233, 0.59 ) }
    dend_35 { pt3dadd( -15.1238, -53.5349, -2.06175, 0.59 ) }
    dend_35 { pt3dadd( -14.6775, -54.2519, -2.47437, 0.81 ) }
    dend_35 { pt3dadd( -14.0798, -55.2121, -3.02692, 1.03 ) }
    dend_35 { pt3dadd( -13.4869, -56.1646, -3.57503, 1.47 ) }
    dend_35 { pt3dadd( -13.1217, -56.7512, -3.91263, 1.99 ) }
    dend_35 { pt3dadd( -12.6214, -57.555, -4.37518, 2.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 19/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -15.8587, -52.3542, -1.38233, 1.11 ) }
    dend_34 { pt3dadd( -16.8689, -52.2261, -2.46396, 1.11 ) }
    dend_34 { pt3dadd( -18.1293, -52.0353, -3.58032, 1.11 ) }
    dend_34 { pt3dadd( -19.3145, -51.8642, -4.4183, 1.11 ) }
    dend_34 { pt3dadd( -20.4356, -51.7393, -5.02559, 1.11 ) }
    dend_34 { pt3dadd( -22.2979, -51.6308, -5.8004, 0.88 ) }
    dend_34 { pt3dadd( -23.8427, -51.6533, -6.22329, 1.11 ) }
    dend_34 { pt3dadd( -24.9028, -51.7847, -6.24466, 1.4 ) }
    dend_34 { pt3dadd( -26.4595, -52.1825, -6.00632, 0.96 ) }
    dend_34 { pt3dadd( -28.0023, -52.8019, -5.63608, 0.52 ) }
    dend_34 { pt3dadd( -29.3746, -53.5319, -5.28488, 0.81 ) }
    dend_34 { pt3dadd( -30.875, -54.4411, -4.89531, 1.25 ) }
    dend_34 { pt3dadd( -32.1566, -55.2102, -4.60643, 1.7 ) }
    dend_34 { pt3dadd( -33.4062, -55.9216, -4.38461, 1.7 ) }
    dend_34 { pt3dadd( -35.2767, -56.9048, -4.17444, 1.4 ) }
    dend_34 { pt3dadd( -37.1019, -57.7635, -4.09141, 0.44 ) }
    dend_34 { pt3dadd( -38.3276, -58.2984, -4.07349, 0.44 ) }
    dend_34 { pt3dadd( -39.836, -58.9454, -4.07476, 0.44 ) }
    dend_34 { pt3dadd( -40.9185, -59.4233, -4.06305, 0.44 ) }
    dend_34 { pt3dadd( -42.2771, -60.0573, -4.04346, 0.74 ) }
    dend_34 { pt3dadd( -43.4647, -60.6543, -4.09333, 1.03 ) }
    dend_34 { pt3dadd( -45.1043, -61.5159, -4.29514, 0.44 ) }
    dend_34 { pt3dadd( -46.0505, -62.0181, -4.47763, 0.74 ) }
    dend_34 { pt3dadd( -47.1215, -62.5294, -4.69344, 0.88 ) }
    dend_34 { pt3dadd( -48.4505, -63.0547, -4.94157, 0.44 ) }
    dend_34 { pt3dadd( -49.9417, -63.5646, -5.14826, 0.96 ) }
    dend_34 { pt3dadd( -51.3115, -63.9884, -5.25567, 1.7 ) }
    dend_34 { pt3dadd( -52.9264, -64.4797, -5.26596, 1.77 ) }
    dend_34 { pt3dadd( -55.5198, -65.3634, -5.0447, 0.37 ) }
    dend_34 { pt3dadd( -56.5413, -65.7626, -4.89625, 0.59 ) }
    dend_34 { pt3dadd( -57.9808, -66.4329, -4.62952, 1.11 ) }
    dend_34 { pt3dadd( -59.0549, -66.9949, -4.43009, 1.4 ) }
    dend_34 { pt3dadd( -60.4946, -67.8333, -4.23057, 0.81 ) }
    dend_34 { pt3dadd( -61.9957, -68.7721, -4.14919, 0.37 ) }
    dend_34 { pt3dadd( -63.3522, -69.6365, -4.21599, 1.03 ) }
    dend_34 { pt3dadd( -64.7763, -70.4792, -4.41866, 0.37 ) }
    dend_34 { pt3dadd( -66.012, -71.1154, -4.70054, 0.37 ) }
    dend_34 { pt3dadd( -66.7377, -71.4246, -4.8897, 0.74 ) }
    dend_34 { pt3dadd( -67.7633, -71.7528, -5.15699, 1.25 ) }
    dend_34 { pt3dadd( -69.2289, -72.0632, -5.52222, 0.88 ) }
    dend_34 { pt3dadd( -70.3676, -72.1646, -5.72985, 1.47 ) }
    dend_34 { pt3dadd( -71.6459, -72.1185, -5.84418, 1.84 ) }
    dend_34 { pt3dadd( -73.2415, -71.8664, -5.8145, 0.29 ) }
    dend_34 { pt3dadd( -74.1229, -71.5698, -5.69926, 0.22 ) }
    dend_34 { pt3dadd( -75.0157, -71.1104, -5.53041, 0.22 ) }
    dend_34 { pt3dadd( -75.7424, -70.6333, -5.3574, 0.22 ) }
    dend_34 { pt3dadd( -76.222, -70.2668, -5.20837, 0.59 ) }
    dend_34 { pt3dadd( -77.0697, -69.5294, -4.89304, 0.81 ) }
    dend_34 { pt3dadd( -78.7028, -68.0932, -4.28744, 0.37 ) }
    dend_34 { pt3dadd( -79.486, -67.4592, -4.00674, 0.96 ) }
    dend_34 { pt3dadd( -80.0122, -67.072, -3.826, 1.55 ) }
    dend_34 { pt3dadd( -81.0347, -66.3167, -3.47468, 0.52 ) }
    dend_34 { pt3dadd( -81.6777, -65.7932, -3.25041, 0.22 ) }
    dend_34 { pt3dadd( -93.7714, -69.7615, -3.31199, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -22.7125, 9.89879, -12.2289, 0.22 ) }
    dend_15 { pt3dadd( -29.1697, 14.8987, -12.9767, 0.22 ) }
    dend_15 { pt3dadd( -36.5472, 18.4784, -13.0879, 0.22 ) }
    dend_15 { pt3dadd( -44.361, 20.6689, -11.9048, 0.22 ) }
    dend_15 { pt3dadd( -52.1988, 21.979, -9.87855, 0.22 ) }
    dend_15 { pt3dadd( -60.318, 22.6499, -8.93894, 0.22 ) }
    dend_15 { pt3dadd( -68.2563, 24.7062, -8.84417, 0.22 ) }
    dend_15 { pt3dadd( -76.3587, 25.7395, -8.11064, 0.22 ) }
    dend_15 { pt3dadd( -84.5261, 25.4627, -7.42488, 0.22 ) }
    dend_15 { pt3dadd( -92.7181, 25.6245, -7.0808, 0.22 ) }
    dend_15 { pt3dadd( -100.862, 26.4836, -7.51244, 0.22 ) }
    dend_15 { pt3dadd( -108.984, 27.6195, -7.53088, 0.22 ) }
    dend_15 { pt3dadd( -117.022, 28.3573, -8.97766, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 86/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -22.7125, 9.89879, -12.2289, 0.22 ) }
    dend_14 { pt3dadd( -30.736, 15.6577, -12.7508, 0.22 ) }
    dend_14 { pt3dadd( -38.7491, 21.2909, -11.3834, 0.22 ) }
    dend_14 { pt3dadd( -46.5529, 27.3656, -11.2739, 0.22 ) }
    dend_14 { pt3dadd( -53.5065, 34.3963, -11.1006, 0.22 ) }
    dend_14 { pt3dadd( -60.4982, 41.2865, -12.3073, 0.22 ) }
    dend_14 { pt3dadd( -67.4023, 48.2506, -13.5905, 0.22 ) }
    dend_14 { pt3dadd( -72.8899, 56.218, -15.6452, 0.22 ) }
    dend_14 { pt3dadd( -78.2162, 63.6058, -19.5006, 0.22 ) }
    dend_14 { pt3dadd( -84.2852, 71.2519, -21.0873, 0.22 ) }
    dend_14 { pt3dadd( -89.1225, 79.8092, -22.1761, 0.22 ) }
    dend_14 { pt3dadd( -94.6999, 87.9466, -22.8765, 0.22 ) }
    dend_14 { pt3dadd( -100.899, 95.1529, -25.6063, 0.22 ) }
    dend_14 { pt3dadd( -106.505, 102.445, -29.241, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_14 { pt3dadd( -113.838, 108.698, -31.4624, 0.22 ) }
    dend_14 { pt3dadd( -121.728, 114.575, -32.4734, 0.22 ) }
    dend_14 { pt3dadd( -129.8, 120.286, -32.6669, 0.22 ) }
    dend_14 { pt3dadd( -138.204, 125.472, -33.2088, 0.22 ) }
    dend_14 { pt3dadd( -146.927, 129.881, -34.7211, 0.22 ) }
    dend_14 { pt3dadd( -154.784, 135.687, -36.258, 0.22 ) }
    dend_14 { pt3dadd( -162.69, 140.585, -39.623, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 7/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 11.279, -29.315, -13.6421, 1.55 ) }
    dend_10 { pt3dadd( 12.7283, -29.9693, -13.1855, 1.55 ) }
    dend_10 { pt3dadd( 13.6719, -30.5123, -12.9848, 0.59 ) }
    dend_10 { pt3dadd( 14.8293, -31.3492, -12.7955, 0.74 ) }
    dend_10 { pt3dadd( 15.6827, -32.0645, -12.6621, 0.44 ) }
    dend_10 { pt3dadd( 16.3764, -32.706, -12.5609, 0.74 ) }
    dend_10 { pt3dadd( 16.9026, -33.2067, -12.5022, 0.52 ) }
    dend_10 { pt3dadd( 17.4368, -33.7901, -12.4991, 0.81 ) }
    dend_10 { pt3dadd( 18.0216, -34.5139, -12.4795, 0.59 ) }
    dend_10 { pt3dadd( 18.5676, -35.2453, -12.4276, 0.96 ) }
    dend_10 { pt3dadd( 19.0455, -35.8729, -12.3913, 0.44 ) }
    dend_10 { pt3dadd( 19.7432, -36.7185, -12.3329, 0.74 ) }
    dend_10 { pt3dadd( 20.5061, -37.5659, -12.2844, 0.96 ) }
    dend_10 { pt3dadd( 21.2516, -38.2755, -12.2532, 0.52 ) }
    dend_10 { pt3dadd( 21.9324, -38.8285, -12.2614, 0.52 ) }
    dend_10 { pt3dadd( 22.984, -39.5631, -12.3071, 0.96 ) }
    dend_10 { pt3dadd( 23.7443, -40.0079, -12.3727, 0.37 ) }
    dend_10 { pt3dadd( 24.2674, -40.2812, -12.4298, 0.37 ) }
    dend_10 { pt3dadd( 25.5278, -40.8087, -12.6342, 0.81 ) }
    dend_10 { pt3dadd( 26.3553, -41.0681, -12.7831, 0.22 ) }
    dend_10 { pt3dadd( 26.712, -41.1408, -12.8263, 0.22 ) }
    dend_10 { pt3dadd( 27.7108, -41.2184, -12.8726, 0.44 ) }
    dend_10 { pt3dadd( 34.2871, -46.9609, -11.4539, 0.44 ) }
    dend_10 { pt3dadd( 40.4983, -52.6993, -8.85997, 0.44 ) }
    dend_10 { pt3dadd( 46.9321, -58.2544, -6.41392, 0.44 ) }
    dend_10 { pt3dadd( 52.9473, -64.254, -3.95248, 0.44 ) }
    dend_10 { pt3dadd( 58.9531, -69.8817, -0.712941, 0.44 ) }
    dend_10 { pt3dadd( 64.062, -76.3078, 2.57965, 0.44 ) }
    dend_10 { pt3dadd( 70.0309, -82.1075, 5.57508, 0.44 ) }
    dend_10 { pt3dadd( 75.9064, -87.2144, 9.77441, 0.44 ) }
    dend_10 { pt3dadd( 82.0289, -92.6988, 13.0413, 0.44 ) }
    dend_10 { pt3dadd( 89.393, -97.2175, 14.9354, 0.44 ) }
    dend_10 { pt3dadd( 96.6664, -101.693, 17.2386, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 40/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 11.279, -29.315, -13.6421, 2.43 ) }
    dend_3 { pt3dadd( 11.2794, -30.7288, -14.5419, 2.43 ) }
    dend_3 { pt3dadd( 11.2801, -32.8447, -15.8886, 1.55 ) }
    dend_3 { pt3dadd( 11.2807, -34.7846, -17.1233, 1.33 ) }
    dend_3 { pt3dadd( 11.2809, -35.61, -17.6486, 1.4 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 45/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -12.6214, -57.555, -4.37518, 1.84 ) }
    dend_37 { pt3dadd( -12.187, -58.0499, -5.16233, 1.84 ) }
    dend_37 { pt3dadd( -11.8861, -58.5792, -5.79738, 1.62 ) }
    dend_37 { pt3dadd( -11.5571, -59.3669, -6.50949, 1.18 ) }
    dend_37 { pt3dadd( -11.3385, -60.0615, -6.9797, 0.88 ) }
    dend_37 { pt3dadd( -11.1195, -60.9773, -7.44934, 0.52 ) }
    dend_37 { pt3dadd( -10.9432, -61.7146, -7.82746, 0.52 ) }
    dend_37 { pt3dadd( -10.8139, -62.6263, -8.14939, 0.74 ) }
    dend_37 { pt3dadd( -10.7456, -63.6581, -8.37021, 1.11 ) }
    dend_37 { pt3dadd( -10.7475, -64.428, -8.43409, 1.99 ) }
    dend_37 { pt3dadd( -10.8011, -65.5558, -8.41104, 2.65 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 56/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.6214, -57.555, -4.37518, 0.37 ) }
    dend_36 { pt3dadd( -13.7734, -58.5774, -3.36984, 0.37 ) }
    dend_36 { pt3dadd( -14.5142, -59.206, -2.55898, 0.44 ) }
    dend_36 { pt3dadd( -14.8992, -59.5119, -2.12997, 0.29 ) }
    dend_36 { pt3dadd( -15.3726, -59.8923, -1.58861, 0.66 ) }
    dend_36 { pt3dadd( -15.7865, -60.2489, -1.1085, 1.18 ) }
    dend_36 { pt3dadd( -16.3328, -60.7957, -0.472049, 0.81 ) }
    dend_36 { pt3dadd( -16.8799, -61.3829, 0.175214, 0.52 ) }
    dend_36 { pt3dadd( -17.5004, -62.2433, 0.867406, 0.74 ) }
    dend_36 { pt3dadd( -18.0201, -63.151, 1.28426, 0.37 ) }
    dend_36 { pt3dadd( -18.3577, -63.8935, 1.42377, 0.37 ) }
    dend_36 { pt3dadd( -18.8313, -65.1328, 1.433, 0.52 ) }
    dend_36 { pt3dadd( -19.1261, -66.0281, 1.36032, 0.96 ) }
    dend_36 { pt3dadd( -19.4541, -67.1131, 1.24168, 1.92 ) }
    dend_36 { pt3dadd( -19.8976, -68.5289, 1.08877, 2.36 ) }
    dend_36 { pt3dadd( -20.4792, -70.0665, 0.946993, 0.96 ) }
    dend_36 { pt3dadd( -21.0003, -71.1597, 0.879065, 0.52 ) }
    dend_36 { pt3dadd( -21.5643, -72.1377, 0.861486, 0.44 ) }
    dend_36 { pt3dadd( -22.0801, -72.9213, 0.897674, 0.44 ) }
    dend_36 { pt3dadd( -22.9011, -73.9889, 0.988047, 0.52 ) }
    dend_36 { pt3dadd( -23.6178, -74.8421, 1.05687, 0.37 ) }
    dend_36 { pt3dadd( -24.4365, -75.7604, 1.08929, 0.66 ) }
    dend_36 { pt3dadd( -24.9756, -76.3774, 1.09321, 1.47 ) }
    dend_36 { pt3dadd( -25.5121, -77.0236, 1.06162, 2.29 ) }
    dend_36 { pt3dadd( -26.0012, -77.6596, 1.00995, 2.51 ) }
    dend_36 { pt3dadd( -27.0201, -79.1237, 0.90342, 0.52 ) }
    dend_36 { pt3dadd( -27.2616, -79.4766, 0.8885, 0.52 ) }
    dend_36 { pt3dadd( -27.8974, -80.3682, 0.889334, 0.81 ) }
    dend_36 { pt3dadd( -28.4662, -81.1137, 0.905917, 0.59 ) }
    dend_36 { pt3dadd( -29.4131, -82.26, 0.944403, 0.22 ) }
    dend_36 { pt3dadd( -29.8999, -82.7725, 0.992041, 0.22 ) }
    dend_36 { pt3dadd( -30.4287, -83.2378, 1.06043, 0.74 ) }
    dend_36 { pt3dadd( -30.8115, -83.5304, 1.10813, 1.33 ) }
    dend_36 { pt3dadd( -31.447, -83.9518, 1.1804, 1.84 ) }
    dend_36 { pt3dadd( -31.9384, -84.2518, 1.23962, 1.84 ) }
    dend_36 { pt3dadd( -33.5636, -85.2539, 1.41126, 0.37 ) }
    dend_36 { pt3dadd( -34.047, -85.57, 1.44967, 0.74 ) }
    dend_36 { pt3dadd( -35.0122, -86.2648, 1.50263, 1.25 ) }
    dend_36 { pt3dadd( -35.7081, -86.8222, 1.52457, 1.03 ) }
    dend_36 { pt3dadd( -36.7704, -87.8557, 1.5154, 0.44 ) }
    dend_36 { pt3dadd( -37.8027, -89.0569, 1.50278, 0.37 ) }
    dend_36 { pt3dadd( -38.2898, -89.7186, 1.51194, 0.88 ) }
    dend_36 { pt3dadd( -38.7162, -90.3624, 1.56486, 1.7 ) }
    dend_36 { pt3dadd( -39.0463, -90.9239, 1.66949, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( -40.0113, -92.676, 2.18041, 0.37 ) }
    dend_36 { pt3dadd( -40.4983, -93.5644, 2.51906, 0.37 ) }
    dend_36 { pt3dadd( -40.9845, -94.3707, 2.89349, 0.96 ) }
    dend_36 { pt3dadd( -41.5019, -95.1371, 3.29013, 1.7 ) }
    dend_36 { pt3dadd( -42.4338, -96.3993, 3.99496, 0.44 ) }
    dend_36 { pt3dadd( -43.2345, -97.4172, 4.60283, 0.22 ) }
    dend_36 { pt3dadd( -43.7924, -98.0724, 5.02123, 0.74 ) }
    dend_36 { pt3dadd( -44.2868, -98.6507, 5.35477, 0.22 ) }
    dend_36 { pt3dadd( -44.7011, -99.1078, 5.59725, 0.22 ) }
    dend_36 { pt3dadd( -45.0682, -99.4607, 5.77481, 0.81 ) }
    dend_36 { pt3dadd( -45.5521, -99.8527, 5.98171, 1.03 ) }
    dend_36 { pt3dadd( -46.3444, -100.42, 6.3233, 0.29 ) }
    dend_36 { pt3dadd( -46.7586, -100.739, 6.52767, 0.29 ) }
    dend_36 { pt3dadd( -47.3323, -101.239, 6.83481, 0.52 ) }
    dend_36 { pt3dadd( -48.0133, -101.887, 7.21319, 0.22 ) }
    dend_36 { pt3dadd( -48.4511, -102.331, 7.45394, 1.03 ) }
    dend_36 { pt3dadd( -49.013, -102.92, 7.76028, 1.84 ) }
    dend_36 { pt3dadd( -50.0946, -104.111, 8.38495, 0.22 ) }
    dend_36 { pt3dadd( -50.5002, -104.593, 8.64604, 0.37 ) }
    dend_36 { pt3dadd( -50.7679, -104.955, 8.84985, 0.15 ) }
    dend_36 { pt3dadd( -51.0731, -105.39, 9.10451, 0.15 ) }
    dend_36 { pt3dadd( -51.368, -105.731, 9.30853, 0.15 ) }
    dend_36 { pt3dadd( -51.8803, -106.217, 9.6102, 0.22 ) }
    dend_36 { pt3dadd( -52.1862, -106.454, 9.75522, 0.52 ) }
    dend_36 { pt3dadd( -52.7742, -106.878, 10.0181, 1.03 ) }
    dend_36 { pt3dadd( -53.2907, -107.232, 10.235, 1.4 ) }
    dend_36 { pt3dadd( -54.5468, -108.078, 10.7628, 0.74 ) }
    dend_36 { pt3dadd( -55.8403, -108.915, 11.3069, 0.37 ) }
    dend_36 { pt3dadd( -57.0999, -109.673, 11.8501, 0.37 ) }
    dend_36 { pt3dadd( -57.6725, -109.991, 12.1144, 0.52 ) }
    dend_36 { pt3dadd( -58.2197, -110.265, 12.382, 1.33 ) }
    dend_36 { pt3dadd( -59.2356, -110.74, 12.9163, 1.77 ) }
    dend_36 { pt3dadd( -60.4122, -111.258, 13.5768, 0.29 ) }
    dend_36 { pt3dadd( -61.0163, -111.519, 13.906, 0.29 ) }
    dend_36 { pt3dadd( -61.6866, -111.841, 14.2886, 0.81 ) }
    dend_36 { pt3dadd( -62.1763, -112.108, 14.6144, 1.25 ) }
    dend_36 { pt3dadd( -62.5825, -112.352, 14.95, 1.25 ) }
    dend_36 { pt3dadd( -63.1958, -112.758, 15.5564, 0.81 ) }
    dend_36 { pt3dadd( -64.0681, -113.412, 16.5478, 0.37 ) }
    dend_36 { pt3dadd( -64.7368, -113.949, 17.3853, 0.29 ) }
    dend_36 { pt3dadd( -65.6602, -114.765, 18.7308, 0.88 ) }
    dend_36 { pt3dadd( -66.2537, -115.317, 19.7081, 1.84 ) }
    dend_36 { pt3dadd( -66.7108, -115.742, 20.5252, 2.29 ) }
    dend_36 { pt3dadd( -67.5209, -116.477, 22.0598, 0.37 ) }
    dend_36 { pt3dadd( -68.0978, -116.983, 23.1426, 0.15 ) }
    dend_36 { pt3dadd( -68.6952, -117.466, 24.0768, 0.15 ) }
    dend_36 { pt3dadd( -69.1716, -117.839, 24.7042, 0.15 ) }
    dend_36 { pt3dadd( -69.4734, -118.08, 25.0788, 0.15 ) }
    dend_36 { pt3dadd( -69.7572, -118.308, 25.4372, 0.74 ) }
    dend_36 { pt3dadd( -70.3589, -118.798, 26.2004, 1.62 ) }
    dend_36 { pt3dadd( -71.0997, -119.416, 27.0882, 0.44 ) }
    dend_36 { pt3dadd( -71.6359, -119.867, 27.6795, 0.52 ) }
    dend_36 { pt3dadd( -72.2236, -120.399, 28.3369, 0.52 ) }
    dend_36 { pt3dadd( -72.5509, -120.705, 28.6942, 0.22 ) }
    dend_36 { pt3dadd( -72.7242, -120.866, 28.8739, 0.22 ) }
    dend_36 { pt3dadd( -72.9918, -121.095, 29.1167, 0.22 ) }
    dend_36 { pt3dadd( -73.4016, -121.421, 29.405, 0.44 ) }
    dend_36 { pt3dadd( -73.788, -121.706, 29.5877, 0.44 ) }
    dend_36 { pt3dadd( -74.4194, -122.264, 29.7951, 0.22 ) }
    dend_36 { pt3dadd( -74.778, -122.613, 29.8882, 0.22 ) }
    dend_36 { pt3dadd( -75.133, -122.993, 29.9819, 0.66 ) }
    dend_36 { pt3dadd( -75.613, -123.547, 30.0816, 1.55 ) }
    dend_36 { pt3dadd( -76.2738, -124.379, 30.1964, 2.21 ) }
    dend_36 { pt3dadd( -77.5395, -126.066, 30.3793, 0.29 ) }
    dend_36 { pt3dadd( -78.3738, -127.231, 30.4596, 0.22 ) }
    dend_36 { pt3dadd( -79.078, -128.208, 30.5046, 0.22 ) }
    dend_36 { pt3dadd( -79.6333, -128.947, 30.5132, 0.44 ) }
    dend_36 { pt3dadd( -80.1138, -129.567, 30.4927, 1.18 ) }
    dend_36 { pt3dadd( -80.5554, -130.113, 30.4353, 1.18 ) }
    dend_36 { pt3dadd( -81.4715, -131.185, 30.2152, 0.22 ) }
    dend_36 { pt3dadd( -81.927, -131.708, 30.0657, 0.22 ) }
    dend_36 { pt3dadd( -82.5825, -132.442, 29.827, 0.22 ) }
    dend_36 { pt3dadd( -83.0562, -132.969, 29.6839, 0.81 ) }
    dend_36 { pt3dadd( -83.754, -133.714, 29.4868, 1.7 ) }
    dend_36 { pt3dadd( -84.3506, -134.325, 29.3514, 0.88 ) }
    dend_36 { pt3dadd( -84.9846, -134.961, 29.253, 0.29 ) }
    dend_36 { pt3dadd( -85.7476, -135.76, 29.1861, 0.22 ) }
    dend_36 { pt3dadd( -86.295, -136.344, 29.1659, 0.52 ) }
    dend_36 { pt3dadd( -86.7061, -136.778, 29.1677, 0.52 ) }
    dend_36 { pt3dadd( -87.6655, -137.776, 29.2207, 0.22 ) }
    dend_36 { pt3dadd( -88.1812, -138.305, 29.2399, 0.22 ) }
    dend_36 { pt3dadd( -88.4975, -138.625, 29.2327, 0.22 ) }
    dend_36 { pt3dadd( -89.1027, -139.203, 29.1818, 0.22 ) }
    dend_36 { pt3dadd( -89.6875, -139.777, 29.0755, 1.03 ) }
    dend_36 { pt3dadd( -90.0899, -140.204, 28.9586, 1.4 ) }
    dend_36 { pt3dadd( -90.5997, -140.768, 28.7604, 0.74 ) }
    dend_36 { pt3dadd( -91.2067, -141.44, 28.4904, 0.22 ) }
    dend_36 { pt3dadd( -91.6391, -141.912, 28.2942, 0.22 ) }
    dend_36 { pt3dadd( -92.458, -142.747, 27.9619, 0.44 ) }
    dend_36 { pt3dadd( -93.3448, -143.622, 27.6373, 0.22 ) }
    dend_36 { pt3dadd( -93.8796, -144.144, 27.4665, 0.74 ) }
    dend_36 { pt3dadd( -94.3228, -144.565, 27.355, 1.33 ) }
    dend_36 { pt3dadd( -94.8575, -145.066, 27.2576, 1.33 ) }
    dend_36 { pt3dadd( -95.8349, -145.878, 27.194, 0.22 ) }
    dend_36 { pt3dadd( -96.5332, -146.369, 27.2553, 0.22 ) }
    dend_36 { pt3dadd( -96.9371, -146.622, 27.3417, 0.74 ) }
    dend_36 { pt3dadd( -97.4364, -146.915, 27.4964, 0.88 ) }
    dend_36 { pt3dadd( -98.4045, -147.457, 27.8629, 0.22 ) }
    dend_36 { pt3dadd( -99.4293, -148.025, 28.3223, 0.22 ) }
    dend_36 { pt3dadd( -100.088, -148.374, 28.6603, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_36 { pt3dadd( -100.633, -148.647, 28.944, 0.88 ) }
    dend_36 { pt3dadd( -101.312, -148.986, 29.3069, 1.55 ) }
    dend_36 { pt3dadd( -101.752, -149.221, 29.552, 1.55 ) }
    dend_36 { pt3dadd( -102.604, -149.739, 30.0587, 0.37 ) }
    dend_36 { pt3dadd( -103.612, -150.483, 30.6664, 0.66 ) }
    dend_36 { pt3dadd( -104.478, -151.229, 31.1883, 0.22 ) }
    dend_36 { pt3dadd( -104.865, -151.606, 31.4383, 0.29 ) }
    dend_36 { pt3dadd( -105.35, -152.121, 31.8011, 0.22 ) }
    dend_36 { pt3dadd( -105.734, -152.569, 32.1633, 0.81 ) }
    dend_36 { pt3dadd( -106.081, -153.056, 32.6094, 1.11 ) }
    dend_36 { pt3dadd( -106.449, -153.718, 33.2945, 0.22 ) }
    dend_36 { pt3dadd( -106.728, -154.314, 33.9639, 0.22 ) }
    dend_36 { pt3dadd( -107.1, -155.12, 34.8139, 0.81 ) }
    dend_36 { pt3dadd( -107.378, -155.71, 35.392, 0.52 ) }
    dend_36 { pt3dadd( -107.696, -156.38, 35.9596, 0.29 ) }
    dend_36 { pt3dadd( -108.006, -157.041, 36.4246, 0.74 ) }
    dend_36 { pt3dadd( -108.272, -157.647, 36.7715, 1.18 ) }
    dend_36 { pt3dadd( -108.862, -159.165, 37.4756, 0.22 ) }
    dend_36 { pt3dadd( -109.023, -159.598, 37.6408, 0.37 ) }
    dend_36 { pt3dadd( -109.448, -160.544, 37.9539, 0.96 ) }
    dend_36 { pt3dadd( -109.849, -161.306, 38.2049, 0.29 ) }
    dend_36 { pt3dadd( -110.196, -161.907, 38.4111, 0.29 ) }
    dend_36 { pt3dadd( -110.49, -162.381, 38.5972, 0.29 ) }
    dend_36 { pt3dadd( -110.962, -163.078, 38.9089, 0.44 ) }
    dend_36 { pt3dadd( -111.95, -164.488, 39.5692, 0.22 ) }
    dend_36 { pt3dadd( -112.319, -164.994, 39.811, 0.22 ) }
    dend_36 { pt3dadd( -112.69, -165.465, 40.0344, 0.74 ) }
    dend_36 { pt3dadd( -113.212, -166.064, 40.3171, 1.4 ) }
    dend_36 { pt3dadd( -113.986, -166.906, 40.7329, 0.29 ) }
    dend_36 { pt3dadd( -114.52, -167.476, 41.0549, 0.22 ) }
    dend_36 { pt3dadd( -114.822, -167.784, 41.2388, 0.22 ) }
    dend_36 { pt3dadd( -115.351, -168.235, 41.545, 0.22 ) }
    dend_36 { pt3dadd( -115.891, -168.622, 41.8564, 0.22 ) }
    dend_36 { pt3dadd( -116.433, -168.962, 42.1482, 1.11 ) }
    dend_36 { pt3dadd( -117.148, -169.422, 42.5026, 1.84 ) }
    dend_36 { pt3dadd( -118.074, -170.069, 42.9532, 0.29 ) }
    dend_36 { pt3dadd( -118.938, -170.772, 43.3989, 0.22 ) }
    dend_36 { pt3dadd( -119.316, -171.15, 43.6124, 0.22 ) }
    dend_36 { pt3dadd( -119.818, -171.73, 43.9233, 0.52 ) }
    dend_36 { pt3dadd( -120.658, -172.789, 44.5175, 0.22 ) }
    dend_36 { pt3dadd( -121.08, -173.375, 44.8554, 0.22 ) }
    dend_36 { pt3dadd( -121.484, -173.984, 45.2219, 0.81 ) }
    dend_36 { pt3dadd( -121.912, -174.619, 45.595, 1.4 ) }
    dend_36 { pt3dadd( -122.658, -175.628, 46.2543, 0.22 ) }
    dend_36 { pt3dadd( -123.255, -176.322, 46.7927, 0.37 ) }
    dend_36 { pt3dadd( -123.681, -176.731, 47.1701, 0.81 ) }
    dend_36 { pt3dadd( -123.989, -176.977, 47.3971, 0.81 ) }
    dend_36 { pt3dadd( -125.244, -177.857, 48.1899, 0.22 ) }
    dend_36 { pt3dadd( -125.808, -178.225, 48.4985, 0.74 ) }
    dend_36 { pt3dadd( -126.636, -178.742, 48.8732, 1.7 ) }
    dend_36 { pt3dadd( -127.271, -179.126, 49.1136, 1.7 ) }
    dend_36 { pt3dadd( -128.835, -180.062, 49.6176, 0.22 ) }
    dend_36 { pt3dadd( -129.282, -180.334, 49.7333, 0.44 ) }
    dend_36 { pt3dadd( -129.788, -180.653, 49.8236, 0.22 ) }
    dend_36 { pt3dadd( -130.558, -181.168, 49.911, 0.22 ) }
    dend_36 { pt3dadd( -130.743, -181.306, 49.9231, 0.88 ) }
    dend_36 { pt3dadd( -131.252, -181.748, 49.9537, 1.4 ) }
    dend_36 { pt3dadd( -131.786, -182.319, 49.9979, 0.81 ) }
    dend_36 { pt3dadd( -132.477, -183.21, 50.0366, 0.15 ) }
    dend_36 { pt3dadd( -132.633, -183.458, 50.0402, 0.37 ) }
    dend_36 { pt3dadd( -132.953, -184.149, 50.0301, 0.74 ) }
    dend_36 { pt3dadd( -133.199, -184.812, 50.0214, 0.15 ) }
    dend_36 { pt3dadd( -133.42, -185.6, 50.0097, 0.15 ) }
    dend_36 { pt3dadd( -133.574, -186.341, 49.9988, 0.15 ) }
    dend_36 { pt3dadd( -133.663, -187.001, 49.9784, 0.44 ) }
    dend_36 { pt3dadd( -133.796, -188.335, 49.9138, 0.15 ) }
    dend_36 { pt3dadd( -133.836, -188.835, 49.8843, 0.66 ) }
    dend_36 { pt3dadd( -133.883, -189.412, 49.8486, 0.66 ) }
    dend_36 { pt3dadd( -133.984, -190.831, 49.7612, 0.15 ) }
    dend_36 { pt3dadd( -134.027, -191.695, 49.6906, 0.29 ) }
    dend_36 { pt3dadd( -134.067, -192.869, 49.5776, 0.22 ) }
    dend_36 { pt3dadd( -134.106, -193.532, 49.5096, 0.81 ) }
    dend_36 { pt3dadd( -134.236, -194.833, 49.3622, 0.22 ) }
    dend_36 { pt3dadd( -134.407, -196.02, 49.2315, 0.22 ) }
    dend_36 { pt3dadd( -134.621, -197.02, 49.1375, 0.22 ) }
    dend_36 { pt3dadd( -134.874, -197.875, 49.0785, 0.22 ) }
    dend_36 { pt3dadd( -135.297, -199.032, 49.019, 0.22 ) }
    dend_36 { pt3dadd( -135.633, -199.852, 48.9858, 1.18 ) }
    dend_36 { pt3dadd( -135.864, -200.355, 48.9637, 1.62 ) }
    dend_36 { pt3dadd( -136.53, -201.658, 48.911, 0.07 ) }
    dend_36 { pt3dadd( -136.944, -202.439, 48.8848, 0.22 ) }
    dend_36 { pt3dadd( -137.356, -203.239, 48.8568, 0.15 ) }
    dend_36 { pt3dadd( -137.911, -204.371, 48.7983, 0.15 ) }
    dend_36 { pt3dadd( -138.175, -204.92, 48.7673, 0.15 ) }
    dend_36 { pt3dadd( -138.428, -205.471, 48.729, 0.74 ) }
    dend_36 { pt3dadd( -138.738, -206.171, 48.6727, 1.4 ) }
    dend_36 { pt3dadd( -139.415, -207.795, 48.5435, 0.22 ) }
    dend_36 { pt3dadd( -139.756, -208.678, 48.4915, 0.88 ) }
    dend_36 { pt3dadd( -140.201, -209.933, 48.4486, 0.15 ) }
    dend_36 { pt3dadd( -140.303, -210.267, 48.4453, 0.15 ) }
    dend_36 { pt3dadd( -140.466, -210.906, 48.4267, 0.29 ) }
    dend_36 { pt3dadd( -140.716, -211.983, 48.3586, 0.07 ) }
    dend_36 { pt3dadd( -140.898, -212.803, 48.2828, 0.88 ) }
    dend_36 { pt3dadd( -141.125, -213.763, 48.1783, 0.22 ) }
    dend_36 { pt3dadd( -141.313, -214.489, 48.0731, 0.29 ) }
    dend_36 { pt3dadd( -141.61, -215.32, 47.9306, 0.15 ) }
    dend_36 { pt3dadd( -141.966, -216.044, 47.7784, 0.15 ) }
    dend_36 { pt3dadd( -142.246, -216.489, 47.6756, 0.81 ) }
    dend_36 { pt3dadd( -142.549, -216.911, 47.5795, 1.25 ) }
    dend_36 { pt3dadd( -142.979, -217.462, 47.466, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_36 { pt3dadd( -144.437, -219.3, 47.2234, 0.15 ) }
    dend_36 { pt3dadd( -145.059, -220.122, 47.1765, 0.15 ) }
    dend_36 { pt3dadd( -145.65, -220.942, 47.162, 0.15 ) }
    dend_36 { pt3dadd( -146.216, -221.732, 47.1641, 0.96 ) }
    dend_36 { pt3dadd( -146.923, -222.718, 47.1894, 0.07 ) }
    dend_36 { pt3dadd( -147.654, -223.745, 47.2399, 0.07 ) }
    dend_36 { pt3dadd( -148.504, -224.997, 47.3618, 0.07 ) }
    dend_36 { pt3dadd( -148.817, -225.491, 47.4248, 0.15 ) }
    dend_36 { pt3dadd( -149.215, -226.107, 47.5165, 0.07 ) }
    dend_36 { pt3dadd( -149.609, -226.686, 47.6175, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 10/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.2809, -35.61, -17.6486, 0.88 ) }
    dend_7 { pt3dadd( 12.2088, -36.1645, -17.3729, 0.88 ) }
    dend_7 { pt3dadd( 12.9206, -36.7004, -17.1275, 0.81 ) }
    dend_7 { pt3dadd( 13.4882, -37.2644, -16.8564, 0.96 ) }
    dend_7 { pt3dadd( 14.024, -37.8588, -16.6363, 1.03 ) }
    dend_7 { pt3dadd( 14.7978, -38.7937, -16.4833, 0.44 ) }
    dend_7 { pt3dadd( 15.114, -39.179, -16.5111, 0.59 ) }
    dend_7 { pt3dadd( 15.7328, -39.9298, -16.7683, 0.37 ) }
    dend_7 { pt3dadd( 16.3636, -40.6221, -17.1843, 0.74 ) }
    dend_7 { pt3dadd( 17.1371, -41.3383, -17.8453, 0.96 ) }
    dend_7 { pt3dadd( 18.1526, -41.969, -18.8326, 1.18 ) }
    dend_7 { pt3dadd( 19.2225, -42.2019, -19.8929, 0.66 ) }
    dend_7 { pt3dadd( 19.9076, -42.0602, -20.5117, 0.52 ) }
    dend_7 { pt3dadd( 20.5903, -41.5945, -21.047, 0.52 ) }
    dend_7 { pt3dadd( 21.1927, -40.7478, -21.5035, 0.37 ) }
    dend_7 { pt3dadd( 21.3588, -40.1132, -21.628, 0.37 ) }
    dend_7 { pt3dadd( 21.475, -39.2945, -21.7055, 1.4 ) }
    dend_7 { pt3dadd( 21.4943, -38.6725, -21.7193, 1.7 ) }
    dend_7 { pt3dadd( 21.367, -37.0708, -21.7107, 0.59 ) }
    dend_7 { pt3dadd( 21.197, -36.1901, -21.719, 0.22 ) }
    dend_7 { pt3dadd( 20.8155, -35.2497, -21.7337, 0.22 ) }
    dend_7 { pt3dadd( 30.352, -34.4158, -25.3081, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 32/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 11.2809, -35.61, -17.6486, 1.11 ) }
    dend_4 { pt3dadd( 10.7161, -37.4251, -16.5253, 1.11 ) }
    dend_4 { pt3dadd( 10.3479, -38.6084, -15.7929, 1.4 ) }
    dend_4 { pt3dadd( 9.76005, -40.4973, -14.6238, 1.84 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 36/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -10.8011, -65.5558, -8.41104, 0.44 ) }
    dend_39 { pt3dadd( -9.71677, -67.1343, -7.20629, 0.44 ) }
    dend_39 { pt3dadd( -9.28226, -68.104, -6.36826, 0.74 ) }
    dend_39 { pt3dadd( -9.14373, -68.6443, -5.88064, 0.29 ) }
    dend_39 { pt3dadd( -9.05693, -69.1531, -5.40638, 0.59 ) }
    dend_39 { pt3dadd( -8.88274, -70.3204, -4.32264, 0.44 ) }
    dend_39 { pt3dadd( -8.76186, -71.0201, -3.70794, 0.66 ) }
    dend_39 { pt3dadd( -8.70443, -71.86, -2.95915, 0.52 ) }
    dend_39 { pt3dadd( -8.63111, -72.7082, -2.27855, 0.29 ) }
    dend_39 { pt3dadd( -8.46771, -73.4569, -1.80076, 0.29 ) }
    dend_39 { pt3dadd( -8.26365, -74.0146, -1.54355, 0.74 ) }
    dend_39 { pt3dadd( -7.83114, -74.8718, -1.28366, 1.7 ) }
    dend_39 { pt3dadd( -7.29409, -75.8033, -1.09256, 1.92 ) }
    dend_39 { pt3dadd( -6.69693, -76.7513, -0.972267, 0.96 ) }
    dend_39 { pt3dadd( -5.71325, -78.2814, -0.927067, 0.44 ) }
    dend_39 { pt3dadd( -5.30793, -78.9174, -0.961689, 0.88 ) }
    dend_39 { pt3dadd( -4.85703, -79.6447, -1.0396, 1.84 ) }
    dend_39 { pt3dadd( -4.29434, -80.5852, -1.16933, 1.11 ) }
    dend_39 { pt3dadd( -3.32068, -82.2191, -1.46024, 0.29 ) }
    dend_39 { pt3dadd( -2.62925, -83.4001, -1.65957, 0.37 ) }
    dend_39 { pt3dadd( -2.28089, -84.0277, -1.75075, 0.22 ) }
    dend_39 { pt3dadd( -1.85835, -84.81, -1.80773, 0.22 ) }
    dend_39 { pt3dadd( -1.50606, -85.4501, -1.80636, 0.88 ) }
    dend_39 { pt3dadd( -1.12594, -86.1292, -1.74759, 1.99 ) }
    dend_39 { pt3dadd( -0.58787, -87.1394, -1.55706, 2.29 ) }
    dend_39 { pt3dadd( 0.0916635, -88.5359, -1.13948, 0.37 ) }
    dend_39 { pt3dadd( 0.513145, -89.607, -0.775032, 0.22 ) }
    dend_39 { pt3dadd( 0.747536, -90.3384, -0.519837, 0.15 ) }
    dend_39 { pt3dadd( 0.836387, -90.6648, -0.412487, 0.15 ) }
    dend_39 { pt3dadd( 0.934865, -91.1019, -0.302303, 0.37 ) }
    dend_39 { pt3dadd( 1.08718, -91.9322, -0.211609, 0.88 ) }
    dend_39 { pt3dadd( 1.25268, -92.9901, -0.295935, 0.22 ) }
    dend_39 { pt3dadd( 1.31803, -93.4778, -0.404579, 0.22 ) }
    dend_39 { pt3dadd( 1.41018, -94.151, -0.591522, 0.22 ) }
    dend_39 { pt3dadd( 1.55846, -95.0281, -0.867134, 0.22 ) }
    dend_39 { pt3dadd( 1.70237, -95.7565, -1.14269, 0.74 ) }
    dend_39 { pt3dadd( 1.88515, -96.5371, -1.48883, 1.47 ) }
    dend_39 { pt3dadd( 2.1833, -97.7155, -2.05892, 0.22 ) }
    dend_39 { pt3dadd( 2.39599, -98.6227, -2.5243, 0.74 ) }
    dend_39 { pt3dadd( 2.67416, -99.8227, -3.16519, 0.22 ) }
    dend_39 { pt3dadd( 2.86446, -100.597, -3.5724, 0.22 ) }
    dend_39 { pt3dadd( 3.17608, -101.777, -4.16411, 0.29 ) }
    dend_39 { pt3dadd( 3.40483, -102.612, -4.56778, 0.52 ) }
    dend_39 { pt3dadd( 3.59556, -103.295, -4.87869, 1.18 ) }
    dend_39 { pt3dadd( 3.83994, -104.195, -5.22902, 2.29 ) }
    dend_39 { pt3dadd( 4.00561, -104.868, -5.44441, 2.29 ) }
    dend_39 { pt3dadd( 4.4012, -106.799, -5.88889, 0.22 ) }
    dend_39 { pt3dadd( 4.52754, -107.576, -6.01224, 0.37 ) }
    dend_39 { pt3dadd( 4.64472, -108.432, -6.09986, 0.29 ) }
    dend_39 { pt3dadd( 4.72987, -109.162, -6.12943, 0.15 ) }
    dend_39 { pt3dadd( 4.78012, -109.655, -6.12796, 0.22 ) }
    dend_39 { pt3dadd( 4.89127, -110.681, -6.11136, 0.15 ) }
    dend_39 { pt3dadd( 4.95788, -111.204, -6.09687, 0.59 ) }
    dend_39 { pt3dadd( 5.08696, -111.925, -6.0289, 0.22 ) }
    dend_39 { pt3dadd( 5.35936, -113.126, -5.82709, 0.22 ) }
    dend_39 { pt3dadd( 5.57565, -113.897, -5.6628, 0.81 ) }
    dend_39 { pt3dadd( 5.75895, -114.457, -5.53872, 1.77 ) }
    dend_39 { pt3dadd( 5.9426, -114.957, -5.43427, 2.14 ) }
    dend_39 { pt3dadd( 6.6995, -116.809, -5.10491, 0.22 ) }
    dend_39 { pt3dadd( 7.20902, -117.867, -4.96065, 0.22 ) }
    dend_39 { pt3dadd( 7.74708, -118.793, -4.88303, 0.22 ) }
    dend_39 { pt3dadd( 8.06965, -119.273, -4.86294, 0.37 ) }
    dend_39 { pt3dadd( 8.53579, -119.902, -4.87202, 0.81 ) }
    dend_39 { pt3dadd( 8.93403, -120.378, -4.92883, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_39 { pt3dadd( 9.67109, -121.104, -5.17196, 0.22 ) }
    dend_39 { pt3dadd( 10.0823, -121.459, -5.28901, 0.22 ) }
    dend_39 { pt3dadd( 10.3566, -121.683, -5.31702, 0.22 ) }
    dend_39 { pt3dadd( 10.7918, -122.025, -5.25022, 0.22 ) }
    dend_39 { pt3dadd( 11.1392, -122.304, -5.11392, 0.22 ) }
    dend_39 { pt3dadd( 11.9808, -123.0, -4.6593, 0.59 ) }
    dend_39 { pt3dadd( 12.5885, -123.505, -4.28139, 0.37 ) }
    dend_39 { pt3dadd( 13.3307, -124.106, -3.82081, 0.88 ) }
    dend_39 { pt3dadd( 14.3867, -124.923, -3.17561, 1.77 ) }
    dend_39 { pt3dadd( 15.6881, -125.866, -2.47055, 0.22 ) }
    dend_39 { pt3dadd( 16.3216, -126.325, -2.19598, 0.66 ) }
    dend_39 { pt3dadd( 16.5169, -126.465, -2.13489, 0.66 ) }
    dend_39 { pt3dadd( 17.7293, -127.321, -1.96404, 0.22 ) }
    dend_39 { pt3dadd( 18.2835, -127.716, -1.98386, 0.88 ) }
    dend_39 { pt3dadd( 19.2371, -128.412, -2.15863, 1.47 ) }
    dend_39 { pt3dadd( 20.4807, -129.348, -2.55185, 0.22 ) }
    dend_39 { pt3dadd( 21.0688, -129.848, -2.78345, 0.29 ) }
    dend_39 { pt3dadd( 21.5444, -130.296, -2.98676, 0.29 ) }
    dend_39 { pt3dadd( 22.152, -130.94, -3.27159, 0.52 ) }
    dend_39 { pt3dadd( 22.5099, -131.356, -3.44004, 1.18 ) }
    dend_39 { pt3dadd( 23.0924, -132.13, -3.69309, 2.29 ) }
    dend_39 { pt3dadd( 24.0858, -133.661, -4.16022, 0.22 ) }
    dend_39 { pt3dadd( 24.4458, -134.271, -4.33663, 0.22 ) }
    dend_39 { pt3dadd( 24.6844, -134.701, -4.45323, 0.22 ) }
    dend_39 { pt3dadd( 24.8302, -134.967, -4.52061, 0.22 ) }
    dend_39 { pt3dadd( 25.1412, -135.518, -4.66959, 0.52 ) }
    dend_39 { pt3dadd( 25.6204, -136.216, -4.8526, 0.22 ) }
    dend_39 { pt3dadd( 26.1319, -136.779, -5.01155, 0.22 ) }
    dend_39 { pt3dadd( 26.4071, -137.033, -5.09636, 0.22 ) }
    dend_39 { pt3dadd( 26.8059, -137.358, -5.21189, 0.74 ) }
    dend_39 { pt3dadd( 27.4995, -137.913, -5.39067, 1.47 ) }
    dend_39 { pt3dadd( 29.0152, -139.101, -5.73351, 0.22 ) }
    dend_39 { pt3dadd( 29.5601, -139.546, -5.83358, 0.22 ) }
    dend_39 { pt3dadd( 30.1416, -140.08, -5.93068, 0.37 ) }
    dend_39 { pt3dadd( 30.482, -140.449, -5.9721, 0.52 ) }
    dend_39 { pt3dadd( 31.4685, -141.746, -6.05724, 0.22 ) }
    dend_39 { pt3dadd( 31.703, -142.118, -6.05271, 0.52 ) }
    dend_39 { pt3dadd( 32.0302, -142.764, -6.01171, 1.18 ) }
    dend_39 { pt3dadd( 32.331, -143.513, -5.96145, 0.44 ) }
    dend_39 { pt3dadd( 32.8191, -145.042, -5.85233, 0.22 ) }
    dend_39 { pt3dadd( 32.9811, -145.749, -5.82188, 0.88 ) }
    dend_39 { pt3dadd( 33.1147, -146.684, -5.8172, 1.99 ) }
    dend_39 { pt3dadd( 33.1683, -147.262, -5.8317, 1.99 ) }
    dend_39 { pt3dadd( 33.2614, -149.144, -5.93349, 0.37 ) }
    dend_39 { pt3dadd( 33.2781, -150.023, -6.00877, 0.88 ) }
    dend_39 { pt3dadd( 33.2636, -151.618, -6.19121, 0.22 ) }
    dend_39 { pt3dadd( 33.2472, -152.616, -6.31927, 0.22 ) }
    dend_39 { pt3dadd( 33.2315, -153.088, -6.39015, 0.44 ) }
    dend_39 { pt3dadd( 33.2034, -153.797, -6.49821, 0.88 ) }
    dend_39 { pt3dadd( 33.1138, -155.336, -6.74401, 0.15 ) }
    dend_39 { pt3dadd( 33.0275, -156.201, -6.89931, 0.22 ) }
    dend_39 { pt3dadd( 32.9093, -156.818, -7.00111, 0.15 ) }
    dend_39 { pt3dadd( 32.7638, -157.333, -7.07383, 0.37 ) }
    dend_39 { pt3dadd( 32.4588, -158.141, -7.19832, 0.15 ) }
    dend_39 { pt3dadd( 32.0716, -158.915, -7.31983, 0.29 ) }
    dend_39 { pt3dadd( 31.7854, -159.389, -7.38676, 1.03 ) }
    dend_39 { pt3dadd( 31.0021, -160.569, -7.53753, 0.22 ) }
    dend_39 { pt3dadd( 30.5608, -161.22, -7.60616, 0.29 ) }
    dend_39 { pt3dadd( 30.0928, -161.91, -7.65834, 0.88 ) }
    dend_39 { pt3dadd( 29.4977, -162.79, -7.70727, 1.7 ) }
    dend_39 { pt3dadd( 28.7475, -163.911, -7.75883, 0.59 ) }
    dend_39 { pt3dadd( 28.2665, -164.622, -7.79808, 0.44 ) }
    dend_39 { pt3dadd( 27.7568, -165.345, -7.85217, 0.74 ) }
    dend_39 { pt3dadd( 26.8499, -166.561, -7.91864, 0.15 ) }
    dend_39 { pt3dadd( 26.6759, -166.787, -7.9227, 0.15 ) }
    dend_39 { pt3dadd( 26.1246, -167.492, -7.93542, 0.44 ) }
    dend_39 { pt3dadd( 25.9403, -167.709, -7.93949, 0.44 ) }
    dend_39 { pt3dadd( 29.7646, -177.72, -8.16303, 0.44 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 68/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -10.8011, -65.5558, -8.41104, 1.77 ) }
    dend_38 { pt3dadd( -12.3207, -66.8112, -9.39377, 1.77 ) }
    dend_38 { pt3dadd( -13.7416, -68.1797, -10.5673, 1.33 ) }
    dend_38 { pt3dadd( -14.5652, -69.1622, -11.458, 0.74 ) }
    dend_38 { pt3dadd( -15.4338, -70.5001, -12.7425, 0.37 ) }
    dend_38 { pt3dadd( -15.8203, -71.3015, -13.5071, 0.37 ) }
    dend_38 { pt3dadd( -16.3813, -72.7841, -14.8693, 0.81 ) }
    dend_38 { pt3dadd( -16.5738, -73.6915, -15.6815, 1.11 ) }
    dend_38 { pt3dadd( -16.7134, -74.9197, -16.7324, 1.33 ) }
    dend_38 { pt3dadd( -16.863, -76.2802, -17.7743, 0.88 ) }
    dend_38 { pt3dadd( -17.0335, -77.5751, -18.6536, 0.74 ) }
    dend_38 { pt3dadd( -17.3299, -79.0738, -19.5056, 0.74 ) }
    dend_38 { pt3dadd( -17.6537, -80.2707, -20.0512, 1.03 ) }
    dend_38 { pt3dadd( -18.1557, -81.8689, -20.6561, 1.18 ) }
    dend_38 { pt3dadd( -18.9302, -84.0954, -21.352, 0.66 ) }
    dend_38 { pt3dadd( -19.4319, -85.4056, -21.6995, 1.03 ) }
    dend_38 { pt3dadd( -20.0295, -86.817, -22.049, 1.47 ) }
    dend_38 { pt3dadd( -20.6098, -88.1058, -22.3458, 1.18 ) }
    dend_38 { pt3dadd( -21.5916, -90.2306, -22.7723, 0.74 ) }
    dend_38 { pt3dadd( -22.132, -91.3765, -22.9503, 0.44 ) }
    dend_38 { pt3dadd( -22.5202, -92.2275, -23.0194, 0.44 ) }
    dend_38 { pt3dadd( -22.9419, -93.2421, -22.997, 0.44 ) }
    dend_38 { pt3dadd( -23.1763, -93.9569, -22.9293, 0.44 ) }
    dend_38 { pt3dadd( -23.4303, -95.0156, -22.8255, 0.59 ) }
    dend_38 { pt3dadd( -23.6762, -96.6264, -22.7403, 1.11 ) }
    dend_38 { pt3dadd( -23.8108, -98.8246, -22.8373, 1.62 ) }
    dend_38 { pt3dadd( -23.7753, -100.657, -23.1008, 0.96 ) }
    dend_38 { pt3dadd( -23.6127, -102.669, -23.5886, 0.37 ) }
    dend_38 { pt3dadd( -23.4306, -103.986, -24.0484, 0.66 ) }
    dend_38 { pt3dadd( -23.1438, -105.39, -24.7187, 1.25 ) }
    dend_38 { pt3dadd( -22.6978, -107.009, -25.6835, 1.7 ) }
    dend_38 { pt3dadd( -22.1206, -108.735, -26.8795, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_38 { pt3dadd( -21.5803, -110.226, -27.9275, 0.66 ) }
    dend_38 { pt3dadd( -21.1552, -111.417, -28.6998, 0.52 ) }
    dend_38 { pt3dadd( -20.6127, -113.141, -29.5696, 0.44 ) }
    dend_38 { pt3dadd( -20.3159, -114.351, -29.9694, 0.59 ) }
    dend_38 { pt3dadd( -20.2229, -114.999, -30.0605, 0.52 ) }
    dend_38 { pt3dadd( -20.1733, -117.303, -29.982, 0.37 ) }
    dend_38 { pt3dadd( -20.2681, -118.631, -29.7717, 0.44 ) }
    dend_38 { pt3dadd( -20.5418, -120.351, -29.3904, 0.96 ) }
    dend_38 { pt3dadd( -20.8587, -121.754, -29.0693, 1.47 ) }
    dend_38 { pt3dadd( -21.2059, -123.101, -28.7867, 1.84 ) }
    dend_38 { pt3dadd( -21.574, -124.524, -28.5432, 0.66 ) }
    dend_38 { pt3dadd( -22.0141, -126.326, -28.351, 0.52 ) }
    dend_38 { pt3dadd( -22.269, -127.728, -28.3404, 0.44 ) }
    dend_38 { pt3dadd( -22.4799, -129.332, -28.475, 0.44 ) }
    dend_38 { pt3dadd( -22.6052, -130.781, -28.6794, 0.66 ) }
    dend_38 { pt3dadd( -22.6613, -131.655, -28.8046, 1.62 ) }
    dend_38 { pt3dadd( -22.7609, -132.888, -28.9271, 1.99 ) }
    dend_38 { pt3dadd( -22.9531, -134.508, -28.9663, 0.96 ) }
    dend_38 { pt3dadd( -23.0823, -135.457, -28.9042, 0.74 ) }
    dend_38 { pt3dadd( -23.3747, -137.172, -28.7129, 0.44 ) }
    dend_38 { pt3dadd( -23.6343, -138.447, -28.5832, 0.44 ) }
    dend_38 { pt3dadd( -24.0677, -140.23, -28.4356, 0.44 ) }
    dend_38 { pt3dadd( -24.4759, -141.699, -28.3523, 0.44 ) }
    dend_38 { pt3dadd( -24.926, -143.186, -28.3663, 0.59 ) }
    dend_38 { pt3dadd( -25.4201, -144.813, -28.517, 0.44 ) }
    dend_38 { pt3dadd( -25.7845, -146.001, -28.7517, 0.81 ) }
    dend_38 { pt3dadd( -26.0882, -146.916, -29.0258, 1.4 ) }
    dend_38 { pt3dadd( -26.4848, -147.956, -29.4176, 1.55 ) }
    dend_38 { pt3dadd( -27.507, -150.181, -30.3583, 0.59 ) }
    dend_38 { pt3dadd( -27.7857, -150.715, -30.5854, 0.59 ) }
    dend_38 { pt3dadd( -28.4665, -151.993, -31.0902, 0.44 ) }
    dend_38 { pt3dadd( -29.2262, -153.337, -31.5877, 0.44 ) }
    dend_38 { pt3dadd( -29.7317, -154.184, -31.888, 0.44 ) }
    dend_38 { pt3dadd( -30.2391, -154.957, -32.1735, 0.44 ) }
    dend_38 { pt3dadd( -30.7559, -155.656, -32.4633, 0.44 ) }
    dend_38 { pt3dadd( -31.4708, -156.695, -32.8849, 0.66 ) }
    dend_38 { pt3dadd( -33.9475, -171.052, -35.5507, 0.66 ) }
    dend_38 { pt3dadd( -33.8413, -185.849, -36.196, 0.66 ) }
    dend_38 { pt3dadd( -32.4709, -200.481, -34.363, 0.66 ) }
    dend_38 { pt3dadd( -32.1028, -214.643, -30.0423, 0.66 ) }
    dend_38 { pt3dadd( -28.7903, -228.922, -27.9187, 0.66 ) }
    dend_38 { pt3dadd( -23.6967, -242.729, -26.2531, 0.66 ) }
    dend_38 { pt3dadd( -21.0953, -257.266, -27.3832, 0.66 ) }
    dend_38 { pt3dadd( -15.2104, -270.811, -26.2645, 0.66 ) }
    dend_38 { pt3dadd( -10.3811, -284.809, -25.9649, 0.66 ) }
    dend_38 { pt3dadd( -5.15261, -298.657, -25.4523, 0.66 ) }
    dend_38 { pt3dadd( 0.426873, -312.03, -22.3852, 0.66 ) }
    dend_38 { pt3dadd( 5.20632, -325.433, -18.2772, 0.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 48/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 30.352, -34.4158, -25.3081, 0.22 ) }
    dend_9 { pt3dadd( 41.983, -33.3887, -20.5556, 0.22 ) }
    dend_9 { pt3dadd( 53.5935, -30.9466, -16.2947, 0.22 ) }
    dend_9 { pt3dadd( 64.9865, -27.0178, -12.5954, 0.22 ) }
    dend_9 { pt3dadd( 76.9981, -23.6383, -10.8007, 0.22 ) }
    dend_9 { pt3dadd( 88.5817, -19.0619, -8.85134, 0.22 ) }
    dend_9 { pt3dadd( 99.6686, -13.9185, -5.76168, 0.22 ) }
    dend_9 { pt3dadd( 110.092, -7.92814, -1.96834, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 56/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 30.352, -34.4158, -25.3081, 0.22 ) }
    dend_8 { pt3dadd( 34.3871, -34.4446, -32.8328, 0.22 ) }
    dend_8 { pt3dadd( 37.9048, -35.7164, -40.5082, 0.22 ) }
    dend_8 { pt3dadd( 42.3759, -38.2707, -47.3191, 0.22 ) }
    dend_8 { pt3dadd( 47.4444, -41.9822, -53.1016, 0.22 ) }
    dend_8 { pt3dadd( 52.5137, -45.2329, -59.1545, 0.22 ) }
    dend_8 { pt3dadd( 58.9678, -47.9453, -64.0424, 0.22 ) }
    dend_8 { pt3dadd( 64.2191, -50.5351, -70.2569, 0.22 ) }
    dend_8 { pt3dadd( 69.2364, -53.6916, -76.4023, 0.22 ) }
    dend_8 { pt3dadd( 73.8911, -57.561, -82.4243, 0.22 ) }
    dend_8 { pt3dadd( 77.6484, -60.1474, -89.6421, 0.22 ) }
    dend_8 { pt3dadd( 79.8493, -61.4036, -97.7957, 0.22 ) }
    dend_8 { pt3dadd( 82.9596, -62.2404, -105.703, 0.22 ) }
    dend_8 { pt3dadd( 86.2134, -61.5953, -113.571, 0.22 ) }
    dend_8 { pt3dadd( 89.5639, -60.7108, -121.374, 0.22 ) }
    dend_8 { pt3dadd( 91.8886, -59.485, -129.498, 0.22 ) }
    dend_8 { pt3dadd( 96.196, -57.9861, -136.717, 0.22 ) }
    dend_8 { pt3dadd( 100.413, -56.411, -143.972, 0.22 ) }
    dend_8 { pt3dadd( 105.86, -53.3563, -149.794, 0.22 ) }
    dend_8 { pt3dadd( 112.521, -49.7296, -153.717, 0.22 ) }
    dend_8 { pt3dadd( 118.971, -46.5177, -158.297, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 77/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 9.76005, -40.4973, -14.6238, 1.47 ) }
    dend_6 { pt3dadd( 9.49337, -41.5813, -13.149, 1.47 ) }
    dend_6 { pt3dadd( 9.21284, -42.9735, -11.4182, 1.47 ) }
    dend_6 { pt3dadd( 9.06749, -44.0898, -10.0555, 1.03 ) }
    dend_6 { pt3dadd( 9.02092, -45.2846, -8.59511, 0.66 ) }
    dend_6 { pt3dadd( 9.08, -46.1294, -7.59334, 0.52 ) }
    dend_6 { pt3dadd( 9.14837, -46.5772, -7.07645, 0.44 ) }
    dend_6 { pt3dadd( 9.3096, -47.1494, -6.49073, 0.44 ) }
    dend_6 { pt3dadd( 9.62347, -47.9283, -5.7742, 0.66 ) }
    dend_6 { pt3dadd( 10.0407, -48.7218, -5.06171, 1.18 ) }
    dend_6 { pt3dadd( 10.6912, -49.8039, -4.04361, 0.74 ) }
    dend_6 { pt3dadd( 11.0929, -50.5286, -3.33617, 1.11 ) }
    dend_6 { pt3dadd( 11.4847, -51.5173, -2.47414, 0.66 ) }
    dend_6 { pt3dadd( 11.5296, -52.062, -2.16884, 0.44 ) }
    dend_6 { pt3dadd( 11.4473, -52.3833, -2.11658, 0.44 ) }
    dend_6 { pt3dadd( 11.067, -53.241, -2.18155, 0.44 ) }
    dend_6 { pt3dadd( 10.6626, -54.072, -2.27142, 0.52 ) }
    dend_6 { pt3dadd( 9.94041, -55.6774, -2.43743, 0.52 ) }
    dend_6 { pt3dadd( 9.41773, -56.9977, -2.51991, 0.74 ) }
    dend_6 { pt3dadd( 9.11312, -58.0131, -2.48862, 1.77 ) }
    dend_6 { pt3dadd( 8.98189, -58.6951, -2.37223, 2.14 ) }
    dend_6 { pt3dadd( 8.7753, -61.2654, -1.44922, 0.44 ) }
    dend_6 { pt3dadd( 8.78382, -61.9831, -0.989745, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 8.83832, -62.6517, -0.360845, 0.29 ) }
    dend_6 { pt3dadd( 8.93527, -63.4487, 0.534302, 0.52 ) }
    dend_6 { pt3dadd( 9.04429, -64.4078, 1.75111, 0.52 ) }
    dend_6 { pt3dadd( 9.0574, -65.0053, 2.5566, 0.81 ) }
    dend_6 { pt3dadd( 8.95824, -65.8136, 3.66056, 1.62 ) }
    dend_6 { pt3dadd( 8.82706, -66.3773, 4.35267, 1.62 ) }
    dend_6 { pt3dadd( 8.55536, -67.3213, 5.31524, 0.37 ) }
    dend_6 { pt3dadd( 8.30785, -68.1652, 5.99526, 0.37 ) }
    dend_6 { pt3dadd( 8.07076, -69.3552, 6.68888, 0.52 ) }
    dend_6 { pt3dadd( 8.07102, -70.1429, 7.01214, 0.22 ) }
    dend_6 { pt3dadd( 8.21275, -70.8828, 7.28101, 0.22 ) }
    dend_6 { pt3dadd( 8.46932, -71.7171, 7.62509, 0.74 ) }
    dend_6 { pt3dadd( 8.7821, -72.5435, 8.03168, 1.03 ) }
    dend_6 { pt3dadd( 9.13618, -73.7602, 8.68488, 0.22 ) }
    dend_6 { pt3dadd( 9.31285, -74.799, 9.35055, 0.44 ) }
    dend_6 { pt3dadd( 9.36602, -76.1799, 10.3413, 1.03 ) }
    dend_6 { pt3dadd( 9.30854, -77.0612, 10.9981, 2.14 ) }
    dend_6 { pt3dadd( 9.20439, -77.821, 11.5704, 2.43 ) }
    dend_6 { pt3dadd( 8.91633, -79.4582, 12.7434, 0.81 ) }
    dend_6 { pt3dadd( 8.6679, -80.8562, 13.6573, 0.37 ) }
    dend_6 { pt3dadd( 8.53412, -81.9047, 14.2285, 0.37 ) }
    dend_6 { pt3dadd( 8.49191, -82.7679, 14.6075, 2.14 ) }
    dend_6 { pt3dadd( 8.50735, -84.4058, 15.2479, 0.88 ) }
    dend_6 { pt3dadd( 8.56417, -85.5874, 15.6591, 0.29 ) }
    dend_6 { pt3dadd( 8.64452, -86.5703, 15.9572, 0.29 ) }
    dend_6 { pt3dadd( 8.6871, -87.4682, 16.179, 0.22 ) }
    dend_6 { pt3dadd( 8.66306, -88.2056, 16.3467, 0.22 ) }
    dend_6 { pt3dadd( 8.57953, -88.841, 16.5435, 0.22 ) }
    dend_6 { pt3dadd( 8.43115, -89.4835, 16.8271, 0.52 ) }
    dend_6 { pt3dadd( 8.21595, -90.2247, 17.2544, 0.74 ) }
    dend_6 { pt3dadd( 8.00423, -90.9318, 17.6988, 0.22 ) }
    dend_6 { pt3dadd( 7.79706, -91.7923, 18.2551, 0.37 ) }
    dend_6 { pt3dadd( 7.55736, -93.1011, 19.0691, 0.96 ) }
    dend_6 { pt3dadd( 7.40425, -94.2503, 19.7626, 2.14 ) }
    dend_6 { pt3dadd( 7.32184, -95.0028, 20.2395, 2.73 ) }
    dend_6 { pt3dadd( 7.1332, -96.8135, 21.4775, 0.22 ) }
    dend_6 { pt3dadd( 7.01811, -97.689, 22.138, 0.22 ) }
    dend_6 { pt3dadd( 6.95744, -98.0237, 22.4176, 0.22 ) }
    dend_6 { pt3dadd( 6.88996, -98.3415, 22.6848, 0.29 ) }
    dend_6 { pt3dadd( 6.71829, -99.1045, 23.3541, 0.29 ) }
    dend_6 { pt3dadd( 6.56472, -99.6405, 23.834, 0.22 ) }
    dend_6 { pt3dadd( 6.29468, -100.487, 24.5638, 0.22 ) }
    dend_6 { pt3dadd( 6.16437, -100.901, 24.8927, 0.96 ) }
    dend_6 { pt3dadd( 5.92291, -101.923, 25.6868, 2.14 ) }
    dend_6 { pt3dadd( 5.71051, -103.476, 26.8389, 0.29 ) }
    dend_6 { pt3dadd( 5.66174, -104.491, 27.5371, 0.29 ) }
    dend_6 { pt3dadd( 5.66222, -105.28, 28.0742, 1.03 ) }
    dend_6 { pt3dadd( 5.65477, -106.284, 28.765, 0.44 ) }
    dend_6 { pt3dadd( 5.65107, -107.474, 29.6348, 0.29 ) }
    dend_6 { pt3dadd( 5.67513, -108.347, 30.3347, 0.59 ) }
    dend_6 { pt3dadd( 5.73606, -108.858, 30.758, 0.22 ) }
    dend_6 { pt3dadd( 5.81557, -109.313, 31.1337, 0.22 ) }
    dend_6 { pt3dadd( 5.98828, -110.3, 31.9076, 0.22 ) }
    dend_6 { pt3dadd( 6.09914, -111.143, 32.5426, 0.22 ) }
    dend_6 { pt3dadd( 6.12149, -111.487, 32.7944, 0.22 ) }
    dend_6 { pt3dadd( 6.13892, -112.223, 33.3594, 1.11 ) }
    dend_6 { pt3dadd( 6.13883, -112.692, 33.7308, 1.62 ) }
    dend_6 { pt3dadd( 6.11785, -114.26, 35.035, 0.22 ) }
    dend_6 { pt3dadd( 6.10162, -115.096, 35.7703, 0.22 ) }
    dend_6 { pt3dadd( 6.08085, -115.606, 36.2308, 0.96 ) }
    dend_6 { pt3dadd( 6.04948, -116.535, 37.1199, 1.77 ) }
    dend_6 { pt3dadd( 6.04299, -117.631, 38.2722, 0.22 ) }
    dend_6 { pt3dadd( 6.09467, -118.301, 39.0413, 0.22 ) }
    dend_6 { pt3dadd( 6.17202, -118.701, 39.5288, 0.22 ) }
    dend_6 { pt3dadd( 6.35998, -119.191, 40.1017, 0.22 ) }
    dend_6 { pt3dadd( 6.6426, -119.664, 40.6584, 0.52 ) }
    dend_6 { pt3dadd( 7.13811, -120.209, 41.2629, 0.22 ) }
    dend_6 { pt3dadd( 7.5298, -120.62, 41.6579, 0.22 ) }
    dend_6 { pt3dadd( 7.6881, -121.013, 41.9397, 0.22 ) }
    dend_6 { pt3dadd( 7.80864, -121.597, 42.3492, 0.22 ) }
    dend_6 { pt3dadd( 7.92812, -122.256, 42.8144, 0.22 ) }
    dend_6 { pt3dadd( 8.00882, -122.732, 43.1832, 0.66 ) }
    dend_6 { pt3dadd( 8.10879, -123.386, 43.7568, 0.74 ) }
    dend_6 { pt3dadd( 8.25641, -124.231, 44.6149, 0.22 ) }
    dend_6 { pt3dadd( 8.45151, -125.052, 45.5525, 0.88 ) }
    dend_6 { pt3dadd( 8.6958, -125.852, 46.5199, 0.22 ) }
    dend_6 { pt3dadd( 8.9247, -126.492, 47.3488, 0.44 ) }
    dend_6 { pt3dadd( 9.22425, -127.224, 48.4062, 1.4 ) }
    dend_6 { pt3dadd( 9.61937, -128.072, 49.7546, 2.29 ) }
    dend_6 { pt3dadd( 10.4876, -129.705, 52.5698, 0.22 ) }
    dend_6 { pt3dadd( 10.8949, -130.389, 53.7972, 1.11 ) }
    dend_6 { pt3dadd( 11.5107, -131.228, 55.3068, 0.22 ) }
    dend_6 { pt3dadd( 11.9617, -131.747, 56.1873, 0.22 ) }
    dend_6 { pt3dadd( 12.2569, -132.04, 56.6759, 0.22 ) }
    dend_6 { pt3dadd( 12.5885, -132.358, 57.1895, 0.96 ) }
    dend_6 { pt3dadd( 12.9595, -132.724, 57.7705, 1.18 ) }
    dend_6 { pt3dadd( 13.7385, -133.831, 59.1905, 0.22 ) }
    dend_6 { pt3dadd( 14.0033, -134.399, 59.7848, 0.22 ) }
    dend_6 { pt3dadd( 14.3053, -135.339, 60.6478, 0.88 ) }
    dend_6 { pt3dadd( 14.5126, -136.283, 61.4666, 1.47 ) }
    dend_6 { pt3dadd( 14.5884, -136.797, 61.9263, 1.47 ) }
    dend_6 { pt3dadd( 14.7082, -138.137, 63.1647, 0.29 ) }
    dend_6 { pt3dadd( 14.7219, -138.738, 63.7535, 0.29 ) }
    dend_6 { pt3dadd( 14.7463, -139.447, 64.5287, 0.88 ) }
    dend_6 { pt3dadd( 14.7973, -140.216, 65.4661, 1.77 ) }
    dend_6 { pt3dadd( 14.9239, -141.197, 66.9809, 1.33 ) }
    dend_6 { pt3dadd( 15.0116, -141.86, 68.2371, 0.37 ) }
    dend_6 { pt3dadd( 15.0372, -142.326, 69.2932, 0.37 ) }
    dend_6 { pt3dadd( 15.0633, -142.861, 70.5901, 0.37 ) }
    dend_6 { pt3dadd( 15.0987, -143.12, 71.2594, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_6 { pt3dadd( 15.2679, -143.581, 72.5392, 0.37 ) }
    dend_6 { pt3dadd( 15.6355, -143.959, 73.6718, 0.96 ) }
    dend_6 { pt3dadd( 16.1801, -144.34, 74.8482, 0.37 ) }
    dend_6 { pt3dadd( 16.5716, -144.621, 75.6193, 0.37 ) }
    dend_6 { pt3dadd( 16.939, -144.955, 76.4357, 0.37 ) }
    dend_6 { pt3dadd( 17.2781, -145.323, 77.3066, 1.03 ) }
    dend_6 { pt3dadd( 18.0414, -146.288, 79.5217, 1.77 ) }
    dend_6 { pt3dadd( 18.4088, -146.759, 80.5908, 1.77 ) }
    dend_6 { pt3dadd( 19.0755, -147.716, 82.6122, 0.44 ) }
    dend_6 { pt3dadd( 19.3373, -148.285, 83.6448, 0.44 ) }
    dend_6 { pt3dadd( 19.4359, -148.735, 84.3606, 0.29 ) }
    dend_6 { pt3dadd( 19.4241, -149.908, 85.9724, 1.47 ) }
    dend_6 { pt3dadd( 19.2961, -150.493, 86.6473, 0.66 ) }
    dend_6 { pt3dadd( 19.0659, -151.285, 87.4656, 0.29 ) }
    dend_6 { pt3dadd( 18.8314, -152.01, 88.1656, 0.29 ) }
    dend_6 { pt3dadd( 18.6847, -152.755, 88.899, 0.29 ) }
    dend_6 { pt3dadd( 18.5944, -153.518, 89.727, 0.22 ) }
    dend_6 { pt3dadd( 18.5442, -153.971, 90.2783, 0.22 ) }
    dend_6 { pt3dadd( 18.5231, -154.387, 90.8146, 0.44 ) }
    dend_6 { pt3dadd( 18.5343, -154.93, 91.4614, 0.66 ) }
    dend_6 { pt3dadd( 18.6671, -155.725, 92.3304, 0.29 ) }
    dend_6 { pt3dadd( 18.8865, -156.296, 92.9112, 0.29 ) }
    dend_6 { pt3dadd( 19.0348, -156.598, 93.2306, 0.29 ) }
    dend_6 { pt3dadd( 19.3657, -157.272, 93.9688, 0.96 ) }
    dend_6 { pt3dadd( 19.7182, -158.066, 94.8657, 0.29 ) }
    dend_6 { pt3dadd( 19.9231, -158.547, 95.3589, 0.22 ) }
    dend_6 { pt3dadd( 20.3926, -159.665, 96.4078, 0.52 ) }
    dend_6 { pt3dadd( 20.8389, -160.67, 97.3287, 0.22 ) }
    dend_6 { pt3dadd( 21.2293, -161.614, 98.2142, 0.96 ) }
    dend_6 { pt3dadd( 21.4841, -162.339, 98.9258, 1.7 ) }
    dend_6 { pt3dadd( 21.7888, -163.462, 100.055, 0.29 ) }
    dend_6 { pt3dadd( 21.8992, -164.256, 100.832, 0.22 ) }
    dend_6 { pt3dadd( 21.902, -164.871, 101.39, 0.22 ) }
    dend_6 { pt3dadd( 21.827, -166.016, 102.318, 0.88 ) }
    dend_6 { pt3dadd( 21.6915, -166.964, 103.036, 0.22 ) }
    dend_6 { pt3dadd( 21.5493, -167.522, 103.431, 0.22 ) }
    dend_6 { pt3dadd( 21.294, -168.247, 103.932, 0.22 ) }
    dend_6 { pt3dadd( 21.0631, -168.927, 104.366, 0.88 ) }
    dend_6 { pt3dadd( 20.7536, -170.102, 105.022, 0.29 ) }
    dend_6 { pt3dadd( 20.6105, -170.906, 105.429, 0.22 ) }
    dend_6 { pt3dadd( 20.3671, -172.299, 106.143, 0.37 ) }
    dend_6 { pt3dadd( 20.2469, -172.813, 106.429, 0.22 ) }
    dend_6 { pt3dadd( 20.0998, -173.33, 106.767, 0.22 ) }
    dend_6 { pt3dadd( 19.9572, -173.935, 107.204, 0.22 ) }
    dend_6 { pt3dadd( 19.9499, -174.437, 107.56, 0.22 ) }
    dend_6 { pt3dadd( 20.0164, -175.048, 107.94, 0.22 ) }
    dend_6 { pt3dadd( 20.0936, -175.51, 108.206, 0.37 ) }
    dend_6 { pt3dadd( 20.2447, -176.446, 108.707, 1.18 ) }
    dend_6 { pt3dadd( 20.3765, -177.313, 109.157, 1.77 ) }
    dend_6 { pt3dadd( 20.7243, -179.612, 110.336, 0.29 ) }
    dend_6 { pt3dadd( 20.9444, -180.819, 110.941, 0.29 ) }
    dend_6 { pt3dadd( 21.2092, -181.956, 111.498, 0.29 ) }
    dend_6 { pt3dadd( 21.373, -182.524, 111.785, 1.18 ) }
    dend_6 { pt3dadd( 21.7007, -183.454, 112.274, 1.47 ) }
    dend_6 { pt3dadd( 22.1533, -184.563, 112.892, 0.22 ) }
    dend_6 { pt3dadd( 22.4027, -185.037, 113.162, 0.22 ) }
    dend_6 { pt3dadd( 22.7094, -185.564, 113.453, 0.22 ) }
    dend_6 { pt3dadd( 23.059, -186.175, 113.729, 0.22 ) }
    dend_6 { pt3dadd( 23.2744, -186.619, 113.876, 0.52 ) }
    dend_6 { pt3dadd( 23.7191, -187.792, 114.152, 0.96 ) }
    dend_6 { pt3dadd( 24.1031, -189.124, 114.397, 0.29 ) }
    dend_6 { pt3dadd( 24.2736, -190.132, 114.591, 0.22 ) }
    dend_6 { pt3dadd( 24.3272, -190.715, 114.71, 0.44 ) }
    dend_6 { pt3dadd( 24.3832, -191.884, 114.947, 0.88 ) }
    dend_6 { pt3dadd( 24.4283, -193.286, 115.252, 0.15 ) }
    dend_6 { pt3dadd( 24.4705, -194.229, 115.488, 0.96 ) }
    dend_6 { pt3dadd( 24.572, -195.77, 115.913, 0.22 ) }
    dend_6 { pt3dadd( 24.6662, -196.749, 116.194, 0.22 ) }
    dend_6 { pt3dadd( 24.754, -197.478, 116.41, 0.88 ) }
    dend_6 { pt3dadd( 24.8521, -198.125, 116.611, 1.03 ) }
    dend_6 { pt3dadd( 25.0492, -199.19, 116.917, 0.22 ) }
    dend_6 { pt3dadd( 25.1685, -199.676, 117.046, 0.22 ) }
    dend_6 { pt3dadd( 25.5562, -200.886, 117.335, 0.44 ) }
    dend_6 { pt3dadd( 25.9869, -202.123, 117.621, 0.22 ) }
    dend_6 { pt3dadd( 26.2336, -202.809, 117.763, 0.22 ) }
    dend_6 { pt3dadd( 26.452, -203.417, 117.862, 0.66 ) }
    dend_6 { pt3dadd( 26.7694, -204.274, 117.956, 1.47 ) }
    dend_6 { pt3dadd( 27.2202, -205.405, 118.037, 0.22 ) }
    dend_6 { pt3dadd( 27.4947, -206.01, 118.066, 0.29 ) }
    dend_6 { pt3dadd( 27.796, -206.624, 118.108, 0.22 ) }
    dend_6 { pt3dadd( 28.2014, -207.395, 118.199, 0.22 ) }
    dend_6 { pt3dadd( 28.5331, -208.013, 118.318, 0.88 ) }
    dend_6 { pt3dadd( 28.9206, -208.762, 118.499, 0.22 ) }
    dend_6 { pt3dadd( 29.4566, -209.869, 118.827, 0.29 ) }
    dend_6 { pt3dadd( 29.9868, -211.028, 119.221, 0.88 ) }
    dend_6 { pt3dadd( 30.8296, -212.95, 119.96, 0.15 ) }
    dend_6 { pt3dadd( 31.1076, -213.622, 120.234, 0.59 ) }
    dend_6 { pt3dadd( 31.4338, -214.472, 120.584, 1.18 ) }
    dend_6 { pt3dadd( 31.8806, -215.839, 121.15, 0.15 ) }
    dend_6 { pt3dadd( 31.9542, -216.16, 121.275, 0.15 ) }
    dend_6 { pt3dadd( 32.0214, -216.733, 121.491, 0.74 ) }
    dend_6 { pt3dadd( 32.0727, -217.964, 121.956, 0.15 ) }
    dend_6 { pt3dadd( 32.1027, -218.609, 122.191, 0.22 ) }
    dend_6 { pt3dadd( 32.145, -219.318, 122.465, 0.15 ) }
    dend_6 { pt3dadd( 32.1854, -219.817, 122.678, 0.37 ) }
    dend_6 { pt3dadd( 32.2773, -220.753, 123.168, 0.07 ) }
    dend_6 { pt3dadd( 32.3279, -221.416, 123.629, 0.07 ) }
    dend_6 { pt3dadd( 32.3461, -221.851, 124.08, 0.07 ) }
    dend_6 { pt3dadd( 32.3609, -222.199, 124.493, 0.29 ) }
    dend_6 { pt3dadd( 32.402, -222.759, 125.271, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 32.4688, -223.432, 126.385, 1.18 ) }
    dend_6 { pt3dadd( 32.4914, -223.955, 127.523, 0.44 ) }
    dend_6 { pt3dadd( 32.4232, -224.324, 128.588, 0.44 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 3/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.76005, -40.4973, -14.6238, 1.62 ) }
    dend_5 { pt3dadd( 9.88281, -41.5917, -15.5275, 1.62 ) }
    dend_5 { pt3dadd( 10.4351, -43.1119, -16.977, 0.81 ) }
    dend_5 { pt3dadd( 11.0598, -44.0327, -17.81, 0.81 ) }
    dend_5 { pt3dadd( 11.9196, -45.0251, -18.6441, 0.81 ) }
    dend_5 { pt3dadd( 12.4736, -45.6872, -19.1236, 0.66 ) }
    dend_5 { pt3dadd( 13.1196, -46.5984, -19.6534, 1.25 ) }
    dend_5 { pt3dadd( 14.0132, -47.862, -20.2331, 1.55 ) }
    dend_5 { pt3dadd( 15.1717, -49.729, -20.9289, 0.66 ) }
    dend_5 { pt3dadd( 15.5616, -50.6592, -21.1727, 0.74 ) }
    dend_5 { pt3dadd( 15.9123, -52.5526, -21.5066, 0.96 ) }
    dend_5 { pt3dadd( 15.9116, -54.8651, -21.8029, 0.88 ) }
    dend_5 { pt3dadd( 15.724, -55.8844, -21.8705, 0.81 ) }
    dend_5 { pt3dadd( 15.2199, -57.3918, -21.9626, 0.59 ) }
    dend_5 { pt3dadd( 14.7058, -58.5327, -22.0699, 0.52 ) }
    dend_5 { pt3dadd( 14.2746, -59.3857, -22.1616, 0.81 ) }
    dend_5 { pt3dadd( 13.7344, -60.4121, -22.3025, 0.74 ) }
    dend_5 { pt3dadd( 12.9158, -62.1238, -22.6008, 0.66 ) }
    dend_5 { pt3dadd( 12.3257, -63.8015, -22.8851, 0.44 ) }
    dend_5 { pt3dadd( 12.1712, -64.6088, -23.0041, 0.74 ) }
    dend_5 { pt3dadd( 12.1315, -65.5864, -23.1433, 1.55 ) }
    dend_5 { pt3dadd( 12.2337, -66.6695, -23.2838, 1.33 ) }
    dend_5 { pt3dadd( 12.6493, -68.2695, -23.4704, 0.59 ) }
    dend_5 { pt3dadd( 13.2501, -69.7844, -23.6464, 0.52 ) }
    dend_5 { pt3dadd( 13.9551, -71.2546, -23.7885, 0.74 ) }
    dend_5 { pt3dadd( 14.4687, -72.2553, -23.8831, 1.25 ) }
    dend_5 { pt3dadd( 14.8802, -73.0421, -23.9668, 1.84 ) }
    dend_5 { pt3dadd( 15.7805, -74.697, -24.1529, 0.44 ) }
    dend_5 { pt3dadd( 16.4672, -75.9457, -24.326, 0.44 ) }
    dend_5 { pt3dadd( 17.2167, -77.392, -24.5965, 0.37 ) }
    dend_5 { pt3dadd( 17.728, -78.4496, -24.8311, 0.29 ) }
    dend_5 { pt3dadd( 18.1783, -79.5072, -25.0728, 0.29 ) }
    dend_5 { pt3dadd( 21.7113, -90.2939, -29.0429, 0.29 ) }
    dend_5 { pt3dadd( 27.0583, -100.327, -32.9614, 0.29 ) }
    dend_5 { pt3dadd( 33.5586, -110.324, -34.5106, 0.29 ) }
    dend_5 { pt3dadd( 41.3744, -119.444, -33.9278, 0.29 ) }
    dend_5 { pt3dadd( 49.2887, -128.052, -31.1238, 0.29 ) }
    dend_5 { pt3dadd( 58.4263, -135.493, -28.7288, 0.29 ) }
    dend_5 { pt3dadd( 68.0132, -142.489, -26.7921, 0.29 ) }
    dend_5 { pt3dadd( 77.0561, -150.411, -26.5364, 0.29 ) }
    dend_5 { pt3dadd( 86.0265, -158.303, -27.8934, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_31, dend_24, dend_17, dend_0, dend_43, dend_32, dend_28, dend_25, dend_21, dend_18, dend_12, dend_1, dend_40, dend_33, dend_30, dend_29, dend_27, dend_26, dend_23, dend_22, dend_20, dend_19, dend_16, dend_13, dend_11, dend_2, dend_42, dend_41, dend_35, dend_34, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, dend_7, dend_4, dend_39, dend_38, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_31, dend_24, dend_17, dend_0, dend_43, dend_32, dend_28, dend_25, dend_21, dend_18, dend_12, dend_1, dend_40, dend_33, dend_30, dend_29, dend_27, dend_26, dend_23, dend_22, dend_20, dend_19, dend_16, dend_13, dend_11, dend_2, dend_42, dend_41, dend_35, dend_34, dend_15, dend_14, dend_10, dend_3, dend_37, dend_36, dend_7, dend_4, dend_39, dend_38, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_43 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_40 OneSecGrp_SectionRef_17.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_29 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_26 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_23 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_20 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_16 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_39 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_38 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_6 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_17 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_12 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_31 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_21 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_25 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_13 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_18 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_32 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_28 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_33 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_19 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 17
    dend_43 nseg = 9
    dend_40 nseg = 3
    dend_29 nseg = 5
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 5
    dend_20 nseg = 7
    dend_16 nseg = 9
    dend_11 nseg = 11
    dend_42 nseg = 3
    dend_41 nseg = 7
    dend_34 nseg = 5
    dend_15 nseg = 5
    dend_14 nseg = 9
    dend_10 nseg = 5
    dend_36 nseg = 13
    dend_39 nseg = 7
    dend_38 nseg = 15
    dend_9 nseg = 5
    dend_8 nseg = 9
    dend_6 nseg = 13
    dend_5 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_LBC_72e65525d3_0_0


