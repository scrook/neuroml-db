// Cell: cIR216_L23_NBC_a489bc1d50_0_0
/*
{
  "id" : "cIR216_L23_NBC_a489bc1d50_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.72306, 5.30436, 4.20388, 2.54287", "-4.25223, 4.78627, 3.78879, 4.68725", "-3.7814, 4.26817, 3.37371, 6.22673", "-3.31057, 3.75008, 2.95862, 7.64701", "-2.83974, 3.23199, 2.54353, 8.55761", "-2.36891, 2.7139, 2.12844, 8.96549", "-1.89808, 2.19581, 1.71335, 9.2975", "-1.42725, 1.67772, 1.29826, 9.48549", "-0.956417, 1.15963, 0.883172, 9.67333", "-0.485586, 0.641536, 0.468083, 9.75336", "-0.0147564, 0.123445, 0.0529936, 9.80295", "0.456074, -0.394646, -0.362095, 9.88568", "0.926904, -0.912738, -0.777184, 9.94624", "1.39773, -1.43083, -1.19227, 9.39229", "1.86856, -1.94892, -1.60736, 8.64644", "2.33939, -2.46701, -2.02245, 7.85208", "2.81022, -2.9851, -2.43754, 7.02739", "3.28105, -3.50319, -2.85263, 6.08715", "3.75188, -4.02128, -3.26772, 4.76023", "4.22271, -4.53938, -3.68281, 3.42054", "4.69354, -5.05747, -4.0979, 1.96741" ]
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-2.10822, -3.24373, -18.4649, 1.11", "-3.77015, -4.23207, -28.7735, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.32178, -5.00673, -18.1149, 1.11", "2.98079, -5.77862, -18.11, 1.11", "4.69942, -7.76181, -18.3569, 1.11", "5.53182, -8.71346, -18.6997, 1.11", "7.57849, -10.93, -19.7566, 0.83", "9.35617, -12.7772, -20.7409, 0.83", "10.9379, -14.3128, -21.5784, 0.83", "13.0792, -16.2789, -22.9454, 0.83", "15.9777, -18.8314, -24.997, 0.83", "17.2279, -19.9042, -25.9731, 0.83", "18.367, -20.8115, -26.9732, 0.83", "20.7217, -22.4762, -29.1468, 0.83", "23.1422, -23.975, -31.2833, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.98178, 0.405271, -16.4649, 1.11", "4.31433, 0.034531, -16.4641, 1.11", "6.2562, -0.505722, -16.4629, 0.83", "8.20613, -1.04822, -16.4618, 0.55", "10.101, -1.57539, -16.4607, 0.55", "11.9126, -2.07942, -16.4596, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-0.808223, 8.26702, 4.65513, 1.11", "-2.31683, 12.7857, 4.72442, 1.11", "-3.6037, 16.6403, 4.78353, 0.55", "-4.47684, 19.2556, 4.82363, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.24177, -5.81648, 2.24513, 1.11", "2.27714, -7.98954, 2.80412, 1.11", "2.86862, -9.35348, 2.87439, 1.11", "3.33639, -10.3292, 2.8148, 0.83", "3.95726, -11.5939, 2.64849, 0.55", "4.65484, -12.9038, 2.42461, 0.28", "5.26649, -14.0416, 2.22604, 1.11", "6.79239, -16.8334, 1.65585, 0.55", "7.52949, -18.2289, 1.19133, 0.55", "8.34704, -20.1537, 0.266001, 0.83", "8.77027, -21.4713, -0.504312, 0.55", "9.13908, -22.6872, -1.3835, 0.83", "9.55163, -24.065, -2.48127, 0.83", "10.4169, -26.9647, -4.77511, 0.55", "11.1653, -29.599, -6.92865, 0.55", "11.4597, -30.7093, -7.84921, 0.55", "12.0613, -33.2484, -9.7917, 0.83", "12.2221, -33.8873, -10.2128, 0.55", "12.6805, -35.5618, -11.0121, 0.83", "13.0858, -37.0527, -11.3349, 0.55", "13.5294, -38.5499, -11.5589, 0.55", "13.9262, -40.2286, -11.7849, 1.11", "14.2168, -41.9959, -11.9827, 1.11", "14.4146, -43.3585, -12.1751, 0.83", "14.6534, -45.124, -12.4712, 0.83", "15.0905, -47.6346, -12.9417, 0.55", "15.5461, -49.5466, -13.3155, 0.55", "15.8478, -50.6716, -13.5403, 0.28", "15.9763, -51.1307, -13.6325, 0.83", "16.4283, -52.5728, -13.9205, 0.55", "16.7794, -53.6042, -14.1848, 0.55", "17.1995, -54.9323, -14.5849, 0.28", "17.5224, -55.9088, -14.9897, 1.11", "17.8504, -56.908, -15.4752, 0.28", "18.075, -57.6075, -15.8451, 0.55", "18.7122, -59.6973, -16.9885, 0.28", "18.8989, -60.3847, -17.3604, 0.83", "19.3241, -61.9847, -18.2454, 0.83", "19.6767, -63.2213, -18.8976, 0.28", "19.7798, -63.6053, -19.0648, 0.55", "20.0017, -64.4852, -19.3465, 0.28", "20.1237, -64.9335, -19.4301, 0.55", "20.4237, -66.1064, -19.589, 0.28", "20.4862, -66.3986, -19.6284, 0.55", "20.7951, -67.9075, -19.8186, 0.28", "20.9768, -68.6613, -19.9207, 0.55", "21.2068, -69.5245, -20.0378, 0.28", "21.6265, -70.9899, -20.2051, 0.83", "22.0884, -72.5607, -20.3594, 0.28", "22.4247, -73.6807, -20.4834, 0.55", "22.757, -74.7554, -20.6133, 0.28", "23.0496, -75.8167, -20.7408, 0.83", "23.3865, -77.1358, -20.8885, 0.28", "23.6356, -78.1114, -20.9804, 0.55", "24.0667, -79.8881, -21.1035, 0.28", "24.2007, -80.5268, -21.1396, 0.83", "24.4104, -81.6774, -21.1893, 0.83", "24.7001, -83.2361, -21.245, 0.83", "25.0208, -84.9675, -21.2875, 0.28", "25.2292, -85.8068, -21.3375, 0.83", "25.6722, -87.0479, -21.4452, 0.28", "25.8814, -87.4191, -21.5282, 0.55", "26.5151, -88.2557, -21.8154, 0.28", "27.0393, -88.8192, -22.2058, 0.55", "28.4508, -90.1904, -23.486, 0.28", "29.3222, -91.0368, -24.5029, 0.83", "31.0064, -92.6986, -26.7583, 0.28", "31.353, -93.0916, -27.3151, 0.55", "33.1531, -95.489, -30.7189, 0.28", "33.2839, -95.7265, -31.0483, 0.55", "34.025, -97.8411, -33.8403, 0.28", "34.1142, -98.284, -34.3465, 0.55", "34.2396, -99.5873, -35.5864, 0.28", "34.3058, -100.516, -36.3109, 0.83", "34.4797, -103.461, -38.0159, 0.28", "34.4964, -103.652, -38.1067, 0.55", "34.8793, -107.245, -39.3946, 0.28", "34.9302, -107.661, -39.5368, 0.83", "35.2017, -109.376, -40.0561, 0.28", "35.3116, -110.04, -40.2278, 0.83", "35.7653, -112.244, -40.5234, 0.28", "35.9067, -112.915, -40.6073, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "3.45178, 1.14327, -6.46487, 0.83", "6.22217, 1.44582, -6.41343, 0.83", "9.22411, 1.77365, -6.3577, 0.83", "12.4949, 2.13084, -6.29697, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.64822, 0.231021, 13.8451, 0.83", "-5.50038, -1.20216, 13.8451, 0.83", "-6.57901, -3.01621, 13.8451, 0.83", "-7.3148, -4.25365, 13.8451, 0.83", "-9.0199, -7.12129, 13.8451, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.04822, -6.79023, -6.38487, 2.49", "-2.89802, -9.77658, -6.38487, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000363863218
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.69354, -5.05747, -4.0979, 0.55", "14.7817, -16.1583, -4.0979, 0.55", "24.8699, -27.2591, -4.0979, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-3.77015, -4.23207, -28.7735, 1.11", "-6.26991, 0.269053, -16.4762, 1.11", "-6.72, 1.14111, -14.9253, 0.55", "-7.11016, 1.91209, -13.9744, 0.83", "-7.81586, 3.22964, -13.6114, 0.55", "-8.86218, 4.95047, -13.935, 0.55", "-10.3655, 7.22198, -14.6031, 1.11", "-11.8338, 9.41374, -15.8957, 0.83", "-14.1467, 13.4786, -18.9418, 0.55", "-14.5793, 14.4734, -20.0159, 0.55", "-14.7792, 15.1215, -20.9595, 0.55", "-14.982, 15.9934, -22.4035, 0.55", "-15.197, 17.3423, -24.6575, 0.55", "-15.3898, 19.3322, -27.7464, 0.55", "-15.6215, 22.4646, -32.2834, 0.83", "-15.88, 25.4212, -36.4265, 0.28", "-15.9914, 26.5307, -37.9227, 0.83", "-16.3682, 29.1345, -41.3795, 0.55", "-16.5008, 29.6526, -42.0349, 0.55", "-17.3891, 31.817, -44.8334, 1.11", "-18.2091, 33.6447, -47.2188, 0.28", "-18.5984, 34.4783, -48.4236, 0.55", "-18.9021, 35.133, -49.4296, 0.28", "-19.4005, 36.292, -51.3686, 0.55", "-20.7836, 39.9871, -57.337, 0.28", "-21.3658, 41.7934, -60.1332, 0.83", "-21.9413, 43.7987, -63.1177, 0.28", "-22.2582, 44.9521, -64.716, 0.83", "-23.384, 49.2096, -70.0749, 0.28", "-23.8479, 50.9567, -71.9295, 0.28", "-24.5402, 53.1818, -73.8069, 1.38", "-25.5376, 55.8286, -75.8164, 0.55", "-26.2942, 57.6371, -77.0848, 0.28", "-27.0648, 59.2735, -78.1245, 0.55", "-28.5323, 62.0817, -79.468, 0.28", "-29.3738, 63.7078, -80.1268, 0.83", "-30.4291, 65.8237, -80.7593, 0.28", "-30.7827, 66.5835, -80.918, 0.55", "-31.3596, 67.9628, -81.1497, 0.28", "-31.6686, 68.8433, -81.2515, 0.83", "-32.9424, 73.075, -81.6134, 0.28", "-33.1328, 73.9113, -81.6616, 0.83", "-33.5783, 76.7425, -81.7899, 0.28", "-33.6889, 77.881, -81.8785, 0.55", "-33.8149, 79.9493, -82.1258, 0.28", "-33.8509, 80.6039, -82.2222, 0.55", "-33.987, 83.0943, -82.5823, 0.28", "-34.0258, 84.1645, -82.7517, 0.55", "-34.0408, 85.34, -82.9592, 0.28", "-34.0989, 87.0523, -83.26, 0.55", "-34.4585, 90.7388, -83.8414, 0.28", "-34.7116, 92.322, -84.0504, 0.83" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-3.77015, -4.23207, -28.7735, 0.55", "-5.89855, -4.74038, -30.3967, 0.55", "-9.4159, -5.92404, -32.8511, 0.55", "-10.6601, -6.40166, -33.6731, 0.83", "-11.9129, -6.89592, -34.4427, 0.28", "-12.5803, -7.14694, -34.8247, 0.55", "-14.8708, -7.99487, -36.0617, 0.28", "-16.2135, -8.50037, -36.6975, 0.55", "-17.9519, -9.28215, -37.3777, 0.28", "-18.9985, -9.71992, -37.7412, 0.55", "-20.8712, -10.4009, -38.3724, 0.28", "-21.553, -10.6118, -38.5876, 0.55", "-22.6494, -10.8772, -38.8935, 0.28", "-23.9434, -11.2378, -39.2422, 0.55", "-26.0256, -11.9049, -39.7303, 0.28", "-26.7366, -12.1638, -39.9388, 0.55", "-28.2236, -12.7392, -40.3987, 0.28", "-28.8361, -12.9742, -40.5963, 0.55", "-32.0353, -14.2458, -41.7626, 0.28", "-33.0666, -14.668, -42.1756, 0.55", "-35.9013, -15.8928, -43.5384, 0.28", "-37.4311, -16.6007, -44.3784, 0.28", "-38.1716, -16.9576, -44.9006, 0.55", "-40.351, -17.968, -46.5993, 0.28", "-40.8933, -18.2126, -47.0525, 0.55", "-43.4214, -19.3534, -49.3593, 0.28", "-44.47, -19.8339, -50.3382, 0.55", "-47.4725, -21.2261, -53.2839, 0.28", "-48.939, -21.8992, -54.7359, 0.28", "-49.7418, -22.2624, -55.516, 0.55", "-52.9149, -23.6462, -58.7207, 0.28", "-53.844, -24.0452, -59.6419, 0.28", "-54.1617, -24.1965, -59.9486, 0.55", "-55.264, -24.8102, -60.9632, 0.28", "-55.9854, -25.2406, -61.6447, 0.55", "-59.349, -27.3482, -64.7026, 0.28", "-60.3723, -28.0719, -65.5872, 0.55", "-63.081, -30.0354, -67.7824, 0.28", "-63.9669, -30.697, -68.4465, 0.55", "-65.9578, -32.2525, -69.8568, 0.28", "-66.7632, -32.9252, -70.4005, 0.55", "-68.6231, -34.5898, -71.4736, 0.28", "-70.1123, -35.9251, -72.3494, 0.28", "-70.7243, -36.4553, -72.7021, 0.55", "-71.7645, -37.4136, -73.3123, 0.28", "-72.4894, -38.1675, -73.6979, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "23.1422, -23.975, -31.2833, 0.55", "24.0911, -24.8404, -32.9387, 0.55", "24.9417, -25.5087, -34.1426, 0.55", "27.9502, -28.0166, -39.1458, 0.55", "30.6622, -30.3539, -43.3275, 0.55", "31.8128, -31.4083, -45.2017, 0.55", "32.9245, -32.4671, -46.9643, 0.55", "35.4769, -35.0259, -51.1218, 0.55", "38.4071, -38.1713, -55.8585, 0.28", "41.0261, -41.0866, -59.6922, 0.83", "45.1334, -45.7795, -65.0991, 0.55", "46.6841, -47.5612, -66.9602, 0.55", "49.1984, -50.7068, -69.6179, 0.83", "50.4725, -52.3539, -70.685, 0.83", "51.6709, -53.8914, -71.4603, 0.55", "54.3478, -57.3529, -73.1247, 1.11", "56.9625, -60.7796, -74.1685, 0.55", "58.7457, -63.0847, -74.7517, 0.83", "59.6045, -64.1754, -74.9675, 0.83", "61.8647, -67.0683, -75.6478, 0.55", "63.6931, -69.3799, -76.3096, 0.28", "65.3556, -71.2732, -76.9463, 0.83", "66.8368, -72.8379, -77.4953, 0.28", "68.2532, -74.163, -77.9949, 0.55", "71.6772, -77.132, -79.0153, 0.28", "72.937, -78.1454, -79.2783, 0.83", "75.3444, -80.0852, -79.6527, 0.28", "76.6513, -81.108, -79.8182, 0.55", "78.8423, -82.7871, -80.0151, 0.28", "80.849, -84.2198, -80.0508, 1.38", "84.0507, -86.3528, -79.9268, 0.55", "85.4846, -87.3073, -79.8266, 0.55", "86.9602, -88.2723, -79.6847, 0.83", "88.7098, -89.3881, -79.4674, 0.83", "89.7644, -90.0897, -79.2619, 0.28", "91.3224, -91.1557, -78.9124, 0.55", "93.1947, -92.5775, -78.4584, 0.28", "93.8589, -93.1325, -78.2938, 0.28", "94.8579, -94.0698, -78.094, 0.55", "96.6043, -95.7898, -77.8747, 0.28", "98.0814, -97.1982, -77.8724, 0.83", "99.5692, -98.4954, -78.0013, 0.28", "100.508, -99.2302, -78.2003, 0.83", "102.399, -100.577, -78.6508, 0.28", "103.123, -101.029, -78.827, 0.83", "105.716, -102.491, -79.4529, 0.28", "107.832, -103.634, -79.9211, 0.83", "110.392, -104.908, -80.4759, 0.55", "113.153, -106.246, -81.0493, 0.83", "115.404, -107.398, -81.486, 0.83", "116.598, -108.066, -81.6921, 0.83", "119.855, -109.975, -82.2872, 0.28", "121.499, -110.915, -82.5931, 0.28", "122.56, -111.477, -82.8123, 0.83", "125.307, -112.783, -84.0365, 0.28", "126.683, -113.423, -84.9307, 0.83", "128.724, -114.358, -86.6195, 0.55", "130.454, -115.148, -88.3378, 0.55", "132.366, -116.08, -90.4047, 0.83", "136.807, -118.171, -95.1283, 0.28", "138.269, -118.762, -96.5, 0.55", "138.685, -118.93, -96.8226, 0.55", "139.552, -119.358, -97.3237, 0.55", "141.105, -120.242, -98.069, 0.83", "143.535, -121.609, -98.9552, 0.55", "146.586, -123.229, -99.7532, 0.55", "149.284, -124.553, -100.489, 0.28", "152.013, -125.807, -101.232, 1.11", "156.034, -127.561, -102.435, 0.28", "156.796, -127.88, -102.679, 0.28", "158.225, -128.51, -103.172, 0.55", "160.359, -129.501, -103.921, 0.28", "162.393, -130.428, -104.548, 0.83", "165.546, -131.666, -105.337, 0.28", "166.331, -131.978, -105.47, 0.55", "167.39, -132.41, -105.641, 0.28", "168.619, -132.972, -105.814, 0.55", "170.88, -134.188, -106.063, 0.28", "173.182, -135.67, -106.195, 0.83", "174.536, -136.588, -106.204, 0.28", "176.015, -137.639, -106.181, 0.83", "178.672, -139.595, -106.097, 0.28", "179.75, -140.502, -106.035, 0.83", "182.78, -143.342, -105.778, 0.28", "183.382, -143.961, -105.724, 0.55", "186.092, -146.71, -105.478, 0.28", "186.855, -147.484, -105.551, 0.55", "188.493, -149.109, -106.113, 0.28", "189.311, -149.932, -106.49, 0.55", "190.907, -151.609, -107.583, 0.28", "191.919, -152.728, -108.466, 0.55", "195.576, -156.807, -113.1, 0.28", "196.208, -157.485, -114.051, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "23.1422, -23.975, -31.2833, 0.55", "25.2851, -24.2325, -33.4953, 0.55", "26.4035, -24.5483, -34.8394, 0.55", "27.1249, -24.7427, -35.7093, 0.55", "28.5889, -25.0571, -37.4194, 0.55", "29.7056, -25.202, -38.6074, 0.83", "34.2021, -25.3002, -43.8068, 0.55", "35.3834, -25.1659, -45.2662, 0.55", "36.2098, -25.0158, -46.3179, 0.55", "36.8939, -24.8672, -47.1987, 0.55", "38.1579, -24.5708, -48.773, 0.55", "41.4374, -23.7199, -52.4994, 1.11", "42.8063, -23.2953, -53.845, 0.55", "43.8091, -22.9413, -54.9432, 1.11", "45.3022, -22.4203, -56.6611, 0.55", "46.131, -22.1318, -57.6973, 0.55", "48.0421, -21.4844, -60.187, 1.11", "50.3731, -20.5824, -63.7757, 0.55", "52.1311, -19.7905, -66.82, 0.28", "52.5705, -19.5517, -67.644, 1.11", "54.8483, -18.1525, -72.1023, 0.55", "55.7794, -17.4708, -74.0488, 0.83", "59.7573, -14.0593, -82.759, 0.28", "60.189, -13.6344, -83.7758, 0.83", "61.0854, -12.6478, -85.9301, 0.28", "61.5952, -12.0007, -87.1743, 0.83", "62.3605, -10.8008, -89.0297, 0.28", "62.627, -10.3107, -89.6566, 0.55", "64.8999, -5.59514, -93.9857, 0.28", "65.1617, -5.00996, -94.5551, 0.55", "65.5504, -4.0576, -95.4836, 0.28", "65.6583, -3.68185, -95.8785, 0.55", "65.7976, -3.06359, -96.5104, 0.28", "65.9488, -2.19883, -97.3932, 0.55", "66.2816, 0.766464, -100.348, 0.28", "66.3698, 1.70264, -101.361, 1.11", "66.7697, 6.67203, -107.181, 0.28", "66.8418, 7.55443, -108.272, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "11.9126, -2.07942, -16.4596, 0.55", "12.7221, -1.49216, -18.4266, 0.55", "16.3181, 0.549189, -27.2565, 0.55", "17.5215, 1.08407, -30.2091, 0.55", "18.0996, 1.24422, -31.9254, 0.55", "19.8675, 1.54271, -37.5636, 0.83", "21.4415, 1.65819, -43.649, 0.55", "22.3048, 1.54019, -47.4213, 0.28", "22.7099, 1.42251, -49.5069, 1.11", "24.719, 0.693172, -60.8086, 0.28", "25.0902, 0.562233, -62.9201, 0.83", "27.5856, -0.1683, -76.7627, 0.55", "28.4821, -0.390621, -81.4147, 0.83", "30.5181, -0.658983, -91.494, 0.28", "31.0584, -0.685134, -93.917, 1.38", "32.6225, -0.639453, -99.7886, 0.28", "32.9131, -0.624627, -100.756, 0.55", "34.318, -0.513568, -104.198, 0.28", "34.5604, -0.499192, -104.689, 0.28", "35.448, -0.586108, -106.063, 0.28", "35.7423, -0.689544, -106.601, 0.55", "36.2443, -0.959459, -107.595, 0.28", "36.5248, -1.12854, -108.13, 0.55", "38.4603, -2.36065, -111.727, 0.28", "39.1857, -2.82257, -113.091, 1.11", "43.7754, -5.72742, -121.986, 0.28", "44.0902, -5.9266, -122.609, 0.55", "47.1813, -7.87412, -128.806, 0.28", "47.4383, -8.04463, -129.336, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "11.9126, -2.07942, -16.4596, 1.38", "12.1144, -1.04328, -17.1753, 1.38", "12.9628, 3.31405, -20.1851, 0.83", "13.4398, 5.76414, -21.8775, 0.83", "13.8581, 7.91262, -23.3615, 0.83", "14.2542, 9.94696, -24.7667, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-4.47684, 19.2556, 4.82363, 0.55", "-3.83472, 21.8735, 6.72042, 0.55", "-3.52858, 23.1216, 7.62477, 0.55", "-3.11697, 24.7997, 8.84066, 0.55", "-2.39053, 27.7613, 10.9866, 0.55", "-1.46216, 31.5462, 13.729, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.47684, 19.2556, 4.82363, 0.55", "-5.07432, 21.0194, 4.89419, 0.55", "-5.2981, 21.618, 4.91818, 0.83", "-6.02613, 23.4265, 4.99873, 0.55", "-6.66109, 24.9595, 5.06957, 0.83", "-7.28777, 26.4676, 5.1769, 0.55", "-8.0468, 28.3504, 5.32904, 0.55", "-8.46922, 29.3841, 5.42488, 0.83", "-9.16962, 31.1946, 5.68146, 0.55", "-9.48976, 32.0591, 5.84366, 0.83", "-10.0417, 33.5361, 6.20149, 0.55", "-10.3288, 34.3908, 6.43651, 0.55", "-10.8881, 36.1995, 6.94889, 0.55", "-11.3207, 37.6917, 7.31919, 0.83", "-11.6342, 38.7768, 7.56245, 0.55", "-11.9657, 39.873, 7.77102, 0.83", "-12.6729, 42.0372, 8.10209, 0.83", "-13.2742, 43.6955, 8.34784, 0.55", "-14.0784, 45.8079, 8.61722, 0.83", "-14.6384, 47.1757, 8.74234, 0.55", "-15.2917, 48.6887, 8.88112, 0.28", "-15.8986, 50.0773, 9.00634, 0.55", "-16.3922, 51.2226, 9.10012, 0.28", "-16.6565, 51.849, 9.1519, 0.55", "-16.9863, 52.5891, 9.21594, 0.28", "-17.4068, 53.6541, 9.26181, 0.55", "-17.7771, 54.8459, 9.2797, 0.28", "-17.9113, 55.3437, 9.27973, 0.55", "-18.2703, 56.9162, 9.27389, 0.28", "-18.5483, 58.2894, 9.2812, 0.55", "-18.9707, 60.5427, 9.31425, 0.55", "-19.2769, 62.1847, 9.33354, 0.28", "-19.5344, 63.6954, 9.34267, 0.28", "-19.8436, 65.9836, 9.34214, 1.11", "-19.9999, 67.5821, 9.35946, 0.55", "-20.078, 68.5237, 9.38735, 0.55", "-20.1578, 69.4519, 9.47702, 0.83", "-20.3075, 70.8717, 9.66935, 0.28", "-20.3727, 71.5665, 9.81331, 0.55", "-20.4695, 72.5587, 10.1045, 0.55", "-20.5779, 73.6417, 10.4756, 0.55", "-20.8047, 76.0304, 11.3887, 0.28", "-20.9196, 77.1425, 11.8675, 0.55", "-21.1372, 78.7159, 12.6401, 0.28", "-21.2599, 79.5055, 13.0489, 0.55", "-24.5403, 87.0313, 13.1979, 0.55", "-26.7563, 94.9501, 13.0105, 0.55", "-29.2711, 102.741, 13.7313, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "12.4949, 2.13084, -6.29697, 0.55", "14.8221, 3.18088, -4.5733, 0.55", "16.8549, 4.0264, -3.22437, 0.55", "18.047, 4.46693, -2.55336, 0.83", "20.9111, 5.4042, -1.22368, 0.55", "23.3858, 6.2977, -0.402677, 0.83", "26.3858, 7.53633, 0.369482, 0.55", "27.864, 8.20418, 0.623803, 0.55", "30.5732, 9.47581, 0.837982, 0.55", "34.2547, 11.3687, 0.956151, 0.55", "38.8854, 14.0297, 0.925864, 0.55", "40.8891, 15.3146, 0.921394, 0.83", "43.4903, 17.0663, 1.00001, 0.55", "45.7304, 18.5641, 1.16811, 0.83", "48.0463, 20.1795, 1.40924, 0.55", "49.0267, 20.8358, 1.54596, 0.55", "51.0541, 22.0356, 1.8734, 0.83", "52.8194, 23.0751, 1.98549, 0.28", "53.9535, 23.868, 1.94102, 0.55", "55.9978, 25.5016, 1.73375, 0.28", "57.3176, 26.6716, 1.5422, 0.55", "59.0372, 28.2727, 1.25036, 0.28", "60.0502, 29.2334, 1.09453, 0.55", "62.6567, 31.7479, 0.737617, 0.28", "63.3872, 32.464, 0.671921, 0.83", "65.9723, 34.9256, 0.607381, 0.28", "66.5636, 35.4963, 0.60591, 0.55", "69.5175, 38.198, 0.695133, 0.28", "70.322, 38.8473, 0.715987, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "12.4949, 2.13084, -6.29697, 0.55", "14.0919, 0.437375, -5.75809, 0.55", "14.9036, -0.423431, -5.48417, 0.83", "15.8476, -1.4244, -5.16565, 0.83", "17.9122, -3.61373, -4.46898, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.0199, -7.12129, 13.8451, 0.83", "-12.6556, -6.1828, 13.2422, 0.83", "-15.8935, -5.31678, 12.739, 0.83", "-17.6302, -4.87089, 12.4938, 0.83", "-22.2344, -3.81458, 11.9328, 0.55", "-26.0038, -2.96923, 11.501, 0.83", "-29.1192, -2.20162, 11.1657, 0.55", "-32.3488, -1.46834, 10.9459, 0.55", "-34.9349, -0.831579, 10.8773, 0.83", "-37.4232, -0.0258549, 10.9035, 0.55", "-39.053, 0.676113, 11.0121, 0.55", "-41.8644, 2.1088, 11.3199, 0.55", "-45.1518, 3.92348, 11.7353, 0.55", "-49.0583, 5.92015, 12.3422, 0.83", "-52.0546, 7.27899, 13.045, 0.83", "-54.9789, 8.50103, 13.8804, 0.55", "-55.7182, 8.76915, 14.1215, 0.55", "-59.0537, 9.84903, 15.2746, 0.55", "-63.1364, 11.0917, 16.6786, 0.55", "-68.2975, 12.2151, 18.5572, 0.83", "-70.7278, 12.4921, 19.4731, 0.28", "-71.9426, 12.4994, 19.9445, 0.55", "-74.5976, 12.1547, 21.1002, 0.28", "-75.9499, 11.6175, 21.7857, 0.55", "-78.1699, 10.0032, 22.9115, 0.28", "-80.2468, 7.786, 23.9338, 0.55", "-81.6806, 5.94229, 24.7207, 0.55", "-83.4315, 3.50627, 25.6621, 0.55", "-85.2299, 0.75315, 26.6427, 0.28", "-85.8653, -0.330114, 26.9975, 0.55", "-88.1211, -4.60726, 28.2593, 0.28", "-89.3025, -7.04101, 28.9452, 0.55", "-90.5673, -10.1112, 29.7764, 0.55", "-91.7089, -13.2877, 30.5777, 0.55", "-92.8866, -17.0688, 31.4687, 0.55", "-93.4823, -19.1386, 31.9244, 0.83", "-94.8068, -23.6445, 32.8303, 0.55", "-96.158, -27.5875, 33.5992, 0.28", "-97.7062, -31.3415, 34.3274, 0.55", "-99.6292, -34.9314, 34.9652, 0.55", "-101.227, -37.2059, 35.3397, 0.55", "-104.241, -40.9676, 35.9075, 0.28", "-105.498, -42.3003, 36.076, 0.83", "-107.75, -44.2951, 36.2713, 0.55", "-109.926, -45.9399, 36.4369, 0.55", "-112.48, -47.4649, 36.6039, 0.83", "-124.753, -50.9266, 38.1372, 0.83", "-136.555, -56.0077, 38.284, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-9.0199, -7.12129, 13.8451, 0.55", "-9.54241, -8.84356, 13.9863, 0.55", "-10.2286, -10.9826, 14.2262, 0.55", "-11.0854, -13.4316, 14.5401, 0.55", "-11.8142, -15.2082, 14.775, 0.83", "-12.5568, -16.8447, 15.0023, 0.83", "-13.8956, -19.6169, 15.3947, 0.83", "-14.755, -21.1183, 15.6271, 0.83", "-15.7597, -22.5089, 15.8744, 0.55", "-16.9769, -24.0998, 16.1903, 0.55", "-17.9764, -25.2977, 16.4516, 0.55", "-18.832, -26.1551, 16.6445, 0.83", "-20.0749, -27.1325, 16.8856, 0.55", "-21.9015, -28.4155, 17.162, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.89802, -9.77658, -6.38487, 0.83", "-6.13226, -12.2601, -6.81879, 0.83", "-8.50897, -14.0852, -7.13766, 0.83", "-11.7379, -16.5646, -7.57088, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-2.89802, -9.77658, -6.38487, 1.66", "-2.00933, -13.0862, -6.7308, 1.66", "-1.10602, -16.4502, -7.08242, 1.66", "-0.201752, -19.8179, -7.43442, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "24.8699, -27.2591, -4.0979, 0.55", "34.9581, -38.36, -4.0979, 0.55", "45.0463, -49.4608, -4.0979, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "14.2542, 9.94696, -24.7667, 0.55", "17.3706, 9.68107, -24.7918, 0.55", "18.1219, 9.57648, -24.8725, 0.83", "19.6035, 9.3171, -25.0918, 0.28", "20.9412, 9.04879, -25.285, 0.55", "24.9858, 8.22145, -25.7334, 0.28", "26.3626, 7.90975, -25.807, 0.55", "28.8112, 7.1854, -25.918, 0.28", "30.0994, 6.68918, -25.977, 0.55", "32.6409, 5.48194, -26.0972, 0.28", "34.0749, 4.69339, -26.1604, 0.55", "36.1701, 3.28742, -26.2907, 0.55", "38.3421, 1.6846, -26.4476, 0.28", "41.1935, -0.545577, -26.6231, 0.28", "42.3766, -1.51424, -26.7565, 0.28", "42.9428, -1.99475, -26.8456, 0.55", "45.2338, -3.99794, -27.3316, 0.28", "45.5974, -4.3112, -27.4214, 0.55", "47.6997, -6.04776, -27.7777, 0.28", "48.8351, -6.79052, -27.9098, 0.28", "49.8257, -7.38601, -27.9946, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "14.2542, 9.94696, -24.7667, 0.55", "14.1004, 12.078, -25.0647, 0.55", "14.0856, 13.507, -25.4418, 0.28", "14.1099, 14.4833, -25.7362, 0.55", "14.15, 16.0238, -26.2095, 0.28", "14.1632, 17.1531, -26.5985, 0.55", "14.1181, 19.6776, -27.788, 0.55", "14.0682, 20.9144, -28.5562, 0.55", "14.0597, 21.1415, -28.7416, 0.83", "14.0231, 22.0362, -29.5543, 0.55", "13.9855, 23.3533, -30.8034, 1.11", "13.9064, 25.893, -33.165, 0.28", "13.8785, 26.6267, -33.8186, 0.83", "13.8058, 29.7531, -36.5945, 0.28", "13.8007, 30.7489, -37.4328, 0.83", "13.8812, 33.0928, -39.2714, 0.28", "13.9031, 33.3724, -39.4504, 0.55", "14.0506, 34.6777, -40.0694, 0.28", "14.119, 35.3434, -40.3118, 0.55", "14.1913, 36.3383, -40.5394, 0.28", "14.2476, 37.1839, -40.7035, 0.83", "14.4202, 40.2809, -41.1556, 0.28", "14.4677, 41.2435, -41.3083, 0.83", "14.5313, 42.5165, -41.5378, 0.28", "14.5806, 43.5704, -41.7558, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.46216, 31.5462, 13.729, 0.55", "0.165961, 31.9147, 14.2714, 0.55", "1.6349, 32.1471, 14.7022, 0.83", "3.68831, 32.5372, 15.3417, 0.55", "5.63197, 33.0436, 15.9559, 0.55", "8.03284, 33.7521, 16.7763, 0.55", "10.3405, 34.543, 17.5621, 0.55", "12.7158, 35.4764, 18.3624, 0.55", "14.7063, 36.3177, 19.0435, 0.55", "16.8965, 37.2727, 19.7712, 0.83", "19.5145, 38.556, 20.575, 0.55", "21.7313, 39.8047, 21.2851, 0.55", "22.4834, 40.2801, 21.5527, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.46216, 31.5462, 13.729, 0.55", "-1.28677, 33.3427, 13.7395, 0.55", "-1.20683, 34.6237, 13.7418, 0.55", "-1.16407, 36.5407, 13.7443, 0.55", "-1.09816, 37.8148, 13.7537, 0.83", "-1.04966, 38.8881, 13.7726, 0.83", "-0.880258, 41.2119, 13.664, 0.55", "-0.824874, 41.8726, 13.5958, 0.83", "-0.649396, 43.5939, 13.3551, 0.55", "-0.320141, 46.1904, 12.9452, 0.55", "-0.107678, 47.6133, 12.7073, 0.83", "0.381772, 50.7336, 12.1859, 0.55", "0.55668, 51.9739, 12.011, 0.55", "0.639423, 52.6763, 11.9385, 0.83", "0.702633, 53.742, 11.8686, 0.55", "0.672375, 54.6098, 11.8641, 0.55", "0.590281, 55.9075, 11.956, 0.83", "0.193858, 58.6857, 12.3194, 0.28", "0.0651531, 59.3597, 12.3929, 0.83", "-0.161368, 60.2765, 12.4364, 0.55", "-0.435199, 61.1413, 12.4271, 0.83", "-1.13335, 63.1527, 12.3409, 0.55", "-1.67533, 64.5766, 12.1739, 0.55", "-2.08182, 65.5338, 11.986, 0.83", "-2.70327, 66.9687, 11.5712, 0.55", "-3.04888, 67.7422, 11.288, 0.55", "-3.56096, 68.8176, 10.7633, 0.83", "-4.15609, 69.9454, 10.1124, 0.28", "-4.33893, 70.3181, 9.89336, 0.55", "-5.0184, 71.6095, 9.18497, 0.28", "-5.3614, 72.2355, 8.90778, 0.55", "-6.13616, 73.5433, 8.41129, 0.28", "-6.69965, 74.4263, 8.11611, 0.55", "-7.79217, 76.0645, 7.75687, 0.28", "-8.71379, 77.3601, 7.62789, 0.83", "-9.70321, 78.6606, 7.68052, 0.28", "-10.1082, 79.1717, 7.84954, 0.55", "-10.9212, 80.1555, 8.44326, 0.28", "-11.5963, 81.042, 9.11856, 0.55", "-12.5285, 82.3791, 10.3031, 0.28", "-12.8147, 82.8051, 10.7194, 0.55", "-14.5978, 85.4537, 13.5985, 0.28", "-14.6764, 85.5758, 13.7394, 0.55", "-15.4939, 86.9292, 15.4324, 0.28", "-15.7463, 87.4446, 16.0258, 0.55", "-17.332, 94.8416, 16.748, 0.55", "-19.4036, 102.146, 16.5856, 0.55", "-21.9397, 109.277, 16.1032, 0.55", "-23.5823, 116.541, 14.6201, 0.55", "-24.4054, 124.107, 14.6943, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "17.9122, -3.61373, -4.46898, 0.55", "21.1524, -5.97462, -3.88519, 0.55", "23.4684, -7.66208, -3.46793, 0.55", "25.3164, -9.00857, -3.13498, 0.55", "26.2875, -9.71615, -2.96001, 0.55", "29.1141, -11.7757, -2.45074, 0.83" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "17.9122, -3.61373, -4.46898, 0.55", "19.3895, -4.31387, -4.66293, 0.55", "20.7857, -4.90662, -4.81261, 0.55", "21.7575, -5.32752, -4.89168, 0.83", "23.7162, -6.18184, -5.00916, 0.55", "25.1015, -6.81175, -5.08806, 0.83", "26.7905, -7.52458, -5.16359, 0.28", "27.7519, -7.86116, -5.26881, 0.55", "30.0397, -8.55325, -5.64861, 0.28", "31.7607, -8.88563, -6.19539, 0.55", "33.2039, -9.06689, -6.83446, 0.55", "35.3071, -9.27036, -7.92722, 0.55", "38.6232, -9.4535, -9.80985, 0.28", "40.3949, -9.48684, -10.836, 0.83", "44.9804, -9.30685, -13.4598, 0.55", "46.6944, -9.17596, -14.3565, 0.55", "48.6329, -8.97278, -15.2256, 0.83", "49.6252, -8.8735, -15.5657, 0.83", "51.8503, -8.63149, -15.9429, 0.28", "53.5106, -8.39252, -16.1033, 0.83", "55.4392, -8.07444, -16.0741, 0.28", "56.5327, -7.81068, -16.1005, 0.55", "58.2224, -7.34881, -16.2396, 0.28", "59.2844, -7.04335, -16.436, 0.83", "61.3013, -6.39953, -17.0216, 0.28", "61.9334, -6.1846, -17.3134, 0.55", "63.5707, -5.59022, -18.2444, 0.28", "64.4593, -5.23685, -18.8256, 0.83", "66.5994, -4.32236, -20.3219, 0.28", "67.4865, -3.94159, -20.9572, 0.83", "70.8173, -2.50804, -23.3174, 0.28", "71.0856, -2.39295, -23.5128, 0.55", "74.6766, -0.811079, -26.1774, 0.28", "75.1286, -0.594392, -26.5302, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-21.9015, -28.4155, 17.162, 0.55", "-24.8076, -29.3482, 17.6445, 0.55", "-26.6723, -29.9457, 17.971, 0.55", "-27.495, -30.2302, 18.1225, 0.55", "-30.4998, -31.2439, 18.6329, 0.55", "-31.5636, -31.6383, 18.8013, 0.55", "-32.8469, -32.157, 19.0013, 0.83", "-34.8931, -33.1054, 19.2732, 0.55", "-35.6974, -33.5205, 19.3837, 0.55", "-37.1789, -34.3367, 19.6054, 0.55", "-38.6038, -35.1231, 19.7824, 0.55", "-39.9076, -35.793, 19.867, 0.55", "-40.9611, -36.3343, 19.8855, 0.55", "-42.5013, -37.0547, 19.8508, 0.55", "-43.7544, -37.6062, 19.7771, 0.83", "-46.1586, -38.5644, 19.697, 0.55", "-48.0851, -39.265, 19.6267, 0.55", "-49.2854, -39.6641, 19.5736, 0.55", "-51.0028, -40.2092, 19.433, 0.55", "-53.4198, -40.9208, 19.1595, 0.83", "-55.7085, -41.5393, 18.828, 0.55", "-57.5433, -42.0235, 18.546, 0.55", "-60.0578, -42.6308, 18.1156, 0.55", "-62.1907, -43.0353, 17.6755, 0.55", "-63.4591, -43.2078, 17.3713, 0.83", "-64.9918, -43.2986, 16.9651, 0.55", "-65.8427, -43.3174, 16.7125, 0.55", "-67.246, -43.2084, 16.3917, 0.83", "-68.5024, -43.0735, 16.207, 0.83", "-70.039, -42.8502, 16.0904, 0.28", "-70.6231, -42.7516, 16.0645, 0.28", "-71.8003, -42.5508, 16.0604, 0.55", "-74.3324, -42.0286, 16.0991, 0.28", "-75.3226, -41.813, 16.1618, 0.83", "-81.939, -44.5175, 15.7107, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-21.9015, -28.4155, 17.162, 0.83", "-23.0926, -31.7812, 18.466, 0.83", "-23.9016, -33.9144, 19.2292, 0.83", "-25.1585, -37.6177, 20.4268, 0.55", "-25.5257, -38.9902, 20.8404, 0.55", "-25.6357, -39.5053, 20.9916, 0.83", "-26.0647, -41.7288, 21.6324, 0.55", "-26.3899, -44.1358, 22.2394, 0.55", "-26.6912, -47.0006, 22.9372, 0.55", "-26.8009, -49.4734, 23.4977, 0.55", "-26.8338, -51.8854, 24.0066, 0.83", "-26.7887, -54.0371, 24.3167, 0.83", "-26.7713, -55.2713, 24.3951, 0.83", "-26.7783, -57.4252, 24.3982, 0.83", "-26.8371, -58.3849, 24.3325, 0.55", "-26.9871, -59.5733, 24.1951, 0.83", "-27.5049, -63.6277, 23.5614, 0.55", "-27.8676, -66.443, 23.0805, 0.55", "-28.0776, -68.2051, 22.7747, 0.83", "-28.3053, -70.0526, 22.4883, 0.83", "-28.7741, -73.7214, 22.0608, 0.83", "-29.2021, -76.9292, 21.7976, 0.55", "-29.382, -78.2548, 21.763, 1.11", "-29.6192, -80.5474, 21.785, 0.83", "-30.0355, -84.3743, 21.9482, 0.55", "-30.2954, -86.5673, 22.1562, 0.55", "-30.4112, -87.3801, 22.2914, 0.55", "-30.6947, -88.7811, 22.637, 0.83", "-30.9938, -89.8743, 23.0842, 0.83", "-31.7602, -91.9766, 24.3025, 0.55", "-32.1365, -92.8908, 24.9786, 0.83", "-32.627, -94.0113, 25.9079, 0.55", "-32.8295, -94.5341, 26.3595, 0.83", "-34.0504, -98.0785, 29.3892, 0.55", "-34.5119, -99.6016, 30.6094, 0.28", "-34.6723, -100.265, 31.0512, 0.55", "-34.9775, -101.784, 31.8129, 0.28", "-35.3005, -103.749, 32.54, 0.28", "-35.5466, -105.563, 32.9442, 0.83", "-35.9687, -108.835, 33.1732, 0.28", "-36.3631, -111.952, 33.2603, 0.55", "-36.648, -114.485, 33.2788, 0.28", "-36.6838, -114.87, 33.2943, 0.55", "-36.9401, -118.234, 33.6114, 0.28", "-37.124, -121.542, 33.9861, 0.55", "-37.1808, -123.646, 34.292, 0.28", "-37.1898, -125.491, 34.6731, 0.55", "-36.9988, -130.408, 35.7325, 0.28", "-36.8219, -133.682, 36.4831, 0.83", "-40.7697, -143.439, 38.0842, 0.83", "-44.8515, -153.204, 39.2099, 0.83", "-49.8537, -162.503, 38.1957, 0.83", "-57.0185, -170.248, 38.2196, 0.83", "-64.5743, -177.56, 37.5693, 0.83", "-72.5183, -184.428, 36.9139, 0.83", "-81.6695, -189.495, 37.6208, 0.83", "-91.3687, -193.309, 38.5668, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.7379, -16.5646, -7.57088, 1.11", "-12.7202, -19.0414, -10.7258, 1.11", "-14.0334, -22.3523, -14.9433, 1.11", "-14.567, -23.6978, -16.6573, 1.38" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.7379, -16.5646, -7.57088, 0.55", "-13.2997, -16.4545, -8.17856, 0.55", "-14.2907, -16.3954, -8.51135, 0.55", "-15.6107, -16.3396, -8.91757, 0.83", "-17.7097, -16.2702, -9.51453, 0.55", "-20.0832, -16.2444, -10.1445, 0.83", "-20.9837, -16.2281, -10.3479, 0.83", "-22.8525, -16.2191, -10.7909, 0.55", "-23.6244, -16.2064, -10.9858, 0.83", "-24.856, -16.1341, -11.311, 0.28", "-26.2001, -16.0411, -11.6405, 1.11", "-28.4024, -15.932, -12.2431, 0.55", "-30.1175, -15.841, -12.9065, 0.83", "-31.6178, -15.7287, -13.6361, 0.28", "-32.3098, -15.7039, -13.9633, 0.55", "-33.56, -15.7304, -14.5732, 0.28", "-35.0559, -15.8804, -15.3069, 0.55", "-37.9042, -16.7314, -16.7707, 0.28", "-38.1192, -16.8367, -16.872, 0.55", "-40.5142, -18.4783, -18.0421, 0.55", "-41.4559, -19.2277, -18.5014, 0.28", "-42.2028, -19.8803, -18.8675, 0.83", "-44.517, -22.0363, -19.9624, 0.28", "-45.4756, -22.9364, -20.4086, 0.83", "-46.9087, -24.1873, -21.2013, 0.55", "-47.7456, -24.8736, -21.9354, 0.55", "-48.6821, -25.5287, -22.7924, 0.83", "-49.7092, -26.1428, -23.7782, 0.28", "-50.3931, -26.4618, -24.4732, 0.55", "-51.6446, -26.9933, -25.8907, 0.55", "-54.8136, -28.3756, -30.0415, 0.28", "-55.884, -28.9254, -31.7098, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.201752, -19.8179, -7.43442, 1.11", "0.71771, -22.8793, -7.12649, 1.11", "1.29778, -24.8106, -6.93224, 1.11", "2.24457, -27.963, -6.61516, 1.11", "3.79972, -33.1409, -6.09435, 1.11", "4.98448, -37.0856, -5.69759, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.201752, -19.8179, -7.43442, 0.83", "1.40657, -21.8154, -8.32093, 0.83", "2.83373, -23.588, -9.10759, 0.83", "3.75491, -24.7321, -9.61535, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "22.4834, 40.2801, 21.5527, 0.55", "22.1716, 42.9226, 22.2933, 0.55", "21.7846, 45.4852, 23.0158, 0.55", "21.6148, 46.6612, 23.3338, 0.83", "21.1408, 49.8254, 24.248, 0.55", "20.7295, 52.5755, 25.037, 0.83", "20.38, 55.7619, 26.069, 0.55", "20.141, 57.9251, 26.8463, 0.55", "19.9661, 59.4373, 27.4108, 0.55", "19.7934, 61.5673, 28.2254, 0.55", "19.6459, 64.1258, 29.2033, 0.55", "19.3793, 68.3143, 30.6493, 0.55", "19.2433, 70.3759, 31.3872, 0.55", "19.135, 71.9705, 31.6569, 0.83", "18.809, 75.1263, 31.6354, 0.55", "18.6231, 77.0447, 31.4244, 0.55", "18.4295, 79.092, 31.0673, 0.55", "18.1996, 81.2801, 30.5813, 0.55", "17.306, 90.9831, 28.3959, 0.83", "17.0031, 94.0763, 27.7304, 0.55", "16.6735, 97.1536, 27.0783, 0.55", "16.4942, 100.152, 26.5632, 0.55", "16.4442, 102.36, 26.2939, 0.55", "16.4648, 103.322, 26.2792, 0.83", "16.6234, 105.158, 26.6059, 0.28", "16.7584, 106.126, 26.7493, 0.55", "17.3423, 110.169, 27.205, 0.28", "17.3947, 110.495, 27.2471, 0.55", "17.9388, 113.697, 27.6087, 0.28", "18.187, 115.056, 27.7653, 0.55", "18.4239, 116.365, 27.9226, 0.28", "18.5018, 116.966, 28.0096, 0.55", "18.5589, 119.433, 28.3749, 0.28", "18.5252, 121.0, 28.5946, 0.55", "19.7099, 131.914, 28.6805, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "22.4834, 40.2801, 21.5527, 0.55", "25.8226, 41.4902, 22.3912, 0.55", "29.6709, 42.9918, 23.475, 0.55", "32.1808, 44.0627, 24.1905, 0.55", "34.6073, 45.2669, 24.9068, 0.55", "36.6555, 46.4049, 25.5026, 0.55", "39.7534, 48.1974, 26.3754, 0.55", "41.5731, 49.421, 26.8906, 0.55", "43.293, 50.6589, 27.3905, 0.55", "45.3457, 52.0449, 27.9717, 0.55", "47.9934, 53.6924, 28.6891, 0.55", "49.1493, 54.3822, 28.9794, 0.55", "50.8894, 55.2741, 29.332, 0.55", "52.9034, 56.2793, 29.7248, 0.55", "54.4377, 56.8795, 30.038, 0.55", "56.7353, 57.4526, 30.4789, 0.55", "67.225, 63.433, 32.599, 0.55", "77.7407, 69.1002, 35.3239, 0.55", "89.3792, 72.4637, 36.8646, 0.55", "101.469, 73.8238, 37.7053, 0.55", "113.028, 77.7796, 37.4299, 0.55", "124.489, 81.8172, 36.1249, 0.55", "136.019, 85.7406, 37.1192, 0.55", "147.494, 89.3586, 39.2293, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "29.1141, -11.7757, -2.45074, 0.55", "31.2972, -13.7652, -2.89516, 0.55", "33.2834, -15.5317, -3.30627, 0.55", "35.1069, -17.0997, -3.7362, 0.55", "37.8009, -19.3476, -4.42283, 0.83", "40.6465, -21.6693, -5.16927, 0.55", "42.9012, -23.571, -5.78162, 0.55", "43.9937, -24.5069, -6.09874, 0.83", "45.7829, -26.0623, -6.66088, 0.55", "48.3357, -28.2314, -7.48556, 0.55", "50.9382, -30.2725, -8.48663, 0.55", "53.2101, -31.9532, -9.4788, 0.55", "54.7835, -33.0452, -10.1871, 1.11", "57.0, -34.4413, -11.134, 0.55", "58.1849, -35.1544, -11.6276, 0.55", "61.6008, -37.0431, -13.1331, 0.55", "64.024, -38.3149, -14.2346, 0.83", "67.3083, -39.8021, -15.5101, 0.83", "69.3929, -40.7504, -16.1574, 0.55", "70.6123, -41.3176, -16.4512, 0.55", "72.9053, -42.3109, -17.0574, 0.55", "74.4489, -42.9414, -17.4458, 0.83", "77.5738, -44.0104, -18.5425, 0.55", "79.8082, -44.7262, -19.548, 0.55", "81.9432, -45.357, -20.6338, 0.83", "86.3661, -46.5633, -23.0455, 0.28", "87.7679, -46.9852, -23.8912, 0.55", "89.9742, -47.7628, -25.5145, 0.28", "91.7846, -48.5129, -27.0498, 0.28", "93.9004, -49.4405, -28.9146, 0.83", "95.5364, -50.2666, -30.38, 0.55", "96.7623, -50.9572, -31.4296, 0.55", "99.5399, -52.5058, -33.8457, 0.55", "100.739, -53.1918, -34.8735, 0.83", "102.97, -54.5692, -36.9801, 0.55", "103.773, -55.0862, -37.7399, 0.28", "104.024, -55.2289, -37.9573, 0.55", "104.796, -55.5478, -38.4821, 0.28", "105.445, -55.7851, -38.8219, 0.55", "106.872, -56.241, -39.4836, 0.28", "107.855, -56.503, -39.8578, 0.83", "110.861, -57.3249, -40.7831, 0.28", "113.431, -58.09, -41.4774, 0.83", "114.539, -58.5469, -41.7359, 0.28", "115.378, -59.0299, -41.9106, 0.28", "117.065, -60.3106, -42.1221, 0.55", "119.158, -62.2686, -42.253, 0.28", "119.819, -63.0058, -42.2476, 0.55", "122.232, -65.94, -42.1883, 0.28", "123.851, -67.8446, -42.082, 0.28", "125.191, -69.3892, -41.9595, 0.28", "125.555, -69.766, -41.9079, 0.55", "127.257, -71.3155, -41.4726, 0.28", "127.52, -71.5019, -41.3849, 1.11", "130.195, -73.0305, -40.3984, 0.28", "130.76, -73.334, -40.1709, 0.55", "134.214, -75.1781, -38.8047, 0.28", "136.986, -76.6899, -37.63, 0.83", "140.4, -78.5546, -36.0274, 0.28", "141.008, -78.8826, -35.7321, 0.28", "141.168, -78.9647, -35.6491, 0.55", "143.049, -79.9114, -34.6444, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "29.1141, -11.7757, -2.45074, 0.55", "38.964, -7.8272, -3.59618, 0.55", "45.1171, -5.92497, -2.92928, 0.55", "48.2921, -5.42348, -1.81267, 0.55", "50.4293, -5.2528, -0.914177, 0.55", "53.2999, -5.19871, 0.473045, 0.55", "56.5945, -5.14, 2.13027, 0.55", "61.2979, -5.18886, 4.98727, 0.83", "66.6487, -5.29597, 8.14978, 0.55", "69.2725, -5.43035, 9.77857, 0.55", "73.109, -5.63931, 12.079, 0.55", "75.2873, -5.80881, 13.3115, 0.28", "78.8088, -5.94895, 15.1033, 0.55", "82.1407, -5.81369, 16.4118, 0.28", "84.1165, -5.55507, 17.0148, 0.55", "86.2919, -5.23977, 17.6773, 0.28", "87.4189, -5.06419, 17.9636, 0.28", "88.2043, -4.91685, 18.2463, 0.55", "90.6509, -4.52441, 19.369, 0.28", "91.3358, -4.39145, 19.6952, 0.55", "93.361, -3.89561, 20.8049, 0.28", "94.1333, -3.70385, 21.2902, 0.83", "97.8545, -2.68051, 23.6771, 0.55", "101.284, -1.85886, 25.9694, 0.55", "113.289, -1.5268, 33.123, 0.55", "125.531, -0.881369, 39.843, 0.55", "137.665, 2.20221, 46.1122, 0.55", "149.581, 7.16277, 51.6151, 0.55", "161.81, 13.6336, 54.1379, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-14.567, -23.6978, -16.6573, 0.55", "-15.888, -25.6181, -16.493, 0.55", "-17.6803, -28.2074, -16.1384, 0.55", "-19.4254, -30.5492, -15.7052, 0.55", "-20.7672, -32.3654, -15.3368, 0.83", "-23.3358, -35.8868, -14.7005, 0.83", "-24.3947, -37.3273, -14.4532, 0.83", "-26.5716, -40.2949, -13.9891, 1.94", "-28.9209, -43.56, -13.5236, 0.55", "-30.9008, -46.495, -13.0638, 0.83", "-32.3584, -48.903, -12.7492, 0.55", "-33.0526, -50.1529, -12.6094, 0.83", "-34.0721, -52.087, -12.4304, 0.83", "-35.7169, -55.4202, -12.2388, 0.83", "-37.5727, -59.8005, -12.0693, 0.83", "-38.2216, -61.4179, -11.9796, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-14.567, -23.6978, -16.6573, 0.55", "-16.4357, -23.4747, -18.3591, 0.55", "-18.5174, -23.2866, -20.3768, 0.55", "-21.6606, -23.1647, -23.7182, 0.83", "-23.8238, -23.2292, -26.0926, 1.11", "-27.4145, -23.4898, -29.9276, 0.55", "-28.9585, -23.6996, -31.4759, 0.55", "-32.3849, -24.4574, -34.9233, 0.55", "-34.4585, -25.0999, -36.9411, 1.11", "-35.9461, -25.6393, -38.2869, 0.55", "-37.1535, -26.129, -39.2388, 0.55", "-39.4116, -27.1833, -40.6698, 0.55", "-41.7136, -28.2175, -42.0165, 1.11", "-44.513, -29.3415, -43.4146, 0.55", "-45.3453, -29.621, -43.7956, 0.83", "-47.9483, -30.3654, -45.0358, 0.55", "-49.3579, -30.7469, -45.7342, 0.55", "-51.5302, -31.2421, -46.7507, 0.83", "-54.4316, -31.9033, -47.8695, 0.55", "-55.7343, -32.2453, -48.2994, 0.83", "-57.3267, -32.7313, -48.8645, 0.28", "-58.5478, -33.1327, -49.2447, 0.55", "-59.9715, -33.6084, -49.6312, 0.28", "-61.7964, -34.1638, -50.2322, 0.55", "-62.6915, -34.4457, -50.6684, 0.55", "-64.984, -35.1736, -52.0822, 0.28", "-66.6277, -35.6943, -53.3757, 0.55", "-68.2117, -36.2121, -54.8676, 1.66", "-71.8873, -37.5867, -59.292, 0.83", "-73.5072, -38.2321, -61.5861, 0.55", "-74.3808, -38.608, -62.9611, 0.55", "-75.9097, -39.3977, -65.7324, 0.28", "-76.1064, -39.5397, -66.1761, 0.83", "-77.659, -41.1882, -70.5766, 0.28", "-77.7225, -41.2748, -70.7762, 0.55", "-78.1217, -41.678, -71.7859, 0.28", "-78.3925, -41.8915, -72.3899, 0.55", "-79.8557, -42.5715, -74.4361, 0.28", "-81.5598, -43.0474, -76.1552, 0.83", "-83.0889, -43.2615, -77.2701, 0.83", "-85.1871, -43.4516, -78.6213, 0.28", "-86.0349, -43.4675, -79.0652, 0.55", "-90.2113, -43.2498, -80.8921, 0.28", "-90.9007, -43.1577, -81.0895, 0.83", "-94.2195, -42.3846, -81.6254, 0.28", "-94.8744, -42.1647, -81.6974, 0.55", "-97.3266, -41.1349, -81.8927, 0.28", "-99.784, -39.8274, -81.8385, 0.55", "-102.203, -38.1883, -81.5029, 0.28", "-103.811, -37.0195, -81.2155, 0.28", "-106.602, -34.7993, -80.497, 0.28", "-106.961, -34.516, -80.4146, 0.83", "-109.673, -32.5403, -79.9354, 0.28", "-110.553, -31.9311, -79.674, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-55.884, -28.9254, -31.7098, 0.28", "-56.5265, -28.2868, -34.5833, 0.28", "-56.8358, -27.9793, -35.967, 0.55", "-58.0483, -26.7742, -41.3901, 0.28", "-59.3463, -25.484, -47.1957, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-55.884, -28.9254, -31.7098, 0.28", "-56.2182, -30.9847, -32.6142, 0.28", "-56.3222, -31.6254, -32.8956, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.98448, -37.0856, -5.69759, 0.83", "4.57537, -39.9474, -6.11061, 0.83", "4.2596, -42.1438, -6.47057, 0.83", "3.66943, -46.5259, -7.20068, 0.83", "3.39638, -48.9302, -7.61702, 0.83", "3.1255, -51.9104, -8.1117, 0.83", "2.90348, -55.102, -8.62373, 0.83", "2.78361, -57.4622, -8.98758, 0.83", "2.71938, -60.3807, -9.33309, 1.38", "2.69653, -63.3136, -9.43358, 0.83", "2.7161, -67.2801, -9.41833, 0.83", "2.74212, -68.2506, -9.39814, 0.83", "2.86016, -71.7119, -9.31196, 0.83", "2.92333, -73.8252, -9.09922, 0.83", "3.0021, -78.3136, -8.36585, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.98448, -37.0856, -5.69759, 0.83", "6.40317, -38.6263, -6.27896, 0.83", "7.76294, -40.432, -6.77103, 0.55", "8.44131, -41.4897, -6.97632, 0.55", "9.33154, -43.4889, -7.45216, 0.55", "10.6689, -46.4924, -8.167, 0.83", "11.5906, -48.5622, -8.65965, 0.55", "12.3872, -50.796, -9.1338, 0.55", "13.0272, -53.0118, -9.57972, 0.55", "14.3096, -58.8617, -10.7126, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "3.75491, -24.7321, -9.61535, 0.83", "3.34591, -23.5369, -11.0973, 0.83", "3.23898, -22.3269, -13.1213, 0.83", "3.72631, -21.1801, -16.9358, 0.55", "4.01715, -20.8172, -18.7569, 0.55", "4.23239, -20.6007, -19.9838, 0.55", "4.64885, -20.2483, -22.2771, 0.55", "5.17415, -19.926, -24.9112, 0.55", "6.51292, -19.2704, -30.7546, 0.55", "8.64001, -18.3698, -38.8187, 0.83", "10.1818, -17.7607, -44.3875, 0.28", "11.1852, -17.378, -47.9477, 0.55", "11.9199, -17.0776, -50.4551, 0.28", "12.4988, -16.8165, -52.3133, 1.11", "14.1152, -16.0224, -56.7606, 0.28", "14.2438, -15.9683, -57.0711, 0.55", "14.8506, -15.7291, -58.4638, 0.28", "15.0921, -15.6183, -59.0601, 0.55", "15.4602, -15.466, -59.9961, 0.28", "15.6698, -15.3958, -60.5117, 0.83", "18.9811, -14.2885, -68.4334, 0.28", "19.5959, -14.0971, -69.9018, 0.55", "20.783, -13.7225, -72.6404, 0.28", "21.5866, -13.4945, -74.381, 0.55", "22.2799, -13.3348, -75.7704, 0.55", "23.9875, -12.9942, -78.8166, 0.28", "24.4879, -12.9397, -79.6311, 0.55", "25.5609, -12.9537, -81.6556, 0.28", "25.9088, -13.0339, -82.4433, 0.55", "26.7448, -13.4711, -85.0445, 0.28", "27.0184, -13.7115, -86.4457, 1.11", "27.8805, -14.7081, -91.9678, 0.28", "28.0891, -14.9256, -93.5345, 1.11", "28.4734, -15.3008, -96.8677, 0.28", "28.7562, -15.5311, -99.326, 1.38", "30.0151, -16.4853, -110.339, 0.28", "30.1688, -16.5803, -111.702, 1.11", "31.0967, -16.9034, -119.137, 0.28", "31.3603, -16.9466, -121.003, 0.55", "31.9046, -16.9022, -124.218, 0.28", "32.1596, -16.8605, -125.46, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.75491, -24.7321, -9.61535, 0.55", "5.2497, -26.2067, -10.6293, 0.55", "7.90727, -28.8284, -12.4321, 1.11", "11.5522, -32.4242, -14.9046, 0.83", "15.2953, -36.1168, -17.4438, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-38.2216, -61.4179, -11.9796, 0.55", "-41.6702, -61.9257, -11.3958, 0.55", "-45.4664, -62.5555, -10.8943, 0.55", "-48.5706, -63.1437, -10.5463, 0.55", "-50.8439, -63.6558, -10.3632, 0.83", "-52.8481, -64.1627, -10.2556, 0.28", "-53.9072, -64.4546, -10.2107, 0.83", "-56.3206, -65.3093, -10.4217, 0.55", "-57.1694, -65.6617, -10.5754, 0.55", "-58.6692, -66.2302, -11.0726, 0.55", "-60.0935, -66.6704, -11.7147, 0.55", "-61.6766, -67.1101, -12.5216, 0.83", "-64.5279, -67.7544, -14.1377, 0.55", "-65.8463, -67.9846, -14.9072, 0.55", "-69.9353, -68.5371, -17.2213, 0.55", "-71.0923, -68.6486, -17.8284, 0.55", "-72.2952, -68.7359, -18.3932, 0.55", "-75.7788, -68.8866, -19.8282, 0.28", "-76.887, -68.9228, -20.1951, 0.55", "-78.1274, -68.971, -20.5651, 0.28", "-79.4281, -69.0559, -20.8003, 1.11", "-83.2776, -69.3845, -21.5447, 0.55", "-84.8146, -69.4654, -21.8145, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-38.2216, -61.4179, -11.9796, 0.55", "-39.0319, -63.6079, -11.8451, 0.55", "-39.5846, -65.0208, -11.7046, 0.55", "-40.3906, -66.9187, -11.5105, 0.83", "-41.3063, -68.7647, -11.2874, 0.55", "-42.6331, -71.2447, -10.9872, 0.83", "-43.6519, -73.0391, -10.7543, 0.28", "-44.1347, -73.7964, -10.6359, 0.55", "-44.906, -74.8654, -10.4959, 0.28", "-46.1272, -76.4643, -10.3457, 0.83", "-47.4295, -77.9911, -10.3688, 0.28", "-48.1801, -78.8622, -10.4277, 0.55", "-49.4634, -80.396, -10.6032, 0.55", "-50.8284, -82.1865, -10.8813, 0.55", "-52.2303, -84.2711, -11.1486, 0.28", "-53.1811, -85.8715, -11.334, 0.28", "-53.8363, -86.9947, -11.3745, 0.55", "-54.3776, -87.9814, -11.3279, 0.55", "-55.2675, -89.8335, -10.8634, 0.28", "-56.0237, -91.597, -10.0841, 0.28", "-56.2062, -92.0911, -9.8661, 0.55", "-56.6872, -93.7131, -9.17447, 0.28", "-56.86, -94.3794, -8.95475, 0.55", "-57.2663, -96.7375, -8.23328, 0.28", "-57.3732, -97.7322, -7.96015, 0.55", "-57.504, -100.149, -7.4637, 0.28", "-57.5363, -101.576, -7.18858, 0.55", "-57.6518, -103.39, -6.89898, 0.55", "-57.8312, -106.2, -6.46296, 0.28", "-57.8687, -106.7, -6.39017, 0.55", "-58.0949, -109.318, -5.90722, 0.28", "-58.3651, -111.929, -5.28073, 0.28", "-58.9854, -116.415, -4.28269, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.0021, -78.3136, -8.36585, 0.55", "2.7388, -81.0876, -8.82786, 0.55", "2.50024, -83.6043, -9.2455, 0.55", "1.86781, -87.2023, -9.9161, 0.55", "1.12028, -90.5556, -10.695, 0.83", "0.495035, -93.1208, -11.3379, 0.83", "-0.0389589, -94.9509, -11.7974, 0.83", "-0.640589, -96.462, -12.2653, 0.55", "-2.05663, -99.4429, -13.2068, 0.55", "-3.19988, -101.783, -14.0144, 0.55", "-3.71269, -102.666, -14.3549, 0.55", "-4.94071, -104.598, -15.1222, 0.55", "-6.23785, -106.666, -15.9046, 0.55", "-6.94683, -107.83, -16.2998, 0.83", "-7.56727, -108.945, -16.5877, 1.11", "-8.51776, -110.659, -16.9102, 0.83", "-8.77798, -111.113, -16.9756, 0.83", "-9.46256, -112.293, -17.0766, 0.55", "-10.9295, -114.602, -16.989, 0.83", "-11.9317, -116.031, -16.8531, 0.83", "-12.5876, -116.883, -16.763, 0.55", "-14.2118, -118.866, -16.5291, 0.83", "-15.3839, -120.334, -16.3727, 0.83", "-16.7283, -122.118, -16.3227, 0.55", "-18.0398, -123.949, -16.4058, 0.83", "-19.6128, -125.985, -16.7241, 0.55", "-20.5202, -127.186, -16.9648, 0.55", "-21.5745, -128.728, -17.3617, 1.11", "-23.363, -131.587, -18.1537, 0.55", "-24.1355, -132.838, -18.5579, 0.55", "-25.6905, -135.415, -19.4035, 0.55", "-27.1528, -137.999, -20.1851, 1.11", "-28.4552, -140.364, -20.8821, 0.55", "-29.9198, -142.968, -21.5241, 1.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.0021, -78.3136, -8.36585, 0.55", "2.89305, -80.0133, -7.77582, 0.55", "2.75759, -81.3194, -7.1643, 0.55", "2.38749, -83.948, -5.90584, 0.55", "2.11347, -86.0017, -4.95706, 0.55", "1.81313, -88.0969, -3.9747, 0.55", "1.55766, -89.8596, -3.17522, 0.83", "1.13031, -92.9104, -1.84952, 0.83", "0.919955, -94.4218, -1.21171, 0.83", "0.680056, -96.4099, -0.504562, 0.83", "0.569022, -97.7428, -0.10077, 0.83", "0.406167, -99.3146, 0.296902, 0.83", "0.0689251, -102.409, 1.06836, 0.83", "-0.172846, -105.13, 1.74938, 0.83", "-0.435535, -108.003, 2.54615, 0.83", "-0.76658, -110.788, 3.2842, 0.83", "-1.11117, -113.561, 3.95582, 0.55", "-1.39668, -115.758, 4.48664, 0.83", "-1.66869, -117.64, 4.89346, 0.55", "-1.77289, -118.436, 5.07512, 0.55", "-2.11205, -120.971, 5.6756, 0.55", "-2.35019, -122.751, 6.06082, 0.55", "-2.52186, -124.06, 6.32185, 0.55", "-3.07049, -127.957, 7.09579, 0.55", "-3.38593, -130.589, 7.76789, 0.55", "-3.58296, -132.555, 8.40379, 0.55", "-3.71562, -134.063, 8.98177, 0.55", "-3.93507, -136.013, 9.79536, 0.55", "-4.07582, -137.166, 10.2964, 0.55", "-4.30319, -140.174, 11.5859, 0.55", "-4.39847, -141.199, 11.9877, 0.55", "-4.50371, -142.173, 12.3636, 0.83", "-4.61284, -143.74, 12.9573, 0.55", "-4.61948, -144.629, 13.2992, 0.55", "-4.56497, -146.654, 13.8967, 0.55", "-4.379, -149.173, 14.3922, 0.55", "-4.1177, -151.033, 14.6952, 0.55", "-3.79093, -152.99, 14.9685, 0.55", "-3.59492, -153.928, 15.0806, 0.55", "-3.06295, -156.154, 15.3215, 0.55", "-2.58154, -158.494, 15.6049, 0.55", "-2.37033, -160.086, 15.7702, 0.55", "-2.37995, -161.428, 15.8904, 0.55", "-2.49986, -162.576, 15.961, 0.55", "-2.78534, -164.166, 16.1016, 0.55", "-3.46402, -167.058, 16.3622, 0.83", "-4.31832, -169.754, 16.4604, 0.55", "-5.31453, -172.029, 16.4641, 0.55", "-5.92231, -173.315, 16.4421, 0.83", "-7.15335, -175.661, 16.3453, 0.55", "-8.20164, -177.475, 16.2172, 0.55", "-9.56132, -179.779, 15.9077, 0.55", "-11.3991, -182.612, 15.4411, 0.83", "-12.0947, -190.313, 18.431, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "14.3096, -58.8617, -10.7126, 0.55", "14.697, -61.5254, -9.46144, 0.55", "14.9751, -63.9185, -8.26497, 0.55", "15.3006, -67.1184, -6.48962, 0.83", "15.4957, -69.0877, -5.31046, 0.55", "15.7174, -71.1767, -4.04269, 0.83", "16.0914, -74.065, -2.22114, 0.83", "16.4831, -76.0275, -0.897997, 0.55", "17.0712, -78.4183, 0.797923, 0.83", "17.6538, -80.6837, 2.38602, 0.55", "17.9464, -81.7431, 3.07645, 0.55", "18.6187, -83.9575, 4.58056, 0.83", "19.3407, -86.2313, 6.08164, 0.83", "20.2435, -88.6439, 7.69497, 0.55", "20.4837, -89.2872, 8.11034, 0.55", "21.1958, -91.3088, 9.35905, 0.83", "22.3836, -94.9955, 11.5142, 0.55", "22.7013, -96.2416, 12.1576, 0.55", "23.0999, -98.2368, 13.0728, 0.55", "23.3373, -99.3938, 13.5491, 0.55", "23.7191, -100.959, 14.2948, 0.55", "24.0417, -102.068, 14.8648, 0.55", "24.732, -103.609, 15.8728, 0.55", "25.673, -105.285, 17.2175, 0.28", "26.8856, -107.236, 18.9429, 0.83", "28.4192, -109.43, 21.1454, 0.28", "28.8764, -110.024, 21.7983, 0.55", "31.8204, -113.459, 25.8398, 0.28", "32.1985, -113.887, 26.3286, 0.83", "33.5594, -115.495, 28.0832, 0.28", "34.2206, -116.391, 28.9037, 0.55", "34.9543, -117.555, 29.7985, 0.55", "35.8558, -119.162, 30.775, 0.55", "37.063, -121.559, 31.7026, 0.28", "37.3836, -122.197, 31.9404, 0.55", "38.5086, -124.515, 32.6801, 0.28", "38.8482, -125.283, 32.8542, 0.55", "39.6375, -127.226, 33.1267, 0.28", "39.9141, -128.001, 33.1442, 0.83", "41.7577, -135.234, 38.3631, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "14.3096, -58.8617, -10.7126, 0.55", "15.0898, -59.9486, -10.5735, 0.55", "16.472, -61.7132, -10.2952, 0.28", "17.9428, -63.7017, -10.0382, 0.83", "19.1213, -65.3426, -9.79248, 0.28", "19.7426, -66.2466, -9.68068, 0.55", "20.4884, -67.3747, -9.55797, 0.28", "20.971, -68.2138, -9.48209, 0.55", "21.9025, -70.026, -9.38292, 0.28", "22.346, -71.0915, -9.43552, 0.55", "23.0128, -72.7393, -9.60917, 0.28", "23.1228, -73.0318, -9.64153, 0.55", "23.8786, -75.0439, -9.9066, 0.28", "24.1501, -75.7036, -9.9896, 0.55", "25.1997, -78.0319, -10.4443, 0.55", "25.864, -79.5888, -10.815, 0.28", "26.1387, -80.2308, -11.0182, 0.55", "26.4797, -81.0297, -11.3405, 0.28", "26.8032, -81.7722, -11.6761, 0.55", "27.8896, -83.8275, -13.2084, 0.28", "28.3433, -84.5183, -13.9369, 0.55", "29.2403, -85.9825, -15.7794, 0.28", "29.6677, -86.7128, -16.7191, 0.55", "30.3913, -87.9965, -18.3166, 0.55", "32.3403, -91.4004, -22.3987, 0.55", "33.2914, -92.993, -24.241, 0.83", "34.4731, -94.9948, -26.4105, 0.55", "35.5521, -97.0169, -28.3889, 0.28", "36.1249, -98.2303, -29.368, 0.28", "36.4827, -99.1071, -29.9471, 0.55", "37.354, -101.422, -31.0027, 0.28", "38.2858, -103.78, -31.7983, 0.83", "39.2662, -106.03, -32.4326, 0.55", "40.9811, -109.756, -33.3407, 0.28", "42.1691, -112.159, -33.7907, 0.83", "43.0488, -113.757, -34.0648, 0.55", "44.7885, -116.625, -34.4419, 0.28", "45.6746, -117.845, -34.603, 0.55", "47.0287, -119.494, -34.6536, 0.28", "48.5361, -121.205, -34.5977, 0.55", "50.7163, -123.841, -33.1881, 0.28", "51.3831, -124.684, -32.4827, 0.55", "52.7767, -126.419, -30.6529, 0.55", "54.6761, -128.798, -28.0913, 0.28", "55.4127, -129.735, -27.0744, 0.55", "60.3275, -135.859, -20.2747, 0.28", "60.8453, -136.489, -19.549, 0.55", "62.5981, -138.479, -17.3302, 0.28", "64.3894, -140.401, -15.3475, 0.28", "64.9013, -140.882, -14.9549, 0.55", "68.1185, -143.71, -13.2932, 0.28", "69.175, -144.584, -13.1598, 0.55", "71.6594, -146.597, -13.0322, 0.28", "72.716, -147.443, -13.0783, 0.83", "74.3634, -148.723, -13.2824, 0.28", "75.843, -149.803, -13.6423, 0.28", "77.3937, -150.875, -14.1791, 0.28", "78.6349, -151.734, -14.6028, 0.55", "79.6871, -152.469, -15.0459, 0.28", "80.6107, -153.113, -15.3841, 0.55", "82.6986, -154.428, -16.0414, 0.28", "84.4861, -155.315, -16.6167, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "15.2953, -36.1168, -17.4438, 0.83", "20.0226, -35.5876, -18.8764, 0.83", "24.0431, -35.1376, -20.0948, 0.83", "28.9056, -34.5933, -21.5684, 0.55", "31.2612, -34.3296, -22.2822, 0.55", "34.3774, -33.9808, -23.2266, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "15.2953, -36.1168, -17.4438, 0.55", "15.5463, -37.7877, -17.9042, 0.55", "15.9242, -39.8506, -18.4238, 0.55", "16.163, -41.2768, -18.7354, 0.83", "16.3433, -42.7334, -19.1399, 0.55", "16.4483, -43.5759, -19.3739, 0.28", "16.6192, -44.6652, -19.6573, 0.55", "16.8021, -46.0426, -19.9746, 0.55", "17.0263, -47.6716, -20.3344, 0.55", "17.4091, -50.6835, -21.1087, 0.28", "17.6389, -52.6242, -21.5958, 0.55", "17.9247, -55.0296, -22.1379, 0.55", "18.4372, -59.0425, -22.9595, 0.55", "18.6737, -60.9112, -23.3038, 0.55", "19.0889, -64.4359, -23.8618, 0.28", "19.3358, -66.8428, -24.1772, 0.55", "19.4917, -68.896, -24.4514, 0.28", "19.536, -69.7382, -24.6568, 0.55", "19.6534, -71.3366, -25.2123, 0.28", "19.7295, -72.4251, -25.6614, 0.55", "19.9096, -74.0517, -26.5548, 0.28", "20.1491, -75.4398, -27.4635, 0.83", "21.0993, -79.9409, -30.8038, 0.55", "21.2097, -80.4299, -31.1577, 0.55", "21.4218, -81.2626, -31.7149, 0.83", "21.992, -83.4467, -33.0526, 0.28", "22.5433, -85.8758, -34.4164, 0.55", "23.0277, -88.3526, -35.7219, 0.28", "23.3162, -90.0268, -36.4801, 0.55", "23.7417, -92.6641, -37.59, 0.28", "23.8355, -93.2676, -37.8521, 0.28", "24.2025, -95.2589, -38.7533, 0.55", "24.8706, -98.2161, -40.1547, 0.28", "25.1212, -99.1532, -40.5942, 0.55", "25.9004, -101.742, -41.8326, 0.28", "26.6939, -104.35, -43.1679, 0.83", "27.3498, -106.665, -44.2102, 0.28", "27.6591, -107.923, -44.7246, 0.55", "28.0158, -109.92, -45.6697, 0.28", "28.2507, -111.968, -46.7988, 0.28", "28.4085, -115.05, -48.8118, 0.55", "28.418, -117.738, -50.5897, 0.28", "28.371, -118.803, -51.3595, 0.55", "28.1738, -121.664, -53.6395, 0.28", "28.1118, -122.163, -54.0621, 0.55", "27.9001, -123.294, -55.1663, 0.28", "27.8291, -123.723, -55.6091, 0.55", "27.7092, -124.508, -56.8, 0.28", "27.702, -124.895, -57.2831, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-29.9198, -142.968, -21.5241, 0.55", "-28.5255, -147.363, -20.3781, 0.55", "-27.1883, -151.35, -19.3754, 0.83", "-25.7823, -155.787, -18.3114, 0.28", "-25.339, -157.377, -17.9612, 0.55", "-24.7643, -159.819, -17.4671, 0.28", "-24.0952, -163.831, -16.7951, 0.28", "-24.0501, -164.686, -16.703, 0.28", "-24.1881, -166.108, -16.6599, 0.55", "-24.5802, -167.795, -16.7875, 0.28", "-25.2607, -170.204, -17.1064, 0.83", "-26.3888, -173.478, -17.5436, 0.28", "-27.2306, -175.61, -17.8926, 0.28", "-27.5843, -176.552, -18.0368, 0.55", "-28.9285, -180.452, -18.58, 0.28", "-29.299, -181.554, -18.75, 0.83", "-30.0312, -183.761, -19.0755, 0.28", "-30.2209, -184.362, -19.1569, 0.55", "-30.9915, -186.84, -19.4716, 0.28", "-31.4106, -188.205, -19.6167, 0.55", "-32.133, -190.746, -19.6245, 0.28", "-32.8107, -192.986, -19.7221, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-29.9198, -142.968, -21.5241, 0.28", "-29.9336, -145.131, -22.8856, 0.28", "-29.9482, -145.346, -23.0122, 0.83", "-30.1199, -147.193, -24.0342, 0.28", "-30.2032, -148.089, -24.5298, 0.83", "-30.415, -150.366, -25.7899, 0.28", "-30.4805, -151.07, -26.1796, 0.55", "-30.8375, -152.815, -27.1728, 0.28", "-30.9366, -153.305, -27.4343, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "34.3774, -33.9808, -23.2266, 0.55", "36.4679, -34.5748, -23.9324, 0.55", "40.3914, -35.798, -25.4261, 0.55", "44.0699, -37.0777, -26.9058, 0.83", "47.9496, -38.6183, -28.5221, 0.83", "50.0188, -39.5216, -29.4255, 0.55", "50.7347, -39.8898, -29.7306, 0.28", "51.8264, -40.4719, -30.1739, 0.55", "52.7322, -41.0474, -30.5194, 0.28", "53.8029, -41.7469, -30.8179, 0.55", "55.4598, -42.753, -31.4297, 0.55", "58.8383, -44.5197, -32.4999, 0.55", "61.5205, -45.7752, -33.3244, 0.83", "63.4226, -46.6152, -33.8633, 0.55", "66.4015, -47.7655, -34.8084, 1.11", "71.9774, -49.5965, -36.6746, 0.55", "75.0846, -50.4443, -37.7028, 0.55", "77.2745, -50.9487, -38.4231, 0.28", "78.9117, -51.3285, -38.9783, 1.11", "84.0242, -52.457, -40.5349, 0.55", "85.7988, -52.8004, -41.0456, 0.55", "89.1827, -53.4631, -41.9407, 0.55", "92.8953, -54.2357, -43.1069, 0.83", "96.9977, -55.1097, -44.4126, 0.28", "99.9368, -55.8078, -45.379, 0.83", "103.695, -56.9447, -46.5853, 0.28", "105.165, -57.4584, -47.1229, 0.83", "107.855, -58.5444, -48.2685, 0.28", "108.435, -58.806, -48.5348, 0.28", "109.354, -59.3513, -48.9299, 0.55", "110.853, -60.547, -49.617, 0.28", "111.485, -61.2818, -49.8063, 0.55", "112.74, -63.075, -49.9793, 0.28", "113.213, -63.8888, -49.9257, 0.55", "114.641, -66.5706, -49.6287, 0.28", "115.414, -67.9392, -49.5366, 0.83", "116.137, -69.1776, -49.4767, 0.28", "116.552, -69.7669, -49.5276, 0.55", "117.276, -70.5965, -49.7287, 0.28", "119.239, -72.4173, -50.5947, 0.83", "121.256, -74.0652, -51.5819, 0.55", "121.895, -74.6047, -51.9216, 0.83", "124.518, -76.7945, -53.3778, 0.28", "125.661, -77.7513, -54.0233, 1.11", "128.489, -80.0897, -55.5646, 0.55", "130.102, -81.4311, -56.4109, 1.11", "133.358, -84.4535, -57.9095, 0.55", "133.791, -84.8848, -58.0805, 0.83", "136.18, -87.5187, -58.7669, 0.28", "137.01, -88.5493, -58.9347, 0.55", "138.427, -90.4443, -59.0789, 0.28", "140.088, -92.7929, -59.1574, 0.83", "143.218, -97.1788, -59.088, 0.28", "144.485, -98.9268, -59.055, 0.83", "147.222, -102.703, -58.936, 0.28", "148.441, -104.331, -58.9171, 0.55", "149.897, -106.085, -58.9785, 0.28", "151.172, -107.389, -59.1309, 0.55", "152.363, -108.457, -59.3461, 0.28", "152.715, -108.716, -59.4409, 0.55", "154.564, -109.79, -60.026, 0.28", "156.793, -111.022, -60.6568, 0.55", "159.056, -112.223, -61.3272, 0.28", "159.973, -112.779, -61.6153, 0.55", "161.02, -113.451, -61.9532, 0.28", "161.284, -113.622, -62.0441, 0.55", "164.225, -115.692, -63.1023, 0.28", "165.363, -116.78, -63.3385, 0.55", "166.294, -117.915, -63.4335, 0.28", "166.527, -118.289, -63.3909, 0.55", "167.399, -119.953, -63.0784, 0.28", "167.922, -121.157, -62.9135, 0.55", "169.018, -125.091, -62.038, 0.28", "169.372, -126.345, -61.8006, 0.83", "169.925, -128.432, -61.4266, 0.28", "170.414, -130.233, -61.1823, 0.55", "171.292, -133.504, -60.8736, 0.28", "172.463, -137.685, -60.4283, 0.83", "174.122, -143.051, -59.9484, 0.28", "174.634, -144.7, -59.7512, 0.83", "175.248, -146.612, -59.4366, 0.28", "175.662, -147.924, -59.1353, 0.55", "177.234, -152.375, -57.6608, 0.28", "177.442, -152.893, -57.478, 0.55", "177.84, -153.855, -57.0316, 0.28", "178.193, -154.573, -56.7838, 0.28", "178.321, -154.841, -56.6859, 0.55", "179.414, -156.779, -56.3838, 0.28", "179.97, -157.543, -56.6801, 0.55", "182.068, -160.341, -58.0211, 0.28", "182.485, -160.855, -58.3621, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "34.3774, -33.9808, -23.2266, 0.55", "35.7543, -33.5709, -23.4267, 0.55", "37.5589, -32.9333, -23.588, 0.55", "39.091, -32.3015, -23.6282, 0.28", "43.1953, -30.4857, -23.7037, 0.83", "46.9573, -28.936, -23.7044, 0.55", "50.6825, -27.5164, -23.6453, 0.55", "53.7295, -26.3396, -23.5282, 0.55", "56.0091, -25.4693, -23.4622, 0.55", "58.5741, -24.5201, -23.361, 0.55", "61.5208, -23.4735, -23.1229, 0.55", "63.7894, -22.7377, -22.9148, 0.55", "65.8079, -22.0657, -22.8666, 0.83", "68.6586, -21.0434, -23.0562, 0.55", "70.194, -20.3011, -23.3481, 0.55", "72.2137, -19.0367, -23.8383, 0.55", "73.2493, -18.2655, -24.1735, 0.55", "75.1383, -16.7187, -24.8991, 0.55", "78.2411, -13.969, -26.0794, 0.55", "80.7887, -11.4874, -26.9879, 1.11", "82.4789, -9.69069, -27.6036, 0.55", "83.9159, -8.03086, -28.0513, 0.83", "85.0265, -6.6551, -28.3348, 0.28", "86.5128, -4.78881, -28.5453, 0.55", "89.2425, -1.23846, -28.6132, 0.28", "89.7519, -0.508056, -28.5651, 0.83", "91.5861, 2.40982, -28.3409, 0.83", "93.7651, 6.21928, -27.9716, 0.55", "94.7371, 8.14312, -27.7316, 0.55", "95.2116, 9.24193, -27.6626, 0.55", "96.3192, 12.3188, -27.4918, 0.28", "96.6112, 13.2419, -27.4656, 0.55", "97.0274, 14.7862, -27.4533, 0.28", "97.8804, 17.97, -27.3701, 0.55", "99.6424, 24.0537, -27.1999, 0.28", "99.8838, 24.8307, -27.1716, 0.55", "100.982, 28.0351, -26.9988, 0.28", "101.456, 29.2793, -26.8786, 0.55", "102.383, 31.489, -26.542, 0.55", "103.027, 33.005, -26.2395, 0.55", "103.619, 34.5499, -25.7634, 0.55", "104.818, 37.6983, -24.8394, 0.28", "105.37, 39.1503, -24.4414, 0.55", "106.326, 41.4671, -23.9608, 0.28", "106.978, 42.8271, -23.9134, 0.28", "107.662, 44.0656, -24.0185, 0.55", "108.993, 46.2551, -24.6321, 0.28", "110.306, 48.391, -25.5192, 0.83", "112.059, 51.396, -27.2124, 0.55", "114.54, 55.724, -30.0075, 0.55", "115.126, 56.7518, -30.707, 0.83", "117.494, 61.1058, -33.7517, 0.28", "117.988, 62.0971, -34.4099, 0.55", "120.504, 67.5025, -37.6762, 0.28", "120.95, 68.5517, -38.1795, 0.55", "121.841, 70.5808, -38.8662, 0.28", "122.296, 71.502, -39.1066, 0.55", "123.704, 74.0095, -39.2584, 0.28", "124.417, 75.1975, -39.2041, 0.28", "126.259, 78.0691, -38.6211, 0.55", "127.538, 80.0575, -38.2149, 0.28", "127.899, 80.6136, -38.0868, 0.55", "130.001, 83.7399, -37.3633, 0.28", "130.263, 84.1099, -37.2737, 0.55", "131.73, 86.1898, -36.5896, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "27.702, -124.895, -57.2831, 0.28", "27.2588, -127.183, -58.725, 0.28", "27.1215, -127.969, -59.1685, 0.55", "26.8075, -129.894, -60.2546, 0.28", "26.3996, -132.369, -61.4131, 0.55", "26.02, -134.754, -62.5624, 0.28", "25.7748, -136.371, -63.2338, 0.55", "25.5322, -138.324, -64.0062, 0.28", "25.4079, -139.382, -64.3459, 0.55", "24.9536, -142.909, -65.183, 0.28", "24.5873, -145.405, -65.5871, 0.55", "23.6775, -150.885, -66.2912, 0.28", "23.571, -151.578, -66.3513, 0.55", "22.7978, -157.106, -66.7385, 0.28", "22.6008, -159.337, -66.8255, 0.55", "22.4715, -161.58, -66.8688, 0.28", "22.445, -162.635, -66.8706, 0.55", "22.4687, -166.909, -66.8986, 0.28", "22.4998, -168.094, -66.9155, 0.55", "22.978, -175.785, -67.1547, 0.28", "23.0767, -177.125, -67.207, 0.83", "23.3179, -180.436, -67.3303, 0.28", "23.4182, -182.033, -67.3897, 0.55", "23.5989, -185.825, -67.5584, 0.28", "23.7264, -188.867, -67.6852, 0.28", "23.749, -190.047, -67.7159, 0.55", "23.799, -191.868, -67.7612, 0.28", "23.7924, -193.598, -67.7796, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "27.702, -124.895, -57.2831, 0.28", "27.84, -127.701, -57.3761, 0.28", "27.7997, -128.226, -57.3104, 0.55", "27.6256, -129.398, -57.1211, 0.28", "27.5349, -129.958, -57.028, 0.55", "27.3689, -131.036, -56.9122, 0.28", "27.3286, -131.322, -56.8987, 0.55", "26.7988, -134.317, -56.9712, 0.28", "26.694, -134.859, -56.9909, 0.83", "26.4632, -136.124, -57.1075, 0.83", "26.0479, -138.641, -57.5101, 0.28", "25.8777, -139.805, -57.7743, 0.55", "25.7098, -141.52, -58.4168, 0.28", "25.6463, -142.762, -59.0018, 0.28", "25.6159, -143.653, -59.398, 0.55", "25.5661, -144.903, -59.9671, 0.28", "25.5483, -145.419, -60.1946, 0.55", "25.4577, -148.435, -61.4326, 0.28", "25.4536, -150.975, -62.5328, 0.28", "25.4637, -151.918, -62.9535, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_57", "dend_54", "dend_49", "dend_42", "dend_41", "dend_34", "dend_29", "dend_0", "axon_0", "dend_59", "dend_58", "dend_56", "dend_55", "dend_53", "dend_50", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_1", "axon_1", "dend_52", "dend_51", "dend_46", "dend_45", "dend_37", "dend_36", "dend_32", "dend_31", "dend_24", "dend_21", "dend_11", "dend_2", "dend_48", "dend_47", "dend_39", "dend_38", "dend_26", "dend_25", "dend_23", "dend_22", "dend_15", "dend_12", "dend_10", "dend_3", "dend_28", "dend_27", "dend_17", "dend_16", "dend_14", "dend_13", "dend_7", "dend_4", "dend_19", "dend_18", "dend_9", "dend_8", "dend_6", "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L23_NBC_a489bc1d50_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: soma_0
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, axon_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, axon_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_63
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_57(0), soma_0(0.4500000363863218)
    connect dend_54(0), soma_0(0.4500000363863218)
    connect dend_49(0), soma_0(0.4500000363863218)
    connect dend_42(0), soma_0(0.4500000363863218)
    connect dend_41(0), soma_0(0.4500000363863218)
    connect dend_34(0), soma_0(0.4500000363863218)
    connect dend_29(0), soma_0(0.4500000363863218)
    connect dend_0(0), soma_0(0.4500000363863218)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.72306, 5.30436, 4.20388, 2.54287 ) }
    soma_0 { pt3dadd( -4.25223, 4.78627, 3.78879, 4.68725 ) }
    soma_0 { pt3dadd( -3.7814, 4.26817, 3.37371, 6.22673 ) }
    soma_0 { pt3dadd( -3.31057, 3.75008, 2.95862, 7.64701 ) }
    soma_0 { pt3dadd( -2.83974, 3.23199, 2.54353, 8.55761 ) }
    soma_0 { pt3dadd( -2.36891, 2.7139, 2.12844, 8.96549 ) }
    soma_0 { pt3dadd( -1.89808, 2.19581, 1.71335, 9.2975 ) }
    soma_0 { pt3dadd( -1.42725, 1.67772, 1.29826, 9.48549 ) }
    soma_0 { pt3dadd( -0.956417, 1.15963, 0.883172, 9.67333 ) }
    soma_0 { pt3dadd( -0.485586, 0.641536, 0.468083, 9.75336 ) }
    soma_0 { pt3dadd( -0.0147564, 0.123445, 0.0529936, 9.80295 ) }
    soma_0 { pt3dadd( 0.456074, -0.394646, -0.362095, 9.88568 ) }
    soma_0 { pt3dadd( 0.926904, -0.912738, -0.777184, 9.94624 ) }
    soma_0 { pt3dadd( 1.39773, -1.43083, -1.19227, 9.39229 ) }
    soma_0 { pt3dadd( 1.86856, -1.94892, -1.60736, 8.64644 ) }
    soma_0 { pt3dadd( 2.33939, -2.46701, -2.02245, 7.85208 ) }
    soma_0 { pt3dadd( 2.81022, -2.9851, -2.43754, 7.02739 ) }
    soma_0 { pt3dadd( 3.28105, -3.50319, -2.85263, 6.08715 ) }
    soma_0 { pt3dadd( 3.75188, -4.02128, -3.26772, 4.76023 ) }
    soma_0 { pt3dadd( 4.22271, -4.53938, -3.68281, 3.42054 ) }
    soma_0 { pt3dadd( 4.69354, -5.05747, -4.0979, 1.96741 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 21/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -2.10822, -3.24373, -18.4649, 1.11 ) }
    dend_57 { pt3dadd( -3.77015, -4.23207, -28.7735, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: soma_0 (entry count 23/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.32178, -5.00673, -18.1149, 1.11 ) }
    dend_54 { pt3dadd( 2.98079, -5.77862, -18.11, 1.11 ) }
    dend_54 { pt3dadd( 4.69942, -7.76181, -18.3569, 1.11 ) }
    dend_54 { pt3dadd( 5.53182, -8.71346, -18.6997, 1.11 ) }
    dend_54 { pt3dadd( 7.57849, -10.93, -19.7566, 0.83 ) }
    dend_54 { pt3dadd( 9.35617, -12.7772, -20.7409, 0.83 ) }
    dend_54 { pt3dadd( 10.9379, -14.3128, -21.5784, 0.83 ) }
    dend_54 { pt3dadd( 13.0792, -16.2789, -22.9454, 0.83 ) }
    dend_54 { pt3dadd( 15.9777, -18.8314, -24.997, 0.83 ) }
    dend_54 { pt3dadd( 17.2279, -19.9042, -25.9731, 0.83 ) }
    dend_54 { pt3dadd( 18.367, -20.8115, -26.9732, 0.83 ) }
    dend_54 { pt3dadd( 20.7217, -22.4762, -29.1468, 0.83 ) }
    dend_54 { pt3dadd( 23.1422, -23.975, -31.2833, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 36/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.98178, 0.405271, -16.4649, 1.11 ) }
    dend_49 { pt3dadd( 4.31433, 0.034531, -16.4641, 1.11 ) }
    dend_49 { pt3dadd( 6.2562, -0.505722, -16.4629, 0.83 ) }
    dend_49 { pt3dadd( 8.20613, -1.04822, -16.4618, 0.55 ) }
    dend_49 { pt3dadd( 10.101, -1.57539, -16.4607, 0.55 ) }
    dend_49 { pt3dadd( 11.9126, -2.07942, -16.4596, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 42/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -0.808223, 8.26702, 4.65513, 1.11 ) }
    dend_42 { pt3dadd( -2.31683, 12.7857, 4.72442, 1.11 ) }
    dend_42 { pt3dadd( -3.6037, 16.6403, 4.78353, 0.55 ) }
    dend_42 { pt3dadd( -4.47684, 19.2556, 4.82363, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 46/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.24177, -5.81648, 2.24513, 1.11 ) }
    dend_41 { pt3dadd( 2.27714, -7.98954, 2.80412, 1.11 ) }
    dend_41 { pt3dadd( 2.86862, -9.35348, 2.87439, 1.11 ) }
    dend_41 { pt3dadd( 3.33639, -10.3292, 2.8148, 0.83 ) }
    dend_41 { pt3dadd( 3.95726, -11.5939, 2.64849, 0.55 ) }
    dend_41 { pt3dadd( 4.65484, -12.9038, 2.42461, 0.28 ) }
    dend_41 { pt3dadd( 5.26649, -14.0416, 2.22604, 1.11 ) }
    dend_41 { pt3dadd( 6.79239, -16.8334, 1.65585, 0.55 ) }
    dend_41 { pt3dadd( 7.52949, -18.2289, 1.19133, 0.55 ) }
    dend_41 { pt3dadd( 8.34704, -20.1537, 0.266001, 0.83 ) }
    dend_41 { pt3dadd( 8.77027, -21.4713, -0.504312, 0.55 ) }
    dend_41 { pt3dadd( 9.13908, -22.6872, -1.3835, 0.83 ) }
    dend_41 { pt3dadd( 9.55163, -24.065, -2.48127, 0.83 ) }
    dend_41 { pt3dadd( 10.4169, -26.9647, -4.77511, 0.55 ) }
    dend_41 { pt3dadd( 11.1653, -29.599, -6.92865, 0.55 ) }
    dend_41 { pt3dadd( 11.4597, -30.7093, -7.84921, 0.55 ) }
    dend_41 { pt3dadd( 12.0613, -33.2484, -9.7917, 0.83 ) }
    dend_41 { pt3dadd( 12.2221, -33.8873, -10.2128, 0.55 ) }
    dend_41 { pt3dadd( 12.6805, -35.5618, -11.0121, 0.83 ) }
    dend_41 { pt3dadd( 13.0858, -37.0527, -11.3349, 0.55 ) }
    dend_41 { pt3dadd( 13.5294, -38.5499, -11.5589, 0.55 ) }
    dend_41 { pt3dadd( 13.9262, -40.2286, -11.7849, 1.11 ) }
    dend_41 { pt3dadd( 14.2168, -41.9959, -11.9827, 1.11 ) }
    dend_41 { pt3dadd( 14.4146, -43.3585, -12.1751, 0.83 ) }
    dend_41 { pt3dadd( 14.6534, -45.124, -12.4712, 0.83 ) }
    dend_41 { pt3dadd( 15.0905, -47.6346, -12.9417, 0.55 ) }
    dend_41 { pt3dadd( 15.5461, -49.5466, -13.3155, 0.55 ) }
    dend_41 { pt3dadd( 15.8478, -50.6716, -13.5403, 0.28 ) }
    dend_41 { pt3dadd( 15.9763, -51.1307, -13.6325, 0.83 ) }
    dend_41 { pt3dadd( 16.4283, -52.5728, -13.9205, 0.55 ) }
    dend_41 { pt3dadd( 16.7794, -53.6042, -14.1848, 0.55 ) }
    dend_41 { pt3dadd( 17.1995, -54.9323, -14.5849, 0.28 ) }
    dend_41 { pt3dadd( 17.5224, -55.9088, -14.9897, 1.11 ) }
    dend_41 { pt3dadd( 17.8504, -56.908, -15.4752, 0.28 ) }
    dend_41 { pt3dadd( 18.075, -57.6075, -15.8451, 0.55 ) }
    dend_41 { pt3dadd( 18.7122, -59.6973, -16.9885, 0.28 ) }
    dend_41 { pt3dadd( 18.8989, -60.3847, -17.3604, 0.83 ) }
    dend_41 { pt3dadd( 19.3241, -61.9847, -18.2454, 0.83 ) }
    dend_41 { pt3dadd( 19.6767, -63.2213, -18.8976, 0.28 ) }
    dend_41 { pt3dadd( 19.7798, -63.6053, -19.0648, 0.55 ) }
    dend_41 { pt3dadd( 20.0017, -64.4852, -19.3465, 0.28 ) }
    dend_41 { pt3dadd( 20.1237, -64.9335, -19.4301, 0.55 ) }
    dend_41 { pt3dadd( 20.4237, -66.1064, -19.589, 0.28 ) }
    dend_41 { pt3dadd( 20.4862, -66.3986, -19.6284, 0.55 ) }
    dend_41 { pt3dadd( 20.7951, -67.9075, -19.8186, 0.28 ) }
    dend_41 { pt3dadd( 20.9768, -68.6613, -19.9207, 0.55 ) }
    dend_41 { pt3dadd( 21.2068, -69.5245, -20.0378, 0.28 ) }
    dend_41 { pt3dadd( 21.6265, -70.9899, -20.2051, 0.83 ) }
    dend_41 { pt3dadd( 22.0884, -72.5607, -20.3594, 0.28 ) }
    dend_41 { pt3dadd( 22.4247, -73.6807, -20.4834, 0.55 ) }
    dend_41 { pt3dadd( 22.757, -74.7554, -20.6133, 0.28 ) }
    dend_41 { pt3dadd( 23.0496, -75.8167, -20.7408, 0.83 ) }
    dend_41 { pt3dadd( 23.3865, -77.1358, -20.8885, 0.28 ) }
    dend_41 { pt3dadd( 23.6356, -78.1114, -20.9804, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 24.0667, -79.8881, -21.1035, 0.28 ) }
    dend_41 { pt3dadd( 24.2007, -80.5268, -21.1396, 0.83 ) }
    dend_41 { pt3dadd( 24.4104, -81.6774, -21.1893, 0.83 ) }
    dend_41 { pt3dadd( 24.7001, -83.2361, -21.245, 0.83 ) }
    dend_41 { pt3dadd( 25.0208, -84.9675, -21.2875, 0.28 ) }
    dend_41 { pt3dadd( 25.2292, -85.8068, -21.3375, 0.83 ) }
    dend_41 { pt3dadd( 25.6722, -87.0479, -21.4452, 0.28 ) }
    dend_41 { pt3dadd( 25.8814, -87.4191, -21.5282, 0.55 ) }
    dend_41 { pt3dadd( 26.5151, -88.2557, -21.8154, 0.28 ) }
    dend_41 { pt3dadd( 27.0393, -88.8192, -22.2058, 0.55 ) }
    dend_41 { pt3dadd( 28.4508, -90.1904, -23.486, 0.28 ) }
    dend_41 { pt3dadd( 29.3222, -91.0368, -24.5029, 0.83 ) }
    dend_41 { pt3dadd( 31.0064, -92.6986, -26.7583, 0.28 ) }
    dend_41 { pt3dadd( 31.353, -93.0916, -27.3151, 0.55 ) }
    dend_41 { pt3dadd( 33.1531, -95.489, -30.7189, 0.28 ) }
    dend_41 { pt3dadd( 33.2839, -95.7265, -31.0483, 0.55 ) }
    dend_41 { pt3dadd( 34.025, -97.8411, -33.8403, 0.28 ) }
    dend_41 { pt3dadd( 34.1142, -98.284, -34.3465, 0.55 ) }
    dend_41 { pt3dadd( 34.2396, -99.5873, -35.5864, 0.28 ) }
    dend_41 { pt3dadd( 34.3058, -100.516, -36.3109, 0.83 ) }
    dend_41 { pt3dadd( 34.4797, -103.461, -38.0159, 0.28 ) }
    dend_41 { pt3dadd( 34.4964, -103.652, -38.1067, 0.55 ) }
    dend_41 { pt3dadd( 34.8793, -107.245, -39.3946, 0.28 ) }
    dend_41 { pt3dadd( 34.9302, -107.661, -39.5368, 0.83 ) }
    dend_41 { pt3dadd( 35.2017, -109.376, -40.0561, 0.28 ) }
    dend_41 { pt3dadd( 35.3116, -110.04, -40.2278, 0.83 ) }
    dend_41 { pt3dadd( 35.7653, -112.244, -40.5234, 0.28 ) }
    dend_41 { pt3dadd( 35.9067, -112.915, -40.6073, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 3.45178, 1.14327, -6.46487, 0.83 ) }
    dend_34 { pt3dadd( 6.22217, 1.44582, -6.41343, 0.83 ) }
    dend_34 { pt3dadd( 9.22411, 1.77365, -6.3577, 0.83 ) }
    dend_34 { pt3dadd( 12.4949, 2.13084, -6.29697, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 32/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.64822, 0.231021, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -5.50038, -1.20216, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -6.57901, -3.01621, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -7.3148, -4.25365, 13.8451, 0.83 ) }
    dend_29 { pt3dadd( -9.0199, -7.12129, 13.8451, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 37/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.04822, -6.79023, -6.38487, 2.49 ) }
    dend_0 { pt3dadd( -2.89802, -9.77658, -6.38487, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 39/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.69354, -5.05747, -4.0979, 0.55 ) }
    axon_0 { pt3dadd( 14.7817, -16.1583, -4.0979, 0.55 ) }
    axon_0 { pt3dadd( 24.8699, -27.2591, -4.0979, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 42/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -3.77015, -4.23207, -28.7735, 1.11 ) }
    dend_59 { pt3dadd( -6.26991, 0.269053, -16.4762, 1.11 ) }
    dend_59 { pt3dadd( -6.72, 1.14111, -14.9253, 0.55 ) }
    dend_59 { pt3dadd( -7.11016, 1.91209, -13.9744, 0.83 ) }
    dend_59 { pt3dadd( -7.81586, 3.22964, -13.6114, 0.55 ) }
    dend_59 { pt3dadd( -8.86218, 4.95047, -13.935, 0.55 ) }
    dend_59 { pt3dadd( -10.3655, 7.22198, -14.6031, 1.11 ) }
    dend_59 { pt3dadd( -11.8338, 9.41374, -15.8957, 0.83 ) }
    dend_59 { pt3dadd( -14.1467, 13.4786, -18.9418, 0.55 ) }
    dend_59 { pt3dadd( -14.5793, 14.4734, -20.0159, 0.55 ) }
    dend_59 { pt3dadd( -14.7792, 15.1215, -20.9595, 0.55 ) }
    dend_59 { pt3dadd( -14.982, 15.9934, -22.4035, 0.55 ) }
    dend_59 { pt3dadd( -15.197, 17.3423, -24.6575, 0.55 ) }
    dend_59 { pt3dadd( -15.3898, 19.3322, -27.7464, 0.55 ) }
    dend_59 { pt3dadd( -15.6215, 22.4646, -32.2834, 0.83 ) }
    dend_59 { pt3dadd( -15.88, 25.4212, -36.4265, 0.28 ) }
    dend_59 { pt3dadd( -15.9914, 26.5307, -37.9227, 0.83 ) }
    dend_59 { pt3dadd( -16.3682, 29.1345, -41.3795, 0.55 ) }
    dend_59 { pt3dadd( -16.5008, 29.6526, -42.0349, 0.55 ) }
    dend_59 { pt3dadd( -17.3891, 31.817, -44.8334, 1.11 ) }
    dend_59 { pt3dadd( -18.2091, 33.6447, -47.2188, 0.28 ) }
    dend_59 { pt3dadd( -18.5984, 34.4783, -48.4236, 0.55 ) }
    dend_59 { pt3dadd( -18.9021, 35.133, -49.4296, 0.28 ) }
    dend_59 { pt3dadd( -19.4005, 36.292, -51.3686, 0.55 ) }
    dend_59 { pt3dadd( -20.7836, 39.9871, -57.337, 0.28 ) }
    dend_59 { pt3dadd( -21.3658, 41.7934, -60.1332, 0.83 ) }
    dend_59 { pt3dadd( -21.9413, 43.7987, -63.1177, 0.28 ) }
    dend_59 { pt3dadd( -22.2582, 44.9521, -64.716, 0.83 ) }
    dend_59 { pt3dadd( -23.384, 49.2096, -70.0749, 0.28 ) }
    dend_59 { pt3dadd( -23.8479, 50.9567, -71.9295, 0.28 ) }
    dend_59 { pt3dadd( -24.5402, 53.1818, -73.8069, 1.38 ) }
    dend_59 { pt3dadd( -25.5376, 55.8286, -75.8164, 0.55 ) }
    dend_59 { pt3dadd( -26.2942, 57.6371, -77.0848, 0.28 ) }
    dend_59 { pt3dadd( -27.0648, 59.2735, -78.1245, 0.55 ) }
    dend_59 { pt3dadd( -28.5323, 62.0817, -79.468, 0.28 ) }
    dend_59 { pt3dadd( -29.3738, 63.7078, -80.1268, 0.83 ) }
    dend_59 { pt3dadd( -30.4291, 65.8237, -80.7593, 0.28 ) }
    dend_59 { pt3dadd( -30.7827, 66.5835, -80.918, 0.55 ) }
    dend_59 { pt3dadd( -31.3596, 67.9628, -81.1497, 0.28 ) }
    dend_59 { pt3dadd( -31.6686, 68.8433, -81.2515, 0.83 ) }
    dend_59 { pt3dadd( -32.9424, 73.075, -81.6134, 0.28 ) }
    dend_59 { pt3dadd( -33.1328, 73.9113, -81.6616, 0.83 ) }
    dend_59 { pt3dadd( -33.5783, 76.7425, -81.7899, 0.28 ) }
    dend_59 { pt3dadd( -33.6889, 77.881, -81.8785, 0.55 ) }
    dend_59 { pt3dadd( -33.8149, 79.9493, -82.1258, 0.28 ) }
    dend_59 { pt3dadd( -33.8509, 80.6039, -82.2222, 0.55 ) }
    dend_59 { pt3dadd( -33.987, 83.0943, -82.5823, 0.28 ) }
    dend_59 { pt3dadd( -34.0258, 84.1645, -82.7517, 0.55 ) }
    dend_59 { pt3dadd( -34.0408, 85.34, -82.9592, 0.28 ) }
    dend_59 { pt3dadd( -34.0989, 87.0523, -83.26, 0.55 ) }
    dend_59 { pt3dadd( -34.4585, 90.7388, -83.8414, 0.28 ) }
    dend_59 { pt3dadd( -34.7116, 92.322, -84.0504, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 94/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -3.77015, -4.23207, -28.7735, 0.55 ) }
    dend_58 { pt3dadd( -5.89855, -4.74038, -30.3967, 0.55 ) }
    dend_58 { pt3dadd( -9.4159, -5.92404, -32.8511, 0.55 ) }
    dend_58 { pt3dadd( -10.6601, -6.40166, -33.6731, 0.83 ) }
    dend_58 { pt3dadd( -11.9129, -6.89592, -34.4427, 0.28 ) }
    dend_58 { pt3dadd( -12.5803, -7.14694, -34.8247, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_58 { pt3dadd( -14.8708, -7.99487, -36.0617, 0.28 ) }
    dend_58 { pt3dadd( -16.2135, -8.50037, -36.6975, 0.55 ) }
    dend_58 { pt3dadd( -17.9519, -9.28215, -37.3777, 0.28 ) }
    dend_58 { pt3dadd( -18.9985, -9.71992, -37.7412, 0.55 ) }
    dend_58 { pt3dadd( -20.8712, -10.4009, -38.3724, 0.28 ) }
    dend_58 { pt3dadd( -21.553, -10.6118, -38.5876, 0.55 ) }
    dend_58 { pt3dadd( -22.6494, -10.8772, -38.8935, 0.28 ) }
    dend_58 { pt3dadd( -23.9434, -11.2378, -39.2422, 0.55 ) }
    dend_58 { pt3dadd( -26.0256, -11.9049, -39.7303, 0.28 ) }
    dend_58 { pt3dadd( -26.7366, -12.1638, -39.9388, 0.55 ) }
    dend_58 { pt3dadd( -28.2236, -12.7392, -40.3987, 0.28 ) }
    dend_58 { pt3dadd( -28.8361, -12.9742, -40.5963, 0.55 ) }
    dend_58 { pt3dadd( -32.0353, -14.2458, -41.7626, 0.28 ) }
    dend_58 { pt3dadd( -33.0666, -14.668, -42.1756, 0.55 ) }
    dend_58 { pt3dadd( -35.9013, -15.8928, -43.5384, 0.28 ) }
    dend_58 { pt3dadd( -37.4311, -16.6007, -44.3784, 0.28 ) }
    dend_58 { pt3dadd( -38.1716, -16.9576, -44.9006, 0.55 ) }
    dend_58 { pt3dadd( -40.351, -17.968, -46.5993, 0.28 ) }
    dend_58 { pt3dadd( -40.8933, -18.2126, -47.0525, 0.55 ) }
    dend_58 { pt3dadd( -43.4214, -19.3534, -49.3593, 0.28 ) }
    dend_58 { pt3dadd( -44.47, -19.8339, -50.3382, 0.55 ) }
    dend_58 { pt3dadd( -47.4725, -21.2261, -53.2839, 0.28 ) }
    dend_58 { pt3dadd( -48.939, -21.8992, -54.7359, 0.28 ) }
    dend_58 { pt3dadd( -49.7418, -22.2624, -55.516, 0.55 ) }
    dend_58 { pt3dadd( -52.9149, -23.6462, -58.7207, 0.28 ) }
    dend_58 { pt3dadd( -53.844, -24.0452, -59.6419, 0.28 ) }
    dend_58 { pt3dadd( -54.1617, -24.1965, -59.9486, 0.55 ) }
    dend_58 { pt3dadd( -55.264, -24.8102, -60.9632, 0.28 ) }
    dend_58 { pt3dadd( -55.9854, -25.2406, -61.6447, 0.55 ) }
    dend_58 { pt3dadd( -59.349, -27.3482, -64.7026, 0.28 ) }
    dend_58 { pt3dadd( -60.3723, -28.0719, -65.5872, 0.55 ) }
    dend_58 { pt3dadd( -63.081, -30.0354, -67.7824, 0.28 ) }
    dend_58 { pt3dadd( -63.9669, -30.697, -68.4465, 0.55 ) }
    dend_58 { pt3dadd( -65.9578, -32.2525, -69.8568, 0.28 ) }
    dend_58 { pt3dadd( -66.7632, -32.9252, -70.4005, 0.55 ) }
    dend_58 { pt3dadd( -68.6231, -34.5898, -71.4736, 0.28 ) }
    dend_58 { pt3dadd( -70.1123, -35.9251, -72.3494, 0.28 ) }
    dend_58 { pt3dadd( -70.7243, -36.4553, -72.7021, 0.55 ) }
    dend_58 { pt3dadd( -71.7645, -37.4136, -73.3123, 0.28 ) }
    dend_58 { pt3dadd( -72.4894, -38.1675, -73.6979, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 40/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 23.1422, -23.975, -31.2833, 0.55 ) }
    dend_56 { pt3dadd( 24.0911, -24.8404, -32.9387, 0.55 ) }
    dend_56 { pt3dadd( 24.9417, -25.5087, -34.1426, 0.55 ) }
    dend_56 { pt3dadd( 27.9502, -28.0166, -39.1458, 0.55 ) }
    dend_56 { pt3dadd( 30.6622, -30.3539, -43.3275, 0.55 ) }
    dend_56 { pt3dadd( 31.8128, -31.4083, -45.2017, 0.55 ) }
    dend_56 { pt3dadd( 32.9245, -32.4671, -46.9643, 0.55 ) }
    dend_56 { pt3dadd( 35.4769, -35.0259, -51.1218, 0.55 ) }
    dend_56 { pt3dadd( 38.4071, -38.1713, -55.8585, 0.28 ) }
    dend_56 { pt3dadd( 41.0261, -41.0866, -59.6922, 0.83 ) }
    dend_56 { pt3dadd( 45.1334, -45.7795, -65.0991, 0.55 ) }
    dend_56 { pt3dadd( 46.6841, -47.5612, -66.9602, 0.55 ) }
    dend_56 { pt3dadd( 49.1984, -50.7068, -69.6179, 0.83 ) }
    dend_56 { pt3dadd( 50.4725, -52.3539, -70.685, 0.83 ) }
    dend_56 { pt3dadd( 51.6709, -53.8914, -71.4603, 0.55 ) }
    dend_56 { pt3dadd( 54.3478, -57.3529, -73.1247, 1.11 ) }
    dend_56 { pt3dadd( 56.9625, -60.7796, -74.1685, 0.55 ) }
    dend_56 { pt3dadd( 58.7457, -63.0847, -74.7517, 0.83 ) }
    dend_56 { pt3dadd( 59.6045, -64.1754, -74.9675, 0.83 ) }
    dend_56 { pt3dadd( 61.8647, -67.0683, -75.6478, 0.55 ) }
    dend_56 { pt3dadd( 63.6931, -69.3799, -76.3096, 0.28 ) }
    dend_56 { pt3dadd( 65.3556, -71.2732, -76.9463, 0.83 ) }
    dend_56 { pt3dadd( 66.8368, -72.8379, -77.4953, 0.28 ) }
    dend_56 { pt3dadd( 68.2532, -74.163, -77.9949, 0.55 ) }
    dend_56 { pt3dadd( 71.6772, -77.132, -79.0153, 0.28 ) }
    dend_56 { pt3dadd( 72.937, -78.1454, -79.2783, 0.83 ) }
    dend_56 { pt3dadd( 75.3444, -80.0852, -79.6527, 0.28 ) }
    dend_56 { pt3dadd( 76.6513, -81.108, -79.8182, 0.55 ) }
    dend_56 { pt3dadd( 78.8423, -82.7871, -80.0151, 0.28 ) }
    dend_56 { pt3dadd( 80.849, -84.2198, -80.0508, 1.38 ) }
    dend_56 { pt3dadd( 84.0507, -86.3528, -79.9268, 0.55 ) }
    dend_56 { pt3dadd( 85.4846, -87.3073, -79.8266, 0.55 ) }
    dend_56 { pt3dadd( 86.9602, -88.2723, -79.6847, 0.83 ) }
    dend_56 { pt3dadd( 88.7098, -89.3881, -79.4674, 0.83 ) }
    dend_56 { pt3dadd( 89.7644, -90.0897, -79.2619, 0.28 ) }
    dend_56 { pt3dadd( 91.3224, -91.1557, -78.9124, 0.55 ) }
    dend_56 { pt3dadd( 93.1947, -92.5775, -78.4584, 0.28 ) }
    dend_56 { pt3dadd( 93.8589, -93.1325, -78.2938, 0.28 ) }
    dend_56 { pt3dadd( 94.8579, -94.0698, -78.094, 0.55 ) }
    dend_56 { pt3dadd( 96.6043, -95.7898, -77.8747, 0.28 ) }
    dend_56 { pt3dadd( 98.0814, -97.1982, -77.8724, 0.83 ) }
    dend_56 { pt3dadd( 99.5692, -98.4954, -78.0013, 0.28 ) }
    dend_56 { pt3dadd( 100.508, -99.2302, -78.2003, 0.83 ) }
    dend_56 { pt3dadd( 102.399, -100.577, -78.6508, 0.28 ) }
    dend_56 { pt3dadd( 103.123, -101.029, -78.827, 0.83 ) }
    dend_56 { pt3dadd( 105.716, -102.491, -79.4529, 0.28 ) }
    dend_56 { pt3dadd( 107.832, -103.634, -79.9211, 0.83 ) }
    dend_56 { pt3dadd( 110.392, -104.908, -80.4759, 0.55 ) }
    dend_56 { pt3dadd( 113.153, -106.246, -81.0493, 0.83 ) }
    dend_56 { pt3dadd( 115.404, -107.398, -81.486, 0.83 ) }
    dend_56 { pt3dadd( 116.598, -108.066, -81.6921, 0.83 ) }
    dend_56 { pt3dadd( 119.855, -109.975, -82.2872, 0.28 ) }
    dend_56 { pt3dadd( 121.499, -110.915, -82.5931, 0.28 ) }
    dend_56 { pt3dadd( 122.56, -111.477, -82.8123, 0.83 ) }
    dend_56 { pt3dadd( 125.307, -112.783, -84.0365, 0.28 ) }
    dend_56 { pt3dadd( 126.683, -113.423, -84.9307, 0.83 ) }
    dend_56 { pt3dadd( 128.724, -114.358, -86.6195, 0.55 ) }
    dend_56 { pt3dadd( 130.454, -115.148, -88.3378, 0.55 ) }
    dend_56 { pt3dadd( 132.366, -116.08, -90.4047, 0.83 ) }
    dend_56 { pt3dadd( 136.807, -118.171, -95.1283, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_56 { pt3dadd( 138.269, -118.762, -96.5, 0.55 ) }
    dend_56 { pt3dadd( 138.685, -118.93, -96.8226, 0.55 ) }
    dend_56 { pt3dadd( 139.552, -119.358, -97.3237, 0.55 ) }
    dend_56 { pt3dadd( 141.105, -120.242, -98.069, 0.83 ) }
    dend_56 { pt3dadd( 143.535, -121.609, -98.9552, 0.55 ) }
    dend_56 { pt3dadd( 146.586, -123.229, -99.7532, 0.55 ) }
    dend_56 { pt3dadd( 149.284, -124.553, -100.489, 0.28 ) }
    dend_56 { pt3dadd( 152.013, -125.807, -101.232, 1.11 ) }
    dend_56 { pt3dadd( 156.034, -127.561, -102.435, 0.28 ) }
    dend_56 { pt3dadd( 156.796, -127.88, -102.679, 0.28 ) }
    dend_56 { pt3dadd( 158.225, -128.51, -103.172, 0.55 ) }
    dend_56 { pt3dadd( 160.359, -129.501, -103.921, 0.28 ) }
    dend_56 { pt3dadd( 162.393, -130.428, -104.548, 0.83 ) }
    dend_56 { pt3dadd( 165.546, -131.666, -105.337, 0.28 ) }
    dend_56 { pt3dadd( 166.331, -131.978, -105.47, 0.55 ) }
    dend_56 { pt3dadd( 167.39, -132.41, -105.641, 0.28 ) }
    dend_56 { pt3dadd( 168.619, -132.972, -105.814, 0.55 ) }
    dend_56 { pt3dadd( 170.88, -134.188, -106.063, 0.28 ) }
    dend_56 { pt3dadd( 173.182, -135.67, -106.195, 0.83 ) }
    dend_56 { pt3dadd( 174.536, -136.588, -106.204, 0.28 ) }
    dend_56 { pt3dadd( 176.015, -137.639, -106.181, 0.83 ) }
    dend_56 { pt3dadd( 178.672, -139.595, -106.097, 0.28 ) }
    dend_56 { pt3dadd( 179.75, -140.502, -106.035, 0.83 ) }
    dend_56 { pt3dadd( 182.78, -143.342, -105.778, 0.28 ) }
    dend_56 { pt3dadd( 183.382, -143.961, -105.724, 0.55 ) }
    dend_56 { pt3dadd( 186.092, -146.71, -105.478, 0.28 ) }
    dend_56 { pt3dadd( 186.855, -147.484, -105.551, 0.55 ) }
    dend_56 { pt3dadd( 188.493, -149.109, -106.113, 0.28 ) }
    dend_56 { pt3dadd( 189.311, -149.932, -106.49, 0.55 ) }
    dend_56 { pt3dadd( 190.907, -151.609, -107.583, 0.28 ) }
    dend_56 { pt3dadd( 191.919, -152.728, -108.466, 0.55 ) }
    dend_56 { pt3dadd( 195.576, -156.807, -113.1, 0.28 ) }
    dend_56 { pt3dadd( 196.208, -157.485, -114.051, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 33/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 23.1422, -23.975, -31.2833, 0.55 ) }
    dend_55 { pt3dadd( 25.2851, -24.2325, -33.4953, 0.55 ) }
    dend_55 { pt3dadd( 26.4035, -24.5483, -34.8394, 0.55 ) }
    dend_55 { pt3dadd( 27.1249, -24.7427, -35.7093, 0.55 ) }
    dend_55 { pt3dadd( 28.5889, -25.0571, -37.4194, 0.55 ) }
    dend_55 { pt3dadd( 29.7056, -25.202, -38.6074, 0.83 ) }
    dend_55 { pt3dadd( 34.2021, -25.3002, -43.8068, 0.55 ) }
    dend_55 { pt3dadd( 35.3834, -25.1659, -45.2662, 0.55 ) }
    dend_55 { pt3dadd( 36.2098, -25.0158, -46.3179, 0.55 ) }
    dend_55 { pt3dadd( 36.8939, -24.8672, -47.1987, 0.55 ) }
    dend_55 { pt3dadd( 38.1579, -24.5708, -48.773, 0.55 ) }
    dend_55 { pt3dadd( 41.4374, -23.7199, -52.4994, 1.11 ) }
    dend_55 { pt3dadd( 42.8063, -23.2953, -53.845, 0.55 ) }
    dend_55 { pt3dadd( 43.8091, -22.9413, -54.9432, 1.11 ) }
    dend_55 { pt3dadd( 45.3022, -22.4203, -56.6611, 0.55 ) }
    dend_55 { pt3dadd( 46.131, -22.1318, -57.6973, 0.55 ) }
    dend_55 { pt3dadd( 48.0421, -21.4844, -60.187, 1.11 ) }
    dend_55 { pt3dadd( 50.3731, -20.5824, -63.7757, 0.55 ) }
    dend_55 { pt3dadd( 52.1311, -19.7905, -66.82, 0.28 ) }
    dend_55 { pt3dadd( 52.5705, -19.5517, -67.644, 1.11 ) }
    dend_55 { pt3dadd( 54.8483, -18.1525, -72.1023, 0.55 ) }
    dend_55 { pt3dadd( 55.7794, -17.4708, -74.0488, 0.83 ) }
    dend_55 { pt3dadd( 59.7573, -14.0593, -82.759, 0.28 ) }
    dend_55 { pt3dadd( 60.189, -13.6344, -83.7758, 0.83 ) }
    dend_55 { pt3dadd( 61.0854, -12.6478, -85.9301, 0.28 ) }
    dend_55 { pt3dadd( 61.5952, -12.0007, -87.1743, 0.83 ) }
    dend_55 { pt3dadd( 62.3605, -10.8008, -89.0297, 0.28 ) }
    dend_55 { pt3dadd( 62.627, -10.3107, -89.6566, 0.55 ) }
    dend_55 { pt3dadd( 64.8999, -5.59514, -93.9857, 0.28 ) }
    dend_55 { pt3dadd( 65.1617, -5.00996, -94.5551, 0.55 ) }
    dend_55 { pt3dadd( 65.5504, -4.0576, -95.4836, 0.28 ) }
    dend_55 { pt3dadd( 65.6583, -3.68185, -95.8785, 0.55 ) }
    dend_55 { pt3dadd( 65.7976, -3.06359, -96.5104, 0.28 ) }
    dend_55 { pt3dadd( 65.9488, -2.19883, -97.3932, 0.55 ) }
    dend_55 { pt3dadd( 66.2816, 0.766464, -100.348, 0.28 ) }
    dend_55 { pt3dadd( 66.3698, 1.70264, -101.361, 1.11 ) }
    dend_55 { pt3dadd( 66.7697, 6.67203, -107.181, 0.28 ) }
    dend_55 { pt3dadd( 66.8418, 7.55443, -108.272, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 71/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 11.9126, -2.07942, -16.4596, 0.55 ) }
    dend_53 { pt3dadd( 12.7221, -1.49216, -18.4266, 0.55 ) }
    dend_53 { pt3dadd( 16.3181, 0.549189, -27.2565, 0.55 ) }
    dend_53 { pt3dadd( 17.5215, 1.08407, -30.2091, 0.55 ) }
    dend_53 { pt3dadd( 18.0996, 1.24422, -31.9254, 0.55 ) }
    dend_53 { pt3dadd( 19.8675, 1.54271, -37.5636, 0.83 ) }
    dend_53 { pt3dadd( 21.4415, 1.65819, -43.649, 0.55 ) }
    dend_53 { pt3dadd( 22.3048, 1.54019, -47.4213, 0.28 ) }
    dend_53 { pt3dadd( 22.7099, 1.42251, -49.5069, 1.11 ) }
    dend_53 { pt3dadd( 24.719, 0.693172, -60.8086, 0.28 ) }
    dend_53 { pt3dadd( 25.0902, 0.562233, -62.9201, 0.83 ) }
    dend_53 { pt3dadd( 27.5856, -0.1683, -76.7627, 0.55 ) }
    dend_53 { pt3dadd( 28.4821, -0.390621, -81.4147, 0.83 ) }
    dend_53 { pt3dadd( 30.5181, -0.658983, -91.494, 0.28 ) }
    dend_53 { pt3dadd( 31.0584, -0.685134, -93.917, 1.38 ) }
    dend_53 { pt3dadd( 32.6225, -0.639453, -99.7886, 0.28 ) }
    dend_53 { pt3dadd( 32.9131, -0.624627, -100.756, 0.55 ) }
    dend_53 { pt3dadd( 34.318, -0.513568, -104.198, 0.28 ) }
    dend_53 { pt3dadd( 34.5604, -0.499192, -104.689, 0.28 ) }
    dend_53 { pt3dadd( 35.448, -0.586108, -106.063, 0.28 ) }
    dend_53 { pt3dadd( 35.7423, -0.689544, -106.601, 0.55 ) }
    dend_53 { pt3dadd( 36.2443, -0.959459, -107.595, 0.28 ) }
    dend_53 { pt3dadd( 36.5248, -1.12854, -108.13, 0.55 ) }
    dend_53 { pt3dadd( 38.4603, -2.36065, -111.727, 0.28 ) }
    dend_53 { pt3dadd( 39.1857, -2.82257, -113.091, 1.11 ) }
    dend_53 { pt3dadd( 43.7754, -5.72742, -121.986, 0.28 ) }
    dend_53 { pt3dadd( 44.0902, -5.9266, -122.609, 0.55 ) }
    dend_53 { pt3dadd( 47.1813, -7.87412, -128.806, 0.28 ) }
    dend_53 { pt3dadd( 47.4383, -8.04463, -129.336, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 0/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 11.9126, -2.07942, -16.4596, 1.38 ) }
    dend_50 { pt3dadd( 12.1144, -1.04328, -17.1753, 1.38 ) }
    dend_50 { pt3dadd( 12.9628, 3.31405, -20.1851, 0.83 ) }
    dend_50 { pt3dadd( 13.4398, 5.76414, -21.8775, 0.83 ) }
    dend_50 { pt3dadd( 13.8581, 7.91262, -23.3615, 0.83 ) }
    dend_50 { pt3dadd( 14.2542, 9.94696, -24.7667, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 6/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -4.47684, 19.2556, 4.82363, 0.55 ) }
    dend_44 { pt3dadd( -3.83472, 21.8735, 6.72042, 0.55 ) }
    dend_44 { pt3dadd( -3.52858, 23.1216, 7.62477, 0.55 ) }
    dend_44 { pt3dadd( -3.11697, 24.7997, 8.84066, 0.55 ) }
    dend_44 { pt3dadd( -2.39053, 27.7613, 10.9866, 0.55 ) }
    dend_44 { pt3dadd( -1.46216, 31.5462, 13.729, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 12/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.47684, 19.2556, 4.82363, 0.55 ) }
    dend_43 { pt3dadd( -5.07432, 21.0194, 4.89419, 0.55 ) }
    dend_43 { pt3dadd( -5.2981, 21.618, 4.91818, 0.83 ) }
    dend_43 { pt3dadd( -6.02613, 23.4265, 4.99873, 0.55 ) }
    dend_43 { pt3dadd( -6.66109, 24.9595, 5.06957, 0.83 ) }
    dend_43 { pt3dadd( -7.28777, 26.4676, 5.1769, 0.55 ) }
    dend_43 { pt3dadd( -8.0468, 28.3504, 5.32904, 0.55 ) }
    dend_43 { pt3dadd( -8.46922, 29.3841, 5.42488, 0.83 ) }
    dend_43 { pt3dadd( -9.16962, 31.1946, 5.68146, 0.55 ) }
    dend_43 { pt3dadd( -9.48976, 32.0591, 5.84366, 0.83 ) }
    dend_43 { pt3dadd( -10.0417, 33.5361, 6.20149, 0.55 ) }
    dend_43 { pt3dadd( -10.3288, 34.3908, 6.43651, 0.55 ) }
    dend_43 { pt3dadd( -10.8881, 36.1995, 6.94889, 0.55 ) }
    dend_43 { pt3dadd( -11.3207, 37.6917, 7.31919, 0.83 ) }
    dend_43 { pt3dadd( -11.6342, 38.7768, 7.56245, 0.55 ) }
    dend_43 { pt3dadd( -11.9657, 39.873, 7.77102, 0.83 ) }
    dend_43 { pt3dadd( -12.6729, 42.0372, 8.10209, 0.83 ) }
    dend_43 { pt3dadd( -13.2742, 43.6955, 8.34784, 0.55 ) }
    dend_43 { pt3dadd( -14.0784, 45.8079, 8.61722, 0.83 ) }
    dend_43 { pt3dadd( -14.6384, 47.1757, 8.74234, 0.55 ) }
    dend_43 { pt3dadd( -15.2917, 48.6887, 8.88112, 0.28 ) }
    dend_43 { pt3dadd( -15.8986, 50.0773, 9.00634, 0.55 ) }
    dend_43 { pt3dadd( -16.3922, 51.2226, 9.10012, 0.28 ) }
    dend_43 { pt3dadd( -16.6565, 51.849, 9.1519, 0.55 ) }
    dend_43 { pt3dadd( -16.9863, 52.5891, 9.21594, 0.28 ) }
    dend_43 { pt3dadd( -17.4068, 53.6541, 9.26181, 0.55 ) }
    dend_43 { pt3dadd( -17.7771, 54.8459, 9.2797, 0.28 ) }
    dend_43 { pt3dadd( -17.9113, 55.3437, 9.27973, 0.55 ) }
    dend_43 { pt3dadd( -18.2703, 56.9162, 9.27389, 0.28 ) }
    dend_43 { pt3dadd( -18.5483, 58.2894, 9.2812, 0.55 ) }
    dend_43 { pt3dadd( -18.9707, 60.5427, 9.31425, 0.55 ) }
    dend_43 { pt3dadd( -19.2769, 62.1847, 9.33354, 0.28 ) }
    dend_43 { pt3dadd( -19.5344, 63.6954, 9.34267, 0.28 ) }
    dend_43 { pt3dadd( -19.8436, 65.9836, 9.34214, 1.11 ) }
    dend_43 { pt3dadd( -19.9999, 67.5821, 9.35946, 0.55 ) }
    dend_43 { pt3dadd( -20.078, 68.5237, 9.38735, 0.55 ) }
    dend_43 { pt3dadd( -20.1578, 69.4519, 9.47702, 0.83 ) }
    dend_43 { pt3dadd( -20.3075, 70.8717, 9.66935, 0.28 ) }
    dend_43 { pt3dadd( -20.3727, 71.5665, 9.81331, 0.55 ) }
    dend_43 { pt3dadd( -20.4695, 72.5587, 10.1045, 0.55 ) }
    dend_43 { pt3dadd( -20.5779, 73.6417, 10.4756, 0.55 ) }
    dend_43 { pt3dadd( -20.8047, 76.0304, 11.3887, 0.28 ) }
    dend_43 { pt3dadd( -20.9196, 77.1425, 11.8675, 0.55 ) }
    dend_43 { pt3dadd( -21.1372, 78.7159, 12.6401, 0.28 ) }
    dend_43 { pt3dadd( -21.2599, 79.5055, 13.0489, 0.55 ) }
    dend_43 { pt3dadd( -24.5403, 87.0313, 13.1979, 0.55 ) }
    dend_43 { pt3dadd( -26.7563, 94.9501, 13.0105, 0.55 ) }
    dend_43 { pt3dadd( -29.2711, 102.741, 13.7313, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 60/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 12.4949, 2.13084, -6.29697, 0.55 ) }
    dend_40 { pt3dadd( 14.8221, 3.18088, -4.5733, 0.55 ) }
    dend_40 { pt3dadd( 16.8549, 4.0264, -3.22437, 0.55 ) }
    dend_40 { pt3dadd( 18.047, 4.46693, -2.55336, 0.83 ) }
    dend_40 { pt3dadd( 20.9111, 5.4042, -1.22368, 0.55 ) }
    dend_40 { pt3dadd( 23.3858, 6.2977, -0.402677, 0.83 ) }
    dend_40 { pt3dadd( 26.3858, 7.53633, 0.369482, 0.55 ) }
    dend_40 { pt3dadd( 27.864, 8.20418, 0.623803, 0.55 ) }
    dend_40 { pt3dadd( 30.5732, 9.47581, 0.837982, 0.55 ) }
    dend_40 { pt3dadd( 34.2547, 11.3687, 0.956151, 0.55 ) }
    dend_40 { pt3dadd( 38.8854, 14.0297, 0.925864, 0.55 ) }
    dend_40 { pt3dadd( 40.8891, 15.3146, 0.921394, 0.83 ) }
    dend_40 { pt3dadd( 43.4903, 17.0663, 1.00001, 0.55 ) }
    dend_40 { pt3dadd( 45.7304, 18.5641, 1.16811, 0.83 ) }
    dend_40 { pt3dadd( 48.0463, 20.1795, 1.40924, 0.55 ) }
    dend_40 { pt3dadd( 49.0267, 20.8358, 1.54596, 0.55 ) }
    dend_40 { pt3dadd( 51.0541, 22.0356, 1.8734, 0.83 ) }
    dend_40 { pt3dadd( 52.8194, 23.0751, 1.98549, 0.28 ) }
    dend_40 { pt3dadd( 53.9535, 23.868, 1.94102, 0.55 ) }
    dend_40 { pt3dadd( 55.9978, 25.5016, 1.73375, 0.28 ) }
    dend_40 { pt3dadd( 57.3176, 26.6716, 1.5422, 0.55 ) }
    dend_40 { pt3dadd( 59.0372, 28.2727, 1.25036, 0.28 ) }
    dend_40 { pt3dadd( 60.0502, 29.2334, 1.09453, 0.55 ) }
    dend_40 { pt3dadd( 62.6567, 31.7479, 0.737617, 0.28 ) }
    dend_40 { pt3dadd( 63.3872, 32.464, 0.671921, 0.83 ) }
    dend_40 { pt3dadd( 65.9723, 34.9256, 0.607381, 0.28 ) }
    dend_40 { pt3dadd( 66.5636, 35.4963, 0.60591, 0.55 ) }
    dend_40 { pt3dadd( 69.5175, 38.198, 0.695133, 0.28 ) }
    dend_40 { pt3dadd( 70.322, 38.8473, 0.715987, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 89/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 12.4949, 2.13084, -6.29697, 0.55 ) }
    dend_35 { pt3dadd( 14.0919, 0.437375, -5.75809, 0.55 ) }
    dend_35 { pt3dadd( 14.9036, -0.423431, -5.48417, 0.83 ) }
    dend_35 { pt3dadd( 15.8476, -1.4244, -5.16565, 0.83 ) }
    dend_35 { pt3dadd( 17.9122, -3.61373, -4.46898, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.0199, -7.12129, 13.8451, 0.83 ) }
    dend_33 { pt3dadd( -12.6556, -6.1828, 13.2422, 0.83 ) }
    dend_33 { pt3dadd( -15.8935, -5.31678, 12.739, 0.83 ) }
    dend_33 { pt3dadd( -17.6302, -4.87089, 12.4938, 0.83 ) }
    dend_33 { pt3dadd( -22.2344, -3.81458, 11.9328, 0.55 ) }
    dend_33 { pt3dadd( -26.0038, -2.96923, 11.501, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( -29.1192, -2.20162, 11.1657, 0.55 ) }
    dend_33 { pt3dadd( -32.3488, -1.46834, 10.9459, 0.55 ) }
    dend_33 { pt3dadd( -34.9349, -0.831579, 10.8773, 0.83 ) }
    dend_33 { pt3dadd( -37.4232, -0.0258549, 10.9035, 0.55 ) }
    dend_33 { pt3dadd( -39.053, 0.676113, 11.0121, 0.55 ) }
    dend_33 { pt3dadd( -41.8644, 2.1088, 11.3199, 0.55 ) }
    dend_33 { pt3dadd( -45.1518, 3.92348, 11.7353, 0.55 ) }
    dend_33 { pt3dadd( -49.0583, 5.92015, 12.3422, 0.83 ) }
    dend_33 { pt3dadd( -52.0546, 7.27899, 13.045, 0.83 ) }
    dend_33 { pt3dadd( -54.9789, 8.50103, 13.8804, 0.55 ) }
    dend_33 { pt3dadd( -55.7182, 8.76915, 14.1215, 0.55 ) }
    dend_33 { pt3dadd( -59.0537, 9.84903, 15.2746, 0.55 ) }
    dend_33 { pt3dadd( -63.1364, 11.0917, 16.6786, 0.55 ) }
    dend_33 { pt3dadd( -68.2975, 12.2151, 18.5572, 0.83 ) }
    dend_33 { pt3dadd( -70.7278, 12.4921, 19.4731, 0.28 ) }
    dend_33 { pt3dadd( -71.9426, 12.4994, 19.9445, 0.55 ) }
    dend_33 { pt3dadd( -74.5976, 12.1547, 21.1002, 0.28 ) }
    dend_33 { pt3dadd( -75.9499, 11.6175, 21.7857, 0.55 ) }
    dend_33 { pt3dadd( -78.1699, 10.0032, 22.9115, 0.28 ) }
    dend_33 { pt3dadd( -80.2468, 7.786, 23.9338, 0.55 ) }
    dend_33 { pt3dadd( -81.6806, 5.94229, 24.7207, 0.55 ) }
    dend_33 { pt3dadd( -83.4315, 3.50627, 25.6621, 0.55 ) }
    dend_33 { pt3dadd( -85.2299, 0.75315, 26.6427, 0.28 ) }
    dend_33 { pt3dadd( -85.8653, -0.330114, 26.9975, 0.55 ) }
    dend_33 { pt3dadd( -88.1211, -4.60726, 28.2593, 0.28 ) }
    dend_33 { pt3dadd( -89.3025, -7.04101, 28.9452, 0.55 ) }
    dend_33 { pt3dadd( -90.5673, -10.1112, 29.7764, 0.55 ) }
    dend_33 { pt3dadd( -91.7089, -13.2877, 30.5777, 0.55 ) }
    dend_33 { pt3dadd( -92.8866, -17.0688, 31.4687, 0.55 ) }
    dend_33 { pt3dadd( -93.4823, -19.1386, 31.9244, 0.83 ) }
    dend_33 { pt3dadd( -94.8068, -23.6445, 32.8303, 0.55 ) }
    dend_33 { pt3dadd( -96.158, -27.5875, 33.5992, 0.28 ) }
    dend_33 { pt3dadd( -97.7062, -31.3415, 34.3274, 0.55 ) }
    dend_33 { pt3dadd( -99.6292, -34.9314, 34.9652, 0.55 ) }
    dend_33 { pt3dadd( -101.227, -37.2059, 35.3397, 0.55 ) }
    dend_33 { pt3dadd( -104.241, -40.9676, 35.9075, 0.28 ) }
    dend_33 { pt3dadd( -105.498, -42.3003, 36.076, 0.83 ) }
    dend_33 { pt3dadd( -107.75, -44.2951, 36.2713, 0.55 ) }
    dend_33 { pt3dadd( -109.926, -45.9399, 36.4369, 0.55 ) }
    dend_33 { pt3dadd( -112.48, -47.4649, 36.6039, 0.83 ) }
    dend_33 { pt3dadd( -124.753, -50.9266, 38.1372, 0.83 ) }
    dend_33 { pt3dadd( -136.555, -56.0077, 38.284, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -9.0199, -7.12129, 13.8451, 0.55 ) }
    dend_30 { pt3dadd( -9.54241, -8.84356, 13.9863, 0.55 ) }
    dend_30 { pt3dadd( -10.2286, -10.9826, 14.2262, 0.55 ) }
    dend_30 { pt3dadd( -11.0854, -13.4316, 14.5401, 0.55 ) }
    dend_30 { pt3dadd( -11.8142, -15.2082, 14.775, 0.83 ) }
    dend_30 { pt3dadd( -12.5568, -16.8447, 15.0023, 0.83 ) }
    dend_30 { pt3dadd( -13.8956, -19.6169, 15.3947, 0.83 ) }
    dend_30 { pt3dadd( -14.755, -21.1183, 15.6271, 0.83 ) }
    dend_30 { pt3dadd( -15.7597, -22.5089, 15.8744, 0.55 ) }
    dend_30 { pt3dadd( -16.9769, -24.0998, 16.1903, 0.55 ) }
    dend_30 { pt3dadd( -17.9764, -25.2977, 16.4516, 0.55 ) }
    dend_30 { pt3dadd( -18.832, -26.1551, 16.6445, 0.83 ) }
    dend_30 { pt3dadd( -20.0749, -27.1325, 16.8856, 0.55 ) }
    dend_30 { pt3dadd( -21.9015, -28.4155, 17.162, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 56/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.89802, -9.77658, -6.38487, 0.83 ) }
    dend_20 { pt3dadd( -6.13226, -12.2601, -6.81879, 0.83 ) }
    dend_20 { pt3dadd( -8.50897, -14.0852, -7.13766, 0.83 ) }
    dend_20 { pt3dadd( -11.7379, -16.5646, -7.57088, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 60/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -2.89802, -9.77658, -6.38487, 1.66 ) }
    dend_1 { pt3dadd( -2.00933, -13.0862, -6.7308, 1.66 ) }
    dend_1 { pt3dadd( -1.10602, -16.4502, -7.08242, 1.66 ) }
    dend_1 { pt3dadd( -0.201752, -19.8179, -7.43442, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 64/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 24.8699, -27.2591, -4.0979, 0.55 ) }
    axon_1 { pt3dadd( 34.9581, -38.36, -4.0979, 0.55 ) }
    axon_1 { pt3dadd( 45.0463, -49.4608, -4.0979, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 67/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 14.2542, 9.94696, -24.7667, 0.55 ) }
    dend_52 { pt3dadd( 17.3706, 9.68107, -24.7918, 0.55 ) }
    dend_52 { pt3dadd( 18.1219, 9.57648, -24.8725, 0.83 ) }
    dend_52 { pt3dadd( 19.6035, 9.3171, -25.0918, 0.28 ) }
    dend_52 { pt3dadd( 20.9412, 9.04879, -25.285, 0.55 ) }
    dend_52 { pt3dadd( 24.9858, 8.22145, -25.7334, 0.28 ) }
    dend_52 { pt3dadd( 26.3626, 7.90975, -25.807, 0.55 ) }
    dend_52 { pt3dadd( 28.8112, 7.1854, -25.918, 0.28 ) }
    dend_52 { pt3dadd( 30.0994, 6.68918, -25.977, 0.55 ) }
    dend_52 { pt3dadd( 32.6409, 5.48194, -26.0972, 0.28 ) }
    dend_52 { pt3dadd( 34.0749, 4.69339, -26.1604, 0.55 ) }
    dend_52 { pt3dadd( 36.1701, 3.28742, -26.2907, 0.55 ) }
    dend_52 { pt3dadd( 38.3421, 1.6846, -26.4476, 0.28 ) }
    dend_52 { pt3dadd( 41.1935, -0.545577, -26.6231, 0.28 ) }
    dend_52 { pt3dadd( 42.3766, -1.51424, -26.7565, 0.28 ) }
    dend_52 { pt3dadd( 42.9428, -1.99475, -26.8456, 0.55 ) }
    dend_52 { pt3dadd( 45.2338, -3.99794, -27.3316, 0.28 ) }
    dend_52 { pt3dadd( 45.5974, -4.3112, -27.4214, 0.55 ) }
    dend_52 { pt3dadd( 47.6997, -6.04776, -27.7777, 0.28 ) }
    dend_52 { pt3dadd( 48.8351, -6.79052, -27.9098, 0.28 ) }
    dend_52 { pt3dadd( 49.8257, -7.38601, -27.9946, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 88/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 14.2542, 9.94696, -24.7667, 0.55 ) }
    dend_51 { pt3dadd( 14.1004, 12.078, -25.0647, 0.55 ) }
    dend_51 { pt3dadd( 14.0856, 13.507, -25.4418, 0.28 ) }
    dend_51 { pt3dadd( 14.1099, 14.4833, -25.7362, 0.55 ) }
    dend_51 { pt3dadd( 14.15, 16.0238, -26.2095, 0.28 ) }
    dend_51 { pt3dadd( 14.1632, 17.1531, -26.5985, 0.55 ) }
    dend_51 { pt3dadd( 14.1181, 19.6776, -27.788, 0.55 ) }
    dend_51 { pt3dadd( 14.0682, 20.9144, -28.5562, 0.55 ) }
    dend_51 { pt3dadd( 14.0597, 21.1415, -28.7416, 0.83 ) }
    dend_51 { pt3dadd( 14.0231, 22.0362, -29.5543, 0.55 ) }
    dend_51 { pt3dadd( 13.9855, 23.3533, -30.8034, 1.11 ) }
    dend_51 { pt3dadd( 13.9064, 25.893, -33.165, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_51 { pt3dadd( 13.8785, 26.6267, -33.8186, 0.83 ) }
    dend_51 { pt3dadd( 13.8058, 29.7531, -36.5945, 0.28 ) }
    dend_51 { pt3dadd( 13.8007, 30.7489, -37.4328, 0.83 ) }
    dend_51 { pt3dadd( 13.8812, 33.0928, -39.2714, 0.28 ) }
    dend_51 { pt3dadd( 13.9031, 33.3724, -39.4504, 0.55 ) }
    dend_51 { pt3dadd( 14.0506, 34.6777, -40.0694, 0.28 ) }
    dend_51 { pt3dadd( 14.119, 35.3434, -40.3118, 0.55 ) }
    dend_51 { pt3dadd( 14.1913, 36.3383, -40.5394, 0.28 ) }
    dend_51 { pt3dadd( 14.2476, 37.1839, -40.7035, 0.83 ) }
    dend_51 { pt3dadd( 14.4202, 40.2809, -41.1556, 0.28 ) }
    dend_51 { pt3dadd( 14.4677, 41.2435, -41.3083, 0.83 ) }
    dend_51 { pt3dadd( 14.5313, 42.5165, -41.5378, 0.28 ) }
    dend_51 { pt3dadd( 14.5806, 43.5704, -41.7558, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 13/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.46216, 31.5462, 13.729, 0.55 ) }
    dend_46 { pt3dadd( 0.165961, 31.9147, 14.2714, 0.55 ) }
    dend_46 { pt3dadd( 1.6349, 32.1471, 14.7022, 0.83 ) }
    dend_46 { pt3dadd( 3.68831, 32.5372, 15.3417, 0.55 ) }
    dend_46 { pt3dadd( 5.63197, 33.0436, 15.9559, 0.55 ) }
    dend_46 { pt3dadd( 8.03284, 33.7521, 16.7763, 0.55 ) }
    dend_46 { pt3dadd( 10.3405, 34.543, 17.5621, 0.55 ) }
    dend_46 { pt3dadd( 12.7158, 35.4764, 18.3624, 0.55 ) }
    dend_46 { pt3dadd( 14.7063, 36.3177, 19.0435, 0.55 ) }
    dend_46 { pt3dadd( 16.8965, 37.2727, 19.7712, 0.83 ) }
    dend_46 { pt3dadd( 19.5145, 38.556, 20.575, 0.55 ) }
    dend_46 { pt3dadd( 21.7313, 39.8047, 21.2851, 0.55 ) }
    dend_46 { pt3dadd( 22.4834, 40.2801, 21.5527, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.46216, 31.5462, 13.729, 0.55 ) }
    dend_45 { pt3dadd( -1.28677, 33.3427, 13.7395, 0.55 ) }
    dend_45 { pt3dadd( -1.20683, 34.6237, 13.7418, 0.55 ) }
    dend_45 { pt3dadd( -1.16407, 36.5407, 13.7443, 0.55 ) }
    dend_45 { pt3dadd( -1.09816, 37.8148, 13.7537, 0.83 ) }
    dend_45 { pt3dadd( -1.04966, 38.8881, 13.7726, 0.83 ) }
    dend_45 { pt3dadd( -0.880258, 41.2119, 13.664, 0.55 ) }
    dend_45 { pt3dadd( -0.824874, 41.8726, 13.5958, 0.83 ) }
    dend_45 { pt3dadd( -0.649396, 43.5939, 13.3551, 0.55 ) }
    dend_45 { pt3dadd( -0.320141, 46.1904, 12.9452, 0.55 ) }
    dend_45 { pt3dadd( -0.107678, 47.6133, 12.7073, 0.83 ) }
    dend_45 { pt3dadd( 0.381772, 50.7336, 12.1859, 0.55 ) }
    dend_45 { pt3dadd( 0.55668, 51.9739, 12.011, 0.55 ) }
    dend_45 { pt3dadd( 0.639423, 52.6763, 11.9385, 0.83 ) }
    dend_45 { pt3dadd( 0.702633, 53.742, 11.8686, 0.55 ) }
    dend_45 { pt3dadd( 0.672375, 54.6098, 11.8641, 0.55 ) }
    dend_45 { pt3dadd( 0.590281, 55.9075, 11.956, 0.83 ) }
    dend_45 { pt3dadd( 0.193858, 58.6857, 12.3194, 0.28 ) }
    dend_45 { pt3dadd( 0.0651531, 59.3597, 12.3929, 0.83 ) }
    dend_45 { pt3dadd( -0.161368, 60.2765, 12.4364, 0.55 ) }
    dend_45 { pt3dadd( -0.435199, 61.1413, 12.4271, 0.83 ) }
    dend_45 { pt3dadd( -1.13335, 63.1527, 12.3409, 0.55 ) }
    dend_45 { pt3dadd( -1.67533, 64.5766, 12.1739, 0.55 ) }
    dend_45 { pt3dadd( -2.08182, 65.5338, 11.986, 0.83 ) }
    dend_45 { pt3dadd( -2.70327, 66.9687, 11.5712, 0.55 ) }
    dend_45 { pt3dadd( -3.04888, 67.7422, 11.288, 0.55 ) }
    dend_45 { pt3dadd( -3.56096, 68.8176, 10.7633, 0.83 ) }
    dend_45 { pt3dadd( -4.15609, 69.9454, 10.1124, 0.28 ) }
    dend_45 { pt3dadd( -4.33893, 70.3181, 9.89336, 0.55 ) }
    dend_45 { pt3dadd( -5.0184, 71.6095, 9.18497, 0.28 ) }
    dend_45 { pt3dadd( -5.3614, 72.2355, 8.90778, 0.55 ) }
    dend_45 { pt3dadd( -6.13616, 73.5433, 8.41129, 0.28 ) }
    dend_45 { pt3dadd( -6.69965, 74.4263, 8.11611, 0.55 ) }
    dend_45 { pt3dadd( -7.79217, 76.0645, 7.75687, 0.28 ) }
    dend_45 { pt3dadd( -8.71379, 77.3601, 7.62789, 0.83 ) }
    dend_45 { pt3dadd( -9.70321, 78.6606, 7.68052, 0.28 ) }
    dend_45 { pt3dadd( -10.1082, 79.1717, 7.84954, 0.55 ) }
    dend_45 { pt3dadd( -10.9212, 80.1555, 8.44326, 0.28 ) }
    dend_45 { pt3dadd( -11.5963, 81.042, 9.11856, 0.55 ) }
    dend_45 { pt3dadd( -12.5285, 82.3791, 10.3031, 0.28 ) }
    dend_45 { pt3dadd( -12.8147, 82.8051, 10.7194, 0.55 ) }
    dend_45 { pt3dadd( -14.5978, 85.4537, 13.5985, 0.28 ) }
    dend_45 { pt3dadd( -14.6764, 85.5758, 13.7394, 0.55 ) }
    dend_45 { pt3dadd( -15.4939, 86.9292, 15.4324, 0.28 ) }
    dend_45 { pt3dadd( -15.7463, 87.4446, 16.0258, 0.55 ) }
    dend_45 { pt3dadd( -17.332, 94.8416, 16.748, 0.55 ) }
    dend_45 { pt3dadd( -19.4036, 102.146, 16.5856, 0.55 ) }
    dend_45 { pt3dadd( -21.9397, 109.277, 16.1032, 0.55 ) }
    dend_45 { pt3dadd( -23.5823, 116.541, 14.6201, 0.55 ) }
    dend_45 { pt3dadd( -24.4054, 124.107, 14.6943, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 17.9122, -3.61373, -4.46898, 0.55 ) }
    dend_37 { pt3dadd( 21.1524, -5.97462, -3.88519, 0.55 ) }
    dend_37 { pt3dadd( 23.4684, -7.66208, -3.46793, 0.55 ) }
    dend_37 { pt3dadd( 25.3164, -9.00857, -3.13498, 0.55 ) }
    dend_37 { pt3dadd( 26.2875, -9.71615, -2.96001, 0.55 ) }
    dend_37 { pt3dadd( 29.1141, -11.7757, -2.45074, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 82/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 17.9122, -3.61373, -4.46898, 0.55 ) }
    dend_36 { pt3dadd( 19.3895, -4.31387, -4.66293, 0.55 ) }
    dend_36 { pt3dadd( 20.7857, -4.90662, -4.81261, 0.55 ) }
    dend_36 { pt3dadd( 21.7575, -5.32752, -4.89168, 0.83 ) }
    dend_36 { pt3dadd( 23.7162, -6.18184, -5.00916, 0.55 ) }
    dend_36 { pt3dadd( 25.1015, -6.81175, -5.08806, 0.83 ) }
    dend_36 { pt3dadd( 26.7905, -7.52458, -5.16359, 0.28 ) }
    dend_36 { pt3dadd( 27.7519, -7.86116, -5.26881, 0.55 ) }
    dend_36 { pt3dadd( 30.0397, -8.55325, -5.64861, 0.28 ) }
    dend_36 { pt3dadd( 31.7607, -8.88563, -6.19539, 0.55 ) }
    dend_36 { pt3dadd( 33.2039, -9.06689, -6.83446, 0.55 ) }
    dend_36 { pt3dadd( 35.3071, -9.27036, -7.92722, 0.55 ) }
    dend_36 { pt3dadd( 38.6232, -9.4535, -9.80985, 0.28 ) }
    dend_36 { pt3dadd( 40.3949, -9.48684, -10.836, 0.83 ) }
    dend_36 { pt3dadd( 44.9804, -9.30685, -13.4598, 0.55 ) }
    dend_36 { pt3dadd( 46.6944, -9.17596, -14.3565, 0.55 ) }
    dend_36 { pt3dadd( 48.6329, -8.97278, -15.2256, 0.83 ) }
    dend_36 { pt3dadd( 49.6252, -8.8735, -15.5657, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 51.8503, -8.63149, -15.9429, 0.28 ) }
    dend_36 { pt3dadd( 53.5106, -8.39252, -16.1033, 0.83 ) }
    dend_36 { pt3dadd( 55.4392, -8.07444, -16.0741, 0.28 ) }
    dend_36 { pt3dadd( 56.5327, -7.81068, -16.1005, 0.55 ) }
    dend_36 { pt3dadd( 58.2224, -7.34881, -16.2396, 0.28 ) }
    dend_36 { pt3dadd( 59.2844, -7.04335, -16.436, 0.83 ) }
    dend_36 { pt3dadd( 61.3013, -6.39953, -17.0216, 0.28 ) }
    dend_36 { pt3dadd( 61.9334, -6.1846, -17.3134, 0.55 ) }
    dend_36 { pt3dadd( 63.5707, -5.59022, -18.2444, 0.28 ) }
    dend_36 { pt3dadd( 64.4593, -5.23685, -18.8256, 0.83 ) }
    dend_36 { pt3dadd( 66.5994, -4.32236, -20.3219, 0.28 ) }
    dend_36 { pt3dadd( 67.4865, -3.94159, -20.9572, 0.83 ) }
    dend_36 { pt3dadd( 70.8173, -2.50804, -23.3174, 0.28 ) }
    dend_36 { pt3dadd( 71.0856, -2.39295, -23.5128, 0.55 ) }
    dend_36 { pt3dadd( 74.6766, -0.811079, -26.1774, 0.28 ) }
    dend_36 { pt3dadd( 75.1286, -0.594392, -26.5302, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 16/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -21.9015, -28.4155, 17.162, 0.55 ) }
    dend_32 { pt3dadd( -24.8076, -29.3482, 17.6445, 0.55 ) }
    dend_32 { pt3dadd( -26.6723, -29.9457, 17.971, 0.55 ) }
    dend_32 { pt3dadd( -27.495, -30.2302, 18.1225, 0.55 ) }
    dend_32 { pt3dadd( -30.4998, -31.2439, 18.6329, 0.55 ) }
    dend_32 { pt3dadd( -31.5636, -31.6383, 18.8013, 0.55 ) }
    dend_32 { pt3dadd( -32.8469, -32.157, 19.0013, 0.83 ) }
    dend_32 { pt3dadd( -34.8931, -33.1054, 19.2732, 0.55 ) }
    dend_32 { pt3dadd( -35.6974, -33.5205, 19.3837, 0.55 ) }
    dend_32 { pt3dadd( -37.1789, -34.3367, 19.6054, 0.55 ) }
    dend_32 { pt3dadd( -38.6038, -35.1231, 19.7824, 0.55 ) }
    dend_32 { pt3dadd( -39.9076, -35.793, 19.867, 0.55 ) }
    dend_32 { pt3dadd( -40.9611, -36.3343, 19.8855, 0.55 ) }
    dend_32 { pt3dadd( -42.5013, -37.0547, 19.8508, 0.55 ) }
    dend_32 { pt3dadd( -43.7544, -37.6062, 19.7771, 0.83 ) }
    dend_32 { pt3dadd( -46.1586, -38.5644, 19.697, 0.55 ) }
    dend_32 { pt3dadd( -48.0851, -39.265, 19.6267, 0.55 ) }
    dend_32 { pt3dadd( -49.2854, -39.6641, 19.5736, 0.55 ) }
    dend_32 { pt3dadd( -51.0028, -40.2092, 19.433, 0.55 ) }
    dend_32 { pt3dadd( -53.4198, -40.9208, 19.1595, 0.83 ) }
    dend_32 { pt3dadd( -55.7085, -41.5393, 18.828, 0.55 ) }
    dend_32 { pt3dadd( -57.5433, -42.0235, 18.546, 0.55 ) }
    dend_32 { pt3dadd( -60.0578, -42.6308, 18.1156, 0.55 ) }
    dend_32 { pt3dadd( -62.1907, -43.0353, 17.6755, 0.55 ) }
    dend_32 { pt3dadd( -63.4591, -43.2078, 17.3713, 0.83 ) }
    dend_32 { pt3dadd( -64.9918, -43.2986, 16.9651, 0.55 ) }
    dend_32 { pt3dadd( -65.8427, -43.3174, 16.7125, 0.55 ) }
    dend_32 { pt3dadd( -67.246, -43.2084, 16.3917, 0.83 ) }
    dend_32 { pt3dadd( -68.5024, -43.0735, 16.207, 0.83 ) }
    dend_32 { pt3dadd( -70.039, -42.8502, 16.0904, 0.28 ) }
    dend_32 { pt3dadd( -70.6231, -42.7516, 16.0645, 0.28 ) }
    dend_32 { pt3dadd( -71.8003, -42.5508, 16.0604, 0.55 ) }
    dend_32 { pt3dadd( -74.3324, -42.0286, 16.0991, 0.28 ) }
    dend_32 { pt3dadd( -75.3226, -41.813, 16.1618, 0.83 ) }
    dend_32 { pt3dadd( -81.939, -44.5175, 15.7107, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -21.9015, -28.4155, 17.162, 0.83 ) }
    dend_31 { pt3dadd( -23.0926, -31.7812, 18.466, 0.83 ) }
    dend_31 { pt3dadd( -23.9016, -33.9144, 19.2292, 0.83 ) }
    dend_31 { pt3dadd( -25.1585, -37.6177, 20.4268, 0.55 ) }
    dend_31 { pt3dadd( -25.5257, -38.9902, 20.8404, 0.55 ) }
    dend_31 { pt3dadd( -25.6357, -39.5053, 20.9916, 0.83 ) }
    dend_31 { pt3dadd( -26.0647, -41.7288, 21.6324, 0.55 ) }
    dend_31 { pt3dadd( -26.3899, -44.1358, 22.2394, 0.55 ) }
    dend_31 { pt3dadd( -26.6912, -47.0006, 22.9372, 0.55 ) }
    dend_31 { pt3dadd( -26.8009, -49.4734, 23.4977, 0.55 ) }
    dend_31 { pt3dadd( -26.8338, -51.8854, 24.0066, 0.83 ) }
    dend_31 { pt3dadd( -26.7887, -54.0371, 24.3167, 0.83 ) }
    dend_31 { pt3dadd( -26.7713, -55.2713, 24.3951, 0.83 ) }
    dend_31 { pt3dadd( -26.7783, -57.4252, 24.3982, 0.83 ) }
    dend_31 { pt3dadd( -26.8371, -58.3849, 24.3325, 0.55 ) }
    dend_31 { pt3dadd( -26.9871, -59.5733, 24.1951, 0.83 ) }
    dend_31 { pt3dadd( -27.5049, -63.6277, 23.5614, 0.55 ) }
    dend_31 { pt3dadd( -27.8676, -66.443, 23.0805, 0.55 ) }
    dend_31 { pt3dadd( -28.0776, -68.2051, 22.7747, 0.83 ) }
    dend_31 { pt3dadd( -28.3053, -70.0526, 22.4883, 0.83 ) }
    dend_31 { pt3dadd( -28.7741, -73.7214, 22.0608, 0.83 ) }
    dend_31 { pt3dadd( -29.2021, -76.9292, 21.7976, 0.55 ) }
    dend_31 { pt3dadd( -29.382, -78.2548, 21.763, 1.11 ) }
    dend_31 { pt3dadd( -29.6192, -80.5474, 21.785, 0.83 ) }
    dend_31 { pt3dadd( -30.0355, -84.3743, 21.9482, 0.55 ) }
    dend_31 { pt3dadd( -30.2954, -86.5673, 22.1562, 0.55 ) }
    dend_31 { pt3dadd( -30.4112, -87.3801, 22.2914, 0.55 ) }
    dend_31 { pt3dadd( -30.6947, -88.7811, 22.637, 0.83 ) }
    dend_31 { pt3dadd( -30.9938, -89.8743, 23.0842, 0.83 ) }
    dend_31 { pt3dadd( -31.7602, -91.9766, 24.3025, 0.55 ) }
    dend_31 { pt3dadd( -32.1365, -92.8908, 24.9786, 0.83 ) }
    dend_31 { pt3dadd( -32.627, -94.0113, 25.9079, 0.55 ) }
    dend_31 { pt3dadd( -32.8295, -94.5341, 26.3595, 0.83 ) }
    dend_31 { pt3dadd( -34.0504, -98.0785, 29.3892, 0.55 ) }
    dend_31 { pt3dadd( -34.5119, -99.6016, 30.6094, 0.28 ) }
    dend_31 { pt3dadd( -34.6723, -100.265, 31.0512, 0.55 ) }
    dend_31 { pt3dadd( -34.9775, -101.784, 31.8129, 0.28 ) }
    dend_31 { pt3dadd( -35.3005, -103.749, 32.54, 0.28 ) }
    dend_31 { pt3dadd( -35.5466, -105.563, 32.9442, 0.83 ) }
    dend_31 { pt3dadd( -35.9687, -108.835, 33.1732, 0.28 ) }
    dend_31 { pt3dadd( -36.3631, -111.952, 33.2603, 0.55 ) }
    dend_31 { pt3dadd( -36.648, -114.485, 33.2788, 0.28 ) }
    dend_31 { pt3dadd( -36.6838, -114.87, 33.2943, 0.55 ) }
    dend_31 { pt3dadd( -36.9401, -118.234, 33.6114, 0.28 ) }
    dend_31 { pt3dadd( -37.124, -121.542, 33.9861, 0.55 ) }
    dend_31 { pt3dadd( -37.1808, -123.646, 34.292, 0.28 ) }
    dend_31 { pt3dadd( -37.1898, -125.491, 34.6731, 0.55 ) }
    dend_31 { pt3dadd( -36.9988, -130.408, 35.7325, 0.28 ) }
    dend_31 { pt3dadd( -36.8219, -133.682, 36.4831, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( -40.7697, -143.439, 38.0842, 0.83 ) }
    dend_31 { pt3dadd( -44.8515, -153.204, 39.2099, 0.83 ) }
    dend_31 { pt3dadd( -49.8537, -162.503, 38.1957, 0.83 ) }
    dend_31 { pt3dadd( -57.0185, -170.248, 38.2196, 0.83 ) }
    dend_31 { pt3dadd( -64.5743, -177.56, 37.5693, 0.83 ) }
    dend_31 { pt3dadd( -72.5183, -184.428, 36.9139, 0.83 ) }
    dend_31 { pt3dadd( -81.6695, -189.495, 37.6208, 0.83 ) }
    dend_31 { pt3dadd( -91.3687, -193.309, 38.5668, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.7379, -16.5646, -7.57088, 1.11 ) }
    dend_24 { pt3dadd( -12.7202, -19.0414, -10.7258, 1.11 ) }
    dend_24 { pt3dadd( -14.0334, -22.3523, -14.9433, 1.11 ) }
    dend_24 { pt3dadd( -14.567, -23.6978, -16.6573, 1.38 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 12/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.7379, -16.5646, -7.57088, 0.55 ) }
    dend_21 { pt3dadd( -13.2997, -16.4545, -8.17856, 0.55 ) }
    dend_21 { pt3dadd( -14.2907, -16.3954, -8.51135, 0.55 ) }
    dend_21 { pt3dadd( -15.6107, -16.3396, -8.91757, 0.83 ) }
    dend_21 { pt3dadd( -17.7097, -16.2702, -9.51453, 0.55 ) }
    dend_21 { pt3dadd( -20.0832, -16.2444, -10.1445, 0.83 ) }
    dend_21 { pt3dadd( -20.9837, -16.2281, -10.3479, 0.83 ) }
    dend_21 { pt3dadd( -22.8525, -16.2191, -10.7909, 0.55 ) }
    dend_21 { pt3dadd( -23.6244, -16.2064, -10.9858, 0.83 ) }
    dend_21 { pt3dadd( -24.856, -16.1341, -11.311, 0.28 ) }
    dend_21 { pt3dadd( -26.2001, -16.0411, -11.6405, 1.11 ) }
    dend_21 { pt3dadd( -28.4024, -15.932, -12.2431, 0.55 ) }
    dend_21 { pt3dadd( -30.1175, -15.841, -12.9065, 0.83 ) }
    dend_21 { pt3dadd( -31.6178, -15.7287, -13.6361, 0.28 ) }
    dend_21 { pt3dadd( -32.3098, -15.7039, -13.9633, 0.55 ) }
    dend_21 { pt3dadd( -33.56, -15.7304, -14.5732, 0.28 ) }
    dend_21 { pt3dadd( -35.0559, -15.8804, -15.3069, 0.55 ) }
    dend_21 { pt3dadd( -37.9042, -16.7314, -16.7707, 0.28 ) }
    dend_21 { pt3dadd( -38.1192, -16.8367, -16.872, 0.55 ) }
    dend_21 { pt3dadd( -40.5142, -18.4783, -18.0421, 0.55 ) }
    dend_21 { pt3dadd( -41.4559, -19.2277, -18.5014, 0.28 ) }
    dend_21 { pt3dadd( -42.2028, -19.8803, -18.8675, 0.83 ) }
    dend_21 { pt3dadd( -44.517, -22.0363, -19.9624, 0.28 ) }
    dend_21 { pt3dadd( -45.4756, -22.9364, -20.4086, 0.83 ) }
    dend_21 { pt3dadd( -46.9087, -24.1873, -21.2013, 0.55 ) }
    dend_21 { pt3dadd( -47.7456, -24.8736, -21.9354, 0.55 ) }
    dend_21 { pt3dadd( -48.6821, -25.5287, -22.7924, 0.83 ) }
    dend_21 { pt3dadd( -49.7092, -26.1428, -23.7782, 0.28 ) }
    dend_21 { pt3dadd( -50.3931, -26.4618, -24.4732, 0.55 ) }
    dend_21 { pt3dadd( -51.6446, -26.9933, -25.8907, 0.55 ) }
    dend_21 { pt3dadd( -54.8136, -28.3756, -30.0415, 0.28 ) }
    dend_21 { pt3dadd( -55.884, -28.9254, -31.7098, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.201752, -19.8179, -7.43442, 1.11 ) }
    dend_11 { pt3dadd( 0.71771, -22.8793, -7.12649, 1.11 ) }
    dend_11 { pt3dadd( 1.29778, -24.8106, -6.93224, 1.11 ) }
    dend_11 { pt3dadd( 2.24457, -27.963, -6.61516, 1.11 ) }
    dend_11 { pt3dadd( 3.79972, -33.1409, -6.09435, 1.11 ) }
    dend_11 { pt3dadd( 4.98448, -37.0856, -5.69759, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.201752, -19.8179, -7.43442, 0.83 ) }
    dend_2 { pt3dadd( 1.40657, -21.8154, -8.32093, 0.83 ) }
    dend_2 { pt3dadd( 2.83373, -23.588, -9.10759, 0.83 ) }
    dend_2 { pt3dadd( 3.75491, -24.7321, -9.61535, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 54/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 22.4834, 40.2801, 21.5527, 0.55 ) }
    dend_48 { pt3dadd( 22.1716, 42.9226, 22.2933, 0.55 ) }
    dend_48 { pt3dadd( 21.7846, 45.4852, 23.0158, 0.55 ) }
    dend_48 { pt3dadd( 21.6148, 46.6612, 23.3338, 0.83 ) }
    dend_48 { pt3dadd( 21.1408, 49.8254, 24.248, 0.55 ) }
    dend_48 { pt3dadd( 20.7295, 52.5755, 25.037, 0.83 ) }
    dend_48 { pt3dadd( 20.38, 55.7619, 26.069, 0.55 ) }
    dend_48 { pt3dadd( 20.141, 57.9251, 26.8463, 0.55 ) }
    dend_48 { pt3dadd( 19.9661, 59.4373, 27.4108, 0.55 ) }
    dend_48 { pt3dadd( 19.7934, 61.5673, 28.2254, 0.55 ) }
    dend_48 { pt3dadd( 19.6459, 64.1258, 29.2033, 0.55 ) }
    dend_48 { pt3dadd( 19.3793, 68.3143, 30.6493, 0.55 ) }
    dend_48 { pt3dadd( 19.2433, 70.3759, 31.3872, 0.55 ) }
    dend_48 { pt3dadd( 19.135, 71.9705, 31.6569, 0.83 ) }
    dend_48 { pt3dadd( 18.809, 75.1263, 31.6354, 0.55 ) }
    dend_48 { pt3dadd( 18.6231, 77.0447, 31.4244, 0.55 ) }
    dend_48 { pt3dadd( 18.4295, 79.092, 31.0673, 0.55 ) }
    dend_48 { pt3dadd( 18.1996, 81.2801, 30.5813, 0.55 ) }
    dend_48 { pt3dadd( 17.306, 90.9831, 28.3959, 0.83 ) }
    dend_48 { pt3dadd( 17.0031, 94.0763, 27.7304, 0.55 ) }
    dend_48 { pt3dadd( 16.6735, 97.1536, 27.0783, 0.55 ) }
    dend_48 { pt3dadd( 16.4942, 100.152, 26.5632, 0.55 ) }
    dend_48 { pt3dadd( 16.4442, 102.36, 26.2939, 0.55 ) }
    dend_48 { pt3dadd( 16.4648, 103.322, 26.2792, 0.83 ) }
    dend_48 { pt3dadd( 16.6234, 105.158, 26.6059, 0.28 ) }
    dend_48 { pt3dadd( 16.7584, 106.126, 26.7493, 0.55 ) }
    dend_48 { pt3dadd( 17.3423, 110.169, 27.205, 0.28 ) }
    dend_48 { pt3dadd( 17.3947, 110.495, 27.2471, 0.55 ) }
    dend_48 { pt3dadd( 17.9388, 113.697, 27.6087, 0.28 ) }
    dend_48 { pt3dadd( 18.187, 115.056, 27.7653, 0.55 ) }
    dend_48 { pt3dadd( 18.4239, 116.365, 27.9226, 0.28 ) }
    dend_48 { pt3dadd( 18.5018, 116.966, 28.0096, 0.55 ) }
    dend_48 { pt3dadd( 18.5589, 119.433, 28.3749, 0.28 ) }
    dend_48 { pt3dadd( 18.5252, 121.0, 28.5946, 0.55 ) }
    dend_48 { pt3dadd( 19.7099, 131.914, 28.6805, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 89/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 22.4834, 40.2801, 21.5527, 0.55 ) }
    dend_47 { pt3dadd( 25.8226, 41.4902, 22.3912, 0.55 ) }
    dend_47 { pt3dadd( 29.6709, 42.9918, 23.475, 0.55 ) }
    dend_47 { pt3dadd( 32.1808, 44.0627, 24.1905, 0.55 ) }
    dend_47 { pt3dadd( 34.6073, 45.2669, 24.9068, 0.55 ) }
    dend_47 { pt3dadd( 36.6555, 46.4049, 25.5026, 0.55 ) }
    dend_47 { pt3dadd( 39.7534, 48.1974, 26.3754, 0.55 ) }
    dend_47 { pt3dadd( 41.5731, 49.421, 26.8906, 0.55 ) }
    dend_47 { pt3dadd( 43.293, 50.6589, 27.3905, 0.55 ) }
    dend_47 { pt3dadd( 45.3457, 52.0449, 27.9717, 0.55 ) }
    dend_47 { pt3dadd( 47.9934, 53.6924, 28.6891, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 49.1493, 54.3822, 28.9794, 0.55 ) }
    dend_47 { pt3dadd( 50.8894, 55.2741, 29.332, 0.55 ) }
    dend_47 { pt3dadd( 52.9034, 56.2793, 29.7248, 0.55 ) }
    dend_47 { pt3dadd( 54.4377, 56.8795, 30.038, 0.55 ) }
    dend_47 { pt3dadd( 56.7353, 57.4526, 30.4789, 0.55 ) }
    dend_47 { pt3dadd( 67.225, 63.433, 32.599, 0.55 ) }
    dend_47 { pt3dadd( 77.7407, 69.1002, 35.3239, 0.55 ) }
    dend_47 { pt3dadd( 89.3792, 72.4637, 36.8646, 0.55 ) }
    dend_47 { pt3dadd( 101.469, 73.8238, 37.7053, 0.55 ) }
    dend_47 { pt3dadd( 113.028, 77.7796, 37.4299, 0.55 ) }
    dend_47 { pt3dadd( 124.489, 81.8172, 36.1249, 0.55 ) }
    dend_47 { pt3dadd( 136.019, 85.7406, 37.1192, 0.55 ) }
    dend_47 { pt3dadd( 147.494, 89.3586, 39.2293, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 29.1141, -11.7757, -2.45074, 0.55 ) }
    dend_39 { pt3dadd( 31.2972, -13.7652, -2.89516, 0.55 ) }
    dend_39 { pt3dadd( 33.2834, -15.5317, -3.30627, 0.55 ) }
    dend_39 { pt3dadd( 35.1069, -17.0997, -3.7362, 0.55 ) }
    dend_39 { pt3dadd( 37.8009, -19.3476, -4.42283, 0.83 ) }
    dend_39 { pt3dadd( 40.6465, -21.6693, -5.16927, 0.55 ) }
    dend_39 { pt3dadd( 42.9012, -23.571, -5.78162, 0.55 ) }
    dend_39 { pt3dadd( 43.9937, -24.5069, -6.09874, 0.83 ) }
    dend_39 { pt3dadd( 45.7829, -26.0623, -6.66088, 0.55 ) }
    dend_39 { pt3dadd( 48.3357, -28.2314, -7.48556, 0.55 ) }
    dend_39 { pt3dadd( 50.9382, -30.2725, -8.48663, 0.55 ) }
    dend_39 { pt3dadd( 53.2101, -31.9532, -9.4788, 0.55 ) }
    dend_39 { pt3dadd( 54.7835, -33.0452, -10.1871, 1.11 ) }
    dend_39 { pt3dadd( 57.0, -34.4413, -11.134, 0.55 ) }
    dend_39 { pt3dadd( 58.1849, -35.1544, -11.6276, 0.55 ) }
    dend_39 { pt3dadd( 61.6008, -37.0431, -13.1331, 0.55 ) }
    dend_39 { pt3dadd( 64.024, -38.3149, -14.2346, 0.83 ) }
    dend_39 { pt3dadd( 67.3083, -39.8021, -15.5101, 0.83 ) }
    dend_39 { pt3dadd( 69.3929, -40.7504, -16.1574, 0.55 ) }
    dend_39 { pt3dadd( 70.6123, -41.3176, -16.4512, 0.55 ) }
    dend_39 { pt3dadd( 72.9053, -42.3109, -17.0574, 0.55 ) }
    dend_39 { pt3dadd( 74.4489, -42.9414, -17.4458, 0.83 ) }
    dend_39 { pt3dadd( 77.5738, -44.0104, -18.5425, 0.55 ) }
    dend_39 { pt3dadd( 79.8082, -44.7262, -19.548, 0.55 ) }
    dend_39 { pt3dadd( 81.9432, -45.357, -20.6338, 0.83 ) }
    dend_39 { pt3dadd( 86.3661, -46.5633, -23.0455, 0.28 ) }
    dend_39 { pt3dadd( 87.7679, -46.9852, -23.8912, 0.55 ) }
    dend_39 { pt3dadd( 89.9742, -47.7628, -25.5145, 0.28 ) }
    dend_39 { pt3dadd( 91.7846, -48.5129, -27.0498, 0.28 ) }
    dend_39 { pt3dadd( 93.9004, -49.4405, -28.9146, 0.83 ) }
    dend_39 { pt3dadd( 95.5364, -50.2666, -30.38, 0.55 ) }
    dend_39 { pt3dadd( 96.7623, -50.9572, -31.4296, 0.55 ) }
    dend_39 { pt3dadd( 99.5399, -52.5058, -33.8457, 0.55 ) }
    dend_39 { pt3dadd( 100.739, -53.1918, -34.8735, 0.83 ) }
    dend_39 { pt3dadd( 102.97, -54.5692, -36.9801, 0.55 ) }
    dend_39 { pt3dadd( 103.773, -55.0862, -37.7399, 0.28 ) }
    dend_39 { pt3dadd( 104.024, -55.2289, -37.9573, 0.55 ) }
    dend_39 { pt3dadd( 104.796, -55.5478, -38.4821, 0.28 ) }
    dend_39 { pt3dadd( 105.445, -55.7851, -38.8219, 0.55 ) }
    dend_39 { pt3dadd( 106.872, -56.241, -39.4836, 0.28 ) }
    dend_39 { pt3dadd( 107.855, -56.503, -39.8578, 0.83 ) }
    dend_39 { pt3dadd( 110.861, -57.3249, -40.7831, 0.28 ) }
    dend_39 { pt3dadd( 113.431, -58.09, -41.4774, 0.83 ) }
    dend_39 { pt3dadd( 114.539, -58.5469, -41.7359, 0.28 ) }
    dend_39 { pt3dadd( 115.378, -59.0299, -41.9106, 0.28 ) }
    dend_39 { pt3dadd( 117.065, -60.3106, -42.1221, 0.55 ) }
    dend_39 { pt3dadd( 119.158, -62.2686, -42.253, 0.28 ) }
    dend_39 { pt3dadd( 119.819, -63.0058, -42.2476, 0.55 ) }
    dend_39 { pt3dadd( 122.232, -65.94, -42.1883, 0.28 ) }
    dend_39 { pt3dadd( 123.851, -67.8446, -42.082, 0.28 ) }
    dend_39 { pt3dadd( 125.191, -69.3892, -41.9595, 0.28 ) }
    dend_39 { pt3dadd( 125.555, -69.766, -41.9079, 0.55 ) }
    dend_39 { pt3dadd( 127.257, -71.3155, -41.4726, 0.28 ) }
    dend_39 { pt3dadd( 127.52, -71.5019, -41.3849, 1.11 ) }
    dend_39 { pt3dadd( 130.195, -73.0305, -40.3984, 0.28 ) }
    dend_39 { pt3dadd( 130.76, -73.334, -40.1709, 0.55 ) }
    dend_39 { pt3dadd( 134.214, -75.1781, -38.8047, 0.28 ) }
    dend_39 { pt3dadd( 136.986, -76.6899, -37.63, 0.83 ) }
    dend_39 { pt3dadd( 140.4, -78.5546, -36.0274, 0.28 ) }
    dend_39 { pt3dadd( 141.008, -78.8826, -35.7321, 0.28 ) }
    dend_39 { pt3dadd( 141.168, -78.9647, -35.6491, 0.55 ) }
    dend_39 { pt3dadd( 143.049, -79.9114, -34.6444, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 75/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 29.1141, -11.7757, -2.45074, 0.55 ) }
    dend_38 { pt3dadd( 38.964, -7.8272, -3.59618, 0.55 ) }
    dend_38 { pt3dadd( 45.1171, -5.92497, -2.92928, 0.55 ) }
    dend_38 { pt3dadd( 48.2921, -5.42348, -1.81267, 0.55 ) }
    dend_38 { pt3dadd( 50.4293, -5.2528, -0.914177, 0.55 ) }
    dend_38 { pt3dadd( 53.2999, -5.19871, 0.473045, 0.55 ) }
    dend_38 { pt3dadd( 56.5945, -5.14, 2.13027, 0.55 ) }
    dend_38 { pt3dadd( 61.2979, -5.18886, 4.98727, 0.83 ) }
    dend_38 { pt3dadd( 66.6487, -5.29597, 8.14978, 0.55 ) }
    dend_38 { pt3dadd( 69.2725, -5.43035, 9.77857, 0.55 ) }
    dend_38 { pt3dadd( 73.109, -5.63931, 12.079, 0.55 ) }
    dend_38 { pt3dadd( 75.2873, -5.80881, 13.3115, 0.28 ) }
    dend_38 { pt3dadd( 78.8088, -5.94895, 15.1033, 0.55 ) }
    dend_38 { pt3dadd( 82.1407, -5.81369, 16.4118, 0.28 ) }
    dend_38 { pt3dadd( 84.1165, -5.55507, 17.0148, 0.55 ) }
    dend_38 { pt3dadd( 86.2919, -5.23977, 17.6773, 0.28 ) }
    dend_38 { pt3dadd( 87.4189, -5.06419, 17.9636, 0.28 ) }
    dend_38 { pt3dadd( 88.2043, -4.91685, 18.2463, 0.55 ) }
    dend_38 { pt3dadd( 90.6509, -4.52441, 19.369, 0.28 ) }
    dend_38 { pt3dadd( 91.3358, -4.39145, 19.6952, 0.55 ) }
    dend_38 { pt3dadd( 93.361, -3.89561, 20.8049, 0.28 ) }
    dend_38 { pt3dadd( 94.1333, -3.70385, 21.2902, 0.83 ) }
    dend_38 { pt3dadd( 97.8545, -2.68051, 23.6771, 0.55 ) }
    dend_38 { pt3dadd( 101.284, -1.85886, 25.9694, 0.55 ) }
    dend_38 { pt3dadd( 113.289, -1.5268, 33.123, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( 125.531, -0.881369, 39.843, 0.55 ) }
    dend_38 { pt3dadd( 137.665, 2.20221, 46.1122, 0.55 ) }
    dend_38 { pt3dadd( 149.581, 7.16277, 51.6151, 0.55 ) }
    dend_38 { pt3dadd( 161.81, 13.6336, 54.1379, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 4/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -14.567, -23.6978, -16.6573, 0.55 ) }
    dend_26 { pt3dadd( -15.888, -25.6181, -16.493, 0.55 ) }
    dend_26 { pt3dadd( -17.6803, -28.2074, -16.1384, 0.55 ) }
    dend_26 { pt3dadd( -19.4254, -30.5492, -15.7052, 0.55 ) }
    dend_26 { pt3dadd( -20.7672, -32.3654, -15.3368, 0.83 ) }
    dend_26 { pt3dadd( -23.3358, -35.8868, -14.7005, 0.83 ) }
    dend_26 { pt3dadd( -24.3947, -37.3273, -14.4532, 0.83 ) }
    dend_26 { pt3dadd( -26.5716, -40.2949, -13.9891, 1.94 ) }
    dend_26 { pt3dadd( -28.9209, -43.56, -13.5236, 0.55 ) }
    dend_26 { pt3dadd( -30.9008, -46.495, -13.0638, 0.83 ) }
    dend_26 { pt3dadd( -32.3584, -48.903, -12.7492, 0.55 ) }
    dend_26 { pt3dadd( -33.0526, -50.1529, -12.6094, 0.83 ) }
    dend_26 { pt3dadd( -34.0721, -52.087, -12.4304, 0.83 ) }
    dend_26 { pt3dadd( -35.7169, -55.4202, -12.2388, 0.83 ) }
    dend_26 { pt3dadd( -37.5727, -59.8005, -12.0693, 0.83 ) }
    dend_26 { pt3dadd( -38.2216, -61.4179, -11.9796, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 20/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -14.567, -23.6978, -16.6573, 0.55 ) }
    dend_25 { pt3dadd( -16.4357, -23.4747, -18.3591, 0.55 ) }
    dend_25 { pt3dadd( -18.5174, -23.2866, -20.3768, 0.55 ) }
    dend_25 { pt3dadd( -21.6606, -23.1647, -23.7182, 0.83 ) }
    dend_25 { pt3dadd( -23.8238, -23.2292, -26.0926, 1.11 ) }
    dend_25 { pt3dadd( -27.4145, -23.4898, -29.9276, 0.55 ) }
    dend_25 { pt3dadd( -28.9585, -23.6996, -31.4759, 0.55 ) }
    dend_25 { pt3dadd( -32.3849, -24.4574, -34.9233, 0.55 ) }
    dend_25 { pt3dadd( -34.4585, -25.0999, -36.9411, 1.11 ) }
    dend_25 { pt3dadd( -35.9461, -25.6393, -38.2869, 0.55 ) }
    dend_25 { pt3dadd( -37.1535, -26.129, -39.2388, 0.55 ) }
    dend_25 { pt3dadd( -39.4116, -27.1833, -40.6698, 0.55 ) }
    dend_25 { pt3dadd( -41.7136, -28.2175, -42.0165, 1.11 ) }
    dend_25 { pt3dadd( -44.513, -29.3415, -43.4146, 0.55 ) }
    dend_25 { pt3dadd( -45.3453, -29.621, -43.7956, 0.83 ) }
    dend_25 { pt3dadd( -47.9483, -30.3654, -45.0358, 0.55 ) }
    dend_25 { pt3dadd( -49.3579, -30.7469, -45.7342, 0.55 ) }
    dend_25 { pt3dadd( -51.5302, -31.2421, -46.7507, 0.83 ) }
    dend_25 { pt3dadd( -54.4316, -31.9033, -47.8695, 0.55 ) }
    dend_25 { pt3dadd( -55.7343, -32.2453, -48.2994, 0.83 ) }
    dend_25 { pt3dadd( -57.3267, -32.7313, -48.8645, 0.28 ) }
    dend_25 { pt3dadd( -58.5478, -33.1327, -49.2447, 0.55 ) }
    dend_25 { pt3dadd( -59.9715, -33.6084, -49.6312, 0.28 ) }
    dend_25 { pt3dadd( -61.7964, -34.1638, -50.2322, 0.55 ) }
    dend_25 { pt3dadd( -62.6915, -34.4457, -50.6684, 0.55 ) }
    dend_25 { pt3dadd( -64.984, -35.1736, -52.0822, 0.28 ) }
    dend_25 { pt3dadd( -66.6277, -35.6943, -53.3757, 0.55 ) }
    dend_25 { pt3dadd( -68.2117, -36.2121, -54.8676, 1.66 ) }
    dend_25 { pt3dadd( -71.8873, -37.5867, -59.292, 0.83 ) }
    dend_25 { pt3dadd( -73.5072, -38.2321, -61.5861, 0.55 ) }
    dend_25 { pt3dadd( -74.3808, -38.608, -62.9611, 0.55 ) }
    dend_25 { pt3dadd( -75.9097, -39.3977, -65.7324, 0.28 ) }
    dend_25 { pt3dadd( -76.1064, -39.5397, -66.1761, 0.83 ) }
    dend_25 { pt3dadd( -77.659, -41.1882, -70.5766, 0.28 ) }
    dend_25 { pt3dadd( -77.7225, -41.2748, -70.7762, 0.55 ) }
    dend_25 { pt3dadd( -78.1217, -41.678, -71.7859, 0.28 ) }
    dend_25 { pt3dadd( -78.3925, -41.8915, -72.3899, 0.55 ) }
    dend_25 { pt3dadd( -79.8557, -42.5715, -74.4361, 0.28 ) }
    dend_25 { pt3dadd( -81.5598, -43.0474, -76.1552, 0.83 ) }
    dend_25 { pt3dadd( -83.0889, -43.2615, -77.2701, 0.83 ) }
    dend_25 { pt3dadd( -85.1871, -43.4516, -78.6213, 0.28 ) }
    dend_25 { pt3dadd( -86.0349, -43.4675, -79.0652, 0.55 ) }
    dend_25 { pt3dadd( -90.2113, -43.2498, -80.8921, 0.28 ) }
    dend_25 { pt3dadd( -90.9007, -43.1577, -81.0895, 0.83 ) }
    dend_25 { pt3dadd( -94.2195, -42.3846, -81.6254, 0.28 ) }
    dend_25 { pt3dadd( -94.8744, -42.1647, -81.6974, 0.55 ) }
    dend_25 { pt3dadd( -97.3266, -41.1349, -81.8927, 0.28 ) }
    dend_25 { pt3dadd( -99.784, -39.8274, -81.8385, 0.55 ) }
    dend_25 { pt3dadd( -102.203, -38.1883, -81.5029, 0.28 ) }
    dend_25 { pt3dadd( -103.811, -37.0195, -81.2155, 0.28 ) }
    dend_25 { pt3dadd( -106.602, -34.7993, -80.497, 0.28 ) }
    dend_25 { pt3dadd( -106.961, -34.516, -80.4146, 0.83 ) }
    dend_25 { pt3dadd( -109.673, -32.5403, -79.9354, 0.28 ) }
    dend_25 { pt3dadd( -110.553, -31.9311, -79.674, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -55.884, -28.9254, -31.7098, 0.28 ) }
    dend_23 { pt3dadd( -56.5265, -28.2868, -34.5833, 0.28 ) }
    dend_23 { pt3dadd( -56.8358, -27.9793, -35.967, 0.55 ) }
    dend_23 { pt3dadd( -58.0483, -26.7742, -41.3901, 0.28 ) }
    dend_23 { pt3dadd( -59.3463, -25.484, -47.1957, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 79/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -55.884, -28.9254, -31.7098, 0.28 ) }
    dend_22 { pt3dadd( -56.2182, -30.9847, -32.6142, 0.28 ) }
    dend_22 { pt3dadd( -56.3222, -31.6254, -32.8956, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.98448, -37.0856, -5.69759, 0.83 ) }
    dend_15 { pt3dadd( 4.57537, -39.9474, -6.11061, 0.83 ) }
    dend_15 { pt3dadd( 4.2596, -42.1438, -6.47057, 0.83 ) }
    dend_15 { pt3dadd( 3.66943, -46.5259, -7.20068, 0.83 ) }
    dend_15 { pt3dadd( 3.39638, -48.9302, -7.61702, 0.83 ) }
    dend_15 { pt3dadd( 3.1255, -51.9104, -8.1117, 0.83 ) }
    dend_15 { pt3dadd( 2.90348, -55.102, -8.62373, 0.83 ) }
    dend_15 { pt3dadd( 2.78361, -57.4622, -8.98758, 0.83 ) }
    dend_15 { pt3dadd( 2.71938, -60.3807, -9.33309, 1.38 ) }
    dend_15 { pt3dadd( 2.69653, -63.3136, -9.43358, 0.83 ) }
    dend_15 { pt3dadd( 2.7161, -67.2801, -9.41833, 0.83 ) }
    dend_15 { pt3dadd( 2.74212, -68.2506, -9.39814, 0.83 ) }
    dend_15 { pt3dadd( 2.86016, -71.7119, -9.31196, 0.83 ) }
    dend_15 { pt3dadd( 2.92333, -73.8252, -9.09922, 0.83 ) }
    dend_15 { pt3dadd( 3.0021, -78.3136, -8.36585, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 97/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.98448, -37.0856, -5.69759, 0.83 ) }
    dend_12 { pt3dadd( 6.40317, -38.6263, -6.27896, 0.83 ) }
    dend_12 { pt3dadd( 7.76294, -40.432, -6.77103, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( 8.44131, -41.4897, -6.97632, 0.55 ) }
    dend_12 { pt3dadd( 9.33154, -43.4889, -7.45216, 0.55 ) }
    dend_12 { pt3dadd( 10.6689, -46.4924, -8.167, 0.83 ) }
    dend_12 { pt3dadd( 11.5906, -48.5622, -8.65965, 0.55 ) }
    dend_12 { pt3dadd( 12.3872, -50.796, -9.1338, 0.55 ) }
    dend_12 { pt3dadd( 13.0272, -53.0118, -9.57972, 0.55 ) }
    dend_12 { pt3dadd( 14.3096, -58.8617, -10.7126, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 7/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 3.75491, -24.7321, -9.61535, 0.83 ) }
    dend_10 { pt3dadd( 3.34591, -23.5369, -11.0973, 0.83 ) }
    dend_10 { pt3dadd( 3.23898, -22.3269, -13.1213, 0.83 ) }
    dend_10 { pt3dadd( 3.72631, -21.1801, -16.9358, 0.55 ) }
    dend_10 { pt3dadd( 4.01715, -20.8172, -18.7569, 0.55 ) }
    dend_10 { pt3dadd( 4.23239, -20.6007, -19.9838, 0.55 ) }
    dend_10 { pt3dadd( 4.64885, -20.2483, -22.2771, 0.55 ) }
    dend_10 { pt3dadd( 5.17415, -19.926, -24.9112, 0.55 ) }
    dend_10 { pt3dadd( 6.51292, -19.2704, -30.7546, 0.55 ) }
    dend_10 { pt3dadd( 8.64001, -18.3698, -38.8187, 0.83 ) }
    dend_10 { pt3dadd( 10.1818, -17.7607, -44.3875, 0.28 ) }
    dend_10 { pt3dadd( 11.1852, -17.378, -47.9477, 0.55 ) }
    dend_10 { pt3dadd( 11.9199, -17.0776, -50.4551, 0.28 ) }
    dend_10 { pt3dadd( 12.4988, -16.8165, -52.3133, 1.11 ) }
    dend_10 { pt3dadd( 14.1152, -16.0224, -56.7606, 0.28 ) }
    dend_10 { pt3dadd( 14.2438, -15.9683, -57.0711, 0.55 ) }
    dend_10 { pt3dadd( 14.8506, -15.7291, -58.4638, 0.28 ) }
    dend_10 { pt3dadd( 15.0921, -15.6183, -59.0601, 0.55 ) }
    dend_10 { pt3dadd( 15.4602, -15.466, -59.9961, 0.28 ) }
    dend_10 { pt3dadd( 15.6698, -15.3958, -60.5117, 0.83 ) }
    dend_10 { pt3dadd( 18.9811, -14.2885, -68.4334, 0.28 ) }
    dend_10 { pt3dadd( 19.5959, -14.0971, -69.9018, 0.55 ) }
    dend_10 { pt3dadd( 20.783, -13.7225, -72.6404, 0.28 ) }
    dend_10 { pt3dadd( 21.5866, -13.4945, -74.381, 0.55 ) }
    dend_10 { pt3dadd( 22.2799, -13.3348, -75.7704, 0.55 ) }
    dend_10 { pt3dadd( 23.9875, -12.9942, -78.8166, 0.28 ) }
    dend_10 { pt3dadd( 24.4879, -12.9397, -79.6311, 0.55 ) }
    dend_10 { pt3dadd( 25.5609, -12.9537, -81.6556, 0.28 ) }
    dend_10 { pt3dadd( 25.9088, -13.0339, -82.4433, 0.55 ) }
    dend_10 { pt3dadd( 26.7448, -13.4711, -85.0445, 0.28 ) }
    dend_10 { pt3dadd( 27.0184, -13.7115, -86.4457, 1.11 ) }
    dend_10 { pt3dadd( 27.8805, -14.7081, -91.9678, 0.28 ) }
    dend_10 { pt3dadd( 28.0891, -14.9256, -93.5345, 1.11 ) }
    dend_10 { pt3dadd( 28.4734, -15.3008, -96.8677, 0.28 ) }
    dend_10 { pt3dadd( 28.7562, -15.5311, -99.326, 1.38 ) }
    dend_10 { pt3dadd( 30.0151, -16.4853, -110.339, 0.28 ) }
    dend_10 { pt3dadd( 30.1688, -16.5803, -111.702, 1.11 ) }
    dend_10 { pt3dadd( 31.0967, -16.9034, -119.137, 0.28 ) }
    dend_10 { pt3dadd( 31.3603, -16.9466, -121.003, 0.55 ) }
    dend_10 { pt3dadd( 31.9046, -16.9022, -124.218, 0.28 ) }
    dend_10 { pt3dadd( 32.1596, -16.8605, -125.46, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 48/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.75491, -24.7321, -9.61535, 0.55 ) }
    dend_3 { pt3dadd( 5.2497, -26.2067, -10.6293, 0.55 ) }
    dend_3 { pt3dadd( 7.90727, -28.8284, -12.4321, 1.11 ) }
    dend_3 { pt3dadd( 11.5522, -32.4242, -14.9046, 0.83 ) }
    dend_3 { pt3dadd( 15.2953, -36.1168, -17.4438, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 53/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -38.2216, -61.4179, -11.9796, 0.55 ) }
    dend_28 { pt3dadd( -41.6702, -61.9257, -11.3958, 0.55 ) }
    dend_28 { pt3dadd( -45.4664, -62.5555, -10.8943, 0.55 ) }
    dend_28 { pt3dadd( -48.5706, -63.1437, -10.5463, 0.55 ) }
    dend_28 { pt3dadd( -50.8439, -63.6558, -10.3632, 0.83 ) }
    dend_28 { pt3dadd( -52.8481, -64.1627, -10.2556, 0.28 ) }
    dend_28 { pt3dadd( -53.9072, -64.4546, -10.2107, 0.83 ) }
    dend_28 { pt3dadd( -56.3206, -65.3093, -10.4217, 0.55 ) }
    dend_28 { pt3dadd( -57.1694, -65.6617, -10.5754, 0.55 ) }
    dend_28 { pt3dadd( -58.6692, -66.2302, -11.0726, 0.55 ) }
    dend_28 { pt3dadd( -60.0935, -66.6704, -11.7147, 0.55 ) }
    dend_28 { pt3dadd( -61.6766, -67.1101, -12.5216, 0.83 ) }
    dend_28 { pt3dadd( -64.5279, -67.7544, -14.1377, 0.55 ) }
    dend_28 { pt3dadd( -65.8463, -67.9846, -14.9072, 0.55 ) }
    dend_28 { pt3dadd( -69.9353, -68.5371, -17.2213, 0.55 ) }
    dend_28 { pt3dadd( -71.0923, -68.6486, -17.8284, 0.55 ) }
    dend_28 { pt3dadd( -72.2952, -68.7359, -18.3932, 0.55 ) }
    dend_28 { pt3dadd( -75.7788, -68.8866, -19.8282, 0.28 ) }
    dend_28 { pt3dadd( -76.887, -68.9228, -20.1951, 0.55 ) }
    dend_28 { pt3dadd( -78.1274, -68.971, -20.5651, 0.28 ) }
    dend_28 { pt3dadd( -79.4281, -69.0559, -20.8003, 1.11 ) }
    dend_28 { pt3dadd( -83.2776, -69.3845, -21.5447, 0.55 ) }
    dend_28 { pt3dadd( -84.8146, -69.4654, -21.8145, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -38.2216, -61.4179, -11.9796, 0.55 ) }
    dend_27 { pt3dadd( -39.0319, -63.6079, -11.8451, 0.55 ) }
    dend_27 { pt3dadd( -39.5846, -65.0208, -11.7046, 0.55 ) }
    dend_27 { pt3dadd( -40.3906, -66.9187, -11.5105, 0.83 ) }
    dend_27 { pt3dadd( -41.3063, -68.7647, -11.2874, 0.55 ) }
    dend_27 { pt3dadd( -42.6331, -71.2447, -10.9872, 0.83 ) }
    dend_27 { pt3dadd( -43.6519, -73.0391, -10.7543, 0.28 ) }
    dend_27 { pt3dadd( -44.1347, -73.7964, -10.6359, 0.55 ) }
    dend_27 { pt3dadd( -44.906, -74.8654, -10.4959, 0.28 ) }
    dend_27 { pt3dadd( -46.1272, -76.4643, -10.3457, 0.83 ) }
    dend_27 { pt3dadd( -47.4295, -77.9911, -10.3688, 0.28 ) }
    dend_27 { pt3dadd( -48.1801, -78.8622, -10.4277, 0.55 ) }
    dend_27 { pt3dadd( -49.4634, -80.396, -10.6032, 0.55 ) }
    dend_27 { pt3dadd( -50.8284, -82.1865, -10.8813, 0.55 ) }
    dend_27 { pt3dadd( -52.2303, -84.2711, -11.1486, 0.28 ) }
    dend_27 { pt3dadd( -53.1811, -85.8715, -11.334, 0.28 ) }
    dend_27 { pt3dadd( -53.8363, -86.9947, -11.3745, 0.55 ) }
    dend_27 { pt3dadd( -54.3776, -87.9814, -11.3279, 0.55 ) }
    dend_27 { pt3dadd( -55.2675, -89.8335, -10.8634, 0.28 ) }
    dend_27 { pt3dadd( -56.0237, -91.597, -10.0841, 0.28 ) }
    dend_27 { pt3dadd( -56.2062, -92.0911, -9.8661, 0.55 ) }
    dend_27 { pt3dadd( -56.6872, -93.7131, -9.17447, 0.28 ) }
    dend_27 { pt3dadd( -56.86, -94.3794, -8.95475, 0.55 ) }
    dend_27 { pt3dadd( -57.2663, -96.7375, -8.23328, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -57.3732, -97.7322, -7.96015, 0.55 ) }
    dend_27 { pt3dadd( -57.504, -100.149, -7.4637, 0.28 ) }
    dend_27 { pt3dadd( -57.5363, -101.576, -7.18858, 0.55 ) }
    dend_27 { pt3dadd( -57.6518, -103.39, -6.89898, 0.55 ) }
    dend_27 { pt3dadd( -57.8312, -106.2, -6.46296, 0.28 ) }
    dend_27 { pt3dadd( -57.8687, -106.7, -6.39017, 0.55 ) }
    dend_27 { pt3dadd( -58.0949, -109.318, -5.90722, 0.28 ) }
    dend_27 { pt3dadd( -58.3651, -111.929, -5.28073, 0.28 ) }
    dend_27 { pt3dadd( -58.9854, -116.415, -4.28269, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 9/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.0021, -78.3136, -8.36585, 0.55 ) }
    dend_17 { pt3dadd( 2.7388, -81.0876, -8.82786, 0.55 ) }
    dend_17 { pt3dadd( 2.50024, -83.6043, -9.2455, 0.55 ) }
    dend_17 { pt3dadd( 1.86781, -87.2023, -9.9161, 0.55 ) }
    dend_17 { pt3dadd( 1.12028, -90.5556, -10.695, 0.83 ) }
    dend_17 { pt3dadd( 0.495035, -93.1208, -11.3379, 0.83 ) }
    dend_17 { pt3dadd( -0.0389589, -94.9509, -11.7974, 0.83 ) }
    dend_17 { pt3dadd( -0.640589, -96.462, -12.2653, 0.55 ) }
    dend_17 { pt3dadd( -2.05663, -99.4429, -13.2068, 0.55 ) }
    dend_17 { pt3dadd( -3.19988, -101.783, -14.0144, 0.55 ) }
    dend_17 { pt3dadd( -3.71269, -102.666, -14.3549, 0.55 ) }
    dend_17 { pt3dadd( -4.94071, -104.598, -15.1222, 0.55 ) }
    dend_17 { pt3dadd( -6.23785, -106.666, -15.9046, 0.55 ) }
    dend_17 { pt3dadd( -6.94683, -107.83, -16.2998, 0.83 ) }
    dend_17 { pt3dadd( -7.56727, -108.945, -16.5877, 1.11 ) }
    dend_17 { pt3dadd( -8.51776, -110.659, -16.9102, 0.83 ) }
    dend_17 { pt3dadd( -8.77798, -111.113, -16.9756, 0.83 ) }
    dend_17 { pt3dadd( -9.46256, -112.293, -17.0766, 0.55 ) }
    dend_17 { pt3dadd( -10.9295, -114.602, -16.989, 0.83 ) }
    dend_17 { pt3dadd( -11.9317, -116.031, -16.8531, 0.83 ) }
    dend_17 { pt3dadd( -12.5876, -116.883, -16.763, 0.55 ) }
    dend_17 { pt3dadd( -14.2118, -118.866, -16.5291, 0.83 ) }
    dend_17 { pt3dadd( -15.3839, -120.334, -16.3727, 0.83 ) }
    dend_17 { pt3dadd( -16.7283, -122.118, -16.3227, 0.55 ) }
    dend_17 { pt3dadd( -18.0398, -123.949, -16.4058, 0.83 ) }
    dend_17 { pt3dadd( -19.6128, -125.985, -16.7241, 0.55 ) }
    dend_17 { pt3dadd( -20.5202, -127.186, -16.9648, 0.55 ) }
    dend_17 { pt3dadd( -21.5745, -128.728, -17.3617, 1.11 ) }
    dend_17 { pt3dadd( -23.363, -131.587, -18.1537, 0.55 ) }
    dend_17 { pt3dadd( -24.1355, -132.838, -18.5579, 0.55 ) }
    dend_17 { pt3dadd( -25.6905, -135.415, -19.4035, 0.55 ) }
    dend_17 { pt3dadd( -27.1528, -137.999, -20.1851, 1.11 ) }
    dend_17 { pt3dadd( -28.4552, -140.364, -20.8821, 0.55 ) }
    dend_17 { pt3dadd( -29.9198, -142.968, -21.5241, 1.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 43/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.0021, -78.3136, -8.36585, 0.55 ) }
    dend_16 { pt3dadd( 2.89305, -80.0133, -7.77582, 0.55 ) }
    dend_16 { pt3dadd( 2.75759, -81.3194, -7.1643, 0.55 ) }
    dend_16 { pt3dadd( 2.38749, -83.948, -5.90584, 0.55 ) }
    dend_16 { pt3dadd( 2.11347, -86.0017, -4.95706, 0.55 ) }
    dend_16 { pt3dadd( 1.81313, -88.0969, -3.9747, 0.55 ) }
    dend_16 { pt3dadd( 1.55766, -89.8596, -3.17522, 0.83 ) }
    dend_16 { pt3dadd( 1.13031, -92.9104, -1.84952, 0.83 ) }
    dend_16 { pt3dadd( 0.919955, -94.4218, -1.21171, 0.83 ) }
    dend_16 { pt3dadd( 0.680056, -96.4099, -0.504562, 0.83 ) }
    dend_16 { pt3dadd( 0.569022, -97.7428, -0.10077, 0.83 ) }
    dend_16 { pt3dadd( 0.406167, -99.3146, 0.296902, 0.83 ) }
    dend_16 { pt3dadd( 0.0689251, -102.409, 1.06836, 0.83 ) }
    dend_16 { pt3dadd( -0.172846, -105.13, 1.74938, 0.83 ) }
    dend_16 { pt3dadd( -0.435535, -108.003, 2.54615, 0.83 ) }
    dend_16 { pt3dadd( -0.76658, -110.788, 3.2842, 0.83 ) }
    dend_16 { pt3dadd( -1.11117, -113.561, 3.95582, 0.55 ) }
    dend_16 { pt3dadd( -1.39668, -115.758, 4.48664, 0.83 ) }
    dend_16 { pt3dadd( -1.66869, -117.64, 4.89346, 0.55 ) }
    dend_16 { pt3dadd( -1.77289, -118.436, 5.07512, 0.55 ) }
    dend_16 { pt3dadd( -2.11205, -120.971, 5.6756, 0.55 ) }
    dend_16 { pt3dadd( -2.35019, -122.751, 6.06082, 0.55 ) }
    dend_16 { pt3dadd( -2.52186, -124.06, 6.32185, 0.55 ) }
    dend_16 { pt3dadd( -3.07049, -127.957, 7.09579, 0.55 ) }
    dend_16 { pt3dadd( -3.38593, -130.589, 7.76789, 0.55 ) }
    dend_16 { pt3dadd( -3.58296, -132.555, 8.40379, 0.55 ) }
    dend_16 { pt3dadd( -3.71562, -134.063, 8.98177, 0.55 ) }
    dend_16 { pt3dadd( -3.93507, -136.013, 9.79536, 0.55 ) }
    dend_16 { pt3dadd( -4.07582, -137.166, 10.2964, 0.55 ) }
    dend_16 { pt3dadd( -4.30319, -140.174, 11.5859, 0.55 ) }
    dend_16 { pt3dadd( -4.39847, -141.199, 11.9877, 0.55 ) }
    dend_16 { pt3dadd( -4.50371, -142.173, 12.3636, 0.83 ) }
    dend_16 { pt3dadd( -4.61284, -143.74, 12.9573, 0.55 ) }
    dend_16 { pt3dadd( -4.61948, -144.629, 13.2992, 0.55 ) }
    dend_16 { pt3dadd( -4.56497, -146.654, 13.8967, 0.55 ) }
    dend_16 { pt3dadd( -4.379, -149.173, 14.3922, 0.55 ) }
    dend_16 { pt3dadd( -4.1177, -151.033, 14.6952, 0.55 ) }
    dend_16 { pt3dadd( -3.79093, -152.99, 14.9685, 0.55 ) }
    dend_16 { pt3dadd( -3.59492, -153.928, 15.0806, 0.55 ) }
    dend_16 { pt3dadd( -3.06295, -156.154, 15.3215, 0.55 ) }
    dend_16 { pt3dadd( -2.58154, -158.494, 15.6049, 0.55 ) }
    dend_16 { pt3dadd( -2.37033, -160.086, 15.7702, 0.55 ) }
    dend_16 { pt3dadd( -2.37995, -161.428, 15.8904, 0.55 ) }
    dend_16 { pt3dadd( -2.49986, -162.576, 15.961, 0.55 ) }
    dend_16 { pt3dadd( -2.78534, -164.166, 16.1016, 0.55 ) }
    dend_16 { pt3dadd( -3.46402, -167.058, 16.3622, 0.83 ) }
    dend_16 { pt3dadd( -4.31832, -169.754, 16.4604, 0.55 ) }
    dend_16 { pt3dadd( -5.31453, -172.029, 16.4641, 0.55 ) }
    dend_16 { pt3dadd( -5.92231, -173.315, 16.4421, 0.83 ) }
    dend_16 { pt3dadd( -7.15335, -175.661, 16.3453, 0.55 ) }
    dend_16 { pt3dadd( -8.20164, -177.475, 16.2172, 0.55 ) }
    dend_16 { pt3dadd( -9.56132, -179.779, 15.9077, 0.55 ) }
    dend_16 { pt3dadd( -11.3991, -182.612, 15.4411, 0.83 ) }
    dend_16 { pt3dadd( -12.0947, -190.313, 18.431, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 14.3096, -58.8617, -10.7126, 0.55 ) }
    dend_14 { pt3dadd( 14.697, -61.5254, -9.46144, 0.55 ) }
    dend_14 { pt3dadd( 14.9751, -63.9185, -8.26497, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( 15.3006, -67.1184, -6.48962, 0.83 ) }
    dend_14 { pt3dadd( 15.4957, -69.0877, -5.31046, 0.55 ) }
    dend_14 { pt3dadd( 15.7174, -71.1767, -4.04269, 0.83 ) }
    dend_14 { pt3dadd( 16.0914, -74.065, -2.22114, 0.83 ) }
    dend_14 { pt3dadd( 16.4831, -76.0275, -0.897997, 0.55 ) }
    dend_14 { pt3dadd( 17.0712, -78.4183, 0.797923, 0.83 ) }
    dend_14 { pt3dadd( 17.6538, -80.6837, 2.38602, 0.55 ) }
    dend_14 { pt3dadd( 17.9464, -81.7431, 3.07645, 0.55 ) }
    dend_14 { pt3dadd( 18.6187, -83.9575, 4.58056, 0.83 ) }
    dend_14 { pt3dadd( 19.3407, -86.2313, 6.08164, 0.83 ) }
    dend_14 { pt3dadd( 20.2435, -88.6439, 7.69497, 0.55 ) }
    dend_14 { pt3dadd( 20.4837, -89.2872, 8.11034, 0.55 ) }
    dend_14 { pt3dadd( 21.1958, -91.3088, 9.35905, 0.83 ) }
    dend_14 { pt3dadd( 22.3836, -94.9955, 11.5142, 0.55 ) }
    dend_14 { pt3dadd( 22.7013, -96.2416, 12.1576, 0.55 ) }
    dend_14 { pt3dadd( 23.0999, -98.2368, 13.0728, 0.55 ) }
    dend_14 { pt3dadd( 23.3373, -99.3938, 13.5491, 0.55 ) }
    dend_14 { pt3dadd( 23.7191, -100.959, 14.2948, 0.55 ) }
    dend_14 { pt3dadd( 24.0417, -102.068, 14.8648, 0.55 ) }
    dend_14 { pt3dadd( 24.732, -103.609, 15.8728, 0.55 ) }
    dend_14 { pt3dadd( 25.673, -105.285, 17.2175, 0.28 ) }
    dend_14 { pt3dadd( 26.8856, -107.236, 18.9429, 0.83 ) }
    dend_14 { pt3dadd( 28.4192, -109.43, 21.1454, 0.28 ) }
    dend_14 { pt3dadd( 28.8764, -110.024, 21.7983, 0.55 ) }
    dend_14 { pt3dadd( 31.8204, -113.459, 25.8398, 0.28 ) }
    dend_14 { pt3dadd( 32.1985, -113.887, 26.3286, 0.83 ) }
    dend_14 { pt3dadd( 33.5594, -115.495, 28.0832, 0.28 ) }
    dend_14 { pt3dadd( 34.2206, -116.391, 28.9037, 0.55 ) }
    dend_14 { pt3dadd( 34.9543, -117.555, 29.7985, 0.55 ) }
    dend_14 { pt3dadd( 35.8558, -119.162, 30.775, 0.55 ) }
    dend_14 { pt3dadd( 37.063, -121.559, 31.7026, 0.28 ) }
    dend_14 { pt3dadd( 37.3836, -122.197, 31.9404, 0.55 ) }
    dend_14 { pt3dadd( 38.5086, -124.515, 32.6801, 0.28 ) }
    dend_14 { pt3dadd( 38.8482, -125.283, 32.8542, 0.55 ) }
    dend_14 { pt3dadd( 39.6375, -127.226, 33.1267, 0.28 ) }
    dend_14 { pt3dadd( 39.9141, -128.001, 33.1442, 0.83 ) }
    dend_14 { pt3dadd( 41.7577, -135.234, 38.3631, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 14.3096, -58.8617, -10.7126, 0.55 ) }
    dend_13 { pt3dadd( 15.0898, -59.9486, -10.5735, 0.55 ) }
    dend_13 { pt3dadd( 16.472, -61.7132, -10.2952, 0.28 ) }
    dend_13 { pt3dadd( 17.9428, -63.7017, -10.0382, 0.83 ) }
    dend_13 { pt3dadd( 19.1213, -65.3426, -9.79248, 0.28 ) }
    dend_13 { pt3dadd( 19.7426, -66.2466, -9.68068, 0.55 ) }
    dend_13 { pt3dadd( 20.4884, -67.3747, -9.55797, 0.28 ) }
    dend_13 { pt3dadd( 20.971, -68.2138, -9.48209, 0.55 ) }
    dend_13 { pt3dadd( 21.9025, -70.026, -9.38292, 0.28 ) }
    dend_13 { pt3dadd( 22.346, -71.0915, -9.43552, 0.55 ) }
    dend_13 { pt3dadd( 23.0128, -72.7393, -9.60917, 0.28 ) }
    dend_13 { pt3dadd( 23.1228, -73.0318, -9.64153, 0.55 ) }
    dend_13 { pt3dadd( 23.8786, -75.0439, -9.9066, 0.28 ) }
    dend_13 { pt3dadd( 24.1501, -75.7036, -9.9896, 0.55 ) }
    dend_13 { pt3dadd( 25.1997, -78.0319, -10.4443, 0.55 ) }
    dend_13 { pt3dadd( 25.864, -79.5888, -10.815, 0.28 ) }
    dend_13 { pt3dadd( 26.1387, -80.2308, -11.0182, 0.55 ) }
    dend_13 { pt3dadd( 26.4797, -81.0297, -11.3405, 0.28 ) }
    dend_13 { pt3dadd( 26.8032, -81.7722, -11.6761, 0.55 ) }
    dend_13 { pt3dadd( 27.8896, -83.8275, -13.2084, 0.28 ) }
    dend_13 { pt3dadd( 28.3433, -84.5183, -13.9369, 0.55 ) }
    dend_13 { pt3dadd( 29.2403, -85.9825, -15.7794, 0.28 ) }
    dend_13 { pt3dadd( 29.6677, -86.7128, -16.7191, 0.55 ) }
    dend_13 { pt3dadd( 30.3913, -87.9965, -18.3166, 0.55 ) }
    dend_13 { pt3dadd( 32.3403, -91.4004, -22.3987, 0.55 ) }
    dend_13 { pt3dadd( 33.2914, -92.993, -24.241, 0.83 ) }
    dend_13 { pt3dadd( 34.4731, -94.9948, -26.4105, 0.55 ) }
    dend_13 { pt3dadd( 35.5521, -97.0169, -28.3889, 0.28 ) }
    dend_13 { pt3dadd( 36.1249, -98.2303, -29.368, 0.28 ) }
    dend_13 { pt3dadd( 36.4827, -99.1071, -29.9471, 0.55 ) }
    dend_13 { pt3dadd( 37.354, -101.422, -31.0027, 0.28 ) }
    dend_13 { pt3dadd( 38.2858, -103.78, -31.7983, 0.83 ) }
    dend_13 { pt3dadd( 39.2662, -106.03, -32.4326, 0.55 ) }
    dend_13 { pt3dadd( 40.9811, -109.756, -33.3407, 0.28 ) }
    dend_13 { pt3dadd( 42.1691, -112.159, -33.7907, 0.83 ) }
    dend_13 { pt3dadd( 43.0488, -113.757, -34.0648, 0.55 ) }
    dend_13 { pt3dadd( 44.7885, -116.625, -34.4419, 0.28 ) }
    dend_13 { pt3dadd( 45.6746, -117.845, -34.603, 0.55 ) }
    dend_13 { pt3dadd( 47.0287, -119.494, -34.6536, 0.28 ) }
    dend_13 { pt3dadd( 48.5361, -121.205, -34.5977, 0.55 ) }
    dend_13 { pt3dadd( 50.7163, -123.841, -33.1881, 0.28 ) }
    dend_13 { pt3dadd( 51.3831, -124.684, -32.4827, 0.55 ) }
    dend_13 { pt3dadd( 52.7767, -126.419, -30.6529, 0.55 ) }
    dend_13 { pt3dadd( 54.6761, -128.798, -28.0913, 0.28 ) }
    dend_13 { pt3dadd( 55.4127, -129.735, -27.0744, 0.55 ) }
    dend_13 { pt3dadd( 60.3275, -135.859, -20.2747, 0.28 ) }
    dend_13 { pt3dadd( 60.8453, -136.489, -19.549, 0.55 ) }
    dend_13 { pt3dadd( 62.5981, -138.479, -17.3302, 0.28 ) }
    dend_13 { pt3dadd( 64.3894, -140.401, -15.3475, 0.28 ) }
    dend_13 { pt3dadd( 64.9013, -140.882, -14.9549, 0.55 ) }
    dend_13 { pt3dadd( 68.1185, -143.71, -13.2932, 0.28 ) }
    dend_13 { pt3dadd( 69.175, -144.584, -13.1598, 0.55 ) }
    dend_13 { pt3dadd( 71.6594, -146.597, -13.0322, 0.28 ) }
    dend_13 { pt3dadd( 72.716, -147.443, -13.0783, 0.83 ) }
    dend_13 { pt3dadd( 74.3634, -148.723, -13.2824, 0.28 ) }
    dend_13 { pt3dadd( 75.843, -149.803, -13.6423, 0.28 ) }
    dend_13 { pt3dadd( 77.3937, -150.875, -14.1791, 0.28 ) }
    dend_13 { pt3dadd( 78.6349, -151.734, -14.6028, 0.55 ) }
    dend_13 { pt3dadd( 79.6871, -152.469, -15.0459, 0.28 ) }
    dend_13 { pt3dadd( 80.6107, -153.113, -15.3841, 0.55 ) }
    dend_13 { pt3dadd( 82.6986, -154.428, -16.0414, 0.28 ) }
    dend_13 { pt3dadd( 84.4861, -155.315, -16.6167, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 15.2953, -36.1168, -17.4438, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 20.0226, -35.5876, -18.8764, 0.83 ) }
    dend_7 { pt3dadd( 24.0431, -35.1376, -20.0948, 0.83 ) }
    dend_7 { pt3dadd( 28.9056, -34.5933, -21.5684, 0.55 ) }
    dend_7 { pt3dadd( 31.2612, -34.3296, -22.2822, 0.55 ) }
    dend_7 { pt3dadd( 34.3774, -33.9808, -23.2266, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 15.2953, -36.1168, -17.4438, 0.55 ) }
    dend_4 { pt3dadd( 15.5463, -37.7877, -17.9042, 0.55 ) }
    dend_4 { pt3dadd( 15.9242, -39.8506, -18.4238, 0.55 ) }
    dend_4 { pt3dadd( 16.163, -41.2768, -18.7354, 0.83 ) }
    dend_4 { pt3dadd( 16.3433, -42.7334, -19.1399, 0.55 ) }
    dend_4 { pt3dadd( 16.4483, -43.5759, -19.3739, 0.28 ) }
    dend_4 { pt3dadd( 16.6192, -44.6652, -19.6573, 0.55 ) }
    dend_4 { pt3dadd( 16.8021, -46.0426, -19.9746, 0.55 ) }
    dend_4 { pt3dadd( 17.0263, -47.6716, -20.3344, 0.55 ) }
    dend_4 { pt3dadd( 17.4091, -50.6835, -21.1087, 0.28 ) }
    dend_4 { pt3dadd( 17.6389, -52.6242, -21.5958, 0.55 ) }
    dend_4 { pt3dadd( 17.9247, -55.0296, -22.1379, 0.55 ) }
    dend_4 { pt3dadd( 18.4372, -59.0425, -22.9595, 0.55 ) }
    dend_4 { pt3dadd( 18.6737, -60.9112, -23.3038, 0.55 ) }
    dend_4 { pt3dadd( 19.0889, -64.4359, -23.8618, 0.28 ) }
    dend_4 { pt3dadd( 19.3358, -66.8428, -24.1772, 0.55 ) }
    dend_4 { pt3dadd( 19.4917, -68.896, -24.4514, 0.28 ) }
    dend_4 { pt3dadd( 19.536, -69.7382, -24.6568, 0.55 ) }
    dend_4 { pt3dadd( 19.6534, -71.3366, -25.2123, 0.28 ) }
    dend_4 { pt3dadd( 19.7295, -72.4251, -25.6614, 0.55 ) }
    dend_4 { pt3dadd( 19.9096, -74.0517, -26.5548, 0.28 ) }
    dend_4 { pt3dadd( 20.1491, -75.4398, -27.4635, 0.83 ) }
    dend_4 { pt3dadd( 21.0993, -79.9409, -30.8038, 0.55 ) }
    dend_4 { pt3dadd( 21.2097, -80.4299, -31.1577, 0.55 ) }
    dend_4 { pt3dadd( 21.4218, -81.2626, -31.7149, 0.83 ) }
    dend_4 { pt3dadd( 21.992, -83.4467, -33.0526, 0.28 ) }
    dend_4 { pt3dadd( 22.5433, -85.8758, -34.4164, 0.55 ) }
    dend_4 { pt3dadd( 23.0277, -88.3526, -35.7219, 0.28 ) }
    dend_4 { pt3dadd( 23.3162, -90.0268, -36.4801, 0.55 ) }
    dend_4 { pt3dadd( 23.7417, -92.6641, -37.59, 0.28 ) }
    dend_4 { pt3dadd( 23.8355, -93.2676, -37.8521, 0.28 ) }
    dend_4 { pt3dadd( 24.2025, -95.2589, -38.7533, 0.55 ) }
    dend_4 { pt3dadd( 24.8706, -98.2161, -40.1547, 0.28 ) }
    dend_4 { pt3dadd( 25.1212, -99.1532, -40.5942, 0.55 ) }
    dend_4 { pt3dadd( 25.9004, -101.742, -41.8326, 0.28 ) }
    dend_4 { pt3dadd( 26.6939, -104.35, -43.1679, 0.83 ) }
    dend_4 { pt3dadd( 27.3498, -106.665, -44.2102, 0.28 ) }
    dend_4 { pt3dadd( 27.6591, -107.923, -44.7246, 0.55 ) }
    dend_4 { pt3dadd( 28.0158, -109.92, -45.6697, 0.28 ) }
    dend_4 { pt3dadd( 28.2507, -111.968, -46.7988, 0.28 ) }
    dend_4 { pt3dadd( 28.4085, -115.05, -48.8118, 0.55 ) }
    dend_4 { pt3dadd( 28.418, -117.738, -50.5897, 0.28 ) }
    dend_4 { pt3dadd( 28.371, -118.803, -51.3595, 0.55 ) }
    dend_4 { pt3dadd( 28.1738, -121.664, -53.6395, 0.28 ) }
    dend_4 { pt3dadd( 28.1118, -122.163, -54.0621, 0.55 ) }
    dend_4 { pt3dadd( 27.9001, -123.294, -55.1663, 0.28 ) }
    dend_4 { pt3dadd( 27.8291, -123.723, -55.6091, 0.55 ) }
    dend_4 { pt3dadd( 27.7092, -124.508, -56.8, 0.28 ) }
    dend_4 { pt3dadd( 27.702, -124.895, -57.2831, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -29.9198, -142.968, -21.5241, 0.55 ) }
    dend_19 { pt3dadd( -28.5255, -147.363, -20.3781, 0.55 ) }
    dend_19 { pt3dadd( -27.1883, -151.35, -19.3754, 0.83 ) }
    dend_19 { pt3dadd( -25.7823, -155.787, -18.3114, 0.28 ) }
    dend_19 { pt3dadd( -25.339, -157.377, -17.9612, 0.55 ) }
    dend_19 { pt3dadd( -24.7643, -159.819, -17.4671, 0.28 ) }
    dend_19 { pt3dadd( -24.0952, -163.831, -16.7951, 0.28 ) }
    dend_19 { pt3dadd( -24.0501, -164.686, -16.703, 0.28 ) }
    dend_19 { pt3dadd( -24.1881, -166.108, -16.6599, 0.55 ) }
    dend_19 { pt3dadd( -24.5802, -167.795, -16.7875, 0.28 ) }
    dend_19 { pt3dadd( -25.2607, -170.204, -17.1064, 0.83 ) }
    dend_19 { pt3dadd( -26.3888, -173.478, -17.5436, 0.28 ) }
    dend_19 { pt3dadd( -27.2306, -175.61, -17.8926, 0.28 ) }
    dend_19 { pt3dadd( -27.5843, -176.552, -18.0368, 0.55 ) }
    dend_19 { pt3dadd( -28.9285, -180.452, -18.58, 0.28 ) }
    dend_19 { pt3dadd( -29.299, -181.554, -18.75, 0.83 ) }
    dend_19 { pt3dadd( -30.0312, -183.761, -19.0755, 0.28 ) }
    dend_19 { pt3dadd( -30.2209, -184.362, -19.1569, 0.55 ) }
    dend_19 { pt3dadd( -30.9915, -186.84, -19.4716, 0.28 ) }
    dend_19 { pt3dadd( -31.4106, -188.205, -19.6167, 0.55 ) }
    dend_19 { pt3dadd( -32.133, -190.746, -19.6245, 0.28 ) }
    dend_19 { pt3dadd( -32.8107, -192.986, -19.7221, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -29.9198, -142.968, -21.5241, 0.28 ) }
    dend_18 { pt3dadd( -29.9336, -145.131, -22.8856, 0.28 ) }
    dend_18 { pt3dadd( -29.9482, -145.346, -23.0122, 0.83 ) }
    dend_18 { pt3dadd( -30.1199, -147.193, -24.0342, 0.28 ) }
    dend_18 { pt3dadd( -30.2032, -148.089, -24.5298, 0.83 ) }
    dend_18 { pt3dadd( -30.415, -150.366, -25.7899, 0.28 ) }
    dend_18 { pt3dadd( -30.4805, -151.07, -26.1796, 0.55 ) }
    dend_18 { pt3dadd( -30.8375, -152.815, -27.1728, 0.28 ) }
    dend_18 { pt3dadd( -30.9366, -153.305, -27.4343, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 34.3774, -33.9808, -23.2266, 0.55 ) }
    dend_9 { pt3dadd( 36.4679, -34.5748, -23.9324, 0.55 ) }
    dend_9 { pt3dadd( 40.3914, -35.798, -25.4261, 0.55 ) }
    dend_9 { pt3dadd( 44.0699, -37.0777, -26.9058, 0.83 ) }
    dend_9 { pt3dadd( 47.9496, -38.6183, -28.5221, 0.83 ) }
    dend_9 { pt3dadd( 50.0188, -39.5216, -29.4255, 0.55 ) }
    dend_9 { pt3dadd( 50.7347, -39.8898, -29.7306, 0.28 ) }
    dend_9 { pt3dadd( 51.8264, -40.4719, -30.1739, 0.55 ) }
    dend_9 { pt3dadd( 52.7322, -41.0474, -30.5194, 0.28 ) }
    dend_9 { pt3dadd( 53.8029, -41.7469, -30.8179, 0.55 ) }
    dend_9 { pt3dadd( 55.4598, -42.753, -31.4297, 0.55 ) }
    dend_9 { pt3dadd( 58.8383, -44.5197, -32.4999, 0.55 ) }
    dend_9 { pt3dadd( 61.5205, -45.7752, -33.3244, 0.83 ) }
    dend_9 { pt3dadd( 63.4226, -46.6152, -33.8633, 0.55 ) }
    dend_9 { pt3dadd( 66.4015, -47.7655, -34.8084, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 71.9774, -49.5965, -36.6746, 0.55 ) }
    dend_9 { pt3dadd( 75.0846, -50.4443, -37.7028, 0.55 ) }
    dend_9 { pt3dadd( 77.2745, -50.9487, -38.4231, 0.28 ) }
    dend_9 { pt3dadd( 78.9117, -51.3285, -38.9783, 1.11 ) }
    dend_9 { pt3dadd( 84.0242, -52.457, -40.5349, 0.55 ) }
    dend_9 { pt3dadd( 85.7988, -52.8004, -41.0456, 0.55 ) }
    dend_9 { pt3dadd( 89.1827, -53.4631, -41.9407, 0.55 ) }
    dend_9 { pt3dadd( 92.8953, -54.2357, -43.1069, 0.83 ) }
    dend_9 { pt3dadd( 96.9977, -55.1097, -44.4126, 0.28 ) }
    dend_9 { pt3dadd( 99.9368, -55.8078, -45.379, 0.83 ) }
    dend_9 { pt3dadd( 103.695, -56.9447, -46.5853, 0.28 ) }
    dend_9 { pt3dadd( 105.165, -57.4584, -47.1229, 0.83 ) }
    dend_9 { pt3dadd( 107.855, -58.5444, -48.2685, 0.28 ) }
    dend_9 { pt3dadd( 108.435, -58.806, -48.5348, 0.28 ) }
    dend_9 { pt3dadd( 109.354, -59.3513, -48.9299, 0.55 ) }
    dend_9 { pt3dadd( 110.853, -60.547, -49.617, 0.28 ) }
    dend_9 { pt3dadd( 111.485, -61.2818, -49.8063, 0.55 ) }
    dend_9 { pt3dadd( 112.74, -63.075, -49.9793, 0.28 ) }
    dend_9 { pt3dadd( 113.213, -63.8888, -49.9257, 0.55 ) }
    dend_9 { pt3dadd( 114.641, -66.5706, -49.6287, 0.28 ) }
    dend_9 { pt3dadd( 115.414, -67.9392, -49.5366, 0.83 ) }
    dend_9 { pt3dadd( 116.137, -69.1776, -49.4767, 0.28 ) }
    dend_9 { pt3dadd( 116.552, -69.7669, -49.5276, 0.55 ) }
    dend_9 { pt3dadd( 117.276, -70.5965, -49.7287, 0.28 ) }
    dend_9 { pt3dadd( 119.239, -72.4173, -50.5947, 0.83 ) }
    dend_9 { pt3dadd( 121.256, -74.0652, -51.5819, 0.55 ) }
    dend_9 { pt3dadd( 121.895, -74.6047, -51.9216, 0.83 ) }
    dend_9 { pt3dadd( 124.518, -76.7945, -53.3778, 0.28 ) }
    dend_9 { pt3dadd( 125.661, -77.7513, -54.0233, 1.11 ) }
    dend_9 { pt3dadd( 128.489, -80.0897, -55.5646, 0.55 ) }
    dend_9 { pt3dadd( 130.102, -81.4311, -56.4109, 1.11 ) }
    dend_9 { pt3dadd( 133.358, -84.4535, -57.9095, 0.55 ) }
    dend_9 { pt3dadd( 133.791, -84.8848, -58.0805, 0.83 ) }
    dend_9 { pt3dadd( 136.18, -87.5187, -58.7669, 0.28 ) }
    dend_9 { pt3dadd( 137.01, -88.5493, -58.9347, 0.55 ) }
    dend_9 { pt3dadd( 138.427, -90.4443, -59.0789, 0.28 ) }
    dend_9 { pt3dadd( 140.088, -92.7929, -59.1574, 0.83 ) }
    dend_9 { pt3dadd( 143.218, -97.1788, -59.088, 0.28 ) }
    dend_9 { pt3dadd( 144.485, -98.9268, -59.055, 0.83 ) }
    dend_9 { pt3dadd( 147.222, -102.703, -58.936, 0.28 ) }
    dend_9 { pt3dadd( 148.441, -104.331, -58.9171, 0.55 ) }
    dend_9 { pt3dadd( 149.897, -106.085, -58.9785, 0.28 ) }
    dend_9 { pt3dadd( 151.172, -107.389, -59.1309, 0.55 ) }
    dend_9 { pt3dadd( 152.363, -108.457, -59.3461, 0.28 ) }
    dend_9 { pt3dadd( 152.715, -108.716, -59.4409, 0.55 ) }
    dend_9 { pt3dadd( 154.564, -109.79, -60.026, 0.28 ) }
    dend_9 { pt3dadd( 156.793, -111.022, -60.6568, 0.55 ) }
    dend_9 { pt3dadd( 159.056, -112.223, -61.3272, 0.28 ) }
    dend_9 { pt3dadd( 159.973, -112.779, -61.6153, 0.55 ) }
    dend_9 { pt3dadd( 161.02, -113.451, -61.9532, 0.28 ) }
    dend_9 { pt3dadd( 161.284, -113.622, -62.0441, 0.55 ) }
    dend_9 { pt3dadd( 164.225, -115.692, -63.1023, 0.28 ) }
    dend_9 { pt3dadd( 165.363, -116.78, -63.3385, 0.55 ) }
    dend_9 { pt3dadd( 166.294, -117.915, -63.4335, 0.28 ) }
    dend_9 { pt3dadd( 166.527, -118.289, -63.3909, 0.55 ) }
    dend_9 { pt3dadd( 167.399, -119.953, -63.0784, 0.28 ) }
    dend_9 { pt3dadd( 167.922, -121.157, -62.9135, 0.55 ) }
    dend_9 { pt3dadd( 169.018, -125.091, -62.038, 0.28 ) }
    dend_9 { pt3dadd( 169.372, -126.345, -61.8006, 0.83 ) }
    dend_9 { pt3dadd( 169.925, -128.432, -61.4266, 0.28 ) }
    dend_9 { pt3dadd( 170.414, -130.233, -61.1823, 0.55 ) }
    dend_9 { pt3dadd( 171.292, -133.504, -60.8736, 0.28 ) }
    dend_9 { pt3dadd( 172.463, -137.685, -60.4283, 0.83 ) }
    dend_9 { pt3dadd( 174.122, -143.051, -59.9484, 0.28 ) }
    dend_9 { pt3dadd( 174.634, -144.7, -59.7512, 0.83 ) }
    dend_9 { pt3dadd( 175.248, -146.612, -59.4366, 0.28 ) }
    dend_9 { pt3dadd( 175.662, -147.924, -59.1353, 0.55 ) }
    dend_9 { pt3dadd( 177.234, -152.375, -57.6608, 0.28 ) }
    dend_9 { pt3dadd( 177.442, -152.893, -57.478, 0.55 ) }
    dend_9 { pt3dadd( 177.84, -153.855, -57.0316, 0.28 ) }
    dend_9 { pt3dadd( 178.193, -154.573, -56.7838, 0.28 ) }
    dend_9 { pt3dadd( 178.321, -154.841, -56.6859, 0.55 ) }
    dend_9 { pt3dadd( 179.414, -156.779, -56.3838, 0.28 ) }
    dend_9 { pt3dadd( 179.97, -157.543, -56.6801, 0.55 ) }
    dend_9 { pt3dadd( 182.068, -160.341, -58.0211, 0.28 ) }
    dend_9 { pt3dadd( 182.485, -160.855, -58.3621, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 76/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 34.3774, -33.9808, -23.2266, 0.55 ) }
    dend_8 { pt3dadd( 35.7543, -33.5709, -23.4267, 0.55 ) }
    dend_8 { pt3dadd( 37.5589, -32.9333, -23.588, 0.55 ) }
    dend_8 { pt3dadd( 39.091, -32.3015, -23.6282, 0.28 ) }
    dend_8 { pt3dadd( 43.1953, -30.4857, -23.7037, 0.83 ) }
    dend_8 { pt3dadd( 46.9573, -28.936, -23.7044, 0.55 ) }
    dend_8 { pt3dadd( 50.6825, -27.5164, -23.6453, 0.55 ) }
    dend_8 { pt3dadd( 53.7295, -26.3396, -23.5282, 0.55 ) }
    dend_8 { pt3dadd( 56.0091, -25.4693, -23.4622, 0.55 ) }
    dend_8 { pt3dadd( 58.5741, -24.5201, -23.361, 0.55 ) }
    dend_8 { pt3dadd( 61.5208, -23.4735, -23.1229, 0.55 ) }
    dend_8 { pt3dadd( 63.7894, -22.7377, -22.9148, 0.55 ) }
    dend_8 { pt3dadd( 65.8079, -22.0657, -22.8666, 0.83 ) }
    dend_8 { pt3dadd( 68.6586, -21.0434, -23.0562, 0.55 ) }
    dend_8 { pt3dadd( 70.194, -20.3011, -23.3481, 0.55 ) }
    dend_8 { pt3dadd( 72.2137, -19.0367, -23.8383, 0.55 ) }
    dend_8 { pt3dadd( 73.2493, -18.2655, -24.1735, 0.55 ) }
    dend_8 { pt3dadd( 75.1383, -16.7187, -24.8991, 0.55 ) }
    dend_8 { pt3dadd( 78.2411, -13.969, -26.0794, 0.55 ) }
    dend_8 { pt3dadd( 80.7887, -11.4874, -26.9879, 1.11 ) }
    dend_8 { pt3dadd( 82.4789, -9.69069, -27.6036, 0.55 ) }
    dend_8 { pt3dadd( 83.9159, -8.03086, -28.0513, 0.83 ) }
    dend_8 { pt3dadd( 85.0265, -6.6551, -28.3348, 0.28 ) }
    dend_8 { pt3dadd( 86.5128, -4.78881, -28.5453, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( 89.2425, -1.23846, -28.6132, 0.28 ) }
    dend_8 { pt3dadd( 89.7519, -0.508056, -28.5651, 0.83 ) }
    dend_8 { pt3dadd( 91.5861, 2.40982, -28.3409, 0.83 ) }
    dend_8 { pt3dadd( 93.7651, 6.21928, -27.9716, 0.55 ) }
    dend_8 { pt3dadd( 94.7371, 8.14312, -27.7316, 0.55 ) }
    dend_8 { pt3dadd( 95.2116, 9.24193, -27.6626, 0.55 ) }
    dend_8 { pt3dadd( 96.3192, 12.3188, -27.4918, 0.28 ) }
    dend_8 { pt3dadd( 96.6112, 13.2419, -27.4656, 0.55 ) }
    dend_8 { pt3dadd( 97.0274, 14.7862, -27.4533, 0.28 ) }
    dend_8 { pt3dadd( 97.8804, 17.97, -27.3701, 0.55 ) }
    dend_8 { pt3dadd( 99.6424, 24.0537, -27.1999, 0.28 ) }
    dend_8 { pt3dadd( 99.8838, 24.8307, -27.1716, 0.55 ) }
    dend_8 { pt3dadd( 100.982, 28.0351, -26.9988, 0.28 ) }
    dend_8 { pt3dadd( 101.456, 29.2793, -26.8786, 0.55 ) }
    dend_8 { pt3dadd( 102.383, 31.489, -26.542, 0.55 ) }
    dend_8 { pt3dadd( 103.027, 33.005, -26.2395, 0.55 ) }
    dend_8 { pt3dadd( 103.619, 34.5499, -25.7634, 0.55 ) }
    dend_8 { pt3dadd( 104.818, 37.6983, -24.8394, 0.28 ) }
    dend_8 { pt3dadd( 105.37, 39.1503, -24.4414, 0.55 ) }
    dend_8 { pt3dadd( 106.326, 41.4671, -23.9608, 0.28 ) }
    dend_8 { pt3dadd( 106.978, 42.8271, -23.9134, 0.28 ) }
    dend_8 { pt3dadd( 107.662, 44.0656, -24.0185, 0.55 ) }
    dend_8 { pt3dadd( 108.993, 46.2551, -24.6321, 0.28 ) }
    dend_8 { pt3dadd( 110.306, 48.391, -25.5192, 0.83 ) }
    dend_8 { pt3dadd( 112.059, 51.396, -27.2124, 0.55 ) }
    dend_8 { pt3dadd( 114.54, 55.724, -30.0075, 0.55 ) }
    dend_8 { pt3dadd( 115.126, 56.7518, -30.707, 0.83 ) }
    dend_8 { pt3dadd( 117.494, 61.1058, -33.7517, 0.28 ) }
    dend_8 { pt3dadd( 117.988, 62.0971, -34.4099, 0.55 ) }
    dend_8 { pt3dadd( 120.504, 67.5025, -37.6762, 0.28 ) }
    dend_8 { pt3dadd( 120.95, 68.5517, -38.1795, 0.55 ) }
    dend_8 { pt3dadd( 121.841, 70.5808, -38.8662, 0.28 ) }
    dend_8 { pt3dadd( 122.296, 71.502, -39.1066, 0.55 ) }
    dend_8 { pt3dadd( 123.704, 74.0095, -39.2584, 0.28 ) }
    dend_8 { pt3dadd( 124.417, 75.1975, -39.2041, 0.28 ) }
    dend_8 { pt3dadd( 126.259, 78.0691, -38.6211, 0.55 ) }
    dend_8 { pt3dadd( 127.538, 80.0575, -38.2149, 0.28 ) }
    dend_8 { pt3dadd( 127.899, 80.6136, -38.0868, 0.55 ) }
    dend_8 { pt3dadd( 130.001, 83.7399, -37.3633, 0.28 ) }
    dend_8 { pt3dadd( 130.263, 84.1099, -37.2737, 0.55 ) }
    dend_8 { pt3dadd( 131.73, 86.1898, -36.5896, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 27.702, -124.895, -57.2831, 0.28 ) }
    dend_6 { pt3dadd( 27.2588, -127.183, -58.725, 0.28 ) }
    dend_6 { pt3dadd( 27.1215, -127.969, -59.1685, 0.55 ) }
    dend_6 { pt3dadd( 26.8075, -129.894, -60.2546, 0.28 ) }
    dend_6 { pt3dadd( 26.3996, -132.369, -61.4131, 0.55 ) }
    dend_6 { pt3dadd( 26.02, -134.754, -62.5624, 0.28 ) }
    dend_6 { pt3dadd( 25.7748, -136.371, -63.2338, 0.55 ) }
    dend_6 { pt3dadd( 25.5322, -138.324, -64.0062, 0.28 ) }
    dend_6 { pt3dadd( 25.4079, -139.382, -64.3459, 0.55 ) }
    dend_6 { pt3dadd( 24.9536, -142.909, -65.183, 0.28 ) }
    dend_6 { pt3dadd( 24.5873, -145.405, -65.5871, 0.55 ) }
    dend_6 { pt3dadd( 23.6775, -150.885, -66.2912, 0.28 ) }
    dend_6 { pt3dadd( 23.571, -151.578, -66.3513, 0.55 ) }
    dend_6 { pt3dadd( 22.7978, -157.106, -66.7385, 0.28 ) }
    dend_6 { pt3dadd( 22.6008, -159.337, -66.8255, 0.55 ) }
    dend_6 { pt3dadd( 22.4715, -161.58, -66.8688, 0.28 ) }
    dend_6 { pt3dadd( 22.445, -162.635, -66.8706, 0.55 ) }
    dend_6 { pt3dadd( 22.4687, -166.909, -66.8986, 0.28 ) }
    dend_6 { pt3dadd( 22.4998, -168.094, -66.9155, 0.55 ) }
    dend_6 { pt3dadd( 22.978, -175.785, -67.1547, 0.28 ) }
    dend_6 { pt3dadd( 23.0767, -177.125, -67.207, 0.83 ) }
    dend_6 { pt3dadd( 23.3179, -180.436, -67.3303, 0.28 ) }
    dend_6 { pt3dadd( 23.4182, -182.033, -67.3897, 0.55 ) }
    dend_6 { pt3dadd( 23.5989, -185.825, -67.5584, 0.28 ) }
    dend_6 { pt3dadd( 23.7264, -188.867, -67.6852, 0.28 ) }
    dend_6 { pt3dadd( 23.749, -190.047, -67.7159, 0.55 ) }
    dend_6 { pt3dadd( 23.799, -191.868, -67.7612, 0.28 ) }
    dend_6 { pt3dadd( 23.7924, -193.598, -67.7796, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 69/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 27.702, -124.895, -57.2831, 0.28 ) }
    dend_5 { pt3dadd( 27.84, -127.701, -57.3761, 0.28 ) }
    dend_5 { pt3dadd( 27.7997, -128.226, -57.3104, 0.55 ) }
    dend_5 { pt3dadd( 27.6256, -129.398, -57.1211, 0.28 ) }
    dend_5 { pt3dadd( 27.5349, -129.958, -57.028, 0.55 ) }
    dend_5 { pt3dadd( 27.3689, -131.036, -56.9122, 0.28 ) }
    dend_5 { pt3dadd( 27.3286, -131.322, -56.8987, 0.55 ) }
    dend_5 { pt3dadd( 26.7988, -134.317, -56.9712, 0.28 ) }
    dend_5 { pt3dadd( 26.694, -134.859, -56.9909, 0.83 ) }
    dend_5 { pt3dadd( 26.4632, -136.124, -57.1075, 0.83 ) }
    dend_5 { pt3dadd( 26.0479, -138.641, -57.5101, 0.28 ) }
    dend_5 { pt3dadd( 25.8777, -139.805, -57.7743, 0.55 ) }
    dend_5 { pt3dadd( 25.7098, -141.52, -58.4168, 0.28 ) }
    dend_5 { pt3dadd( 25.6463, -142.762, -59.0018, 0.28 ) }
    dend_5 { pt3dadd( 25.6159, -143.653, -59.398, 0.55 ) }
    dend_5 { pt3dadd( 25.5661, -144.903, -59.9671, 0.28 ) }
    dend_5 { pt3dadd( 25.5483, -145.419, -60.1946, 0.55 ) }
    dend_5 { pt3dadd( 25.4577, -148.435, -61.4326, 0.28 ) }
    dend_5 { pt3dadd( 25.4536, -150.975, -62.5328, 0.28 ) }
    dend_5 { pt3dadd( 25.4637, -151.918, -62.9535, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_2 = new SectionList()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_57, dend_54, dend_49, dend_42, dend_41, dend_34, dend_29, dend_0, axon_0, dend_59, dend_58, dend_56, dend_55, dend_53, dend_50, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_1, axon_1, dend_52, dend_51, dend_46, dend_45, dend_37, dend_36, dend_32, dend_31, dend_24, dend_21, dend_11, dend_2, dend_48, dend_47, dend_39, dend_38, dend_26, dend_25, dend_23, dend_22, dend_15, dend_12, dend_10, dend_3, dend_28, dend_27, dend_17, dend_16, dend_14, dend_13, dend_7, dend_4, dend_19, dend_18, dend_9, dend_8, dend_6, dend_5]}
    ModelViewParmSubset_5 = new SectionList()
    dend_57 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_41 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_59 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_58 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_56 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_55 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_53 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_43 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_36 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_48 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_39 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_26 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_25 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_10 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_28 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_27 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_17 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_16 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_14 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_4 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_6 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_34 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_49 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_57 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_42 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_35 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_50 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_24 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_44 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_54 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_46 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_12 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_51 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_22 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_5 OneSecGrp_SectionRef_63.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 7
    dend_59 nseg = 7
    dend_58 nseg = 5
    dend_56 nseg = 13
    dend_55 nseg = 5
    dend_53 nseg = 7
    dend_43 nseg = 5
    dend_40 nseg = 3
    dend_33 nseg = 9
    dend_52 nseg = 3
    dend_45 nseg = 5
    dend_36 nseg = 3
    dend_32 nseg = 3
    dend_31 nseg = 9
    dend_21 nseg = 3
    dend_48 nseg = 5
    dend_47 nseg = 7
    dend_39 nseg = 7
    dend_38 nseg = 7
    dend_26 nseg = 3
    dend_25 nseg = 7
    dend_15 nseg = 3
    dend_10 nseg = 7
    dend_28 nseg = 3
    dend_27 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 5
    dend_14 nseg = 5
    dend_13 nseg = 7
    dend_4 nseg = 5
    dend_19 nseg = 3
    dend_9 nseg = 11
    dend_8 nseg = 9
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L23_NBC_a489bc1d50_0_0


