// Cell: cSTUT189_L6_NBC_63dc8fdbb5_0_0
/*
{
  "id" : "cSTUT189_L6_NBC_63dc8fdbb5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-13.6672, -4.21761, 2.88746, 3.77586", "-12.3226, -3.91408, 2.62074, 6.64131", "-10.9781, -3.61056, 2.35401, 8.80204", "-9.63356, -3.30703, 2.08728, 10.3184", "-8.28902, -3.0035, 1.82056, 12.1801", "-6.94448, -2.69998, 1.55383, 13.9015", "-5.59994, -2.39645, 1.28711, 15.2125", "-4.2554, -2.09293, 1.02038, 16.1357", "-2.91086, -1.7894, 0.753656, 16.8349", "-1.56632, -1.48588, 0.486931, 17.1545", "-0.221778, -1.18235, 0.220205, 17.2905", "1.12276, -0.878824, -0.0465203, 17.299", "2.4673, -0.575298, -0.313246, 17.3774", "3.81184, -0.271773, -0.579971, 17.0096", "5.15639, 0.0317532, -0.846697, 16.2957", "6.50093, 0.335279, -1.11342, 15.4071", "7.84547, 0.638805, -1.38015, 13.8209", "9.19001, 0.942331, -1.64687, 12.2266", "10.5345, 1.24586, -1.9136, 10.4487", "11.8791, 1.54938, -2.18032, 8.51007", "13.2236, 1.85291, -2.44705, 4.94822" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "2.86402, -8.66581, -8.21721, 0.88", "2.86402, -8.66581, -8.21721, 0.88", "3.22672, -9.55123, -8.4724, 0.88", "3.8514, -10.87, -8.84998, 0.88", "4.51712, -12.153, -9.24585, 0.81", "5.50983, -13.9181, -9.80506, 0.88", "6.12483, -14.9495, -10.1658, 1.4", "6.55398, -15.6119, -10.4181, 1.69", "6.97028, -16.2023, -10.6626, 1.84", "7.42261, -16.8418, -10.9352, 1.84", "8.03222, -17.8174, -11.3168, 0.66", "8.54965, -18.9284, -11.6517, 0.44", "8.81424, -19.7734, -11.8539, 0.66", "8.94304, -20.3772, -11.9707, 0.88", "9.10754, -21.3602, -12.1098, 0.96", "9.21087, -22.058, -12.1789, 0.96", "9.34483, -22.9408, -12.2547, 0.74", "9.56707, -24.1761, -12.3462, 0.44", "9.78699, -25.1593, -12.4523, 0.29", "10.0231, -26.0085, -12.5662, 0.29", "10.3386, -26.9781, -12.7093, 1.62", "10.6839, -27.9274, -12.8511, 2.36", "10.876, -28.3885, -12.9134, 2.8", "11.0366, -28.7584, -12.9558, 2.95", "11.5073, -29.9896, -13.0603, 1.62", "11.9123, -31.2219, -13.1253, 0.66", "12.2535, -32.3343, -13.2235, 0.29", "12.6443, -33.5982, -13.4175, 0.29", "12.9013, -34.4338, -13.5842, 0.29", "13.3035, -35.8759, -13.9253, 2.28", "13.5448, -36.8625, -14.2125, 2.5", "14.0106, -39.0584, -14.9543, 0.66", "14.3199, -40.554, -15.4677, 0.29", "14.4715, -41.2864, -15.7284, 0.29", "14.8759, -43.0356, -16.3448, 2.73", "15.0292, -43.6416, -16.5651, 3.46", "15.2003, -44.3208, -16.8315, 3.46", "15.7902, -46.7633, -17.7458, 0.15", "15.9948, -47.5811, -18.0616, 0.15", "16.204, -48.3403, -18.3856, 0.88", "16.4809, -49.277, -18.8242, 1.18", "16.857, -50.623, -19.501, 0.88", "17.0955, -51.5632, -19.9925, 0.15", "17.402, -52.9624, -20.7402, 1.92", "17.5618, -53.6789, -21.0842, 2.87", "17.6893, -54.2626, -21.3523, 2.87", "18.1298, -56.345, -22.2503, 0.74", "18.3177, -57.2633, -22.6272, 0.29", "18.4324, -57.8586, -22.8852, 0.59", "18.5552, -58.5804, -23.1816, 0.74", "18.8258, -60.324, -23.8283, 0.22", "19.025, -61.7744, -24.3068, 1.25", "19.105, -62.4622, -24.5213, 1.55", "19.3415, -64.3552, -25.1089, 0.22", "19.5722, -65.9695, -25.5823, 0.22", "19.6955, -66.7391, -25.7853, 0.88", "19.8481, -67.5192, -25.9423, 1.18", "20.0354, -68.3107, -26.0996, 0.96", "20.4313, -69.6939, -26.3921, 0.22", "20.6912, -70.4112, -26.5419, 0.52", "20.7894, -70.6573, -26.6096, 0.66", "21.1604, -71.5987, -26.8784, 0.22", "21.8343, -73.3605, -27.3981, 2.8", "22.0863, -74.0492, -27.5974, 3.24", "22.3329, -74.8058, -27.8351, 2.95", "23.1227, -77.3845, -28.6705, 0.29", "23.5744, -78.919, -29.15, 0.15", "23.8461, -79.8981, -29.4445, 0.96", "23.9678, -80.3529, -29.568, 1.18", "24.4266, -82.1995, -30.0807, 0.22", "24.5575, -82.7296, -30.2324, 0.52", "25.0012, -84.2985, -30.6554, 0.22", "25.3414, -85.4157, -30.9744, 1.69", "25.6162, -86.2632, -31.2103, 2.36", "25.8976, -87.0701, -31.457, 2.5", "26.647, -89.0728, -32.0646, 0.22", "27.3961, -91.102, -32.7169, 0.22", "27.7036, -91.9374, -32.9978, 1.33", "27.9639, -92.6629, -33.2322, 1.92", "28.2789, -93.6075, -33.5258, 2.06", "28.9543, -95.7619, -34.1102, 0.22", "29.2383, -96.731, -34.3541, 0.74", "29.2925, -96.9204, -34.398, 0.74", "29.6274, -98.0427, -34.6159, 0.22", "29.9584, -99.1643, -34.797, 1.69", "30.227, -100.081, -34.9082, 2.43", "30.3514, -100.521, -34.956, 2.5", "31.0573, -103.28, -35.0528, 0.15", "31.3893, -104.741, -35.0442, 0.15", "31.4951, -105.367, -35.0178, 0.59", "31.5738, -105.99, -34.975, 0.74", "31.7727, -108.232, -34.796, 0.22", "31.8918, -110.48, -34.6013, 2.5", "31.9064, -111.101, -34.5489, 2.95", "31.9638, -115.014, -34.2385, 0.22", "31.977, -115.547, -34.1987, 0.81", "31.9844, -115.999, -34.1904, 0.81", "32.0081, -118.597, -34.2914, 0.22", "32.0401, -119.923, -34.4287, 1.69", "32.0751, -120.769, -34.535, 2.14", "32.2201, -122.977, -34.8698, 0.22", "32.4153, -125.527, -35.2316, 1.25", "32.455, -126.059, -35.3012, 1.47", "32.589, -128.634, -35.4993, 0.22", "32.6043, -129.392, -35.5105, 0.74", "32.5774, -129.993, -35.4876, 0.74", "32.4182, -131.212, -35.3508, 0.22", "32.2567, -132.052, -35.194, 0.22", "31.7215, -134.083, -34.8132, 2.21", "31.5005, -134.717, -34.6953, 2.73", "30.5998, -136.977, -34.3917, 0.22", "30.1032, -138.089, -34.3041, 0.22", "29.7535, -138.797, -34.298, 0.81", "29.5013, -139.278, -34.323, 1.03", "29.1821, -139.833, -34.389, 0.81", "28.3537, -141.1, -34.5296, 0.22", "27.9096, -141.696, -34.5913, 1.18", "27.45, -142.292, -34.6402, 1.4", "27.1019, -142.735, -34.6655, 1.18", "26.0126, -144.27, -34.6966, 0.22", "25.3656, -145.344, -34.6393, 0.22", "25.1695, -145.739, -34.5974, 0.96", "24.9393, -146.338, -34.5335, 1.18", "24.7749, -146.878, -34.4776, 0.88", "24.1072, -149.618, -34.2066, 0.22", "23.7915, -151.501, -34.0404, 2.73", "23.7085, -152.183, -33.9774, 2.8", "23.4856, -154.389, -33.7678, 0.22", "23.424, -155.07, -33.7441, 0.74", "23.3996, -155.338, -33.7583, 0.81", "23.2468, -156.659, -33.9694, 0.22", "23.1651, -157.178, -34.1023, 0.52", "23.0878, -157.518, -34.213, 0.74", "22.4128, -160.001, -35.2619, 0.22", "21.9609, -161.53, -35.9611, 0.22", "21.5618, -162.8, -36.5969, 1.62", "21.3682, -163.375, -36.9018, 1.92", "20.7061, -165.327, -37.9704, 0.22", "20.2341, -166.696, -38.7243, 0.22", "19.9591, -167.479, -39.1448, 0.96", "19.7069, -168.266, -39.6083, 1.25", "19.4823, -169.066, -40.0874, 0.22", "19.113, -170.526, -40.8973, 0.22", "18.8354, -171.758, -41.5329, 1.03", "18.7655, -172.112, -41.7006, 1.03", "18.3964, -174.215, -42.6272, 0.22", "18.2605, -175.13, -42.9637, 0.22", "18.0849, -176.444, -43.3729, 2.21", "18.0014, -177.065, -43.5242, 2.43", "17.8167, -178.43, -43.805, 1.47", "17.5636, -180.063, -44.0778, 0.22", "17.2659, -181.811, -44.2803, 0.22", "17.0624, -183.004, -44.4142, 1.62", "16.9426, -183.706, -44.4936, 2.14", "16.8077, -184.473, -44.5687, 2.14", "16.3825, -186.644, -44.7533, 0.22", "16.1775, -187.688, -44.8434, 1.25", "16.0613, -188.298, -44.8922, 1.55", "15.8689, -189.384, -44.9478, 1.18", "15.4793, -191.701, -45.0124, 0.22", "15.2909, -192.823, -45.0255, 1.69", "15.1709, -193.542, -45.0288, 1.99", "14.7341, -196.013, -45.0167, 0.22", "14.4491, -197.618, -44.9832, 0.81", "14.3735, -198.063, -44.9589, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.78402, 3.69569, 10.9728, 0.59", "2.46973, 4.00522, 11.7641, 0.59", "2.05347, 4.41516, 12.8122, 0.81", "-0.0792518, 6.51555, 18.1819, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-13.986, -4.31981, -3.2872, 1.25", "-14.0896, -4.37193, -3.29397, 1.25", "-14.8098, -4.73396, -3.34099, 1.25", "-15.4053, -5.03332, -3.37987, 1.4", "-15.8319, -5.24779, -3.40772, 1.55", "-16.3653, -5.51593, -3.44255, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-13.616, -2.14681, 4.5928, 1.92", "-13.616, -2.14681, 4.5928, 1.92", "-14.4056, -2.07426, 4.5928, 1.33", "-15.1224, -2.01651, 4.57647, 1.18", "-16.0568, -1.94778, 4.54026, 1.18", "-16.9564, -1.88098, 4.49875, 1.18", "-18.0822, -1.79904, 4.44322, 1.18", "-19.3021, -1.72673, 4.38165, 1.62", "-20.3161, -1.68094, 4.31491, 2.21", "-20.7835, -1.66114, 4.29113, 2.58", "-21.4327, -1.61239, 4.26828, 2.87", "-22.0129, -1.53228, 4.25886, 2.87", "-22.8967, -1.34723, 4.27927, 2.58", "-23.7747, -1.10752, 4.33859, 1.69", "-24.9412, -0.717964, 4.50742, 0.88", "-25.8376, -0.360528, 4.71879, 0.81", "-26.3902, -0.101189, 4.89397, 0.81", "-26.8808, 0.164874, 5.10205, 1.03", "-27.2404, 0.382373, 5.29585, 1.18", "-27.8284, 0.735425, 5.70669, 1.18", "-28.4598, 1.0662, 6.21801, 1.4", "-28.7897, 1.20386, 6.50991, 1.55", "-29.275, 1.36047, 6.95329, 1.55", "-29.7875, 1.50465, 7.4194, 1.33", "-30.8228, 1.7531, 8.3629, 1.25", "-31.8539, 1.9571, 9.27736, 2.28", "-32.3843, 2.04293, 9.75243, 3.24", "-32.8457, 2.10276, 10.1863, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.47402, 7.81619, -0.657204, 1.77", "2.47402, 7.81619, -0.657204, 1.77", "2.55564, 8.82257, -0.576679, 1.33", "2.65002, 9.89241, -0.470115, 1.03", "2.71159, 10.5942, -0.391632, 0.96", "2.78305, 11.4108, -0.295904, 0.96", "2.86031, 12.2831, -0.19634, 1.11", "2.93242, 13.1808, -0.094919, 1.33", "2.97415, 13.8524, -0.0152274, 1.55", "3.0009, 14.5475, 0.0545928, 1.55", "3.01153, 15.3117, 0.109202, 1.55", "3.00179, 16.3902, 0.128525, 1.18", "2.9692, 17.3477, 0.100361, 1.03", "2.89871, 18.5694, 0.00467905, 1.4", "2.84262, 19.335, -0.109112, 1.84", "2.76562, 20.2774, -0.297739, 2.14", "2.70014, 20.97, -0.461349, 2.14", "2.6254, 21.6732, -0.66123, 2.21", "2.5647, 22.2735, -0.867476, 1.99", "2.47604, 23.2247, -1.26746, 1.69", "2.43053, 23.8022, -1.51866, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "12.624, 0.415688, -4.7872, 6.48", "12.624, 0.415688, -4.7872, 6.48", "13.7041, 0.577233, -4.75405, 6.48", "14.6549, 0.719438, -4.72487, 5.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "13.2236, 1.85291, -2.44705, 0.852594", "27.8554, 5.156, -2.44705, 0.852594", "42.4872, 8.45908, -2.44705, 0.852594" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.0792518, 6.51555, 18.1819, 2.36", "-0.471031, 6.4378, 18.2967, 2.36", "-2.18802, 6.1434, 18.6569, 1.69", "-3.28814, 5.93845, 18.814, 0.44", "-4.01304, 5.75304, 18.8877, 0.74", "-4.54862, 5.58282, 18.9446, 0.88", "-5.22465, 5.32548, 19.0228, 0.88", "-5.68673, 5.09745, 19.0445, 0.74", "-5.42642, 4.65681, 19.676, 0.52", "-5.22559, 4.279, 20.4796, 0.66", "-4.87758, 3.58564, 21.9733, 0.81", "-4.67051, 3.08972, 23.0237, 1.33", "-4.60411, 2.86341, 23.5033, 1.33", "-4.27782, 0.882166, 27.9685, 0.88", "-4.27195, 0.057178, 30.0149, 0.74", "-4.35324, -0.270945, 30.9214, 0.74", "-4.63252, -0.697746, 32.224, 0.81", "-5.11988, -1.13279, 33.7074, 0.96", "-5.58548, -1.41022, 34.7063, 1.11", "-6.07555, -1.55933, 35.2711, 1.77", "-6.543, -1.60637, 35.7025, 2.21", "-7.1236, -1.56535, 36.2049, 2.5", "-7.63042, -1.45128, 36.6156, 2.65", "-8.24662, -1.21729, 37.0768, 2.65", "-9.6521, -0.527349, 38.0104, 0.81", "-10.0179, -0.315671, 38.2249, 0.66", "-10.781, 0.110699, 38.5779, 0.88", "-11.262, 0.345009, 38.7452, 0.59", "-12.1772, 0.725508, 39.0, 0.29", "-13.0982, 1.1276, 39.1574, 0.29", "-13.0801, 0.591897, 39.1892, 0.29", "-12.999, -0.998467, 39.3277, 0.29", "-12.846, -2.12775, 39.3572, 0.29", "-12.5641, -3.62673, 39.3622, 0.29", "-12.124, -5.54127, 39.3401, 0.29", "-11.6668, -7.2445, 39.3224, 0.37", "-11.0926, -9.05537, 39.298, 0.37", "-10.2883, -11.1237, 39.2495, 0.59", "-10.0355, -11.7215, 39.2229, 1.03", "-9.80227, -12.2528, 39.1775, 1.18" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.0792518, 6.51555, 18.1819, 0.59", "0.0287533, 8.02544, 18.2643, 0.59", "0.105939, 9.10449, 18.3232, 0.29", "0.162628, 9.89698, 18.3664, 0.29", "0.233262, 10.8844, 18.4203, 0.81", "0.28795, 11.649, 18.4621, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-16.3653, -5.51593, -3.44255, 0.22", "-16.8282, -5.31169, -3.59568, 0.22", "-17.4619, -5.05184, -3.83999, 0.22", "-17.7007, -4.95599, -3.93061, 0.66", "-18.0266, -4.84087, -4.07517, 0.81", "-18.3665, -4.73474, -4.25722, 0.52", "-18.6399, -4.65624, -4.4201, 0.22", "-19.0979, -4.57881, -4.6876, 0.22", "-19.6967, -4.54183, -5.02033, 1.33", "-20.2765, -4.54628, -5.33182, 1.99", "-20.8365, -4.59696, -5.61034, 2.21", "-21.3412, -4.68389, -5.84747, 2.28", "-22.2938, -4.95391, -6.34748, 0.52", "-22.8714, -5.17993, -6.67353, 0.44", "-23.1828, -5.31942, -6.86466, 0.22", "-23.7258, -5.56591, -7.21395, 1.25", "-24.0156, -5.69673, -7.41031, 1.33", "-25.1881, -6.2611, -8.29255, 0.22", "-25.5126, -6.41974, -8.58284, 0.22", "-26.1487, -6.71234, -9.20317, 2.28", "-26.6042, -6.91354, -9.687, 3.61", "-26.8041, -6.98851, -9.9123, 3.61" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-16.3653, -5.51593, -3.44255, 0.96", "-17.9725, -7.0083, -1.52952, 0.96", "-18.9183, -7.66025, -0.606814, 1.25", "-19.6389, -8.06399, 0.00524174, 1.33", "-20.3803, -8.40289, 0.581919, 1.33", "-21.4321, -8.80852, 1.33781, 0.52", "-22.3397, -9.10006, 1.92482, 0.88", "-23.3469, -9.1844, 2.27399, 1.33", "-23.8135, -9.17611, 2.3708, 1.55", "-24.4455, -9.12984, 2.45378, 1.69", "-24.9195, -9.08849, 2.48386, 1.69", "-25.8746, -9.04212, 2.49729, 1.18", "-27.6521, -9.09261, 2.48924, 0.52", "-28.4293, -9.16997, 2.49261, 0.66", "-29.2037, -9.29085, 2.51809, 0.66", "-29.966, -9.45691, 2.56324, 0.66", "-30.9863, -9.71175, 2.64682, 0.81", "-32.4563, -10.1577, 2.83059, 1.4", "-33.0887, -10.3994, 2.95478, 2.14", "-33.7815, -10.6711, 3.10947, 2.5", "-34.6724, -11.0289, 3.33765, 2.8" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-32.8457, 2.10276, 10.1863, 1.84", "-33.5345, 1.07847, 10.9499, 1.84", "-34.0805, 0.266339, 11.5554, 1.18", "-34.4452, -0.276023, 11.9597, 0.88", "-34.7853, -0.78181, 12.3368, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-32.8457, 2.10276, 10.1863, 1.4", "-33.4252, 3.5281, 9.93746, 1.4", "-33.9053, 4.65253, 9.73252, 0.81", "-34.1588, 5.17523, 9.64732, 0.81", "-34.5472, 5.89479, 9.53825, 0.96", "-34.8248, 6.36457, 9.47042, 1.11", "-35.1405, 6.85558, 9.40165, 1.11", "-35.4378, 7.2777, 9.33169, 1.11", "-35.9191, 7.87952, 9.2502, 0.52", "-36.175, 8.21728, 9.22594, 0.81", "-36.4195, 8.59928, 9.20897, 0.81", "-36.7082, 9.20089, 9.18671, 0.52", "-36.8924, 9.76897, 9.16936, 0.52", "-36.9864, 10.2851, 9.16045, 0.52", "-37.0596, 11.1904, 9.13924, 0.52", "-37.0617, 11.9019, 9.13097, 1.33", "-37.0319, 12.2737, 9.13235, 1.55", "-36.985, 12.5484, 9.13926, 1.69", "-36.8701, 13.0618, 9.16527, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.43053, 23.8022, -1.51866, 0.44", "3.07746, 24.9428, -4.12052, 0.44", "3.29951, 25.3651, -4.99794, 0.52", "3.4693, 25.7472, -5.7965, 0.37", "3.68642, 26.2138, -6.68166, 0.37", "4.62129, 28.0834, -10.3392, 0.88", "4.86651, 28.4704, -11.2203, 1.25", "5.08262, 28.7586, -11.9548, 0.74", "5.52049, 29.4127, -13.6009, 0.44", "5.8626, 29.9456, -14.9704, 2.14", "6.15803, 30.3927, -16.145, 2.28", "7.04245, 31.4995, -19.1975, 0.59", "7.4835, 31.9494, -20.7203, 1.03", "8.12944, 32.5358, -23.4282, 1.18", "8.48897, 32.8701, -25.3414, 1.4", "8.71462, 33.0933, -26.7557, 1.62", "9.02062, 33.422, -28.9325, 1.84", "9.32274, 33.8195, -31.7153, 3.17", "10.1247, 35.0546, -40.8019, 1.4", "10.4829, 35.8418, -46.2419, 1.03", "10.6179, 36.3245, -49.1854, 2.14", "10.7642, 37.2522, -54.084, 1.77", "10.8476, 38.7511, -60.9859, 1.33", "10.8447, 39.0114, -62.05, 1.55", "10.5979, 40.9951, -68.7067, 0.22", "10.5244, 41.3386, -69.687, 0.22", "10.266, 42.2556, -71.9223, 1.4", "10.131, 42.6953, -72.7832, 2.14", "9.99929, 43.1254, -73.4568, 2.14", "8.11883, 48.3594, -82.8748, 0.22", "7.75941, 49.343, -84.4932, 0.22", "7.29763, 50.6432, -86.5363, 1.4", "7.14444, 51.086, -87.2033, 1.99", "6.94486, 51.6436, -88.1991, 1.99", "4.70924, 58.7217, -100.021, 0.22", "4.18443, 60.6499, -102.93, 0.22", "4.00443, 61.3398, -103.978, 1.18", "3.79372, 62.1086, -105.257, 1.47", "1.53828, 70.5432, -119.54, 0.22", "0.88263, 73.1232, -123.822, 0.22", "0.585804, 74.3584, -125.816, 2.06", "0.372762, 75.1999, -127.315, 2.14", "-0.852025, 79.9828, -136.18, 0.22", "-1.05522, 80.7711, -137.659, 1.33", "-1.28395, 81.7761, -139.125, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "2.43053, 23.8022, -1.51866, 0.66", "2.5009, 24.7908, -1.6958, 0.66", "2.49566, 25.5797, -1.89173, 0.66", "2.41523, 26.4941, -2.13721, 0.52", "2.25638, 27.2602, -2.35307, 0.44", "1.87664, 28.6721, -2.76014, 1.03", "1.75207, 29.1001, -2.88212, 1.25", "1.60199, 29.5288, -3.01934, 1.4", "1.40155, 30.0385, -3.18883, 1.4", "1.00069, 31.0428, -3.52309, 0.59", "0.81165, 31.6436, -3.68604, 0.37", "0.75448, 32.0127, -3.74429, 0.37", "0.7434, 32.7126, -3.86277, 0.81", "0.77546, 33.0632, -3.92102, 0.88", "0.84842, 33.4943, -3.98826, 0.66", "0.95006, 33.9761, -4.04854, 0.29", "1.0507, 34.4526, -4.1058, 0.29", "1.30531, 35.7767, -4.26981, 1.84", "1.4125, 36.4514, -4.3544, 2.95", "1.46078, 36.8596, -4.40343, 3.24", "1.48903, 37.2691, -4.44889, 3.39" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "14.6549, 0.719438, -4.72487, 1.03", "15.7908, -1.22352, -5.47725, 1.03", "16.2987, -2.19027, -5.89961, 0.66", "16.6553, -2.93307, -6.26533, 0.59", "17.0454, -3.85316, -6.73166, 0.66", "17.242, -4.37849, -6.99643, 0.66", "17.6119, -5.47911, -7.54151, 1.47", "17.7574, -6.07443, -7.86296, 1.92", "17.8526, -6.59121, -8.09494, 2.14", "17.9382, -7.21537, -8.33827, 1.99", "18.0602, -8.14863, -8.61866, 1.55", "18.2593, -9.35164, -8.84878, 0.74", "18.428, -10.1887, -8.91734, 0.52", "18.7189, -11.3811, -8.9316, 0.74", "18.948, -12.1454, -8.87587, 0.74", "19.2467, -12.9777, -8.76826, 0.66", "19.5245, -13.6619, -8.62206, 1.11", "19.7587, -14.1925, -8.47611, 1.62", "20.0125, -14.7387, -8.32305, 1.62", "20.6099, -15.9883, -8.01808, 0.81", "21.0644, -16.9015, -7.80445, 0.59", "21.6078, -17.9879, -7.5743, 0.44", "21.9275, -18.6403, -7.49676, 0.44", "22.3985, -19.6031, -7.45308, 2.06", "22.7382, -20.2949, -7.47257, 3.02", "22.9606, -20.7327, -7.52142, 3.61", "23.2736, -21.3242, -7.63055, 3.46", "24.328, -23.2361, -8.11352, 0.88", "24.7201, -23.9351, -8.30606, 0.66", "25.134, -24.657, -8.50819, 0.88", "25.475, -25.2539, -8.66908, 0.88", "25.9538, -26.0739, -8.88374, 0.29", "26.2402, -26.5509, -9.00078, 0.29", "26.695, -27.3119, -9.15131, 1.47", "27.1061, -28.0397, -9.29179, 1.99", "27.5034, -28.7868, -9.42751, 1.77", "28.1107, -30.0091, -9.62271, 0.22", "28.3653, -30.5426, -9.69289, 0.22", "28.5947, -31.0182, -9.75848, 0.44", "29.0846, -32.0002, -9.90289, 0.81", "29.2485, -32.3183, -9.94951, 1.11", "29.5852, -32.9408, -10.0377, 0.81", "29.9457, -33.5797, -10.1286, 0.44", "30.4141, -34.4052, -10.3286, 0.29", "30.9399, -35.3323, -10.6371, 1.84", "31.3043, -35.9359, -10.8988, 3.02", "31.5333, -36.3053, -11.0782, 3.61", "31.8429, -36.8053, -11.338, 3.39", "33.0143, -38.7302, -12.4034, 0.22", "33.9139, -40.269, -13.302, 0.22", "34.5574, -41.3854, -14.0006, 1.69", "34.7409, -41.709, -14.2133, 1.69" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "14.6549, 0.719438, -4.72487, 4.79", "17.0034, 0.83955, -4.71978, 4.79", "17.7054, 0.875454, -4.71826, 4.42" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "42.4872, 8.45908, -2.44705, 0.242682", "57.119, 11.7622, -2.44705, 0.242682", "71.7508, 15.0653, -2.44705, 0.242682" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "0.28795, 11.649, 18.4621, 0.22", "0.302455, 12.468, 19.4507, 0.22", "0.32382, 13.0174, 20.1129, 1.33", "0.336438, 13.2498, 20.3801, 1.62", "0.371939, 13.6004, 20.7423, 1.62", "0.555088, 14.7985, 21.8507, 0.81", "0.683832, 15.5211, 22.459, 0.96", "0.78481, 15.9523, 22.7903, 1.03", "0.90039, 16.3967, 23.0848, 1.03", "1.12638, 17.241, 23.5317, 0.22", "1.2959, 17.9094, 23.7737, 0.22", "1.38349, 18.2954, 23.8375, 0.74", "1.42387, 18.4961, 23.8529, 0.74", "1.53678, 19.1747, 23.8852, 0.37", "1.57136, 19.441, 23.8933, 0.37", "1.59381, 19.8429, 23.9026, 0.66", "1.59801, 20.3061, 23.9116, 0.66", "1.60894, 20.963, 23.9209, 0.37", "1.62237, 21.4219, 23.9219, 0.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "0.28795, 11.649, 18.4621, 0.22", "-0.610288, 11.079, 18.7379, 0.22", "-0.976538, 10.7845, 18.7741, 0.22", "-1.12085, 10.6685, 18.7884, 0.52", "-1.4165, 10.4307, 18.8176, 0.52", "-1.75124, 10.1615, 18.8507, 0.22", "-2.54394, 9.52405, 18.929, 1.92", "-2.83029, 9.25743, 18.8303, 2.5" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-26.8041, -6.98851, -9.9123, 1.18", "-27.7654, -6.35904, -10.1431, 1.18", "-28.9163, -5.7423, -10.4612, 0.22", "-29.3955, -5.50752, -10.6051, 0.22", "-29.8508, -5.2929, -10.7751, 0.44", "-30.2676, -5.10025, -10.9379, 0.44", "-31.1547, -4.69741, -11.2982, 0.22", "-32.0913, -4.32558, -11.7327, 0.22", "-32.8392, -4.04295, -12.1211, 0.22", "-33.7656, -3.68637, -12.6132, 1.33", "-34.4877, -3.39716, -13.0015, 1.55", "-34.6658, -3.32617, -13.0966, 1.55", "-36.0355, -2.76806, -13.8332, 0.22", "-37.4004, -2.21435, -14.5421, 0.22", "-38.0275, -1.97059, -14.8437, 1.33", "-38.3996, -1.82847, -15.0054, 1.62", "-39.4193, -1.4429, -15.4661, 0.22", "-39.9442, -1.24745, -15.7193, 0.44", "-40.3246, -1.12698, -15.9394, 0.37", "-40.7803, -0.994161, -16.233, 0.22", "-41.5345, -0.771699, -16.7679, 1.69", "-42.2145, -0.571173, -17.254, 2.14", "-43.0063, -0.31722, -17.8035, 2.28", "-44.3472, 0.126358, -18.7395, 0.66", "-44.9929, 0.350818, -19.2037, 0.22", "-45.6305, 0.589341, -19.6741, 0.22", "-46.3274, 0.873009, -20.1883, 0.22", "-47.1485, 1.25069, -20.7217, 1.47", "-47.7235, 1.55486, -21.1037, 1.77", "-48.306, 1.90716, -21.5313, 1.55", "-49.4263, 2.57951, -22.4268, 0.22", "-49.8615, 2.8453, -22.781, 0.22", "-50.6753, 3.35705, -23.4693, 1.55", "-51.8069, 4.03496, -24.4269, 2.06", "-52.3289, 4.34496, -24.8159, 1.47", "-53.1494, 4.82783, -25.3466, 0.22", "-53.7383, 5.17725, -25.7014, 0.88", "-54.1002, 5.38135, -25.9066, 1.18", "-55.4499, 6.09786, -26.6717, 0.22", "-56.6843, 6.68814, -27.3424, 0.22", "-57.5207, 7.05449, -27.8323, 0.59", "-57.8065, 7.17268, -28.0186, 0.59", "-58.8495, 7.55931, -28.7282, 1.4", "-59.4601, 7.76783, -29.1439, 1.62", "-60.8486, 8.17038, -30.0914, 0.22", "-61.5111, 8.33261, -30.5775, 0.59", "-61.8525, 8.40958, -30.8361, 0.74", "-62.6925, 8.60157, -31.4633, 0.22", "-63.3766, 8.78017, -31.9748, 1.62", "-63.8206, 8.90854, -32.2682, 1.84", "-64.3294, 9.09377, -32.5321, 1.84" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-26.8041, -6.98851, -9.9123, 3.76", "-27.4839, -7.22113, -10.8693, 3.76", "-28.9252, -7.69463, -12.5708, 2.8", "-30.4621, -8.16731, -14.1855, 2.06", "-31.9052, -8.59439, -15.5803, 1.25", "-32.5411, -8.77509, -16.13, 0.96", "-33.6711, -9.08547, -17.0472, 0.22", "-34.5909, -9.30219, -17.64, 1.33", "-35.4916, -9.4756, -18.0974, 1.84", "-36.2386, -9.59239, -18.4237, 1.92", "-37.3936, -9.73667, -18.9482, 0.22", "-38.5993, -9.85689, -19.6593, 0.22", "-39.5648, -9.95539, -20.3361, 1.11", "-40.3268, -10.1047, -20.9083, 1.55", "-41.0945, -10.328, -21.4557, 1.84", "-41.9161, -10.5666, -21.999, 1.69", "-43.5971, -11.0429, -23.0966, 0.22", "-44.9101, -11.4232, -23.8013, 0.22", "-46.7572, -11.9668, -24.6151, 0.22", "-48.4444, -12.4605, -25.1157, 0.66", "-50.3245, -12.9646, -25.4351, 2.21", "-51.4575, -13.2428, -25.5232, 2.65", "-53.4142, -13.6531, -25.5195, 1.47", "-54.3839, -13.8337, -25.5344, 0.22", "-56.6318, -14.1845, -25.6854, 0.22", "-58.4486, -14.5214, -25.8943, 1.84", "-58.8531, -14.6136, -25.9551, 2.43", "-59.6903, -14.8128, -26.1135, 1.77", "-61.8125, -15.3112, -26.6806, 0.22", "-63.1843, -15.6497, -27.0995, 0.22", "-64.5433, -15.9841, -27.5644, 0.66", "-65.0007, -16.1004, -27.7354, 0.66", "-66.1525, -16.398, -28.2803, 0.22", "-67.5285, -16.81, -29.012, 2.06", "-68.2212, -17.0459, -29.3562, 2.73", "-68.7321, -17.2308, -29.608, 3.09", "-69.6452, -17.5682, -30.0754, 2.87", "-73.0427, -18.8173, -31.9025, 0.29", "-75.1367, -19.5683, -33.0045, 0.22", "-78.1659, -20.6269, -34.5521, 0.22", "-79.4163, -21.048, -35.1146, 2.14", "-80.033, -21.2526, -35.3598, 2.65", "-81.1164, -21.6027, -35.7339, 2.65", "-83.6233, -22.3509, -36.4212, 0.22", "-84.9656, -22.701, -36.8019, 0.22", "-86.5136, -23.084, -37.2708, 1.11", "-86.9994, -23.2083, -37.437, 1.47", "-88.0433, -23.4696, -37.844, 1.47", "-89.9239, -23.9064, -38.7108, 0.15", "-90.4269, -24.0115, -39.0136, 0.44", "-90.7658, -24.0723, -39.2647, 0.66", "-92.7603, -24.4079, -40.8072, 0.29", "-94.2274, -24.6364, -41.8635, 1.92", "-95.0252, -24.7427, -42.4159, 2.73", "-95.7491, -24.8379, -42.9116, 2.87", "-98.9819, -25.2801, -44.9806, 0.22", "-101.098, -25.6008, -46.1313, 0.22", "-102.519, -25.841, -46.7439, 1.69", "-103.383, -26.0052, -47.045, 2.14", "-104.236, -26.1923, -47.2732, 1.92", "-105.227, -26.4454, -47.4392, 1.33", "-107.739, -27.1905, -47.5478, 0.22", "-108.691, -27.5043, -47.5667, 0.96", "-109.35, -27.7467, -47.5837, 1.25", "-110.019, -28.0067, -47.5814, 1.11", "-111.886, -28.7578, -47.5159, 0.22", "-113.007, -29.2233, -47.576, 1.92", "-113.808, -29.5594, -47.6985, 2.06", "-114.632, -29.8931, -47.9011, 1.84", "-116.121, -30.4944, -48.3678, 0.37", "-117.195, -30.945, -48.7883, 0.22", "-120.061, -32.203, -50.1629, 1.11", "-120.749, -32.5206, -50.5376, 1.11", "-122.387, -33.2807, -51.5171, 0.22", "-123.916, -33.9823, -52.502, 0.22", "-125.399, -34.6548, -53.5019, 1.69", "-126.085, -34.9594, -53.955, 2.14", "-126.638, -35.2058, -54.3033, 2.14", "-128.295, -35.9025, -55.3985, 0.22", "-130.208, -36.6607, -56.7134, 0.22", "-131.145, -36.9996, -57.3528, 1.99", "-131.57, -37.1413, -57.6245, 2.58", "-133.114, -37.6299, -58.5695, 1.99", "-135.446, -38.23, -59.6448, 0.22", "-136.216, -38.4019, -59.917, 1.47", "-136.729, -38.5049, -60.0784, 1.69", "-137.536, -38.6556, -60.3216, 1.69", "-140.804, -39.2186, -61.2174, 0.22", "-146.806, -40.1783, -62.6904, 0.22", "-149.17, -40.5231, -63.2584, 1.84", "-150.047, -40.6515, -63.4765, 2.14", "-150.67, -40.7427, -63.6304, 2.14", "-153.144, -41.1189, -64.2049, 0.22", "-153.922, -41.2378, -64.3811, 0.96", "-154.669, -41.353, -64.6015, 1.11", "-157.874, -41.7976, -65.5441, 0.22", "-159.3, -41.9785, -65.9019, 0.22", "-160.559, -42.1238, -66.1853, 1.69", "-161.566, -42.2351, -66.3768, 2.21", "-162.755, -42.3678, -66.5461, 2.28", "-164.883, -42.623, -66.7111, 0.29", "-165.887, -42.7511, -66.7305, 1.18", "-166.667, -42.8704, -66.7401, 1.33", "-169.41, -43.3471, -66.9093, 0.22", "-171.716, -43.826, -67.1161, 0.22", "-173.235, -44.1833, -67.2928, 1.62", "-173.8, -44.3312, -67.384, 2.14", "-174.486, -44.5232, -67.5211, 2.14", "-177.252, -45.3275, -68.1259, 0.22", "-178.248, -45.6256, -68.3733, 0.22", "-179.145, -45.8981, -68.6315, 1.25", "-179.998, -46.1447, -68.8788, 1.4", "-181.407, -46.5225, -69.2639, 0.22", "-182.147, -46.6928, -69.4526, 0.81", "-182.706, -46.7935, -69.6151, 0.81", "-184.539, -47.0492, -70.3243, 0.22", "-185.432, -47.1515, -70.7272, 1.62", "-186.224, -47.222, -71.1097, 1.99", "-186.806, -47.257, -71.4117, 1.99", "-189.729, -47.3931, -72.9299, 0.22", "-190.873, -47.4273, -73.4968, 0.22", "-191.675, -47.4245, -73.8651, 1.03", "-192.209, -47.4169, -74.0992, 1.03", "-194.613, -47.3729, -75.0382, 0.22", "-195.184, -47.3567, -75.2245, 0.22", "-196.117, -47.3055, -75.4919, 0.81", "-196.845, -47.2564, -75.7117, 1.11", "-198.573, -47.1487, -76.3258, 0.22", "-199.479, -47.1006, -76.6602, 0.22", "-201.512, -47.0177, -77.4028, 0.22", "-203.035, -46.9704, -77.9774, 2.28", "-203.796, -46.9627, -78.2931, 2.73", "-205.808, -46.9893, -79.1995, 0.96", "-207.577, -47.0323, -80.0318, 0.22", "-208.26, -47.073, -80.4104, 0.66", "-208.684, -47.1094, -80.6703, 0.66", "-210.118, -47.2632, -81.5192, 0.22", "-210.878, -47.3676, -81.9858, 1.25", "-211.607, -47.4958, -82.4848, 1.47", "-213.776, -47.984, -84.2286, 0.22", "-214.573, -48.1809, -84.8701, 0.74", "-215.351, -48.384, -85.5027, 1.03", "-216.282, -48.6461, -86.2838, 1.25", "-218.433, -49.276, -88.0168, 0.22", "-220.167, -49.7667, -89.3074, 0.22", "-221.362, -50.0945, -90.1339, 1.55", "-222.408, -50.3607, -90.8404, 1.84", "-224.527, -50.774, -92.2954, 0.22", "-226.644, -51.0692, -93.7032, 0.22", "-228.14, -51.1993, -94.643, 1.69", "-228.76, -51.2191, -95.0166, 2.14", "-229.458, -51.1927, -95.4519, 2.14", "-232.776, -50.8525, -97.5188, 0.22", "-233.767, -50.6842, -98.1474, 0.22", "-234.199, -50.5914, -98.4538, 0.81", "-234.542, -50.5299, -98.6742, 0.96", "-237.143, -50.1153, -100.107, 0.22", "-238.29, -49.9537, -100.654, 1.33", "-238.844, -49.8918, -100.849, 1.69", "-239.628, -49.8223, -101.094, 1.69", "-243.837, -49.5726, -102.255, 0.22", "-244.596, -49.5503, -102.422, 0.66", "-245.179, -49.5527, -102.512, 0.66", "-248.088, -49.5947, -102.891, 0.22", "-248.689, -49.5994, -102.986, 0.96", "-249.554, -49.5871, -103.147, 1.25", "-251.448, -49.4987, -103.599, 0.22", "-252.145, -49.4505, -103.814, 0.52", "-252.557, -49.4043, -103.966, 0.74", "-254.652, -49.1439, -104.765, 0.22", "-255.889, -49.0088, -105.206, 1.69", "-256.225, -48.9743, -105.323, 2.21", "-257.215, -48.8984, -105.649, 2.21", "-261.392, -48.7035, -106.893, 0.22", "-264.046, -48.6249, -107.604, 0.22", "-265.109, -48.6254, -107.844, 0.59", "-265.44, -48.6343, -107.915, 0.59", "-267.379, -48.7274, -108.303, 0.22", "-268.195, -48.7965, -108.438, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-34.6724, -11.0289, 3.33765, 0.59", "-35.0624, -11.9717, 3.43629, 0.59", "-35.4066, -12.6338, 3.41566, 0.37", "-35.6346, -13.0036, 3.36956, 0.29", "-35.8237, -13.2732, 3.31415, 0.29", "-36.1097, -13.6449, 3.22172, 0.52", "-36.5449, -14.1631, 3.08262, 0.66", "-36.9001, -14.5117, 2.92859, 0.66", "-37.2626, -14.8347, 2.7614, 0.59", "-37.5963, -15.1105, 2.61129, 0.66", "-37.8983, -15.3534, 2.47819, 0.44", "-38.3559, -15.7262, 2.28005, 0.29", "-39.2995, -16.5264, 1.89671, 3.39", "-39.6151, -16.7963, 1.77294, 4.13", "-39.8906, -17.0334, 1.65959, 4.13" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-34.6724, -11.0289, 3.33765, 0.29", "-36.9354, -9.74889, 1.95926, 0.29", "-37.2513, -9.5615, 1.77631, 0.66", "-38.6019, -8.75608, 0.989463, 0.44", "-39.1052, -8.46081, 0.709168, 0.37", "-40.2805, -7.80027, 0.0746798, 0.37", "-41.8744, -6.97554, -0.783836, 1.03", "-42.3722, -6.75121, -1.0254, 1.4", "-43.1298, -6.48013, -1.38373, 1.55", "-43.7644, -6.30463, -1.66631, 0.44", "-44.4943, -6.14867, -2.01898, 0.22", "-45.3743, -5.98321, -2.45525, 0.22", "-46.3306, -5.77844, -2.90031, 0.44", "-47.0442, -5.57371, -3.25449, 0.66", "-47.4835, -5.41715, -3.48393, 0.88", "-48.4031, -5.03357, -3.99699, 0.88", "-49.8129, -4.3698, -4.77305, 2.21", "-50.5627, -3.97745, -5.1865, 2.87", "-51.2247, -3.61177, -5.55455, 3.09", "-51.6092, -3.40386, -5.7895, 3.24", "-53.3356, -2.53419, -6.9148, 0.52", "-53.7138, -2.36525, -7.14538, 0.66", "-54.2587, -2.14638, -7.43968, 0.66", "-54.8801, -1.90294, -7.68862, 0.52", "-56.7861, -1.15055, -8.18749, 0.22", "-57.6644, -0.805986, -8.29689, 0.22", "-59.0689, -0.203741, -8.35662, 0.81", "-59.866, 0.137709, -8.36756, 0.22", "-61.0163, 0.63425, -8.34712, 1.92", "-61.5171, 0.855309, -8.33756, 2.5", "-62.0151, 1.0807, -8.36298, 2.73", "-64.2621, 2.1429, -8.77983, 0.29", "-65.0765, 2.52855, -9.02096, 0.22", "-65.9559, 2.93797, -9.33946, 1.77", "-66.6591, 3.26126, -9.6288, 2.28", "-68.4132, 4.0569, -10.3769, 0.22", "-69.1951, 4.40197, -10.704, 0.22", "-69.6571, 4.59192, -10.8932, 0.66", "-70.1211, 4.79121, -11.0893, 0.66", "-71.3406, 5.31763, -11.5871, 0.22", "-72.1748, 5.69683, -11.8934, 1.33", "-72.6624, 5.9503, -12.05, 2.36", "-73.4805, 6.4213, -12.3214, 2.36", "-75.1743, 7.48106, -12.9263, 0.22", "-76.4833, 8.35772, -13.4793, 0.22", "-77.5748, 9.1087, -13.9276, 0.22", "-78.9514, 10.0512, -14.3997, 2.28", "-79.7517, 10.5917, -14.6437, 2.8", "-80.3747, 11.0089, -14.8123, 3.02", "-83.0034, 12.6954, -15.4934, 0.22", "-85.0718, 13.9648, -15.9818, 0.22", "-86.7029, 14.8997, -16.3339, 1.84", "-87.4468, 15.2925, -16.468, 2.65", "-88.1949, 15.6719, -16.5761, 2.65", "-90.5316, 16.8085, -16.8508, 0.22", "-91.4435, 17.2374, -16.9524, 0.44", "-91.8094, 17.4122, -17.0188, 0.44", "-92.5341, 17.7633, -17.1617, 0.15", "-93.512, 18.2461, -17.2888, 1.62", "-94.174, 18.5794, -17.3441, 2.36", "-94.9352, 18.98, -17.3857, 2.36", "-96.5821, 19.7834, -17.5118, 0.22", "-97.7073, 20.2904, -17.602, 0.22", "-98.6516, 20.6834, -17.6693, 1.03", "-99.4129, 20.969, -17.7015, 1.55", "-100.036, 21.1682, -17.7187, 1.55", "-101.54, 21.4917, -17.7729, 0.22", "-102.249, 21.5738, -17.8381, 0.22", "-102.722, 21.5991, -17.8977, 1.33", "-103.257, 21.6105, -17.9849, 1.62", "-103.827, 21.6186, -18.0893, 1.33", "-106.094, 21.6613, -18.5358, 0.22", "-107.261, 21.7061, -18.7688, 1.03", "-107.806, 21.7313, -18.8837, 1.55", "-108.357, 21.7623, -19.0046, 1.55", "-109.775, 21.8458, -19.2956, 0.22", "-110.681, 21.9006, -19.4201, 0.22", "-111.663, 21.9575, -19.4664, 1.62", "-112.335, 21.991, -19.4506, 2.36", "-112.734, 22.0222, -19.4117, 2.58", "-114.074, 22.1681, -19.1913, 0.59", "-115.434, 22.3832, -18.9008, 0.22", "-115.919, 22.4946, -18.7829, 0.66", "-116.36, 22.6412, -18.6349, 0.66", "-117.884, 23.3256, -18.0438, 0.22", "-118.419, 23.6461, -17.8369, 0.59", "-118.938, 24.0844, -17.775, 0.59", "-119.575, 24.7364, -17.8744, 0.22", "-120.653, 25.9264, -18.2035, 2.28", "-121.202, 26.5646, -18.4422, 2.73", "-121.795, 27.2546, -18.7837, 3.02", "-124.177, 29.9007, -20.2419, 0.22", "-124.71, 30.4622, -20.575, 0.22", "-125.233, 30.9695, -20.9153, 0.96", "-125.68, 31.3694, -21.2007, 1.25", "-126.919, 32.4184, -21.8569, 0.22", "-127.452, 32.8481, -22.0727, 0.81", "-127.837, 33.1323, -22.1555, 1.11", "-129.134, 34.0746, -22.3977, 0.22", "-129.571, 34.3983, -22.4778, 0.59", "-129.957, 34.6857, -22.5462, 0.59", "-130.89, 35.3971, -22.7124, 0.22", "-131.588, 35.9199, -22.8354, 0.52", "-132.543, 36.6203, -22.9437, 0.22", "-133.747, 37.4668, -22.9717, 2.14", "-134.41, 37.9207, -22.9779, 2.8", "-134.849, 38.2195, -22.9762, 2.8", "-137.06, 39.7585, -22.9137, 0.22", "-138.642, 40.8926, -22.8598, 0.22", "-139.632, 41.6337, -22.7926, 0.96", "-140.143, 42.0341, -22.7372, 1.33", "-140.524, 42.3513, -22.6943, 1.33", "-141.719, 43.3927, -22.6079, 0.22", "-142.664, 44.2624, -22.609, 0.22", "-143.784, 45.2976, -22.6973, 1.84", "-144.218, 45.6962, -22.7536, 2.36", "-144.724, 46.1491, -22.8343, 2.36", "-146.494, 47.6607, -23.2089, 0.22", "-147.315, 48.3355, -23.4181, 0.22", "-148.055, 48.9317, -23.6226, 1.25", "-148.503, 49.2864, -23.7467, 1.69", "-149.207, 49.8421, -23.9232, 1.77", "-151.268, 51.473, -24.3935, 0.22", "-151.637, 51.7714, -24.479, 0.37", "-151.931, 52.0104, -24.5407, 0.37", "-152.84, 52.73, -24.7744, 0.22", "-153.606, 53.3203, -24.9658, 1.33", "-154.242, 53.7984, -25.1445, 1.62", "-155.752, 54.9064, -25.6341, 0.22", "-156.317, 55.3066, -25.8334, 0.52", "-158.432, 56.7609, -26.5906, 0.22", "-159.545, 57.4993, -26.9951, 1.47", "-160.219, 57.9355, -27.2142, 2.28", "-160.694, 58.2329, -27.3452, 2.8", "-162.907, 59.5921, -27.8883, 0.22", "-163.565, 59.984, -28.0331, 0.44", "-164.211, 60.354, -28.1457, 0.44", "-165.043, 60.8231, -28.3143, 0.96", "-165.476, 61.0731, -28.3985, 1.4", "-166.199, 61.4925, -28.5539, 1.4", "-167.715, 62.376, -28.8803, 0.22", "-168.924, 63.0413, -29.0726, 0.88", "-169.928, 63.5638, -29.2042, 0.22", "-171.007, 64.1012, -29.3217, 2.06", "-171.627, 64.4042, -29.3652, 2.8", "-172.253, 64.7034, -29.3653, 2.8", "-175.888, 66.4336, -29.1384, 0.22", "-176.91, 66.9253, -29.0307, 0.22", "-177.603, 67.2698, -28.9145, 1.55", "-178.307, 67.6349, -28.7751, 2.06", "-180.414, 68.8035, -28.303, 0.22", "-181.342, 69.346, -28.0936, 0.37", "-182.043, 69.8015, -27.9315, 0.22", "-183.563, 70.8245, -27.6025, 2.28", "-184.32, 71.346, -27.4787, 3.02", "-184.501, 71.4723, -27.4634, 3.02", "-186.462, 72.8749, -27.4573, 0.22", "-187.13, 73.3519, -27.5461, 0.22", "-187.812, 73.8251, -27.7037, 1.03", "-188.299, 74.1559, -27.8494, 1.03", "-189.311, 74.8129, -28.2281, 0.22", "-189.775, 75.1145, -28.4368, 0.66", "-191.853, 76.4576, -29.443, 0.22", "-192.9, 77.1233, -29.9388, 1.47", "-193.419, 77.451, -30.1848, 1.92", "-196.162, 79.164, -31.4516, 0.22", "-197.492, 79.9923, -32.0777, 0.22", "-198.326, 80.5083, -32.4719, 0.22", "-199.418, 81.1788, -32.953, 1.92", "-200.026, 81.5664, -33.2366, 2.21", "-200.231, 81.7036, -33.3317, 2.21" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-34.7853, -0.78181, 12.3368, 0.29", "-35.4346, -0.634694, 11.9382, 0.29", "-35.8007, -0.558189, 11.6462, 0.29", "-36.4873, -0.411755, 11.2985, 0.29", "-37.237, -0.264314, 11.1163, 1.11", "-38.3899, -0.0868563, 11.0054, 1.55", "-38.8606, -0.0327768, 10.9782, 1.77", "-39.7397, 0.063283, 10.9386, 1.47", "-42.5547, 0.311462, 11.1693, 0.29", "-43.1581, 0.324788, 11.3891, 0.29", "-43.5695, 0.328177, 11.6815, 0.59", "-43.9242, 0.326867, 12.0254, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-34.7853, -0.78181, 12.3368, 0.44", "-33.7408, -1.59059, 13.4549, 0.44", "-33.052, -2.19123, 14.3028, 0.44", "-32.4886, -2.73082, 15.1192, 0.44", "-31.8804, -3.23971, 16.1431, 0.74", "-31.4412, -3.52464, 17.0015, 0.96", "-30.9999, -3.70284, 17.9654, 0.74", "-30.7615, -3.6993, 18.7194, 0.52", "-30.5711, -3.61374, 19.6662, 0.52", "-30.3815, -3.4145, 21.4876, 0.66", "-30.3447, -3.31489, 22.8167, 0.66", "-30.381, -3.32214, 23.8725, 0.66", "-30.4928, -3.44098, 25.103, 0.66", "-30.6144, -3.68762, 26.036, 0.66", "-30.7973, -4.14706, 27.0684, 0.44", "-30.9811, -4.69846, 27.8767, 0.29", "-31.1976, -5.43636, 28.7472, 1.33", "-31.361, -6.01764, 29.3592, 2.14", "-31.4964, -6.49442, 29.8789, 2.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.48903, 37.2691, -4.44889, 0.22", "-0.353249, 39.2768, -5.02639, 0.22", "-1.01899, 40.0023, -5.23508, 0.81", "-1.32539, 40.3363, -5.33113, 0.81", "-2.48504, 41.6, -5.69464, 0.22", "-2.90368, 42.0563, -5.82587, 0.81", "-3.15938, 42.3349, -5.90603, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "1.48903, 37.2691, -4.44889, 0.29", "1.67441, 39.997, -5.57591, 0.29", "1.74094, 40.6914, -5.87842, 0.29", "1.84366, 41.6104, -6.27903, 0.29", "1.94683, 42.6895, -6.72028, 1.03", "1.98616, 43.24, -6.92324, 1.33", "2.01132, 43.7888, -7.1054, 1.03", "2.05701, 44.8127, -7.38686, 0.59", "2.05345, 45.1921, -7.49552, 0.59", "1.97444, 46.1747, -7.77734, 0.22", "1.82083, 47.2356, -8.05664, 0.22", "1.57745, 48.6378, -8.41273, 2.65", "1.46008, 49.2699, -8.56325, 3.09", "1.37774, 49.6958, -8.65244, 3.54", "1.33736, 49.9088, -8.70025, 3.68", "0.96534, 52.0521, -9.21275, 0.22", "0.8598, 52.7461, -9.31551, 0.81", "0.81184, 53.1333, -9.33145, 0.81", "0.77167, 53.5889, -9.30385, 0.52", "0.72364, 54.4736, -9.14497, 0.22", "0.699966, 55.1111, -8.94578, 0.22", "0.672931, 56.9046, -8.03114, 1.84", "0.664538, 57.267, -7.80526, 2.06", "0.64888, 57.6458, -7.54432, 2.06", "0.601537, 58.4688, -6.89093, 1.25", "0.515785, 59.3095, -6.16779, 0.22", "0.410146, 60.1072, -5.48535, 0.22", "0.194437, 61.4603, -4.3839, 3.46", "0.0970953, 62.0267, -3.93294, 3.83", "-0.120434, 63.2464, -2.99342, 3.17", "-0.442398, 65.0559, -1.63188, 0.37", "-0.531281, 65.5793, -1.25077, 0.59", "-0.601233, 65.9688, -1.00109, 0.81", "-0.676148, 66.3548, -0.789281, 0.81", "-0.788217, 66.9382, -0.500457, 0.52", "-0.948851, 67.6992, -0.172643, 0.22", "-1.09444, 68.3553, 0.105324, 0.22", "-1.3829, 69.5695, 0.628874, 0.22", "-1.81686, 71.2953, 1.36738, 2.65", "-1.9692, 71.859, 1.60221, 3.24", "-2.13617, 72.4274, 1.83066, 3.54", "-2.22297, 72.7015, 1.9365, 3.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "34.7409, -41.709, -14.2133, 0.29", "34.6341, -43.2759, -13.3866, 0.29", "34.6561, -45.2253, -12.3554, 0.15", "34.6895, -45.8037, -12.0455, 0.52", "34.8489, -47.5549, -11.0712, 2.95", "34.965, -48.537, -10.5179, 2.36", "35.2075, -50.229, -9.52919, 0.29", "35.5878, -51.6973, -8.70936, 0.22", "35.9085, -52.5795, -8.22583, 1.4", "36.2414, -53.2617, -7.79608, 1.92", "36.4325, -53.5589, -7.56772, 2.43", "36.7857, -54.0227, -7.1822, 2.43", "37.9185, -55.3189, -6.00198, 0.29", "38.6599, -56.0968, -5.29151, 0.29", "39.5665, -56.9877, -4.45902, 1.77", "40.3325, -57.72, -3.77122, 2.5", "40.7493, -58.1149, -3.38457, 3.02" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "34.7409, -41.709, -14.2133, 2.14", "34.9165, -42.0155, -14.4238, 2.14", "35.0837, -42.3048, -14.5687, 2.14", "36.1159, -44.0478, -15.2757, 0.22", "36.6616, -44.9328, -15.5998, 0.22", "37.1971, -45.7678, -15.8754, 1.69", "37.8681, -46.7943, -16.1726, 2.14", "39.2259, -48.8659, -16.6686, 0.22", "40.0729, -50.1605, -16.9256, 0.22", "40.7159, -51.1334, -17.075, 1.69", "41.1717, -51.8071, -17.1652, 2.06", "42.4092, -53.6242, -17.3714, 0.22", "43.2553, -54.8667, -17.4787, 0.22", "43.676, -55.4922, -17.5717, 1.69", "44.1009, -56.1526, -17.6639, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "17.7054, 0.875454, -4.71826, 1.55", "18.8187, 0.541256, -4.86019, 1.55", "19.9611, 0.198333, -5.00583, 0.74", "20.7431, -0.0364254, -5.10554, 1.18", "21.4384, -0.245137, -5.19418, 1.55", "21.9897, -0.410619, -5.26446, 1.77", "22.692, -0.621439, -5.354, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "17.7054, 0.875454, -4.71826, 0.96", "17.1602, -0.78685, -4.22624, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "17.7054, 0.875454, -4.71826, 2.8", "18.6978, 2.72502, -5.11144, 2.8", "19.4574, 4.2765, -5.27188, 1.84", "19.8143, 5.05225, -5.26825, 1.47", "20.2738, 6.10584, -5.11262, 1.25", "20.6526, 6.98818, -4.92734, 1.18", "21.0661, 7.96466, -4.64541, 1.18", "21.5489, 9.20138, -4.12533, 1.11", "21.9968, 10.4043, -3.52334, 1.33", "22.8059, 12.5954, -2.29199, 2.58", "23.028, 13.1706, -1.93166, 3.02", "23.5349, 14.4282, -1.07872, 3.54", "23.7303, 14.9062, -0.743754, 3.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-39.8906, -17.0334, 1.65959, 0.37", "-41.8802, -17.529, 2.46312, 0.37", "-42.2447, -17.6243, 2.60449, 0.37", "-42.7511, -17.7511, 2.79139, 0.22", "-43.4605, -17.9099, 3.00799, 0.22", "-44.2182, -18.0631, 3.23447, 1.55", "-44.6443, -18.143, 3.35979, 2.58", "-44.8729, -18.1787, 3.40873, 2.87", "-45.4171, -18.2541, 3.53238, 2.28", "-46.4377, -18.3586, 3.7731, 0.22", "-46.9923, -18.3873, 3.91296, 0.66", "-47.2854, -18.3815, 3.98922, 0.88", "-47.7313, -18.3462, 4.11878, 0.22", "-48.2587, -18.2899, 4.27983, 0.22", "-48.7055, -18.2373, 4.43177, 0.37", "-48.9862, -18.2091, 4.53783, 0.37", "-49.2908, -18.176, 4.63831, 0.37", "-49.5078, -18.1488, 4.71254, 0.37", "-49.8213, -18.1051, 4.82491, 0.22", "-50.1877, -18.0679, 4.96504, 0.22", "-50.5699, -18.1146, 5.09204, 0.88" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-39.8906, -17.0334, 1.65959, 0.52", "-40.095, -19.92, -0.816327, 0.52", "-40.1465, -20.6375, -1.30965, 0.52", "-40.177, -21.3805, -1.76693, 0.29", "-40.1864, -22.3701, -2.33108, 0.52", "-40.1309, -23.9114, -3.12442, 0.29", "-40.0736, -24.6269, -3.47473, 0.29", "-39.8196, -26.5226, -4.18022, 2.43", "-39.7125, -27.2177, -4.43831, 3.02", "-39.5849, -27.8996, -4.68726, 3.02", "-39.082, -30.0736, -5.44085, 0.22", "-38.6907, -31.367, -5.92014, 0.22", "-38.487, -31.9804, -6.15304, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-200.231, 81.7036, -33.3317, 0.22", "-202.071, 84.0251, -34.2332, 0.22", "-202.724, 84.7923, -34.5312, 0.22", "-203.25, 85.3646, -34.7733, 0.88", "-203.851, 85.9447, -35.0511, 0.88", "-204.911, 86.8411, -35.4182, 0.22", "-205.461, 87.2746, -35.5841, 0.22", "-205.852, 87.5363, -35.6688, 0.66", "-206.576, 88.0089, -35.837, 0.66", "-207.712, 88.771, -36.1042, 0.22", "-210.045, 90.3664, -36.7036, 0.22", "-210.889, 90.9581, -36.9136, 0.59", "-211.35, 91.2891, -37.0271, 0.81", "-213.16, 92.6103, -37.4767, 0.22", "-214.41, 93.568, -37.7837, 1.11", "-215.345, 94.3434, -38.0581, 1.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-200.231, 81.7036, -33.3317, 0.22", "-201.573, 82.1215, -32.8033, 0.22", "-202.545, 82.4385, -32.3832, 0.22", "-202.717, 82.5001, -32.3033, 0.52", "-202.95, 82.5984, -32.199, 0.52", "-203.796, 83.0, -31.8326, 0.22", "-204.671, 83.4612, -31.466, 2.28", "-204.91, 83.6109, -31.3639, 2.65", "-205.303, 83.8591, -31.2486, 2.65", "-207.192, 85.0192, -30.8781, 0.22", "-207.964, 85.4814, -30.7914, 0.66", "-208.861, 86.0074, -30.7784, 0.22", "-209.526, 86.3772, -30.8082, 0.88", "-211.416, 87.3634, -30.9653, 0.22", "-211.709, 87.5037, -31.0006, 0.52", "-212.022, 87.6392, -31.0518, 0.52", "-213.342, 88.129, -31.193, 0.22", "-213.779, 88.2727, -31.2118, 0.22", "-214.537, 88.5125, -31.1474, 1.03", "-214.883, 88.6266, -31.0764, 1.4", "-215.225, 88.7458, -30.9984, 1.4", "-217.37, 89.5068, -30.4637, 0.22", "-218.974, 90.0789, -30.0298, 0.22", "-220.201, 90.5262, -29.6868, 1.25", "-220.574, 90.6609, -29.5871, 1.4", "-221.595, 91.028, -29.31, 0.22", "-223.156, 91.6004, -28.8981, 0.22", "-223.926, 91.8935, -28.7345, 0.74", "-224.229, 92.0107, -28.7005, 0.74", "-225.433, 92.4693, -28.6457, 0.22", "-226.065, 92.6984, -28.6306, 1.33", "-226.673, 92.9065, -28.6355, 1.77", "-228.223, 93.4525, -28.7609, 0.22", "-229.527, 93.929, -28.931, 0.81" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.22297, 72.7015, 1.9365, 0.29", "-3.98933, 74.797, 1.02475, 0.29", "-4.55563, 75.5013, 0.778533, 0.29", "-5.28083, 76.4475, 0.46681, 1.11", "-5.43605, 76.6583, 0.402844, 1.25", "-5.60358, 76.8924, 0.337532, 1.25", "-5.84712, 77.2374, 0.24829, 0.96", "-6.54661, 78.4225, 0.078206, 0.22", "-6.94201, 79.1196, -0.0324537, 0.22", "-7.12182, 79.4879, -0.0570938, 0.74", "-7.29717, 79.8798, -0.0561428, 0.96", "-7.41808, 80.1716, -0.0324548, 0.96", "-7.77598, 81.168, 0.11733, 0.22", "-8.01289, 82.0158, 0.290444, 0.22", "-8.33778, 83.5106, 0.641079, 1.47", "-8.4358, 84.0399, 0.77006, 1.92", "-8.52994, 84.5827, 0.915063, 1.92", "-8.64408, 85.2458, 1.1084, 1.25", "-8.90806, 86.5749, 1.52654, 0.22", "-9.29732, 88.1847, 2.03162, 0.22", "-9.68447, 89.4571, 2.36361, 1.4", "-9.82571, 89.8671, 2.46353, 1.62", "-10.029, 90.3295, 2.56731, 1.62", "-10.8212, 91.8178, 2.88081, 0.22", "-11.6673, 93.1807, 3.15946, 0.22", "-12.6177, 94.583, 3.42507, 1.99", "-12.785, 94.8213, 3.4641, 2.5", "-14.2304, 96.8721, 3.74971, 0.22", "-14.9554, 97.8664, 3.86973, 1.33", "-15.107, 98.0574, 3.88886, 1.62" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.22297, 72.7015, 1.9365, 0.29", "-2.53164, 74.9674, 2.66958, 0.29", "-2.70782, 76.0143, 3.07146, 0.29", "-2.86028, 76.8444, 3.42148, 0.29", "-3.0152, 77.7243, 3.78337, 0.29", "-3.21177, 78.9499, 4.28753, 1.18", "-3.30364, 79.6393, 4.58296, 1.77", "-3.36123, 80.1655, 4.8345, 1.77", "-3.38502, 80.5226, 5.0126, 1.92", "-3.36119, 82.1047, 5.78957, 0.22", "-3.27026, 82.7753, 6.09962, 0.22", "-2.99439, 83.7867, 6.54854, 1.11", "-2.81215, 84.2389, 6.76312, 1.33", "-2.60747, 84.6438, 6.99063, 1.33", "-2.35457, 85.0752, 7.28708, 1.11", "-2.06206, 85.5253, 7.68572, 0.88", "-1.62898, 86.273, 8.39834, 0.37", "-1.46505, 86.587, 8.7135, 0.37", "-1.10592, 87.3628, 9.52896, 0.96", "-0.877822, 87.9396, 10.1176, 1.33", "-0.5162, 89.0282, 11.1989, 0.29", "-0.257498, 89.8701, 12.0128, 1.11", "-0.123494, 90.3097, 12.4269, 1.33", "0.115527, 91.0486, 13.1106, 0.81", "0.308794, 91.6089, 13.6127, 0.37", "0.602288, 92.3955, 14.266, 0.74", "0.89888, 93.1419, 14.844, 0.44", "1.35736, 94.2323, 15.6521, 1.47", "1.45851, 94.4739, 15.822, 1.99", "1.66337, 94.9508, 16.1461, 1.99", "2.24965, 96.3502, 17.1185, 0.22", "2.44563, 96.8399, 17.4552, 0.22", "2.77371, 97.6986, 18.0076, 1.4", "2.93342, 98.1087, 18.2575, 1.4", "3.417, 99.2974, 18.959, 0.29", "3.97861, 100.55, 19.6799, 0.22", "4.30393, 101.235, 20.0695, 0.22", "4.71932, 102.045, 20.4828, 1.18", "4.95969, 102.491, 20.6971, 1.84", "5.24033, 102.972, 20.9143, 1.47", "5.84929, 103.903, 21.2528, 0.22", "6.20044, 104.358, 21.3779, 0.22", "6.86792, 105.168, 21.6121, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "22.692, -0.621439, -5.354, 0.66", "23.0531, -1.16163, -8.39802, 0.66", "23.5502, -1.80335, -12.171, 0.66", "23.6878, -1.97584, -13.0744, 1.62", "23.8018, -2.13992, -13.8777, 2.65", "23.9798, -2.39578, -15.1302, 2.95", "24.3782, -2.96885, -17.9357, 0.81", "24.9595, -4.05519, -22.424, 2.28", "25.0995, -4.30047, -23.4318, 3.17", "25.2305, -4.4759, -24.2701, 3.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "22.692, -0.621439, -5.354, 0.66", "23.5849, -2.41643, -5.2345, 0.66", "23.9961, -3.32122, -5.19919, 0.74", "24.2833, -3.98601, -5.20199, 0.81", "24.7414, -5.08682, -5.23444, 0.59", "25.1312, -6.05037, -5.27678, 0.52", "25.4843, -6.95165, -5.3306, 0.29", "25.834, -7.94813, -5.42971, 0.29", "26.2794, -9.30861, -5.59073, 1.33", "26.5017, -10.0729, -5.69773, 1.92", "26.5905, -10.4178, -5.75511, 2.14", "26.7262, -11.0157, -5.8527, 1.92", "26.9463, -12.088, -6.02179, 0.96", "27.144, -13.203, -6.191, 0.22", "27.2937, -14.1476, -6.32386, 0.22", "27.3851, -14.5904, -6.38984, 0.88", "27.6404, -15.4973, -6.52441, 1.55", "27.764, -15.8231, -6.57155, 1.69", "28.0613, -16.4468, -6.66274, 1.33", "28.7807, -17.6999, -6.84638, 0.29", "29.6374, -19.0236, -7.02955, 0.29", "30.4275, -20.1503, -7.17609, 0.29", "31.2296, -21.2012, -7.30412, 1.33", "31.7774, -21.8513, -7.37687, 1.62", "32.1462, -22.2503, -7.41706, 1.69", "33.2507, -23.3414, -7.52949, 0.29", "34.297, -24.3125, -7.63603, 0.29", "34.9396, -24.8655, -7.70579, 0.29", "36.2465, -25.9153, -7.81926, 1.77", "36.6468, -26.2081, -7.84416, 2.58", "37.322, -26.6553, -7.87215, 3.02", "37.7165, -26.8815, -7.86813, 3.17", "38.0168, -27.0411, -7.85176, 3.17", "39.3186, -27.7264, -7.7357, 1.55", "40.6581, -28.4174, -7.57105, 0.22", "41.1282, -28.6541, -7.50433, 0.22", "42.1101, -29.1688, -7.32731, 1.03", "42.4819, -29.378, -7.2414, 1.25", "42.8777, -29.6148, -7.14291, 1.33", "43.438, -29.9619, -6.98165, 0.88", "43.8064, -30.2074, -6.8588, 0.29", "45.0315, -31.0634, -6.44997, 0.22", "46.3097, -32.0288, -6.04074, 1.84", "47.0338, -32.6224, -5.82067, 2.65", "47.6351, -33.1585, -5.63683, 2.5", "48.0281, -33.5399, -5.51711, 1.92", "49.2328, -34.7762, -5.13604, 0.29", "50.0887, -35.7048, -4.83588, 0.29", "50.9477, -36.6661, -4.47795, 0.22", "51.7434, -37.4754, -4.14622, 0.22", "52.7609, -38.432, -3.74355, 2.73", "53.4618, -39.0491, -3.46907, 3.24", "54.3261, -39.7699, -3.12264, 2.58", "56.5421, -41.4491, -2.2845, 0.22", "59.5248, -43.5468, -1.30221, 0.22", "60.8599, -44.4494, -0.936879, 2.06", "61.3208, -44.7543, -0.827966, 2.65", "62.0054, -45.1977, -0.688477, 2.8", "64.1728, -46.5775, -0.32837, 0.22", "66.9984, -48.3715, 0.0463341, 0.22", "68.1849, -49.1711, 0.202965, 1.25", "68.8243, -49.6085, 0.278487, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "23.7303, 14.9062, -0.743754, 0.88", "25.0986, 14.8403, -1.58679, 0.88", "26.0787, 14.773, -1.97128, 0.29", "27.8309, 14.6012, -2.23111, 0.37", "28.4769, 14.4943, -2.13333, 0.44", "29.4591, 14.2525, -1.65434, 0.44", "30.3355, 14.0085, -1.10721, 0.74", "32.564, 13.3216, 0.816073, 1.03", "33.237, 13.0921, 1.51064, 1.03", "34.2862, 12.7477, 2.64164, 0.66", "35.509, 12.3833, 3.90354, 0.44", "36.0204, 12.2628, 4.39124, 0.59", "36.6948, 12.1656, 4.92922, 0.29", "37.6092, 12.1052, 5.39419, 0.29", "38.7839, 12.0974, 5.86091, 1.4", "39.7113, 12.1621, 6.0989, 1.92", "40.5766, 12.2676, 6.22474, 1.62", "41.2678, 12.3688, 6.31693, 0.81", "41.6413, 12.433, 6.35753, 0.81" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "23.7303, 14.9062, -0.743754, 1.69", "23.9565, 17.1138, 0.0886573, 1.69", "24.0903, 18.4201, 0.581215, 1.25", "24.2347, 19.8291, 1.1125, 1.33", "24.3146, 20.609, 1.40657, 1.33", "24.3874, 21.32, 1.67466, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "25.2305, -4.4759, -24.2701, 0.44", "25.3602, -5.89574, -24.953, 0.44", "25.9, -8.0693, -25.8098, 0.29", "26.1515, -8.88269, -26.1378, 1.03", "26.3487, -9.48958, -26.3759, 1.33", "26.6996, -10.5466, -26.7711, 0.22", "27.2975, -12.3056, -27.3973, 0.22", "27.9213, -13.8728, -27.9251, 1.47", "28.3511, -14.887, -28.2276, 1.77", "28.8639, -16.1282, -28.6853, 0.15", "29.0884, -16.7229, -28.9718, 0.15", "29.473, -17.9639, -29.7053, 2.36", "29.5935, -18.4663, -30.0361, 2.95", "29.7236, -19.1186, -30.4917, 2.95", "30.0413, -20.7713, -31.694, 0.66", "30.2806, -22.063, -32.737, 0.22", "30.4431, -23.0362, -33.5833, 0.22", "30.5196, -23.5845, -34.0893, 1.11", "30.5657, -23.9194, -34.3875, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.2305, -4.4759, -24.2701, 0.22", "26.2283, -2.50555, -26.5562, 0.22", "27.0225, -1.1102, -28.187, 0.22", "28.0049, 0.552208, -30.0237, 1.99", "28.3958, 1.22354, -30.7361, 2.43", "29.433, 3.08097, -32.6935, 0.44", "29.7562, 3.67427, -33.3535, 0.96", "30.3137, 4.78873, -34.5966, 0.22", "31.2022, 6.81077, -36.7543, 0.22", "31.5324, 7.66645, -37.6149, 1.47", "31.769, 8.48709, -38.6329, 1.47", "32.2265, 10.7092, -41.4527, 0.15", "32.4171, 11.988, -43.0905, 0.15", "32.5326, 13.2109, -44.6262, 1.84", "32.5514, 13.6465, -45.154, 2.14", "32.7033, 18.3853, -50.6345, 0.22", "32.7617, 20.4137, -52.8966, 0.22", "32.7705, 20.8725, -53.3985, 0.22", "32.8189, 22.1577, -54.8324, 0.22", "32.8813, 23.6687, -56.417, 1.55", "32.9048, 24.2045, -56.9225, 1.55", "33.0594, 27.2074, -59.3687, 0.22", "33.1406, 28.239, -60.4441, 0.22", "33.2422, 29.053, -61.3363, 0.22", "33.3735, 29.8241, -62.2305, 0.96", "33.5822, 30.8713, -63.4438, 1.77", "33.6884, 31.2654, -63.9256, 1.77", "34.391, 33.3955, -66.682, 0.22", "34.693, 34.1997, -67.7983, 0.81", "35.0477, 35.0403, -69.0644, 0.22", "35.6727, 36.4163, -71.2785, 1.62", "36.9388, 39.1302, -75.7075, 0.22", "37.5509, 40.3667, -77.8765, 0.66", "37.9837, 41.1767, -79.4244, 1.18", "38.2627, 41.679, -80.4479, 1.18", "38.8376, 42.7037, -82.5994, 0.81", "39.0817, 43.1409, -83.5288, 1.33", "39.6915, 44.3381, -86.0611, 1.18", "40.1831, 45.3686, -88.1498, 0.29", "40.4761, 46.0414, -89.4173, 0.81", "40.613, 46.3903, -90.0114, 0.81", "41.2614, 48.1334, -92.6819, 0.22", "41.482, 48.7606, -93.6043, 0.22", "41.6478, 49.2939, -94.2693, 0.66", "41.822, 49.918, -95.0011, 0.66", "42.0519, 50.6922, -95.8765, 0.29", "42.3741, 51.7324, -96.9524, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "41.6413, 12.433, 6.35753, 0.66", "42.1972, 12.004, 7.92145, 0.66", "42.493, 11.8097, 8.63848, 0.66", "42.8788, 11.5754, 9.47772, 0.66", "43.4391, 11.2713, 10.4529, 0.44", "44.2212, 10.847, 11.8139, 0.66", "45.3349, 10.2427, 13.7521, 1.55", "45.9048, 10.0047, 14.5822, 2.14", "46.3292, 9.85188, 15.151, 2.36", "47.7262, 9.34648, 16.8748, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "41.6413, 12.433, 6.35753, 0.22", "43.4507, 12.4544, 5.28684, 0.22", "45.0488, 12.4741, 4.51435, 1.47", "45.6606, 12.4869, 4.25172, 1.69", "46.1624, 12.4978, 4.05438, 1.84", "46.9139, 12.5127, 3.7837, 0.74", "47.9441, 12.5377, 3.43106, 0.22", "48.8713, 12.546, 3.2704, 0.22", "49.8546, 12.5475, 3.19154, 0.88", "50.4101, 12.5398, 3.16288, 0.88", "51.1139, 12.5095, 3.1844, 0.29", "51.6783, 12.4617, 3.29241, 0.22", "53.1187, 12.253, 3.711, 1.18", "53.5974, 12.1617, 3.89353, 1.47", "54.1025, 12.0348, 4.1165, 0.96", "55.7508, 11.5699, 4.83924, 0.22", "57.7202, 10.9876, 5.69819, 1.69", "58.7756, 10.6639, 6.14068, 2.73", "59.7422, 10.3722, 6.50377, 3.02", "61.6364, 9.82813, 7.11884, 0.15", "62.8438, 9.5169, 7.44566, 0.15", "64.2613, 9.20509, 7.74418, 1.4", "64.843, 9.11005, 7.8414, 1.92", "65.8325, 9.02254, 8.00917, 0.96", "67.6675, 8.9621, 8.29291, 0.22", "69.0946, 8.9916, 8.49921, 0.22", "70.1023, 9.03554, 8.63724, 1.47", "71.3462, 9.09977, 8.76941, 2.5", "73.3239, 9.20874, 8.94162, 0.22", "73.482, 9.21766, 8.95081, 0.44", "74.9777, 9.30423, 8.96793, 0.22", "76.4544, 9.34399, 8.87406, 0.22", "78.2421, 9.34897, 8.63566, 2.36", "78.8921, 9.33885, 8.51629, 2.95", "79.3364, 9.32511, 8.41376, 3.02", "80.472, 9.281, 8.15361, 1.33", "82.5692, 9.18244, 7.6709, 0.22", "84.0505, 9.0985, 7.31795, 0.44", "84.9123, 9.04585, 7.11136, 0.37", "85.6013, 8.99849, 6.95773, 1.47", "86.4135, 8.9331, 6.79191, 1.92", "86.9449, 8.88145, 6.68421, 1.92" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "24.3874, 21.32, 1.67466, 0.15", "25.0143, 22.017, 2.31108, 0.15", "25.835, 23.2973, 3.45483, 1.4", "26.0645, 23.751, 3.86878, 1.99", "26.5303, 24.8038, 4.79302, 2.21", "26.6639, 25.1308, 5.05598, 2.5", "26.9055, 25.7402, 5.50067, 2.14", "27.4993, 27.6647, 6.67335, 0.66", "27.8126, 28.9594, 7.21296, 0.52", "27.9542, 29.5722, 7.36351, 0.52", "28.1387, 30.4267, 7.40197, 0.44", "28.2843, 31.1363, 7.35854, 0.29", "28.4785, 32.3291, 7.24873, 0.29", "28.6065, 33.3837, 7.12519, 0.59", "28.6446, 33.9956, 7.16198, 0.59", "28.6429, 34.8053, 7.49567, 0.37", "28.6162, 35.4983, 7.97562, 0.37", "28.5534, 37.0756, 9.29098, 2.14", "28.5382, 37.6782, 9.84701, 2.95", "28.5619, 38.7584, 10.9035, 3.17", "28.6626, 39.9108, 12.0395, 3.02", "28.9235, 41.0719, 13.189, 0.66", "29.0949, 41.5041, 13.5937, 0.52", "29.4128, 42.0259, 14.0256, 0.81", "29.8249, 42.5648, 14.4125, 0.81", "30.2135, 42.9944, 14.6744, 0.52", "31.6799, 44.4134, 15.4917, 0.44", "32.486, 45.1732, 15.9306, 1.47", "33.243, 45.9336, 16.3605, 2.65", "33.6945, 46.4281, 16.6242, 3.17", "34.0128, 46.8436, 16.8293, 2.95", "35.0127, 48.3523, 17.4871, 0.96", "35.5889, 49.3771, 17.8474, 0.29", "35.9038, 50.0096, 18.0242, 0.29", "36.1911, 50.656, 18.1651, 0.29", "36.9135, 52.3641, 18.4473, 1.55", "37.1388, 52.9354, 18.5266, 2.06", "37.4099, 53.6797, 18.6124, 1.99", "38.1393, 55.6888, 18.8437, 0.22", "38.6392, 57.0945, 19.0178, 0.22", "38.9291, 57.9492, 19.1206, 0.22", "39.685, 60.2308, 19.3661, 2.36", "39.9895, 61.1886, 19.467, 2.95", "40.1998, 61.8739, 19.5309, 3.17", "40.911, 64.2592, 19.7273, 0.29", "41.2085, 65.1894, 19.7754, 0.22", "41.6239, 66.3839, 19.6692, 0.22", "41.8863, 67.0935, 19.4924, 1.25", "42.2918, 68.2777, 19.1071, 1.92", "42.4477, 68.7831, 18.9111, 2.65", "42.6558, 69.4883, 18.6271, 2.5", "43.5536, 72.5072, 17.4984, 0.22", "43.9368, 73.7208, 17.1123, 0.22", "44.5275, 75.5144, 16.685, 0.22", "44.7889, 76.2709, 16.5598, 0.22", "45.3957, 78.0097, 16.403, 1.99", "45.5603, 78.4829, 16.3972, 2.5", "46.2891, 80.4083, 16.538, 0.22", "46.8348, 81.7442, 16.6359, 0.22", "47.1209, 82.4098, 16.684, 0.22", "47.7423, 83.8911, 16.7815, 2.28", "48.6363, 86.203, 16.8472, 0.22", "49.1602, 87.6466, 16.8822, 1.47", "49.3585, 88.2477, 16.8894, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "24.3874, 21.32, 1.67466, 0.96", "23.9672, 22.0812, 1.31391, 0.96", "23.5393, 23.0975, 0.886601, 0.81", "23.0652, 24.6271, 0.313991, 0.52", "22.8277, 25.7974, -0.0727048, 0.52", "22.6743, 27.1284, -0.513966, 0.52", "22.6016, 28.3364, -0.918731, 0.66", "22.6667, 29.7471, -1.41028, 0.96", "22.839, 30.6611, -1.71767, 1.11", "23.1764, 31.7019, -2.00228, 1.25", "23.6523, 32.9447, -2.26588, 1.25", "23.765, 33.2502, -2.30829, 1.33", "24.0467, 34.1776, -2.39198, 0.88", "24.2591, 35.2913, -2.4336, 0.59", "24.3705, 36.6036, -2.38783, 0.52", "24.3703, 37.9201, -2.27608, 0.52", "24.2815, 39.5172, -2.0664, 1.25", "24.1873, 40.4928, -1.93388, 1.77", "24.0059, 41.7416, -1.75735, 1.77", "23.7206, 43.2784, -1.49663, 1.47", "23.3408, 45.0822, -1.10618, 1.99", "23.1711, 45.8496, -0.905271, 2.58", "22.993, 46.6022, -0.671765, 2.87", "22.8314, 47.2139, -0.449403, 2.87", "22.4372, 48.5413, 0.119417, 2.06", "21.9836, 49.7583, 0.738042, 1.25", "21.5835, 50.6843, 1.25463, 0.81", "21.2054, 51.5263, 1.70835, 0.59", "20.7706, 52.4829, 2.18253, 0.29", "20.568, 52.9427, 2.38103, 0.29", "20.2383, 53.7202, 2.67206, 0.44", "19.7821, 54.9419, 3.08606, 0.59", "19.4627, 55.9441, 3.45292, 1.11", "19.2732, 56.7159, 3.78069, 1.33", "19.1867, 57.2762, 4.08373, 1.47", "19.1395, 58.0243, 4.58986, 1.33", "19.1497, 58.6968, 5.17663, 0.81", "19.1965, 59.1734, 5.6998, 0.59", "19.3001, 59.9003, 6.64163, 0.37", "19.3878, 60.7489, 7.85425, 0.37", "19.4281, 61.5177, 8.98667, 1.47", "19.4228, 61.9901, 9.65601, 1.77", "19.3761, 62.6791, 10.5907, 1.77", "19.2894, 63.4403, 11.5591, 1.4", "19.0682, 64.6402, 12.917, 0.29", "19.0016, 64.8988, 13.156, 0.29", "18.7133, 65.931, 13.9221, 1.03", "18.5788, 66.4272, 14.2344, 1.18", "18.4927, 66.7633, 14.4167, 1.18", "18.2938, 67.6771, 14.8586, 0.22", "18.1814, 68.4943, 15.2084, 0.22", "17.9983, 70.4002, 15.9875, 2.43", "17.9431, 71.2234, 16.3078, 2.65", "17.9176, 71.7821, 16.514, 2.8", "17.9049, 72.1646, 16.6346, 2.8", "17.839, 74.5097, 17.1592, 0.37", "17.7972, 75.5864, 17.2778, 0.29", "17.7352, 76.6719, 17.2813, 0.29", "17.6376, 78.0672, 17.1774, 0.88", "17.5012, 79.7122, 17.0312, 1.47", "17.3534, 81.1772, 16.9096, 2.28", "17.1978, 82.5264, 16.8596, 2.5", "17.1093, 83.3163, 16.8832, 2.8", "16.9247, 85.2041, 17.1458, 0.88", "16.7803, 86.8678, 17.6328, 0.44", "16.6459, 88.6869, 18.4501, 0.44", "16.5369, 90.321, 19.3935, 0.37", "16.4591, 91.552, 20.2309, 0.37", "16.3415, 93.1727, 21.4443, 1.55", "16.1328, 94.8975, 22.6408, 3.09", "15.9828, 95.7662, 23.1444, 3.68", "15.7239, 96.8663, 23.6272, 4.13", "15.4991, 97.6195, 23.8415, 4.13", "15.0294, 98.9586, 24.0536, 3.76", "13.4548, 102.892, 24.2607, 0.44", "12.846, 104.345, 24.2121, 0.37", "12.0648, 106.175, 24.0621, 1.03", "11.578, 107.314, 23.9264, 1.11", "11.164, 108.292, 23.7898, 1.11", "10.5635, 109.797, 23.5602, 0.22", "10.182, 111.056, 23.4818, 0.74", "10.0742, 111.58, 23.4932, 0.74", "10.0011, 112.169, 23.5641, 0.44", "9.95799, 112.658, 23.668, 0.22", "9.84599, 114.069, 24.0441, 0.22", "9.62023, 116.824, 24.8687, 3.39", "9.48078, 118.247, 25.3393, 4.13", "9.41875, 118.858, 25.5512, 4.35", "9.06804, 122.376, 26.7375, 0.29", "8.98568, 123.271, 27.0214, 0.52", "8.88899, 124.324, 27.3365, 0.59", "8.82123, 125.007, 27.4974, 0.59", "8.67872, 126.434, 27.7606, 0.29", "8.55691, 127.727, 27.9561, 0.29", "8.39691, 129.511, 28.1336, 1.62", "8.24155, 131.145, 28.2431, 2.43", "8.1614, 132.025, 28.3015, 2.43", "7.97986, 134.123, 28.4634, 0.37", "7.89972, 135.125, 28.5601, 0.29", "7.84704, 136.016, 28.6939, 0.22", "7.82053, 136.78, 28.8247, 0.22", "7.78945, 138.409, 29.0988, 0.22", "7.76801, 140.265, 29.4334, 1.84", "7.75812, 141.188, 29.5753, 2.8", "7.74272, 142.089, 29.6953, 2.87", "7.71395, 143.201, 29.8311, 2.28", "7.58411, 145.605, 30.0568, 0.29", "7.50852, 146.386, 30.0827, 0.22", "7.34483, 147.78, 30.0881, 0.81", "7.26664, 148.371, 30.0851, 0.96", "7.17186, 149.066, 30.086, 0.37", "7.06694, 149.934, 30.1609, 0.15", "6.94974, 151.04, 30.3454, 0.29", "6.88213, 151.731, 30.508, 0.29", "6.79359, 152.783, 30.8285, 0.15", "6.75747, 153.349, 31.0109, 0.15", "6.68365, 155.244, 31.6595, 1.84", "6.67014, 155.981, 31.9325, 2.36", "6.66318, 156.733, 32.2299, 2.5", "6.64809, 157.842, 32.672, 1.84", "6.62433, 159.665, 33.4382, 0.22", "6.61067, 160.35, 33.7295, 0.22", "6.5921, 161.792, 34.3158, 1.11", "6.59009, 162.253, 34.5134, 1.25", "6.59079, 162.71, 34.714, 0.66", "6.60673, 164.191, 35.4037, 0.22", "6.67319, 165.274, 35.8948, 0.22", "6.80861, 166.685, 36.4972, 0.22", "7.11971, 169.155, 37.5041, 2.43", "7.24238, 170.08, 37.8657, 2.87", "7.28159, 170.378, 37.976, 2.87", "7.66738, 173.453, 39.1266, 0.22", "7.76888, 174.444, 39.5167, 0.74", "7.80486, 175.0, 39.7429, 0.74", "7.82883, 176.385, 40.2984, 0.22", "7.7658, 177.327, 40.6667, 0.22", "7.44175, 179.324, 41.3937, 2.14", "7.17673, 180.218, 41.6962, 2.87", "7.01325, 180.663, 41.8286, 3.09", "6.61958, 181.628, 42.0531, 2.43", "5.72205, 183.776, 42.4287, 0.37", "5.3349, 184.751, 42.5521, 0.29", "5.01288, 185.647, 42.6277, 0.37", "4.75194, 186.58, 42.7372, 0.29", "4.56296, 187.556, 42.899, 0.29", "4.43268, 188.669, 43.1535, 0.37", "4.39383, 189.545, 43.4254, 0.59", "4.36308, 190.262, 43.6768, 0.59", "4.29621, 191.422, 44.0993, 0.22", "4.18559, 192.64, 44.542, 1.33", "4.05415, 193.517, 44.8596, 1.62", "3.91299, 194.277, 45.1051, 1.25", "3.5203, 196.221, 45.6807, 0.29", "3.36255, 197.0, 45.8991, 0.52", "3.25329, 197.597, 46.0674, 0.52", "3.05187, 198.854, 46.3433, 0.22", "2.83581, 200.508, 46.6311, 1.92", "2.72279, 201.597, 46.7862, 2.73", "2.68162, 202.123, 46.8474, 2.95", "2.63276, 202.855, 46.9229, 3.24", "2.42892, 206.436, 47.2239, 0.29", "2.39461, 207.242, 47.2794, 0.29", "2.38068, 208.528, 47.3648, 0.88", "2.39645, 209.42, 47.4268, 0.88", "2.42402, 210.217, 47.4728, 0.88", "2.57744, 211.838, 47.7004, 0.29", "2.75809, 213.112, 47.9953, 0.29", "3.13465, 215.664, 48.6647, 2.43", "3.23702, 216.32, 48.8529, 3.02", "3.4111, 217.306, 49.1563, 3.24", "4.20671, 221.387, 50.5673, 0.22", "4.48797, 222.724, 51.0883, 0.52", "4.60535, 223.271, 51.3176, 0.52", "4.79384, 224.068, 51.6561, 0.22", "4.95683, 224.691, 51.9033, 0.22", "5.39238, 226.257, 52.4758, 1.33", "5.57787, 226.922, 52.6425, 1.69", "5.73254, 227.473, 52.7825, 1.69", "6.26046, 229.569, 53.3183, 0.22", "6.43109, 230.439, 53.5954, 0.66", "6.49701, 230.91, 53.7713, 0.66", "6.5748, 231.652, 54.0846, 0.66", "6.6516, 232.759, 54.6194, 0.22", "6.66587, 233.308, 54.874, 0.22", "6.61892, 235.659, 56.0204, 1.99", "6.59918, 236.36, 56.3502, 2.65", "6.5887, 236.882, 56.5822, 2.8", "6.59014, 237.805, 56.9724, 2.14", "6.73865, 239.91, 57.9339, 0.22", "6.93703, 241.328, 58.5958, 0.22", "7.23723, 242.841, 59.2809, 1.25", "7.36484, 243.393, 59.5427, 1.47", "7.50247, 243.923, 59.832, 1.25", "8.05467, 245.792, 61.0734, 0.52", "8.27846, 246.509, 61.6358, 0.29", "8.47685, 247.198, 62.1726, 0.29", "8.70299, 247.976, 62.762, 0.29", "9.17738, 249.717, 63.9746, 1.84", "9.37094, 250.569, 64.5143, 2.28", "9.48146, 251.281, 64.9199, 2.5", "9.78889, 253.818, 66.4433, 0.29", "9.91879, 255.066, 67.2137, 0.22", "10.0001, 256.046, 67.834, 0.22", "10.024, 256.69, 68.2518, 0.22", "10.0531, 257.761, 69.0537, 0.22", "10.0674, 259.55, 70.5622, 1.77", "10.0653, 260.121, 71.0798, 2.36", "10.0843, 260.682, 71.6088, 2.65", "10.1754, 261.477, 72.3648, 2.8", "10.7972, 264.041, 74.6752, 0.29", "11.0631, 264.78, 75.2938, 0.22", "11.4377, 265.625, 75.9316, 0.22", "11.782, 266.224, 76.3803, 0.22", "12.158, 266.747, 76.7461, 0.22", "13.4032, 268.173, 77.6482, 1.47", "13.7265, 268.486, 77.834, 1.99", "14.1309, 268.843, 78.0666, 1.99", "16.0929, 270.504, 79.2708, 0.15", "16.8153, 271.106, 79.7313, 0.29", "17.1451, 271.349, 79.9268, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "30.5657, -23.9194, -34.3875, 0.22", "30.5041, -26.5202, -35.6416, 0.22", "30.4858, -27.1724, -35.9387, 1.11", "30.4756, -27.528, -36.1038, 1.11", "30.4602, -28.6684, -36.6015, 0.22", "30.4658, -31.1749, -37.6302, 0.22", "30.4927, -32.2686, -38.0969, 2.06", "30.5459, -33.0107, -38.3914, 2.65", "30.6132, -33.6362, -38.6523, 2.65", "30.7729, -34.7837, -39.1295, 1.03", "30.9278, -35.6077, -39.4665, 0.22", "31.307, -37.0312, -39.9577, 0.52", "31.417, -37.3671, -40.0626, 0.52", "31.5476, -37.7142, -40.1654, 0.29", "31.823, -38.4875, -40.4228, 1.03", "32.0004, -39.028, -40.624, 0.96", "32.1932, -39.7295, -40.928, 0.59", "32.3267, -40.4263, -41.2925, 1.84", "32.4102, -40.9552, -41.6147, 2.36", "32.5992, -42.496, -42.7014, 0.88", "32.678, -43.0085, -43.0979, 0.29", "32.8703, -44.1075, -43.9557, 0.29", "33.171, -45.6147, -45.1405, 1.69", "33.2741, -46.0463, -45.4722, 2.21", "33.4886, -46.8228, -46.0424, 2.21", "34.5413, -50.1674, -48.3583, 0.44", "34.7051, -50.6508, -48.6751, 0.74", "34.7531, -50.7821, -48.7528, 0.74", "35.0472, -51.5348, -49.1807, 0.22", "35.4642, -52.6347, -49.7875, 0.88", "35.5407, -52.8431, -49.8997, 0.88", "35.8635, -53.8758, -50.5045, 0.22", "36.0762, -54.6341, -50.951, 0.22", "36.3995, -55.984, -51.7386, 1.84", "36.4913, -56.4769, -52.0214, 2.21", "36.6105, -57.1248, -52.382, 2.21", "37.0589, -59.4597, -53.6961, 0.29", "37.2334, -60.3889, -54.2411, 0.15", "37.4172, -61.4343, -54.8477, 0.96", "37.6483, -62.8831, -55.6858, 0.22", "38.0167, -65.5861, -57.3278, 0.22", "38.1755, -67.0801, -58.2476, 2.21", "38.267, -68.2565, -59.0068, 2.8", "38.3723, -70.1985, -60.3295, 0.22", "38.3986, -71.1323, -60.9629, 1.03", "38.3856, -73.7004, -62.7067, 0.22", "38.3118, -74.9813, -63.5777, 1.77", "38.2389, -75.9347, -64.2156, 2.06", "38.0852, -77.9443, -65.5434, 0.22", "38.0237, -78.7582, -66.0969, 1.33", "37.958, -79.733, -66.741, 1.62", "37.8353, -81.9281, -68.0815, 0.22", "37.8168, -82.305, -68.3031, 0.74", "37.7912, -82.725, -68.5447, 0.74", "37.7251, -83.8716, -69.2136, 0.22", "37.7054, -84.6572, -69.6495, 0.22", "37.7098, -85.3871, -70.0029, 1.03", "37.7399, -86.0625, -70.2843, 1.11", "37.8486, -87.6892, -71.0209, 0.22", "37.9761, -89.1169, -71.611, 0.22", "38.1057, -90.2835, -72.064, 1.92", "38.164, -90.7763, -72.2487, 2.58", "38.2197, -91.1999, -72.403, 2.58", "38.6377, -94.1933, -73.3947, 0.29", "38.9832, -96.5404, -74.1176, 0.29", "39.0753, -97.1653, -74.3341, 1.03", "39.1899, -97.9476, -74.6393, 1.25", "39.7066, -101.206, -75.9372, 0.22", "39.8876, -102.123, -76.362, 0.74", "39.9701, -102.461, -76.5307, 0.74", "40.4448, -104.178, -77.5251, 0.22", "40.6956, -105.013, -78.0283, 1.69", "40.8957, -105.607, -78.4033, 2.5", "42.4138, -109.655, -80.9689, 0.22", "42.6732, -110.311, -81.3694, 0.74", "42.9232, -110.906, -81.6932, 0.74", "43.2083, -111.539, -81.9966, 0.22", "44.3571, -113.971, -83.0777, 0.22", "44.883, -115.02, -83.4829, 1.99", "45.1634, -115.542, -83.628, 2.21", "45.9069, -116.944, -83.9972, 0.22", "46.3719, -117.813, -84.2111, 0.96", "46.5716, -118.198, -84.2981, 1.18", "47.4906, -120.031, -84.6635, 0.22", "47.767, -120.612, -84.7906, 0.22", "48.1373, -121.393, -84.9686, 0.81", "48.3709, -121.88, -85.0985, 0.81", "49.3174, -123.789, -85.8597, 0.22", "49.6794, -124.493, -86.2204, 0.44", "49.9372, -124.979, -86.5128, 0.15", "50.5015, -125.959, -87.1686, 1.11", "51.2657, -127.187, -88.091, 0.22", "52.6243, -129.233, -89.7282, 1.03", "53.0574, -129.825, -90.2584, 0.81", "53.3346, -130.195, -90.6633, 0.52", "53.6086, -130.557, -91.1242, 0.81", "53.8236, -130.831, -91.5221, 0.81", "54.3119, -131.482, -92.4006, 0.22", "54.8282, -132.216, -93.3084, 0.96", "56.3208, -134.471, -96.0599, 0.37", "57.1167, -135.755, -97.5737, 1.4", "57.7441, -136.847, -98.7984, 1.03", "58.4996, -138.259, -100.312, 0.22", "58.7671, -138.811, -100.9, 0.96", "58.9703, -139.268, -101.347, 0.96", "59.2643, -139.984, -101.956, 0.59", "59.6089, -140.852, -102.701, 1.18", "59.9481, -141.669, -103.422, 1.33", "61.4186, -144.847, -106.325, 0.22", "61.6326, -145.269, -106.696, 0.88", "61.8191, -145.601, -106.972, 0.88", "62.6733, -146.95, -108.051, 0.22", "63.7877, -148.36, -109.092, 0.22", "64.4516, -149.038, -109.532, 1.18", "64.8309, -149.347, -109.707, 1.47", "65.579, -149.803, -110.052, 0.15", "66.4678, -150.241, -110.513, 0.44", "68.662, -151.116, -111.697, 0.22", "69.3173, -151.345, -112.098, 0.74", "69.7659, -151.493, -112.404, 0.74", "73.5871, -152.691, -115.235, 0.29", "75.3295, -153.213, -116.585, 1.03", "75.7173, -153.321, -116.895, 1.03", "77.2774, -153.775, -118.128, 0.29", "78.0459, -154.028, -118.704, 0.74", "79.2104, -154.474, -119.498, 0.22", "80.2933, -154.978, -120.12, 1.84", "80.8425, -155.258, -120.361, 1.84", "83.2692, -156.61, -121.252, 0.15", "84.0452, -157.095, -121.441, 0.74", "84.4951, -157.42, -121.52, 0.74", "85.051, -157.886, -121.578, 0.22", "85.6015, -158.425, -121.626, 0.59", "85.8008, -158.644, -121.638, 0.59", "86.648, -159.725, -121.725, 0.22", "87.0106, -160.232, -121.78, 0.74", "87.1868, -160.501, -121.827, 0.74", "87.9039, -161.702, -122.073, 0.15", "88.3977, -162.587, -122.269, 0.15", "88.7953, -163.325, -122.469, 0.59", "89.0664, -163.832, -122.616, 0.59", "90.1206, -165.802, -123.181, 0.22", "90.4574, -166.438, -123.363, 0.74", "90.6547, -166.814, -123.467, 0.74", "91.8616, -169.134, -124.111, 0.22", "92.7679, -170.805, -124.544, 0.22", "93.1037, -171.402, -124.7, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "30.5657, -23.9194, -34.3875, 0.22", "31.903, -25.0155, -34.4258, 0.22", "33.7018, -26.49, -34.4772, 0.22", "34.2487, -26.9383, -34.4929, 0.74", "34.891, -27.4647, -34.5112, 0.74", "36.8456, -29.0669, -34.5672, 0.22", "37.4261, -29.5428, -34.5838, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_43", "dend_32", "dend_27", "dend_20", "dend_0", "dend_47", "dend_44", "dend_40", "dend_33", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_1", "dend_46", "dend_45", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_25", "dend_22", "dend_19", "dend_18", "dend_10", "dend_9", "dend_2", "dend_39", "dend_38", "dend_36", "dend_35", "dend_24", "dend_23", "dend_12", "dend_11", "dend_6", "dend_3", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_4", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_43", "dend_32", "dend_27", "dend_20", "dend_0", "dend_47", "dend_44", "dend_40", "dend_33", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_1", "dend_46", "dend_45", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_25", "dend_22", "dend_19", "dend_18", "dend_10", "dend_9", "dend_2", "dend_39", "dend_38", "dend_36", "dend_35", "dend_24", "dend_23", "dend_12", "dend_11", "dend_6", "dend_3", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_4", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_NBC_63dc8fdbb5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_1
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.45000064795763495)
    connect dend_43(0), soma_0(0.45000064795763495)
    connect dend_32(0), soma_0(0.45000064795763495)
    connect dend_27(0), soma_0(0.45000064795763495)
    connect dend_20(0), soma_0(0.45000064795763495)
    connect dend_0(0), soma_0(0.45000064795763495)
    connect axon_0(0), soma_0(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_1(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -13.6672, -4.21761, 2.88746, 3.77586 ) }
    soma_0 { pt3dadd( -12.3226, -3.91408, 2.62074, 6.64131 ) }
    soma_0 { pt3dadd( -10.9781, -3.61056, 2.35401, 8.80204 ) }
    soma_0 { pt3dadd( -9.63356, -3.30703, 2.08728, 10.3184 ) }
    soma_0 { pt3dadd( -8.28902, -3.0035, 1.82056, 12.1801 ) }
    soma_0 { pt3dadd( -6.94448, -2.69998, 1.55383, 13.9015 ) }
    soma_0 { pt3dadd( -5.59994, -2.39645, 1.28711, 15.2125 ) }
    soma_0 { pt3dadd( -4.2554, -2.09293, 1.02038, 16.1357 ) }
    soma_0 { pt3dadd( -2.91086, -1.7894, 0.753656, 16.8349 ) }
    soma_0 { pt3dadd( -1.56632, -1.48588, 0.486931, 17.1545 ) }
    soma_0 { pt3dadd( -0.221778, -1.18235, 0.220205, 17.2905 ) }
    soma_0 { pt3dadd( 1.12276, -0.878824, -0.0465203, 17.299 ) }
    soma_0 { pt3dadd( 2.4673, -0.575298, -0.313246, 17.3774 ) }
    soma_0 { pt3dadd( 3.81184, -0.271773, -0.579971, 17.0096 ) }
    soma_0 { pt3dadd( 5.15639, 0.0317532, -0.846697, 16.2957 ) }
    soma_0 { pt3dadd( 6.50093, 0.335279, -1.11342, 15.4071 ) }
    soma_0 { pt3dadd( 7.84547, 0.638805, -1.38015, 13.8209 ) }
    soma_0 { pt3dadd( 9.19001, 0.942331, -1.64687, 12.2266 ) }
    soma_0 { pt3dadd( 10.5345, 1.24586, -1.9136, 10.4487 ) }
    soma_0 { pt3dadd( 11.8791, 1.54938, -2.18032, 8.51007 ) }
    soma_0 { pt3dadd( 13.2236, 1.85291, -2.44705, 4.94822 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 2.86402, -8.66581, -8.21721, 0.88 ) }
    dend_48 { pt3dadd( 2.86402, -8.66581, -8.21721, 0.88 ) }
    dend_48 { pt3dadd( 3.22672, -9.55123, -8.4724, 0.88 ) }
    dend_48 { pt3dadd( 3.8514, -10.87, -8.84998, 0.88 ) }
    dend_48 { pt3dadd( 4.51712, -12.153, -9.24585, 0.81 ) }
    dend_48 { pt3dadd( 5.50983, -13.9181, -9.80506, 0.88 ) }
    dend_48 { pt3dadd( 6.12483, -14.9495, -10.1658, 1.4 ) }
    dend_48 { pt3dadd( 6.55398, -15.6119, -10.4181, 1.69 ) }
    dend_48 { pt3dadd( 6.97028, -16.2023, -10.6626, 1.84 ) }
    dend_48 { pt3dadd( 7.42261, -16.8418, -10.9352, 1.84 ) }
    dend_48 { pt3dadd( 8.03222, -17.8174, -11.3168, 0.66 ) }
    dend_48 { pt3dadd( 8.54965, -18.9284, -11.6517, 0.44 ) }
    dend_48 { pt3dadd( 8.81424, -19.7734, -11.8539, 0.66 ) }
    dend_48 { pt3dadd( 8.94304, -20.3772, -11.9707, 0.88 ) }
    dend_48 { pt3dadd( 9.10754, -21.3602, -12.1098, 0.96 ) }
    dend_48 { pt3dadd( 9.21087, -22.058, -12.1789, 0.96 ) }
    dend_48 { pt3dadd( 9.34483, -22.9408, -12.2547, 0.74 ) }
    dend_48 { pt3dadd( 9.56707, -24.1761, -12.3462, 0.44 ) }
    dend_48 { pt3dadd( 9.78699, -25.1593, -12.4523, 0.29 ) }
    dend_48 { pt3dadd( 10.0231, -26.0085, -12.5662, 0.29 ) }
    dend_48 { pt3dadd( 10.3386, -26.9781, -12.7093, 1.62 ) }
    dend_48 { pt3dadd( 10.6839, -27.9274, -12.8511, 2.36 ) }
    dend_48 { pt3dadd( 10.876, -28.3885, -12.9134, 2.8 ) }
    dend_48 { pt3dadd( 11.0366, -28.7584, -12.9558, 2.95 ) }
    dend_48 { pt3dadd( 11.5073, -29.9896, -13.0603, 1.62 ) }
    dend_48 { pt3dadd( 11.9123, -31.2219, -13.1253, 0.66 ) }
    dend_48 { pt3dadd( 12.2535, -32.3343, -13.2235, 0.29 ) }
    dend_48 { pt3dadd( 12.6443, -33.5982, -13.4175, 0.29 ) }
    dend_48 { pt3dadd( 12.9013, -34.4338, -13.5842, 0.29 ) }
    dend_48 { pt3dadd( 13.3035, -35.8759, -13.9253, 2.28 ) }
    dend_48 { pt3dadd( 13.5448, -36.8625, -14.2125, 2.5 ) }
    dend_48 { pt3dadd( 14.0106, -39.0584, -14.9543, 0.66 ) }
    dend_48 { pt3dadd( 14.3199, -40.554, -15.4677, 0.29 ) }
    dend_48 { pt3dadd( 14.4715, -41.2864, -15.7284, 0.29 ) }
    dend_48 { pt3dadd( 14.8759, -43.0356, -16.3448, 2.73 ) }
    dend_48 { pt3dadd( 15.0292, -43.6416, -16.5651, 3.46 ) }
    dend_48 { pt3dadd( 15.2003, -44.3208, -16.8315, 3.46 ) }
    dend_48 { pt3dadd( 15.7902, -46.7633, -17.7458, 0.15 ) }
    dend_48 { pt3dadd( 15.9948, -47.5811, -18.0616, 0.15 ) }
    dend_48 { pt3dadd( 16.204, -48.3403, -18.3856, 0.88 ) }
    dend_48 { pt3dadd( 16.4809, -49.277, -18.8242, 1.18 ) }
    dend_48 { pt3dadd( 16.857, -50.623, -19.501, 0.88 ) }
    dend_48 { pt3dadd( 17.0955, -51.5632, -19.9925, 0.15 ) }
    dend_48 { pt3dadd( 17.402, -52.9624, -20.7402, 1.92 ) }
    dend_48 { pt3dadd( 17.5618, -53.6789, -21.0842, 2.87 ) }
    dend_48 { pt3dadd( 17.6893, -54.2626, -21.3523, 2.87 ) }
    dend_48 { pt3dadd( 18.1298, -56.345, -22.2503, 0.74 ) }
    dend_48 { pt3dadd( 18.3177, -57.2633, -22.6272, 0.29 ) }
    dend_48 { pt3dadd( 18.4324, -57.8586, -22.8852, 0.59 ) }
    dend_48 { pt3dadd( 18.5552, -58.5804, -23.1816, 0.74 ) }
    dend_48 { pt3dadd( 18.8258, -60.324, -23.8283, 0.22 ) }
    dend_48 { pt3dadd( 19.025, -61.7744, -24.3068, 1.25 ) }
    dend_48 { pt3dadd( 19.105, -62.4622, -24.5213, 1.55 ) }
    dend_48 { pt3dadd( 19.3415, -64.3552, -25.1089, 0.22 ) }
    dend_48 { pt3dadd( 19.5722, -65.9695, -25.5823, 0.22 ) }
    dend_48 { pt3dadd( 19.6955, -66.7391, -25.7853, 0.88 ) }
    dend_48 { pt3dadd( 19.8481, -67.5192, -25.9423, 1.18 ) }
    dend_48 { pt3dadd( 20.0354, -68.3107, -26.0996, 0.96 ) }
    dend_48 { pt3dadd( 20.4313, -69.6939, -26.3921, 0.22 ) }
    dend_48 { pt3dadd( 20.6912, -70.4112, -26.5419, 0.52 ) }
    dend_48 { pt3dadd( 20.7894, -70.6573, -26.6096, 0.66 ) }
    dend_48 { pt3dadd( 21.1604, -71.5987, -26.8784, 0.22 ) }
    dend_48 { pt3dadd( 21.8343, -73.3605, -27.3981, 2.8 ) }
    dend_48 { pt3dadd( 22.0863, -74.0492, -27.5974, 3.24 ) }
    dend_48 { pt3dadd( 22.3329, -74.8058, -27.8351, 2.95 ) }
    dend_48 { pt3dadd( 23.1227, -77.3845, -28.6705, 0.29 ) }
    dend_48 { pt3dadd( 23.5744, -78.919, -29.15, 0.15 ) }
    dend_48 { pt3dadd( 23.8461, -79.8981, -29.4445, 0.96 ) }
    dend_48 { pt3dadd( 23.9678, -80.3529, -29.568, 1.18 ) }
    dend_48 { pt3dadd( 24.4266, -82.1995, -30.0807, 0.22 ) }
    dend_48 { pt3dadd( 24.5575, -82.7296, -30.2324, 0.52 ) }
    dend_48 { pt3dadd( 25.0012, -84.2985, -30.6554, 0.22 ) }
    dend_48 { pt3dadd( 25.3414, -85.4157, -30.9744, 1.69 ) }
    dend_48 { pt3dadd( 25.6162, -86.2632, -31.2103, 2.36 ) }
    dend_48 { pt3dadd( 25.8976, -87.0701, -31.457, 2.5 ) }
    dend_48 { pt3dadd( 26.647, -89.0728, -32.0646, 0.22 ) }
    dend_48 { pt3dadd( 27.3961, -91.102, -32.7169, 0.22 ) }
    dend_48 { pt3dadd( 27.7036, -91.9374, -32.9978, 1.33 ) }
    dend_48 { pt3dadd( 27.9639, -92.6629, -33.2322, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 28.2789, -93.6075, -33.5258, 2.06 ) }
    dend_48 { pt3dadd( 28.9543, -95.7619, -34.1102, 0.22 ) }
    dend_48 { pt3dadd( 29.2383, -96.731, -34.3541, 0.74 ) }
    dend_48 { pt3dadd( 29.2925, -96.9204, -34.398, 0.74 ) }
    dend_48 { pt3dadd( 29.6274, -98.0427, -34.6159, 0.22 ) }
    dend_48 { pt3dadd( 29.9584, -99.1643, -34.797, 1.69 ) }
    dend_48 { pt3dadd( 30.227, -100.081, -34.9082, 2.43 ) }
    dend_48 { pt3dadd( 30.3514, -100.521, -34.956, 2.5 ) }
    dend_48 { pt3dadd( 31.0573, -103.28, -35.0528, 0.15 ) }
    dend_48 { pt3dadd( 31.3893, -104.741, -35.0442, 0.15 ) }
    dend_48 { pt3dadd( 31.4951, -105.367, -35.0178, 0.59 ) }
    dend_48 { pt3dadd( 31.5738, -105.99, -34.975, 0.74 ) }
    dend_48 { pt3dadd( 31.7727, -108.232, -34.796, 0.22 ) }
    dend_48 { pt3dadd( 31.8918, -110.48, -34.6013, 2.5 ) }
    dend_48 { pt3dadd( 31.9064, -111.101, -34.5489, 2.95 ) }
    dend_48 { pt3dadd( 31.9638, -115.014, -34.2385, 0.22 ) }
    dend_48 { pt3dadd( 31.977, -115.547, -34.1987, 0.81 ) }
    dend_48 { pt3dadd( 31.9844, -115.999, -34.1904, 0.81 ) }
    dend_48 { pt3dadd( 32.0081, -118.597, -34.2914, 0.22 ) }
    dend_48 { pt3dadd( 32.0401, -119.923, -34.4287, 1.69 ) }
    dend_48 { pt3dadd( 32.0751, -120.769, -34.535, 2.14 ) }
    dend_48 { pt3dadd( 32.2201, -122.977, -34.8698, 0.22 ) }
    dend_48 { pt3dadd( 32.4153, -125.527, -35.2316, 1.25 ) }
    dend_48 { pt3dadd( 32.455, -126.059, -35.3012, 1.47 ) }
    dend_48 { pt3dadd( 32.589, -128.634, -35.4993, 0.22 ) }
    dend_48 { pt3dadd( 32.6043, -129.392, -35.5105, 0.74 ) }
    dend_48 { pt3dadd( 32.5774, -129.993, -35.4876, 0.74 ) }
    dend_48 { pt3dadd( 32.4182, -131.212, -35.3508, 0.22 ) }
    dend_48 { pt3dadd( 32.2567, -132.052, -35.194, 0.22 ) }
    dend_48 { pt3dadd( 31.7215, -134.083, -34.8132, 2.21 ) }
    dend_48 { pt3dadd( 31.5005, -134.717, -34.6953, 2.73 ) }
    dend_48 { pt3dadd( 30.5998, -136.977, -34.3917, 0.22 ) }
    dend_48 { pt3dadd( 30.1032, -138.089, -34.3041, 0.22 ) }
    dend_48 { pt3dadd( 29.7535, -138.797, -34.298, 0.81 ) }
    dend_48 { pt3dadd( 29.5013, -139.278, -34.323, 1.03 ) }
    dend_48 { pt3dadd( 29.1821, -139.833, -34.389, 0.81 ) }
    dend_48 { pt3dadd( 28.3537, -141.1, -34.5296, 0.22 ) }
    dend_48 { pt3dadd( 27.9096, -141.696, -34.5913, 1.18 ) }
    dend_48 { pt3dadd( 27.45, -142.292, -34.6402, 1.4 ) }
    dend_48 { pt3dadd( 27.1019, -142.735, -34.6655, 1.18 ) }
    dend_48 { pt3dadd( 26.0126, -144.27, -34.6966, 0.22 ) }
    dend_48 { pt3dadd( 25.3656, -145.344, -34.6393, 0.22 ) }
    dend_48 { pt3dadd( 25.1695, -145.739, -34.5974, 0.96 ) }
    dend_48 { pt3dadd( 24.9393, -146.338, -34.5335, 1.18 ) }
    dend_48 { pt3dadd( 24.7749, -146.878, -34.4776, 0.88 ) }
    dend_48 { pt3dadd( 24.1072, -149.618, -34.2066, 0.22 ) }
    dend_48 { pt3dadd( 23.7915, -151.501, -34.0404, 2.73 ) }
    dend_48 { pt3dadd( 23.7085, -152.183, -33.9774, 2.8 ) }
    dend_48 { pt3dadd( 23.4856, -154.389, -33.7678, 0.22 ) }
    dend_48 { pt3dadd( 23.424, -155.07, -33.7441, 0.74 ) }
    dend_48 { pt3dadd( 23.3996, -155.338, -33.7583, 0.81 ) }
    dend_48 { pt3dadd( 23.2468, -156.659, -33.9694, 0.22 ) }
    dend_48 { pt3dadd( 23.1651, -157.178, -34.1023, 0.52 ) }
    dend_48 { pt3dadd( 23.0878, -157.518, -34.213, 0.74 ) }
    dend_48 { pt3dadd( 22.4128, -160.001, -35.2619, 0.22 ) }
    dend_48 { pt3dadd( 21.9609, -161.53, -35.9611, 0.22 ) }
    dend_48 { pt3dadd( 21.5618, -162.8, -36.5969, 1.62 ) }
    dend_48 { pt3dadd( 21.3682, -163.375, -36.9018, 1.92 ) }
    dend_48 { pt3dadd( 20.7061, -165.327, -37.9704, 0.22 ) }
    dend_48 { pt3dadd( 20.2341, -166.696, -38.7243, 0.22 ) }
    dend_48 { pt3dadd( 19.9591, -167.479, -39.1448, 0.96 ) }
    dend_48 { pt3dadd( 19.7069, -168.266, -39.6083, 1.25 ) }
    dend_48 { pt3dadd( 19.4823, -169.066, -40.0874, 0.22 ) }
    dend_48 { pt3dadd( 19.113, -170.526, -40.8973, 0.22 ) }
    dend_48 { pt3dadd( 18.8354, -171.758, -41.5329, 1.03 ) }
    dend_48 { pt3dadd( 18.7655, -172.112, -41.7006, 1.03 ) }
    dend_48 { pt3dadd( 18.3964, -174.215, -42.6272, 0.22 ) }
    dend_48 { pt3dadd( 18.2605, -175.13, -42.9637, 0.22 ) }
    dend_48 { pt3dadd( 18.0849, -176.444, -43.3729, 2.21 ) }
    dend_48 { pt3dadd( 18.0014, -177.065, -43.5242, 2.43 ) }
    dend_48 { pt3dadd( 17.8167, -178.43, -43.805, 1.47 ) }
    dend_48 { pt3dadd( 17.5636, -180.063, -44.0778, 0.22 ) }
    dend_48 { pt3dadd( 17.2659, -181.811, -44.2803, 0.22 ) }
    dend_48 { pt3dadd( 17.0624, -183.004, -44.4142, 1.62 ) }
    dend_48 { pt3dadd( 16.9426, -183.706, -44.4936, 2.14 ) }
    dend_48 { pt3dadd( 16.8077, -184.473, -44.5687, 2.14 ) }
    dend_48 { pt3dadd( 16.3825, -186.644, -44.7533, 0.22 ) }
    dend_48 { pt3dadd( 16.1775, -187.688, -44.8434, 1.25 ) }
    dend_48 { pt3dadd( 16.0613, -188.298, -44.8922, 1.55 ) }
    dend_48 { pt3dadd( 15.8689, -189.384, -44.9478, 1.18 ) }
    dend_48 { pt3dadd( 15.4793, -191.701, -45.0124, 0.22 ) }
    dend_48 { pt3dadd( 15.2909, -192.823, -45.0255, 1.69 ) }
    dend_48 { pt3dadd( 15.1709, -193.542, -45.0288, 1.99 ) }
    dend_48 { pt3dadd( 14.7341, -196.013, -45.0167, 0.22 ) }
    dend_48 { pt3dadd( 14.4491, -197.618, -44.9832, 0.81 ) }
    dend_48 { pt3dadd( 14.3735, -198.063, -44.9589, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 86/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.78402, 3.69569, 10.9728, 0.59 ) }
    dend_43 { pt3dadd( 2.46973, 4.00522, 11.7641, 0.59 ) }
    dend_43 { pt3dadd( 2.05347, 4.41516, 12.8122, 0.81 ) }
    dend_43 { pt3dadd( -0.0792518, 6.51555, 18.1819, 2.65 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -13.986, -4.31981, -3.2872, 1.25 ) }
    dend_32 { pt3dadd( -14.0896, -4.37193, -3.29397, 1.25 ) }
    dend_32 { pt3dadd( -14.8098, -4.73396, -3.34099, 1.25 ) }
    dend_32 { pt3dadd( -15.4053, -5.03332, -3.37987, 1.4 ) }
    dend_32 { pt3dadd( -15.8319, -5.24779, -3.40772, 1.55 ) }
    dend_32 { pt3dadd( -16.3653, -5.51593, -3.44255, 1.55 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 96/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -13.616, -2.14681, 4.5928, 1.92 ) }
    dend_27 { pt3dadd( -13.616, -2.14681, 4.5928, 1.92 ) }
    dend_27 { pt3dadd( -14.4056, -2.07426, 4.5928, 1.33 ) }
    dend_27 { pt3dadd( -15.1224, -2.01651, 4.57647, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( -16.0568, -1.94778, 4.54026, 1.18 ) }
    dend_27 { pt3dadd( -16.9564, -1.88098, 4.49875, 1.18 ) }
    dend_27 { pt3dadd( -18.0822, -1.79904, 4.44322, 1.18 ) }
    dend_27 { pt3dadd( -19.3021, -1.72673, 4.38165, 1.62 ) }
    dend_27 { pt3dadd( -20.3161, -1.68094, 4.31491, 2.21 ) }
    dend_27 { pt3dadd( -20.7835, -1.66114, 4.29113, 2.58 ) }
    dend_27 { pt3dadd( -21.4327, -1.61239, 4.26828, 2.87 ) }
    dend_27 { pt3dadd( -22.0129, -1.53228, 4.25886, 2.87 ) }
    dend_27 { pt3dadd( -22.8967, -1.34723, 4.27927, 2.58 ) }
    dend_27 { pt3dadd( -23.7747, -1.10752, 4.33859, 1.69 ) }
    dend_27 { pt3dadd( -24.9412, -0.717964, 4.50742, 0.88 ) }
    dend_27 { pt3dadd( -25.8376, -0.360528, 4.71879, 0.81 ) }
    dend_27 { pt3dadd( -26.3902, -0.101189, 4.89397, 0.81 ) }
    dend_27 { pt3dadd( -26.8808, 0.164874, 5.10205, 1.03 ) }
    dend_27 { pt3dadd( -27.2404, 0.382373, 5.29585, 1.18 ) }
    dend_27 { pt3dadd( -27.8284, 0.735425, 5.70669, 1.18 ) }
    dend_27 { pt3dadd( -28.4598, 1.0662, 6.21801, 1.4 ) }
    dend_27 { pt3dadd( -28.7897, 1.20386, 6.50991, 1.55 ) }
    dend_27 { pt3dadd( -29.275, 1.36047, 6.95329, 1.55 ) }
    dend_27 { pt3dadd( -29.7875, 1.50465, 7.4194, 1.33 ) }
    dend_27 { pt3dadd( -30.8228, 1.7531, 8.3629, 1.25 ) }
    dend_27 { pt3dadd( -31.8539, 1.9571, 9.27736, 2.28 ) }
    dend_27 { pt3dadd( -32.3843, 2.04293, 9.75243, 3.24 ) }
    dend_27 { pt3dadd( -32.8457, 2.10276, 10.1863, 3.54 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 24/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.47402, 7.81619, -0.657204, 1.77 ) }
    dend_20 { pt3dadd( 2.47402, 7.81619, -0.657204, 1.77 ) }
    dend_20 { pt3dadd( 2.55564, 8.82257, -0.576679, 1.33 ) }
    dend_20 { pt3dadd( 2.65002, 9.89241, -0.470115, 1.03 ) }
    dend_20 { pt3dadd( 2.71159, 10.5942, -0.391632, 0.96 ) }
    dend_20 { pt3dadd( 2.78305, 11.4108, -0.295904, 0.96 ) }
    dend_20 { pt3dadd( 2.86031, 12.2831, -0.19634, 1.11 ) }
    dend_20 { pt3dadd( 2.93242, 13.1808, -0.094919, 1.33 ) }
    dend_20 { pt3dadd( 2.97415, 13.8524, -0.0152274, 1.55 ) }
    dend_20 { pt3dadd( 3.0009, 14.5475, 0.0545928, 1.55 ) }
    dend_20 { pt3dadd( 3.01153, 15.3117, 0.109202, 1.55 ) }
    dend_20 { pt3dadd( 3.00179, 16.3902, 0.128525, 1.18 ) }
    dend_20 { pt3dadd( 2.9692, 17.3477, 0.100361, 1.03 ) }
    dend_20 { pt3dadd( 2.89871, 18.5694, 0.00467905, 1.4 ) }
    dend_20 { pt3dadd( 2.84262, 19.335, -0.109112, 1.84 ) }
    dend_20 { pt3dadd( 2.76562, 20.2774, -0.297739, 2.14 ) }
    dend_20 { pt3dadd( 2.70014, 20.97, -0.461349, 2.14 ) }
    dend_20 { pt3dadd( 2.6254, 21.6732, -0.66123, 2.21 ) }
    dend_20 { pt3dadd( 2.5647, 22.2735, -0.867476, 1.99 ) }
    dend_20 { pt3dadd( 2.47604, 23.2247, -1.26746, 1.69 ) }
    dend_20 { pt3dadd( 2.43053, 23.8022, -1.51866, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 45/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 12.624, 0.415688, -4.7872, 6.48 ) }
    dend_0 { pt3dadd( 12.624, 0.415688, -4.7872, 6.48 ) }
    dend_0 { pt3dadd( 13.7041, 0.577233, -4.75405, 6.48 ) }
    dend_0 { pt3dadd( 14.6549, 0.719438, -4.72487, 5.23 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 49/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 13.2236, 1.85291, -2.44705, 0.852594 ) }
    axon_0 { pt3dadd( 27.8554, 5.156, -2.44705, 0.852594 ) }
    axon_0 { pt3dadd( 42.4872, 8.45908, -2.44705, 0.852594 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.0792518, 6.51555, 18.1819, 2.36 ) }
    dend_47 { pt3dadd( -0.471031, 6.4378, 18.2967, 2.36 ) }
    dend_47 { pt3dadd( -2.18802, 6.1434, 18.6569, 1.69 ) }
    dend_47 { pt3dadd( -3.28814, 5.93845, 18.814, 0.44 ) }
    dend_47 { pt3dadd( -4.01304, 5.75304, 18.8877, 0.74 ) }
    dend_47 { pt3dadd( -4.54862, 5.58282, 18.9446, 0.88 ) }
    dend_47 { pt3dadd( -5.22465, 5.32548, 19.0228, 0.88 ) }
    dend_47 { pt3dadd( -5.68673, 5.09745, 19.0445, 0.74 ) }
    dend_47 { pt3dadd( -5.42642, 4.65681, 19.676, 0.52 ) }
    dend_47 { pt3dadd( -5.22559, 4.279, 20.4796, 0.66 ) }
    dend_47 { pt3dadd( -4.87758, 3.58564, 21.9733, 0.81 ) }
    dend_47 { pt3dadd( -4.67051, 3.08972, 23.0237, 1.33 ) }
    dend_47 { pt3dadd( -4.60411, 2.86341, 23.5033, 1.33 ) }
    dend_47 { pt3dadd( -4.27782, 0.882166, 27.9685, 0.88 ) }
    dend_47 { pt3dadd( -4.27195, 0.057178, 30.0149, 0.74 ) }
    dend_47 { pt3dadd( -4.35324, -0.270945, 30.9214, 0.74 ) }
    dend_47 { pt3dadd( -4.63252, -0.697746, 32.224, 0.81 ) }
    dend_47 { pt3dadd( -5.11988, -1.13279, 33.7074, 0.96 ) }
    dend_47 { pt3dadd( -5.58548, -1.41022, 34.7063, 1.11 ) }
    dend_47 { pt3dadd( -6.07555, -1.55933, 35.2711, 1.77 ) }
    dend_47 { pt3dadd( -6.543, -1.60637, 35.7025, 2.21 ) }
    dend_47 { pt3dadd( -7.1236, -1.56535, 36.2049, 2.5 ) }
    dend_47 { pt3dadd( -7.63042, -1.45128, 36.6156, 2.65 ) }
    dend_47 { pt3dadd( -8.24662, -1.21729, 37.0768, 2.65 ) }
    dend_47 { pt3dadd( -9.6521, -0.527349, 38.0104, 0.81 ) }
    dend_47 { pt3dadd( -10.0179, -0.315671, 38.2249, 0.66 ) }
    dend_47 { pt3dadd( -10.781, 0.110699, 38.5779, 0.88 ) }
    dend_47 { pt3dadd( -11.262, 0.345009, 38.7452, 0.59 ) }
    dend_47 { pt3dadd( -12.1772, 0.725508, 39.0, 0.29 ) }
    dend_47 { pt3dadd( -13.0982, 1.1276, 39.1574, 0.29 ) }
    dend_47 { pt3dadd( -13.0801, 0.591897, 39.1892, 0.29 ) }
    dend_47 { pt3dadd( -12.999, -0.998467, 39.3277, 0.29 ) }
    dend_47 { pt3dadd( -12.846, -2.12775, 39.3572, 0.29 ) }
    dend_47 { pt3dadd( -12.5641, -3.62673, 39.3622, 0.29 ) }
    dend_47 { pt3dadd( -12.124, -5.54127, 39.3401, 0.29 ) }
    dend_47 { pt3dadd( -11.6668, -7.2445, 39.3224, 0.37 ) }
    dend_47 { pt3dadd( -11.0926, -9.05537, 39.298, 0.37 ) }
    dend_47 { pt3dadd( -10.2883, -11.1237, 39.2495, 0.59 ) }
    dend_47 { pt3dadd( -10.0355, -11.7215, 39.2229, 1.03 ) }
    dend_47 { pt3dadd( -9.80227, -12.2528, 39.1775, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 92/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.0792518, 6.51555, 18.1819, 0.59 ) }
    dend_44 { pt3dadd( 0.0287533, 8.02544, 18.2643, 0.59 ) }
    dend_44 { pt3dadd( 0.105939, 9.10449, 18.3232, 0.29 ) }
    dend_44 { pt3dadd( 0.162628, 9.89698, 18.3664, 0.29 ) }
    dend_44 { pt3dadd( 0.233262, 10.8844, 18.4203, 0.81 ) }
    dend_44 { pt3dadd( 0.28795, 11.649, 18.4621, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 98/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -16.3653, -5.51593, -3.44255, 0.22 ) }
    dend_40 { pt3dadd( -16.8282, -5.31169, -3.59568, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_40 { pt3dadd( -17.4619, -5.05184, -3.83999, 0.22 ) }
    dend_40 { pt3dadd( -17.7007, -4.95599, -3.93061, 0.66 ) }
    dend_40 { pt3dadd( -18.0266, -4.84087, -4.07517, 0.81 ) }
    dend_40 { pt3dadd( -18.3665, -4.73474, -4.25722, 0.52 ) }
    dend_40 { pt3dadd( -18.6399, -4.65624, -4.4201, 0.22 ) }
    dend_40 { pt3dadd( -19.0979, -4.57881, -4.6876, 0.22 ) }
    dend_40 { pt3dadd( -19.6967, -4.54183, -5.02033, 1.33 ) }
    dend_40 { pt3dadd( -20.2765, -4.54628, -5.33182, 1.99 ) }
    dend_40 { pt3dadd( -20.8365, -4.59696, -5.61034, 2.21 ) }
    dend_40 { pt3dadd( -21.3412, -4.68389, -5.84747, 2.28 ) }
    dend_40 { pt3dadd( -22.2938, -4.95391, -6.34748, 0.52 ) }
    dend_40 { pt3dadd( -22.8714, -5.17993, -6.67353, 0.44 ) }
    dend_40 { pt3dadd( -23.1828, -5.31942, -6.86466, 0.22 ) }
    dend_40 { pt3dadd( -23.7258, -5.56591, -7.21395, 1.25 ) }
    dend_40 { pt3dadd( -24.0156, -5.69673, -7.41031, 1.33 ) }
    dend_40 { pt3dadd( -25.1881, -6.2611, -8.29255, 0.22 ) }
    dend_40 { pt3dadd( -25.5126, -6.41974, -8.58284, 0.22 ) }
    dend_40 { pt3dadd( -26.1487, -6.71234, -9.20317, 2.28 ) }
    dend_40 { pt3dadd( -26.6042, -6.91354, -9.687, 3.61 ) }
    dend_40 { pt3dadd( -26.8041, -6.98851, -9.9123, 3.61 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 20/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -16.3653, -5.51593, -3.44255, 0.96 ) }
    dend_33 { pt3dadd( -17.9725, -7.0083, -1.52952, 0.96 ) }
    dend_33 { pt3dadd( -18.9183, -7.66025, -0.606814, 1.25 ) }
    dend_33 { pt3dadd( -19.6389, -8.06399, 0.00524174, 1.33 ) }
    dend_33 { pt3dadd( -20.3803, -8.40289, 0.581919, 1.33 ) }
    dend_33 { pt3dadd( -21.4321, -8.80852, 1.33781, 0.52 ) }
    dend_33 { pt3dadd( -22.3397, -9.10006, 1.92482, 0.88 ) }
    dend_33 { pt3dadd( -23.3469, -9.1844, 2.27399, 1.33 ) }
    dend_33 { pt3dadd( -23.8135, -9.17611, 2.3708, 1.55 ) }
    dend_33 { pt3dadd( -24.4455, -9.12984, 2.45378, 1.69 ) }
    dend_33 { pt3dadd( -24.9195, -9.08849, 2.48386, 1.69 ) }
    dend_33 { pt3dadd( -25.8746, -9.04212, 2.49729, 1.18 ) }
    dend_33 { pt3dadd( -27.6521, -9.09261, 2.48924, 0.52 ) }
    dend_33 { pt3dadd( -28.4293, -9.16997, 2.49261, 0.66 ) }
    dend_33 { pt3dadd( -29.2037, -9.29085, 2.51809, 0.66 ) }
    dend_33 { pt3dadd( -29.966, -9.45691, 2.56324, 0.66 ) }
    dend_33 { pt3dadd( -30.9863, -9.71175, 2.64682, 0.81 ) }
    dend_33 { pt3dadd( -32.4563, -10.1577, 2.83059, 1.4 ) }
    dend_33 { pt3dadd( -33.0887, -10.3994, 2.95478, 2.14 ) }
    dend_33 { pt3dadd( -33.7815, -10.6711, 3.10947, 2.5 ) }
    dend_33 { pt3dadd( -34.6724, -11.0289, 3.33765, 2.8 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 41/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -32.8457, 2.10276, 10.1863, 1.84 ) }
    dend_29 { pt3dadd( -33.5345, 1.07847, 10.9499, 1.84 ) }
    dend_29 { pt3dadd( -34.0805, 0.266339, 11.5554, 1.18 ) }
    dend_29 { pt3dadd( -34.4452, -0.276023, 11.9597, 0.88 ) }
    dend_29 { pt3dadd( -34.7853, -0.78181, 12.3368, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -32.8457, 2.10276, 10.1863, 1.4 ) }
    dend_28 { pt3dadd( -33.4252, 3.5281, 9.93746, 1.4 ) }
    dend_28 { pt3dadd( -33.9053, 4.65253, 9.73252, 0.81 ) }
    dend_28 { pt3dadd( -34.1588, 5.17523, 9.64732, 0.81 ) }
    dend_28 { pt3dadd( -34.5472, 5.89479, 9.53825, 0.96 ) }
    dend_28 { pt3dadd( -34.8248, 6.36457, 9.47042, 1.11 ) }
    dend_28 { pt3dadd( -35.1405, 6.85558, 9.40165, 1.11 ) }
    dend_28 { pt3dadd( -35.4378, 7.2777, 9.33169, 1.11 ) }
    dend_28 { pt3dadd( -35.9191, 7.87952, 9.2502, 0.52 ) }
    dend_28 { pt3dadd( -36.175, 8.21728, 9.22594, 0.81 ) }
    dend_28 { pt3dadd( -36.4195, 8.59928, 9.20897, 0.81 ) }
    dend_28 { pt3dadd( -36.7082, 9.20089, 9.18671, 0.52 ) }
    dend_28 { pt3dadd( -36.8924, 9.76897, 9.16936, 0.52 ) }
    dend_28 { pt3dadd( -36.9864, 10.2851, 9.16045, 0.52 ) }
    dend_28 { pt3dadd( -37.0596, 11.1904, 9.13924, 0.52 ) }
    dend_28 { pt3dadd( -37.0617, 11.9019, 9.13097, 1.33 ) }
    dend_28 { pt3dadd( -37.0319, 12.2737, 9.13235, 1.55 ) }
    dend_28 { pt3dadd( -36.985, 12.5484, 9.13926, 1.69 ) }
    dend_28 { pt3dadd( -36.8701, 13.0618, 9.16527, 1.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.43053, 23.8022, -1.51866, 0.44 ) }
    dend_26 { pt3dadd( 3.07746, 24.9428, -4.12052, 0.44 ) }
    dend_26 { pt3dadd( 3.29951, 25.3651, -4.99794, 0.52 ) }
    dend_26 { pt3dadd( 3.4693, 25.7472, -5.7965, 0.37 ) }
    dend_26 { pt3dadd( 3.68642, 26.2138, -6.68166, 0.37 ) }
    dend_26 { pt3dadd( 4.62129, 28.0834, -10.3392, 0.88 ) }
    dend_26 { pt3dadd( 4.86651, 28.4704, -11.2203, 1.25 ) }
    dend_26 { pt3dadd( 5.08262, 28.7586, -11.9548, 0.74 ) }
    dend_26 { pt3dadd( 5.52049, 29.4127, -13.6009, 0.44 ) }
    dend_26 { pt3dadd( 5.8626, 29.9456, -14.9704, 2.14 ) }
    dend_26 { pt3dadd( 6.15803, 30.3927, -16.145, 2.28 ) }
    dend_26 { pt3dadd( 7.04245, 31.4995, -19.1975, 0.59 ) }
    dend_26 { pt3dadd( 7.4835, 31.9494, -20.7203, 1.03 ) }
    dend_26 { pt3dadd( 8.12944, 32.5358, -23.4282, 1.18 ) }
    dend_26 { pt3dadd( 8.48897, 32.8701, -25.3414, 1.4 ) }
    dend_26 { pt3dadd( 8.71462, 33.0933, -26.7557, 1.62 ) }
    dend_26 { pt3dadd( 9.02062, 33.422, -28.9325, 1.84 ) }
    dend_26 { pt3dadd( 9.32274, 33.8195, -31.7153, 3.17 ) }
    dend_26 { pt3dadd( 10.1247, 35.0546, -40.8019, 1.4 ) }
    dend_26 { pt3dadd( 10.4829, 35.8418, -46.2419, 1.03 ) }
    dend_26 { pt3dadd( 10.6179, 36.3245, -49.1854, 2.14 ) }
    dend_26 { pt3dadd( 10.7642, 37.2522, -54.084, 1.77 ) }
    dend_26 { pt3dadd( 10.8476, 38.7511, -60.9859, 1.33 ) }
    dend_26 { pt3dadd( 10.8447, 39.0114, -62.05, 1.55 ) }
    dend_26 { pt3dadd( 10.5979, 40.9951, -68.7067, 0.22 ) }
    dend_26 { pt3dadd( 10.5244, 41.3386, -69.687, 0.22 ) }
    dend_26 { pt3dadd( 10.266, 42.2556, -71.9223, 1.4 ) }
    dend_26 { pt3dadd( 10.131, 42.6953, -72.7832, 2.14 ) }
    dend_26 { pt3dadd( 9.99929, 43.1254, -73.4568, 2.14 ) }
    dend_26 { pt3dadd( 8.11883, 48.3594, -82.8748, 0.22 ) }
    dend_26 { pt3dadd( 7.75941, 49.343, -84.4932, 0.22 ) }
    dend_26 { pt3dadd( 7.29763, 50.6432, -86.5363, 1.4 ) }
    dend_26 { pt3dadd( 7.14444, 51.086, -87.2033, 1.99 ) }
    dend_26 { pt3dadd( 6.94486, 51.6436, -88.1991, 1.99 ) }
    dend_26 { pt3dadd( 4.70924, 58.7217, -100.021, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( 4.18443, 60.6499, -102.93, 0.22 ) }
    dend_26 { pt3dadd( 4.00443, 61.3398, -103.978, 1.18 ) }
    dend_26 { pt3dadd( 3.79372, 62.1086, -105.257, 1.47 ) }
    dend_26 { pt3dadd( 1.53828, 70.5432, -119.54, 0.22 ) }
    dend_26 { pt3dadd( 0.88263, 73.1232, -123.822, 0.22 ) }
    dend_26 { pt3dadd( 0.585804, 74.3584, -125.816, 2.06 ) }
    dend_26 { pt3dadd( 0.372762, 75.1999, -127.315, 2.14 ) }
    dend_26 { pt3dadd( -0.852025, 79.9828, -136.18, 0.22 ) }
    dend_26 { pt3dadd( -1.05522, 80.7711, -137.659, 1.33 ) }
    dend_26 { pt3dadd( -1.28395, 81.7761, -139.125, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 2.43053, 23.8022, -1.51866, 0.66 ) }
    dend_21 { pt3dadd( 2.5009, 24.7908, -1.6958, 0.66 ) }
    dend_21 { pt3dadd( 2.49566, 25.5797, -1.89173, 0.66 ) }
    dend_21 { pt3dadd( 2.41523, 26.4941, -2.13721, 0.52 ) }
    dend_21 { pt3dadd( 2.25638, 27.2602, -2.35307, 0.44 ) }
    dend_21 { pt3dadd( 1.87664, 28.6721, -2.76014, 1.03 ) }
    dend_21 { pt3dadd( 1.75207, 29.1001, -2.88212, 1.25 ) }
    dend_21 { pt3dadd( 1.60199, 29.5288, -3.01934, 1.4 ) }
    dend_21 { pt3dadd( 1.40155, 30.0385, -3.18883, 1.4 ) }
    dend_21 { pt3dadd( 1.00069, 31.0428, -3.52309, 0.59 ) }
    dend_21 { pt3dadd( 0.81165, 31.6436, -3.68604, 0.37 ) }
    dend_21 { pt3dadd( 0.75448, 32.0127, -3.74429, 0.37 ) }
    dend_21 { pt3dadd( 0.7434, 32.7126, -3.86277, 0.81 ) }
    dend_21 { pt3dadd( 0.77546, 33.0632, -3.92102, 0.88 ) }
    dend_21 { pt3dadd( 0.84842, 33.4943, -3.98826, 0.66 ) }
    dend_21 { pt3dadd( 0.95006, 33.9761, -4.04854, 0.29 ) }
    dend_21 { pt3dadd( 1.0507, 34.4526, -4.1058, 0.29 ) }
    dend_21 { pt3dadd( 1.30531, 35.7767, -4.26981, 1.84 ) }
    dend_21 { pt3dadd( 1.4125, 36.4514, -4.3544, 2.95 ) }
    dend_21 { pt3dadd( 1.46078, 36.8596, -4.40343, 3.24 ) }
    dend_21 { pt3dadd( 1.48903, 37.2691, -4.44889, 3.39 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 31/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 14.6549, 0.719438, -4.72487, 1.03 ) }
    dend_17 { pt3dadd( 15.7908, -1.22352, -5.47725, 1.03 ) }
    dend_17 { pt3dadd( 16.2987, -2.19027, -5.89961, 0.66 ) }
    dend_17 { pt3dadd( 16.6553, -2.93307, -6.26533, 0.59 ) }
    dend_17 { pt3dadd( 17.0454, -3.85316, -6.73166, 0.66 ) }
    dend_17 { pt3dadd( 17.242, -4.37849, -6.99643, 0.66 ) }
    dend_17 { pt3dadd( 17.6119, -5.47911, -7.54151, 1.47 ) }
    dend_17 { pt3dadd( 17.7574, -6.07443, -7.86296, 1.92 ) }
    dend_17 { pt3dadd( 17.8526, -6.59121, -8.09494, 2.14 ) }
    dend_17 { pt3dadd( 17.9382, -7.21537, -8.33827, 1.99 ) }
    dend_17 { pt3dadd( 18.0602, -8.14863, -8.61866, 1.55 ) }
    dend_17 { pt3dadd( 18.2593, -9.35164, -8.84878, 0.74 ) }
    dend_17 { pt3dadd( 18.428, -10.1887, -8.91734, 0.52 ) }
    dend_17 { pt3dadd( 18.7189, -11.3811, -8.9316, 0.74 ) }
    dend_17 { pt3dadd( 18.948, -12.1454, -8.87587, 0.74 ) }
    dend_17 { pt3dadd( 19.2467, -12.9777, -8.76826, 0.66 ) }
    dend_17 { pt3dadd( 19.5245, -13.6619, -8.62206, 1.11 ) }
    dend_17 { pt3dadd( 19.7587, -14.1925, -8.47611, 1.62 ) }
    dend_17 { pt3dadd( 20.0125, -14.7387, -8.32305, 1.62 ) }
    dend_17 { pt3dadd( 20.6099, -15.9883, -8.01808, 0.81 ) }
    dend_17 { pt3dadd( 21.0644, -16.9015, -7.80445, 0.59 ) }
    dend_17 { pt3dadd( 21.6078, -17.9879, -7.5743, 0.44 ) }
    dend_17 { pt3dadd( 21.9275, -18.6403, -7.49676, 0.44 ) }
    dend_17 { pt3dadd( 22.3985, -19.6031, -7.45308, 2.06 ) }
    dend_17 { pt3dadd( 22.7382, -20.2949, -7.47257, 3.02 ) }
    dend_17 { pt3dadd( 22.9606, -20.7327, -7.52142, 3.61 ) }
    dend_17 { pt3dadd( 23.2736, -21.3242, -7.63055, 3.46 ) }
    dend_17 { pt3dadd( 24.328, -23.2361, -8.11352, 0.88 ) }
    dend_17 { pt3dadd( 24.7201, -23.9351, -8.30606, 0.66 ) }
    dend_17 { pt3dadd( 25.134, -24.657, -8.50819, 0.88 ) }
    dend_17 { pt3dadd( 25.475, -25.2539, -8.66908, 0.88 ) }
    dend_17 { pt3dadd( 25.9538, -26.0739, -8.88374, 0.29 ) }
    dend_17 { pt3dadd( 26.2402, -26.5509, -9.00078, 0.29 ) }
    dend_17 { pt3dadd( 26.695, -27.3119, -9.15131, 1.47 ) }
    dend_17 { pt3dadd( 27.1061, -28.0397, -9.29179, 1.99 ) }
    dend_17 { pt3dadd( 27.5034, -28.7868, -9.42751, 1.77 ) }
    dend_17 { pt3dadd( 28.1107, -30.0091, -9.62271, 0.22 ) }
    dend_17 { pt3dadd( 28.3653, -30.5426, -9.69289, 0.22 ) }
    dend_17 { pt3dadd( 28.5947, -31.0182, -9.75848, 0.44 ) }
    dend_17 { pt3dadd( 29.0846, -32.0002, -9.90289, 0.81 ) }
    dend_17 { pt3dadd( 29.2485, -32.3183, -9.94951, 1.11 ) }
    dend_17 { pt3dadd( 29.5852, -32.9408, -10.0377, 0.81 ) }
    dend_17 { pt3dadd( 29.9457, -33.5797, -10.1286, 0.44 ) }
    dend_17 { pt3dadd( 30.4141, -34.4052, -10.3286, 0.29 ) }
    dend_17 { pt3dadd( 30.9399, -35.3323, -10.6371, 1.84 ) }
    dend_17 { pt3dadd( 31.3043, -35.9359, -10.8988, 3.02 ) }
    dend_17 { pt3dadd( 31.5333, -36.3053, -11.0782, 3.61 ) }
    dend_17 { pt3dadd( 31.8429, -36.8053, -11.338, 3.39 ) }
    dend_17 { pt3dadd( 33.0143, -38.7302, -12.4034, 0.22 ) }
    dend_17 { pt3dadd( 33.9139, -40.269, -13.302, 0.22 ) }
    dend_17 { pt3dadd( 34.5574, -41.3854, -14.0006, 1.69 ) }
    dend_17 { pt3dadd( 34.7409, -41.709, -14.2133, 1.69 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 83/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 14.6549, 0.719438, -4.72487, 4.79 ) }
    dend_1 { pt3dadd( 17.0034, 0.83955, -4.71978, 4.79 ) }
    dend_1 { pt3dadd( 17.7054, 0.875454, -4.71826, 4.42 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 86/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 42.4872, 8.45908, -2.44705, 0.242682 ) }
    axon_1 { pt3dadd( 57.119, 11.7622, -2.44705, 0.242682 ) }
    axon_1 { pt3dadd( 71.7508, 15.0653, -2.44705, 0.242682 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 0.28795, 11.649, 18.4621, 0.22 ) }
    dend_46 { pt3dadd( 0.302455, 12.468, 19.4507, 0.22 ) }
    dend_46 { pt3dadd( 0.32382, 13.0174, 20.1129, 1.33 ) }
    dend_46 { pt3dadd( 0.336438, 13.2498, 20.3801, 1.62 ) }
    dend_46 { pt3dadd( 0.371939, 13.6004, 20.7423, 1.62 ) }
    dend_46 { pt3dadd( 0.555088, 14.7985, 21.8507, 0.81 ) }
    dend_46 { pt3dadd( 0.683832, 15.5211, 22.459, 0.96 ) }
    dend_46 { pt3dadd( 0.78481, 15.9523, 22.7903, 1.03 ) }
    dend_46 { pt3dadd( 0.90039, 16.3967, 23.0848, 1.03 ) }
    dend_46 { pt3dadd( 1.12638, 17.241, 23.5317, 0.22 ) }
    dend_46 { pt3dadd( 1.2959, 17.9094, 23.7737, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_46 { pt3dadd( 1.38349, 18.2954, 23.8375, 0.74 ) }
    dend_46 { pt3dadd( 1.42387, 18.4961, 23.8529, 0.74 ) }
    dend_46 { pt3dadd( 1.53678, 19.1747, 23.8852, 0.37 ) }
    dend_46 { pt3dadd( 1.57136, 19.441, 23.8933, 0.37 ) }
    dend_46 { pt3dadd( 1.59381, 19.8429, 23.9026, 0.66 ) }
    dend_46 { pt3dadd( 1.59801, 20.3061, 23.9116, 0.66 ) }
    dend_46 { pt3dadd( 1.60894, 20.963, 23.9209, 0.37 ) }
    dend_46 { pt3dadd( 1.62237, 21.4219, 23.9219, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 8/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 0.28795, 11.649, 18.4621, 0.22 ) }
    dend_45 { pt3dadd( -0.610288, 11.079, 18.7379, 0.22 ) }
    dend_45 { pt3dadd( -0.976538, 10.7845, 18.7741, 0.22 ) }
    dend_45 { pt3dadd( -1.12085, 10.6685, 18.7884, 0.52 ) }
    dend_45 { pt3dadd( -1.4165, 10.4307, 18.8176, 0.52 ) }
    dend_45 { pt3dadd( -1.75124, 10.1615, 18.8507, 0.22 ) }
    dend_45 { pt3dadd( -2.54394, 9.52405, 18.929, 1.92 ) }
    dend_45 { pt3dadd( -2.83029, 9.25743, 18.8303, 2.5 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 16/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -26.8041, -6.98851, -9.9123, 1.18 ) }
    dend_42 { pt3dadd( -27.7654, -6.35904, -10.1431, 1.18 ) }
    dend_42 { pt3dadd( -28.9163, -5.7423, -10.4612, 0.22 ) }
    dend_42 { pt3dadd( -29.3955, -5.50752, -10.6051, 0.22 ) }
    dend_42 { pt3dadd( -29.8508, -5.2929, -10.7751, 0.44 ) }
    dend_42 { pt3dadd( -30.2676, -5.10025, -10.9379, 0.44 ) }
    dend_42 { pt3dadd( -31.1547, -4.69741, -11.2982, 0.22 ) }
    dend_42 { pt3dadd( -32.0913, -4.32558, -11.7327, 0.22 ) }
    dend_42 { pt3dadd( -32.8392, -4.04295, -12.1211, 0.22 ) }
    dend_42 { pt3dadd( -33.7656, -3.68637, -12.6132, 1.33 ) }
    dend_42 { pt3dadd( -34.4877, -3.39716, -13.0015, 1.55 ) }
    dend_42 { pt3dadd( -34.6658, -3.32617, -13.0966, 1.55 ) }
    dend_42 { pt3dadd( -36.0355, -2.76806, -13.8332, 0.22 ) }
    dend_42 { pt3dadd( -37.4004, -2.21435, -14.5421, 0.22 ) }
    dend_42 { pt3dadd( -38.0275, -1.97059, -14.8437, 1.33 ) }
    dend_42 { pt3dadd( -38.3996, -1.82847, -15.0054, 1.62 ) }
    dend_42 { pt3dadd( -39.4193, -1.4429, -15.4661, 0.22 ) }
    dend_42 { pt3dadd( -39.9442, -1.24745, -15.7193, 0.44 ) }
    dend_42 { pt3dadd( -40.3246, -1.12698, -15.9394, 0.37 ) }
    dend_42 { pt3dadd( -40.7803, -0.994161, -16.233, 0.22 ) }
    dend_42 { pt3dadd( -41.5345, -0.771699, -16.7679, 1.69 ) }
    dend_42 { pt3dadd( -42.2145, -0.571173, -17.254, 2.14 ) }
    dend_42 { pt3dadd( -43.0063, -0.31722, -17.8035, 2.28 ) }
    dend_42 { pt3dadd( -44.3472, 0.126358, -18.7395, 0.66 ) }
    dend_42 { pt3dadd( -44.9929, 0.350818, -19.2037, 0.22 ) }
    dend_42 { pt3dadd( -45.6305, 0.589341, -19.6741, 0.22 ) }
    dend_42 { pt3dadd( -46.3274, 0.873009, -20.1883, 0.22 ) }
    dend_42 { pt3dadd( -47.1485, 1.25069, -20.7217, 1.47 ) }
    dend_42 { pt3dadd( -47.7235, 1.55486, -21.1037, 1.77 ) }
    dend_42 { pt3dadd( -48.306, 1.90716, -21.5313, 1.55 ) }
    dend_42 { pt3dadd( -49.4263, 2.57951, -22.4268, 0.22 ) }
    dend_42 { pt3dadd( -49.8615, 2.8453, -22.781, 0.22 ) }
    dend_42 { pt3dadd( -50.6753, 3.35705, -23.4693, 1.55 ) }
    dend_42 { pt3dadd( -51.8069, 4.03496, -24.4269, 2.06 ) }
    dend_42 { pt3dadd( -52.3289, 4.34496, -24.8159, 1.47 ) }
    dend_42 { pt3dadd( -53.1494, 4.82783, -25.3466, 0.22 ) }
    dend_42 { pt3dadd( -53.7383, 5.17725, -25.7014, 0.88 ) }
    dend_42 { pt3dadd( -54.1002, 5.38135, -25.9066, 1.18 ) }
    dend_42 { pt3dadd( -55.4499, 6.09786, -26.6717, 0.22 ) }
    dend_42 { pt3dadd( -56.6843, 6.68814, -27.3424, 0.22 ) }
    dend_42 { pt3dadd( -57.5207, 7.05449, -27.8323, 0.59 ) }
    dend_42 { pt3dadd( -57.8065, 7.17268, -28.0186, 0.59 ) }
    dend_42 { pt3dadd( -58.8495, 7.55931, -28.7282, 1.4 ) }
    dend_42 { pt3dadd( -59.4601, 7.76783, -29.1439, 1.62 ) }
    dend_42 { pt3dadd( -60.8486, 8.17038, -30.0914, 0.22 ) }
    dend_42 { pt3dadd( -61.5111, 8.33261, -30.5775, 0.59 ) }
    dend_42 { pt3dadd( -61.8525, 8.40958, -30.8361, 0.74 ) }
    dend_42 { pt3dadd( -62.6925, 8.60157, -31.4633, 0.22 ) }
    dend_42 { pt3dadd( -63.3766, 8.78017, -31.9748, 1.62 ) }
    dend_42 { pt3dadd( -63.8206, 8.90854, -32.2682, 1.84 ) }
    dend_42 { pt3dadd( -64.3294, 9.09377, -32.5321, 1.84 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 67/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -26.8041, -6.98851, -9.9123, 3.76 ) }
    dend_41 { pt3dadd( -27.4839, -7.22113, -10.8693, 3.76 ) }
    dend_41 { pt3dadd( -28.9252, -7.69463, -12.5708, 2.8 ) }
    dend_41 { pt3dadd( -30.4621, -8.16731, -14.1855, 2.06 ) }
    dend_41 { pt3dadd( -31.9052, -8.59439, -15.5803, 1.25 ) }
    dend_41 { pt3dadd( -32.5411, -8.77509, -16.13, 0.96 ) }
    dend_41 { pt3dadd( -33.6711, -9.08547, -17.0472, 0.22 ) }
    dend_41 { pt3dadd( -34.5909, -9.30219, -17.64, 1.33 ) }
    dend_41 { pt3dadd( -35.4916, -9.4756, -18.0974, 1.84 ) }
    dend_41 { pt3dadd( -36.2386, -9.59239, -18.4237, 1.92 ) }
    dend_41 { pt3dadd( -37.3936, -9.73667, -18.9482, 0.22 ) }
    dend_41 { pt3dadd( -38.5993, -9.85689, -19.6593, 0.22 ) }
    dend_41 { pt3dadd( -39.5648, -9.95539, -20.3361, 1.11 ) }
    dend_41 { pt3dadd( -40.3268, -10.1047, -20.9083, 1.55 ) }
    dend_41 { pt3dadd( -41.0945, -10.328, -21.4557, 1.84 ) }
    dend_41 { pt3dadd( -41.9161, -10.5666, -21.999, 1.69 ) }
    dend_41 { pt3dadd( -43.5971, -11.0429, -23.0966, 0.22 ) }
    dend_41 { pt3dadd( -44.9101, -11.4232, -23.8013, 0.22 ) }
    dend_41 { pt3dadd( -46.7572, -11.9668, -24.6151, 0.22 ) }
    dend_41 { pt3dadd( -48.4444, -12.4605, -25.1157, 0.66 ) }
    dend_41 { pt3dadd( -50.3245, -12.9646, -25.4351, 2.21 ) }
    dend_41 { pt3dadd( -51.4575, -13.2428, -25.5232, 2.65 ) }
    dend_41 { pt3dadd( -53.4142, -13.6531, -25.5195, 1.47 ) }
    dend_41 { pt3dadd( -54.3839, -13.8337, -25.5344, 0.22 ) }
    dend_41 { pt3dadd( -56.6318, -14.1845, -25.6854, 0.22 ) }
    dend_41 { pt3dadd( -58.4486, -14.5214, -25.8943, 1.84 ) }
    dend_41 { pt3dadd( -58.8531, -14.6136, -25.9551, 2.43 ) }
    dend_41 { pt3dadd( -59.6903, -14.8128, -26.1135, 1.77 ) }
    dend_41 { pt3dadd( -61.8125, -15.3112, -26.6806, 0.22 ) }
    dend_41 { pt3dadd( -63.1843, -15.6497, -27.0995, 0.22 ) }
    dend_41 { pt3dadd( -64.5433, -15.9841, -27.5644, 0.66 ) }
    dend_41 { pt3dadd( -65.0007, -16.1004, -27.7354, 0.66 ) }
    dend_41 { pt3dadd( -66.1525, -16.398, -28.2803, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -67.5285, -16.81, -29.012, 2.06 ) }
    dend_41 { pt3dadd( -68.2212, -17.0459, -29.3562, 2.73 ) }
    dend_41 { pt3dadd( -68.7321, -17.2308, -29.608, 3.09 ) }
    dend_41 { pt3dadd( -69.6452, -17.5682, -30.0754, 2.87 ) }
    dend_41 { pt3dadd( -73.0427, -18.8173, -31.9025, 0.29 ) }
    dend_41 { pt3dadd( -75.1367, -19.5683, -33.0045, 0.22 ) }
    dend_41 { pt3dadd( -78.1659, -20.6269, -34.5521, 0.22 ) }
    dend_41 { pt3dadd( -79.4163, -21.048, -35.1146, 2.14 ) }
    dend_41 { pt3dadd( -80.033, -21.2526, -35.3598, 2.65 ) }
    dend_41 { pt3dadd( -81.1164, -21.6027, -35.7339, 2.65 ) }
    dend_41 { pt3dadd( -83.6233, -22.3509, -36.4212, 0.22 ) }
    dend_41 { pt3dadd( -84.9656, -22.701, -36.8019, 0.22 ) }
    dend_41 { pt3dadd( -86.5136, -23.084, -37.2708, 1.11 ) }
    dend_41 { pt3dadd( -86.9994, -23.2083, -37.437, 1.47 ) }
    dend_41 { pt3dadd( -88.0433, -23.4696, -37.844, 1.47 ) }
    dend_41 { pt3dadd( -89.9239, -23.9064, -38.7108, 0.15 ) }
    dend_41 { pt3dadd( -90.4269, -24.0115, -39.0136, 0.44 ) }
    dend_41 { pt3dadd( -90.7658, -24.0723, -39.2647, 0.66 ) }
    dend_41 { pt3dadd( -92.7603, -24.4079, -40.8072, 0.29 ) }
    dend_41 { pt3dadd( -94.2274, -24.6364, -41.8635, 1.92 ) }
    dend_41 { pt3dadd( -95.0252, -24.7427, -42.4159, 2.73 ) }
    dend_41 { pt3dadd( -95.7491, -24.8379, -42.9116, 2.87 ) }
    dend_41 { pt3dadd( -98.9819, -25.2801, -44.9806, 0.22 ) }
    dend_41 { pt3dadd( -101.098, -25.6008, -46.1313, 0.22 ) }
    dend_41 { pt3dadd( -102.519, -25.841, -46.7439, 1.69 ) }
    dend_41 { pt3dadd( -103.383, -26.0052, -47.045, 2.14 ) }
    dend_41 { pt3dadd( -104.236, -26.1923, -47.2732, 1.92 ) }
    dend_41 { pt3dadd( -105.227, -26.4454, -47.4392, 1.33 ) }
    dend_41 { pt3dadd( -107.739, -27.1905, -47.5478, 0.22 ) }
    dend_41 { pt3dadd( -108.691, -27.5043, -47.5667, 0.96 ) }
    dend_41 { pt3dadd( -109.35, -27.7467, -47.5837, 1.25 ) }
    dend_41 { pt3dadd( -110.019, -28.0067, -47.5814, 1.11 ) }
    dend_41 { pt3dadd( -111.886, -28.7578, -47.5159, 0.22 ) }
    dend_41 { pt3dadd( -113.007, -29.2233, -47.576, 1.92 ) }
    dend_41 { pt3dadd( -113.808, -29.5594, -47.6985, 2.06 ) }
    dend_41 { pt3dadd( -114.632, -29.8931, -47.9011, 1.84 ) }
    dend_41 { pt3dadd( -116.121, -30.4944, -48.3678, 0.37 ) }
    dend_41 { pt3dadd( -117.195, -30.945, -48.7883, 0.22 ) }
    dend_41 { pt3dadd( -120.061, -32.203, -50.1629, 1.11 ) }
    dend_41 { pt3dadd( -120.749, -32.5206, -50.5376, 1.11 ) }
    dend_41 { pt3dadd( -122.387, -33.2807, -51.5171, 0.22 ) }
    dend_41 { pt3dadd( -123.916, -33.9823, -52.502, 0.22 ) }
    dend_41 { pt3dadd( -125.399, -34.6548, -53.5019, 1.69 ) }
    dend_41 { pt3dadd( -126.085, -34.9594, -53.955, 2.14 ) }
    dend_41 { pt3dadd( -126.638, -35.2058, -54.3033, 2.14 ) }
    dend_41 { pt3dadd( -128.295, -35.9025, -55.3985, 0.22 ) }
    dend_41 { pt3dadd( -130.208, -36.6607, -56.7134, 0.22 ) }
    dend_41 { pt3dadd( -131.145, -36.9996, -57.3528, 1.99 ) }
    dend_41 { pt3dadd( -131.57, -37.1413, -57.6245, 2.58 ) }
    dend_41 { pt3dadd( -133.114, -37.6299, -58.5695, 1.99 ) }
    dend_41 { pt3dadd( -135.446, -38.23, -59.6448, 0.22 ) }
    dend_41 { pt3dadd( -136.216, -38.4019, -59.917, 1.47 ) }
    dend_41 { pt3dadd( -136.729, -38.5049, -60.0784, 1.69 ) }
    dend_41 { pt3dadd( -137.536, -38.6556, -60.3216, 1.69 ) }
    dend_41 { pt3dadd( -140.804, -39.2186, -61.2174, 0.22 ) }
    dend_41 { pt3dadd( -146.806, -40.1783, -62.6904, 0.22 ) }
    dend_41 { pt3dadd( -149.17, -40.5231, -63.2584, 1.84 ) }
    dend_41 { pt3dadd( -150.047, -40.6515, -63.4765, 2.14 ) }
    dend_41 { pt3dadd( -150.67, -40.7427, -63.6304, 2.14 ) }
    dend_41 { pt3dadd( -153.144, -41.1189, -64.2049, 0.22 ) }
    dend_41 { pt3dadd( -153.922, -41.2378, -64.3811, 0.96 ) }
    dend_41 { pt3dadd( -154.669, -41.353, -64.6015, 1.11 ) }
    dend_41 { pt3dadd( -157.874, -41.7976, -65.5441, 0.22 ) }
    dend_41 { pt3dadd( -159.3, -41.9785, -65.9019, 0.22 ) }
    dend_41 { pt3dadd( -160.559, -42.1238, -66.1853, 1.69 ) }
    dend_41 { pt3dadd( -161.566, -42.2351, -66.3768, 2.21 ) }
    dend_41 { pt3dadd( -162.755, -42.3678, -66.5461, 2.28 ) }
    dend_41 { pt3dadd( -164.883, -42.623, -66.7111, 0.29 ) }
    dend_41 { pt3dadd( -165.887, -42.7511, -66.7305, 1.18 ) }
    dend_41 { pt3dadd( -166.667, -42.8704, -66.7401, 1.33 ) }
    dend_41 { pt3dadd( -169.41, -43.3471, -66.9093, 0.22 ) }
    dend_41 { pt3dadd( -171.716, -43.826, -67.1161, 0.22 ) }
    dend_41 { pt3dadd( -173.235, -44.1833, -67.2928, 1.62 ) }
    dend_41 { pt3dadd( -173.8, -44.3312, -67.384, 2.14 ) }
    dend_41 { pt3dadd( -174.486, -44.5232, -67.5211, 2.14 ) }
    dend_41 { pt3dadd( -177.252, -45.3275, -68.1259, 0.22 ) }
    dend_41 { pt3dadd( -178.248, -45.6256, -68.3733, 0.22 ) }
    dend_41 { pt3dadd( -179.145, -45.8981, -68.6315, 1.25 ) }
    dend_41 { pt3dadd( -179.998, -46.1447, -68.8788, 1.4 ) }
    dend_41 { pt3dadd( -181.407, -46.5225, -69.2639, 0.22 ) }
    dend_41 { pt3dadd( -182.147, -46.6928, -69.4526, 0.81 ) }
    dend_41 { pt3dadd( -182.706, -46.7935, -69.6151, 0.81 ) }
    dend_41 { pt3dadd( -184.539, -47.0492, -70.3243, 0.22 ) }
    dend_41 { pt3dadd( -185.432, -47.1515, -70.7272, 1.62 ) }
    dend_41 { pt3dadd( -186.224, -47.222, -71.1097, 1.99 ) }
    dend_41 { pt3dadd( -186.806, -47.257, -71.4117, 1.99 ) }
    dend_41 { pt3dadd( -189.729, -47.3931, -72.9299, 0.22 ) }
    dend_41 { pt3dadd( -190.873, -47.4273, -73.4968, 0.22 ) }
    dend_41 { pt3dadd( -191.675, -47.4245, -73.8651, 1.03 ) }
    dend_41 { pt3dadd( -192.209, -47.4169, -74.0992, 1.03 ) }
    dend_41 { pt3dadd( -194.613, -47.3729, -75.0382, 0.22 ) }
    dend_41 { pt3dadd( -195.184, -47.3567, -75.2245, 0.22 ) }
    dend_41 { pt3dadd( -196.117, -47.3055, -75.4919, 0.81 ) }
    dend_41 { pt3dadd( -196.845, -47.2564, -75.7117, 1.11 ) }
    dend_41 { pt3dadd( -198.573, -47.1487, -76.3258, 0.22 ) }
    dend_41 { pt3dadd( -199.479, -47.1006, -76.6602, 0.22 ) }
    dend_41 { pt3dadd( -201.512, -47.0177, -77.4028, 0.22 ) }
    dend_41 { pt3dadd( -203.035, -46.9704, -77.9774, 2.28 ) }
    dend_41 { pt3dadd( -203.796, -46.9627, -78.2931, 2.73 ) }
    dend_41 { pt3dadd( -205.808, -46.9893, -79.1995, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_41 { pt3dadd( -207.577, -47.0323, -80.0318, 0.22 ) }
    dend_41 { pt3dadd( -208.26, -47.073, -80.4104, 0.66 ) }
    dend_41 { pt3dadd( -208.684, -47.1094, -80.6703, 0.66 ) }
    dend_41 { pt3dadd( -210.118, -47.2632, -81.5192, 0.22 ) }
    dend_41 { pt3dadd( -210.878, -47.3676, -81.9858, 1.25 ) }
    dend_41 { pt3dadd( -211.607, -47.4958, -82.4848, 1.47 ) }
    dend_41 { pt3dadd( -213.776, -47.984, -84.2286, 0.22 ) }
    dend_41 { pt3dadd( -214.573, -48.1809, -84.8701, 0.74 ) }
    dend_41 { pt3dadd( -215.351, -48.384, -85.5027, 1.03 ) }
    dend_41 { pt3dadd( -216.282, -48.6461, -86.2838, 1.25 ) }
    dend_41 { pt3dadd( -218.433, -49.276, -88.0168, 0.22 ) }
    dend_41 { pt3dadd( -220.167, -49.7667, -89.3074, 0.22 ) }
    dend_41 { pt3dadd( -221.362, -50.0945, -90.1339, 1.55 ) }
    dend_41 { pt3dadd( -222.408, -50.3607, -90.8404, 1.84 ) }
    dend_41 { pt3dadd( -224.527, -50.774, -92.2954, 0.22 ) }
    dend_41 { pt3dadd( -226.644, -51.0692, -93.7032, 0.22 ) }
    dend_41 { pt3dadd( -228.14, -51.1993, -94.643, 1.69 ) }
    dend_41 { pt3dadd( -228.76, -51.2191, -95.0166, 2.14 ) }
    dend_41 { pt3dadd( -229.458, -51.1927, -95.4519, 2.14 ) }
    dend_41 { pt3dadd( -232.776, -50.8525, -97.5188, 0.22 ) }
    dend_41 { pt3dadd( -233.767, -50.6842, -98.1474, 0.22 ) }
    dend_41 { pt3dadd( -234.199, -50.5914, -98.4538, 0.81 ) }
    dend_41 { pt3dadd( -234.542, -50.5299, -98.6742, 0.96 ) }
    dend_41 { pt3dadd( -237.143, -50.1153, -100.107, 0.22 ) }
    dend_41 { pt3dadd( -238.29, -49.9537, -100.654, 1.33 ) }
    dend_41 { pt3dadd( -238.844, -49.8918, -100.849, 1.69 ) }
    dend_41 { pt3dadd( -239.628, -49.8223, -101.094, 1.69 ) }
    dend_41 { pt3dadd( -243.837, -49.5726, -102.255, 0.22 ) }
    dend_41 { pt3dadd( -244.596, -49.5503, -102.422, 0.66 ) }
    dend_41 { pt3dadd( -245.179, -49.5527, -102.512, 0.66 ) }
    dend_41 { pt3dadd( -248.088, -49.5947, -102.891, 0.22 ) }
    dend_41 { pt3dadd( -248.689, -49.5994, -102.986, 0.96 ) }
    dend_41 { pt3dadd( -249.554, -49.5871, -103.147, 1.25 ) }
    dend_41 { pt3dadd( -251.448, -49.4987, -103.599, 0.22 ) }
    dend_41 { pt3dadd( -252.145, -49.4505, -103.814, 0.52 ) }
    dend_41 { pt3dadd( -252.557, -49.4043, -103.966, 0.74 ) }
    dend_41 { pt3dadd( -254.652, -49.1439, -104.765, 0.22 ) }
    dend_41 { pt3dadd( -255.889, -49.0088, -105.206, 1.69 ) }
    dend_41 { pt3dadd( -256.225, -48.9743, -105.323, 2.21 ) }
    dend_41 { pt3dadd( -257.215, -48.8984, -105.649, 2.21 ) }
    dend_41 { pt3dadd( -261.392, -48.7035, -106.893, 0.22 ) }
    dend_41 { pt3dadd( -264.046, -48.6249, -107.604, 0.22 ) }
    dend_41 { pt3dadd( -265.109, -48.6254, -107.844, 0.59 ) }
    dend_41 { pt3dadd( -265.44, -48.6343, -107.915, 0.59 ) }
    dend_41 { pt3dadd( -267.379, -48.7274, -108.303, 0.22 ) }
    dend_41 { pt3dadd( -268.195, -48.7965, -108.438, 0.96 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 46/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -34.6724, -11.0289, 3.33765, 0.59 ) }
    dend_37 { pt3dadd( -35.0624, -11.9717, 3.43629, 0.59 ) }
    dend_37 { pt3dadd( -35.4066, -12.6338, 3.41566, 0.37 ) }
    dend_37 { pt3dadd( -35.6346, -13.0036, 3.36956, 0.29 ) }
    dend_37 { pt3dadd( -35.8237, -13.2732, 3.31415, 0.29 ) }
    dend_37 { pt3dadd( -36.1097, -13.6449, 3.22172, 0.52 ) }
    dend_37 { pt3dadd( -36.5449, -14.1631, 3.08262, 0.66 ) }
    dend_37 { pt3dadd( -36.9001, -14.5117, 2.92859, 0.66 ) }
    dend_37 { pt3dadd( -37.2626, -14.8347, 2.7614, 0.59 ) }
    dend_37 { pt3dadd( -37.5963, -15.1105, 2.61129, 0.66 ) }
    dend_37 { pt3dadd( -37.8983, -15.3534, 2.47819, 0.44 ) }
    dend_37 { pt3dadd( -38.3559, -15.7262, 2.28005, 0.29 ) }
    dend_37 { pt3dadd( -39.2995, -16.5264, 1.89671, 3.39 ) }
    dend_37 { pt3dadd( -39.6151, -16.7963, 1.77294, 4.13 ) }
    dend_37 { pt3dadd( -39.8906, -17.0334, 1.65959, 4.13 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -34.6724, -11.0289, 3.33765, 0.29 ) }
    dend_34 { pt3dadd( -36.9354, -9.74889, 1.95926, 0.29 ) }
    dend_34 { pt3dadd( -37.2513, -9.5615, 1.77631, 0.66 ) }
    dend_34 { pt3dadd( -38.6019, -8.75608, 0.989463, 0.44 ) }
    dend_34 { pt3dadd( -39.1052, -8.46081, 0.709168, 0.37 ) }
    dend_34 { pt3dadd( -40.2805, -7.80027, 0.0746798, 0.37 ) }
    dend_34 { pt3dadd( -41.8744, -6.97554, -0.783836, 1.03 ) }
    dend_34 { pt3dadd( -42.3722, -6.75121, -1.0254, 1.4 ) }
    dend_34 { pt3dadd( -43.1298, -6.48013, -1.38373, 1.55 ) }
    dend_34 { pt3dadd( -43.7644, -6.30463, -1.66631, 0.44 ) }
    dend_34 { pt3dadd( -44.4943, -6.14867, -2.01898, 0.22 ) }
    dend_34 { pt3dadd( -45.3743, -5.98321, -2.45525, 0.22 ) }
    dend_34 { pt3dadd( -46.3306, -5.77844, -2.90031, 0.44 ) }
    dend_34 { pt3dadd( -47.0442, -5.57371, -3.25449, 0.66 ) }
    dend_34 { pt3dadd( -47.4835, -5.41715, -3.48393, 0.88 ) }
    dend_34 { pt3dadd( -48.4031, -5.03357, -3.99699, 0.88 ) }
    dend_34 { pt3dadd( -49.8129, -4.3698, -4.77305, 2.21 ) }
    dend_34 { pt3dadd( -50.5627, -3.97745, -5.1865, 2.87 ) }
    dend_34 { pt3dadd( -51.2247, -3.61177, -5.55455, 3.09 ) }
    dend_34 { pt3dadd( -51.6092, -3.40386, -5.7895, 3.24 ) }
    dend_34 { pt3dadd( -53.3356, -2.53419, -6.9148, 0.52 ) }
    dend_34 { pt3dadd( -53.7138, -2.36525, -7.14538, 0.66 ) }
    dend_34 { pt3dadd( -54.2587, -2.14638, -7.43968, 0.66 ) }
    dend_34 { pt3dadd( -54.8801, -1.90294, -7.68862, 0.52 ) }
    dend_34 { pt3dadd( -56.7861, -1.15055, -8.18749, 0.22 ) }
    dend_34 { pt3dadd( -57.6644, -0.805986, -8.29689, 0.22 ) }
    dend_34 { pt3dadd( -59.0689, -0.203741, -8.35662, 0.81 ) }
    dend_34 { pt3dadd( -59.866, 0.137709, -8.36756, 0.22 ) }
    dend_34 { pt3dadd( -61.0163, 0.63425, -8.34712, 1.92 ) }
    dend_34 { pt3dadd( -61.5171, 0.855309, -8.33756, 2.5 ) }
    dend_34 { pt3dadd( -62.0151, 1.0807, -8.36298, 2.73 ) }
    dend_34 { pt3dadd( -64.2621, 2.1429, -8.77983, 0.29 ) }
    dend_34 { pt3dadd( -65.0765, 2.52855, -9.02096, 0.22 ) }
    dend_34 { pt3dadd( -65.9559, 2.93797, -9.33946, 1.77 ) }
    dend_34 { pt3dadd( -66.6591, 3.26126, -9.6288, 2.28 ) }
    dend_34 { pt3dadd( -68.4132, 4.0569, -10.3769, 0.22 ) }
    dend_34 { pt3dadd( -69.1951, 4.40197, -10.704, 0.22 ) }
    dend_34 { pt3dadd( -69.6571, 4.59192, -10.8932, 0.66 ) }
    dend_34 { pt3dadd( -70.1211, 4.79121, -11.0893, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -71.3406, 5.31763, -11.5871, 0.22 ) }
    dend_34 { pt3dadd( -72.1748, 5.69683, -11.8934, 1.33 ) }
    dend_34 { pt3dadd( -72.6624, 5.9503, -12.05, 2.36 ) }
    dend_34 { pt3dadd( -73.4805, 6.4213, -12.3214, 2.36 ) }
    dend_34 { pt3dadd( -75.1743, 7.48106, -12.9263, 0.22 ) }
    dend_34 { pt3dadd( -76.4833, 8.35772, -13.4793, 0.22 ) }
    dend_34 { pt3dadd( -77.5748, 9.1087, -13.9276, 0.22 ) }
    dend_34 { pt3dadd( -78.9514, 10.0512, -14.3997, 2.28 ) }
    dend_34 { pt3dadd( -79.7517, 10.5917, -14.6437, 2.8 ) }
    dend_34 { pt3dadd( -80.3747, 11.0089, -14.8123, 3.02 ) }
    dend_34 { pt3dadd( -83.0034, 12.6954, -15.4934, 0.22 ) }
    dend_34 { pt3dadd( -85.0718, 13.9648, -15.9818, 0.22 ) }
    dend_34 { pt3dadd( -86.7029, 14.8997, -16.3339, 1.84 ) }
    dend_34 { pt3dadd( -87.4468, 15.2925, -16.468, 2.65 ) }
    dend_34 { pt3dadd( -88.1949, 15.6719, -16.5761, 2.65 ) }
    dend_34 { pt3dadd( -90.5316, 16.8085, -16.8508, 0.22 ) }
    dend_34 { pt3dadd( -91.4435, 17.2374, -16.9524, 0.44 ) }
    dend_34 { pt3dadd( -91.8094, 17.4122, -17.0188, 0.44 ) }
    dend_34 { pt3dadd( -92.5341, 17.7633, -17.1617, 0.15 ) }
    dend_34 { pt3dadd( -93.512, 18.2461, -17.2888, 1.62 ) }
    dend_34 { pt3dadd( -94.174, 18.5794, -17.3441, 2.36 ) }
    dend_34 { pt3dadd( -94.9352, 18.98, -17.3857, 2.36 ) }
    dend_34 { pt3dadd( -96.5821, 19.7834, -17.5118, 0.22 ) }
    dend_34 { pt3dadd( -97.7073, 20.2904, -17.602, 0.22 ) }
    dend_34 { pt3dadd( -98.6516, 20.6834, -17.6693, 1.03 ) }
    dend_34 { pt3dadd( -99.4129, 20.969, -17.7015, 1.55 ) }
    dend_34 { pt3dadd( -100.036, 21.1682, -17.7187, 1.55 ) }
    dend_34 { pt3dadd( -101.54, 21.4917, -17.7729, 0.22 ) }
    dend_34 { pt3dadd( -102.249, 21.5738, -17.8381, 0.22 ) }
    dend_34 { pt3dadd( -102.722, 21.5991, -17.8977, 1.33 ) }
    dend_34 { pt3dadd( -103.257, 21.6105, -17.9849, 1.62 ) }
    dend_34 { pt3dadd( -103.827, 21.6186, -18.0893, 1.33 ) }
    dend_34 { pt3dadd( -106.094, 21.6613, -18.5358, 0.22 ) }
    dend_34 { pt3dadd( -107.261, 21.7061, -18.7688, 1.03 ) }
    dend_34 { pt3dadd( -107.806, 21.7313, -18.8837, 1.55 ) }
    dend_34 { pt3dadd( -108.357, 21.7623, -19.0046, 1.55 ) }
    dend_34 { pt3dadd( -109.775, 21.8458, -19.2956, 0.22 ) }
    dend_34 { pt3dadd( -110.681, 21.9006, -19.4201, 0.22 ) }
    dend_34 { pt3dadd( -111.663, 21.9575, -19.4664, 1.62 ) }
    dend_34 { pt3dadd( -112.335, 21.991, -19.4506, 2.36 ) }
    dend_34 { pt3dadd( -112.734, 22.0222, -19.4117, 2.58 ) }
    dend_34 { pt3dadd( -114.074, 22.1681, -19.1913, 0.59 ) }
    dend_34 { pt3dadd( -115.434, 22.3832, -18.9008, 0.22 ) }
    dend_34 { pt3dadd( -115.919, 22.4946, -18.7829, 0.66 ) }
    dend_34 { pt3dadd( -116.36, 22.6412, -18.6349, 0.66 ) }
    dend_34 { pt3dadd( -117.884, 23.3256, -18.0438, 0.22 ) }
    dend_34 { pt3dadd( -118.419, 23.6461, -17.8369, 0.59 ) }
    dend_34 { pt3dadd( -118.938, 24.0844, -17.775, 0.59 ) }
    dend_34 { pt3dadd( -119.575, 24.7364, -17.8744, 0.22 ) }
    dend_34 { pt3dadd( -120.653, 25.9264, -18.2035, 2.28 ) }
    dend_34 { pt3dadd( -121.202, 26.5646, -18.4422, 2.73 ) }
    dend_34 { pt3dadd( -121.795, 27.2546, -18.7837, 3.02 ) }
    dend_34 { pt3dadd( -124.177, 29.9007, -20.2419, 0.22 ) }
    dend_34 { pt3dadd( -124.71, 30.4622, -20.575, 0.22 ) }
    dend_34 { pt3dadd( -125.233, 30.9695, -20.9153, 0.96 ) }
    dend_34 { pt3dadd( -125.68, 31.3694, -21.2007, 1.25 ) }
    dend_34 { pt3dadd( -126.919, 32.4184, -21.8569, 0.22 ) }
    dend_34 { pt3dadd( -127.452, 32.8481, -22.0727, 0.81 ) }
    dend_34 { pt3dadd( -127.837, 33.1323, -22.1555, 1.11 ) }
    dend_34 { pt3dadd( -129.134, 34.0746, -22.3977, 0.22 ) }
    dend_34 { pt3dadd( -129.571, 34.3983, -22.4778, 0.59 ) }
    dend_34 { pt3dadd( -129.957, 34.6857, -22.5462, 0.59 ) }
    dend_34 { pt3dadd( -130.89, 35.3971, -22.7124, 0.22 ) }
    dend_34 { pt3dadd( -131.588, 35.9199, -22.8354, 0.52 ) }
    dend_34 { pt3dadd( -132.543, 36.6203, -22.9437, 0.22 ) }
    dend_34 { pt3dadd( -133.747, 37.4668, -22.9717, 2.14 ) }
    dend_34 { pt3dadd( -134.41, 37.9207, -22.9779, 2.8 ) }
    dend_34 { pt3dadd( -134.849, 38.2195, -22.9762, 2.8 ) }
    dend_34 { pt3dadd( -137.06, 39.7585, -22.9137, 0.22 ) }
    dend_34 { pt3dadd( -138.642, 40.8926, -22.8598, 0.22 ) }
    dend_34 { pt3dadd( -139.632, 41.6337, -22.7926, 0.96 ) }
    dend_34 { pt3dadd( -140.143, 42.0341, -22.7372, 1.33 ) }
    dend_34 { pt3dadd( -140.524, 42.3513, -22.6943, 1.33 ) }
    dend_34 { pt3dadd( -141.719, 43.3927, -22.6079, 0.22 ) }
    dend_34 { pt3dadd( -142.664, 44.2624, -22.609, 0.22 ) }
    dend_34 { pt3dadd( -143.784, 45.2976, -22.6973, 1.84 ) }
    dend_34 { pt3dadd( -144.218, 45.6962, -22.7536, 2.36 ) }
    dend_34 { pt3dadd( -144.724, 46.1491, -22.8343, 2.36 ) }
    dend_34 { pt3dadd( -146.494, 47.6607, -23.2089, 0.22 ) }
    dend_34 { pt3dadd( -147.315, 48.3355, -23.4181, 0.22 ) }
    dend_34 { pt3dadd( -148.055, 48.9317, -23.6226, 1.25 ) }
    dend_34 { pt3dadd( -148.503, 49.2864, -23.7467, 1.69 ) }
    dend_34 { pt3dadd( -149.207, 49.8421, -23.9232, 1.77 ) }
    dend_34 { pt3dadd( -151.268, 51.473, -24.3935, 0.22 ) }
    dend_34 { pt3dadd( -151.637, 51.7714, -24.479, 0.37 ) }
    dend_34 { pt3dadd( -151.931, 52.0104, -24.5407, 0.37 ) }
    dend_34 { pt3dadd( -152.84, 52.73, -24.7744, 0.22 ) }
    dend_34 { pt3dadd( -153.606, 53.3203, -24.9658, 1.33 ) }
    dend_34 { pt3dadd( -154.242, 53.7984, -25.1445, 1.62 ) }
    dend_34 { pt3dadd( -155.752, 54.9064, -25.6341, 0.22 ) }
    dend_34 { pt3dadd( -156.317, 55.3066, -25.8334, 0.52 ) }
    dend_34 { pt3dadd( -158.432, 56.7609, -26.5906, 0.22 ) }
    dend_34 { pt3dadd( -159.545, 57.4993, -26.9951, 1.47 ) }
    dend_34 { pt3dadd( -160.219, 57.9355, -27.2142, 2.28 ) }
    dend_34 { pt3dadd( -160.694, 58.2329, -27.3452, 2.8 ) }
    dend_34 { pt3dadd( -162.907, 59.5921, -27.8883, 0.22 ) }
    dend_34 { pt3dadd( -163.565, 59.984, -28.0331, 0.44 ) }
    dend_34 { pt3dadd( -164.211, 60.354, -28.1457, 0.44 ) }
    dend_34 { pt3dadd( -165.043, 60.8231, -28.3143, 0.96 ) }
    dend_34 { pt3dadd( -165.476, 61.0731, -28.3985, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -166.199, 61.4925, -28.5539, 1.4 ) }
    dend_34 { pt3dadd( -167.715, 62.376, -28.8803, 0.22 ) }
    dend_34 { pt3dadd( -168.924, 63.0413, -29.0726, 0.88 ) }
    dend_34 { pt3dadd( -169.928, 63.5638, -29.2042, 0.22 ) }
    dend_34 { pt3dadd( -171.007, 64.1012, -29.3217, 2.06 ) }
    dend_34 { pt3dadd( -171.627, 64.4042, -29.3652, 2.8 ) }
    dend_34 { pt3dadd( -172.253, 64.7034, -29.3653, 2.8 ) }
    dend_34 { pt3dadd( -175.888, 66.4336, -29.1384, 0.22 ) }
    dend_34 { pt3dadd( -176.91, 66.9253, -29.0307, 0.22 ) }
    dend_34 { pt3dadd( -177.603, 67.2698, -28.9145, 1.55 ) }
    dend_34 { pt3dadd( -178.307, 67.6349, -28.7751, 2.06 ) }
    dend_34 { pt3dadd( -180.414, 68.8035, -28.303, 0.22 ) }
    dend_34 { pt3dadd( -181.342, 69.346, -28.0936, 0.37 ) }
    dend_34 { pt3dadd( -182.043, 69.8015, -27.9315, 0.22 ) }
    dend_34 { pt3dadd( -183.563, 70.8245, -27.6025, 2.28 ) }
    dend_34 { pt3dadd( -184.32, 71.346, -27.4787, 3.02 ) }
    dend_34 { pt3dadd( -184.501, 71.4723, -27.4634, 3.02 ) }
    dend_34 { pt3dadd( -186.462, 72.8749, -27.4573, 0.22 ) }
    dend_34 { pt3dadd( -187.13, 73.3519, -27.5461, 0.22 ) }
    dend_34 { pt3dadd( -187.812, 73.8251, -27.7037, 1.03 ) }
    dend_34 { pt3dadd( -188.299, 74.1559, -27.8494, 1.03 ) }
    dend_34 { pt3dadd( -189.311, 74.8129, -28.2281, 0.22 ) }
    dend_34 { pt3dadd( -189.775, 75.1145, -28.4368, 0.66 ) }
    dend_34 { pt3dadd( -191.853, 76.4576, -29.443, 0.22 ) }
    dend_34 { pt3dadd( -192.9, 77.1233, -29.9388, 1.47 ) }
    dend_34 { pt3dadd( -193.419, 77.451, -30.1848, 1.92 ) }
    dend_34 { pt3dadd( -196.162, 79.164, -31.4516, 0.22 ) }
    dend_34 { pt3dadd( -197.492, 79.9923, -32.0777, 0.22 ) }
    dend_34 { pt3dadd( -198.326, 80.5083, -32.4719, 0.22 ) }
    dend_34 { pt3dadd( -199.418, 81.1788, -32.953, 1.92 ) }
    dend_34 { pt3dadd( -200.026, 81.5664, -33.2366, 2.21 ) }
    dend_34 { pt3dadd( -200.231, 81.7036, -33.3317, 2.21 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 32/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -34.7853, -0.78181, 12.3368, 0.29 ) }
    dend_31 { pt3dadd( -35.4346, -0.634694, 11.9382, 0.29 ) }
    dend_31 { pt3dadd( -35.8007, -0.558189, 11.6462, 0.29 ) }
    dend_31 { pt3dadd( -36.4873, -0.411755, 11.2985, 0.29 ) }
    dend_31 { pt3dadd( -37.237, -0.264314, 11.1163, 1.11 ) }
    dend_31 { pt3dadd( -38.3899, -0.0868563, 11.0054, 1.55 ) }
    dend_31 { pt3dadd( -38.8606, -0.0327768, 10.9782, 1.77 ) }
    dend_31 { pt3dadd( -39.7397, 0.063283, 10.9386, 1.47 ) }
    dend_31 { pt3dadd( -42.5547, 0.311462, 11.1693, 0.29 ) }
    dend_31 { pt3dadd( -43.1581, 0.324788, 11.3891, 0.29 ) }
    dend_31 { pt3dadd( -43.5695, 0.328177, 11.6815, 0.59 ) }
    dend_31 { pt3dadd( -43.9242, 0.326867, 12.0254, 0.59 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 44/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -34.7853, -0.78181, 12.3368, 0.44 ) }
    dend_30 { pt3dadd( -33.7408, -1.59059, 13.4549, 0.44 ) }
    dend_30 { pt3dadd( -33.052, -2.19123, 14.3028, 0.44 ) }
    dend_30 { pt3dadd( -32.4886, -2.73082, 15.1192, 0.44 ) }
    dend_30 { pt3dadd( -31.8804, -3.23971, 16.1431, 0.74 ) }
    dend_30 { pt3dadd( -31.4412, -3.52464, 17.0015, 0.96 ) }
    dend_30 { pt3dadd( -30.9999, -3.70284, 17.9654, 0.74 ) }
    dend_30 { pt3dadd( -30.7615, -3.6993, 18.7194, 0.52 ) }
    dend_30 { pt3dadd( -30.5711, -3.61374, 19.6662, 0.52 ) }
    dend_30 { pt3dadd( -30.3815, -3.4145, 21.4876, 0.66 ) }
    dend_30 { pt3dadd( -30.3447, -3.31489, 22.8167, 0.66 ) }
    dend_30 { pt3dadd( -30.381, -3.32214, 23.8725, 0.66 ) }
    dend_30 { pt3dadd( -30.4928, -3.44098, 25.103, 0.66 ) }
    dend_30 { pt3dadd( -30.6144, -3.68762, 26.036, 0.66 ) }
    dend_30 { pt3dadd( -30.7973, -4.14706, 27.0684, 0.44 ) }
    dend_30 { pt3dadd( -30.9811, -4.69846, 27.8767, 0.29 ) }
    dend_30 { pt3dadd( -31.1976, -5.43636, 28.7472, 1.33 ) }
    dend_30 { pt3dadd( -31.361, -6.01764, 29.3592, 2.14 ) }
    dend_30 { pt3dadd( -31.4964, -6.49442, 29.8789, 2.28 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 63/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.48903, 37.2691, -4.44889, 0.22 ) }
    dend_25 { pt3dadd( -0.353249, 39.2768, -5.02639, 0.22 ) }
    dend_25 { pt3dadd( -1.01899, 40.0023, -5.23508, 0.81 ) }
    dend_25 { pt3dadd( -1.32539, 40.3363, -5.33113, 0.81 ) }
    dend_25 { pt3dadd( -2.48504, 41.6, -5.69464, 0.22 ) }
    dend_25 { pt3dadd( -2.90368, 42.0563, -5.82587, 0.81 ) }
    dend_25 { pt3dadd( -3.15938, 42.3349, -5.90603, 0.96 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 70/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 1.48903, 37.2691, -4.44889, 0.29 ) }
    dend_22 { pt3dadd( 1.67441, 39.997, -5.57591, 0.29 ) }
    dend_22 { pt3dadd( 1.74094, 40.6914, -5.87842, 0.29 ) }
    dend_22 { pt3dadd( 1.84366, 41.6104, -6.27903, 0.29 ) }
    dend_22 { pt3dadd( 1.94683, 42.6895, -6.72028, 1.03 ) }
    dend_22 { pt3dadd( 1.98616, 43.24, -6.92324, 1.33 ) }
    dend_22 { pt3dadd( 2.01132, 43.7888, -7.1054, 1.03 ) }
    dend_22 { pt3dadd( 2.05701, 44.8127, -7.38686, 0.59 ) }
    dend_22 { pt3dadd( 2.05345, 45.1921, -7.49552, 0.59 ) }
    dend_22 { pt3dadd( 1.97444, 46.1747, -7.77734, 0.22 ) }
    dend_22 { pt3dadd( 1.82083, 47.2356, -8.05664, 0.22 ) }
    dend_22 { pt3dadd( 1.57745, 48.6378, -8.41273, 2.65 ) }
    dend_22 { pt3dadd( 1.46008, 49.2699, -8.56325, 3.09 ) }
    dend_22 { pt3dadd( 1.37774, 49.6958, -8.65244, 3.54 ) }
    dend_22 { pt3dadd( 1.33736, 49.9088, -8.70025, 3.68 ) }
    dend_22 { pt3dadd( 0.96534, 52.0521, -9.21275, 0.22 ) }
    dend_22 { pt3dadd( 0.8598, 52.7461, -9.31551, 0.81 ) }
    dend_22 { pt3dadd( 0.81184, 53.1333, -9.33145, 0.81 ) }
    dend_22 { pt3dadd( 0.77167, 53.5889, -9.30385, 0.52 ) }
    dend_22 { pt3dadd( 0.72364, 54.4736, -9.14497, 0.22 ) }
    dend_22 { pt3dadd( 0.699966, 55.1111, -8.94578, 0.22 ) }
    dend_22 { pt3dadd( 0.672931, 56.9046, -8.03114, 1.84 ) }
    dend_22 { pt3dadd( 0.664538, 57.267, -7.80526, 2.06 ) }
    dend_22 { pt3dadd( 0.64888, 57.6458, -7.54432, 2.06 ) }
    dend_22 { pt3dadd( 0.601537, 58.4688, -6.89093, 1.25 ) }
    dend_22 { pt3dadd( 0.515785, 59.3095, -6.16779, 0.22 ) }
    dend_22 { pt3dadd( 0.410146, 60.1072, -5.48535, 0.22 ) }
    dend_22 { pt3dadd( 0.194437, 61.4603, -4.3839, 3.46 ) }
    dend_22 { pt3dadd( 0.0970953, 62.0267, -3.93294, 3.83 ) }
    dend_22 { pt3dadd( -0.120434, 63.2464, -2.99342, 3.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_22 { pt3dadd( -0.442398, 65.0559, -1.63188, 0.37 ) }
    dend_22 { pt3dadd( -0.531281, 65.5793, -1.25077, 0.59 ) }
    dend_22 { pt3dadd( -0.601233, 65.9688, -1.00109, 0.81 ) }
    dend_22 { pt3dadd( -0.676148, 66.3548, -0.789281, 0.81 ) }
    dend_22 { pt3dadd( -0.788217, 66.9382, -0.500457, 0.52 ) }
    dend_22 { pt3dadd( -0.948851, 67.6992, -0.172643, 0.22 ) }
    dend_22 { pt3dadd( -1.09444, 68.3553, 0.105324, 0.22 ) }
    dend_22 { pt3dadd( -1.3829, 69.5695, 0.628874, 0.22 ) }
    dend_22 { pt3dadd( -1.81686, 71.2953, 1.36738, 2.65 ) }
    dend_22 { pt3dadd( -1.9692, 71.859, 1.60221, 3.24 ) }
    dend_22 { pt3dadd( -2.13617, 72.4274, 1.83066, 3.54 ) }
    dend_22 { pt3dadd( -2.22297, 72.7015, 1.9365, 3.54 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 12/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 34.7409, -41.709, -14.2133, 0.29 ) }
    dend_19 { pt3dadd( 34.6341, -43.2759, -13.3866, 0.29 ) }
    dend_19 { pt3dadd( 34.6561, -45.2253, -12.3554, 0.15 ) }
    dend_19 { pt3dadd( 34.6895, -45.8037, -12.0455, 0.52 ) }
    dend_19 { pt3dadd( 34.8489, -47.5549, -11.0712, 2.95 ) }
    dend_19 { pt3dadd( 34.965, -48.537, -10.5179, 2.36 ) }
    dend_19 { pt3dadd( 35.2075, -50.229, -9.52919, 0.29 ) }
    dend_19 { pt3dadd( 35.5878, -51.6973, -8.70936, 0.22 ) }
    dend_19 { pt3dadd( 35.9085, -52.5795, -8.22583, 1.4 ) }
    dend_19 { pt3dadd( 36.2414, -53.2617, -7.79608, 1.92 ) }
    dend_19 { pt3dadd( 36.4325, -53.5589, -7.56772, 2.43 ) }
    dend_19 { pt3dadd( 36.7857, -54.0227, -7.1822, 2.43 ) }
    dend_19 { pt3dadd( 37.9185, -55.3189, -6.00198, 0.29 ) }
    dend_19 { pt3dadd( 38.6599, -56.0968, -5.29151, 0.29 ) }
    dend_19 { pt3dadd( 39.5665, -56.9877, -4.45902, 1.77 ) }
    dend_19 { pt3dadd( 40.3325, -57.72, -3.77122, 2.5 ) }
    dend_19 { pt3dadd( 40.7493, -58.1149, -3.38457, 3.02 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 29/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 34.7409, -41.709, -14.2133, 2.14 ) }
    dend_18 { pt3dadd( 34.9165, -42.0155, -14.4238, 2.14 ) }
    dend_18 { pt3dadd( 35.0837, -42.3048, -14.5687, 2.14 ) }
    dend_18 { pt3dadd( 36.1159, -44.0478, -15.2757, 0.22 ) }
    dend_18 { pt3dadd( 36.6616, -44.9328, -15.5998, 0.22 ) }
    dend_18 { pt3dadd( 37.1971, -45.7678, -15.8754, 1.69 ) }
    dend_18 { pt3dadd( 37.8681, -46.7943, -16.1726, 2.14 ) }
    dend_18 { pt3dadd( 39.2259, -48.8659, -16.6686, 0.22 ) }
    dend_18 { pt3dadd( 40.0729, -50.1605, -16.9256, 0.22 ) }
    dend_18 { pt3dadd( 40.7159, -51.1334, -17.075, 1.69 ) }
    dend_18 { pt3dadd( 41.1717, -51.8071, -17.1652, 2.06 ) }
    dend_18 { pt3dadd( 42.4092, -53.6242, -17.3714, 0.22 ) }
    dend_18 { pt3dadd( 43.2553, -54.8667, -17.4787, 0.22 ) }
    dend_18 { pt3dadd( 43.676, -55.4922, -17.5717, 1.69 ) }
    dend_18 { pt3dadd( 44.1009, -56.1526, -17.6639, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_1 (entry count 44/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 17.7054, 0.875454, -4.71826, 1.55 ) }
    dend_10 { pt3dadd( 18.8187, 0.541256, -4.86019, 1.55 ) }
    dend_10 { pt3dadd( 19.9611, 0.198333, -5.00583, 0.74 ) }
    dend_10 { pt3dadd( 20.7431, -0.0364254, -5.10554, 1.18 ) }
    dend_10 { pt3dadd( 21.4384, -0.245137, -5.19418, 1.55 ) }
    dend_10 { pt3dadd( 21.9897, -0.410619, -5.26446, 1.77 ) }
    dend_10 { pt3dadd( 22.692, -0.621439, -5.354, 1.77 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 17.7054, 0.875454, -4.71826, 0.96 ) }
    dend_9 { pt3dadd( 17.1602, -0.78685, -4.22624, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 17.7054, 0.875454, -4.71826, 2.8 ) }
    dend_2 { pt3dadd( 18.6978, 2.72502, -5.11144, 2.8 ) }
    dend_2 { pt3dadd( 19.4574, 4.2765, -5.27188, 1.84 ) }
    dend_2 { pt3dadd( 19.8143, 5.05225, -5.26825, 1.47 ) }
    dend_2 { pt3dadd( 20.2738, 6.10584, -5.11262, 1.25 ) }
    dend_2 { pt3dadd( 20.6526, 6.98818, -4.92734, 1.18 ) }
    dend_2 { pt3dadd( 21.0661, 7.96466, -4.64541, 1.18 ) }
    dend_2 { pt3dadd( 21.5489, 9.20138, -4.12533, 1.11 ) }
    dend_2 { pt3dadd( 21.9968, 10.4043, -3.52334, 1.33 ) }
    dend_2 { pt3dadd( 22.8059, 12.5954, -2.29199, 2.58 ) }
    dend_2 { pt3dadd( 23.028, 13.1706, -1.93166, 3.02 ) }
    dend_2 { pt3dadd( 23.5349, 14.4282, -1.07872, 3.54 ) }
    dend_2 { pt3dadd( 23.7303, 14.9062, -0.743754, 3.68 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 66/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -39.8906, -17.0334, 1.65959, 0.37 ) }
    dend_39 { pt3dadd( -41.8802, -17.529, 2.46312, 0.37 ) }
    dend_39 { pt3dadd( -42.2447, -17.6243, 2.60449, 0.37 ) }
    dend_39 { pt3dadd( -42.7511, -17.7511, 2.79139, 0.22 ) }
    dend_39 { pt3dadd( -43.4605, -17.9099, 3.00799, 0.22 ) }
    dend_39 { pt3dadd( -44.2182, -18.0631, 3.23447, 1.55 ) }
    dend_39 { pt3dadd( -44.6443, -18.143, 3.35979, 2.58 ) }
    dend_39 { pt3dadd( -44.8729, -18.1787, 3.40873, 2.87 ) }
    dend_39 { pt3dadd( -45.4171, -18.2541, 3.53238, 2.28 ) }
    dend_39 { pt3dadd( -46.4377, -18.3586, 3.7731, 0.22 ) }
    dend_39 { pt3dadd( -46.9923, -18.3873, 3.91296, 0.66 ) }
    dend_39 { pt3dadd( -47.2854, -18.3815, 3.98922, 0.88 ) }
    dend_39 { pt3dadd( -47.7313, -18.3462, 4.11878, 0.22 ) }
    dend_39 { pt3dadd( -48.2587, -18.2899, 4.27983, 0.22 ) }
    dend_39 { pt3dadd( -48.7055, -18.2373, 4.43177, 0.37 ) }
    dend_39 { pt3dadd( -48.9862, -18.2091, 4.53783, 0.37 ) }
    dend_39 { pt3dadd( -49.2908, -18.176, 4.63831, 0.37 ) }
    dend_39 { pt3dadd( -49.5078, -18.1488, 4.71254, 0.37 ) }
    dend_39 { pt3dadd( -49.8213, -18.1051, 4.82491, 0.22 ) }
    dend_39 { pt3dadd( -50.1877, -18.0679, 4.96504, 0.22 ) }
    dend_39 { pt3dadd( -50.5699, -18.1146, 5.09204, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 87/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -39.8906, -17.0334, 1.65959, 0.52 ) }
    dend_38 { pt3dadd( -40.095, -19.92, -0.816327, 0.52 ) }
    dend_38 { pt3dadd( -40.1465, -20.6375, -1.30965, 0.52 ) }
    dend_38 { pt3dadd( -40.177, -21.3805, -1.76693, 0.29 ) }
    dend_38 { pt3dadd( -40.1864, -22.3701, -2.33108, 0.52 ) }
    dend_38 { pt3dadd( -40.1309, -23.9114, -3.12442, 0.29 ) }
    dend_38 { pt3dadd( -40.0736, -24.6269, -3.47473, 0.29 ) }
    dend_38 { pt3dadd( -39.8196, -26.5226, -4.18022, 2.43 ) }
    dend_38 { pt3dadd( -39.7125, -27.2177, -4.43831, 3.02 ) }
    dend_38 { pt3dadd( -39.5849, -27.8996, -4.68726, 3.02 ) }
    dend_38 { pt3dadd( -39.082, -30.0736, -5.44085, 0.22 ) }
    dend_38 { pt3dadd( -38.6907, -31.367, -5.92014, 0.22 ) }
    dend_38 { pt3dadd( -38.487, -31.9804, -6.15304, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 0/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -200.231, 81.7036, -33.3317, 0.22 ) }
    dend_36 { pt3dadd( -202.071, 84.0251, -34.2332, 0.22 ) }
    dend_36 { pt3dadd( -202.724, 84.7923, -34.5312, 0.22 ) }
    dend_36 { pt3dadd( -203.25, 85.3646, -34.7733, 0.88 ) }
    dend_36 { pt3dadd( -203.851, 85.9447, -35.0511, 0.88 ) }
    dend_36 { pt3dadd( -204.911, 86.8411, -35.4182, 0.22 ) }
    dend_36 { pt3dadd( -205.461, 87.2746, -35.5841, 0.22 ) }
    dend_36 { pt3dadd( -205.852, 87.5363, -35.6688, 0.66 ) }
    dend_36 { pt3dadd( -206.576, 88.0089, -35.837, 0.66 ) }
    dend_36 { pt3dadd( -207.712, 88.771, -36.1042, 0.22 ) }
    dend_36 { pt3dadd( -210.045, 90.3664, -36.7036, 0.22 ) }
    dend_36 { pt3dadd( -210.889, 90.9581, -36.9136, 0.59 ) }
    dend_36 { pt3dadd( -211.35, 91.2891, -37.0271, 0.81 ) }
    dend_36 { pt3dadd( -213.16, 92.6103, -37.4767, 0.22 ) }
    dend_36 { pt3dadd( -214.41, 93.568, -37.7837, 1.11 ) }
    dend_36 { pt3dadd( -215.345, 94.3434, -38.0581, 1.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -200.231, 81.7036, -33.3317, 0.22 ) }
    dend_35 { pt3dadd( -201.573, 82.1215, -32.8033, 0.22 ) }
    dend_35 { pt3dadd( -202.545, 82.4385, -32.3832, 0.22 ) }
    dend_35 { pt3dadd( -202.717, 82.5001, -32.3033, 0.52 ) }
    dend_35 { pt3dadd( -202.95, 82.5984, -32.199, 0.52 ) }
    dend_35 { pt3dadd( -203.796, 83.0, -31.8326, 0.22 ) }
    dend_35 { pt3dadd( -204.671, 83.4612, -31.466, 2.28 ) }
    dend_35 { pt3dadd( -204.91, 83.6109, -31.3639, 2.65 ) }
    dend_35 { pt3dadd( -205.303, 83.8591, -31.2486, 2.65 ) }
    dend_35 { pt3dadd( -207.192, 85.0192, -30.8781, 0.22 ) }
    dend_35 { pt3dadd( -207.964, 85.4814, -30.7914, 0.66 ) }
    dend_35 { pt3dadd( -208.861, 86.0074, -30.7784, 0.22 ) }
    dend_35 { pt3dadd( -209.526, 86.3772, -30.8082, 0.88 ) }
    dend_35 { pt3dadd( -211.416, 87.3634, -30.9653, 0.22 ) }
    dend_35 { pt3dadd( -211.709, 87.5037, -31.0006, 0.52 ) }
    dend_35 { pt3dadd( -212.022, 87.6392, -31.0518, 0.52 ) }
    dend_35 { pt3dadd( -213.342, 88.129, -31.193, 0.22 ) }
    dend_35 { pt3dadd( -213.779, 88.2727, -31.2118, 0.22 ) }
    dend_35 { pt3dadd( -214.537, 88.5125, -31.1474, 1.03 ) }
    dend_35 { pt3dadd( -214.883, 88.6266, -31.0764, 1.4 ) }
    dend_35 { pt3dadd( -215.225, 88.7458, -30.9984, 1.4 ) }
    dend_35 { pt3dadd( -217.37, 89.5068, -30.4637, 0.22 ) }
    dend_35 { pt3dadd( -218.974, 90.0789, -30.0298, 0.22 ) }
    dend_35 { pt3dadd( -220.201, 90.5262, -29.6868, 1.25 ) }
    dend_35 { pt3dadd( -220.574, 90.6609, -29.5871, 1.4 ) }
    dend_35 { pt3dadd( -221.595, 91.028, -29.31, 0.22 ) }
    dend_35 { pt3dadd( -223.156, 91.6004, -28.8981, 0.22 ) }
    dend_35 { pt3dadd( -223.926, 91.8935, -28.7345, 0.74 ) }
    dend_35 { pt3dadd( -224.229, 92.0107, -28.7005, 0.74 ) }
    dend_35 { pt3dadd( -225.433, 92.4693, -28.6457, 0.22 ) }
    dend_35 { pt3dadd( -226.065, 92.6984, -28.6306, 1.33 ) }
    dend_35 { pt3dadd( -226.673, 92.9065, -28.6355, 1.77 ) }
    dend_35 { pt3dadd( -228.223, 93.4525, -28.7609, 0.22 ) }
    dend_35 { pt3dadd( -229.527, 93.929, -28.931, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.22297, 72.7015, 1.9365, 0.29 ) }
    dend_24 { pt3dadd( -3.98933, 74.797, 1.02475, 0.29 ) }
    dend_24 { pt3dadd( -4.55563, 75.5013, 0.778533, 0.29 ) }
    dend_24 { pt3dadd( -5.28083, 76.4475, 0.46681, 1.11 ) }
    dend_24 { pt3dadd( -5.43605, 76.6583, 0.402844, 1.25 ) }
    dend_24 { pt3dadd( -5.60358, 76.8924, 0.337532, 1.25 ) }
    dend_24 { pt3dadd( -5.84712, 77.2374, 0.24829, 0.96 ) }
    dend_24 { pt3dadd( -6.54661, 78.4225, 0.078206, 0.22 ) }
    dend_24 { pt3dadd( -6.94201, 79.1196, -0.0324537, 0.22 ) }
    dend_24 { pt3dadd( -7.12182, 79.4879, -0.0570938, 0.74 ) }
    dend_24 { pt3dadd( -7.29717, 79.8798, -0.0561428, 0.96 ) }
    dend_24 { pt3dadd( -7.41808, 80.1716, -0.0324548, 0.96 ) }
    dend_24 { pt3dadd( -7.77598, 81.168, 0.11733, 0.22 ) }
    dend_24 { pt3dadd( -8.01289, 82.0158, 0.290444, 0.22 ) }
    dend_24 { pt3dadd( -8.33778, 83.5106, 0.641079, 1.47 ) }
    dend_24 { pt3dadd( -8.4358, 84.0399, 0.77006, 1.92 ) }
    dend_24 { pt3dadd( -8.52994, 84.5827, 0.915063, 1.92 ) }
    dend_24 { pt3dadd( -8.64408, 85.2458, 1.1084, 1.25 ) }
    dend_24 { pt3dadd( -8.90806, 86.5749, 1.52654, 0.22 ) }
    dend_24 { pt3dadd( -9.29732, 88.1847, 2.03162, 0.22 ) }
    dend_24 { pt3dadd( -9.68447, 89.4571, 2.36361, 1.4 ) }
    dend_24 { pt3dadd( -9.82571, 89.8671, 2.46353, 1.62 ) }
    dend_24 { pt3dadd( -10.029, 90.3295, 2.56731, 1.62 ) }
    dend_24 { pt3dadd( -10.8212, 91.8178, 2.88081, 0.22 ) }
    dend_24 { pt3dadd( -11.6673, 93.1807, 3.15946, 0.22 ) }
    dend_24 { pt3dadd( -12.6177, 94.583, 3.42507, 1.99 ) }
    dend_24 { pt3dadd( -12.785, 94.8213, 3.4641, 2.5 ) }
    dend_24 { pt3dadd( -14.2304, 96.8721, 3.74971, 0.22 ) }
    dend_24 { pt3dadd( -14.9554, 97.8664, 3.86973, 1.33 ) }
    dend_24 { pt3dadd( -15.107, 98.0574, 3.88886, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.22297, 72.7015, 1.9365, 0.29 ) }
    dend_23 { pt3dadd( -2.53164, 74.9674, 2.66958, 0.29 ) }
    dend_23 { pt3dadd( -2.70782, 76.0143, 3.07146, 0.29 ) }
    dend_23 { pt3dadd( -2.86028, 76.8444, 3.42148, 0.29 ) }
    dend_23 { pt3dadd( -3.0152, 77.7243, 3.78337, 0.29 ) }
    dend_23 { pt3dadd( -3.21177, 78.9499, 4.28753, 1.18 ) }
    dend_23 { pt3dadd( -3.30364, 79.6393, 4.58296, 1.77 ) }
    dend_23 { pt3dadd( -3.36123, 80.1655, 4.8345, 1.77 ) }
    dend_23 { pt3dadd( -3.38502, 80.5226, 5.0126, 1.92 ) }
    dend_23 { pt3dadd( -3.36119, 82.1047, 5.78957, 0.22 ) }
    dend_23 { pt3dadd( -3.27026, 82.7753, 6.09962, 0.22 ) }
    dend_23 { pt3dadd( -2.99439, 83.7867, 6.54854, 1.11 ) }
    dend_23 { pt3dadd( -2.81215, 84.2389, 6.76312, 1.33 ) }
    dend_23 { pt3dadd( -2.60747, 84.6438, 6.99063, 1.33 ) }
    dend_23 { pt3dadd( -2.35457, 85.0752, 7.28708, 1.11 ) }
    dend_23 { pt3dadd( -2.06206, 85.5253, 7.68572, 0.88 ) }
    dend_23 { pt3dadd( -1.62898, 86.273, 8.39834, 0.37 ) }
    dend_23 { pt3dadd( -1.46505, 86.587, 8.7135, 0.37 ) }
    dend_23 { pt3dadd( -1.10592, 87.3628, 9.52896, 0.96 ) }
    dend_23 { pt3dadd( -0.877822, 87.9396, 10.1176, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( -0.5162, 89.0282, 11.1989, 0.29 ) }
    dend_23 { pt3dadd( -0.257498, 89.8701, 12.0128, 1.11 ) }
    dend_23 { pt3dadd( -0.123494, 90.3097, 12.4269, 1.33 ) }
    dend_23 { pt3dadd( 0.115527, 91.0486, 13.1106, 0.81 ) }
    dend_23 { pt3dadd( 0.308794, 91.6089, 13.6127, 0.37 ) }
    dend_23 { pt3dadd( 0.602288, 92.3955, 14.266, 0.74 ) }
    dend_23 { pt3dadd( 0.89888, 93.1419, 14.844, 0.44 ) }
    dend_23 { pt3dadd( 1.35736, 94.2323, 15.6521, 1.47 ) }
    dend_23 { pt3dadd( 1.45851, 94.4739, 15.822, 1.99 ) }
    dend_23 { pt3dadd( 1.66337, 94.9508, 16.1461, 1.99 ) }
    dend_23 { pt3dadd( 2.24965, 96.3502, 17.1185, 0.22 ) }
    dend_23 { pt3dadd( 2.44563, 96.8399, 17.4552, 0.22 ) }
    dend_23 { pt3dadd( 2.77371, 97.6986, 18.0076, 1.4 ) }
    dend_23 { pt3dadd( 2.93342, 98.1087, 18.2575, 1.4 ) }
    dend_23 { pt3dadd( 3.417, 99.2974, 18.959, 0.29 ) }
    dend_23 { pt3dadd( 3.97861, 100.55, 19.6799, 0.22 ) }
    dend_23 { pt3dadd( 4.30393, 101.235, 20.0695, 0.22 ) }
    dend_23 { pt3dadd( 4.71932, 102.045, 20.4828, 1.18 ) }
    dend_23 { pt3dadd( 4.95969, 102.491, 20.6971, 1.84 ) }
    dend_23 { pt3dadd( 5.24033, 102.972, 20.9143, 1.47 ) }
    dend_23 { pt3dadd( 5.84929, 103.903, 21.2528, 0.22 ) }
    dend_23 { pt3dadd( 6.20044, 104.358, 21.3779, 0.22 ) }
    dend_23 { pt3dadd( 6.86792, 105.168, 21.6121, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 23/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 22.692, -0.621439, -5.354, 0.66 ) }
    dend_12 { pt3dadd( 23.0531, -1.16163, -8.39802, 0.66 ) }
    dend_12 { pt3dadd( 23.5502, -1.80335, -12.171, 0.66 ) }
    dend_12 { pt3dadd( 23.6878, -1.97584, -13.0744, 1.62 ) }
    dend_12 { pt3dadd( 23.8018, -2.13992, -13.8777, 2.65 ) }
    dend_12 { pt3dadd( 23.9798, -2.39578, -15.1302, 2.95 ) }
    dend_12 { pt3dadd( 24.3782, -2.96885, -17.9357, 0.81 ) }
    dend_12 { pt3dadd( 24.9595, -4.05519, -22.424, 2.28 ) }
    dend_12 { pt3dadd( 25.0995, -4.30047, -23.4318, 3.17 ) }
    dend_12 { pt3dadd( 25.2305, -4.4759, -24.2701, 3.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 22.692, -0.621439, -5.354, 0.66 ) }
    dend_11 { pt3dadd( 23.5849, -2.41643, -5.2345, 0.66 ) }
    dend_11 { pt3dadd( 23.9961, -3.32122, -5.19919, 0.74 ) }
    dend_11 { pt3dadd( 24.2833, -3.98601, -5.20199, 0.81 ) }
    dend_11 { pt3dadd( 24.7414, -5.08682, -5.23444, 0.59 ) }
    dend_11 { pt3dadd( 25.1312, -6.05037, -5.27678, 0.52 ) }
    dend_11 { pt3dadd( 25.4843, -6.95165, -5.3306, 0.29 ) }
    dend_11 { pt3dadd( 25.834, -7.94813, -5.42971, 0.29 ) }
    dend_11 { pt3dadd( 26.2794, -9.30861, -5.59073, 1.33 ) }
    dend_11 { pt3dadd( 26.5017, -10.0729, -5.69773, 1.92 ) }
    dend_11 { pt3dadd( 26.5905, -10.4178, -5.75511, 2.14 ) }
    dend_11 { pt3dadd( 26.7262, -11.0157, -5.8527, 1.92 ) }
    dend_11 { pt3dadd( 26.9463, -12.088, -6.02179, 0.96 ) }
    dend_11 { pt3dadd( 27.144, -13.203, -6.191, 0.22 ) }
    dend_11 { pt3dadd( 27.2937, -14.1476, -6.32386, 0.22 ) }
    dend_11 { pt3dadd( 27.3851, -14.5904, -6.38984, 0.88 ) }
    dend_11 { pt3dadd( 27.6404, -15.4973, -6.52441, 1.55 ) }
    dend_11 { pt3dadd( 27.764, -15.8231, -6.57155, 1.69 ) }
    dend_11 { pt3dadd( 28.0613, -16.4468, -6.66274, 1.33 ) }
    dend_11 { pt3dadd( 28.7807, -17.6999, -6.84638, 0.29 ) }
    dend_11 { pt3dadd( 29.6374, -19.0236, -7.02955, 0.29 ) }
    dend_11 { pt3dadd( 30.4275, -20.1503, -7.17609, 0.29 ) }
    dend_11 { pt3dadd( 31.2296, -21.2012, -7.30412, 1.33 ) }
    dend_11 { pt3dadd( 31.7774, -21.8513, -7.37687, 1.62 ) }
    dend_11 { pt3dadd( 32.1462, -22.2503, -7.41706, 1.69 ) }
    dend_11 { pt3dadd( 33.2507, -23.3414, -7.52949, 0.29 ) }
    dend_11 { pt3dadd( 34.297, -24.3125, -7.63603, 0.29 ) }
    dend_11 { pt3dadd( 34.9396, -24.8655, -7.70579, 0.29 ) }
    dend_11 { pt3dadd( 36.2465, -25.9153, -7.81926, 1.77 ) }
    dend_11 { pt3dadd( 36.6468, -26.2081, -7.84416, 2.58 ) }
    dend_11 { pt3dadd( 37.322, -26.6553, -7.87215, 3.02 ) }
    dend_11 { pt3dadd( 37.7165, -26.8815, -7.86813, 3.17 ) }
    dend_11 { pt3dadd( 38.0168, -27.0411, -7.85176, 3.17 ) }
    dend_11 { pt3dadd( 39.3186, -27.7264, -7.7357, 1.55 ) }
    dend_11 { pt3dadd( 40.6581, -28.4174, -7.57105, 0.22 ) }
    dend_11 { pt3dadd( 41.1282, -28.6541, -7.50433, 0.22 ) }
    dend_11 { pt3dadd( 42.1101, -29.1688, -7.32731, 1.03 ) }
    dend_11 { pt3dadd( 42.4819, -29.378, -7.2414, 1.25 ) }
    dend_11 { pt3dadd( 42.8777, -29.6148, -7.14291, 1.33 ) }
    dend_11 { pt3dadd( 43.438, -29.9619, -6.98165, 0.88 ) }
    dend_11 { pt3dadd( 43.8064, -30.2074, -6.8588, 0.29 ) }
    dend_11 { pt3dadd( 45.0315, -31.0634, -6.44997, 0.22 ) }
    dend_11 { pt3dadd( 46.3097, -32.0288, -6.04074, 1.84 ) }
    dend_11 { pt3dadd( 47.0338, -32.6224, -5.82067, 2.65 ) }
    dend_11 { pt3dadd( 47.6351, -33.1585, -5.63683, 2.5 ) }
    dend_11 { pt3dadd( 48.0281, -33.5399, -5.51711, 1.92 ) }
    dend_11 { pt3dadd( 49.2328, -34.7762, -5.13604, 0.29 ) }
    dend_11 { pt3dadd( 50.0887, -35.7048, -4.83588, 0.29 ) }
    dend_11 { pt3dadd( 50.9477, -36.6661, -4.47795, 0.22 ) }
    dend_11 { pt3dadd( 51.7434, -37.4754, -4.14622, 0.22 ) }
    dend_11 { pt3dadd( 52.7609, -38.432, -3.74355, 2.73 ) }
    dend_11 { pt3dadd( 53.4618, -39.0491, -3.46907, 3.24 ) }
    dend_11 { pt3dadd( 54.3261, -39.7699, -3.12264, 2.58 ) }
    dend_11 { pt3dadd( 56.5421, -41.4491, -2.2845, 0.22 ) }
    dend_11 { pt3dadd( 59.5248, -43.5468, -1.30221, 0.22 ) }
    dend_11 { pt3dadd( 60.8599, -44.4494, -0.936879, 2.06 ) }
    dend_11 { pt3dadd( 61.3208, -44.7543, -0.827966, 2.65 ) }
    dend_11 { pt3dadd( 62.0054, -45.1977, -0.688477, 2.8 ) }
    dend_11 { pt3dadd( 64.1728, -46.5775, -0.32837, 0.22 ) }
    dend_11 { pt3dadd( 66.9984, -48.3715, 0.0463341, 0.22 ) }
    dend_11 { pt3dadd( 68.1849, -49.1711, 0.202965, 1.25 ) }
    dend_11 { pt3dadd( 68.8243, -49.6085, 0.278487, 1.69 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 95/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 23.7303, 14.9062, -0.743754, 0.88 ) }
    dend_6 { pt3dadd( 25.0986, 14.8403, -1.58679, 0.88 ) }
    dend_6 { pt3dadd( 26.0787, 14.773, -1.97128, 0.29 ) }
    dend_6 { pt3dadd( 27.8309, 14.6012, -2.23111, 0.37 ) }
    dend_6 { pt3dadd( 28.4769, 14.4943, -2.13333, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( 29.4591, 14.2525, -1.65434, 0.44 ) }
    dend_6 { pt3dadd( 30.3355, 14.0085, -1.10721, 0.74 ) }
    dend_6 { pt3dadd( 32.564, 13.3216, 0.816073, 1.03 ) }
    dend_6 { pt3dadd( 33.237, 13.0921, 1.51064, 1.03 ) }
    dend_6 { pt3dadd( 34.2862, 12.7477, 2.64164, 0.66 ) }
    dend_6 { pt3dadd( 35.509, 12.3833, 3.90354, 0.44 ) }
    dend_6 { pt3dadd( 36.0204, 12.2628, 4.39124, 0.59 ) }
    dend_6 { pt3dadd( 36.6948, 12.1656, 4.92922, 0.29 ) }
    dend_6 { pt3dadd( 37.6092, 12.1052, 5.39419, 0.29 ) }
    dend_6 { pt3dadd( 38.7839, 12.0974, 5.86091, 1.4 ) }
    dend_6 { pt3dadd( 39.7113, 12.1621, 6.0989, 1.92 ) }
    dend_6 { pt3dadd( 40.5766, 12.2676, 6.22474, 1.62 ) }
    dend_6 { pt3dadd( 41.2678, 12.3688, 6.31693, 0.81 ) }
    dend_6 { pt3dadd( 41.6413, 12.433, 6.35753, 0.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 14/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 23.7303, 14.9062, -0.743754, 1.69 ) }
    dend_3 { pt3dadd( 23.9565, 17.1138, 0.0886573, 1.69 ) }
    dend_3 { pt3dadd( 24.0903, 18.4201, 0.581215, 1.25 ) }
    dend_3 { pt3dadd( 24.2347, 19.8291, 1.1125, 1.33 ) }
    dend_3 { pt3dadd( 24.3146, 20.609, 1.40657, 1.33 ) }
    dend_3 { pt3dadd( 24.3874, 21.32, 1.67466, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 25.2305, -4.4759, -24.2701, 0.44 ) }
    dend_14 { pt3dadd( 25.3602, -5.89574, -24.953, 0.44 ) }
    dend_14 { pt3dadd( 25.9, -8.0693, -25.8098, 0.29 ) }
    dend_14 { pt3dadd( 26.1515, -8.88269, -26.1378, 1.03 ) }
    dend_14 { pt3dadd( 26.3487, -9.48958, -26.3759, 1.33 ) }
    dend_14 { pt3dadd( 26.6996, -10.5466, -26.7711, 0.22 ) }
    dend_14 { pt3dadd( 27.2975, -12.3056, -27.3973, 0.22 ) }
    dend_14 { pt3dadd( 27.9213, -13.8728, -27.9251, 1.47 ) }
    dend_14 { pt3dadd( 28.3511, -14.887, -28.2276, 1.77 ) }
    dend_14 { pt3dadd( 28.8639, -16.1282, -28.6853, 0.15 ) }
    dend_14 { pt3dadd( 29.0884, -16.7229, -28.9718, 0.15 ) }
    dend_14 { pt3dadd( 29.473, -17.9639, -29.7053, 2.36 ) }
    dend_14 { pt3dadd( 29.5935, -18.4663, -30.0361, 2.95 ) }
    dend_14 { pt3dadd( 29.7236, -19.1186, -30.4917, 2.95 ) }
    dend_14 { pt3dadd( 30.0413, -20.7713, -31.694, 0.66 ) }
    dend_14 { pt3dadd( 30.2806, -22.063, -32.737, 0.22 ) }
    dend_14 { pt3dadd( 30.4431, -23.0362, -33.5833, 0.22 ) }
    dend_14 { pt3dadd( 30.5196, -23.5845, -34.0893, 1.11 ) }
    dend_14 { pt3dadd( 30.5657, -23.9194, -34.3875, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 39/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.2305, -4.4759, -24.2701, 0.22 ) }
    dend_13 { pt3dadd( 26.2283, -2.50555, -26.5562, 0.22 ) }
    dend_13 { pt3dadd( 27.0225, -1.1102, -28.187, 0.22 ) }
    dend_13 { pt3dadd( 28.0049, 0.552208, -30.0237, 1.99 ) }
    dend_13 { pt3dadd( 28.3958, 1.22354, -30.7361, 2.43 ) }
    dend_13 { pt3dadd( 29.433, 3.08097, -32.6935, 0.44 ) }
    dend_13 { pt3dadd( 29.7562, 3.67427, -33.3535, 0.96 ) }
    dend_13 { pt3dadd( 30.3137, 4.78873, -34.5966, 0.22 ) }
    dend_13 { pt3dadd( 31.2022, 6.81077, -36.7543, 0.22 ) }
    dend_13 { pt3dadd( 31.5324, 7.66645, -37.6149, 1.47 ) }
    dend_13 { pt3dadd( 31.769, 8.48709, -38.6329, 1.47 ) }
    dend_13 { pt3dadd( 32.2265, 10.7092, -41.4527, 0.15 ) }
    dend_13 { pt3dadd( 32.4171, 11.988, -43.0905, 0.15 ) }
    dend_13 { pt3dadd( 32.5326, 13.2109, -44.6262, 1.84 ) }
    dend_13 { pt3dadd( 32.5514, 13.6465, -45.154, 2.14 ) }
    dend_13 { pt3dadd( 32.7033, 18.3853, -50.6345, 0.22 ) }
    dend_13 { pt3dadd( 32.7617, 20.4137, -52.8966, 0.22 ) }
    dend_13 { pt3dadd( 32.7705, 20.8725, -53.3985, 0.22 ) }
    dend_13 { pt3dadd( 32.8189, 22.1577, -54.8324, 0.22 ) }
    dend_13 { pt3dadd( 32.8813, 23.6687, -56.417, 1.55 ) }
    dend_13 { pt3dadd( 32.9048, 24.2045, -56.9225, 1.55 ) }
    dend_13 { pt3dadd( 33.0594, 27.2074, -59.3687, 0.22 ) }
    dend_13 { pt3dadd( 33.1406, 28.239, -60.4441, 0.22 ) }
    dend_13 { pt3dadd( 33.2422, 29.053, -61.3363, 0.22 ) }
    dend_13 { pt3dadd( 33.3735, 29.8241, -62.2305, 0.96 ) }
    dend_13 { pt3dadd( 33.5822, 30.8713, -63.4438, 1.77 ) }
    dend_13 { pt3dadd( 33.6884, 31.2654, -63.9256, 1.77 ) }
    dend_13 { pt3dadd( 34.391, 33.3955, -66.682, 0.22 ) }
    dend_13 { pt3dadd( 34.693, 34.1997, -67.7983, 0.81 ) }
    dend_13 { pt3dadd( 35.0477, 35.0403, -69.0644, 0.22 ) }
    dend_13 { pt3dadd( 35.6727, 36.4163, -71.2785, 1.62 ) }
    dend_13 { pt3dadd( 36.9388, 39.1302, -75.7075, 0.22 ) }
    dend_13 { pt3dadd( 37.5509, 40.3667, -77.8765, 0.66 ) }
    dend_13 { pt3dadd( 37.9837, 41.1767, -79.4244, 1.18 ) }
    dend_13 { pt3dadd( 38.2627, 41.679, -80.4479, 1.18 ) }
    dend_13 { pt3dadd( 38.8376, 42.7037, -82.5994, 0.81 ) }
    dend_13 { pt3dadd( 39.0817, 43.1409, -83.5288, 1.33 ) }
    dend_13 { pt3dadd( 39.6915, 44.3381, -86.0611, 1.18 ) }
    dend_13 { pt3dadd( 40.1831, 45.3686, -88.1498, 0.29 ) }
    dend_13 { pt3dadd( 40.4761, 46.0414, -89.4173, 0.81 ) }
    dend_13 { pt3dadd( 40.613, 46.3903, -90.0114, 0.81 ) }
    dend_13 { pt3dadd( 41.2614, 48.1334, -92.6819, 0.22 ) }
    dend_13 { pt3dadd( 41.482, 48.7606, -93.6043, 0.22 ) }
    dend_13 { pt3dadd( 41.6478, 49.2939, -94.2693, 0.66 ) }
    dend_13 { pt3dadd( 41.822, 49.918, -95.0011, 0.66 ) }
    dend_13 { pt3dadd( 42.0519, 50.6922, -95.8765, 0.29 ) }
    dend_13 { pt3dadd( 42.3741, 51.7324, -96.9524, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 41.6413, 12.433, 6.35753, 0.66 ) }
    dend_8 { pt3dadd( 42.1972, 12.004, 7.92145, 0.66 ) }
    dend_8 { pt3dadd( 42.493, 11.8097, 8.63848, 0.66 ) }
    dend_8 { pt3dadd( 42.8788, 11.5754, 9.47772, 0.66 ) }
    dend_8 { pt3dadd( 43.4391, 11.2713, 10.4529, 0.44 ) }
    dend_8 { pt3dadd( 44.2212, 10.847, 11.8139, 0.66 ) }
    dend_8 { pt3dadd( 45.3349, 10.2427, 13.7521, 1.55 ) }
    dend_8 { pt3dadd( 45.9048, 10.0047, 14.5822, 2.14 ) }
    dend_8 { pt3dadd( 46.3292, 9.85188, 15.151, 2.36 ) }
    dend_8 { pt3dadd( 47.7262, 9.34648, 16.8748, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 96/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 41.6413, 12.433, 6.35753, 0.22 ) }
    dend_7 { pt3dadd( 43.4507, 12.4544, 5.28684, 0.22 ) }
    dend_7 { pt3dadd( 45.0488, 12.4741, 4.51435, 1.47 ) }
    dend_7 { pt3dadd( 45.6606, 12.4869, 4.25172, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 46.1624, 12.4978, 4.05438, 1.84 ) }
    dend_7 { pt3dadd( 46.9139, 12.5127, 3.7837, 0.74 ) }
    dend_7 { pt3dadd( 47.9441, 12.5377, 3.43106, 0.22 ) }
    dend_7 { pt3dadd( 48.8713, 12.546, 3.2704, 0.22 ) }
    dend_7 { pt3dadd( 49.8546, 12.5475, 3.19154, 0.88 ) }
    dend_7 { pt3dadd( 50.4101, 12.5398, 3.16288, 0.88 ) }
    dend_7 { pt3dadd( 51.1139, 12.5095, 3.1844, 0.29 ) }
    dend_7 { pt3dadd( 51.6783, 12.4617, 3.29241, 0.22 ) }
    dend_7 { pt3dadd( 53.1187, 12.253, 3.711, 1.18 ) }
    dend_7 { pt3dadd( 53.5974, 12.1617, 3.89353, 1.47 ) }
    dend_7 { pt3dadd( 54.1025, 12.0348, 4.1165, 0.96 ) }
    dend_7 { pt3dadd( 55.7508, 11.5699, 4.83924, 0.22 ) }
    dend_7 { pt3dadd( 57.7202, 10.9876, 5.69819, 1.69 ) }
    dend_7 { pt3dadd( 58.7756, 10.6639, 6.14068, 2.73 ) }
    dend_7 { pt3dadd( 59.7422, 10.3722, 6.50377, 3.02 ) }
    dend_7 { pt3dadd( 61.6364, 9.82813, 7.11884, 0.15 ) }
    dend_7 { pt3dadd( 62.8438, 9.5169, 7.44566, 0.15 ) }
    dend_7 { pt3dadd( 64.2613, 9.20509, 7.74418, 1.4 ) }
    dend_7 { pt3dadd( 64.843, 9.11005, 7.8414, 1.92 ) }
    dend_7 { pt3dadd( 65.8325, 9.02254, 8.00917, 0.96 ) }
    dend_7 { pt3dadd( 67.6675, 8.9621, 8.29291, 0.22 ) }
    dend_7 { pt3dadd( 69.0946, 8.9916, 8.49921, 0.22 ) }
    dend_7 { pt3dadd( 70.1023, 9.03554, 8.63724, 1.47 ) }
    dend_7 { pt3dadd( 71.3462, 9.09977, 8.76941, 2.5 ) }
    dend_7 { pt3dadd( 73.3239, 9.20874, 8.94162, 0.22 ) }
    dend_7 { pt3dadd( 73.482, 9.21766, 8.95081, 0.44 ) }
    dend_7 { pt3dadd( 74.9777, 9.30423, 8.96793, 0.22 ) }
    dend_7 { pt3dadd( 76.4544, 9.34399, 8.87406, 0.22 ) }
    dend_7 { pt3dadd( 78.2421, 9.34897, 8.63566, 2.36 ) }
    dend_7 { pt3dadd( 78.8921, 9.33885, 8.51629, 2.95 ) }
    dend_7 { pt3dadd( 79.3364, 9.32511, 8.41376, 3.02 ) }
    dend_7 { pt3dadd( 80.472, 9.281, 8.15361, 1.33 ) }
    dend_7 { pt3dadd( 82.5692, 9.18244, 7.6709, 0.22 ) }
    dend_7 { pt3dadd( 84.0505, 9.0985, 7.31795, 0.44 ) }
    dend_7 { pt3dadd( 84.9123, 9.04585, 7.11136, 0.37 ) }
    dend_7 { pt3dadd( 85.6013, 8.99849, 6.95773, 1.47 ) }
    dend_7 { pt3dadd( 86.4135, 8.9331, 6.79191, 1.92 ) }
    dend_7 { pt3dadd( 86.9449, 8.88145, 6.68421, 1.92 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 38/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 24.3874, 21.32, 1.67466, 0.15 ) }
    dend_5 { pt3dadd( 25.0143, 22.017, 2.31108, 0.15 ) }
    dend_5 { pt3dadd( 25.835, 23.2973, 3.45483, 1.4 ) }
    dend_5 { pt3dadd( 26.0645, 23.751, 3.86878, 1.99 ) }
    dend_5 { pt3dadd( 26.5303, 24.8038, 4.79302, 2.21 ) }
    dend_5 { pt3dadd( 26.6639, 25.1308, 5.05598, 2.5 ) }
    dend_5 { pt3dadd( 26.9055, 25.7402, 5.50067, 2.14 ) }
    dend_5 { pt3dadd( 27.4993, 27.6647, 6.67335, 0.66 ) }
    dend_5 { pt3dadd( 27.8126, 28.9594, 7.21296, 0.52 ) }
    dend_5 { pt3dadd( 27.9542, 29.5722, 7.36351, 0.52 ) }
    dend_5 { pt3dadd( 28.1387, 30.4267, 7.40197, 0.44 ) }
    dend_5 { pt3dadd( 28.2843, 31.1363, 7.35854, 0.29 ) }
    dend_5 { pt3dadd( 28.4785, 32.3291, 7.24873, 0.29 ) }
    dend_5 { pt3dadd( 28.6065, 33.3837, 7.12519, 0.59 ) }
    dend_5 { pt3dadd( 28.6446, 33.9956, 7.16198, 0.59 ) }
    dend_5 { pt3dadd( 28.6429, 34.8053, 7.49567, 0.37 ) }
    dend_5 { pt3dadd( 28.6162, 35.4983, 7.97562, 0.37 ) }
    dend_5 { pt3dadd( 28.5534, 37.0756, 9.29098, 2.14 ) }
    dend_5 { pt3dadd( 28.5382, 37.6782, 9.84701, 2.95 ) }
    dend_5 { pt3dadd( 28.5619, 38.7584, 10.9035, 3.17 ) }
    dend_5 { pt3dadd( 28.6626, 39.9108, 12.0395, 3.02 ) }
    dend_5 { pt3dadd( 28.9235, 41.0719, 13.189, 0.66 ) }
    dend_5 { pt3dadd( 29.0949, 41.5041, 13.5937, 0.52 ) }
    dend_5 { pt3dadd( 29.4128, 42.0259, 14.0256, 0.81 ) }
    dend_5 { pt3dadd( 29.8249, 42.5648, 14.4125, 0.81 ) }
    dend_5 { pt3dadd( 30.2135, 42.9944, 14.6744, 0.52 ) }
    dend_5 { pt3dadd( 31.6799, 44.4134, 15.4917, 0.44 ) }
    dend_5 { pt3dadd( 32.486, 45.1732, 15.9306, 1.47 ) }
    dend_5 { pt3dadd( 33.243, 45.9336, 16.3605, 2.65 ) }
    dend_5 { pt3dadd( 33.6945, 46.4281, 16.6242, 3.17 ) }
    dend_5 { pt3dadd( 34.0128, 46.8436, 16.8293, 2.95 ) }
    dend_5 { pt3dadd( 35.0127, 48.3523, 17.4871, 0.96 ) }
    dend_5 { pt3dadd( 35.5889, 49.3771, 17.8474, 0.29 ) }
    dend_5 { pt3dadd( 35.9038, 50.0096, 18.0242, 0.29 ) }
    dend_5 { pt3dadd( 36.1911, 50.656, 18.1651, 0.29 ) }
    dend_5 { pt3dadd( 36.9135, 52.3641, 18.4473, 1.55 ) }
    dend_5 { pt3dadd( 37.1388, 52.9354, 18.5266, 2.06 ) }
    dend_5 { pt3dadd( 37.4099, 53.6797, 18.6124, 1.99 ) }
    dend_5 { pt3dadd( 38.1393, 55.6888, 18.8437, 0.22 ) }
    dend_5 { pt3dadd( 38.6392, 57.0945, 19.0178, 0.22 ) }
    dend_5 { pt3dadd( 38.9291, 57.9492, 19.1206, 0.22 ) }
    dend_5 { pt3dadd( 39.685, 60.2308, 19.3661, 2.36 ) }
    dend_5 { pt3dadd( 39.9895, 61.1886, 19.467, 2.95 ) }
    dend_5 { pt3dadd( 40.1998, 61.8739, 19.5309, 3.17 ) }
    dend_5 { pt3dadd( 40.911, 64.2592, 19.7273, 0.29 ) }
    dend_5 { pt3dadd( 41.2085, 65.1894, 19.7754, 0.22 ) }
    dend_5 { pt3dadd( 41.6239, 66.3839, 19.6692, 0.22 ) }
    dend_5 { pt3dadd( 41.8863, 67.0935, 19.4924, 1.25 ) }
    dend_5 { pt3dadd( 42.2918, 68.2777, 19.1071, 1.92 ) }
    dend_5 { pt3dadd( 42.4477, 68.7831, 18.9111, 2.65 ) }
    dend_5 { pt3dadd( 42.6558, 69.4883, 18.6271, 2.5 ) }
    dend_5 { pt3dadd( 43.5536, 72.5072, 17.4984, 0.22 ) }
    dend_5 { pt3dadd( 43.9368, 73.7208, 17.1123, 0.22 ) }
    dend_5 { pt3dadd( 44.5275, 75.5144, 16.685, 0.22 ) }
    dend_5 { pt3dadd( 44.7889, 76.2709, 16.5598, 0.22 ) }
    dend_5 { pt3dadd( 45.3957, 78.0097, 16.403, 1.99 ) }
    dend_5 { pt3dadd( 45.5603, 78.4829, 16.3972, 2.5 ) }
    dend_5 { pt3dadd( 46.2891, 80.4083, 16.538, 0.22 ) }
    dend_5 { pt3dadd( 46.8348, 81.7442, 16.6359, 0.22 ) }
    dend_5 { pt3dadd( 47.1209, 82.4098, 16.684, 0.22 ) }
    dend_5 { pt3dadd( 47.7423, 83.8911, 16.7815, 2.28 ) }
    dend_5 { pt3dadd( 48.6363, 86.203, 16.8472, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( 49.1602, 87.6466, 16.8822, 1.47 ) }
    dend_5 { pt3dadd( 49.3585, 88.2477, 16.8894, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 2/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 24.3874, 21.32, 1.67466, 0.96 ) }
    dend_4 { pt3dadd( 23.9672, 22.0812, 1.31391, 0.96 ) }
    dend_4 { pt3dadd( 23.5393, 23.0975, 0.886601, 0.81 ) }
    dend_4 { pt3dadd( 23.0652, 24.6271, 0.313991, 0.52 ) }
    dend_4 { pt3dadd( 22.8277, 25.7974, -0.0727048, 0.52 ) }
    dend_4 { pt3dadd( 22.6743, 27.1284, -0.513966, 0.52 ) }
    dend_4 { pt3dadd( 22.6016, 28.3364, -0.918731, 0.66 ) }
    dend_4 { pt3dadd( 22.6667, 29.7471, -1.41028, 0.96 ) }
    dend_4 { pt3dadd( 22.839, 30.6611, -1.71767, 1.11 ) }
    dend_4 { pt3dadd( 23.1764, 31.7019, -2.00228, 1.25 ) }
    dend_4 { pt3dadd( 23.6523, 32.9447, -2.26588, 1.25 ) }
    dend_4 { pt3dadd( 23.765, 33.2502, -2.30829, 1.33 ) }
    dend_4 { pt3dadd( 24.0467, 34.1776, -2.39198, 0.88 ) }
    dend_4 { pt3dadd( 24.2591, 35.2913, -2.4336, 0.59 ) }
    dend_4 { pt3dadd( 24.3705, 36.6036, -2.38783, 0.52 ) }
    dend_4 { pt3dadd( 24.3703, 37.9201, -2.27608, 0.52 ) }
    dend_4 { pt3dadd( 24.2815, 39.5172, -2.0664, 1.25 ) }
    dend_4 { pt3dadd( 24.1873, 40.4928, -1.93388, 1.77 ) }
    dend_4 { pt3dadd( 24.0059, 41.7416, -1.75735, 1.77 ) }
    dend_4 { pt3dadd( 23.7206, 43.2784, -1.49663, 1.47 ) }
    dend_4 { pt3dadd( 23.3408, 45.0822, -1.10618, 1.99 ) }
    dend_4 { pt3dadd( 23.1711, 45.8496, -0.905271, 2.58 ) }
    dend_4 { pt3dadd( 22.993, 46.6022, -0.671765, 2.87 ) }
    dend_4 { pt3dadd( 22.8314, 47.2139, -0.449403, 2.87 ) }
    dend_4 { pt3dadd( 22.4372, 48.5413, 0.119417, 2.06 ) }
    dend_4 { pt3dadd( 21.9836, 49.7583, 0.738042, 1.25 ) }
    dend_4 { pt3dadd( 21.5835, 50.6843, 1.25463, 0.81 ) }
    dend_4 { pt3dadd( 21.2054, 51.5263, 1.70835, 0.59 ) }
    dend_4 { pt3dadd( 20.7706, 52.4829, 2.18253, 0.29 ) }
    dend_4 { pt3dadd( 20.568, 52.9427, 2.38103, 0.29 ) }
    dend_4 { pt3dadd( 20.2383, 53.7202, 2.67206, 0.44 ) }
    dend_4 { pt3dadd( 19.7821, 54.9419, 3.08606, 0.59 ) }
    dend_4 { pt3dadd( 19.4627, 55.9441, 3.45292, 1.11 ) }
    dend_4 { pt3dadd( 19.2732, 56.7159, 3.78069, 1.33 ) }
    dend_4 { pt3dadd( 19.1867, 57.2762, 4.08373, 1.47 ) }
    dend_4 { pt3dadd( 19.1395, 58.0243, 4.58986, 1.33 ) }
    dend_4 { pt3dadd( 19.1497, 58.6968, 5.17663, 0.81 ) }
    dend_4 { pt3dadd( 19.1965, 59.1734, 5.6998, 0.59 ) }
    dend_4 { pt3dadd( 19.3001, 59.9003, 6.64163, 0.37 ) }
    dend_4 { pt3dadd( 19.3878, 60.7489, 7.85425, 0.37 ) }
    dend_4 { pt3dadd( 19.4281, 61.5177, 8.98667, 1.47 ) }
    dend_4 { pt3dadd( 19.4228, 61.9901, 9.65601, 1.77 ) }
    dend_4 { pt3dadd( 19.3761, 62.6791, 10.5907, 1.77 ) }
    dend_4 { pt3dadd( 19.2894, 63.4403, 11.5591, 1.4 ) }
    dend_4 { pt3dadd( 19.0682, 64.6402, 12.917, 0.29 ) }
    dend_4 { pt3dadd( 19.0016, 64.8988, 13.156, 0.29 ) }
    dend_4 { pt3dadd( 18.7133, 65.931, 13.9221, 1.03 ) }
    dend_4 { pt3dadd( 18.5788, 66.4272, 14.2344, 1.18 ) }
    dend_4 { pt3dadd( 18.4927, 66.7633, 14.4167, 1.18 ) }
    dend_4 { pt3dadd( 18.2938, 67.6771, 14.8586, 0.22 ) }
    dend_4 { pt3dadd( 18.1814, 68.4943, 15.2084, 0.22 ) }
    dend_4 { pt3dadd( 17.9983, 70.4002, 15.9875, 2.43 ) }
    dend_4 { pt3dadd( 17.9431, 71.2234, 16.3078, 2.65 ) }
    dend_4 { pt3dadd( 17.9176, 71.7821, 16.514, 2.8 ) }
    dend_4 { pt3dadd( 17.9049, 72.1646, 16.6346, 2.8 ) }
    dend_4 { pt3dadd( 17.839, 74.5097, 17.1592, 0.37 ) }
    dend_4 { pt3dadd( 17.7972, 75.5864, 17.2778, 0.29 ) }
    dend_4 { pt3dadd( 17.7352, 76.6719, 17.2813, 0.29 ) }
    dend_4 { pt3dadd( 17.6376, 78.0672, 17.1774, 0.88 ) }
    dend_4 { pt3dadd( 17.5012, 79.7122, 17.0312, 1.47 ) }
    dend_4 { pt3dadd( 17.3534, 81.1772, 16.9096, 2.28 ) }
    dend_4 { pt3dadd( 17.1978, 82.5264, 16.8596, 2.5 ) }
    dend_4 { pt3dadd( 17.1093, 83.3163, 16.8832, 2.8 ) }
    dend_4 { pt3dadd( 16.9247, 85.2041, 17.1458, 0.88 ) }
    dend_4 { pt3dadd( 16.7803, 86.8678, 17.6328, 0.44 ) }
    dend_4 { pt3dadd( 16.6459, 88.6869, 18.4501, 0.44 ) }
    dend_4 { pt3dadd( 16.5369, 90.321, 19.3935, 0.37 ) }
    dend_4 { pt3dadd( 16.4591, 91.552, 20.2309, 0.37 ) }
    dend_4 { pt3dadd( 16.3415, 93.1727, 21.4443, 1.55 ) }
    dend_4 { pt3dadd( 16.1328, 94.8975, 22.6408, 3.09 ) }
    dend_4 { pt3dadd( 15.9828, 95.7662, 23.1444, 3.68 ) }
    dend_4 { pt3dadd( 15.7239, 96.8663, 23.6272, 4.13 ) }
    dend_4 { pt3dadd( 15.4991, 97.6195, 23.8415, 4.13 ) }
    dend_4 { pt3dadd( 15.0294, 98.9586, 24.0536, 3.76 ) }
    dend_4 { pt3dadd( 13.4548, 102.892, 24.2607, 0.44 ) }
    dend_4 { pt3dadd( 12.846, 104.345, 24.2121, 0.37 ) }
    dend_4 { pt3dadd( 12.0648, 106.175, 24.0621, 1.03 ) }
    dend_4 { pt3dadd( 11.578, 107.314, 23.9264, 1.11 ) }
    dend_4 { pt3dadd( 11.164, 108.292, 23.7898, 1.11 ) }
    dend_4 { pt3dadd( 10.5635, 109.797, 23.5602, 0.22 ) }
    dend_4 { pt3dadd( 10.182, 111.056, 23.4818, 0.74 ) }
    dend_4 { pt3dadd( 10.0742, 111.58, 23.4932, 0.74 ) }
    dend_4 { pt3dadd( 10.0011, 112.169, 23.5641, 0.44 ) }
    dend_4 { pt3dadd( 9.95799, 112.658, 23.668, 0.22 ) }
    dend_4 { pt3dadd( 9.84599, 114.069, 24.0441, 0.22 ) }
    dend_4 { pt3dadd( 9.62023, 116.824, 24.8687, 3.39 ) }
    dend_4 { pt3dadd( 9.48078, 118.247, 25.3393, 4.13 ) }
    dend_4 { pt3dadd( 9.41875, 118.858, 25.5512, 4.35 ) }
    dend_4 { pt3dadd( 9.06804, 122.376, 26.7375, 0.29 ) }
    dend_4 { pt3dadd( 8.98568, 123.271, 27.0214, 0.52 ) }
    dend_4 { pt3dadd( 8.88899, 124.324, 27.3365, 0.59 ) }
    dend_4 { pt3dadd( 8.82123, 125.007, 27.4974, 0.59 ) }
    dend_4 { pt3dadd( 8.67872, 126.434, 27.7606, 0.29 ) }
    dend_4 { pt3dadd( 8.55691, 127.727, 27.9561, 0.29 ) }
    dend_4 { pt3dadd( 8.39691, 129.511, 28.1336, 1.62 ) }
    dend_4 { pt3dadd( 8.24155, 131.145, 28.2431, 2.43 ) }
    dend_4 { pt3dadd( 8.1614, 132.025, 28.3015, 2.43 ) }
    dend_4 { pt3dadd( 7.97986, 134.123, 28.4634, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_4 { pt3dadd( 7.89972, 135.125, 28.5601, 0.29 ) }
    dend_4 { pt3dadd( 7.84704, 136.016, 28.6939, 0.22 ) }
    dend_4 { pt3dadd( 7.82053, 136.78, 28.8247, 0.22 ) }
    dend_4 { pt3dadd( 7.78945, 138.409, 29.0988, 0.22 ) }
    dend_4 { pt3dadd( 7.76801, 140.265, 29.4334, 1.84 ) }
    dend_4 { pt3dadd( 7.75812, 141.188, 29.5753, 2.8 ) }
    dend_4 { pt3dadd( 7.74272, 142.089, 29.6953, 2.87 ) }
    dend_4 { pt3dadd( 7.71395, 143.201, 29.8311, 2.28 ) }
    dend_4 { pt3dadd( 7.58411, 145.605, 30.0568, 0.29 ) }
    dend_4 { pt3dadd( 7.50852, 146.386, 30.0827, 0.22 ) }
    dend_4 { pt3dadd( 7.34483, 147.78, 30.0881, 0.81 ) }
    dend_4 { pt3dadd( 7.26664, 148.371, 30.0851, 0.96 ) }
    dend_4 { pt3dadd( 7.17186, 149.066, 30.086, 0.37 ) }
    dend_4 { pt3dadd( 7.06694, 149.934, 30.1609, 0.15 ) }
    dend_4 { pt3dadd( 6.94974, 151.04, 30.3454, 0.29 ) }
    dend_4 { pt3dadd( 6.88213, 151.731, 30.508, 0.29 ) }
    dend_4 { pt3dadd( 6.79359, 152.783, 30.8285, 0.15 ) }
    dend_4 { pt3dadd( 6.75747, 153.349, 31.0109, 0.15 ) }
    dend_4 { pt3dadd( 6.68365, 155.244, 31.6595, 1.84 ) }
    dend_4 { pt3dadd( 6.67014, 155.981, 31.9325, 2.36 ) }
    dend_4 { pt3dadd( 6.66318, 156.733, 32.2299, 2.5 ) }
    dend_4 { pt3dadd( 6.64809, 157.842, 32.672, 1.84 ) }
    dend_4 { pt3dadd( 6.62433, 159.665, 33.4382, 0.22 ) }
    dend_4 { pt3dadd( 6.61067, 160.35, 33.7295, 0.22 ) }
    dend_4 { pt3dadd( 6.5921, 161.792, 34.3158, 1.11 ) }
    dend_4 { pt3dadd( 6.59009, 162.253, 34.5134, 1.25 ) }
    dend_4 { pt3dadd( 6.59079, 162.71, 34.714, 0.66 ) }
    dend_4 { pt3dadd( 6.60673, 164.191, 35.4037, 0.22 ) }
    dend_4 { pt3dadd( 6.67319, 165.274, 35.8948, 0.22 ) }
    dend_4 { pt3dadd( 6.80861, 166.685, 36.4972, 0.22 ) }
    dend_4 { pt3dadd( 7.11971, 169.155, 37.5041, 2.43 ) }
    dend_4 { pt3dadd( 7.24238, 170.08, 37.8657, 2.87 ) }
    dend_4 { pt3dadd( 7.28159, 170.378, 37.976, 2.87 ) }
    dend_4 { pt3dadd( 7.66738, 173.453, 39.1266, 0.22 ) }
    dend_4 { pt3dadd( 7.76888, 174.444, 39.5167, 0.74 ) }
    dend_4 { pt3dadd( 7.80486, 175.0, 39.7429, 0.74 ) }
    dend_4 { pt3dadd( 7.82883, 176.385, 40.2984, 0.22 ) }
    dend_4 { pt3dadd( 7.7658, 177.327, 40.6667, 0.22 ) }
    dend_4 { pt3dadd( 7.44175, 179.324, 41.3937, 2.14 ) }
    dend_4 { pt3dadd( 7.17673, 180.218, 41.6962, 2.87 ) }
    dend_4 { pt3dadd( 7.01325, 180.663, 41.8286, 3.09 ) }
    dend_4 { pt3dadd( 6.61958, 181.628, 42.0531, 2.43 ) }
    dend_4 { pt3dadd( 5.72205, 183.776, 42.4287, 0.37 ) }
    dend_4 { pt3dadd( 5.3349, 184.751, 42.5521, 0.29 ) }
    dend_4 { pt3dadd( 5.01288, 185.647, 42.6277, 0.37 ) }
    dend_4 { pt3dadd( 4.75194, 186.58, 42.7372, 0.29 ) }
    dend_4 { pt3dadd( 4.56296, 187.556, 42.899, 0.29 ) }
    dend_4 { pt3dadd( 4.43268, 188.669, 43.1535, 0.37 ) }
    dend_4 { pt3dadd( 4.39383, 189.545, 43.4254, 0.59 ) }
    dend_4 { pt3dadd( 4.36308, 190.262, 43.6768, 0.59 ) }
    dend_4 { pt3dadd( 4.29621, 191.422, 44.0993, 0.22 ) }
    dend_4 { pt3dadd( 4.18559, 192.64, 44.542, 1.33 ) }
    dend_4 { pt3dadd( 4.05415, 193.517, 44.8596, 1.62 ) }
    dend_4 { pt3dadd( 3.91299, 194.277, 45.1051, 1.25 ) }
    dend_4 { pt3dadd( 3.5203, 196.221, 45.6807, 0.29 ) }
    dend_4 { pt3dadd( 3.36255, 197.0, 45.8991, 0.52 ) }
    dend_4 { pt3dadd( 3.25329, 197.597, 46.0674, 0.52 ) }
    dend_4 { pt3dadd( 3.05187, 198.854, 46.3433, 0.22 ) }
    dend_4 { pt3dadd( 2.83581, 200.508, 46.6311, 1.92 ) }
    dend_4 { pt3dadd( 2.72279, 201.597, 46.7862, 2.73 ) }
    dend_4 { pt3dadd( 2.68162, 202.123, 46.8474, 2.95 ) }
    dend_4 { pt3dadd( 2.63276, 202.855, 46.9229, 3.24 ) }
    dend_4 { pt3dadd( 2.42892, 206.436, 47.2239, 0.29 ) }
    dend_4 { pt3dadd( 2.39461, 207.242, 47.2794, 0.29 ) }
    dend_4 { pt3dadd( 2.38068, 208.528, 47.3648, 0.88 ) }
    dend_4 { pt3dadd( 2.39645, 209.42, 47.4268, 0.88 ) }
    dend_4 { pt3dadd( 2.42402, 210.217, 47.4728, 0.88 ) }
    dend_4 { pt3dadd( 2.57744, 211.838, 47.7004, 0.29 ) }
    dend_4 { pt3dadd( 2.75809, 213.112, 47.9953, 0.29 ) }
    dend_4 { pt3dadd( 3.13465, 215.664, 48.6647, 2.43 ) }
    dend_4 { pt3dadd( 3.23702, 216.32, 48.8529, 3.02 ) }
    dend_4 { pt3dadd( 3.4111, 217.306, 49.1563, 3.24 ) }
    dend_4 { pt3dadd( 4.20671, 221.387, 50.5673, 0.22 ) }
    dend_4 { pt3dadd( 4.48797, 222.724, 51.0883, 0.52 ) }
    dend_4 { pt3dadd( 4.60535, 223.271, 51.3176, 0.52 ) }
    dend_4 { pt3dadd( 4.79384, 224.068, 51.6561, 0.22 ) }
    dend_4 { pt3dadd( 4.95683, 224.691, 51.9033, 0.22 ) }
    dend_4 { pt3dadd( 5.39238, 226.257, 52.4758, 1.33 ) }
    dend_4 { pt3dadd( 5.57787, 226.922, 52.6425, 1.69 ) }
    dend_4 { pt3dadd( 5.73254, 227.473, 52.7825, 1.69 ) }
    dend_4 { pt3dadd( 6.26046, 229.569, 53.3183, 0.22 ) }
    dend_4 { pt3dadd( 6.43109, 230.439, 53.5954, 0.66 ) }
    dend_4 { pt3dadd( 6.49701, 230.91, 53.7713, 0.66 ) }
    dend_4 { pt3dadd( 6.5748, 231.652, 54.0846, 0.66 ) }
    dend_4 { pt3dadd( 6.6516, 232.759, 54.6194, 0.22 ) }
    dend_4 { pt3dadd( 6.66587, 233.308, 54.874, 0.22 ) }
    dend_4 { pt3dadd( 6.61892, 235.659, 56.0204, 1.99 ) }
    dend_4 { pt3dadd( 6.59918, 236.36, 56.3502, 2.65 ) }
    dend_4 { pt3dadd( 6.5887, 236.882, 56.5822, 2.8 ) }
    dend_4 { pt3dadd( 6.59014, 237.805, 56.9724, 2.14 ) }
    dend_4 { pt3dadd( 6.73865, 239.91, 57.9339, 0.22 ) }
    dend_4 { pt3dadd( 6.93703, 241.328, 58.5958, 0.22 ) }
    dend_4 { pt3dadd( 7.23723, 242.841, 59.2809, 1.25 ) }
    dend_4 { pt3dadd( 7.36484, 243.393, 59.5427, 1.47 ) }
    dend_4 { pt3dadd( 7.50247, 243.923, 59.832, 1.25 ) }
    dend_4 { pt3dadd( 8.05467, 245.792, 61.0734, 0.52 ) }
    dend_4 { pt3dadd( 8.27846, 246.509, 61.6358, 0.29 ) }
    dend_4 { pt3dadd( 8.47685, 247.198, 62.1726, 0.29 ) }
    dend_4 { pt3dadd( 8.70299, 247.976, 62.762, 0.29 ) }
    dend_4 { pt3dadd( 9.17738, 249.717, 63.9746, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( 9.37094, 250.569, 64.5143, 2.28 ) }
    dend_4 { pt3dadd( 9.48146, 251.281, 64.9199, 2.5 ) }
    dend_4 { pt3dadd( 9.78889, 253.818, 66.4433, 0.29 ) }
    dend_4 { pt3dadd( 9.91879, 255.066, 67.2137, 0.22 ) }
    dend_4 { pt3dadd( 10.0001, 256.046, 67.834, 0.22 ) }
    dend_4 { pt3dadd( 10.024, 256.69, 68.2518, 0.22 ) }
    dend_4 { pt3dadd( 10.0531, 257.761, 69.0537, 0.22 ) }
    dend_4 { pt3dadd( 10.0674, 259.55, 70.5622, 1.77 ) }
    dend_4 { pt3dadd( 10.0653, 260.121, 71.0798, 2.36 ) }
    dend_4 { pt3dadd( 10.0843, 260.682, 71.6088, 2.65 ) }
    dend_4 { pt3dadd( 10.1754, 261.477, 72.3648, 2.8 ) }
    dend_4 { pt3dadd( 10.7972, 264.041, 74.6752, 0.29 ) }
    dend_4 { pt3dadd( 11.0631, 264.78, 75.2938, 0.22 ) }
    dend_4 { pt3dadd( 11.4377, 265.625, 75.9316, 0.22 ) }
    dend_4 { pt3dadd( 11.782, 266.224, 76.3803, 0.22 ) }
    dend_4 { pt3dadd( 12.158, 266.747, 76.7461, 0.22 ) }
    dend_4 { pt3dadd( 13.4032, 268.173, 77.6482, 1.47 ) }
    dend_4 { pt3dadd( 13.7265, 268.486, 77.834, 1.99 ) }
    dend_4 { pt3dadd( 14.1309, 268.843, 78.0666, 1.99 ) }
    dend_4 { pt3dadd( 16.0929, 270.504, 79.2708, 0.15 ) }
    dend_4 { pt3dadd( 16.8153, 271.106, 79.7313, 0.29 ) }
    dend_4 { pt3dadd( 17.1451, 271.349, 79.9268, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 30.5657, -23.9194, -34.3875, 0.22 ) }
    dend_16 { pt3dadd( 30.5041, -26.5202, -35.6416, 0.22 ) }
    dend_16 { pt3dadd( 30.4858, -27.1724, -35.9387, 1.11 ) }
    dend_16 { pt3dadd( 30.4756, -27.528, -36.1038, 1.11 ) }
    dend_16 { pt3dadd( 30.4602, -28.6684, -36.6015, 0.22 ) }
    dend_16 { pt3dadd( 30.4658, -31.1749, -37.6302, 0.22 ) }
    dend_16 { pt3dadd( 30.4927, -32.2686, -38.0969, 2.06 ) }
    dend_16 { pt3dadd( 30.5459, -33.0107, -38.3914, 2.65 ) }
    dend_16 { pt3dadd( 30.6132, -33.6362, -38.6523, 2.65 ) }
    dend_16 { pt3dadd( 30.7729, -34.7837, -39.1295, 1.03 ) }
    dend_16 { pt3dadd( 30.9278, -35.6077, -39.4665, 0.22 ) }
    dend_16 { pt3dadd( 31.307, -37.0312, -39.9577, 0.52 ) }
    dend_16 { pt3dadd( 31.417, -37.3671, -40.0626, 0.52 ) }
    dend_16 { pt3dadd( 31.5476, -37.7142, -40.1654, 0.29 ) }
    dend_16 { pt3dadd( 31.823, -38.4875, -40.4228, 1.03 ) }
    dend_16 { pt3dadd( 32.0004, -39.028, -40.624, 0.96 ) }
    dend_16 { pt3dadd( 32.1932, -39.7295, -40.928, 0.59 ) }
    dend_16 { pt3dadd( 32.3267, -40.4263, -41.2925, 1.84 ) }
    dend_16 { pt3dadd( 32.4102, -40.9552, -41.6147, 2.36 ) }
    dend_16 { pt3dadd( 32.5992, -42.496, -42.7014, 0.88 ) }
    dend_16 { pt3dadd( 32.678, -43.0085, -43.0979, 0.29 ) }
    dend_16 { pt3dadd( 32.8703, -44.1075, -43.9557, 0.29 ) }
    dend_16 { pt3dadd( 33.171, -45.6147, -45.1405, 1.69 ) }
    dend_16 { pt3dadd( 33.2741, -46.0463, -45.4722, 2.21 ) }
    dend_16 { pt3dadd( 33.4886, -46.8228, -46.0424, 2.21 ) }
    dend_16 { pt3dadd( 34.5413, -50.1674, -48.3583, 0.44 ) }
    dend_16 { pt3dadd( 34.7051, -50.6508, -48.6751, 0.74 ) }
    dend_16 { pt3dadd( 34.7531, -50.7821, -48.7528, 0.74 ) }
    dend_16 { pt3dadd( 35.0472, -51.5348, -49.1807, 0.22 ) }
    dend_16 { pt3dadd( 35.4642, -52.6347, -49.7875, 0.88 ) }
    dend_16 { pt3dadd( 35.5407, -52.8431, -49.8997, 0.88 ) }
    dend_16 { pt3dadd( 35.8635, -53.8758, -50.5045, 0.22 ) }
    dend_16 { pt3dadd( 36.0762, -54.6341, -50.951, 0.22 ) }
    dend_16 { pt3dadd( 36.3995, -55.984, -51.7386, 1.84 ) }
    dend_16 { pt3dadd( 36.4913, -56.4769, -52.0214, 2.21 ) }
    dend_16 { pt3dadd( 36.6105, -57.1248, -52.382, 2.21 ) }
    dend_16 { pt3dadd( 37.0589, -59.4597, -53.6961, 0.29 ) }
    dend_16 { pt3dadd( 37.2334, -60.3889, -54.2411, 0.15 ) }
    dend_16 { pt3dadd( 37.4172, -61.4343, -54.8477, 0.96 ) }
    dend_16 { pt3dadd( 37.6483, -62.8831, -55.6858, 0.22 ) }
    dend_16 { pt3dadd( 38.0167, -65.5861, -57.3278, 0.22 ) }
    dend_16 { pt3dadd( 38.1755, -67.0801, -58.2476, 2.21 ) }
    dend_16 { pt3dadd( 38.267, -68.2565, -59.0068, 2.8 ) }
    dend_16 { pt3dadd( 38.3723, -70.1985, -60.3295, 0.22 ) }
    dend_16 { pt3dadd( 38.3986, -71.1323, -60.9629, 1.03 ) }
    dend_16 { pt3dadd( 38.3856, -73.7004, -62.7067, 0.22 ) }
    dend_16 { pt3dadd( 38.3118, -74.9813, -63.5777, 1.77 ) }
    dend_16 { pt3dadd( 38.2389, -75.9347, -64.2156, 2.06 ) }
    dend_16 { pt3dadd( 38.0852, -77.9443, -65.5434, 0.22 ) }
    dend_16 { pt3dadd( 38.0237, -78.7582, -66.0969, 1.33 ) }
    dend_16 { pt3dadd( 37.958, -79.733, -66.741, 1.62 ) }
    dend_16 { pt3dadd( 37.8353, -81.9281, -68.0815, 0.22 ) }
    dend_16 { pt3dadd( 37.8168, -82.305, -68.3031, 0.74 ) }
    dend_16 { pt3dadd( 37.7912, -82.725, -68.5447, 0.74 ) }
    dend_16 { pt3dadd( 37.7251, -83.8716, -69.2136, 0.22 ) }
    dend_16 { pt3dadd( 37.7054, -84.6572, -69.6495, 0.22 ) }
    dend_16 { pt3dadd( 37.7098, -85.3871, -70.0029, 1.03 ) }
    dend_16 { pt3dadd( 37.7399, -86.0625, -70.2843, 1.11 ) }
    dend_16 { pt3dadd( 37.8486, -87.6892, -71.0209, 0.22 ) }
    dend_16 { pt3dadd( 37.9761, -89.1169, -71.611, 0.22 ) }
    dend_16 { pt3dadd( 38.1057, -90.2835, -72.064, 1.92 ) }
    dend_16 { pt3dadd( 38.164, -90.7763, -72.2487, 2.58 ) }
    dend_16 { pt3dadd( 38.2197, -91.1999, -72.403, 2.58 ) }
    dend_16 { pt3dadd( 38.6377, -94.1933, -73.3947, 0.29 ) }
    dend_16 { pt3dadd( 38.9832, -96.5404, -74.1176, 0.29 ) }
    dend_16 { pt3dadd( 39.0753, -97.1653, -74.3341, 1.03 ) }
    dend_16 { pt3dadd( 39.1899, -97.9476, -74.6393, 1.25 ) }
    dend_16 { pt3dadd( 39.7066, -101.206, -75.9372, 0.22 ) }
    dend_16 { pt3dadd( 39.8876, -102.123, -76.362, 0.74 ) }
    dend_16 { pt3dadd( 39.9701, -102.461, -76.5307, 0.74 ) }
    dend_16 { pt3dadd( 40.4448, -104.178, -77.5251, 0.22 ) }
    dend_16 { pt3dadd( 40.6956, -105.013, -78.0283, 1.69 ) }
    dend_16 { pt3dadd( 40.8957, -105.607, -78.4033, 2.5 ) }
    dend_16 { pt3dadd( 42.4138, -109.655, -80.9689, 0.22 ) }
    dend_16 { pt3dadd( 42.6732, -110.311, -81.3694, 0.74 ) }
    dend_16 { pt3dadd( 42.9232, -110.906, -81.6932, 0.74 ) }
    dend_16 { pt3dadd( 43.2083, -111.539, -81.9966, 0.22 ) }
    dend_16 { pt3dadd( 44.3571, -113.971, -83.0777, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_16 { pt3dadd( 44.883, -115.02, -83.4829, 1.99 ) }
    dend_16 { pt3dadd( 45.1634, -115.542, -83.628, 2.21 ) }
    dend_16 { pt3dadd( 45.9069, -116.944, -83.9972, 0.22 ) }
    dend_16 { pt3dadd( 46.3719, -117.813, -84.2111, 0.96 ) }
    dend_16 { pt3dadd( 46.5716, -118.198, -84.2981, 1.18 ) }
    dend_16 { pt3dadd( 47.4906, -120.031, -84.6635, 0.22 ) }
    dend_16 { pt3dadd( 47.767, -120.612, -84.7906, 0.22 ) }
    dend_16 { pt3dadd( 48.1373, -121.393, -84.9686, 0.81 ) }
    dend_16 { pt3dadd( 48.3709, -121.88, -85.0985, 0.81 ) }
    dend_16 { pt3dadd( 49.3174, -123.789, -85.8597, 0.22 ) }
    dend_16 { pt3dadd( 49.6794, -124.493, -86.2204, 0.44 ) }
    dend_16 { pt3dadd( 49.9372, -124.979, -86.5128, 0.15 ) }
    dend_16 { pt3dadd( 50.5015, -125.959, -87.1686, 1.11 ) }
    dend_16 { pt3dadd( 51.2657, -127.187, -88.091, 0.22 ) }
    dend_16 { pt3dadd( 52.6243, -129.233, -89.7282, 1.03 ) }
    dend_16 { pt3dadd( 53.0574, -129.825, -90.2584, 0.81 ) }
    dend_16 { pt3dadd( 53.3346, -130.195, -90.6633, 0.52 ) }
    dend_16 { pt3dadd( 53.6086, -130.557, -91.1242, 0.81 ) }
    dend_16 { pt3dadd( 53.8236, -130.831, -91.5221, 0.81 ) }
    dend_16 { pt3dadd( 54.3119, -131.482, -92.4006, 0.22 ) }
    dend_16 { pt3dadd( 54.8282, -132.216, -93.3084, 0.96 ) }
    dend_16 { pt3dadd( 56.3208, -134.471, -96.0599, 0.37 ) }
    dend_16 { pt3dadd( 57.1167, -135.755, -97.5737, 1.4 ) }
    dend_16 { pt3dadd( 57.7441, -136.847, -98.7984, 1.03 ) }
    dend_16 { pt3dadd( 58.4996, -138.259, -100.312, 0.22 ) }
    dend_16 { pt3dadd( 58.7671, -138.811, -100.9, 0.96 ) }
    dend_16 { pt3dadd( 58.9703, -139.268, -101.347, 0.96 ) }
    dend_16 { pt3dadd( 59.2643, -139.984, -101.956, 0.59 ) }
    dend_16 { pt3dadd( 59.6089, -140.852, -102.701, 1.18 ) }
    dend_16 { pt3dadd( 59.9481, -141.669, -103.422, 1.33 ) }
    dend_16 { pt3dadd( 61.4186, -144.847, -106.325, 0.22 ) }
    dend_16 { pt3dadd( 61.6326, -145.269, -106.696, 0.88 ) }
    dend_16 { pt3dadd( 61.8191, -145.601, -106.972, 0.88 ) }
    dend_16 { pt3dadd( 62.6733, -146.95, -108.051, 0.22 ) }
    dend_16 { pt3dadd( 63.7877, -148.36, -109.092, 0.22 ) }
    dend_16 { pt3dadd( 64.4516, -149.038, -109.532, 1.18 ) }
    dend_16 { pt3dadd( 64.8309, -149.347, -109.707, 1.47 ) }
    dend_16 { pt3dadd( 65.579, -149.803, -110.052, 0.15 ) }
    dend_16 { pt3dadd( 66.4678, -150.241, -110.513, 0.44 ) }
    dend_16 { pt3dadd( 68.662, -151.116, -111.697, 0.22 ) }
    dend_16 { pt3dadd( 69.3173, -151.345, -112.098, 0.74 ) }
    dend_16 { pt3dadd( 69.7659, -151.493, -112.404, 0.74 ) }
    dend_16 { pt3dadd( 73.5871, -152.691, -115.235, 0.29 ) }
    dend_16 { pt3dadd( 75.3295, -153.213, -116.585, 1.03 ) }
    dend_16 { pt3dadd( 75.7173, -153.321, -116.895, 1.03 ) }
    dend_16 { pt3dadd( 77.2774, -153.775, -118.128, 0.29 ) }
    dend_16 { pt3dadd( 78.0459, -154.028, -118.704, 0.74 ) }
    dend_16 { pt3dadd( 79.2104, -154.474, -119.498, 0.22 ) }
    dend_16 { pt3dadd( 80.2933, -154.978, -120.12, 1.84 ) }
    dend_16 { pt3dadd( 80.8425, -155.258, -120.361, 1.84 ) }
    dend_16 { pt3dadd( 83.2692, -156.61, -121.252, 0.15 ) }
    dend_16 { pt3dadd( 84.0452, -157.095, -121.441, 0.74 ) }
    dend_16 { pt3dadd( 84.4951, -157.42, -121.52, 0.74 ) }
    dend_16 { pt3dadd( 85.051, -157.886, -121.578, 0.22 ) }
    dend_16 { pt3dadd( 85.6015, -158.425, -121.626, 0.59 ) }
    dend_16 { pt3dadd( 85.8008, -158.644, -121.638, 0.59 ) }
    dend_16 { pt3dadd( 86.648, -159.725, -121.725, 0.22 ) }
    dend_16 { pt3dadd( 87.0106, -160.232, -121.78, 0.74 ) }
    dend_16 { pt3dadd( 87.1868, -160.501, -121.827, 0.74 ) }
    dend_16 { pt3dadd( 87.9039, -161.702, -122.073, 0.15 ) }
    dend_16 { pt3dadd( 88.3977, -162.587, -122.269, 0.15 ) }
    dend_16 { pt3dadd( 88.7953, -163.325, -122.469, 0.59 ) }
    dend_16 { pt3dadd( 89.0664, -163.832, -122.616, 0.59 ) }
    dend_16 { pt3dadd( 90.1206, -165.802, -123.181, 0.22 ) }
    dend_16 { pt3dadd( 90.4574, -166.438, -123.363, 0.74 ) }
    dend_16 { pt3dadd( 90.6547, -166.814, -123.467, 0.74 ) }
    dend_16 { pt3dadd( 91.8616, -169.134, -124.111, 0.22 ) }
    dend_16 { pt3dadd( 92.7679, -170.805, -124.544, 0.22 ) }
    dend_16 { pt3dadd( 93.1037, -171.402, -124.7, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 30.5657, -23.9194, -34.3875, 0.22 ) }
    dend_15 { pt3dadd( 31.903, -25.0155, -34.4258, 0.22 ) }
    dend_15 { pt3dadd( 33.7018, -26.49, -34.4772, 0.22 ) }
    dend_15 { pt3dadd( 34.2487, -26.9383, -34.4929, 0.74 ) }
    dend_15 { pt3dadd( 34.891, -27.4647, -34.5112, 0.74 ) }
    dend_15 { pt3dadd( 36.8456, -29.0669, -34.5672, 0.22 ) }
    dend_15 { pt3dadd( 37.4261, -29.5428, -34.5838, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_47 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_17 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_42 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_41 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_5 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_43 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_45 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_31 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_8 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 11
    dend_47 nseg = 3
    dend_26 nseg = 7
    dend_17 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 13
    dend_34 nseg = 9
    dend_23 nseg = 3
    dend_11 nseg = 3
    dend_13 nseg = 5
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 13
    dend_16 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_NBC_63dc8fdbb5_0_0


