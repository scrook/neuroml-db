// Cell: cSTUT189_L4_LBC_2a3578f975_0_0
/*
{
  "id" : "cSTUT189_L4_LBC_2a3578f975_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.10291, 7.90899, -2.15843, 3.34194", "1.9029, 7.18155, -1.9753, 5.85803", "1.70289, 6.4541, -1.79218, 8.32042", "1.50288, 5.72665, -1.60905, 9.88267", "1.30286, 4.9992, -1.42592, 10.8351", "1.10285, 4.27175, -1.24279, 11.6726", "0.902844, 3.54431, -1.05967, 12.0481", "0.702833, 2.81686, -0.876538, 12.3612", "0.502823, 2.08941, -0.693411, 12.4649", "0.302812, 1.36196, -0.510283, 12.4525", "0.102801, 0.634515, -0.327156, 12.4603", "-0.0972091, -0.0929329, -0.144028, 12.179", "-0.29722, -0.820381, 0.0390996, 11.8016", "-0.49723, -1.54783, 0.222227, 11.2647", "-0.697241, -2.27528, 0.405355, 10.6908", "-0.897251, -3.00272, 0.588482, 9.84874", "-1.09726, -3.73017, 0.77161, 8.85587", "-1.29727, -4.45762, 0.954738, 7.71115", "-1.49728, -5.18507, 1.13787, 5.78386", "-1.69729, -5.91252, 1.32099, 3.65042", "-1.8973, -6.63996, 1.50412, 2.23669" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.645558, 5.04146, -18.5313, 1.18", "-0.698759, 5.10051, -18.5396, 1.18", "-1.17463, 5.88052, -18.6933, 1.18", "-1.45918, 6.82706, -18.9, 1.18", "-1.48503, 7.00871, -18.9415, 1.18", "-1.43027, 8.0194, -19.1955, 1.03", "-0.961981, 9.81106, -19.6616, 0.52", "-0.300733, 11.193, -20.0322, 0.66", "0.37432, 12.2885, -20.4081, 0.81", "0.41309, 12.3518, -20.4466, 0.81", "0.809631, 13.1285, -21.1002, 0.59", "1.0607, 13.7234, -21.7474, 0.52", "0.991619, 14.0456, -22.4761, 0.52", "0.704045, 14.3864, -23.6182, 1.25", "-0.261107, 15.0354, -26.2496, 1.69", "-0.473718, 15.1556, -26.728, 1.69", "-0.539313, 15.1885, -26.8484, 1.69", "-2.18506, 16.0637, -29.4101, 0.81", "-2.21971, 16.0841, -29.4613, 0.81", "-2.76284, 16.4288, -30.241, 0.66", "-3.47358, 16.8745, -31.2611, 0.59", "-4.00761, 17.1574, -32.0696, 0.44", "-4.81572, 17.5176, -33.2395, 0.37", "-6.23373, 18.1603, -35.2511, 1.18", "-7.32281, 18.5977, -36.8734, 1.47", "-8.17643, 18.8612, -38.2575, 1.62", "-9.18202, 19.0155, -39.955, 1.62", "-9.69171, 19.0172, -40.8759, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002013478323
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.27444, 7.11196, 4.47868, 2.8", "1.27444, 7.11196, 4.47868, 2.8", "1.67555, 7.9047, 4.47868, 2.58", "2.37525, 9.18351, 4.47868, 2.43", "3.02742, 10.3032, 4.47868, 2.43", "3.48131, 11.0527, 4.47868, 2.43", "4.05662, 11.9809, 4.47868, 2.73", "4.52788, 12.6848, 4.47868, 2.95", "5.10576, 13.4303, 4.47868, 3.09", "5.66867, 14.0312, 4.47868, 3.09", "6.34907, 14.6364, 4.41443, 3.17", "6.38768, 14.6682, 4.41017, 3.17", "7.19538, 15.2803, 4.3036, 3.17", "8.01222, 15.8482, 4.17565, 2.28", "9.12865, 16.5492, 3.96611, 2.14", "10.811, 17.4898, 3.59466, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002013478323
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.56556, -6.09003, 3.97868, 3.76", "-2.56556, -6.09003, 3.97868, 3.76", "-2.62817, -7.45644, 3.90747, 2.28", "-2.71823, -9.75541, 3.76654, 1.77", "-2.77951, -11.6407, 3.61328, 1.77", "-2.82207, -12.9479, 3.4569, 2.36", "-2.88217, -14.8168, 3.16896, 3.02", "-2.93373, -16.3762, 2.86115, 3.39", "-2.93516, -16.4364, 2.84743, 3.39", "-2.97266, -18.3219, 2.33539, 3.09", "-3.0344, -20.0876, 1.7805, 2.65", "-3.10651, -21.8612, 1.15836, 2.36", "-3.1795, -23.2253, 0.635448, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002013478323
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.8973, -6.63996, 1.50412, 0.709256", "-5.87395, -21.1032, 1.50412, 0.709256", "-9.85061, -35.5665, 1.50412, 0.709256" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-9.69171, 19.0172, -40.8759, 0.37", "-9.38556, 18.208, -42.6803, 0.37", "-9.14639, 17.4946, -44.0575, 1.25", "-9.11179, 17.3701, -44.2679, 1.25", "-8.72338, 15.7202, -46.9156, 0.44", "-8.67906, 15.476, -47.2907, 1.33", "-8.63518, 15.1245, -47.8279, 1.47", "-8.61306, 14.7168, -48.4715, 0.52", "-8.58896, 14.408, -48.9732, 0.29", "-8.48398, 14.0129, -49.8444, 0.81", "-8.41631, 13.9211, -50.2734, 0.81", "-8.13361, 13.6196, -51.9737, 1.33", "-7.8843, 13.4209, -53.4025, 1.62", "-7.48131, 13.1923, -55.6094, 1.84", "-6.98193, 13.0038, -58.0954, 2.36", "-5.9175, 12.7505, -62.887, 2.36" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-9.69171, 19.0172, -40.8759, 0.44", "-10.5583, 20.1738, -42.8427, 0.44", "-10.7874, 20.4796, -43.3628, 1.47", "-11.0462, 20.825, -43.9501, 2.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.811, 17.4898, 3.59466, 0.81", "10.2575, 18.9415, 3.81566, 0.81", "9.70332, 20.3522, 4.01564, 0.81", "9.13375, 21.8037, 4.19231, 0.74", "8.84187, 22.5455, 4.26816, 0.81", "8.5104, 23.356, 4.33513, 0.44", "7.85313, 24.8664, 4.4276, 0.44", "7.47742, 25.6825, 4.46568, 0.44", "7.04617, 26.5641, 4.4702, 0.66", "6.71661, 27.2447, 4.42902, 0.96", "6.38186, 28.0621, 4.41072, 1.11", "6.06901, 29.1326, 4.35541, 1.11", "6.05567, 29.2257, 4.34769, 1.11", "6.03102, 30.5498, 4.20644, 0.37", "6.08785, 31.824, 4.04646, 0.37", "6.24626, 33.5, 3.81376, 0.88", "6.50576, 35.4677, 3.51769, 0.37", "6.68914, 36.6906, 3.31754, 0.37", "6.86596, 38.1099, 3.00925, 0.37", "6.92179, 38.7917, 2.79441, 0.59", "6.91709, 38.9046, 2.74628, 0.59", "6.81519, 39.4646, 2.42591, 0.81", "6.69221, 39.9028, 2.16252, 0.81", "6.42316, 40.9016, 1.47652, 0.59", "6.26446, 41.7397, 0.90934, 0.37", "6.14937, 42.7094, 0.249423, 0.37", "6.09176, 44.262, -0.832702, 1.25", "6.10746, 44.6445, -1.08975, 1.4", "6.2483, 46.0322, -1.94004, 0.81", "6.42158, 47.2175, -2.56976, 0.88", "6.47346, 47.5465, -2.73525, 0.88", "6.61197, 48.8813, -3.38099, 0.52", "6.59033, 50.0519, -3.90312, 0.37", "6.49201, 50.9673, -4.29201, 0.66", "6.35437, 51.668, -4.56065, 0.66", "6.05391, 52.971, -5.02138, 0.44", "5.78156, 54.3335, -5.48327, 0.29", "5.46177, 56.1673, -6.08734, 0.81", "5.37894, 56.9124, -6.35638, 1.11", "5.35517, 57.9388, -6.73193, 1.25", "5.42612, 59.2098, -7.19201, 1.25", "5.80097, 62.0191, -8.15993, 0.29", "5.93992, 62.6177, -8.37024, 0.66", "6.39064, 63.9272, -8.81514, 0.66", "6.91233, 65.1558, -9.18072, 0.44", "6.96174, 65.2494, -9.20313, 0.44", "7.40982, 65.9937, -9.29378, 0.44", "8.10043, 67.0931, -9.21871, 0.29", "8.73017, 68.3496, -9.07402, 0.44", "9.28016, 69.8096, -8.84817, 0.44", "9.34252, 70.03, -8.81646, 0.44", "9.68073, 71.5372, -8.63252, 0.52", "9.85322, 72.6154, -8.52842, 0.52", "10.0451, 74.3714, -8.47211, 0.66", "10.1998, 76.2021, -8.5316, 1.47", "10.352, 77.8452, -8.67029, 2.14", "10.4797, 78.976, -8.83213, 2.14", "10.6215, 80.1483, -9.06219, 1.92", "10.8069, 81.7872, -9.49479, 0.88", "10.9022, 82.8567, -9.85345, 0.44", "11.0078, 84.579, -10.5281, 0.44", "11.0883, 86.5662, -11.3273, 0.37", "11.114, 87.4734, -11.6818, 0.59", "11.128, 88.4555, -12.0324, 0.88", "11.1119, 89.1736, -12.2482, 0.88", "11.0298, 90.2964, -12.5475, 0.22", "10.8058, 92.2485, -12.9637, 0.22", "10.8058, 92.2485, -12.9637, 0.96", "10.6586, 93.2514, -13.145, 1.03", "10.5379, 93.9911, -13.2945, 1.03", "10.1202, 96.2074, -13.8139, 0.29", "9.88351, 97.3374, -14.1014, 1.25", "9.64679, 98.3933, -14.382, 1.77", "9.16177, 100.647, -14.9757, 0.37", "8.95017, 101.672, -15.2484, 0.29", "8.74229, 102.832, -15.5527, 0.29", "8.53334, 104.343, -15.8723, 0.22", "8.51626, 104.487, -15.8933, 0.22", "8.43632, 105.288, -15.9425, 0.59", "8.42495, 105.396, -15.9448, 0.59", "8.33564, 106.182, -16.0344, 0.81", "8.1222, 107.652, -16.309, 0.29", "7.91014, 108.818, -16.586, 0.44", "7.80871, 109.428, -16.7998, 0.44", "7.52492, 111.514, -17.7068, 0.29", "7.33986, 113.084, -18.4748, 1.62", "7.21895, 114.226, -19.0853, 2.06", "7.17115, 114.801, -19.4147, 2.43", "6.96787, 118.087, -21.2304, 0.29", "6.90163, 119.468, -21.9424, 0.22", "6.89942, 119.568, -21.9841, 0.22", "6.88599, 120.694, -22.3499, 0.22", "6.90877, 121.572, -22.5523, 1.03", "7.0097, 123.177, -22.7911, 1.84", "7.07658, 123.829, -22.835, 2.06", "7.32275, 125.627, -22.9568, 0.29", "7.55732, 127.024, -23.0754, 0.22", "8.03031, 129.285, -23.2454, 0.22", "8.29855, 130.416, -23.3247, 0.52", "8.70665, 131.971, -23.4316, 0.22", "8.89361, 132.645, -23.4795, 0.59", "9.10955, 133.498, -23.5333, 0.59", "9.45344, 135.103, -23.5797, 0.22", "9.61388, 136.076, -23.5792, 1.03", "9.76922, 137.16, -23.5512, 1.84", "9.91371, 138.238, -23.5123, 2.06", "10.264, 140.856, -23.4514, 0.29", "10.3924, 141.835, -23.4452, 0.52", "10.6718, 144.007, -23.4966, 0.29", "10.6863, 144.115, -23.4996, 0.29", "10.8095, 144.946, -23.5256, 0.52", "10.928, 145.727, -23.5577, 0.59", "10.9481, 145.834, -23.5637, 0.59", "11.3424, 147.794, -23.6662, 0.22", "11.548, 148.855, -23.7201, 0.22", "11.5782, 148.993, -23.7266, 0.22", "11.7695, 149.795, -23.7629, 0.96", "11.7998, 149.899, -23.7678, 0.96", "12.1212, 150.98, -23.7414, 1.62", "12.2886, 151.585, -23.6992, 1.99", "12.4887, 152.335, -23.629, 1.99", "12.7984, 153.476, -23.6077, 1.4", "13.4644, 156.176, -23.7302, 0.22", "13.8388, 157.816, -23.8795, 1.03", "14.083, 158.983, -24.037, 1.33", "14.1019, 159.088, -24.0559, 1.33", "14.5003, 161.691, -24.6659, 0.29", "14.7061, 163.229, -25.1407, 0.29", "14.7174, 163.328, -25.1846, 0.29", "14.7766, 163.725, -25.3804, 0.96", "14.8952, 164.438, -25.6879, 1.25", "14.9607, 164.798, -25.8264, 1.25", "15.1392, 165.534, -26.0581, 1.25", "15.8007, 167.797, -26.7688, 0.29", "16.0229, 168.573, -27.0032, 0.74", "16.3377, 169.649, -27.3216, 0.88", "16.7972, 171.137, -27.7849, 0.22", "17.1213, 172.266, -28.1361, 0.22", "17.5855, 173.947, -28.6473, 1.25", "17.8147, 174.759, -28.8675, 1.55", "17.8504, 174.872, -28.8978, 1.55", "18.4587, 176.599, -29.2564, 0.22", "18.8999, 177.802, -29.4121, 0.22", "18.9579, 177.951, -29.4258, 0.22", "19.4028, 178.937, -29.4706, 0.44", "19.7958, 179.864, -29.4924, 0.66", "20.387, 181.4, -29.4914, 0.22", "20.6899, 182.321, -29.4574, 1.18", "20.8495, 182.906, -29.45, 1.47", "20.9743, 183.57, -29.4654, 1.47", "21.1274, 185.224, -29.5692, 0.22", "21.1277, 185.333, -29.576, 0.22", "21.0816, 186.319, -29.6421, 0.22", "21.0155, 187.319, -29.6791, 0.88", "20.9723, 187.91, -29.6867, 1.11", "20.9323, 188.507, -29.6806, 1.11", "20.7992, 189.852, -29.6513, 0.29", "20.6514, 191.01, -29.6335, 0.22", "20.47, 192.089, -29.6264, 0.22", "20.3573, 192.63, -29.6298, 0.74", "20.1638, 193.375, -29.6521, 0.74", "19.4867, 195.488, -29.7123, 0.29", "19.4523, 195.575, -29.7162, 0.29", "19.118, 196.292, -29.727, 0.44", "19.0148, 196.482, -29.7171, 0.44", "18.4957, 197.355, -29.6258, 0.66", "17.8285, 198.339, -29.422, 1.25", "17.3291, 198.986, -29.2422, 1.4", "17.2641, 199.069, -29.2207, 1.4", "16.1877, 200.528, -28.8961, 0.37", "16.017, 200.801, -28.8647, 0.37", "15.3843, 202.011, -28.8423, 1.03", "14.8568, 203.345, -28.8671, 1.33", "14.5552, 204.513, -28.8927, 1.69", "14.3256, 206.053, -28.8917, 2.06", "14.2707, 208.163, -28.8173, 0.29", "14.3732, 209.894, -28.7041, 0.29", "14.7044, 212.371, -28.4936, 0.29", "15.214, 215.023, -28.1771, 0.29", "15.6984, 217.065, -27.8771, 1.11", "16.2313, 219.091, -27.5279, 0.22", "16.4384, 219.842, -27.382, 0.22", "16.6353, 220.58, -27.2747, 0.81", "16.7911, 221.374, -27.2381, 0.96", "16.9775, 223.272, -27.2992, 0.22", "17.0265, 224.254, -27.382, 0.81", "17.0308, 225.23, -27.4961, 0.96", "17.0011, 227.865, -27.8188, 0.22", "16.96, 230.812, -28.1951, 0.22", "16.9094, 232.87, -28.4753, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "10.811, 17.4898, 3.59466, 1.55", "11.8765, 18.2283, 4.63154, 1.55", "13.2193, 19.2243, 5.94611, 1.25", "14.5257, 20.2866, 7.37655, 1.47", "15.1629, 20.8746, 8.16403, 1.47", "16.1916, 22.0194, 9.61265, 1.69", "17.0958, 23.1884, 10.9812, 1.84", "17.4366, 23.8078, 11.6088, 1.84", "18.1555, 25.6332, 13.2168, 1.99", "18.6272, 27.3231, 14.4822, 1.62", "18.9372, 29.0222, 15.6012, 1.4", "19.0359, 30.0402, 16.1937, 1.4", "19.1287, 31.53, 16.9654, 1.33", "19.1645, 32.7493, 17.5511, 1.69", "19.1704, 34.4056, 18.1951, 2.21", "19.1694, 35.3037, 18.5074, 2.28", "19.2263, 37.2634, 19.2332, 2.58", "19.2561, 38.0663, 19.6022, 2.58" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.1795, -23.2253, 0.635448, 1.11", "-3.52775, -24.7917, 0.505861, 1.11", "-3.85646, -25.9504, 0.452579, 1.25", "-4.18687, -27.0396, 0.412392, 1.4", "-4.37607, -27.6118, 0.388611, 1.55", "-4.69343, -28.5595, 0.351865, 1.47", "-5.28541, -30.4139, 0.248746, 1.11", "-5.8593, -32.1162, 0.128518, 1.18", "-5.87781, -32.1769, 0.12418, 1.18", "-6.25118, -33.6206, 0.01083, 1.18", "-6.52642, -35.0602, -0.129363, 1.03", "-6.662, -36.5074, -0.284638, 1.62", "-6.62725, -37.3681, -0.375516, 1.99", "-6.50002, -38.0499, -0.460357, 2.21", "-6.22134, -38.9875, -0.569413, 2.21", "-5.79363, -40.1413, -0.635262, 1.25", "-5.34016, -41.3318, -0.60821, 1.03", "-4.78354, -42.8974, -0.406949, 1.03", "-4.25506, -44.6191, -0.00396501, 1.03", "-3.90214, -46.1448, 0.576827, 0.88", "-3.65825, -47.8778, 1.52005, 1.18", "-3.5706, -49.1064, 2.32741, 1.99", "-3.53726, -50.2045, 3.12057, 2.21", "-3.5285, -51.2256, 3.88632, 2.36", "-3.51311, -52.7288, 5.04414, 1.4", "-3.41266, -53.9102, 5.87348, 0.96", "-3.04742, -55.4211, 6.66131, 0.96", "-2.64724, -56.515, 6.99661, 1.18", "-2.2176, -57.5312, 7.09949, 1.47", "-2.06716, -57.9039, 7.06583, 1.55", "-1.64885, -59.1406, 6.72329, 0.88", "-1.41301, -60.1528, 6.33435, 0.81", "-1.3096, -61.3628, 5.79746, 0.74", "-1.29737, -62.4514, 5.29227, 1.03", "-1.38518, -64.009, 4.56101, 1.25", "-1.54939, -65.3666, 3.89848, 2.28", "-1.70248, -66.0448, 3.55593, 2.73", "-2.04838, -67.1546, 2.95879, 3.09" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.1795, -23.2253, 0.635448, 1.11", "-4.08998, -23.8723, 0.984508, 1.11", "-5.24702, -24.6637, 1.59578, 1.03", "-6.15085, -25.2727, 2.1074, 1.03", "-6.71498, -25.6563, 2.46215, 1.25", "-7.32484, -26.0885, 2.87196, 1.25", "-7.77776, -26.4335, 3.19663, 1.25", "-9.13224, -27.5517, 4.27877, 1.55", "-9.5, -27.8913, 4.61963, 1.62", "-10.355, -28.8147, 5.57051, 1.69", "-10.8477, -29.4203, 6.21783, 1.84", "-11.4118, -30.1924, 7.03258, 2.14", "-11.7335, -30.6972, 7.57516, 1.84", "-12.317, -31.8068, 8.69414, 1.62", "-12.9101, -33.1714, 10.0622, 0.74", "-13.1847, -33.9745, 10.8305, 1.03", "-13.275, -34.3131, 11.1393, 1.03", "-13.4886, -35.4622, 12.1135, 0.88", "-13.5793, -36.3102, 12.7525, 0.96", "-13.6043, -37.1911, 13.2569, 1.55", "-13.5854, -37.8469, 13.542, 1.77", "-13.5583, -38.4507, 13.759, 1.77", "-13.5186, -39.5482, 14.0891, 1.25", "-13.5225, -40.7776, 14.3544, 1.03", "-13.5947, -42.0027, 14.5742, 1.03", "-13.7137, -43.0085, 14.7109, 0.96", "-13.8228, -43.5892, 14.7823, 1.33", "-14.0722, -44.5626, 14.8798, 1.03", "-14.5488, -45.9836, 15.0145, 0.96", "-15.0212, -47.0641, 15.1427, 0.96", "-15.2642, -47.483, 15.2227, 1.33", "-15.8093, -48.2117, 15.4448, 1.77", "-16.1939, -48.6112, 15.6402, 2.14", "-16.8866, -49.1571, 16.0287, 1.99", "-17.5466, -49.5367, 16.4488, 1.18", "-18.553, -50.0292, 17.1123, 0.88", "-19.3949, -50.4013, 17.6909, 0.88", "-20.2807, -50.7339, 18.3152, 0.96", "-20.6854, -50.8582, 18.6032, 1.11", "-21.704, -51.1077, 19.3078, 1.25" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-9.85061, -35.5665, 1.50412, 0.169042", "-13.8273, -50.0298, 1.50412, 0.169042", "-17.8039, -64.493, 1.50412, 0.169042" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.9175, 12.7505, -62.887, 1.03", "-4.59357, 12.1923, -80.0181, 1.03", "-4.36893, 12.1395, -83.3508, 1.03", "-4.3606, 12.1392, -83.4809, 1.03", "-3.64567, 12.4676, -95.2691, 1.69", "-3.01946, 12.9688, -106.205, 0.81", "-2.04178, 14.1289, -124.019, 1.11", "-1.77965, 14.8171, -130.995, 1.77", "-1.73861, 14.9473, -132.033, 1.77", "-1.16029, 16.6106, -143.825, 0.81", "-0.999102, 17.0406, -146.422, 1.47", "-0.462207, 18.6827, -155.01, 0.52", "0.0447747, 20.0582, -162.259, 0.96", "0.370387, 20.8156, -166.566, 0.96", "1.65361, 23.2903, -181.592, 1.25", "1.67267, 23.3191, -181.779, 1.25", "2.73804, 24.6481, -190.452, 1.33", "3.92066, 26.0185, -199.286, 0.59", "3.93597, 26.0376, -199.399, 0.59", "4.27603, 26.5838, -202.151, 1.47", "4.45796, 26.8972, -203.361, 1.99", "5.95071, 29.2723, -212.335, 1.62", "7.36356, 31.3459, -220.007, 0.29", "7.66097, 31.82, -221.76, 1.99", "8.7335, 33.3646, -227.797, 0.29", "9.1266, 33.8915, -230.047, 0.29", "9.63798, 34.5678, -232.896, 1.77", "9.73413, 34.6697, -233.35, 1.92", "9.7618, 34.6908, -233.46, 1.92", "12.2178, 35.8939, -242.375, 0.52", "14.0359, 36.3595, -249.182, 1.47", "14.2486, 36.3702, -250.186, 1.77", "15.7712, 36.113, -259.471, 1.47", "15.9116, 36.0499, -260.505, 1.55", "16.4061, 35.5715, -265.724, 0.88", "16.5459, 34.6533, -271.172, 1.18", "16.3388, 33.1226, -278.228, 1.11", "16.1779, 32.4864, -280.747, 0.37", "16.1605, 32.4501, -280.871, 0.37", "15.7205, 31.6027, -283.757, 0.37", "14.4357, 29.5617, -290.71, 0.44", "14.4184, 29.4668, -290.95, 0.44", "14.9379, 28.1163, -292.768, 0.44", "14.9733, 28.0458, -292.831, 0.44", "16.153, 25.8526, -293.998, 0.44", "16.3248, 25.555, -294.082, 0.44", "17.5559, 23.5698, -294.054, 0.44", "17.6251, 23.4576, -294.053, 0.44", "18.5008, 21.8774, -294.032, 0.44", "19.3831, 20.1642, -293.915, 0.59", "19.6814, 19.5566, -293.849, 0.59", "20.6201, 17.7201, -293.602, 0.59", "20.6684, 17.6323, -293.588, 0.59", "21.6271, 15.8923, -293.287, 0.59", "23.1074, 13.2083, -292.785, 0.44", "24.061, 11.3466, -292.542, 0.52", "24.1194, 11.2284, -292.534, 0.52", "24.6036, 10.2339, -292.478, 0.81", "24.7732, 9.90656, -292.469, 0.81", "25.4131, 8.82749, -292.532, 0.81", "26.7425, 6.62136, -293.118, 0.22", "27.3357, 5.55446, -293.481, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.9175, 12.7505, -62.887, 0.37", "-6.44851, 14.3248, -64.7034, 0.37", "-6.63946, 14.7441, -65.1983, 0.29", "-7.16042, 15.8, -66.4366, 0.66", "-7.88677, 17.2312, -68.112, 0.88", "-8.04262, 17.5531, -68.4932, 1.11", "-8.55297, 18.6255, -69.8752, 0.29", "-9.02145, 19.6503, -71.2563, 0.29", "-9.32154, 20.3112, -72.441, 1.4", "-9.33586, 20.3363, -72.5017, 1.4", "-9.61762, 20.7364, -73.6871, 1.69", "-10.1364, 21.3187, -75.9946, 0.59", "-10.3538, 21.5155, -77.0194, 0.88", "-11.2926, 22.2146, -81.9088, 1.03", "-11.8591, 22.4677, -84.803, 0.29", "-12.0702, 22.5203, -85.8452, 0.66", "-12.5194, 22.5522, -87.9156, 0.66", "-12.5314, 22.5507, -87.9697, 0.66", "-12.9149, 22.3929, -89.6991, 0.88", "-13.1528, 22.176, -90.5797, 1.18", "-13.1606, 22.1541, -90.64, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-11.0462, 20.825, -43.9501, 0.52", "-10.7528, 22.1498, -44.1266, 0.52", "-10.5153, 23.326, -44.2896, 0.37", "-10.3381, 24.2183, -44.4158, 0.66", "-10.0748, 25.6023, -44.7635, 0.22", "-10.0625, 25.675, -44.7848, 0.22", "-9.89542, 26.7225, -45.1418, 1.69", "-9.82402, 27.271, -45.3553, 1.92", "-9.81499, 27.3496, -45.3909, 1.92", "-9.60004, 29.2924, -46.3117, 0.22", "-9.47957, 30.4179, -46.8137, 0.22", "-9.42105, 31.0159, -47.0745, 1.03", "-9.36861, 31.6817, -47.3593, 1.03", "-9.25823, 33.5636, -48.1219, 0.22", "-9.22769, 34.2266, -48.3665, 1.18", "-9.20604, 34.9111, -48.5832, 1.92", "-9.21559, 35.8047, -48.8507, 1.92", "-9.36575, 38.0517, -49.5968, 0.22", "-9.43197, 38.6275, -49.8137, 0.74", "-9.51452, 39.1388, -50.0184, 0.81", "-9.72782, 40.2203, -50.4598, 0.22", "-10.014, 41.4702, -50.9711, 0.22", "-10.6047, 43.8667, -51.9084, 1.55", "-10.7491, 44.4074, -52.1126, 1.92", "-11.0411, 45.5371, -52.53, 0.15", "-11.242, 46.4272, -52.8357, 0.15", "-11.3818, 47.1974, -53.0688, 1.18", "-11.473, 47.9809, -53.2565, 1.69", "-11.5142, 48.5969, -53.3359, 1.69", "-11.5474, 49.7116, -53.5061, 0.29", "-11.5438, 50.791, -53.6975, 0.22", "-11.5279, 51.331, -53.8038, 0.37", "-11.5145, 51.8582, -53.9215, 0.37", "-11.5016, 52.9624, -54.205, 0.22", "-11.4601, 54.2516, -54.5505, 1.47", "-11.4311, 54.92, -54.7333, 1.69", "-11.4264, 54.9939, -54.7535, 1.69", "-11.248, 56.7262, -55.2138, 0.29", "-11.0774, 57.9663, -55.5404, 0.29", "-10.8481, 59.1968, -55.8917, 0.29", "-10.8149, 59.3442, -55.9334, 0.29", "-10.5409, 60.4425, -56.2612, 0.29", "-10.1184, 62.0294, -56.7325, 3.32", "-9.83179, 63.0563, -57.0304, 1.84", "-9.43628, 64.553, -57.4559, 0.22", "-9.31048, 65.0493, -57.6341, 0.59", "-9.20343, 65.4664, -57.8034, 0.59", "-8.95023, 66.4783, -58.2577, 0.22", "-8.8028, 67.1046, -58.5379, 1.25", "-8.66554, 67.7725, -58.8173, 1.77", "-8.22076, 70.2119, -59.7423, 0.22", "-8.17721, 70.4098, -59.8193, 0.59", "-8.06749, 70.8458, -59.9989, 0.59", "-7.76582, 71.958, -60.4574, 0.22", "-7.56925, 72.55, -60.7557, 1.18", "-7.34048, 73.1912, -61.1011, 1.62", "-6.70017, 74.8402, -62.0478, 0.29", "-6.44177, 75.4489, -62.4372, 1.33", "-6.14413, 76.1272, -62.9322, 1.55", "-5.3147, 78.1702, -64.5206, 0.22", "-5.08283, 78.7713, -64.9872, 0.22", "-4.71301, 79.8187, -65.8065, 1.33", "-4.56202, 80.2954, -66.1639, 1.47", "-4.1883, 81.5616, -67.172, 0.22", "-3.94423, 82.5832, -67.9955, 0.22", "-3.82146, 83.4238, -68.6411, 0.22", "-3.70925, 84.5405, -69.5345, 1.62", "-3.67806, 85.0132, -69.9099, 1.92", "-3.54652, 87.3021, -71.8009, 0.22", "-3.50773, 87.9446, -72.3275, 0.22", "-3.44649, 88.8334, -73.0562, 0.88", "-3.41514, 89.2547, -73.3864, 1.33", "-3.36324, 89.7327, -73.7533, 1.33", "-3.09907, 91.3477, -74.9657, 0.22", "-2.83617, 92.4021, -75.7872, 1.92", "-2.71144, 92.8163, -76.1377, 1.92", "-2.13336, 94.5485, -77.681, 0.22", "-1.81631, 95.4107, -78.4883, 0.88", "-1.65161, 95.8168, -78.8801, 0.88", "-0.876739, 97.4345, -80.4109, 0.29", "-0.547546, 98.0231, -80.987, 0.22", "-0.517233, 98.0717, -81.0368, 0.22", "0.0494417, 98.8841, -81.855, 0.22", "0.631706, 99.6328, -82.6431, 1.4", "1.16484, 100.272, -83.345, 1.69", "2.53863, 101.81, -85.0024, 0.22", "3.3473, 102.692, -85.9718, 1.77", "3.74498, 103.134, -86.4453, 1.77", "5.32543, 104.995, -88.3273, 0.22", "5.43655, 105.134, -88.4554, 0.37", "6.05491, 105.995, -89.1326, 0.22", "6.24031, 106.283, -89.3065, 0.44", "6.94539, 107.483, -89.9153, 0.22", "7.54148, 108.581, -90.4126, 1.84", "7.92015, 109.344, -90.7045, 2.28", "8.84053, 111.261, -91.4567, 0.22", "9.2775, 112.209, -91.8436, 0.22", "9.57087, 112.859, -92.1187, 0.88", "9.68409, 113.134, -92.2352, 1.03", "10.0882, 114.212, -92.7171, 0.22", "10.2167, 114.579, -92.8832, 0.37", "10.605, 115.724, -93.4177, 0.22", "10.7424, 116.139, -93.6353, 0.59", "10.9228, 116.649, -93.9268, 0.96", "11.482, 118.12, -94.8113, 0.22", "11.7528, 118.829, -95.2441, 0.22", "12.0947, 119.76, -95.8044, 1.25", "12.3955, 120.627, -96.2786, 0.96", "12.8335, 121.919, -96.9357, 0.15", "12.9995, 122.434, -97.1786, 1.03", "13.1198, 122.86, -97.3539, 1.25", "13.5309, 124.465, -97.9897, 0.15", "13.8701, 125.858, -98.4863, 0.15", "14.1457, 127.075, -98.9066, 0.96", "14.2436, 127.573, -99.0905, 1.4", "14.3295, 128.069, -99.2847, 1.4", "14.5991, 129.976, -100.053, 0.15", "14.6534, 130.524, -100.273, 0.66", "14.7899, 132.266, -100.938, 0.15", "14.8607, 133.171, -101.245, 1.62", "14.9275, 133.931, -101.474, 1.84", "15.0374, 135.072, -101.747, 0.22", "15.1926, 136.658, -102.014, 0.15", "15.3807, 138.223, -102.22, 0.15", "15.5618, 139.349, -102.311, 0.88", "15.7067, 140.158, -102.344, 0.88", "15.9683, 141.423, -102.369, 0.15", "16.0968, 141.993, -102.36, 0.59", "16.1795, 142.375, -102.339, 0.59", "16.3758, 143.428, -102.272, 0.15", "16.492, 144.057, -102.238, 0.96", "16.5073, 144.132, -102.236, 0.96", "16.6545, 144.586, -102.246, 1.18", "16.6838, 144.657, -102.252, 1.18", "17.4231, 146.211, -102.448, 0.15", "17.6105, 146.537, -102.518, 0.59", "17.8521, 146.907, -102.632, 0.59", "18.944, 148.495, -103.2, 0.15", "19.2882, 148.966, -103.39, 0.88", "19.6015, 149.382, -103.584, 0.88", "20.6844, 150.728, -104.334, 0.15", "21.3275, 151.551, -104.889, 1.25", "21.5559, 151.85, -105.119, 1.69", "21.638, 151.963, -105.215, 1.69", "22.0506, 152.535, -105.709, 1.47", "22.0801, 152.575, -105.747, 1.47", "23.3923, 154.374, -107.583, 0.15", "23.601, 154.646, -107.863, 0.74", "23.6368, 154.691, -107.908, 0.74", "23.9816, 155.109, -108.309, 0.74", "25.3985, 156.697, -109.828, 0.15", "25.4334, 156.734, -109.864, 0.15", "25.8638, 157.159, -110.265, 1.03", "26.3607, 157.603, -110.645, 1.69", "26.6514, 157.841, -110.821, 1.69", "28.1287, 158.909, -111.479, 0.15", "28.1975, 158.955, -111.501, 0.15", "28.7544, 159.32, -111.661, 0.81", "30.5276, 160.439, -112.108, 0.15", "31.2241, 160.848, -112.248, 1.33", "32.8452, 161.762, -112.512, 0.22", "33.0315, 161.865, -112.536, 0.37", "33.2306, 161.977, -112.561, 0.37", "34.2091, 162.587, -112.739, 0.22", "35.4666, 163.465, -113.03, 0.15", "35.8969, 163.777, -113.136, 0.29", "36.9414, 164.569, -113.4, 0.15", "37.6007, 165.081, -113.575, 1.25", "39.9628, 167.019, -114.248, 0.15", "40.3101, 167.332, -114.362, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-11.0462, 20.825, -43.9501, 0.37", "-12.1932, 19.8813, -43.7116, 0.37", "-12.8158, 19.3818, -43.6029, 0.66", "-12.8713, 19.3338, -43.5939, 0.66", "-14.0433, 18.3034, -43.4324, 0.29", "-14.0917, 18.26, -43.4266, 0.29", "-14.7948, 17.6163, -43.3518, 1.47", "-15.2284, 17.197, -43.3276, 1.77", "-16.1751, 16.289, -43.2867, 0.29", "-16.7022, 15.7928, -43.278, 0.29", "-16.9257, 15.5855, -43.283, 0.66", "-17.1975, 15.3372, -43.293, 0.88", "-17.6048, 14.9716, -43.3169, 0.88", "-18.5067, 14.1818, -43.5, 0.22", "-18.7961, 13.9372, -43.6086, 0.59", "-19.0785, 13.6973, -43.7432, 0.74", "-19.317, 13.4996, -43.8703, 0.88", "-19.551, 13.3117, -44.0046, 0.88", "-20.7143, 12.3909, -44.7144, 0.22", "-21.3, 11.8884, -45.1197, 0.22", "-21.7424, 11.4945, -45.4289, 0.22", "-22.0906, 11.1707, -45.6709, 0.74", "-22.3997, 10.8791, -45.8736, 1.18", "-22.7541, 10.5438, -46.075, 1.18", "-23.6164, 9.74226, -46.4395, 0.22", "-23.6611, 9.69966, -46.4607, 0.22", "-23.9315, 9.43416, -46.5962, 0.52", "-24.1575, 9.22126, -46.7192, 0.52", "-24.6037, 8.87374, -46.9359, 0.22", "-24.6576, 8.84507, -46.9583, 0.22", "-25.5205, 8.5221, -47.2634, 1.92", "-25.8772, 8.41139, -47.3838, 2.28", "-26.4404, 8.24905, -47.5626, 2.14", "-27.6, 7.91667, -47.9072, 0.29", "-28.5736, 7.65645, -48.171, 0.29", "-28.7602, 7.60965, -48.2161, 0.74", "-29.1612, 7.51648, -48.2971, 0.74", "-29.8643, 7.33993, -48.4155, 0.22", "-30.6966, 7.11942, -48.5195, 0.22", "-31.2044, 6.98182, -48.6028, 0.81", "-31.5145, 6.89564, -48.6595, 1.03", "-32.0257, 6.76996, -48.7642, 0.81", "-32.7208, 6.60988, -48.9512, 0.15", "-33.5156, 6.4361, -49.2007, 0.15", "-34.4802, 6.19008, -49.5382, 1.55", "-34.73, 6.11539, -49.6313, 1.55", "-34.7873, 6.09462, -49.6539, 1.55", "-36.1559, 5.52724, -50.211, 0.22", "-36.8353, 5.22004, -50.4823, 0.22", "-37.3611, 4.95194, -50.6067, 0.81", "-37.59, 4.82456, -50.6302, 0.81", "-38.8173, 4.10403, -50.6997, 0.22", "-39.3821, 3.75822, -50.6935, 1.47", "-40.0765, 3.30991, -50.5965, 1.92", "-42.0422, 2.01131, -50.2157, 0.29", "-43.173, 1.25421, -49.9014, 0.22", "-44.1571, 0.592475, -49.5682, 1.62", "-44.8421, 0.140471, -49.2976, 1.92", "-46.63, -0.968338, -48.507, 0.22", "-47.3744, -1.37862, -48.1661, 0.22", "-48.5713, -1.92453, -47.6243, 0.22", "-48.8691, -2.03368, -47.4764, 1.03", "-49.4362, -2.19012, -47.1881, 1.4", "-51.0573, -2.48379, -46.4463, 0.15", "-52.0077, -2.5477, -46.0728, 0.15", "-52.4453, -2.55454, -45.9068, 0.96", "-52.5093, -2.55691, -45.884, 0.96", "-52.8295, -2.58852, -45.7646, 0.96", "-53.7465, -2.79126, -45.4268, 0.22", "-54.2244, -2.96814, -45.2501, 0.22", "-55.3249, -3.54633, -44.7478, 1.84", "-56.3839, -4.17041, -44.1815, 0.29", "-56.8715, -4.49407, -43.8816, 0.29", "-57.6333, -5.05289, -43.3613, 0.15", "-58.3783, -5.64466, -42.7823, 1.62", "-59.1844, -6.32718, -42.0846, 1.62", "-60.2055, -7.22823, -41.1504, 0.29", "-60.9385, -7.84929, -40.4474, 0.29", "-60.9773, -7.87994, -40.4089, 0.29", "-61.7885, -8.46601, -39.6091, 0.74", "-61.8361, -8.5005, -39.5646, 0.74", "-62.4309, -8.92787, -39.0763, 0.22", "-62.4747, -8.96084, -39.0461, 0.22", "-63.1135, -9.40582, -38.687, 0.22", "-64.0761, -10.0122, -38.2451, 0.22", "-64.5832, -10.2967, -38.0671, 1.03", "-65.0927, -10.555, -37.9174, 1.4", "-65.8081, -10.8801, -37.7471, 1.4", "-67.0485, -11.3871, -37.5575, 0.22", "-67.839, -11.6744, -37.5134, 0.22", "-68.621, -11.9315, -37.5256, 1.25", "-69.1419, -12.0922, -37.5281, 1.92", "-69.5125, -12.1979, -37.5231, 1.92", "-70.6887, -12.4908, -37.4979, 0.22", "-71.711, -12.703, -37.3936, 0.22", "-71.9721, -12.7535, -37.341, 1.03", "-73.28, -12.9567, -36.9506, 0.22", "-73.7578, -13.0088, -36.7725, 0.59", "-74.2034, -13.0691, -36.5522, 0.74", "-75.7392, -13.3595, -35.667, 0.22", "-75.7834, -13.3719, -35.6395, 0.22", "-76.5066, -13.6415, -35.2097, 1.33", "-76.8206, -13.8008, -35.0501, 1.69", "-78.0774, -14.5439, -34.4719, 0.15", "-79.1219, -15.2305, -34.0797, 0.15", "-80.1862, -15.9128, -33.8265, 1.77", "-80.69, -16.2178, -33.7285, 1.99", "-82.2504, -17.1347, -33.4844, 0.22", "-82.3559, -17.1937, -33.4714, 0.22", "-83.2323, -17.647, -33.3975, 0.22", "-84.8456, -18.4857, -33.2565, 0.22", "-85.6072, -18.8724, -33.2167, 0.66", "-85.7454, -18.9346, -33.2209, 0.66", "-87.021, -19.4105, -33.3798, 0.22", "-87.806, -19.6655, -33.5302, 1.62", "-87.8558, -19.6782, -33.5454, 1.62", "-88.4444, -19.7964, -33.7924, 1.62", "-90.4254, -20.0175, -34.7616, 0.22", "-91.1536, -20.0209, -35.1571, 0.59", "-91.5283, -19.9943, -35.3765, 0.59", "-92.5204, -19.9118, -35.9499, 0.22", "-92.5773, -19.9087, -35.9813, 0.22", "-93.1415, -19.8581, -36.1929, 0.59", "-94.1146, -19.7151, -36.3628, 0.22", "-95.2243, -19.5772, -36.4513, 0.22", "-96.0669, -19.5067, -36.4659, 1.69", "-96.4633, -19.5091, -36.4463, 1.69", "-98.9151, -19.7322, -36.2649, 0.22", "-99.3363, -19.8128, -36.2196, 1.03", "-100.521, -20.1073, -36.0446, 0.22", "-101.031, -20.2283, -35.9721, 0.74", "-101.942, -20.4639, -35.8861, 0.22", "-102.09, -20.5084, -35.8862, 0.22", "-102.627, -20.6678, -35.922, 0.22", "-103.5, -20.7637, -35.8969, 0.22", "-103.921, -20.7385, -35.846, 1.03", "-104.526, -20.6633, -35.7396, 1.18", "-104.581, -20.6536, -35.7272, 1.18", "-106.121, -20.3665, -35.3367, 0.22", "-106.726, -20.2414, -35.146, 1.33", "-106.995, -20.1811, -35.0508, 1.47", "-107.058, -20.1664, -35.0275, 1.47", "-108.081, -19.8706, -34.6683, 0.29", "-108.68, -19.6739, -34.4853, 0.22", "-109.438, -19.3893, -34.2903, 0.96", "-109.819, -19.2378, -34.1928, 1.18", "-110.646, -18.8949, -33.9827, 0.22", "-111.779, -18.3962, -33.7026, 0.22", "-112.19, -18.1944, -33.6097, 0.52", "-112.248, -18.1655, -33.5978, 0.52" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.9094, 232.87, -28.4753, 1.03", "17.1401, 233.945, -28.6981, 1.03", "17.1601, 234.055, -28.7197, 1.03", "17.3027, 234.97, -28.8415, 0.29", "17.4973, 236.311, -28.9643, 0.29", "17.5151, 236.522, -28.9709, 0.44", "17.5091, 237.213, -28.9207, 0.52", "17.4467, 237.822, -28.7944, 0.52", "17.2944, 238.907, -28.4922, 0.22", "17.1117, 240.101, -28.0805, 0.22", "16.8413, 241.568, -27.4527, 0.66", "16.4008, 243.86, -26.4474, 0.22", "16.012, 245.772, -25.5615, 1.18", "15.8891, 246.335, -25.2879, 1.55", "15.7435, 246.95, -24.9735, 1.55", "14.9415, 250.204, -23.2027, 0.22", "14.6197, 251.707, -22.3829, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "16.9094, 232.87, -28.4753, 0.52", "15.7964, 232.664, -28.4879, 0.52", "15.069, 232.528, -28.4907, 0.37", "13.1108, 232.157, -28.4922, 0.22", "12.8459, 232.107, -28.4924, 0.37", "11.0139, 231.76, -28.4938, 0.22", "10.8151, 231.722, -28.4939, 0.74", "10.3081, 231.631, -28.4797, 0.66", "10.2135, 231.612, -28.4735, 0.66" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "19.2561, 38.0663, 19.6022, 0.52", "19.9313, 38.4273, 18.8359, 0.52", "20.5159, 38.8445, 18.1184, 0.52", "21.1536, 39.3321, 17.3657, 0.59", "21.8127, 39.8749, 16.609, 1.25", "22.9073, 40.8228, 15.3508, 0.74", "23.7803, 41.6281, 14.373, 0.96", "24.1026, 41.9597, 13.9963, 1.33", "25.0016, 42.9905, 12.9984, 1.33", "25.7405, 43.8531, 12.3085, 1.33", "26.4671, 44.6651, 11.7525, 0.66", "27.3265, 45.5172, 11.2498, 0.66", "27.8159, 45.9628, 11.0024, 0.96", "28.6779, 46.7277, 10.5916, 0.96", "29.7532, 47.7048, 10.0957, 0.74", "29.7951, 47.7428, 10.0766, 0.74", "30.4211, 48.331, 9.77966, 0.88", "31.1552, 49.1052, 9.27323, 0.29", "31.4247, 49.5006, 8.9477, 0.44", "31.6218, 50.1112, 8.36412, 0.96", "31.6269, 50.4082, 8.06754, 1.47", "31.5972, 50.6628, 7.82322, 1.47", "31.374, 51.5781, 6.96713, 0.96", "31.1699, 52.2264, 6.4187, 0.52", "30.973, 52.8186, 5.95335, 0.52", "30.7015, 53.7175, 5.32965, 0.44", "30.5942, 54.1869, 5.03233, 0.59", "30.5867, 54.242, 5.00077, 0.59", "30.5685, 54.8807, 4.69664, 0.59", "30.6197, 55.5127, 4.42046, 0.59", "30.9367, 56.9493, 3.82043, 0.22", "31.1709, 57.5221, 3.58099, 0.81", "31.5004, 58.0605, 3.33232, 1.18", "31.7061, 58.3404, 3.19932, 1.47", "31.7474, 58.3903, 3.1756, 1.47", "32.0918, 58.8057, 3.01141, 1.47", "32.8232, 59.8032, 2.72722, 0.29", "33.3512, 60.8554, 2.49151, 0.29", "33.4936, 61.2638, 2.41361, 1.03", "33.654, 61.8667, 2.31315, 1.33", "33.8531, 62.7617, 2.17644, 1.77", "33.9626, 63.4683, 2.08526, 1.18", "34.0531, 64.5847, 1.99426, 0.59", "34.1052, 65.8096, 1.90655, 0.37", "34.1962, 67.3335, 1.77403, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "19.2561, 38.0663, 19.6022, 2.5", "20.4231, 38.3031, 22.3376, 2.5", "21.7095, 38.344, 24.5402, 1.55", "22.2067, 38.3278, 25.2058, 1.55", "22.9024, 38.2992, 25.9692, 1.4", "24.165, 38.3239, 27.0915, 1.03", "24.2653, 38.3344, 27.1696, 1.03", "25.4355, 38.4978, 27.7154, 1.03", "26.146, 38.6844, 28.005, 1.03", "26.8217, 38.9499, 28.3027, 1.18", "28.104, 39.6225, 28.88, 1.18", "29.4035, 40.4532, 29.4532, 1.18", "30.3391, 41.1036, 29.8922, 0.96", "31.6433, 42.1457, 30.5705, 1.11", "31.7328, 42.2224, 30.622, 1.11", "32.4742, 42.8907, 31.0979, 1.11", "32.7008, 43.1013, 31.2653, 1.11" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.04838, -67.1546, 2.95879, 0.74", "-0.13455, -67.842, 2.71233, 0.74", "1.5567, -68.4656, 2.52738, 0.37", "2.55197, -68.8857, 2.43467, 0.52", "3.37919, -69.271, 2.36748, 0.52", "4.07873, -69.634, 2.3198, 0.22", "4.97426, -70.1646, 2.27478, 0.22", "5.30933, -70.3771, 2.27446, 0.81", "5.94591, -70.8305, 2.30401, 1.11", "6.18804, -71.0283, 2.31374, 1.11", "6.75625, -71.4914, 2.33379, 1.25", "7.8138, -72.2495, 2.33109, 0.44", "9.09087, -72.9148, 2.29505, 0.22", "9.88011, -73.2418, 2.26482, 1.25", "10.7082, -73.5391, 2.23099, 1.69", "11.612, -73.8449, 2.19287, 1.47", "12.9389, -74.2696, 2.13512, 0.66", "15.0209, -74.9044, 2.0408, 0.29", "15.988, -75.2407, 1.99316, 0.29", "16.6347, -75.5329, 1.96611, 0.81", "17.1338, -75.826, 1.97591, 1.25", "17.5902, -76.1678, 2.01966, 1.25", "17.6603, -76.233, 2.0329, 1.25", "18.4982, -77.0923, 2.3278, 0.52", "19.4902, -77.9974, 2.75413, 0.29", "20.6167, -78.904, 3.28243, 1.4", "21.2703, -79.3442, 3.59685, 1.84", "21.5013, -79.4683, 3.72724, 1.84", "23.0628, -80.1959, 4.68158, 0.59", "23.9443, -80.5243, 5.26591, 0.29", "24.0208, -80.549, 5.31796, 0.29", "24.7941, -80.8251, 5.81813, 0.74", "26.2451, -81.4573, 6.74067, 0.74", "27.1417, -81.9817, 7.29414, 0.29", "27.2214, -82.0495, 7.33737, 0.29", "27.5432, -82.3837, 7.50398, 0.52", "28.1469, -83.0765, 7.7886, 1.03", "28.5285, -83.503, 7.99596, 1.18", "29.6085, -84.5903, 8.57829, 0.52", "30.5514, -85.3734, 9.26618, 0.52", "31.3185, -85.8755, 10.2506, 0.29", "31.3589, -85.9005, 10.3137, 0.29", "32.5837, -86.6759, 12.4552, 0.29", "32.8398, -86.8503, 12.9317, 1.03", "33.6711, -87.5054, 14.5867, 2.5", "35.8731, -89.5818, 19.3619, 0.44", "36.2584, -90.0102, 20.2429, 0.96", "36.5684, -90.4129, 20.9475, 1.18", "36.9461, -91.0072, 21.7518, 1.33", "37.8052, -92.4745, 23.4967, 0.29", "38.3196, -93.3824, 24.3216, 0.66", "38.3629, -93.4544, 24.3699, 0.66", "38.5914, -93.7686, 24.6344, 0.66", "39.4212, -94.7825, 25.7329, 0.37", "39.4685, -94.8364, 25.7971, 0.37", "40.0372, -95.4383, 26.5403, 0.59", "41.1531, -96.5798, 27.9975, 0.29", "42.0319, -97.488, 29.2184, 0.96", "43.1188, -98.6182, 30.8844, 2.21", "43.603, -99.1245, 31.7449, 2.5", "51.3254, -107.869, 38.0724, 2.5", "57.4027, -116.719, 45.8841, 2.5", "64.1178, -126.983, 51.0898, 2.5", "70.8246, -137.624, 55.5247, 2.5" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.04838, -67.1546, 2.95879, 1.4", "-2.8634, -69.2113, 2.19717, 1.4", "-3.42806, -71.4035, 1.55972, 0.44", "-3.60871, -72.4987, 1.30088, 0.44", "-3.70086, -73.3166, 1.14039, 0.88", "-3.84083, -75.0567, 0.854139, 1.11", "-3.91327, -76.314, 0.665857, 1.62", "-3.86068, -77.5923, 0.549035, 1.92", "-3.76258, -78.8036, 0.495576, 1.92", "-3.6637, -79.985, 0.43908, 1.99", "-3.57691, -81.2558, 0.36468, 1.92", "-3.49297, -82.5314, 0.280926, 1.69", "-3.41246, -83.4965, 0.231342, 1.4", "-3.32722, -84.4401, 0.191858, 1.25", "-3.31591, -84.5447, 0.18811, 1.25", "-3.08623, -86.107, 0.174124, 0.88", "-2.78946, -87.6615, 0.207715, 0.88", "-2.51086, -88.8171, 0.301136, 1.18", "-2.48146, -88.9212, 0.313062, 1.18", "-2.27677, -89.632, 0.411166, 1.4", "-2.01338, -90.7192, 0.582889, 1.4", "-1.83828, -91.7074, 0.810512, 1.03", "-1.75558, -92.9561, 1.14629, 0.74", "-1.88908, -94.3753, 1.58237, 0.59", "-2.11323, -95.2602, 1.88839, 0.44", "-2.5959, -96.3062, 2.28901, 0.44", "-3.38978, -97.4505, 2.7684, 1.18", "-4.008, -98.1199, 3.07462, 1.62", "-5.03319, -98.9934, 3.48081, 2.21", "-5.50885, -99.3648, 3.65468, 2.36", "-6.10814, -99.8689, 3.85035, 2.06", "-6.79799, -100.574, 4.03927, 1.33", "-7.31008, -101.133, 4.13425, 0.81", "-8.20038, -102.236, 4.27931, 0.44", "-8.70719, -102.999, 4.32777, 0.37", "-9.22474, -103.915, 4.36162, 0.81", "-9.54568, -104.612, 4.35383, 0.81" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-21.704, -51.1077, 19.3078, 0.37", "-21.9408, -50.5254, 19.8812, 0.37", "-21.9537, -50.497, 19.9087, 0.37", "-22.1411, -50.1009, 20.3367, 0.37", "-22.3648, -49.625, 20.8602, 0.37", "-22.5684, -49.1388, 21.3931, 0.37", "-22.6772, -48.7174, 21.8667, 0.37", "-22.6868, -48.438, 22.2128, 0.66", "-22.602, -47.9665, 22.8294, 0.66", "-22.5419, -47.8345, 23.0192, 0.66", "-22.2588, -47.3766, 23.6986, 0.44", "-21.7332, -46.7165, 24.6965, 0.29", "-21.2361, -46.2183, 25.4674, 0.66", "-20.937, -45.9655, 25.8689, 1.25", "-20.5841, -45.7051, 26.275, 1.25", "-20.9098, -42.3507, 31.8927, 1.25", "-19.9558, -38.592, 37.1913, 1.25", "-19.2879, -34.2319, 42.0788, 1.25", "-19.2003, -30.387, 47.4004, 1.25", "-20.0641, -25.6489, 51.8987, 1.25", "-20.2167, -21.6567, 57.1138, 1.25", "-19.2156, -18.5933, 62.8129, 1.25", "-18.7957, -15.2452, 68.4304, 1.25", "-17.9377, -11.3633, 73.6602, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-21.704, -51.1077, 19.3078, 0.96", "-23.3345, -51.7272, 19.6873, 0.96", "-24.1765, -51.9537, 19.9143, 0.96", "-25.4355, -52.1486, 20.2408, 1.03", "-25.8706, -52.1596, 20.3375, 1.18", "-25.9409, -52.1519, 20.3553, 1.18", "-26.668, -52.0797, 20.7084, 1.18", "-27.9811, -51.9649, 21.8088, 0.74", "-28.4777, -52.0322, 22.4876, 0.74", "-28.914, -52.3536, 23.5334, 0.74", "-29.3783, -53.1206, 25.2977, 1.03", "-29.7645, -55.0228, 28.5519, 0.81", "-29.683, -56.2686, 30.3353, 0.81", "-29.4654, -57.5701, 31.9234, 0.81", "-29.2945, -58.5858, 33.056, 1.33", "-29.2765, -58.7011, 33.176, 1.69", "-29.1507, -59.6927, 34.1182, 1.69", "-29.0711, -62.349, 36.4779, 0.66", "-29.1452, -63.7694, 37.8139, 0.59", "-29.3, -64.9302, 39.0154, 0.52", "-29.4999, -65.9296, 40.0877, 0.96", "-29.6289, -66.4168, 40.6231, 0.96", "-29.7886, -66.7858, 41.045, 0.96", "-34.1327, -74.5167, 49.5449, 0.96", "-38.0629, -83.3964, 57.1283, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "34.1962, 67.3335, 1.77403, 0.37", "34.7541, 67.5563, 0.8706, 0.37", "34.9695, 67.7467, 0.359483, 0.88", "35.0492, 67.9263, -0.0215357, 1.18", "35.2749, 68.5991, -1.36428, 0.29", "35.3507, 68.8688, -1.85812, 0.29", "35.4382, 69.199, -2.42509, 0.74", "35.5648, 69.8397, -3.38721, 1.4", "35.7671, 70.9803, -4.89361, 0.52", "35.8559, 71.5043, -5.53252, 0.44", "35.9799, 72.1827, -6.27106, 0.22", "36.0773, 72.5993, -6.69679, 0.88", "36.1402, 72.8067, -6.87804, 1.03", "36.5895, 73.9042, -7.66411, 0.22", "36.6098, 73.9497, -7.68759, 0.22", "36.7512, 74.2917, -7.84546, 0.74", "36.9483, 74.7663, -8.05194, 0.22", "37.0642, 75.0875, -8.19798, 0.59", "37.3286, 75.926, -8.60298, 0.22", "37.4851, 76.4767, -8.87231, 0.74", "37.6616, 77.0953, -9.16333, 1.33", "37.7559, 77.4302, -9.31504, 1.33", "38.0705, 78.5266, -9.7837, 0.22", "38.0853, 78.5829, -9.80505, 0.22", "38.3485, 79.6819, -10.1685, 0.59", "38.6378, 80.8176, -10.4937, 0.22", "38.8626, 81.5971, -10.6798, 1.55", "38.9649, 81.9174, -10.7479, 1.92", "39.5204, 83.4509, -11.0175, 0.22", "39.5818, 83.6047, -11.0418, 0.37", "40.0862, 84.7443, -11.1933, 0.15", "40.5216, 85.5815, -11.2847, 0.44", "40.7168, 85.9088, -11.3157, 0.44", "41.0256, 86.3783, -11.3553, 0.22", "41.4695, 86.9541, -11.397, 1.47", "41.6245, 87.1371, -11.4134, 1.69", "42.5524, 88.1553, -11.534, 0.22", "42.7578, 88.3743, -11.5635, 1.03", "43.1602, 88.7761, -11.6203, 1.69", "44.2886, 89.8193, -11.7807, 0.15", "45.3174, 90.6822, -11.8825, 0.15", "45.651, 90.9417, -11.9046, 1.55", "45.7104, 90.9857, -11.9093, 1.55", "46.6707, 91.6858, -11.9992, 0.15", "47.0221, 91.9274, -12.0298, 1.18", "48.0079, 92.5693, -12.0979, 0.15", "48.0702, 92.6091, -12.1009, 0.52", "49.0873, 93.2599, -12.141, 0.15", "49.6684, 93.6693, -12.1784, 0.52" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "34.1962, 67.3335, 1.77403, 0.88", "34.3694, 68.5831, 1.974, 0.88", "34.66, 70.4318, 2.21546, 1.92", "34.8555, 71.6077, 2.34557, 2.5", "35.0276, 72.4771, 2.42779, 2.5", "35.2508, 73.4697, 2.55855, 2.28", "35.5985, 74.9171, 2.78268, 1.25", "35.8832, 76.1045, 3.00415, 0.59", "36.1339, 77.2623, 3.18659, 0.29", "36.3149, 78.2418, 3.36414, 0.29", "36.4988, 79.6956, 3.65673, 0.29", "36.5018, 79.7742, 3.6761, 0.29", "36.3914, 80.9956, 4.02295, 0.29", "36.2502, 81.7239, 4.2399, 0.37", "36.2046, 81.8947, 4.2877, 0.37", "35.9194, 82.8103, 4.50789, 0.37", "35.6409, 83.9214, 4.6115, 1.18", "35.5517, 84.7242, 4.63069, 1.69", "35.5545, 84.8623, 4.61565, 1.69", "35.594, 85.4724, 4.50792, 1.69", "35.5999, 85.5681, 4.4866, 1.69", "35.707, 87.1918, 4.02857, 0.44", "35.7867, 88.4887, 3.62998, 0.22", "35.8278, 89.9787, 3.09196, 1.11", "35.8142, 90.8257, 2.79215, 1.4", "35.7525, 91.8668, 2.48781, 1.47", "35.6325, 93.154, 2.22876, 0.96", "35.522, 94.0872, 2.12965, 0.81", "35.2525, 96.2734, 2.09877, 0.52", "35.0443, 98.2921, 2.29687, 0.52", "34.9449, 100.035, 2.57634, 1.33", "34.9353, 101.366, 2.85657, 1.99", "34.9625, 102.51, 3.16198, 1.99", "35.0629, 104.01, 3.62744, 0.66", "35.2034, 105.239, 4.01749, 0.29", "35.3527, 106.213, 4.2077, 0.29", "35.5591, 107.424, 4.2536, 0.59", "35.7161, 108.404, 4.21814, 0.81", "35.7421, 108.585, 4.20582, 0.81", "35.965, 110.367, 4.02285, 0.29", "36.1429, 112.04, 3.85382, 0.29", "36.2584, 113.19, 3.77903, 0.96", "36.407, 114.367, 3.74763, 1.4", "36.5729, 115.539, 3.75064, 1.69", "36.6015, 115.747, 3.75849, 1.69", "36.7681, 116.887, 3.84818, 1.69", "36.9185, 118.004, 3.92176, 1.84", "37.0083, 119.056, 3.97995, 1.69", "37.061, 120.342, 4.02861, 1.4", "37.0199, 121.597, 4.08699, 0.81", "36.8955, 122.558, 4.1434, 0.52", "36.6692, 123.363, 4.19508, 0.52", "36.2096, 124.509, 4.27019, 0.52", "36.085, 124.768, 4.28663, 0.52", "35.6007, 125.66, 4.33965, 0.44", "35.1737, 126.481, 4.37901, 0.37", "34.7125, 127.627, 4.42048, 0.29", "34.4563, 128.666, 4.40116, 0.88", "34.3561, 129.47, 4.3641, 1.11", "34.3519, 129.581, 4.35507, 1.11", "34.4162, 130.972, 4.07673, 0.52", "34.5467, 132.244, 3.73964, 0.52", "34.7427, 133.737, 3.2917, 1.69", "34.9068, 135.037, 2.88444, 2.43", "35.0873, 136.56, 2.41202, 2.58", "35.3924, 139.311, 1.58646, 0.74", "35.5041, 140.387, 1.27367, 0.52", "35.6431, 141.741, 0.886404, 0.44", "35.7586, 142.983, 0.575754, 1.11", "35.8342, 144.043, 0.336113, 1.77", "35.8623, 144.778, 0.206656, 1.99", "35.8863, 146.356, 0.0165334, 1.62", "35.9718, 148.092, -0.222395, 0.44", "36.0761, 149.247, -0.399312, 0.29", "36.2848, 150.59, -0.618763, 0.88", "36.403, 151.075, -0.683775, 1.25", "36.6651, 151.867, -0.756681, 1.25", "37.5325, 153.615, -0.763521, 0.22", "37.5784, 153.681, -0.758176, 0.22", "38.014, 154.19, -0.701511, 0.96", "38.9746, 155.188, -0.546906, 1.18", "39.0523, 155.265, -0.534897, 1.18", "39.6871, 155.885, -0.515497, 1.18", "41.1144, 157.345, -0.65383, 0.22", "41.1799, 157.416, -0.668721, 0.22", "41.4055, 157.681, -0.771377, 0.74", "41.4599, 157.752, -0.810887, 0.74", "42.5162, 159.182, -1.71713, 0.74", "42.5741, 159.26, -1.77559, 1.4", "42.6186, 159.312, -1.81695, 1.4", "43.1676, 159.96, -2.26669, 1.69", "43.2231, 160.029, -2.307, 1.69", "43.5078, 160.394, -2.48733, 1.69", "44.4183, 161.629, -2.95323, 0.52", "45.1877, 162.758, -3.31925, 0.22", "45.6265, 163.503, -3.50391, 0.81", "45.9655, 164.169, -3.62361, 1.11", "46.0024, 164.259, -3.63484, 1.11", "46.1612, 164.72, -3.65737, 1.11", "46.3538, 165.364, -3.63537, 0.81", "46.71, 166.523, -3.54657, 0.29", "46.7419, 166.615, -3.53842, 0.29", "47.2589, 167.895, -3.42297, 0.29", "47.9347, 169.364, -3.29368, 0.29", "48.5817, 170.616, -3.18512, 0.81", "49.155, 171.611, -3.10354, 1.25", "49.2103, 171.697, -3.10073, 1.25", "49.7695, 172.559, -3.10085, 1.25", "50.1341, 173.114, -3.12154, 1.03", "50.2559, 173.307, -3.14641, 1.03", "50.7591, 174.131, -3.30451, 0.81", "51.6029, 175.617, -3.63449, 0.22", "52.2035, 176.704, -3.85392, 0.96", "52.5412, 177.301, -3.97239, 1.69", "53.2588, 178.425, -4.19947, 1.99", "53.3668, 178.569, -4.22953, 1.99", "53.9786, 179.254, -4.42609, 1.99", "55.2206, 180.413, -4.84362, 0.52", "55.9443, 181.014, -5.11596, 0.29", "56.6565, 181.571, -5.38741, 0.88", "57.1524, 181.945, -5.56812, 0.88", "58.3184, 182.905, -6.07168, 0.29", "58.3843, 182.968, -6.10495, 0.29", "58.8863, 183.569, -6.37822, 0.59", "58.9418, 183.645, -6.40458, 0.59", "59.204, 183.981, -6.49506, 0.59", "59.9583, 184.885, -6.66586, 0.22", "60.9176, 185.986, -6.78581, 1.62", "61.7637, 186.931, -6.90012, 2.65", "62.0356, 187.225, -6.938, 2.8", "63.4943, 188.804, -7.13935, 0.59", "63.9835, 189.332, -7.23968, 0.22", "65.0356, 190.411, -7.54105, 0.22", "65.8544, 191.253, -7.85576, 0.88", "66.1373, 191.521, -7.98731, 1.11", "66.5652, 191.894, -8.22421, 1.18", "67.9938, 193.029, -9.15788, 0.29", "68.809, 193.597, -9.69793, 0.29", "68.891, 193.645, -9.75108, 0.29", "69.9033, 194.221, -10.3619, 0.29", "70.934, 194.801, -10.9368, 0.22", "71.4958, 195.181, -11.1457, 0.96", "72.1339, 195.786, -11.2097, 1.25", "72.2578, 195.936, -11.2064, 1.25", "72.4691, 196.226, -11.1677, 1.25", "72.5314, 196.316, -11.1513, 1.25", "73.8283, 198.21, -10.8637, 0.22", "74.5544, 199.32, -10.8787, 1.33", "74.9223, 199.899, -10.9545, 1.92", "75.6539, 201.015, -11.1983, 1.69", "77.1047, 203.183, -11.8942, 0.22", "77.8019, 204.259, -12.4404, 1.11", "79.0464, 206.232, -13.8431, 0.29", "79.4084, 206.855, -14.3432, 1.33", "79.7437, 207.463, -14.8992, 1.69", "80.1553, 208.223, -15.6895, 1.69", "81.0213, 209.865, -17.5327, 0.37", "81.0595, 209.923, -17.5997, 0.37", "81.5959, 210.623, -18.4091, 0.37", "82.2058, 211.408, -19.38, 0.88", "82.5233, 211.821, -19.8729, 0.88", "82.5724, 211.877, -19.9346, 0.88", "83.3222, 212.884, -21.1564, 0.22", "83.6019, 213.367, -21.7647, 0.22", "83.8176, 213.88, -22.3834, 0.81", "83.9878, 214.438, -23.0197, 1.25", "84.1128, 214.864, -23.5197, 1.25", "84.954, 217.444, -26.5425, 0.37", "85.0844, 217.862, -27.0395, 0.29", "85.4759, 219.11, -28.5485, 0.59", "85.7671, 219.992, -29.5904, 0.59", "86.2397, 221.179, -31.024, 0.29", "86.5619, 221.891, -31.8802, 2.28", "87.8313, 224.238, -34.5814, 0.37", "88.1023, 224.732, -35.1517, 0.29", "88.334, 225.245, -35.6688, 0.22", "88.8511, 226.519, -36.8535, 0.22", "89.3305, 227.965, -38.0687, 0.22", "89.3508, 228.037, -38.1255, 0.22", "89.6981, 229.175, -38.805, 1.92", "90.306, 231.693, -40.2637, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "32.7008, 43.1013, 31.2653, 0.44", "33.6676, 42.8647, 31.1677, 0.44", "34.7945, 42.6593, 31.0547, 0.66", "36.1363, 42.5442, 30.9155, 0.29", "36.2212, 42.5497, 30.9066, 0.29", "37.5455, 42.7701, 30.7679, 0.29", "38.3797, 43.0974, 30.6924, 0.29", "38.4408, 43.1538, 30.6887, 0.29", "38.9566, 43.9838, 30.6233, 0.22", "39.4073, 44.7617, 30.5354, 0.22", "39.4454, 44.8126, 30.5274, 0.22", "40.5022, 45.9158, 30.3091, 0.22", "40.586, 45.9835, 30.2928, 0.22", "41.3022, 46.4799, 30.1615, 0.29", "42.6327, 47.2578, 29.9279, 0.29", "44.2725, 48.1046, 29.6442, 0.22", "45.2889, 48.5681, 29.4711, 0.22", "45.3568, 48.5923, 29.4599, 0.22", "45.9227, 48.7819, 29.3817, 0.37", "46.143, 48.8477, 29.365, 0.37", "46.4924, 48.9702, 29.3409, 0.37", "54.3755, 54.6121, 26.6558, 0.37", "62.4106, 59.0107, 22.5559, 0.37", "70.1278, 64.9216, 19.946, 0.37", "77.7033, 70.99, 17.2696, 0.37", "84.8624, 77.8388, 15.3555, 0.37", "92.7797, 84.0715, 15.1173, 0.37", "101.824, 88.4178, 15.5088, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "32.7008, 43.1013, 31.2653, 2.06", "32.0854, 44.4801, 37.6312, 2.06", "32.0264, 44.6122, 38.2416, 2.21" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-9.54568, -104.612, 4.35383, 0.22", "-8.2736, -104.467, 4.00676, 0.22", "-6.99347, -104.124, 3.80777, 0.22", "-6.55005, -103.973, 3.74979, 0.44", "-5.98102, -103.739, 3.70145, 0.44", "-4.51639, -103.076, 3.59726, 0.22", "-3.1247, -102.418, 3.50691, 0.22", "-1.23445, -101.442, 3.45749, 0.22", "-0.117379, -100.814, 3.43319, 0.44", "1.41344, -99.9322, 3.39559, 0.15", "2.21218, -99.4744, 3.36682, 0.15", "2.28337, -99.4337, 3.36136, 0.15", "3.06028, -98.9768, 3.24786, 0.59", "3.48403, -98.7146, 3.11915, 0.74", "3.54196, -98.6747, 3.09047, 0.74", "4.16825, -98.1968, 2.6773, 0.29", "4.70912, -97.7089, 2.25693, 0.44", "5.6555, -96.768, 1.45897, 0.22", "6.23289, -96.1556, 0.973993, 1.4", "7.26086, -95.0973, 0.127164, 0.22", "7.58896, -94.7702, -0.138371, 0.59", "8.82584, -93.5757, -1.14102, 0.22", "8.92097, -93.489, -1.21512, 0.22", "10.3956, -92.1893, -2.38341, 0.22", "11.4148, -91.3527, -3.22497, 0.22", "11.4828, -91.3003, -3.2813, 0.22", "12.2676, -90.6764, -3.96253, 0.22", "13.1374, -89.9072, -4.76931, 0.66", "13.8127, -89.211, -5.46959, 0.59", "14.8049, -87.9569, -6.65475, 0.22", "15.3123, -87.1171, -7.34081, 0.22", "15.9363, -85.8282, -8.2997, 0.22", "16.3606, -84.6413, -9.08132, 0.22", "16.4606, -84.2137, -9.3285, 0.66", "16.5446, -83.5817, -9.63471, 0.66", "16.5876, -82.0787, -10.2497, 0.22", "16.5671, -81.4994, -10.4801, 0.52", "16.5675, -81.1489, -10.6032, 0.52", "16.6406, -80.2462, -10.8727, 0.22", "16.678, -80.0231, -10.9295, 0.52", "16.8153, -79.5569, -11.021, 0.52", "16.8433, -79.4894, -11.0294, 0.52", "17.5114, -78.0164, -11.1669, 0.22", "17.6272, -77.7787, -11.1875, 0.37", "17.7307, -77.5992, -11.2026, 0.37", "18.6941, -76.1098, -11.3616, 0.15", "18.8463, -75.8957, -11.3898, 0.74", "19.2337, -75.3627, -11.4681, 0.74", "19.2838, -75.2976, -11.4799, 0.74", "20.3577, -73.9816, -11.7291, 0.22", "20.7022, -73.5949, -11.8061, 0.66", "21.078, -73.2589, -11.8832, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.54568, -104.612, 4.35383, 1.47", "-9.48927, -104.914, 4.30607, 1.47", "-9.36462, -105.93, 4.11582, 1.99", "-9.30641, -107.097, 3.89488, 1.77", "-9.31462, -108.655, 3.59583, 1.25", "-9.37962, -110.132, 3.32554, 0.81", "-9.47365, -111.387, 3.05792, 1.47", "-9.61698, -112.684, 2.74984, 2.06", "-9.78625, -113.85, 2.45386, 2.06", "-10.02, -115.123, 2.11355, 2.43", "-10.2852, -116.317, 1.79606, 2.14", "-10.759, -118.444, 1.21442, 0.96", "-11.0667, -119.856, 0.815217, 1.25" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "90.306, 231.693, -40.2637, 0.22", "90.9137, 232.787, -40.5279, 0.22", "91.2687, 233.417, -40.7149, 1.4", "91.4953, 233.838, -40.8419, 1.69", "91.7069, 234.245, -40.9238, 1.77", "92.1154, 235.035, -41.031, 1.4", "92.8607, 236.452, -41.153, 0.22", "92.8913, 236.507, -41.1543, 0.22", "93.3143, 237.26, -41.1415, 0.22", "93.9258, 238.371, -41.0832, 1.03", "94.2243, 238.929, -41.032, 1.03", "94.5761, 239.634, -40.9593, 0.59", "95.0322, 240.751, -40.8367, 0.22", "95.182, 241.2, -40.8221, 0.74", "95.2029, 241.26, -40.8302, 0.74", "95.4068, 241.799, -40.9814, 0.74", "95.8072, 242.759, -41.3576, 0.22", "96.1874, 243.547, -41.7227, 0.22", "96.6737, 244.437, -42.182, 0.96", "97.7315, 245.931, -43.0889, 0.22", "98.1238, 246.375, -43.3811, 1.18", "98.8396, 247.034, -43.864, 1.55", "99.6127, 247.628, -44.3235, 1.55", "99.6671, 247.664, -44.3534, 1.55", "101.1, 248.575, -45.098, 0.22", "101.795, 249.046, -45.4215, 0.44", "102.327, 249.404, -45.6567, 0.81", "102.704, 249.665, -45.8084, 0.81", "103.822, 250.505, -46.2489, 0.22", "104.313, 250.929, -46.421, 1.18", "104.712, 251.313, -46.5448, 1.84", "105.095, 251.659, -46.6802, 1.84", "106.336, 252.709, -47.133, 0.29", "106.974, 253.18, -47.3686, 0.29", "107.906, 253.811, -47.7071, 0.29", "108.503, 254.17, -47.9104, 1.11", "109.778, 254.781, -48.3186, 0.29", "109.833, 254.802, -48.3404, 0.29", "110.733, 255.074, -48.7432, 0.59", "111.415, 255.271, -49.1298, 0.74", "112.202, 255.524, -49.6277, 0.74", "112.844, 255.775, -50.0488, 0.74", "114.695, 256.659, -51.2764, 0.29", "115.017, 256.822, -51.502, 0.96", "116.396, 257.581, -52.5129, 0.29", "116.818, 257.801, -52.8065, 1.25", "117.07, 257.927, -52.9573, 1.69", "117.601, 258.199, -53.2119, 1.84", "118.497, 258.646, -53.5389, 0.88", "119.698, 259.245, -53.9265, 0.29", "120.39, 259.595, -54.1125, 0.37", "121.684, 260.276, -54.4532, 0.29", "122.176, 260.532, -54.5845, 1.25", "123.975, 261.446, -55.0526, 0.22", "124.999, 261.929, -55.3267, 1.4", "125.405, 262.11, -55.4452, 1.69", "126.122, 262.418, -55.681, 1.25", "127.915, 263.167, -56.3196, 0.22", "128.232, 263.288, -56.4421, 0.88", "129.763, 263.813, -57.049, 0.22", "129.826, 263.834, -57.0763, 0.44", "130.245, 263.965, -57.265, 0.44", "131.139, 264.209, -57.7348, 1.33", "132.525, 264.59, -58.5836, 0.22", "133.494, 264.852, -59.2298, 0.81", "133.808, 264.922, -59.4914, 0.81", "133.88, 264.936, -59.5733, 0.81", "134.916, 265.171, -61.3838, 0.29", "135.4, 265.315, -62.5303, 1.62", "135.425, 265.325, -62.6066, 1.62", "136.164, 265.74, -65.3931, 0.74", "136.746, 266.32, -68.1339, 0.88", "137.265, 267.145, -71.2403, 0.29", "137.324, 267.327, -71.7849, 1.11", "137.327, 267.348, -71.84, 1.11", "137.344, 267.539, -72.2395, 1.11", "137.284, 269.307, -74.8297, 0.22", "137.281, 269.457, -74.9998, 0.66", "137.292, 269.778, -75.3035, 0.66", "137.302, 269.881, -75.4044, 0.66", "137.455, 271.023, -76.5212, 0.15", "137.61, 271.823, -77.2585, 1.18", "137.626, 271.886, -77.3094, 1.18", "137.731, 272.273, -77.6317, 1.11", "138.175, 273.761, -78.89, 0.22", "138.195, 273.823, -78.9404, 0.29", "138.514, 274.574, -79.4841, 0.15", "138.514, 274.574, -79.4841, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "90.306, 231.693, -40.2637, 0.15", "89.4783, 232.284, -40.2453, 0.15", "88.2193, 233.181, -40.2172, 0.15", "86.2213, 234.606, -40.1727, 0.74", "86.1605, 234.649, -40.1714, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "32.0264, 44.6122, 38.2416, 0.96", "32.9924, 41.5448, 40.2596, 0.96", "33.3974, 40.0346, 41.3222, 0.59", "33.8553, 38.5277, 42.3869, 0.74", "34.1295, 37.7795, 42.9141, 0.66", "34.7289, 36.4091, 43.7812, 0.59", "35.3847, 35.1072, 44.5234, 0.44", "35.4334, 35.0268, 44.5488, 0.44", "36.3094, 33.7171, 44.8344, 0.44", "36.8793, 32.9798, 44.8629, 0.66", "37.8302, 31.7069, 44.8321, 0.81", "38.335, 30.9804, 44.815, 0.96", "38.9142, 30.0142, 44.821, 0.74", "39.6116, 28.5438, 44.9377, 0.52", "40.0662, 27.2067, 45.1386, 0.44", "40.4555, 25.6009, 45.5036, 0.44", "40.7222, 24.0236, 46.0111, 1.33", "40.8293, 23.2479, 46.2908, 1.55", "40.9137, 22.6743, 46.5093, 1.55", "40.9294, 22.5946, 46.5389, 1.55", "41.2033, 21.2981, 46.9569, 1.33", "41.5329, 20.1149, 47.2087, 0.96", "41.864, 19.1191, 47.3286, 0.59", "42.2878, 18.0139, 47.4637, 0.44", "42.5274, 17.4517, 47.5315, 0.52", "45.8049, 7.55106, 53.1072, 0.52", "50.3509, -1.59217, 59.0123, 0.52", "54.7316, -9.91112, 66.0905, 0.52", "58.0868, -17.912, 74.0298, 0.52", "61.9753, -25.4493, 82.1542, 0.52", "66.0701, -33.2231, 89.9581, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "32.0264, 44.6122, 38.2416, 0.81", "31.7011, 47.0912, 39.3674, 0.81", "31.6989, 48.2078, 39.7324, 0.66", "31.8262, 49.2125, 39.993, 0.66", "32.2129, 50.7007, 40.3287, 0.66", "32.7327, 52.0751, 40.6113, 0.44", "33.1904, 53.0188, 40.8263, 0.44", "34.0422, 54.2012, 40.8988, 0.66", "34.7177, 54.9212, 40.9103, 0.37", "35.4513, 55.4719, 40.9274, 0.37", "35.901, 55.6773, 40.9343, 1.25", "36.7889, 55.9009, 40.9132, 1.47" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-11.0667, -119.856, 0.815217, 0.52", "-11.7432, -121.078, 0.528713, 0.52", "-12.1139, -121.778, 0.391747, 1.33", "-12.4439, -122.411, 0.293169, 1.99", "-12.8014, -123.169, 0.203548, 2.28", "-13.073, -123.788, 0.159576, 2.58", "-13.5036, -124.82, 0.119719, 2.28", "-13.8356, -125.708, 0.101924, 1.92", "-14.1322, -126.559, 0.0724854, 1.69", "-14.54, -127.863, -0.0118388, 1.03", "-14.7855, -128.759, -0.106888, 0.52", "-15.0136, -129.736, -0.286778, 0.44", "-15.2155, -130.731, -0.541298, 1.11", "-15.3682, -131.584, -0.791806, 1.62", "-15.5127, -132.547, -1.10429, 1.77", "-15.6546, -133.646, -1.46804, 1.62", "-15.7516, -134.75, -1.79176, 0.66", "-15.7832, -135.691, -1.9854, 0.37", "-15.7544, -136.489, -1.98237, 0.96", "-15.7179, -136.956, -1.89027, 1.25", "-15.6636, -137.603, -1.70197, 1.25", "-15.6034, -138.438, -1.41156, 1.11", "-15.5754, -139.221, -1.19942, 0.74", "-15.6537, -140.904, -1.03472, 0.37", "-15.7843, -141.916, -1.11585, 0.37", "-16.0089, -143.103, -1.38268, 1.25", "-16.1623, -143.78, -1.61371, 1.84", "-16.5803, -145.465, -2.30534, 1.62", "-16.8595, -146.455, -2.79006, 0.52", "-17.0449, -147.061, -3.14999, 0.29", "-17.3187, -148.02, -3.7407, 1.11", "-17.4969, -148.733, -4.14088, 1.84", "-17.6142, -149.273, -4.42167, 2.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.0667, -119.856, 0.815217, 0.22", "-10.3657, -120.882, 1.20908, 0.22", "-9.58133, -122.03, 1.64979, 0.22", "-8.95411, -122.948, 2.0022, 0.22", "-8.38987, -123.774, 2.31924, 0.44", "-8.05998, -124.256, 2.50459, 0.44" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "36.7889, 55.9009, 40.9132, 1.33", "36.9388, 55.7995, 41.5201, 1.33", "37.4505, 55.4535, 43.5917, 0.96" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "36.7889, 55.9009, 40.9132, 0.29", "36.1372, 56.8015, 40.4459, 0.29", "35.519, 57.61, 40.0287, 0.29", "35.0015, 58.226, 39.7218, 0.29", "34.962, 58.2726, 39.6971, 0.29", "34.3184, 59.0332, 39.2944, 0.29", "34.279, 59.0798, 39.2697, 0.29", "33.7813, 59.5704, 38.9784, 0.29", "33.0626, 60.2112, 38.6095, 0.29", "32.6375, 60.6083, 38.3995, 0.29", "25.5074, 66.9109, 33.0328, 0.29", "19.1517, 73.4059, 26.9519, 0.29", "14.2742, 80.4056, 20.0804, 0.29", "8.6989, 88.2395, 14.7868, 0.29", "3.02325, 96.3153, 9.97123, 0.29", "-1.94774, 104.617, 4.75214, 0.29", "-7.31473, 113.703, 1.59345, 0.29", "-10.6498, 123.126, -3.09161, 0.29", "-12.7998, 132.843, -7.90469, 0.29", "-16.241, 141.164, -14.2254, 0.29", "-17.8461, 151.143, -18.7309, 0.29", "-19.6202, 161.453, -22.3722, 0.29", "-20.3042, 171.178, -27.5944, 0.29", "-21.3959, 181.804, -30.5749, 0.29", "-23.2708, 192.477, -32.9174, 0.29", "-24.5612, 203.17, -35.5658, 0.29", "-24.2844, 213.648, -39.1854, 0.29" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.6142, -149.273, -4.42167, 0.37", "-17.5267, -150.234, -5.117, 0.37", "-17.7078, -151.425, -6.25717, 0.37", "-18.0429, -152.652, -7.46204, 0.74", "-18.2424, -153.352, -8.35821, 0.37", "-18.3838, -153.862, -9.05663, 1.03", "-18.4655, -154.16, -9.46883, 1.18", "-19.109, -156.153, -12.3663, 0.29", "-19.2577, -156.584, -13.0152, 0.29", "-20.0869, -159.394, -17.1431, 0.29", "-20.2849, -160.169, -18.2697, 0.29", "-20.4136, -160.881, -19.2224, 1.25", "-20.4344, -161.102, -19.48, 1.47", "-20.4301, -161.304, -19.6617, 1.47", "-20.3394, -163.112, -20.9118, 0.22", "-20.3211, -163.456, -21.0406, 0.66", "-20.1832, -165.403, -21.6546, 0.22", "-20.1118, -166.145, -21.8439, 0.59", "-20.0794, -166.44, -21.9135, 0.59", "-19.8686, -167.989, -22.2385, 0.22", "-19.8686, -167.989, -22.2385, 0.37", "-19.8545, -168.069, -22.2614, 0.37", "-19.5107, -170.134, -22.935, 0.22", "-19.3098, -171.352, -23.3637, 0.96", "-19.2064, -171.978, -23.5905, 1.47", "-18.837, -174.177, -24.3964, 0.22", "-18.7476, -174.854, -24.6581, 0.37", "-18.7404, -174.928, -24.6883, 0.37", "-18.6787, -176.207, -25.2403, 0.22", "-18.6707, -176.71, -25.4493, 0.74", "-18.6753, -177.18, -25.6464, 0.81", "-18.6946, -178.793, -26.274, 0.15", "-18.6937, -179.18, -26.4365, 0.59", "-18.692, -179.289, -26.4839, 0.74", "-18.6846, -179.463, -26.5618, 0.74", "-18.5962, -180.609, -27.0249, 0.22", "-18.5165, -181.425, -27.3027, 0.88", "-18.5034, -181.516, -27.3259, 0.88", "-18.4942, -181.598, -27.3458, 1.18", "-18.4657, -181.918, -27.4238, 1.18", "-18.3203, -183.858, -27.8819, 0.22", "-18.2882, -184.301, -27.9805, 1.11", "-18.2506, -185.102, -28.2053, 1.18", "-18.1908, -186.763, -28.7193, 0.22", "-18.1592, -188.29, -29.2465, 0.22", "-18.1588, -188.527, -29.3348, 0.66", "-18.1654, -188.932, -29.4981, 0.88", "-18.2479, -190.95, -30.3371, 0.22", "-18.3045, -191.763, -30.6546, 0.22", "-18.4027, -192.801, -31.0293, 1.18", "-18.467, -193.335, -31.2014, 1.4", "-18.4775, -193.415, -31.2244, 1.4", "-18.766, -195.268, -31.6564, 0.22", "-19.034, -196.879, -31.9142, 0.22", "-19.1283, -197.393, -31.9843, 0.66", "-19.2637, -198.097, -32.0643, 0.96", "-19.3645, -198.599, -32.1253, 0.96", "-19.7717, -200.57, -32.3637, 0.15", "-20.0317, -201.79, -32.5048, 0.15", "-20.194, -202.511, -32.6191, 0.15", "-20.209, -202.579, -32.6302, 0.15", "-20.3326, -203.149, -32.7344, 0.96", "-20.4077, -203.591, -32.8085, 1.11", "-20.4128, -203.66, -32.8145, 1.11", "-20.4565, -205.529, -32.8825, 0.22", "-20.4338, -207.026, -32.8746, 0.22", "-20.4067, -207.616, -32.8494, 0.96", "-20.2976, -209.007, -32.7335, 0.15", "-20.0673, -210.677, -32.4539, 0.15", "-20.0203, -210.922, -32.3928, 1.03", "-20.0038, -210.985, -32.3698, 1.03", "-19.8785, -211.427, -32.1862, 1.03", "-19.8591, -211.502, -32.1541, 1.03", "-19.3485, -213.668, -31.218, 0.15", "-19.3346, -213.734, -31.1905, 0.15", "-19.2091, -214.354, -30.94, 0.15", "-19.1395, -214.754, -30.7923, 0.96", "-19.0468, -215.392, -30.5806, 1.11", "-18.7367, -217.696, -29.8635, 0.15", "-18.67, -218.28, -29.7073, 0.88", "-18.6187, -218.687, -29.5963, 1.18", "-18.4176, -220.105, -29.1965, 0.15", "-18.3089, -220.868, -28.9807, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.6142, -149.273, -4.42167, 1.4", "-17.7811, -150.429, -3.76304, 1.4", "-18.2066, -153.381, -2.4703, 0.44", "-18.4574, -155.126, -1.86711, 0.29", "-18.7228, -156.865, -1.421, 0.29", "-18.8798, -157.843, -1.23225, 0.81", "-19.1541, -159.593, -1.01833, 1.4", "-19.3452, -160.725, -1.04196, 1.99", "-19.4957, -161.434, -1.23585, 2.28", "-19.7197, -162.442, -1.62798, 2.43", "-19.8987, -163.203, -1.9661, 2.43", "-20.2985, -164.885, -2.6866, 1.03", "-20.5281, -165.929, -3.08269, 0.66", "-21.1204, -168.874, -4.05082, 0.29", "-21.3048, -169.998, -4.35213, 0.37", "-21.4728, -171.542, -4.66453, 0.37", "-21.535, -172.755, -4.81211, 0.66", "-21.4825, -174.085, -4.79938, 0.96", "-21.4068, -174.637, -4.72755, 1.18", "-21.1534, -175.732, -4.46448, 0.44", "-20.82, -177.034, -4.16372, 0.29", "-20.5149, -178.204, -3.92065, 1.25", "-20.1719, -179.745, -3.67745, 1.62", "-20.0382, -180.57, -3.57895, 1.84", "-19.9649, -181.508, -3.48692, 1.62", "-20.0442, -182.887, -3.41904, 0.81", "-20.2798, -184.032, -3.43154, 0.29", "-20.6082, -184.957, -3.51017, 0.29", "-21.0645, -185.859, -3.62038, 0.29", "-21.5776, -186.688, -3.72868, 0.29", "-22.1947, -187.586, -3.84203, 0.96", "-22.451, -187.971, -3.88561, 1.11", "-22.7043, -188.434, -3.94019, 1.11", "-22.7962, -188.731, -3.97479, 1.11", "-22.8759, -189.897, -4.05812, 0.29", "-22.7966, -190.785, -4.1042, 0.44", "-22.6561, -191.613, -4.12261, 0.59", "-22.5303, -192.312, -4.12942, 0.59", "-22.3725, -193.232, -4.12708, 0.52", "-22.1367, -194.737, -4.07703, 0.52", "-22.0179, -195.484, -4.03655, 0.88", "-21.8732, -196.696, -3.96055, 0.88", "-21.753, -197.912, -3.8691, 1.25", "-21.6461, -199.275, -3.75745, 1.69", "-21.5681, -200.447, -3.66227, 1.84", "-21.4986, -201.704, -3.57161, 1.84", "-21.4116, -203.301, -3.46196, 1.77", "-21.3608, -204.553, -3.38224, 1.77", "-21.3535, -205.086, -3.3509, 2.06", "-21.4089, -206.253, -3.27642, 2.06", "-21.6464, -208.032, -3.15613, 1.25", "-22.0179, -209.533, -3.04457, 0.66", "-22.6022, -211.171, -2.91563, 0.59", "-23.0834, -212.173, -2.84545, 0.66", "-23.7565, -213.388, -2.77406, 0.52", "-24.3049, -214.285, -2.73801, 0.52", "-25.0721, -215.495, -2.7242, 0.52", "-25.3658, -215.981, -2.73712, 0.66", "-25.9166, -217.158, -2.83339, 0.59", "-26.1447, -218.189, -2.97814, 0.59", "-26.1298, -219.137, -3.14601, 0.66", "-26.0313, -219.939, -3.28089, 0.66", "-25.9019, -220.749, -3.42003, 0.74", "-25.7918, -221.62, -3.56434, 0.29", "-25.7232, -222.683, -3.74493, 0.96", "-25.7516, -223.709, -3.92753, 1.69", "-25.915, -225.025, -4.17716, 1.69", "-26.1832, -226.304, -4.42189, 2.06", "-26.4132, -227.162, -4.56435, 2.14", "-26.7963, -228.438, -4.67073, 1.77", "-26.8203, -228.52, -4.67132, 1.77", "-27.1119, -229.623, -4.59993, 1.25", "-27.2775, -230.414, -4.49081, 0.81", "-27.4944, -231.938, -4.09424, 0.29", "-27.5624, -233.548, -3.58303, 0.74", "-27.5235, -234.236, -3.32917, 0.96", "-27.4625, -234.667, -3.17061, 1.11", "-27.3139, -235.341, -2.92356, 1.11", "-26.9283, -236.79, -2.59782, 0.37", "-26.5974, -238.08, -2.5332, 0.29", "-26.4411, -238.836, -2.60652, 0.29", "-26.3379, -239.67, -2.76715, 0.29", "-26.2963, -240.387, -2.93974, 0.96", "-26.2978, -242.421, -3.55922, 1.4", "-26.3607, -243.571, -3.98802, 1.69", "-26.4448, -244.402, -4.30015, 1.62", "-26.6648, -246.073, -4.90802, 1.25", "-26.9251, -247.898, -5.57788, 0.96", "-27.2453, -250.091, -6.34742, 0.96", "-27.55, -251.989, -6.9536, 0.81", "-27.7022, -252.971, -7.25424, 0.96", "-27.8185, -253.764, -7.47365, 0.96", "-27.9747, -254.978, -7.75857, 0.81", "-28.0958, -256.128, -7.98736, 0.59", "-28.145, -257.397, -8.1482, 0.59", "-28.0495, -258.626, -8.22727, 0.66", "-27.8926, -259.454, -8.27264, 1.25", "-27.7056, -260.051, -8.29892, 1.25", "-27.452, -260.61, -8.33874, 1.25", "-26.8463, -261.622, -8.52295, 0.81", "-25.9665, -262.99, -8.88042, 0.44", "-25.6398, -263.554, -9.0638, 0.66", "-25.2372, -264.377, -9.35679, 0.66", "-24.8265, -265.637, -9.79514, 0.52", "-24.6554, -266.937, -10.2001, 0.37", "-24.766, -268.18, -10.5071, 0.37", "-25.0619, -269.351, -10.7283, 0.37", "-25.3253, -270.143, -10.8194, 0.81", "-25.8626, -271.538, -10.8915, 0.81", "-26.2637, -272.541, -10.8769, 1.47", "-26.6932, -273.638, -10.8243, 2.14", "-26.8974, -274.211, -10.8106, 2.36", "-27.2076, -275.173, -10.8186, 1.99", "-27.5106, -276.231, -10.8509, 1.18", "-27.8686, -277.792, -10.948, 0.37", "-28.1223, -279.108, -11.0608, 0.37", "-28.2747, -280.279, -11.2186, 0.29", "-28.3161, -281.526, -11.4643, 0.81", "-28.1908, -282.513, -11.7443, 1.33", "-28.0084, -283.156, -11.9777, 1.33", "-27.977, -283.234, -12.0103, 1.33", "-27.3924, -284.525, -12.5546, 0.88", "-26.7135, -286.008, -13.1401, 0.44", "-26.0198, -287.71, -13.7538, 0.37", "-25.7212, -288.609, -14.0191, 0.29", "-25.4326, -289.955, -14.2954, 1.33", "-25.34, -290.982, -14.4326, 1.99", "-25.3402, -291.791, -14.4831, 1.92", "-25.3923, -292.934, -14.5149, 1.25", "-25.4809, -294.43, -14.5087, 0.44", "-25.5439, -296.293, -14.4859, 0.29", "-25.5393, -297.922, -14.4699, 0.29", "-25.4832, -299.447, -14.4677, 0.29", "-25.381, -300.857, -14.4707, 0.44", "-25.2913, -301.738, -14.4542, 0.81", "-25.1957, -302.581, -14.3737, 1.03", "-25.0985, -303.418, -14.2151, 1.03", "-25.0359, -304.533, -13.8878, 0.88", "-25.1177, -305.824, -13.3423, 0.52", "-25.3241, -307.145, -12.6723, 0.37", "-25.6648, -308.792, -11.7096, 0.81", "-25.8054, -309.372, -11.3329, 0.81", "-25.9661, -309.95, -10.9426, 0.81", "-26.3533, -311.181, -10.1049, 0.22", "-26.6911, -312.12, -9.49829, 0.22", "-27.1438, -313.391, -8.84146, 0.96", "-27.3083, -313.909, -8.66001, 1.33", "-27.559, -314.832, -8.42625, 1.99", "-27.7347, -315.554, -8.30606, 2.14", "-27.8586, -316.071, -8.2681, 2.14", "-28.155, -317.272, -8.22067, 1.47", "-28.4878, -318.597, -8.24131, 0.66", "-28.8056, -319.896, -8.26771, 0.52", "-28.9067, -320.351, -8.28, 1.11", "-29.0164, -320.938, -8.30382, 1.4" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "37.4505, 55.4535, 43.5917, 0.22", "36.2762, 54.3298, 43.7213, 0.22", "35.3087, 53.4039, 43.8281, 0.22", "27.8025, 42.4424, 44.9971, 0.22", "20.3804, 31.5218, 46.8973, 0.22", "12.0743, 21.8092, 50.6204, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "37.4505, 55.4535, 43.5917, 0.29", "37.8312, 56.5463, 44.0136, 0.29", "38.1497, 57.4604, 44.3665, 0.37", "38.4071, 58.1992, 44.6517, 0.37", "42.6029, 66.7858, 48.5851, 0.37", "45.5013, 76.1577, 51.9488, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-29.0164, -320.938, -8.30382, 0.66", "-29.5946, -321.32, -8.56094, 0.66", "-30.2614, -321.729, -8.89931, 0.22", "-30.6369, -321.959, -9.11257, 0.88", "-30.8412, -322.101, -9.23577, 1.33", "-31.0927, -322.305, -9.3951, 1.4", "-32.3506, -323.504, -10.2297, 0.44", "-32.5718, -323.758, -10.4067, 0.59", "-32.9262, -324.266, -10.7247, 0.29", "-33.2131, -324.786, -11.017, 0.29", "-33.4256, -325.298, -11.2518, 0.29", "-33.5665, -325.835, -11.4106, 0.74", "-33.618, -326.272, -11.4494, 1.11", "-33.6304, -326.589, -11.4641, 1.11", "-33.6365, -326.887, -11.4681, 1.11", "-33.67, -327.411, -11.5114, 0.66", "-33.7287, -327.994, -11.5924, 0.29", "-33.8593, -328.829, -11.7605, 0.22", "-34.112, -329.811, -12.0376, 0.22", "-34.2796, -330.194, -12.1786, 1.62", "-34.8569, -331.089, -12.5824, 1.69", "-35.0236, -331.272, -12.6848, 1.55", "-35.5302, -331.69, -12.9644, 0.74", "-36.2139, -332.12, -13.2915, 0.37", "-37.0415, -332.539, -13.5746, 0.29", "-37.318, -332.669, -13.631, 1.03", "-37.8263, -332.904, -13.6498, 1.25", "-37.9814, -332.973, -13.6385, 1.4", "-38.2786, -333.102, -13.5778, 1.4", "-39.0189, -333.437, -13.3339, 0.66", "-39.4716, -333.657, -13.1432, 0.66", "-40.0541, -333.95, -12.8703, 0.59", "-40.4875, -334.167, -12.6432, 0.74", "-40.7492, -334.299, -12.5049, 1.11", "-40.7492, -334.299, -12.5049, 1.4", "-40.979, -334.413, -12.3997, 1.55", "-41.1164, -334.477, -12.3456, 1.77", "-41.3167, -334.56, -12.287, 1.92", "-41.5634, -334.661, -12.2187, 1.92", "-41.8938, -334.796, -12.1208, 1.62", "-41.9353, -334.813, -12.1081, 1.62", "-42.8245, -335.186, -11.9304, 0.44", "-43.3713, -335.442, -11.8755, 0.44", "-43.7618, -335.648, -11.8634, 0.88", "-44.0307, -335.83, -11.8831, 0.88", "-44.3605, -336.106, -11.9367, 0.88", "-45.2383, -337.006, -12.1586, 0.29", "-45.6134, -337.546, -12.2717, 1.62", "-45.7556, -337.782, -12.327, 1.62", "-46.2801, -338.779, -12.579, 0.29", "-46.4775, -339.237, -12.6851, 1.03", "-46.5731, -339.55, -12.739, 1.03", "-46.7339, -340.869, -12.7351, 0.44" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-29.0164, -320.938, -8.30382, 0.22", "-28.769, -321.957, -7.79287, 0.22", "-28.5357, -322.83, -7.41005, 0.22", "-28.2165, -323.943, -6.97833, 1.03", "-28.0807, -324.395, -6.84131, 1.03", "-27.7427, -325.501, -6.57278, 0.22", "-27.5536, -326.123, -6.44367, 0.88", "-27.3805, -326.681, -6.35572, 1.03", "-27.2201, -327.165, -6.30921, 1.18", "-26.6558, -328.818, -6.26089, 0.22", "-26.3485, -329.712, -6.24915, 0.22", "-26.1708, -330.194, -6.25491, 0.52", "-26.0577, -330.469, -6.25361, 0.52", "-25.6703, -331.381, -6.25062, 0.22", "-25.6141, -331.504, -6.2506, 0.22", "-25.4693, -331.76, -6.25304, 1.11", "-25.1951, -332.165, -6.25444, 1.25", "-24.5622, -332.982, -6.26005, 0.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-46.7339, -340.869, -12.7351, 0.29", "-46.8649, -341.636, -12.9193, 0.29", "-46.9707, -342.348, -13.0742, 0.22", "-47.1261, -343.375, -13.2615, 0.22", "-47.2162, -343.83, -13.3286, 0.74", "-47.2782, -344.087, -13.3584, 0.88", "-47.3615, -344.394, -13.3859, 1.11", "-47.4872, -344.761, -13.3997, 1.11", "-47.7597, -345.505, -13.3962, 0.22", "-48.0036, -346.076, -13.3548, 0.22", "-48.2308, -346.533, -13.3301, 0.96", "-48.4837, -347.02, -13.3104, 1.47", "-48.6611, -347.399, -13.3115, 1.62", "-48.685, -347.449, -13.317, 1.62", "-48.9077, -347.888, -13.4515, 1.62", "-49.473, -348.897, -13.8799, 0.29", "-49.9612, -349.681, -14.3019, 0.29", "-50.6077, -350.614, -14.9176, 0.29", "-51.2392, -351.468, -15.5345, 0.81", "-52.1813, -352.675, -16.5456, 0.29", "-52.5592, -353.118, -16.9581, 0.29", "-53.0177, -353.634, -17.5026, 0.29", "-53.5899, -354.27, -18.2143, 1.11", "-53.9314, -354.665, -18.6524, 1.18", "-54.9625, -356.004, -20.0301, 0.59", "-55.3185, -356.483, -20.5187, 0.59", "-56.1192, -357.518, -21.5743, 0.96", "-56.5075, -357.997, -22.0357, 1.4", "-57.0691, -358.678, -22.6411, 1.4", "-57.5258, -359.216, -23.0827, 0.88", "-58.2639, -360.075, -23.6359, 0.37", "-58.942, -360.841, -24.0351, 0.37", "-59.4414, -361.388, -24.2214, 0.81", "-59.7974, -361.801, -24.3164, 1.47", "-60.0252, -362.075, -24.3758, 1.62", "-60.8386, -363.116, -24.6277, 0.37", "-61.4263, -363.875, -24.867, 0.37", "-61.8507, -364.339, -25.0832, 0.37", "-62.2718, -364.722, -25.3052, 0.88", "-63.4336, -365.7, -25.9169, 0.44", "-63.7295, -365.943, -26.0734, 0.96", "-64.4521, -366.521, -26.4644, 0.29", "-65.2565, -367.218, -26.901, 0.29", "-65.7605, -367.694, -27.1401, 0.29", "-66.3184, -368.29, -27.3153, 0.88", "-66.5781, -368.631, -27.3408, 1.25", "-66.7828, -368.935, -27.3414, 1.03", "-67.2026, -369.645, -27.3, 0.29", "-67.5296, -370.214, -27.2586, 0.29", "-68.243, -371.243, -27.1724, 0.29", "-68.5031, -371.577, -27.136, 0.81", "-68.5943, -371.697, -27.1216, 1.18", "-68.8885, -372.09, -27.0808, 1.4", "-69.2159, -372.528, -27.0485, 1.03", "-69.7017, -373.2, -27.0196, 0.52", "-70.0812, -373.772, -27.0149, 0.37", "-70.4813, -374.352, -26.9841, 0.74", "-71.0596, -375.157, -26.8914, 0.29", "-71.1366, -375.267, -26.869, 0.59", "-71.172, -375.318, -26.8539, 0.59", "-71.3544, -375.568, -26.7643, 0.59", "-71.8758, -376.251, -26.4906, 0.29", "-72.2079, -376.732, -26.2965, 0.29", "-72.4978, -377.296, -26.0967, 0.74", "-72.6594, -377.658, -25.9916, 1.11", "-72.8481, -378.135, -25.88, 1.33", "-73.0086, -378.573, -25.834, 1.33", "-73.3005, -379.454, -25.8015, 0.29", "-73.5362, -380.215, -25.7985, 0.29", "-73.7048, -380.765, -25.8217, 1.11", "-73.8468, -381.255, -25.8547, 1.47", "-74.1694, -382.387, -25.9738, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-46.7339, -340.869, -12.7351, 0.37", "-47.2352, -340.949, -11.4749, 0.37", "-47.7077, -341.025, -10.2871, 0.66", "-47.9893, -341.07, -9.57914, 0.88", "-48.9078, -341.217, -7.27005, 0.29", "-49.3277, -341.284, -6.21465, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-74.1694, -382.387, -25.9738, 0.22", "-73.3334, -383.518, -23.8192, 0.22", "-72.8237, -384.048, -22.5348, 0.37", "-72.247, -384.647, -21.0821, 0.29", "-72.2217, -384.673, -21.0183, 0.29", "-71.1646, -385.771, -18.3548, 0.66", "-70.0841, -386.894, -15.6326, 0.44", "-69.3361, -387.495, -13.7255, 3.54" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-74.1694, -382.387, -25.9738, 0.44", "-75.2294, -382.986, -25.698, 0.44", "-76.1343, -383.481, -25.4625, 0.29", "-76.6971, -383.798, -25.3161, 0.66", "-77.278, -384.098, -25.2037, 0.96", "-77.4906, -384.217, -25.1684, 1.25", "-77.5681, -384.268, -25.1567, 1.25", "-77.9497, -384.585, -25.1119, 1.25", "-78.4711, -385.116, -25.0465, 0.74", "-79.5474, -386.411, -24.8375, 0.29", "-80.0473, -387.089, -24.7122, 0.44", "-80.5778, -387.846, -24.5719, 0.44", "-81.1318, -388.689, -24.4128, 0.52", "-81.6534, -389.573, -24.2391, 0.52", "-82.2179, -390.684, -23.993, 0.74", "-82.4935, -391.394, -23.7985, 1.03" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-82.4935, -391.394, -23.7985, 0.37", "-78.9606, -391.373, -21.8139, 0.37", "-77.0696, -391.357, -20.806, 0.52", "-75.7019, -391.33, -20.1333, 0.29", "-75.632, -391.329, -20.099, 0.29", "-74.2309, -391.301, -19.4099, 0.44", "-72.6878, -391.27, -18.651, 0.22", "-71.7778, -391.221, -18.3173, 0.66", "-71.0965, -391.185, -18.0746, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-82.4935, -391.394, -23.7985, 1.4", "-82.5931, -392.927, -22.7813, 1.4", "-82.6371, -393.605, -22.3317, 1.62", "-82.6893, -394.41, -21.7981, 1.47", "-82.7226, -394.922, -21.4583, 1.47" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-82.7226, -394.922, -21.4583, 0.22", "-85.7351, -396.326, -22.2495, 0.22", "-87.4504, -397.092, -22.5879, 0.22", "-88.2095, -397.386, -22.7097, 0.22", "-88.2771, -397.411, -22.7192, 0.22", "-89.3259, -397.729, -22.8835, 0.52", "-90.6725, -398.078, -23.0743, 0.59", "-91.9776, -398.281, -23.2566, 0.22", "-93.3293, -398.439, -23.581, 0.22", "-93.3946, -398.446, -23.6036, 0.22", "-95.0547, -398.656, -24.2446, 0.22", "-96.7694, -398.924, -24.9609, 0.88", "-99.3759, -399.425, -26.0987, 0.29", "-101.674, -399.953, -27.184, 0.22", "-104.154, -400.712, -28.3935, 0.22", "-105.56, -401.279, -29.0619, 0.22", "-106.256, -401.658, -29.3786, 0.52", "-106.304, -401.692, -29.4007, 0.52", "-106.613, -401.992, -29.5108, 0.52", "-107.698, -403.309, -29.7142, 0.22", "-108.58, -404.723, -29.7657, 0.22", "-108.855, -405.194, -29.789, 0.29", "-109.49, -406.193, -29.8478, 0.29", "-109.525, -406.246, -29.8511, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-82.7226, -394.922, -21.4583, 0.29", "-83.3043, -395.917, -21.2237, 0.29", "-83.6542, -396.561, -21.2, 0.29", "-84.1295, -397.531, -21.2509, 0.22", "-84.4618, -398.304, -21.3278, 1.4", "-84.5802, -398.632, -21.363, 1.69", "-84.8154, -399.345, -21.4403, 1.33", "-85.2707, -400.956, -21.6341, 0.74", "-85.4734, -401.783, -21.7301, 0.66", "-85.6028, -402.536, -21.8032, 0.52", "-85.725, -403.373, -21.8359, 0.52", "-85.8525, -404.212, -21.7957, 0.96", "-85.922, -404.595, -21.7287, 1.4", "-86.0995, -405.428, -21.44, 1.47", "-86.329, -406.302, -21.0605, 0.29", "-86.5343, -406.974, -20.7236, 0.29", "-86.6374, -407.338, -20.5131, 0.59", "-86.6871, -407.557, -20.3758, 0.59", "-86.841, -408.332, -19.8773, 0.29", "-86.9032, -408.662, -19.664, 0.59", "-86.9427, -408.891, -19.5146, 0.59", "-87.044, -410.231, -18.7016, 0.29", "-87.0478, -410.719, -18.4122, 0.29", "-87.045, -410.77, -18.3822, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-87.045, -410.77, -18.3822, 0.66", "-86.9835, -410.924, -17.7219, 0.66", "-86.9396, -410.995, -17.2322, 0.81", "-86.3527, -411.056, -14.5032, 0.22", "-86.0569, -411.066, -13.3853, 0.22", "-85.6606, -411.104, -12.2246, 0.37", "-85.3457, -411.125, -11.3928, 0.22", "-85.124, -411.129, -10.8497, 0.44", "-83.9534, -411.167, -8.21331, 0.29", "-83.2202, -411.173, -6.64867, 0.29", "-82.0731, -411.236, -4.27769, 0.44", "-81.6895, -411.306, -3.42731, 0.37", "-81.3787, -411.417, -2.6719, 0.29", "-80.8419, -411.75, -1.14572, 0.59", "-80.5819, -412.099, -0.0260458, 0.37", "-80.434, -412.513, 1.10195, 0.37", "-80.434, -412.892, 1.92995, 0.29", "-80.4605, -413.321, 2.71144, 0.29", "-80.5572, -414.152, 4.03969, 0.29", "-80.7245, -415.073, 5.41651, 0.29", "-80.8246, -415.548, 6.10826, 0.29", "-80.9026, -415.866, 6.59951, 0.29", "-81.0612, -416.473, 7.64351, 0.44", "-81.1539, -416.758, 8.1557, 0.44", "-81.3509, -417.561, 9.73152, 0.29", "-81.3587, -417.809, 10.2965, 0.29", "-81.2939, -418.044, 10.9621, 0.29", "-81.0824, -418.336, 11.8718, 0.29", "-80.7714, -418.619, 12.6741, 0.52", "-79.4959, -419.579, 14.7651, 0.29", "-78.799, -420.067, 15.629, 0.29", "-78.1809, -420.49, 16.3062, 0.29", "-77.0659, -421.202, 17.4507, 0.29", "-76.2234, -421.696, 18.2712, 0.37", "-75.1945, -422.262, 19.2999, 0.37", "-74.1668, -422.896, 20.4934, 0.29", "-74.124, -422.927, 20.5547, 0.29", "-73.4982, -423.435, 21.7635, 0.29", "-73.4779, -423.452, 21.8265, 0.29", "-73.2179, -423.757, 23.1404, 0.29", "-73.1065, -424.07, 24.2658, 0.29", "-73.0991, -424.26, 24.7333, 0.37", "-73.1334, -424.588, 25.2984, 0.37", "-73.3545, -425.45, 26.3921, 0.29", "-73.5565, -425.982, 26.9902, 0.29", "-73.9241, -426.712, 27.7102, 0.29", "-74.2962, -427.349, 28.3127, 0.29", "-74.7877, -428.144, 29.0185, 0.29", "-75.2673, -428.901, 29.6297, 0.29", "-75.7071, -429.696, 30.2735, 0.29", "-76.0188, -430.36, 30.8586, 0.29", "-76.0418, -430.44, 30.9317, 0.29", "-76.1077, -431.179, 31.5815, 0.59", "-75.9852, -432.165, 32.4403, 0.22", "-75.6038, -433.869, 33.8045, 0.22", "-75.5766, -433.945, 33.8649, 0.22", "-75.1384, -434.919, 34.6561, 0.29", "-74.9252, -435.334, 34.9951, 0.29", "-74.3765, -436.245, 35.7565, 0.29", "-73.872, -437.024, 36.393, 0.29", "-72.9199, -438.644, 37.5384, 0.59", "-72.759, -438.921, 37.7268, 0.37", "-72.4745, -439.43, 38.0496, 0.29", "-72.1319, -439.895, 38.3264, 0.29", "-68.3786, -444.423, 46.1607, 0.29" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-87.045, -410.77, -18.3822, 0.88", "-87.4056, -411.318, -18.3675, 0.88", "-87.7732, -411.94, -18.2812, 0.88", "-88.4149, -413.044, -18.0634, 0.22", "-88.88, -413.831, -17.7633, 0.22", "-89.3297, -414.62, -17.3471, 0.22", "-89.9382, -415.716, -16.673, 0.22", "-90.3518, -416.483, -16.07, 0.66", "-90.4727, -416.732, -15.8366, 0.66", "-91.0211, -418.078, -14.4376, 0.22", "-91.2536, -418.749, -13.7819, 0.22", "-91.2974, -418.864, -13.671, 0.22", "-91.4821, -419.306, -13.2578, 0.81", "-91.6461, -419.712, -12.9254, 0.96", "-92.1971, -421.16, -11.8873, 0.22", "-92.5736, -422.167, -11.3554, 0.74", "-92.8363, -422.814, -11.0534, 1.11", "-92.8685, -422.89, -11.0201, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_25", "dend_0", "dend_48", "dend_45", "dend_41", "dend_26", "dend_4", "dend_1", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_36", "dend_27", "dend_24", "dend_5", "dend_3", "dend_2", "dend_40", "dend_37", "dend_35", "dend_28", "dend_23", "dend_6", "dend_39", "dend_38", "dend_34", "dend_29", "dend_8", "dend_7", "dend_31", "dend_30", "dend_22", "dend_9", "dend_33", "dend_32", "dend_11", "dend_10", "dend_13", "dend_12", "dend_21", "dend_14", "dend_20", "dend_15", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_25", "dend_0", "dend_48", "dend_45", "dend_41", "dend_26", "dend_4", "dend_1", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_36", "dend_27", "dend_24", "dend_5", "dend_3", "dend_2", "dend_40", "dend_37", "dend_35", "dend_28", "dend_23", "dend_6", "dend_39", "dend_38", "dend_34", "dend_29", "dend_8", "dend_7", "dend_31", "dend_30", "dend_22", "dend_9", "dend_33", "dend_32", "dend_11", "dend_10", "dend_13", "dend_12", "dend_21", "dend_14", "dend_20", "dend_15", "dend_19", "dend_16", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L4_LBC_2a3578f975_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_26
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_4
create dend_24
public dend_24
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_27
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_5
create dend_23
public dend_23
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_22, id: dend_22, parent: dend_8
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4500002013478323)
    connect dend_25(0), soma_0(0.4500002013478323)
    connect dend_0(0), soma_0(0.4500002013478323)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_22(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.10291, 7.90899, -2.15843, 3.34194 ) }
    soma_0 { pt3dadd( 1.9029, 7.18155, -1.9753, 5.85803 ) }
    soma_0 { pt3dadd( 1.70289, 6.4541, -1.79218, 8.32042 ) }
    soma_0 { pt3dadd( 1.50288, 5.72665, -1.60905, 9.88267 ) }
    soma_0 { pt3dadd( 1.30286, 4.9992, -1.42592, 10.8351 ) }
    soma_0 { pt3dadd( 1.10285, 4.27175, -1.24279, 11.6726 ) }
    soma_0 { pt3dadd( 0.902844, 3.54431, -1.05967, 12.0481 ) }
    soma_0 { pt3dadd( 0.702833, 2.81686, -0.876538, 12.3612 ) }
    soma_0 { pt3dadd( 0.502823, 2.08941, -0.693411, 12.4649 ) }
    soma_0 { pt3dadd( 0.302812, 1.36196, -0.510283, 12.4525 ) }
    soma_0 { pt3dadd( 0.102801, 0.634515, -0.327156, 12.4603 ) }
    soma_0 { pt3dadd( -0.0972091, -0.0929329, -0.144028, 12.179 ) }
    soma_0 { pt3dadd( -0.29722, -0.820381, 0.0390996, 11.8016 ) }
    soma_0 { pt3dadd( -0.49723, -1.54783, 0.222227, 11.2647 ) }
    soma_0 { pt3dadd( -0.697241, -2.27528, 0.405355, 10.6908 ) }
    soma_0 { pt3dadd( -0.897251, -3.00272, 0.588482, 9.84874 ) }
    soma_0 { pt3dadd( -1.09726, -3.73017, 0.77161, 8.85587 ) }
    soma_0 { pt3dadd( -1.29727, -4.45762, 0.954738, 7.71115 ) }
    soma_0 { pt3dadd( -1.49728, -5.18507, 1.13787, 5.78386 ) }
    soma_0 { pt3dadd( -1.69729, -5.91252, 1.32099, 3.65042 ) }
    soma_0 { pt3dadd( -1.8973, -6.63996, 1.50412, 2.23669 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.645558, 5.04146, -18.5313, 1.18 ) }
    dend_44 { pt3dadd( -0.698759, 5.10051, -18.5396, 1.18 ) }
    dend_44 { pt3dadd( -1.17463, 5.88052, -18.6933, 1.18 ) }
    dend_44 { pt3dadd( -1.45918, 6.82706, -18.9, 1.18 ) }
    dend_44 { pt3dadd( -1.48503, 7.00871, -18.9415, 1.18 ) }
    dend_44 { pt3dadd( -1.43027, 8.0194, -19.1955, 1.03 ) }
    dend_44 { pt3dadd( -0.961981, 9.81106, -19.6616, 0.52 ) }
    dend_44 { pt3dadd( -0.300733, 11.193, -20.0322, 0.66 ) }
    dend_44 { pt3dadd( 0.37432, 12.2885, -20.4081, 0.81 ) }
    dend_44 { pt3dadd( 0.41309, 12.3518, -20.4466, 0.81 ) }
    dend_44 { pt3dadd( 0.809631, 13.1285, -21.1002, 0.59 ) }
    dend_44 { pt3dadd( 1.0607, 13.7234, -21.7474, 0.52 ) }
    dend_44 { pt3dadd( 0.991619, 14.0456, -22.4761, 0.52 ) }
    dend_44 { pt3dadd( 0.704045, 14.3864, -23.6182, 1.25 ) }
    dend_44 { pt3dadd( -0.261107, 15.0354, -26.2496, 1.69 ) }
    dend_44 { pt3dadd( -0.473718, 15.1556, -26.728, 1.69 ) }
    dend_44 { pt3dadd( -0.539313, 15.1885, -26.8484, 1.69 ) }
    dend_44 { pt3dadd( -2.18506, 16.0637, -29.4101, 0.81 ) }
    dend_44 { pt3dadd( -2.21971, 16.0841, -29.4613, 0.81 ) }
    dend_44 { pt3dadd( -2.76284, 16.4288, -30.241, 0.66 ) }
    dend_44 { pt3dadd( -3.47358, 16.8745, -31.2611, 0.59 ) }
    dend_44 { pt3dadd( -4.00761, 17.1574, -32.0696, 0.44 ) }
    dend_44 { pt3dadd( -4.81572, 17.5176, -33.2395, 0.37 ) }
    dend_44 { pt3dadd( -6.23373, 18.1603, -35.2511, 1.18 ) }
    dend_44 { pt3dadd( -7.32281, 18.5977, -36.8734, 1.47 ) }
    dend_44 { pt3dadd( -8.17643, 18.8612, -38.2575, 1.62 ) }
    dend_44 { pt3dadd( -9.18202, 19.0155, -39.955, 1.62 ) }
    dend_44 { pt3dadd( -9.69171, 19.0172, -40.8759, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 49/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.27444, 7.11196, 4.47868, 2.8 ) }
    dend_25 { pt3dadd( 1.27444, 7.11196, 4.47868, 2.8 ) }
    dend_25 { pt3dadd( 1.67555, 7.9047, 4.47868, 2.58 ) }
    dend_25 { pt3dadd( 2.37525, 9.18351, 4.47868, 2.43 ) }
    dend_25 { pt3dadd( 3.02742, 10.3032, 4.47868, 2.43 ) }
    dend_25 { pt3dadd( 3.48131, 11.0527, 4.47868, 2.43 ) }
    dend_25 { pt3dadd( 4.05662, 11.9809, 4.47868, 2.73 ) }
    dend_25 { pt3dadd( 4.52788, 12.6848, 4.47868, 2.95 ) }
    dend_25 { pt3dadd( 5.10576, 13.4303, 4.47868, 3.09 ) }
    dend_25 { pt3dadd( 5.66867, 14.0312, 4.47868, 3.09 ) }
    dend_25 { pt3dadd( 6.34907, 14.6364, 4.41443, 3.17 ) }
    dend_25 { pt3dadd( 6.38768, 14.6682, 4.41017, 3.17 ) }
    dend_25 { pt3dadd( 7.19538, 15.2803, 4.3036, 3.17 ) }
    dend_25 { pt3dadd( 8.01222, 15.8482, 4.17565, 2.28 ) }
    dend_25 { pt3dadd( 9.12865, 16.5492, 3.96611, 2.14 ) }
    dend_25 { pt3dadd( 10.811, 17.4898, 3.59466, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.56556, -6.09003, 3.97868, 3.76 ) }
    dend_0 { pt3dadd( -2.56556, -6.09003, 3.97868, 3.76 ) }
    dend_0 { pt3dadd( -2.62817, -7.45644, 3.90747, 2.28 ) }
    dend_0 { pt3dadd( -2.71823, -9.75541, 3.76654, 1.77 ) }
    dend_0 { pt3dadd( -2.77951, -11.6407, 3.61328, 1.77 ) }
    dend_0 { pt3dadd( -2.82207, -12.9479, 3.4569, 2.36 ) }
    dend_0 { pt3dadd( -2.88217, -14.8168, 3.16896, 3.02 ) }
    dend_0 { pt3dadd( -2.93373, -16.3762, 2.86115, 3.39 ) }
    dend_0 { pt3dadd( -2.93516, -16.4364, 2.84743, 3.39 ) }
    dend_0 { pt3dadd( -2.97266, -18.3219, 2.33539, 3.09 ) }
    dend_0 { pt3dadd( -3.0344, -20.0876, 1.7805, 2.65 ) }
    dend_0 { pt3dadd( -3.10651, -21.8612, 1.15836, 2.36 ) }
    dend_0 { pt3dadd( -3.1795, -23.2253, 0.635448, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.8973, -6.63996, 1.50412, 0.709256 ) }
    axon_0 { pt3dadd( -5.87395, -21.1032, 1.50412, 0.709256 ) }
    axon_0 { pt3dadd( -9.85061, -35.5665, 1.50412, 0.709256 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 81/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -9.69171, 19.0172, -40.8759, 0.37 ) }
    dend_48 { pt3dadd( -9.38556, 18.208, -42.6803, 0.37 ) }
    dend_48 { pt3dadd( -9.14639, 17.4946, -44.0575, 1.25 ) }
    dend_48 { pt3dadd( -9.11179, 17.3701, -44.2679, 1.25 ) }
    dend_48 { pt3dadd( -8.72338, 15.7202, -46.9156, 0.44 ) }
    dend_48 { pt3dadd( -8.67906, 15.476, -47.2907, 1.33 ) }
    dend_48 { pt3dadd( -8.63518, 15.1245, -47.8279, 1.47 ) }
    dend_48 { pt3dadd( -8.61306, 14.7168, -48.4715, 0.52 ) }
    dend_48 { pt3dadd( -8.58896, 14.408, -48.9732, 0.29 ) }
    dend_48 { pt3dadd( -8.48398, 14.0129, -49.8444, 0.81 ) }
    dend_48 { pt3dadd( -8.41631, 13.9211, -50.2734, 0.81 ) }
    dend_48 { pt3dadd( -8.13361, 13.6196, -51.9737, 1.33 ) }
    dend_48 { pt3dadd( -7.8843, 13.4209, -53.4025, 1.62 ) }
    dend_48 { pt3dadd( -7.48131, 13.1923, -55.6094, 1.84 ) }
    dend_48 { pt3dadd( -6.98193, 13.0038, -58.0954, 2.36 ) }
    dend_48 { pt3dadd( -5.9175, 12.7505, -62.887, 2.36 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -9.69171, 19.0172, -40.8759, 0.44 ) }
    dend_45 { pt3dadd( -10.5583, 20.1738, -42.8427, 0.44 ) }
    dend_45 { pt3dadd( -10.7874, 20.4796, -43.3628, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( -11.0462, 20.825, -43.9501, 2.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.811, 17.4898, 3.59466, 0.81 ) }
    dend_41 { pt3dadd( 10.2575, 18.9415, 3.81566, 0.81 ) }
    dend_41 { pt3dadd( 9.70332, 20.3522, 4.01564, 0.81 ) }
    dend_41 { pt3dadd( 9.13375, 21.8037, 4.19231, 0.74 ) }
    dend_41 { pt3dadd( 8.84187, 22.5455, 4.26816, 0.81 ) }
    dend_41 { pt3dadd( 8.5104, 23.356, 4.33513, 0.44 ) }
    dend_41 { pt3dadd( 7.85313, 24.8664, 4.4276, 0.44 ) }
    dend_41 { pt3dadd( 7.47742, 25.6825, 4.46568, 0.44 ) }
    dend_41 { pt3dadd( 7.04617, 26.5641, 4.4702, 0.66 ) }
    dend_41 { pt3dadd( 6.71661, 27.2447, 4.42902, 0.96 ) }
    dend_41 { pt3dadd( 6.38186, 28.0621, 4.41072, 1.11 ) }
    dend_41 { pt3dadd( 6.06901, 29.1326, 4.35541, 1.11 ) }
    dend_41 { pt3dadd( 6.05567, 29.2257, 4.34769, 1.11 ) }
    dend_41 { pt3dadd( 6.03102, 30.5498, 4.20644, 0.37 ) }
    dend_41 { pt3dadd( 6.08785, 31.824, 4.04646, 0.37 ) }
    dend_41 { pt3dadd( 6.24626, 33.5, 3.81376, 0.88 ) }
    dend_41 { pt3dadd( 6.50576, 35.4677, 3.51769, 0.37 ) }
    dend_41 { pt3dadd( 6.68914, 36.6906, 3.31754, 0.37 ) }
    dend_41 { pt3dadd( 6.86596, 38.1099, 3.00925, 0.37 ) }
    dend_41 { pt3dadd( 6.92179, 38.7917, 2.79441, 0.59 ) }
    dend_41 { pt3dadd( 6.91709, 38.9046, 2.74628, 0.59 ) }
    dend_41 { pt3dadd( 6.81519, 39.4646, 2.42591, 0.81 ) }
    dend_41 { pt3dadd( 6.69221, 39.9028, 2.16252, 0.81 ) }
    dend_41 { pt3dadd( 6.42316, 40.9016, 1.47652, 0.59 ) }
    dend_41 { pt3dadd( 6.26446, 41.7397, 0.90934, 0.37 ) }
    dend_41 { pt3dadd( 6.14937, 42.7094, 0.249423, 0.37 ) }
    dend_41 { pt3dadd( 6.09176, 44.262, -0.832702, 1.25 ) }
    dend_41 { pt3dadd( 6.10746, 44.6445, -1.08975, 1.4 ) }
    dend_41 { pt3dadd( 6.2483, 46.0322, -1.94004, 0.81 ) }
    dend_41 { pt3dadd( 6.42158, 47.2175, -2.56976, 0.88 ) }
    dend_41 { pt3dadd( 6.47346, 47.5465, -2.73525, 0.88 ) }
    dend_41 { pt3dadd( 6.61197, 48.8813, -3.38099, 0.52 ) }
    dend_41 { pt3dadd( 6.59033, 50.0519, -3.90312, 0.37 ) }
    dend_41 { pt3dadd( 6.49201, 50.9673, -4.29201, 0.66 ) }
    dend_41 { pt3dadd( 6.35437, 51.668, -4.56065, 0.66 ) }
    dend_41 { pt3dadd( 6.05391, 52.971, -5.02138, 0.44 ) }
    dend_41 { pt3dadd( 5.78156, 54.3335, -5.48327, 0.29 ) }
    dend_41 { pt3dadd( 5.46177, 56.1673, -6.08734, 0.81 ) }
    dend_41 { pt3dadd( 5.37894, 56.9124, -6.35638, 1.11 ) }
    dend_41 { pt3dadd( 5.35517, 57.9388, -6.73193, 1.25 ) }
    dend_41 { pt3dadd( 5.42612, 59.2098, -7.19201, 1.25 ) }
    dend_41 { pt3dadd( 5.80097, 62.0191, -8.15993, 0.29 ) }
    dend_41 { pt3dadd( 5.93992, 62.6177, -8.37024, 0.66 ) }
    dend_41 { pt3dadd( 6.39064, 63.9272, -8.81514, 0.66 ) }
    dend_41 { pt3dadd( 6.91233, 65.1558, -9.18072, 0.44 ) }
    dend_41 { pt3dadd( 6.96174, 65.2494, -9.20313, 0.44 ) }
    dend_41 { pt3dadd( 7.40982, 65.9937, -9.29378, 0.44 ) }
    dend_41 { pt3dadd( 8.10043, 67.0931, -9.21871, 0.29 ) }
    dend_41 { pt3dadd( 8.73017, 68.3496, -9.07402, 0.44 ) }
    dend_41 { pt3dadd( 9.28016, 69.8096, -8.84817, 0.44 ) }
    dend_41 { pt3dadd( 9.34252, 70.03, -8.81646, 0.44 ) }
    dend_41 { pt3dadd( 9.68073, 71.5372, -8.63252, 0.52 ) }
    dend_41 { pt3dadd( 9.85322, 72.6154, -8.52842, 0.52 ) }
    dend_41 { pt3dadd( 10.0451, 74.3714, -8.47211, 0.66 ) }
    dend_41 { pt3dadd( 10.1998, 76.2021, -8.5316, 1.47 ) }
    dend_41 { pt3dadd( 10.352, 77.8452, -8.67029, 2.14 ) }
    dend_41 { pt3dadd( 10.4797, 78.976, -8.83213, 2.14 ) }
    dend_41 { pt3dadd( 10.6215, 80.1483, -9.06219, 1.92 ) }
    dend_41 { pt3dadd( 10.8069, 81.7872, -9.49479, 0.88 ) }
    dend_41 { pt3dadd( 10.9022, 82.8567, -9.85345, 0.44 ) }
    dend_41 { pt3dadd( 11.0078, 84.579, -10.5281, 0.44 ) }
    dend_41 { pt3dadd( 11.0883, 86.5662, -11.3273, 0.37 ) }
    dend_41 { pt3dadd( 11.114, 87.4734, -11.6818, 0.59 ) }
    dend_41 { pt3dadd( 11.128, 88.4555, -12.0324, 0.88 ) }
    dend_41 { pt3dadd( 11.1119, 89.1736, -12.2482, 0.88 ) }
    dend_41 { pt3dadd( 11.0298, 90.2964, -12.5475, 0.22 ) }
    dend_41 { pt3dadd( 10.8058, 92.2485, -12.9637, 0.22 ) }
    dend_41 { pt3dadd( 10.8058, 92.2485, -12.9637, 0.96 ) }
    dend_41 { pt3dadd( 10.6586, 93.2514, -13.145, 1.03 ) }
    dend_41 { pt3dadd( 10.5379, 93.9911, -13.2945, 1.03 ) }
    dend_41 { pt3dadd( 10.1202, 96.2074, -13.8139, 0.29 ) }
    dend_41 { pt3dadd( 9.88351, 97.3374, -14.1014, 1.25 ) }
    dend_41 { pt3dadd( 9.64679, 98.3933, -14.382, 1.77 ) }
    dend_41 { pt3dadd( 9.16177, 100.647, -14.9757, 0.37 ) }
    dend_41 { pt3dadd( 8.95017, 101.672, -15.2484, 0.29 ) }
    dend_41 { pt3dadd( 8.74229, 102.832, -15.5527, 0.29 ) }
    dend_41 { pt3dadd( 8.53334, 104.343, -15.8723, 0.22 ) }
    dend_41 { pt3dadd( 8.51626, 104.487, -15.8933, 0.22 ) }
    dend_41 { pt3dadd( 8.43632, 105.288, -15.9425, 0.59 ) }
    dend_41 { pt3dadd( 8.42495, 105.396, -15.9448, 0.59 ) }
    dend_41 { pt3dadd( 8.33564, 106.182, -16.0344, 0.81 ) }
    dend_41 { pt3dadd( 8.1222, 107.652, -16.309, 0.29 ) }
    dend_41 { pt3dadd( 7.91014, 108.818, -16.586, 0.44 ) }
    dend_41 { pt3dadd( 7.80871, 109.428, -16.7998, 0.44 ) }
    dend_41 { pt3dadd( 7.52492, 111.514, -17.7068, 0.29 ) }
    dend_41 { pt3dadd( 7.33986, 113.084, -18.4748, 1.62 ) }
    dend_41 { pt3dadd( 7.21895, 114.226, -19.0853, 2.06 ) }
    dend_41 { pt3dadd( 7.17115, 114.801, -19.4147, 2.43 ) }
    dend_41 { pt3dadd( 6.96787, 118.087, -21.2304, 0.29 ) }
    dend_41 { pt3dadd( 6.90163, 119.468, -21.9424, 0.22 ) }
    dend_41 { pt3dadd( 6.89942, 119.568, -21.9841, 0.22 ) }
    dend_41 { pt3dadd( 6.88599, 120.694, -22.3499, 0.22 ) }
    dend_41 { pt3dadd( 6.90877, 121.572, -22.5523, 1.03 ) }
    dend_41 { pt3dadd( 7.0097, 123.177, -22.7911, 1.84 ) }
    dend_41 { pt3dadd( 7.07658, 123.829, -22.835, 2.06 ) }
    dend_41 { pt3dadd( 7.32275, 125.627, -22.9568, 0.29 ) }
    dend_41 { pt3dadd( 7.55732, 127.024, -23.0754, 0.22 ) }
    dend_41 { pt3dadd( 8.03031, 129.285, -23.2454, 0.22 ) }
    dend_41 { pt3dadd( 8.29855, 130.416, -23.3247, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_41 { pt3dadd( 8.70665, 131.971, -23.4316, 0.22 ) }
    dend_41 { pt3dadd( 8.89361, 132.645, -23.4795, 0.59 ) }
    dend_41 { pt3dadd( 9.10955, 133.498, -23.5333, 0.59 ) }
    dend_41 { pt3dadd( 9.45344, 135.103, -23.5797, 0.22 ) }
    dend_41 { pt3dadd( 9.61388, 136.076, -23.5792, 1.03 ) }
    dend_41 { pt3dadd( 9.76922, 137.16, -23.5512, 1.84 ) }
    dend_41 { pt3dadd( 9.91371, 138.238, -23.5123, 2.06 ) }
    dend_41 { pt3dadd( 10.264, 140.856, -23.4514, 0.29 ) }
    dend_41 { pt3dadd( 10.3924, 141.835, -23.4452, 0.52 ) }
    dend_41 { pt3dadd( 10.6718, 144.007, -23.4966, 0.29 ) }
    dend_41 { pt3dadd( 10.6863, 144.115, -23.4996, 0.29 ) }
    dend_41 { pt3dadd( 10.8095, 144.946, -23.5256, 0.52 ) }
    dend_41 { pt3dadd( 10.928, 145.727, -23.5577, 0.59 ) }
    dend_41 { pt3dadd( 10.9481, 145.834, -23.5637, 0.59 ) }
    dend_41 { pt3dadd( 11.3424, 147.794, -23.6662, 0.22 ) }
    dend_41 { pt3dadd( 11.548, 148.855, -23.7201, 0.22 ) }
    dend_41 { pt3dadd( 11.5782, 148.993, -23.7266, 0.22 ) }
    dend_41 { pt3dadd( 11.7695, 149.795, -23.7629, 0.96 ) }
    dend_41 { pt3dadd( 11.7998, 149.899, -23.7678, 0.96 ) }
    dend_41 { pt3dadd( 12.1212, 150.98, -23.7414, 1.62 ) }
    dend_41 { pt3dadd( 12.2886, 151.585, -23.6992, 1.99 ) }
    dend_41 { pt3dadd( 12.4887, 152.335, -23.629, 1.99 ) }
    dend_41 { pt3dadd( 12.7984, 153.476, -23.6077, 1.4 ) }
    dend_41 { pt3dadd( 13.4644, 156.176, -23.7302, 0.22 ) }
    dend_41 { pt3dadd( 13.8388, 157.816, -23.8795, 1.03 ) }
    dend_41 { pt3dadd( 14.083, 158.983, -24.037, 1.33 ) }
    dend_41 { pt3dadd( 14.1019, 159.088, -24.0559, 1.33 ) }
    dend_41 { pt3dadd( 14.5003, 161.691, -24.6659, 0.29 ) }
    dend_41 { pt3dadd( 14.7061, 163.229, -25.1407, 0.29 ) }
    dend_41 { pt3dadd( 14.7174, 163.328, -25.1846, 0.29 ) }
    dend_41 { pt3dadd( 14.7766, 163.725, -25.3804, 0.96 ) }
    dend_41 { pt3dadd( 14.8952, 164.438, -25.6879, 1.25 ) }
    dend_41 { pt3dadd( 14.9607, 164.798, -25.8264, 1.25 ) }
    dend_41 { pt3dadd( 15.1392, 165.534, -26.0581, 1.25 ) }
    dend_41 { pt3dadd( 15.8007, 167.797, -26.7688, 0.29 ) }
    dend_41 { pt3dadd( 16.0229, 168.573, -27.0032, 0.74 ) }
    dend_41 { pt3dadd( 16.3377, 169.649, -27.3216, 0.88 ) }
    dend_41 { pt3dadd( 16.7972, 171.137, -27.7849, 0.22 ) }
    dend_41 { pt3dadd( 17.1213, 172.266, -28.1361, 0.22 ) }
    dend_41 { pt3dadd( 17.5855, 173.947, -28.6473, 1.25 ) }
    dend_41 { pt3dadd( 17.8147, 174.759, -28.8675, 1.55 ) }
    dend_41 { pt3dadd( 17.8504, 174.872, -28.8978, 1.55 ) }
    dend_41 { pt3dadd( 18.4587, 176.599, -29.2564, 0.22 ) }
    dend_41 { pt3dadd( 18.8999, 177.802, -29.4121, 0.22 ) }
    dend_41 { pt3dadd( 18.9579, 177.951, -29.4258, 0.22 ) }
    dend_41 { pt3dadd( 19.4028, 178.937, -29.4706, 0.44 ) }
    dend_41 { pt3dadd( 19.7958, 179.864, -29.4924, 0.66 ) }
    dend_41 { pt3dadd( 20.387, 181.4, -29.4914, 0.22 ) }
    dend_41 { pt3dadd( 20.6899, 182.321, -29.4574, 1.18 ) }
    dend_41 { pt3dadd( 20.8495, 182.906, -29.45, 1.47 ) }
    dend_41 { pt3dadd( 20.9743, 183.57, -29.4654, 1.47 ) }
    dend_41 { pt3dadd( 21.1274, 185.224, -29.5692, 0.22 ) }
    dend_41 { pt3dadd( 21.1277, 185.333, -29.576, 0.22 ) }
    dend_41 { pt3dadd( 21.0816, 186.319, -29.6421, 0.22 ) }
    dend_41 { pt3dadd( 21.0155, 187.319, -29.6791, 0.88 ) }
    dend_41 { pt3dadd( 20.9723, 187.91, -29.6867, 1.11 ) }
    dend_41 { pt3dadd( 20.9323, 188.507, -29.6806, 1.11 ) }
    dend_41 { pt3dadd( 20.7992, 189.852, -29.6513, 0.29 ) }
    dend_41 { pt3dadd( 20.6514, 191.01, -29.6335, 0.22 ) }
    dend_41 { pt3dadd( 20.47, 192.089, -29.6264, 0.22 ) }
    dend_41 { pt3dadd( 20.3573, 192.63, -29.6298, 0.74 ) }
    dend_41 { pt3dadd( 20.1638, 193.375, -29.6521, 0.74 ) }
    dend_41 { pt3dadd( 19.4867, 195.488, -29.7123, 0.29 ) }
    dend_41 { pt3dadd( 19.4523, 195.575, -29.7162, 0.29 ) }
    dend_41 { pt3dadd( 19.118, 196.292, -29.727, 0.44 ) }
    dend_41 { pt3dadd( 19.0148, 196.482, -29.7171, 0.44 ) }
    dend_41 { pt3dadd( 18.4957, 197.355, -29.6258, 0.66 ) }
    dend_41 { pt3dadd( 17.8285, 198.339, -29.422, 1.25 ) }
    dend_41 { pt3dadd( 17.3291, 198.986, -29.2422, 1.4 ) }
    dend_41 { pt3dadd( 17.2641, 199.069, -29.2207, 1.4 ) }
    dend_41 { pt3dadd( 16.1877, 200.528, -28.8961, 0.37 ) }
    dend_41 { pt3dadd( 16.017, 200.801, -28.8647, 0.37 ) }
    dend_41 { pt3dadd( 15.3843, 202.011, -28.8423, 1.03 ) }
    dend_41 { pt3dadd( 14.8568, 203.345, -28.8671, 1.33 ) }
    dend_41 { pt3dadd( 14.5552, 204.513, -28.8927, 1.69 ) }
    dend_41 { pt3dadd( 14.3256, 206.053, -28.8917, 2.06 ) }
    dend_41 { pt3dadd( 14.2707, 208.163, -28.8173, 0.29 ) }
    dend_41 { pt3dadd( 14.3732, 209.894, -28.7041, 0.29 ) }
    dend_41 { pt3dadd( 14.7044, 212.371, -28.4936, 0.29 ) }
    dend_41 { pt3dadd( 15.214, 215.023, -28.1771, 0.29 ) }
    dend_41 { pt3dadd( 15.6984, 217.065, -27.8771, 1.11 ) }
    dend_41 { pt3dadd( 16.2313, 219.091, -27.5279, 0.22 ) }
    dend_41 { pt3dadd( 16.4384, 219.842, -27.382, 0.22 ) }
    dend_41 { pt3dadd( 16.6353, 220.58, -27.2747, 0.81 ) }
    dend_41 { pt3dadd( 16.7911, 221.374, -27.2381, 0.96 ) }
    dend_41 { pt3dadd( 16.9775, 223.272, -27.2992, 0.22 ) }
    dend_41 { pt3dadd( 17.0265, 224.254, -27.382, 0.81 ) }
    dend_41 { pt3dadd( 17.0308, 225.23, -27.4961, 0.96 ) }
    dend_41 { pt3dadd( 17.0011, 227.865, -27.8188, 0.22 ) }
    dend_41 { pt3dadd( 16.96, 230.812, -28.1951, 0.22 ) }
    dend_41 { pt3dadd( 16.9094, 232.87, -28.4753, 1.4 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 10.811, 17.4898, 3.59466, 1.55 ) }
    dend_26 { pt3dadd( 11.8765, 18.2283, 4.63154, 1.55 ) }
    dend_26 { pt3dadd( 13.2193, 19.2243, 5.94611, 1.25 ) }
    dend_26 { pt3dadd( 14.5257, 20.2866, 7.37655, 1.47 ) }
    dend_26 { pt3dadd( 15.1629, 20.8746, 8.16403, 1.47 ) }
    dend_26 { pt3dadd( 16.1916, 22.0194, 9.61265, 1.69 ) }
    dend_26 { pt3dadd( 17.0958, 23.1884, 10.9812, 1.84 ) }
    dend_26 { pt3dadd( 17.4366, 23.8078, 11.6088, 1.84 ) }
    dend_26 { pt3dadd( 18.1555, 25.6332, 13.2168, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( 18.6272, 27.3231, 14.4822, 1.62 ) }
    dend_26 { pt3dadd( 18.9372, 29.0222, 15.6012, 1.4 ) }
    dend_26 { pt3dadd( 19.0359, 30.0402, 16.1937, 1.4 ) }
    dend_26 { pt3dadd( 19.1287, 31.53, 16.9654, 1.33 ) }
    dend_26 { pt3dadd( 19.1645, 32.7493, 17.5511, 1.69 ) }
    dend_26 { pt3dadd( 19.1704, 34.4056, 18.1951, 2.21 ) }
    dend_26 { pt3dadd( 19.1694, 35.3037, 18.5074, 2.28 ) }
    dend_26 { pt3dadd( 19.2263, 37.2634, 19.2332, 2.58 ) }
    dend_26 { pt3dadd( 19.2561, 38.0663, 19.6022, 2.58 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 9/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.1795, -23.2253, 0.635448, 1.11 ) }
    dend_4 { pt3dadd( -3.52775, -24.7917, 0.505861, 1.11 ) }
    dend_4 { pt3dadd( -3.85646, -25.9504, 0.452579, 1.25 ) }
    dend_4 { pt3dadd( -4.18687, -27.0396, 0.412392, 1.4 ) }
    dend_4 { pt3dadd( -4.37607, -27.6118, 0.388611, 1.55 ) }
    dend_4 { pt3dadd( -4.69343, -28.5595, 0.351865, 1.47 ) }
    dend_4 { pt3dadd( -5.28541, -30.4139, 0.248746, 1.11 ) }
    dend_4 { pt3dadd( -5.8593, -32.1162, 0.128518, 1.18 ) }
    dend_4 { pt3dadd( -5.87781, -32.1769, 0.12418, 1.18 ) }
    dend_4 { pt3dadd( -6.25118, -33.6206, 0.01083, 1.18 ) }
    dend_4 { pt3dadd( -6.52642, -35.0602, -0.129363, 1.03 ) }
    dend_4 { pt3dadd( -6.662, -36.5074, -0.284638, 1.62 ) }
    dend_4 { pt3dadd( -6.62725, -37.3681, -0.375516, 1.99 ) }
    dend_4 { pt3dadd( -6.50002, -38.0499, -0.460357, 2.21 ) }
    dend_4 { pt3dadd( -6.22134, -38.9875, -0.569413, 2.21 ) }
    dend_4 { pt3dadd( -5.79363, -40.1413, -0.635262, 1.25 ) }
    dend_4 { pt3dadd( -5.34016, -41.3318, -0.60821, 1.03 ) }
    dend_4 { pt3dadd( -4.78354, -42.8974, -0.406949, 1.03 ) }
    dend_4 { pt3dadd( -4.25506, -44.6191, -0.00396501, 1.03 ) }
    dend_4 { pt3dadd( -3.90214, -46.1448, 0.576827, 0.88 ) }
    dend_4 { pt3dadd( -3.65825, -47.8778, 1.52005, 1.18 ) }
    dend_4 { pt3dadd( -3.5706, -49.1064, 2.32741, 1.99 ) }
    dend_4 { pt3dadd( -3.53726, -50.2045, 3.12057, 2.21 ) }
    dend_4 { pt3dadd( -3.5285, -51.2256, 3.88632, 2.36 ) }
    dend_4 { pt3dadd( -3.51311, -52.7288, 5.04414, 1.4 ) }
    dend_4 { pt3dadd( -3.41266, -53.9102, 5.87348, 0.96 ) }
    dend_4 { pt3dadd( -3.04742, -55.4211, 6.66131, 0.96 ) }
    dend_4 { pt3dadd( -2.64724, -56.515, 6.99661, 1.18 ) }
    dend_4 { pt3dadd( -2.2176, -57.5312, 7.09949, 1.47 ) }
    dend_4 { pt3dadd( -2.06716, -57.9039, 7.06583, 1.55 ) }
    dend_4 { pt3dadd( -1.64885, -59.1406, 6.72329, 0.88 ) }
    dend_4 { pt3dadd( -1.41301, -60.1528, 6.33435, 0.81 ) }
    dend_4 { pt3dadd( -1.3096, -61.3628, 5.79746, 0.74 ) }
    dend_4 { pt3dadd( -1.29737, -62.4514, 5.29227, 1.03 ) }
    dend_4 { pt3dadd( -1.38518, -64.009, 4.56101, 1.25 ) }
    dend_4 { pt3dadd( -1.54939, -65.3666, 3.89848, 2.28 ) }
    dend_4 { pt3dadd( -1.70248, -66.0448, 3.55593, 2.73 ) }
    dend_4 { pt3dadd( -2.04838, -67.1546, 2.95879, 3.09 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 47/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.1795, -23.2253, 0.635448, 1.11 ) }
    dend_1 { pt3dadd( -4.08998, -23.8723, 0.984508, 1.11 ) }
    dend_1 { pt3dadd( -5.24702, -24.6637, 1.59578, 1.03 ) }
    dend_1 { pt3dadd( -6.15085, -25.2727, 2.1074, 1.03 ) }
    dend_1 { pt3dadd( -6.71498, -25.6563, 2.46215, 1.25 ) }
    dend_1 { pt3dadd( -7.32484, -26.0885, 2.87196, 1.25 ) }
    dend_1 { pt3dadd( -7.77776, -26.4335, 3.19663, 1.25 ) }
    dend_1 { pt3dadd( -9.13224, -27.5517, 4.27877, 1.55 ) }
    dend_1 { pt3dadd( -9.5, -27.8913, 4.61963, 1.62 ) }
    dend_1 { pt3dadd( -10.355, -28.8147, 5.57051, 1.69 ) }
    dend_1 { pt3dadd( -10.8477, -29.4203, 6.21783, 1.84 ) }
    dend_1 { pt3dadd( -11.4118, -30.1924, 7.03258, 2.14 ) }
    dend_1 { pt3dadd( -11.7335, -30.6972, 7.57516, 1.84 ) }
    dend_1 { pt3dadd( -12.317, -31.8068, 8.69414, 1.62 ) }
    dend_1 { pt3dadd( -12.9101, -33.1714, 10.0622, 0.74 ) }
    dend_1 { pt3dadd( -13.1847, -33.9745, 10.8305, 1.03 ) }
    dend_1 { pt3dadd( -13.275, -34.3131, 11.1393, 1.03 ) }
    dend_1 { pt3dadd( -13.4886, -35.4622, 12.1135, 0.88 ) }
    dend_1 { pt3dadd( -13.5793, -36.3102, 12.7525, 0.96 ) }
    dend_1 { pt3dadd( -13.6043, -37.1911, 13.2569, 1.55 ) }
    dend_1 { pt3dadd( -13.5854, -37.8469, 13.542, 1.77 ) }
    dend_1 { pt3dadd( -13.5583, -38.4507, 13.759, 1.77 ) }
    dend_1 { pt3dadd( -13.5186, -39.5482, 14.0891, 1.25 ) }
    dend_1 { pt3dadd( -13.5225, -40.7776, 14.3544, 1.03 ) }
    dend_1 { pt3dadd( -13.5947, -42.0027, 14.5742, 1.03 ) }
    dend_1 { pt3dadd( -13.7137, -43.0085, 14.7109, 0.96 ) }
    dend_1 { pt3dadd( -13.8228, -43.5892, 14.7823, 1.33 ) }
    dend_1 { pt3dadd( -14.0722, -44.5626, 14.8798, 1.03 ) }
    dend_1 { pt3dadd( -14.5488, -45.9836, 15.0145, 0.96 ) }
    dend_1 { pt3dadd( -15.0212, -47.0641, 15.1427, 0.96 ) }
    dend_1 { pt3dadd( -15.2642, -47.483, 15.2227, 1.33 ) }
    dend_1 { pt3dadd( -15.8093, -48.2117, 15.4448, 1.77 ) }
    dend_1 { pt3dadd( -16.1939, -48.6112, 15.6402, 2.14 ) }
    dend_1 { pt3dadd( -16.8866, -49.1571, 16.0287, 1.99 ) }
    dend_1 { pt3dadd( -17.5466, -49.5367, 16.4488, 1.18 ) }
    dend_1 { pt3dadd( -18.553, -50.0292, 17.1123, 0.88 ) }
    dend_1 { pt3dadd( -19.3949, -50.4013, 17.6909, 0.88 ) }
    dend_1 { pt3dadd( -20.2807, -50.7339, 18.3152, 0.96 ) }
    dend_1 { pt3dadd( -20.6854, -50.8582, 18.6032, 1.11 ) }
    dend_1 { pt3dadd( -21.704, -51.1077, 19.3078, 1.25 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -9.85061, -35.5665, 1.50412, 0.169042 ) }
    axon_1 { pt3dadd( -13.8273, -50.0298, 1.50412, 0.169042 ) }
    axon_1 { pt3dadd( -17.8039, -64.493, 1.50412, 0.169042 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.9175, 12.7505, -62.887, 1.03 ) }
    dend_50 { pt3dadd( -4.59357, 12.1923, -80.0181, 1.03 ) }
    dend_50 { pt3dadd( -4.36893, 12.1395, -83.3508, 1.03 ) }
    dend_50 { pt3dadd( -4.3606, 12.1392, -83.4809, 1.03 ) }
    dend_50 { pt3dadd( -3.64567, 12.4676, -95.2691, 1.69 ) }
    dend_50 { pt3dadd( -3.01946, 12.9688, -106.205, 0.81 ) }
    dend_50 { pt3dadd( -2.04178, 14.1289, -124.019, 1.11 ) }
    dend_50 { pt3dadd( -1.77965, 14.8171, -130.995, 1.77 ) }
    dend_50 { pt3dadd( -1.73861, 14.9473, -132.033, 1.77 ) }
    dend_50 { pt3dadd( -1.16029, 16.6106, -143.825, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( -0.999102, 17.0406, -146.422, 1.47 ) }
    dend_50 { pt3dadd( -0.462207, 18.6827, -155.01, 0.52 ) }
    dend_50 { pt3dadd( 0.0447747, 20.0582, -162.259, 0.96 ) }
    dend_50 { pt3dadd( 0.370387, 20.8156, -166.566, 0.96 ) }
    dend_50 { pt3dadd( 1.65361, 23.2903, -181.592, 1.25 ) }
    dend_50 { pt3dadd( 1.67267, 23.3191, -181.779, 1.25 ) }
    dend_50 { pt3dadd( 2.73804, 24.6481, -190.452, 1.33 ) }
    dend_50 { pt3dadd( 3.92066, 26.0185, -199.286, 0.59 ) }
    dend_50 { pt3dadd( 3.93597, 26.0376, -199.399, 0.59 ) }
    dend_50 { pt3dadd( 4.27603, 26.5838, -202.151, 1.47 ) }
    dend_50 { pt3dadd( 4.45796, 26.8972, -203.361, 1.99 ) }
    dend_50 { pt3dadd( 5.95071, 29.2723, -212.335, 1.62 ) }
    dend_50 { pt3dadd( 7.36356, 31.3459, -220.007, 0.29 ) }
    dend_50 { pt3dadd( 7.66097, 31.82, -221.76, 1.99 ) }
    dend_50 { pt3dadd( 8.7335, 33.3646, -227.797, 0.29 ) }
    dend_50 { pt3dadd( 9.1266, 33.8915, -230.047, 0.29 ) }
    dend_50 { pt3dadd( 9.63798, 34.5678, -232.896, 1.77 ) }
    dend_50 { pt3dadd( 9.73413, 34.6697, -233.35, 1.92 ) }
    dend_50 { pt3dadd( 9.7618, 34.6908, -233.46, 1.92 ) }
    dend_50 { pt3dadd( 12.2178, 35.8939, -242.375, 0.52 ) }
    dend_50 { pt3dadd( 14.0359, 36.3595, -249.182, 1.47 ) }
    dend_50 { pt3dadd( 14.2486, 36.3702, -250.186, 1.77 ) }
    dend_50 { pt3dadd( 15.7712, 36.113, -259.471, 1.47 ) }
    dend_50 { pt3dadd( 15.9116, 36.0499, -260.505, 1.55 ) }
    dend_50 { pt3dadd( 16.4061, 35.5715, -265.724, 0.88 ) }
    dend_50 { pt3dadd( 16.5459, 34.6533, -271.172, 1.18 ) }
    dend_50 { pt3dadd( 16.3388, 33.1226, -278.228, 1.11 ) }
    dend_50 { pt3dadd( 16.1779, 32.4864, -280.747, 0.37 ) }
    dend_50 { pt3dadd( 16.1605, 32.4501, -280.871, 0.37 ) }
    dend_50 { pt3dadd( 15.7205, 31.6027, -283.757, 0.37 ) }
    dend_50 { pt3dadd( 14.4357, 29.5617, -290.71, 0.44 ) }
    dend_50 { pt3dadd( 14.4184, 29.4668, -290.95, 0.44 ) }
    dend_50 { pt3dadd( 14.9379, 28.1163, -292.768, 0.44 ) }
    dend_50 { pt3dadd( 14.9733, 28.0458, -292.831, 0.44 ) }
    dend_50 { pt3dadd( 16.153, 25.8526, -293.998, 0.44 ) }
    dend_50 { pt3dadd( 16.3248, 25.555, -294.082, 0.44 ) }
    dend_50 { pt3dadd( 17.5559, 23.5698, -294.054, 0.44 ) }
    dend_50 { pt3dadd( 17.6251, 23.4576, -294.053, 0.44 ) }
    dend_50 { pt3dadd( 18.5008, 21.8774, -294.032, 0.44 ) }
    dend_50 { pt3dadd( 19.3831, 20.1642, -293.915, 0.59 ) }
    dend_50 { pt3dadd( 19.6814, 19.5566, -293.849, 0.59 ) }
    dend_50 { pt3dadd( 20.6201, 17.7201, -293.602, 0.59 ) }
    dend_50 { pt3dadd( 20.6684, 17.6323, -293.588, 0.59 ) }
    dend_50 { pt3dadd( 21.6271, 15.8923, -293.287, 0.59 ) }
    dend_50 { pt3dadd( 23.1074, 13.2083, -292.785, 0.44 ) }
    dend_50 { pt3dadd( 24.061, 11.3466, -292.542, 0.52 ) }
    dend_50 { pt3dadd( 24.1194, 11.2284, -292.534, 0.52 ) }
    dend_50 { pt3dadd( 24.6036, 10.2339, -292.478, 0.81 ) }
    dend_50 { pt3dadd( 24.7732, 9.90656, -292.469, 0.81 ) }
    dend_50 { pt3dadd( 25.4131, 8.82749, -292.532, 0.81 ) }
    dend_50 { pt3dadd( 26.7425, 6.62136, -293.118, 0.22 ) }
    dend_50 { pt3dadd( 27.3357, 5.55446, -293.481, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 52/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.9175, 12.7505, -62.887, 0.37 ) }
    dend_49 { pt3dadd( -6.44851, 14.3248, -64.7034, 0.37 ) }
    dend_49 { pt3dadd( -6.63946, 14.7441, -65.1983, 0.29 ) }
    dend_49 { pt3dadd( -7.16042, 15.8, -66.4366, 0.66 ) }
    dend_49 { pt3dadd( -7.88677, 17.2312, -68.112, 0.88 ) }
    dend_49 { pt3dadd( -8.04262, 17.5531, -68.4932, 1.11 ) }
    dend_49 { pt3dadd( -8.55297, 18.6255, -69.8752, 0.29 ) }
    dend_49 { pt3dadd( -9.02145, 19.6503, -71.2563, 0.29 ) }
    dend_49 { pt3dadd( -9.32154, 20.3112, -72.441, 1.4 ) }
    dend_49 { pt3dadd( -9.33586, 20.3363, -72.5017, 1.4 ) }
    dend_49 { pt3dadd( -9.61762, 20.7364, -73.6871, 1.69 ) }
    dend_49 { pt3dadd( -10.1364, 21.3187, -75.9946, 0.59 ) }
    dend_49 { pt3dadd( -10.3538, 21.5155, -77.0194, 0.88 ) }
    dend_49 { pt3dadd( -11.2926, 22.2146, -81.9088, 1.03 ) }
    dend_49 { pt3dadd( -11.8591, 22.4677, -84.803, 0.29 ) }
    dend_49 { pt3dadd( -12.0702, 22.5203, -85.8452, 0.66 ) }
    dend_49 { pt3dadd( -12.5194, 22.5522, -87.9156, 0.66 ) }
    dend_49 { pt3dadd( -12.5314, 22.5507, -87.9697, 0.66 ) }
    dend_49 { pt3dadd( -12.9149, 22.3929, -89.6991, 0.88 ) }
    dend_49 { pt3dadd( -13.1528, 22.176, -90.5797, 1.18 ) }
    dend_49 { pt3dadd( -13.1606, 22.1541, -90.64, 1.18 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 73/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -11.0462, 20.825, -43.9501, 0.52 ) }
    dend_47 { pt3dadd( -10.7528, 22.1498, -44.1266, 0.52 ) }
    dend_47 { pt3dadd( -10.5153, 23.326, -44.2896, 0.37 ) }
    dend_47 { pt3dadd( -10.3381, 24.2183, -44.4158, 0.66 ) }
    dend_47 { pt3dadd( -10.0748, 25.6023, -44.7635, 0.22 ) }
    dend_47 { pt3dadd( -10.0625, 25.675, -44.7848, 0.22 ) }
    dend_47 { pt3dadd( -9.89542, 26.7225, -45.1418, 1.69 ) }
    dend_47 { pt3dadd( -9.82402, 27.271, -45.3553, 1.92 ) }
    dend_47 { pt3dadd( -9.81499, 27.3496, -45.3909, 1.92 ) }
    dend_47 { pt3dadd( -9.60004, 29.2924, -46.3117, 0.22 ) }
    dend_47 { pt3dadd( -9.47957, 30.4179, -46.8137, 0.22 ) }
    dend_47 { pt3dadd( -9.42105, 31.0159, -47.0745, 1.03 ) }
    dend_47 { pt3dadd( -9.36861, 31.6817, -47.3593, 1.03 ) }
    dend_47 { pt3dadd( -9.25823, 33.5636, -48.1219, 0.22 ) }
    dend_47 { pt3dadd( -9.22769, 34.2266, -48.3665, 1.18 ) }
    dend_47 { pt3dadd( -9.20604, 34.9111, -48.5832, 1.92 ) }
    dend_47 { pt3dadd( -9.21559, 35.8047, -48.8507, 1.92 ) }
    dend_47 { pt3dadd( -9.36575, 38.0517, -49.5968, 0.22 ) }
    dend_47 { pt3dadd( -9.43197, 38.6275, -49.8137, 0.74 ) }
    dend_47 { pt3dadd( -9.51452, 39.1388, -50.0184, 0.81 ) }
    dend_47 { pt3dadd( -9.72782, 40.2203, -50.4598, 0.22 ) }
    dend_47 { pt3dadd( -10.014, 41.4702, -50.9711, 0.22 ) }
    dend_47 { pt3dadd( -10.6047, 43.8667, -51.9084, 1.55 ) }
    dend_47 { pt3dadd( -10.7491, 44.4074, -52.1126, 1.92 ) }
    dend_47 { pt3dadd( -11.0411, 45.5371, -52.53, 0.15 ) }
    dend_47 { pt3dadd( -11.242, 46.4272, -52.8357, 0.15 ) }
    dend_47 { pt3dadd( -11.3818, 47.1974, -53.0688, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( -11.473, 47.9809, -53.2565, 1.69 ) }
    dend_47 { pt3dadd( -11.5142, 48.5969, -53.3359, 1.69 ) }
    dend_47 { pt3dadd( -11.5474, 49.7116, -53.5061, 0.29 ) }
    dend_47 { pt3dadd( -11.5438, 50.791, -53.6975, 0.22 ) }
    dend_47 { pt3dadd( -11.5279, 51.331, -53.8038, 0.37 ) }
    dend_47 { pt3dadd( -11.5145, 51.8582, -53.9215, 0.37 ) }
    dend_47 { pt3dadd( -11.5016, 52.9624, -54.205, 0.22 ) }
    dend_47 { pt3dadd( -11.4601, 54.2516, -54.5505, 1.47 ) }
    dend_47 { pt3dadd( -11.4311, 54.92, -54.7333, 1.69 ) }
    dend_47 { pt3dadd( -11.4264, 54.9939, -54.7535, 1.69 ) }
    dend_47 { pt3dadd( -11.248, 56.7262, -55.2138, 0.29 ) }
    dend_47 { pt3dadd( -11.0774, 57.9663, -55.5404, 0.29 ) }
    dend_47 { pt3dadd( -10.8481, 59.1968, -55.8917, 0.29 ) }
    dend_47 { pt3dadd( -10.8149, 59.3442, -55.9334, 0.29 ) }
    dend_47 { pt3dadd( -10.5409, 60.4425, -56.2612, 0.29 ) }
    dend_47 { pt3dadd( -10.1184, 62.0294, -56.7325, 3.32 ) }
    dend_47 { pt3dadd( -9.83179, 63.0563, -57.0304, 1.84 ) }
    dend_47 { pt3dadd( -9.43628, 64.553, -57.4559, 0.22 ) }
    dend_47 { pt3dadd( -9.31048, 65.0493, -57.6341, 0.59 ) }
    dend_47 { pt3dadd( -9.20343, 65.4664, -57.8034, 0.59 ) }
    dend_47 { pt3dadd( -8.95023, 66.4783, -58.2577, 0.22 ) }
    dend_47 { pt3dadd( -8.8028, 67.1046, -58.5379, 1.25 ) }
    dend_47 { pt3dadd( -8.66554, 67.7725, -58.8173, 1.77 ) }
    dend_47 { pt3dadd( -8.22076, 70.2119, -59.7423, 0.22 ) }
    dend_47 { pt3dadd( -8.17721, 70.4098, -59.8193, 0.59 ) }
    dend_47 { pt3dadd( -8.06749, 70.8458, -59.9989, 0.59 ) }
    dend_47 { pt3dadd( -7.76582, 71.958, -60.4574, 0.22 ) }
    dend_47 { pt3dadd( -7.56925, 72.55, -60.7557, 1.18 ) }
    dend_47 { pt3dadd( -7.34048, 73.1912, -61.1011, 1.62 ) }
    dend_47 { pt3dadd( -6.70017, 74.8402, -62.0478, 0.29 ) }
    dend_47 { pt3dadd( -6.44177, 75.4489, -62.4372, 1.33 ) }
    dend_47 { pt3dadd( -6.14413, 76.1272, -62.9322, 1.55 ) }
    dend_47 { pt3dadd( -5.3147, 78.1702, -64.5206, 0.22 ) }
    dend_47 { pt3dadd( -5.08283, 78.7713, -64.9872, 0.22 ) }
    dend_47 { pt3dadd( -4.71301, 79.8187, -65.8065, 1.33 ) }
    dend_47 { pt3dadd( -4.56202, 80.2954, -66.1639, 1.47 ) }
    dend_47 { pt3dadd( -4.1883, 81.5616, -67.172, 0.22 ) }
    dend_47 { pt3dadd( -3.94423, 82.5832, -67.9955, 0.22 ) }
    dend_47 { pt3dadd( -3.82146, 83.4238, -68.6411, 0.22 ) }
    dend_47 { pt3dadd( -3.70925, 84.5405, -69.5345, 1.62 ) }
    dend_47 { pt3dadd( -3.67806, 85.0132, -69.9099, 1.92 ) }
    dend_47 { pt3dadd( -3.54652, 87.3021, -71.8009, 0.22 ) }
    dend_47 { pt3dadd( -3.50773, 87.9446, -72.3275, 0.22 ) }
    dend_47 { pt3dadd( -3.44649, 88.8334, -73.0562, 0.88 ) }
    dend_47 { pt3dadd( -3.41514, 89.2547, -73.3864, 1.33 ) }
    dend_47 { pt3dadd( -3.36324, 89.7327, -73.7533, 1.33 ) }
    dend_47 { pt3dadd( -3.09907, 91.3477, -74.9657, 0.22 ) }
    dend_47 { pt3dadd( -2.83617, 92.4021, -75.7872, 1.92 ) }
    dend_47 { pt3dadd( -2.71144, 92.8163, -76.1377, 1.92 ) }
    dend_47 { pt3dadd( -2.13336, 94.5485, -77.681, 0.22 ) }
    dend_47 { pt3dadd( -1.81631, 95.4107, -78.4883, 0.88 ) }
    dend_47 { pt3dadd( -1.65161, 95.8168, -78.8801, 0.88 ) }
    dend_47 { pt3dadd( -0.876739, 97.4345, -80.4109, 0.29 ) }
    dend_47 { pt3dadd( -0.547546, 98.0231, -80.987, 0.22 ) }
    dend_47 { pt3dadd( -0.517233, 98.0717, -81.0368, 0.22 ) }
    dend_47 { pt3dadd( 0.0494417, 98.8841, -81.855, 0.22 ) }
    dend_47 { pt3dadd( 0.631706, 99.6328, -82.6431, 1.4 ) }
    dend_47 { pt3dadd( 1.16484, 100.272, -83.345, 1.69 ) }
    dend_47 { pt3dadd( 2.53863, 101.81, -85.0024, 0.22 ) }
    dend_47 { pt3dadd( 3.3473, 102.692, -85.9718, 1.77 ) }
    dend_47 { pt3dadd( 3.74498, 103.134, -86.4453, 1.77 ) }
    dend_47 { pt3dadd( 5.32543, 104.995, -88.3273, 0.22 ) }
    dend_47 { pt3dadd( 5.43655, 105.134, -88.4554, 0.37 ) }
    dend_47 { pt3dadd( 6.05491, 105.995, -89.1326, 0.22 ) }
    dend_47 { pt3dadd( 6.24031, 106.283, -89.3065, 0.44 ) }
    dend_47 { pt3dadd( 6.94539, 107.483, -89.9153, 0.22 ) }
    dend_47 { pt3dadd( 7.54148, 108.581, -90.4126, 1.84 ) }
    dend_47 { pt3dadd( 7.92015, 109.344, -90.7045, 2.28 ) }
    dend_47 { pt3dadd( 8.84053, 111.261, -91.4567, 0.22 ) }
    dend_47 { pt3dadd( 9.2775, 112.209, -91.8436, 0.22 ) }
    dend_47 { pt3dadd( 9.57087, 112.859, -92.1187, 0.88 ) }
    dend_47 { pt3dadd( 9.68409, 113.134, -92.2352, 1.03 ) }
    dend_47 { pt3dadd( 10.0882, 114.212, -92.7171, 0.22 ) }
    dend_47 { pt3dadd( 10.2167, 114.579, -92.8832, 0.37 ) }
    dend_47 { pt3dadd( 10.605, 115.724, -93.4177, 0.22 ) }
    dend_47 { pt3dadd( 10.7424, 116.139, -93.6353, 0.59 ) }
    dend_47 { pt3dadd( 10.9228, 116.649, -93.9268, 0.96 ) }
    dend_47 { pt3dadd( 11.482, 118.12, -94.8113, 0.22 ) }
    dend_47 { pt3dadd( 11.7528, 118.829, -95.2441, 0.22 ) }
    dend_47 { pt3dadd( 12.0947, 119.76, -95.8044, 1.25 ) }
    dend_47 { pt3dadd( 12.3955, 120.627, -96.2786, 0.96 ) }
    dend_47 { pt3dadd( 12.8335, 121.919, -96.9357, 0.15 ) }
    dend_47 { pt3dadd( 12.9995, 122.434, -97.1786, 1.03 ) }
    dend_47 { pt3dadd( 13.1198, 122.86, -97.3539, 1.25 ) }
    dend_47 { pt3dadd( 13.5309, 124.465, -97.9897, 0.15 ) }
    dend_47 { pt3dadd( 13.8701, 125.858, -98.4863, 0.15 ) }
    dend_47 { pt3dadd( 14.1457, 127.075, -98.9066, 0.96 ) }
    dend_47 { pt3dadd( 14.2436, 127.573, -99.0905, 1.4 ) }
    dend_47 { pt3dadd( 14.3295, 128.069, -99.2847, 1.4 ) }
    dend_47 { pt3dadd( 14.5991, 129.976, -100.053, 0.15 ) }
    dend_47 { pt3dadd( 14.6534, 130.524, -100.273, 0.66 ) }
    dend_47 { pt3dadd( 14.7899, 132.266, -100.938, 0.15 ) }
    dend_47 { pt3dadd( 14.8607, 133.171, -101.245, 1.62 ) }
    dend_47 { pt3dadd( 14.9275, 133.931, -101.474, 1.84 ) }
    dend_47 { pt3dadd( 15.0374, 135.072, -101.747, 0.22 ) }
    dend_47 { pt3dadd( 15.1926, 136.658, -102.014, 0.15 ) }
    dend_47 { pt3dadd( 15.3807, 138.223, -102.22, 0.15 ) }
    dend_47 { pt3dadd( 15.5618, 139.349, -102.311, 0.88 ) }
    dend_47 { pt3dadd( 15.7067, 140.158, -102.344, 0.88 ) }
    dend_47 { pt3dadd( 15.9683, 141.423, -102.369, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 16.0968, 141.993, -102.36, 0.59 ) }
    dend_47 { pt3dadd( 16.1795, 142.375, -102.339, 0.59 ) }
    dend_47 { pt3dadd( 16.3758, 143.428, -102.272, 0.15 ) }
    dend_47 { pt3dadd( 16.492, 144.057, -102.238, 0.96 ) }
    dend_47 { pt3dadd( 16.5073, 144.132, -102.236, 0.96 ) }
    dend_47 { pt3dadd( 16.6545, 144.586, -102.246, 1.18 ) }
    dend_47 { pt3dadd( 16.6838, 144.657, -102.252, 1.18 ) }
    dend_47 { pt3dadd( 17.4231, 146.211, -102.448, 0.15 ) }
    dend_47 { pt3dadd( 17.6105, 146.537, -102.518, 0.59 ) }
    dend_47 { pt3dadd( 17.8521, 146.907, -102.632, 0.59 ) }
    dend_47 { pt3dadd( 18.944, 148.495, -103.2, 0.15 ) }
    dend_47 { pt3dadd( 19.2882, 148.966, -103.39, 0.88 ) }
    dend_47 { pt3dadd( 19.6015, 149.382, -103.584, 0.88 ) }
    dend_47 { pt3dadd( 20.6844, 150.728, -104.334, 0.15 ) }
    dend_47 { pt3dadd( 21.3275, 151.551, -104.889, 1.25 ) }
    dend_47 { pt3dadd( 21.5559, 151.85, -105.119, 1.69 ) }
    dend_47 { pt3dadd( 21.638, 151.963, -105.215, 1.69 ) }
    dend_47 { pt3dadd( 22.0506, 152.535, -105.709, 1.47 ) }
    dend_47 { pt3dadd( 22.0801, 152.575, -105.747, 1.47 ) }
    dend_47 { pt3dadd( 23.3923, 154.374, -107.583, 0.15 ) }
    dend_47 { pt3dadd( 23.601, 154.646, -107.863, 0.74 ) }
    dend_47 { pt3dadd( 23.6368, 154.691, -107.908, 0.74 ) }
    dend_47 { pt3dadd( 23.9816, 155.109, -108.309, 0.74 ) }
    dend_47 { pt3dadd( 25.3985, 156.697, -109.828, 0.15 ) }
    dend_47 { pt3dadd( 25.4334, 156.734, -109.864, 0.15 ) }
    dend_47 { pt3dadd( 25.8638, 157.159, -110.265, 1.03 ) }
    dend_47 { pt3dadd( 26.3607, 157.603, -110.645, 1.69 ) }
    dend_47 { pt3dadd( 26.6514, 157.841, -110.821, 1.69 ) }
    dend_47 { pt3dadd( 28.1287, 158.909, -111.479, 0.15 ) }
    dend_47 { pt3dadd( 28.1975, 158.955, -111.501, 0.15 ) }
    dend_47 { pt3dadd( 28.7544, 159.32, -111.661, 0.81 ) }
    dend_47 { pt3dadd( 30.5276, 160.439, -112.108, 0.15 ) }
    dend_47 { pt3dadd( 31.2241, 160.848, -112.248, 1.33 ) }
    dend_47 { pt3dadd( 32.8452, 161.762, -112.512, 0.22 ) }
    dend_47 { pt3dadd( 33.0315, 161.865, -112.536, 0.37 ) }
    dend_47 { pt3dadd( 33.2306, 161.977, -112.561, 0.37 ) }
    dend_47 { pt3dadd( 34.2091, 162.587, -112.739, 0.22 ) }
    dend_47 { pt3dadd( 35.4666, 163.465, -113.03, 0.15 ) }
    dend_47 { pt3dadd( 35.8969, 163.777, -113.136, 0.29 ) }
    dend_47 { pt3dadd( 36.9414, 164.569, -113.4, 0.15 ) }
    dend_47 { pt3dadd( 37.6007, 165.081, -113.575, 1.25 ) }
    dend_47 { pt3dadd( 39.9628, 167.019, -114.248, 0.15 ) }
    dend_47 { pt3dadd( 40.3101, 167.332, -114.362, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 43/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -11.0462, 20.825, -43.9501, 0.37 ) }
    dend_46 { pt3dadd( -12.1932, 19.8813, -43.7116, 0.37 ) }
    dend_46 { pt3dadd( -12.8158, 19.3818, -43.6029, 0.66 ) }
    dend_46 { pt3dadd( -12.8713, 19.3338, -43.5939, 0.66 ) }
    dend_46 { pt3dadd( -14.0433, 18.3034, -43.4324, 0.29 ) }
    dend_46 { pt3dadd( -14.0917, 18.26, -43.4266, 0.29 ) }
    dend_46 { pt3dadd( -14.7948, 17.6163, -43.3518, 1.47 ) }
    dend_46 { pt3dadd( -15.2284, 17.197, -43.3276, 1.77 ) }
    dend_46 { pt3dadd( -16.1751, 16.289, -43.2867, 0.29 ) }
    dend_46 { pt3dadd( -16.7022, 15.7928, -43.278, 0.29 ) }
    dend_46 { pt3dadd( -16.9257, 15.5855, -43.283, 0.66 ) }
    dend_46 { pt3dadd( -17.1975, 15.3372, -43.293, 0.88 ) }
    dend_46 { pt3dadd( -17.6048, 14.9716, -43.3169, 0.88 ) }
    dend_46 { pt3dadd( -18.5067, 14.1818, -43.5, 0.22 ) }
    dend_46 { pt3dadd( -18.7961, 13.9372, -43.6086, 0.59 ) }
    dend_46 { pt3dadd( -19.0785, 13.6973, -43.7432, 0.74 ) }
    dend_46 { pt3dadd( -19.317, 13.4996, -43.8703, 0.88 ) }
    dend_46 { pt3dadd( -19.551, 13.3117, -44.0046, 0.88 ) }
    dend_46 { pt3dadd( -20.7143, 12.3909, -44.7144, 0.22 ) }
    dend_46 { pt3dadd( -21.3, 11.8884, -45.1197, 0.22 ) }
    dend_46 { pt3dadd( -21.7424, 11.4945, -45.4289, 0.22 ) }
    dend_46 { pt3dadd( -22.0906, 11.1707, -45.6709, 0.74 ) }
    dend_46 { pt3dadd( -22.3997, 10.8791, -45.8736, 1.18 ) }
    dend_46 { pt3dadd( -22.7541, 10.5438, -46.075, 1.18 ) }
    dend_46 { pt3dadd( -23.6164, 9.74226, -46.4395, 0.22 ) }
    dend_46 { pt3dadd( -23.6611, 9.69966, -46.4607, 0.22 ) }
    dend_46 { pt3dadd( -23.9315, 9.43416, -46.5962, 0.52 ) }
    dend_46 { pt3dadd( -24.1575, 9.22126, -46.7192, 0.52 ) }
    dend_46 { pt3dadd( -24.6037, 8.87374, -46.9359, 0.22 ) }
    dend_46 { pt3dadd( -24.6576, 8.84507, -46.9583, 0.22 ) }
    dend_46 { pt3dadd( -25.5205, 8.5221, -47.2634, 1.92 ) }
    dend_46 { pt3dadd( -25.8772, 8.41139, -47.3838, 2.28 ) }
    dend_46 { pt3dadd( -26.4404, 8.24905, -47.5626, 2.14 ) }
    dend_46 { pt3dadd( -27.6, 7.91667, -47.9072, 0.29 ) }
    dend_46 { pt3dadd( -28.5736, 7.65645, -48.171, 0.29 ) }
    dend_46 { pt3dadd( -28.7602, 7.60965, -48.2161, 0.74 ) }
    dend_46 { pt3dadd( -29.1612, 7.51648, -48.2971, 0.74 ) }
    dend_46 { pt3dadd( -29.8643, 7.33993, -48.4155, 0.22 ) }
    dend_46 { pt3dadd( -30.6966, 7.11942, -48.5195, 0.22 ) }
    dend_46 { pt3dadd( -31.2044, 6.98182, -48.6028, 0.81 ) }
    dend_46 { pt3dadd( -31.5145, 6.89564, -48.6595, 1.03 ) }
    dend_46 { pt3dadd( -32.0257, 6.76996, -48.7642, 0.81 ) }
    dend_46 { pt3dadd( -32.7208, 6.60988, -48.9512, 0.15 ) }
    dend_46 { pt3dadd( -33.5156, 6.4361, -49.2007, 0.15 ) }
    dend_46 { pt3dadd( -34.4802, 6.19008, -49.5382, 1.55 ) }
    dend_46 { pt3dadd( -34.73, 6.11539, -49.6313, 1.55 ) }
    dend_46 { pt3dadd( -34.7873, 6.09462, -49.6539, 1.55 ) }
    dend_46 { pt3dadd( -36.1559, 5.52724, -50.211, 0.22 ) }
    dend_46 { pt3dadd( -36.8353, 5.22004, -50.4823, 0.22 ) }
    dend_46 { pt3dadd( -37.3611, 4.95194, -50.6067, 0.81 ) }
    dend_46 { pt3dadd( -37.59, 4.82456, -50.6302, 0.81 ) }
    dend_46 { pt3dadd( -38.8173, 4.10403, -50.6997, 0.22 ) }
    dend_46 { pt3dadd( -39.3821, 3.75822, -50.6935, 1.47 ) }
    dend_46 { pt3dadd( -40.0765, 3.30991, -50.5965, 1.92 ) }
    dend_46 { pt3dadd( -42.0422, 2.01131, -50.2157, 0.29 ) }
    dend_46 { pt3dadd( -43.173, 1.25421, -49.9014, 0.22 ) }
    dend_46 { pt3dadd( -44.1571, 0.592475, -49.5682, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_46 { pt3dadd( -44.8421, 0.140471, -49.2976, 1.92 ) }
    dend_46 { pt3dadd( -46.63, -0.968338, -48.507, 0.22 ) }
    dend_46 { pt3dadd( -47.3744, -1.37862, -48.1661, 0.22 ) }
    dend_46 { pt3dadd( -48.5713, -1.92453, -47.6243, 0.22 ) }
    dend_46 { pt3dadd( -48.8691, -2.03368, -47.4764, 1.03 ) }
    dend_46 { pt3dadd( -49.4362, -2.19012, -47.1881, 1.4 ) }
    dend_46 { pt3dadd( -51.0573, -2.48379, -46.4463, 0.15 ) }
    dend_46 { pt3dadd( -52.0077, -2.5477, -46.0728, 0.15 ) }
    dend_46 { pt3dadd( -52.4453, -2.55454, -45.9068, 0.96 ) }
    dend_46 { pt3dadd( -52.5093, -2.55691, -45.884, 0.96 ) }
    dend_46 { pt3dadd( -52.8295, -2.58852, -45.7646, 0.96 ) }
    dend_46 { pt3dadd( -53.7465, -2.79126, -45.4268, 0.22 ) }
    dend_46 { pt3dadd( -54.2244, -2.96814, -45.2501, 0.22 ) }
    dend_46 { pt3dadd( -55.3249, -3.54633, -44.7478, 1.84 ) }
    dend_46 { pt3dadd( -56.3839, -4.17041, -44.1815, 0.29 ) }
    dend_46 { pt3dadd( -56.8715, -4.49407, -43.8816, 0.29 ) }
    dend_46 { pt3dadd( -57.6333, -5.05289, -43.3613, 0.15 ) }
    dend_46 { pt3dadd( -58.3783, -5.64466, -42.7823, 1.62 ) }
    dend_46 { pt3dadd( -59.1844, -6.32718, -42.0846, 1.62 ) }
    dend_46 { pt3dadd( -60.2055, -7.22823, -41.1504, 0.29 ) }
    dend_46 { pt3dadd( -60.9385, -7.84929, -40.4474, 0.29 ) }
    dend_46 { pt3dadd( -60.9773, -7.87994, -40.4089, 0.29 ) }
    dend_46 { pt3dadd( -61.7885, -8.46601, -39.6091, 0.74 ) }
    dend_46 { pt3dadd( -61.8361, -8.5005, -39.5646, 0.74 ) }
    dend_46 { pt3dadd( -62.4309, -8.92787, -39.0763, 0.22 ) }
    dend_46 { pt3dadd( -62.4747, -8.96084, -39.0461, 0.22 ) }
    dend_46 { pt3dadd( -63.1135, -9.40582, -38.687, 0.22 ) }
    dend_46 { pt3dadd( -64.0761, -10.0122, -38.2451, 0.22 ) }
    dend_46 { pt3dadd( -64.5832, -10.2967, -38.0671, 1.03 ) }
    dend_46 { pt3dadd( -65.0927, -10.555, -37.9174, 1.4 ) }
    dend_46 { pt3dadd( -65.8081, -10.8801, -37.7471, 1.4 ) }
    dend_46 { pt3dadd( -67.0485, -11.3871, -37.5575, 0.22 ) }
    dend_46 { pt3dadd( -67.839, -11.6744, -37.5134, 0.22 ) }
    dend_46 { pt3dadd( -68.621, -11.9315, -37.5256, 1.25 ) }
    dend_46 { pt3dadd( -69.1419, -12.0922, -37.5281, 1.92 ) }
    dend_46 { pt3dadd( -69.5125, -12.1979, -37.5231, 1.92 ) }
    dend_46 { pt3dadd( -70.6887, -12.4908, -37.4979, 0.22 ) }
    dend_46 { pt3dadd( -71.711, -12.703, -37.3936, 0.22 ) }
    dend_46 { pt3dadd( -71.9721, -12.7535, -37.341, 1.03 ) }
    dend_46 { pt3dadd( -73.28, -12.9567, -36.9506, 0.22 ) }
    dend_46 { pt3dadd( -73.7578, -13.0088, -36.7725, 0.59 ) }
    dend_46 { pt3dadd( -74.2034, -13.0691, -36.5522, 0.74 ) }
    dend_46 { pt3dadd( -75.7392, -13.3595, -35.667, 0.22 ) }
    dend_46 { pt3dadd( -75.7834, -13.3719, -35.6395, 0.22 ) }
    dend_46 { pt3dadd( -76.5066, -13.6415, -35.2097, 1.33 ) }
    dend_46 { pt3dadd( -76.8206, -13.8008, -35.0501, 1.69 ) }
    dend_46 { pt3dadd( -78.0774, -14.5439, -34.4719, 0.15 ) }
    dend_46 { pt3dadd( -79.1219, -15.2305, -34.0797, 0.15 ) }
    dend_46 { pt3dadd( -80.1862, -15.9128, -33.8265, 1.77 ) }
    dend_46 { pt3dadd( -80.69, -16.2178, -33.7285, 1.99 ) }
    dend_46 { pt3dadd( -82.2504, -17.1347, -33.4844, 0.22 ) }
    dend_46 { pt3dadd( -82.3559, -17.1937, -33.4714, 0.22 ) }
    dend_46 { pt3dadd( -83.2323, -17.647, -33.3975, 0.22 ) }
    dend_46 { pt3dadd( -84.8456, -18.4857, -33.2565, 0.22 ) }
    dend_46 { pt3dadd( -85.6072, -18.8724, -33.2167, 0.66 ) }
    dend_46 { pt3dadd( -85.7454, -18.9346, -33.2209, 0.66 ) }
    dend_46 { pt3dadd( -87.021, -19.4105, -33.3798, 0.22 ) }
    dend_46 { pt3dadd( -87.806, -19.6655, -33.5302, 1.62 ) }
    dend_46 { pt3dadd( -87.8558, -19.6782, -33.5454, 1.62 ) }
    dend_46 { pt3dadd( -88.4444, -19.7964, -33.7924, 1.62 ) }
    dend_46 { pt3dadd( -90.4254, -20.0175, -34.7616, 0.22 ) }
    dend_46 { pt3dadd( -91.1536, -20.0209, -35.1571, 0.59 ) }
    dend_46 { pt3dadd( -91.5283, -19.9943, -35.3765, 0.59 ) }
    dend_46 { pt3dadd( -92.5204, -19.9118, -35.9499, 0.22 ) }
    dend_46 { pt3dadd( -92.5773, -19.9087, -35.9813, 0.22 ) }
    dend_46 { pt3dadd( -93.1415, -19.8581, -36.1929, 0.59 ) }
    dend_46 { pt3dadd( -94.1146, -19.7151, -36.3628, 0.22 ) }
    dend_46 { pt3dadd( -95.2243, -19.5772, -36.4513, 0.22 ) }
    dend_46 { pt3dadd( -96.0669, -19.5067, -36.4659, 1.69 ) }
    dend_46 { pt3dadd( -96.4633, -19.5091, -36.4463, 1.69 ) }
    dend_46 { pt3dadd( -98.9151, -19.7322, -36.2649, 0.22 ) }
    dend_46 { pt3dadd( -99.3363, -19.8128, -36.2196, 1.03 ) }
    dend_46 { pt3dadd( -100.521, -20.1073, -36.0446, 0.22 ) }
    dend_46 { pt3dadd( -101.031, -20.2283, -35.9721, 0.74 ) }
    dend_46 { pt3dadd( -101.942, -20.4639, -35.8861, 0.22 ) }
    dend_46 { pt3dadd( -102.09, -20.5084, -35.8862, 0.22 ) }
    dend_46 { pt3dadd( -102.627, -20.6678, -35.922, 0.22 ) }
    dend_46 { pt3dadd( -103.5, -20.7637, -35.8969, 0.22 ) }
    dend_46 { pt3dadd( -103.921, -20.7385, -35.846, 1.03 ) }
    dend_46 { pt3dadd( -104.526, -20.6633, -35.7396, 1.18 ) }
    dend_46 { pt3dadd( -104.581, -20.6536, -35.7272, 1.18 ) }
    dend_46 { pt3dadd( -106.121, -20.3665, -35.3367, 0.22 ) }
    dend_46 { pt3dadd( -106.726, -20.2414, -35.146, 1.33 ) }
    dend_46 { pt3dadd( -106.995, -20.1811, -35.0508, 1.47 ) }
    dend_46 { pt3dadd( -107.058, -20.1664, -35.0275, 1.47 ) }
    dend_46 { pt3dadd( -108.081, -19.8706, -34.6683, 0.29 ) }
    dend_46 { pt3dadd( -108.68, -19.6739, -34.4853, 0.22 ) }
    dend_46 { pt3dadd( -109.438, -19.3893, -34.2903, 0.96 ) }
    dend_46 { pt3dadd( -109.819, -19.2378, -34.1928, 1.18 ) }
    dend_46 { pt3dadd( -110.646, -18.8949, -33.9827, 0.22 ) }
    dend_46 { pt3dadd( -111.779, -18.3962, -33.7026, 0.22 ) }
    dend_46 { pt3dadd( -112.19, -18.1944, -33.6097, 0.52 ) }
    dend_46 { pt3dadd( -112.248, -18.1655, -33.5978, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 93/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.9094, 232.87, -28.4753, 1.03 ) }
    dend_43 { pt3dadd( 17.1401, 233.945, -28.6981, 1.03 ) }
    dend_43 { pt3dadd( 17.1601, 234.055, -28.7197, 1.03 ) }
    dend_43 { pt3dadd( 17.3027, 234.97, -28.8415, 0.29 ) }
    dend_43 { pt3dadd( 17.4973, 236.311, -28.9643, 0.29 ) }
    dend_43 { pt3dadd( 17.5151, 236.522, -28.9709, 0.44 ) }
    dend_43 { pt3dadd( 17.5091, 237.213, -28.9207, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_43 { pt3dadd( 17.4467, 237.822, -28.7944, 0.52 ) }
    dend_43 { pt3dadd( 17.2944, 238.907, -28.4922, 0.22 ) }
    dend_43 { pt3dadd( 17.1117, 240.101, -28.0805, 0.22 ) }
    dend_43 { pt3dadd( 16.8413, 241.568, -27.4527, 0.66 ) }
    dend_43 { pt3dadd( 16.4008, 243.86, -26.4474, 0.22 ) }
    dend_43 { pt3dadd( 16.012, 245.772, -25.5615, 1.18 ) }
    dend_43 { pt3dadd( 15.8891, 246.335, -25.2879, 1.55 ) }
    dend_43 { pt3dadd( 15.7435, 246.95, -24.9735, 1.55 ) }
    dend_43 { pt3dadd( 14.9415, 250.204, -23.2027, 0.22 ) }
    dend_43 { pt3dadd( 14.6197, 251.707, -22.3829, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 16.9094, 232.87, -28.4753, 0.52 ) }
    dend_42 { pt3dadd( 15.7964, 232.664, -28.4879, 0.52 ) }
    dend_42 { pt3dadd( 15.069, 232.528, -28.4907, 0.37 ) }
    dend_42 { pt3dadd( 13.1108, 232.157, -28.4922, 0.22 ) }
    dend_42 { pt3dadd( 12.8459, 232.107, -28.4924, 0.37 ) }
    dend_42 { pt3dadd( 11.0139, 231.76, -28.4938, 0.22 ) }
    dend_42 { pt3dadd( 10.8151, 231.722, -28.4939, 0.74 ) }
    dend_42 { pt3dadd( 10.3081, 231.631, -28.4797, 0.66 ) }
    dend_42 { pt3dadd( 10.2135, 231.612, -28.4735, 0.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_26 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 19.2561, 38.0663, 19.6022, 0.52 ) }
    dend_36 { pt3dadd( 19.9313, 38.4273, 18.8359, 0.52 ) }
    dend_36 { pt3dadd( 20.5159, 38.8445, 18.1184, 0.52 ) }
    dend_36 { pt3dadd( 21.1536, 39.3321, 17.3657, 0.59 ) }
    dend_36 { pt3dadd( 21.8127, 39.8749, 16.609, 1.25 ) }
    dend_36 { pt3dadd( 22.9073, 40.8228, 15.3508, 0.74 ) }
    dend_36 { pt3dadd( 23.7803, 41.6281, 14.373, 0.96 ) }
    dend_36 { pt3dadd( 24.1026, 41.9597, 13.9963, 1.33 ) }
    dend_36 { pt3dadd( 25.0016, 42.9905, 12.9984, 1.33 ) }
    dend_36 { pt3dadd( 25.7405, 43.8531, 12.3085, 1.33 ) }
    dend_36 { pt3dadd( 26.4671, 44.6651, 11.7525, 0.66 ) }
    dend_36 { pt3dadd( 27.3265, 45.5172, 11.2498, 0.66 ) }
    dend_36 { pt3dadd( 27.8159, 45.9628, 11.0024, 0.96 ) }
    dend_36 { pt3dadd( 28.6779, 46.7277, 10.5916, 0.96 ) }
    dend_36 { pt3dadd( 29.7532, 47.7048, 10.0957, 0.74 ) }
    dend_36 { pt3dadd( 29.7951, 47.7428, 10.0766, 0.74 ) }
    dend_36 { pt3dadd( 30.4211, 48.331, 9.77966, 0.88 ) }
    dend_36 { pt3dadd( 31.1552, 49.1052, 9.27323, 0.29 ) }
    dend_36 { pt3dadd( 31.4247, 49.5006, 8.9477, 0.44 ) }
    dend_36 { pt3dadd( 31.6218, 50.1112, 8.36412, 0.96 ) }
    dend_36 { pt3dadd( 31.6269, 50.4082, 8.06754, 1.47 ) }
    dend_36 { pt3dadd( 31.5972, 50.6628, 7.82322, 1.47 ) }
    dend_36 { pt3dadd( 31.374, 51.5781, 6.96713, 0.96 ) }
    dend_36 { pt3dadd( 31.1699, 52.2264, 6.4187, 0.52 ) }
    dend_36 { pt3dadd( 30.973, 52.8186, 5.95335, 0.52 ) }
    dend_36 { pt3dadd( 30.7015, 53.7175, 5.32965, 0.44 ) }
    dend_36 { pt3dadd( 30.5942, 54.1869, 5.03233, 0.59 ) }
    dend_36 { pt3dadd( 30.5867, 54.242, 5.00077, 0.59 ) }
    dend_36 { pt3dadd( 30.5685, 54.8807, 4.69664, 0.59 ) }
    dend_36 { pt3dadd( 30.6197, 55.5127, 4.42046, 0.59 ) }
    dend_36 { pt3dadd( 30.9367, 56.9493, 3.82043, 0.22 ) }
    dend_36 { pt3dadd( 31.1709, 57.5221, 3.58099, 0.81 ) }
    dend_36 { pt3dadd( 31.5004, 58.0605, 3.33232, 1.18 ) }
    dend_36 { pt3dadd( 31.7061, 58.3404, 3.19932, 1.47 ) }
    dend_36 { pt3dadd( 31.7474, 58.3903, 3.1756, 1.47 ) }
    dend_36 { pt3dadd( 32.0918, 58.8057, 3.01141, 1.47 ) }
    dend_36 { pt3dadd( 32.8232, 59.8032, 2.72722, 0.29 ) }
    dend_36 { pt3dadd( 33.3512, 60.8554, 2.49151, 0.29 ) }
    dend_36 { pt3dadd( 33.4936, 61.2638, 2.41361, 1.03 ) }
    dend_36 { pt3dadd( 33.654, 61.8667, 2.31315, 1.33 ) }
    dend_36 { pt3dadd( 33.8531, 62.7617, 2.17644, 1.77 ) }
    dend_36 { pt3dadd( 33.9626, 63.4683, 2.08526, 1.18 ) }
    dend_36 { pt3dadd( 34.0531, 64.5847, 1.99426, 0.59 ) }
    dend_36 { pt3dadd( 34.1052, 65.8096, 1.90655, 0.37 ) }
    dend_36 { pt3dadd( 34.1962, 67.3335, 1.77403, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 19.2561, 38.0663, 19.6022, 2.5 ) }
    dend_27 { pt3dadd( 20.4231, 38.3031, 22.3376, 2.5 ) }
    dend_27 { pt3dadd( 21.7095, 38.344, 24.5402, 1.55 ) }
    dend_27 { pt3dadd( 22.2067, 38.3278, 25.2058, 1.55 ) }
    dend_27 { pt3dadd( 22.9024, 38.2992, 25.9692, 1.4 ) }
    dend_27 { pt3dadd( 24.165, 38.3239, 27.0915, 1.03 ) }
    dend_27 { pt3dadd( 24.2653, 38.3344, 27.1696, 1.03 ) }
    dend_27 { pt3dadd( 25.4355, 38.4978, 27.7154, 1.03 ) }
    dend_27 { pt3dadd( 26.146, 38.6844, 28.005, 1.03 ) }
    dend_27 { pt3dadd( 26.8217, 38.9499, 28.3027, 1.18 ) }
    dend_27 { pt3dadd( 28.104, 39.6225, 28.88, 1.18 ) }
    dend_27 { pt3dadd( 29.4035, 40.4532, 29.4532, 1.18 ) }
    dend_27 { pt3dadd( 30.3391, 41.1036, 29.8922, 0.96 ) }
    dend_27 { pt3dadd( 31.6433, 42.1457, 30.5705, 1.11 ) }
    dend_27 { pt3dadd( 31.7328, 42.2224, 30.622, 1.11 ) }
    dend_27 { pt3dadd( 32.4742, 42.8907, 31.0979, 1.11 ) }
    dend_27 { pt3dadd( 32.7008, 43.1013, 31.2653, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_4 (entry count 81/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.04838, -67.1546, 2.95879, 0.74 ) }
    dend_24 { pt3dadd( -0.13455, -67.842, 2.71233, 0.74 ) }
    dend_24 { pt3dadd( 1.5567, -68.4656, 2.52738, 0.37 ) }
    dend_24 { pt3dadd( 2.55197, -68.8857, 2.43467, 0.52 ) }
    dend_24 { pt3dadd( 3.37919, -69.271, 2.36748, 0.52 ) }
    dend_24 { pt3dadd( 4.07873, -69.634, 2.3198, 0.22 ) }
    dend_24 { pt3dadd( 4.97426, -70.1646, 2.27478, 0.22 ) }
    dend_24 { pt3dadd( 5.30933, -70.3771, 2.27446, 0.81 ) }
    dend_24 { pt3dadd( 5.94591, -70.8305, 2.30401, 1.11 ) }
    dend_24 { pt3dadd( 6.18804, -71.0283, 2.31374, 1.11 ) }
    dend_24 { pt3dadd( 6.75625, -71.4914, 2.33379, 1.25 ) }
    dend_24 { pt3dadd( 7.8138, -72.2495, 2.33109, 0.44 ) }
    dend_24 { pt3dadd( 9.09087, -72.9148, 2.29505, 0.22 ) }
    dend_24 { pt3dadd( 9.88011, -73.2418, 2.26482, 1.25 ) }
    dend_24 { pt3dadd( 10.7082, -73.5391, 2.23099, 1.69 ) }
    dend_24 { pt3dadd( 11.612, -73.8449, 2.19287, 1.47 ) }
    dend_24 { pt3dadd( 12.9389, -74.2696, 2.13512, 0.66 ) }
    dend_24 { pt3dadd( 15.0209, -74.9044, 2.0408, 0.29 ) }
    dend_24 { pt3dadd( 15.988, -75.2407, 1.99316, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( 16.6347, -75.5329, 1.96611, 0.81 ) }
    dend_24 { pt3dadd( 17.1338, -75.826, 1.97591, 1.25 ) }
    dend_24 { pt3dadd( 17.5902, -76.1678, 2.01966, 1.25 ) }
    dend_24 { pt3dadd( 17.6603, -76.233, 2.0329, 1.25 ) }
    dend_24 { pt3dadd( 18.4982, -77.0923, 2.3278, 0.52 ) }
    dend_24 { pt3dadd( 19.4902, -77.9974, 2.75413, 0.29 ) }
    dend_24 { pt3dadd( 20.6167, -78.904, 3.28243, 1.4 ) }
    dend_24 { pt3dadd( 21.2703, -79.3442, 3.59685, 1.84 ) }
    dend_24 { pt3dadd( 21.5013, -79.4683, 3.72724, 1.84 ) }
    dend_24 { pt3dadd( 23.0628, -80.1959, 4.68158, 0.59 ) }
    dend_24 { pt3dadd( 23.9443, -80.5243, 5.26591, 0.29 ) }
    dend_24 { pt3dadd( 24.0208, -80.549, 5.31796, 0.29 ) }
    dend_24 { pt3dadd( 24.7941, -80.8251, 5.81813, 0.74 ) }
    dend_24 { pt3dadd( 26.2451, -81.4573, 6.74067, 0.74 ) }
    dend_24 { pt3dadd( 27.1417, -81.9817, 7.29414, 0.29 ) }
    dend_24 { pt3dadd( 27.2214, -82.0495, 7.33737, 0.29 ) }
    dend_24 { pt3dadd( 27.5432, -82.3837, 7.50398, 0.52 ) }
    dend_24 { pt3dadd( 28.1469, -83.0765, 7.7886, 1.03 ) }
    dend_24 { pt3dadd( 28.5285, -83.503, 7.99596, 1.18 ) }
    dend_24 { pt3dadd( 29.6085, -84.5903, 8.57829, 0.52 ) }
    dend_24 { pt3dadd( 30.5514, -85.3734, 9.26618, 0.52 ) }
    dend_24 { pt3dadd( 31.3185, -85.8755, 10.2506, 0.29 ) }
    dend_24 { pt3dadd( 31.3589, -85.9005, 10.3137, 0.29 ) }
    dend_24 { pt3dadd( 32.5837, -86.6759, 12.4552, 0.29 ) }
    dend_24 { pt3dadd( 32.8398, -86.8503, 12.9317, 1.03 ) }
    dend_24 { pt3dadd( 33.6711, -87.5054, 14.5867, 2.5 ) }
    dend_24 { pt3dadd( 35.8731, -89.5818, 19.3619, 0.44 ) }
    dend_24 { pt3dadd( 36.2584, -90.0102, 20.2429, 0.96 ) }
    dend_24 { pt3dadd( 36.5684, -90.4129, 20.9475, 1.18 ) }
    dend_24 { pt3dadd( 36.9461, -91.0072, 21.7518, 1.33 ) }
    dend_24 { pt3dadd( 37.8052, -92.4745, 23.4967, 0.29 ) }
    dend_24 { pt3dadd( 38.3196, -93.3824, 24.3216, 0.66 ) }
    dend_24 { pt3dadd( 38.3629, -93.4544, 24.3699, 0.66 ) }
    dend_24 { pt3dadd( 38.5914, -93.7686, 24.6344, 0.66 ) }
    dend_24 { pt3dadd( 39.4212, -94.7825, 25.7329, 0.37 ) }
    dend_24 { pt3dadd( 39.4685, -94.8364, 25.7971, 0.37 ) }
    dend_24 { pt3dadd( 40.0372, -95.4383, 26.5403, 0.59 ) }
    dend_24 { pt3dadd( 41.1531, -96.5798, 27.9975, 0.29 ) }
    dend_24 { pt3dadd( 42.0319, -97.488, 29.2184, 0.96 ) }
    dend_24 { pt3dadd( 43.1188, -98.6182, 30.8844, 2.21 ) }
    dend_24 { pt3dadd( 43.603, -99.1245, 31.7449, 2.5 ) }
    dend_24 { pt3dadd( 51.3254, -107.869, 38.0724, 2.5 ) }
    dend_24 { pt3dadd( 57.4027, -116.719, 45.8841, 2.5 ) }
    dend_24 { pt3dadd( 64.1178, -126.983, 51.0898, 2.5 ) }
    dend_24 { pt3dadd( 70.8246, -137.624, 55.5247, 2.5 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 45/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.04838, -67.1546, 2.95879, 1.4 ) }
    dend_5 { pt3dadd( -2.8634, -69.2113, 2.19717, 1.4 ) }
    dend_5 { pt3dadd( -3.42806, -71.4035, 1.55972, 0.44 ) }
    dend_5 { pt3dadd( -3.60871, -72.4987, 1.30088, 0.44 ) }
    dend_5 { pt3dadd( -3.70086, -73.3166, 1.14039, 0.88 ) }
    dend_5 { pt3dadd( -3.84083, -75.0567, 0.854139, 1.11 ) }
    dend_5 { pt3dadd( -3.91327, -76.314, 0.665857, 1.62 ) }
    dend_5 { pt3dadd( -3.86068, -77.5923, 0.549035, 1.92 ) }
    dend_5 { pt3dadd( -3.76258, -78.8036, 0.495576, 1.92 ) }
    dend_5 { pt3dadd( -3.6637, -79.985, 0.43908, 1.99 ) }
    dend_5 { pt3dadd( -3.57691, -81.2558, 0.36468, 1.92 ) }
    dend_5 { pt3dadd( -3.49297, -82.5314, 0.280926, 1.69 ) }
    dend_5 { pt3dadd( -3.41246, -83.4965, 0.231342, 1.4 ) }
    dend_5 { pt3dadd( -3.32722, -84.4401, 0.191858, 1.25 ) }
    dend_5 { pt3dadd( -3.31591, -84.5447, 0.18811, 1.25 ) }
    dend_5 { pt3dadd( -3.08623, -86.107, 0.174124, 0.88 ) }
    dend_5 { pt3dadd( -2.78946, -87.6615, 0.207715, 0.88 ) }
    dend_5 { pt3dadd( -2.51086, -88.8171, 0.301136, 1.18 ) }
    dend_5 { pt3dadd( -2.48146, -88.9212, 0.313062, 1.18 ) }
    dend_5 { pt3dadd( -2.27677, -89.632, 0.411166, 1.4 ) }
    dend_5 { pt3dadd( -2.01338, -90.7192, 0.582889, 1.4 ) }
    dend_5 { pt3dadd( -1.83828, -91.7074, 0.810512, 1.03 ) }
    dend_5 { pt3dadd( -1.75558, -92.9561, 1.14629, 0.74 ) }
    dend_5 { pt3dadd( -1.88908, -94.3753, 1.58237, 0.59 ) }
    dend_5 { pt3dadd( -2.11323, -95.2602, 1.88839, 0.44 ) }
    dend_5 { pt3dadd( -2.5959, -96.3062, 2.28901, 0.44 ) }
    dend_5 { pt3dadd( -3.38978, -97.4505, 2.7684, 1.18 ) }
    dend_5 { pt3dadd( -4.008, -98.1199, 3.07462, 1.62 ) }
    dend_5 { pt3dadd( -5.03319, -98.9934, 3.48081, 2.21 ) }
    dend_5 { pt3dadd( -5.50885, -99.3648, 3.65468, 2.36 ) }
    dend_5 { pt3dadd( -6.10814, -99.8689, 3.85035, 2.06 ) }
    dend_5 { pt3dadd( -6.79799, -100.574, 4.03927, 1.33 ) }
    dend_5 { pt3dadd( -7.31008, -101.133, 4.13425, 0.81 ) }
    dend_5 { pt3dadd( -8.20038, -102.236, 4.27931, 0.44 ) }
    dend_5 { pt3dadd( -8.70719, -102.999, 4.32777, 0.37 ) }
    dend_5 { pt3dadd( -9.22474, -103.915, 4.36162, 0.81 ) }
    dend_5 { pt3dadd( -9.54568, -104.612, 4.35383, 0.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 82/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -21.704, -51.1077, 19.3078, 0.37 ) }
    dend_3 { pt3dadd( -21.9408, -50.5254, 19.8812, 0.37 ) }
    dend_3 { pt3dadd( -21.9537, -50.497, 19.9087, 0.37 ) }
    dend_3 { pt3dadd( -22.1411, -50.1009, 20.3367, 0.37 ) }
    dend_3 { pt3dadd( -22.3648, -49.625, 20.8602, 0.37 ) }
    dend_3 { pt3dadd( -22.5684, -49.1388, 21.3931, 0.37 ) }
    dend_3 { pt3dadd( -22.6772, -48.7174, 21.8667, 0.37 ) }
    dend_3 { pt3dadd( -22.6868, -48.438, 22.2128, 0.66 ) }
    dend_3 { pt3dadd( -22.602, -47.9665, 22.8294, 0.66 ) }
    dend_3 { pt3dadd( -22.5419, -47.8345, 23.0192, 0.66 ) }
    dend_3 { pt3dadd( -22.2588, -47.3766, 23.6986, 0.44 ) }
    dend_3 { pt3dadd( -21.7332, -46.7165, 24.6965, 0.29 ) }
    dend_3 { pt3dadd( -21.2361, -46.2183, 25.4674, 0.66 ) }
    dend_3 { pt3dadd( -20.937, -45.9655, 25.8689, 1.25 ) }
    dend_3 { pt3dadd( -20.5841, -45.7051, 26.275, 1.25 ) }
    dend_3 { pt3dadd( -20.9098, -42.3507, 31.8927, 1.25 ) }
    dend_3 { pt3dadd( -19.9558, -38.592, 37.1913, 1.25 ) }
    dend_3 { pt3dadd( -19.2879, -34.2319, 42.0788, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( -19.2003, -30.387, 47.4004, 1.25 ) }
    dend_3 { pt3dadd( -20.0641, -25.6489, 51.8987, 1.25 ) }
    dend_3 { pt3dadd( -20.2167, -21.6567, 57.1138, 1.25 ) }
    dend_3 { pt3dadd( -19.2156, -18.5933, 62.8129, 1.25 ) }
    dend_3 { pt3dadd( -18.7957, -15.2452, 68.4304, 1.25 ) }
    dend_3 { pt3dadd( -17.9377, -11.3633, 73.6602, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 6/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -21.704, -51.1077, 19.3078, 0.96 ) }
    dend_2 { pt3dadd( -23.3345, -51.7272, 19.6873, 0.96 ) }
    dend_2 { pt3dadd( -24.1765, -51.9537, 19.9143, 0.96 ) }
    dend_2 { pt3dadd( -25.4355, -52.1486, 20.2408, 1.03 ) }
    dend_2 { pt3dadd( -25.8706, -52.1596, 20.3375, 1.18 ) }
    dend_2 { pt3dadd( -25.9409, -52.1519, 20.3553, 1.18 ) }
    dend_2 { pt3dadd( -26.668, -52.0797, 20.7084, 1.18 ) }
    dend_2 { pt3dadd( -27.9811, -51.9649, 21.8088, 0.74 ) }
    dend_2 { pt3dadd( -28.4777, -52.0322, 22.4876, 0.74 ) }
    dend_2 { pt3dadd( -28.914, -52.3536, 23.5334, 0.74 ) }
    dend_2 { pt3dadd( -29.3783, -53.1206, 25.2977, 1.03 ) }
    dend_2 { pt3dadd( -29.7645, -55.0228, 28.5519, 0.81 ) }
    dend_2 { pt3dadd( -29.683, -56.2686, 30.3353, 0.81 ) }
    dend_2 { pt3dadd( -29.4654, -57.5701, 31.9234, 0.81 ) }
    dend_2 { pt3dadd( -29.2945, -58.5858, 33.056, 1.33 ) }
    dend_2 { pt3dadd( -29.2765, -58.7011, 33.176, 1.69 ) }
    dend_2 { pt3dadd( -29.1507, -59.6927, 34.1182, 1.69 ) }
    dend_2 { pt3dadd( -29.0711, -62.349, 36.4779, 0.66 ) }
    dend_2 { pt3dadd( -29.1452, -63.7694, 37.8139, 0.59 ) }
    dend_2 { pt3dadd( -29.3, -64.9302, 39.0154, 0.52 ) }
    dend_2 { pt3dadd( -29.4999, -65.9296, 40.0877, 0.96 ) }
    dend_2 { pt3dadd( -29.6289, -66.4168, 40.6231, 0.96 ) }
    dend_2 { pt3dadd( -29.7886, -66.7858, 41.045, 0.96 ) }
    dend_2 { pt3dadd( -34.1327, -74.5167, 49.5449, 0.96 ) }
    dend_2 { pt3dadd( -38.0629, -83.3964, 57.1283, 0.96 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 34.1962, 67.3335, 1.77403, 0.37 ) }
    dend_40 { pt3dadd( 34.7541, 67.5563, 0.8706, 0.37 ) }
    dend_40 { pt3dadd( 34.9695, 67.7467, 0.359483, 0.88 ) }
    dend_40 { pt3dadd( 35.0492, 67.9263, -0.0215357, 1.18 ) }
    dend_40 { pt3dadd( 35.2749, 68.5991, -1.36428, 0.29 ) }
    dend_40 { pt3dadd( 35.3507, 68.8688, -1.85812, 0.29 ) }
    dend_40 { pt3dadd( 35.4382, 69.199, -2.42509, 0.74 ) }
    dend_40 { pt3dadd( 35.5648, 69.8397, -3.38721, 1.4 ) }
    dend_40 { pt3dadd( 35.7671, 70.9803, -4.89361, 0.52 ) }
    dend_40 { pt3dadd( 35.8559, 71.5043, -5.53252, 0.44 ) }
    dend_40 { pt3dadd( 35.9799, 72.1827, -6.27106, 0.22 ) }
    dend_40 { pt3dadd( 36.0773, 72.5993, -6.69679, 0.88 ) }
    dend_40 { pt3dadd( 36.1402, 72.8067, -6.87804, 1.03 ) }
    dend_40 { pt3dadd( 36.5895, 73.9042, -7.66411, 0.22 ) }
    dend_40 { pt3dadd( 36.6098, 73.9497, -7.68759, 0.22 ) }
    dend_40 { pt3dadd( 36.7512, 74.2917, -7.84546, 0.74 ) }
    dend_40 { pt3dadd( 36.9483, 74.7663, -8.05194, 0.22 ) }
    dend_40 { pt3dadd( 37.0642, 75.0875, -8.19798, 0.59 ) }
    dend_40 { pt3dadd( 37.3286, 75.926, -8.60298, 0.22 ) }
    dend_40 { pt3dadd( 37.4851, 76.4767, -8.87231, 0.74 ) }
    dend_40 { pt3dadd( 37.6616, 77.0953, -9.16333, 1.33 ) }
    dend_40 { pt3dadd( 37.7559, 77.4302, -9.31504, 1.33 ) }
    dend_40 { pt3dadd( 38.0705, 78.5266, -9.7837, 0.22 ) }
    dend_40 { pt3dadd( 38.0853, 78.5829, -9.80505, 0.22 ) }
    dend_40 { pt3dadd( 38.3485, 79.6819, -10.1685, 0.59 ) }
    dend_40 { pt3dadd( 38.6378, 80.8176, -10.4937, 0.22 ) }
    dend_40 { pt3dadd( 38.8626, 81.5971, -10.6798, 1.55 ) }
    dend_40 { pt3dadd( 38.9649, 81.9174, -10.7479, 1.92 ) }
    dend_40 { pt3dadd( 39.5204, 83.4509, -11.0175, 0.22 ) }
    dend_40 { pt3dadd( 39.5818, 83.6047, -11.0418, 0.37 ) }
    dend_40 { pt3dadd( 40.0862, 84.7443, -11.1933, 0.15 ) }
    dend_40 { pt3dadd( 40.5216, 85.5815, -11.2847, 0.44 ) }
    dend_40 { pt3dadd( 40.7168, 85.9088, -11.3157, 0.44 ) }
    dend_40 { pt3dadd( 41.0256, 86.3783, -11.3553, 0.22 ) }
    dend_40 { pt3dadd( 41.4695, 86.9541, -11.397, 1.47 ) }
    dend_40 { pt3dadd( 41.6245, 87.1371, -11.4134, 1.69 ) }
    dend_40 { pt3dadd( 42.5524, 88.1553, -11.534, 0.22 ) }
    dend_40 { pt3dadd( 42.7578, 88.3743, -11.5635, 1.03 ) }
    dend_40 { pt3dadd( 43.1602, 88.7761, -11.6203, 1.69 ) }
    dend_40 { pt3dadd( 44.2886, 89.8193, -11.7807, 0.15 ) }
    dend_40 { pt3dadd( 45.3174, 90.6822, -11.8825, 0.15 ) }
    dend_40 { pt3dadd( 45.651, 90.9417, -11.9046, 1.55 ) }
    dend_40 { pt3dadd( 45.7104, 90.9857, -11.9093, 1.55 ) }
    dend_40 { pt3dadd( 46.6707, 91.6858, -11.9992, 0.15 ) }
    dend_40 { pt3dadd( 47.0221, 91.9274, -12.0298, 1.18 ) }
    dend_40 { pt3dadd( 48.0079, 92.5693, -12.0979, 0.15 ) }
    dend_40 { pt3dadd( 48.0702, 92.6091, -12.1009, 0.52 ) }
    dend_40 { pt3dadd( 49.0873, 93.2599, -12.141, 0.15 ) }
    dend_40 { pt3dadd( 49.6684, 93.6693, -12.1784, 0.52 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 80/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 34.1962, 67.3335, 1.77403, 0.88 ) }
    dend_37 { pt3dadd( 34.3694, 68.5831, 1.974, 0.88 ) }
    dend_37 { pt3dadd( 34.66, 70.4318, 2.21546, 1.92 ) }
    dend_37 { pt3dadd( 34.8555, 71.6077, 2.34557, 2.5 ) }
    dend_37 { pt3dadd( 35.0276, 72.4771, 2.42779, 2.5 ) }
    dend_37 { pt3dadd( 35.2508, 73.4697, 2.55855, 2.28 ) }
    dend_37 { pt3dadd( 35.5985, 74.9171, 2.78268, 1.25 ) }
    dend_37 { pt3dadd( 35.8832, 76.1045, 3.00415, 0.59 ) }
    dend_37 { pt3dadd( 36.1339, 77.2623, 3.18659, 0.29 ) }
    dend_37 { pt3dadd( 36.3149, 78.2418, 3.36414, 0.29 ) }
    dend_37 { pt3dadd( 36.4988, 79.6956, 3.65673, 0.29 ) }
    dend_37 { pt3dadd( 36.5018, 79.7742, 3.6761, 0.29 ) }
    dend_37 { pt3dadd( 36.3914, 80.9956, 4.02295, 0.29 ) }
    dend_37 { pt3dadd( 36.2502, 81.7239, 4.2399, 0.37 ) }
    dend_37 { pt3dadd( 36.2046, 81.8947, 4.2877, 0.37 ) }
    dend_37 { pt3dadd( 35.9194, 82.8103, 4.50789, 0.37 ) }
    dend_37 { pt3dadd( 35.6409, 83.9214, 4.6115, 1.18 ) }
    dend_37 { pt3dadd( 35.5517, 84.7242, 4.63069, 1.69 ) }
    dend_37 { pt3dadd( 35.5545, 84.8623, 4.61565, 1.69 ) }
    dend_37 { pt3dadd( 35.594, 85.4724, 4.50792, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_37 { pt3dadd( 35.5999, 85.5681, 4.4866, 1.69 ) }
    dend_37 { pt3dadd( 35.707, 87.1918, 4.02857, 0.44 ) }
    dend_37 { pt3dadd( 35.7867, 88.4887, 3.62998, 0.22 ) }
    dend_37 { pt3dadd( 35.8278, 89.9787, 3.09196, 1.11 ) }
    dend_37 { pt3dadd( 35.8142, 90.8257, 2.79215, 1.4 ) }
    dend_37 { pt3dadd( 35.7525, 91.8668, 2.48781, 1.47 ) }
    dend_37 { pt3dadd( 35.6325, 93.154, 2.22876, 0.96 ) }
    dend_37 { pt3dadd( 35.522, 94.0872, 2.12965, 0.81 ) }
    dend_37 { pt3dadd( 35.2525, 96.2734, 2.09877, 0.52 ) }
    dend_37 { pt3dadd( 35.0443, 98.2921, 2.29687, 0.52 ) }
    dend_37 { pt3dadd( 34.9449, 100.035, 2.57634, 1.33 ) }
    dend_37 { pt3dadd( 34.9353, 101.366, 2.85657, 1.99 ) }
    dend_37 { pt3dadd( 34.9625, 102.51, 3.16198, 1.99 ) }
    dend_37 { pt3dadd( 35.0629, 104.01, 3.62744, 0.66 ) }
    dend_37 { pt3dadd( 35.2034, 105.239, 4.01749, 0.29 ) }
    dend_37 { pt3dadd( 35.3527, 106.213, 4.2077, 0.29 ) }
    dend_37 { pt3dadd( 35.5591, 107.424, 4.2536, 0.59 ) }
    dend_37 { pt3dadd( 35.7161, 108.404, 4.21814, 0.81 ) }
    dend_37 { pt3dadd( 35.7421, 108.585, 4.20582, 0.81 ) }
    dend_37 { pt3dadd( 35.965, 110.367, 4.02285, 0.29 ) }
    dend_37 { pt3dadd( 36.1429, 112.04, 3.85382, 0.29 ) }
    dend_37 { pt3dadd( 36.2584, 113.19, 3.77903, 0.96 ) }
    dend_37 { pt3dadd( 36.407, 114.367, 3.74763, 1.4 ) }
    dend_37 { pt3dadd( 36.5729, 115.539, 3.75064, 1.69 ) }
    dend_37 { pt3dadd( 36.6015, 115.747, 3.75849, 1.69 ) }
    dend_37 { pt3dadd( 36.7681, 116.887, 3.84818, 1.69 ) }
    dend_37 { pt3dadd( 36.9185, 118.004, 3.92176, 1.84 ) }
    dend_37 { pt3dadd( 37.0083, 119.056, 3.97995, 1.69 ) }
    dend_37 { pt3dadd( 37.061, 120.342, 4.02861, 1.4 ) }
    dend_37 { pt3dadd( 37.0199, 121.597, 4.08699, 0.81 ) }
    dend_37 { pt3dadd( 36.8955, 122.558, 4.1434, 0.52 ) }
    dend_37 { pt3dadd( 36.6692, 123.363, 4.19508, 0.52 ) }
    dend_37 { pt3dadd( 36.2096, 124.509, 4.27019, 0.52 ) }
    dend_37 { pt3dadd( 36.085, 124.768, 4.28663, 0.52 ) }
    dend_37 { pt3dadd( 35.6007, 125.66, 4.33965, 0.44 ) }
    dend_37 { pt3dadd( 35.1737, 126.481, 4.37901, 0.37 ) }
    dend_37 { pt3dadd( 34.7125, 127.627, 4.42048, 0.29 ) }
    dend_37 { pt3dadd( 34.4563, 128.666, 4.40116, 0.88 ) }
    dend_37 { pt3dadd( 34.3561, 129.47, 4.3641, 1.11 ) }
    dend_37 { pt3dadd( 34.3519, 129.581, 4.35507, 1.11 ) }
    dend_37 { pt3dadd( 34.4162, 130.972, 4.07673, 0.52 ) }
    dend_37 { pt3dadd( 34.5467, 132.244, 3.73964, 0.52 ) }
    dend_37 { pt3dadd( 34.7427, 133.737, 3.2917, 1.69 ) }
    dend_37 { pt3dadd( 34.9068, 135.037, 2.88444, 2.43 ) }
    dend_37 { pt3dadd( 35.0873, 136.56, 2.41202, 2.58 ) }
    dend_37 { pt3dadd( 35.3924, 139.311, 1.58646, 0.74 ) }
    dend_37 { pt3dadd( 35.5041, 140.387, 1.27367, 0.52 ) }
    dend_37 { pt3dadd( 35.6431, 141.741, 0.886404, 0.44 ) }
    dend_37 { pt3dadd( 35.7586, 142.983, 0.575754, 1.11 ) }
    dend_37 { pt3dadd( 35.8342, 144.043, 0.336113, 1.77 ) }
    dend_37 { pt3dadd( 35.8623, 144.778, 0.206656, 1.99 ) }
    dend_37 { pt3dadd( 35.8863, 146.356, 0.0165334, 1.62 ) }
    dend_37 { pt3dadd( 35.9718, 148.092, -0.222395, 0.44 ) }
    dend_37 { pt3dadd( 36.0761, 149.247, -0.399312, 0.29 ) }
    dend_37 { pt3dadd( 36.2848, 150.59, -0.618763, 0.88 ) }
    dend_37 { pt3dadd( 36.403, 151.075, -0.683775, 1.25 ) }
    dend_37 { pt3dadd( 36.6651, 151.867, -0.756681, 1.25 ) }
    dend_37 { pt3dadd( 37.5325, 153.615, -0.763521, 0.22 ) }
    dend_37 { pt3dadd( 37.5784, 153.681, -0.758176, 0.22 ) }
    dend_37 { pt3dadd( 38.014, 154.19, -0.701511, 0.96 ) }
    dend_37 { pt3dadd( 38.9746, 155.188, -0.546906, 1.18 ) }
    dend_37 { pt3dadd( 39.0523, 155.265, -0.534897, 1.18 ) }
    dend_37 { pt3dadd( 39.6871, 155.885, -0.515497, 1.18 ) }
    dend_37 { pt3dadd( 41.1144, 157.345, -0.65383, 0.22 ) }
    dend_37 { pt3dadd( 41.1799, 157.416, -0.668721, 0.22 ) }
    dend_37 { pt3dadd( 41.4055, 157.681, -0.771377, 0.74 ) }
    dend_37 { pt3dadd( 41.4599, 157.752, -0.810887, 0.74 ) }
    dend_37 { pt3dadd( 42.5162, 159.182, -1.71713, 0.74 ) }
    dend_37 { pt3dadd( 42.5741, 159.26, -1.77559, 1.4 ) }
    dend_37 { pt3dadd( 42.6186, 159.312, -1.81695, 1.4 ) }
    dend_37 { pt3dadd( 43.1676, 159.96, -2.26669, 1.69 ) }
    dend_37 { pt3dadd( 43.2231, 160.029, -2.307, 1.69 ) }
    dend_37 { pt3dadd( 43.5078, 160.394, -2.48733, 1.69 ) }
    dend_37 { pt3dadd( 44.4183, 161.629, -2.95323, 0.52 ) }
    dend_37 { pt3dadd( 45.1877, 162.758, -3.31925, 0.22 ) }
    dend_37 { pt3dadd( 45.6265, 163.503, -3.50391, 0.81 ) }
    dend_37 { pt3dadd( 45.9655, 164.169, -3.62361, 1.11 ) }
    dend_37 { pt3dadd( 46.0024, 164.259, -3.63484, 1.11 ) }
    dend_37 { pt3dadd( 46.1612, 164.72, -3.65737, 1.11 ) }
    dend_37 { pt3dadd( 46.3538, 165.364, -3.63537, 0.81 ) }
    dend_37 { pt3dadd( 46.71, 166.523, -3.54657, 0.29 ) }
    dend_37 { pt3dadd( 46.7419, 166.615, -3.53842, 0.29 ) }
    dend_37 { pt3dadd( 47.2589, 167.895, -3.42297, 0.29 ) }
    dend_37 { pt3dadd( 47.9347, 169.364, -3.29368, 0.29 ) }
    dend_37 { pt3dadd( 48.5817, 170.616, -3.18512, 0.81 ) }
    dend_37 { pt3dadd( 49.155, 171.611, -3.10354, 1.25 ) }
    dend_37 { pt3dadd( 49.2103, 171.697, -3.10073, 1.25 ) }
    dend_37 { pt3dadd( 49.7695, 172.559, -3.10085, 1.25 ) }
    dend_37 { pt3dadd( 50.1341, 173.114, -3.12154, 1.03 ) }
    dend_37 { pt3dadd( 50.2559, 173.307, -3.14641, 1.03 ) }
    dend_37 { pt3dadd( 50.7591, 174.131, -3.30451, 0.81 ) }
    dend_37 { pt3dadd( 51.6029, 175.617, -3.63449, 0.22 ) }
    dend_37 { pt3dadd( 52.2035, 176.704, -3.85392, 0.96 ) }
    dend_37 { pt3dadd( 52.5412, 177.301, -3.97239, 1.69 ) }
    dend_37 { pt3dadd( 53.2588, 178.425, -4.19947, 1.99 ) }
    dend_37 { pt3dadd( 53.3668, 178.569, -4.22953, 1.99 ) }
    dend_37 { pt3dadd( 53.9786, 179.254, -4.42609, 1.99 ) }
    dend_37 { pt3dadd( 55.2206, 180.413, -4.84362, 0.52 ) }
    dend_37 { pt3dadd( 55.9443, 181.014, -5.11596, 0.29 ) }
    dend_37 { pt3dadd( 56.6565, 181.571, -5.38741, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_37 { pt3dadd( 57.1524, 181.945, -5.56812, 0.88 ) }
    dend_37 { pt3dadd( 58.3184, 182.905, -6.07168, 0.29 ) }
    dend_37 { pt3dadd( 58.3843, 182.968, -6.10495, 0.29 ) }
    dend_37 { pt3dadd( 58.8863, 183.569, -6.37822, 0.59 ) }
    dend_37 { pt3dadd( 58.9418, 183.645, -6.40458, 0.59 ) }
    dend_37 { pt3dadd( 59.204, 183.981, -6.49506, 0.59 ) }
    dend_37 { pt3dadd( 59.9583, 184.885, -6.66586, 0.22 ) }
    dend_37 { pt3dadd( 60.9176, 185.986, -6.78581, 1.62 ) }
    dend_37 { pt3dadd( 61.7637, 186.931, -6.90012, 2.65 ) }
    dend_37 { pt3dadd( 62.0356, 187.225, -6.938, 2.8 ) }
    dend_37 { pt3dadd( 63.4943, 188.804, -7.13935, 0.59 ) }
    dend_37 { pt3dadd( 63.9835, 189.332, -7.23968, 0.22 ) }
    dend_37 { pt3dadd( 65.0356, 190.411, -7.54105, 0.22 ) }
    dend_37 { pt3dadd( 65.8544, 191.253, -7.85576, 0.88 ) }
    dend_37 { pt3dadd( 66.1373, 191.521, -7.98731, 1.11 ) }
    dend_37 { pt3dadd( 66.5652, 191.894, -8.22421, 1.18 ) }
    dend_37 { pt3dadd( 67.9938, 193.029, -9.15788, 0.29 ) }
    dend_37 { pt3dadd( 68.809, 193.597, -9.69793, 0.29 ) }
    dend_37 { pt3dadd( 68.891, 193.645, -9.75108, 0.29 ) }
    dend_37 { pt3dadd( 69.9033, 194.221, -10.3619, 0.29 ) }
    dend_37 { pt3dadd( 70.934, 194.801, -10.9368, 0.22 ) }
    dend_37 { pt3dadd( 71.4958, 195.181, -11.1457, 0.96 ) }
    dend_37 { pt3dadd( 72.1339, 195.786, -11.2097, 1.25 ) }
    dend_37 { pt3dadd( 72.2578, 195.936, -11.2064, 1.25 ) }
    dend_37 { pt3dadd( 72.4691, 196.226, -11.1677, 1.25 ) }
    dend_37 { pt3dadd( 72.5314, 196.316, -11.1513, 1.25 ) }
    dend_37 { pt3dadd( 73.8283, 198.21, -10.8637, 0.22 ) }
    dend_37 { pt3dadd( 74.5544, 199.32, -10.8787, 1.33 ) }
    dend_37 { pt3dadd( 74.9223, 199.899, -10.9545, 1.92 ) }
    dend_37 { pt3dadd( 75.6539, 201.015, -11.1983, 1.69 ) }
    dend_37 { pt3dadd( 77.1047, 203.183, -11.8942, 0.22 ) }
    dend_37 { pt3dadd( 77.8019, 204.259, -12.4404, 1.11 ) }
    dend_37 { pt3dadd( 79.0464, 206.232, -13.8431, 0.29 ) }
    dend_37 { pt3dadd( 79.4084, 206.855, -14.3432, 1.33 ) }
    dend_37 { pt3dadd( 79.7437, 207.463, -14.8992, 1.69 ) }
    dend_37 { pt3dadd( 80.1553, 208.223, -15.6895, 1.69 ) }
    dend_37 { pt3dadd( 81.0213, 209.865, -17.5327, 0.37 ) }
    dend_37 { pt3dadd( 81.0595, 209.923, -17.5997, 0.37 ) }
    dend_37 { pt3dadd( 81.5959, 210.623, -18.4091, 0.37 ) }
    dend_37 { pt3dadd( 82.2058, 211.408, -19.38, 0.88 ) }
    dend_37 { pt3dadd( 82.5233, 211.821, -19.8729, 0.88 ) }
    dend_37 { pt3dadd( 82.5724, 211.877, -19.9346, 0.88 ) }
    dend_37 { pt3dadd( 83.3222, 212.884, -21.1564, 0.22 ) }
    dend_37 { pt3dadd( 83.6019, 213.367, -21.7647, 0.22 ) }
    dend_37 { pt3dadd( 83.8176, 213.88, -22.3834, 0.81 ) }
    dend_37 { pt3dadd( 83.9878, 214.438, -23.0197, 1.25 ) }
    dend_37 { pt3dadd( 84.1128, 214.864, -23.5197, 1.25 ) }
    dend_37 { pt3dadd( 84.954, 217.444, -26.5425, 0.37 ) }
    dend_37 { pt3dadd( 85.0844, 217.862, -27.0395, 0.29 ) }
    dend_37 { pt3dadd( 85.4759, 219.11, -28.5485, 0.59 ) }
    dend_37 { pt3dadd( 85.7671, 219.992, -29.5904, 0.59 ) }
    dend_37 { pt3dadd( 86.2397, 221.179, -31.024, 0.29 ) }
    dend_37 { pt3dadd( 86.5619, 221.891, -31.8802, 2.28 ) }
    dend_37 { pt3dadd( 87.8313, 224.238, -34.5814, 0.37 ) }
    dend_37 { pt3dadd( 88.1023, 224.732, -35.1517, 0.29 ) }
    dend_37 { pt3dadd( 88.334, 225.245, -35.6688, 0.22 ) }
    dend_37 { pt3dadd( 88.8511, 226.519, -36.8535, 0.22 ) }
    dend_37 { pt3dadd( 89.3305, 227.965, -38.0687, 0.22 ) }
    dend_37 { pt3dadd( 89.3508, 228.037, -38.1255, 0.22 ) }
    dend_37 { pt3dadd( 89.6981, 229.175, -38.805, 1.92 ) }
    dend_37 { pt3dadd( 90.306, 231.693, -40.2637, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_27 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 32.7008, 43.1013, 31.2653, 0.44 ) }
    dend_35 { pt3dadd( 33.6676, 42.8647, 31.1677, 0.44 ) }
    dend_35 { pt3dadd( 34.7945, 42.6593, 31.0547, 0.66 ) }
    dend_35 { pt3dadd( 36.1363, 42.5442, 30.9155, 0.29 ) }
    dend_35 { pt3dadd( 36.2212, 42.5497, 30.9066, 0.29 ) }
    dend_35 { pt3dadd( 37.5455, 42.7701, 30.7679, 0.29 ) }
    dend_35 { pt3dadd( 38.3797, 43.0974, 30.6924, 0.29 ) }
    dend_35 { pt3dadd( 38.4408, 43.1538, 30.6887, 0.29 ) }
    dend_35 { pt3dadd( 38.9566, 43.9838, 30.6233, 0.22 ) }
    dend_35 { pt3dadd( 39.4073, 44.7617, 30.5354, 0.22 ) }
    dend_35 { pt3dadd( 39.4454, 44.8126, 30.5274, 0.22 ) }
    dend_35 { pt3dadd( 40.5022, 45.9158, 30.3091, 0.22 ) }
    dend_35 { pt3dadd( 40.586, 45.9835, 30.2928, 0.22 ) }
    dend_35 { pt3dadd( 41.3022, 46.4799, 30.1615, 0.29 ) }
    dend_35 { pt3dadd( 42.6327, 47.2578, 29.9279, 0.29 ) }
    dend_35 { pt3dadd( 44.2725, 48.1046, 29.6442, 0.22 ) }
    dend_35 { pt3dadd( 45.2889, 48.5681, 29.4711, 0.22 ) }
    dend_35 { pt3dadd( 45.3568, 48.5923, 29.4599, 0.22 ) }
    dend_35 { pt3dadd( 45.9227, 48.7819, 29.3817, 0.37 ) }
    dend_35 { pt3dadd( 46.143, 48.8477, 29.365, 0.37 ) }
    dend_35 { pt3dadd( 46.4924, 48.9702, 29.3409, 0.37 ) }
    dend_35 { pt3dadd( 54.3755, 54.6121, 26.6558, 0.37 ) }
    dend_35 { pt3dadd( 62.4106, 59.0107, 22.5559, 0.37 ) }
    dend_35 { pt3dadd( 70.1278, 64.9216, 19.946, 0.37 ) }
    dend_35 { pt3dadd( 77.7033, 70.99, 17.2696, 0.37 ) }
    dend_35 { pt3dadd( 84.8624, 77.8388, 15.3555, 0.37 ) }
    dend_35 { pt3dadd( 92.7797, 84.0715, 15.1173, 0.37 ) }
    dend_35 { pt3dadd( 101.824, 88.4178, 15.5088, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 32.7008, 43.1013, 31.2653, 2.06 ) }
    dend_28 { pt3dadd( 32.0854, 44.4801, 37.6312, 2.06 ) }
    dend_28 { pt3dadd( 32.0264, 44.6122, 38.2416, 2.21 ) }
    // Section: dend_23, id: dend_23, parent: dend_5 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -9.54568, -104.612, 4.35383, 0.22 ) }
    dend_23 { pt3dadd( -8.2736, -104.467, 4.00676, 0.22 ) }
    dend_23 { pt3dadd( -6.99347, -104.124, 3.80777, 0.22 ) }
    dend_23 { pt3dadd( -6.55005, -103.973, 3.74979, 0.44 ) }
    dend_23 { pt3dadd( -5.98102, -103.739, 3.70145, 0.44 ) }
    dend_23 { pt3dadd( -4.51639, -103.076, 3.59726, 0.22 ) }
    dend_23 { pt3dadd( -3.1247, -102.418, 3.50691, 0.22 ) }
    dend_23 { pt3dadd( -1.23445, -101.442, 3.45749, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( -0.117379, -100.814, 3.43319, 0.44 ) }
    dend_23 { pt3dadd( 1.41344, -99.9322, 3.39559, 0.15 ) }
    dend_23 { pt3dadd( 2.21218, -99.4744, 3.36682, 0.15 ) }
    dend_23 { pt3dadd( 2.28337, -99.4337, 3.36136, 0.15 ) }
    dend_23 { pt3dadd( 3.06028, -98.9768, 3.24786, 0.59 ) }
    dend_23 { pt3dadd( 3.48403, -98.7146, 3.11915, 0.74 ) }
    dend_23 { pt3dadd( 3.54196, -98.6747, 3.09047, 0.74 ) }
    dend_23 { pt3dadd( 4.16825, -98.1968, 2.6773, 0.29 ) }
    dend_23 { pt3dadd( 4.70912, -97.7089, 2.25693, 0.44 ) }
    dend_23 { pt3dadd( 5.6555, -96.768, 1.45897, 0.22 ) }
    dend_23 { pt3dadd( 6.23289, -96.1556, 0.973993, 1.4 ) }
    dend_23 { pt3dadd( 7.26086, -95.0973, 0.127164, 0.22 ) }
    dend_23 { pt3dadd( 7.58896, -94.7702, -0.138371, 0.59 ) }
    dend_23 { pt3dadd( 8.82584, -93.5757, -1.14102, 0.22 ) }
    dend_23 { pt3dadd( 8.92097, -93.489, -1.21512, 0.22 ) }
    dend_23 { pt3dadd( 10.3956, -92.1893, -2.38341, 0.22 ) }
    dend_23 { pt3dadd( 11.4148, -91.3527, -3.22497, 0.22 ) }
    dend_23 { pt3dadd( 11.4828, -91.3003, -3.2813, 0.22 ) }
    dend_23 { pt3dadd( 12.2676, -90.6764, -3.96253, 0.22 ) }
    dend_23 { pt3dadd( 13.1374, -89.9072, -4.76931, 0.66 ) }
    dend_23 { pt3dadd( 13.8127, -89.211, -5.46959, 0.59 ) }
    dend_23 { pt3dadd( 14.8049, -87.9569, -6.65475, 0.22 ) }
    dend_23 { pt3dadd( 15.3123, -87.1171, -7.34081, 0.22 ) }
    dend_23 { pt3dadd( 15.9363, -85.8282, -8.2997, 0.22 ) }
    dend_23 { pt3dadd( 16.3606, -84.6413, -9.08132, 0.22 ) }
    dend_23 { pt3dadd( 16.4606, -84.2137, -9.3285, 0.66 ) }
    dend_23 { pt3dadd( 16.5446, -83.5817, -9.63471, 0.66 ) }
    dend_23 { pt3dadd( 16.5876, -82.0787, -10.2497, 0.22 ) }
    dend_23 { pt3dadd( 16.5671, -81.4994, -10.4801, 0.52 ) }
    dend_23 { pt3dadd( 16.5675, -81.1489, -10.6032, 0.52 ) }
    dend_23 { pt3dadd( 16.6406, -80.2462, -10.8727, 0.22 ) }
    dend_23 { pt3dadd( 16.678, -80.0231, -10.9295, 0.52 ) }
    dend_23 { pt3dadd( 16.8153, -79.5569, -11.021, 0.52 ) }
    dend_23 { pt3dadd( 16.8433, -79.4894, -11.0294, 0.52 ) }
    dend_23 { pt3dadd( 17.5114, -78.0164, -11.1669, 0.22 ) }
    dend_23 { pt3dadd( 17.6272, -77.7787, -11.1875, 0.37 ) }
    dend_23 { pt3dadd( 17.7307, -77.5992, -11.2026, 0.37 ) }
    dend_23 { pt3dadd( 18.6941, -76.1098, -11.3616, 0.15 ) }
    dend_23 { pt3dadd( 18.8463, -75.8957, -11.3898, 0.74 ) }
    dend_23 { pt3dadd( 19.2337, -75.3627, -11.4681, 0.74 ) }
    dend_23 { pt3dadd( 19.2838, -75.2976, -11.4799, 0.74 ) }
    dend_23 { pt3dadd( 20.3577, -73.9816, -11.7291, 0.22 ) }
    dend_23 { pt3dadd( 20.7022, -73.5949, -11.8061, 0.66 ) }
    dend_23 { pt3dadd( 21.078, -73.2589, -11.8832, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.54568, -104.612, 4.35383, 1.47 ) }
    dend_6 { pt3dadd( -9.48927, -104.914, 4.30607, 1.47 ) }
    dend_6 { pt3dadd( -9.36462, -105.93, 4.11582, 1.99 ) }
    dend_6 { pt3dadd( -9.30641, -107.097, 3.89488, 1.77 ) }
    dend_6 { pt3dadd( -9.31462, -108.655, 3.59583, 1.25 ) }
    dend_6 { pt3dadd( -9.37962, -110.132, 3.32554, 0.81 ) }
    dend_6 { pt3dadd( -9.47365, -111.387, 3.05792, 1.47 ) }
    dend_6 { pt3dadd( -9.61698, -112.684, 2.74984, 2.06 ) }
    dend_6 { pt3dadd( -9.78625, -113.85, 2.45386, 2.06 ) }
    dend_6 { pt3dadd( -10.02, -115.123, 2.11355, 2.43 ) }
    dend_6 { pt3dadd( -10.2852, -116.317, 1.79606, 2.14 ) }
    dend_6 { pt3dadd( -10.759, -118.444, 1.21442, 0.96 ) }
    dend_6 { pt3dadd( -11.0667, -119.856, 0.815217, 1.25 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 57/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 90.306, 231.693, -40.2637, 0.22 ) }
    dend_39 { pt3dadd( 90.9137, 232.787, -40.5279, 0.22 ) }
    dend_39 { pt3dadd( 91.2687, 233.417, -40.7149, 1.4 ) }
    dend_39 { pt3dadd( 91.4953, 233.838, -40.8419, 1.69 ) }
    dend_39 { pt3dadd( 91.7069, 234.245, -40.9238, 1.77 ) }
    dend_39 { pt3dadd( 92.1154, 235.035, -41.031, 1.4 ) }
    dend_39 { pt3dadd( 92.8607, 236.452, -41.153, 0.22 ) }
    dend_39 { pt3dadd( 92.8913, 236.507, -41.1543, 0.22 ) }
    dend_39 { pt3dadd( 93.3143, 237.26, -41.1415, 0.22 ) }
    dend_39 { pt3dadd( 93.9258, 238.371, -41.0832, 1.03 ) }
    dend_39 { pt3dadd( 94.2243, 238.929, -41.032, 1.03 ) }
    dend_39 { pt3dadd( 94.5761, 239.634, -40.9593, 0.59 ) }
    dend_39 { pt3dadd( 95.0322, 240.751, -40.8367, 0.22 ) }
    dend_39 { pt3dadd( 95.182, 241.2, -40.8221, 0.74 ) }
    dend_39 { pt3dadd( 95.2029, 241.26, -40.8302, 0.74 ) }
    dend_39 { pt3dadd( 95.4068, 241.799, -40.9814, 0.74 ) }
    dend_39 { pt3dadd( 95.8072, 242.759, -41.3576, 0.22 ) }
    dend_39 { pt3dadd( 96.1874, 243.547, -41.7227, 0.22 ) }
    dend_39 { pt3dadd( 96.6737, 244.437, -42.182, 0.96 ) }
    dend_39 { pt3dadd( 97.7315, 245.931, -43.0889, 0.22 ) }
    dend_39 { pt3dadd( 98.1238, 246.375, -43.3811, 1.18 ) }
    dend_39 { pt3dadd( 98.8396, 247.034, -43.864, 1.55 ) }
    dend_39 { pt3dadd( 99.6127, 247.628, -44.3235, 1.55 ) }
    dend_39 { pt3dadd( 99.6671, 247.664, -44.3534, 1.55 ) }
    dend_39 { pt3dadd( 101.1, 248.575, -45.098, 0.22 ) }
    dend_39 { pt3dadd( 101.795, 249.046, -45.4215, 0.44 ) }
    dend_39 { pt3dadd( 102.327, 249.404, -45.6567, 0.81 ) }
    dend_39 { pt3dadd( 102.704, 249.665, -45.8084, 0.81 ) }
    dend_39 { pt3dadd( 103.822, 250.505, -46.2489, 0.22 ) }
    dend_39 { pt3dadd( 104.313, 250.929, -46.421, 1.18 ) }
    dend_39 { pt3dadd( 104.712, 251.313, -46.5448, 1.84 ) }
    dend_39 { pt3dadd( 105.095, 251.659, -46.6802, 1.84 ) }
    dend_39 { pt3dadd( 106.336, 252.709, -47.133, 0.29 ) }
    dend_39 { pt3dadd( 106.974, 253.18, -47.3686, 0.29 ) }
    dend_39 { pt3dadd( 107.906, 253.811, -47.7071, 0.29 ) }
    dend_39 { pt3dadd( 108.503, 254.17, -47.9104, 1.11 ) }
    dend_39 { pt3dadd( 109.778, 254.781, -48.3186, 0.29 ) }
    dend_39 { pt3dadd( 109.833, 254.802, -48.3404, 0.29 ) }
    dend_39 { pt3dadd( 110.733, 255.074, -48.7432, 0.59 ) }
    dend_39 { pt3dadd( 111.415, 255.271, -49.1298, 0.74 ) }
    dend_39 { pt3dadd( 112.202, 255.524, -49.6277, 0.74 ) }
    dend_39 { pt3dadd( 112.844, 255.775, -50.0488, 0.74 ) }
    dend_39 { pt3dadd( 114.695, 256.659, -51.2764, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_39 { pt3dadd( 115.017, 256.822, -51.502, 0.96 ) }
    dend_39 { pt3dadd( 116.396, 257.581, -52.5129, 0.29 ) }
    dend_39 { pt3dadd( 116.818, 257.801, -52.8065, 1.25 ) }
    dend_39 { pt3dadd( 117.07, 257.927, -52.9573, 1.69 ) }
    dend_39 { pt3dadd( 117.601, 258.199, -53.2119, 1.84 ) }
    dend_39 { pt3dadd( 118.497, 258.646, -53.5389, 0.88 ) }
    dend_39 { pt3dadd( 119.698, 259.245, -53.9265, 0.29 ) }
    dend_39 { pt3dadd( 120.39, 259.595, -54.1125, 0.37 ) }
    dend_39 { pt3dadd( 121.684, 260.276, -54.4532, 0.29 ) }
    dend_39 { pt3dadd( 122.176, 260.532, -54.5845, 1.25 ) }
    dend_39 { pt3dadd( 123.975, 261.446, -55.0526, 0.22 ) }
    dend_39 { pt3dadd( 124.999, 261.929, -55.3267, 1.4 ) }
    dend_39 { pt3dadd( 125.405, 262.11, -55.4452, 1.69 ) }
    dend_39 { pt3dadd( 126.122, 262.418, -55.681, 1.25 ) }
    dend_39 { pt3dadd( 127.915, 263.167, -56.3196, 0.22 ) }
    dend_39 { pt3dadd( 128.232, 263.288, -56.4421, 0.88 ) }
    dend_39 { pt3dadd( 129.763, 263.813, -57.049, 0.22 ) }
    dend_39 { pt3dadd( 129.826, 263.834, -57.0763, 0.44 ) }
    dend_39 { pt3dadd( 130.245, 263.965, -57.265, 0.44 ) }
    dend_39 { pt3dadd( 131.139, 264.209, -57.7348, 1.33 ) }
    dend_39 { pt3dadd( 132.525, 264.59, -58.5836, 0.22 ) }
    dend_39 { pt3dadd( 133.494, 264.852, -59.2298, 0.81 ) }
    dend_39 { pt3dadd( 133.808, 264.922, -59.4914, 0.81 ) }
    dend_39 { pt3dadd( 133.88, 264.936, -59.5733, 0.81 ) }
    dend_39 { pt3dadd( 134.916, 265.171, -61.3838, 0.29 ) }
    dend_39 { pt3dadd( 135.4, 265.315, -62.5303, 1.62 ) }
    dend_39 { pt3dadd( 135.425, 265.325, -62.6066, 1.62 ) }
    dend_39 { pt3dadd( 136.164, 265.74, -65.3931, 0.74 ) }
    dend_39 { pt3dadd( 136.746, 266.32, -68.1339, 0.88 ) }
    dend_39 { pt3dadd( 137.265, 267.145, -71.2403, 0.29 ) }
    dend_39 { pt3dadd( 137.324, 267.327, -71.7849, 1.11 ) }
    dend_39 { pt3dadd( 137.327, 267.348, -71.84, 1.11 ) }
    dend_39 { pt3dadd( 137.344, 267.539, -72.2395, 1.11 ) }
    dend_39 { pt3dadd( 137.284, 269.307, -74.8297, 0.22 ) }
    dend_39 { pt3dadd( 137.281, 269.457, -74.9998, 0.66 ) }
    dend_39 { pt3dadd( 137.292, 269.778, -75.3035, 0.66 ) }
    dend_39 { pt3dadd( 137.302, 269.881, -75.4044, 0.66 ) }
    dend_39 { pt3dadd( 137.455, 271.023, -76.5212, 0.15 ) }
    dend_39 { pt3dadd( 137.61, 271.823, -77.2585, 1.18 ) }
    dend_39 { pt3dadd( 137.626, 271.886, -77.3094, 1.18 ) }
    dend_39 { pt3dadd( 137.731, 272.273, -77.6317, 1.11 ) }
    dend_39 { pt3dadd( 138.175, 273.761, -78.89, 0.22 ) }
    dend_39 { pt3dadd( 138.195, 273.823, -78.9404, 0.29 ) }
    dend_39 { pt3dadd( 138.514, 274.574, -79.4841, 0.15 ) }
    dend_39 { pt3dadd( 138.514, 274.574, -79.4841, 0.22 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 45/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 90.306, 231.693, -40.2637, 0.15 ) }
    dend_38 { pt3dadd( 89.4783, 232.284, -40.2453, 0.15 ) }
    dend_38 { pt3dadd( 88.2193, 233.181, -40.2172, 0.15 ) }
    dend_38 { pt3dadd( 86.2213, 234.606, -40.1727, 0.74 ) }
    dend_38 { pt3dadd( 86.1605, 234.649, -40.1714, 0.74 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 50/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 32.0264, 44.6122, 38.2416, 0.96 ) }
    dend_34 { pt3dadd( 32.9924, 41.5448, 40.2596, 0.96 ) }
    dend_34 { pt3dadd( 33.3974, 40.0346, 41.3222, 0.59 ) }
    dend_34 { pt3dadd( 33.8553, 38.5277, 42.3869, 0.74 ) }
    dend_34 { pt3dadd( 34.1295, 37.7795, 42.9141, 0.66 ) }
    dend_34 { pt3dadd( 34.7289, 36.4091, 43.7812, 0.59 ) }
    dend_34 { pt3dadd( 35.3847, 35.1072, 44.5234, 0.44 ) }
    dend_34 { pt3dadd( 35.4334, 35.0268, 44.5488, 0.44 ) }
    dend_34 { pt3dadd( 36.3094, 33.7171, 44.8344, 0.44 ) }
    dend_34 { pt3dadd( 36.8793, 32.9798, 44.8629, 0.66 ) }
    dend_34 { pt3dadd( 37.8302, 31.7069, 44.8321, 0.81 ) }
    dend_34 { pt3dadd( 38.335, 30.9804, 44.815, 0.96 ) }
    dend_34 { pt3dadd( 38.9142, 30.0142, 44.821, 0.74 ) }
    dend_34 { pt3dadd( 39.6116, 28.5438, 44.9377, 0.52 ) }
    dend_34 { pt3dadd( 40.0662, 27.2067, 45.1386, 0.44 ) }
    dend_34 { pt3dadd( 40.4555, 25.6009, 45.5036, 0.44 ) }
    dend_34 { pt3dadd( 40.7222, 24.0236, 46.0111, 1.33 ) }
    dend_34 { pt3dadd( 40.8293, 23.2479, 46.2908, 1.55 ) }
    dend_34 { pt3dadd( 40.9137, 22.6743, 46.5093, 1.55 ) }
    dend_34 { pt3dadd( 40.9294, 22.5946, 46.5389, 1.55 ) }
    dend_34 { pt3dadd( 41.2033, 21.2981, 46.9569, 1.33 ) }
    dend_34 { pt3dadd( 41.5329, 20.1149, 47.2087, 0.96 ) }
    dend_34 { pt3dadd( 41.864, 19.1191, 47.3286, 0.59 ) }
    dend_34 { pt3dadd( 42.2878, 18.0139, 47.4637, 0.44 ) }
    dend_34 { pt3dadd( 42.5274, 17.4517, 47.5315, 0.52 ) }
    dend_34 { pt3dadd( 45.8049, 7.55106, 53.1072, 0.52 ) }
    dend_34 { pt3dadd( 50.3509, -1.59217, 59.0123, 0.52 ) }
    dend_34 { pt3dadd( 54.7316, -9.91112, 66.0905, 0.52 ) }
    dend_34 { pt3dadd( 58.0868, -17.912, 74.0298, 0.52 ) }
    dend_34 { pt3dadd( 61.9753, -25.4493, 82.1542, 0.52 ) }
    dend_34 { pt3dadd( 66.0701, -33.2231, 89.9581, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 81/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 32.0264, 44.6122, 38.2416, 0.81 ) }
    dend_29 { pt3dadd( 31.7011, 47.0912, 39.3674, 0.81 ) }
    dend_29 { pt3dadd( 31.6989, 48.2078, 39.7324, 0.66 ) }
    dend_29 { pt3dadd( 31.8262, 49.2125, 39.993, 0.66 ) }
    dend_29 { pt3dadd( 32.2129, 50.7007, 40.3287, 0.66 ) }
    dend_29 { pt3dadd( 32.7327, 52.0751, 40.6113, 0.44 ) }
    dend_29 { pt3dadd( 33.1904, 53.0188, 40.8263, 0.44 ) }
    dend_29 { pt3dadd( 34.0422, 54.2012, 40.8988, 0.66 ) }
    dend_29 { pt3dadd( 34.7177, 54.9212, 40.9103, 0.37 ) }
    dend_29 { pt3dadd( 35.4513, 55.4719, 40.9274, 0.37 ) }
    dend_29 { pt3dadd( 35.901, 55.6773, 40.9343, 1.25 ) }
    dend_29 { pt3dadd( 36.7889, 55.9009, 40.9132, 1.47 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 93/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -11.0667, -119.856, 0.815217, 0.52 ) }
    dend_8 { pt3dadd( -11.7432, -121.078, 0.528713, 0.52 ) }
    dend_8 { pt3dadd( -12.1139, -121.778, 0.391747, 1.33 ) }
    dend_8 { pt3dadd( -12.4439, -122.411, 0.293169, 1.99 ) }
    dend_8 { pt3dadd( -12.8014, -123.169, 0.203548, 2.28 ) }
    dend_8 { pt3dadd( -13.073, -123.788, 0.159576, 2.58 ) }
    dend_8 { pt3dadd( -13.5036, -124.82, 0.119719, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( -13.8356, -125.708, 0.101924, 1.92 ) }
    dend_8 { pt3dadd( -14.1322, -126.559, 0.0724854, 1.69 ) }
    dend_8 { pt3dadd( -14.54, -127.863, -0.0118388, 1.03 ) }
    dend_8 { pt3dadd( -14.7855, -128.759, -0.106888, 0.52 ) }
    dend_8 { pt3dadd( -15.0136, -129.736, -0.286778, 0.44 ) }
    dend_8 { pt3dadd( -15.2155, -130.731, -0.541298, 1.11 ) }
    dend_8 { pt3dadd( -15.3682, -131.584, -0.791806, 1.62 ) }
    dend_8 { pt3dadd( -15.5127, -132.547, -1.10429, 1.77 ) }
    dend_8 { pt3dadd( -15.6546, -133.646, -1.46804, 1.62 ) }
    dend_8 { pt3dadd( -15.7516, -134.75, -1.79176, 0.66 ) }
    dend_8 { pt3dadd( -15.7832, -135.691, -1.9854, 0.37 ) }
    dend_8 { pt3dadd( -15.7544, -136.489, -1.98237, 0.96 ) }
    dend_8 { pt3dadd( -15.7179, -136.956, -1.89027, 1.25 ) }
    dend_8 { pt3dadd( -15.6636, -137.603, -1.70197, 1.25 ) }
    dend_8 { pt3dadd( -15.6034, -138.438, -1.41156, 1.11 ) }
    dend_8 { pt3dadd( -15.5754, -139.221, -1.19942, 0.74 ) }
    dend_8 { pt3dadd( -15.6537, -140.904, -1.03472, 0.37 ) }
    dend_8 { pt3dadd( -15.7843, -141.916, -1.11585, 0.37 ) }
    dend_8 { pt3dadd( -16.0089, -143.103, -1.38268, 1.25 ) }
    dend_8 { pt3dadd( -16.1623, -143.78, -1.61371, 1.84 ) }
    dend_8 { pt3dadd( -16.5803, -145.465, -2.30534, 1.62 ) }
    dend_8 { pt3dadd( -16.8595, -146.455, -2.79006, 0.52 ) }
    dend_8 { pt3dadd( -17.0449, -147.061, -3.14999, 0.29 ) }
    dend_8 { pt3dadd( -17.3187, -148.02, -3.7407, 1.11 ) }
    dend_8 { pt3dadd( -17.4969, -148.733, -4.14088, 1.84 ) }
    dend_8 { pt3dadd( -17.6142, -149.273, -4.42167, 2.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 26/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.0667, -119.856, 0.815217, 0.22 ) }
    dend_7 { pt3dadd( -10.3657, -120.882, 1.20908, 0.22 ) }
    dend_7 { pt3dadd( -9.58133, -122.03, 1.64979, 0.22 ) }
    dend_7 { pt3dadd( -8.95411, -122.948, 2.0022, 0.22 ) }
    dend_7 { pt3dadd( -8.38987, -123.774, 2.31924, 0.44 ) }
    dend_7 { pt3dadd( -8.05998, -124.256, 2.50459, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 32/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 36.7889, 55.9009, 40.9132, 1.33 ) }
    dend_31 { pt3dadd( 36.9388, 55.7995, 41.5201, 1.33 ) }
    dend_31 { pt3dadd( 37.4505, 55.4535, 43.5917, 0.96 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 36.7889, 55.9009, 40.9132, 0.29 ) }
    dend_30 { pt3dadd( 36.1372, 56.8015, 40.4459, 0.29 ) }
    dend_30 { pt3dadd( 35.519, 57.61, 40.0287, 0.29 ) }
    dend_30 { pt3dadd( 35.0015, 58.226, 39.7218, 0.29 ) }
    dend_30 { pt3dadd( 34.962, 58.2726, 39.6971, 0.29 ) }
    dend_30 { pt3dadd( 34.3184, 59.0332, 39.2944, 0.29 ) }
    dend_30 { pt3dadd( 34.279, 59.0798, 39.2697, 0.29 ) }
    dend_30 { pt3dadd( 33.7813, 59.5704, 38.9784, 0.29 ) }
    dend_30 { pt3dadd( 33.0626, 60.2112, 38.6095, 0.29 ) }
    dend_30 { pt3dadd( 32.6375, 60.6083, 38.3995, 0.29 ) }
    dend_30 { pt3dadd( 25.5074, 66.9109, 33.0328, 0.29 ) }
    dend_30 { pt3dadd( 19.1517, 73.4059, 26.9519, 0.29 ) }
    dend_30 { pt3dadd( 14.2742, 80.4056, 20.0804, 0.29 ) }
    dend_30 { pt3dadd( 8.6989, 88.2395, 14.7868, 0.29 ) }
    dend_30 { pt3dadd( 3.02325, 96.3153, 9.97123, 0.29 ) }
    dend_30 { pt3dadd( -1.94774, 104.617, 4.75214, 0.29 ) }
    dend_30 { pt3dadd( -7.31473, 113.703, 1.59345, 0.29 ) }
    dend_30 { pt3dadd( -10.6498, 123.126, -3.09161, 0.29 ) }
    dend_30 { pt3dadd( -12.7998, 132.843, -7.90469, 0.29 ) }
    dend_30 { pt3dadd( -16.241, 141.164, -14.2254, 0.29 ) }
    dend_30 { pt3dadd( -17.8461, 151.143, -18.7309, 0.29 ) }
    dend_30 { pt3dadd( -19.6202, 161.453, -22.3722, 0.29 ) }
    dend_30 { pt3dadd( -20.3042, 171.178, -27.5944, 0.29 ) }
    dend_30 { pt3dadd( -21.3959, 181.804, -30.5749, 0.29 ) }
    dend_30 { pt3dadd( -23.2708, 192.477, -32.9174, 0.29 ) }
    dend_30 { pt3dadd( -24.5612, 203.17, -35.5658, 0.29 ) }
    dend_30 { pt3dadd( -24.2844, 213.648, -39.1854, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_8 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.6142, -149.273, -4.42167, 0.37 ) }
    dend_22 { pt3dadd( -17.5267, -150.234, -5.117, 0.37 ) }
    dend_22 { pt3dadd( -17.7078, -151.425, -6.25717, 0.37 ) }
    dend_22 { pt3dadd( -18.0429, -152.652, -7.46204, 0.74 ) }
    dend_22 { pt3dadd( -18.2424, -153.352, -8.35821, 0.37 ) }
    dend_22 { pt3dadd( -18.3838, -153.862, -9.05663, 1.03 ) }
    dend_22 { pt3dadd( -18.4655, -154.16, -9.46883, 1.18 ) }
    dend_22 { pt3dadd( -19.109, -156.153, -12.3663, 0.29 ) }
    dend_22 { pt3dadd( -19.2577, -156.584, -13.0152, 0.29 ) }
    dend_22 { pt3dadd( -20.0869, -159.394, -17.1431, 0.29 ) }
    dend_22 { pt3dadd( -20.2849, -160.169, -18.2697, 0.29 ) }
    dend_22 { pt3dadd( -20.4136, -160.881, -19.2224, 1.25 ) }
    dend_22 { pt3dadd( -20.4344, -161.102, -19.48, 1.47 ) }
    dend_22 { pt3dadd( -20.4301, -161.304, -19.6617, 1.47 ) }
    dend_22 { pt3dadd( -20.3394, -163.112, -20.9118, 0.22 ) }
    dend_22 { pt3dadd( -20.3211, -163.456, -21.0406, 0.66 ) }
    dend_22 { pt3dadd( -20.1832, -165.403, -21.6546, 0.22 ) }
    dend_22 { pt3dadd( -20.1118, -166.145, -21.8439, 0.59 ) }
    dend_22 { pt3dadd( -20.0794, -166.44, -21.9135, 0.59 ) }
    dend_22 { pt3dadd( -19.8686, -167.989, -22.2385, 0.22 ) }
    dend_22 { pt3dadd( -19.8686, -167.989, -22.2385, 0.37 ) }
    dend_22 { pt3dadd( -19.8545, -168.069, -22.2614, 0.37 ) }
    dend_22 { pt3dadd( -19.5107, -170.134, -22.935, 0.22 ) }
    dend_22 { pt3dadd( -19.3098, -171.352, -23.3637, 0.96 ) }
    dend_22 { pt3dadd( -19.2064, -171.978, -23.5905, 1.47 ) }
    dend_22 { pt3dadd( -18.837, -174.177, -24.3964, 0.22 ) }
    dend_22 { pt3dadd( -18.7476, -174.854, -24.6581, 0.37 ) }
    dend_22 { pt3dadd( -18.7404, -174.928, -24.6883, 0.37 ) }
    dend_22 { pt3dadd( -18.6787, -176.207, -25.2403, 0.22 ) }
    dend_22 { pt3dadd( -18.6707, -176.71, -25.4493, 0.74 ) }
    dend_22 { pt3dadd( -18.6753, -177.18, -25.6464, 0.81 ) }
    dend_22 { pt3dadd( -18.6946, -178.793, -26.274, 0.15 ) }
    dend_22 { pt3dadd( -18.6937, -179.18, -26.4365, 0.59 ) }
    dend_22 { pt3dadd( -18.692, -179.289, -26.4839, 0.74 ) }
    dend_22 { pt3dadd( -18.6846, -179.463, -26.5618, 0.74 ) }
    dend_22 { pt3dadd( -18.5962, -180.609, -27.0249, 0.22 ) }
    dend_22 { pt3dadd( -18.5165, -181.425, -27.3027, 0.88 ) }
    dend_22 { pt3dadd( -18.5034, -181.516, -27.3259, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_22 { pt3dadd( -18.4942, -181.598, -27.3458, 1.18 ) }
    dend_22 { pt3dadd( -18.4657, -181.918, -27.4238, 1.18 ) }
    dend_22 { pt3dadd( -18.3203, -183.858, -27.8819, 0.22 ) }
    dend_22 { pt3dadd( -18.2882, -184.301, -27.9805, 1.11 ) }
    dend_22 { pt3dadd( -18.2506, -185.102, -28.2053, 1.18 ) }
    dend_22 { pt3dadd( -18.1908, -186.763, -28.7193, 0.22 ) }
    dend_22 { pt3dadd( -18.1592, -188.29, -29.2465, 0.22 ) }
    dend_22 { pt3dadd( -18.1588, -188.527, -29.3348, 0.66 ) }
    dend_22 { pt3dadd( -18.1654, -188.932, -29.4981, 0.88 ) }
    dend_22 { pt3dadd( -18.2479, -190.95, -30.3371, 0.22 ) }
    dend_22 { pt3dadd( -18.3045, -191.763, -30.6546, 0.22 ) }
    dend_22 { pt3dadd( -18.4027, -192.801, -31.0293, 1.18 ) }
    dend_22 { pt3dadd( -18.467, -193.335, -31.2014, 1.4 ) }
    dend_22 { pt3dadd( -18.4775, -193.415, -31.2244, 1.4 ) }
    dend_22 { pt3dadd( -18.766, -195.268, -31.6564, 0.22 ) }
    dend_22 { pt3dadd( -19.034, -196.879, -31.9142, 0.22 ) }
    dend_22 { pt3dadd( -19.1283, -197.393, -31.9843, 0.66 ) }
    dend_22 { pt3dadd( -19.2637, -198.097, -32.0643, 0.96 ) }
    dend_22 { pt3dadd( -19.3645, -198.599, -32.1253, 0.96 ) }
    dend_22 { pt3dadd( -19.7717, -200.57, -32.3637, 0.15 ) }
    dend_22 { pt3dadd( -20.0317, -201.79, -32.5048, 0.15 ) }
    dend_22 { pt3dadd( -20.194, -202.511, -32.6191, 0.15 ) }
    dend_22 { pt3dadd( -20.209, -202.579, -32.6302, 0.15 ) }
    dend_22 { pt3dadd( -20.3326, -203.149, -32.7344, 0.96 ) }
    dend_22 { pt3dadd( -20.4077, -203.591, -32.8085, 1.11 ) }
    dend_22 { pt3dadd( -20.4128, -203.66, -32.8145, 1.11 ) }
    dend_22 { pt3dadd( -20.4565, -205.529, -32.8825, 0.22 ) }
    dend_22 { pt3dadd( -20.4338, -207.026, -32.8746, 0.22 ) }
    dend_22 { pt3dadd( -20.4067, -207.616, -32.8494, 0.96 ) }
    dend_22 { pt3dadd( -20.2976, -209.007, -32.7335, 0.15 ) }
    dend_22 { pt3dadd( -20.0673, -210.677, -32.4539, 0.15 ) }
    dend_22 { pt3dadd( -20.0203, -210.922, -32.3928, 1.03 ) }
    dend_22 { pt3dadd( -20.0038, -210.985, -32.3698, 1.03 ) }
    dend_22 { pt3dadd( -19.8785, -211.427, -32.1862, 1.03 ) }
    dend_22 { pt3dadd( -19.8591, -211.502, -32.1541, 1.03 ) }
    dend_22 { pt3dadd( -19.3485, -213.668, -31.218, 0.15 ) }
    dend_22 { pt3dadd( -19.3346, -213.734, -31.1905, 0.15 ) }
    dend_22 { pt3dadd( -19.2091, -214.354, -30.94, 0.15 ) }
    dend_22 { pt3dadd( -19.1395, -214.754, -30.7923, 0.96 ) }
    dend_22 { pt3dadd( -19.0468, -215.392, -30.5806, 1.11 ) }
    dend_22 { pt3dadd( -18.7367, -217.696, -29.8635, 0.15 ) }
    dend_22 { pt3dadd( -18.67, -218.28, -29.7073, 0.88 ) }
    dend_22 { pt3dadd( -18.6187, -218.687, -29.5963, 1.18 ) }
    dend_22 { pt3dadd( -18.4176, -220.105, -29.1965, 0.15 ) }
    dend_22 { pt3dadd( -18.3089, -220.868, -28.9807, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 45/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.6142, -149.273, -4.42167, 1.4 ) }
    dend_9 { pt3dadd( -17.7811, -150.429, -3.76304, 1.4 ) }
    dend_9 { pt3dadd( -18.2066, -153.381, -2.4703, 0.44 ) }
    dend_9 { pt3dadd( -18.4574, -155.126, -1.86711, 0.29 ) }
    dend_9 { pt3dadd( -18.7228, -156.865, -1.421, 0.29 ) }
    dend_9 { pt3dadd( -18.8798, -157.843, -1.23225, 0.81 ) }
    dend_9 { pt3dadd( -19.1541, -159.593, -1.01833, 1.4 ) }
    dend_9 { pt3dadd( -19.3452, -160.725, -1.04196, 1.99 ) }
    dend_9 { pt3dadd( -19.4957, -161.434, -1.23585, 2.28 ) }
    dend_9 { pt3dadd( -19.7197, -162.442, -1.62798, 2.43 ) }
    dend_9 { pt3dadd( -19.8987, -163.203, -1.9661, 2.43 ) }
    dend_9 { pt3dadd( -20.2985, -164.885, -2.6866, 1.03 ) }
    dend_9 { pt3dadd( -20.5281, -165.929, -3.08269, 0.66 ) }
    dend_9 { pt3dadd( -21.1204, -168.874, -4.05082, 0.29 ) }
    dend_9 { pt3dadd( -21.3048, -169.998, -4.35213, 0.37 ) }
    dend_9 { pt3dadd( -21.4728, -171.542, -4.66453, 0.37 ) }
    dend_9 { pt3dadd( -21.535, -172.755, -4.81211, 0.66 ) }
    dend_9 { pt3dadd( -21.4825, -174.085, -4.79938, 0.96 ) }
    dend_9 { pt3dadd( -21.4068, -174.637, -4.72755, 1.18 ) }
    dend_9 { pt3dadd( -21.1534, -175.732, -4.46448, 0.44 ) }
    dend_9 { pt3dadd( -20.82, -177.034, -4.16372, 0.29 ) }
    dend_9 { pt3dadd( -20.5149, -178.204, -3.92065, 1.25 ) }
    dend_9 { pt3dadd( -20.1719, -179.745, -3.67745, 1.62 ) }
    dend_9 { pt3dadd( -20.0382, -180.57, -3.57895, 1.84 ) }
    dend_9 { pt3dadd( -19.9649, -181.508, -3.48692, 1.62 ) }
    dend_9 { pt3dadd( -20.0442, -182.887, -3.41904, 0.81 ) }
    dend_9 { pt3dadd( -20.2798, -184.032, -3.43154, 0.29 ) }
    dend_9 { pt3dadd( -20.6082, -184.957, -3.51017, 0.29 ) }
    dend_9 { pt3dadd( -21.0645, -185.859, -3.62038, 0.29 ) }
    dend_9 { pt3dadd( -21.5776, -186.688, -3.72868, 0.29 ) }
    dend_9 { pt3dadd( -22.1947, -187.586, -3.84203, 0.96 ) }
    dend_9 { pt3dadd( -22.451, -187.971, -3.88561, 1.11 ) }
    dend_9 { pt3dadd( -22.7043, -188.434, -3.94019, 1.11 ) }
    dend_9 { pt3dadd( -22.7962, -188.731, -3.97479, 1.11 ) }
    dend_9 { pt3dadd( -22.8759, -189.897, -4.05812, 0.29 ) }
    dend_9 { pt3dadd( -22.7966, -190.785, -4.1042, 0.44 ) }
    dend_9 { pt3dadd( -22.6561, -191.613, -4.12261, 0.59 ) }
    dend_9 { pt3dadd( -22.5303, -192.312, -4.12942, 0.59 ) }
    dend_9 { pt3dadd( -22.3725, -193.232, -4.12708, 0.52 ) }
    dend_9 { pt3dadd( -22.1367, -194.737, -4.07703, 0.52 ) }
    dend_9 { pt3dadd( -22.0179, -195.484, -4.03655, 0.88 ) }
    dend_9 { pt3dadd( -21.8732, -196.696, -3.96055, 0.88 ) }
    dend_9 { pt3dadd( -21.753, -197.912, -3.8691, 1.25 ) }
    dend_9 { pt3dadd( -21.6461, -199.275, -3.75745, 1.69 ) }
    dend_9 { pt3dadd( -21.5681, -200.447, -3.66227, 1.84 ) }
    dend_9 { pt3dadd( -21.4986, -201.704, -3.57161, 1.84 ) }
    dend_9 { pt3dadd( -21.4116, -203.301, -3.46196, 1.77 ) }
    dend_9 { pt3dadd( -21.3608, -204.553, -3.38224, 1.77 ) }
    dend_9 { pt3dadd( -21.3535, -205.086, -3.3509, 2.06 ) }
    dend_9 { pt3dadd( -21.4089, -206.253, -3.27642, 2.06 ) }
    dend_9 { pt3dadd( -21.6464, -208.032, -3.15613, 1.25 ) }
    dend_9 { pt3dadd( -22.0179, -209.533, -3.04457, 0.66 ) }
    dend_9 { pt3dadd( -22.6022, -211.171, -2.91563, 0.59 ) }
    dend_9 { pt3dadd( -23.0834, -212.173, -2.84545, 0.66 ) }
    dend_9 { pt3dadd( -23.7565, -213.388, -2.77406, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_9 { pt3dadd( -24.3049, -214.285, -2.73801, 0.52 ) }
    dend_9 { pt3dadd( -25.0721, -215.495, -2.7242, 0.52 ) }
    dend_9 { pt3dadd( -25.3658, -215.981, -2.73712, 0.66 ) }
    dend_9 { pt3dadd( -25.9166, -217.158, -2.83339, 0.59 ) }
    dend_9 { pt3dadd( -26.1447, -218.189, -2.97814, 0.59 ) }
    dend_9 { pt3dadd( -26.1298, -219.137, -3.14601, 0.66 ) }
    dend_9 { pt3dadd( -26.0313, -219.939, -3.28089, 0.66 ) }
    dend_9 { pt3dadd( -25.9019, -220.749, -3.42003, 0.74 ) }
    dend_9 { pt3dadd( -25.7918, -221.62, -3.56434, 0.29 ) }
    dend_9 { pt3dadd( -25.7232, -222.683, -3.74493, 0.96 ) }
    dend_9 { pt3dadd( -25.7516, -223.709, -3.92753, 1.69 ) }
    dend_9 { pt3dadd( -25.915, -225.025, -4.17716, 1.69 ) }
    dend_9 { pt3dadd( -26.1832, -226.304, -4.42189, 2.06 ) }
    dend_9 { pt3dadd( -26.4132, -227.162, -4.56435, 2.14 ) }
    dend_9 { pt3dadd( -26.7963, -228.438, -4.67073, 1.77 ) }
    dend_9 { pt3dadd( -26.8203, -228.52, -4.67132, 1.77 ) }
    dend_9 { pt3dadd( -27.1119, -229.623, -4.59993, 1.25 ) }
    dend_9 { pt3dadd( -27.2775, -230.414, -4.49081, 0.81 ) }
    dend_9 { pt3dadd( -27.4944, -231.938, -4.09424, 0.29 ) }
    dend_9 { pt3dadd( -27.5624, -233.548, -3.58303, 0.74 ) }
    dend_9 { pt3dadd( -27.5235, -234.236, -3.32917, 0.96 ) }
    dend_9 { pt3dadd( -27.4625, -234.667, -3.17061, 1.11 ) }
    dend_9 { pt3dadd( -27.3139, -235.341, -2.92356, 1.11 ) }
    dend_9 { pt3dadd( -26.9283, -236.79, -2.59782, 0.37 ) }
    dend_9 { pt3dadd( -26.5974, -238.08, -2.5332, 0.29 ) }
    dend_9 { pt3dadd( -26.4411, -238.836, -2.60652, 0.29 ) }
    dend_9 { pt3dadd( -26.3379, -239.67, -2.76715, 0.29 ) }
    dend_9 { pt3dadd( -26.2963, -240.387, -2.93974, 0.96 ) }
    dend_9 { pt3dadd( -26.2978, -242.421, -3.55922, 1.4 ) }
    dend_9 { pt3dadd( -26.3607, -243.571, -3.98802, 1.69 ) }
    dend_9 { pt3dadd( -26.4448, -244.402, -4.30015, 1.62 ) }
    dend_9 { pt3dadd( -26.6648, -246.073, -4.90802, 1.25 ) }
    dend_9 { pt3dadd( -26.9251, -247.898, -5.57788, 0.96 ) }
    dend_9 { pt3dadd( -27.2453, -250.091, -6.34742, 0.96 ) }
    dend_9 { pt3dadd( -27.55, -251.989, -6.9536, 0.81 ) }
    dend_9 { pt3dadd( -27.7022, -252.971, -7.25424, 0.96 ) }
    dend_9 { pt3dadd( -27.8185, -253.764, -7.47365, 0.96 ) }
    dend_9 { pt3dadd( -27.9747, -254.978, -7.75857, 0.81 ) }
    dend_9 { pt3dadd( -28.0958, -256.128, -7.98736, 0.59 ) }
    dend_9 { pt3dadd( -28.145, -257.397, -8.1482, 0.59 ) }
    dend_9 { pt3dadd( -28.0495, -258.626, -8.22727, 0.66 ) }
    dend_9 { pt3dadd( -27.8926, -259.454, -8.27264, 1.25 ) }
    dend_9 { pt3dadd( -27.7056, -260.051, -8.29892, 1.25 ) }
    dend_9 { pt3dadd( -27.452, -260.61, -8.33874, 1.25 ) }
    dend_9 { pt3dadd( -26.8463, -261.622, -8.52295, 0.81 ) }
    dend_9 { pt3dadd( -25.9665, -262.99, -8.88042, 0.44 ) }
    dend_9 { pt3dadd( -25.6398, -263.554, -9.0638, 0.66 ) }
    dend_9 { pt3dadd( -25.2372, -264.377, -9.35679, 0.66 ) }
    dend_9 { pt3dadd( -24.8265, -265.637, -9.79514, 0.52 ) }
    dend_9 { pt3dadd( -24.6554, -266.937, -10.2001, 0.37 ) }
    dend_9 { pt3dadd( -24.766, -268.18, -10.5071, 0.37 ) }
    dend_9 { pt3dadd( -25.0619, -269.351, -10.7283, 0.37 ) }
    dend_9 { pt3dadd( -25.3253, -270.143, -10.8194, 0.81 ) }
    dend_9 { pt3dadd( -25.8626, -271.538, -10.8915, 0.81 ) }
    dend_9 { pt3dadd( -26.2637, -272.541, -10.8769, 1.47 ) }
    dend_9 { pt3dadd( -26.6932, -273.638, -10.8243, 2.14 ) }
    dend_9 { pt3dadd( -26.8974, -274.211, -10.8106, 2.36 ) }
    dend_9 { pt3dadd( -27.2076, -275.173, -10.8186, 1.99 ) }
    dend_9 { pt3dadd( -27.5106, -276.231, -10.8509, 1.18 ) }
    dend_9 { pt3dadd( -27.8686, -277.792, -10.948, 0.37 ) }
    dend_9 { pt3dadd( -28.1223, -279.108, -11.0608, 0.37 ) }
    dend_9 { pt3dadd( -28.2747, -280.279, -11.2186, 0.29 ) }
    dend_9 { pt3dadd( -28.3161, -281.526, -11.4643, 0.81 ) }
    dend_9 { pt3dadd( -28.1908, -282.513, -11.7443, 1.33 ) }
    dend_9 { pt3dadd( -28.0084, -283.156, -11.9777, 1.33 ) }
    dend_9 { pt3dadd( -27.977, -283.234, -12.0103, 1.33 ) }
    dend_9 { pt3dadd( -27.3924, -284.525, -12.5546, 0.88 ) }
    dend_9 { pt3dadd( -26.7135, -286.008, -13.1401, 0.44 ) }
    dend_9 { pt3dadd( -26.0198, -287.71, -13.7538, 0.37 ) }
    dend_9 { pt3dadd( -25.7212, -288.609, -14.0191, 0.29 ) }
    dend_9 { pt3dadd( -25.4326, -289.955, -14.2954, 1.33 ) }
    dend_9 { pt3dadd( -25.34, -290.982, -14.4326, 1.99 ) }
    dend_9 { pt3dadd( -25.3402, -291.791, -14.4831, 1.92 ) }
    dend_9 { pt3dadd( -25.3923, -292.934, -14.5149, 1.25 ) }
    dend_9 { pt3dadd( -25.4809, -294.43, -14.5087, 0.44 ) }
    dend_9 { pt3dadd( -25.5439, -296.293, -14.4859, 0.29 ) }
    dend_9 { pt3dadd( -25.5393, -297.922, -14.4699, 0.29 ) }
    dend_9 { pt3dadd( -25.4832, -299.447, -14.4677, 0.29 ) }
    dend_9 { pt3dadd( -25.381, -300.857, -14.4707, 0.44 ) }
    dend_9 { pt3dadd( -25.2913, -301.738, -14.4542, 0.81 ) }
    dend_9 { pt3dadd( -25.1957, -302.581, -14.3737, 1.03 ) }
    dend_9 { pt3dadd( -25.0985, -303.418, -14.2151, 1.03 ) }
    dend_9 { pt3dadd( -25.0359, -304.533, -13.8878, 0.88 ) }
    dend_9 { pt3dadd( -25.1177, -305.824, -13.3423, 0.52 ) }
    dend_9 { pt3dadd( -25.3241, -307.145, -12.6723, 0.37 ) }
    dend_9 { pt3dadd( -25.6648, -308.792, -11.7096, 0.81 ) }
    dend_9 { pt3dadd( -25.8054, -309.372, -11.3329, 0.81 ) }
    dend_9 { pt3dadd( -25.9661, -309.95, -10.9426, 0.81 ) }
    dend_9 { pt3dadd( -26.3533, -311.181, -10.1049, 0.22 ) }
    dend_9 { pt3dadd( -26.6911, -312.12, -9.49829, 0.22 ) }
    dend_9 { pt3dadd( -27.1438, -313.391, -8.84146, 0.96 ) }
    dend_9 { pt3dadd( -27.3083, -313.909, -8.66001, 1.33 ) }
    dend_9 { pt3dadd( -27.559, -314.832, -8.42625, 1.99 ) }
    dend_9 { pt3dadd( -27.7347, -315.554, -8.30606, 2.14 ) }
    dend_9 { pt3dadd( -27.8586, -316.071, -8.2681, 2.14 ) }
    dend_9 { pt3dadd( -28.155, -317.272, -8.22067, 1.47 ) }
    dend_9 { pt3dadd( -28.4878, -318.597, -8.24131, 0.66 ) }
    dend_9 { pt3dadd( -28.8056, -319.896, -8.26771, 0.52 ) }
    dend_9 { pt3dadd( -28.9067, -320.351, -8.28, 1.11 ) }
    dend_9 { pt3dadd( -29.0164, -320.938, -8.30382, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 0/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 37.4505, 55.4535, 43.5917, 0.22 ) }
    dend_33 { pt3dadd( 36.2762, 54.3298, 43.7213, 0.22 ) }
    dend_33 { pt3dadd( 35.3087, 53.4039, 43.8281, 0.22 ) }
    dend_33 { pt3dadd( 27.8025, 42.4424, 44.9971, 0.22 ) }
    dend_33 { pt3dadd( 20.3804, 31.5218, 46.8973, 0.22 ) }
    dend_33 { pt3dadd( 12.0743, 21.8092, 50.6204, 0.22 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 6/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 37.4505, 55.4535, 43.5917, 0.29 ) }
    dend_32 { pt3dadd( 37.8312, 56.5463, 44.0136, 0.29 ) }
    dend_32 { pt3dadd( 38.1497, 57.4604, 44.3665, 0.37 ) }
    dend_32 { pt3dadd( 38.4071, 58.1992, 44.6517, 0.37 ) }
    dend_32 { pt3dadd( 42.6029, 66.7858, 48.5851, 0.37 ) }
    dend_32 { pt3dadd( 45.5013, 76.1577, 51.9488, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 12/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -29.0164, -320.938, -8.30382, 0.66 ) }
    dend_11 { pt3dadd( -29.5946, -321.32, -8.56094, 0.66 ) }
    dend_11 { pt3dadd( -30.2614, -321.729, -8.89931, 0.22 ) }
    dend_11 { pt3dadd( -30.6369, -321.959, -9.11257, 0.88 ) }
    dend_11 { pt3dadd( -30.8412, -322.101, -9.23577, 1.33 ) }
    dend_11 { pt3dadd( -31.0927, -322.305, -9.3951, 1.4 ) }
    dend_11 { pt3dadd( -32.3506, -323.504, -10.2297, 0.44 ) }
    dend_11 { pt3dadd( -32.5718, -323.758, -10.4067, 0.59 ) }
    dend_11 { pt3dadd( -32.9262, -324.266, -10.7247, 0.29 ) }
    dend_11 { pt3dadd( -33.2131, -324.786, -11.017, 0.29 ) }
    dend_11 { pt3dadd( -33.4256, -325.298, -11.2518, 0.29 ) }
    dend_11 { pt3dadd( -33.5665, -325.835, -11.4106, 0.74 ) }
    dend_11 { pt3dadd( -33.618, -326.272, -11.4494, 1.11 ) }
    dend_11 { pt3dadd( -33.6304, -326.589, -11.4641, 1.11 ) }
    dend_11 { pt3dadd( -33.6365, -326.887, -11.4681, 1.11 ) }
    dend_11 { pt3dadd( -33.67, -327.411, -11.5114, 0.66 ) }
    dend_11 { pt3dadd( -33.7287, -327.994, -11.5924, 0.29 ) }
    dend_11 { pt3dadd( -33.8593, -328.829, -11.7605, 0.22 ) }
    dend_11 { pt3dadd( -34.112, -329.811, -12.0376, 0.22 ) }
    dend_11 { pt3dadd( -34.2796, -330.194, -12.1786, 1.62 ) }
    dend_11 { pt3dadd( -34.8569, -331.089, -12.5824, 1.69 ) }
    dend_11 { pt3dadd( -35.0236, -331.272, -12.6848, 1.55 ) }
    dend_11 { pt3dadd( -35.5302, -331.69, -12.9644, 0.74 ) }
    dend_11 { pt3dadd( -36.2139, -332.12, -13.2915, 0.37 ) }
    dend_11 { pt3dadd( -37.0415, -332.539, -13.5746, 0.29 ) }
    dend_11 { pt3dadd( -37.318, -332.669, -13.631, 1.03 ) }
    dend_11 { pt3dadd( -37.8263, -332.904, -13.6498, 1.25 ) }
    dend_11 { pt3dadd( -37.9814, -332.973, -13.6385, 1.4 ) }
    dend_11 { pt3dadd( -38.2786, -333.102, -13.5778, 1.4 ) }
    dend_11 { pt3dadd( -39.0189, -333.437, -13.3339, 0.66 ) }
    dend_11 { pt3dadd( -39.4716, -333.657, -13.1432, 0.66 ) }
    dend_11 { pt3dadd( -40.0541, -333.95, -12.8703, 0.59 ) }
    dend_11 { pt3dadd( -40.4875, -334.167, -12.6432, 0.74 ) }
    dend_11 { pt3dadd( -40.7492, -334.299, -12.5049, 1.11 ) }
    dend_11 { pt3dadd( -40.7492, -334.299, -12.5049, 1.4 ) }
    dend_11 { pt3dadd( -40.979, -334.413, -12.3997, 1.55 ) }
    dend_11 { pt3dadd( -41.1164, -334.477, -12.3456, 1.77 ) }
    dend_11 { pt3dadd( -41.3167, -334.56, -12.287, 1.92 ) }
    dend_11 { pt3dadd( -41.5634, -334.661, -12.2187, 1.92 ) }
    dend_11 { pt3dadd( -41.8938, -334.796, -12.1208, 1.62 ) }
    dend_11 { pt3dadd( -41.9353, -334.813, -12.1081, 1.62 ) }
    dend_11 { pt3dadd( -42.8245, -335.186, -11.9304, 0.44 ) }
    dend_11 { pt3dadd( -43.3713, -335.442, -11.8755, 0.44 ) }
    dend_11 { pt3dadd( -43.7618, -335.648, -11.8634, 0.88 ) }
    dend_11 { pt3dadd( -44.0307, -335.83, -11.8831, 0.88 ) }
    dend_11 { pt3dadd( -44.3605, -336.106, -11.9367, 0.88 ) }
    dend_11 { pt3dadd( -45.2383, -337.006, -12.1586, 0.29 ) }
    dend_11 { pt3dadd( -45.6134, -337.546, -12.2717, 1.62 ) }
    dend_11 { pt3dadd( -45.7556, -337.782, -12.327, 1.62 ) }
    dend_11 { pt3dadd( -46.2801, -338.779, -12.579, 0.29 ) }
    dend_11 { pt3dadd( -46.4775, -339.237, -12.6851, 1.03 ) }
    dend_11 { pt3dadd( -46.5731, -339.55, -12.739, 1.03 ) }
    dend_11 { pt3dadd( -46.7339, -340.869, -12.7351, 0.44 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 65/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -29.0164, -320.938, -8.30382, 0.22 ) }
    dend_10 { pt3dadd( -28.769, -321.957, -7.79287, 0.22 ) }
    dend_10 { pt3dadd( -28.5357, -322.83, -7.41005, 0.22 ) }
    dend_10 { pt3dadd( -28.2165, -323.943, -6.97833, 1.03 ) }
    dend_10 { pt3dadd( -28.0807, -324.395, -6.84131, 1.03 ) }
    dend_10 { pt3dadd( -27.7427, -325.501, -6.57278, 0.22 ) }
    dend_10 { pt3dadd( -27.5536, -326.123, -6.44367, 0.88 ) }
    dend_10 { pt3dadd( -27.3805, -326.681, -6.35572, 1.03 ) }
    dend_10 { pt3dadd( -27.2201, -327.165, -6.30921, 1.18 ) }
    dend_10 { pt3dadd( -26.6558, -328.818, -6.26089, 0.22 ) }
    dend_10 { pt3dadd( -26.3485, -329.712, -6.24915, 0.22 ) }
    dend_10 { pt3dadd( -26.1708, -330.194, -6.25491, 0.52 ) }
    dend_10 { pt3dadd( -26.0577, -330.469, -6.25361, 0.52 ) }
    dend_10 { pt3dadd( -25.6703, -331.381, -6.25062, 0.22 ) }
    dend_10 { pt3dadd( -25.6141, -331.504, -6.2506, 0.22 ) }
    dend_10 { pt3dadd( -25.4693, -331.76, -6.25304, 1.11 ) }
    dend_10 { pt3dadd( -25.1951, -332.165, -6.25444, 1.25 ) }
    dend_10 { pt3dadd( -24.5622, -332.982, -6.26005, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 83/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -46.7339, -340.869, -12.7351, 0.29 ) }
    dend_13 { pt3dadd( -46.8649, -341.636, -12.9193, 0.29 ) }
    dend_13 { pt3dadd( -46.9707, -342.348, -13.0742, 0.22 ) }
    dend_13 { pt3dadd( -47.1261, -343.375, -13.2615, 0.22 ) }
    dend_13 { pt3dadd( -47.2162, -343.83, -13.3286, 0.74 ) }
    dend_13 { pt3dadd( -47.2782, -344.087, -13.3584, 0.88 ) }
    dend_13 { pt3dadd( -47.3615, -344.394, -13.3859, 1.11 ) }
    dend_13 { pt3dadd( -47.4872, -344.761, -13.3997, 1.11 ) }
    dend_13 { pt3dadd( -47.7597, -345.505, -13.3962, 0.22 ) }
    dend_13 { pt3dadd( -48.0036, -346.076, -13.3548, 0.22 ) }
    dend_13 { pt3dadd( -48.2308, -346.533, -13.3301, 0.96 ) }
    dend_13 { pt3dadd( -48.4837, -347.02, -13.3104, 1.47 ) }
    dend_13 { pt3dadd( -48.6611, -347.399, -13.3115, 1.62 ) }
    dend_13 { pt3dadd( -48.685, -347.449, -13.317, 1.62 ) }
    dend_13 { pt3dadd( -48.9077, -347.888, -13.4515, 1.62 ) }
    dend_13 { pt3dadd( -49.473, -348.897, -13.8799, 0.29 ) }
    dend_13 { pt3dadd( -49.9612, -349.681, -14.3019, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -50.6077, -350.614, -14.9176, 0.29 ) }
    dend_13 { pt3dadd( -51.2392, -351.468, -15.5345, 0.81 ) }
    dend_13 { pt3dadd( -52.1813, -352.675, -16.5456, 0.29 ) }
    dend_13 { pt3dadd( -52.5592, -353.118, -16.9581, 0.29 ) }
    dend_13 { pt3dadd( -53.0177, -353.634, -17.5026, 0.29 ) }
    dend_13 { pt3dadd( -53.5899, -354.27, -18.2143, 1.11 ) }
    dend_13 { pt3dadd( -53.9314, -354.665, -18.6524, 1.18 ) }
    dend_13 { pt3dadd( -54.9625, -356.004, -20.0301, 0.59 ) }
    dend_13 { pt3dadd( -55.3185, -356.483, -20.5187, 0.59 ) }
    dend_13 { pt3dadd( -56.1192, -357.518, -21.5743, 0.96 ) }
    dend_13 { pt3dadd( -56.5075, -357.997, -22.0357, 1.4 ) }
    dend_13 { pt3dadd( -57.0691, -358.678, -22.6411, 1.4 ) }
    dend_13 { pt3dadd( -57.5258, -359.216, -23.0827, 0.88 ) }
    dend_13 { pt3dadd( -58.2639, -360.075, -23.6359, 0.37 ) }
    dend_13 { pt3dadd( -58.942, -360.841, -24.0351, 0.37 ) }
    dend_13 { pt3dadd( -59.4414, -361.388, -24.2214, 0.81 ) }
    dend_13 { pt3dadd( -59.7974, -361.801, -24.3164, 1.47 ) }
    dend_13 { pt3dadd( -60.0252, -362.075, -24.3758, 1.62 ) }
    dend_13 { pt3dadd( -60.8386, -363.116, -24.6277, 0.37 ) }
    dend_13 { pt3dadd( -61.4263, -363.875, -24.867, 0.37 ) }
    dend_13 { pt3dadd( -61.8507, -364.339, -25.0832, 0.37 ) }
    dend_13 { pt3dadd( -62.2718, -364.722, -25.3052, 0.88 ) }
    dend_13 { pt3dadd( -63.4336, -365.7, -25.9169, 0.44 ) }
    dend_13 { pt3dadd( -63.7295, -365.943, -26.0734, 0.96 ) }
    dend_13 { pt3dadd( -64.4521, -366.521, -26.4644, 0.29 ) }
    dend_13 { pt3dadd( -65.2565, -367.218, -26.901, 0.29 ) }
    dend_13 { pt3dadd( -65.7605, -367.694, -27.1401, 0.29 ) }
    dend_13 { pt3dadd( -66.3184, -368.29, -27.3153, 0.88 ) }
    dend_13 { pt3dadd( -66.5781, -368.631, -27.3408, 1.25 ) }
    dend_13 { pt3dadd( -66.7828, -368.935, -27.3414, 1.03 ) }
    dend_13 { pt3dadd( -67.2026, -369.645, -27.3, 0.29 ) }
    dend_13 { pt3dadd( -67.5296, -370.214, -27.2586, 0.29 ) }
    dend_13 { pt3dadd( -68.243, -371.243, -27.1724, 0.29 ) }
    dend_13 { pt3dadd( -68.5031, -371.577, -27.136, 0.81 ) }
    dend_13 { pt3dadd( -68.5943, -371.697, -27.1216, 1.18 ) }
    dend_13 { pt3dadd( -68.8885, -372.09, -27.0808, 1.4 ) }
    dend_13 { pt3dadd( -69.2159, -372.528, -27.0485, 1.03 ) }
    dend_13 { pt3dadd( -69.7017, -373.2, -27.0196, 0.52 ) }
    dend_13 { pt3dadd( -70.0812, -373.772, -27.0149, 0.37 ) }
    dend_13 { pt3dadd( -70.4813, -374.352, -26.9841, 0.74 ) }
    dend_13 { pt3dadd( -71.0596, -375.157, -26.8914, 0.29 ) }
    dend_13 { pt3dadd( -71.1366, -375.267, -26.869, 0.59 ) }
    dend_13 { pt3dadd( -71.172, -375.318, -26.8539, 0.59 ) }
    dend_13 { pt3dadd( -71.3544, -375.568, -26.7643, 0.59 ) }
    dend_13 { pt3dadd( -71.8758, -376.251, -26.4906, 0.29 ) }
    dend_13 { pt3dadd( -72.2079, -376.732, -26.2965, 0.29 ) }
    dend_13 { pt3dadd( -72.4978, -377.296, -26.0967, 0.74 ) }
    dend_13 { pt3dadd( -72.6594, -377.658, -25.9916, 1.11 ) }
    dend_13 { pt3dadd( -72.8481, -378.135, -25.88, 1.33 ) }
    dend_13 { pt3dadd( -73.0086, -378.573, -25.834, 1.33 ) }
    dend_13 { pt3dadd( -73.3005, -379.454, -25.8015, 0.29 ) }
    dend_13 { pt3dadd( -73.5362, -380.215, -25.7985, 0.29 ) }
    dend_13 { pt3dadd( -73.7048, -380.765, -25.8217, 1.11 ) }
    dend_13 { pt3dadd( -73.8468, -381.255, -25.8547, 1.47 ) }
    dend_13 { pt3dadd( -74.1694, -382.387, -25.9738, 1.62 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -46.7339, -340.869, -12.7351, 0.37 ) }
    dend_12 { pt3dadd( -47.2352, -340.949, -11.4749, 0.37 ) }
    dend_12 { pt3dadd( -47.7077, -341.025, -10.2871, 0.66 ) }
    dend_12 { pt3dadd( -47.9893, -341.07, -9.57914, 0.88 ) }
    dend_12 { pt3dadd( -48.9078, -341.217, -7.27005, 0.29 ) }
    dend_12 { pt3dadd( -49.3277, -341.284, -6.21465, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 61/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -74.1694, -382.387, -25.9738, 0.22 ) }
    dend_21 { pt3dadd( -73.3334, -383.518, -23.8192, 0.22 ) }
    dend_21 { pt3dadd( -72.8237, -384.048, -22.5348, 0.37 ) }
    dend_21 { pt3dadd( -72.247, -384.647, -21.0821, 0.29 ) }
    dend_21 { pt3dadd( -72.2217, -384.673, -21.0183, 0.29 ) }
    dend_21 { pt3dadd( -71.1646, -385.771, -18.3548, 0.66 ) }
    dend_21 { pt3dadd( -70.0841, -386.894, -15.6326, 0.44 ) }
    dend_21 { pt3dadd( -69.3361, -387.495, -13.7255, 3.54 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 69/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -74.1694, -382.387, -25.9738, 0.44 ) }
    dend_14 { pt3dadd( -75.2294, -382.986, -25.698, 0.44 ) }
    dend_14 { pt3dadd( -76.1343, -383.481, -25.4625, 0.29 ) }
    dend_14 { pt3dadd( -76.6971, -383.798, -25.3161, 0.66 ) }
    dend_14 { pt3dadd( -77.278, -384.098, -25.2037, 0.96 ) }
    dend_14 { pt3dadd( -77.4906, -384.217, -25.1684, 1.25 ) }
    dend_14 { pt3dadd( -77.5681, -384.268, -25.1567, 1.25 ) }
    dend_14 { pt3dadd( -77.9497, -384.585, -25.1119, 1.25 ) }
    dend_14 { pt3dadd( -78.4711, -385.116, -25.0465, 0.74 ) }
    dend_14 { pt3dadd( -79.5474, -386.411, -24.8375, 0.29 ) }
    dend_14 { pt3dadd( -80.0473, -387.089, -24.7122, 0.44 ) }
    dend_14 { pt3dadd( -80.5778, -387.846, -24.5719, 0.44 ) }
    dend_14 { pt3dadd( -81.1318, -388.689, -24.4128, 0.52 ) }
    dend_14 { pt3dadd( -81.6534, -389.573, -24.2391, 0.52 ) }
    dend_14 { pt3dadd( -82.2179, -390.684, -23.993, 0.74 ) }
    dend_14 { pt3dadd( -82.4935, -391.394, -23.7985, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -82.4935, -391.394, -23.7985, 0.37 ) }
    dend_20 { pt3dadd( -78.9606, -391.373, -21.8139, 0.37 ) }
    dend_20 { pt3dadd( -77.0696, -391.357, -20.806, 0.52 ) }
    dend_20 { pt3dadd( -75.7019, -391.33, -20.1333, 0.29 ) }
    dend_20 { pt3dadd( -75.632, -391.329, -20.099, 0.29 ) }
    dend_20 { pt3dadd( -74.2309, -391.301, -19.4099, 0.44 ) }
    dend_20 { pt3dadd( -72.6878, -391.27, -18.651, 0.22 ) }
    dend_20 { pt3dadd( -71.7778, -391.221, -18.3173, 0.66 ) }
    dend_20 { pt3dadd( -71.0965, -391.185, -18.0746, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 94/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -82.4935, -391.394, -23.7985, 1.4 ) }
    dend_15 { pt3dadd( -82.5931, -392.927, -22.7813, 1.4 ) }
    dend_15 { pt3dadd( -82.6371, -393.605, -22.3317, 1.62 ) }
    dend_15 { pt3dadd( -82.6893, -394.41, -21.7981, 1.47 ) }
    dend_15 { pt3dadd( -82.7226, -394.922, -21.4583, 1.47 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 99/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -82.7226, -394.922, -21.4583, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_19 { pt3dadd( -85.7351, -396.326, -22.2495, 0.22 ) }
    dend_19 { pt3dadd( -87.4504, -397.092, -22.5879, 0.22 ) }
    dend_19 { pt3dadd( -88.2095, -397.386, -22.7097, 0.22 ) }
    dend_19 { pt3dadd( -88.2771, -397.411, -22.7192, 0.22 ) }
    dend_19 { pt3dadd( -89.3259, -397.729, -22.8835, 0.52 ) }
    dend_19 { pt3dadd( -90.6725, -398.078, -23.0743, 0.59 ) }
    dend_19 { pt3dadd( -91.9776, -398.281, -23.2566, 0.22 ) }
    dend_19 { pt3dadd( -93.3293, -398.439, -23.581, 0.22 ) }
    dend_19 { pt3dadd( -93.3946, -398.446, -23.6036, 0.22 ) }
    dend_19 { pt3dadd( -95.0547, -398.656, -24.2446, 0.22 ) }
    dend_19 { pt3dadd( -96.7694, -398.924, -24.9609, 0.88 ) }
    dend_19 { pt3dadd( -99.3759, -399.425, -26.0987, 0.29 ) }
    dend_19 { pt3dadd( -101.674, -399.953, -27.184, 0.22 ) }
    dend_19 { pt3dadd( -104.154, -400.712, -28.3935, 0.22 ) }
    dend_19 { pt3dadd( -105.56, -401.279, -29.0619, 0.22 ) }
    dend_19 { pt3dadd( -106.256, -401.658, -29.3786, 0.52 ) }
    dend_19 { pt3dadd( -106.304, -401.692, -29.4007, 0.52 ) }
    dend_19 { pt3dadd( -106.613, -401.992, -29.5108, 0.52 ) }
    dend_19 { pt3dadd( -107.698, -403.309, -29.7142, 0.22 ) }
    dend_19 { pt3dadd( -108.58, -404.723, -29.7657, 0.22 ) }
    dend_19 { pt3dadd( -108.855, -405.194, -29.789, 0.29 ) }
    dend_19 { pt3dadd( -109.49, -406.193, -29.8478, 0.29 ) }
    dend_19 { pt3dadd( -109.525, -406.246, -29.8511, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -82.7226, -394.922, -21.4583, 0.29 ) }
    dend_16 { pt3dadd( -83.3043, -395.917, -21.2237, 0.29 ) }
    dend_16 { pt3dadd( -83.6542, -396.561, -21.2, 0.29 ) }
    dend_16 { pt3dadd( -84.1295, -397.531, -21.2509, 0.22 ) }
    dend_16 { pt3dadd( -84.4618, -398.304, -21.3278, 1.4 ) }
    dend_16 { pt3dadd( -84.5802, -398.632, -21.363, 1.69 ) }
    dend_16 { pt3dadd( -84.8154, -399.345, -21.4403, 1.33 ) }
    dend_16 { pt3dadd( -85.2707, -400.956, -21.6341, 0.74 ) }
    dend_16 { pt3dadd( -85.4734, -401.783, -21.7301, 0.66 ) }
    dend_16 { pt3dadd( -85.6028, -402.536, -21.8032, 0.52 ) }
    dend_16 { pt3dadd( -85.725, -403.373, -21.8359, 0.52 ) }
    dend_16 { pt3dadd( -85.8525, -404.212, -21.7957, 0.96 ) }
    dend_16 { pt3dadd( -85.922, -404.595, -21.7287, 1.4 ) }
    dend_16 { pt3dadd( -86.0995, -405.428, -21.44, 1.47 ) }
    dend_16 { pt3dadd( -86.329, -406.302, -21.0605, 0.29 ) }
    dend_16 { pt3dadd( -86.5343, -406.974, -20.7236, 0.29 ) }
    dend_16 { pt3dadd( -86.6374, -407.338, -20.5131, 0.59 ) }
    dend_16 { pt3dadd( -86.6871, -407.557, -20.3758, 0.59 ) }
    dend_16 { pt3dadd( -86.841, -408.332, -19.8773, 0.29 ) }
    dend_16 { pt3dadd( -86.9032, -408.662, -19.664, 0.59 ) }
    dend_16 { pt3dadd( -86.9427, -408.891, -19.5146, 0.59 ) }
    dend_16 { pt3dadd( -87.044, -410.231, -18.7016, 0.29 ) }
    dend_16 { pt3dadd( -87.0478, -410.719, -18.4122, 0.29 ) }
    dend_16 { pt3dadd( -87.045, -410.77, -18.3822, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 47/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -87.045, -410.77, -18.3822, 0.66 ) }
    dend_18 { pt3dadd( -86.9835, -410.924, -17.7219, 0.66 ) }
    dend_18 { pt3dadd( -86.9396, -410.995, -17.2322, 0.81 ) }
    dend_18 { pt3dadd( -86.3527, -411.056, -14.5032, 0.22 ) }
    dend_18 { pt3dadd( -86.0569, -411.066, -13.3853, 0.22 ) }
    dend_18 { pt3dadd( -85.6606, -411.104, -12.2246, 0.37 ) }
    dend_18 { pt3dadd( -85.3457, -411.125, -11.3928, 0.22 ) }
    dend_18 { pt3dadd( -85.124, -411.129, -10.8497, 0.44 ) }
    dend_18 { pt3dadd( -83.9534, -411.167, -8.21331, 0.29 ) }
    dend_18 { pt3dadd( -83.2202, -411.173, -6.64867, 0.29 ) }
    dend_18 { pt3dadd( -82.0731, -411.236, -4.27769, 0.44 ) }
    dend_18 { pt3dadd( -81.6895, -411.306, -3.42731, 0.37 ) }
    dend_18 { pt3dadd( -81.3787, -411.417, -2.6719, 0.29 ) }
    dend_18 { pt3dadd( -80.8419, -411.75, -1.14572, 0.59 ) }
    dend_18 { pt3dadd( -80.5819, -412.099, -0.0260458, 0.37 ) }
    dend_18 { pt3dadd( -80.434, -412.513, 1.10195, 0.37 ) }
    dend_18 { pt3dadd( -80.434, -412.892, 1.92995, 0.29 ) }
    dend_18 { pt3dadd( -80.4605, -413.321, 2.71144, 0.29 ) }
    dend_18 { pt3dadd( -80.5572, -414.152, 4.03969, 0.29 ) }
    dend_18 { pt3dadd( -80.7245, -415.073, 5.41651, 0.29 ) }
    dend_18 { pt3dadd( -80.8246, -415.548, 6.10826, 0.29 ) }
    dend_18 { pt3dadd( -80.9026, -415.866, 6.59951, 0.29 ) }
    dend_18 { pt3dadd( -81.0612, -416.473, 7.64351, 0.44 ) }
    dend_18 { pt3dadd( -81.1539, -416.758, 8.1557, 0.44 ) }
    dend_18 { pt3dadd( -81.3509, -417.561, 9.73152, 0.29 ) }
    dend_18 { pt3dadd( -81.3587, -417.809, 10.2965, 0.29 ) }
    dend_18 { pt3dadd( -81.2939, -418.044, 10.9621, 0.29 ) }
    dend_18 { pt3dadd( -81.0824, -418.336, 11.8718, 0.29 ) }
    dend_18 { pt3dadd( -80.7714, -418.619, 12.6741, 0.52 ) }
    dend_18 { pt3dadd( -79.4959, -419.579, 14.7651, 0.29 ) }
    dend_18 { pt3dadd( -78.799, -420.067, 15.629, 0.29 ) }
    dend_18 { pt3dadd( -78.1809, -420.49, 16.3062, 0.29 ) }
    dend_18 { pt3dadd( -77.0659, -421.202, 17.4507, 0.29 ) }
    dend_18 { pt3dadd( -76.2234, -421.696, 18.2712, 0.37 ) }
    dend_18 { pt3dadd( -75.1945, -422.262, 19.2999, 0.37 ) }
    dend_18 { pt3dadd( -74.1668, -422.896, 20.4934, 0.29 ) }
    dend_18 { pt3dadd( -74.124, -422.927, 20.5547, 0.29 ) }
    dend_18 { pt3dadd( -73.4982, -423.435, 21.7635, 0.29 ) }
    dend_18 { pt3dadd( -73.4779, -423.452, 21.8265, 0.29 ) }
    dend_18 { pt3dadd( -73.2179, -423.757, 23.1404, 0.29 ) }
    dend_18 { pt3dadd( -73.1065, -424.07, 24.2658, 0.29 ) }
    dend_18 { pt3dadd( -73.0991, -424.26, 24.7333, 0.37 ) }
    dend_18 { pt3dadd( -73.1334, -424.588, 25.2984, 0.37 ) }
    dend_18 { pt3dadd( -73.3545, -425.45, 26.3921, 0.29 ) }
    dend_18 { pt3dadd( -73.5565, -425.982, 26.9902, 0.29 ) }
    dend_18 { pt3dadd( -73.9241, -426.712, 27.7102, 0.29 ) }
    dend_18 { pt3dadd( -74.2962, -427.349, 28.3127, 0.29 ) }
    dend_18 { pt3dadd( -74.7877, -428.144, 29.0185, 0.29 ) }
    dend_18 { pt3dadd( -75.2673, -428.901, 29.6297, 0.29 ) }
    dend_18 { pt3dadd( -75.7071, -429.696, 30.2735, 0.29 ) }
    dend_18 { pt3dadd( -76.0188, -430.36, 30.8586, 0.29 ) }
    dend_18 { pt3dadd( -76.0418, -430.44, 30.9317, 0.29 ) }
    dend_18 { pt3dadd( -76.1077, -431.179, 31.5815, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_18 { pt3dadd( -75.9852, -432.165, 32.4403, 0.22 ) }
    dend_18 { pt3dadd( -75.6038, -433.869, 33.8045, 0.22 ) }
    dend_18 { pt3dadd( -75.5766, -433.945, 33.8649, 0.22 ) }
    dend_18 { pt3dadd( -75.1384, -434.919, 34.6561, 0.29 ) }
    dend_18 { pt3dadd( -74.9252, -435.334, 34.9951, 0.29 ) }
    dend_18 { pt3dadd( -74.3765, -436.245, 35.7565, 0.29 ) }
    dend_18 { pt3dadd( -73.872, -437.024, 36.393, 0.29 ) }
    dend_18 { pt3dadd( -72.9199, -438.644, 37.5384, 0.59 ) }
    dend_18 { pt3dadd( -72.759, -438.921, 37.7268, 0.37 ) }
    dend_18 { pt3dadd( -72.4745, -439.43, 38.0496, 0.29 ) }
    dend_18 { pt3dadd( -72.1319, -439.895, 38.3264, 0.29 ) }
    dend_18 { pt3dadd( -68.3786, -444.423, 46.1607, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -87.045, -410.77, -18.3822, 0.88 ) }
    dend_17 { pt3dadd( -87.4056, -411.318, -18.3675, 0.88 ) }
    dend_17 { pt3dadd( -87.7732, -411.94, -18.2812, 0.88 ) }
    dend_17 { pt3dadd( -88.4149, -413.044, -18.0634, 0.22 ) }
    dend_17 { pt3dadd( -88.88, -413.831, -17.7633, 0.22 ) }
    dend_17 { pt3dadd( -89.3297, -414.62, -17.3471, 0.22 ) }
    dend_17 { pt3dadd( -89.9382, -415.716, -16.673, 0.22 ) }
    dend_17 { pt3dadd( -90.3518, -416.483, -16.07, 0.66 ) }
    dend_17 { pt3dadd( -90.4727, -416.732, -15.8366, 0.66 ) }
    dend_17 { pt3dadd( -91.0211, -418.078, -14.4376, 0.22 ) }
    dend_17 { pt3dadd( -91.2536, -418.749, -13.7819, 0.22 ) }
    dend_17 { pt3dadd( -91.2974, -418.864, -13.671, 0.22 ) }
    dend_17 { pt3dadd( -91.4821, -419.306, -13.2578, 0.81 ) }
    dend_17 { pt3dadd( -91.6461, -419.712, -12.9254, 0.96 ) }
    dend_17 { pt3dadd( -92.1971, -421.16, -11.8873, 0.22 ) }
    dend_17 { pt3dadd( -92.5736, -422.167, -11.3554, 0.74 ) }
    dend_17 { pt3dadd( -92.8363, -422.814, -11.0534, 1.11 ) }
    dend_17 { pt3dadd( -92.8685, -422.89, -11.0201, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_25, dend_0, dend_48, dend_45, dend_41, dend_26, dend_4, dend_1, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_36, dend_27, dend_24, dend_5, dend_3, dend_2, dend_40, dend_37, dend_35, dend_28, dend_23, dend_6, dend_39, dend_38, dend_34, dend_29, dend_8, dend_7, dend_31, dend_30, dend_22, dend_9, dend_33, dend_32, dend_11, dend_10, dend_13, dend_12, dend_21, dend_14, dend_20, dend_15, dend_19, dend_16, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_50 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_47 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_37 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_35 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_39 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_34 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_30 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_22 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_18 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_28 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_29 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_32 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_40 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_6 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_43 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_38 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_10 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_15 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_19 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_17 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_41 nseg = 11
    dend_4 nseg = 3
    dend_1 nseg = 3
    dend_50 nseg = 13
    dend_47 nseg = 9
    dend_46 nseg = 5
    dend_36 nseg = 3
    dend_24 nseg = 7
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_37 nseg = 9
    dend_35 nseg = 5
    dend_23 nseg = 3
    dend_39 nseg = 5
    dend_34 nseg = 5
    dend_30 nseg = 9
    dend_22 nseg = 5
    dend_9 nseg = 9
    dend_33 nseg = 3
    dend_13 nseg = 3
    dend_18 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L4_LBC_2a3578f975_0_0


