// Cell: bIR215_L6_DBC_a60ab35166_0_0
/*
{
  "id" : "bIR215_L6_DBC_a60ab35166_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.08596, -8.8572, 1.11", "2.58388, -1.95122, -8.95891, 1.11", "2.66181, -3.56791, -9.19445, 1.11", "2.71071, -4.48085, -9.3577, 1.03", "2.77375, -5.68406, -9.5838, 1.03", "2.82835, -7.15619, -10.0164, 1.03", "2.82937, -8.34843, -10.4661, 1.18", "2.79253, -9.50042, -10.9925, 1.18", "2.71603, -10.6664, -11.6397, 1.4", "2.62158, -11.3393, -12.1701, 1.55", "2.18339, -13.5235, -14.3121, 1.25", "1.91849, -14.6354, -15.7105, 1.25", "1.80556, -15.1111, -16.4466, 1.47", "1.62257, -16.1797, -18.2778, 1.69", "1.43341, -18.3191, -22.0686, 1.69", "1.43361, -18.3476, -22.1186, 1.69", "1.62749, -20.1956, -25.1614, 1.33", "1.84176, -21.4436, -27.0357, 1.11", "2.06107, -22.6138, -28.5581, 1.25", "2.26907, -23.7559, -29.6718, 1.4", "2.35814, -24.5365, -30.175, 1.4", "2.35882, -25.5277, -30.7062, 1.33", "2.16303, -26.8658, -31.2031, 1.18", "1.86632, -27.8777, -31.5757, 1.18", "1.37458, -29.0823, -32.1074, 1.33", "0.712766, -30.6154, -32.8871, 1.03", "0.258092, -31.7662, -33.5024, 1.25", "0.0226892, -32.4879, -33.8931, 1.62", "-0.400925, -34.153, -34.7807, 1.62", "-0.60937, -35.3478, -35.37, 1.03", "-0.781338, -37.3318, -36.2095, 1.03", "-0.800875, -38.8373, -36.729, 1.18", "-0.741115, -40.2474, -37.1402, 1.18", "-0.701602, -40.7386, -37.2672, 1.55", "-0.621923, -41.5689, -37.4347, 1.55", "-0.526594, -42.7046, -37.6692, 1.69", "-0.458115, -43.8793, -37.9937, 1.84", "-0.42104, -44.9493, -38.3911, 1.47", "-0.386973, -46.4126, -39.0062, 1.18", "-0.386611, -47.6715, -39.5899, 1.18", "-0.415041, -49.1075, -40.3164, 1.18", "-0.418146, -50.7043, -41.0582, 1.33", "-0.34971, -52.0311, -41.5388, 1.03", "-0.249547, -53.0472, -41.8836, 1.03", "-0.103541, -54.1115, -42.1972, 1.03", "0.0909563, -55.45, -42.5643, 1.33", "0.43035, -58.1912, -43.3104, 1.33", "0.651759, -60.5992, -44.0396, 1.33", "0.761806, -62.3144, -44.6368, 1.18", "0.81831, -63.2919, -45.0259, 1.4", "0.940758, -65.0857, -45.8917, 1.4", "1.07326, -66.9621, -46.9697, 1.33", "1.19563, -68.6179, -48.1302, 1.18", "1.20201, -68.6799, -48.1772, 1.18", "1.35904, -69.7798, -49.0066, 1.47", "1.66357, -71.356, -50.229, 1.84", "1.92291, -72.3155, -50.9524, 1.62", "2.31705, -73.4694, -51.7887, 1.55", "2.80108, -74.8155, -52.7584, 1.33", "3.1771, -75.9815, -53.6249, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -10.3622, 0.0228061, 3.68", "-0.498012, -10.414, 0.0228061, 3.68", "-0.386237, -10.8356, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 10.9783, 0.142806, 2.43", "1.50434, 11.891, 0.142806, 2.43", "2.30807, 13.5913, 0.142806, 2.14", "2.86843, 14.815, 0.14839, 1.92", "3.07789, 15.2861, 0.151826, 1.92", "3.38518, 15.9588, 0.157667, 1.92", "3.59225, 16.3981, 0.161668, 1.92", "3.91969, 17.0564, 0.16854, 1.92", "4.18431, 17.5721, 0.174073, 1.99", "4.58209, 18.3457, 0.181396, 1.99", "5.16725, 19.5462, 0.19082, 1.99", "5.6478, 20.5447, 0.197244, 1.99", "6.15547, 21.6492, 0.202438, 1.99", "6.71209, 22.9609, 0.181945, 2.21", "7.18188, 24.2228, 0.140275, 2.21", "7.47809, 25.1694, 0.0820333, 1.99", "7.57983, 25.5819, 0.0398491, 1.99", "7.76209, 26.5041, -0.0801908, 1.99", "7.93773, 27.6873, -0.253048, 2.06", "8.0991, 29.1673, -0.507478, 1.92", "8.22012, 30.598, -0.796249, 1.92", "8.34111, 32.1958, -1.17818, 1.99", "8.39523, 33.0343, -1.41077, 2.14", "8.48166, 34.4378, -1.81954, 2.14", "8.58204, 36.1673, -2.34126, 1.99", "8.62871, 37.2209, -2.69263, 2.06", "8.64812, 38.4807, -3.13725, 2.43", "8.65, 39.4584, -3.52172, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.561107", "3.17833, 25.5615, -0.593792, 0.561107", "5.07001, 40.4418, -0.593792, 0.561107" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "3.1771, -75.9815, -53.6249, 0.52", "2.04752, -77.448, -55.5541, 0.52", "1.30803, -78.6914, -57.0327, 0.52", "0.937916, -79.7006, -58.1293, 0.52", "0.652339, -81.2615, -59.7275, 0.52", "0.614819, -82.0538, -60.5189, 1.11", "0.629645, -83.027, -61.4284, 1.4", "0.789316, -83.8011, -62.047, 1.69", "1.26581, -85.286, -63.1057, 1.62", "1.75387, -86.5141, -63.9277, 1.4", "2.46068, -88.1608, -64.9542, 0.88", "2.9045, -89.1995, -65.5968, 0.66", "3.50985, -90.6973, -66.4527, 0.66", "3.85994, -91.599, -66.9671, 0.88", "4.24508, -92.6646, -67.5265, 1.11", "4.58897, -93.5607, -67.9444, 1.18", "4.96115, -94.4271, -68.3042, 1.18", "5.28528, -95.0899, -68.6139, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "3.1771, -75.9815, -53.6249, 0.66", "3.26426, -76.8254, -53.2262, 0.66", "3.27071, -77.4473, -52.8539, 0.52", "3.26719, -77.4932, -52.8257, 0.52", "3.16391, -78.2949, -52.3186, 0.74", "3.04506, -79.07, -51.8556, 0.88", "2.95678, -79.6531, -51.4969, 0.74", "2.83386, -80.4331, -50.9624, 0.37", "2.76802, -81.0031, -50.5495, 1.18", "2.74838, -81.6507, -50.0803, 1.4", "2.78348, -82.3754, -49.5564, 0.96", "2.95313, -83.1131, -48.9563, 0.74", "3.25919, -83.821, -48.3001, 0.29", "3.64038, -84.4569, -47.6795, 0.74", "3.94276, -84.8697, -47.2632, 0.96", "3.96542, -84.8984, -47.236, 0.96", "4.83336, -86.0426, -46.2798, 0.59", "5.1615, -86.5793, -45.9485, 1.11", "5.37514, -87.0337, -45.7322, 1.25", "5.51464, -87.5158, -45.563, 1.18", "5.65861, -88.3962, -45.2875, 0.81", "5.71491, -89.1767, -45.0771, 0.59", "5.68988, -90.032, -44.8969, 0.44", "5.68549, -90.0935, -44.8829, 0.44", "5.60347, -90.7495, -44.6926, 0.29", "5.42103, -91.7472, -44.351, 0.29", "5.29271, -92.3624, -44.1219, 0.81", "5.20432, -92.8479, -43.947, 1.33", "5.12529, -93.3887, -43.8024, 1.33", "5.02731, -94.2957, -43.6951, 0.96", "4.99379, -94.9251, -43.7189, 0.81", "4.99013, -95.596, -43.8384, 0.81", "5.01426, -96.4079, -44.0548, 0.74", "5.08109, -97.4835, -44.4076, 0.44", "5.15439, -98.4429, -44.7921, 0.66", "5.20224, -99.0607, -45.0792, 0.74", "5.23395, -99.6234, -45.3397, 1.03", "5.2437, -100.288, -45.6239, 1.25", "5.22621, -100.995, -45.873, 1.11", "5.18224, -101.869, -46.1084, 0.59", "5.13937, -102.584, -46.2667, 0.59", "5.08185, -103.339, -46.438, 0.66", "5.03982, -103.888, -46.5589, 0.66", "4.99725, -104.721, -46.727, 0.52", "4.97849, -105.489, -46.8858, 0.52", "4.99653, -106.157, -47.0196, 0.59", "5.05251, -107.006, -47.2267, 1.25", "5.08407, -107.33, -47.3198, 1.4", "5.15763, -107.91, -47.5041, 1.4", "5.28616, -108.753, -47.7432, 0.88", "5.37621, -109.291, -47.8673, 0.52", "5.51422, -110.233, -48.0286, 0.52", "5.59438, -110.828, -48.0289, 0.52", "5.60199, -110.89, -48.0183, 0.52", "5.73835, -111.817, -47.6882, 0.52", "5.74773, -111.865, -47.6655, 0.52", "5.8371, -112.257, -47.4612, 0.96", "6.12698, -113.294, -46.8932, 1.33", "6.36556, -114.074, -46.5135, 0.66", "6.59721, -114.831, -46.2053, 0.59", "6.81424, -115.567, -45.9766, 0.74", "6.83009, -115.627, -45.9612, 0.74", "6.9744, -116.259, -45.8392, 0.74", "7.05219, -116.772, -45.7794, 1.03", "7.07488, -117.202, -45.7237, 1.25", "7.05426, -117.764, -45.6525, 1.18", "6.99825, -118.29, -45.5781, 0.59", "6.91136, -118.832, -45.4991, 0.29", "6.81295, -119.291, -45.4318, 0.29", "6.72817, -119.643, -45.3795, 0.81", "6.65376, -119.948, -45.3363, 1.11", "6.55361, -120.422, -45.2795, 1.11", "6.47923, -121.013, -45.2288, 0.59", "6.4811, -121.075, -45.2271, 0.59", "6.59343, -121.598, -45.2472, 0.44", "6.61474, -121.648, -45.2528, 0.44", "6.91936, -122.122, -45.3413, 0.44", "7.2287, -122.503, -45.445, 0.81", "7.57679, -122.885, -45.5686, 1.11", "7.79283, -123.125, -45.6591, 1.11", "8.08416, -123.465, -45.8045, 0.88", "8.32914, -123.786, -45.9434, 0.66", "8.62091, -124.22, -46.1298, 0.66", "8.88854, -124.679, -46.3148, 0.44", "9.14444, -125.188, -46.4993, 0.29", "9.39322, -125.779, -46.6821, 0.88", "9.55326, -126.242, -46.7942, 0.88", "9.65851, -126.623, -46.8601, 0.88", "9.78184, -127.173, -46.9181, 0.74", "9.88754, -127.732, -46.9505, 0.37", "9.98153, -128.257, -46.9562, 0.29", "10.1186, -129.024, -46.95, 0.29", "10.233, -129.651, -46.9459, 0.81", "10.3483, -130.227, -46.9463, 1.03", "10.3634, -130.289, -46.9475, 1.03", "10.5135, -130.77, -46.9687, 1.18", "10.7021, -131.302, -47.0018, 1.33", "10.8788, -131.764, -47.0367, 1.33", "11.1578, -132.463, -47.1012, 0.59", "11.4315, -133.155, -47.1695, 0.44", "11.6687, -133.773, -47.2311, 0.44", "11.8827, -134.34, -47.2867, 0.81", "12.117, -134.978, -47.3469, 1.11", "12.3168, -135.571, -47.396, 1.11", "12.4175, -135.95, -47.4175, 1.25", "12.5214, -136.569, -47.4297, 1.11", "12.5849, -137.356, -47.4361, 0.66", "12.5976, -137.925, -47.438, 0.37", "12.5711, -138.481, -47.4326, 0.29", "12.5251, -139.28, -47.426, 0.37", "12.5186, -139.84, -47.4632, 0.52", "12.5745, -140.417, -47.5339, 0.88", "12.6583, -140.796, -47.5999, 1.03", "12.7137, -140.955, -47.6351, 1.03", "13.0609, -141.763, -47.7697, 0.74", "13.4856, -142.673, -47.8774, 0.59", "13.8154, -143.392, -47.9353, 0.59", "13.994, -143.777, -47.9339, 1.4", "14.1983, -144.213, -47.9126, 1.77", "14.7643, -145.419, -47.7707, 0.81", "15.0491, -146.038, -47.6505, 0.81", "15.4484, -146.89, -47.3975, 0.81", "15.8596, -147.716, -47.1242, 1.11", "16.0816, -148.119, -46.9798, 1.11", "16.4629, -148.747, -46.7488, 0.88", "16.5099, -148.821, -46.7204, 0.88", "16.8776, -149.448, -46.4545, 0.59", "17.192, -150.118, -46.1711, 0.59", "17.4071, -150.654, -45.9676, 0.52", "17.5735, -151.118, -45.7962, 0.52", "17.9344, -152.22, -45.4401, 0.74", "18.0894, -152.73, -45.288, 1.33", "18.2625, -153.403, -45.1121, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.386237, -10.8356, 0.0228061, 2.73", "-0.209016, -12.2754, -0.0657044, 2.73", "-0.0441138, -13.7479, -0.149671, 2.14", "0.0695402, -14.9077, -0.2093, 2.14", "0.184986, -16.2356, -0.271683, 2.28", "0.279097, -17.5043, -0.341293, 2.14", "0.394062, -19.1495, -0.440272, 1.92", "0.453099, -20.3582, -0.526177, 2.06", "0.500304, -22.0387, -0.656755, 1.84", "0.489556, -23.6059, -0.798448, 1.84", "0.448874, -24.7876, -0.917295, 1.84", "0.348619, -26.2758, -1.08805, 1.92", "0.1792, -27.7046, -1.28527, 1.92", "-0.0374923, -28.8819, -1.46763, 1.92", "-0.350262, -30.064, -1.64624, 1.84", "-0.76514, -31.3282, -1.82704, 1.84", "-1.06492, -32.0891, -1.9283, 1.77", "-1.77079, -33.6735, -2.1369, 1.69", "-2.57025, -35.3291, -2.34136, 1.69", "-3.27075, -36.6781, -2.5086, 1.84", "-3.29765, -36.7255, -2.51322, 1.84", "-3.69994, -37.3448, -2.56603, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.386237, -10.8356, 0.0228061, 0.96", "-0.562281, -13.1149, -1.21284, 0.96", "-0.841173, -15.4054, -2.22973, 1.25", "-1.31252, -18.1102, -3.22439, 0.96", "-1.70927, -19.8728, -3.68003, 1.25", "-2.05269, -21.1192, -3.92455, 1.47", "-2.5403, -22.7299, -4.18834, 1.11", "-3.26579, -24.7993, -4.35179, 0.96", "-4.10708, -26.776, -4.35732, 1.11", "-5.36937, -29.2771, -4.27446, 1.11", "-6.29372, -30.8979, -4.24513, 1.11", "-6.37242, -31.0225, -4.24502, 1.11", "-7.46264, -32.5274, -4.28828, 0.96", "-7.51435, -32.59, -4.29486, 0.96", "-8.57663, -33.6737, -4.53394, 1.03", "-9.36264, -34.418, -4.801, 1.25", "-9.43854, -34.4952, -4.82846, 1.25", "-10.5001, -35.6302, -5.22817, 0.88", "-11.5035, -36.7817, -5.63014, 0.88", "-12.7694, -38.3455, -6.20616, 1.11", "-13.7555, -39.6858, -6.69954, 1.11", "-14.6848, -41.0493, -7.20193, 1.25", "-14.7708, -41.1958, -7.25149, 1.25", "-15.5554, -42.8532, -7.78588, 0.96", "-16.241, -44.586, -8.29709, 0.96", "-16.7387, -46.037, -8.69542, 1.03", "-16.7735, -46.1408, -8.72222, 1.03", "-17.3894, -47.9465, -9.15964, 1.03", "-17.8717, -49.3571, -9.46231, 1.03", "-18.2984, -50.6156, -9.66243, 1.25", "-18.7458, -51.9445, -9.80102, 1.62", "-19.4529, -53.9389, -9.94846, 1.25", "-20.0016, -55.4048, -10.018, 1.18", "-20.4536, -56.4636, -10.0023, 1.18", "-21.0591, -57.7522, -9.89263, 1.33", "-21.8373, -59.2255, -9.70115, 1.33", "-22.5666, -60.5106, -9.52177, 1.03", "-22.6113, -60.5835, -9.51115, 1.03", "-23.4398, -61.9324, -9.4155, 0.81", "-24.0531, -62.9712, -9.47686, 0.66", "-24.6502, -64.0309, -9.73533, 0.81", "-25.351, -65.3544, -10.3201, 1.03", "-25.6999, -66.0804, -10.7383, 1.33", "-26.078, -67.0596, -11.3828, 1.62", "-26.4188, -68.2172, -12.1941, 1.55", "-26.7231, -69.5178, -13.0596, 1.18", "-27.039, -71.0729, -13.9837, 0.96", "-27.0556, -71.1598, -14.0288, 0.96", "-27.4154, -73.1793, -14.9356, 0.88", "-27.7251, -74.9217, -15.5651, 0.88", "-27.9666, -76.4479, -15.9829, 1.18", "-28.1759, -77.9878, -16.3213, 1.4", "-28.4156, -79.7033, -16.6619, 1.4", "-28.6221, -80.891, -16.9233, 1.18", "-28.9397, -82.2522, -17.2455, 0.96", "-29.3131, -83.4753, -17.6029, 1.11", "-29.9343, -85.0034, -18.2256, 0.88", "-30.4799, -86.1749, -18.7725, 0.74", "-31.1472, -87.3354, -19.3967, 0.96", "-31.6739, -88.0893, -19.8852, 1.25", "-32.485, -89.0153, -20.6242, 1.33", "-33.5761, -89.9647, -21.5485, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.65, 39.4584, -3.52172, 1.4", "8.24698, 40.8624, -4.11499, 1.4", "8.01108, 41.8472, -4.4459, 1.4", "7.67062, 43.2928, -4.72027, 1.25", "7.61443, 43.5224, -4.72579, 1.25", "7.44136, 44.2219, -4.68127, 1.03", "7.23236, 45.0659, -4.59466, 1.03", "7.05173, 45.8861, -4.42168, 1.18", "6.72939, 47.1821, -3.95654, 1.33", "6.40391, 48.3703, -3.3738, 1.33", "6.17741, 49.2062, -2.93241, 1.47", "6.0254, 49.8235, -2.59966, 1.47", "5.85487, 50.6787, -2.16609, 1.47", "5.58734, 52.5286, -1.33839, 1.4", "5.48938, 53.6895, -0.90397, 1.4", "5.46465, 54.4549, -0.66909, 1.4", "5.47886, 55.5127, -0.390785, 1.62", "5.54223, 56.7383, -0.139792, 1.18", "5.64145, 57.7342, -0.0200583, 1.18", "5.65326, 57.8139, -0.0187511, 1.18", "5.83345, 59.1317, -0.038731, 1.18", "5.95073, 60.1888, -0.0577757, 1.47", "5.97997, 60.5203, -0.0648518, 1.47", "6.06985, 61.6439, -0.0892078, 1.4", "6.16466, 62.8339, -0.112774, 1.33", "6.27387, 64.2609, -0.139752, 1.33", "6.36377, 65.6028, -0.163803, 1.62", "6.40866, 66.579, -0.184096, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.65, 39.4584, -3.52172, 1.18", "10.5698, 39.8445, -3.19189, 1.18", "12.3778, 40.1092, -2.59519, 0.96", "13.3679, 40.2339, -2.24432, 1.25", "13.4821, 40.253, -2.1952, 1.25", "15.1399, 40.5895, -1.47234, 1.25", "16.6811, 40.9885, -0.809434, 1.25", "19.4653, 41.7684, 0.383298, 1.18", "20.755, 42.1987, 0.922461, 0.81", "22.5396, 42.916, 1.68618, 0.96", "23.9071, 43.6179, 2.22108, 0.96", "24.9822, 44.395, 2.55923, 0.96", "25.0544, 44.4598, 2.56922, 0.96", "26.21, 45.5997, 2.4568, 0.96", "26.2872, 45.6801, 2.44227, 0.96", "27.2987, 46.7356, 2.14971, 1.18", "28.6097, 48.098, 1.75936, 1.4", "29.6997, 49.1769, 1.44132, 1.33", "29.8259, 49.296, 1.41303, 1.33", "31.0781, 50.3779, 1.2301, 1.18", "31.2986, 50.538, 1.23298, 1.18", "32.2908, 51.1492, 1.38321, 1.18", "32.5621, 51.2884, 1.47614, 1.18", "33.953, 51.9385, 2.13023, 0.96", "35.3007, 52.5588, 2.85709, 0.96", "37.1729, 53.4795, 4.0372, 1.03", "37.3116, 53.5601, 4.12721, 1.03", "39.371, 55.0236, 5.46995, 1.03", "39.5013, 55.1217, 5.55717, 1.03", "40.2403, 55.7562, 6.06943, 1.03", "41.2199, 56.761, 6.76757, 1.18", "42.4239, 58.3096, 7.45975, 1.4", "43.3835, 59.6588, 7.89012, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "5.28528, -95.0899, -68.6139, 0.52", "4.50912, -95.5979, -69.309, 0.52", "3.52102, -96.2878, -70.1156, 0.52", "3.14328, -96.6054, -70.4537, 0.96", "2.36336, -97.4368, -71.2943, 1.33", "1.96057, -97.9769, -71.8011, 0.81", "1.50133, -98.7909, -72.4944, 0.52", "1.48857, -98.8407, -72.5275, 0.52", "1.56479, -100.028, -73.2715, 0.88", "1.82778, -100.923, -73.837, 1.25", "2.07101, -101.419, -74.1612, 1.47", "2.48891, -102.086, -74.6371, 1.47", "3.04116, -102.835, -75.1882, 0.88", "3.8869, -103.92, -76.012, 0.88", "4.32942, -104.464, -76.4697, 0.37", "4.7903, -105.095, -77.0413, 0.66", "4.82095, -105.148, -77.0949, 0.66", "4.95379, -105.504, -77.4655, 0.96", "5.10431, -106.459, -78.3955, 1.11", "5.02328, -107.824, -79.5297, 0.44", "4.89485, -108.557, -80.0734, 0.44", "4.65262, -109.65, -80.8533, 0.52", "4.51422, -110.253, -81.2843, 0.74", "4.32671, -110.921, -81.7325, 0.74", "4.05178, -111.758, -82.286, 1.03", "3.64025, -113.156, -83.239, 0.88", "3.33175, -114.513, -84.2133, 1.18", "3.15156, -115.824, -85.2511, 0.96", "3.12576, -116.895, -86.298, 0.59", "3.18538, -118.082, -87.647, 0.29", "3.2775, -118.957, -88.7545, 0.88", "3.30512, -119.214, -89.1058, 1.47", "3.41294, -120.282, -90.5902, 1.33", "3.52423, -121.873, -92.7795, 0.52", "3.52989, -122.296, -93.3317, 0.29", "3.48124, -122.665, -93.7206, 0.96", "3.20814, -123.691, -94.6391, 1.77", "3.08806, -124.124, -95.0048, 1.77", "2.79968, -125.083, -95.7112, 1.11", "2.62149, -125.872, -96.3662, 0.37", "2.59094, -126.414, -97.0101, 0.29", "2.64397, -127.212, -98.1571, 0.74", "2.88014, -128.366, -99.9918, 1.33", "2.89055, -128.4, -100.052, 1.33", "3.32524, -129.462, -102.144, 1.55", "3.93757, -130.802, -104.959, 0.96", "3.95135, -130.834, -105.027, 0.96", "4.08567, -131.247, -105.814, 1.18", "4.09271, -131.279, -105.866, 1.18", "4.23173, -132.592, -107.578, 0.44", "4.14643, -133.289, -108.211, 0.37", "4.02363, -133.877, -108.81, 0.52", "3.939, -134.337, -109.381, 0.81", "3.85165, -134.887, -110.096, 1.33", "3.81534, -135.262, -110.591, 0.96", "3.80962, -136.459, -112.17, 1.25", "4.06846, -138.966, -115.511, 0.52", "4.30019, -140.145, -117.13, 0.44", "4.47749, -140.736, -117.951, 0.59", "4.87668, -141.725, -119.329, 0.59", "5.37856, -142.679, -120.604, 0.74", "5.71324, -143.181, -121.198, 1.18", "5.7474, -143.229, -121.239, 1.18", "6.13449, -143.699, -121.605, 1.47", "6.17601, -143.744, -121.64, 1.47", "7.12724, -144.836, -122.299, 1.18", "7.16795, -144.891, -122.326, 1.18", "7.53188, -145.535, -122.598, 1.18", "7.96666, -146.632, -123.069, 0.52", "8.12294, -147.351, -123.384, 0.29", "8.21504, -148.17, -123.771, 0.29", "8.24015, -148.73, -124.051, 0.88", "8.24255, -149.494, -124.479, 1.11", "8.18292, -150.95, -125.353, 0.81", "8.14327, -151.876, -126.008, 0.37", "8.1459, -152.854, -127.007, 0.29", "8.15795, -153.303, -127.599, 0.96", "8.15856, -153.344, -127.671, 0.96", "8.14109, -153.704, -128.411, 1.18", "8.00111, -154.457, -130.135, 1.11", "7.54126, -155.741, -133.253, 0.44", "7.32537, -156.128, -134.223, 0.74", "6.86356, -156.791, -135.789, 0.59", "6.55656, -157.18, -136.62, 0.81", "6.0466, -157.732, -137.639, 0.44", "5.67539, -158.136, -138.119, 0.59", "5.63463, -158.19, -138.15, 0.59", "5.17307, -158.994, -138.476, 0.52", "4.87963, -159.648, -138.681, 1.03", "4.60517, -160.429, -138.927, 1.4", "4.24441, -161.633, -139.278, 1.33", "4.02266, -162.474, -139.581, 1.11", "3.88413, -163.31, -140.012, 0.59", "3.88086, -163.372, -140.052, 0.59", "3.92885, -163.936, -140.511, 0.44", "4.13556, -164.835, -141.425, 0.44", "4.47472, -165.83, -142.607, 0.74", "5.03119, -167.238, -144.419, 0.74", "5.16954, -167.575, -144.854, 1.25", "5.57048, -168.615, -146.208, 1.55", "5.97159, -169.732, -147.687, 1.77", "6.371, -171.088, -149.524, 0.74", "6.48272, -171.807, -150.44, 0.52", "6.47584, -172.293, -151.015, 0.52", "6.33757, -173.32, -152.196, 0.96", "6.21176, -173.752, -152.641, 1.18", "5.72504, -174.795, -153.658, 0.52", "5.40109, -175.297, -154.146, 0.52", "5.16649, -175.594, -154.455, 0.66", "5.12837, -175.634, -154.5, 0.66", "4.79532, -175.932, -154.829, 0.44", "3.91261, -176.607, -155.591, 0.29", "3.85825, -176.638, -155.625, 0.29", "3.43322, -176.835, -155.863, 0.52", "2.99603, -177.02, -156.063, 0.81", "2.46232, -177.262, -156.235, 0.96", "1.93179, -177.516, -156.341, 1.11", "1.19457, -177.912, -156.392, 0.29", "1.1007, -177.968, -156.394, 0.29", "0.28297, -178.465, -156.383, 0.29", "-0.466875, -178.908, -156.353, 0.88", "-0.738207, -179.064, -156.334, 1.03", "-1.35505, -179.382, -156.292, 1.18", "-2.29254, -179.778, -156.264, 0.29", "-3.40498, -180.152, -156.285, 0.29", "-3.86257, -180.269, -156.332, 0.59", "-3.93041, -180.285, -156.346, 0.59", "-4.71108, -180.469, -156.578, 0.59", "-5.46982, -180.696, -156.881, 1.11", "-6.10717, -180.952, -157.199, 1.4", "-6.8757, -181.346, -157.637, 0.96", "-7.64713, -181.84, -158.104, 0.59", "-8.53679, -182.524, -158.652, 0.37", "-9.20866, -183.147, -159.064, 0.37", "-9.62014, -183.562, -159.279, 0.74", "-9.66807, -183.614, -159.301, 0.74", "-10.1495, -184.184, -159.443, 0.74", "-10.5285, -184.649, -159.523, 1.03", "-10.9698, -185.199, -159.579, 1.33", "-11.6383, -185.941, -159.632, 1.47", "-12.3891, -186.71, -159.686, 0.37", "-13.3094, -187.627, -159.755, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "5.28528, -95.0899, -68.6139, 0.52", "5.45845, -95.8299, -67.5098, 0.52", "5.67505, -96.7662, -66.3503, 0.44", "5.79059, -97.2948, -65.8252, 0.88", "5.79947, -97.3413, -65.7876, 0.88", "5.87219, -97.7624, -65.4962, 1.03", "5.94485, -98.2454, -65.2097, 0.81", "6.02564, -98.8982, -64.9912, 0.29", "6.09809, -99.627, -64.8428, 0.22", "6.1394, -100.182, -64.7489, 0.52", "6.15129, -100.479, -64.701, 0.74", "6.14755, -101.248, -64.588, 0.29", "6.10961, -101.917, -64.4951, 0.29", "6.04247, -102.576, -64.415, 0.74", "5.98819, -102.949, -64.3692, 1.03", "5.91268, -103.411, -64.3123, 0.96", "5.82104, -103.896, -64.2562, 0.59", "5.68728, -104.583, -64.1563, 0.22", "5.61789, -105.009, -64.0765, 0.37", "5.60879, -105.118, -64.052, 0.37", "5.62715, -105.57, -63.9454, 0.37", "5.63727, -105.627, -63.9324, 0.37", "5.90316, -106.465, -63.8289, 0.29", "6.13608, -107.036, -63.8059, 0.88", "6.29083, -107.397, -63.8104, 1.18", "6.59106, -108.113, -63.849, 0.29", "6.87345, -108.793, -63.9128, 0.29", "7.27559, -109.836, -63.9938, 0.52", "7.4382, -110.306, -64.0256, 0.81", "7.67387, -111.066, -64.0414, 0.22", "7.76802, -111.424, -64.0316, 0.59", "7.78446, -111.501, -64.0269, 0.59", "7.987, -112.714, -63.9265, 0.44", "8.10255, -113.566, -63.835, 0.66", "8.17775, -114.143, -63.7854, 0.59", "8.24546, -114.626, -63.7674, 0.44", "8.36296, -115.419, -63.778, 0.96", "8.49078, -116.026, -63.8459, 1.33", "8.69297, -116.645, -63.9989, 0.59", "8.72051, -116.705, -64.0172, 0.59", "9.03814, -117.225, -64.2116, 0.59", "9.06582, -117.265, -64.2309, 0.59", "9.65234, -118.115, -64.7444, 0.29", "9.9088, -118.523, -65.0298, 0.44", "10.1066, -118.902, -65.2794, 0.44", "10.3577, -119.468, -65.6267, 0.44", "10.6091, -120.196, -66.0267, 1.33", "10.8721, -121.071, -66.4596, 1.11", "11.0705, -121.884, -66.8142, 0.52", "11.2684, -122.629, -67.127, 0.29", "11.2825, -122.682, -67.1481, 0.29", "11.4196, -123.146, -67.2829, 0.29", "11.7003, -123.768, -67.3646, 0.29", "11.902, -124.073, -67.3347, 0.96", "12.1947, -124.34, -67.2447, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "18.2625, -153.403, -45.1121, 0.29", "17.3384, -154.388, -43.6746, 0.29", "16.846, -155.116, -42.7025, 0.29", "16.7004, -155.348, -42.4063, 0.74", "16.6633, -155.408, -42.3319, 0.74", "16.4131, -155.794, -41.8725, 0.74", "15.7749, -156.582, -41.0042, 0.29", "15.2105, -157.204, -40.4827, 0.29", "14.9018, -157.476, -40.2792, 0.74", "14.6064, -157.682, -40.1421, 1.11", "14.0965, -158.023, -39.9399, 1.11", "12.7298, -158.91, -39.4945, 0.29", "12.2874, -159.222, -39.357, 0.37", "11.7132, -159.73, -39.0785, 0.37", "11.1396, -160.386, -38.6624, 0.66", "10.6289, -161.146, -38.1534, 0.52", "10.3606, -161.635, -37.81, 0.96", "9.91928, -162.562, -37.1326, 1.33", "9.24598, -163.882, -36.1759, 0.59", "8.94878, -164.465, -35.7212, 0.37", "8.70972, -164.92, -35.3496, 0.22", "8.27248, -165.701, -34.7135, 0.22", "7.89501, -166.375, -34.1859, 0.66", "7.41294, -167.285, -33.5641, 0.66", "6.71056, -168.798, -32.6929, 0.52", "6.61987, -169.031, -32.5694, 0.29", "6.38986, -169.717, -32.2646, 0.74", "6.30887, -170.035, -32.1148, 0.74", "5.9858, -171.539, -31.4078, 0.37", "5.74025, -172.847, -30.8336, 0.44", "5.60204, -173.497, -30.5875, 0.59", "5.34971, -174.619, -30.1658, 0.52", "4.75145, -176.925, -29.2828, 0.37", "4.44099, -177.915, -28.89, 0.37", "4.02434, -178.995, -28.4509, 0.29", "3.45067, -180.272, -27.9157, 0.59", "3.32988, -180.527, -27.8158, 0.88", "2.90807, -181.31, -27.5358, 0.66", "2.343, -182.204, -27.3135, 0.15", "1.65859, -183.098, -27.0343, 0.15", "1.59909, -183.159, -27.0105, 0.15", "0.845831, -183.809, -26.7785, 0.59", "0.326052, -184.26, -26.6731, 0.88", "0.268865, -184.314, -26.6669, 0.88", "-0.153635, -184.752, -26.6555, 0.88", "-0.783018, -185.504, -26.69, 0.88", "-1.68571, -186.833, -26.8169, 0.29", "-2.10857, -187.575, -26.9061, 0.29", "-2.42786, -188.284, -26.9974, 0.66", "-2.65862, -188.896, -27.0624, 0.81", "-2.91905, -189.821, -27.1442, 0.66", "-3.17614, -191.053, -27.2154, 0.29", "-3.28055, -191.694, -27.2281, 0.81", "-3.3594, -192.162, -27.2278, 0.81", "-3.59719, -193.266, -27.1811, 0.22", "-3.78411, -194.005, -27.069, 0.22", "-3.90003, -194.45, -26.9546, 0.81", "-4.01178, -194.815, -26.8265, 0.96", "-4.38531, -195.917, -26.2379, 0.22", "-4.61101, -196.492, -25.6606, 0.22", "-4.89825, -197.127, -24.5937, 0.74", "-4.9931, -197.317, -24.1859, 1.18", "-5.15286, -197.624, -23.4374, 0.74", "-5.53471, -198.28, -21.6391, 0.59", "-6.06975, -199.123, -19.181, 0.44", "-6.50314, -199.861, -17.2482, 0.37", "-6.52676, -199.903, -17.1578, 0.37", "-6.65803, -200.161, -16.6949, 0.66", "-6.7427, -200.479, -16.2572, 0.74", "-6.87962, -201.468, -15.195, 0.29", "-6.93299, -202.255, -14.4654, 0.29", "-6.98017, -203.037, -13.6935, 0.29", "-6.98413, -203.237, -13.4845, 0.74", "-6.86586, -205.222, -11.2124, 0.66", "-6.71355, -206.098, -10.0878, 0.22", "-6.62964, -206.33, -9.70888, 0.22", "-6.39499, -206.761, -8.71316, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "18.2625, -153.403, -45.1121, 0.37", "18.4015, -155.508, -46.8903, 0.37", "18.5234, -156.66, -47.7855, 0.37", "18.5331, -156.73, -47.8326, 0.37", "18.6427, -157.476, -48.2836, 0.81", "18.8225, -158.592, -48.9057, 0.88", "18.9034, -159.058, -49.1477, 0.88", "19.1033, -160.004, -49.5685, 0.52", "19.313, -161.092, -50.0156, 0.52", "19.4425, -162.114, -50.4317, 0.52", "19.4667, -162.697, -50.6487, 0.96", "19.457, -163.218, -50.8178, 0.96", "19.3415, -164.652, -51.2621, 0.37", "19.2159, -165.523, -51.5061, 0.29", "19.018, -166.401, -51.7315, 0.59", "18.7762, -167.234, -51.9, 0.96", "18.5753, -167.848, -51.9895, 1.18", "18.5479, -167.928, -51.9956, 1.18", "18.3746, -168.422, -52.022, 1.18", "18.0988, -169.311, -52.1137, 1.03", "17.8493, -170.339, -52.2485, 0.59", "17.7368, -171.015, -52.3309, 0.52", "17.6709, -171.571, -52.3754, 0.66", "17.538, -172.982, -52.3985, 0.29", "17.4745, -173.958, -52.3329, 0.44", "17.4671, -174.401, -52.2579, 0.52", "17.4724, -175.808, -51.9044, 0.66", "17.4693, -176.611, -51.6519, 0.37", "17.4509, -177.507, -51.3233, 0.88", "17.4239, -178.024, -51.1089, 1.18", "17.3332, -179.045, -50.6954, 0.96", "17.2665, -179.77, -50.4369, 0.66", "17.2408, -180.303, -50.2713, 1.03", "17.2822, -181.287, -49.9925, 0.52", "17.4552, -182.49, -49.6931, 0.52", "17.6455, -183.287, -49.5377, 1.11", "17.9101, -184.053, -49.432, 1.11", "18.4074, -185.246, -49.3298, 0.74", "18.7112, -185.912, -49.2989, 0.44", "19.1921, -186.916, -49.2811, 0.59", "19.8226, -188.292, -49.2873, 0.59", "20.3469, -189.628, -49.3024, 0.59", "20.731, -190.779, -49.3126, 0.52", "20.9252, -191.531, -49.317, 1.18", "21.0286, -192.02, -49.3092, 1.33", "21.2319, -193.361, -49.255, 1.18", "21.3436, -194.443, -49.1761, 0.88", "21.4073, -195.318, -49.0947, 0.52", "21.4893, -196.294, -49.0111, 0.66", "21.5059, -196.393, -49.0031, 0.66", "21.7325, -197.194, -48.964, 0.81", "22.0381, -198.1, -48.9321, 0.44", "22.4178, -199.069, -48.9108, 0.44", "22.9318, -200.241, -48.8947, 0.44", "23.6715, -201.704, -48.8919, 0.37", "24.1933, -202.649, -48.8927, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-3.69994, -37.3448, -2.56603, 1.03", "-5.23998, -37.7498, -2.32625, 1.03", "-6.2936, -38.186, -2.00122, 1.03", "-7.57912, -38.8961, -1.52587, 0.96", "-8.43034, -39.4952, -1.19696, 0.96", "-8.54138, -39.5821, -1.15328, 0.96", "-10.7241, -41.5295, -0.304155, 0.81", "-11.5146, -42.4434, 0.0419993, 1.11", "-12.2874, -43.4426, 0.393618, 1.11", "-13.2784, -44.7777, 0.841376, 1.03", "-13.3279, -44.8413, 0.861732, 1.03", "-14.3912, -46.0863, 1.28323, 1.03", "-15.1652, -46.9461, 1.53704, 1.25", "-15.8239, -47.6533, 1.80795, 1.4", "-16.276, -48.1224, 2.02768, 1.4", "-17.1388, -49.0497, 2.54736, 1.25", "-18.0222, -50.1549, 3.16953, 1.11", "-18.4863, -50.858, 3.55262, 1.11", "-18.9711, -51.8009, 4.01779, 1.03", "-19.0295, -51.9414, 4.07392, 1.03", "-19.4189, -52.9815, 4.34658, 0.81", "-19.8219, -54.1242, 4.50363, 0.96", "-20.2454, -55.3737, 4.57331, 0.96", "-20.7064, -56.7937, 4.60923, 0.81", "-20.9986, -57.8404, 4.5858, 0.74", "-21.397, -59.411, 4.49343, 0.81", "-21.5809, -60.2692, 4.40962, 1.11", "-21.7836, -61.5055, 4.27254, 1.11", "-21.8866, -62.4442, 4.16178, 1.11", "-22.0143, -64.2687, 3.94905, 0.88", "-22.0507, -65.1861, 3.88011, 1.11", "-22.068, -66.2636, 3.81601, 1.11", "-22.0753, -67.0981, 3.75514, 1.33", "-22.0958, -67.9635, 3.68955, 0.96", "-22.1407, -68.998, 3.61314, 1.11", "-22.1874, -70.2615, 3.52892, 1.11", "-22.2013, -71.3164, 3.43951, 1.4", "-22.2132, -72.2426, 3.33983, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-3.69994, -37.3448, -2.56603, 1.47", "-3.69803, -38.6184, -2.58918, 1.47", "-3.69686, -39.4033, -2.60346, 1.47", "-3.69431, -41.1132, -2.63455, 1.47", "-3.6926, -42.2535, -2.65529, 1.62", "-3.69052, -43.6492, -2.68067, 1.92", "-3.6885, -44.9993, -2.70522, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-33.5761, -89.9647, -21.5485, 0.88", "-34.9972, -90.1143, -21.5178, 0.88", "-35.4195, -90.1834, -21.54, 1.11", "-35.899, -90.287, -21.6151, 0.88", "-36.4971, -90.4288, -21.731, 0.81", "-37.1908, -90.6342, -21.8988, 0.74", "-37.8445, -90.8803, -22.075, 0.96", "-38.4717, -91.196, -22.3141, 0.96", "-39.3111, -91.7199, -22.6501, 0.81", "-39.3492, -91.7495, -22.6655, 0.81", "-40.0099, -92.3616, -22.9353, 0.74", "-40.5691, -92.9496, -23.1621, 0.74", "-40.7681, -93.1668, -23.2341, 1.03", "-41.1498, -93.57, -23.3577, 1.11", "-41.8039, -94.2073, -23.5355, 1.11", "-41.8552, -94.2523, -23.5498, 1.11", "-42.6326, -94.8403, -23.762, 0.88", "-43.5544, -95.4789, -24.0215, 0.88", "-43.9635, -95.744, -24.1392, 1.25", "-44.4795, -96.0505, -24.292, 1.25", "-45.1921, -96.4431, -24.5087, 1.4", "-45.7182, -96.7317, -24.6669, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-33.5761, -89.9647, -21.5485, 0.74", "-33.3326, -90.3321, -22.3556, 0.74", "-33.0257, -90.8167, -23.4355, 0.44", "-33.0046, -90.8515, -23.5084, 0.44", "-32.7839, -91.2147, -24.1866, 0.44", "-32.3773, -91.8759, -25.3415, 1.03", "-31.6046, -93.2324, -27.5565, 1.03", "-31.3754, -93.6772, -28.2724, 1.33", "-31.0944, -94.3186, -29.2554, 1.11", "-30.9294, -94.7759, -29.9877, 0.59", "-30.7358, -95.465, -31.1179, 0.44", "-30.5885, -96.3873, -32.5423, 0.44", "-30.5431, -97.0005, -33.4867, 0.88", "-30.5543, -97.2837, -33.963, 1.25", "-30.725, -98.3885, -35.8775, 1.25", "-30.7322, -98.417, -35.9288, 1.25", "-30.7725, -98.5506, -36.1477, 1.25", "-30.7805, -98.5824, -36.1894, 1.25", "-30.9074, -99.6919, -37.1171, 0.74", "-30.9367, -100.367, -37.5538, 0.74", "-30.9379, -100.42, -37.5797, 0.74", "-30.9453, -100.901, -37.8551, 0.74", "-30.9573, -101.571, -38.3543, 0.81", "-30.9886, -102.135, -38.8314, 0.81", "-31.1237, -103.263, -39.9402, 0.44", "-31.1321, -103.302, -39.9833, 0.44", "-31.3163, -103.986, -40.7779, 0.74", "-31.595, -104.896, -41.9125, 0.88", "-31.7216, -105.326, -42.4478, 1.03", "-31.9113, -106.022, -43.2626, 1.03", "-32.0063, -106.474, -43.7013, 1.18", "-32.012, -106.514, -43.7354, 1.18", "-32.0314, -107.47, -44.3412, 0.52", "-31.9035, -108.169, -44.6492, 0.44", "-31.7488, -108.534, -44.7966, 0.81", "-31.5741, -108.834, -44.9088, 0.88", "-31.5084, -108.939, -44.9543, 0.88", "-31.2174, -109.435, -45.1776, 0.74", "-30.9006, -110.047, -45.4576, 0.44", "-30.6424, -110.685, -45.7673, 0.59", "-30.3875, -111.566, -46.1726, 0.52", "-30.2415, -112.269, -46.4923, 0.88", "-30.1707, -112.752, -46.7035, 1.18", "-30.113, -113.449, -47.0189, 0.52", "-30.1121, -113.909, -47.2252, 0.44", "-30.1525, -114.59, -47.5043, 0.44", "-30.2163, -115.195, -47.734, 0.74", "-30.2634, -115.536, -47.8603, 0.74", "-30.4364, -116.627, -48.2845, 0.59", "-30.5819, -117.427, -48.5906, 0.66", "-30.6649, -117.879, -48.7762, 1.18", "-30.7854, -118.571, -49.0607, 1.33", "-30.877, -119.254, -49.3158, 1.11", "-30.8802, -119.31, -49.3371, 1.11", "-30.8645, -119.947, -49.5611, 0.96", "-30.7861, -120.778, -49.8562, 0.66", "-30.7103, -121.411, -50.1054, 0.37", "-30.6585, -122.024, -50.3628, 0.29", "-30.623, -123.1, -50.8666, 1.03", "-30.6275, -123.634, -51.1313, 1.33", "-30.6396, -124.064, -51.3498, 1.47", "-30.6882, -125.168, -51.8721, 0.37", "-30.7106, -125.839, -52.1994, 0.37", "-30.7487, -126.772, -52.6286, 0.29", "-30.7582, -127.123, -52.7673, 0.44", "-30.7646, -127.654, -52.952, 0.59", "-30.7621, -128.495, -53.2025, 0.59", "-30.7322, -129.562, -53.4802, 0.74", "-30.6863, -130.349, -53.6688, 0.59", "-30.6549, -131.059, -53.8193, 0.44", "-30.6186, -132.014, -54.0283, 0.44", "-30.6122, -132.076, -54.0604, 0.44", "-30.491, -132.679, -54.5383, 0.96", "-30.3848, -133.024, -54.8766, 1.4", "-30.3692, -133.065, -54.9196, 1.4", "-30.207, -133.447, -55.3297, 1.18", "-29.2072, -135.827, -57.8582, 0.59", "-29.0081, -136.33, -58.3721, 0.88", "-28.8374, -136.803, -58.8379, 1.03", "-28.6732, -137.327, -59.3334, 0.52", "-28.5314, -137.939, -59.8417, 0.37", "-28.4531, -138.566, -60.2534, 0.37", "-28.4518, -138.615, -60.2681, 0.37", "-28.447, -138.835, -60.3316, 1.03", "-28.4329, -139.306, -60.4484, 1.03", "-28.3684, -140.031, -60.6197, 0.44", "-28.2032, -140.8, -60.8504, 0.37", "-27.9471, -141.549, -61.1077, 0.88", "-27.769, -141.988, -61.3, 1.25", "-27.6302, -142.314, -61.4636, 1.25", "-27.3638, -142.935, -61.8243, 0.81", "-26.9101, -144.085, -62.5448, 0.29", "-26.8135, -144.389, -62.7336, 0.29", "-26.646, -145.101, -63.1898, 0.37", "-26.5311, -145.756, -63.6249, 0.37", "-26.4479, -146.426, -64.0538, 0.66", "-26.4115, -146.987, -64.3727, 1.25", "-26.3767, -147.573, -64.6432, 1.4", "-26.2741, -148.618, -65.0755, 0.81", "-26.1237, -149.571, -65.4168, 0.59", "-26.011, -150.098, -65.5885, 0.29", "-25.8382, -150.779, -65.7824, 0.29", "-25.6051, -151.56, -66.1298, 0.29", "-25.517, -151.827, -66.2938, 1.03", "-25.5002, -151.873, -66.3276, 1.03", "-25.3409, -152.292, -66.6648, 1.4", "-25.1204, -152.898, -67.1884, 1.4", "-24.4801, -154.722, -68.8035, 0.52", "-24.2552, -155.467, -69.4371, 0.74", "-24.2357, -155.545, -69.4984, 0.74", "-24.1089, -156.139, -69.9276, 0.52", "-24.0118, -156.745, -70.3185, 0.52", "-23.9707, -157.26, -70.5668, 0.74", "-23.9538, -157.983, -70.8177, 0.66", "-23.9116, -159.149, -71.3668, 0.59", "-23.9074, -159.192, -71.3937, 0.59", "-23.8307, -159.691, -71.7574, 0.52", "-23.7229, -160.228, -72.1636, 1.18", "-23.5145, -161.136, -72.8484, 1.62", "-23.1367, -162.494, -73.8968, 1.18", "-22.8546, -163.409, -74.5686, 0.52", "-22.633, -164.104, -75.0453, 0.37", "-22.418, -164.763, -75.4534, 0.74", "-22.3276, -165.074, -75.6177, 1.11", "-22.1546, -166.028, -75.9695, 0.88", "-22.151, -166.583, -76.1022, 0.81", "-22.2771, -167.293, -76.2618, 0.44", "-22.463, -167.838, -76.3977, 0.59", "-22.733, -168.41, -76.581, 0.59", "-23.0954, -169.062, -76.8099, 0.37", "-23.571, -169.846, -77.0801, 0.29", "-23.885, -170.364, -77.2742, 0.81", "-24.1463, -170.834, -77.467, 1.11", "-24.5819, -171.712, -77.832, 1.4", "-24.7709, -172.139, -78.0036, 1.33", "-25.0404, -172.843, -78.2545, 0.81", "-25.2745, -173.524, -78.4479, 0.52", "-25.5702, -174.432, -78.6408, 0.44", "-25.7767, -175.115, -78.7481, 0.37", "-25.9908, -175.91, -78.7865, 0.37", "-26.1625, -176.663, -78.7823, 0.66", "-26.3014, -177.457, -78.7338, 0.96", "-26.3695, -178.072, -78.663, 1.03", "-26.3994, -178.688, -78.5619, 1.25", "-26.3328, -179.819, -78.3636, 0.81", "-26.2673, -180.306, -78.2827, 0.52", "-26.157, -180.979, -78.2045, 0.52", "-26.0808, -181.476, -78.175, 0.29", "-26.0125, -182.205, -78.1737, 0.29", "-25.9961, -183.202, -78.2653, 0.29", "-26.0736, -183.835, -78.3939, 0.81", "-26.2429, -184.484, -78.5569, 1.11", "-26.4516, -185.011, -78.7136, 1.11", "-26.7204, -185.532, -78.884, 0.74", "-27.0667, -186.062, -79.0779, 0.37", "-27.5825, -186.768, -79.3744, 0.29", "-27.7396, -187.012, -79.4735, 0.74", "-27.7695, -187.071, -79.4952, 0.74", "-27.8993, -187.47, -79.6602, 0.96", "-27.9191, -187.57, -79.7022, 0.96", "-28.0368, -188.477, -80.0561, 0.29", "-28.1197, -189.063, -80.2806, 0.29", "-28.197, -189.471, -80.4273, 0.81", "-28.4196, -190.331, -80.7144, 1.03", "-28.6002, -190.839, -80.8703, 0.81", "-28.9085, -191.493, -81.0649, 0.29", "-29.3249, -192.165, -81.2555, 0.29", "-29.5883, -192.507, -81.3565, 0.44", "-29.9261, -192.91, -81.4703, 0.44", "-30.3656, -193.367, -81.5827, 0.66", "-30.8783, -193.832, -81.7172, 0.96", "-31.1533, -194.044, -81.7949, 1.4", "-31.9136, -194.58, -82.0343, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "6.40866, 66.579, -0.184096, 1.11", "6.07826, 68.1278, -0.347792, 1.11", "5.97483, 68.575, -0.408077, 0.96", "5.81863, 69.1527, -0.509692, 0.96", "5.63044, 69.7967, -0.636889, 0.96", "5.38814, 70.5478, -0.802011, 0.96", "4.99864, 71.682, -1.06803, 0.96", "4.97427, 71.7387, -1.08685, 0.96", "4.56096, 72.6049, -1.39625, 1.11", "4.51852, 72.6863, -1.42689, 1.11", "4.15236, 73.3461, -1.68421, 1.11", "4.11668, 73.4055, -1.70829, 1.11", "3.71377, 74.0552, -1.97408, 1.33", "3.34806, 74.6575, -2.21778, 1.18", "2.97356, 75.3355, -2.47459, 0.96", "2.9434, 75.4007, -2.49653, 0.96", "2.7219, 75.9615, -2.66482, 0.88", "2.4784, 76.7108, -2.86367, 0.88", "2.46434, 76.7719, -2.87688, 0.88", "2.31871, 77.7446, -3.04813, 0.88", "2.23931, 78.7028, -3.18587, 1.11", "2.2362, 78.7947, -3.19661, 1.11", "2.24875, 79.5952, -3.26913, 1.11", "2.28144, 80.2766, -3.31598, 1.33", "2.31114, 80.7013, -3.33816, 1.33", "2.41636, 81.4641, -3.38105, 1.18", "2.55862, 82.211, -3.42802, 1.18", "2.58295, 82.2978, -3.43697, 1.18", "2.84896, 83.0233, -3.53171, 1.11", "3.16609, 83.7464, -3.6393, 1.11", "3.53069, 84.4659, -3.75323, 1.03", "3.88081, 85.1157, -3.86898, 0.88", "4.40271, 86.1145, -4.07763, 0.88", "4.45555, 86.233, -4.10618, 0.88", "4.73787, 87.0727, -4.28214, 0.88", "4.74952, 87.1355, -4.29244, 0.88", "4.73603, 87.8247, -4.36989, 0.88", "4.57548, 88.7276, -4.44924, 0.88", "4.37271, 89.3749, -4.49903, 0.88", "3.99788, 90.3649, -4.61277, 0.96", "3.90821, 90.5524, -4.6459, 0.96", "3.62652, 91.0976, -4.76615, 1.47", "3.35096, 91.6092, -4.8848, 1.62", "2.96227, 92.286, -5.04247, 1.11", "2.5817, 92.9559, -5.20972, 1.11", "2.11657, 93.7985, -5.44478, 1.11", "1.73947, 94.5323, -5.62375, 0.96", "1.40983, 95.2294, -5.76702, 0.96", "1.02293, 96.0668, -5.92918, 0.96", "0.995284, 96.1358, -5.94094, 0.96", "0.832462, 96.6435, -6.03361, 0.96", "0.633535, 97.5555, -6.26106, 1.18", "0.62054, 97.6418, -6.28834, 1.18", "0.492318, 98.7341, -6.68975, 1.18", "0.385542, 99.8555, -7.13204, 1.03", "0.305407, 100.657, -7.4509, 0.88", "0.196904, 101.74, -7.89257, 1.03", "0.119395, 102.49, -8.19918, 1.03", "0.0766584, 102.915, -8.35711, 1.03", "0.0694089, 103.029, -8.39094, 1.03", "0.0118323, 103.746, -8.55458, 1.03", "-0.00279045, 103.882, -8.5759, 1.03", "-0.119554, 104.534, -8.62059, 1.03", "-0.353439, 105.646, -8.67516, 1.18", "-0.588233, 106.632, -8.6906, 1.18", "-0.745854, 107.236, -8.68646, 1.18", "-0.931113, 107.891, -8.66734, 1.18", "-1.33516, 109.258, -8.61963, 1.18", "-1.63576, 110.223, -8.55836, 1.18", "-1.94659, 111.211, -8.47732, 1.18", "-1.96568, 111.274, -8.4728, 1.18", "-2.12012, 111.849, -8.45639, 1.18", "-2.36675, 112.891, -8.48549, 1.47", "-2.5021, 113.604, -8.54503, 1.47", "-2.6297, 114.31, -8.62142, 1.33", "-2.79796, 115.37, -8.75678, 1.03", "-3.02801, 116.829, -8.95622, 0.96", "-3.21276, 118.025, -9.13088, 0.96", "-3.33556, 118.874, -9.28015, 0.96", "-3.43183, 119.586, -9.4288, 1.11", "-3.48295, 120.004, -9.51853, 1.11", "-3.56432, 120.857, -9.70567, 1.25", "-3.58743, 121.242, -9.78804, 1.25", "-3.64095, 122.208, -10.0153, 1.03", "-3.65349, 122.353, -10.0537, 1.03", "-3.70358, 122.796, -10.1577, 1.03", "-3.76754, 123.239, -10.2482, 1.03", "-3.85595, 123.773, -10.3048, 1.03", "-4.0283, 124.652, -10.3302, 1.03", "-4.16569, 125.308, -10.2993, 1.03", "-4.31548, 125.92, -10.2169, 1.03", "-4.3483, 126.041, -10.1926, 1.03", "-4.61979, 126.986, -9.95835, 1.03", "-4.63823, 127.045, -9.94146, 1.03", "-4.98157, 128.087, -9.65562, 1.03", "-5.33461, 129.159, -9.41327, 1.03", "-5.3627, 129.251, -9.40001, 1.03", "-5.53181, 129.968, -9.32984, 1.03", "-5.54277, 130.034, -9.32436, 1.03", "-5.64902, 131.228, -9.21171, 1.03", "-5.65023, 131.366, -9.1988, 1.03", "-5.61711, 132.186, -9.14413, 1.25", "-5.5642, 133.386, -9.06986, 1.25", "-5.512, 134.397, -9.0072, 1.25", "-5.48543, 135.313, -8.97028, 0.88", "-5.48026, 136.216, -8.97668, 0.74", "-5.50508, 136.966, -9.0411, 1.18", "-5.59334, 138.142, -9.23589, 1.4", "-5.61158, 138.276, -9.27058, 1.4", "-5.77778, 139.203, -9.58301, 1.4", "-6.00726, 140.2, -9.96101, 1.18", "-6.23353, 141.107, -10.3252, 1.03", "-6.24813, 141.165, -10.3495, 1.03", "-6.46199, 142.002, -10.7181, 1.03", "-6.57131, 142.437, -10.9054, 0.88", "-6.86373, 143.659, -11.3952, 1.11", "-6.88033, 143.72, -11.4153, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "6.40866, 66.579, -0.184096, 0.52", "6.34683, 67.4394, -1.07654, 0.52", "6.22348, 68.0651, -1.79228, 0.74", "6.05493, 68.5022, -2.40737, 0.74", "5.97995, 68.6494, -2.63933, 0.74", "5.8677, 68.8772, -3.14145, 0.74", "5.73897, 69.1839, -4.06445, 0.44", "5.68093, 69.3121, -4.61402, 0.81", "5.60487, 69.5205, -5.63481, 0.81", "5.60407, 69.5324, -5.69434, 0.81", "5.6273, 70.0466, -7.86274, 1.03", "5.69732, 70.491, -9.41248, 0.81", "5.73073, 70.6555, -9.87152, 0.81", "5.78849, 71.0754, -10.8242, 0.88", "5.80566, 71.6194, -11.8616, 0.81", "5.74664, 72.0306, -12.6186, 0.81", "5.53306, 72.5653, -13.5647, 0.59", "5.37945, 72.7869, -14.0708, 0.59", "5.1055, 72.9814, -14.9524, 0.88", "5.00768, 73.0202, -16.4677, 0.88", "5.07875, 72.9502, -17.8462, 0.88", "5.16419, 72.8849, -18.5933, 1.25", "5.37482, 72.7309, -20.0219, 1.25", "5.6731, 72.5365, -21.7693, 1.11", "6.82262, 71.9892, -27.5033, 1.03", "7.19872, 71.8692, -29.1445, 0.66", "7.21689, 71.8678, -29.2098, 0.66", "7.62257, 71.9195, -30.4771, 0.52", "7.82685, 71.9896, -31.0466, 0.52", "8.16909, 72.1997, -31.8879, 0.52", "8.20176, 72.2321, -31.9409, 0.52", "9.20922, 73.1185, -33.158, 1.25", "9.435, 73.3167, -33.4373, 1.69", "9.48017, 73.3547, -33.4906, 1.69", "9.71107, 73.5591, -33.7924, 1.69", "10.6079, 74.4997, -35.3249, 0.88", "11.2255, 75.4753, -36.8723, 0.59", "11.346, 75.8321, -37.4488, 0.81", "11.358, 75.8712, -37.5171, 0.81", "11.4885, 76.2217, -38.1755, 1.11", "11.7758, 76.9518, -39.5525, 1.11", "11.9302, 77.3628, -40.2863, 0.96", "12.3062, 78.1536, -41.6783, 0.88", "12.8093, 79.1474, -43.2835, 0.81", "13.328, 80.0391, -44.6489, 0.52", "13.5503, 80.3052, -45.0796, 0.52", "13.9032, 80.6449, -45.6033, 0.59", "13.9879, 80.7138, -45.7002, 0.59", "14.6177, 81.1904, -46.271, 0.59", "15.6945, 81.9802, -47.1422, 0.81", "17.2655, 83.0256, -48.3254, 1.4", "17.8259, 83.3373, -48.7389, 1.62", "18.6538, 83.7077, -49.3109, 1.84", "18.7081, 83.7281, -49.3462, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "43.3835, 59.6588, 7.89012, 1.18", "43.3436, 60.8042, 9.19227, 1.18", "43.3798, 61.5527, 9.83092, 0.96", "43.39, 61.6142, 9.86679, 0.96", "43.6518, 62.4852, 10.2121, 0.74", "43.6759, 62.549, 10.2299, 0.74", "43.9001, 63.0424, 10.3264, 0.88", "44.2916, 63.7219, 10.3794, 0.88", "44.7394, 64.406, 10.4395, 0.59", "45.1931, 65.0091, 10.581, 0.52", "45.5751, 65.4492, 10.7539, 0.81", "46.0929, 66.0311, 11.0187, 0.52", "46.9412, 66.9307, 11.5418, 0.88", "47.0724, 67.0657, 11.6485, 0.88", "47.8009, 67.7761, 12.4186, 1.33", "47.9114, 67.8798, 12.5719, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "43.3835, 59.6588, 7.89012, 1.11", "44.4032, 59.3047, 5.48777, 1.11", "44.8012, 59.2135, 4.77786, 1.03", "45.2901, 59.1096, 4.02175, 0.88", "46.2626, 58.8994, 2.77316, 0.59", "46.826, 58.7531, 2.09311, 0.81", "47.3327, 58.6052, 1.48559, 0.81", "47.7894, 58.477, 1.00798, 1.03", "47.978, 58.4472, 0.791897, 1.03", "48.5884, 58.4096, -0.0502772, 1.03", "49.4205, 58.3249, -1.41827, 0.66", "50.0059, 58.2166, -2.58205, 0.81", "50.5064, 58.0488, -3.76868, 0.59", "50.9207, 57.832, -4.95305, 0.96", "51.4396, 57.4421, -6.67543, 0.59", "51.7525, 57.104, -7.91815, 0.59", "52.0506, 56.7083, -9.08438, 0.96", "52.3491, 56.2945, -10.0656, 0.81", "52.696, 55.8403, -10.9286, 0.81", "52.9524, 55.5655, -11.372, 0.96", "53.6175, 55.0851, -12.1957, 0.37", "54.2857, 54.8256, -12.8592, 0.37", "55.1327, 54.6836, -13.5643, 0.44", "55.7084, 54.6776, -14.0081, 0.81", "56.3866, 54.7262, -14.513, 1.03", "57.3819, 54.8038, -15.2741, 0.52", "57.73, 54.803, -15.5696, 0.44", "57.7722, 54.7952, -15.6165, 0.44", "58.5771, 54.3938, -16.6738, 0.44", "58.8475, 54.1875, -17.0574, 0.88", "59.3259, 53.7221, -17.7086, 1.03", "59.9988, 53.0275, -18.4716, 1.03", "60.6334, 52.4027, -19.0966, 0.96", "61.3379, 51.8124, -19.6583, 0.52", "61.3827, 51.7795, -19.6863, 0.52", "61.9624, 51.4606, -19.9624, 0.59", "62.7861, 51.1602, -20.2178, 0.59", "63.4134, 51.0042, -20.3262, 0.29", "64.3582, 50.8235, -20.4299, 0.29", "64.4186, 50.8126, -20.4365, 0.29", "65.1643, 50.6401, -20.5299, 0.66", "65.7627, 50.4696, -20.6156, 0.81", "66.5023, 50.1652, -20.736, 0.88", "66.6104, 50.1023, -20.7486, 0.88", "67.2042, 49.6708, -20.8088, 1.03", "67.6797, 49.3051, -20.8636, 1.03", "67.7279, 49.2663, -20.8709, 1.03", "68.342, 48.7623, -20.9665, 0.81", "69.35, 47.9535, -21.1359, 0.37", "69.8963, 47.5449, -21.2406, 0.66", "70.3523, 47.2214, -21.341, 0.66", "70.9915, 46.7884, -21.5329, 0.52", "71.5032, 46.4645, -21.7425, 0.52", "72.2199, 46.0239, -22.1141, 0.96", "72.7319, 45.6853, -22.4471, 1.25", "73.3509, 45.249, -22.8797, 1.03", "74.0088, 44.7516, -23.3687, 0.81", "74.7066, 44.2315, -23.9047, 0.66", "75.0663, 43.9885, -24.1726, 0.74", "75.4912, 43.727, -24.4692, 0.74", "76.1407, 43.3656, -24.8588, 0.37", "76.1842, 43.3444, -24.8793, 0.37", "76.8074, 43.0738, -25.1006, 0.29", "77.6893, 42.7469, -25.4655, 0.66", "78.3131, 42.5345, -25.7739, 1.03", "78.958, 42.3138, -26.1323, 0.74", "79.7024, 42.0361, -26.5891, 0.74", "80.1586, 41.8336, -26.8894, 0.96", "81.2327, 41.2505, -27.6497, 1.18", "81.6414, 41.0061, -27.9556, 0.96", "82.1675, 40.6784, -28.3494, 0.44", "82.2181, 40.6463, -28.387, 0.44", "82.8461, 40.2297, -28.8644, 0.66", "83.2553, 39.956, -29.1903, 0.81", "83.4477, 39.8288, -29.3659, 0.81", "83.8889, 39.5583, -29.8259, 0.66", "84.042, 39.4732, -29.9891, 0.66", "84.6236, 39.174, -30.5535, 0.66", "85.3058, 38.8551, -31.1607, 0.44", "86.3752, 38.3473, -32.0311, 0.37", "86.9416, 38.0534, -32.4649, 0.88", "87.7756, 37.5899, -33.0109, 0.88", "88.4719, 37.2059, -33.3808, 1.03", "89.047, 36.8981, -33.6099, 1.03", "89.6092, 36.6243, -33.7715, 0.74", "90.3182, 36.313, -33.9192, 0.52", "91.2192, 35.9498, -34.1098, 0.52", "91.98, 35.6457, -34.2831, 0.29", "92.0441, 35.6193, -34.3032, 0.29", "92.6181, 35.3354, -34.5159, 0.29", "93.0969, 35.0367, -34.7456, 0.59", "93.1648, 34.9836, -34.7862, 0.59", "93.6293, 34.4819, -35.1788, 0.88", "94.0381, 33.8907, -35.5942, 0.74", "94.3786, 33.2524, -36.0616, 0.44", "94.6029, 32.6982, -36.4771, 0.29", "94.7005, 32.3838, -36.7197, 0.59", "94.7994, 31.8958, -37.0975, 0.44", "94.8331, 31.4772, -37.4277, 0.44", "94.8008, 30.664, -38.027, 0.81", "94.7926, 30.6126, -38.0623, 0.81", "94.6823, 30.1084, -38.3473, 1.03", "94.5366, 29.4892, -38.6478, 0.88", "94.525, 29.4326, -38.6716, 0.88", "94.3994, 28.6205, -38.9716, 0.59", "94.3498, 28.0345, -39.1536, 0.59", "94.3395, 27.3729, -39.3528, 0.88", "94.347, 27.1896, -39.4064, 0.88", "94.4653, 26.2864, -39.6582, 0.37", "94.5776, 25.7447, -39.8132, 0.74", "94.7232, 25.2254, -39.9642, 0.96", "94.9285, 24.511, -40.2043, 0.96", "94.9446, 24.4543, -40.2248, 0.96", "95.1153, 23.8509, -40.4795, 1.25", "95.3872, 23.046, -40.8672, 0.44", "95.5821, 22.566, -41.1608, 0.37", "95.9133, 21.879, -41.6512, 0.96", "96.2347, 21.3087, -42.0989, 0.96", "96.7524, 20.5226, -42.7904, 0.74", "97.1861, 19.9464, -43.3795, 0.74", "97.7557, 19.285, -44.124, 0.29", "98.0559, 18.9594, -44.4772, 0.52", "98.5296, 18.4438, -44.981, 0.88", "98.9366, 17.9837, -45.3877, 1.03", "99.6327, 17.1261, -46.0253, 0.29", "99.9325, 16.7191, -46.238, 0.88", "100.533, 15.9089, -46.442, 0.81", "100.915, 15.4435, -46.4358, 0.96", "101.384, 14.9427, -46.2955, 0.59", "101.433, 14.8948, -46.2718, 0.59", "102.469, 13.968, -45.673, 0.52", "103.054, 13.4495, -45.3506, 0.52", "103.713, 12.8477, -45.0476, 0.88", "103.756, 12.8052, -45.0324, 0.88", "103.982, 12.5523, -44.9667, 1.03", "104.442, 11.9526, -44.8739, 1.03", "104.847, 11.2797, -44.8312, 0.44", "105.22, 10.5111, -44.7884, 0.44", "105.539, 9.76955, -44.7536, 0.44", "105.872, 9.01282, -44.7069, 0.52", "106.124, 8.46256, -44.671, 0.44", "106.513, 7.65679, -44.6235, 0.44", "106.786, 7.11204, -44.6063, 0.81", "107.085, 6.53653, -44.6246, 0.81", "107.47, 5.85179, -44.6753, 0.37", "107.863, 5.17949, -44.7662, 0.81", "108.125, 4.75324, -44.8347, 0.88", "108.324, 4.43524, -44.8961, 0.88", "108.658, 3.88552, -44.9913, 0.66", "109.158, 3.04187, -45.1261, 0.44", "109.598, 2.33487, -45.2454, 0.29", "109.962, 1.80974, -45.3776, 0.59", "110.318, 1.32667, -45.5366, 0.74", "110.395, 1.22449, -45.5773, 0.74", "110.738, 0.746433, -45.8292, 0.59", "111.192, 0.04064, -46.3083, 0.44", "111.633, -0.730911, -46.8777, 0.44", "111.82, -1.12262, -47.1701, 0.44", "112.036, -1.66841, -47.5639, 0.74", "112.283, -2.41509, -48.0812, 0.74", "112.497, -3.21746, -48.6112, 0.29", "112.574, -3.55996, -48.8306, 0.96", "112.666, -3.94048, -49.0589, 0.96", "112.827, -4.47919, -49.3882, 0.81", "112.847, -4.53212, -49.4191, 0.81", "113.058, -4.94915, -49.6257, 0.96", "113.407, -5.5502, -49.9293, 0.52", "113.667, -5.96648, -50.151, 0.52", "113.693, -6.00782, -50.1727, 0.52", "114.008, -6.58252, -50.4887, 0.44", "114.345, -7.26548, -50.8722, 0.59", "114.804, -8.27986, -51.4364, 0.29", "114.962, -8.64628, -51.637, 0.96", "115.209, -9.25535, -51.9701, 1.33", "115.611, -10.2895, -52.5232, 0.29", "115.969, -11.2197, -53.0071, 0.29", "116.173, -11.749, -53.2712, 0.88", "116.195, -11.8054, -53.2945, 0.88", "116.442, -12.4529, -53.5079, 0.88", "116.822, -13.4735, -53.7438, 0.29", "117.112, -14.2616, -53.8407, 0.29", "117.198, -14.5147, -53.8493, 0.66", "117.474, -15.43, -53.8407, 0.66", "117.668, -16.1045, -53.8152, 0.66", "117.842, -16.7221, -53.7776, 0.96", "117.991, -17.3023, -53.7446, 0.74", "118.148, -17.9596, -53.7026, 0.52", "118.349, -18.7868, -53.6346, 0.44", "118.403, -18.9891, -53.6214, 0.44", "118.65, -19.8312, -53.6011, 0.37", "118.968, -20.8295, -53.6119, 0.37", "119.31, -21.8871, -53.653, 0.74", "119.618, -22.7444, -53.7675, 0.29", "119.985, -23.5584, -53.9517, 0.29", "120.418, -24.3808, -54.2459, 0.74", "120.63, -24.694, -54.4185, 1.03", "120.664, -24.7347, -54.4505, 1.03", "121.423, -25.4843, -55.1978, 0.22", "122.048, -26.063, -55.8475, 0.22", "122.429, -26.4071, -56.2383, 0.81", "122.84, -26.7926, -56.6355, 0.81", "122.876, -26.8294, -56.6707, 0.81", "123.42, -27.4771, -57.1919, 0.29", "123.761, -28.0212, -57.5885, 0.44", "123.794, -28.0853, -57.6439, 0.44", "123.995, -28.4495, -57.9979, 0.44", "124.016, -28.4937, -58.0516, 0.44", "124.227, -29.0054, -58.707, 0.52", "124.471, -29.8281, -59.859, 0.52", "124.597, -30.3199, -60.6511, 0.66", "124.675, -30.6147, -61.2194, 0.59", "124.842, -31.2507, -62.6353, 0.37", "124.919, -31.5297, -63.27, 0.29", "125.074, -32.0898, -64.5723, 0.74", "125.268, -32.7754, -66.0571, 0.81", "125.501, -33.675, -67.9188, 0.29", "125.568, -33.9947, -68.6069, 0.66", "125.66, -34.3883, -69.4588, 0.29", "125.765, -34.8249, -70.396, 0.59", "125.828, -35.1057, -70.9702, 0.74", "125.956, -35.8125, -72.3179, 1.33", "126.149, -36.9863, -74.496, 0.29", "126.192, -37.2005, -74.901, 0.59", "126.23, -37.3448, -75.1773, 0.59", "126.505, -38.0464, -76.4372, 0.52", "126.681, -38.3701, -76.9757, 0.74", "126.863, -38.619, -77.3168, 0.74", "127.314, -39.1184, -77.8839, 0.37", "128.004, -39.8285, -78.7159, 0.37", "128.533, -40.3292, -79.2743, 0.37", "128.824, -40.5883, -79.5366, 0.66", "129.103, -40.8342, -79.7928, 0.88", "129.326, -41.0348, -80.0075, 0.88", "130.256, -41.89, -80.9247, 0.29", "131.018, -42.6402, -81.7185, 0.22", "131.165, -42.798, -81.8797, 0.66", "131.678, -43.3971, -82.4715, 0.22", "131.862, -43.6441, -82.7169, 0.52", "132.163, -44.1304, -83.1747, 0.29", "132.3, -44.4175, -83.4118, 0.74", "132.41, -44.737, -83.6695, 0.74", "132.587, -45.3976, -84.2024, 0.22", "132.76, -46.2008, -84.8339, 0.37", "132.823, -46.5549, -85.1401, 0.37", "132.873, -46.9438, -85.4872, 0.59", "132.922, -47.2804, -85.7855, 0.59", "132.997, -47.8587, -86.2907, 0.22", "133.037, -48.1188, -86.5099, 0.52", "133.24, -49.0191, -87.2605, 0.29", "133.352, -49.4519, -87.6632, 1.11", "133.478, -49.8951, -88.1155, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-13.3094, -187.627, -159.755, 0.29", "-14.0637, -189.212, -160.261, 0.29", "-14.5794, -190.173, -160.6, 0.29", "-15.3628, -191.243, -160.942, 0.22", "-15.9826, -191.827, -161.1, 0.74", "-16.5377, -192.218, -161.156, 0.88", "-16.6161, -192.269, -161.158, 0.88", "-17.1588, -192.53, -161.148, 0.88", "-18.7633, -193.147, -161.044, 0.29", "-20.1888, -193.61, -160.844, 0.29", "-21.635, -194.046, -160.549, 0.88", "-22.5175, -194.297, -160.34, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-13.3094, -187.627, -159.755, 0.59", "-13.4826, -188.702, -162.904, 0.59", "-13.5376, -188.992, -163.719, 0.37", "-13.6465, -189.325, -164.687, 0.37", "-13.821, -189.768, -165.935, 0.96", "-14.0003, -190.205, -167.096, 1.33", "-14.377, -191.159, -169.455, 0.59", "-14.4766, -191.442, -170.006, 0.29", "-14.5957, -191.89, -170.854, 0.29", "-14.6239, -192.213, -171.453, 0.88", "-14.6173, -192.421, -171.844, 0.88", "-14.5676, -192.863, -172.673, 0.66", "-14.4608, -193.433, -173.707, 0.88", "-14.2553, -194.333, -175.281, 1.4", "-13.8189, -196.081, -178.333, 0.59", "-13.6505, -196.847, -179.759, 0.59", "-13.5846, -197.142, -180.329, 0.52", "-13.5353, -197.34, -180.712, 1.03", "-13.4734, -197.62, -181.249, 0.88", "-13.3086, -198.617, -183.179, 0.22", "-13.2998, -199.216, -184.376, 0.59", "-13.3376, -199.824, -185.796, 0.74", "-13.3862, -200.355, -187.191, 0.44", "-13.4338, -200.653, -188.008, 0.74", "-13.5505, -201.224, -189.478, 1.11", "-13.6428, -201.541, -190.193, 0.96", "-14.0987, -202.701, -192.552, 0.74", "-14.1128, -202.724, -192.598, 0.74", "-14.3912, -203.119, -193.35, 0.74", "-14.8045, -203.734, -194.4, 0.74", "-15.2636, -204.411, -195.381, 0.37", "-15.5063, -204.801, -195.895, 1.03", "-15.7685, -205.231, -196.364, 1.18", "-16.4898, -206.438, -197.692, 0.29", "-16.7316, -206.839, -198.142, 0.59", "-16.938, -207.162, -198.48, 0.59", "-17.2487, -207.673, -198.918, 0.44", "-17.497, -208.094, -199.218, 0.29", "-17.5263, -208.141, -199.247, 0.29", "-17.7821, -208.509, -199.438, 0.59", "-17.9765, -208.92, -199.774, 0.59", "-18.0491, -209.322, -200.196, 0.44", "-18.0161, -209.752, -200.723, 0.29", "-17.8983, -210.258, -201.442, 0.88", "-17.6976, -210.815, -202.325, 1.11", "-17.1261, -212.087, -204.513, 0.74", "-16.79, -212.805, -205.782, 0.59", "-16.4148, -213.612, -207.23, 0.29", "-16.0462, -214.477, -208.803, 0.74", "-15.6442, -215.623, -210.887, 1.03", "-15.4072, -216.747, -212.892, 0.52", "-15.4289, -217.163, -213.574, 0.44", "-15.5127, -217.441, -213.988, 0.88", "-15.8073, -217.946, -214.629, 1.11", "-16.0627, -218.229, -214.903, 1.11", "-16.6616, -218.722, -215.255, 0.59", "-17.3496, -219.244, -215.548, 0.44", "-17.737, -219.562, -215.731, 0.66", "-18.4098, -220.194, -216.074, 0.59", "-18.8091, -220.727, -216.507, 0.37", "-19.0874, -221.206, -217.011, 0.44", "-19.3596, -221.797, -217.751, 0.66", "-19.5288, -222.255, -218.386, 0.81", "-19.6583, -222.692, -219.029, 0.88", "-20.2694, -224.832, -222.438, 0.52", "-20.374, -225.14, -222.988, 0.29", "-20.444, -225.3, -223.317, 0.59", "-20.5569, -225.453, -223.685, 0.59", "-20.9424, -225.727, -224.449, 0.37", "-21.4625, -225.895, -225.053, 0.37", "-22.169, -225.966, -225.419, 0.37", "-22.2292, -225.971, -225.451, 0.37", "-23.1369, -226.011, -225.909, 0.22", "-23.501, -225.997, -226.082, 0.37", "-23.8472, -225.943, -226.222, 0.37", "-24.6455, -225.76, -226.558, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "12.1947, -124.34, -67.2447, 0.29", "12.7917, -124.558, -67.6751, 0.29", "13.0578, -124.683, -67.8666, 0.37", "13.1019, -124.708, -67.8953, 0.37", "13.6326, -125.088, -68.2436, 0.22", "13.6782, -125.123, -68.2734, 0.22", "13.9722, -125.357, -68.4603, 0.52", "14.0089, -125.393, -68.4831, 0.52", "14.3212, -125.709, -68.6412, 0.52", "14.8855, -126.258, -68.8788, 0.22", "14.9259, -126.296, -68.8931, 0.22", "15.1083, -126.466, -68.9571, 0.37", "15.4333, -126.77, -69.0703, 0.22", "16.0949, -127.384, -69.2876, 0.96", "16.1368, -127.423, -69.2993, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "12.1947, -124.34, -67.2447, 0.37", "13.0235, -125.922, -68.3762, 0.37", "13.5213, -127.064, -69.1654, 0.66", "13.7356, -127.634, -69.5391, 0.88", "13.9362, -128.266, -69.9262, 1.18", "14.4644, -130.265, -71.0749, 0.44", "14.5881, -130.809, -71.3637, 0.29", "14.6882, -131.668, -71.7565, 0.88", "14.7171, -132.168, -71.9459, 1.11", "14.7432, -132.809, -72.1382, 0.66", "14.7622, -133.65, -72.2927, 0.37", "14.7941, -134.426, -72.2868, 0.52", "14.8131, -134.577, -72.2732, 0.52", "15.0292, -135.497, -72.139, 0.59", "15.2078, -136.081, -72.0318, 0.66", "15.2525, -136.209, -71.9967, 0.66", "15.5064, -136.943, -71.7587, 0.37", "15.7333, -137.775, -71.3528, 0.37", "15.8852, -138.404, -70.9891, 0.37", "16.0375, -139.063, -70.5747, 0.96", "16.2876, -140.055, -69.9108, 1.25", "16.5473, -140.923, -69.3254, 0.96", "17.2172, -143.017, -67.8076, 0.52", "17.5048, -143.872, -67.1623, 0.59", "17.6865, -144.38, -66.7716, 0.74", "17.9325, -145.012, -66.2943, 0.74", "18.3702, -146.018, -65.6158, 0.29", "18.7974, -146.903, -65.0733, 0.66", "18.828, -146.967, -65.0479, 0.66", "19.0419, -147.533, -64.8663, 0.29", "19.2109, -148.136, -64.7195, 0.74", "19.3376, -148.788, -64.6179, 0.88", "19.3506, -148.862, -64.6091, 0.88", "19.5259, -149.7, -64.5377, 0.37", "19.7406, -150.596, -64.4419, 0.59", "19.8816, -151.116, -64.3758, 0.88", "20.1504, -152.007, -64.2496, 0.29", "20.3713, -152.694, -64.1218, 0.22", "20.4761, -153.009, -64.0543, 0.81", "20.6586, -153.527, -63.9268, 1.18", "20.6855, -153.597, -63.9081, 1.18", "20.9944, -154.386, -63.6818, 1.03", "21.3481, -155.481, -63.2938, 0.29", "21.5773, -156.503, -62.912, 0.22", "21.588, -156.604, -62.8701, 0.22", "21.6108, -157.364, -62.5385, 0.29", "21.6145, -158.013, -62.2538, 1.18", "21.6266, -159.346, -61.6239, 0.74", "21.6414, -160.031, -61.2956, 0.52", "21.6803, -160.903, -60.8224, 0.29", "21.7144, -161.623, -60.3798, 0.52", "21.7593, -162.35, -59.8655, 0.96", "21.8841, -163.324, -59.1565, 1.18", "22.0508, -164.24, -58.4395, 1.03", "22.286, -165.471, -57.4284, 0.74", "22.511, -166.792, -56.3565, 0.66", "22.6068, -167.61, -55.7291, 1.03", "22.6932, -168.753, -54.936, 0.88", "22.7717, -170.075, -54.1618, 0.74", "22.8364, -171.081, -53.6925, 0.74", "22.9082, -172.027, -53.3857, 0.74", "23.0035, -173.171, -53.1389, 0.52", "23.0862, -174.097, -52.9923, 0.52", "23.1807, -175.07, -52.8729, 0.44", "23.2962, -176.001, -52.803, 0.74", "23.4044, -176.686, -52.7513, 0.96", "23.5175, -177.307, -52.7007, 0.96", "23.7671, -178.585, -52.5949, 0.37", "24.0071, -179.657, -52.5047, 0.37", "24.0225, -179.718, -52.4993, 0.37", "24.2903, -180.523, -52.4194, 0.66", "24.5073, -181.122, -52.3599, 0.88", "24.8162, -181.887, -52.2885, 0.59", "25.1506, -182.605, -52.2392, 0.22", "25.1899, -182.671, -52.2321, 0.22", "25.7085, -183.435, -52.1307, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "24.1933, -202.649, -48.8927, 0.52", "25.5514, -202.153, -50.2624, 0.52", "26.2296, -201.989, -50.9881, 0.52", "26.9095, -201.908, -51.8854, 0.66", "27.5729, -201.898, -52.8931, 0.59", "28.3723, -201.956, -54.166, 0.29", "28.5976, -202.005, -54.5799, 0.59", "28.8106, -202.118, -55.1467, 0.59", "29.3499, -202.527, -56.8087, 0.29", "29.6349, -202.803, -57.7513, 0.88", "29.7432, -202.93, -58.1691, 0.88", "30.1164, -203.479, -60.4899, 0.29", "30.2524, -203.739, -62.0436, 0.59", "30.2437, -203.799, -62.7531, 0.44", "30.2373, -203.802, -62.827, 0.44", "30.0042, -203.773, -64.5051, 0.44", "29.4755, -203.568, -67.4446, 0.29", "29.3469, -203.49, -68.0481, 0.29", "28.8328, -203.033, -70.6454, 0.29", "28.8145, -203.019, -70.727, 0.29", "28.7991, -203.006, -70.8009, 0.44", "28.7711, -202.98, -70.9464, 0.44", "28.5614, -202.788, -72.0504, 0.29", "28.3833, -202.618, -72.9769, 0.81", "26.9705, -201.24, -80.3042, 0.29", "26.6613, -200.941, -81.8767, 0.22", "26.3264, -200.647, -83.5429, 0.44", "25.632, -200.168, -86.7921, 0.29", "25.4865, -200.09, -87.429, 0.88", "25.3858, -200.062, -87.8798, 0.88", "25.3727, -200.061, -87.9529, 0.88", "24.6669, -200.09, -91.5954, 0.29", "23.8787, -200.129, -95.1769, 0.52", "23.8616, -200.13, -95.2483, 0.52", "22.7065, -200.171, -99.9284, 0.22", "22.4276, -200.167, -101.017, 0.37", "21.873, -200.138, -103.112, 0.96", "21.0989, -200.018, -105.846, 0.22", "20.9641, -199.978, -106.298, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "24.1933, -202.649, -48.8927, 0.81", "24.264, -203.104, -49.025, 0.81", "24.3452, -203.525, -49.1502, 1.03", "24.4847, -204.14, -49.3394, 0.96", "24.6284, -204.683, -49.5153, 0.74", "24.8069, -205.147, -49.6413, 0.29", "24.9378, -205.43, -49.7053, 0.29", "25.0551, -205.633, -49.7409, 0.52", "25.1754, -205.815, -49.752, 0.52", "25.3453, -206.048, -49.7402, 0.52", "25.9323, -206.854, -49.67, 0.29", "26.1856, -207.218, -49.6444, 0.52", "26.3415, -207.438, -49.6331, 0.81", "26.6562, -207.848, -49.622, 0.88", "26.9232, -208.162, -49.6426, 1.18", "27.2807, -208.555, -49.7019, 1.4", "27.8114, -209.104, -49.8553, 0.52", "28.318, -209.573, -50.037, 0.52", "28.9274, -210.102, -50.2992, 0.52", "29.5487, -210.624, -50.6041, 0.74", "29.5849, -210.655, -50.6232, 0.74", "29.9836, -211.042, -50.8569, 0.29", "30.3781, -211.513, -51.1187, 0.29", "30.7411, -212.066, -51.4076, 0.66", "30.9082, -212.388, -51.5607, 0.88", "31.1051, -212.844, -51.7446, 0.88", "31.3739, -213.558, -52.0384, 0.29", "31.4757, -213.86, -52.1697, 0.88", "31.4867, -213.906, -52.1928, 0.88", "31.548, -214.225, -52.3758, 1.03", "31.5576, -214.275, -52.4072, 1.03", "31.7168, -215.016, -52.8765, 0.74", "31.8706, -215.535, -53.2255, 0.88", "32.11, -216.219, -53.7007, 1.18", "32.2424, -216.551, -53.9267, 1.18", "32.415, -216.929, -54.1783, 0.66", "32.6756, -217.427, -54.497, 0.29", "32.9727, -217.909, -54.7882, 0.29", "33.1902, -218.234, -54.9712, 0.59", "33.4857, -218.635, -55.1787, 0.74", "33.783, -219.04, -55.3774, 0.74", "33.9794, -219.284, -55.466, 0.74", "34.1897, -219.543, -55.5231, 0.88", "34.5412, -219.969, -55.5778, 0.81", "34.9961, -220.479, -55.6279, 0.81", "35.4684, -220.967, -55.6653, 0.59", "36.3611, -221.823, -55.7299, 0.37", "36.7733, -222.19, -55.7627, 0.52", "37.1244, -222.474, -55.804, 0.44", "37.4497, -222.708, -55.8666, 0.52", "37.539, -222.767, -55.893, 0.52", "37.839, -222.978, -56.0499, 0.37", "37.9091, -223.041, -56.1079, 0.37", "38.1765, -223.328, -56.3277, 0.81", "38.3297, -223.579, -56.4625, 0.96", "38.3441, -223.619, -56.4805, 0.96", "38.4003, -223.876, -56.5785, 0.81", "38.4557, -224.424, -56.7794, 0.52", "38.4793, -224.797, -56.9126, 0.52", "38.5135, -225.453, -57.1472, 0.29", "38.5573, -226.124, -57.3882, 0.74", "38.594, -226.586, -57.5543, 0.88", "38.6869, -227.241, -57.7769, 0.52", "38.8277, -227.89, -57.9767, 0.52", "38.973, -228.352, -58.0948, 0.74", "39.1561, -228.783, -58.1836, 0.44", "39.206, -228.88, -58.1991, 0.44", "39.6209, -229.648, -58.2817, 0.44", "39.8751, -230.11, -58.2886, 0.22", "40.0943, -230.565, -58.2587, 0.22", "40.2163, -230.915, -58.2306, 0.74", "40.2281, -230.966, -58.2275, 0.74", "40.2897, -231.384, -58.2146, 0.96", "40.2921, -231.437, -58.2152, 0.96", "40.3224, -231.935, -58.2415, 0.96", "40.4052, -232.77, -58.3701, 0.44", "40.492, -233.194, -58.4339, 0.52", "40.5058, -233.243, -58.4412, 0.52", "40.6312, -233.65, -58.5047, 0.81", "40.8108, -234.209, -58.6089, 0.74", "41.0842, -235.002, -58.7741, 0.37", "41.4358, -236.01, -58.9629, 0.37", "41.5711, -236.385, -59.0136, 1.18", "41.8227, -237.075, -59.0829, 0.96", "42.0949, -237.818, -59.1354, 0.52", "42.4049, -238.67, -59.1695, 0.52", "42.7651, -239.624, -59.1815, 0.74", "43.1495, -240.62, -59.2148, 0.81", "43.1734, -240.673, -59.2152, 0.81", "43.4026, -241.095, -59.1916, 1.03", "43.4339, -241.146, -59.1856, 1.03", "43.7459, -241.61, -59.1293, 0.52", "44.0496, -242.049, -59.0946, 0.37", "44.3298, -242.474, -59.0927, 0.88", "44.6269, -242.933, -59.0961, 0.96", "44.8602, -243.287, -59.1052, 0.74", "45.1338, -243.702, -59.1331, 0.22", "45.4226, -244.113, -59.1804, 0.22", "45.6917, -244.443, -59.2563, 0.74", "45.9014, -244.655, -59.3405, 1.03", "46.1748, -244.886, -59.4779, 1.03", "46.5654, -245.133, -59.6707, 0.59", "47.1442, -245.437, -59.9545, 0.37", "47.7338, -245.723, -60.2378, 0.22", "48.1702, -245.947, -60.4408, 0.81", "48.5118, -246.14, -60.5999, 0.81", "49.098, -246.53, -60.8761, 0.29", "49.3792, -246.741, -61.0129, 0.59", "49.6468, -246.975, -61.1591, 0.74", "50.0266, -247.367, -61.3757, 0.74", "50.3413, -247.742, -61.5791, 0.52", "50.7796, -248.371, -61.9784, 0.22", "50.9714, -248.708, -62.2115, 0.22", "51.098, -248.952, -62.3823, 0.74", "51.2496, -249.283, -62.6108, 0.74", "51.5776, -250.089, -63.1581, 0.22", "51.8831, -250.977, -63.7121, 0.81", "51.9989, -251.356, -63.9213, 0.81", "52.1996, -252.017, -64.2412, 0.22", "52.3763, -252.56, -64.4678, 0.22", "52.4581, -252.795, -64.5528, 0.81", "52.5904, -253.144, -64.6558, 1.03", "52.9402, -253.953, -64.8491, 0.29", "53.0683, -254.246, -64.9214, 0.29", "53.3584, -254.921, -65.0849, 0.29", "53.6128, -255.501, -65.2132, 0.15", "53.7126, -255.737, -65.2617, 0.52", "53.7969, -255.933, -65.3033, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-22.2132, -72.2426, 3.33983, 0.96", "-21.998, -73.3392, 2.95372, 0.96", "-21.8013, -74.4958, 2.5735, 0.96", "-21.6209, -75.7865, 2.18998, 0.96", "-21.4695, -77.1201, 1.83, 0.81", "-21.3508, -78.4573, 1.45262, 0.66", "-21.2765, -79.5869, 1.13873, 0.66", "-21.2738, -79.7149, 1.10653, 0.66", "-21.2719, -80.5527, 0.897661, 0.88", "-21.263, -81.1065, 0.763143, 1.03", "-21.1157, -82.5301, 0.385619, 0.74", "-20.9333, -83.3936, 0.140171, 0.74", "-20.6406, -84.3154, -0.138184, 0.74", "-20.1883, -85.4619, -0.48499, 0.96", "-19.8634, -86.1405, -0.685264, 1.03", "-19.4073, -87.0483, -0.915784, 1.03", "-18.8681, -88.1878, -1.12898, 0.88", "-18.5727, -88.9491, -1.23774, 0.88", "-18.5254, -89.1889, -1.25559, 0.88", "-18.5761, -89.7802, -1.19894, 0.59", "-19.0315, -90.9128, -0.962192, 0.52", "-19.6125, -91.7512, -0.710682, 0.74", "-20.1287, -92.2851, -0.4624, 0.66", "-20.8574, -92.9254, -0.105925, 0.52", "-22.0135, -93.8564, 0.497085, 0.52", "-22.5967, -94.3041, 0.814383, 0.74", "-23.3492, -94.8852, 1.22376, 1.03", "-24.2945, -95.6782, 1.72054, 1.03", "-24.9422, -96.2738, 2.03635, 1.03", "-25.8261, -97.1894, 2.42663, 0.74", "-26.3771, -97.835, 2.60873, 0.66", "-26.9368, -98.5825, 2.80118, 0.52", "-27.3809, -99.289, 2.97533, 0.52", "-27.4111, -99.3454, 2.98719, 0.52", "-27.6909, -99.9498, 3.14405, 0.66", "-27.9277, -100.553, 3.31932, 0.81", "-28.2452, -101.389, 3.61033, 0.52", "-28.641, -102.42, 3.92903, 0.52", "-28.7286, -102.63, 3.95879, 0.81", "-29.0612, -103.307, 3.92755, 0.81", "-29.4036, -103.855, 3.78846, 0.96", "-29.9662, -104.549, 3.43484, 1.03", "-30.8041, -105.301, 2.86427, 1.18", "-31.8601, -106.07, 2.15012, 0.81", "-32.3787, -106.4, 1.79711, 0.88", "-33.0326, -106.759, 1.3708, 1.18", "-33.7236, -107.116, 0.959825, 1.55", "-34.7273, -107.646, 0.482589, 0.66", "-35.1867, -107.926, 0.342706, 0.66", "-35.5982, -108.247, 0.289901, 0.52", "-36.3051, -108.942, 0.280445, 0.52", "-36.8413, -109.613, 0.335724, 0.37", "-37.4154, -110.528, 0.522844, 0.37", "-37.7576, -111.211, 0.697242, 0.74", "-38.1218, -112.011, 0.943916, 1.25", "-38.1441, -112.059, 0.960272, 1.25", "-38.4927, -112.746, 1.19935, 1.18", "-39.06, -113.727, 1.53532, 1.03", "-39.4507, -114.317, 1.71094, 0.66", "-39.9402, -114.998, 1.88292, 0.37", "-40.5941, -115.861, 2.04345, 0.37", "-41.0555, -116.445, 2.12022, 0.44", "-41.1036, -116.501, 2.12384, 0.44", "-41.721, -117.167, 2.10609, 0.37", "-42.1796, -117.657, 2.079, 0.59", "-42.4609, -117.97, 2.05349, 0.59", "-42.9366, -118.555, 1.99478, 0.44", "-43.3228, -119.057, 1.94108, 0.66", "-43.7518, -119.633, 1.88261, 0.88", "-44.2235, -120.29, 1.81894, 0.88", "-44.8852, -121.217, 1.71435, 0.66", "-45.3958, -121.955, 1.61371, 0.96", "-45.7732, -122.487, 1.52905, 1.18", "-46.5907, -123.535, 1.35742, 0.88", "-46.9307, -123.905, 1.2938, 0.96", "-47.7499, -124.601, 1.16605, 0.59", "-47.7971, -124.627, 1.16071, 0.59", "-48.7397, -124.953, 1.11816, 0.59", "-49.5625, -125.122, 1.11008, 0.52", "-50.1571, -125.199, 1.12209, 0.52", "-50.7697, -125.284, 1.18739, 0.74", "-51.4121, -125.39, 1.30019, 0.96", "-52.0413, -125.521, 1.42146, 0.81", "-53.1501, -125.825, 1.64719, 0.96", "-53.8699, -126.077, 1.78573, 0.96", "-54.96, -126.513, 1.99998, 0.44", "-55.6232, -126.814, 2.12561, 0.44", "-56.3413, -127.175, 2.2416, 0.66", "-56.9477, -127.479, 2.30405, 0.59", "-57.6648, -127.841, 2.35, 0.59", "-57.7316, -127.875, 2.35029, 0.59", "-58.2882, -128.158, 2.3011, 0.88", "-59.2914, -128.741, 2.19071, 0.96", "-60.0328, -129.237, 2.09488, 0.37", "-60.1397, -129.324, 2.08703, 0.37", "-60.8167, -130.012, 2.08777, 0.37", "-61.317, -130.635, 2.13062, 0.29", "-61.7563, -131.319, 2.21537, 0.29", "-62.0606, -131.863, 2.30268, 0.52", "-62.7045, -133.019, 2.50432, 1.03", "-63.0421, -133.584, 2.60017, 1.25", "-63.3304, -134.024, 2.66474, 1.25", "-63.9256, -134.766, 2.75275, 0.88", "-64.547, -135.387, 2.7892, 0.74", "-65.2276, -135.956, 2.76049, 0.74", "-65.7841, -136.358, 2.68732, 0.96", "-66.563, -136.875, 2.56586, 0.66", "-67.2205, -137.305, 2.41698, 0.74", "-67.6112, -137.57, 2.31279, 1.03", "-68.1588, -137.982, 2.14909, 1.4", "-68.201, -138.019, 2.13563, 1.4", "-68.5975, -138.457, 2.00828, 1.4", "-69.3039, -139.506, 1.8021, 0.52", "-69.6477, -140.164, 1.69885, 0.81", "-69.877, -140.639, 1.63904, 0.88", "-70.1029, -141.128, 1.59485, 0.52", "-70.4527, -141.853, 1.53554, 0.44", "-70.7599, -142.472, 1.49528, 0.44", "-71.0629, -142.983, 1.48302, 0.44", "-71.4303, -143.465, 1.44372, 0.66", "-71.5289, -143.554, 1.44318, 0.66", "-71.9525, -143.817, 1.4707, 0.88", "-72.0371, -143.855, 1.48004, 0.88", "-72.5866, -144.093, 1.56438, 0.96", "-72.9041, -144.25, 1.62214, 0.66", "-73.6861, -144.69, 1.76802, 0.52", "-74.2191, -145.018, 1.86011, 0.44", "-74.6114, -145.288, 1.91831, 0.74", "-75.1088, -145.666, 1.97564, 0.81", "-75.7284, -146.232, 2.02481, 0.52", "-75.7792, -146.288, 2.02294, 0.52", "-76.1015, -146.689, 1.9664, 0.81", "-76.5678, -147.351, 1.85533, 0.96", "-76.8226, -147.758, 1.77903, 1.11", "-77.2, -148.368, 1.66338, 0.81", "-77.7077, -149.153, 1.48221, 0.66", "-77.7391, -149.196, 1.46966, 0.66", "-78.2563, -149.797, 1.28636, 0.52", "-78.7996, -150.237, 1.14352, 0.37", "-79.2635, -150.459, 1.10611, 0.29", "-80.0442, -150.677, 1.15758, 0.66", "-80.5033, -150.777, 1.23334, 0.74", "-81.429, -151.023, 1.46534, 0.29", "-81.8586, -151.166, 1.59797, 0.66", "-82.4471, -151.428, 1.79894, 0.88", "-83.0151, -151.75, 1.99429, 0.88", "-83.3354, -151.961, 2.1021, 0.88", "-84.2653, -152.624, 2.36354, 0.58", "-84.8655, -153.079, 2.47914, 0.81", "-85.4023, -153.497, 2.55719, 1.11", "-85.8845, -153.884, 2.59945, 0.74", "-86.4298, -154.315, 2.64626, 0.88", "-86.9718, -154.7, 2.68226, 0.81", "-87.5064, -155.032, 2.70097, 0.74", "-88.3701, -155.514, 2.73709, 0.44", "-89.173, -155.938, 2.77383, 0.74", "-89.8198, -156.251, 2.80941, 0.88", "-90.6909, -156.579, 2.92967, 0.52", "-91.1882, -156.734, 3.04545, 0.59", "-92.1092, -156.993, 3.32943, 0.59", "-92.1582, -157.007, 3.34746, 0.59", "-92.644, -157.201, 3.54543, 0.66", "-94.0046, -158.016, 4.06614, 0.59", "-94.6204, -158.52, 4.29052, 0.59", "-95.0145, -158.921, 4.39829, 0.81", "-95.5892, -159.591, 4.50529, 0.52", "-96.1911, -160.353, 4.54221, 0.66", "-96.8519, -161.276, 4.48694, 0.44", "-97.2308, -161.875, 4.39394, 1.11", "-97.9496, -163.027, 4.17772, 0.59", "-97.9836, -163.081, 4.16862, 0.59", "-98.3953, -163.704, 4.07745, 0.44", "-98.5959, -163.974, 4.04628, 0.44", "-99.2645, -164.731, 4.03783, 0.44", "-99.7318, -165.15, 4.07856, 0.37", "-100.266, -165.508, 4.17632, 0.29", "-100.726, -165.764, 4.30954, 0.66", "-101.18, -165.962, 4.47488, 1.03", "-101.745, -166.16, 4.69045, 1.03", "-102.166, -166.278, 4.84997, 0.81", "-102.892, -166.499, 5.11095, 0.52", "-103.691, -166.837, 5.3701, 0.66", "-104.135, -167.105, 5.50638, 0.29", "-104.355, -167.275, 5.56722, 0.59", "-104.753, -167.606, 5.64581, 0.81", "-105.217, -167.976, 5.70931, 0.81", "-105.815, -168.379, 5.74325, 0.52", "-106.56, -168.812, 5.72069, 0.74", "-106.611, -168.837, 5.71893, 0.74", "-107.388, -169.177, 5.69005, 0.44", "-107.937, -169.409, 5.66164, 0.74", "-108.536, -169.665, 5.62473, 1.11", "-109.419, -170.07, 5.56511, 0.59", "-109.944, -170.361, 5.52856, 0.66", "-110.469, -170.73, 5.49236, 0.81", "-111.075, -171.289, 5.4529, 0.52", "-111.46, -171.707, 5.42923, 0.66", "-111.802, -172.099, 5.40992, 0.66", "-112.145, -172.475, 5.36623, 0.44", "-112.191, -172.52, 5.35787, 0.44", "-112.909, -173.074, 5.19813, 0.37", "-113.03, -173.134, 5.1688, 0.37", "-113.861, -173.308, 4.96096, 0.37", "-114.616, -173.311, 4.72218, 0.29", "-115.066, -173.264, 4.56436, 0.37", "-115.543, -173.195, 4.41093, 0.44", "-116.199, -173.046, 4.18809, 0.37", "-117.095, -172.802, 3.88234, 0.29", "-118.085, -172.451, 3.54683, 0.22", "-118.288, -172.369, 3.48955, 0.44", "-119.215, -171.976, 3.18099, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-22.2132, -72.2426, 3.33983, 0.74", "-22.7952, -72.7249, 3.48692, 0.74", "-23.5056, -73.3173, 3.66596, 0.44", "-24.2059, -73.8907, 3.84033, 0.59", "-25.0825, -74.5841, 4.01585, 0.37", "-25.7542, -75.1219, 4.14924, 0.59", "-26.0441, -75.3514, 4.20615, 0.88", "-26.1101, -75.4018, 4.21646, 0.88", "-26.3926, -75.6106, 4.24741, 1.11", "-27.03, -75.9998, 4.29088, 0.88", "-27.8132, -76.3525, 4.3233, 0.37", "-28.2995, -76.5156, 4.33018, 0.66", "-29.0555, -76.7162, 4.30396, 0.81", "-29.7551, -76.8938, 4.26579, 0.74", "-30.7278, -77.125, 4.20056, 0.88", "-31.4131, -77.2812, 4.15498, 0.74", "-32.4641, -77.5375, 4.03842, 0.52", "-33.7145, -77.9115, 3.88932, 0.52", "-34.4675, -78.1962, 3.83729, 0.74", "-34.5343, -78.229, 3.841, 0.74", "-35.1299, -78.6395, 4.2777, 0.88", "-35.8392, -79.2249, 5.23993, 1.03", "-36.2481, -79.5824, 5.93748, 1.18", "-36.8211, -80.0768, 7.05115, 0.96", "-37.592, -80.718, 8.66096, 1.18", "-39.8318, -82.4785, 13.379, 0.66", "-40.143, -82.7291, 14.0901, 0.66", "-40.4684, -82.9997, 14.8534, 0.81", "-40.7857, -83.2652, 15.5503, 0.81", "-40.8266, -83.3019, 15.6301, 0.81", "-41.3155, -83.8191, 16.4974, 0.88", "-42.1097, -84.7436, 17.9292, 0.88", "-42.537, -85.321, 18.9394, 0.74", "-42.7148, -85.5868, 19.4311, 0.96", "-43.4587, -86.7741, 21.6067, 0.44", "-44.09, -87.8222, 23.5107, 1.25", "-44.9264, -89.2969, 26.1299, 0.59", "-45.45, -90.1699, 27.6282, 0.96", "-45.4763, -90.2129, 27.6977, 0.96", "-45.8496, -90.804, 28.5252, 0.59", "-46.2709, -91.4178, 29.1945, 0.52", "-47.1136, -92.5995, 30.1923, 0.81", "-48.1739, -94.1488, 31.209, 0.44", "-48.7154, -94.9493, 31.6812, 0.59", "-49.1847, -95.6852, 32.1378, 0.74", "-49.656, -96.4871, 32.7147, 0.44", "-50.1631, -97.4232, 33.4444, 0.44", "-50.7033, -98.4923, 34.2852, 0.29", "-51.1269, -99.4666, 35.0755, 0.44", "-51.594, -100.706, 36.201, 0.81", "-52.0467, -102.126, 37.6545, 1.03", "-52.0583, -102.175, 37.7104, 1.03", "-57.654, -110.076, 44.5335, 1.03", "-63.8545, -117.758, 51.067, 1.03", "-69.4116, -126.827, 56.3722, 1.03", "-76.4367, -135.161, 61.0501, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.6885, -44.9993, -2.70522, 1.4", "-3.30244, -45.4692, -2.99448, 1.4", "-2.71737, -46.1959, -3.5385, 1.11", "-2.09113, -47.1177, -4.33313, 0.96", "-1.67889, -47.8725, -5.05238, 0.96", "-1.41259, -48.5244, -5.71849, 1.11", "-1.14555, -49.2889, -6.50579, 1.25", "-0.864546, -50.304, -7.58568, 1.18", "-0.608105, -51.5084, -8.82927, 1.18", "-0.45948, -52.5232, -9.78832, 1.03", "-0.339353, -53.8827, -10.9036, 0.88", "-0.303546, -54.5503, -11.3485, 0.96", "-0.252048, -55.7928, -12.0051, 1.11", "-0.207549, -57.1178, -12.5281, 1.11", "-0.177415, -58.0488, -12.7695, 0.96", "-0.160836, -59.2936, -12.9696, 1.11", "-0.223797, -61.0212, -13.1324, 1.18", "-0.311733, -61.8736, -13.1969, 1.18", "-0.463516, -62.8309, -13.2604, 1.18", "-0.812644, -64.6535, -13.3824, 0.96", "-1.06822, -65.8698, -13.4733, 1.03", "-1.49764, -67.7381, -13.6481, 1.03", "-1.84308, -69.0856, -13.7999, 1.33", "-2.10263, -70.0722, -13.9379, 1.55", "-2.31157, -70.8808, -14.0888, 1.33", "-2.63269, -72.1671, -14.3829, 1.03", "-2.8599, -73.2438, -14.6518, 1.33", "-3.02571, -74.1975, -14.9029, 1.33", "-3.3098, -76.003, -15.3554, 1.25", "-3.64355, -77.9496, -15.8464, 1.03", "-3.85714, -79.0542, -16.1221, 0.96", "-4.17321, -80.4459, -16.4578, 0.96", "-4.40097, -81.3032, -16.6489, 0.96", "-4.77272, -82.5694, -16.9372, 0.96", "-5.19492, -83.7527, -17.1866, 1.11", "-5.45492, -84.3271, -17.283, 1.25", "-6.03211, -85.3228, -17.4405, 1.4", "-6.49594, -85.9174, -17.5314, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.6885, -44.9993, -2.70522, 1.11", "-3.74844, -47.86, -0.0569302, 1.11", "-3.74324, -48.5205, 0.350215, 1.11", "-3.72284, -49.5911, 0.895201, 1.03", "-3.65711, -51.2329, 1.5467, 1.11", "-3.65298, -51.3092, 1.56921, 1.11", "-3.58791, -52.6846, 1.89518, 1.11", "-3.49014, -54.2421, 2.05023, 1.11", "-3.48504, -54.3237, 2.05785, 1.11", "-3.40811, -55.7236, 2.17483, 1.11", "-3.33416, -57.4604, 2.2813, 1.03", "-3.30644, -58.5806, 2.33722, 1.33", "-3.32873, -59.9142, 2.40327, 1.18", "-3.49518, -61.5961, 2.50379, 0.88", "-3.50759, -61.6771, 2.5089, 0.88", "-3.93013, -63.5067, 2.67116, 0.88", "-4.36672, -64.9436, 2.82551, 0.88", "-4.83826, -66.1941, 2.97671, 1.11", "-5.52985, -67.8721, 3.26254, 0.88", "-5.55731, -67.9357, 3.27802, 0.88", "-6.0302, -69.1161, 3.61898, 0.88", "-6.1106, -69.3315, 3.69533, 0.88", "-6.37029, -70.3416, 4.06847, 0.96", "-6.64906, -72.3966, 4.79368, 0.81", "-6.68628, -73.0135, 4.99313, 1.18", "-6.7231, -74.0409, 5.2934, 0.96", "-6.7252, -74.1976, 5.33174, 0.96", "-6.71769, -75.6758, 5.63529, 0.74", "-6.71255, -76.7072, 5.73003, 0.96", "-6.73287, -77.5853, 5.69914, 1.03", "-6.73976, -77.7446, 5.67403, 1.03", "-6.79762, -78.7822, 5.42173, 1.33", "-6.85919, -79.8346, 5.08203, 1.55", "-6.95775, -81.4318, 4.45704, 1.25", "-6.97323, -82.6252, 3.92623, 1.4", "-6.93664, -84.2986, 3.15819, 1.55", "-6.89045, -85.4956, 2.60478, 1.11", "-6.80288, -87.0101, 1.88517, 0.74", "-6.79845, -87.093, 1.84884, 0.74", "-6.75602, -88.1455, 1.43383, 0.74", "-6.71943, -88.8987, 1.22087, 0.96", "-6.71319, -89.0038, 1.20584, 0.96", "-6.65248, -90.4297, 1.09487, 1.11", "-6.54233, -91.6226, 1.04535, 1.11", "-6.38886, -93.2229, 0.876002, 1.25", "-6.15477, -95.652, 0.525131, 0.96", "-5.9626, -97.3563, 0.19168, 0.96", "-5.80501, -98.5871, -0.091883, 1.11", "-5.44115, -101.055, -0.734968, 1.11", "-5.07051, -103.395, -1.44429, 1.25", "-4.96424, -104.09, -1.6758, 1.55", "-4.81668, -105.497, -2.23711, 1.47", "-4.81097, -105.573, -2.26188, 1.47", "-4.78569, -106.461, -2.45057, 0.88", "-4.82573, -107.66, -2.44613, 0.59", "-4.85779, -108.889, -2.20274, 0.74", "-4.88956, -109.759, -1.96328, 1.03", "-4.96553, -111.467, -1.43322, 1.03", "-5.00383, -112.215, -1.19762, 1.25", "-5.09263, -113.928, -0.647588, 1.25", "-5.15626, -115.233, -0.223711, 0.74", "-5.22667, -116.311, 0.0704214, 0.74", "-5.32796, -117.416, 0.218133, 0.96", "-5.33596, -117.487, 0.21421, 0.96", "-5.46564, -118.741, -0.00859115, 1.18", "-5.47292, -118.83, -0.0341357, 1.18", "-5.53593, -120.418, -0.550913, 1.33", "-5.53735, -122.315, -1.15258, 1.03", "-5.51195, -123.87, -1.59587, 0.88", "-5.50357, -124.456, -1.74325, 1.33", "-5.50091, -125.653, -1.99541, 1.33", "-5.52721, -126.996, -2.20288, 1.55", "-5.60861, -128.323, -2.28505, 1.33", "-5.78016, -129.532, -2.25819, 1.11", "-6.08497, -130.821, -2.16193, 0.66", "-6.49374, -132.084, -2.02259, 0.66", "-6.98943, -133.295, -1.84542, 0.74", "-7.58507, -134.566, -1.62341, 0.59", "-7.98098, -135.417, -1.45988, 0.88", "-8.3196, -136.28, -1.30584, 0.96", "-8.52778, -137.124, -1.18976, 0.88", "-8.52849, -137.203, -1.17765, 0.88", "-8.33148, -138.331, -1.00109, 0.74", "-8.05168, -139.407, -0.840345, 1.25", "-7.73394, -140.577, -0.647602, 1.25", "-7.43024, -141.878, -0.409477, 1.03", "-7.09539, -144.065, 0.0402422, 0.74", "-7.01342, -145.307, 0.32126, 0.59", "-7.05727, -146.038, 0.504093, 0.81", "-7.28362, -147.062, 0.769119, 0.88", "-7.69207, -148.249, 1.06026, 1.03", "-8.07113, -149.252, 1.24874, 1.11", "-8.16019, -149.478, 1.26057, 1.11", "-8.56944, -150.594, 1.18777, 0.96", "-8.98978, -151.859, 0.99839, 1.11", "-9.35115, -153.129, 0.715241, 0.96", "-9.80538, -154.985, 0.21312, 1.18", "-10.2483, -156.975, -0.273515, 1.03", "-10.687, -159.019, -0.732875, 0.96", "-10.7125, -159.16, -0.762387, 0.96", "-10.9082, -160.647, -1.01818, 0.96", "-10.9788, -161.736, -1.09996, 1.4", "-10.9422, -163.865, -1.01832, 1.11", "-10.9318, -163.969, -1.00401, 1.11", "-10.7546, -165.211, -0.789296, 1.25", "-10.5056, -166.825, -0.522881, 1.11", "-10.2018, -168.599, -0.270782, 0.88", "-10.0227, -169.571, -0.174593, 1.18", "-9.70218, -171.112, -0.123832, 1.25", "-9.50296, -172.165, -0.0972307, 1.4", "-9.48955, -172.255, -0.0963247, 1.4", "-9.32939, -173.813, -0.0811955, 1.03", "-9.32308, -174.056, -0.0794353, 1.03", "-9.38401, -175.387, -0.0236689, 0.74", "-9.52419, -176.531, 0.123568, 0.74", "-9.72142, -177.423, 0.308404, 0.96", "-10.1223, -178.746, 0.657137, 0.88", "-10.5915, -179.938, 1.0423, 0.88", "-11.0484, -180.955, 1.40316, 0.88", "-11.7395, -182.29, 1.93099, 1.11", "-12.2332, -183.221, 2.30342, 1.25", "-12.6888, -184.109, 2.63524, 1.4", "-12.823, -184.377, 2.71203, 1.4", "-13.1429, -185.134, 2.858, 1.4", "-13.2295, -185.362, 2.85548, 1.4", "-13.6843, -186.703, 2.56086, 1.25", "-13.9843, -187.719, 2.2383, 1.18", "-14.2075, -188.623, 1.8585, 0.96", "-14.4908, -189.904, 1.24615, 0.96", "-14.9562, -192.062, 0.0296834, 0.81", "-15.3365, -193.868, -1.14199, 0.81", "-15.5218, -194.674, -1.71803, 1.03", "-15.9965, -196.58, -3.07948, 1.03", "-16.0201, -196.672, -3.14249, 1.03", "-16.4347, -198.271, -4.1504, 1.55", "-16.9052, -200.187, -5.1466, 0.88", "-17.3537, -202.002, -5.97696, 0.81", "-17.7264, -203.413, -6.58846, 0.81", "-18.0104, -204.451, -6.99669, 0.96", "-18.2945, -205.538, -7.38813, 0.96", "-18.5539, -206.646, -7.72044, 0.74", "-18.9455, -208.463, -8.21473, 1.25", "-19.2505, -210.21, -8.69999, 0.81", "-19.2624, -210.285, -8.72066, 0.81", "-19.4424, -211.547, -8.95362, 0.81", "-19.5867, -212.536, -9.04678, 1.18", "-19.6059, -212.689, -9.04531, 1.18", "-19.717, -213.758, -8.93287, 1.18", "-19.8491, -215.625, -8.65956, 0.81", "-19.9711, -217.455, -8.3974, 0.81", "-20.0328, -218.448, -8.25358, 1.11", "-20.1473, -220.111, -8.04051, 1.11", "-20.157, -220.284, -8.0161, 1.11", "-20.185, -221.732, -7.69927, 0.96", "-20.1675, -222.439, -7.51132, 1.25", "-20.165, -222.516, -7.48985, 1.25", "-20.1089, -223.847, -7.07317, 1.25", "-20.0613, -225.982, -6.35427, 1.03", "-20.0381, -228.542, -5.46968, 0.81", "-20.0297, -229.428, -5.17221, 1.11", "-20.0055, -230.961, -4.717, 0.96", "-20.0038, -231.21, -4.65523, 0.96", "-20.0054, -232.515, -4.40122, 0.81", "-20.0095, -232.621, -4.3927, 0.81", "-20.1436, -234.436, -4.39642, 0.96", "-20.2229, -235.602, -4.40306, 1.18", "-20.2961, -236.855, -4.4156, 1.03", "-20.3022, -236.937, -4.41596, 1.03", "-20.439, -238.375, -4.41019, 0.74", "-20.6765, -240.317, -4.41051, 0.74", "-20.837, -241.376, -4.45382, 0.81", "-20.8532, -241.481, -4.46167, 0.81", "-20.9856, -242.504, -4.57733, 0.81", "-21.1298, -244.032, -4.79741, 0.81", "-21.209, -245.816, -5.15498, 1.03", "-21.2338, -247.337, -5.51525, 1.03", "-21.2359, -247.415, -5.53361, 1.03", "-21.2974, -248.462, -5.76224, 1.25", "-21.3767, -249.451, -5.96682, 0.96", "-21.5325, -250.772, -6.17716, 0.81", "-21.6729, -251.618, -6.26656, 1.11", "-21.8934, -252.885, -6.35512, 1.33", "-22.1239, -254.117, -6.44734, 1.33", "-22.1408, -254.205, -6.45629, 1.33", "-22.4269, -255.888, -6.6538, 0.74", "-22.6449, -257.648, -6.93164, 0.96", "-22.7105, -259.113, -7.23605, 0.96", "-22.7041, -259.256, -7.26632, 0.96", "-22.5347, -260.745, -7.56613, 0.96", "-22.3256, -262.082, -7.74089, 0.81", "-22.0663, -263.522, -7.81793, 0.66", "-21.8306, -264.934, -7.77377, 0.66", "-21.656, -266.284, -7.64799, 1.33", "-21.5546, -267.415, -7.45352, 1.33", "-21.4647, -269.456, -6.94129, 1.11", "-21.4271, -270.918, -6.52331, 1.18", "-21.417, -271.735, -6.27936, 1.4", "-21.3937, -272.998, -5.95819, 1.11", "-21.3076, -274.477, -5.70868, 0.59", "-21.194, -275.435, -5.63037, 0.52", "-20.9586, -276.744, -5.64208, 0.88", "-20.6656, -278.032, -5.74527, 1.18", "-20.3502, -279.431, -5.92089, 1.03", "-19.9691, -281.197, -6.21983, 0.96", "-19.6649, -282.948, -6.6081, 0.81", "-19.539, -283.98, -6.85548, 1.11", "-19.4871, -285.182, -7.15196, 1.69", "-19.5237, -286.528, -7.49976, 1.18", "-19.5327, -286.616, -7.51733, 1.18", "-19.7447, -288.021, -7.67333, 0.59", "-19.7532, -288.1, -7.66577, 0.59", "-19.7799, -289.295, -7.32608, 1.03", "-19.7732, -289.43, -7.27113, 1.03", "-19.5435, -291.18, -6.49379, 1.25", "-19.4148, -291.93, -6.16019, 1.25", "-19.0707, -293.716, -5.37656, 0.96", "-18.9017, -294.733, -4.97598, 0.66", "-18.7809, -295.64, -4.67094, 0.66", "-18.7183, -296.426, -4.47188, 0.37", "-18.7275, -297.499, -4.39246, 0.52", "-18.8576, -298.746, -4.43375, 0.81", "-19.0774, -299.734, -4.55157, 1.11", "-19.3694, -300.714, -4.73459, 1.4", "-19.7654, -301.928, -5.00625, 1.4", "-20.519, -304.04, -5.53497, 0.81", "-20.9372, -305.234, -5.87899, 0.66", "-21.2826, -306.376, -6.25125, 0.52", "-21.6112, -307.933, -6.79536, 0.37", "-21.728, -308.798, -7.10916, 0.88", "-21.7339, -308.873, -7.13376, 0.88", "-21.7802, -309.674, -7.30251, 1.25", "-21.8606, -310.606, -7.45257, 1.25", "-22.0074, -311.667, -7.55949, 0.88", "-22.4018, -313.464, -7.61207, 0.66", "-22.9048, -315.141, -7.60386, 0.66", "-23.4904, -316.727, -7.57056, 0.88", "-23.9829, -317.861, -7.57299, 0.88", "-24.4351, -318.8, -7.62389, 1.11", "-24.8428, -319.653, -7.70597, 1.18", "-25.1274, -320.321, -7.7636, 1.18", "-25.859, -322.325, -7.97222, 0.88", "-26.3587, -324.035, -8.17185, 1.25", "-26.7757, -325.918, -8.38655, 0.74", "-27.035, -327.464, -8.54184, 0.59", "-27.2503, -329.236, -8.68287, 1.03", "-27.3316, -330.306, -8.71232, 0.74", "-27.3589, -331.532, -8.63648, 0.59", "-27.3648, -331.781, -8.59582, 0.59", "-27.4493, -333.048, -8.29315, 0.74", "-27.4666, -333.127, -8.27851, 0.74", "-27.842, -334.279, -8.20928, 0.59", "-27.8741, -334.366, -8.20916, 0.59", "-28.4131, -335.884, -8.2872, 0.74", "-28.9112, -337.418, -8.42547, 0.59", "-29.4513, -339.411, -8.70405, 0.59", "-29.8816, -341.217, -9.03115, 0.59", "-30.1223, -342.495, -9.32962, 0.59", "-30.2859, -343.62, -9.63311, 0.81", "-30.3061, -343.859, -9.70913, 0.81", "-30.3064, -344.804, -10.0454, 0.81", "-30.2994, -344.87, -10.0631, 0.81", "-30.2012, -346.022, -10.2151, 0.81", "-30.1991, -346.093, -10.2128, 0.81", "-30.2163, -347.309, -10.0706, 0.66", "-30.2169, -347.379, -10.0608, 0.66", "-30.2287, -348.786, -9.84236, 0.66", "-30.1739, -350.509, -9.59563, 0.44", "-30.0341, -352.801, -9.27878, 0.66", "-29.7771, -354.78, -9.00525, 0.96", "-29.4501, -356.457, -8.77329, 0.96", "-29.4192, -356.581, -8.75747, 0.96", "-28.8762, -358.199, -8.57457, 0.81", "-28.8146, -358.351, -8.56273, 0.81", "-28.087, -360.008, -8.5449, 0.74", "-28.0532, -360.082, -8.54357, 0.74", "-27.7665, -360.864, -8.51899, 0.96", "-27.7236, -361.022, -8.525, 0.96", "-27.4899, -362.371, -8.58797, 0.96", "-27.385, -363.33, -8.66298, 0.96", "-27.3852, -363.411, -8.67391, 0.96", "-27.393, -364.633, -8.84607, 0.52", "-27.4104, -365.979, -9.05494, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-45.7182, -96.7317, -24.6669, 0.74", "-46.42, -96.7052, -24.1411, 0.74", "-46.4798, -96.7149, -24.0784, 0.74", "-47.2709, -96.983, -23.0711, 0.52", "-47.6817, -97.1505, -22.54, 0.44", "-48.3736, -97.4345, -21.6935, 0.44", "-49.0516, -97.7049, -20.9255, 0.96", "-50.3055, -98.2807, -19.5746, 0.74", "-51.0779, -98.6531, -18.8295, 0.74", "-51.4659, -98.8597, -18.5109, 0.74", "-52.0352, -99.1425, -18.1132, 0.59", "-52.5454, -99.3532, -17.8149, 0.52", "-53.286, -99.6026, -17.4605, 0.52", "-53.7961, -99.7456, -17.2683, 0.88", "-54.6502, -99.9464, -16.9562, 0.59", "-55.9416, -100.199, -16.3952, 0.96", "-57.374, -100.446, -15.6847, 1.33", "-57.9173, -100.532, -15.3851, 1.33", "-58.7911, -100.67, -14.8803, 0.44", "-59.3089, -100.737, -14.5829, 0.44", "-60.4407, -100.844, -13.987, 0.44", "-60.4987, -100.849, -13.9618, 0.44", "-61.4352, -100.892, -13.6396, 0.81", "-62.0753, -100.92, -13.3573, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-45.7182, -96.7317, -24.6669, 0.59", "-47.3437, -98.3687, -25.4788, 0.59", "-48.2152, -99.2959, -25.8463, 0.52", "-48.7333, -99.8494, -26.0705, 0.88", "-49.708, -100.822, -26.5753, 0.88", "-50.3816, -101.459, -27.093, 0.88", "-50.9833, -101.978, -27.652, 1.03", "-51.8442, -102.545, -28.5422, 0.59", "-52.5672, -102.856, -29.4894, 0.44", "-53.5073, -103.001, -30.8871, 0.74", "-55.0664, -102.791, -33.4897, 0.44", "-55.4608, -102.631, -34.1529, 0.44", "-55.9125, -102.381, -34.8838, 0.44", "-56.4457, -102.047, -35.6656, 0.74", "-56.8234, -101.829, -36.12, 0.96", "-56.8929, -101.802, -36.1775, 0.96", "-57.6671, -101.635, -36.6029, 0.88", "-59.3223, -101.366, -37.5015, 0.44", "-59.829, -101.278, -37.7729, 0.44", "-59.9066, -101.258, -37.8273, 0.44", "-60.4589, -101.053, -38.2641, 0.44", "-61.2618, -100.66, -38.9682, 0.44", "-61.7832, -100.329, -39.4439, 0.81", "-62.2512, -99.953, -39.9099, 1.33", "-63.7689, -98.6395, -41.5078, 1.33", "-64.403, -98.1093, -42.1572, 1.25", "-65.1393, -97.5266, -42.8884, 0.96", "-65.9327, -96.9595, -43.6761, 0.88", "-66.8573, -96.3516, -44.5458, 0.74", "-67.5891, -95.9095, -45.1735, 0.74", "-68.6139, -95.3253, -45.9848, 0.66", "-69.1659, -95.0135, -46.4579, 0.52", "-70.0676, -94.4945, -47.2364, 0.29", "-70.6387, -94.1228, -47.8361, 0.37", "-70.7009, -94.0758, -47.9103, 0.37", "-71.5816, -93.1699, -49.2125, 0.88", "-71.8245, -92.7988, -49.7426, 1.25", "-72.1258, -92.2605, -50.5944, 1.18", "-72.7056, -91.2893, -52.2361, 0.66", "-72.7369, -91.2449, -52.3168, 0.66", "-73.1783, -90.7214, -53.2664, 0.74", "-74.1851, -89.7733, -55.0503, 0.88", "-74.9563, -89.144, -56.3057, 0.52", "-75.5873, -88.7632, -57.1428, 0.88", "-76.3428, -88.4905, -57.8891, 1.03", "-77.1897, -88.2888, -58.618, 1.33", "-77.9861, -88.1851, -59.1873, 0.88", "-78.0675, -88.1762, -59.2388, 0.88", "-79.1063, -88.0576, -59.9446, 0.59", "-80.4015, -87.9005, -60.9824, 0.52", "-80.544, -87.8788, -61.1115, 0.52", "-80.9754, -87.7763, -61.5348, 0.81", "-82.334, -87.232, -63.1399, 0.29", "-82.3877, -87.2074, -63.2131, 0.29", "-82.8141, -86.9803, -63.9998, 0.29", "-82.9731, -86.8945, -64.3418, 0.88", "-83.1468, -86.8337, -64.7804, 1.18", "-83.9428, -86.6999, -66.9581, 0.37", "-84.437, -86.7179, -68.2788, 0.74", "-85.1141, -86.8771, -70.0934, 1.03", "-85.148, -86.8906, -70.18, 1.03", "-85.9229, -87.2775, -71.9795, 0.44", "-86.1411, -87.3894, -72.4214, 1.18", "-86.5651, -87.5799, -73.0908, 1.47", "-87.6334, -87.9796, -75.0619, 0.81", "-88.0789, -88.1198, -75.9206, 0.52", "-88.7056, -88.2957, -77.1602, 0.37", "-89.0793, -88.3888, -77.8922, 0.37", "-89.5556, -88.5127, -78.8407, 1.18", "-91.9736, -89.2065, -83.8165, 0.81", "-92.0567, -89.2318, -83.9859, 0.81", "-92.5186, -89.3966, -84.9348, 0.81", "-92.8546, -89.5147, -85.5599, 0.88", "-93.2121, -89.6613, -86.1933, 0.81", "-94.0708, -90.0674, -87.4755, 0.29", "-94.29, -90.1635, -87.6888, 0.29", "-94.6526, -90.3673, -88.1206, 0.29", "-95.2955, -90.8231, -88.9897, 1.18", "-96.6436, -92.0381, -90.8794, 0.59", "-97.0682, -92.5087, -91.444, 1.33", "-97.1215, -92.577, -91.5088, 1.33", "-98.1562, -93.9942, -92.6627, 0.74", "-98.6773, -94.7606, -93.2065, 0.66", "-99.2756, -95.6883, -93.8552, 0.37", "-99.8961, -96.6191, -94.4621, 0.88", "-100.537, -97.5796, -95.1157, 1.03", "-101.064, -98.3795, -95.694, 0.88", "-101.107, -98.4483, -95.7438, 0.88", "-102.098, -100.297, -97.1308, 0.74", "-102.535, -101.227, -97.9737, 0.44", "-102.762, -101.726, -98.49, 1.47", "-103.233, -102.705, -99.6506, 1.03", "-103.528, -103.21, -100.348, 0.74", "-103.829, -103.562, -100.921, 0.74", "-105.101, -104.498, -102.928, 0.52", "-105.734, -104.816, -103.914, 0.66", "-106.316, -105.08, -104.865, 0.37", "-106.718, -105.302, -105.696, 0.29", "-107.069, -105.524, -106.534, 0.29", "-107.459, -105.808, -107.58, 0.74", "-107.972, -106.27, -109.108, 0.96", "-108.616, -106.905, -111.246, 0.96", "-109.507, -107.769, -114.463, 0.88", "-109.529, -107.786, -114.538, 0.88", "-109.937, -108.017, -115.874, 0.88", "-110.145, -108.083, -116.463, 1.03", "-110.524, -108.153, -117.344, 1.03", "-111.2, -108.275, -118.62, 0.74", "-111.992, -108.522, -119.962, 0.37", "-112.035, -108.546, -120.045, 0.37", "-112.826, -109.156, -121.714, 0.37", "-113.493, -109.816, -123.294, 0.37", "-114.093, -110.493, -124.762, 0.88", "-114.685, -111.144, -126.117, 1.18", "-115.54, -112.051, -128.283, 0.59", "-115.574, -112.079, -128.369, 0.59", "-116.357, -112.456, -130.297, 0.44", "-116.577, -112.491, -130.938, 0.37", "-116.939, -112.44, -132.158, 0.37", "-117.758, -112.129, -134.962, 1.03", "-118.184, -111.906, -136.356, 1.03", "-118.565, -111.73, -137.49, 1.25", "-119.512, -111.425, -140.325, 1.18", "-119.54, -111.427, -140.415, 1.18", "-119.981, -111.594, -141.705, 0.59", "-120.27, -111.778, -142.425, 0.74", "-120.598, -112.051, -143.197, 0.74", "-121.688, -113.113, -145.76, 0.88", "-122.584, -114.212, -148.61, 0.52", "-122.796, -114.525, -149.45, 1.18", "-123.099, -115.103, -151.054, 1.55", "-123.237, -115.402, -151.906, 1.25", "-123.72, -116.499, -154.969, 0.74", "-124.637, -118.64, -160.724, 0.74", "-124.74, -118.906, -161.437, 1.4", "-125.188, -120.183, -164.99, 0.74", "-125.213, -120.247, -165.182, 0.74", "-125.371, -120.604, -166.355, 0.59", "-125.39, -120.63, -166.447, 0.59", "-126.418, -121.371, -169.226, 0.59", "-126.482, -121.407, -169.368, 0.59", "-127.148, -121.708, -170.666, 0.66", "-127.538, -121.874, -171.438, 0.88", "-128.931, -122.396, -174.202, 0.44", "-129.123, -122.466, -174.536, 1.03", "-130.294, -122.869, -176.007, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-31.9136, -194.58, -82.0343, 0.29", "-33.3755, -195.141, -82.7838, 0.29", "-34.2814, -195.454, -83.229, 0.29", "-35.5677, -195.865, -83.968, 0.22", "-36.131, -196.074, -84.3035, 0.81", "-36.6826, -196.299, -84.6333, 0.81", "-37.1414, -196.504, -84.9496, 0.81", "-37.8976, -196.877, -85.5513, 0.52", "-39.3369, -197.677, -86.848, 0.22", "-40.2821, -198.265, -87.751, 0.22", "-40.718, -198.565, -88.1885, 0.81", "-41.9526, -199.474, -89.4548, 0.96", "-42.2439, -199.714, -89.7986, 1.11", "-43.1522, -200.59, -91.1228, 0.22", "-43.5876, -201.038, -91.804, 0.22", "-43.8278, -201.285, -92.1961, 0.74", "-44.0922, -201.575, -92.6434, 0.96", "-45.0239, -202.692, -94.3381, 0.59", "-45.8661, -203.753, -96.0006, 0.29", "-46.4141, -204.482, -97.282, 0.22", "-46.5559, -204.667, -97.6316, 0.37", "-47.2149, -205.475, -99.2674, 0.22", "-47.7572, -206.128, -100.629, 0.81", "-47.9974, -206.41, -101.207, 1.03", "-48.7694, -207.442, -103.418, 0.37", "-49.0212, -207.809, -104.231, 0.52", "-49.6083, -208.678, -106.149, 0.29", "-49.856, -209.02, -106.881, 0.66", "-50.0705, -209.312, -107.467, 0.81", "-50.9515, -210.686, -110.169, 0.29", "-51.1652, -211.067, -110.857, 0.44", "-51.1891, -211.122, -110.954, 0.44", "-51.403, -211.641, -111.857, 0.59", "-51.6154, -212.384, -113.096, 1.03", "-51.7971, -213.853, -115.431, 1.03", "-51.7802, -215.164, -117.407, 0.29", "-51.6722, -216.383, -119.223, 0.88", "-51.6275, -216.822, -119.877, 1.25", "-51.37, -219.665, -124.156, 0.29", "-51.2275, -221.434, -126.817, 0.37", "-51.1711, -222.734, -128.711, 0.81", "-51.1524, -223.921, -130.454, 0.44", "-51.1919, -224.648, -131.511, 0.37", "-51.3287, -225.674, -132.967, 0.37", "-51.7338, -226.989, -134.687, 0.37", "-52.176, -227.991, -135.918, 0.37", "-52.5626, -228.816, -136.868, 1.11", "-52.8223, -229.358, -137.471, 1.25", "-53.4632, -230.617, -138.956, 0.81", "-54.1098, -231.716, -140.277, 0.52", "-54.4799, -232.189, -140.828, 0.52", "-54.532, -232.252, -140.907, 0.52", "-55.1964, -233.027, -141.881, 0.52", "-56.3536, -234.322, -143.63, 0.44", "-56.9086, -234.917, -144.44, 0.44", "-57.7937, -235.939, -145.938, 0.74", "-58.8697, -237.29, -147.956, 0.74", "-58.9058, -237.339, -148.027, 0.74", "-59.73, -238.603, -149.795, 0.37", "-60.0351, -239.087, -150.479, 0.81", "-61.0363, -240.572, -152.84, 0.29", "-61.3844, -241.025, -153.656, 0.29", "-61.7613, -241.462, -154.372, 0.88", "-61.9142, -241.646, -154.663, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-31.9136, -194.58, -82.0343, 0.59", "-31.5852, -197.087, -82.6688, 0.59", "-31.4731, -198.127, -82.8922, 0.59", "-31.4401, -198.418, -82.9453, 0.81", "-31.3512, -199.093, -83.0451, 0.81", "-31.205, -200.069, -83.1669, 0.15", "-31.0492, -200.965, -83.2554, 0.15", "-31.0373, -201.03, -83.2489, 0.15", "-30.951, -201.408, -83.2098, 0.59", "-30.8131, -201.967, -83.1538, 0.88", "-30.7788, -202.111, -83.1409, 0.88", "-30.6919, -202.611, -83.1087, 0.88", "-30.5941, -203.663, -83.0421, 0.52", "-30.591, -204.523, -82.9962, 0.44", "-30.6281, -205.003, -82.9761, 0.74", "-30.7144, -205.608, -82.9549, 0.44", "-30.8902, -206.441, -82.8954, 0.29", "-31.0604, -207.006, -82.8437, 0.88", "-31.2245, -207.529, -82.777, 0.96", "-31.4475, -208.34, -82.6441, 0.81", "-31.6418, -209.28, -82.4729, 0.29", "-31.7569, -210.271, -82.2973, 0.44", "-31.7767, -210.978, -82.1625, 0.22", "-31.7001, -212.111, -81.9474, 0.22", "-31.5703, -212.801, -81.804, 0.59", "-31.3376, -213.582, -81.591, 0.81", "-31.076, -214.263, -81.3788, 0.81", "-30.8581, -214.784, -81.2144, 0.88", "-30.507, -215.761, -80.899, 0.37", "-30.3142, -216.745, -80.6163, 0.59", "-30.2489, -217.713, -80.3913, 0.96", "-30.2697, -218.4, -80.2613, 0.59", "-30.3728, -219.228, -80.148, 0.29", "-30.5899, -220.376, -80.1289, 0.29", "-30.8939, -221.624, -80.2259, 0.74", "-31.0797, -222.349, -80.3352, 0.96", "-31.1049, -222.457, -80.3536, 0.96", "-31.2278, -223.045, -80.4423, 0.96", "-31.4342, -224.129, -80.5844, 0.44", "-31.5646, -224.878, -80.6618, 0.29", "-31.8076, -225.882, -80.7074, 0.59", "-32.0884, -226.696, -80.6989, 1.03", "-32.1949, -226.943, -80.6888, 1.11", "-32.4293, -227.425, -80.6496, 0.96", "-32.7312, -227.999, -80.5817, 0.96", "-33.2071, -228.855, -80.4782, 0.37", "-33.6814, -229.694, -80.39, 0.22", "-33.9644, -230.236, -80.348, 0.44", "-34.4063, -231.164, -80.2715, 0.44", "-34.6604, -231.827, -80.2078, 0.66", "-34.8409, -232.513, -80.1358, 0.88", "-34.9767, -233.244, -80.0729, 0.29", "-35.1311, -234.059, -79.9279, 0.29", "-35.1477, -234.149, -79.9055, 0.29", "-35.3103, -234.922, -79.6804, 0.29", "-35.536, -235.905, -79.3878, 0.29", "-35.805, -237.016, -79.0591, 0.29", "-36.2272, -238.408, -78.5906, 0.59", "-36.3671, -238.755, -78.4703, 0.74", "-36.7869, -239.654, -78.1745, 0.29", "-37.148, -240.352, -77.9676, 0.29", "-37.1778, -240.419, -77.95, 0.29", "-37.4154, -241.269, -77.7912, 0.81", "-37.4943, -241.805, -77.7475, 1.25", "-37.5413, -242.398, -77.7333, 0.88", "-37.5326, -243.398, -77.7421, 0.52", "-37.4542, -244.626, -77.7332, 0.29", "-37.3949, -245.244, -77.7271, 0.66", "-37.2628, -246.058, -77.7167, 0.74", "-36.9452, -247.408, -77.6447, 0.22", "-36.7192, -248.195, -77.5752, 0.22", "-36.4579, -248.984, -77.4401, 0.88", "-36.434, -249.061, -77.42, 0.88", "-36.2299, -249.757, -77.1847, 0.81", "-36.0161, -250.502, -76.9106, 0.74", "-36.0007, -250.571, -76.8854, 0.74", "-35.901, -251.579, -76.6133, 0.29", "-35.8843, -252.567, -76.4264, 0.74", "-35.9107, -252.906, -76.3776, 0.81", "-36.0903, -253.863, -76.3161, 0.22", "-36.2271, -254.336, -76.3223, 0.66", "-36.3876, -254.815, -76.3589, 0.74", "-36.4113, -254.875, -76.3688, 0.74", "-36.716, -255.562, -76.5119, 0.74", "-37.1177, -256.352, -76.7054, 0.22", "-37.4757, -256.985, -76.9536, 0.22", "-37.5034, -257.035, -76.9782, 0.22", "-37.6727, -257.397, -77.1773, 0.66", "-37.6942, -257.469, -77.2151, 0.66", "-37.7526, -257.861, -77.4203, 0.66", "-37.8656, -258.961, -77.9473, 0.52", "-37.8695, -259.016, -77.9824, 0.52", "-37.9425, -259.751, -78.4709, 0.22", "-38.025, -260.348, -78.867, 1.03", "-38.0721, -260.715, -79.1161, 1.11", "-38.1592, -261.388, -79.5567, 0.88", "-38.4842, -263.551, -80.8633, 0.22", "-38.5636, -264.072, -81.1659, 0.88", "-38.6554, -264.632, -81.494, 0.59", "-38.7837, -265.469, -81.9586, 0.52", "-38.8752, -266.231, -82.3268, 0.81", "-38.8839, -266.793, -82.6123, 0.81", "-38.7873, -267.991, -83.3254, 0.29", "-38.7789, -268.041, -83.3603, 0.29", "-38.6632, -268.476, -83.7137, 0.96", "-38.5122, -268.902, -84.1083, 1.25", "-37.6694, -270.822, -86.0511, 0.52", "-37.0343, -272.08, -87.3942, 0.44", "-36.8367, -272.425, -87.7637, 0.66", "-36.2134, -273.446, -88.8305, 0.52", "-35.4861, -274.548, -89.9377, 0.29", "-35.3012, -274.813, -90.1827, 0.59", "-35.2232, -274.927, -90.2635, 0.59", "-34.4381, -276.035, -90.899, 0.22", "-34.3938, -276.099, -90.933, 0.22", "-34.0877, -276.554, -91.0803, 0.59", "-33.9927, -276.693, -91.0994, 0.59", "-33.861, -276.882, -91.1283, 0.59", "-33.8183, -276.943, -91.1361, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.88033, 143.72, -11.4153, 0.29", "-6.70866, 144.442, -12.7457, 0.29", "-6.66427, 144.926, -13.6489, 0.29", "-6.6586, 145.585, -14.8878, 0.66", "-6.6297, 146.16, -15.9734, 0.29", "-6.61138, 146.451, -16.5183, 0.37", "-6.57564, 147.057, -17.6437, 0.37", "-6.58553, 147.718, -18.7982, 0.59", "-6.58906, 148.054, -19.3776, 0.81", "-6.61109, 148.629, -20.3598, 0.37", "-6.63425, 148.834, -20.6679, 0.88", "-6.6589, 149.165, -21.1143, 1.03", "-6.68448, 149.64, -21.6763, 0.81", "-6.71317, 150.057, -22.1161, 0.37", "-6.72049, 150.118, -22.1682, 0.37", "-6.83913, 150.847, -22.6622, 0.37", "-6.85032, 150.935, -22.7129, 0.37", "-7.02062, 151.665, -23.0473, 0.37", "-7.04162, 151.73, -23.0706, 0.37", "-7.43702, 152.709, -23.3847, 0.22", "-7.67694, 153.249, -23.5516, 0.74", "-7.70658, 153.313, -23.5695, 0.74", "-8.38499, 154.805, -23.9796, 0.29", "-8.52786, 155.106, -24.0544, 0.66", "-8.72729, 155.518, -24.1588, 0.66", "-9.0873, 156.246, -24.3541, 0.37", "-9.32324, 156.769, -24.4902, 0.29", "-9.51456, 157.301, -24.6254, 0.29", "-9.70947, 158.094, -24.8143, 0.96", "-9.72607, 158.16, -24.8305, 0.96", "-9.82656, 158.594, -24.9194, 0.66", "-9.97166, 159.258, -25.0405, 0.29", "-10.1002, 159.914, -25.176, 0.29", "-10.1097, 159.981, -25.1925, 0.29", "-10.163, 160.652, -25.3741, 1.11", "-10.1884, 161.296, -25.507, 1.47", "-10.19, 161.472, -25.5333, 1.47", "-10.1806, 162.373, -25.64, 0.66", "-10.1712, 163.077, -25.71, 0.37", "-10.1614, 163.961, -25.7943, 0.37", "-10.0624, 165.339, -25.9374, 0.29", "-9.90154, 166.796, -26.1172, 0.29", "-9.88347, 166.946, -26.1352, 0.29", "-9.75031, 167.882, -26.2313, 0.96", "-9.67015, 168.387, -26.2831, 1.18", "-9.32617, 170.035, -26.505, 0.37", "-9.1673, 170.578, -26.6347, 0.37", "-9.76903, 178.76, -32.3024, 0.37", "-8.80436, 187.763, -36.5542, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-6.88033, 143.72, -11.4153, 1.03", "-7.05713, 144.287, -11.3971, 1.03", "-7.4742, 145.64, -11.4174, 1.4", "-7.93591, 147.341, -11.4792, 1.4", "-7.9616, 147.447, -11.4837, 1.4", "-8.28387, 148.992, -11.5548, 1.25", "-8.58953, 150.629, -11.5937, 0.81", "-8.61015, 150.736, -11.5906, 0.81", "-8.83512, 151.955, -11.5207, 0.96", "-8.89944, 152.385, -11.4926, 0.96", "-9.08002, 153.598, -11.393, 1.18", "-9.28352, 154.989, -11.2308, 0.96", "-9.5314, 156.95, -11.0758, 1.18", "-9.55041, 157.111, -11.0708, 1.18", "-9.66618, 158.42, -11.1094, 1.18", "-9.69578, 159.903, -11.2591, 0.96", "-9.68915, 160.036, -11.2823, 0.96", "-9.48351, 161.821, -11.6692, 1.47", "-9.46556, 161.926, -11.6939, 1.47", "-9.15353, 163.573, -12.0001, 1.18", "-8.76919, 165.277, -12.2243, 0.81", "-8.72267, 165.468, -12.2315, 0.81", "-8.54741, 166.665, -12.1257, 0.74", "-8.54717, 166.761, -12.1041, 0.74", "-8.66204, 167.581, -11.9134, 0.74", "-8.69379, 167.683, -11.894, 0.74", "-9.04054, 168.529, -11.82, 0.81", "-9.87404, 170.367, -11.8501, 1.18", "-10.2297, 171.101, -11.9202, 1.4", "-10.8692, 172.42, -12.101, 0.96", "-11.4799, 173.691, -12.3161, 0.96", "-11.9934, 174.821, -12.5399, 0.96", "-12.5601, 176.23, -12.8824, 0.96", "-12.5983, 176.329, -12.9029, 0.96", "-12.9074, 177.07, -12.9919, 0.96", "-13.1429, 177.624, -13.0186, 1.18", "-13.2574, 177.888, -13.0129, 1.18", "-13.7293, 178.987, -12.973, 1.18", "-14.6331, 181.202, -12.9206, 0.96", "-15.3791, 183.019, -12.8812, 0.66", "-15.7421, 183.889, -12.866, 0.66", "-16.211, 185.049, -12.8771, 0.88", "-16.6581, 186.229, -12.9082, 0.88", "-17.0499, 187.348, -12.9583, 1.03", "-17.4034, 188.56, -13.0622, 1.03", "-17.4303, 188.651, -13.0686, 1.03", "-17.7211, 189.687, -13.1599, 1.11", "-18.0019, 190.782, -13.2907, 1.11", "-18.041, 190.938, -13.3127, 1.11", "-18.4217, 192.539, -13.5869, 0.96", "-18.7097, 193.656, -13.7661, 0.96", "-19.1116, 195.174, -13.9651, 1.4", "-19.3969, 196.241, -14.0783, 1.03", "-19.7237, 197.571, -14.195, 1.25", "-20.0592, 199.212, -14.2822, 0.88", "-20.288, 200.751, -14.289, 0.88", "-20.4347, 202.089, -14.226, 0.88", "-20.4512, 202.398, -14.1937, 0.88", "-20.4593, 203.514, -14.0569, 0.88", "-20.4345, 205.038, -13.9148, 0.81", "-20.383, 206.444, -13.8444, 0.81", "-20.3804, 206.54, -13.8483, 0.81", "-20.4428, 207.47, -13.9044, 0.96", "-20.6865, 209.062, -14.0574, 0.96", "-21.0586, 210.767, -14.2701, 1.03", "-21.0799, 210.849, -14.2816, 1.03", "-21.6795, 212.916, -14.6092, 1.03", "-22.1709, 214.629, -14.8843, 1.03", "-22.6321, 216.339, -15.1407, 1.03", "-22.7808, 216.984, -15.2162, 1.03", "-22.9183, 217.794, -15.2809, 1.03", "-23.0742, 219.098, -15.3634, 0.88", "-23.1444, 220.693, -15.4316, 0.88", "-23.102, 222.065, -15.4959, 1.11", "-23.045, 222.627, -15.5164, 1.11", "-22.841, 224.13, -15.6032, 1.11", "-22.8055, 224.332, -15.617, 1.11", "-22.5867, 225.377, -15.6999, 0.96", "-22.5694, 225.456, -15.7092, 0.96", "-22.2372, 227.111, -15.9695, 0.88", "-22.0202, 228.363, -16.2023, 0.66", "-21.9929, 228.555, -16.2392, 0.66", "-21.8438, 229.724, -16.4346, 0.66", "-21.8319, 229.832, -16.4482, 0.66", "-21.7013, 231.077, -16.513, 0.96", "-21.683, 231.27, -16.5062, 0.96", "-21.5063, 232.506, -16.407, 0.96", "-21.4686, 232.734, -16.3841, 0.96", "-21.3584, 233.393, -16.3146, 0.96", "-21.2086, 234.652, -16.1444, 0.96", "-21.1313, 235.565, -16.0, 1.18", "-21.0816, 236.639, -15.839, 0.74", "-21.0857, 237.913, -15.6906, 0.74", "-21.1389, 238.885, -15.6257, 1.18", "-21.3339, 240.388, -15.6512, 0.66", "-21.5652, 241.508, -15.7759, 0.66", "-21.912, 242.843, -16.0276, 0.66", "-22.3098, 244.146, -16.3583, 1.18", "-22.5995, 245.08, -16.6599, 1.18", "-23.1363, 246.897, -17.3501, 0.96", "-23.4975, 248.135, -17.8377, 0.96", "-23.7686, 249.037, -18.1639, 0.66", "-23.7903, 249.112, -18.1873, 0.66", "-24.1963, 250.588, -18.5723, 0.59", "-24.4423, 251.535, -18.7738, 1.03", "-24.963, 253.283, -19.0175, 0.81", "-25.2809, 254.218, -19.1127, 1.03", "-25.35, 254.401, -19.1308, 1.03", "-25.8079, 255.543, -19.2591, 1.03", "-25.9761, 255.927, -19.3091, 1.03", "-26.6469, 257.468, -19.5671, 0.96", "-27.1777, 258.856, -19.841, 0.96", "-27.5248, 259.92, -20.0262, 0.96", "-27.8174, 261.001, -20.1895, 1.11", "-27.9733, 261.791, -20.2858, 1.33", "-27.9872, 261.898, -20.2978, 1.33", "-28.0219, 263.353, -20.4381, 0.88", "-27.9943, 264.477, -20.4863, 1.11", "-27.983, 264.683, -20.476, 1.11", "-27.9017, 265.588, -20.3416, 1.11", "-27.8899, 265.679, -20.3196, 1.11", "-27.8057, 266.611, -19.9746, 0.88", "-27.8, 266.697, -19.9348, 0.81", "-27.7481, 267.646, -19.4937, 1.03", "-27.7268, 268.34, -19.1744, 1.03", "-27.7223, 269.49, -18.6853, 0.81", "-27.7665, 271.228, -18.0472, 0.74", "-27.8343, 272.489, -17.6693, 0.74", "-27.9537, 273.764, -17.3429, 0.88", "-28.0367, 274.477, -17.1936, 0.88", "-28.2074, 275.537, -17.0163, 0.88", "-28.3317, 276.234, -16.931, 0.88", "-28.4574, 277.192, -16.8389, 0.88", "-28.5797, 278.562, -16.6669, 0.88", "-28.62, 279.268, -16.5311, 0.88", "-28.6242, 279.469, -16.4873, 0.88", "-28.6151, 280.71, -16.1825, 0.88", "-28.5808, 282.011, -15.8731, 0.88", "-28.5127, 283.435, -15.5493, 0.44", "-28.4799, 284.734, -15.2829, 0.81", "-28.5099, 285.713, -15.1135, 1.25", "-28.5984, 286.94, -14.9314, 0.96", "-28.7948, 288.53, -14.7637, 1.33", "-28.8758, 289.019, -14.7328, 1.47", "-29.2524, 291.067, -14.698, 1.11", "-29.4803, 292.297, -14.7409, 0.96", "-29.4982, 292.391, -14.7459, 0.96", "-29.668, 293.475, -14.8207, 0.96", "-29.677, 293.56, -14.8274, 0.96", "-29.7426, 294.944, -14.9202, 0.96", "-29.7342, 295.137, -14.933, 0.96", "-29.5774, 296.941, -15.0237, 0.96", "-29.2788, 298.996, -15.1486, 0.96", "-28.9287, 300.838, -15.2697, 0.96", "-28.7167, 301.95, -15.3197, 0.96", "-28.5155, 302.943, -15.3449, 0.96", "-28.2394, 304.292, -15.3535, 1.11", "-27.8236, 306.305, -15.3244, 1.11", "-27.8113, 306.39, -15.3181, 1.11", "-27.7252, 308.2, -15.0214, 1.11", "-27.7302, 308.293, -15.0006, 1.11", "-27.8899, 309.469, -14.6707, 1.11", "-28.0641, 310.437, -14.3662, 1.18", "-28.4317, 312.087, -13.8207, 0.88", "-28.6563, 313.244, -13.4701, 0.66", "-28.6714, 313.338, -13.4476, 0.66", "-28.8398, 314.217, -13.315, 0.81", "-29.0672, 315.341, -13.238, 0.81", "-29.0841, 315.438, -13.2377, 0.81", "-29.2174, 316.488, -13.3049, 0.66", "-29.3206, 317.591, -13.3971, 1.18", "-29.461, 319.339, -13.5468, 1.03", "-29.5333, 320.445, -13.6441, 0.88", "-29.5724, 321.848, -13.781, 0.74", "-29.559, 323.449, -13.9429, 1.25", "-29.5223, 324.299, -14.0397, 1.03", "-29.5062, 324.502, -14.0603, 1.03", "-29.3279, 325.902, -14.2101, 1.03", "-29.2466, 327.037, -14.288, 1.03", "-29.2448, 327.136, -14.2843, 1.03", "-29.2929, 328.597, -14.0732, 1.25", "-29.3002, 328.689, -14.0482, 1.25", "-29.4507, 330.204, -13.5096, 1.4", "-29.7404, 332.54, -12.4932, 0.74", "-29.9398, 333.966, -11.8302, 0.59", "-29.9563, 334.09, -11.7713, 0.59", "-30.1362, 335.761, -10.9539, 0.59", "-30.2026, 336.701, -10.54, 0.81", "-30.2052, 336.79, -10.5074, 0.81", "-30.1469, 337.877, -10.2832, 0.81", "-30.1305, 338.166, -10.2537, 0.81", "-30.0588, 339.366, -10.196, 1.03", "-29.9712, 340.562, -10.1977, 1.25", "-29.9271, 341.48, -10.1469, 1.25", "-29.9241, 341.561, -10.1386, 1.25", "-29.9478, 342.74, -9.93034, 0.96", "-30.0494, 344.453, -9.54741, 0.74", "-30.1622, 345.225, -9.32922, 0.74", "-30.51, 346.95, -8.77442, 0.88", "-30.7158, 347.807, -8.4956, 0.74", "-31.1814, 349.607, -7.92951, 0.74", "-31.437, 350.508, -7.66496, 0.74", "-31.9738, 352.292, -7.21212, 0.96", "-32.2821, 353.35, -7.00488, 1.03", "-32.564, 354.404, -6.88866, 1.03", "-32.8039, 355.454, -6.82159, 1.18", "-32.9644, 356.596, -6.80897, 0.59", "-33.02, 357.273, -6.81125, 0.37", "-33.0184, 357.817, -6.82427, 0.81", "-32.9925, 358.385, -6.83632, 0.81", "-32.9229, 359.446, -6.87455, 0.81", "-32.871, 360.429, -6.9552, 0.81", "-32.8621, 361.245, -7.08077, 0.88", "-32.9026, 361.895, -7.24094, 0.81", "-33.0475, 362.939, -7.59212, 0.74", "-33.2552, 363.959, -8.00821, 0.74", "-33.5387, 364.996, -8.50643, 0.96", "-33.867, 366.028, -9.0336, 0.44", "-34.2051, 367.005, -9.54008, 0.44", "-34.5379, 367.937, -10.0024, 0.96", "-34.5731, 368.032, -10.0464, 0.96", "-34.8046, 368.735, -10.3377, 0.96", "-35.0611, 369.635, -10.6644, 0.96", "-35.1331, 369.904, -10.7384, 0.96", "-35.393, 370.73, -10.9594, 0.81", "-35.5015, 371.005, -11.0144, 0.81", "-36.0489, 372.214, -11.2226, 0.81", "-36.0892, 372.298, -11.2345, 0.81", "-36.6385, 373.409, -11.3623, 0.96", "-37.2418, 374.687, -11.478, 0.81", "-37.9979, 376.355, -11.581, 0.81", "-38.0335, 376.444, -11.5841, 0.81", "-38.4016, 377.602, -11.5856, 0.81", "-38.4211, 377.696, -11.5854, 0.81", "-38.4314, 378.81, -11.639, 0.59", "-38.4208, 378.953, -11.6461, 0.59", "-38.3043, 379.737, -11.7363, 0.59", "-38.1178, 380.851, -11.8735, 0.59", "-37.8523, 382.157, -12.0571, 0.81", "-37.4148, 384.041, -12.3398, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "18.7081, 83.7281, -49.3462, 0.52", "20.6251, 85.1491, -50.0251, 0.52", "20.6718, 85.1893, -50.0441, 0.52", "21.5308, 86.1219, -50.4527, 0.44", "21.5791, 86.1872, -50.4808, 0.44", "22.0208, 86.7637, -50.7343, 0.88", "22.4711, 87.3045, -50.9506, 1.11", "22.5137, 87.3623, -50.9709, 1.11", "23.088, 88.0462, -51.1725, 1.03", "23.9941, 88.999, -51.3941, 0.37", "25.2385, 90.0509, -51.6155, 0.44", "25.9495, 90.5543, -51.7005, 0.44", "26.0645, 90.6316, -51.7132, 0.44", "26.6936, 91.068, -51.8409, 0.44", "26.7683, 91.1273, -51.8709, 0.44", "27.677, 92.0095, -52.4423, 0.96", "27.9177, 92.3348, -52.6714, 1.33", "28.3783, 93.0867, -53.1975, 1.18", "28.9892, 94.2189, -53.9661, 0.81", "29.5391, 95.4436, -54.7415, 0.37", "29.5678, 95.5142, -54.7821, 0.37", "29.8025, 96.2295, -55.1328, 0.66", "29.9732, 96.7049, -55.3379, 0.88", "30.0271, 96.8638, -55.3912, 0.88", "30.2772, 97.5981, -55.6049, 0.88", "30.5958, 98.5159, -55.8812, 0.74", "30.8538, 99.3115, -56.1562, 0.59", "31.1821, 100.42, -56.5836, 1.03", "31.382, 101.265, -56.9455, 0.29", "31.5516, 102.242, -57.3687, 0.81", "31.6011, 102.744, -57.5867, 0.88", "31.6055, 103.326, -57.8273, 0.96", "31.5964, 103.903, -58.072, 0.66", "31.5424, 104.929, -58.4823, 0.22", "31.5002, 105.888, -58.8432, 1.62", "31.4697, 106.555, -59.0663, 1.99", "31.4389, 107.153, -59.2507, 1.77", "31.3423, 108.397, -59.6134, 1.25", "31.2317, 109.32, -59.8584, 0.81", "31.1184, 110.027, -60.0239, 0.66", "30.9669, 110.777, -60.1883, 0.81", "30.7604, 111.668, -60.3551, 0.29", "30.475, 112.724, -60.5175, 0.29", "30.2921, 113.272, -60.5687, 0.44", "30.2684, 113.345, -60.5742, 0.44", "30.0082, 114.176, -60.6448, 0.59", "29.8514, 114.738, -60.6997, 1.11", "29.6987, 115.363, -60.7757, 1.11", "29.5169, 116.165, -60.882, 0.88", "29.265, 117.324, -61.0531, 0.52", "28.9882, 118.62, -61.2513, 0.52", "28.7423, 119.815, -61.4366, 0.66", "28.5533, 120.806, -61.5914, 0.29", "28.3968, 121.765, -61.7399, 0.81", "28.3878, 121.843, -61.7515, 0.81", "28.3646, 122.357, -61.8189, 1.03", "28.3742, 122.539, -61.8384, 1.03", "28.4465, 123.161, -61.9078, 1.03", "28.5538, 123.854, -61.9882, 0.96", "28.6406, 124.462, -62.0834, 0.66", "28.7044, 125.246, -62.2511, 0.52", "28.6936, 125.774, -62.41, 0.44", "28.5947, 126.745, -62.765, 0.44", "28.561, 126.892, -62.8312, 0.44", "28.366, 127.425, -63.1063, 0.37", "28.0456, 128.067, -63.467, 0.37", "27.5662, 128.875, -63.9155, 1.03", "27.5316, 128.935, -63.9465, 1.03", "27.2548, 129.464, -64.1896, 1.18", "27.0064, 130.008, -64.4075, 0.59", "26.759, 130.658, -64.6243, 0.37", "26.5378, 131.39, -64.824, 0.29", "26.2752, 132.39, -65.0241, 0.22", "26.1501, 132.869, -65.1074, 0.44", "26.11, 133.03, -65.1317, 0.44", "25.8993, 133.699, -65.1767, 0.44", "25.8708, 133.769, -65.1731, 0.44", "25.412, 134.753, -65.0521, 0.74", "25.017, 135.526, -64.93, 1.33", "24.5142, 136.482, -64.7576, 1.4", "23.7287, 137.973, -64.4793, 0.52", "23.2241, 138.94, -64.3088, 0.59", "22.8618, 139.658, -64.2054, 0.74", "22.6328, 140.151, -64.1562, 0.74", "22.5986, 140.233, -64.1533, 0.74", "22.3845, 140.821, -64.1867, 0.44", "22.1506, 141.644, -64.3437, 0.52", "22.0195, 142.188, -64.4649, 0.66", "21.897, 142.682, -64.5549, 0.44", "21.7233, 143.368, -64.6605, 0.22", "21.4663, 144.326, -64.7982, 0.66", "21.3355, 144.799, -64.8773, 0.88", "21.1473, 145.458, -65.0021, 0.29", "20.9089, 146.249, -65.1688, 0.22", "20.7454, 146.774, -65.2913, 0.37", "20.5879, 147.309, -65.4458, 0.52", "20.3852, 148.117, -65.7435, 0.29", "20.291, 148.541, -65.9068, 0.59", "20.2592, 148.706, -65.9623, 0.59", "20.1981, 149.167, -66.0783, 0.59", "20.1906, 149.242, -66.0902, 0.59", "20.1262, 149.942, -66.1597, 0.59", "20.0043, 150.982, -66.1936, 0.44", "19.8872, 151.834, -66.2095, 0.59", "19.7783, 152.54, -66.2235, 1.03", "19.6525, 153.242, -66.2457, 1.03", "19.5039, 153.941, -66.2876, 0.81", "19.3226, 154.669, -66.3574, 0.59", "19.1066, 155.429, -66.4734, 0.37", "18.7814, 156.491, -66.6981, 0.37", "18.5068, 157.359, -66.9021, 0.37", "18.2863, 158.057, -67.0795, 0.44", "18.0617, 158.79, -67.2779, 0.44", "17.8643, 159.486, -67.4532, 0.29", "17.6156, 160.393, -67.6508, 0.29", "17.4427, 161.103, -67.769, 0.81", "17.2853, 161.796, -67.8287, 1.11", "17.1332, 162.503, -67.8473, 0.81", "16.9088, 163.546, -67.8368, 0.52", "16.8927, 163.62, -67.834, 0.52", "16.6634, 164.546, -67.8044, 0.52", "16.376, 165.541, -67.8069, 0.29", "16.1577, 166.219, -67.8339, 0.59", "15.9121, 166.885, -67.9127, 0.81", "15.8544, 167.023, -67.9432, 0.81", "15.6049, 167.63, -68.0944, 0.81", "15.3879, 168.219, -68.2475, 0.66", "15.3628, 168.299, -68.2692, 0.66", "15.144, 169.044, -68.457, 0.44", "14.887, 169.938, -68.6783, 0.37", "14.6546, 170.771, -68.8808, 0.37", "14.4049, 171.672, -69.1009, 0.52", "14.1969, 172.4, -69.287, 0.37", "14.0175, 172.975, -69.4509, 0.37", "13.8237, 173.575, -69.6335, 0.81", "13.6341, 174.131, -69.8183, 0.88", "13.454, 174.608, -69.9923, 0.59", "13.3432, 174.892, -70.0989, 0.44", "13.0403, 175.76, -70.3937, 0.37", "12.7298, 176.811, -70.701, 0.37", "12.6225, 177.344, -70.8376, 0.66", "12.6115, 177.428, -70.8568, 0.66", "12.5748, 178.272, -71.0053, 0.74", "12.5725, 178.703, -71.0733, 0.88", "12.6249, 179.695, -71.2045, 0.59", "12.7239, 180.685, -71.3253, 0.29", "12.736, 180.77, -71.3344, 0.29", "12.9672, 182.114, -71.4627, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "18.7081, 83.7281, -49.3462, 0.59", "19.0359, 84.596, -49.2216, 0.59", "19.2627, 85.2226, -49.1167, 0.29", "19.4446, 85.7476, -49.0292, 0.29", "19.6743, 86.4414, -48.9175, 0.29", "20.1721, 88.0428, -48.6661, 0.29", "20.4789, 89.0836, -48.5109, 0.74", "20.6518, 89.7713, -48.4203, 0.74", "20.812, 90.4861, -48.3448, 0.52", "20.9015, 90.9209, -48.3143, 0.44", "21.0074, 91.4614, -48.2907, 0.29", "21.1296, 92.0993, -48.2891, 0.29", "21.3024, 92.9401, -48.3124, 0.66", "21.4281, 93.4835, -48.3178, 0.96", "21.5696, 93.9804, -48.3087, 0.66", "21.6292, 94.1614, -48.3012, 0.66", "21.8275, 94.7036, -48.2684, 0.44", "22.023, 95.263, -48.2228, 0.29", "22.2044, 95.8182, -48.1697, 0.22", "22.4443, 96.7401, -48.018, 0.29", "22.4582, 96.8161, -48.0028, 0.29", "22.5562, 97.5405, -47.8451, 0.37", "22.616, 98.3386, -47.6723, 0.66", "22.6314, 98.8984, -47.5529, 0.96", "22.6616, 100.175, -47.2975, 0.81", "22.7029, 100.979, -47.1478, 0.59", "22.7129, 101.065, -47.1343, 0.59", "22.8822, 101.981, -47.0215, 0.59", "23.0285, 102.546, -46.9745, 0.66", "23.4231, 103.723, -46.921, 0.22", "23.6703, 104.295, -46.9264, 0.22", "24.0224, 104.991, -46.9271, 0.74", "24.3323, 105.577, -46.9249, 0.81", "24.375, 105.657, -46.9242, 0.81", "24.6932, 106.307, -46.918, 0.88", "24.9309, 106.836, -46.9066, 0.81", "25.2057, 107.481, -46.8975, 0.29", "25.6056, 108.61, -46.8897, 0.29", "26.1065, 110.239, -46.89, 0.74", "26.3139, 111.037, -46.8966, 1.11", "26.4599, 111.748, -46.9108, 0.88", "26.6446, 112.929, -46.9334, 0.22", "26.7952, 114.172, -46.958, 0.22", "26.8086, 114.296, -46.9642, 0.22", "26.8436, 114.609, -47.0038, 0.22", "26.9375, 115.318, -47.1278, 0.74", "26.9954, 115.762, -47.2168, 1.11", "27.1005, 116.608, -47.4355, 1.25", "27.2307, 117.571, -47.708, 0.74", "27.3972, 118.869, -48.1147, 0.22", "27.4907, 119.649, -48.3673, 0.37", "27.6059, 120.693, -48.7036, 0.37", "27.7592, 122.184, -49.1581, 0.52", "27.8212, 122.792, -49.3269, 0.88", "27.951, 124.072, -49.6257, 1.03", "28.0452, 124.878, -49.7868, 0.66", "28.1649, 125.778, -49.9483, 0.29", "28.3169, 126.777, -50.0993, 0.22", "28.4518, 127.624, -50.1848, 0.22", "28.5856, 128.434, -50.2531, 0.44", "28.6847, 128.972, -50.2847, 0.59", "28.8518, 129.742, -50.3368, 0.37", "29.0406, 130.49, -50.3909, 0.29", "29.3006, 131.365, -50.4562, 0.44", "29.596, 132.176, -50.5448, 0.29", "30.0067, 133.049, -50.7229, 0.66", "30.2634, 133.581, -50.8638, 1.03", "30.4278, 133.915, -50.9675, 1.25", "30.7331, 134.584, -51.1921, 0.44", "31.1432, 135.619, -51.5543, 0.52", "31.5485, 136.853, -51.9948, 0.29", "31.9602, 138.338, -52.5123, 0.29", "31.9895, 138.446, -52.5469, 0.29", "32.1718, 139.122, -52.7607, 0.29", "32.4732, 140.051, -53.0325, 0.81", "32.5062, 140.133, -53.051, 0.81", "32.7748, 140.652, -53.1636, 0.88", "33.2503, 141.392, -53.4089, 0.88", "33.6589, 142.037, -53.6518, 0.44", "34.1905, 142.902, -54.003, 0.22", "34.6612, 143.751, -54.4199, 0.22", "35.1923, 144.836, -55.0049, 0.81", "35.5545, 145.721, -55.5069, 0.88", "35.7584, 146.354, -55.8546, 0.96", "35.906, 146.899, -56.1392, 0.96", "36.1983, 148.264, -56.8499, 0.44", "36.2157, 148.34, -56.8874, 0.44", "36.4104, 149.085, -57.1758, 0.44", "36.7084, 150.125, -57.5172, 0.66", "36.7604, 150.298, -57.5708, 0.66", "36.904, 150.778, -57.7493, 0.88", "37.1509, 151.596, -58.068, 0.52", "37.3868, 152.324, -58.3979, 0.37", "37.9046, 153.969, -59.2528, 1.11", "38.0114, 154.362, -59.4735, 1.25", "38.3557, 155.937, -60.3601, 0.22", "38.3657, 156.013, -60.4032, 0.22", "38.3718, 156.574, -60.7486, 0.22", "38.3129, 157.267, -61.1773, 0.22", "38.2333, 157.727, -61.4186, 0.74", "38.1414, 158.162, -61.6344, 1.03", "37.9863, 158.831, -61.9202, 0.81", "37.7411, 159.984, -62.4229, 0.52", "37.661, 160.386, -62.6435, 0.37", "37.5459, 161.15, -63.1391, 0.29", "37.4853, 161.92, -63.6674, 0.59", "37.497, 162.384, -63.9845, 0.96", "37.552, 162.835, -64.2835, 1.11", "37.8003, 164.22, -65.0792, 0.37", "37.8154, 164.296, -65.1203, 0.37", "37.9645, 165.138, -65.5037, 0.29", "38.0832, 166.018, -65.7688, 0.29", "38.0867, 166.104, -65.7841, 0.29", "38.0418, 167.013, -65.8465, 0.37", "38.0066, 167.475, -65.8359, 0.59", "37.9263, 168.415, -65.8051, 0.74", "37.8449, 169.186, -65.7731, 0.52", "37.7347, 170.357, -65.7207, 0.22", "37.6984, 171.175, -65.6892, 0.22", "37.6975, 171.826, -65.7001, 0.22", "37.726, 172.774, -65.7693, 0.74", "37.7774, 173.589, -65.8719, 0.88", "37.8363, 174.324, -65.998, 0.74", "37.9217, 175.229, -66.1752, 0.66", "38.0386, 176.746, -66.4947, 0.29", "38.0837, 177.77, -66.719, 0.29", "38.1052, 178.306, -66.8421, 0.44", "38.1142, 178.492, -66.884, 0.44", "38.1516, 179.027, -66.9906, 0.44", "38.2084, 179.539, -67.0671, 0.29", "38.3058, 180.049, -67.1034, 0.74", "38.5097, 180.761, -67.1416, 0.96", "38.6365, 181.12, -67.1595, 0.88", "38.9729, 181.978, -67.2015, 0.29", "39.2195, 182.561, -67.2295, 0.44", "39.5466, 183.305, -67.2636, 0.29", "39.9905, 184.399, -67.3086, 0.37", "40.1774, 184.864, -67.3257, 0.59", "40.4669, 185.542, -67.3513, 0.74", "40.6462, 185.966, -67.3672, 0.52", "40.8685, 186.495, -67.3749, 0.37", "41.3822, 187.749, -67.3383, 0.52", "41.8009, 188.782, -67.2736, 0.44", "42.4228, 190.295, -67.1475, 0.88", "42.6804, 190.898, -67.0892, 1.25", "42.9367, 191.505, -67.0274, 1.03", "43.3376, 192.46, -66.9237, 0.29", "43.6714, 193.291, -66.8324, 0.44", "43.9776, 194.251, -66.7603, 0.37", "44.2148, 195.188, -66.7294, 0.74", "44.4298, 196.17, -66.7468, 0.74", "44.4444, 196.256, -66.7531, 0.74", "44.5645, 197.246, -66.8588, 0.74", "44.6584, 198.342, -66.98, 0.22", "44.7043, 198.91, -67.0421, 0.52", "44.7587, 199.547, -67.1063, 0.96", "44.8584, 200.538, -67.195, 0.22", "44.9612, 201.343, -67.2543, 0.66", "45.083, 202.071, -67.2922, 1.03", "45.2892, 203.077, -67.2745, 0.81", "45.5153, 204.169, -67.2127, 0.52", "45.6343, 204.789, -67.1723, 0.44", "45.8494, 206.083, -67.0853, 0.37", "46.0048, 207.23, -67.0093, 0.88", "46.1608, 208.488, -66.9301, 1.25", "46.2567, 209.225, -66.889, 0.88", "46.4105, 210.214, -66.8482, 0.44", "46.5844, 211.289, -66.8268, 0.59", "46.6952, 211.927, -66.8312, 0.81", "46.8319, 212.63, -66.859, 0.59", "47.0318, 213.511, -66.9229, 0.37", "47.4143, 214.934, -66.9929, 0.52", "47.6696, 215.844, -67.0086, 0.37", "47.7775, 216.265, -67.0142, 0.74", "47.8979, 216.9, -67.0203, 0.88", "47.9287, 217.252, -67.0367, 0.88", "47.9448, 217.89, -67.1451, 1.11", "47.9762, 218.534, -67.3203, 1.03", "48.0248, 219.138, -67.5206, 0.37", "48.1071, 219.857, -67.7826, 0.37", "48.2923, 220.927, -68.2209, 0.66", "48.6435, 222.553, -68.8982, 0.29", "48.9092, 223.625, -69.3345, 0.52", "48.9286, 223.696, -69.3621, 0.52", "49.1018, 224.289, -69.5699, 0.66", "49.4147, 225.329, -69.8647, 0.37", "49.7588, 226.513, -70.103, 0.66", "49.9891, 227.391, -70.2186, 0.59", "50.1371, 228.026, -70.2684, 0.74", "50.3252, 228.872, -70.2928, 0.37", "50.5778, 230.022, -70.1837, 0.59", "50.6154, 230.193, -70.1497, 0.59", "50.7674, 230.861, -69.988, 0.37", "51.0785, 232.182, -69.6379, 0.29", "51.3471, 233.318, -69.3531, 0.52", "51.7752, 235.136, -68.9151, 0.22", "52.0644, 236.255, -68.6763, 0.52", "52.2106, 236.848, -68.5772, 0.81", "52.356, 237.544, -68.5047, 0.52", "52.5757, 238.782, -68.4872, 0.74", "52.5859, 238.87, -68.4933, 0.74", "52.6209, 240.03, -68.6701, 1.33", "52.5936, 240.937, -68.7995, 0.88", "52.5049, 241.968, -68.9272, 0.66", "52.3596, 242.965, -69.0186, 0.52", "52.1446, 244.13, -69.1102, 0.52", "51.9439, 245.08, -69.1859, 0.52", "51.6698, 246.141, -69.273, 0.29", "51.4913, 246.881, -69.3342, 0.52", "51.3162, 247.574, -69.3853, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "47.9114, 67.8798, 12.5719, 0.59", "48.9256, 69.1649, 8.22268, 0.59", "49.5716, 69.8559, 6.13205, 0.74", "49.6023, 69.8859, 6.04778, 0.74", "49.949, 70.2134, 5.23379, 0.74", "50.5938, 70.7327, 3.98128, 0.96", "50.6384, 70.7615, 3.90305, 0.96", "51.295, 70.9946, 3.22303, 0.96", "51.3594, 71.0137, 3.15657, 0.96", "52.5645, 71.4058, 1.81809, 0.52", "53.3258, 71.6798, 0.908742, 0.52", "54.3403, 72.0654, -0.332521, 0.81", "54.8996, 72.2891, -0.999775, 0.88", "55.8556, 72.6603, -2.19734, 0.52", "56.1489, 72.7759, -2.54646, 0.74", "56.2539, 72.827, -2.69509, 0.74", "56.5964, 73.0639, -3.28868, 0.29", "56.9965, 73.4198, -4.05357, 0.59", "57.5811, 74.1206, -5.54556, 0.74", "57.883, 74.536, -6.40652, 0.59", "58.5398, 75.5706, -8.54033, 1.03", "58.5795, 75.6383, -8.67185, 1.03", "58.7006, 75.8701, -9.09953, 0.74", "59.1806, 76.9288, -10.8312, 0.44", "59.3767, 77.3781, -11.4472, 0.59", "59.7903, 78.2106, -12.5356, 0.66", "60.1236, 78.7075, -13.1167, 0.74", "60.1637, 78.7612, -13.1809, 0.74", "60.3246, 78.9563, -13.4096, 0.74", "60.3683, 79.0031, -13.4586, 0.74", "61.2148, 80.1108, -14.674, 0.29", "61.3864, 80.5017, -15.084, 0.66", "61.4104, 80.6376, -15.2268, 0.66", "61.4397, 80.9578, -15.6138, 0.88", "61.4336, 81.0191, -15.7002, 0.88", "61.1827, 82.2305, -17.4526, 0.29", "60.8687, 83.2815, -18.9994, 0.29", "60.4229, 84.5308, -20.8821, 1.11", "59.9535, 85.7038, -22.6815, 0.96", "58.9807, 87.942, -26.0618, 0.66", "58.7778, 88.3802, -26.7056, 0.66", "58.7048, 88.5277, -26.909, 0.66", "58.3332, 89.3183, -27.9097, 0.59", "58.2762, 89.4649, -28.0623, 0.59", "57.9102, 90.8053, -29.0493, 0.52", "57.9066, 90.8675, -29.0828, 0.52", "57.9265, 91.5519, -29.4564, 0.96", "58.0136, 92.3615, -29.8796, 1.11", "58.3426, 94.034, -30.6758, 0.29", "58.3631, 94.1056, -30.7159, 0.29", "58.5737, 94.5684, -31.081, 0.52", "58.6028, 94.6226, -31.1346, 0.52", "58.7163, 94.8075, -31.3478, 0.74", "58.7462, 94.8639, -31.4152, 0.74", "59.1966, 95.8786, -32.4295, 0.74", "59.5256, 96.8711, -33.2528, 0.59", "59.5443, 96.9452, -33.3065, 0.59", "59.7127, 97.6377, -33.7387, 0.29", "59.9744, 98.7968, -34.3391, 0.29", "60.1621, 99.7636, -34.771, 0.88", "60.2588, 100.325, -34.9478, 1.11", "60.272, 100.404, -34.969, 1.11", "60.4367, 101.188, -35.1921, 0.88", "60.5216, 101.493, -35.3099, 0.52", "60.9709, 102.638, -35.8427, 0.37", "61.4088, 103.59, -36.3793, 0.22", "61.4465, 103.665, -36.4249, 0.22", "61.6867, 104.155, -36.7098, 0.74", "62.159, 105.305, -37.3856, 0.88", "62.3948, 105.87, -37.7147, 0.22", "62.635, 106.381, -38.0582, 0.29", "62.6713, 106.448, -38.1122, 0.29", "62.925, 106.944, -38.6501, 0.29", "63.3519, 107.832, -39.9546, 0.88", "63.5068, 108.127, -40.4658, 1.18", "63.9685, 108.955, -42.0942, 0.29", "64.1751, 109.305, -42.8309, 0.88", "64.8949, 110.495, -45.3015, 1.33", "65.5121, 111.443, -47.2948, 0.52", "65.7317, 111.772, -47.9576, 1.25", "65.7547, 111.811, -48.0252, 1.25", "66.2779, 112.838, -49.4959, 0.29", "66.5433, 113.394, -50.1603, 0.29", "66.8349, 113.951, -50.6295, 0.59", "66.9988, 114.279, -50.8636, 0.96", "67.332, 114.947, -51.3472, 0.96", "67.8957, 115.949, -52.1376, 0.59", "67.938, 116.013, -52.1912, 0.59", "68.2784, 116.486, -52.6085, 0.29", "68.7721, 117.17, -53.1711, 0.44", "69.0801, 117.592, -53.4934, 0.66", "69.5296, 118.273, -53.9592, 0.29", "69.8322, 118.723, -54.2298, 0.22", "70.2247, 119.328, -54.59, 0.66", "70.4353, 119.651, -54.7817, 0.74", "70.6547, 119.994, -54.9719, 0.59", "71.4438, 121.137, -55.6418, 0.22", "71.8089, 121.547, -55.9672, 0.44", "71.8689, 121.594, -56.0239, 0.44", "72.2221, 121.783, -56.3501, 0.59", "72.2776, 121.808, -56.4033, 0.59", "72.8192, 122.025, -56.9215, 0.59", "73.7086, 122.356, -57.732, 0.22", "74.1862, 122.588, -58.1689, 0.59", "74.503, 122.764, -58.45, 0.66", "75.0757, 123.174, -59.0206, 0.66", "75.1259, 123.217, -59.072, 0.66", "75.7641, 123.885, -59.764, 0.22", "76.2137, 124.409, -60.2387, 0.66", "76.4111, 124.652, -60.4515, 0.96", "77.4436, 125.952, -61.5514, 0.22", "77.7833, 126.417, -61.969, 0.22", "78.2125, 127.145, -62.7312, 0.59", "78.3724, 127.517, -63.1779, 0.96", "78.4374, 127.694, -63.4133, 1.18", "78.4539, 127.739, -63.4786, 1.18", "78.9478, 128.796, -65.1505, 0.44", "79.4158, 129.551, -66.4969, 0.37", "79.8138, 130.06, -67.4825, 0.29", "80.0849, 130.348, -68.0519, 0.44", "80.2958, 130.563, -68.4563, 0.44", "80.9696, 131.17, -69.4934, 0.22", "81.5531, 131.557, -70.14, 0.81", "81.6693, 131.622, -70.2515, 0.81", "82.0539, 131.797, -70.6114, 0.96", "83.5246, 132.406, -72.0052, 0.37", "84.3684, 132.775, -72.8111, 0.37", "85.1386, 133.187, -73.6464, 0.29", "85.1803, 133.209, -73.6977, 0.29", "85.7026, 133.478, -74.3776, 0.29", "86.1082, 133.676, -74.9029, 0.74", "86.6648, 133.906, -75.4947, 1.03", "87.6899, 134.349, -76.5366, 0.88", "89.1837, 134.967, -77.7202, 0.29", "89.7404, 135.151, -78.0588, 0.44", "90.5726, 135.355, -78.45, 0.29", "91.9733, 135.558, -78.9359, 1.33", "92.5022, 135.58, -79.0557, 1.69", "94.3159, 135.557, -79.2697, 0.29", "95.1164, 135.527, -79.3087, 0.29", "95.6002, 135.494, -79.3455, 0.66", "95.6716, 135.487, -79.3555, 0.66", "96.1841, 135.431, -79.4971, 0.66", "97.0523, 135.312, -79.8234, 0.22", "97.5642, 135.194, -80.0835, 0.44", "97.6475, 135.171, -80.1225, 0.44", "98.2667, 134.982, -80.3944, 0.44", "98.3246, 134.965, -80.4296, 0.44", "99.0437, 134.785, -80.9398, 0.29", "99.7858, 134.611, -81.59, 0.29", "100.311, 134.496, -82.1157, 0.74", "100.593, 134.44, -82.4157, 0.96", "102.024, 134.203, -84.0817, 0.37", "102.331, 134.174, -84.4692, 1.03", "103.034, 134.206, -85.5141, 1.03", "103.321, 134.266, -86.0275, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "47.9114, 67.8798, 12.5719, 0.88", "49.3215, 69.3039, 15.0543, 0.88", "50.0597, 70.0689, 16.0998, 0.66", "50.4606, 70.5549, 16.6367, 0.66", "50.4967, 70.6058, 16.6832, 0.66", "50.8903, 71.2689, 17.1696, 0.66", "50.9237, 71.331, 17.2083, 0.66", "51.3006, 72.2189, 17.5445, 0.74", "51.7891, 73.6978, 18.1058, 0.44", "51.9784, 74.3726, 18.3874, 0.37", "52.232, 75.34, 18.8166, 0.37", "52.3442, 75.7945, 19.0242, 0.59", "52.611, 76.8766, 19.5104, 0.59", "52.8135, 77.6587, 19.8495, 0.59", "52.9352, 78.0096, 19.9763, 0.88", "52.9696, 78.0845, 20.0089, 0.88", "53.3306, 78.7487, 20.4118, 1.18", "53.4015, 78.8722, 20.5068, 1.18", "53.6081, 79.24, 20.8304, 0.88", "54.0429, 80.0306, 21.5596, 0.44", "54.5639, 80.9445, 22.3869, 0.74", "55.2565, 82.1229, 23.4663, 1.33", "55.8898, 83.1919, 24.4296, 0.96", "56.5399, 84.2984, 25.3887, 0.52", "56.9319, 84.9966, 25.9524, 0.44", "57.4309, 85.9397, 26.6934, 0.37", "57.878, 86.9212, 27.4425, 0.37", "58.1309, 87.5844, 27.9622, 0.37", "58.1807, 87.7636, 28.1112, 0.37", "58.286, 88.3645, 28.6732, 0.59", "58.3543, 89.7025, 30.0527, 0.88", "58.284, 90.7155, 31.1625, 0.88", "58.1594, 91.5115, 32.0275, 0.52", "58.0608, 91.9929, 32.5659, 0.52", "58.0522, 92.0382, 32.6132, 0.52", "58.0035, 92.4624, 32.9599, 0.52", "58.0109, 92.5374, 32.9826, 0.52", "58.1573, 93.0451, 33.0127, 0.74", "58.1991, 93.1557, 33.0097, 0.74", "58.5037, 93.8318, 32.986, 0.37", "58.9846, 94.8327, 32.946, 0.44", "59.4205, 95.6563, 32.8596, 0.44", "59.7906, 96.3266, 32.7585, 0.74", "59.8688, 96.4601, 32.7327, 0.74", "60.3514, 97.3101, 32.5323, 0.74", "60.3887, 97.3765, 32.5141, 0.74", "60.9223, 98.3768, 32.227, 0.66", "60.9569, 98.4472, 32.2078, 0.66", "61.2571, 99.0661, 32.0658, 0.74", "61.7761, 100.191, 31.8559, 0.29", "62.0735, 100.881, 31.7949, 0.44", "62.4015, 101.692, 31.794, 0.22", "62.6225, 102.308, 31.856, 0.66", "62.7745, 102.781, 31.9221, 0.66", "62.7964, 102.868, 31.9391, 0.66", "63.0623, 103.971, 32.2345, 0.44", "63.0847, 104.047, 32.2517, 0.44", "63.2264, 104.424, 32.3173, 0.52", "63.3213, 104.653, 32.3371, 0.52", "63.5115, 105.1, 32.3372, 0.52", "63.9115, 106.095, 32.2826, 0.29", "64.2448, 107.058, 32.2013, 0.29", "64.2613, 107.124, 32.1978, 0.29", "64.3916, 107.862, 32.1754, 0.44", "64.414, 108.12, 32.1737, 0.44", "64.4073, 108.925, 32.2323, 0.44", "64.3236, 109.68, 32.3349, 0.59", "64.2515, 110.342, 32.4998, 0.74", "64.2484, 110.427, 32.5261, 0.74", "64.2965, 111.056, 32.7491, 0.74", "64.5081, 111.965, 33.2365, 0.52", "64.5313, 112.027, 33.2776, 0.52", "64.8402, 112.735, 33.7512, 0.44", "65.0111, 113.133, 34.0355, 0.29", "65.2488, 113.782, 34.4857, 0.29", "65.6636, 115.183, 35.55, 0.29", "65.7911, 115.708, 35.9375, 0.37", "65.9553, 116.434, 36.4545, 0.44", "66.166, 117.501, 37.1861, 0.96", "66.3084, 118.161, 37.631, 1.25", "66.7833, 119.782, 38.7345, 0.52", "67.0418, 120.449, 39.1469, 0.52", "67.3205, 120.988, 39.4939, 0.66", "67.3641, 121.052, 39.5376, 0.66", "67.8412, 121.64, 39.8975, 0.44", "68.5838, 122.487, 40.3706, 0.29", "68.811, 122.788, 40.497, 0.52", "69.1429, 123.314, 40.7309, 0.52", "69.5273, 123.997, 41.037, 0.44", "69.8263, 124.523, 41.2543, 0.29", "70.0822, 124.96, 41.4682, 0.52", "70.6588, 125.842, 41.9038, 0.88", "70.961, 126.259, 42.1208, 0.52", "71.6589, 127.11, 42.5857, 0.44", "72.2303, 127.734, 42.9255, 0.59", "73.2837, 128.734, 43.5468, 0.29", "74.0655, 129.391, 44.0089, 0.29", "77.6432, 138.758, 48.7245, 0.29", "80.4412, 149.199, 51.364, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-119.215, -171.976, 3.18099, 0.29", "-119.39, -172.645, 3.34059, 0.29", "-119.45, -172.873, 3.39495, 0.74", "-119.562, -173.299, 3.49668, 0.29", "-119.668, -173.7, 3.5923, 0.29", "-119.811, -174.244, 3.72232, 0.37", "-121.283, -179.879, 4.28191, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-119.215, -171.976, 3.18099, 0.37", "-119.768, -172.184, 4.04367, 0.37", "-120.081, -172.289, 4.47161, 0.37", "-120.659, -172.458, 5.26314, 0.44", "-121.071, -172.574, 5.8026, 0.37", "-121.898, -172.828, 6.83905, 0.88", "-122.183, -172.937, 7.22185, 1.11", "-122.531, -173.084, 7.68507, 0.81", "-123.337, -173.518, 8.83749, 0.29", "-123.601, -173.664, 9.19544, 0.29", "-123.834, -173.796, 9.5213, 0.74", "-124.633, -174.218, 10.5559, 0.44", "-124.879, -174.341, 10.8806, 0.44", "-125.432, -174.562, 11.5624, 0.29", "-126.014, -174.817, 12.3496, 0.29", "-126.368, -174.99, 12.9895, 0.59", "-126.601, -175.1, 13.4604, 0.66", "-126.94, -175.247, 14.1678, 0.44", "-127.24, -175.385, 14.873, 0.37", "-127.936, -175.747, 16.6923, 0.66", "-128.587, -176.133, 18.509, 0.81", "-128.739, -176.211, 18.9045, 0.88", "-128.867, -176.28, 19.263, 0.88", "-128.889, -176.291, 19.3242, 0.88", "-129.286, -176.467, 20.3467, 0.52", "-129.582, -176.491, 20.7955, 0.52", "-130.655, -176.555, 22.0416, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.49594, -85.9174, -17.5314, 0.74", "-6.80913, -87.2251, -18.0522, 0.74", "-6.96262, -88.2893, -18.4952, 0.74", "-7.08938, -89.7504, -19.0895, 0.88", "-7.13194, -90.6462, -19.4472, 0.88", "-7.20171, -92.1146, -20.0337, 0.81", "-7.29636, -94.1068, -20.8294, 0.88", "-7.25292, -95.3266, -21.3173, 0.88", "-7.16885, -96.1787, -21.6763, 1.33", "-7.02485, -97.0793, -22.043, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-6.49594, -85.9174, -17.5314, 0.59", "-6.50697, -86.6466, -17.7138, 0.59", "-6.59408, -87.5969, -18.0798, 0.52", "-6.67051, -88.5502, -18.4964, 0.44", "-6.73107, -89.3732, -18.8737, 0.44", "-6.77123, -90.4887, -19.3813, 0.59", "-6.79162, -91.8213, -20.0068, 0.74", "-6.79727, -92.8186, -20.5197, 0.59", "-6.78655, -93.5393, -20.9139, 0.59", "-6.78278, -93.5965, -20.9452, 0.59", "-6.64129, -94.7104, -21.5028, 0.59", "-6.38087, -95.9048, -21.9872, 0.74", "-6.184, -96.5848, -22.2232, 0.74", "-5.82654, -97.686, -22.5798, 0.66", "-5.47369, -98.6979, -22.8974, 0.59", "-5.41839, -98.8235, -22.9317, 0.59", "-4.8581, -99.7502, -23.1435, 0.59", "-4.59862, -100.072, -23.1983, 0.81", "-4.54857, -100.128, -23.2066, 0.81", "-4.06866, -100.661, -23.288, 0.81", "-3.22371, -101.675, -23.513, 0.66", "-2.64688, -102.474, -23.7166, 0.66", "-2.16169, -103.259, -23.8888, 0.66", "-1.66149, -104.144, -24.0236, 0.81", "-1.29928, -104.85, -24.1022, 0.96", "-0.821771, -105.903, -24.189, 0.52", "-0.489007, -106.732, -24.2509, 0.52", "-0.0549318, -107.819, -24.2785, 0.81", "0.317962, -108.689, -24.2796, 0.81", "0.671885, -109.487, -24.2663, 0.81", "0.701269, -109.558, -24.2638, 0.81", "1.11488, -110.632, -24.2371, 0.81", "1.15763, -110.757, -24.2404, 0.81", "1.51155, -112.024, -24.3103, 0.81", "1.72725, -112.985, -24.3531, 0.81", "1.90204, -113.892, -24.3658, 0.66", "1.91614, -113.967, -24.3624, 0.66", "2.0851, -114.931, -24.2746, 0.37", "2.30107, -116.075, -24.1572, 0.66", "2.40614, -116.602, -24.0943, 0.96", "2.65986, -117.64, -23.9371, 0.74", "2.99954, -118.89, -23.719, 0.96", "3.2501, -119.847, -23.5579, 0.81", "3.53519, -120.977, -23.3799, 0.74", "3.54603, -121.032, -23.3746, 0.74", "3.72512, -122.216, -23.3431, 0.74", "3.73391, -122.283, -23.3486, 0.74", "3.85888, -123.426, -23.69, 0.44", "3.92265, -124.012, -23.9351, 0.44", "4.04242, -125.198, -24.5349, 1.4", "4.12471, -125.95, -25.0012, 1.18", "4.22888, -126.865, -25.7009, 1.03", "4.4683, -128.348, -26.9795, 0.66", "4.60061, -128.897, -27.4943, 0.66", "4.63833, -129.019, -27.6125, 0.66", "5.0497, -130.122, -28.6602, 0.81", "5.34713, -130.932, -29.4662, 0.96", "5.73922, -131.979, -30.5439, 0.74", "6.08193, -132.766, -31.3477, 0.74", "6.36188, -133.361, -31.9556, 0.96", "6.59086, -133.816, -32.3856, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-27.4104, -365.979, -9.05494, 0.29", "-26.3153, -365.95, -9.658, 0.29", "-25.6515, -365.932, -10.0235, 0.29", "-24.3553, -365.898, -10.7374, 0.22", "-23.7205, -365.881, -11.0869, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-27.4104, -365.979, -9.05494, 0.59", "-27.8301, -367.754, -9.10825, 0.59", "-27.8621, -367.869, -9.10935, 0.59", "-28.4244, -369.693, -9.07677, 0.52", "-29.007, -371.537, -9.02391, 0.66", "-29.5089, -373.28, -8.97108, 0.66", "-30.0013, -375.086, -8.91557, 0.81", "-30.1058, -375.452, -8.89345, 0.81", "-30.5174, -377.283, -8.71468, 0.81", "-30.553, -377.528, -8.68299, 0.81", "-30.5239, -379.663, -8.27846, 0.81", "-30.516, -379.794, -8.26073, 0.81", "-30.46, -381.72, -8.28574, 0.59", "-30.4824, -383.639, -8.49515, 0.37", "-30.5567, -384.804, -8.828, 0.74", "-30.9843, -387.096, -10.0757, 0.81", "-31.5653, -389.482, -11.8256, 0.52", "-32.2777, -392.324, -14.3052, 0.52", "-32.2979, -392.396, -14.3757, 0.52", "-32.9868, -394.44, -16.846, 0.96", "-33.8483, -396.841, -20.3393, 1.69", "-34.1586, -397.732, -21.8802, 0.37", "-34.4834, -398.842, -24.1472, 0.37", "-34.5795, -399.325, -25.2252, 0.66", "-34.8614, -401.533, -30.321, 1.25", "-34.925, -402.991, -33.8837, 0.44", "-34.8794, -403.881, -36.0929, 0.81", "-34.7302, -405.583, -40.3061, 0.37", "-34.6067, -406.249, -41.9273, 0.29", "-34.2743, -407.185, -44.0983, 0.29", "-34.0168, -407.659, -44.9985, 0.96", "-33.6781, -408.166, -45.8867, 0.96", "-32.8757, -409.338, -47.679, 0.44", "-32.5898, -409.738, -48.3636, 0.81", "-32.2197, -410.228, -49.3698, 1.03", "-32.1769, -410.282, -49.4832, 1.03", "-31.0062, -411.852, -52.4467, 0.37", "-30.212, -412.98, -54.4176, 1.4", "-29.0183, -415.251, -58.1227, 0.37", "-28.7261, -415.974, -59.2014, 0.66", "-28.3209, -417.111, -60.733, 0.29", "-27.9376, -418.131, -61.9215, 0.96", "-27.7406, -418.625, -62.3929, 0.96", "-26.1252, -422.597, -65.5128, 0.37", "-25.892, -423.171, -65.8493, 0.59", "-25.2429, -424.749, -66.8079, 0.29", "-24.5542, -426.328, -67.9289, 0.96", "-24.5134, -426.413, -67.9947, 0.96", "-24.0437, -427.145, -68.4046, 1.33", "-23.9602, -427.228, -68.3963, 1.33", "-23.3853, -427.805, -68.3008, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-62.0753, -100.92, -13.3573, 0.29", "-61.5998, -102.281, -12.9193, 0.29", "-61.2609, -103.25, -12.6073, 0.37", "-60.9482, -104.145, -12.3192, 0.37", "-60.5002, -105.427, -11.9067, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-62.0753, -100.92, -13.3573, 0.37", "-63.1511, -101.608, -13.1332, 0.37", "-63.904, -101.994, -12.884, 0.37", "-64.7705, -102.342, -12.5662, 0.81", "-65.3659, -102.52, -12.2462, 1.25", "-65.8158, -102.629, -11.9623, 1.25", "-67.7306, -103.097, -10.7324, 0.44", "-67.8629, -103.121, -10.6413, 0.44", "-68.3102, -103.191, -10.3321, 0.74", "-70.0764, -103.481, -9.16431, 0.52", "-71.0005, -103.691, -8.60517, 0.59", "-71.6837, -103.939, -8.31273, 0.44", "-72.2295, -104.244, -8.22721, 0.29", "-72.8077, -104.643, -8.21491, 0.29", "-73.521, -105.263, -8.30745, 1.11", "-73.9567, -105.727, -8.43671, 1.33", "-74.9644, -107.057, -8.80534, 0.74", "-75.4507, -107.844, -8.98516, 0.74", "-75.7032, -108.351, -9.07344, 1.11", "-75.9833, -108.982, -9.1355, 0.88", "-76.2986, -109.758, -9.15559, 0.66", "-76.6456, -110.676, -9.12466, 0.37", "-76.8374, -111.292, -9.05639, 0.37", "-77.0982, -112.249, -8.94332, 0.37", "-77.3404, -113.312, -8.81624, 0.37", "-77.4963, -114.103, -8.72453, 0.29", "-77.6119, -114.859, -8.61535, 0.59", "-77.711, -115.626, -8.46539, 0.81", "-77.715, -115.689, -8.45232, 0.81", "-77.7144, -116.536, -8.23952, 0.74", "-77.6835, -117.072, -8.09934, 1.11", "-77.5923, -118.251, -7.7652, 0.59", "-77.556, -118.789, -7.60304, 1.03", "-77.5173, -119.832, -7.25768, 0.52", "-77.5079, -120.701, -6.96101, 0.74", "-77.5187, -121.313, -6.75428, 0.66", "-77.5595, -122.425, -6.3897, 0.44", "-77.6464, -123.409, -6.07879, 0.44", "-77.8262, -124.432, -5.76174, 0.44", "-77.9455, -124.842, -5.63894, 0.81", "-78.2246, -125.575, -5.44257, 1.18", "-78.3578, -125.85, -5.37024, 1.33", "-78.9844, -126.957, -5.06362, 0.44", "-79.5063, -127.822, -4.83115, 0.59", "-79.9273, -128.448, -4.58554, 0.81", "-80.1504, -128.735, -4.43998, 0.81", "-80.7386, -129.35, -4.01603, 0.37", "-81.4078, -129.935, -3.54463, 0.74", "-81.6862, -130.136, -3.35358, 0.96", "-83.2533, -131.153, -2.24507, 0.59", "-83.9399, -131.552, -1.76404, 0.81", "-85.3175, -132.266, -0.811408, 0.52", "-86.1602, -132.634, -0.253129, 0.52", "-86.9044, -132.912, 0.191301, 0.74", "-92.44, -140.626, 4.76441, 0.74", "-98.2227, -148.728, 8.26271, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-130.294, -122.869, -176.007, 0.52", "-129.841, -124.009, -176.677, 0.52", "-129.298, -125.33, -177.422, 0.88", "-129.015, -125.949, -177.744, 0.88", "-128.496, -126.976, -178.266, 0.37", "-128.261, -127.424, -178.48, 0.29", "-128.052, -127.841, -178.666, 0.88", "-128.008, -127.926, -178.7, 0.88", "-127.69, -128.619, -178.888, 0.88", "-127.312, -129.547, -179.093, 0.29", "-127.084, -130.199, -179.182, 0.29", "-126.909, -130.807, -179.252, 0.22", "-126.752, -131.51, -179.319, 0.22", "-126.701, -131.853, -179.347, 0.81", "-126.657, -132.481, -179.383, 1.25", "-126.621, -133.519, -179.41, 0.37", "-126.603, -134.491, -179.437, 0.22", "-126.597, -135.085, -179.454, 0.66", "-126.603, -135.646, -179.473, 0.81", "-126.64, -136.774, -179.515, 0.22", "-126.676, -137.325, -179.538, 0.88", "-126.708, -137.63, -179.554, 1.03", "-126.747, -138.091, -179.579, 1.03", "-126.77, -138.573, -179.603, 0.74", "-126.767, -138.651, -179.606, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-130.294, -122.869, -176.007, 0.22", "-132.112, -123.036, -178.363, 0.22", "-132.836, -123.162, -179.238, 0.22", "-133.619, -123.342, -180.092, 0.81", "-134.043, -123.462, -180.504, 1.11", "-134.567, -123.636, -180.954, 1.03", "-136.049, -124.163, -182.103, 0.22", "-136.325, -124.29, -182.264, 0.66", "-136.936, -124.6, -182.616, 0.96", "-137.648, -124.924, -182.963, 0.29", "-138.474, -125.229, -183.345, 0.29", "-138.794, -125.32, -183.474, 0.96", "-139.445, -125.453, -183.726, 1.18", "-139.507, -125.46, -183.756, 1.18", "-140.32, -125.5, -184.182, 0.88", "-140.442, -125.504, -184.248, 0.88", "-140.949, -125.541, -184.518, 0.66", "-142.149, -125.742, -185.226, 0.29", "-142.374, -125.792, -185.359, 0.29", "-143.301, -126.044, -185.913, 0.29", "-143.782, -126.156, -186.278, 0.59", "-144.17, -126.22, -186.599, 0.59", "-145.322, -126.351, -187.64, 0.29", "-145.639, -126.371, -187.928, 1.03", "-146.105, -126.349, -188.429, 1.33", "-147.506, -126.047, -190.243, 0.29", "-147.76, -125.96, -190.584, 0.29", "-147.808, -125.94, -190.65, 0.29", "-148.213, -125.772, -191.282, 0.59", "-149.157, -125.473, -192.852, 0.81", "-149.777, -125.376, -194.029, 0.52", "-150.078, -125.407, -194.663, 1.11", "-150.596, -125.563, -195.909, 1.4", "-151.341, -125.838, -197.805, 0.29", "-151.507, -125.923, -198.269, 0.88", "-152.152, -126.454, -200.192, 0.52", "-152.615, -127.005, -201.754, 0.81", "-152.766, -127.249, -202.366, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-37.4148, 384.041, -12.3398, 0.37", "-36.9099, 384.033, -12.1626, 0.37", "-35.9369, 383.954, -11.8207, 0.66", "-35.8737, 383.945, -11.7968, 0.66", "-35.4146, 383.876, -11.6219, 0.29", "-35.341, 383.865, -11.5933, 0.29", "-34.0692, 383.731, -11.1627, 0.29", "-34.0051, 383.727, -11.1417, 0.29", "-33.7065, 383.736, -11.0373, 0.66", "-33.3462, 383.76, -10.9237, 0.52", "-33.2788, 383.768, -10.9058, 0.52", "-32.0425, 384.028, -10.5748, 0.22", "-31.4518, 384.285, -10.4015, 0.22", "-31.1278, 384.436, -10.3134, 0.29", "-22.7826, 386.958, -6.1483, 0.29", "-15.1705, 391.264, -1.97239, 0.29", "-7.1692, 396.21, 0.424449, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-37.4148, 384.041, -12.3398, 0.29", "-37.1798, 385.635, -12.2781, 0.29", "-37.1181, 386.172, -12.283, 0.29", "-37.1167, 386.243, -12.2843, 0.29", "-37.1477, 387.066, -12.304, 0.29", "-37.1526, 387.127, -12.306, 0.29", "-37.3183, 388.234, -12.3258, 0.29", "-37.3366, 388.292, -12.3298, 0.29", "-37.5658, 388.98, -12.3238, 0.52", "-37.6067, 389.118, -12.3151, 0.52", "-37.6708, 389.408, -12.2885, 0.52", "-37.7816, 390.112, -12.22, 0.22", "-37.8374, 390.8, -12.1647, 0.22", "-37.8666, 391.486, -12.1149, 0.44", "-37.8535, 392.01, -12.0857, 0.44", "-37.8163, 392.754, -12.0495, 0.22", "-37.8095, 392.827, -12.0475, 0.22", "-37.6325, 393.857, -12.0819, 0.22", "-37.8796, 403.894, -13.1045, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "12.9672, 182.114, -71.4627, 0.66", "12.7845, 182.794, -71.6968, 0.66", "12.6177, 183.453, -71.889, 0.29", "12.6006, 183.524, -71.9071, 0.29", "12.4362, 184.222, -72.07, 0.29", "12.1478, 185.419, -72.3756, 0.29", "12.0193, 185.93, -72.5266, 0.52", "11.9757, 186.097, -72.5809, 0.52", "11.9132, 186.338, -72.6621, 0.52", "11.7964, 186.778, -72.8201, 0.37", "11.6292, 187.375, -73.0661, 0.37", "11.3509, 188.214, -73.5642, 0.88", "11.3096, 188.324, -73.6391, 0.88", "11.1359, 188.762, -73.9479, 1.03", "10.9656, 189.186, -74.2377, 1.18", "10.7789, 189.658, -74.5352, 0.66", "10.5483, 190.257, -74.8729, 0.52", "10.438, 190.554, -75.0208, 0.59", "10.3273, 190.892, -75.1539, 0.44", "10.0559, 191.848, -75.4274, 0.29", "9.96239, 192.227, -75.5063, 0.37", "9.94956, 192.302, -75.5199, 0.37", "9.89198, 192.742, -75.6118, 0.22", "9.75431, 193.592, -75.8406, 0.59", "9.67028, 194.026, -75.9783, 0.88", "9.5066, 194.742, -76.236, 0.52", "9.27586, 195.627, -76.5869, 0.29", "9.0873, 196.267, -76.8628, 0.29", "8.80646, 197.102, -77.2666, 0.59", "8.77771, 197.165, -77.3, 0.59", "8.54375, 197.59, -77.5238, 0.29", "8.48598, 197.679, -77.5679, 0.29", "8.03666, 198.363, -77.8054, 0.52", "7.85931, 198.694, -77.9016, 0.66", "7.49628, 199.505, -78.1438, 0.52", "7.4673, 199.573, -78.1646, 0.52", "7.27424, 200.063, -78.3226, 0.29", "6.91072, 201.258, -78.7526, 0.29", "6.7258, 202.134, -79.1046, 0.66", "6.66146, 202.448, -79.2412, 0.88", "6.64856, 202.515, -79.2725, 0.88", "6.49888, 203.123, -79.5916, 0.52", "6.26408, 203.884, -80.0541, 0.52", "6.0389, 204.51, -80.457, 0.29", "5.72602, 205.341, -80.9491, 0.29", "5.46792, 205.993, -81.303, 1.03", "5.18189, 206.695, -81.6551, 0.74", "4.81231, 207.496, -81.997, 0.29", "4.24786, 208.631, -82.4064, 0.44", "3.95039, 209.229, -82.5865, 0.37", "3.60548, 209.945, -82.7708, 0.37", "3.21396, 210.722, -82.9217, 0.96", "2.66901, 211.785, -83.0433, 0.37", "2.2913, 212.499, -83.0821, 0.37", "1.9465, 213.129, -83.0873, 0.59", "1.76745, 213.476, -83.0799, 0.88", "1.66715, 213.689, -83.0737, 0.88", "1.37772, 214.368, -83.0517, 0.59", "1.35637, 214.428, -83.0511, 0.52", "0.850542, 215.932, -83.0202, 0.15", "0.643055, 216.625, -83.0152, 0.59", "0.622542, 216.697, -83.0147, 0.59", "0.488003, 217.25, -82.9839, 0.59", "0.473634, 217.322, -82.9768, 0.59", "0.374044, 217.921, -82.906, 0.88", "0.261277, 218.774, -82.8098, 1.18", "0.208682, 219.157, -82.7736, 1.18", "-0.0259611, 220.601, -82.6915, 0.15", "-0.226633, 221.66, -82.6891, 0.15", "-0.352282, 222.234, -82.7299, 0.52", "-0.517445, 222.9, -82.8246, 0.66", "-0.623116, 223.279, -82.9112, 0.74", "-0.853288, 224.027, -83.1467, 0.29", "-1.08157, 224.723, -83.4093, 0.37", "-1.41517, 225.626, -83.6973, 0.29", "-1.44562, 225.704, -83.7161, 0.29", "-1.85425, 226.769, -83.8238, 0.52", "-1.87977, 226.84, -83.8217, 0.52", "-2.20812, 227.807, -83.6707, 0.81", "-2.54135, 228.818, -83.4155, 0.37", "-2.56435, 228.886, -83.3941, 0.37", "-2.9169, 229.911, -83.1252, 0.29", "-3.08061, 230.383, -83.0284, 0.37", "-3.10068, 230.444, -83.0212, 0.37", "-3.29565, 231.106, -82.9934, 0.37", "-3.65045, 232.152, -82.957, 0.29", "-4.10309, 233.302, -82.8705, 0.37", "-4.28309, 233.726, -82.8329, 0.88", "-4.48069, 234.202, -82.7681, 0.96", "-4.96572, 235.332, -82.5018, 0.52", "-5.56195, 236.722, -82.0358, 0.66", "-5.7923, 237.24, -81.8105, 0.66", "-6.0918, 237.895, -81.4592, 0.29", "-6.43573, 238.629, -81.0284, 0.44", "-6.84299, 239.471, -80.5099, 1.11", "-7.17424, 240.143, -80.0959, 1.11", "-7.66088, 241.2, -79.4804, 1.11", "-7.89606, 241.648, -79.2085, 1.55", "-8.31985, 242.369, -78.7252, 1.55", "-8.37888, 242.456, -78.6576, 1.55", "-8.77639, 242.944, -78.2153, 1.55", "-8.80984, 242.98, -78.1772, 1.55", "-9.34429, 243.512, -77.5468, 2.06", "-9.38593, 243.549, -77.4992, 2.06", "-10.5406, 244.513, -76.158, 0.52", "-11.2248, 245.066, -75.342, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.9672, 182.114, -71.4627, 0.74", "13.1032, 181.213, -70.7934, 0.74", "13.1116, 181.163, -70.7596, 0.74", "13.2235, 180.525, -70.3612, 0.37", "13.3918, 179.589, -69.8187, 0.22", "13.4756, 179.131, -69.5803, 0.37", "13.5864, 178.563, -69.3023, 0.15", "13.777, 177.676, -68.9225, 0.15", "13.8616, 177.28, -68.7563, 0.44", "13.9525, 176.845, -68.5846, 0.44", "14.1313, 175.99, -68.287, 0.22", "14.3672, 174.999, -67.9694, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "103.321, 134.266, -86.0275, 0.22", "103.835, 134.881, -87.5643, 0.22", "104.016, 135.098, -88.1074, 0.74", "104.112, 135.213, -88.3957, 0.74", "104.869, 136.12, -90.6614, 0.29", "105.055, 136.342, -91.2177, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "103.321, 134.266, -86.0275, 0.22", "104.193, 133.844, -86.7356, 0.22", "104.809, 133.604, -87.2914, 0.66", "105.214, 133.466, -87.665, 0.66", "105.693, 133.339, -88.0947, 0.52", "106.643, 133.228, -88.9484, 0.22", "107.103, 133.249, -89.3446, 0.22", "107.778, 133.468, -89.8586, 0.59", "108.121, 133.631, -90.0872, 0.74", "108.621, 133.889, -90.3663, 0.74", "109.648, 134.454, -90.8296, 0.29", "110.535, 134.973, -91.132, 0.29", "111.633, 135.629, -91.4628, 0.59", "112.146, 135.936, -91.5873, 0.52", "113.161, 136.533, -91.8136, 0.22", "113.727, 136.829, -91.9221, 0.29", "114.526, 137.134, -92.0274, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "80.4412, 149.199, 51.364, 0.29", "83.0726, 155.983, 54.5398, 0.29", "84.9083, 163.474, 56.5519, 0.29", "86.5804, 170.919, 58.8444, 0.29", "87.3675, 178.224, 61.9103, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "80.4412, 149.199, 51.364, 0.44", "84.0241, 156.957, 55.4155, 0.29", "87.8259, 164.764, 59.1651, 0.29", "92.3347, 172.824, 61.2564, 0.29", "95.1902, 181.82, 62.408, 0.29", "98.4385, 190.712, 61.5782, 0.29", "101.351, 199.761, 61.2942, 0.29", "103.318, 209.068, 61.7332, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-121.283, -179.879, 4.28191, 0.29", "-122.19, -185.528, 5.95565, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-121.283, -179.879, 4.28191, 0.44", "-126.529, -186.692, 2.52229, 0.29", "-130.471, -193.825, -0.758547, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-130.655, -176.555, 22.0416, 0.66", "-130.878, -175.593, 22.6538, 0.66", "-130.955, -175.003, 22.9744, 0.29", "-131.015, -174.334, 23.2762, 0.29", "-131.02, -174.279, 23.2954, 0.29", "-131.127, -173.232, 23.5952, 0.52", "-131.15, -173.027, 23.6449, 0.74", "-131.213, -172.222, 23.7533, 0.37", "-131.265, -171.53, 23.82, 0.37", "-131.333, -170.847, 23.8583, 0.29", "-131.367, -170.429, 23.8638, 0.59", "-131.388, -169.968, 23.843, 0.59", "-131.371, -169.434, 23.8216, 0.59", "-131.274, -168.726, 23.7999, 0.52", "-131.144, -168.206, 23.7914, 0.96", "-130.936, -167.589, 23.7933, 0.37", "-130.779, -167.207, 23.7927, 0.29", "-130.442, -166.491, 23.7886, 0.29", "-130.159, -165.91, 23.7848, 0.29", "-129.977, -165.53, 23.7824, 0.52", "-129.957, -165.478, 23.7814, 0.52", "-129.864, -165.16, 23.7731, 0.52", "-129.738, -164.535, 23.7574, 0.37", "-129.627, -163.816, 23.7389, 0.37", "-129.62, -163.758, 23.7376, 0.37", "-129.527, -162.599, 23.7154, 0.37", "-129.48, -161.557, 23.7001, 0.37", "-129.459, -160.26, 23.6859, 0.37", "-129.459, -160.153, 23.6852, 0.37", "-129.43, -159.147, 23.669, 0.37", "-129.427, -159.096, 23.6679, 0.37", "-129.371, -158.453, 23.6533, 0.88", "-129.355, -158.324, 23.6486, 0.88", "-129.199, -157.527, 23.6085, 0.29", "-128.947, -156.531, 23.5552, 0.29", "-128.75, -155.898, 23.5185, 0.44", "-128.595, -155.429, 23.4928, 0.44", "-128.409, -154.877, 23.4487, 0.29", "-128.386, -154.805, 23.442, 0.29", "-128.1, -154.017, 23.355, 0.66", "-128.018, -153.825, 23.3421, 0.66", "-127.864, -153.491, 23.3279, 0.59", "-127.477, -152.648, 23.3169, 0.37", "-127.453, -152.596, 23.3201, 0.37", "-126.92, -151.398, 23.4682, 0.37", "-126.634, -150.704, 23.6087, 0.37", "-126.435, -150.233, 23.7258, 0.37", "-126.356, -150.051, 23.786, 0.88", "-126.116, -149.494, 24.0567, 0.74", "-126.1, -149.445, 24.0832, 0.74", "-126.121, -149.067, 24.3592, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-130.655, -176.555, 22.0416, 0.52", "-131.63, -177.325, 22.1958, 0.52", "-132.56, -177.979, 22.3655, 0.29", "-133.461, -178.574, 22.541, 0.29", "-134.862, -179.452, 22.8347, 0.44", "-136.041, -180.186, 23.0873, 0.37", "-136.558, -180.508, 23.1991, 0.66", "-137.022, -180.761, 23.3118, 0.88", "-137.631, -181.024, 23.4311, 0.88", "-138.55, -181.353, 23.5635, 0.44", "-139.7, -181.736, 23.6627, 0.44", "-139.782, -181.762, 23.6668, 0.44", "-140.797, -182.054, 23.6984, 0.44", "-142.461, -182.49, 23.7415, 0.29", "-143.5, -182.729, 23.7758, 0.29", "-144.772, -182.981, 23.9121, 0.29", "-144.867, -182.997, 23.9309, 0.74", "-144.947, -183.012, 23.9535, 0.74", "-145.78, -183.196, 24.1885, 0.74", "-146.51, -183.419, 24.4013, 0.74", "-148.043, -183.957, 24.756, 0.29", "-148.892, -184.296, 24.8605, 0.29", "-150.091, -184.815, 24.9129, 0.29", "-151.666, -185.546, 24.8649, 0.29", "-152.406, -185.928, 24.8348, 0.59", "-152.76, -186.111, 24.8229, 0.59", "-153.812, -186.617, 24.8107, 0.37", "-153.974, -186.683, 24.8623, 0.37", "-154.723, -186.895, 25.4312, 0.37", "-155.875, -187.117, 26.5365, 0.29", "-156.522, -187.281, 27.3628, 0.29", "-156.985, -187.429, 28.0767, 0.59", "-157.829, -187.832, 29.624, 0.59", "-158.268, -188.116, 30.5203, 0.59", "-158.561, -188.423, 31.2653, 0.59", "-159.314, -189.57, 33.3455, 0.44", "-159.335, -189.609, 33.4019, 0.44", "-159.641, -190.258, 34.2095, 0.44", "-159.664, -190.303, 34.2605, 0.44", "-160.199, -191.206, 35.2644, 0.59", "-160.609, -191.735, 35.8501, 0.59", "-161.316, -192.35, 36.5278, 0.29", "-161.37, -192.391, 36.5774, 0.29", "-162.687, -193.189, 37.6447, 0.44", "-163.304, -193.509, 38.0491, 0.96", "-163.959, -193.797, 38.3922, 1.33", "-164.825, -194.169, 38.804, 0.88", "-166.288, -194.816, 39.3944, 0.44", "-167.471, -195.338, 39.7815, 0.44", "-168.795, -195.895, 40.1054, 0.52", "-169.753, -196.255, 40.3348, 0.52", "-169.834, -196.281, 40.3535, 0.52", "-171.084, -196.596, 40.6374, 0.37", "-172.007, -196.764, 40.8361, 0.37", "-172.95, -196.873, 41.1162, 0.37", "-174.214, -196.93, 41.6221, 0.52", "-174.614, -196.926, 41.798, 0.96", "-175.061, -196.902, 41.9875, 0.96", "-175.654, -196.84, 42.2291, 0.96", "-176.454, -196.774, 42.528, 0.81", "-177.839, -196.764, 42.9811, 0.37", "-177.908, -196.77, 43.0002, 0.37", "-179.092, -196.936, 43.2987, 0.37", "-179.784, -197.066, 43.4571, 0.59", "-180.295, -197.17, 43.5679, 0.66", "-181.092, -197.327, 43.7371, 0.52", "-182.111, -197.469, 43.9069, 0.29", "-182.207, -197.476, 43.925, 0.29", "-183.144, -197.507, 44.1258, 0.29", "-184.06, -197.551, 44.3627, 0.44", "-184.671, -197.599, 44.5358, 0.44", "-185.897, -197.739, 44.9103, 0.44", "-187.119, -197.939, 45.3038, 0.37", "-187.666, -198.057, 45.5229, 0.37", "-189.155, -198.457, 46.3613, 0.37", "-189.793, -198.662, 46.8428, 0.37", "-190.396, -198.881, 47.4284, 0.37", "-190.883, -199.058, 48.0377, 0.37", "-191.622, -199.28, 49.1505, 0.37", "-192.396, -199.433, 50.444, 0.37", "-192.634, -199.47, 50.8839, 0.81", "-192.818, -199.527, 51.1989, 1.11", "-193.214, -199.719, 51.8025, 1.11", "-193.257, -199.744, 51.8535, 1.11", "-194.009, -200.206, 52.5459, 0.59", "-195.162, -200.982, 53.5322, 0.44", "-195.907, -201.497, 54.2185, 0.66", "-195.957, -201.53, 54.2644, 0.66", "-196.491, -201.849, 54.7199, 0.66", "-197.387, -202.28, 55.4163, 0.44", "-197.493, -202.328, 55.5005, 0.44", "-198.363, -202.726, 56.1686, 0.37", "-199.273, -203.181, 56.8696, 0.37", "-200.124, -203.637, 57.5018, 0.88", "-200.718, -203.976, 57.9185, 1.18", "-202.481, -204.958, 59.1259, 0.37", "-203.27, -205.383, 59.685, 0.29", "-203.767, -205.64, 60.0508, 0.81", "-203.838, -205.674, 60.1094, 0.81", "-204.134, -205.824, 60.3837, 0.81", "-205.347, -206.434, 61.5429, 0.37", "-205.807, -206.642, 61.9806, 0.74", "-206.294, -206.882, 62.4636, 0.74", "-207.184, -207.315, 63.3356, 0.81", "-208.396, -207.929, 64.5042, 0.29", "-208.81, -208.15, 64.8986, 0.29", "-208.859, -208.179, 64.9418, 0.29", "-209.438, -208.517, 65.4069, 0.74", "-209.89, -208.771, 65.7659, 0.81", "-211.035, -209.309, 66.6584, 0.37", "-211.1, -209.334, 66.7102, 0.37", "-211.782, -209.597, 67.2836, 0.29", "-212.315, -209.803, 67.749, 0.29", "-213.103, -210.111, 68.509, 0.52", "-213.757, -210.392, 69.1844, 0.88", "-213.991, -210.474, 69.4423, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-7.02485, -97.0793, -22.043, 0.96", "-7.02408, -100.322, -21.1284, 0.96", "-6.96533, -102.33, -20.5736, 0.96", "-6.86551, -104.071, -20.1233, 1.03", "-6.7685, -105.111, -19.8849, 1.25", "-6.62136, -106.426, -19.6044, 1.11", "-6.34602, -108.328, -19.1843, 0.74", "-6.03983, -109.861, -18.9494, 0.96", "-5.74151, -110.964, -18.7777, 0.74", "-5.20039, -112.656, -18.5531, 0.59", "-5.16987, -112.744, -18.5471, 0.59", "-4.48447, -114.766, -18.5345, 0.59", "-3.96644, -116.553, -18.7149, 0.59", "-3.94904, -116.633, -18.731, 0.59", "-3.70831, -118.272, -19.0619, 0.88", "-3.57278, -119.885, -19.3902, 0.88", "-3.5282, -120.859, -19.5924, 0.88", "-3.51638, -122.436, -19.8832, 0.66", "-3.49895, -124.08, -20.0153, 0.52", "-3.4385, -125.699, -19.9911, 1.11", "-3.39293, -126.464, -19.9012, 1.11", "-3.29921, -127.661, -19.6915, 0.88", "-3.12498, -129.256, -19.397, 0.81", "-2.93764, -130.701, -19.1566, 0.88", "-2.77543, -131.769, -19.0879, 1.03", "-2.50578, -133.427, -19.1521, 0.74", "-2.28953, -134.662, -19.2731, 0.59", "-2.00157, -136.089, -19.4974, 0.52", "-1.75924, -137.188, -19.7669, 0.74", "-1.2962, -139.119, -20.3557, 0.66", "-0.958413, -140.464, -20.7992, 0.74", "-0.655471, -141.633, -21.171, 0.81", "-0.378645, -142.733, -21.4511, 1.11", "-0.0849006, -143.93, -21.6765, 0.88", "-0.0655577, -144.019, -21.6958, 0.88", "0.175138, -145.38, -22.1193, 0.59", "0.372889, -146.754, -22.6864, 0.59", "0.54485, -148.15, -23.3422, 0.81", "0.749487, -149.854, -24.1812, 1.03", "1.18729, -152.933, -25.8065, 1.03", "1.56687, -155.176, -27.035, 0.81", "1.94072, -157.016, -28.101, 0.59", "1.95842, -157.098, -28.1486, 0.59", "2.25734, -158.446, -28.8934, 0.74", "2.63394, -159.995, -29.5925, 0.66", "3.07232, -161.557, -30.0789, 0.66", "3.52013, -163.131, -30.4874, 0.66", "3.86721, -164.506, -30.812, 0.96", "4.0616, -165.641, -31.0579, 1.18", "4.13804, -167.056, -31.3584, 1.03", "4.02105, -168.292, -31.6209, 0.88", "3.69617, -169.726, -31.9632, 0.66", "3.41136, -170.611, -32.1787, 0.74", "2.79203, -172.316, -32.6076, 0.74", "2.29622, -173.633, -32.915, 0.81", "1.63068, -175.441, -33.2815, 0.81", "1.13418, -177.046, -33.5505, 1.03", "0.887899, -178.187, -33.6959, 1.11", "0.755163, -179.432, -33.8383, 0.81", "0.748614, -181.394, -34.0223, 0.66", "0.894203, -182.948, -34.1081, 0.81", "1.11744, -184.053, -34.1559, 0.81", "1.44803, -185.174, -34.2224, 0.81", "1.73055, -185.915, -34.2826, 1.03", "1.77117, -186.001, -34.2917, 1.03", "2.40175, -187.066, -34.4392, 0.74", "3.16315, -188.221, -34.7041, 0.44", "3.4218, -188.603, -34.8198, 0.74", "3.47214, -188.678, -34.8507, 0.74", "3.85316, -189.301, -35.127, 0.74", "3.90171, -189.387, -35.1647, 0.74", "4.80241, -191.157, -35.8301, 0.59", "5.05395, -191.707, -36.0074, 0.88", "5.54168, -192.929, -36.3428, 0.88", "6.09308, -194.538, -36.6997, 0.66", "6.41629, -195.683, -36.8931, 0.74", "6.75241, -197.199, -37.1299, 0.88", "6.89656, -198.267, -37.3238, 0.44", "6.95472, -199.231, -37.5818, 0.44", "6.94097, -200.335, -37.9462, 0.52", "6.88112, -201.228, -38.3389, 0.81", "6.75361, -202.791, -39.1393, 1.03", "6.65233, -204.542, -40.1214, 0.88", "6.6486, -206.191, -41.0602, 0.59", "6.70366, -207.088, -41.5711, 0.74", "6.95458, -208.702, -42.4056, 0.52", "7.19027, -209.588, -42.7802, 0.52", "7.65705, -210.765, -43.0981, 0.81", "8.11007, -211.633, -43.2281, 1.03", "8.45762, -212.187, -43.27, 1.03", "9.4924, -213.693, -43.3333, 0.52", "9.8926, -214.28, -43.3511, 0.66", "10.5198, -215.273, -43.4146, 0.66", "10.5732, -215.367, -43.4235, 0.66", "11.0464, -216.278, -43.5366, 0.81", "11.6163, -217.482, -43.7239, 0.59", "12.2731, -218.988, -44.0168, 0.37", "12.6229, -219.778, -44.1738, 0.88", "13.0786, -220.71, -44.3958, 1.18", "13.1235, -220.789, -44.4172, 1.18", "13.5649, -221.492, -44.7254, 1.11", "14.0325, -222.219, -45.1945, 0.96", "14.0752, -222.286, -45.2465, 0.96", "14.8179, -223.575, -46.3194, 0.59", "15.2236, -224.38, -46.9786, 0.81", "16.0872, -226.464, -48.5211, 0.59", "16.4222, -227.507, -49.1978, 0.88", "16.5857, -228.249, -49.6001, 0.88", "16.7088, -229.094, -49.9621, 0.81", "16.7807, -230.274, -50.3098, 0.59", "16.8048, -231.523, -50.5339, 0.66", "16.8192, -232.979, -50.6348, 1.03", "16.8393, -233.896, -50.6861, 1.33", "16.856, -234.678, -50.7459, 1.18", "16.8723, -235.729, -50.8892, 0.81", "16.9112, -237.07, -51.248, 0.59", "17.043, -238.336, -51.7304, 0.74", "17.201, -239.108, -52.05, 0.96", "17.2219, -239.179, -52.079, 0.96", "17.7399, -240.573, -52.6213, 0.96", "18.7232, -242.772, -53.4521, 0.74", "19.5521, -244.341, -54.0371, 0.74", "20.3674, -245.743, -54.5288, 0.88", "21.1166, -246.998, -54.8031, 0.88", "21.8989, -248.305, -54.907, 0.59", "22.4447, -249.278, -54.7424, 0.59", "22.8511, -250.168, -54.3676, 0.59", "22.8713, -250.235, -54.331, 0.59", "23.2798, -253.049, -52.6525, 0.52", "23.2797, -254.258, -51.8941, 0.52", "22.9677, -256.593, -50.6017, 1.18", "22.6574, -257.985, -49.9682, 1.18", "22.3287, -259.211, -49.6204, 0.52", "21.8469, -261.028, -49.5569, 0.52", "21.4961, -262.473, -49.8516, 0.66", "21.0321, -264.808, -50.6526, 0.66", "20.851, -266.127, -51.322, 0.66", "20.697, -268.413, -52.6636, 0.66", "20.7605, -270.823, -54.2346, 0.74", "20.8745, -271.668, -54.8299, 1.03", "21.0532, -272.436, -55.3867, 1.03", "21.5458, -273.966, -56.4716, 0.66", "21.9356, -275.017, -57.2281, 0.37", "22.3379, -275.98, -57.8379, 0.74", "22.71, -276.826, -58.3032, 1.03", "22.7457, -276.9, -58.3445, 1.03", "22.9433, -277.216, -58.5085, 1.25", "23.0137, -277.293, -58.5339, 1.25", "23.5119, -277.774, -58.6518, 1.25", "23.575, -277.841, -58.6618, 1.25", "24.0535, -278.415, -58.7239, 1.25", "24.4922, -279.037, -58.7728, 1.25", "25.4911, -280.677, -58.8021, 0.59", "26.2535, -281.965, -58.7901, 0.59", "27.0776, -283.412, -58.745, 0.66", "27.7203, -284.513, -58.6971, 0.66", "28.5674, -285.897, -58.6213, 0.59", "29.2876, -287.012, -58.5457, 0.44", "30.0059, -287.934, -58.474, 0.29", "30.0678, -287.989, -58.4704, 0.29", "31.1344, -288.526, -58.4357, 0.59", "32.1675, -288.939, -58.4285, 0.74", "32.2558, -288.972, -58.4236, 0.74", "33.5525, -289.489, -58.3228, 0.74", "33.634, -289.526, -58.3079, 0.74", "35.5911, -290.432, -57.7395, 0.59", "36.5778, -290.899, -57.3717, 0.81", "38.1342, -291.704, -56.6843, 0.66", "38.22, -291.749, -56.6452, 0.66", "39.7742, -292.521, -55.8756, 1.03", "40.9439, -293.017, -55.2178, 1.47", "41.5359, -293.246, -54.7967, 1.55", "42.7889, -293.727, -53.7832, 0.29", "43.6746, -294.077, -53.0144, 0.59", "44.9657, -294.612, -51.8752, 0.81", "46.4944, -295.272, -50.4819, 1.18", "48.4286, -296.179, -48.6995, 0.44", "49.7178, -296.813, -47.4885, 0.59", "49.7826, -296.847, -47.4291, 0.59", "50.526, -297.341, -46.7895, 0.81", "50.5784, -297.386, -46.7529, 0.81", "51.3543, -298.137, -46.3606, 0.37", "52.2167, -298.982, -46.0558, 0.88", "52.8446, -299.662, -45.8495, 1.33", "53.4454, -300.403, -45.6477, 1.47", "54.6477, -302.05, -45.3198, 0.88", "54.7017, -302.128, -45.3095, 0.88", "55.1975, -302.867, -45.2673, 1.03", "55.9777, -304.088, -45.3299, 0.44", "56.7575, -305.35, -45.4904, 0.44", "57.4005, -306.455, -45.7224, 0.66", "57.4453, -306.533, -45.746, 0.66", "57.8837, -307.251, -45.9542, 0.44", "58.3871, -308.027, -46.1727, 0.81", "58.7197, -308.486, -46.2904, 0.96", "59.2402, -309.175, -46.4331, 1.11", "59.9049, -310.072, -46.5492, 0.29", "60.4476, -310.833, -46.6441, 0.22", "60.5007, -310.912, -46.6535, 0.22", "61.1773, -311.863, -46.7718, 1.47", "61.2341, -311.936, -46.7817, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-7.02485, -97.0793, -22.043, 0.44", "-7.09303, -97.9897, -22.8257, 0.44", "-7.12724, -98.8967, -23.6142, 0.59", "-7.11241, -101.269, -25.6557, 0.59", "-7.06698, -102.367, -26.5782, 0.81", "-6.96826, -103.76, -27.7321, 0.81", "-6.85012, -105.064, -28.7874, 0.88", "-6.76347, -105.814, -29.3671, 1.03", "-6.57157, -106.925, -30.1983, 0.52", "-6.44043, -107.428, -30.5278, 0.88", "-6.22313, -108.231, -31.0407, 0.88", "-6.12943, -108.675, -31.2983, 0.88", "-6.13016, -108.733, -31.329, 0.88", "-6.38305, -109.507, -31.8097, 0.44", "-6.65218, -110.031, -32.2018, 0.74", "-6.94392, -110.639, -32.7095, 0.74", "-7.24418, -111.402, -33.4004, 0.96", "-7.53052, -112.454, -34.4244, 0.96", "-7.66413, -113.53, -35.4779, 0.96", "-7.68631, -114.592, -36.5325, 0.96", "-7.5841, -115.814, -37.6798, 0.88", "-7.38425, -116.993, -38.7054, 0.88", "-7.1536, -118.047, -39.5316, 0.59", "-6.89413, -119.123, -40.3084, 0.59", "-6.7091, -119.962, -40.8704, 0.96", "-6.56338, -120.817, -41.399, 1.25", "-6.47976, -121.656, -41.8818, 1.33", "-6.39732, -122.876, -42.5265, 0.96", "-6.34348, -123.814, -43.0009, 0.81", "-6.26763, -124.837, -43.5351, 0.88", "-6.16288, -125.317, -43.7822, 1.11", "-6.14727, -125.358, -43.8066, 1.11", "-5.787, -125.95, -44.1893, 1.11", "-5.42355, -126.366, -44.4447, 1.25", "-5.33568, -126.451, -44.5043, 1.25", "-4.73073, -127.02, -44.9997, 1.33", "-4.15332, -127.629, -45.6318, 1.03", "-3.865, -128.012, -46.0746, 0.59", "-3.68704, -128.331, -46.4817, 0.81", "-3.40812, -129.201, -47.6832, 0.81", "-3.35342, -129.884, -48.6611, 1.11", "-3.45371, -130.611, -49.6903, 0.88", "-3.67159, -131.482, -50.8596, 0.59", "-3.81852, -131.997, -51.5419, 0.81", "-4.06967, -132.879, -52.7241, 0.96", "-4.24063, -133.626, -53.6764, 0.81", "-4.37923, -134.637, -54.8482, 0.37", "-4.39706, -135.574, -55.8346, 1.03", "-4.25651, -136.92, -57.0807, 0.96", "-3.97166, -138.284, -58.2227, 1.18", "-3.67438, -139.285, -59.0126, 1.18", "-3.30081, -140.329, -59.8094, 1.18", "-2.90859, -141.315, -60.544, 0.81", "-2.44672, -142.407, -61.3103, 0.66", "-2.18028, -143.018, -61.7005, 0.96", "-1.6375, -144.195, -62.402, 1.25", "-1.61336, -144.245, -62.4339, 1.25", "-1.12823, -145.151, -62.9933, 1.11", "-0.753187, -145.86, -63.3601, 0.81", "-0.517939, -146.339, -63.5637, 1.25", "-0.253049, -146.945, -63.7449, 1.25", "-0.0376526, -147.567, -63.8435, 0.66", "0.0933465, -148.21, -63.9604, 0.59", "0.0996555, -149.029, -64.1134, 0.59", "0.036753, -149.425, -64.2096, 0.88", "0.0221221, -149.485, -64.2267, 0.88", "-0.171934, -150.24, -64.496, 0.88", "-0.415901, -151.591, -65.058, 0.59", "-0.442985, -152.189, -65.3541, 0.44", "-0.434168, -152.296, -65.4085, 0.44", "-0.343421, -152.841, -65.6837, 0.74", "-0.161217, -153.695, -66.0833, 0.96", "0.0100826, -154.411, -66.4294, 0.96", "0.276262, -155.5, -66.9046, 0.59", "0.395884, -156.076, -67.1568, 0.88", "0.405603, -156.133, -67.1815, 0.88", "0.495896, -156.75, -67.4298, 0.96", "0.646751, -158.177, -67.9999, 0.59", "0.723181, -158.989, -68.3325, 1.03", "0.802439, -159.62, -68.5865, 1.18", "0.96694, -160.669, -69.022, 0.88", "1.11038, -161.57, -69.3845, 0.74", "1.26024, -162.542, -69.7569, 0.66", "1.41677, -163.779, -70.1737, 0.52", "1.46997, -164.536, -70.4219, 0.81", "1.46269, -165.324, -70.6746, 0.37", "1.37031, -165.991, -70.8793, 0.37", "1.25614, -166.466, -71.0209, 0.88", "1.10336, -166.914, -71.1528, 1.18", "0.858579, -167.441, -71.312, 1.33", "0.422392, -168.341, -71.6189, 0.88", "-0.0213157, -169.329, -72.0081, 0.74", "-0.0455908, -169.385, -72.0315, 0.74", "-0.601832, -170.697, -72.6155, 0.52", "-0.947831, -171.531, -73.0013, 0.66", "-1.55485, -173.041, -73.711, 0.59", "-1.85794, -173.901, -74.0968, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "6.59086, -133.816, -32.3856, 0.37", "7.13683, -133.991, -32.2334, 0.37", "7.73132, -134.224, -32.0712, 0.59", "8.0934, -134.37, -31.9817, 0.59", "8.74412, -134.619, -31.8388, 0.59", "8.83141, -134.652, -31.8211, 0.59", "9.30158, -134.817, -31.7475, 0.22", "9.54423, -134.88, -31.7508, 0.44", "9.93361, -134.945, -31.8376, 0.44", "10.2265, -134.979, -31.9505, 0.81", "10.2753, -134.98, -31.974, 0.81", "10.6204, -134.936, -32.174, 0.96", "11.3696, -134.756, -32.7105, 0.52", "11.6143, -134.686, -32.8977, 0.52", "11.6479, -134.676, -32.924, 0.52", "12.0635, -134.545, -33.2499, 0.44", "12.8313, -134.291, -33.825, 0.74", "13.5454, -134.041, -34.3728, 0.29", "13.8553, -133.924, -34.6037, 0.29", "14.0662, -133.852, -34.7612, 0.59", "14.0958, -133.845, -34.7838, 0.59", "14.3143, -133.816, -34.9703, 1.18", "15.0071, -133.804, -35.5334, 1.11", "15.3876, -133.83, -35.8563, 0.37", "15.9166, -133.89, -36.3142, 0.29", "16.5321, -133.98, -36.8272, 1.11", "17.3598, -134.111, -37.476, 0.66", "17.892, -134.205, -37.8721, 0.44", "18.58, -134.333, -38.3751, 1.18", "18.8403, -134.379, -38.5742, 1.62", "19.2286, -134.43, -38.8654, 1.18", "19.688, -134.467, -39.1786, 0.74", "19.7206, -134.468, -39.1987, 0.74", "20.5602, -134.467, -39.8026, 0.59", "20.5908, -134.465, -39.8255, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "6.59086, -133.816, -32.3856, 0.59", "6.57225, -136.33, -31.795, 0.59", "6.65866, -137.615, -31.1458, 0.66", "6.75445, -138.266, -30.6687, 1.03", "6.78492, -138.511, -30.4689, 1.03", "6.82239, -138.99, -29.9426, 1.03", "6.89044, -140.247, -28.3678, 0.74", "6.91324, -142.049, -25.6005, 1.03", "7.02808, -143.12, -23.5151, 1.11", "7.0893, -143.574, -22.6097, 0.74", "7.27135, -145.552, -18.771, 0.74", "7.27586, -145.628, -18.6261, 0.74", "7.301, -146.47, -17.1033, 0.66", "7.40441, -150.234, -11.5397, 0.66", "7.45653, -151.369, -10.1945, 0.52", "7.57907, -152.82, -8.85808, 0.74", "7.58757, -152.902, -8.80644, 0.74", "7.71796, -154.078, -8.241, 0.88", "8.07325, -157.075, -7.26575, 0.52", "8.20081, -158.513, -7.06453, 0.52", "8.37354, -160.02, -6.85627, 0.52", "8.57147, -161.475, -6.69266, 0.44", "8.69857, -162.602, -6.59, 0.37", "8.90257, -164.582, -6.40624, 0.37", "9.0775, -166.158, -6.30507, 0.59", "9.20378, -167.086, -6.21597, 0.88", "9.22138, -167.184, -6.19875, 0.88", "9.4067, -167.997, -6.005, 0.96", "9.99309, -170.192, -5.17091, 0.44", "10.3565, -171.365, -4.61857, 0.59", "10.3823, -171.437, -4.57588, 0.59", "11.0586, -173.167, -3.54443, 0.81", "11.2793, -173.766, -3.19069, 0.96", "12.1555, -176.321, -1.73827, 0.52", "12.3308, -176.924, -1.42229, 0.74", "12.8275, -178.99, -0.435663, 0.52", "13.1033, -180.324, 0.0519953, 0.74", "13.3116, -181.538, 0.402478, 0.44", "13.4578, -182.596, 0.73724, 0.29", "13.5348, -183.267, 0.988428, 0.37", "13.6502, -184.259, 1.55091, 0.59", "13.831, -185.452, 2.37678, 0.59", "14.261, -187.376, 3.87165, 0.81", "14.9433, -189.382, 5.5528, 0.44", "15.8368, -191.253, 7.25073, 0.88", "17.0864, -193.239, 9.18204, 0.74", "17.7391, -193.958, 9.93101, 0.29", "18.9364, -194.84, 10.883, 0.37", "20.3812, -195.209, 11.1302, 0.37", "21.5873, -195.2, 10.9385, 0.66", "21.6814, -195.189, 10.9106, 0.66", "23.128, -194.904, 10.3064, 0.29", "23.2296, -194.881, 10.2653, 0.29", "24.8542, -194.456, 9.71315, 0.15", "26.3726, -193.97, 9.10913, 0.15", "30.5111, -204.557, 16.8263, 0.15", "33.4122, -215.274, 24.9301, 0.15", "37.6446, -226.967, 30.8752, 0.15", "44.764, -236.434, 37.756, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-23.3853, -427.805, -68.3008, 1.18", "-22.7337, -429.005, -68.1169, 1.18", "-22.0383, -430.204, -67.9056, 0.96", "-21.733, -430.707, -67.8235, 1.47", "-21.3617, -431.31, -67.7404, 1.84", "-20.904, -432.041, -67.6501, 1.33", "-20.2762, -433.053, -67.5542, 0.74", "-20.2415, -433.109, -67.554, 0.74", "-19.7836, -433.842, -67.5718, 0.81", "-19.4138, -434.431, -67.6133, 0.44", "-19.3803, -434.488, -67.6233, 0.44", "-18.8855, -435.44, -67.8671, 0.29", "-18.4647, -436.297, -68.1614, 0.44", "-18.2077, -436.831, -68.3569, 0.81", "-17.9402, -437.335, -68.5335, 0.81", "-17.3361, -438.29, -68.8423, 0.37", "-17.2926, -438.349, -68.8564, 0.37", "-16.7834, -438.991, -68.9533, 0.81", "-16.2589, -439.657, -68.999, 1.11", "-15.5597, -440.617, -68.998, 1.11", "-14.7447, -441.891, -68.9249, 0.29", "-14.2061, -442.898, -68.8154, 0.29", "-13.8947, -443.642, -68.7047, 0.66", "-13.63, -444.59, -68.5315, 0.88", "-13.4967, -445.404, -68.3702, 1.03", "-13.4884, -446.089, -68.2348, 1.03", "-13.5848, -446.896, -68.0446, 0.74", "-13.8032, -448.022, -67.7445, 0.22", "-13.9573, -448.742, -67.5115, 0.74", "-13.9721, -448.809, -67.4844, 0.74", "-14.1046, -449.454, -67.1958, 0.74", "-14.1182, -449.513, -67.1687, 0.74", "-14.3021, -450.273, -66.8425, 0.29", "-14.4178, -450.821, -66.6577, 0.29", "-14.5293, -451.538, -66.4611, 1.03", "-14.6206, -452.277, -66.3443, 1.4", "-14.7077, -453.109, -66.292, 0.52", "-14.7809, -453.637, -66.2954, 0.29", "-14.9753, -454.499, -66.4269, 0.37", "-15.1495, -455.031, -66.6017, 0.66", "-15.4921, -455.848, -67.0548, 0.37", "-15.677, -456.214, -67.369, 0.96", "-15.8618, -456.57, -67.729, 0.96", "-16.3527, -457.454, -68.7112, 0.37", "-16.8124, -458.276, -69.7043, 0.74", "-17.2707, -459.167, -70.828, 1.25", "-17.9668, -460.779, -72.9553, 0.29", "-18.178, -461.321, -73.7026, 0.29", "-18.1914, -461.362, -73.7611, 0.29", "-18.3197, -461.946, -74.5954, 0.88", "-18.3487, -462.22, -74.9861, 1.18", "-18.3025, -463.027, -76.1112, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-23.3853, -427.805, -68.3008, 0.44", "-22.4361, -428.876, -68.3461, 0.44", "-21.2926, -430.212, -68.3688, 0.44", "-21.2286, -430.294, -68.3679, 0.44", "-20.7876, -430.875, -68.3552, 0.29", "-20.2425, -431.573, -68.3346, 0.81", "-19.6081, -432.341, -68.3085, 1.11", "-19.5596, -432.404, -68.3025, 1.11", "-18.874, -433.32, -68.2323, 0.44", "-18.8223, -433.393, -68.2284, 0.44", "-18.1951, -434.311, -68.2038, 0.37", "-17.7742, -434.988, -68.1878, 0.37", "-17.1209, -436.158, -68.1651, 0.29", "-16.7477, -436.834, -68.1646, 0.74", "-16.527, -437.227, -68.1706, 0.81", "-16.4301, -437.398, -68.1826, 0.81", "-15.8705, -438.361, -68.2912, 0.44", "-15.3557, -439.198, -68.4124, 0.29", "-14.749, -440.074, -68.565, 0.52", "-14.3871, -440.547, -68.6564, 0.52", "-13.4297, -441.763, -68.9393, 0.29", "-12.7498, -442.631, -69.1985, 0.59", "-12.6984, -442.701, -69.2271, 0.59", "-12.4081, -443.175, -69.4276, 0.59", "-12.3681, -443.248, -69.4594, 0.59", "-11.6677, -444.671, -70.1042, 0.81", "-11.3182, -445.48, -70.4818, 1.03", "-10.8645, -446.649, -71.0829, 0.59", "-10.3961, -447.927, -71.7554, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-98.2227, -148.728, 8.26271, 0.37", "-105.758, -157.851, 12.404, 0.37", "-115.483, -165.415, 14.3796, 0.37", "-126.363, -171.413, 14.803, 0.37", "-136.433, -178.311, 17.3043, 0.37", "-146.609, -184.879, 20.1977, 0.37", "-155.66, -193.16, 22.6045, 0.37", "-163.591, -202.283, 25.9116, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-98.2227, -148.728, 8.26271, 0.29", "-104.838, -156.466, 11.7881, 0.37", "-110.273, -165.059, 15.451, 0.37", "-115.186, -174.239, 18.4123, 0.37", "-120.949, -182.553, 22.1854, 0.37", "-127.142, -191.213, 23.9735, 0.37", "-133.695, -199.196, 27.0583, 0.37", "-140.723, -206.029, 31.4672, 0.37", "-147.956, -212.604, 35.9159, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "87.3675, 178.224, 61.9103, 0.29", "89.3988, 186.705, 64.9329, 0.29", "91.4795, 194.597, 69.1833, 0.29", "92.8083, 202.782, 73.1989, 0.29", "94.7772, 210.622, 77.5927, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "87.3675, 178.224, 61.9103, 0.44", "90.1753, 190.292, 65.5147, 0.29", "91.5722, 202.735, 68.6856, 0.29", "92.6956, 214.569, 73.6533, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-130.471, -193.825, -0.758547, 0.29", "-137.248, -201.811, -3.84676, 0.29", "-144.655, -208.556, -8.08868, 0.29", "-151.569, -214.934, -13.5324, 0.29", "-159.425, -221.76, -16.71, 0.29", "-167.176, -228.743, -19.8203, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-130.471, -193.825, -0.758547, 0.44", "-134.981, -203.148, -3.58466, 0.29", "-138.845, -212.781, -6.36722, 0.29", "-141.827, -222.989, -8.10028, 0.29", "-145.563, -232.996, -9.48631, 0.29", "-149.571, -242.971, -10.208, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-126.121, -149.067, 24.3592, 0.22", "-125.277, -148.438, 24.8945, 0.22", "-124.89, -148.162, 25.1232, 0.52", "-124.603, -147.978, 25.2665, 0.74", "-123.679, -147.451, 25.6692, 0.37", "-122.628, -146.881, 26.0696, 0.37", "-122.239, -146.671, 26.2175, 0.37", "-122.071, -146.59, 26.2694, 0.37", "-121.261, -146.238, 26.5119, 0.37", "-120.88, -146.091, 26.6078, 0.88", "-120.3, -145.902, 26.6586, 0.88", "-112.903, -142.934, 30.483, 0.88", "-105.839, -138.428, 33.4032, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-126.121, -149.067, 24.3592, 0.44", "-126.131, -147.96, 24.3576, 0.44", "-126.098, -146.894, 24.3655, 0.37", "-126.094, -146.844, 24.3681, 0.37", "-126.042, -145.989, 24.445, 0.37", "-126.04, -145.902, 24.4578, 0.37", "-126.038, -144.863, 24.6442, 0.37", "-126.038, -144.808, 24.6593, 0.37", "-126.079, -144.133, 24.8765, 0.29", "-126.161, -143.415, 25.113, 0.29", "-126.279, -142.757, 25.3382, 0.29", "-126.317, -142.599, 25.3916, 0.66", "-126.356, -142.482, 25.4268, 0.66", "-126.496, -142.08, 25.5152, 0.66", "-126.739, -141.433, 25.5991, 0.29", "-126.853, -141.159, 25.6203, 0.44", "-126.9, -141.058, 25.6251, 0.44", "-127.157, -140.573, 25.6555, 0.37", "-127.463, -140.045, 25.6994, 0.37", "-127.491, -139.998, 25.7043, 0.37", "-128.046, -139.144, 25.8176, 0.29", "-128.375, -138.632, 25.8941, 0.44", "-128.469, -138.481, 25.9229, 0.44", "-128.763, -137.997, 26.0397, 0.44", "-129.041, -137.519, 26.1632, 0.29", "-129.098, -137.415, 26.191, 0.29", "-129.245, -137.114, 26.2772, 0.44", "-129.403, -136.78, 26.3752, 0.44", "-129.429, -136.723, 26.3915, 0.44", "-129.591, -136.321, 26.4995, 0.44", "-129.735, -135.884, 26.6211, 0.44", "-129.746, -135.83, 26.635, 0.44", "-129.821, -135.332, 26.7491, 0.37", "-129.851, -135.088, 26.7984, 0.37", "-129.914, -134.455, 26.9036, 0.44", "-129.954, -133.894, 26.9845, 0.44", "-129.99, -133.278, 27.0142, 0.44", "-130.036, -132.414, 27.0066, 0.44", "-130.09, -131.616, 26.9675, 0.74", "-130.182, -130.551, 26.8767, 0.81", "-130.229, -130.113, 26.8203, 0.74", "-130.425, -128.577, 26.545, 0.29", "-130.432, -128.529, 26.5347, 0.29", "-130.48, -128.183, 26.4509, 0.29", "-130.493, -128.065, 26.4256, 0.29", "-130.518, -127.773, 26.394, 0.44", "-130.52, -127.718, 26.392, 0.44", "-130.528, -127.321, 26.4082, 0.44", "-130.519, -126.677, 26.426, 0.88", "-130.48, -125.772, 26.4404, 0.52", "-130.442, -125.067, 26.4505, 0.52", "-130.411, -124.498, 26.4486, 0.44", "-130.386, -123.872, 26.4409, 0.29", "-130.373, -123.403, 26.4304, 0.59", "-130.373, -123.221, 26.4257, 0.59", "-130.388, -122.763, 26.4157, 0.59", "-130.407, -122.306, 26.407, 0.29", "-130.433, -121.683, 26.4094, 0.29", "-130.434, -121.619, 26.4098, 0.29", "-130.44, -121.148, 26.4077, 0.59", "-130.44, -121.074, 26.4071, 0.59", "-130.438, -120.549, 26.4093, 0.66", "-130.433, -119.968, 26.4203, 0.66", "-130.42, -119.352, 26.431, 0.29", "-130.398, -118.49, 26.4471, 0.29", "-130.394, -118.426, 26.4484, 0.29", "-130.323, -117.336, 26.5083, 0.29", "-130.315, -117.213, 26.5195, 0.29", "-130.27, -116.518, 26.607, 0.52", "-130.264, -116.398, 26.6268, 0.52", "-130.242, -115.679, 26.7704, 0.81", "-130.244, -114.995, 26.9105, 0.52", "-130.266, -114.436, 27.0303, 0.52", "-130.302, -113.917, 27.1312, 0.74", "-130.361, -113.299, 27.2317, 0.88", "-130.377, -113.066, 27.2523, 0.88", "-130.374, -112.323, 27.2298, 0.88", "-130.368, -112.267, 27.2223, 0.88", "-130.29, -111.875, 27.1494, 0.66", "-130.128, -111.28, 27.0556, 0.44", "-129.848, -110.399, 26.9792, 0.37", "-129.572, -109.534, 26.9601, 0.29", "-129.378, -108.949, 26.9741, 0.29", "-129.361, -108.895, 26.978, 0.29", "-129.097, -107.899, 27.1076, 0.29", "-128.816, -106.649, 27.3316, 0.29", "-128.701, -105.916, 27.4975, 0.37", "-128.69, -105.798, 27.5252, 0.37", "-128.653, -105.176, 27.6504, 0.37", "-128.614, -104.558, 27.7664, 0.37", "-128.607, -104.446, 27.7847, 0.37", "-128.575, -103.592, 27.9417, 0.52", "-128.561, -102.723, 28.1171, 0.44", "-128.56, -101.809, 28.3125, 1.11", "-128.551, -100.587, 28.5801, 0.29", "-128.549, -100.525, 28.5963, 0.29", "-128.505, -99.5919, 28.8534, 0.29", "-128.464, -99.0643, 29.0031, 0.29", "-128.46, -99.0186, 29.0159, 0.29", "-128.357, -98.078, 29.2596, 0.37", "-128.194, -96.6752, 29.5794, 0.37", "-128.055, -95.6803, 29.7911, 0.37", "-127.916, -94.8853, 29.9488, 0.81", "-127.819, -94.3609, 30.0466, 1.03", "-127.663, -93.4741, 30.1956, 0.29", "-127.567, -92.87, 30.2805, 0.29", "-127.512, -92.4595, 30.3148, 0.44", "-127.506, -92.4045, 30.3197, 0.44", "-127.49, -92.1082, 30.3482, 0.44", "-127.481, -91.3702, 30.4523, 0.29", "-127.484, -91.2597, 30.4722, 0.29", "-127.525, -90.3392, 30.6621, 0.29", "-127.529, -90.2836, 30.6744, 0.29", "-127.629, -89.2807, 30.9054, 0.29", "-127.693, -88.6939, 31.0428, 0.66", "-127.734, -88.2704, 31.1414, 0.74", "-127.739, -88.1607, 31.1649, 0.74", "-127.728, -87.1369, 31.3574, 0.29", "-127.721, -87.0317, 31.3737, 0.29", "-127.66, -86.3932, 31.4398, 0.29", "-127.613, -85.9464, 31.4701, 0.74", "-127.517, -85.2388, 31.5099, 0.22", "-127.346, -84.2207, 31.5567, 0.22", "-127.131, -83.2979, 31.5872, 1.03", "-126.888, -82.3704, 31.6127, 0.29", "-126.838, -82.1966, 31.6169, 0.29", "-126.557, -81.258, 31.6379, 0.29", "-126.502, -81.0864, 31.6416, 0.29", "-125.991, -79.6262, 31.6713, 0.29", "-125.94, -79.4808, 31.676, 0.29", "-125.59, -78.4622, 31.6915, 0.29", "-125.571, -78.4004, 31.6909, 0.29", "-125.371, -77.5943, 31.6635, 0.44", "-125.36, -77.5385, 31.6604, 0.44", "-125.265, -76.8569, 31.6052, 0.44", "-125.171, -76.1491, 31.5412, 0.74", "-125.166, -76.0927, 31.5355, 0.74", "-125.138, -75.7606, 31.5043, 1.03", "-125.104, -75.1466, 31.4622, 0.59", "-125.09, -74.5052, 31.51, 0.29", "-125.09, -74.3864, 31.5364, 0.29", "-125.106, -73.9786, 31.682, 0.29", "-125.11, -73.919, 31.7064, 0.29", "-125.164, -73.2918, 31.9899, 0.88", "-125.253, -72.3779, 32.399, 0.88", "-125.263, -72.2749, 32.4417, 0.88", "-125.298, -71.8412, 32.6061, 0.66", "-125.309, -71.4132, 32.7762, 0.29", "-125.299, -70.9695, 32.9527, 0.29", "-125.244, -70.1148, 33.2795, 0.29", "-125.2, -69.6822, 33.4287, 0.44", "-125.192, -69.6224, 33.4516, 0.44", "-125.051, -68.7526, 33.8795, 0.37", "-124.968, -68.1672, 34.1977, 0.29", "-124.964, -68.1174, 34.2248, 0.29", "-124.944, -67.712, 34.4414, 0.74", "-124.945, -67.6695, 34.4612, 0.74", "-125.056, -66.5631, 34.9147, 0.29", "-125.218, -65.5426, 35.2551, 0.29", "-125.362, -64.6865, 35.5383, 0.22", "-125.392, -64.5214, 35.5932, 0.22", "-125.61, -63.3891, 35.953, 0.29", "-125.621, -63.3283, 35.971, 0.29", "-125.815, -62.3412, 36.2239, 0.29", "-125.969, -61.5081, 36.4683, 0.29", "-126.113, -60.6576, 36.7513, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-213.991, -210.474, 69.4423, 0.37", "-214.238, -211.113, 69.0397, 0.37", "-214.857, -212.45, 68.2469, 0.37", "-215.392, -213.586, 67.6349, 0.29", "-215.724, -214.258, 67.2615, 0.44", "-216.053, -214.927, 66.8998, 0.44", "-216.696, -216.252, 66.2126, 0.29", "-216.949, -216.737, 65.9762, 0.37", "-217.334, -217.426, 65.6907, 0.37", "-218.144, -218.805, 65.0548, 0.37", "-218.519, -219.444, 64.7376, 0.37", "-218.772, -219.899, 64.5028, 0.66", "-218.807, -219.962, 64.4721, 0.66", "-219.06, -220.369, 64.2594, 0.74", "-219.776, -221.37, 63.7075, 0.37", "-220.247, -221.953, 63.4129, 0.37", "-220.305, -222.012, 63.3757, 0.37", "-220.748, -222.429, 63.0773, 0.37", "-224.51, -232.259, 59.6834, 0.37", "-226.741, -242.868, 57.3536, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-213.991, -210.474, 69.4423, 0.29", "-215.104, -210.283, 70.13, 0.29", "-216.094, -210.171, 70.8904, 0.52", "-217.499, -210.116, 71.9715, 0.44", "-217.996, -210.157, 72.337, 0.29", "-218.946, -210.314, 72.9772, 0.29", "-219.72, -210.462, 73.5202, 0.44", "-221.565, -210.891, 74.9013, 0.29", "-222.341, -211.069, 75.4559, 0.29", "-223.466, -211.352, 76.2462, 0.29", "-224.522, -211.625, 77.0529, 0.29", "-225.628, -211.894, 77.9374, 0.29", "-225.682, -211.908, 77.9805, 0.29", "-226.646, -212.074, 78.7115, 0.44", "-228.024, -212.16, 79.8865, 0.44", "-228.155, -212.149, 80.0104, 0.44", "-228.869, -212.073, 80.735, 0.66", "-229.657, -212.082, 81.3821, 0.66", "-238.709, -212.818, 88.6742, 0.66", "-245.882, -213.367, 97.8341, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "61.2341, -311.936, -46.7817, 0.52", "60.2672, -312.827, -46.3311, 0.52", "59.5133, -313.556, -46.002, 0.29", "58.7123, -314.398, -45.6868, 0.22", "58.3103, -314.847, -45.5119, 0.52", "57.9535, -315.259, -45.3468, 0.74", "57.5032, -315.79, -45.134, 0.81", "57.082, -316.284, -44.9388, 0.66", "56.4771, -317.0, -44.6861, 0.29", "55.8128, -317.913, -44.3869, 0.29", "55.7719, -317.973, -44.3681, 0.29", "55.6455, -318.168, -44.3097, 0.66", "55.2812, -318.725, -44.1395, 0.81", "54.8188, -319.411, -43.9306, 0.22", "54.4126, -320.004, -43.7672, 0.22", "54.2171, -320.301, -43.7213, 0.52", "53.9793, -320.675, -43.6672, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "61.2341, -311.936, -46.7817, 1.18", "61.6717, -312.62, -46.7706, 1.18", "61.8468, -312.94, -46.7517, 1.4", "62.1313, -313.551, -46.6512, 0.37", "62.3215, -314.117, -46.4673, 0.44", "62.417, -314.594, -46.2665, 0.66", "62.4774, -315.272, -45.8983, 0.66", "62.4639, -315.619, -45.6816, 0.66", "62.3852, -316.406, -45.1669, 0.59", "62.2451, -317.424, -44.4872, 0.37", "62.1596, -318.028, -44.0866, 1.55", "62.049, -319.11, -43.4183, 0.37", "62.0211, -319.797, -43.0621, 0.44", "62.0552, -320.488, -42.7794, 0.44", "62.112, -320.882, -42.6817, 0.88", "62.1957, -321.248, -42.6417, 1.03", "62.3691, -321.965, -42.6058, 0.37", "62.4856, -322.525, -42.6134, 0.37", "62.5336, -322.805, -42.6113, 0.88", "62.5891, -323.183, -42.6031, 0.96", "62.6572, -323.811, -42.5798, 0.96", "62.7337, -324.588, -42.5478, 0.29", "62.8455, -325.378, -42.4669, 0.29", "62.8981, -325.66, -42.4232, 0.66", "62.9761, -325.983, -42.3412, 0.88", "62.9898, -326.031, -42.3252, 0.88", "63.1214, -326.419, -42.1651, 0.74", "63.435, -327.389, -41.6966, 0.29", "63.5737, -327.904, -41.4353, 0.29", "63.7696, -328.593, -41.1271, 1.11", "63.8872, -328.933, -41.0037, 1.11", "63.9061, -328.98, -40.9912, 1.11", "64.0836, -329.381, -40.9275, 1.11", "64.5592, -330.306, -40.8384, 0.29", "64.9884, -331.085, -40.7725, 0.29", "65.3607, -331.767, -40.7157, 0.29", "65.5634, -332.148, -40.6731, 0.81", "65.8008, -332.613, -40.5919, 0.96", "66.2864, -333.503, -40.3144, 0.96", "66.5668, -334.027, -40.0893, 0.37", "66.822, -334.546, -39.8191, 0.88", "67.0087, -334.967, -39.5825, 0.88", "67.3482, -335.805, -39.1066, 0.59", "67.7536, -336.943, -38.4965, 0.44", "67.8915, -337.398, -38.2905, 0.59", "67.9822, -337.768, -38.1456, 0.59", "68.0844, -338.359, -37.9694, 0.88", "68.1533, -338.896, -37.87, 0.29", "68.2094, -339.524, -37.8153, 0.29", "68.2687, -340.176, -37.7752, 0.37", "68.3597, -340.887, -37.7103, 0.96", "68.4371, -341.401, -37.6502, 1.33", "68.5981, -342.25, -37.4942, 0.37", "68.7179, -342.858, -37.3436, 0.52", "68.8672, -343.643, -37.1038, 0.44", "68.9456, -344.056, -36.9625, 0.29", "69.0375, -344.501, -36.8046, 0.88", "69.1881, -345.292, -36.5224, 0.74", "69.3015, -345.809, -36.3232, 0.29", "69.4386, -346.292, -36.1558, 0.59", "69.5944, -346.813, -35.9913, 0.74", "69.7316, -347.235, -35.839, 0.88", "69.7477, -347.286, -35.8189, 0.88", "70.0073, -348.342, -35.3976, 0.52", "70.0688, -348.758, -35.2022, 0.52", "70.0879, -349.375, -34.847, 0.52", "70.0654, -350.013, -34.463, 0.96", "70.0541, -350.343, -34.2395, 1.33", "70.0565, -350.812, -33.9069, 0.59", "70.0658, -351.409, -33.4896, 0.37", "70.1332, -352.265, -32.9071, 0.44", "70.2032, -352.774, -32.6012, 0.66", "70.3672, -353.719, -32.1387, 0.96", "70.5707, -354.681, -31.7263, 0.44", "70.6847, -355.174, -31.5454, 1.03", "70.8364, -355.763, -31.3814, 1.18", "71.0245, -356.577, -31.2497, 0.29", "71.1645, -357.357, -31.2084, 0.29", "71.1791, -357.474, -31.216, 0.88", "71.1993, -357.754, -31.2473, 1.25", "71.2292, -358.332, -31.2887, 0.66", "71.2449, -358.965, -31.3047, 0.59", "71.2499, -359.842, -31.2891, 0.52", "71.2363, -360.362, -31.2635, 0.52", "71.2095, -361.108, -31.2106, 0.52", "71.1897, -361.81, -31.1262, 0.37", "71.1558, -362.459, -31.0506, 0.29", "71.1439, -362.717, -31.0271, 0.74", "71.139, -362.871, -31.02, 0.74", "71.1283, -363.296, -31.0308, 0.74", "71.1178, -363.984, -31.1021, 0.81", "71.0726, -365.043, -31.2901, 0.81", "71.0573, -365.731, -31.4378, 0.81", "71.0606, -366.494, -31.6146, 0.81", "71.0618, -366.544, -31.6262, 0.81", "71.0913, -367.213, -31.787, 0.59", "71.1492, -368.048, -31.9899, 0.44", "71.2182, -368.583, -32.0873, 0.44", "71.3223, -369.196, -32.187, 0.29", "71.421, -369.714, -32.2502, 0.74", "71.4733, -370.024, -32.2748, 0.96", "71.4809, -370.075, -32.2734, 0.96", "71.5344, -370.603, -32.2067, 0.52", "71.5689, -371.376, -32.032, 0.52", "71.5883, -372.097, -31.8173, 0.52", "71.6091, -372.575, -31.6635, 0.59", "71.6745, -373.396, -31.3998, 0.74", "71.7306, -373.847, -31.2607, 0.52", "71.8575, -374.676, -31.0296, 0.37", "71.8666, -374.726, -31.0177, 0.37", "72.0552, -375.483, -30.9027, 0.44", "72.2232, -376.026, -30.8788, 0.37", "72.3509, -376.405, -30.9135, 0.74", "72.5398, -376.984, -30.9953, 0.29", "72.5504, -377.025, -31.0027, 0.29", "72.6102, -377.3, -31.0471, 0.44", "72.616, -377.342, -31.0524, 0.44", "72.6402, -377.721, -31.0867, 0.44", "72.6744, -378.467, -31.1296, 0.22", "72.7189, -378.993, -31.1366, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-1.85794, -173.901, -74.0968, 0.29", "-2.85057, -173.581, -74.6745, 0.29", "-2.97916, -173.541, -74.7387, 0.29", "-3.58698, -173.336, -75.0047, 0.29", "-5.04096, -172.785, -75.5676, 0.29", "-5.56636, -172.558, -75.7839, 0.59", "-7.02028, -171.836, -76.3837, 0.59", "-7.80809, -171.359, -76.7114, 0.37", "-8.22144, -171.062, -76.8978, 0.66", "-8.65072, -170.719, -77.11, 0.88", "-10.1062, -169.45, -77.8749, 0.22", "-10.6401, -168.95, -78.1815, 0.44", "-11.0763, -168.494, -78.4456, 0.59", "-11.8037, -167.71, -78.9781, 0.29", "-12.4492, -167.034, -79.4935, 0.74", "-13.2246, -166.259, -80.1503, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-1.85794, -173.901, -74.0968, 0.52", "-2.76502, -175.928, -76.5986, 0.52", "-2.79351, -175.987, -76.6527, 0.52", "-3.05679, -176.547, -77.0669, 0.52", "-3.91163, -178.53, -78.3079, 1.33", "-4.23016, -179.301, -78.7468, 1.77", "-4.64306, -180.449, -79.3166, 0.66", "-5.10979, -181.891, -79.8119, 0.66", "-5.64524, -183.831, -80.5008, 0.66", "-5.85197, -184.896, -80.921, 0.88", "-5.87217, -185.174, -81.0347, 0.88", "-5.85325, -186.896, -81.7932, 0.88", "-5.84853, -186.963, -81.825, 0.88", "-5.54668, -189.05, -82.8372, 0.66", "-5.20572, -190.67, -83.7031, 0.44", "-4.97693, -191.646, -84.2932, 0.96", "-4.63379, -193.029, -85.1973, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-147.956, -212.604, 35.9159, 0.29", "-151.766, -216.256, 43.3737, 0.29", "-156.048, -219.402, 50.7913, 0.29", "-160.475, -222.859, 57.9897, 0.29", "-165.536, -228.381, 63.2984, 0.29", "-170.018, -233.73, 69.2605, 0.29", "-174.322, -238.871, 75.5204, 0.29", "-178.786, -243.656, 81.9338, 0.29", "-182.97, -248.952, 88.1542, 0.29", "-186.846, -254.624, 94.2576, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-147.956, -212.604, 35.9159, 0.44", "-154.139, -220.428, 33.853, 0.29", "-161.293, -227.1, 31.1695, 0.29", "-167.968, -234.292, 28.5269, 0.29", "-173.403, -242.106, 24.9132, 0.29", "-177.634, -250.046, 20.1378, 0.29", "-181.111, -257.737, 14.4558, 0.29", "-185.025, -264.454, 7.94353, 0.29", "-189.955, -270.508, 1.50225, 0.29", "-193.708, -278.263, -3.91682, 0.29", "-197.575, -286.976, -7.58854, 0.29", "-201.947, -296.047, -9.4085, 0.29", "-207.809, -304.4, -9.34487, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "94.7772, 210.622, 77.5927, 0.29", "96.5832, 221.29, 81.7305, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "94.7772, 210.622, 77.5927, 0.44", "96.852, 220.108, 82.1457, 0.29", "99.2711, 229.146, 87.3512, 0.29", "101.215, 238.324, 92.5147, 0.29", "103.095, 246.788, 98.7455, 0.29", "103.266, 256.04, 104.114, 0.29", "103.18, 264.651, 110.412, 0.29", "101.819, 274.161, 115.123, 0.29", "99.8246, 283.284, 120.301, 0.29", "96.616, 291.067, 126.784, 0.29", "94.7496, 299.074, 133.534, 0.29", "95.0191, 306.197, 141.408, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-126.113, -60.6576, 36.7513, 0.22", "-127.157, -60.6452, 36.9717, 0.22", "-128.884, -60.6245, 37.3363, 0.22", "-129.639, -60.6155, 37.4959, 0.52", "-130.103, -60.6099, 37.5939, 0.74", "-139.695, -59.0637, 41.0058, 0.74", "-149.133, -58.2528, 45.0363, 0.74", "-157.701, -56.4027, 50.4573, 0.74", "-165.906, -56.1903, 56.6713, 0.74", "-173.264, -54.3418, 63.656, 0.74", "-179.139, -53.1307, 72.0428, 0.74", "-183.204, -51.776, 81.4304, 0.74", "-186.84, -49.5894, 90.8542, 0.74", "-190.82, -46.4863, 99.8911, 0.74", "-194.139, -44.5935, 109.489, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-126.113, -60.6576, 36.7513, 0.44", "-126.063, -60.0606, 36.8983, 0.44", "-126.033, -59.6251, 36.9989, 0.66", "-126.03, -59.5444, 37.0166, 0.66", "-126.023, -59.3001, 37.0689, 0.59", "-126.0, -58.7397, 37.1836, 0.29", "-125.944, -57.8426, 37.3569, 0.29", "-125.938, -57.7489, 37.3778, 0.29", "-125.89, -57.0979, 37.5442, 0.52", "-125.886, -57.0488, 37.5578, 0.52", "-125.824, -56.384, 37.7537, 0.52", "-125.729, -55.5782, 38.0009, 1.03", "-125.573, -54.5974, 38.3186, 0.29", "-125.565, -54.5553, 38.3327, 0.29", "-125.429, -53.9921, 38.5357, 0.29", "-125.308, -53.5995, 38.6758, 0.52", "-125.16, -53.2035, 38.8167, 0.52", "-124.974, -52.7742, 38.955, 0.96", "-124.959, -52.7416, 38.9639, 0.96", "-124.505, -51.7607, 39.2295, 0.29", "-124.134, -50.9438, 39.449, 0.29", "-124.116, -50.8979, 39.4611, 0.29", "-123.862, -50.1327, 39.6533, 0.29", "-123.803, -49.8721, 39.7119, 0.59", "-123.786, -49.7408, 39.7396, 0.59", "-123.79, -49.3833, 39.8074, 0.52", "-123.823, -49.0055, 39.8845, 0.66", "-123.862, -48.6069, 39.9664, 0.66", "-123.935, -47.9899, 40.0952, 0.29", "-123.943, -47.8973, 40.1199, 0.29", "-123.961, -47.5011, 40.2429, 0.29", "-123.958, -47.2004, 40.3763, 0.52", "-123.956, -47.162, 40.3971, 0.52", "-123.889, -46.6198, 40.7186, 0.37", "-123.778, -45.9773, 41.1275, 0.59", "-123.71, -45.6619, 41.3264, 0.96", "-123.491, -44.785, 41.881, 0.37", "-123.475, -44.7337, 41.9149, 0.37", "-123.266, -44.1471, 42.304, 0.37", "-123.251, -44.1119, 42.3274, 0.37", "-123.072, -43.6983, 42.573, 0.37", "-123.029, -43.5784, 42.6298, 0.37", "-122.817, -42.6784, 42.9264, 0.59", "-122.788, -42.5096, 42.9775, 0.88", "-122.781, -42.4664, 42.9889, 0.88", "-122.733, -42.1128, 43.0714, 0.88", "-122.558, -40.8234, 43.3276, 0.29", "-122.393, -39.6917, 43.4798, 0.29", "-122.367, -39.5295, 43.4929, 0.29", "-122.158, -38.2149, 43.6241, 0.29", "-122.133, -38.032, 43.6462, 0.29", "-122.027, -37.1632, 43.7656, 0.37", "-121.929, -36.0896, 43.9425, 0.37", "-121.899, -35.5689, 44.0716, 0.37", "-121.881, -34.7778, 44.3293, 0.29", "-121.91, -34.0064, 44.6365, 0.29", "-121.916, -33.9196, 44.677, 0.29", "-121.976, -33.5405, 44.913, 0.29", "-122.178, -32.6888, 45.6281, 1.18", "-122.216, -32.5244, 45.7736, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.63379, -193.029, -85.1973, 0.88", "-5.24635, -194.298, -85.667, 0.88", "-5.64078, -195.207, -85.9554, 1.47", "-5.96735, -196.105, -86.2105, 1.69", "-6.50359, -197.954, -86.6812, 0.59", "-6.51875, -198.017, -86.6982, 0.59", "-6.75171, -199.157, -87.0116, 0.29", "-6.87189, -200.058, -87.2492, 0.44", "-6.94444, -200.845, -87.5301, 0.66", "-7.00622, -201.703, -87.9733, 1.11", "-7.03892, -202.539, -88.4619, 1.47", "-7.0673, -202.964, -88.7251, 1.47", "-7.07383, -203.032, -88.7684, 1.47", "-7.33366, -205.03, -89.9464, 1.11", "-7.65056, -206.847, -90.8326, 0.59", "-7.80525, -207.787, -91.1844, 0.81", "-7.91906, -208.657, -91.4233, 1.11", "-7.98806, -209.554, -91.6023, 1.25", "-8.02817, -210.871, -91.7623, 0.66", "-8.00271, -212.374, -91.7859, 0.52", "-7.93337, -213.807, -91.7479, 1.03", "-7.89677, -214.511, -91.7502, 1.25", "-7.80002, -215.993, -91.8046, 0.66", "-7.77492, -216.437, -91.8461, 0.44", "-7.73273, -217.015, -91.9384, 0.96", "-7.69257, -217.519, -92.0481, 1.25", "-7.62028, -218.819, -92.3732, 1.11", "-7.58349, -219.849, -92.6609, 0.96", "-7.53261, -220.97, -92.9494, 0.66", "-7.47157, -222.148, -93.2013, 0.59", "-7.46678, -222.228, -93.2155, 0.59", "-7.4267, -223.135, -93.3148, 0.59", "-7.45355, -224.351, -93.3048, 0.52", "-7.61305, -225.533, -93.1589, 0.81", "-7.8484, -226.401, -92.9424, 1.03", "-7.89408, -226.511, -92.9062, 1.03", "-8.272, -227.307, -92.6134, 1.03", "-8.87582, -228.337, -92.1593, 0.52", "-9.26156, -228.892, -91.8716, 1.11", "-9.74978, -229.48, -91.5994, 1.33", "-9.79979, -229.536, -91.5708, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-4.63379, -193.029, -85.1973, 0.52", "-3.43518, -193.531, -84.7387, 0.52", "-1.23631, -194.443, -83.8081, 0.29", "0.0577499, -195.006, -83.2721, 0.59", "0.835601, -195.348, -82.9139, 0.96", "3.20804, -196.402, -81.806, 0.22", "4.82984, -197.11, -81.0647, 0.59", "4.91685, -197.146, -81.0244, 0.59", "6.10622, -197.657, -80.548, 0.52", "7.85644, -198.529, -79.8226, 0.37", "8.5965, -198.962, -79.5369, 0.81", "9.17987, -199.353, -79.3706, 0.96", "10.6419, -200.404, -79.0396, 0.37", "11.9622, -201.374, -78.9413, 0.37", "13.201, -202.324, -79.0821, 0.44", "13.9023, -202.884, -79.3073, 0.44", "14.8471, -203.642, -79.629, 0.22", "15.5236, -204.157, -79.8679, 0.44", "18.0673, -205.916, -80.7987, 0.37", "19.0866, -206.559, -81.1721, 0.52", "20.236, -207.233, -81.589, 0.59", "21.5559, -207.94, -81.9897, 0.81", "22.9402, -208.634, -82.3081, 0.29", "24.1945, -209.202, -82.4762, 0.52", "24.8801, -209.477, -82.4859, 0.81", "25.5889, -209.701, -82.5186, 1.11", "25.8928, -209.776, -82.5462, 1.11", "26.495, -209.894, -82.6348, 0.96", "27.6207, -210.024, -82.6892, 0.59", "29.5005, -210.078, -82.4892, 0.29", "30.4291, -210.1, -82.3122, 0.52", "31.1541, -210.119, -82.1372, 0.66", "31.2496, -210.125, -82.1109, 0.66", "33.6399, -210.382, -81.3479, 0.52", "35.4526, -210.645, -80.7116, 0.74", "37.235, -210.937, -80.0673, 0.22", "37.7208, -211.038, -79.9133, 0.74", "38.6045, -211.274, -79.6598, 0.81", "40.5487, -211.932, -79.2018, 0.22", "41.1455, -212.207, -79.1239, 0.66", "41.7027, -212.508, -79.075, 0.74", "43.0409, -213.347, -78.9362, 0.22", "44.1911, -214.164, -78.7727, 0.66", "44.5872, -214.476, -78.7108, 0.81", "45.2797, -215.12, -78.6029, 0.52", "45.3409, -215.178, -78.5927, 0.52", "46.2721, -216.127, -78.4707, 0.22", "47.4813, -217.443, -78.3899, 0.74", "48.1233, -218.128, -78.4814, 0.81", "48.2624, -218.269, -78.5149, 0.81", "48.946, -218.912, -78.761, 0.59", "49.6073, -219.491, -79.1524, 0.29", "50.2953, -220.092, -79.7081, 1.03", "51.2977, -221.088, -80.6998, 1.03", "51.4747, -221.294, -80.8933, 1.25", "52.0904, -222.176, -81.5962, 0.66", "53.0316, -223.806, -82.705, 0.52", "53.5719, -224.909, -83.3108, 0.37", "53.9409, -225.84, -83.7228, 0.29", "54.2286, -226.806, -84.0047, 0.29", "54.6402, -228.523, -84.3596, 0.29", "54.7599, -229.127, -84.4635, 0.81", "54.9256, -229.965, -84.5837, 1.03", "54.9524, -230.064, -84.6021, 1.03", "55.4424, -231.42, -84.9232, 0.59", "56.0116, -232.68, -85.2001, 0.44", "56.6923, -234.094, -85.4591, 0.88", "56.8922, -234.496, -85.5195, 1.25", "57.2766, -235.199, -85.5689, 1.55", "57.8208, -236.084, -85.5661, 0.29", "58.8238, -237.449, -85.2081, 0.29", "59.7298, -238.587, -84.695, 0.29", "59.7868, -238.659, -84.6566, 0.29", "60.6513, -239.783, -84.0471, 1.47", "61.3801, -240.763, -83.5229, 1.77", "63.2866, -243.325, -82.164, 0.37", "63.9437, -244.202, -81.6963, 0.22", "64.8177, -245.356, -81.0534, 0.29", "65.2037, -245.901, -80.7695, 0.52", "65.6661, -246.657, -80.4392, 0.66", "65.7104, -246.746, -80.4069, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-194.139, -44.5935, 109.489, 0.37", "-201.09, -42.9633, 116.868, 0.37", "-208.906, -42.332, 123.478, 0.37", "-215.234, -41.602, 131.522, 0.37", "-222.159, -42.1894, 139.056, 0.37", "-230.497, -44.2171, 144.666, 0.37", "-237.883, -46.3977, 151.433, 0.37", "-244.662, -49.7388, 158.371, 0.37", "-249.375, -54.6862, 166.043, 0.37", "-253.79, -61.8614, 172.018, 0.37", "-258.317, -70.1488, 176.314, 0.37", "-261.845, -78.7344, 180.956, 0.37", "-265.321, -87.3131, 185.65, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-194.139, -44.5935, 109.489, 0.29", "-201.767, -43.3538, 118.383, 0.37", "-209.907, -41.6874, 126.737, 0.37", "-218.786, -40.8088, 134.413, 0.37", "-225.457, -39.0811, 143.987, 0.37", "-231.26, -38.374, 154.223, 0.37", "-237.824, -38.9584, 163.974, 0.37", "-245.782, -37.4833, 172.536, 0.37", "-254.696, -33.9815, 179.425, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-122.216, -32.5244, 45.7736, 0.59", "-120.163, -30.9393, 46.4301, 0.59", "-120.072, -30.8694, 46.4615, 0.59", "-118.273, -29.3127, 47.0049, 0.29", "-117.361, -28.3992, 47.1911, 0.29", "-117.278, -28.3098, 47.2043, 0.29", "-115.526, -26.2458, 47.3028, 0.29", "-115.474, -26.1725, 47.2961, 0.29", "-114.115, -24.0856, 46.9605, 0.29", "-112.624, -21.7711, 46.3761, 0.29", "-112.501, -21.586, 46.3195, 0.29", "-111.164, -19.6833, 45.6721, 0.74", "-109.999, -18.1313, 45.1382, 0.29", "-109.65, -17.7142, 45.0337, 0.29", "-107.831, -15.7391, 44.5887, 0.29", "-106.94, -14.8558, 44.437, 0.29", "-105.442, -13.4706, 44.2866, 0.29", "-103.512, -11.8869, 44.3409, 0.29", "-101.813, -10.6002, 44.5295, 0.88", "-94.4334, 2.42616, 44.0117, 0.88", "-88.7783, 16.208, 45.7391, 0.88", "-82.7335, 29.9395, 46.027, 0.88", "-75.5873, 43.1055, 45.6397, 0.88", "-67.8994, 55.9211, 46.3378, 0.88", "-61.3529, 69.4087, 46.5941, 0.88", "-53.7667, 82.2758, 47.4567, 0.88", "-44.5031, 93.8822, 48.7912, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-122.216, -32.5244, 45.7736, 0.59", "-122.74, -31.1545, 46.1867, 0.59", "-123.153, -29.9309, 46.5887, 0.59", "-123.497, -28.7276, 47.0367, 0.37", "-123.896, -27.1878, 47.6276, 0.29", "-124.192, -25.7355, 48.2396, 0.29", "-124.21, -25.6339, 48.2843, 0.29", "-124.364, -24.3543, 48.8924, 0.29", "-124.482, -23.232, 49.4583, 0.66", "-124.543, -22.517, 49.7907, 0.81", "-124.702, -20.899, 50.3998, 0.29", "-124.714, -20.7935, 50.4373, 0.29", "-124.896, -19.3682, 50.8466, 0.29", "-124.911, -19.2717, 50.8663, 0.29", "-125.137, -17.7037, 51.0409, 0.52", "-125.322, -16.618, 51.0961, 0.74", "-125.348, -16.5082, 51.0953, 0.74", "-125.602, -15.5051, 51.1446, 0.74", "-125.627, -15.4091, 51.1527, 0.74", "-126.045, -14.0321, 51.3134, 0.29", "-126.532, -12.6079, 51.5235, 0.29", "-127.24, -10.6995, 51.833, 0.29", "-127.827, -9.05, 52.0771, 0.29", "-127.884, -8.86119, 52.1042, 0.29", "-128.207, -7.28553, 52.2803, 0.29", "-128.221, -7.18727, 52.2894, 0.29", "-128.284, -5.58066, 52.3751, 0.29", "-128.224, -3.14733, 52.4297, 0.29", "-128.103, 0.0538367, 52.4056, 0.29", "-127.96, 2.97908, 52.3663, 0.29", "-127.951, 3.175, 52.3672, 0.29", "-127.86, 6.08925, 52.4223, 0.29", "-127.856, 6.29868, 52.4285, 0.29", "-127.905, 9.68433, 52.5718, 0.29", "-127.911, 9.797, 52.5774, 0.29", "-128.248, 12.8162, 52.8044, 0.29", "-128.267, 12.9269, 52.8144, 0.29", "-128.878, 15.1768, 53.0157, 0.29", "-129.053, 15.7541, 53.0521, 0.74", "-129.088, 15.8612, 53.0572, 0.74", "-129.341, 16.5783, 53.0641, 0.59", "-130.105, 18.3591, 52.8899, 0.29", "-130.643, 19.4211, 52.7757, 0.88", "-131.106, 20.0491, 52.6917, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-9.79979, -229.536, -91.5708, 0.52", "-10.3055, -230.401, -91.2759, 0.52", "-10.6881, -231.096, -91.055, 0.37", "-11.027, -231.773, -90.8246, 0.29", "-11.2933, -232.288, -90.6359, 0.66", "-11.5287, -232.735, -90.4676, 0.66", "-11.5619, -232.797, -90.4442, 0.66", "-11.7792, -233.217, -90.2872, 0.59", "-12.1839, -233.951, -90.0187, 0.29", "-12.5994, -234.721, -89.7504, 0.29", "-12.7646, -235.045, -89.6469, 0.66", "-13.0183, -235.581, -89.4932, 0.96", "-13.2011, -236.035, -89.3818, 1.18", "-13.5391, -236.989, -89.1849, 0.29", "-13.7359, -237.617, -89.0853, 0.29", "-13.8432, -237.992, -89.0268, 0.52", "-13.8814, -238.12, -88.9882, 0.52", "-14.0472, -238.588, -88.7654, 0.22", "-14.2237, -238.965, -88.508, 0.44", "-14.3939, -239.274, -88.2066, 0.66", "-14.6366, -239.65, -87.8002, 0.66", "-15.2536, -240.53, -86.8393, 0.29", "-15.4341, -240.787, -86.572, 0.96", "-15.6169, -241.069, -86.3055, 1.25", "-16.1824, -242.11, -85.4487, 0.52", "-16.5007, -242.803, -84.9741, 0.52", "-16.7511, -243.402, -84.6378, 0.29", "-16.9856, -243.934, -84.4047, 0.37", "-17.2537, -244.489, -84.1792, 0.44", "-17.4808, -244.855, -84.035, 0.44", "-17.9019, -245.372, -83.8508, 0.22", "-18.1745, -245.627, -83.7371, 0.37", "-18.6526, -245.992, -83.4963, 0.59", "-19.2974, -246.414, -83.1362, 1.18", "-19.8976, -246.786, -82.74, 0.74", "-19.9497, -246.818, -82.7009, 0.74", "-20.7581, -247.359, -82.0111, 0.37", "-21.4902, -247.937, -81.2928, 0.29", "-21.6531, -248.083, -81.0887, 0.59", "-21.9997, -248.406, -80.503, 0.74", "-22.0326, -248.437, -80.4264, 0.74", "-22.1649, -248.567, -79.9551, 0.74", "-22.176, -248.575, -79.9042, 0.74", "-22.3854, -248.668, -78.9345, 0.29", "-22.6276, -248.739, -77.7968, 0.59", "-22.8272, -248.774, -76.8238, 0.96", "-23.1612, -248.819, -75.1156, 0.59", "-23.2904, -248.827, -74.4016, 0.29", "-23.3014, -248.829, -74.3386, 0.29", "-23.4852, -248.882, -73.1637, 0.88", "-23.6247, -248.927, -72.086, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-9.79979, -229.536, -91.5708, 0.52", "-10.1702, -230.939, -92.7216, 0.52", "-10.187, -231.015, -92.7752, 0.52", "-10.4348, -232.148, -93.5092, 0.66", "-10.9382, -234.64, -94.9475, 0.44", "-11.3394, -236.5, -95.9485, 0.37", "-11.5629, -237.524, -96.4404, 0.66", "-11.8075, -238.681, -96.8816, 0.88", "-12.1077, -239.993, -97.3173, 0.88", "-12.3868, -241.17, -97.6407, 0.88", "-12.742, -242.778, -98.0495, 0.59", "-13.0381, -244.242, -98.4854, 0.37", "-13.3301, -245.768, -99.0476, 0.37", "-13.5951, -247.399, -99.788, 0.74", "-13.6737, -248.093, -100.141, 1.11", "-13.9297, -250.523, -101.54, 0.74", "-14.0405, -251.67, -102.241, 0.44", "-14.0488, -251.75, -102.29, 0.44", "-14.2311, -253.462, -103.268, 1.03", "-14.3163, -254.379, -103.703, 1.33", "-14.5376, -256.445, -104.434, 0.66", "-14.7259, -258.322, -104.836, 0.66", "-14.9179, -260.185, -105.121, 0.88", "-14.9234, -260.282, -105.132, 0.88", "-14.9535, -261.725, -105.253, 1.11", "-14.9164, -263.879, -105.401, 1.03", "-14.797, -265.477, -105.457, 0.52", "-14.7942, -265.574, -105.466, 0.52", "-14.8612, -267.222, -105.72, 0.88", "-14.9587, -268.285, -105.918, 0.96", "-15.1363, -269.235, -106.171, 0.96", "-15.4469, -270.218, -106.513, 0.66", "-16.5993, -273.005, -107.51, 0.44", "-17.0611, -274.027, -107.874, 0.96", "-17.5439, -274.964, -108.204, 1.25", "-18.5758, -276.887, -108.896, 1.11", "-19.5442, -278.557, -109.563, 0.74", "-20.0939, -279.43, -109.931, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-131.106, 20.0491, 52.6917, 0.29", "-132.585, 20.2703, 52.7761, 0.29", "-132.673, 20.2798, 52.7834, 0.29", "-133.782, 20.395, 52.7264, 0.29", "-133.87, 20.4041, 52.7178, 0.29", "-134.88, 20.5631, 52.6107, 0.66", "-135.651, 20.714, 52.5281, 0.81", "-135.717, 20.7281, 52.5211, 0.81", "-137.716, 21.2276, 52.4213, 0.29", "-137.897, 21.2787, 52.4185, 0.29", "-139.343, 21.7441, 52.4538, 0.29", "-141.001, 22.3603, 52.5542, 0.29", "-141.073, 22.3901, 52.5628, 0.29", "-142.553, 23.0267, 52.8451, 0.44", "-142.621, 23.0604, 52.8657, 0.44", "-143.166, 23.349, 53.0295, 0.44", "-143.23, 23.386, 53.0494, 0.44", "-144.371, 24.1392, 53.3752, 0.29", "-144.508, 24.2341, 53.3984, 0.29", "-145.422, 24.8974, 53.4405, 0.29", "-145.874, 25.237, 53.4552, 0.59", "-146.007, 25.3412, 53.4576, 0.59", "-146.408, 25.648, 53.465, 0.59", "-147.394, 26.3876, 53.4803, 0.37", "-147.54, 26.4901, 53.4846, 0.37", "-148.327, 27.0327, 53.4493, 0.37", "-148.391, 27.078, 53.4431, 0.37", "-149.287, 27.6714, 53.3417, 0.37", "-149.43, 27.7617, 53.3231, 0.37", "-150.369, 28.3007, 53.2334, 0.37", "-151.614, 28.9467, 53.1573, 0.22", "-151.775, 29.0188, 53.1571, 0.22", "-152.666, 29.3705, 53.2092, 0.22", "-152.739, 29.3954, 53.2195, 0.22", "-153.674, 29.5936, 53.6025, 0.81", "-153.982, 29.6318, 53.7867, 0.81", "-154.827, 29.6706, 54.3564, 0.22", "-154.892, 29.6678, 54.4001, 0.22", "-155.606, 29.5861, 54.922, 0.22", "-157.604, 29.2843, 56.35, 0.22", "-157.74, 29.2612, 56.4446, 0.22", "-158.71, 29.0922, 57.1093, 0.22", "-159.639, 28.9241, 57.7315, 0.22", "-161.063, 28.6865, 58.6426, 0.22", "-162.091, 28.5376, 59.2582, 0.22", "-162.17, 28.5321, 59.2976, 0.22", "-163.383, 28.6293, 59.8297, 0.52", "-163.749, 28.7526, 59.9579, 0.81", "-163.889, 28.8339, 59.9909, 0.81", "-164.228, 29.0794, 60.0227, 0.81", "-164.3, 29.1325, 60.0185, 0.81", "-165.406, 29.8824, 59.8499, 0.37", "-166.026, 30.2966, 59.6995, 0.59", "-166.09, 30.3386, 59.6812, 0.59", "-166.894, 30.8806, 59.4355, 0.44", "-168.252, 31.7396, 58.8483, 0.29", "-168.384, 31.8195, 58.7795, 0.29", "-169.152, 32.1887, 58.2425, 0.29", "-169.203, 32.2103, 58.2024, 0.29", "-169.984, 32.5078, 57.5787, 0.29", "-171.305, 32.9032, 56.2897, 0.29", "-171.35, 32.9134, 56.2438, 0.29", "-172.934, 33.1291, 54.619, 0.29", "-172.98, 33.1319, 54.5738, 0.29", "-173.459, 33.1524, 54.1394, 0.66", "-175.678, 33.1594, 52.2823, 0.37", "-175.821, 33.1588, 52.18, 0.37", "-176.628, 33.1447, 51.6819, 0.29", "-177.433, 33.1438, 51.3218, 0.15", "-177.928, 33.147, 51.1412, 0.74", "-178.156, 33.1498, 51.0937, 0.74", "-179.655, 33.1866, 51.052, 0.37", "-180.367, 33.2358, 51.0337, 0.29", "-181.322, 33.3714, 51.0469, 0.29", "-181.431, 33.3913, 51.0541, 0.29", "-182.788, 33.6898, 51.2448, 0.29", "-182.946, 33.7344, 51.2787, 0.29", "-183.812, 34.0374, 51.5356, 0.29", "-184.651, 34.3502, 51.777, 0.29", "-184.724, 34.3741, 51.7935, 0.29", "-185.868, 34.7191, 51.9891, 0.29", "-186.981, 35.0081, 52.0812, 0.29", "-187.198, 35.054, 52.0889, 0.29", "-188.227, 35.2591, 52.0156, 0.29", "-189.381, 35.5376, 51.841, 0.52", "-189.967, 35.7169, 51.7272, 0.66", "-191.318, 36.2156, 51.401, 0.29", "-192.823, 36.8406, 50.9995, 1.11", "-194.352, 37.4923, 50.5155, 0.29", "-195.175, 37.8601, 50.2214, 0.29", "-195.882, 38.1911, 49.969, 0.74", "-196.035, 38.262, 49.911, 0.74", "-196.463, 38.4621, 49.7396, 0.74", "-198.67, 39.3739, 48.8157, 0.29", "-198.774, 39.4096, 48.7769, 0.29", "-199.574, 39.6564, 48.479, 0.29", "-199.633, 39.6753, 48.4569, 0.29", "-200.638, 40.0215, 48.0916, 0.59", "-202.527, 40.7835, 47.4503, 0.29", "-202.604, 40.8254, 47.4299, 0.29", "-203.156, 41.1913, 47.2851, 0.29", "-203.449, 41.4585, 47.2017, 0.59", "-203.508, 41.5246, 47.1856, 0.59", "-203.96, 42.1295, 47.0711, 0.59", "-204.389, 42.7814, 46.9748, 0.29", "-204.779, 43.3005, 46.8933, 0.29", "-206.033, 44.7678, 46.6532, 0.29", "-206.082, 44.8159, 46.6461, 0.29", "-206.789, 45.4294, 46.5642, 0.29", "-207.118, 45.6692, 46.5379, 0.29", "-208.051, 46.2108, 46.5043, 0.52", "-208.464, 46.4022, 46.516, 0.59", "-209.677, 46.8597, 46.6343, 0.22", "-210.008, 46.9833, 46.6532, 0.22", "-210.683, 47.2744, 46.6681, 0.22", "-211.323, 47.6093, 46.6541, 0.81", "-211.763, 47.8695, 46.6257, 1.03", "-212.476, 48.2981, 46.5601, 0.52", "-213.789, 49.074, 46.4163, 0.29", "-215.298, 49.9364, 46.2489, 0.22", "-216.748, 50.8098, 46.0607, 0.22", "-216.92, 50.9207, 46.0354, 0.22", "-217.64, 51.3985, 45.9257, 0.74", "-218.03, 51.6543, 45.8737, 0.74", "-218.507, 51.9491, 45.8644, 0.74", "-228.599, 55.3773, 44.0438, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-131.106, 20.0491, 52.6917, 0.29", "-131.069, 20.9863, 52.4643, 0.29", "-130.987, 22.6182, 51.999, 0.29", "-130.984, 22.6865, 51.9787, 0.29", "-130.917, 24.2166, 51.5216, 0.29", "-130.916, 24.2932, 51.4993, 0.29", "-130.927, 26.5729, 50.8557, 0.52", "-130.979, 27.8545, 50.5141, 0.52", "-131.054, 28.7765, 50.2729, 0.52", "-131.087, 29.035, 50.2036, 0.52", "-131.278, 30.1654, 49.9961, 0.52", "-131.472, 31.0365, 49.9156, 0.81", "-131.527, 31.2025, 49.9242, 0.81", "-131.803, 31.906, 50.0445, 0.66", "-132.113, 32.581, 50.1967, 0.37", "-133.108, 34.6167, 50.7188, 0.37", "-133.146, 34.6873, 50.7354, 0.37", "-133.547, 35.384, 50.872, 0.52", "-133.607, 35.4825, 50.8821, 0.52", "-134.372, 36.6953, 50.9124, 0.44", "-134.462, 36.8322, 50.9039, 0.44", "-135.131, 37.7722, 50.7238, 0.44", "-135.325, 38.0617, 50.6681, 0.44", "-136.214, 39.551, 50.3839, 0.44", "-136.253, 39.6219, 50.3708, 0.44", "-136.62, 40.3628, 50.2414, 0.52", "-136.689, 40.5203, 50.2097, 0.52", "-137.084, 41.4963, 50.0062, 0.37", "-137.497, 42.6332, 49.7447, 0.74", "-137.523, 42.7092, 49.7272, 0.74", "-137.699, 43.2373, 49.6061, 0.74", "-138.493, 45.7658, 49.111, 0.52", "-138.516, 45.8435, 49.0976, 0.52", "-139.113, 47.9662, 48.7899, 0.52", "-139.798, 50.498, 48.4813, 0.52", "-139.825, 50.6006, 48.4708, 0.52", "-140.247, 52.2601, 48.3409, 0.88", "-140.335, 52.6217, 48.3251, 0.88", "-140.818, 54.6505, 48.2328, 0.52", "-141.114, 55.9415, 48.1703, 0.52", "-141.163, 56.1833, 48.1658, 0.52", "-141.418, 57.3829, 48.1125, 0.52", "-141.501, 57.7115, 48.0859, 0.52", "-141.74, 58.522, 48.021, 0.59", "-142.041, 59.4552, 47.9399, 0.37", "-142.543, 60.9496, 47.803, 0.44", "-143.087, 62.566, 47.6386, 0.22", "-143.583, 64.0157, 47.4783, 0.22", "-143.79, 64.6342, 47.417, 0.37", "-144.27, 66.0745, 47.282, 0.22", "-144.317, 66.22, 47.2682, 0.22", "-144.683, 67.4529, 47.2044, 0.22", "-144.702, 67.5328, 47.2076, 0.22", "-144.948, 68.8459, 47.2845, 0.22", "-144.96, 68.9161, 47.2884, 0.22", "-145.249, 70.6376, 47.3945, 0.22", "-145.562, 72.5695, 47.4922, 0.66", "-145.681, 73.3073, 47.5207, 0.96", "-145.893, 74.6698, 47.5843, 0.22", "-146.077, 75.8406, 47.6379, 0.22", "-146.091, 75.9324, 47.6431, 0.22", "-146.198, 76.6154, 47.6901, 0.59", "-146.323, 77.1939, 47.6918, 0.88", "-146.665, 78.5414, 47.6615, 0.44", "-146.894, 79.3394, 47.6195, 0.29", "-146.966, 79.5828, 47.5959, 0.29", "-147.131, 80.1507, 47.5167, 0.29", "-147.509, 81.5517, 47.1738, 0.74", "-147.672, 82.2107, 46.9499, 0.29", "-147.837, 82.88, 46.6749, 0.44", "-147.961, 83.4219, 46.4529, 0.59", "-147.978, 83.4971, 46.4243, 0.59", "-148.322, 85.1492, 45.8455, 0.22", "-148.373, 85.397, 45.772, 0.22", "-148.667, 86.8287, 45.4629, 0.22", "-148.681, 86.9066, 45.4517, 0.22", "-148.817, 87.7964, 45.3795, 0.44", "-148.829, 87.8888, 45.3778, 0.44", "-148.873, 88.3839, 45.4141, 0.44", "-148.942, 90.0135, 45.5733, 0.29", "-148.921, 90.6237, 45.6624, 0.44", "-148.911, 90.7959, 45.6909, 0.44", "-148.83, 91.5949, 45.8553, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-20.0939, -279.43, -109.931, 0.29", "-20.4851, -279.653, -109.514, 0.29", "-20.9497, -280.03, -109.04, 0.29", "-21.0335, -280.107, -108.956, 0.59", "-21.3306, -280.393, -108.658, 0.66", "-21.3954, -280.449, -108.606, 0.66", "-21.744, -280.727, -108.346, 0.66", "-22.3645, -281.25, -107.911, 0.22", "-22.619, -281.475, -107.737, 0.66", "-22.92, -281.739, -107.535, 0.66", "-23.7356, -282.441, -107.006, 0.22", "-24.214, -282.841, -106.702, 0.22", "-24.8929, -283.383, -106.287, 0.22", "-25.3734, -283.737, -105.995, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-20.0939, -279.43, -109.931, 0.29", "-19.9722, -281.146, -110.464, 0.29", "-19.8756, -282.189, -110.865, 0.29", "-19.8445, -282.708, -111.05, 0.74", "-19.8393, -283.169, -111.224, 0.88", "-19.841, -283.283, -111.268, 0.88", "-19.8699, -284.093, -111.551, 0.88", "-19.8537, -285.496, -111.99, 0.22", "-19.8612, -286.299, -112.237, 0.22", "-19.8944, -287.225, -112.539, 0.88", "-19.8942, -287.301, -112.565, 0.88", "-19.8493, -288.253, -112.905, 0.74", "-19.683, -289.414, -113.348, 0.37", "-19.6581, -289.483, -113.379, 0.37", "-18.7739, -290.9, -114.043, 0.29", "-18.2508, -291.537, -114.346, 0.59", "-18.0902, -291.706, -114.431, 0.59", "-17.2841, -292.445, -114.836, 0.88", "-15.9733, -293.441, -115.261, 0.74", "-14.3504, -294.536, -115.63, 0.29", "-13.4598, -295.085, -115.778, 0.74", "-13.3933, -295.126, -115.787, 0.74", "-12.8396, -295.456, -115.845, 0.74", "-10.258, -296.864, -115.93, 0.44", "-9.37318, -297.306, -115.872, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-148.83, 91.5949, 45.8553, 0.29", "-147.046, 90.7019, 46.0896, 0.29", "-146.842, 90.5919, 46.1057, 0.29", "-146.211, 90.2467, 46.1414, 0.29", "-146.11, 90.1911, 46.1472, 0.29", "-144.655, 89.3946, 46.2296, 0.29", "-144.024, 89.0492, 46.2653, 0.81", "-143.303, 88.6723, 46.2136, 1.03", "-143.204, 88.6135, 46.2058, 1.03", "-130.278, 79.3882, 44.3864, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-148.83, 91.5949, 45.8553, 0.44", "-149.105, 93.0789, 45.7668, 0.44", "-149.4, 94.7389, 45.6555, 0.37", "-149.888, 97.7908, 45.5422, 0.29", "-150.342, 100.506, 45.4936, 0.29", "-150.533, 101.731, 45.478, 0.74", "-150.623, 102.331, 45.4716, 0.74", "-150.718, 103.104, 45.4533, 0.44", "-150.859, 104.888, 45.42, 0.37", "-150.922, 106.758, 45.3874, 0.29", "-150.956, 108.634, 45.3516, 0.29", "-150.954, 108.823, 45.3507, 0.29", "-150.91, 111.421, 45.355, 0.29", "-150.895, 111.914, 45.3535, 0.29", "-150.838, 113.519, 45.3201, 0.29", "-150.834, 113.6, 45.3207, 0.29", "-150.883, 115.139, 45.393, 0.29", "-151.031, 115.959, 45.4404, 0.44", "-151.084, 116.125, 45.4524, 0.44", "-151.318, 116.715, 45.4853, 0.29", "-151.362, 116.813, 45.4886, 0.29", "-152.08, 118.324, 45.4339, 0.29", "-153.337, 120.87, 45.1881, 0.29", "-153.478, 121.166, 45.155, 0.29", "-153.898, 122.08, 45.0437, 0.74", "-154.233, 122.841, 44.9477, 0.88", "-154.89, 124.368, 44.7501, 0.52", "-155.477, 125.751, 44.5691, 0.37", "-156.3, 127.667, 44.3534, 0.29", "-156.431, 127.968, 44.3262, 0.29", "-157.496, 130.432, 44.1603, 0.29", "-157.585, 130.639, 44.1529, 0.29", "-158.307, 132.354, 44.1735, 0.29", "-158.589, 133.018, 44.2147, 0.52", "-158.818, 133.542, 44.2827, 0.66", "-158.888, 133.702, 44.3129, 0.66", "-159.147, 134.287, 44.4843, 0.66", "-159.195, 134.388, 44.514, 0.66", "-159.718, 135.393, 44.7739, 0.29", "-159.892, 135.703, 44.848, 0.22", "-160.229, 136.279, 44.9907, 0.52", "-160.409, 136.604, 45.0644, 0.52", "-160.848, 137.42, 45.2358, 0.29", "-161.407, 138.522, 45.4203, 0.29", "-162.196, 140.245, 45.6901, 0.29", "-162.241, 140.351, 45.7081, 0.29", "-162.936, 142.147, 46.0217, 0.29", "-162.995, 142.312, 46.051, 0.29", "-163.636, 144.283, 46.3929, 0.29", "-164.136, 145.929, 46.6412, 0.29", "-164.207, 146.169, 46.6563, 0.29", "-164.443, 146.978, 46.6542, 0.29", "-164.462, 147.045, 46.6494, 0.29", "-164.764, 148.091, 46.5163, 0.88", "-164.852, 148.404, 46.456, 0.88", "-165.26, 149.878, 46.1241, 0.22", "-165.646, 151.32, 45.7535, 0.22", "-165.704, 151.54, 45.6936, 0.22", "-166.112, 153.123, 45.2546, 0.22", "-166.129, 153.191, 45.2359, 0.22", "-166.71, 155.282, 44.5171, 0.52", "-167.163, 156.778, 43.9421, 0.29", "-167.384, 157.436, 43.6488, 0.37", "-167.43, 157.567, 43.5863, 0.37", "-167.698, 158.285, 43.2261, 0.37", "-168.558, 160.448, 41.9935, 0.22", "-169.087, 161.73, 41.228, 0.22", "-169.114, 161.799, 41.1899, 0.22", "-169.366, 162.495, 40.8132, 0.52", "-169.709, 163.485, 40.3082, 0.66", "-170.378, 165.484, 39.2413, 0.15", "-170.886, 167.14, 38.3879, 0.15", "-171.148, 167.958, 37.9032, 0.29", "-171.172, 168.026, 37.8613, 0.29", "-171.347, 168.507, 37.5453, 0.29", "-171.923, 169.987, 36.5564, 0.44", "-172.093, 170.374, 36.2454, 0.44", "-172.583, 171.317, 35.4433, 0.22", "-172.858, 171.832, 35.035, 0.52", "-172.89, 171.893, 34.9896, 0.52", "-173.129, 172.351, 34.6923, 0.88", "-174.525, 175.12, 33.2266, 0.29", "-175.689, 177.45, 32.0827, 0.29", "-176.063, 178.287, 31.7302, 0.29", "-176.09, 178.361, 31.7035, 0.29", "-176.535, 179.865, 31.2525, 0.29", "-176.799, 181.238, 30.9474, 0.29", "-176.804, 181.306, 30.9393, 0.29", "-176.74, 183.355, 30.6673, 0.29", "-176.63, 184.888, 30.4586, 0.59", "-176.556, 185.649, 30.3506, 0.59", "-176.436, 186.968, 30.1628, 0.22", "-176.332, 188.457, 29.9534, 0.22", "-176.325, 188.642, 29.9281, 0.22", "-176.315, 190.925, 29.6292, 0.22", "-176.319, 191.101, 29.607, 0.22", "-176.502, 194.688, 29.172, 0.22", "-176.51, 194.782, 29.1614, 0.22", "-176.8, 196.908, 28.9352, 0.22", "-176.845, 197.155, 28.9109, 0.22", "-176.931, 197.509, 28.8798, 0.59", "-177.134, 198.236, 28.8209, 0.59", "-177.741, 200.006, 28.5694, 0.29", "-178.039, 200.799, 28.4212, 0.59", "-178.539, 202.019, 28.1497, 0.52", "-178.965, 203.074, 27.8909, 0.74", "-179.326, 203.984, 27.6461, 0.74", "-179.996, 205.802, 27.1051, 0.22", "-180.251, 206.569, 26.8475, 0.44", "-180.458, 207.256, 26.6154, 0.74", "-180.568, 207.658, 26.4903, 1.03", "-180.585, 207.722, 26.4712, 1.03", "-180.805, 208.612, 26.2662, 1.03", "-180.823, 208.693, 26.2597, 1.03", "-181.104, 210.009, 26.1479, 0.37", "-181.39, 211.312, 26.0283, 0.29", "-182.7, 222.66, 25.117, 0.29", "-185.199, 233.817, 25.6709, 0.29", "-187.364, 245.003, 26.7541, 0.29", "-188.909, 256.064, 29.1845, 0.29", "-189.363, 266.995, 32.4436, 0.29", "-190.706, 277.03, 37.62, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-130.278, 79.3882, 44.3864, 0.22", "-124.299, 75.8009, 43.8747, 0.22", "-118.224, 72.3528, 44.097, 0.22", "-111.84, 69.5464, 44.0282, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-130.278, 79.3882, 44.3864, 0.22", "-122.231, 73.684, 43.7474, 0.22", "-114.198, 67.9486, 43.2024, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_DBC_a60ab35166_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.08596, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.58388, -1.95122, -8.95891, 1.11 ) }
    dend_92 { pt3dadd( 2.66181, -3.56791, -9.19445, 1.11 ) }
    dend_92 { pt3dadd( 2.71071, -4.48085, -9.3577, 1.03 ) }
    dend_92 { pt3dadd( 2.77375, -5.68406, -9.5838, 1.03 ) }
    dend_92 { pt3dadd( 2.82835, -7.15619, -10.0164, 1.03 ) }
    dend_92 { pt3dadd( 2.82937, -8.34843, -10.4661, 1.18 ) }
    dend_92 { pt3dadd( 2.79253, -9.50042, -10.9925, 1.18 ) }
    dend_92 { pt3dadd( 2.71603, -10.6664, -11.6397, 1.4 ) }
    dend_92 { pt3dadd( 2.62158, -11.3393, -12.1701, 1.55 ) }
    dend_92 { pt3dadd( 2.18339, -13.5235, -14.3121, 1.25 ) }
    dend_92 { pt3dadd( 1.91849, -14.6354, -15.7105, 1.25 ) }
    dend_92 { pt3dadd( 1.80556, -15.1111, -16.4466, 1.47 ) }
    dend_92 { pt3dadd( 1.62257, -16.1797, -18.2778, 1.69 ) }
    dend_92 { pt3dadd( 1.43341, -18.3191, -22.0686, 1.69 ) }
    dend_92 { pt3dadd( 1.43361, -18.3476, -22.1186, 1.69 ) }
    dend_92 { pt3dadd( 1.62749, -20.1956, -25.1614, 1.33 ) }
    dend_92 { pt3dadd( 1.84176, -21.4436, -27.0357, 1.11 ) }
    dend_92 { pt3dadd( 2.06107, -22.6138, -28.5581, 1.25 ) }
    dend_92 { pt3dadd( 2.26907, -23.7559, -29.6718, 1.4 ) }
    dend_92 { pt3dadd( 2.35814, -24.5365, -30.175, 1.4 ) }
    dend_92 { pt3dadd( 2.35882, -25.5277, -30.7062, 1.33 ) }
    dend_92 { pt3dadd( 2.16303, -26.8658, -31.2031, 1.18 ) }
    dend_92 { pt3dadd( 1.86632, -27.8777, -31.5757, 1.18 ) }
    dend_92 { pt3dadd( 1.37458, -29.0823, -32.1074, 1.33 ) }
    dend_92 { pt3dadd( 0.712766, -30.6154, -32.8871, 1.03 ) }
    dend_92 { pt3dadd( 0.258092, -31.7662, -33.5024, 1.25 ) }
    dend_92 { pt3dadd( 0.0226892, -32.4879, -33.8931, 1.62 ) }
    dend_92 { pt3dadd( -0.400925, -34.153, -34.7807, 1.62 ) }
    dend_92 { pt3dadd( -0.60937, -35.3478, -35.37, 1.03 ) }
    dend_92 { pt3dadd( -0.781338, -37.3318, -36.2095, 1.03 ) }
    dend_92 { pt3dadd( -0.800875, -38.8373, -36.729, 1.18 ) }
    dend_92 { pt3dadd( -0.741115, -40.2474, -37.1402, 1.18 ) }
    dend_92 { pt3dadd( -0.701602, -40.7386, -37.2672, 1.55 ) }
    dend_92 { pt3dadd( -0.621923, -41.5689, -37.4347, 1.55 ) }
    dend_92 { pt3dadd( -0.526594, -42.7046, -37.6692, 1.69 ) }
    dend_92 { pt3dadd( -0.458115, -43.8793, -37.9937, 1.84 ) }
    dend_92 { pt3dadd( -0.42104, -44.9493, -38.3911, 1.47 ) }
    dend_92 { pt3dadd( -0.386973, -46.4126, -39.0062, 1.18 ) }
    dend_92 { pt3dadd( -0.386611, -47.6715, -39.5899, 1.18 ) }
    dend_92 { pt3dadd( -0.415041, -49.1075, -40.3164, 1.18 ) }
    dend_92 { pt3dadd( -0.418146, -50.7043, -41.0582, 1.33 ) }
    dend_92 { pt3dadd( -0.34971, -52.0311, -41.5388, 1.03 ) }
    dend_92 { pt3dadd( -0.249547, -53.0472, -41.8836, 1.03 ) }
    dend_92 { pt3dadd( -0.103541, -54.1115, -42.1972, 1.03 ) }
    dend_92 { pt3dadd( 0.0909563, -55.45, -42.5643, 1.33 ) }
    dend_92 { pt3dadd( 0.43035, -58.1912, -43.3104, 1.33 ) }
    dend_92 { pt3dadd( 0.651759, -60.5992, -44.0396, 1.33 ) }
    dend_92 { pt3dadd( 0.761806, -62.3144, -44.6368, 1.18 ) }
    dend_92 { pt3dadd( 0.81831, -63.2919, -45.0259, 1.4 ) }
    dend_92 { pt3dadd( 0.940758, -65.0857, -45.8917, 1.4 ) }
    dend_92 { pt3dadd( 1.07326, -66.9621, -46.9697, 1.33 ) }
    dend_92 { pt3dadd( 1.19563, -68.6179, -48.1302, 1.18 ) }
    dend_92 { pt3dadd( 1.20201, -68.6799, -48.1772, 1.18 ) }
    dend_92 { pt3dadd( 1.35904, -69.7798, -49.0066, 1.47 ) }
    dend_92 { pt3dadd( 1.66357, -71.356, -50.229, 1.84 ) }
    dend_92 { pt3dadd( 1.92291, -72.3155, -50.9524, 1.62 ) }
    dend_92 { pt3dadd( 2.31705, -73.4694, -51.7887, 1.55 ) }
    dend_92 { pt3dadd( 2.80108, -74.8155, -52.7584, 1.33 ) }
    dend_92 { pt3dadd( 3.1771, -75.9815, -53.6249, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -10.3622, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.498012, -10.414, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.386237, -10.8356, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 10.9783, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.50434, 11.891, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.30807, 13.5913, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.86843, 14.815, 0.14839, 1.92 ) }
    dend_0 { pt3dadd( 3.07789, 15.2861, 0.151826, 1.92 ) }
    dend_0 { pt3dadd( 3.38518, 15.9588, 0.157667, 1.92 ) }
    dend_0 { pt3dadd( 3.59225, 16.3981, 0.161668, 1.92 ) }
    dend_0 { pt3dadd( 3.91969, 17.0564, 0.16854, 1.92 ) }
    dend_0 { pt3dadd( 4.18431, 17.5721, 0.174073, 1.99 ) }
    dend_0 { pt3dadd( 4.58209, 18.3457, 0.181396, 1.99 ) }
    dend_0 { pt3dadd( 5.16725, 19.5462, 0.19082, 1.99 ) }
    dend_0 { pt3dadd( 5.6478, 20.5447, 0.197244, 1.99 ) }
    dend_0 { pt3dadd( 6.15547, 21.6492, 0.202438, 1.99 ) }
    dend_0 { pt3dadd( 6.71209, 22.9609, 0.181945, 2.21 ) }
    dend_0 { pt3dadd( 7.18188, 24.2228, 0.140275, 2.21 ) }
    dend_0 { pt3dadd( 7.47809, 25.1694, 0.0820333, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 7.57983, 25.5819, 0.0398491, 1.99 ) }
    dend_0 { pt3dadd( 7.76209, 26.5041, -0.0801908, 1.99 ) }
    dend_0 { pt3dadd( 7.93773, 27.6873, -0.253048, 2.06 ) }
    dend_0 { pt3dadd( 8.0991, 29.1673, -0.507478, 1.92 ) }
    dend_0 { pt3dadd( 8.22012, 30.598, -0.796249, 1.92 ) }
    dend_0 { pt3dadd( 8.34111, 32.1958, -1.17818, 1.99 ) }
    dend_0 { pt3dadd( 8.39523, 33.0343, -1.41077, 2.14 ) }
    dend_0 { pt3dadd( 8.48166, 34.4378, -1.81954, 2.14 ) }
    dend_0 { pt3dadd( 8.58204, 36.1673, -2.34126, 1.99 ) }
    dend_0 { pt3dadd( 8.62871, 37.2209, -2.69263, 2.06 ) }
    dend_0 { pt3dadd( 8.64812, 38.4807, -3.13725, 2.43 ) }
    dend_0 { pt3dadd( 8.65, 39.4584, -3.52172, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.561107 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.561107 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.561107 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 3.1771, -75.9815, -53.6249, 0.52 ) }
    dend_98 { pt3dadd( 2.04752, -77.448, -55.5541, 0.52 ) }
    dend_98 { pt3dadd( 1.30803, -78.6914, -57.0327, 0.52 ) }
    dend_98 { pt3dadd( 0.937916, -79.7006, -58.1293, 0.52 ) }
    dend_98 { pt3dadd( 0.652339, -81.2615, -59.7275, 0.52 ) }
    dend_98 { pt3dadd( 0.614819, -82.0538, -60.5189, 1.11 ) }
    dend_98 { pt3dadd( 0.629645, -83.027, -61.4284, 1.4 ) }
    dend_98 { pt3dadd( 0.789316, -83.8011, -62.047, 1.69 ) }
    dend_98 { pt3dadd( 1.26581, -85.286, -63.1057, 1.62 ) }
    dend_98 { pt3dadd( 1.75387, -86.5141, -63.9277, 1.4 ) }
    dend_98 { pt3dadd( 2.46068, -88.1608, -64.9542, 0.88 ) }
    dend_98 { pt3dadd( 2.9045, -89.1995, -65.5968, 0.66 ) }
    dend_98 { pt3dadd( 3.50985, -90.6973, -66.4527, 0.66 ) }
    dend_98 { pt3dadd( 3.85994, -91.599, -66.9671, 0.88 ) }
    dend_98 { pt3dadd( 4.24508, -92.6646, -67.5265, 1.11 ) }
    dend_98 { pt3dadd( 4.58897, -93.5607, -67.9444, 1.18 ) }
    dend_98 { pt3dadd( 4.96115, -94.4271, -68.3042, 1.18 ) }
    dend_98 { pt3dadd( 5.28528, -95.0899, -68.6139, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 3.1771, -75.9815, -53.6249, 0.66 ) }
    dend_93 { pt3dadd( 3.26426, -76.8254, -53.2262, 0.66 ) }
    dend_93 { pt3dadd( 3.27071, -77.4473, -52.8539, 0.52 ) }
    dend_93 { pt3dadd( 3.26719, -77.4932, -52.8257, 0.52 ) }
    dend_93 { pt3dadd( 3.16391, -78.2949, -52.3186, 0.74 ) }
    dend_93 { pt3dadd( 3.04506, -79.07, -51.8556, 0.88 ) }
    dend_93 { pt3dadd( 2.95678, -79.6531, -51.4969, 0.74 ) }
    dend_93 { pt3dadd( 2.83386, -80.4331, -50.9624, 0.37 ) }
    dend_93 { pt3dadd( 2.76802, -81.0031, -50.5495, 1.18 ) }
    dend_93 { pt3dadd( 2.74838, -81.6507, -50.0803, 1.4 ) }
    dend_93 { pt3dadd( 2.78348, -82.3754, -49.5564, 0.96 ) }
    dend_93 { pt3dadd( 2.95313, -83.1131, -48.9563, 0.74 ) }
    dend_93 { pt3dadd( 3.25919, -83.821, -48.3001, 0.29 ) }
    dend_93 { pt3dadd( 3.64038, -84.4569, -47.6795, 0.74 ) }
    dend_93 { pt3dadd( 3.94276, -84.8697, -47.2632, 0.96 ) }
    dend_93 { pt3dadd( 3.96542, -84.8984, -47.236, 0.96 ) }
    dend_93 { pt3dadd( 4.83336, -86.0426, -46.2798, 0.59 ) }
    dend_93 { pt3dadd( 5.1615, -86.5793, -45.9485, 1.11 ) }
    dend_93 { pt3dadd( 5.37514, -87.0337, -45.7322, 1.25 ) }
    dend_93 { pt3dadd( 5.51464, -87.5158, -45.563, 1.18 ) }
    dend_93 { pt3dadd( 5.65861, -88.3962, -45.2875, 0.81 ) }
    dend_93 { pt3dadd( 5.71491, -89.1767, -45.0771, 0.59 ) }
    dend_93 { pt3dadd( 5.68988, -90.032, -44.8969, 0.44 ) }
    dend_93 { pt3dadd( 5.68549, -90.0935, -44.8829, 0.44 ) }
    dend_93 { pt3dadd( 5.60347, -90.7495, -44.6926, 0.29 ) }
    dend_93 { pt3dadd( 5.42103, -91.7472, -44.351, 0.29 ) }
    dend_93 { pt3dadd( 5.29271, -92.3624, -44.1219, 0.81 ) }
    dend_93 { pt3dadd( 5.20432, -92.8479, -43.947, 1.33 ) }
    dend_93 { pt3dadd( 5.12529, -93.3887, -43.8024, 1.33 ) }
    dend_93 { pt3dadd( 5.02731, -94.2957, -43.6951, 0.96 ) }
    dend_93 { pt3dadd( 4.99379, -94.9251, -43.7189, 0.81 ) }
    dend_93 { pt3dadd( 4.99013, -95.596, -43.8384, 0.81 ) }
    dend_93 { pt3dadd( 5.01426, -96.4079, -44.0548, 0.74 ) }
    dend_93 { pt3dadd( 5.08109, -97.4835, -44.4076, 0.44 ) }
    dend_93 { pt3dadd( 5.15439, -98.4429, -44.7921, 0.66 ) }
    dend_93 { pt3dadd( 5.20224, -99.0607, -45.0792, 0.74 ) }
    dend_93 { pt3dadd( 5.23395, -99.6234, -45.3397, 1.03 ) }
    dend_93 { pt3dadd( 5.2437, -100.288, -45.6239, 1.25 ) }
    dend_93 { pt3dadd( 5.22621, -100.995, -45.873, 1.11 ) }
    dend_93 { pt3dadd( 5.18224, -101.869, -46.1084, 0.59 ) }
    dend_93 { pt3dadd( 5.13937, -102.584, -46.2667, 0.59 ) }
    dend_93 { pt3dadd( 5.08185, -103.339, -46.438, 0.66 ) }
    dend_93 { pt3dadd( 5.03982, -103.888, -46.5589, 0.66 ) }
    dend_93 { pt3dadd( 4.99725, -104.721, -46.727, 0.52 ) }
    dend_93 { pt3dadd( 4.97849, -105.489, -46.8858, 0.52 ) }
    dend_93 { pt3dadd( 4.99653, -106.157, -47.0196, 0.59 ) }
    dend_93 { pt3dadd( 5.05251, -107.006, -47.2267, 1.25 ) }
    dend_93 { pt3dadd( 5.08407, -107.33, -47.3198, 1.4 ) }
    dend_93 { pt3dadd( 5.15763, -107.91, -47.5041, 1.4 ) }
    dend_93 { pt3dadd( 5.28616, -108.753, -47.7432, 0.88 ) }
    dend_93 { pt3dadd( 5.37621, -109.291, -47.8673, 0.52 ) }
    dend_93 { pt3dadd( 5.51422, -110.233, -48.0286, 0.52 ) }
    dend_93 { pt3dadd( 5.59438, -110.828, -48.0289, 0.52 ) }
    dend_93 { pt3dadd( 5.60199, -110.89, -48.0183, 0.52 ) }
    dend_93 { pt3dadd( 5.73835, -111.817, -47.6882, 0.52 ) }
    dend_93 { pt3dadd( 5.74773, -111.865, -47.6655, 0.52 ) }
    dend_93 { pt3dadd( 5.8371, -112.257, -47.4612, 0.96 ) }
    dend_93 { pt3dadd( 6.12698, -113.294, -46.8932, 1.33 ) }
    dend_93 { pt3dadd( 6.36556, -114.074, -46.5135, 0.66 ) }
    dend_93 { pt3dadd( 6.59721, -114.831, -46.2053, 0.59 ) }
    dend_93 { pt3dadd( 6.81424, -115.567, -45.9766, 0.74 ) }
    dend_93 { pt3dadd( 6.83009, -115.627, -45.9612, 0.74 ) }
    dend_93 { pt3dadd( 6.9744, -116.259, -45.8392, 0.74 ) }
    dend_93 { pt3dadd( 7.05219, -116.772, -45.7794, 1.03 ) }
    dend_93 { pt3dadd( 7.07488, -117.202, -45.7237, 1.25 ) }
    dend_93 { pt3dadd( 7.05426, -117.764, -45.6525, 1.18 ) }
    dend_93 { pt3dadd( 6.99825, -118.29, -45.5781, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( 6.91136, -118.832, -45.4991, 0.29 ) }
    dend_93 { pt3dadd( 6.81295, -119.291, -45.4318, 0.29 ) }
    dend_93 { pt3dadd( 6.72817, -119.643, -45.3795, 0.81 ) }
    dend_93 { pt3dadd( 6.65376, -119.948, -45.3363, 1.11 ) }
    dend_93 { pt3dadd( 6.55361, -120.422, -45.2795, 1.11 ) }
    dend_93 { pt3dadd( 6.47923, -121.013, -45.2288, 0.59 ) }
    dend_93 { pt3dadd( 6.4811, -121.075, -45.2271, 0.59 ) }
    dend_93 { pt3dadd( 6.59343, -121.598, -45.2472, 0.44 ) }
    dend_93 { pt3dadd( 6.61474, -121.648, -45.2528, 0.44 ) }
    dend_93 { pt3dadd( 6.91936, -122.122, -45.3413, 0.44 ) }
    dend_93 { pt3dadd( 7.2287, -122.503, -45.445, 0.81 ) }
    dend_93 { pt3dadd( 7.57679, -122.885, -45.5686, 1.11 ) }
    dend_93 { pt3dadd( 7.79283, -123.125, -45.6591, 1.11 ) }
    dend_93 { pt3dadd( 8.08416, -123.465, -45.8045, 0.88 ) }
    dend_93 { pt3dadd( 8.32914, -123.786, -45.9434, 0.66 ) }
    dend_93 { pt3dadd( 8.62091, -124.22, -46.1298, 0.66 ) }
    dend_93 { pt3dadd( 8.88854, -124.679, -46.3148, 0.44 ) }
    dend_93 { pt3dadd( 9.14444, -125.188, -46.4993, 0.29 ) }
    dend_93 { pt3dadd( 9.39322, -125.779, -46.6821, 0.88 ) }
    dend_93 { pt3dadd( 9.55326, -126.242, -46.7942, 0.88 ) }
    dend_93 { pt3dadd( 9.65851, -126.623, -46.8601, 0.88 ) }
    dend_93 { pt3dadd( 9.78184, -127.173, -46.9181, 0.74 ) }
    dend_93 { pt3dadd( 9.88754, -127.732, -46.9505, 0.37 ) }
    dend_93 { pt3dadd( 9.98153, -128.257, -46.9562, 0.29 ) }
    dend_93 { pt3dadd( 10.1186, -129.024, -46.95, 0.29 ) }
    dend_93 { pt3dadd( 10.233, -129.651, -46.9459, 0.81 ) }
    dend_93 { pt3dadd( 10.3483, -130.227, -46.9463, 1.03 ) }
    dend_93 { pt3dadd( 10.3634, -130.289, -46.9475, 1.03 ) }
    dend_93 { pt3dadd( 10.5135, -130.77, -46.9687, 1.18 ) }
    dend_93 { pt3dadd( 10.7021, -131.302, -47.0018, 1.33 ) }
    dend_93 { pt3dadd( 10.8788, -131.764, -47.0367, 1.33 ) }
    dend_93 { pt3dadd( 11.1578, -132.463, -47.1012, 0.59 ) }
    dend_93 { pt3dadd( 11.4315, -133.155, -47.1695, 0.44 ) }
    dend_93 { pt3dadd( 11.6687, -133.773, -47.2311, 0.44 ) }
    dend_93 { pt3dadd( 11.8827, -134.34, -47.2867, 0.81 ) }
    dend_93 { pt3dadd( 12.117, -134.978, -47.3469, 1.11 ) }
    dend_93 { pt3dadd( 12.3168, -135.571, -47.396, 1.11 ) }
    dend_93 { pt3dadd( 12.4175, -135.95, -47.4175, 1.25 ) }
    dend_93 { pt3dadd( 12.5214, -136.569, -47.4297, 1.11 ) }
    dend_93 { pt3dadd( 12.5849, -137.356, -47.4361, 0.66 ) }
    dend_93 { pt3dadd( 12.5976, -137.925, -47.438, 0.37 ) }
    dend_93 { pt3dadd( 12.5711, -138.481, -47.4326, 0.29 ) }
    dend_93 { pt3dadd( 12.5251, -139.28, -47.426, 0.37 ) }
    dend_93 { pt3dadd( 12.5186, -139.84, -47.4632, 0.52 ) }
    dend_93 { pt3dadd( 12.5745, -140.417, -47.5339, 0.88 ) }
    dend_93 { pt3dadd( 12.6583, -140.796, -47.5999, 1.03 ) }
    dend_93 { pt3dadd( 12.7137, -140.955, -47.6351, 1.03 ) }
    dend_93 { pt3dadd( 13.0609, -141.763, -47.7697, 0.74 ) }
    dend_93 { pt3dadd( 13.4856, -142.673, -47.8774, 0.59 ) }
    dend_93 { pt3dadd( 13.8154, -143.392, -47.9353, 0.59 ) }
    dend_93 { pt3dadd( 13.994, -143.777, -47.9339, 1.4 ) }
    dend_93 { pt3dadd( 14.1983, -144.213, -47.9126, 1.77 ) }
    dend_93 { pt3dadd( 14.7643, -145.419, -47.7707, 0.81 ) }
    dend_93 { pt3dadd( 15.0491, -146.038, -47.6505, 0.81 ) }
    dend_93 { pt3dadd( 15.4484, -146.89, -47.3975, 0.81 ) }
    dend_93 { pt3dadd( 15.8596, -147.716, -47.1242, 1.11 ) }
    dend_93 { pt3dadd( 16.0816, -148.119, -46.9798, 1.11 ) }
    dend_93 { pt3dadd( 16.4629, -148.747, -46.7488, 0.88 ) }
    dend_93 { pt3dadd( 16.5099, -148.821, -46.7204, 0.88 ) }
    dend_93 { pt3dadd( 16.8776, -149.448, -46.4545, 0.59 ) }
    dend_93 { pt3dadd( 17.192, -150.118, -46.1711, 0.59 ) }
    dend_93 { pt3dadd( 17.4071, -150.654, -45.9676, 0.52 ) }
    dend_93 { pt3dadd( 17.5735, -151.118, -45.7962, 0.52 ) }
    dend_93 { pt3dadd( 17.9344, -152.22, -45.4401, 0.74 ) }
    dend_93 { pt3dadd( 18.0894, -152.73, -45.288, 1.33 ) }
    dend_93 { pt3dadd( 18.2625, -153.403, -45.1121, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.386237, -10.8356, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( -0.209016, -12.2754, -0.0657044, 2.73 ) }
    dend_41 { pt3dadd( -0.0441138, -13.7479, -0.149671, 2.14 ) }
    dend_41 { pt3dadd( 0.0695402, -14.9077, -0.2093, 2.14 ) }
    dend_41 { pt3dadd( 0.184986, -16.2356, -0.271683, 2.28 ) }
    dend_41 { pt3dadd( 0.279097, -17.5043, -0.341293, 2.14 ) }
    dend_41 { pt3dadd( 0.394062, -19.1495, -0.440272, 1.92 ) }
    dend_41 { pt3dadd( 0.453099, -20.3582, -0.526177, 2.06 ) }
    dend_41 { pt3dadd( 0.500304, -22.0387, -0.656755, 1.84 ) }
    dend_41 { pt3dadd( 0.489556, -23.6059, -0.798448, 1.84 ) }
    dend_41 { pt3dadd( 0.448874, -24.7876, -0.917295, 1.84 ) }
    dend_41 { pt3dadd( 0.348619, -26.2758, -1.08805, 1.92 ) }
    dend_41 { pt3dadd( 0.1792, -27.7046, -1.28527, 1.92 ) }
    dend_41 { pt3dadd( -0.0374923, -28.8819, -1.46763, 1.92 ) }
    dend_41 { pt3dadd( -0.350262, -30.064, -1.64624, 1.84 ) }
    dend_41 { pt3dadd( -0.76514, -31.3282, -1.82704, 1.84 ) }
    dend_41 { pt3dadd( -1.06492, -32.0891, -1.9283, 1.77 ) }
    dend_41 { pt3dadd( -1.77079, -33.6735, -2.1369, 1.69 ) }
    dend_41 { pt3dadd( -2.57025, -35.3291, -2.34136, 1.69 ) }
    dend_41 { pt3dadd( -3.27075, -36.6781, -2.5086, 1.84 ) }
    dend_41 { pt3dadd( -3.29765, -36.7255, -2.51322, 1.84 ) }
    dend_41 { pt3dadd( -3.69994, -37.3448, -2.56603, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.386237, -10.8356, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.562281, -13.1149, -1.21284, 0.96 ) }
    dend_26 { pt3dadd( -0.841173, -15.4054, -2.22973, 1.25 ) }
    dend_26 { pt3dadd( -1.31252, -18.1102, -3.22439, 0.96 ) }
    dend_26 { pt3dadd( -1.70927, -19.8728, -3.68003, 1.25 ) }
    dend_26 { pt3dadd( -2.05269, -21.1192, -3.92455, 1.47 ) }
    dend_26 { pt3dadd( -2.5403, -22.7299, -4.18834, 1.11 ) }
    dend_26 { pt3dadd( -3.26579, -24.7993, -4.35179, 0.96 ) }
    dend_26 { pt3dadd( -4.10708, -26.776, -4.35732, 1.11 ) }
    dend_26 { pt3dadd( -5.36937, -29.2771, -4.27446, 1.11 ) }
    dend_26 { pt3dadd( -6.29372, -30.8979, -4.24513, 1.11 ) }
    dend_26 { pt3dadd( -6.37242, -31.0225, -4.24502, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -7.46264, -32.5274, -4.28828, 0.96 ) }
    dend_26 { pt3dadd( -7.51435, -32.59, -4.29486, 0.96 ) }
    dend_26 { pt3dadd( -8.57663, -33.6737, -4.53394, 1.03 ) }
    dend_26 { pt3dadd( -9.36264, -34.418, -4.801, 1.25 ) }
    dend_26 { pt3dadd( -9.43854, -34.4952, -4.82846, 1.25 ) }
    dend_26 { pt3dadd( -10.5001, -35.6302, -5.22817, 0.88 ) }
    dend_26 { pt3dadd( -11.5035, -36.7817, -5.63014, 0.88 ) }
    dend_26 { pt3dadd( -12.7694, -38.3455, -6.20616, 1.11 ) }
    dend_26 { pt3dadd( -13.7555, -39.6858, -6.69954, 1.11 ) }
    dend_26 { pt3dadd( -14.6848, -41.0493, -7.20193, 1.25 ) }
    dend_26 { pt3dadd( -14.7708, -41.1958, -7.25149, 1.25 ) }
    dend_26 { pt3dadd( -15.5554, -42.8532, -7.78588, 0.96 ) }
    dend_26 { pt3dadd( -16.241, -44.586, -8.29709, 0.96 ) }
    dend_26 { pt3dadd( -16.7387, -46.037, -8.69542, 1.03 ) }
    dend_26 { pt3dadd( -16.7735, -46.1408, -8.72222, 1.03 ) }
    dend_26 { pt3dadd( -17.3894, -47.9465, -9.15964, 1.03 ) }
    dend_26 { pt3dadd( -17.8717, -49.3571, -9.46231, 1.03 ) }
    dend_26 { pt3dadd( -18.2984, -50.6156, -9.66243, 1.25 ) }
    dend_26 { pt3dadd( -18.7458, -51.9445, -9.80102, 1.62 ) }
    dend_26 { pt3dadd( -19.4529, -53.9389, -9.94846, 1.25 ) }
    dend_26 { pt3dadd( -20.0016, -55.4048, -10.018, 1.18 ) }
    dend_26 { pt3dadd( -20.4536, -56.4636, -10.0023, 1.18 ) }
    dend_26 { pt3dadd( -21.0591, -57.7522, -9.89263, 1.33 ) }
    dend_26 { pt3dadd( -21.8373, -59.2255, -9.70115, 1.33 ) }
    dend_26 { pt3dadd( -22.5666, -60.5106, -9.52177, 1.03 ) }
    dend_26 { pt3dadd( -22.6113, -60.5835, -9.51115, 1.03 ) }
    dend_26 { pt3dadd( -23.4398, -61.9324, -9.4155, 0.81 ) }
    dend_26 { pt3dadd( -24.0531, -62.9712, -9.47686, 0.66 ) }
    dend_26 { pt3dadd( -24.6502, -64.0309, -9.73533, 0.81 ) }
    dend_26 { pt3dadd( -25.351, -65.3544, -10.3201, 1.03 ) }
    dend_26 { pt3dadd( -25.6999, -66.0804, -10.7383, 1.33 ) }
    dend_26 { pt3dadd( -26.078, -67.0596, -11.3828, 1.62 ) }
    dend_26 { pt3dadd( -26.4188, -68.2172, -12.1941, 1.55 ) }
    dend_26 { pt3dadd( -26.7231, -69.5178, -13.0596, 1.18 ) }
    dend_26 { pt3dadd( -27.039, -71.0729, -13.9837, 0.96 ) }
    dend_26 { pt3dadd( -27.0556, -71.1598, -14.0288, 0.96 ) }
    dend_26 { pt3dadd( -27.4154, -73.1793, -14.9356, 0.88 ) }
    dend_26 { pt3dadd( -27.7251, -74.9217, -15.5651, 0.88 ) }
    dend_26 { pt3dadd( -27.9666, -76.4479, -15.9829, 1.18 ) }
    dend_26 { pt3dadd( -28.1759, -77.9878, -16.3213, 1.4 ) }
    dend_26 { pt3dadd( -28.4156, -79.7033, -16.6619, 1.4 ) }
    dend_26 { pt3dadd( -28.6221, -80.891, -16.9233, 1.18 ) }
    dend_26 { pt3dadd( -28.9397, -82.2522, -17.2455, 0.96 ) }
    dend_26 { pt3dadd( -29.3131, -83.4753, -17.6029, 1.11 ) }
    dend_26 { pt3dadd( -29.9343, -85.0034, -18.2256, 0.88 ) }
    dend_26 { pt3dadd( -30.4799, -86.1749, -18.7725, 0.74 ) }
    dend_26 { pt3dadd( -31.1472, -87.3354, -19.3967, 0.96 ) }
    dend_26 { pt3dadd( -31.6739, -88.0893, -19.8852, 1.25 ) }
    dend_26 { pt3dadd( -32.485, -89.0153, -20.6242, 1.33 ) }
    dend_26 { pt3dadd( -33.5761, -89.9647, -21.5485, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.65, 39.4584, -3.52172, 1.4 ) }
    dend_14 { pt3dadd( 8.24698, 40.8624, -4.11499, 1.4 ) }
    dend_14 { pt3dadd( 8.01108, 41.8472, -4.4459, 1.4 ) }
    dend_14 { pt3dadd( 7.67062, 43.2928, -4.72027, 1.25 ) }
    dend_14 { pt3dadd( 7.61443, 43.5224, -4.72579, 1.25 ) }
    dend_14 { pt3dadd( 7.44136, 44.2219, -4.68127, 1.03 ) }
    dend_14 { pt3dadd( 7.23236, 45.0659, -4.59466, 1.03 ) }
    dend_14 { pt3dadd( 7.05173, 45.8861, -4.42168, 1.18 ) }
    dend_14 { pt3dadd( 6.72939, 47.1821, -3.95654, 1.33 ) }
    dend_14 { pt3dadd( 6.40391, 48.3703, -3.3738, 1.33 ) }
    dend_14 { pt3dadd( 6.17741, 49.2062, -2.93241, 1.47 ) }
    dend_14 { pt3dadd( 6.0254, 49.8235, -2.59966, 1.47 ) }
    dend_14 { pt3dadd( 5.85487, 50.6787, -2.16609, 1.47 ) }
    dend_14 { pt3dadd( 5.58734, 52.5286, -1.33839, 1.4 ) }
    dend_14 { pt3dadd( 5.48938, 53.6895, -0.90397, 1.4 ) }
    dend_14 { pt3dadd( 5.46465, 54.4549, -0.66909, 1.4 ) }
    dend_14 { pt3dadd( 5.47886, 55.5127, -0.390785, 1.62 ) }
    dend_14 { pt3dadd( 5.54223, 56.7383, -0.139792, 1.18 ) }
    dend_14 { pt3dadd( 5.64145, 57.7342, -0.0200583, 1.18 ) }
    dend_14 { pt3dadd( 5.65326, 57.8139, -0.0187511, 1.18 ) }
    dend_14 { pt3dadd( 5.83345, 59.1317, -0.038731, 1.18 ) }
    dend_14 { pt3dadd( 5.95073, 60.1888, -0.0577757, 1.47 ) }
    dend_14 { pt3dadd( 5.97997, 60.5203, -0.0648518, 1.47 ) }
    dend_14 { pt3dadd( 6.06985, 61.6439, -0.0892078, 1.4 ) }
    dend_14 { pt3dadd( 6.16466, 62.8339, -0.112774, 1.33 ) }
    dend_14 { pt3dadd( 6.27387, 64.2609, -0.139752, 1.33 ) }
    dend_14 { pt3dadd( 6.36377, 65.6028, -0.163803, 1.62 ) }
    dend_14 { pt3dadd( 6.40866, 66.579, -0.184096, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.65, 39.4584, -3.52172, 1.18 ) }
    dend_1 { pt3dadd( 10.5698, 39.8445, -3.19189, 1.18 ) }
    dend_1 { pt3dadd( 12.3778, 40.1092, -2.59519, 0.96 ) }
    dend_1 { pt3dadd( 13.3679, 40.2339, -2.24432, 1.25 ) }
    dend_1 { pt3dadd( 13.4821, 40.253, -2.1952, 1.25 ) }
    dend_1 { pt3dadd( 15.1399, 40.5895, -1.47234, 1.25 ) }
    dend_1 { pt3dadd( 16.6811, 40.9885, -0.809434, 1.25 ) }
    dend_1 { pt3dadd( 19.4653, 41.7684, 0.383298, 1.18 ) }
    dend_1 { pt3dadd( 20.755, 42.1987, 0.922461, 0.81 ) }
    dend_1 { pt3dadd( 22.5396, 42.916, 1.68618, 0.96 ) }
    dend_1 { pt3dadd( 23.9071, 43.6179, 2.22108, 0.96 ) }
    dend_1 { pt3dadd( 24.9822, 44.395, 2.55923, 0.96 ) }
    dend_1 { pt3dadd( 25.0544, 44.4598, 2.56922, 0.96 ) }
    dend_1 { pt3dadd( 26.21, 45.5997, 2.4568, 0.96 ) }
    dend_1 { pt3dadd( 26.2872, 45.6801, 2.44227, 0.96 ) }
    dend_1 { pt3dadd( 27.2987, 46.7356, 2.14971, 1.18 ) }
    dend_1 { pt3dadd( 28.6097, 48.098, 1.75936, 1.4 ) }
    dend_1 { pt3dadd( 29.6997, 49.1769, 1.44132, 1.33 ) }
    dend_1 { pt3dadd( 29.8259, 49.296, 1.41303, 1.33 ) }
    dend_1 { pt3dadd( 31.0781, 50.3779, 1.2301, 1.18 ) }
    dend_1 { pt3dadd( 31.2986, 50.538, 1.23298, 1.18 ) }
    dend_1 { pt3dadd( 32.2908, 51.1492, 1.38321, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 32.5621, 51.2884, 1.47614, 1.18 ) }
    dend_1 { pt3dadd( 33.953, 51.9385, 2.13023, 0.96 ) }
    dend_1 { pt3dadd( 35.3007, 52.5588, 2.85709, 0.96 ) }
    dend_1 { pt3dadd( 37.1729, 53.4795, 4.0372, 1.03 ) }
    dend_1 { pt3dadd( 37.3116, 53.5601, 4.12721, 1.03 ) }
    dend_1 { pt3dadd( 39.371, 55.0236, 5.46995, 1.03 ) }
    dend_1 { pt3dadd( 39.5013, 55.1217, 5.55717, 1.03 ) }
    dend_1 { pt3dadd( 40.2403, 55.7562, 6.06943, 1.03 ) }
    dend_1 { pt3dadd( 41.2199, 56.761, 6.76757, 1.18 ) }
    dend_1 { pt3dadd( 42.4239, 58.3096, 7.45975, 1.4 ) }
    dend_1 { pt3dadd( 43.3835, 59.6588, 7.89012, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 5.28528, -95.0899, -68.6139, 0.52 ) }
    dend_102 { pt3dadd( 4.50912, -95.5979, -69.309, 0.52 ) }
    dend_102 { pt3dadd( 3.52102, -96.2878, -70.1156, 0.52 ) }
    dend_102 { pt3dadd( 3.14328, -96.6054, -70.4537, 0.96 ) }
    dend_102 { pt3dadd( 2.36336, -97.4368, -71.2943, 1.33 ) }
    dend_102 { pt3dadd( 1.96057, -97.9769, -71.8011, 0.81 ) }
    dend_102 { pt3dadd( 1.50133, -98.7909, -72.4944, 0.52 ) }
    dend_102 { pt3dadd( 1.48857, -98.8407, -72.5275, 0.52 ) }
    dend_102 { pt3dadd( 1.56479, -100.028, -73.2715, 0.88 ) }
    dend_102 { pt3dadd( 1.82778, -100.923, -73.837, 1.25 ) }
    dend_102 { pt3dadd( 2.07101, -101.419, -74.1612, 1.47 ) }
    dend_102 { pt3dadd( 2.48891, -102.086, -74.6371, 1.47 ) }
    dend_102 { pt3dadd( 3.04116, -102.835, -75.1882, 0.88 ) }
    dend_102 { pt3dadd( 3.8869, -103.92, -76.012, 0.88 ) }
    dend_102 { pt3dadd( 4.32942, -104.464, -76.4697, 0.37 ) }
    dend_102 { pt3dadd( 4.7903, -105.095, -77.0413, 0.66 ) }
    dend_102 { pt3dadd( 4.82095, -105.148, -77.0949, 0.66 ) }
    dend_102 { pt3dadd( 4.95379, -105.504, -77.4655, 0.96 ) }
    dend_102 { pt3dadd( 5.10431, -106.459, -78.3955, 1.11 ) }
    dend_102 { pt3dadd( 5.02328, -107.824, -79.5297, 0.44 ) }
    dend_102 { pt3dadd( 4.89485, -108.557, -80.0734, 0.44 ) }
    dend_102 { pt3dadd( 4.65262, -109.65, -80.8533, 0.52 ) }
    dend_102 { pt3dadd( 4.51422, -110.253, -81.2843, 0.74 ) }
    dend_102 { pt3dadd( 4.32671, -110.921, -81.7325, 0.74 ) }
    dend_102 { pt3dadd( 4.05178, -111.758, -82.286, 1.03 ) }
    dend_102 { pt3dadd( 3.64025, -113.156, -83.239, 0.88 ) }
    dend_102 { pt3dadd( 3.33175, -114.513, -84.2133, 1.18 ) }
    dend_102 { pt3dadd( 3.15156, -115.824, -85.2511, 0.96 ) }
    dend_102 { pt3dadd( 3.12576, -116.895, -86.298, 0.59 ) }
    dend_102 { pt3dadd( 3.18538, -118.082, -87.647, 0.29 ) }
    dend_102 { pt3dadd( 3.2775, -118.957, -88.7545, 0.88 ) }
    dend_102 { pt3dadd( 3.30512, -119.214, -89.1058, 1.47 ) }
    dend_102 { pt3dadd( 3.41294, -120.282, -90.5902, 1.33 ) }
    dend_102 { pt3dadd( 3.52423, -121.873, -92.7795, 0.52 ) }
    dend_102 { pt3dadd( 3.52989, -122.296, -93.3317, 0.29 ) }
    dend_102 { pt3dadd( 3.48124, -122.665, -93.7206, 0.96 ) }
    dend_102 { pt3dadd( 3.20814, -123.691, -94.6391, 1.77 ) }
    dend_102 { pt3dadd( 3.08806, -124.124, -95.0048, 1.77 ) }
    dend_102 { pt3dadd( 2.79968, -125.083, -95.7112, 1.11 ) }
    dend_102 { pt3dadd( 2.62149, -125.872, -96.3662, 0.37 ) }
    dend_102 { pt3dadd( 2.59094, -126.414, -97.0101, 0.29 ) }
    dend_102 { pt3dadd( 2.64397, -127.212, -98.1571, 0.74 ) }
    dend_102 { pt3dadd( 2.88014, -128.366, -99.9918, 1.33 ) }
    dend_102 { pt3dadd( 2.89055, -128.4, -100.052, 1.33 ) }
    dend_102 { pt3dadd( 3.32524, -129.462, -102.144, 1.55 ) }
    dend_102 { pt3dadd( 3.93757, -130.802, -104.959, 0.96 ) }
    dend_102 { pt3dadd( 3.95135, -130.834, -105.027, 0.96 ) }
    dend_102 { pt3dadd( 4.08567, -131.247, -105.814, 1.18 ) }
    dend_102 { pt3dadd( 4.09271, -131.279, -105.866, 1.18 ) }
    dend_102 { pt3dadd( 4.23173, -132.592, -107.578, 0.44 ) }
    dend_102 { pt3dadd( 4.14643, -133.289, -108.211, 0.37 ) }
    dend_102 { pt3dadd( 4.02363, -133.877, -108.81, 0.52 ) }
    dend_102 { pt3dadd( 3.939, -134.337, -109.381, 0.81 ) }
    dend_102 { pt3dadd( 3.85165, -134.887, -110.096, 1.33 ) }
    dend_102 { pt3dadd( 3.81534, -135.262, -110.591, 0.96 ) }
    dend_102 { pt3dadd( 3.80962, -136.459, -112.17, 1.25 ) }
    dend_102 { pt3dadd( 4.06846, -138.966, -115.511, 0.52 ) }
    dend_102 { pt3dadd( 4.30019, -140.145, -117.13, 0.44 ) }
    dend_102 { pt3dadd( 4.47749, -140.736, -117.951, 0.59 ) }
    dend_102 { pt3dadd( 4.87668, -141.725, -119.329, 0.59 ) }
    dend_102 { pt3dadd( 5.37856, -142.679, -120.604, 0.74 ) }
    dend_102 { pt3dadd( 5.71324, -143.181, -121.198, 1.18 ) }
    dend_102 { pt3dadd( 5.7474, -143.229, -121.239, 1.18 ) }
    dend_102 { pt3dadd( 6.13449, -143.699, -121.605, 1.47 ) }
    dend_102 { pt3dadd( 6.17601, -143.744, -121.64, 1.47 ) }
    dend_102 { pt3dadd( 7.12724, -144.836, -122.299, 1.18 ) }
    dend_102 { pt3dadd( 7.16795, -144.891, -122.326, 1.18 ) }
    dend_102 { pt3dadd( 7.53188, -145.535, -122.598, 1.18 ) }
    dend_102 { pt3dadd( 7.96666, -146.632, -123.069, 0.52 ) }
    dend_102 { pt3dadd( 8.12294, -147.351, -123.384, 0.29 ) }
    dend_102 { pt3dadd( 8.21504, -148.17, -123.771, 0.29 ) }
    dend_102 { pt3dadd( 8.24015, -148.73, -124.051, 0.88 ) }
    dend_102 { pt3dadd( 8.24255, -149.494, -124.479, 1.11 ) }
    dend_102 { pt3dadd( 8.18292, -150.95, -125.353, 0.81 ) }
    dend_102 { pt3dadd( 8.14327, -151.876, -126.008, 0.37 ) }
    dend_102 { pt3dadd( 8.1459, -152.854, -127.007, 0.29 ) }
    dend_102 { pt3dadd( 8.15795, -153.303, -127.599, 0.96 ) }
    dend_102 { pt3dadd( 8.15856, -153.344, -127.671, 0.96 ) }
    dend_102 { pt3dadd( 8.14109, -153.704, -128.411, 1.18 ) }
    dend_102 { pt3dadd( 8.00111, -154.457, -130.135, 1.11 ) }
    dend_102 { pt3dadd( 7.54126, -155.741, -133.253, 0.44 ) }
    dend_102 { pt3dadd( 7.32537, -156.128, -134.223, 0.74 ) }
    dend_102 { pt3dadd( 6.86356, -156.791, -135.789, 0.59 ) }
    dend_102 { pt3dadd( 6.55656, -157.18, -136.62, 0.81 ) }
    dend_102 { pt3dadd( 6.0466, -157.732, -137.639, 0.44 ) }
    dend_102 { pt3dadd( 5.67539, -158.136, -138.119, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( 5.63463, -158.19, -138.15, 0.59 ) }
    dend_102 { pt3dadd( 5.17307, -158.994, -138.476, 0.52 ) }
    dend_102 { pt3dadd( 4.87963, -159.648, -138.681, 1.03 ) }
    dend_102 { pt3dadd( 4.60517, -160.429, -138.927, 1.4 ) }
    dend_102 { pt3dadd( 4.24441, -161.633, -139.278, 1.33 ) }
    dend_102 { pt3dadd( 4.02266, -162.474, -139.581, 1.11 ) }
    dend_102 { pt3dadd( 3.88413, -163.31, -140.012, 0.59 ) }
    dend_102 { pt3dadd( 3.88086, -163.372, -140.052, 0.59 ) }
    dend_102 { pt3dadd( 3.92885, -163.936, -140.511, 0.44 ) }
    dend_102 { pt3dadd( 4.13556, -164.835, -141.425, 0.44 ) }
    dend_102 { pt3dadd( 4.47472, -165.83, -142.607, 0.74 ) }
    dend_102 { pt3dadd( 5.03119, -167.238, -144.419, 0.74 ) }
    dend_102 { pt3dadd( 5.16954, -167.575, -144.854, 1.25 ) }
    dend_102 { pt3dadd( 5.57048, -168.615, -146.208, 1.55 ) }
    dend_102 { pt3dadd( 5.97159, -169.732, -147.687, 1.77 ) }
    dend_102 { pt3dadd( 6.371, -171.088, -149.524, 0.74 ) }
    dend_102 { pt3dadd( 6.48272, -171.807, -150.44, 0.52 ) }
    dend_102 { pt3dadd( 6.47584, -172.293, -151.015, 0.52 ) }
    dend_102 { pt3dadd( 6.33757, -173.32, -152.196, 0.96 ) }
    dend_102 { pt3dadd( 6.21176, -173.752, -152.641, 1.18 ) }
    dend_102 { pt3dadd( 5.72504, -174.795, -153.658, 0.52 ) }
    dend_102 { pt3dadd( 5.40109, -175.297, -154.146, 0.52 ) }
    dend_102 { pt3dadd( 5.16649, -175.594, -154.455, 0.66 ) }
    dend_102 { pt3dadd( 5.12837, -175.634, -154.5, 0.66 ) }
    dend_102 { pt3dadd( 4.79532, -175.932, -154.829, 0.44 ) }
    dend_102 { pt3dadd( 3.91261, -176.607, -155.591, 0.29 ) }
    dend_102 { pt3dadd( 3.85825, -176.638, -155.625, 0.29 ) }
    dend_102 { pt3dadd( 3.43322, -176.835, -155.863, 0.52 ) }
    dend_102 { pt3dadd( 2.99603, -177.02, -156.063, 0.81 ) }
    dend_102 { pt3dadd( 2.46232, -177.262, -156.235, 0.96 ) }
    dend_102 { pt3dadd( 1.93179, -177.516, -156.341, 1.11 ) }
    dend_102 { pt3dadd( 1.19457, -177.912, -156.392, 0.29 ) }
    dend_102 { pt3dadd( 1.1007, -177.968, -156.394, 0.29 ) }
    dend_102 { pt3dadd( 0.28297, -178.465, -156.383, 0.29 ) }
    dend_102 { pt3dadd( -0.466875, -178.908, -156.353, 0.88 ) }
    dend_102 { pt3dadd( -0.738207, -179.064, -156.334, 1.03 ) }
    dend_102 { pt3dadd( -1.35505, -179.382, -156.292, 1.18 ) }
    dend_102 { pt3dadd( -2.29254, -179.778, -156.264, 0.29 ) }
    dend_102 { pt3dadd( -3.40498, -180.152, -156.285, 0.29 ) }
    dend_102 { pt3dadd( -3.86257, -180.269, -156.332, 0.59 ) }
    dend_102 { pt3dadd( -3.93041, -180.285, -156.346, 0.59 ) }
    dend_102 { pt3dadd( -4.71108, -180.469, -156.578, 0.59 ) }
    dend_102 { pt3dadd( -5.46982, -180.696, -156.881, 1.11 ) }
    dend_102 { pt3dadd( -6.10717, -180.952, -157.199, 1.4 ) }
    dend_102 { pt3dadd( -6.8757, -181.346, -157.637, 0.96 ) }
    dend_102 { pt3dadd( -7.64713, -181.84, -158.104, 0.59 ) }
    dend_102 { pt3dadd( -8.53679, -182.524, -158.652, 0.37 ) }
    dend_102 { pt3dadd( -9.20866, -183.147, -159.064, 0.37 ) }
    dend_102 { pt3dadd( -9.62014, -183.562, -159.279, 0.74 ) }
    dend_102 { pt3dadd( -9.66807, -183.614, -159.301, 0.74 ) }
    dend_102 { pt3dadd( -10.1495, -184.184, -159.443, 0.74 ) }
    dend_102 { pt3dadd( -10.5285, -184.649, -159.523, 1.03 ) }
    dend_102 { pt3dadd( -10.9698, -185.199, -159.579, 1.33 ) }
    dend_102 { pt3dadd( -11.6383, -185.941, -159.632, 1.47 ) }
    dend_102 { pt3dadd( -12.3891, -186.71, -159.686, 0.37 ) }
    dend_102 { pt3dadd( -13.3094, -187.627, -159.755, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 5.28528, -95.0899, -68.6139, 0.52 ) }
    dend_99 { pt3dadd( 5.45845, -95.8299, -67.5098, 0.52 ) }
    dend_99 { pt3dadd( 5.67505, -96.7662, -66.3503, 0.44 ) }
    dend_99 { pt3dadd( 5.79059, -97.2948, -65.8252, 0.88 ) }
    dend_99 { pt3dadd( 5.79947, -97.3413, -65.7876, 0.88 ) }
    dend_99 { pt3dadd( 5.87219, -97.7624, -65.4962, 1.03 ) }
    dend_99 { pt3dadd( 5.94485, -98.2454, -65.2097, 0.81 ) }
    dend_99 { pt3dadd( 6.02564, -98.8982, -64.9912, 0.29 ) }
    dend_99 { pt3dadd( 6.09809, -99.627, -64.8428, 0.22 ) }
    dend_99 { pt3dadd( 6.1394, -100.182, -64.7489, 0.52 ) }
    dend_99 { pt3dadd( 6.15129, -100.479, -64.701, 0.74 ) }
    dend_99 { pt3dadd( 6.14755, -101.248, -64.588, 0.29 ) }
    dend_99 { pt3dadd( 6.10961, -101.917, -64.4951, 0.29 ) }
    dend_99 { pt3dadd( 6.04247, -102.576, -64.415, 0.74 ) }
    dend_99 { pt3dadd( 5.98819, -102.949, -64.3692, 1.03 ) }
    dend_99 { pt3dadd( 5.91268, -103.411, -64.3123, 0.96 ) }
    dend_99 { pt3dadd( 5.82104, -103.896, -64.2562, 0.59 ) }
    dend_99 { pt3dadd( 5.68728, -104.583, -64.1563, 0.22 ) }
    dend_99 { pt3dadd( 5.61789, -105.009, -64.0765, 0.37 ) }
    dend_99 { pt3dadd( 5.60879, -105.118, -64.052, 0.37 ) }
    dend_99 { pt3dadd( 5.62715, -105.57, -63.9454, 0.37 ) }
    dend_99 { pt3dadd( 5.63727, -105.627, -63.9324, 0.37 ) }
    dend_99 { pt3dadd( 5.90316, -106.465, -63.8289, 0.29 ) }
    dend_99 { pt3dadd( 6.13608, -107.036, -63.8059, 0.88 ) }
    dend_99 { pt3dadd( 6.29083, -107.397, -63.8104, 1.18 ) }
    dend_99 { pt3dadd( 6.59106, -108.113, -63.849, 0.29 ) }
    dend_99 { pt3dadd( 6.87345, -108.793, -63.9128, 0.29 ) }
    dend_99 { pt3dadd( 7.27559, -109.836, -63.9938, 0.52 ) }
    dend_99 { pt3dadd( 7.4382, -110.306, -64.0256, 0.81 ) }
    dend_99 { pt3dadd( 7.67387, -111.066, -64.0414, 0.22 ) }
    dend_99 { pt3dadd( 7.76802, -111.424, -64.0316, 0.59 ) }
    dend_99 { pt3dadd( 7.78446, -111.501, -64.0269, 0.59 ) }
    dend_99 { pt3dadd( 7.987, -112.714, -63.9265, 0.44 ) }
    dend_99 { pt3dadd( 8.10255, -113.566, -63.835, 0.66 ) }
    dend_99 { pt3dadd( 8.17775, -114.143, -63.7854, 0.59 ) }
    dend_99 { pt3dadd( 8.24546, -114.626, -63.7674, 0.44 ) }
    dend_99 { pt3dadd( 8.36296, -115.419, -63.778, 0.96 ) }
    dend_99 { pt3dadd( 8.49078, -116.026, -63.8459, 1.33 ) }
    dend_99 { pt3dadd( 8.69297, -116.645, -63.9989, 0.59 ) }
    dend_99 { pt3dadd( 8.72051, -116.705, -64.0172, 0.59 ) }
    dend_99 { pt3dadd( 9.03814, -117.225, -64.2116, 0.59 ) }
    dend_99 { pt3dadd( 9.06582, -117.265, -64.2309, 0.59 ) }
    dend_99 { pt3dadd( 9.65234, -118.115, -64.7444, 0.29 ) }
    dend_99 { pt3dadd( 9.9088, -118.523, -65.0298, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 10.1066, -118.902, -65.2794, 0.44 ) }
    dend_99 { pt3dadd( 10.3577, -119.468, -65.6267, 0.44 ) }
    dend_99 { pt3dadd( 10.6091, -120.196, -66.0267, 1.33 ) }
    dend_99 { pt3dadd( 10.8721, -121.071, -66.4596, 1.11 ) }
    dend_99 { pt3dadd( 11.0705, -121.884, -66.8142, 0.52 ) }
    dend_99 { pt3dadd( 11.2684, -122.629, -67.127, 0.29 ) }
    dend_99 { pt3dadd( 11.2825, -122.682, -67.1481, 0.29 ) }
    dend_99 { pt3dadd( 11.4196, -123.146, -67.2829, 0.29 ) }
    dend_99 { pt3dadd( 11.7003, -123.768, -67.3646, 0.29 ) }
    dend_99 { pt3dadd( 11.902, -124.073, -67.3347, 0.96 ) }
    dend_99 { pt3dadd( 12.1947, -124.34, -67.2447, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 18.2625, -153.403, -45.1121, 0.29 ) }
    dend_97 { pt3dadd( 17.3384, -154.388, -43.6746, 0.29 ) }
    dend_97 { pt3dadd( 16.846, -155.116, -42.7025, 0.29 ) }
    dend_97 { pt3dadd( 16.7004, -155.348, -42.4063, 0.74 ) }
    dend_97 { pt3dadd( 16.6633, -155.408, -42.3319, 0.74 ) }
    dend_97 { pt3dadd( 16.4131, -155.794, -41.8725, 0.74 ) }
    dend_97 { pt3dadd( 15.7749, -156.582, -41.0042, 0.29 ) }
    dend_97 { pt3dadd( 15.2105, -157.204, -40.4827, 0.29 ) }
    dend_97 { pt3dadd( 14.9018, -157.476, -40.2792, 0.74 ) }
    dend_97 { pt3dadd( 14.6064, -157.682, -40.1421, 1.11 ) }
    dend_97 { pt3dadd( 14.0965, -158.023, -39.9399, 1.11 ) }
    dend_97 { pt3dadd( 12.7298, -158.91, -39.4945, 0.29 ) }
    dend_97 { pt3dadd( 12.2874, -159.222, -39.357, 0.37 ) }
    dend_97 { pt3dadd( 11.7132, -159.73, -39.0785, 0.37 ) }
    dend_97 { pt3dadd( 11.1396, -160.386, -38.6624, 0.66 ) }
    dend_97 { pt3dadd( 10.6289, -161.146, -38.1534, 0.52 ) }
    dend_97 { pt3dadd( 10.3606, -161.635, -37.81, 0.96 ) }
    dend_97 { pt3dadd( 9.91928, -162.562, -37.1326, 1.33 ) }
    dend_97 { pt3dadd( 9.24598, -163.882, -36.1759, 0.59 ) }
    dend_97 { pt3dadd( 8.94878, -164.465, -35.7212, 0.37 ) }
    dend_97 { pt3dadd( 8.70972, -164.92, -35.3496, 0.22 ) }
    dend_97 { pt3dadd( 8.27248, -165.701, -34.7135, 0.22 ) }
    dend_97 { pt3dadd( 7.89501, -166.375, -34.1859, 0.66 ) }
    dend_97 { pt3dadd( 7.41294, -167.285, -33.5641, 0.66 ) }
    dend_97 { pt3dadd( 6.71056, -168.798, -32.6929, 0.52 ) }
    dend_97 { pt3dadd( 6.61987, -169.031, -32.5694, 0.29 ) }
    dend_97 { pt3dadd( 6.38986, -169.717, -32.2646, 0.74 ) }
    dend_97 { pt3dadd( 6.30887, -170.035, -32.1148, 0.74 ) }
    dend_97 { pt3dadd( 5.9858, -171.539, -31.4078, 0.37 ) }
    dend_97 { pt3dadd( 5.74025, -172.847, -30.8336, 0.44 ) }
    dend_97 { pt3dadd( 5.60204, -173.497, -30.5875, 0.59 ) }
    dend_97 { pt3dadd( 5.34971, -174.619, -30.1658, 0.52 ) }
    dend_97 { pt3dadd( 4.75145, -176.925, -29.2828, 0.37 ) }
    dend_97 { pt3dadd( 4.44099, -177.915, -28.89, 0.37 ) }
    dend_97 { pt3dadd( 4.02434, -178.995, -28.4509, 0.29 ) }
    dend_97 { pt3dadd( 3.45067, -180.272, -27.9157, 0.59 ) }
    dend_97 { pt3dadd( 3.32988, -180.527, -27.8158, 0.88 ) }
    dend_97 { pt3dadd( 2.90807, -181.31, -27.5358, 0.66 ) }
    dend_97 { pt3dadd( 2.343, -182.204, -27.3135, 0.15 ) }
    dend_97 { pt3dadd( 1.65859, -183.098, -27.0343, 0.15 ) }
    dend_97 { pt3dadd( 1.59909, -183.159, -27.0105, 0.15 ) }
    dend_97 { pt3dadd( 0.845831, -183.809, -26.7785, 0.59 ) }
    dend_97 { pt3dadd( 0.326052, -184.26, -26.6731, 0.88 ) }
    dend_97 { pt3dadd( 0.268865, -184.314, -26.6669, 0.88 ) }
    dend_97 { pt3dadd( -0.153635, -184.752, -26.6555, 0.88 ) }
    dend_97 { pt3dadd( -0.783018, -185.504, -26.69, 0.88 ) }
    dend_97 { pt3dadd( -1.68571, -186.833, -26.8169, 0.29 ) }
    dend_97 { pt3dadd( -2.10857, -187.575, -26.9061, 0.29 ) }
    dend_97 { pt3dadd( -2.42786, -188.284, -26.9974, 0.66 ) }
    dend_97 { pt3dadd( -2.65862, -188.896, -27.0624, 0.81 ) }
    dend_97 { pt3dadd( -2.91905, -189.821, -27.1442, 0.66 ) }
    dend_97 { pt3dadd( -3.17614, -191.053, -27.2154, 0.29 ) }
    dend_97 { pt3dadd( -3.28055, -191.694, -27.2281, 0.81 ) }
    dend_97 { pt3dadd( -3.3594, -192.162, -27.2278, 0.81 ) }
    dend_97 { pt3dadd( -3.59719, -193.266, -27.1811, 0.22 ) }
    dend_97 { pt3dadd( -3.78411, -194.005, -27.069, 0.22 ) }
    dend_97 { pt3dadd( -3.90003, -194.45, -26.9546, 0.81 ) }
    dend_97 { pt3dadd( -4.01178, -194.815, -26.8265, 0.96 ) }
    dend_97 { pt3dadd( -4.38531, -195.917, -26.2379, 0.22 ) }
    dend_97 { pt3dadd( -4.61101, -196.492, -25.6606, 0.22 ) }
    dend_97 { pt3dadd( -4.89825, -197.127, -24.5937, 0.74 ) }
    dend_97 { pt3dadd( -4.9931, -197.317, -24.1859, 1.18 ) }
    dend_97 { pt3dadd( -5.15286, -197.624, -23.4374, 0.74 ) }
    dend_97 { pt3dadd( -5.53471, -198.28, -21.6391, 0.59 ) }
    dend_97 { pt3dadd( -6.06975, -199.123, -19.181, 0.44 ) }
    dend_97 { pt3dadd( -6.50314, -199.861, -17.2482, 0.37 ) }
    dend_97 { pt3dadd( -6.52676, -199.903, -17.1578, 0.37 ) }
    dend_97 { pt3dadd( -6.65803, -200.161, -16.6949, 0.66 ) }
    dend_97 { pt3dadd( -6.7427, -200.479, -16.2572, 0.74 ) }
    dend_97 { pt3dadd( -6.87962, -201.468, -15.195, 0.29 ) }
    dend_97 { pt3dadd( -6.93299, -202.255, -14.4654, 0.29 ) }
    dend_97 { pt3dadd( -6.98017, -203.037, -13.6935, 0.29 ) }
    dend_97 { pt3dadd( -6.98413, -203.237, -13.4845, 0.74 ) }
    dend_97 { pt3dadd( -6.86586, -205.222, -11.2124, 0.66 ) }
    dend_97 { pt3dadd( -6.71355, -206.098, -10.0878, 0.22 ) }
    dend_97 { pt3dadd( -6.62964, -206.33, -9.70888, 0.22 ) }
    dend_97 { pt3dadd( -6.39499, -206.761, -8.71316, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 18.2625, -153.403, -45.1121, 0.37 ) }
    dend_94 { pt3dadd( 18.4015, -155.508, -46.8903, 0.37 ) }
    dend_94 { pt3dadd( 18.5234, -156.66, -47.7855, 0.37 ) }
    dend_94 { pt3dadd( 18.5331, -156.73, -47.8326, 0.37 ) }
    dend_94 { pt3dadd( 18.6427, -157.476, -48.2836, 0.81 ) }
    dend_94 { pt3dadd( 18.8225, -158.592, -48.9057, 0.88 ) }
    dend_94 { pt3dadd( 18.9034, -159.058, -49.1477, 0.88 ) }
    dend_94 { pt3dadd( 19.1033, -160.004, -49.5685, 0.52 ) }
    dend_94 { pt3dadd( 19.313, -161.092, -50.0156, 0.52 ) }
    dend_94 { pt3dadd( 19.4425, -162.114, -50.4317, 0.52 ) }
    dend_94 { pt3dadd( 19.4667, -162.697, -50.6487, 0.96 ) }
    dend_94 { pt3dadd( 19.457, -163.218, -50.8178, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( 19.3415, -164.652, -51.2621, 0.37 ) }
    dend_94 { pt3dadd( 19.2159, -165.523, -51.5061, 0.29 ) }
    dend_94 { pt3dadd( 19.018, -166.401, -51.7315, 0.59 ) }
    dend_94 { pt3dadd( 18.7762, -167.234, -51.9, 0.96 ) }
    dend_94 { pt3dadd( 18.5753, -167.848, -51.9895, 1.18 ) }
    dend_94 { pt3dadd( 18.5479, -167.928, -51.9956, 1.18 ) }
    dend_94 { pt3dadd( 18.3746, -168.422, -52.022, 1.18 ) }
    dend_94 { pt3dadd( 18.0988, -169.311, -52.1137, 1.03 ) }
    dend_94 { pt3dadd( 17.8493, -170.339, -52.2485, 0.59 ) }
    dend_94 { pt3dadd( 17.7368, -171.015, -52.3309, 0.52 ) }
    dend_94 { pt3dadd( 17.6709, -171.571, -52.3754, 0.66 ) }
    dend_94 { pt3dadd( 17.538, -172.982, -52.3985, 0.29 ) }
    dend_94 { pt3dadd( 17.4745, -173.958, -52.3329, 0.44 ) }
    dend_94 { pt3dadd( 17.4671, -174.401, -52.2579, 0.52 ) }
    dend_94 { pt3dadd( 17.4724, -175.808, -51.9044, 0.66 ) }
    dend_94 { pt3dadd( 17.4693, -176.611, -51.6519, 0.37 ) }
    dend_94 { pt3dadd( 17.4509, -177.507, -51.3233, 0.88 ) }
    dend_94 { pt3dadd( 17.4239, -178.024, -51.1089, 1.18 ) }
    dend_94 { pt3dadd( 17.3332, -179.045, -50.6954, 0.96 ) }
    dend_94 { pt3dadd( 17.2665, -179.77, -50.4369, 0.66 ) }
    dend_94 { pt3dadd( 17.2408, -180.303, -50.2713, 1.03 ) }
    dend_94 { pt3dadd( 17.2822, -181.287, -49.9925, 0.52 ) }
    dend_94 { pt3dadd( 17.4552, -182.49, -49.6931, 0.52 ) }
    dend_94 { pt3dadd( 17.6455, -183.287, -49.5377, 1.11 ) }
    dend_94 { pt3dadd( 17.9101, -184.053, -49.432, 1.11 ) }
    dend_94 { pt3dadd( 18.4074, -185.246, -49.3298, 0.74 ) }
    dend_94 { pt3dadd( 18.7112, -185.912, -49.2989, 0.44 ) }
    dend_94 { pt3dadd( 19.1921, -186.916, -49.2811, 0.59 ) }
    dend_94 { pt3dadd( 19.8226, -188.292, -49.2873, 0.59 ) }
    dend_94 { pt3dadd( 20.3469, -189.628, -49.3024, 0.59 ) }
    dend_94 { pt3dadd( 20.731, -190.779, -49.3126, 0.52 ) }
    dend_94 { pt3dadd( 20.9252, -191.531, -49.317, 1.18 ) }
    dend_94 { pt3dadd( 21.0286, -192.02, -49.3092, 1.33 ) }
    dend_94 { pt3dadd( 21.2319, -193.361, -49.255, 1.18 ) }
    dend_94 { pt3dadd( 21.3436, -194.443, -49.1761, 0.88 ) }
    dend_94 { pt3dadd( 21.4073, -195.318, -49.0947, 0.52 ) }
    dend_94 { pt3dadd( 21.4893, -196.294, -49.0111, 0.66 ) }
    dend_94 { pt3dadd( 21.5059, -196.393, -49.0031, 0.66 ) }
    dend_94 { pt3dadd( 21.7325, -197.194, -48.964, 0.81 ) }
    dend_94 { pt3dadd( 22.0381, -198.1, -48.9321, 0.44 ) }
    dend_94 { pt3dadd( 22.4178, -199.069, -48.9108, 0.44 ) }
    dend_94 { pt3dadd( 22.9318, -200.241, -48.8947, 0.44 ) }
    dend_94 { pt3dadd( 23.6715, -201.704, -48.8919, 0.37 ) }
    dend_94 { pt3dadd( 24.1933, -202.649, -48.8927, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -3.69994, -37.3448, -2.56603, 1.03 ) }
    dend_65 { pt3dadd( -5.23998, -37.7498, -2.32625, 1.03 ) }
    dend_65 { pt3dadd( -6.2936, -38.186, -2.00122, 1.03 ) }
    dend_65 { pt3dadd( -7.57912, -38.8961, -1.52587, 0.96 ) }
    dend_65 { pt3dadd( -8.43034, -39.4952, -1.19696, 0.96 ) }
    dend_65 { pt3dadd( -8.54138, -39.5821, -1.15328, 0.96 ) }
    dend_65 { pt3dadd( -10.7241, -41.5295, -0.304155, 0.81 ) }
    dend_65 { pt3dadd( -11.5146, -42.4434, 0.0419993, 1.11 ) }
    dend_65 { pt3dadd( -12.2874, -43.4426, 0.393618, 1.11 ) }
    dend_65 { pt3dadd( -13.2784, -44.7777, 0.841376, 1.03 ) }
    dend_65 { pt3dadd( -13.3279, -44.8413, 0.861732, 1.03 ) }
    dend_65 { pt3dadd( -14.3912, -46.0863, 1.28323, 1.03 ) }
    dend_65 { pt3dadd( -15.1652, -46.9461, 1.53704, 1.25 ) }
    dend_65 { pt3dadd( -15.8239, -47.6533, 1.80795, 1.4 ) }
    dend_65 { pt3dadd( -16.276, -48.1224, 2.02768, 1.4 ) }
    dend_65 { pt3dadd( -17.1388, -49.0497, 2.54736, 1.25 ) }
    dend_65 { pt3dadd( -18.0222, -50.1549, 3.16953, 1.11 ) }
    dend_65 { pt3dadd( -18.4863, -50.858, 3.55262, 1.11 ) }
    dend_65 { pt3dadd( -18.9711, -51.8009, 4.01779, 1.03 ) }
    dend_65 { pt3dadd( -19.0295, -51.9414, 4.07392, 1.03 ) }
    dend_65 { pt3dadd( -19.4189, -52.9815, 4.34658, 0.81 ) }
    dend_65 { pt3dadd( -19.8219, -54.1242, 4.50363, 0.96 ) }
    dend_65 { pt3dadd( -20.2454, -55.3737, 4.57331, 0.96 ) }
    dend_65 { pt3dadd( -20.7064, -56.7937, 4.60923, 0.81 ) }
    dend_65 { pt3dadd( -20.9986, -57.8404, 4.5858, 0.74 ) }
    dend_65 { pt3dadd( -21.397, -59.411, 4.49343, 0.81 ) }
    dend_65 { pt3dadd( -21.5809, -60.2692, 4.40962, 1.11 ) }
    dend_65 { pt3dadd( -21.7836, -61.5055, 4.27254, 1.11 ) }
    dend_65 { pt3dadd( -21.8866, -62.4442, 4.16178, 1.11 ) }
    dend_65 { pt3dadd( -22.0143, -64.2687, 3.94905, 0.88 ) }
    dend_65 { pt3dadd( -22.0507, -65.1861, 3.88011, 1.11 ) }
    dend_65 { pt3dadd( -22.068, -66.2636, 3.81601, 1.11 ) }
    dend_65 { pt3dadd( -22.0753, -67.0981, 3.75514, 1.33 ) }
    dend_65 { pt3dadd( -22.0958, -67.9635, 3.68955, 0.96 ) }
    dend_65 { pt3dadd( -22.1407, -68.998, 3.61314, 1.11 ) }
    dend_65 { pt3dadd( -22.1874, -70.2615, 3.52892, 1.11 ) }
    dend_65 { pt3dadd( -22.2013, -71.3164, 3.43951, 1.4 ) }
    dend_65 { pt3dadd( -22.2132, -72.2426, 3.33983, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -3.69994, -37.3448, -2.56603, 1.47 ) }
    dend_42 { pt3dadd( -3.69803, -38.6184, -2.58918, 1.47 ) }
    dend_42 { pt3dadd( -3.69686, -39.4033, -2.60346, 1.47 ) }
    dend_42 { pt3dadd( -3.69431, -41.1132, -2.63455, 1.47 ) }
    dend_42 { pt3dadd( -3.6926, -42.2535, -2.65529, 1.62 ) }
    dend_42 { pt3dadd( -3.69052, -43.6492, -2.68067, 1.92 ) }
    dend_42 { pt3dadd( -3.6885, -44.9993, -2.70522, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -33.5761, -89.9647, -21.5485, 0.88 ) }
    dend_30 { pt3dadd( -34.9972, -90.1143, -21.5178, 0.88 ) }
    dend_30 { pt3dadd( -35.4195, -90.1834, -21.54, 1.11 ) }
    dend_30 { pt3dadd( -35.899, -90.287, -21.6151, 0.88 ) }
    dend_30 { pt3dadd( -36.4971, -90.4288, -21.731, 0.81 ) }
    dend_30 { pt3dadd( -37.1908, -90.6342, -21.8988, 0.74 ) }
    dend_30 { pt3dadd( -37.8445, -90.8803, -22.075, 0.96 ) }
    dend_30 { pt3dadd( -38.4717, -91.196, -22.3141, 0.96 ) }
    dend_30 { pt3dadd( -39.3111, -91.7199, -22.6501, 0.81 ) }
    dend_30 { pt3dadd( -39.3492, -91.7495, -22.6655, 0.81 ) }
    dend_30 { pt3dadd( -40.0099, -92.3616, -22.9353, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -40.5691, -92.9496, -23.1621, 0.74 ) }
    dend_30 { pt3dadd( -40.7681, -93.1668, -23.2341, 1.03 ) }
    dend_30 { pt3dadd( -41.1498, -93.57, -23.3577, 1.11 ) }
    dend_30 { pt3dadd( -41.8039, -94.2073, -23.5355, 1.11 ) }
    dend_30 { pt3dadd( -41.8552, -94.2523, -23.5498, 1.11 ) }
    dend_30 { pt3dadd( -42.6326, -94.8403, -23.762, 0.88 ) }
    dend_30 { pt3dadd( -43.5544, -95.4789, -24.0215, 0.88 ) }
    dend_30 { pt3dadd( -43.9635, -95.744, -24.1392, 1.25 ) }
    dend_30 { pt3dadd( -44.4795, -96.0505, -24.292, 1.25 ) }
    dend_30 { pt3dadd( -45.1921, -96.4431, -24.5087, 1.4 ) }
    dend_30 { pt3dadd( -45.7182, -96.7317, -24.6669, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -33.5761, -89.9647, -21.5485, 0.74 ) }
    dend_27 { pt3dadd( -33.3326, -90.3321, -22.3556, 0.74 ) }
    dend_27 { pt3dadd( -33.0257, -90.8167, -23.4355, 0.44 ) }
    dend_27 { pt3dadd( -33.0046, -90.8515, -23.5084, 0.44 ) }
    dend_27 { pt3dadd( -32.7839, -91.2147, -24.1866, 0.44 ) }
    dend_27 { pt3dadd( -32.3773, -91.8759, -25.3415, 1.03 ) }
    dend_27 { pt3dadd( -31.6046, -93.2324, -27.5565, 1.03 ) }
    dend_27 { pt3dadd( -31.3754, -93.6772, -28.2724, 1.33 ) }
    dend_27 { pt3dadd( -31.0944, -94.3186, -29.2554, 1.11 ) }
    dend_27 { pt3dadd( -30.9294, -94.7759, -29.9877, 0.59 ) }
    dend_27 { pt3dadd( -30.7358, -95.465, -31.1179, 0.44 ) }
    dend_27 { pt3dadd( -30.5885, -96.3873, -32.5423, 0.44 ) }
    dend_27 { pt3dadd( -30.5431, -97.0005, -33.4867, 0.88 ) }
    dend_27 { pt3dadd( -30.5543, -97.2837, -33.963, 1.25 ) }
    dend_27 { pt3dadd( -30.725, -98.3885, -35.8775, 1.25 ) }
    dend_27 { pt3dadd( -30.7322, -98.417, -35.9288, 1.25 ) }
    dend_27 { pt3dadd( -30.7725, -98.5506, -36.1477, 1.25 ) }
    dend_27 { pt3dadd( -30.7805, -98.5824, -36.1894, 1.25 ) }
    dend_27 { pt3dadd( -30.9074, -99.6919, -37.1171, 0.74 ) }
    dend_27 { pt3dadd( -30.9367, -100.367, -37.5538, 0.74 ) }
    dend_27 { pt3dadd( -30.9379, -100.42, -37.5797, 0.74 ) }
    dend_27 { pt3dadd( -30.9453, -100.901, -37.8551, 0.74 ) }
    dend_27 { pt3dadd( -30.9573, -101.571, -38.3543, 0.81 ) }
    dend_27 { pt3dadd( -30.9886, -102.135, -38.8314, 0.81 ) }
    dend_27 { pt3dadd( -31.1237, -103.263, -39.9402, 0.44 ) }
    dend_27 { pt3dadd( -31.1321, -103.302, -39.9833, 0.44 ) }
    dend_27 { pt3dadd( -31.3163, -103.986, -40.7779, 0.74 ) }
    dend_27 { pt3dadd( -31.595, -104.896, -41.9125, 0.88 ) }
    dend_27 { pt3dadd( -31.7216, -105.326, -42.4478, 1.03 ) }
    dend_27 { pt3dadd( -31.9113, -106.022, -43.2626, 1.03 ) }
    dend_27 { pt3dadd( -32.0063, -106.474, -43.7013, 1.18 ) }
    dend_27 { pt3dadd( -32.012, -106.514, -43.7354, 1.18 ) }
    dend_27 { pt3dadd( -32.0314, -107.47, -44.3412, 0.52 ) }
    dend_27 { pt3dadd( -31.9035, -108.169, -44.6492, 0.44 ) }
    dend_27 { pt3dadd( -31.7488, -108.534, -44.7966, 0.81 ) }
    dend_27 { pt3dadd( -31.5741, -108.834, -44.9088, 0.88 ) }
    dend_27 { pt3dadd( -31.5084, -108.939, -44.9543, 0.88 ) }
    dend_27 { pt3dadd( -31.2174, -109.435, -45.1776, 0.74 ) }
    dend_27 { pt3dadd( -30.9006, -110.047, -45.4576, 0.44 ) }
    dend_27 { pt3dadd( -30.6424, -110.685, -45.7673, 0.59 ) }
    dend_27 { pt3dadd( -30.3875, -111.566, -46.1726, 0.52 ) }
    dend_27 { pt3dadd( -30.2415, -112.269, -46.4923, 0.88 ) }
    dend_27 { pt3dadd( -30.1707, -112.752, -46.7035, 1.18 ) }
    dend_27 { pt3dadd( -30.113, -113.449, -47.0189, 0.52 ) }
    dend_27 { pt3dadd( -30.1121, -113.909, -47.2252, 0.44 ) }
    dend_27 { pt3dadd( -30.1525, -114.59, -47.5043, 0.44 ) }
    dend_27 { pt3dadd( -30.2163, -115.195, -47.734, 0.74 ) }
    dend_27 { pt3dadd( -30.2634, -115.536, -47.8603, 0.74 ) }
    dend_27 { pt3dadd( -30.4364, -116.627, -48.2845, 0.59 ) }
    dend_27 { pt3dadd( -30.5819, -117.427, -48.5906, 0.66 ) }
    dend_27 { pt3dadd( -30.6649, -117.879, -48.7762, 1.18 ) }
    dend_27 { pt3dadd( -30.7854, -118.571, -49.0607, 1.33 ) }
    dend_27 { pt3dadd( -30.877, -119.254, -49.3158, 1.11 ) }
    dend_27 { pt3dadd( -30.8802, -119.31, -49.3371, 1.11 ) }
    dend_27 { pt3dadd( -30.8645, -119.947, -49.5611, 0.96 ) }
    dend_27 { pt3dadd( -30.7861, -120.778, -49.8562, 0.66 ) }
    dend_27 { pt3dadd( -30.7103, -121.411, -50.1054, 0.37 ) }
    dend_27 { pt3dadd( -30.6585, -122.024, -50.3628, 0.29 ) }
    dend_27 { pt3dadd( -30.623, -123.1, -50.8666, 1.03 ) }
    dend_27 { pt3dadd( -30.6275, -123.634, -51.1313, 1.33 ) }
    dend_27 { pt3dadd( -30.6396, -124.064, -51.3498, 1.47 ) }
    dend_27 { pt3dadd( -30.6882, -125.168, -51.8721, 0.37 ) }
    dend_27 { pt3dadd( -30.7106, -125.839, -52.1994, 0.37 ) }
    dend_27 { pt3dadd( -30.7487, -126.772, -52.6286, 0.29 ) }
    dend_27 { pt3dadd( -30.7582, -127.123, -52.7673, 0.44 ) }
    dend_27 { pt3dadd( -30.7646, -127.654, -52.952, 0.59 ) }
    dend_27 { pt3dadd( -30.7621, -128.495, -53.2025, 0.59 ) }
    dend_27 { pt3dadd( -30.7322, -129.562, -53.4802, 0.74 ) }
    dend_27 { pt3dadd( -30.6863, -130.349, -53.6688, 0.59 ) }
    dend_27 { pt3dadd( -30.6549, -131.059, -53.8193, 0.44 ) }
    dend_27 { pt3dadd( -30.6186, -132.014, -54.0283, 0.44 ) }
    dend_27 { pt3dadd( -30.6122, -132.076, -54.0604, 0.44 ) }
    dend_27 { pt3dadd( -30.491, -132.679, -54.5383, 0.96 ) }
    dend_27 { pt3dadd( -30.3848, -133.024, -54.8766, 1.4 ) }
    dend_27 { pt3dadd( -30.3692, -133.065, -54.9196, 1.4 ) }
    dend_27 { pt3dadd( -30.207, -133.447, -55.3297, 1.18 ) }
    dend_27 { pt3dadd( -29.2072, -135.827, -57.8582, 0.59 ) }
    dend_27 { pt3dadd( -29.0081, -136.33, -58.3721, 0.88 ) }
    dend_27 { pt3dadd( -28.8374, -136.803, -58.8379, 1.03 ) }
    dend_27 { pt3dadd( -28.6732, -137.327, -59.3334, 0.52 ) }
    dend_27 { pt3dadd( -28.5314, -137.939, -59.8417, 0.37 ) }
    dend_27 { pt3dadd( -28.4531, -138.566, -60.2534, 0.37 ) }
    dend_27 { pt3dadd( -28.4518, -138.615, -60.2681, 0.37 ) }
    dend_27 { pt3dadd( -28.447, -138.835, -60.3316, 1.03 ) }
    dend_27 { pt3dadd( -28.4329, -139.306, -60.4484, 1.03 ) }
    dend_27 { pt3dadd( -28.3684, -140.031, -60.6197, 0.44 ) }
    dend_27 { pt3dadd( -28.2032, -140.8, -60.8504, 0.37 ) }
    dend_27 { pt3dadd( -27.9471, -141.549, -61.1077, 0.88 ) }
    dend_27 { pt3dadd( -27.769, -141.988, -61.3, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -27.6302, -142.314, -61.4636, 1.25 ) }
    dend_27 { pt3dadd( -27.3638, -142.935, -61.8243, 0.81 ) }
    dend_27 { pt3dadd( -26.9101, -144.085, -62.5448, 0.29 ) }
    dend_27 { pt3dadd( -26.8135, -144.389, -62.7336, 0.29 ) }
    dend_27 { pt3dadd( -26.646, -145.101, -63.1898, 0.37 ) }
    dend_27 { pt3dadd( -26.5311, -145.756, -63.6249, 0.37 ) }
    dend_27 { pt3dadd( -26.4479, -146.426, -64.0538, 0.66 ) }
    dend_27 { pt3dadd( -26.4115, -146.987, -64.3727, 1.25 ) }
    dend_27 { pt3dadd( -26.3767, -147.573, -64.6432, 1.4 ) }
    dend_27 { pt3dadd( -26.2741, -148.618, -65.0755, 0.81 ) }
    dend_27 { pt3dadd( -26.1237, -149.571, -65.4168, 0.59 ) }
    dend_27 { pt3dadd( -26.011, -150.098, -65.5885, 0.29 ) }
    dend_27 { pt3dadd( -25.8382, -150.779, -65.7824, 0.29 ) }
    dend_27 { pt3dadd( -25.6051, -151.56, -66.1298, 0.29 ) }
    dend_27 { pt3dadd( -25.517, -151.827, -66.2938, 1.03 ) }
    dend_27 { pt3dadd( -25.5002, -151.873, -66.3276, 1.03 ) }
    dend_27 { pt3dadd( -25.3409, -152.292, -66.6648, 1.4 ) }
    dend_27 { pt3dadd( -25.1204, -152.898, -67.1884, 1.4 ) }
    dend_27 { pt3dadd( -24.4801, -154.722, -68.8035, 0.52 ) }
    dend_27 { pt3dadd( -24.2552, -155.467, -69.4371, 0.74 ) }
    dend_27 { pt3dadd( -24.2357, -155.545, -69.4984, 0.74 ) }
    dend_27 { pt3dadd( -24.1089, -156.139, -69.9276, 0.52 ) }
    dend_27 { pt3dadd( -24.0118, -156.745, -70.3185, 0.52 ) }
    dend_27 { pt3dadd( -23.9707, -157.26, -70.5668, 0.74 ) }
    dend_27 { pt3dadd( -23.9538, -157.983, -70.8177, 0.66 ) }
    dend_27 { pt3dadd( -23.9116, -159.149, -71.3668, 0.59 ) }
    dend_27 { pt3dadd( -23.9074, -159.192, -71.3937, 0.59 ) }
    dend_27 { pt3dadd( -23.8307, -159.691, -71.7574, 0.52 ) }
    dend_27 { pt3dadd( -23.7229, -160.228, -72.1636, 1.18 ) }
    dend_27 { pt3dadd( -23.5145, -161.136, -72.8484, 1.62 ) }
    dend_27 { pt3dadd( -23.1367, -162.494, -73.8968, 1.18 ) }
    dend_27 { pt3dadd( -22.8546, -163.409, -74.5686, 0.52 ) }
    dend_27 { pt3dadd( -22.633, -164.104, -75.0453, 0.37 ) }
    dend_27 { pt3dadd( -22.418, -164.763, -75.4534, 0.74 ) }
    dend_27 { pt3dadd( -22.3276, -165.074, -75.6177, 1.11 ) }
    dend_27 { pt3dadd( -22.1546, -166.028, -75.9695, 0.88 ) }
    dend_27 { pt3dadd( -22.151, -166.583, -76.1022, 0.81 ) }
    dend_27 { pt3dadd( -22.2771, -167.293, -76.2618, 0.44 ) }
    dend_27 { pt3dadd( -22.463, -167.838, -76.3977, 0.59 ) }
    dend_27 { pt3dadd( -22.733, -168.41, -76.581, 0.59 ) }
    dend_27 { pt3dadd( -23.0954, -169.062, -76.8099, 0.37 ) }
    dend_27 { pt3dadd( -23.571, -169.846, -77.0801, 0.29 ) }
    dend_27 { pt3dadd( -23.885, -170.364, -77.2742, 0.81 ) }
    dend_27 { pt3dadd( -24.1463, -170.834, -77.467, 1.11 ) }
    dend_27 { pt3dadd( -24.5819, -171.712, -77.832, 1.4 ) }
    dend_27 { pt3dadd( -24.7709, -172.139, -78.0036, 1.33 ) }
    dend_27 { pt3dadd( -25.0404, -172.843, -78.2545, 0.81 ) }
    dend_27 { pt3dadd( -25.2745, -173.524, -78.4479, 0.52 ) }
    dend_27 { pt3dadd( -25.5702, -174.432, -78.6408, 0.44 ) }
    dend_27 { pt3dadd( -25.7767, -175.115, -78.7481, 0.37 ) }
    dend_27 { pt3dadd( -25.9908, -175.91, -78.7865, 0.37 ) }
    dend_27 { pt3dadd( -26.1625, -176.663, -78.7823, 0.66 ) }
    dend_27 { pt3dadd( -26.3014, -177.457, -78.7338, 0.96 ) }
    dend_27 { pt3dadd( -26.3695, -178.072, -78.663, 1.03 ) }
    dend_27 { pt3dadd( -26.3994, -178.688, -78.5619, 1.25 ) }
    dend_27 { pt3dadd( -26.3328, -179.819, -78.3636, 0.81 ) }
    dend_27 { pt3dadd( -26.2673, -180.306, -78.2827, 0.52 ) }
    dend_27 { pt3dadd( -26.157, -180.979, -78.2045, 0.52 ) }
    dend_27 { pt3dadd( -26.0808, -181.476, -78.175, 0.29 ) }
    dend_27 { pt3dadd( -26.0125, -182.205, -78.1737, 0.29 ) }
    dend_27 { pt3dadd( -25.9961, -183.202, -78.2653, 0.29 ) }
    dend_27 { pt3dadd( -26.0736, -183.835, -78.3939, 0.81 ) }
    dend_27 { pt3dadd( -26.2429, -184.484, -78.5569, 1.11 ) }
    dend_27 { pt3dadd( -26.4516, -185.011, -78.7136, 1.11 ) }
    dend_27 { pt3dadd( -26.7204, -185.532, -78.884, 0.74 ) }
    dend_27 { pt3dadd( -27.0667, -186.062, -79.0779, 0.37 ) }
    dend_27 { pt3dadd( -27.5825, -186.768, -79.3744, 0.29 ) }
    dend_27 { pt3dadd( -27.7396, -187.012, -79.4735, 0.74 ) }
    dend_27 { pt3dadd( -27.7695, -187.071, -79.4952, 0.74 ) }
    dend_27 { pt3dadd( -27.8993, -187.47, -79.6602, 0.96 ) }
    dend_27 { pt3dadd( -27.9191, -187.57, -79.7022, 0.96 ) }
    dend_27 { pt3dadd( -28.0368, -188.477, -80.0561, 0.29 ) }
    dend_27 { pt3dadd( -28.1197, -189.063, -80.2806, 0.29 ) }
    dend_27 { pt3dadd( -28.197, -189.471, -80.4273, 0.81 ) }
    dend_27 { pt3dadd( -28.4196, -190.331, -80.7144, 1.03 ) }
    dend_27 { pt3dadd( -28.6002, -190.839, -80.8703, 0.81 ) }
    dend_27 { pt3dadd( -28.9085, -191.493, -81.0649, 0.29 ) }
    dend_27 { pt3dadd( -29.3249, -192.165, -81.2555, 0.29 ) }
    dend_27 { pt3dadd( -29.5883, -192.507, -81.3565, 0.44 ) }
    dend_27 { pt3dadd( -29.9261, -192.91, -81.4703, 0.44 ) }
    dend_27 { pt3dadd( -30.3656, -193.367, -81.5827, 0.66 ) }
    dend_27 { pt3dadd( -30.8783, -193.832, -81.7172, 0.96 ) }
    dend_27 { pt3dadd( -31.1533, -194.044, -81.7949, 1.4 ) }
    dend_27 { pt3dadd( -31.9136, -194.58, -82.0343, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 6.40866, 66.579, -0.184096, 1.11 ) }
    dend_20 { pt3dadd( 6.07826, 68.1278, -0.347792, 1.11 ) }
    dend_20 { pt3dadd( 5.97483, 68.575, -0.408077, 0.96 ) }
    dend_20 { pt3dadd( 5.81863, 69.1527, -0.509692, 0.96 ) }
    dend_20 { pt3dadd( 5.63044, 69.7967, -0.636889, 0.96 ) }
    dend_20 { pt3dadd( 5.38814, 70.5478, -0.802011, 0.96 ) }
    dend_20 { pt3dadd( 4.99864, 71.682, -1.06803, 0.96 ) }
    dend_20 { pt3dadd( 4.97427, 71.7387, -1.08685, 0.96 ) }
    dend_20 { pt3dadd( 4.56096, 72.6049, -1.39625, 1.11 ) }
    dend_20 { pt3dadd( 4.51852, 72.6863, -1.42689, 1.11 ) }
    dend_20 { pt3dadd( 4.15236, 73.3461, -1.68421, 1.11 ) }
    dend_20 { pt3dadd( 4.11668, 73.4055, -1.70829, 1.11 ) }
    dend_20 { pt3dadd( 3.71377, 74.0552, -1.97408, 1.33 ) }
    dend_20 { pt3dadd( 3.34806, 74.6575, -2.21778, 1.18 ) }
    dend_20 { pt3dadd( 2.97356, 75.3355, -2.47459, 0.96 ) }
    dend_20 { pt3dadd( 2.9434, 75.4007, -2.49653, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 2.7219, 75.9615, -2.66482, 0.88 ) }
    dend_20 { pt3dadd( 2.4784, 76.7108, -2.86367, 0.88 ) }
    dend_20 { pt3dadd( 2.46434, 76.7719, -2.87688, 0.88 ) }
    dend_20 { pt3dadd( 2.31871, 77.7446, -3.04813, 0.88 ) }
    dend_20 { pt3dadd( 2.23931, 78.7028, -3.18587, 1.11 ) }
    dend_20 { pt3dadd( 2.2362, 78.7947, -3.19661, 1.11 ) }
    dend_20 { pt3dadd( 2.24875, 79.5952, -3.26913, 1.11 ) }
    dend_20 { pt3dadd( 2.28144, 80.2766, -3.31598, 1.33 ) }
    dend_20 { pt3dadd( 2.31114, 80.7013, -3.33816, 1.33 ) }
    dend_20 { pt3dadd( 2.41636, 81.4641, -3.38105, 1.18 ) }
    dend_20 { pt3dadd( 2.55862, 82.211, -3.42802, 1.18 ) }
    dend_20 { pt3dadd( 2.58295, 82.2978, -3.43697, 1.18 ) }
    dend_20 { pt3dadd( 2.84896, 83.0233, -3.53171, 1.11 ) }
    dend_20 { pt3dadd( 3.16609, 83.7464, -3.6393, 1.11 ) }
    dend_20 { pt3dadd( 3.53069, 84.4659, -3.75323, 1.03 ) }
    dend_20 { pt3dadd( 3.88081, 85.1157, -3.86898, 0.88 ) }
    dend_20 { pt3dadd( 4.40271, 86.1145, -4.07763, 0.88 ) }
    dend_20 { pt3dadd( 4.45555, 86.233, -4.10618, 0.88 ) }
    dend_20 { pt3dadd( 4.73787, 87.0727, -4.28214, 0.88 ) }
    dend_20 { pt3dadd( 4.74952, 87.1355, -4.29244, 0.88 ) }
    dend_20 { pt3dadd( 4.73603, 87.8247, -4.36989, 0.88 ) }
    dend_20 { pt3dadd( 4.57548, 88.7276, -4.44924, 0.88 ) }
    dend_20 { pt3dadd( 4.37271, 89.3749, -4.49903, 0.88 ) }
    dend_20 { pt3dadd( 3.99788, 90.3649, -4.61277, 0.96 ) }
    dend_20 { pt3dadd( 3.90821, 90.5524, -4.6459, 0.96 ) }
    dend_20 { pt3dadd( 3.62652, 91.0976, -4.76615, 1.47 ) }
    dend_20 { pt3dadd( 3.35096, 91.6092, -4.8848, 1.62 ) }
    dend_20 { pt3dadd( 2.96227, 92.286, -5.04247, 1.11 ) }
    dend_20 { pt3dadd( 2.5817, 92.9559, -5.20972, 1.11 ) }
    dend_20 { pt3dadd( 2.11657, 93.7985, -5.44478, 1.11 ) }
    dend_20 { pt3dadd( 1.73947, 94.5323, -5.62375, 0.96 ) }
    dend_20 { pt3dadd( 1.40983, 95.2294, -5.76702, 0.96 ) }
    dend_20 { pt3dadd( 1.02293, 96.0668, -5.92918, 0.96 ) }
    dend_20 { pt3dadd( 0.995284, 96.1358, -5.94094, 0.96 ) }
    dend_20 { pt3dadd( 0.832462, 96.6435, -6.03361, 0.96 ) }
    dend_20 { pt3dadd( 0.633535, 97.5555, -6.26106, 1.18 ) }
    dend_20 { pt3dadd( 0.62054, 97.6418, -6.28834, 1.18 ) }
    dend_20 { pt3dadd( 0.492318, 98.7341, -6.68975, 1.18 ) }
    dend_20 { pt3dadd( 0.385542, 99.8555, -7.13204, 1.03 ) }
    dend_20 { pt3dadd( 0.305407, 100.657, -7.4509, 0.88 ) }
    dend_20 { pt3dadd( 0.196904, 101.74, -7.89257, 1.03 ) }
    dend_20 { pt3dadd( 0.119395, 102.49, -8.19918, 1.03 ) }
    dend_20 { pt3dadd( 0.0766584, 102.915, -8.35711, 1.03 ) }
    dend_20 { pt3dadd( 0.0694089, 103.029, -8.39094, 1.03 ) }
    dend_20 { pt3dadd( 0.0118323, 103.746, -8.55458, 1.03 ) }
    dend_20 { pt3dadd( -0.00279045, 103.882, -8.5759, 1.03 ) }
    dend_20 { pt3dadd( -0.119554, 104.534, -8.62059, 1.03 ) }
    dend_20 { pt3dadd( -0.353439, 105.646, -8.67516, 1.18 ) }
    dend_20 { pt3dadd( -0.588233, 106.632, -8.6906, 1.18 ) }
    dend_20 { pt3dadd( -0.745854, 107.236, -8.68646, 1.18 ) }
    dend_20 { pt3dadd( -0.931113, 107.891, -8.66734, 1.18 ) }
    dend_20 { pt3dadd( -1.33516, 109.258, -8.61963, 1.18 ) }
    dend_20 { pt3dadd( -1.63576, 110.223, -8.55836, 1.18 ) }
    dend_20 { pt3dadd( -1.94659, 111.211, -8.47732, 1.18 ) }
    dend_20 { pt3dadd( -1.96568, 111.274, -8.4728, 1.18 ) }
    dend_20 { pt3dadd( -2.12012, 111.849, -8.45639, 1.18 ) }
    dend_20 { pt3dadd( -2.36675, 112.891, -8.48549, 1.47 ) }
    dend_20 { pt3dadd( -2.5021, 113.604, -8.54503, 1.47 ) }
    dend_20 { pt3dadd( -2.6297, 114.31, -8.62142, 1.33 ) }
    dend_20 { pt3dadd( -2.79796, 115.37, -8.75678, 1.03 ) }
    dend_20 { pt3dadd( -3.02801, 116.829, -8.95622, 0.96 ) }
    dend_20 { pt3dadd( -3.21276, 118.025, -9.13088, 0.96 ) }
    dend_20 { pt3dadd( -3.33556, 118.874, -9.28015, 0.96 ) }
    dend_20 { pt3dadd( -3.43183, 119.586, -9.4288, 1.11 ) }
    dend_20 { pt3dadd( -3.48295, 120.004, -9.51853, 1.11 ) }
    dend_20 { pt3dadd( -3.56432, 120.857, -9.70567, 1.25 ) }
    dend_20 { pt3dadd( -3.58743, 121.242, -9.78804, 1.25 ) }
    dend_20 { pt3dadd( -3.64095, 122.208, -10.0153, 1.03 ) }
    dend_20 { pt3dadd( -3.65349, 122.353, -10.0537, 1.03 ) }
    dend_20 { pt3dadd( -3.70358, 122.796, -10.1577, 1.03 ) }
    dend_20 { pt3dadd( -3.76754, 123.239, -10.2482, 1.03 ) }
    dend_20 { pt3dadd( -3.85595, 123.773, -10.3048, 1.03 ) }
    dend_20 { pt3dadd( -4.0283, 124.652, -10.3302, 1.03 ) }
    dend_20 { pt3dadd( -4.16569, 125.308, -10.2993, 1.03 ) }
    dend_20 { pt3dadd( -4.31548, 125.92, -10.2169, 1.03 ) }
    dend_20 { pt3dadd( -4.3483, 126.041, -10.1926, 1.03 ) }
    dend_20 { pt3dadd( -4.61979, 126.986, -9.95835, 1.03 ) }
    dend_20 { pt3dadd( -4.63823, 127.045, -9.94146, 1.03 ) }
    dend_20 { pt3dadd( -4.98157, 128.087, -9.65562, 1.03 ) }
    dend_20 { pt3dadd( -5.33461, 129.159, -9.41327, 1.03 ) }
    dend_20 { pt3dadd( -5.3627, 129.251, -9.40001, 1.03 ) }
    dend_20 { pt3dadd( -5.53181, 129.968, -9.32984, 1.03 ) }
    dend_20 { pt3dadd( -5.54277, 130.034, -9.32436, 1.03 ) }
    dend_20 { pt3dadd( -5.64902, 131.228, -9.21171, 1.03 ) }
    dend_20 { pt3dadd( -5.65023, 131.366, -9.1988, 1.03 ) }
    dend_20 { pt3dadd( -5.61711, 132.186, -9.14413, 1.25 ) }
    dend_20 { pt3dadd( -5.5642, 133.386, -9.06986, 1.25 ) }
    dend_20 { pt3dadd( -5.512, 134.397, -9.0072, 1.25 ) }
    dend_20 { pt3dadd( -5.48543, 135.313, -8.97028, 0.88 ) }
    dend_20 { pt3dadd( -5.48026, 136.216, -8.97668, 0.74 ) }
    dend_20 { pt3dadd( -5.50508, 136.966, -9.0411, 1.18 ) }
    dend_20 { pt3dadd( -5.59334, 138.142, -9.23589, 1.4 ) }
    dend_20 { pt3dadd( -5.61158, 138.276, -9.27058, 1.4 ) }
    dend_20 { pt3dadd( -5.77778, 139.203, -9.58301, 1.4 ) }
    dend_20 { pt3dadd( -6.00726, 140.2, -9.96101, 1.18 ) }
    dend_20 { pt3dadd( -6.23353, 141.107, -10.3252, 1.03 ) }
    dend_20 { pt3dadd( -6.24813, 141.165, -10.3495, 1.03 ) }
    dend_20 { pt3dadd( -6.46199, 142.002, -10.7181, 1.03 ) }
    dend_20 { pt3dadd( -6.57131, 142.437, -10.9054, 0.88 ) }
    dend_20 { pt3dadd( -6.86373, 143.659, -11.3952, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -6.88033, 143.72, -11.4153, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 6.40866, 66.579, -0.184096, 0.52 ) }
    dend_15 { pt3dadd( 6.34683, 67.4394, -1.07654, 0.52 ) }
    dend_15 { pt3dadd( 6.22348, 68.0651, -1.79228, 0.74 ) }
    dend_15 { pt3dadd( 6.05493, 68.5022, -2.40737, 0.74 ) }
    dend_15 { pt3dadd( 5.97995, 68.6494, -2.63933, 0.74 ) }
    dend_15 { pt3dadd( 5.8677, 68.8772, -3.14145, 0.74 ) }
    dend_15 { pt3dadd( 5.73897, 69.1839, -4.06445, 0.44 ) }
    dend_15 { pt3dadd( 5.68093, 69.3121, -4.61402, 0.81 ) }
    dend_15 { pt3dadd( 5.60487, 69.5205, -5.63481, 0.81 ) }
    dend_15 { pt3dadd( 5.60407, 69.5324, -5.69434, 0.81 ) }
    dend_15 { pt3dadd( 5.6273, 70.0466, -7.86274, 1.03 ) }
    dend_15 { pt3dadd( 5.69732, 70.491, -9.41248, 0.81 ) }
    dend_15 { pt3dadd( 5.73073, 70.6555, -9.87152, 0.81 ) }
    dend_15 { pt3dadd( 5.78849, 71.0754, -10.8242, 0.88 ) }
    dend_15 { pt3dadd( 5.80566, 71.6194, -11.8616, 0.81 ) }
    dend_15 { pt3dadd( 5.74664, 72.0306, -12.6186, 0.81 ) }
    dend_15 { pt3dadd( 5.53306, 72.5653, -13.5647, 0.59 ) }
    dend_15 { pt3dadd( 5.37945, 72.7869, -14.0708, 0.59 ) }
    dend_15 { pt3dadd( 5.1055, 72.9814, -14.9524, 0.88 ) }
    dend_15 { pt3dadd( 5.00768, 73.0202, -16.4677, 0.88 ) }
    dend_15 { pt3dadd( 5.07875, 72.9502, -17.8462, 0.88 ) }
    dend_15 { pt3dadd( 5.16419, 72.8849, -18.5933, 1.25 ) }
    dend_15 { pt3dadd( 5.37482, 72.7309, -20.0219, 1.25 ) }
    dend_15 { pt3dadd( 5.6731, 72.5365, -21.7693, 1.11 ) }
    dend_15 { pt3dadd( 6.82262, 71.9892, -27.5033, 1.03 ) }
    dend_15 { pt3dadd( 7.19872, 71.8692, -29.1445, 0.66 ) }
    dend_15 { pt3dadd( 7.21689, 71.8678, -29.2098, 0.66 ) }
    dend_15 { pt3dadd( 7.62257, 71.9195, -30.4771, 0.52 ) }
    dend_15 { pt3dadd( 7.82685, 71.9896, -31.0466, 0.52 ) }
    dend_15 { pt3dadd( 8.16909, 72.1997, -31.8879, 0.52 ) }
    dend_15 { pt3dadd( 8.20176, 72.2321, -31.9409, 0.52 ) }
    dend_15 { pt3dadd( 9.20922, 73.1185, -33.158, 1.25 ) }
    dend_15 { pt3dadd( 9.435, 73.3167, -33.4373, 1.69 ) }
    dend_15 { pt3dadd( 9.48017, 73.3547, -33.4906, 1.69 ) }
    dend_15 { pt3dadd( 9.71107, 73.5591, -33.7924, 1.69 ) }
    dend_15 { pt3dadd( 10.6079, 74.4997, -35.3249, 0.88 ) }
    dend_15 { pt3dadd( 11.2255, 75.4753, -36.8723, 0.59 ) }
    dend_15 { pt3dadd( 11.346, 75.8321, -37.4488, 0.81 ) }
    dend_15 { pt3dadd( 11.358, 75.8712, -37.5171, 0.81 ) }
    dend_15 { pt3dadd( 11.4885, 76.2217, -38.1755, 1.11 ) }
    dend_15 { pt3dadd( 11.7758, 76.9518, -39.5525, 1.11 ) }
    dend_15 { pt3dadd( 11.9302, 77.3628, -40.2863, 0.96 ) }
    dend_15 { pt3dadd( 12.3062, 78.1536, -41.6783, 0.88 ) }
    dend_15 { pt3dadd( 12.8093, 79.1474, -43.2835, 0.81 ) }
    dend_15 { pt3dadd( 13.328, 80.0391, -44.6489, 0.52 ) }
    dend_15 { pt3dadd( 13.5503, 80.3052, -45.0796, 0.52 ) }
    dend_15 { pt3dadd( 13.9032, 80.6449, -45.6033, 0.59 ) }
    dend_15 { pt3dadd( 13.9879, 80.7138, -45.7002, 0.59 ) }
    dend_15 { pt3dadd( 14.6177, 81.1904, -46.271, 0.59 ) }
    dend_15 { pt3dadd( 15.6945, 81.9802, -47.1422, 0.81 ) }
    dend_15 { pt3dadd( 17.2655, 83.0256, -48.3254, 1.4 ) }
    dend_15 { pt3dadd( 17.8259, 83.3373, -48.7389, 1.62 ) }
    dend_15 { pt3dadd( 18.6538, 83.7077, -49.3109, 1.84 ) }
    dend_15 { pt3dadd( 18.7081, 83.7281, -49.3462, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 43.3835, 59.6588, 7.89012, 1.18 ) }
    dend_3 { pt3dadd( 43.3436, 60.8042, 9.19227, 1.18 ) }
    dend_3 { pt3dadd( 43.3798, 61.5527, 9.83092, 0.96 ) }
    dend_3 { pt3dadd( 43.39, 61.6142, 9.86679, 0.96 ) }
    dend_3 { pt3dadd( 43.6518, 62.4852, 10.2121, 0.74 ) }
    dend_3 { pt3dadd( 43.6759, 62.549, 10.2299, 0.74 ) }
    dend_3 { pt3dadd( 43.9001, 63.0424, 10.3264, 0.88 ) }
    dend_3 { pt3dadd( 44.2916, 63.7219, 10.3794, 0.88 ) }
    dend_3 { pt3dadd( 44.7394, 64.406, 10.4395, 0.59 ) }
    dend_3 { pt3dadd( 45.1931, 65.0091, 10.581, 0.52 ) }
    dend_3 { pt3dadd( 45.5751, 65.4492, 10.7539, 0.81 ) }
    dend_3 { pt3dadd( 46.0929, 66.0311, 11.0187, 0.52 ) }
    dend_3 { pt3dadd( 46.9412, 66.9307, 11.5418, 0.88 ) }
    dend_3 { pt3dadd( 47.0724, 67.0657, 11.6485, 0.88 ) }
    dend_3 { pt3dadd( 47.8009, 67.7761, 12.4186, 1.33 ) }
    dend_3 { pt3dadd( 47.9114, 67.8798, 12.5719, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 43.3835, 59.6588, 7.89012, 1.11 ) }
    dend_2 { pt3dadd( 44.4032, 59.3047, 5.48777, 1.11 ) }
    dend_2 { pt3dadd( 44.8012, 59.2135, 4.77786, 1.03 ) }
    dend_2 { pt3dadd( 45.2901, 59.1096, 4.02175, 0.88 ) }
    dend_2 { pt3dadd( 46.2626, 58.8994, 2.77316, 0.59 ) }
    dend_2 { pt3dadd( 46.826, 58.7531, 2.09311, 0.81 ) }
    dend_2 { pt3dadd( 47.3327, 58.6052, 1.48559, 0.81 ) }
    dend_2 { pt3dadd( 47.7894, 58.477, 1.00798, 1.03 ) }
    dend_2 { pt3dadd( 47.978, 58.4472, 0.791897, 1.03 ) }
    dend_2 { pt3dadd( 48.5884, 58.4096, -0.0502772, 1.03 ) }
    dend_2 { pt3dadd( 49.4205, 58.3249, -1.41827, 0.66 ) }
    dend_2 { pt3dadd( 50.0059, 58.2166, -2.58205, 0.81 ) }
    dend_2 { pt3dadd( 50.5064, 58.0488, -3.76868, 0.59 ) }
    dend_2 { pt3dadd( 50.9207, 57.832, -4.95305, 0.96 ) }
    dend_2 { pt3dadd( 51.4396, 57.4421, -6.67543, 0.59 ) }
    dend_2 { pt3dadd( 51.7525, 57.104, -7.91815, 0.59 ) }
    dend_2 { pt3dadd( 52.0506, 56.7083, -9.08438, 0.96 ) }
    dend_2 { pt3dadd( 52.3491, 56.2945, -10.0656, 0.81 ) }
    dend_2 { pt3dadd( 52.696, 55.8403, -10.9286, 0.81 ) }
    dend_2 { pt3dadd( 52.9524, 55.5655, -11.372, 0.96 ) }
    dend_2 { pt3dadd( 53.6175, 55.0851, -12.1957, 0.37 ) }
    dend_2 { pt3dadd( 54.2857, 54.8256, -12.8592, 0.37 ) }
    dend_2 { pt3dadd( 55.1327, 54.6836, -13.5643, 0.44 ) }
    dend_2 { pt3dadd( 55.7084, 54.6776, -14.0081, 0.81 ) }
    dend_2 { pt3dadd( 56.3866, 54.7262, -14.513, 1.03 ) }
    dend_2 { pt3dadd( 57.3819, 54.8038, -15.2741, 0.52 ) }
    dend_2 { pt3dadd( 57.73, 54.803, -15.5696, 0.44 ) }
    dend_2 { pt3dadd( 57.7722, 54.7952, -15.6165, 0.44 ) }
    dend_2 { pt3dadd( 58.5771, 54.3938, -16.6738, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 58.8475, 54.1875, -17.0574, 0.88 ) }
    dend_2 { pt3dadd( 59.3259, 53.7221, -17.7086, 1.03 ) }
    dend_2 { pt3dadd( 59.9988, 53.0275, -18.4716, 1.03 ) }
    dend_2 { pt3dadd( 60.6334, 52.4027, -19.0966, 0.96 ) }
    dend_2 { pt3dadd( 61.3379, 51.8124, -19.6583, 0.52 ) }
    dend_2 { pt3dadd( 61.3827, 51.7795, -19.6863, 0.52 ) }
    dend_2 { pt3dadd( 61.9624, 51.4606, -19.9624, 0.59 ) }
    dend_2 { pt3dadd( 62.7861, 51.1602, -20.2178, 0.59 ) }
    dend_2 { pt3dadd( 63.4134, 51.0042, -20.3262, 0.29 ) }
    dend_2 { pt3dadd( 64.3582, 50.8235, -20.4299, 0.29 ) }
    dend_2 { pt3dadd( 64.4186, 50.8126, -20.4365, 0.29 ) }
    dend_2 { pt3dadd( 65.1643, 50.6401, -20.5299, 0.66 ) }
    dend_2 { pt3dadd( 65.7627, 50.4696, -20.6156, 0.81 ) }
    dend_2 { pt3dadd( 66.5023, 50.1652, -20.736, 0.88 ) }
    dend_2 { pt3dadd( 66.6104, 50.1023, -20.7486, 0.88 ) }
    dend_2 { pt3dadd( 67.2042, 49.6708, -20.8088, 1.03 ) }
    dend_2 { pt3dadd( 67.6797, 49.3051, -20.8636, 1.03 ) }
    dend_2 { pt3dadd( 67.7279, 49.2663, -20.8709, 1.03 ) }
    dend_2 { pt3dadd( 68.342, 48.7623, -20.9665, 0.81 ) }
    dend_2 { pt3dadd( 69.35, 47.9535, -21.1359, 0.37 ) }
    dend_2 { pt3dadd( 69.8963, 47.5449, -21.2406, 0.66 ) }
    dend_2 { pt3dadd( 70.3523, 47.2214, -21.341, 0.66 ) }
    dend_2 { pt3dadd( 70.9915, 46.7884, -21.5329, 0.52 ) }
    dend_2 { pt3dadd( 71.5032, 46.4645, -21.7425, 0.52 ) }
    dend_2 { pt3dadd( 72.2199, 46.0239, -22.1141, 0.96 ) }
    dend_2 { pt3dadd( 72.7319, 45.6853, -22.4471, 1.25 ) }
    dend_2 { pt3dadd( 73.3509, 45.249, -22.8797, 1.03 ) }
    dend_2 { pt3dadd( 74.0088, 44.7516, -23.3687, 0.81 ) }
    dend_2 { pt3dadd( 74.7066, 44.2315, -23.9047, 0.66 ) }
    dend_2 { pt3dadd( 75.0663, 43.9885, -24.1726, 0.74 ) }
    dend_2 { pt3dadd( 75.4912, 43.727, -24.4692, 0.74 ) }
    dend_2 { pt3dadd( 76.1407, 43.3656, -24.8588, 0.37 ) }
    dend_2 { pt3dadd( 76.1842, 43.3444, -24.8793, 0.37 ) }
    dend_2 { pt3dadd( 76.8074, 43.0738, -25.1006, 0.29 ) }
    dend_2 { pt3dadd( 77.6893, 42.7469, -25.4655, 0.66 ) }
    dend_2 { pt3dadd( 78.3131, 42.5345, -25.7739, 1.03 ) }
    dend_2 { pt3dadd( 78.958, 42.3138, -26.1323, 0.74 ) }
    dend_2 { pt3dadd( 79.7024, 42.0361, -26.5891, 0.74 ) }
    dend_2 { pt3dadd( 80.1586, 41.8336, -26.8894, 0.96 ) }
    dend_2 { pt3dadd( 81.2327, 41.2505, -27.6497, 1.18 ) }
    dend_2 { pt3dadd( 81.6414, 41.0061, -27.9556, 0.96 ) }
    dend_2 { pt3dadd( 82.1675, 40.6784, -28.3494, 0.44 ) }
    dend_2 { pt3dadd( 82.2181, 40.6463, -28.387, 0.44 ) }
    dend_2 { pt3dadd( 82.8461, 40.2297, -28.8644, 0.66 ) }
    dend_2 { pt3dadd( 83.2553, 39.956, -29.1903, 0.81 ) }
    dend_2 { pt3dadd( 83.4477, 39.8288, -29.3659, 0.81 ) }
    dend_2 { pt3dadd( 83.8889, 39.5583, -29.8259, 0.66 ) }
    dend_2 { pt3dadd( 84.042, 39.4732, -29.9891, 0.66 ) }
    dend_2 { pt3dadd( 84.6236, 39.174, -30.5535, 0.66 ) }
    dend_2 { pt3dadd( 85.3058, 38.8551, -31.1607, 0.44 ) }
    dend_2 { pt3dadd( 86.3752, 38.3473, -32.0311, 0.37 ) }
    dend_2 { pt3dadd( 86.9416, 38.0534, -32.4649, 0.88 ) }
    dend_2 { pt3dadd( 87.7756, 37.5899, -33.0109, 0.88 ) }
    dend_2 { pt3dadd( 88.4719, 37.2059, -33.3808, 1.03 ) }
    dend_2 { pt3dadd( 89.047, 36.8981, -33.6099, 1.03 ) }
    dend_2 { pt3dadd( 89.6092, 36.6243, -33.7715, 0.74 ) }
    dend_2 { pt3dadd( 90.3182, 36.313, -33.9192, 0.52 ) }
    dend_2 { pt3dadd( 91.2192, 35.9498, -34.1098, 0.52 ) }
    dend_2 { pt3dadd( 91.98, 35.6457, -34.2831, 0.29 ) }
    dend_2 { pt3dadd( 92.0441, 35.6193, -34.3032, 0.29 ) }
    dend_2 { pt3dadd( 92.6181, 35.3354, -34.5159, 0.29 ) }
    dend_2 { pt3dadd( 93.0969, 35.0367, -34.7456, 0.59 ) }
    dend_2 { pt3dadd( 93.1648, 34.9836, -34.7862, 0.59 ) }
    dend_2 { pt3dadd( 93.6293, 34.4819, -35.1788, 0.88 ) }
    dend_2 { pt3dadd( 94.0381, 33.8907, -35.5942, 0.74 ) }
    dend_2 { pt3dadd( 94.3786, 33.2524, -36.0616, 0.44 ) }
    dend_2 { pt3dadd( 94.6029, 32.6982, -36.4771, 0.29 ) }
    dend_2 { pt3dadd( 94.7005, 32.3838, -36.7197, 0.59 ) }
    dend_2 { pt3dadd( 94.7994, 31.8958, -37.0975, 0.44 ) }
    dend_2 { pt3dadd( 94.8331, 31.4772, -37.4277, 0.44 ) }
    dend_2 { pt3dadd( 94.8008, 30.664, -38.027, 0.81 ) }
    dend_2 { pt3dadd( 94.7926, 30.6126, -38.0623, 0.81 ) }
    dend_2 { pt3dadd( 94.6823, 30.1084, -38.3473, 1.03 ) }
    dend_2 { pt3dadd( 94.5366, 29.4892, -38.6478, 0.88 ) }
    dend_2 { pt3dadd( 94.525, 29.4326, -38.6716, 0.88 ) }
    dend_2 { pt3dadd( 94.3994, 28.6205, -38.9716, 0.59 ) }
    dend_2 { pt3dadd( 94.3498, 28.0345, -39.1536, 0.59 ) }
    dend_2 { pt3dadd( 94.3395, 27.3729, -39.3528, 0.88 ) }
    dend_2 { pt3dadd( 94.347, 27.1896, -39.4064, 0.88 ) }
    dend_2 { pt3dadd( 94.4653, 26.2864, -39.6582, 0.37 ) }
    dend_2 { pt3dadd( 94.5776, 25.7447, -39.8132, 0.74 ) }
    dend_2 { pt3dadd( 94.7232, 25.2254, -39.9642, 0.96 ) }
    dend_2 { pt3dadd( 94.9285, 24.511, -40.2043, 0.96 ) }
    dend_2 { pt3dadd( 94.9446, 24.4543, -40.2248, 0.96 ) }
    dend_2 { pt3dadd( 95.1153, 23.8509, -40.4795, 1.25 ) }
    dend_2 { pt3dadd( 95.3872, 23.046, -40.8672, 0.44 ) }
    dend_2 { pt3dadd( 95.5821, 22.566, -41.1608, 0.37 ) }
    dend_2 { pt3dadd( 95.9133, 21.879, -41.6512, 0.96 ) }
    dend_2 { pt3dadd( 96.2347, 21.3087, -42.0989, 0.96 ) }
    dend_2 { pt3dadd( 96.7524, 20.5226, -42.7904, 0.74 ) }
    dend_2 { pt3dadd( 97.1861, 19.9464, -43.3795, 0.74 ) }
    dend_2 { pt3dadd( 97.7557, 19.285, -44.124, 0.29 ) }
    dend_2 { pt3dadd( 98.0559, 18.9594, -44.4772, 0.52 ) }
    dend_2 { pt3dadd( 98.5296, 18.4438, -44.981, 0.88 ) }
    dend_2 { pt3dadd( 98.9366, 17.9837, -45.3877, 1.03 ) }
    dend_2 { pt3dadd( 99.6327, 17.1261, -46.0253, 0.29 ) }
    dend_2 { pt3dadd( 99.9325, 16.7191, -46.238, 0.88 ) }
    dend_2 { pt3dadd( 100.533, 15.9089, -46.442, 0.81 ) }
    dend_2 { pt3dadd( 100.915, 15.4435, -46.4358, 0.96 ) }
    dend_2 { pt3dadd( 101.384, 14.9427, -46.2955, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 101.433, 14.8948, -46.2718, 0.59 ) }
    dend_2 { pt3dadd( 102.469, 13.968, -45.673, 0.52 ) }
    dend_2 { pt3dadd( 103.054, 13.4495, -45.3506, 0.52 ) }
    dend_2 { pt3dadd( 103.713, 12.8477, -45.0476, 0.88 ) }
    dend_2 { pt3dadd( 103.756, 12.8052, -45.0324, 0.88 ) }
    dend_2 { pt3dadd( 103.982, 12.5523, -44.9667, 1.03 ) }
    dend_2 { pt3dadd( 104.442, 11.9526, -44.8739, 1.03 ) }
    dend_2 { pt3dadd( 104.847, 11.2797, -44.8312, 0.44 ) }
    dend_2 { pt3dadd( 105.22, 10.5111, -44.7884, 0.44 ) }
    dend_2 { pt3dadd( 105.539, 9.76955, -44.7536, 0.44 ) }
    dend_2 { pt3dadd( 105.872, 9.01282, -44.7069, 0.52 ) }
    dend_2 { pt3dadd( 106.124, 8.46256, -44.671, 0.44 ) }
    dend_2 { pt3dadd( 106.513, 7.65679, -44.6235, 0.44 ) }
    dend_2 { pt3dadd( 106.786, 7.11204, -44.6063, 0.81 ) }
    dend_2 { pt3dadd( 107.085, 6.53653, -44.6246, 0.81 ) }
    dend_2 { pt3dadd( 107.47, 5.85179, -44.6753, 0.37 ) }
    dend_2 { pt3dadd( 107.863, 5.17949, -44.7662, 0.81 ) }
    dend_2 { pt3dadd( 108.125, 4.75324, -44.8347, 0.88 ) }
    dend_2 { pt3dadd( 108.324, 4.43524, -44.8961, 0.88 ) }
    dend_2 { pt3dadd( 108.658, 3.88552, -44.9913, 0.66 ) }
    dend_2 { pt3dadd( 109.158, 3.04187, -45.1261, 0.44 ) }
    dend_2 { pt3dadd( 109.598, 2.33487, -45.2454, 0.29 ) }
    dend_2 { pt3dadd( 109.962, 1.80974, -45.3776, 0.59 ) }
    dend_2 { pt3dadd( 110.318, 1.32667, -45.5366, 0.74 ) }
    dend_2 { pt3dadd( 110.395, 1.22449, -45.5773, 0.74 ) }
    dend_2 { pt3dadd( 110.738, 0.746433, -45.8292, 0.59 ) }
    dend_2 { pt3dadd( 111.192, 0.04064, -46.3083, 0.44 ) }
    dend_2 { pt3dadd( 111.633, -0.730911, -46.8777, 0.44 ) }
    dend_2 { pt3dadd( 111.82, -1.12262, -47.1701, 0.44 ) }
    dend_2 { pt3dadd( 112.036, -1.66841, -47.5639, 0.74 ) }
    dend_2 { pt3dadd( 112.283, -2.41509, -48.0812, 0.74 ) }
    dend_2 { pt3dadd( 112.497, -3.21746, -48.6112, 0.29 ) }
    dend_2 { pt3dadd( 112.574, -3.55996, -48.8306, 0.96 ) }
    dend_2 { pt3dadd( 112.666, -3.94048, -49.0589, 0.96 ) }
    dend_2 { pt3dadd( 112.827, -4.47919, -49.3882, 0.81 ) }
    dend_2 { pt3dadd( 112.847, -4.53212, -49.4191, 0.81 ) }
    dend_2 { pt3dadd( 113.058, -4.94915, -49.6257, 0.96 ) }
    dend_2 { pt3dadd( 113.407, -5.5502, -49.9293, 0.52 ) }
    dend_2 { pt3dadd( 113.667, -5.96648, -50.151, 0.52 ) }
    dend_2 { pt3dadd( 113.693, -6.00782, -50.1727, 0.52 ) }
    dend_2 { pt3dadd( 114.008, -6.58252, -50.4887, 0.44 ) }
    dend_2 { pt3dadd( 114.345, -7.26548, -50.8722, 0.59 ) }
    dend_2 { pt3dadd( 114.804, -8.27986, -51.4364, 0.29 ) }
    dend_2 { pt3dadd( 114.962, -8.64628, -51.637, 0.96 ) }
    dend_2 { pt3dadd( 115.209, -9.25535, -51.9701, 1.33 ) }
    dend_2 { pt3dadd( 115.611, -10.2895, -52.5232, 0.29 ) }
    dend_2 { pt3dadd( 115.969, -11.2197, -53.0071, 0.29 ) }
    dend_2 { pt3dadd( 116.173, -11.749, -53.2712, 0.88 ) }
    dend_2 { pt3dadd( 116.195, -11.8054, -53.2945, 0.88 ) }
    dend_2 { pt3dadd( 116.442, -12.4529, -53.5079, 0.88 ) }
    dend_2 { pt3dadd( 116.822, -13.4735, -53.7438, 0.29 ) }
    dend_2 { pt3dadd( 117.112, -14.2616, -53.8407, 0.29 ) }
    dend_2 { pt3dadd( 117.198, -14.5147, -53.8493, 0.66 ) }
    dend_2 { pt3dadd( 117.474, -15.43, -53.8407, 0.66 ) }
    dend_2 { pt3dadd( 117.668, -16.1045, -53.8152, 0.66 ) }
    dend_2 { pt3dadd( 117.842, -16.7221, -53.7776, 0.96 ) }
    dend_2 { pt3dadd( 117.991, -17.3023, -53.7446, 0.74 ) }
    dend_2 { pt3dadd( 118.148, -17.9596, -53.7026, 0.52 ) }
    dend_2 { pt3dadd( 118.349, -18.7868, -53.6346, 0.44 ) }
    dend_2 { pt3dadd( 118.403, -18.9891, -53.6214, 0.44 ) }
    dend_2 { pt3dadd( 118.65, -19.8312, -53.6011, 0.37 ) }
    dend_2 { pt3dadd( 118.968, -20.8295, -53.6119, 0.37 ) }
    dend_2 { pt3dadd( 119.31, -21.8871, -53.653, 0.74 ) }
    dend_2 { pt3dadd( 119.618, -22.7444, -53.7675, 0.29 ) }
    dend_2 { pt3dadd( 119.985, -23.5584, -53.9517, 0.29 ) }
    dend_2 { pt3dadd( 120.418, -24.3808, -54.2459, 0.74 ) }
    dend_2 { pt3dadd( 120.63, -24.694, -54.4185, 1.03 ) }
    dend_2 { pt3dadd( 120.664, -24.7347, -54.4505, 1.03 ) }
    dend_2 { pt3dadd( 121.423, -25.4843, -55.1978, 0.22 ) }
    dend_2 { pt3dadd( 122.048, -26.063, -55.8475, 0.22 ) }
    dend_2 { pt3dadd( 122.429, -26.4071, -56.2383, 0.81 ) }
    dend_2 { pt3dadd( 122.84, -26.7926, -56.6355, 0.81 ) }
    dend_2 { pt3dadd( 122.876, -26.8294, -56.6707, 0.81 ) }
    dend_2 { pt3dadd( 123.42, -27.4771, -57.1919, 0.29 ) }
    dend_2 { pt3dadd( 123.761, -28.0212, -57.5885, 0.44 ) }
    dend_2 { pt3dadd( 123.794, -28.0853, -57.6439, 0.44 ) }
    dend_2 { pt3dadd( 123.995, -28.4495, -57.9979, 0.44 ) }
    dend_2 { pt3dadd( 124.016, -28.4937, -58.0516, 0.44 ) }
    dend_2 { pt3dadd( 124.227, -29.0054, -58.707, 0.52 ) }
    dend_2 { pt3dadd( 124.471, -29.8281, -59.859, 0.52 ) }
    dend_2 { pt3dadd( 124.597, -30.3199, -60.6511, 0.66 ) }
    dend_2 { pt3dadd( 124.675, -30.6147, -61.2194, 0.59 ) }
    dend_2 { pt3dadd( 124.842, -31.2507, -62.6353, 0.37 ) }
    dend_2 { pt3dadd( 124.919, -31.5297, -63.27, 0.29 ) }
    dend_2 { pt3dadd( 125.074, -32.0898, -64.5723, 0.74 ) }
    dend_2 { pt3dadd( 125.268, -32.7754, -66.0571, 0.81 ) }
    dend_2 { pt3dadd( 125.501, -33.675, -67.9188, 0.29 ) }
    dend_2 { pt3dadd( 125.568, -33.9947, -68.6069, 0.66 ) }
    dend_2 { pt3dadd( 125.66, -34.3883, -69.4588, 0.29 ) }
    dend_2 { pt3dadd( 125.765, -34.8249, -70.396, 0.59 ) }
    dend_2 { pt3dadd( 125.828, -35.1057, -70.9702, 0.74 ) }
    dend_2 { pt3dadd( 125.956, -35.8125, -72.3179, 1.33 ) }
    dend_2 { pt3dadd( 126.149, -36.9863, -74.496, 0.29 ) }
    dend_2 { pt3dadd( 126.192, -37.2005, -74.901, 0.59 ) }
    dend_2 { pt3dadd( 126.23, -37.3448, -75.1773, 0.59 ) }
    dend_2 { pt3dadd( 126.505, -38.0464, -76.4372, 0.52 ) }
    dend_2 { pt3dadd( 126.681, -38.3701, -76.9757, 0.74 ) }
    dend_2 { pt3dadd( 126.863, -38.619, -77.3168, 0.74 ) }
    dend_2 { pt3dadd( 127.314, -39.1184, -77.8839, 0.37 ) }
    dend_2 { pt3dadd( 128.004, -39.8285, -78.7159, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 128.533, -40.3292, -79.2743, 0.37 ) }
    dend_2 { pt3dadd( 128.824, -40.5883, -79.5366, 0.66 ) }
    dend_2 { pt3dadd( 129.103, -40.8342, -79.7928, 0.88 ) }
    dend_2 { pt3dadd( 129.326, -41.0348, -80.0075, 0.88 ) }
    dend_2 { pt3dadd( 130.256, -41.89, -80.9247, 0.29 ) }
    dend_2 { pt3dadd( 131.018, -42.6402, -81.7185, 0.22 ) }
    dend_2 { pt3dadd( 131.165, -42.798, -81.8797, 0.66 ) }
    dend_2 { pt3dadd( 131.678, -43.3971, -82.4715, 0.22 ) }
    dend_2 { pt3dadd( 131.862, -43.6441, -82.7169, 0.52 ) }
    dend_2 { pt3dadd( 132.163, -44.1304, -83.1747, 0.29 ) }
    dend_2 { pt3dadd( 132.3, -44.4175, -83.4118, 0.74 ) }
    dend_2 { pt3dadd( 132.41, -44.737, -83.6695, 0.74 ) }
    dend_2 { pt3dadd( 132.587, -45.3976, -84.2024, 0.22 ) }
    dend_2 { pt3dadd( 132.76, -46.2008, -84.8339, 0.37 ) }
    dend_2 { pt3dadd( 132.823, -46.5549, -85.1401, 0.37 ) }
    dend_2 { pt3dadd( 132.873, -46.9438, -85.4872, 0.59 ) }
    dend_2 { pt3dadd( 132.922, -47.2804, -85.7855, 0.59 ) }
    dend_2 { pt3dadd( 132.997, -47.8587, -86.2907, 0.22 ) }
    dend_2 { pt3dadd( 133.037, -48.1188, -86.5099, 0.52 ) }
    dend_2 { pt3dadd( 133.24, -49.0191, -87.2605, 0.29 ) }
    dend_2 { pt3dadd( 133.352, -49.4519, -87.6632, 1.11 ) }
    dend_2 { pt3dadd( 133.478, -49.8951, -88.1155, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -13.3094, -187.627, -159.755, 0.29 ) }
    dend_104 { pt3dadd( -14.0637, -189.212, -160.261, 0.29 ) }
    dend_104 { pt3dadd( -14.5794, -190.173, -160.6, 0.29 ) }
    dend_104 { pt3dadd( -15.3628, -191.243, -160.942, 0.22 ) }
    dend_104 { pt3dadd( -15.9826, -191.827, -161.1, 0.74 ) }
    dend_104 { pt3dadd( -16.5377, -192.218, -161.156, 0.88 ) }
    dend_104 { pt3dadd( -16.6161, -192.269, -161.158, 0.88 ) }
    dend_104 { pt3dadd( -17.1588, -192.53, -161.148, 0.88 ) }
    dend_104 { pt3dadd( -18.7633, -193.147, -161.044, 0.29 ) }
    dend_104 { pt3dadd( -20.1888, -193.61, -160.844, 0.29 ) }
    dend_104 { pt3dadd( -21.635, -194.046, -160.549, 0.88 ) }
    dend_104 { pt3dadd( -22.5175, -194.297, -160.34, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -13.3094, -187.627, -159.755, 0.59 ) }
    dend_103 { pt3dadd( -13.4826, -188.702, -162.904, 0.59 ) }
    dend_103 { pt3dadd( -13.5376, -188.992, -163.719, 0.37 ) }
    dend_103 { pt3dadd( -13.6465, -189.325, -164.687, 0.37 ) }
    dend_103 { pt3dadd( -13.821, -189.768, -165.935, 0.96 ) }
    dend_103 { pt3dadd( -14.0003, -190.205, -167.096, 1.33 ) }
    dend_103 { pt3dadd( -14.377, -191.159, -169.455, 0.59 ) }
    dend_103 { pt3dadd( -14.4766, -191.442, -170.006, 0.29 ) }
    dend_103 { pt3dadd( -14.5957, -191.89, -170.854, 0.29 ) }
    dend_103 { pt3dadd( -14.6239, -192.213, -171.453, 0.88 ) }
    dend_103 { pt3dadd( -14.6173, -192.421, -171.844, 0.88 ) }
    dend_103 { pt3dadd( -14.5676, -192.863, -172.673, 0.66 ) }
    dend_103 { pt3dadd( -14.4608, -193.433, -173.707, 0.88 ) }
    dend_103 { pt3dadd( -14.2553, -194.333, -175.281, 1.4 ) }
    dend_103 { pt3dadd( -13.8189, -196.081, -178.333, 0.59 ) }
    dend_103 { pt3dadd( -13.6505, -196.847, -179.759, 0.59 ) }
    dend_103 { pt3dadd( -13.5846, -197.142, -180.329, 0.52 ) }
    dend_103 { pt3dadd( -13.5353, -197.34, -180.712, 1.03 ) }
    dend_103 { pt3dadd( -13.4734, -197.62, -181.249, 0.88 ) }
    dend_103 { pt3dadd( -13.3086, -198.617, -183.179, 0.22 ) }
    dend_103 { pt3dadd( -13.2998, -199.216, -184.376, 0.59 ) }
    dend_103 { pt3dadd( -13.3376, -199.824, -185.796, 0.74 ) }
    dend_103 { pt3dadd( -13.3862, -200.355, -187.191, 0.44 ) }
    dend_103 { pt3dadd( -13.4338, -200.653, -188.008, 0.74 ) }
    dend_103 { pt3dadd( -13.5505, -201.224, -189.478, 1.11 ) }
    dend_103 { pt3dadd( -13.6428, -201.541, -190.193, 0.96 ) }
    dend_103 { pt3dadd( -14.0987, -202.701, -192.552, 0.74 ) }
    dend_103 { pt3dadd( -14.1128, -202.724, -192.598, 0.74 ) }
    dend_103 { pt3dadd( -14.3912, -203.119, -193.35, 0.74 ) }
    dend_103 { pt3dadd( -14.8045, -203.734, -194.4, 0.74 ) }
    dend_103 { pt3dadd( -15.2636, -204.411, -195.381, 0.37 ) }
    dend_103 { pt3dadd( -15.5063, -204.801, -195.895, 1.03 ) }
    dend_103 { pt3dadd( -15.7685, -205.231, -196.364, 1.18 ) }
    dend_103 { pt3dadd( -16.4898, -206.438, -197.692, 0.29 ) }
    dend_103 { pt3dadd( -16.7316, -206.839, -198.142, 0.59 ) }
    dend_103 { pt3dadd( -16.938, -207.162, -198.48, 0.59 ) }
    dend_103 { pt3dadd( -17.2487, -207.673, -198.918, 0.44 ) }
    dend_103 { pt3dadd( -17.497, -208.094, -199.218, 0.29 ) }
    dend_103 { pt3dadd( -17.5263, -208.141, -199.247, 0.29 ) }
    dend_103 { pt3dadd( -17.7821, -208.509, -199.438, 0.59 ) }
    dend_103 { pt3dadd( -17.9765, -208.92, -199.774, 0.59 ) }
    dend_103 { pt3dadd( -18.0491, -209.322, -200.196, 0.44 ) }
    dend_103 { pt3dadd( -18.0161, -209.752, -200.723, 0.29 ) }
    dend_103 { pt3dadd( -17.8983, -210.258, -201.442, 0.88 ) }
    dend_103 { pt3dadd( -17.6976, -210.815, -202.325, 1.11 ) }
    dend_103 { pt3dadd( -17.1261, -212.087, -204.513, 0.74 ) }
    dend_103 { pt3dadd( -16.79, -212.805, -205.782, 0.59 ) }
    dend_103 { pt3dadd( -16.4148, -213.612, -207.23, 0.29 ) }
    dend_103 { pt3dadd( -16.0462, -214.477, -208.803, 0.74 ) }
    dend_103 { pt3dadd( -15.6442, -215.623, -210.887, 1.03 ) }
    dend_103 { pt3dadd( -15.4072, -216.747, -212.892, 0.52 ) }
    dend_103 { pt3dadd( -15.4289, -217.163, -213.574, 0.44 ) }
    dend_103 { pt3dadd( -15.5127, -217.441, -213.988, 0.88 ) }
    dend_103 { pt3dadd( -15.8073, -217.946, -214.629, 1.11 ) }
    dend_103 { pt3dadd( -16.0627, -218.229, -214.903, 1.11 ) }
    dend_103 { pt3dadd( -16.6616, -218.722, -215.255, 0.59 ) }
    dend_103 { pt3dadd( -17.3496, -219.244, -215.548, 0.44 ) }
    dend_103 { pt3dadd( -17.737, -219.562, -215.731, 0.66 ) }
    dend_103 { pt3dadd( -18.4098, -220.194, -216.074, 0.59 ) }
    dend_103 { pt3dadd( -18.8091, -220.727, -216.507, 0.37 ) }
    dend_103 { pt3dadd( -19.0874, -221.206, -217.011, 0.44 ) }
    dend_103 { pt3dadd( -19.3596, -221.797, -217.751, 0.66 ) }
    dend_103 { pt3dadd( -19.5288, -222.255, -218.386, 0.81 ) }
    dend_103 { pt3dadd( -19.6583, -222.692, -219.029, 0.88 ) }
    dend_103 { pt3dadd( -20.2694, -224.832, -222.438, 0.52 ) }
    dend_103 { pt3dadd( -20.374, -225.14, -222.988, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -20.444, -225.3, -223.317, 0.59 ) }
    dend_103 { pt3dadd( -20.5569, -225.453, -223.685, 0.59 ) }
    dend_103 { pt3dadd( -20.9424, -225.727, -224.449, 0.37 ) }
    dend_103 { pt3dadd( -21.4625, -225.895, -225.053, 0.37 ) }
    dend_103 { pt3dadd( -22.169, -225.966, -225.419, 0.37 ) }
    dend_103 { pt3dadd( -22.2292, -225.971, -225.451, 0.37 ) }
    dend_103 { pt3dadd( -23.1369, -226.011, -225.909, 0.22 ) }
    dend_103 { pt3dadd( -23.501, -225.997, -226.082, 0.37 ) }
    dend_103 { pt3dadd( -23.8472, -225.943, -226.222, 0.37 ) }
    dend_103 { pt3dadd( -24.6455, -225.76, -226.558, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 12.1947, -124.34, -67.2447, 0.29 ) }
    dend_101 { pt3dadd( 12.7917, -124.558, -67.6751, 0.29 ) }
    dend_101 { pt3dadd( 13.0578, -124.683, -67.8666, 0.37 ) }
    dend_101 { pt3dadd( 13.1019, -124.708, -67.8953, 0.37 ) }
    dend_101 { pt3dadd( 13.6326, -125.088, -68.2436, 0.22 ) }
    dend_101 { pt3dadd( 13.6782, -125.123, -68.2734, 0.22 ) }
    dend_101 { pt3dadd( 13.9722, -125.357, -68.4603, 0.52 ) }
    dend_101 { pt3dadd( 14.0089, -125.393, -68.4831, 0.52 ) }
    dend_101 { pt3dadd( 14.3212, -125.709, -68.6412, 0.52 ) }
    dend_101 { pt3dadd( 14.8855, -126.258, -68.8788, 0.22 ) }
    dend_101 { pt3dadd( 14.9259, -126.296, -68.8931, 0.22 ) }
    dend_101 { pt3dadd( 15.1083, -126.466, -68.9571, 0.37 ) }
    dend_101 { pt3dadd( 15.4333, -126.77, -69.0703, 0.22 ) }
    dend_101 { pt3dadd( 16.0949, -127.384, -69.2876, 0.96 ) }
    dend_101 { pt3dadd( 16.1368, -127.423, -69.2993, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 12.1947, -124.34, -67.2447, 0.37 ) }
    dend_100 { pt3dadd( 13.0235, -125.922, -68.3762, 0.37 ) }
    dend_100 { pt3dadd( 13.5213, -127.064, -69.1654, 0.66 ) }
    dend_100 { pt3dadd( 13.7356, -127.634, -69.5391, 0.88 ) }
    dend_100 { pt3dadd( 13.9362, -128.266, -69.9262, 1.18 ) }
    dend_100 { pt3dadd( 14.4644, -130.265, -71.0749, 0.44 ) }
    dend_100 { pt3dadd( 14.5881, -130.809, -71.3637, 0.29 ) }
    dend_100 { pt3dadd( 14.6882, -131.668, -71.7565, 0.88 ) }
    dend_100 { pt3dadd( 14.7171, -132.168, -71.9459, 1.11 ) }
    dend_100 { pt3dadd( 14.7432, -132.809, -72.1382, 0.66 ) }
    dend_100 { pt3dadd( 14.7622, -133.65, -72.2927, 0.37 ) }
    dend_100 { pt3dadd( 14.7941, -134.426, -72.2868, 0.52 ) }
    dend_100 { pt3dadd( 14.8131, -134.577, -72.2732, 0.52 ) }
    dend_100 { pt3dadd( 15.0292, -135.497, -72.139, 0.59 ) }
    dend_100 { pt3dadd( 15.2078, -136.081, -72.0318, 0.66 ) }
    dend_100 { pt3dadd( 15.2525, -136.209, -71.9967, 0.66 ) }
    dend_100 { pt3dadd( 15.5064, -136.943, -71.7587, 0.37 ) }
    dend_100 { pt3dadd( 15.7333, -137.775, -71.3528, 0.37 ) }
    dend_100 { pt3dadd( 15.8852, -138.404, -70.9891, 0.37 ) }
    dend_100 { pt3dadd( 16.0375, -139.063, -70.5747, 0.96 ) }
    dend_100 { pt3dadd( 16.2876, -140.055, -69.9108, 1.25 ) }
    dend_100 { pt3dadd( 16.5473, -140.923, -69.3254, 0.96 ) }
    dend_100 { pt3dadd( 17.2172, -143.017, -67.8076, 0.52 ) }
    dend_100 { pt3dadd( 17.5048, -143.872, -67.1623, 0.59 ) }
    dend_100 { pt3dadd( 17.6865, -144.38, -66.7716, 0.74 ) }
    dend_100 { pt3dadd( 17.9325, -145.012, -66.2943, 0.74 ) }
    dend_100 { pt3dadd( 18.3702, -146.018, -65.6158, 0.29 ) }
    dend_100 { pt3dadd( 18.7974, -146.903, -65.0733, 0.66 ) }
    dend_100 { pt3dadd( 18.828, -146.967, -65.0479, 0.66 ) }
    dend_100 { pt3dadd( 19.0419, -147.533, -64.8663, 0.29 ) }
    dend_100 { pt3dadd( 19.2109, -148.136, -64.7195, 0.74 ) }
    dend_100 { pt3dadd( 19.3376, -148.788, -64.6179, 0.88 ) }
    dend_100 { pt3dadd( 19.3506, -148.862, -64.6091, 0.88 ) }
    dend_100 { pt3dadd( 19.5259, -149.7, -64.5377, 0.37 ) }
    dend_100 { pt3dadd( 19.7406, -150.596, -64.4419, 0.59 ) }
    dend_100 { pt3dadd( 19.8816, -151.116, -64.3758, 0.88 ) }
    dend_100 { pt3dadd( 20.1504, -152.007, -64.2496, 0.29 ) }
    dend_100 { pt3dadd( 20.3713, -152.694, -64.1218, 0.22 ) }
    dend_100 { pt3dadd( 20.4761, -153.009, -64.0543, 0.81 ) }
    dend_100 { pt3dadd( 20.6586, -153.527, -63.9268, 1.18 ) }
    dend_100 { pt3dadd( 20.6855, -153.597, -63.9081, 1.18 ) }
    dend_100 { pt3dadd( 20.9944, -154.386, -63.6818, 1.03 ) }
    dend_100 { pt3dadd( 21.3481, -155.481, -63.2938, 0.29 ) }
    dend_100 { pt3dadd( 21.5773, -156.503, -62.912, 0.22 ) }
    dend_100 { pt3dadd( 21.588, -156.604, -62.8701, 0.22 ) }
    dend_100 { pt3dadd( 21.6108, -157.364, -62.5385, 0.29 ) }
    dend_100 { pt3dadd( 21.6145, -158.013, -62.2538, 1.18 ) }
    dend_100 { pt3dadd( 21.6266, -159.346, -61.6239, 0.74 ) }
    dend_100 { pt3dadd( 21.6414, -160.031, -61.2956, 0.52 ) }
    dend_100 { pt3dadd( 21.6803, -160.903, -60.8224, 0.29 ) }
    dend_100 { pt3dadd( 21.7144, -161.623, -60.3798, 0.52 ) }
    dend_100 { pt3dadd( 21.7593, -162.35, -59.8655, 0.96 ) }
    dend_100 { pt3dadd( 21.8841, -163.324, -59.1565, 1.18 ) }
    dend_100 { pt3dadd( 22.0508, -164.24, -58.4395, 1.03 ) }
    dend_100 { pt3dadd( 22.286, -165.471, -57.4284, 0.74 ) }
    dend_100 { pt3dadd( 22.511, -166.792, -56.3565, 0.66 ) }
    dend_100 { pt3dadd( 22.6068, -167.61, -55.7291, 1.03 ) }
    dend_100 { pt3dadd( 22.6932, -168.753, -54.936, 0.88 ) }
    dend_100 { pt3dadd( 22.7717, -170.075, -54.1618, 0.74 ) }
    dend_100 { pt3dadd( 22.8364, -171.081, -53.6925, 0.74 ) }
    dend_100 { pt3dadd( 22.9082, -172.027, -53.3857, 0.74 ) }
    dend_100 { pt3dadd( 23.0035, -173.171, -53.1389, 0.52 ) }
    dend_100 { pt3dadd( 23.0862, -174.097, -52.9923, 0.52 ) }
    dend_100 { pt3dadd( 23.1807, -175.07, -52.8729, 0.44 ) }
    dend_100 { pt3dadd( 23.2962, -176.001, -52.803, 0.74 ) }
    dend_100 { pt3dadd( 23.4044, -176.686, -52.7513, 0.96 ) }
    dend_100 { pt3dadd( 23.5175, -177.307, -52.7007, 0.96 ) }
    dend_100 { pt3dadd( 23.7671, -178.585, -52.5949, 0.37 ) }
    dend_100 { pt3dadd( 24.0071, -179.657, -52.5047, 0.37 ) }
    dend_100 { pt3dadd( 24.0225, -179.718, -52.4993, 0.37 ) }
    dend_100 { pt3dadd( 24.2903, -180.523, -52.4194, 0.66 ) }
    dend_100 { pt3dadd( 24.5073, -181.122, -52.3599, 0.88 ) }
    dend_100 { pt3dadd( 24.8162, -181.887, -52.2885, 0.59 ) }
    dend_100 { pt3dadd( 25.1506, -182.605, -52.2392, 0.22 ) }
    dend_100 { pt3dadd( 25.1899, -182.671, -52.2321, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 25.7085, -183.435, -52.1307, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 24.1933, -202.649, -48.8927, 0.52 ) }
    dend_96 { pt3dadd( 25.5514, -202.153, -50.2624, 0.52 ) }
    dend_96 { pt3dadd( 26.2296, -201.989, -50.9881, 0.52 ) }
    dend_96 { pt3dadd( 26.9095, -201.908, -51.8854, 0.66 ) }
    dend_96 { pt3dadd( 27.5729, -201.898, -52.8931, 0.59 ) }
    dend_96 { pt3dadd( 28.3723, -201.956, -54.166, 0.29 ) }
    dend_96 { pt3dadd( 28.5976, -202.005, -54.5799, 0.59 ) }
    dend_96 { pt3dadd( 28.8106, -202.118, -55.1467, 0.59 ) }
    dend_96 { pt3dadd( 29.3499, -202.527, -56.8087, 0.29 ) }
    dend_96 { pt3dadd( 29.6349, -202.803, -57.7513, 0.88 ) }
    dend_96 { pt3dadd( 29.7432, -202.93, -58.1691, 0.88 ) }
    dend_96 { pt3dadd( 30.1164, -203.479, -60.4899, 0.29 ) }
    dend_96 { pt3dadd( 30.2524, -203.739, -62.0436, 0.59 ) }
    dend_96 { pt3dadd( 30.2437, -203.799, -62.7531, 0.44 ) }
    dend_96 { pt3dadd( 30.2373, -203.802, -62.827, 0.44 ) }
    dend_96 { pt3dadd( 30.0042, -203.773, -64.5051, 0.44 ) }
    dend_96 { pt3dadd( 29.4755, -203.568, -67.4446, 0.29 ) }
    dend_96 { pt3dadd( 29.3469, -203.49, -68.0481, 0.29 ) }
    dend_96 { pt3dadd( 28.8328, -203.033, -70.6454, 0.29 ) }
    dend_96 { pt3dadd( 28.8145, -203.019, -70.727, 0.29 ) }
    dend_96 { pt3dadd( 28.7991, -203.006, -70.8009, 0.44 ) }
    dend_96 { pt3dadd( 28.7711, -202.98, -70.9464, 0.44 ) }
    dend_96 { pt3dadd( 28.5614, -202.788, -72.0504, 0.29 ) }
    dend_96 { pt3dadd( 28.3833, -202.618, -72.9769, 0.81 ) }
    dend_96 { pt3dadd( 26.9705, -201.24, -80.3042, 0.29 ) }
    dend_96 { pt3dadd( 26.6613, -200.941, -81.8767, 0.22 ) }
    dend_96 { pt3dadd( 26.3264, -200.647, -83.5429, 0.44 ) }
    dend_96 { pt3dadd( 25.632, -200.168, -86.7921, 0.29 ) }
    dend_96 { pt3dadd( 25.4865, -200.09, -87.429, 0.88 ) }
    dend_96 { pt3dadd( 25.3858, -200.062, -87.8798, 0.88 ) }
    dend_96 { pt3dadd( 25.3727, -200.061, -87.9529, 0.88 ) }
    dend_96 { pt3dadd( 24.6669, -200.09, -91.5954, 0.29 ) }
    dend_96 { pt3dadd( 23.8787, -200.129, -95.1769, 0.52 ) }
    dend_96 { pt3dadd( 23.8616, -200.13, -95.2483, 0.52 ) }
    dend_96 { pt3dadd( 22.7065, -200.171, -99.9284, 0.22 ) }
    dend_96 { pt3dadd( 22.4276, -200.167, -101.017, 0.37 ) }
    dend_96 { pt3dadd( 21.873, -200.138, -103.112, 0.96 ) }
    dend_96 { pt3dadd( 21.0989, -200.018, -105.846, 0.22 ) }
    dend_96 { pt3dadd( 20.9641, -199.978, -106.298, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 24.1933, -202.649, -48.8927, 0.81 ) }
    dend_95 { pt3dadd( 24.264, -203.104, -49.025, 0.81 ) }
    dend_95 { pt3dadd( 24.3452, -203.525, -49.1502, 1.03 ) }
    dend_95 { pt3dadd( 24.4847, -204.14, -49.3394, 0.96 ) }
    dend_95 { pt3dadd( 24.6284, -204.683, -49.5153, 0.74 ) }
    dend_95 { pt3dadd( 24.8069, -205.147, -49.6413, 0.29 ) }
    dend_95 { pt3dadd( 24.9378, -205.43, -49.7053, 0.29 ) }
    dend_95 { pt3dadd( 25.0551, -205.633, -49.7409, 0.52 ) }
    dend_95 { pt3dadd( 25.1754, -205.815, -49.752, 0.52 ) }
    dend_95 { pt3dadd( 25.3453, -206.048, -49.7402, 0.52 ) }
    dend_95 { pt3dadd( 25.9323, -206.854, -49.67, 0.29 ) }
    dend_95 { pt3dadd( 26.1856, -207.218, -49.6444, 0.52 ) }
    dend_95 { pt3dadd( 26.3415, -207.438, -49.6331, 0.81 ) }
    dend_95 { pt3dadd( 26.6562, -207.848, -49.622, 0.88 ) }
    dend_95 { pt3dadd( 26.9232, -208.162, -49.6426, 1.18 ) }
    dend_95 { pt3dadd( 27.2807, -208.555, -49.7019, 1.4 ) }
    dend_95 { pt3dadd( 27.8114, -209.104, -49.8553, 0.52 ) }
    dend_95 { pt3dadd( 28.318, -209.573, -50.037, 0.52 ) }
    dend_95 { pt3dadd( 28.9274, -210.102, -50.2992, 0.52 ) }
    dend_95 { pt3dadd( 29.5487, -210.624, -50.6041, 0.74 ) }
    dend_95 { pt3dadd( 29.5849, -210.655, -50.6232, 0.74 ) }
    dend_95 { pt3dadd( 29.9836, -211.042, -50.8569, 0.29 ) }
    dend_95 { pt3dadd( 30.3781, -211.513, -51.1187, 0.29 ) }
    dend_95 { pt3dadd( 30.7411, -212.066, -51.4076, 0.66 ) }
    dend_95 { pt3dadd( 30.9082, -212.388, -51.5607, 0.88 ) }
    dend_95 { pt3dadd( 31.1051, -212.844, -51.7446, 0.88 ) }
    dend_95 { pt3dadd( 31.3739, -213.558, -52.0384, 0.29 ) }
    dend_95 { pt3dadd( 31.4757, -213.86, -52.1697, 0.88 ) }
    dend_95 { pt3dadd( 31.4867, -213.906, -52.1928, 0.88 ) }
    dend_95 { pt3dadd( 31.548, -214.225, -52.3758, 1.03 ) }
    dend_95 { pt3dadd( 31.5576, -214.275, -52.4072, 1.03 ) }
    dend_95 { pt3dadd( 31.7168, -215.016, -52.8765, 0.74 ) }
    dend_95 { pt3dadd( 31.8706, -215.535, -53.2255, 0.88 ) }
    dend_95 { pt3dadd( 32.11, -216.219, -53.7007, 1.18 ) }
    dend_95 { pt3dadd( 32.2424, -216.551, -53.9267, 1.18 ) }
    dend_95 { pt3dadd( 32.415, -216.929, -54.1783, 0.66 ) }
    dend_95 { pt3dadd( 32.6756, -217.427, -54.497, 0.29 ) }
    dend_95 { pt3dadd( 32.9727, -217.909, -54.7882, 0.29 ) }
    dend_95 { pt3dadd( 33.1902, -218.234, -54.9712, 0.59 ) }
    dend_95 { pt3dadd( 33.4857, -218.635, -55.1787, 0.74 ) }
    dend_95 { pt3dadd( 33.783, -219.04, -55.3774, 0.74 ) }
    dend_95 { pt3dadd( 33.9794, -219.284, -55.466, 0.74 ) }
    dend_95 { pt3dadd( 34.1897, -219.543, -55.5231, 0.88 ) }
    dend_95 { pt3dadd( 34.5412, -219.969, -55.5778, 0.81 ) }
    dend_95 { pt3dadd( 34.9961, -220.479, -55.6279, 0.81 ) }
    dend_95 { pt3dadd( 35.4684, -220.967, -55.6653, 0.59 ) }
    dend_95 { pt3dadd( 36.3611, -221.823, -55.7299, 0.37 ) }
    dend_95 { pt3dadd( 36.7733, -222.19, -55.7627, 0.52 ) }
    dend_95 { pt3dadd( 37.1244, -222.474, -55.804, 0.44 ) }
    dend_95 { pt3dadd( 37.4497, -222.708, -55.8666, 0.52 ) }
    dend_95 { pt3dadd( 37.539, -222.767, -55.893, 0.52 ) }
    dend_95 { pt3dadd( 37.839, -222.978, -56.0499, 0.37 ) }
    dend_95 { pt3dadd( 37.9091, -223.041, -56.1079, 0.37 ) }
    dend_95 { pt3dadd( 38.1765, -223.328, -56.3277, 0.81 ) }
    dend_95 { pt3dadd( 38.3297, -223.579, -56.4625, 0.96 ) }
    dend_95 { pt3dadd( 38.3441, -223.619, -56.4805, 0.96 ) }
    dend_95 { pt3dadd( 38.4003, -223.876, -56.5785, 0.81 ) }
    dend_95 { pt3dadd( 38.4557, -224.424, -56.7794, 0.52 ) }
    dend_95 { pt3dadd( 38.4793, -224.797, -56.9126, 0.52 ) }
    dend_95 { pt3dadd( 38.5135, -225.453, -57.1472, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( 38.5573, -226.124, -57.3882, 0.74 ) }
    dend_95 { pt3dadd( 38.594, -226.586, -57.5543, 0.88 ) }
    dend_95 { pt3dadd( 38.6869, -227.241, -57.7769, 0.52 ) }
    dend_95 { pt3dadd( 38.8277, -227.89, -57.9767, 0.52 ) }
    dend_95 { pt3dadd( 38.973, -228.352, -58.0948, 0.74 ) }
    dend_95 { pt3dadd( 39.1561, -228.783, -58.1836, 0.44 ) }
    dend_95 { pt3dadd( 39.206, -228.88, -58.1991, 0.44 ) }
    dend_95 { pt3dadd( 39.6209, -229.648, -58.2817, 0.44 ) }
    dend_95 { pt3dadd( 39.8751, -230.11, -58.2886, 0.22 ) }
    dend_95 { pt3dadd( 40.0943, -230.565, -58.2587, 0.22 ) }
    dend_95 { pt3dadd( 40.2163, -230.915, -58.2306, 0.74 ) }
    dend_95 { pt3dadd( 40.2281, -230.966, -58.2275, 0.74 ) }
    dend_95 { pt3dadd( 40.2897, -231.384, -58.2146, 0.96 ) }
    dend_95 { pt3dadd( 40.2921, -231.437, -58.2152, 0.96 ) }
    dend_95 { pt3dadd( 40.3224, -231.935, -58.2415, 0.96 ) }
    dend_95 { pt3dadd( 40.4052, -232.77, -58.3701, 0.44 ) }
    dend_95 { pt3dadd( 40.492, -233.194, -58.4339, 0.52 ) }
    dend_95 { pt3dadd( 40.5058, -233.243, -58.4412, 0.52 ) }
    dend_95 { pt3dadd( 40.6312, -233.65, -58.5047, 0.81 ) }
    dend_95 { pt3dadd( 40.8108, -234.209, -58.6089, 0.74 ) }
    dend_95 { pt3dadd( 41.0842, -235.002, -58.7741, 0.37 ) }
    dend_95 { pt3dadd( 41.4358, -236.01, -58.9629, 0.37 ) }
    dend_95 { pt3dadd( 41.5711, -236.385, -59.0136, 1.18 ) }
    dend_95 { pt3dadd( 41.8227, -237.075, -59.0829, 0.96 ) }
    dend_95 { pt3dadd( 42.0949, -237.818, -59.1354, 0.52 ) }
    dend_95 { pt3dadd( 42.4049, -238.67, -59.1695, 0.52 ) }
    dend_95 { pt3dadd( 42.7651, -239.624, -59.1815, 0.74 ) }
    dend_95 { pt3dadd( 43.1495, -240.62, -59.2148, 0.81 ) }
    dend_95 { pt3dadd( 43.1734, -240.673, -59.2152, 0.81 ) }
    dend_95 { pt3dadd( 43.4026, -241.095, -59.1916, 1.03 ) }
    dend_95 { pt3dadd( 43.4339, -241.146, -59.1856, 1.03 ) }
    dend_95 { pt3dadd( 43.7459, -241.61, -59.1293, 0.52 ) }
    dend_95 { pt3dadd( 44.0496, -242.049, -59.0946, 0.37 ) }
    dend_95 { pt3dadd( 44.3298, -242.474, -59.0927, 0.88 ) }
    dend_95 { pt3dadd( 44.6269, -242.933, -59.0961, 0.96 ) }
    dend_95 { pt3dadd( 44.8602, -243.287, -59.1052, 0.74 ) }
    dend_95 { pt3dadd( 45.1338, -243.702, -59.1331, 0.22 ) }
    dend_95 { pt3dadd( 45.4226, -244.113, -59.1804, 0.22 ) }
    dend_95 { pt3dadd( 45.6917, -244.443, -59.2563, 0.74 ) }
    dend_95 { pt3dadd( 45.9014, -244.655, -59.3405, 1.03 ) }
    dend_95 { pt3dadd( 46.1748, -244.886, -59.4779, 1.03 ) }
    dend_95 { pt3dadd( 46.5654, -245.133, -59.6707, 0.59 ) }
    dend_95 { pt3dadd( 47.1442, -245.437, -59.9545, 0.37 ) }
    dend_95 { pt3dadd( 47.7338, -245.723, -60.2378, 0.22 ) }
    dend_95 { pt3dadd( 48.1702, -245.947, -60.4408, 0.81 ) }
    dend_95 { pt3dadd( 48.5118, -246.14, -60.5999, 0.81 ) }
    dend_95 { pt3dadd( 49.098, -246.53, -60.8761, 0.29 ) }
    dend_95 { pt3dadd( 49.3792, -246.741, -61.0129, 0.59 ) }
    dend_95 { pt3dadd( 49.6468, -246.975, -61.1591, 0.74 ) }
    dend_95 { pt3dadd( 50.0266, -247.367, -61.3757, 0.74 ) }
    dend_95 { pt3dadd( 50.3413, -247.742, -61.5791, 0.52 ) }
    dend_95 { pt3dadd( 50.7796, -248.371, -61.9784, 0.22 ) }
    dend_95 { pt3dadd( 50.9714, -248.708, -62.2115, 0.22 ) }
    dend_95 { pt3dadd( 51.098, -248.952, -62.3823, 0.74 ) }
    dend_95 { pt3dadd( 51.2496, -249.283, -62.6108, 0.74 ) }
    dend_95 { pt3dadd( 51.5776, -250.089, -63.1581, 0.22 ) }
    dend_95 { pt3dadd( 51.8831, -250.977, -63.7121, 0.81 ) }
    dend_95 { pt3dadd( 51.9989, -251.356, -63.9213, 0.81 ) }
    dend_95 { pt3dadd( 52.1996, -252.017, -64.2412, 0.22 ) }
    dend_95 { pt3dadd( 52.3763, -252.56, -64.4678, 0.22 ) }
    dend_95 { pt3dadd( 52.4581, -252.795, -64.5528, 0.81 ) }
    dend_95 { pt3dadd( 52.5904, -253.144, -64.6558, 1.03 ) }
    dend_95 { pt3dadd( 52.9402, -253.953, -64.8491, 0.29 ) }
    dend_95 { pt3dadd( 53.0683, -254.246, -64.9214, 0.29 ) }
    dend_95 { pt3dadd( 53.3584, -254.921, -65.0849, 0.29 ) }
    dend_95 { pt3dadd( 53.6128, -255.501, -65.2132, 0.15 ) }
    dend_95 { pt3dadd( 53.7126, -255.737, -65.2617, 0.52 ) }
    dend_95 { pt3dadd( 53.7969, -255.933, -65.3033, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -22.2132, -72.2426, 3.33983, 0.96 ) }
    dend_67 { pt3dadd( -21.998, -73.3392, 2.95372, 0.96 ) }
    dend_67 { pt3dadd( -21.8013, -74.4958, 2.5735, 0.96 ) }
    dend_67 { pt3dadd( -21.6209, -75.7865, 2.18998, 0.96 ) }
    dend_67 { pt3dadd( -21.4695, -77.1201, 1.83, 0.81 ) }
    dend_67 { pt3dadd( -21.3508, -78.4573, 1.45262, 0.66 ) }
    dend_67 { pt3dadd( -21.2765, -79.5869, 1.13873, 0.66 ) }
    dend_67 { pt3dadd( -21.2738, -79.7149, 1.10653, 0.66 ) }
    dend_67 { pt3dadd( -21.2719, -80.5527, 0.897661, 0.88 ) }
    dend_67 { pt3dadd( -21.263, -81.1065, 0.763143, 1.03 ) }
    dend_67 { pt3dadd( -21.1157, -82.5301, 0.385619, 0.74 ) }
    dend_67 { pt3dadd( -20.9333, -83.3936, 0.140171, 0.74 ) }
    dend_67 { pt3dadd( -20.6406, -84.3154, -0.138184, 0.74 ) }
    dend_67 { pt3dadd( -20.1883, -85.4619, -0.48499, 0.96 ) }
    dend_67 { pt3dadd( -19.8634, -86.1405, -0.685264, 1.03 ) }
    dend_67 { pt3dadd( -19.4073, -87.0483, -0.915784, 1.03 ) }
    dend_67 { pt3dadd( -18.8681, -88.1878, -1.12898, 0.88 ) }
    dend_67 { pt3dadd( -18.5727, -88.9491, -1.23774, 0.88 ) }
    dend_67 { pt3dadd( -18.5254, -89.1889, -1.25559, 0.88 ) }
    dend_67 { pt3dadd( -18.5761, -89.7802, -1.19894, 0.59 ) }
    dend_67 { pt3dadd( -19.0315, -90.9128, -0.962192, 0.52 ) }
    dend_67 { pt3dadd( -19.6125, -91.7512, -0.710682, 0.74 ) }
    dend_67 { pt3dadd( -20.1287, -92.2851, -0.4624, 0.66 ) }
    dend_67 { pt3dadd( -20.8574, -92.9254, -0.105925, 0.52 ) }
    dend_67 { pt3dadd( -22.0135, -93.8564, 0.497085, 0.52 ) }
    dend_67 { pt3dadd( -22.5967, -94.3041, 0.814383, 0.74 ) }
    dend_67 { pt3dadd( -23.3492, -94.8852, 1.22376, 1.03 ) }
    dend_67 { pt3dadd( -24.2945, -95.6782, 1.72054, 1.03 ) }
    dend_67 { pt3dadd( -24.9422, -96.2738, 2.03635, 1.03 ) }
    dend_67 { pt3dadd( -25.8261, -97.1894, 2.42663, 0.74 ) }
    dend_67 { pt3dadd( -26.3771, -97.835, 2.60873, 0.66 ) }
    dend_67 { pt3dadd( -26.9368, -98.5825, 2.80118, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -27.3809, -99.289, 2.97533, 0.52 ) }
    dend_67 { pt3dadd( -27.4111, -99.3454, 2.98719, 0.52 ) }
    dend_67 { pt3dadd( -27.6909, -99.9498, 3.14405, 0.66 ) }
    dend_67 { pt3dadd( -27.9277, -100.553, 3.31932, 0.81 ) }
    dend_67 { pt3dadd( -28.2452, -101.389, 3.61033, 0.52 ) }
    dend_67 { pt3dadd( -28.641, -102.42, 3.92903, 0.52 ) }
    dend_67 { pt3dadd( -28.7286, -102.63, 3.95879, 0.81 ) }
    dend_67 { pt3dadd( -29.0612, -103.307, 3.92755, 0.81 ) }
    dend_67 { pt3dadd( -29.4036, -103.855, 3.78846, 0.96 ) }
    dend_67 { pt3dadd( -29.9662, -104.549, 3.43484, 1.03 ) }
    dend_67 { pt3dadd( -30.8041, -105.301, 2.86427, 1.18 ) }
    dend_67 { pt3dadd( -31.8601, -106.07, 2.15012, 0.81 ) }
    dend_67 { pt3dadd( -32.3787, -106.4, 1.79711, 0.88 ) }
    dend_67 { pt3dadd( -33.0326, -106.759, 1.3708, 1.18 ) }
    dend_67 { pt3dadd( -33.7236, -107.116, 0.959825, 1.55 ) }
    dend_67 { pt3dadd( -34.7273, -107.646, 0.482589, 0.66 ) }
    dend_67 { pt3dadd( -35.1867, -107.926, 0.342706, 0.66 ) }
    dend_67 { pt3dadd( -35.5982, -108.247, 0.289901, 0.52 ) }
    dend_67 { pt3dadd( -36.3051, -108.942, 0.280445, 0.52 ) }
    dend_67 { pt3dadd( -36.8413, -109.613, 0.335724, 0.37 ) }
    dend_67 { pt3dadd( -37.4154, -110.528, 0.522844, 0.37 ) }
    dend_67 { pt3dadd( -37.7576, -111.211, 0.697242, 0.74 ) }
    dend_67 { pt3dadd( -38.1218, -112.011, 0.943916, 1.25 ) }
    dend_67 { pt3dadd( -38.1441, -112.059, 0.960272, 1.25 ) }
    dend_67 { pt3dadd( -38.4927, -112.746, 1.19935, 1.18 ) }
    dend_67 { pt3dadd( -39.06, -113.727, 1.53532, 1.03 ) }
    dend_67 { pt3dadd( -39.4507, -114.317, 1.71094, 0.66 ) }
    dend_67 { pt3dadd( -39.9402, -114.998, 1.88292, 0.37 ) }
    dend_67 { pt3dadd( -40.5941, -115.861, 2.04345, 0.37 ) }
    dend_67 { pt3dadd( -41.0555, -116.445, 2.12022, 0.44 ) }
    dend_67 { pt3dadd( -41.1036, -116.501, 2.12384, 0.44 ) }
    dend_67 { pt3dadd( -41.721, -117.167, 2.10609, 0.37 ) }
    dend_67 { pt3dadd( -42.1796, -117.657, 2.079, 0.59 ) }
    dend_67 { pt3dadd( -42.4609, -117.97, 2.05349, 0.59 ) }
    dend_67 { pt3dadd( -42.9366, -118.555, 1.99478, 0.44 ) }
    dend_67 { pt3dadd( -43.3228, -119.057, 1.94108, 0.66 ) }
    dend_67 { pt3dadd( -43.7518, -119.633, 1.88261, 0.88 ) }
    dend_67 { pt3dadd( -44.2235, -120.29, 1.81894, 0.88 ) }
    dend_67 { pt3dadd( -44.8852, -121.217, 1.71435, 0.66 ) }
    dend_67 { pt3dadd( -45.3958, -121.955, 1.61371, 0.96 ) }
    dend_67 { pt3dadd( -45.7732, -122.487, 1.52905, 1.18 ) }
    dend_67 { pt3dadd( -46.5907, -123.535, 1.35742, 0.88 ) }
    dend_67 { pt3dadd( -46.9307, -123.905, 1.2938, 0.96 ) }
    dend_67 { pt3dadd( -47.7499, -124.601, 1.16605, 0.59 ) }
    dend_67 { pt3dadd( -47.7971, -124.627, 1.16071, 0.59 ) }
    dend_67 { pt3dadd( -48.7397, -124.953, 1.11816, 0.59 ) }
    dend_67 { pt3dadd( -49.5625, -125.122, 1.11008, 0.52 ) }
    dend_67 { pt3dadd( -50.1571, -125.199, 1.12209, 0.52 ) }
    dend_67 { pt3dadd( -50.7697, -125.284, 1.18739, 0.74 ) }
    dend_67 { pt3dadd( -51.4121, -125.39, 1.30019, 0.96 ) }
    dend_67 { pt3dadd( -52.0413, -125.521, 1.42146, 0.81 ) }
    dend_67 { pt3dadd( -53.1501, -125.825, 1.64719, 0.96 ) }
    dend_67 { pt3dadd( -53.8699, -126.077, 1.78573, 0.96 ) }
    dend_67 { pt3dadd( -54.96, -126.513, 1.99998, 0.44 ) }
    dend_67 { pt3dadd( -55.6232, -126.814, 2.12561, 0.44 ) }
    dend_67 { pt3dadd( -56.3413, -127.175, 2.2416, 0.66 ) }
    dend_67 { pt3dadd( -56.9477, -127.479, 2.30405, 0.59 ) }
    dend_67 { pt3dadd( -57.6648, -127.841, 2.35, 0.59 ) }
    dend_67 { pt3dadd( -57.7316, -127.875, 2.35029, 0.59 ) }
    dend_67 { pt3dadd( -58.2882, -128.158, 2.3011, 0.88 ) }
    dend_67 { pt3dadd( -59.2914, -128.741, 2.19071, 0.96 ) }
    dend_67 { pt3dadd( -60.0328, -129.237, 2.09488, 0.37 ) }
    dend_67 { pt3dadd( -60.1397, -129.324, 2.08703, 0.37 ) }
    dend_67 { pt3dadd( -60.8167, -130.012, 2.08777, 0.37 ) }
    dend_67 { pt3dadd( -61.317, -130.635, 2.13062, 0.29 ) }
    dend_67 { pt3dadd( -61.7563, -131.319, 2.21537, 0.29 ) }
    dend_67 { pt3dadd( -62.0606, -131.863, 2.30268, 0.52 ) }
    dend_67 { pt3dadd( -62.7045, -133.019, 2.50432, 1.03 ) }
    dend_67 { pt3dadd( -63.0421, -133.584, 2.60017, 1.25 ) }
    dend_67 { pt3dadd( -63.3304, -134.024, 2.66474, 1.25 ) }
    dend_67 { pt3dadd( -63.9256, -134.766, 2.75275, 0.88 ) }
    dend_67 { pt3dadd( -64.547, -135.387, 2.7892, 0.74 ) }
    dend_67 { pt3dadd( -65.2276, -135.956, 2.76049, 0.74 ) }
    dend_67 { pt3dadd( -65.7841, -136.358, 2.68732, 0.96 ) }
    dend_67 { pt3dadd( -66.563, -136.875, 2.56586, 0.66 ) }
    dend_67 { pt3dadd( -67.2205, -137.305, 2.41698, 0.74 ) }
    dend_67 { pt3dadd( -67.6112, -137.57, 2.31279, 1.03 ) }
    dend_67 { pt3dadd( -68.1588, -137.982, 2.14909, 1.4 ) }
    dend_67 { pt3dadd( -68.201, -138.019, 2.13563, 1.4 ) }
    dend_67 { pt3dadd( -68.5975, -138.457, 2.00828, 1.4 ) }
    dend_67 { pt3dadd( -69.3039, -139.506, 1.8021, 0.52 ) }
    dend_67 { pt3dadd( -69.6477, -140.164, 1.69885, 0.81 ) }
    dend_67 { pt3dadd( -69.877, -140.639, 1.63904, 0.88 ) }
    dend_67 { pt3dadd( -70.1029, -141.128, 1.59485, 0.52 ) }
    dend_67 { pt3dadd( -70.4527, -141.853, 1.53554, 0.44 ) }
    dend_67 { pt3dadd( -70.7599, -142.472, 1.49528, 0.44 ) }
    dend_67 { pt3dadd( -71.0629, -142.983, 1.48302, 0.44 ) }
    dend_67 { pt3dadd( -71.4303, -143.465, 1.44372, 0.66 ) }
    dend_67 { pt3dadd( -71.5289, -143.554, 1.44318, 0.66 ) }
    dend_67 { pt3dadd( -71.9525, -143.817, 1.4707, 0.88 ) }
    dend_67 { pt3dadd( -72.0371, -143.855, 1.48004, 0.88 ) }
    dend_67 { pt3dadd( -72.5866, -144.093, 1.56438, 0.96 ) }
    dend_67 { pt3dadd( -72.9041, -144.25, 1.62214, 0.66 ) }
    dend_67 { pt3dadd( -73.6861, -144.69, 1.76802, 0.52 ) }
    dend_67 { pt3dadd( -74.2191, -145.018, 1.86011, 0.44 ) }
    dend_67 { pt3dadd( -74.6114, -145.288, 1.91831, 0.74 ) }
    dend_67 { pt3dadd( -75.1088, -145.666, 1.97564, 0.81 ) }
    dend_67 { pt3dadd( -75.7284, -146.232, 2.02481, 0.52 ) }
    dend_67 { pt3dadd( -75.7792, -146.288, 2.02294, 0.52 ) }
    dend_67 { pt3dadd( -76.1015, -146.689, 1.9664, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -76.5678, -147.351, 1.85533, 0.96 ) }
    dend_67 { pt3dadd( -76.8226, -147.758, 1.77903, 1.11 ) }
    dend_67 { pt3dadd( -77.2, -148.368, 1.66338, 0.81 ) }
    dend_67 { pt3dadd( -77.7077, -149.153, 1.48221, 0.66 ) }
    dend_67 { pt3dadd( -77.7391, -149.196, 1.46966, 0.66 ) }
    dend_67 { pt3dadd( -78.2563, -149.797, 1.28636, 0.52 ) }
    dend_67 { pt3dadd( -78.7996, -150.237, 1.14352, 0.37 ) }
    dend_67 { pt3dadd( -79.2635, -150.459, 1.10611, 0.29 ) }
    dend_67 { pt3dadd( -80.0442, -150.677, 1.15758, 0.66 ) }
    dend_67 { pt3dadd( -80.5033, -150.777, 1.23334, 0.74 ) }
    dend_67 { pt3dadd( -81.429, -151.023, 1.46534, 0.29 ) }
    dend_67 { pt3dadd( -81.8586, -151.166, 1.59797, 0.66 ) }
    dend_67 { pt3dadd( -82.4471, -151.428, 1.79894, 0.88 ) }
    dend_67 { pt3dadd( -83.0151, -151.75, 1.99429, 0.88 ) }
    dend_67 { pt3dadd( -83.3354, -151.961, 2.1021, 0.88 ) }
    dend_67 { pt3dadd( -84.2653, -152.624, 2.36354, 0.58 ) }
    dend_67 { pt3dadd( -84.8655, -153.079, 2.47914, 0.81 ) }
    dend_67 { pt3dadd( -85.4023, -153.497, 2.55719, 1.11 ) }
    dend_67 { pt3dadd( -85.8845, -153.884, 2.59945, 0.74 ) }
    dend_67 { pt3dadd( -86.4298, -154.315, 2.64626, 0.88 ) }
    dend_67 { pt3dadd( -86.9718, -154.7, 2.68226, 0.81 ) }
    dend_67 { pt3dadd( -87.5064, -155.032, 2.70097, 0.74 ) }
    dend_67 { pt3dadd( -88.3701, -155.514, 2.73709, 0.44 ) }
    dend_67 { pt3dadd( -89.173, -155.938, 2.77383, 0.74 ) }
    dend_67 { pt3dadd( -89.8198, -156.251, 2.80941, 0.88 ) }
    dend_67 { pt3dadd( -90.6909, -156.579, 2.92967, 0.52 ) }
    dend_67 { pt3dadd( -91.1882, -156.734, 3.04545, 0.59 ) }
    dend_67 { pt3dadd( -92.1092, -156.993, 3.32943, 0.59 ) }
    dend_67 { pt3dadd( -92.1582, -157.007, 3.34746, 0.59 ) }
    dend_67 { pt3dadd( -92.644, -157.201, 3.54543, 0.66 ) }
    dend_67 { pt3dadd( -94.0046, -158.016, 4.06614, 0.59 ) }
    dend_67 { pt3dadd( -94.6204, -158.52, 4.29052, 0.59 ) }
    dend_67 { pt3dadd( -95.0145, -158.921, 4.39829, 0.81 ) }
    dend_67 { pt3dadd( -95.5892, -159.591, 4.50529, 0.52 ) }
    dend_67 { pt3dadd( -96.1911, -160.353, 4.54221, 0.66 ) }
    dend_67 { pt3dadd( -96.8519, -161.276, 4.48694, 0.44 ) }
    dend_67 { pt3dadd( -97.2308, -161.875, 4.39394, 1.11 ) }
    dend_67 { pt3dadd( -97.9496, -163.027, 4.17772, 0.59 ) }
    dend_67 { pt3dadd( -97.9836, -163.081, 4.16862, 0.59 ) }
    dend_67 { pt3dadd( -98.3953, -163.704, 4.07745, 0.44 ) }
    dend_67 { pt3dadd( -98.5959, -163.974, 4.04628, 0.44 ) }
    dend_67 { pt3dadd( -99.2645, -164.731, 4.03783, 0.44 ) }
    dend_67 { pt3dadd( -99.7318, -165.15, 4.07856, 0.37 ) }
    dend_67 { pt3dadd( -100.266, -165.508, 4.17632, 0.29 ) }
    dend_67 { pt3dadd( -100.726, -165.764, 4.30954, 0.66 ) }
    dend_67 { pt3dadd( -101.18, -165.962, 4.47488, 1.03 ) }
    dend_67 { pt3dadd( -101.745, -166.16, 4.69045, 1.03 ) }
    dend_67 { pt3dadd( -102.166, -166.278, 4.84997, 0.81 ) }
    dend_67 { pt3dadd( -102.892, -166.499, 5.11095, 0.52 ) }
    dend_67 { pt3dadd( -103.691, -166.837, 5.3701, 0.66 ) }
    dend_67 { pt3dadd( -104.135, -167.105, 5.50638, 0.29 ) }
    dend_67 { pt3dadd( -104.355, -167.275, 5.56722, 0.59 ) }
    dend_67 { pt3dadd( -104.753, -167.606, 5.64581, 0.81 ) }
    dend_67 { pt3dadd( -105.217, -167.976, 5.70931, 0.81 ) }
    dend_67 { pt3dadd( -105.815, -168.379, 5.74325, 0.52 ) }
    dend_67 { pt3dadd( -106.56, -168.812, 5.72069, 0.74 ) }
    dend_67 { pt3dadd( -106.611, -168.837, 5.71893, 0.74 ) }
    dend_67 { pt3dadd( -107.388, -169.177, 5.69005, 0.44 ) }
    dend_67 { pt3dadd( -107.937, -169.409, 5.66164, 0.74 ) }
    dend_67 { pt3dadd( -108.536, -169.665, 5.62473, 1.11 ) }
    dend_67 { pt3dadd( -109.419, -170.07, 5.56511, 0.59 ) }
    dend_67 { pt3dadd( -109.944, -170.361, 5.52856, 0.66 ) }
    dend_67 { pt3dadd( -110.469, -170.73, 5.49236, 0.81 ) }
    dend_67 { pt3dadd( -111.075, -171.289, 5.4529, 0.52 ) }
    dend_67 { pt3dadd( -111.46, -171.707, 5.42923, 0.66 ) }
    dend_67 { pt3dadd( -111.802, -172.099, 5.40992, 0.66 ) }
    dend_67 { pt3dadd( -112.145, -172.475, 5.36623, 0.44 ) }
    dend_67 { pt3dadd( -112.191, -172.52, 5.35787, 0.44 ) }
    dend_67 { pt3dadd( -112.909, -173.074, 5.19813, 0.37 ) }
    dend_67 { pt3dadd( -113.03, -173.134, 5.1688, 0.37 ) }
    dend_67 { pt3dadd( -113.861, -173.308, 4.96096, 0.37 ) }
    dend_67 { pt3dadd( -114.616, -173.311, 4.72218, 0.29 ) }
    dend_67 { pt3dadd( -115.066, -173.264, 4.56436, 0.37 ) }
    dend_67 { pt3dadd( -115.543, -173.195, 4.41093, 0.44 ) }
    dend_67 { pt3dadd( -116.199, -173.046, 4.18809, 0.37 ) }
    dend_67 { pt3dadd( -117.095, -172.802, 3.88234, 0.29 ) }
    dend_67 { pt3dadd( -118.085, -172.451, 3.54683, 0.22 ) }
    dend_67 { pt3dadd( -118.288, -172.369, 3.48955, 0.44 ) }
    dend_67 { pt3dadd( -119.215, -171.976, 3.18099, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -22.2132, -72.2426, 3.33983, 0.74 ) }
    dend_66 { pt3dadd( -22.7952, -72.7249, 3.48692, 0.74 ) }
    dend_66 { pt3dadd( -23.5056, -73.3173, 3.66596, 0.44 ) }
    dend_66 { pt3dadd( -24.2059, -73.8907, 3.84033, 0.59 ) }
    dend_66 { pt3dadd( -25.0825, -74.5841, 4.01585, 0.37 ) }
    dend_66 { pt3dadd( -25.7542, -75.1219, 4.14924, 0.59 ) }
    dend_66 { pt3dadd( -26.0441, -75.3514, 4.20615, 0.88 ) }
    dend_66 { pt3dadd( -26.1101, -75.4018, 4.21646, 0.88 ) }
    dend_66 { pt3dadd( -26.3926, -75.6106, 4.24741, 1.11 ) }
    dend_66 { pt3dadd( -27.03, -75.9998, 4.29088, 0.88 ) }
    dend_66 { pt3dadd( -27.8132, -76.3525, 4.3233, 0.37 ) }
    dend_66 { pt3dadd( -28.2995, -76.5156, 4.33018, 0.66 ) }
    dend_66 { pt3dadd( -29.0555, -76.7162, 4.30396, 0.81 ) }
    dend_66 { pt3dadd( -29.7551, -76.8938, 4.26579, 0.74 ) }
    dend_66 { pt3dadd( -30.7278, -77.125, 4.20056, 0.88 ) }
    dend_66 { pt3dadd( -31.4131, -77.2812, 4.15498, 0.74 ) }
    dend_66 { pt3dadd( -32.4641, -77.5375, 4.03842, 0.52 ) }
    dend_66 { pt3dadd( -33.7145, -77.9115, 3.88932, 0.52 ) }
    dend_66 { pt3dadd( -34.4675, -78.1962, 3.83729, 0.74 ) }
    dend_66 { pt3dadd( -34.5343, -78.229, 3.841, 0.74 ) }
    dend_66 { pt3dadd( -35.1299, -78.6395, 4.2777, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -35.8392, -79.2249, 5.23993, 1.03 ) }
    dend_66 { pt3dadd( -36.2481, -79.5824, 5.93748, 1.18 ) }
    dend_66 { pt3dadd( -36.8211, -80.0768, 7.05115, 0.96 ) }
    dend_66 { pt3dadd( -37.592, -80.718, 8.66096, 1.18 ) }
    dend_66 { pt3dadd( -39.8318, -82.4785, 13.379, 0.66 ) }
    dend_66 { pt3dadd( -40.143, -82.7291, 14.0901, 0.66 ) }
    dend_66 { pt3dadd( -40.4684, -82.9997, 14.8534, 0.81 ) }
    dend_66 { pt3dadd( -40.7857, -83.2652, 15.5503, 0.81 ) }
    dend_66 { pt3dadd( -40.8266, -83.3019, 15.6301, 0.81 ) }
    dend_66 { pt3dadd( -41.3155, -83.8191, 16.4974, 0.88 ) }
    dend_66 { pt3dadd( -42.1097, -84.7436, 17.9292, 0.88 ) }
    dend_66 { pt3dadd( -42.537, -85.321, 18.9394, 0.74 ) }
    dend_66 { pt3dadd( -42.7148, -85.5868, 19.4311, 0.96 ) }
    dend_66 { pt3dadd( -43.4587, -86.7741, 21.6067, 0.44 ) }
    dend_66 { pt3dadd( -44.09, -87.8222, 23.5107, 1.25 ) }
    dend_66 { pt3dadd( -44.9264, -89.2969, 26.1299, 0.59 ) }
    dend_66 { pt3dadd( -45.45, -90.1699, 27.6282, 0.96 ) }
    dend_66 { pt3dadd( -45.4763, -90.2129, 27.6977, 0.96 ) }
    dend_66 { pt3dadd( -45.8496, -90.804, 28.5252, 0.59 ) }
    dend_66 { pt3dadd( -46.2709, -91.4178, 29.1945, 0.52 ) }
    dend_66 { pt3dadd( -47.1136, -92.5995, 30.1923, 0.81 ) }
    dend_66 { pt3dadd( -48.1739, -94.1488, 31.209, 0.44 ) }
    dend_66 { pt3dadd( -48.7154, -94.9493, 31.6812, 0.59 ) }
    dend_66 { pt3dadd( -49.1847, -95.6852, 32.1378, 0.74 ) }
    dend_66 { pt3dadd( -49.656, -96.4871, 32.7147, 0.44 ) }
    dend_66 { pt3dadd( -50.1631, -97.4232, 33.4444, 0.44 ) }
    dend_66 { pt3dadd( -50.7033, -98.4923, 34.2852, 0.29 ) }
    dend_66 { pt3dadd( -51.1269, -99.4666, 35.0755, 0.44 ) }
    dend_66 { pt3dadd( -51.594, -100.706, 36.201, 0.81 ) }
    dend_66 { pt3dadd( -52.0467, -102.126, 37.6545, 1.03 ) }
    dend_66 { pt3dadd( -52.0583, -102.175, 37.7104, 1.03 ) }
    dend_66 { pt3dadd( -57.654, -110.076, 44.5335, 1.03 ) }
    dend_66 { pt3dadd( -63.8545, -117.758, 51.067, 1.03 ) }
    dend_66 { pt3dadd( -69.4116, -126.827, 56.3722, 1.03 ) }
    dend_66 { pt3dadd( -76.4367, -135.161, 61.0501, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.6885, -44.9993, -2.70522, 1.4 ) }
    dend_48 { pt3dadd( -3.30244, -45.4692, -2.99448, 1.4 ) }
    dend_48 { pt3dadd( -2.71737, -46.1959, -3.5385, 1.11 ) }
    dend_48 { pt3dadd( -2.09113, -47.1177, -4.33313, 0.96 ) }
    dend_48 { pt3dadd( -1.67889, -47.8725, -5.05238, 0.96 ) }
    dend_48 { pt3dadd( -1.41259, -48.5244, -5.71849, 1.11 ) }
    dend_48 { pt3dadd( -1.14555, -49.2889, -6.50579, 1.25 ) }
    dend_48 { pt3dadd( -0.864546, -50.304, -7.58568, 1.18 ) }
    dend_48 { pt3dadd( -0.608105, -51.5084, -8.82927, 1.18 ) }
    dend_48 { pt3dadd( -0.45948, -52.5232, -9.78832, 1.03 ) }
    dend_48 { pt3dadd( -0.339353, -53.8827, -10.9036, 0.88 ) }
    dend_48 { pt3dadd( -0.303546, -54.5503, -11.3485, 0.96 ) }
    dend_48 { pt3dadd( -0.252048, -55.7928, -12.0051, 1.11 ) }
    dend_48 { pt3dadd( -0.207549, -57.1178, -12.5281, 1.11 ) }
    dend_48 { pt3dadd( -0.177415, -58.0488, -12.7695, 0.96 ) }
    dend_48 { pt3dadd( -0.160836, -59.2936, -12.9696, 1.11 ) }
    dend_48 { pt3dadd( -0.223797, -61.0212, -13.1324, 1.18 ) }
    dend_48 { pt3dadd( -0.311733, -61.8736, -13.1969, 1.18 ) }
    dend_48 { pt3dadd( -0.463516, -62.8309, -13.2604, 1.18 ) }
    dend_48 { pt3dadd( -0.812644, -64.6535, -13.3824, 0.96 ) }
    dend_48 { pt3dadd( -1.06822, -65.8698, -13.4733, 1.03 ) }
    dend_48 { pt3dadd( -1.49764, -67.7381, -13.6481, 1.03 ) }
    dend_48 { pt3dadd( -1.84308, -69.0856, -13.7999, 1.33 ) }
    dend_48 { pt3dadd( -2.10263, -70.0722, -13.9379, 1.55 ) }
    dend_48 { pt3dadd( -2.31157, -70.8808, -14.0888, 1.33 ) }
    dend_48 { pt3dadd( -2.63269, -72.1671, -14.3829, 1.03 ) }
    dend_48 { pt3dadd( -2.8599, -73.2438, -14.6518, 1.33 ) }
    dend_48 { pt3dadd( -3.02571, -74.1975, -14.9029, 1.33 ) }
    dend_48 { pt3dadd( -3.3098, -76.003, -15.3554, 1.25 ) }
    dend_48 { pt3dadd( -3.64355, -77.9496, -15.8464, 1.03 ) }
    dend_48 { pt3dadd( -3.85714, -79.0542, -16.1221, 0.96 ) }
    dend_48 { pt3dadd( -4.17321, -80.4459, -16.4578, 0.96 ) }
    dend_48 { pt3dadd( -4.40097, -81.3032, -16.6489, 0.96 ) }
    dend_48 { pt3dadd( -4.77272, -82.5694, -16.9372, 0.96 ) }
    dend_48 { pt3dadd( -5.19492, -83.7527, -17.1866, 1.11 ) }
    dend_48 { pt3dadd( -5.45492, -84.3271, -17.283, 1.25 ) }
    dend_48 { pt3dadd( -6.03211, -85.3228, -17.4405, 1.4 ) }
    dend_48 { pt3dadd( -6.49594, -85.9174, -17.5314, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.6885, -44.9993, -2.70522, 1.11 ) }
    dend_43 { pt3dadd( -3.74844, -47.86, -0.0569302, 1.11 ) }
    dend_43 { pt3dadd( -3.74324, -48.5205, 0.350215, 1.11 ) }
    dend_43 { pt3dadd( -3.72284, -49.5911, 0.895201, 1.03 ) }
    dend_43 { pt3dadd( -3.65711, -51.2329, 1.5467, 1.11 ) }
    dend_43 { pt3dadd( -3.65298, -51.3092, 1.56921, 1.11 ) }
    dend_43 { pt3dadd( -3.58791, -52.6846, 1.89518, 1.11 ) }
    dend_43 { pt3dadd( -3.49014, -54.2421, 2.05023, 1.11 ) }
    dend_43 { pt3dadd( -3.48504, -54.3237, 2.05785, 1.11 ) }
    dend_43 { pt3dadd( -3.40811, -55.7236, 2.17483, 1.11 ) }
    dend_43 { pt3dadd( -3.33416, -57.4604, 2.2813, 1.03 ) }
    dend_43 { pt3dadd( -3.30644, -58.5806, 2.33722, 1.33 ) }
    dend_43 { pt3dadd( -3.32873, -59.9142, 2.40327, 1.18 ) }
    dend_43 { pt3dadd( -3.49518, -61.5961, 2.50379, 0.88 ) }
    dend_43 { pt3dadd( -3.50759, -61.6771, 2.5089, 0.88 ) }
    dend_43 { pt3dadd( -3.93013, -63.5067, 2.67116, 0.88 ) }
    dend_43 { pt3dadd( -4.36672, -64.9436, 2.82551, 0.88 ) }
    dend_43 { pt3dadd( -4.83826, -66.1941, 2.97671, 1.11 ) }
    dend_43 { pt3dadd( -5.52985, -67.8721, 3.26254, 0.88 ) }
    dend_43 { pt3dadd( -5.55731, -67.9357, 3.27802, 0.88 ) }
    dend_43 { pt3dadd( -6.0302, -69.1161, 3.61898, 0.88 ) }
    dend_43 { pt3dadd( -6.1106, -69.3315, 3.69533, 0.88 ) }
    dend_43 { pt3dadd( -6.37029, -70.3416, 4.06847, 0.96 ) }
    dend_43 { pt3dadd( -6.64906, -72.3966, 4.79368, 0.81 ) }
    dend_43 { pt3dadd( -6.68628, -73.0135, 4.99313, 1.18 ) }
    dend_43 { pt3dadd( -6.7231, -74.0409, 5.2934, 0.96 ) }
    dend_43 { pt3dadd( -6.7252, -74.1976, 5.33174, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -6.71769, -75.6758, 5.63529, 0.74 ) }
    dend_43 { pt3dadd( -6.71255, -76.7072, 5.73003, 0.96 ) }
    dend_43 { pt3dadd( -6.73287, -77.5853, 5.69914, 1.03 ) }
    dend_43 { pt3dadd( -6.73976, -77.7446, 5.67403, 1.03 ) }
    dend_43 { pt3dadd( -6.79762, -78.7822, 5.42173, 1.33 ) }
    dend_43 { pt3dadd( -6.85919, -79.8346, 5.08203, 1.55 ) }
    dend_43 { pt3dadd( -6.95775, -81.4318, 4.45704, 1.25 ) }
    dend_43 { pt3dadd( -6.97323, -82.6252, 3.92623, 1.4 ) }
    dend_43 { pt3dadd( -6.93664, -84.2986, 3.15819, 1.55 ) }
    dend_43 { pt3dadd( -6.89045, -85.4956, 2.60478, 1.11 ) }
    dend_43 { pt3dadd( -6.80288, -87.0101, 1.88517, 0.74 ) }
    dend_43 { pt3dadd( -6.79845, -87.093, 1.84884, 0.74 ) }
    dend_43 { pt3dadd( -6.75602, -88.1455, 1.43383, 0.74 ) }
    dend_43 { pt3dadd( -6.71943, -88.8987, 1.22087, 0.96 ) }
    dend_43 { pt3dadd( -6.71319, -89.0038, 1.20584, 0.96 ) }
    dend_43 { pt3dadd( -6.65248, -90.4297, 1.09487, 1.11 ) }
    dend_43 { pt3dadd( -6.54233, -91.6226, 1.04535, 1.11 ) }
    dend_43 { pt3dadd( -6.38886, -93.2229, 0.876002, 1.25 ) }
    dend_43 { pt3dadd( -6.15477, -95.652, 0.525131, 0.96 ) }
    dend_43 { pt3dadd( -5.9626, -97.3563, 0.19168, 0.96 ) }
    dend_43 { pt3dadd( -5.80501, -98.5871, -0.091883, 1.11 ) }
    dend_43 { pt3dadd( -5.44115, -101.055, -0.734968, 1.11 ) }
    dend_43 { pt3dadd( -5.07051, -103.395, -1.44429, 1.25 ) }
    dend_43 { pt3dadd( -4.96424, -104.09, -1.6758, 1.55 ) }
    dend_43 { pt3dadd( -4.81668, -105.497, -2.23711, 1.47 ) }
    dend_43 { pt3dadd( -4.81097, -105.573, -2.26188, 1.47 ) }
    dend_43 { pt3dadd( -4.78569, -106.461, -2.45057, 0.88 ) }
    dend_43 { pt3dadd( -4.82573, -107.66, -2.44613, 0.59 ) }
    dend_43 { pt3dadd( -4.85779, -108.889, -2.20274, 0.74 ) }
    dend_43 { pt3dadd( -4.88956, -109.759, -1.96328, 1.03 ) }
    dend_43 { pt3dadd( -4.96553, -111.467, -1.43322, 1.03 ) }
    dend_43 { pt3dadd( -5.00383, -112.215, -1.19762, 1.25 ) }
    dend_43 { pt3dadd( -5.09263, -113.928, -0.647588, 1.25 ) }
    dend_43 { pt3dadd( -5.15626, -115.233, -0.223711, 0.74 ) }
    dend_43 { pt3dadd( -5.22667, -116.311, 0.0704214, 0.74 ) }
    dend_43 { pt3dadd( -5.32796, -117.416, 0.218133, 0.96 ) }
    dend_43 { pt3dadd( -5.33596, -117.487, 0.21421, 0.96 ) }
    dend_43 { pt3dadd( -5.46564, -118.741, -0.00859115, 1.18 ) }
    dend_43 { pt3dadd( -5.47292, -118.83, -0.0341357, 1.18 ) }
    dend_43 { pt3dadd( -5.53593, -120.418, -0.550913, 1.33 ) }
    dend_43 { pt3dadd( -5.53735, -122.315, -1.15258, 1.03 ) }
    dend_43 { pt3dadd( -5.51195, -123.87, -1.59587, 0.88 ) }
    dend_43 { pt3dadd( -5.50357, -124.456, -1.74325, 1.33 ) }
    dend_43 { pt3dadd( -5.50091, -125.653, -1.99541, 1.33 ) }
    dend_43 { pt3dadd( -5.52721, -126.996, -2.20288, 1.55 ) }
    dend_43 { pt3dadd( -5.60861, -128.323, -2.28505, 1.33 ) }
    dend_43 { pt3dadd( -5.78016, -129.532, -2.25819, 1.11 ) }
    dend_43 { pt3dadd( -6.08497, -130.821, -2.16193, 0.66 ) }
    dend_43 { pt3dadd( -6.49374, -132.084, -2.02259, 0.66 ) }
    dend_43 { pt3dadd( -6.98943, -133.295, -1.84542, 0.74 ) }
    dend_43 { pt3dadd( -7.58507, -134.566, -1.62341, 0.59 ) }
    dend_43 { pt3dadd( -7.98098, -135.417, -1.45988, 0.88 ) }
    dend_43 { pt3dadd( -8.3196, -136.28, -1.30584, 0.96 ) }
    dend_43 { pt3dadd( -8.52778, -137.124, -1.18976, 0.88 ) }
    dend_43 { pt3dadd( -8.52849, -137.203, -1.17765, 0.88 ) }
    dend_43 { pt3dadd( -8.33148, -138.331, -1.00109, 0.74 ) }
    dend_43 { pt3dadd( -8.05168, -139.407, -0.840345, 1.25 ) }
    dend_43 { pt3dadd( -7.73394, -140.577, -0.647602, 1.25 ) }
    dend_43 { pt3dadd( -7.43024, -141.878, -0.409477, 1.03 ) }
    dend_43 { pt3dadd( -7.09539, -144.065, 0.0402422, 0.74 ) }
    dend_43 { pt3dadd( -7.01342, -145.307, 0.32126, 0.59 ) }
    dend_43 { pt3dadd( -7.05727, -146.038, 0.504093, 0.81 ) }
    dend_43 { pt3dadd( -7.28362, -147.062, 0.769119, 0.88 ) }
    dend_43 { pt3dadd( -7.69207, -148.249, 1.06026, 1.03 ) }
    dend_43 { pt3dadd( -8.07113, -149.252, 1.24874, 1.11 ) }
    dend_43 { pt3dadd( -8.16019, -149.478, 1.26057, 1.11 ) }
    dend_43 { pt3dadd( -8.56944, -150.594, 1.18777, 0.96 ) }
    dend_43 { pt3dadd( -8.98978, -151.859, 0.99839, 1.11 ) }
    dend_43 { pt3dadd( -9.35115, -153.129, 0.715241, 0.96 ) }
    dend_43 { pt3dadd( -9.80538, -154.985, 0.21312, 1.18 ) }
    dend_43 { pt3dadd( -10.2483, -156.975, -0.273515, 1.03 ) }
    dend_43 { pt3dadd( -10.687, -159.019, -0.732875, 0.96 ) }
    dend_43 { pt3dadd( -10.7125, -159.16, -0.762387, 0.96 ) }
    dend_43 { pt3dadd( -10.9082, -160.647, -1.01818, 0.96 ) }
    dend_43 { pt3dadd( -10.9788, -161.736, -1.09996, 1.4 ) }
    dend_43 { pt3dadd( -10.9422, -163.865, -1.01832, 1.11 ) }
    dend_43 { pt3dadd( -10.9318, -163.969, -1.00401, 1.11 ) }
    dend_43 { pt3dadd( -10.7546, -165.211, -0.789296, 1.25 ) }
    dend_43 { pt3dadd( -10.5056, -166.825, -0.522881, 1.11 ) }
    dend_43 { pt3dadd( -10.2018, -168.599, -0.270782, 0.88 ) }
    dend_43 { pt3dadd( -10.0227, -169.571, -0.174593, 1.18 ) }
    dend_43 { pt3dadd( -9.70218, -171.112, -0.123832, 1.25 ) }
    dend_43 { pt3dadd( -9.50296, -172.165, -0.0972307, 1.4 ) }
    dend_43 { pt3dadd( -9.48955, -172.255, -0.0963247, 1.4 ) }
    dend_43 { pt3dadd( -9.32939, -173.813, -0.0811955, 1.03 ) }
    dend_43 { pt3dadd( -9.32308, -174.056, -0.0794353, 1.03 ) }
    dend_43 { pt3dadd( -9.38401, -175.387, -0.0236689, 0.74 ) }
    dend_43 { pt3dadd( -9.52419, -176.531, 0.123568, 0.74 ) }
    dend_43 { pt3dadd( -9.72142, -177.423, 0.308404, 0.96 ) }
    dend_43 { pt3dadd( -10.1223, -178.746, 0.657137, 0.88 ) }
    dend_43 { pt3dadd( -10.5915, -179.938, 1.0423, 0.88 ) }
    dend_43 { pt3dadd( -11.0484, -180.955, 1.40316, 0.88 ) }
    dend_43 { pt3dadd( -11.7395, -182.29, 1.93099, 1.11 ) }
    dend_43 { pt3dadd( -12.2332, -183.221, 2.30342, 1.25 ) }
    dend_43 { pt3dadd( -12.6888, -184.109, 2.63524, 1.4 ) }
    dend_43 { pt3dadd( -12.823, -184.377, 2.71203, 1.4 ) }
    dend_43 { pt3dadd( -13.1429, -185.134, 2.858, 1.4 ) }
    dend_43 { pt3dadd( -13.2295, -185.362, 2.85548, 1.4 ) }
    dend_43 { pt3dadd( -13.6843, -186.703, 2.56086, 1.25 ) }
    dend_43 { pt3dadd( -13.9843, -187.719, 2.2383, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -14.2075, -188.623, 1.8585, 0.96 ) }
    dend_43 { pt3dadd( -14.4908, -189.904, 1.24615, 0.96 ) }
    dend_43 { pt3dadd( -14.9562, -192.062, 0.0296834, 0.81 ) }
    dend_43 { pt3dadd( -15.3365, -193.868, -1.14199, 0.81 ) }
    dend_43 { pt3dadd( -15.5218, -194.674, -1.71803, 1.03 ) }
    dend_43 { pt3dadd( -15.9965, -196.58, -3.07948, 1.03 ) }
    dend_43 { pt3dadd( -16.0201, -196.672, -3.14249, 1.03 ) }
    dend_43 { pt3dadd( -16.4347, -198.271, -4.1504, 1.55 ) }
    dend_43 { pt3dadd( -16.9052, -200.187, -5.1466, 0.88 ) }
    dend_43 { pt3dadd( -17.3537, -202.002, -5.97696, 0.81 ) }
    dend_43 { pt3dadd( -17.7264, -203.413, -6.58846, 0.81 ) }
    dend_43 { pt3dadd( -18.0104, -204.451, -6.99669, 0.96 ) }
    dend_43 { pt3dadd( -18.2945, -205.538, -7.38813, 0.96 ) }
    dend_43 { pt3dadd( -18.5539, -206.646, -7.72044, 0.74 ) }
    dend_43 { pt3dadd( -18.9455, -208.463, -8.21473, 1.25 ) }
    dend_43 { pt3dadd( -19.2505, -210.21, -8.69999, 0.81 ) }
    dend_43 { pt3dadd( -19.2624, -210.285, -8.72066, 0.81 ) }
    dend_43 { pt3dadd( -19.4424, -211.547, -8.95362, 0.81 ) }
    dend_43 { pt3dadd( -19.5867, -212.536, -9.04678, 1.18 ) }
    dend_43 { pt3dadd( -19.6059, -212.689, -9.04531, 1.18 ) }
    dend_43 { pt3dadd( -19.717, -213.758, -8.93287, 1.18 ) }
    dend_43 { pt3dadd( -19.8491, -215.625, -8.65956, 0.81 ) }
    dend_43 { pt3dadd( -19.9711, -217.455, -8.3974, 0.81 ) }
    dend_43 { pt3dadd( -20.0328, -218.448, -8.25358, 1.11 ) }
    dend_43 { pt3dadd( -20.1473, -220.111, -8.04051, 1.11 ) }
    dend_43 { pt3dadd( -20.157, -220.284, -8.0161, 1.11 ) }
    dend_43 { pt3dadd( -20.185, -221.732, -7.69927, 0.96 ) }
    dend_43 { pt3dadd( -20.1675, -222.439, -7.51132, 1.25 ) }
    dend_43 { pt3dadd( -20.165, -222.516, -7.48985, 1.25 ) }
    dend_43 { pt3dadd( -20.1089, -223.847, -7.07317, 1.25 ) }
    dend_43 { pt3dadd( -20.0613, -225.982, -6.35427, 1.03 ) }
    dend_43 { pt3dadd( -20.0381, -228.542, -5.46968, 0.81 ) }
    dend_43 { pt3dadd( -20.0297, -229.428, -5.17221, 1.11 ) }
    dend_43 { pt3dadd( -20.0055, -230.961, -4.717, 0.96 ) }
    dend_43 { pt3dadd( -20.0038, -231.21, -4.65523, 0.96 ) }
    dend_43 { pt3dadd( -20.0054, -232.515, -4.40122, 0.81 ) }
    dend_43 { pt3dadd( -20.0095, -232.621, -4.3927, 0.81 ) }
    dend_43 { pt3dadd( -20.1436, -234.436, -4.39642, 0.96 ) }
    dend_43 { pt3dadd( -20.2229, -235.602, -4.40306, 1.18 ) }
    dend_43 { pt3dadd( -20.2961, -236.855, -4.4156, 1.03 ) }
    dend_43 { pt3dadd( -20.3022, -236.937, -4.41596, 1.03 ) }
    dend_43 { pt3dadd( -20.439, -238.375, -4.41019, 0.74 ) }
    dend_43 { pt3dadd( -20.6765, -240.317, -4.41051, 0.74 ) }
    dend_43 { pt3dadd( -20.837, -241.376, -4.45382, 0.81 ) }
    dend_43 { pt3dadd( -20.8532, -241.481, -4.46167, 0.81 ) }
    dend_43 { pt3dadd( -20.9856, -242.504, -4.57733, 0.81 ) }
    dend_43 { pt3dadd( -21.1298, -244.032, -4.79741, 0.81 ) }
    dend_43 { pt3dadd( -21.209, -245.816, -5.15498, 1.03 ) }
    dend_43 { pt3dadd( -21.2338, -247.337, -5.51525, 1.03 ) }
    dend_43 { pt3dadd( -21.2359, -247.415, -5.53361, 1.03 ) }
    dend_43 { pt3dadd( -21.2974, -248.462, -5.76224, 1.25 ) }
    dend_43 { pt3dadd( -21.3767, -249.451, -5.96682, 0.96 ) }
    dend_43 { pt3dadd( -21.5325, -250.772, -6.17716, 0.81 ) }
    dend_43 { pt3dadd( -21.6729, -251.618, -6.26656, 1.11 ) }
    dend_43 { pt3dadd( -21.8934, -252.885, -6.35512, 1.33 ) }
    dend_43 { pt3dadd( -22.1239, -254.117, -6.44734, 1.33 ) }
    dend_43 { pt3dadd( -22.1408, -254.205, -6.45629, 1.33 ) }
    dend_43 { pt3dadd( -22.4269, -255.888, -6.6538, 0.74 ) }
    dend_43 { pt3dadd( -22.6449, -257.648, -6.93164, 0.96 ) }
    dend_43 { pt3dadd( -22.7105, -259.113, -7.23605, 0.96 ) }
    dend_43 { pt3dadd( -22.7041, -259.256, -7.26632, 0.96 ) }
    dend_43 { pt3dadd( -22.5347, -260.745, -7.56613, 0.96 ) }
    dend_43 { pt3dadd( -22.3256, -262.082, -7.74089, 0.81 ) }
    dend_43 { pt3dadd( -22.0663, -263.522, -7.81793, 0.66 ) }
    dend_43 { pt3dadd( -21.8306, -264.934, -7.77377, 0.66 ) }
    dend_43 { pt3dadd( -21.656, -266.284, -7.64799, 1.33 ) }
    dend_43 { pt3dadd( -21.5546, -267.415, -7.45352, 1.33 ) }
    dend_43 { pt3dadd( -21.4647, -269.456, -6.94129, 1.11 ) }
    dend_43 { pt3dadd( -21.4271, -270.918, -6.52331, 1.18 ) }
    dend_43 { pt3dadd( -21.417, -271.735, -6.27936, 1.4 ) }
    dend_43 { pt3dadd( -21.3937, -272.998, -5.95819, 1.11 ) }
    dend_43 { pt3dadd( -21.3076, -274.477, -5.70868, 0.59 ) }
    dend_43 { pt3dadd( -21.194, -275.435, -5.63037, 0.52 ) }
    dend_43 { pt3dadd( -20.9586, -276.744, -5.64208, 0.88 ) }
    dend_43 { pt3dadd( -20.6656, -278.032, -5.74527, 1.18 ) }
    dend_43 { pt3dadd( -20.3502, -279.431, -5.92089, 1.03 ) }
    dend_43 { pt3dadd( -19.9691, -281.197, -6.21983, 0.96 ) }
    dend_43 { pt3dadd( -19.6649, -282.948, -6.6081, 0.81 ) }
    dend_43 { pt3dadd( -19.539, -283.98, -6.85548, 1.11 ) }
    dend_43 { pt3dadd( -19.4871, -285.182, -7.15196, 1.69 ) }
    dend_43 { pt3dadd( -19.5237, -286.528, -7.49976, 1.18 ) }
    dend_43 { pt3dadd( -19.5327, -286.616, -7.51733, 1.18 ) }
    dend_43 { pt3dadd( -19.7447, -288.021, -7.67333, 0.59 ) }
    dend_43 { pt3dadd( -19.7532, -288.1, -7.66577, 0.59 ) }
    dend_43 { pt3dadd( -19.7799, -289.295, -7.32608, 1.03 ) }
    dend_43 { pt3dadd( -19.7732, -289.43, -7.27113, 1.03 ) }
    dend_43 { pt3dadd( -19.5435, -291.18, -6.49379, 1.25 ) }
    dend_43 { pt3dadd( -19.4148, -291.93, -6.16019, 1.25 ) }
    dend_43 { pt3dadd( -19.0707, -293.716, -5.37656, 0.96 ) }
    dend_43 { pt3dadd( -18.9017, -294.733, -4.97598, 0.66 ) }
    dend_43 { pt3dadd( -18.7809, -295.64, -4.67094, 0.66 ) }
    dend_43 { pt3dadd( -18.7183, -296.426, -4.47188, 0.37 ) }
    dend_43 { pt3dadd( -18.7275, -297.499, -4.39246, 0.52 ) }
    dend_43 { pt3dadd( -18.8576, -298.746, -4.43375, 0.81 ) }
    dend_43 { pt3dadd( -19.0774, -299.734, -4.55157, 1.11 ) }
    dend_43 { pt3dadd( -19.3694, -300.714, -4.73459, 1.4 ) }
    dend_43 { pt3dadd( -19.7654, -301.928, -5.00625, 1.4 ) }
    dend_43 { pt3dadd( -20.519, -304.04, -5.53497, 0.81 ) }
    dend_43 { pt3dadd( -20.9372, -305.234, -5.87899, 0.66 ) }
    dend_43 { pt3dadd( -21.2826, -306.376, -6.25125, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -21.6112, -307.933, -6.79536, 0.37 ) }
    dend_43 { pt3dadd( -21.728, -308.798, -7.10916, 0.88 ) }
    dend_43 { pt3dadd( -21.7339, -308.873, -7.13376, 0.88 ) }
    dend_43 { pt3dadd( -21.7802, -309.674, -7.30251, 1.25 ) }
    dend_43 { pt3dadd( -21.8606, -310.606, -7.45257, 1.25 ) }
    dend_43 { pt3dadd( -22.0074, -311.667, -7.55949, 0.88 ) }
    dend_43 { pt3dadd( -22.4018, -313.464, -7.61207, 0.66 ) }
    dend_43 { pt3dadd( -22.9048, -315.141, -7.60386, 0.66 ) }
    dend_43 { pt3dadd( -23.4904, -316.727, -7.57056, 0.88 ) }
    dend_43 { pt3dadd( -23.9829, -317.861, -7.57299, 0.88 ) }
    dend_43 { pt3dadd( -24.4351, -318.8, -7.62389, 1.11 ) }
    dend_43 { pt3dadd( -24.8428, -319.653, -7.70597, 1.18 ) }
    dend_43 { pt3dadd( -25.1274, -320.321, -7.7636, 1.18 ) }
    dend_43 { pt3dadd( -25.859, -322.325, -7.97222, 0.88 ) }
    dend_43 { pt3dadd( -26.3587, -324.035, -8.17185, 1.25 ) }
    dend_43 { pt3dadd( -26.7757, -325.918, -8.38655, 0.74 ) }
    dend_43 { pt3dadd( -27.035, -327.464, -8.54184, 0.59 ) }
    dend_43 { pt3dadd( -27.2503, -329.236, -8.68287, 1.03 ) }
    dend_43 { pt3dadd( -27.3316, -330.306, -8.71232, 0.74 ) }
    dend_43 { pt3dadd( -27.3589, -331.532, -8.63648, 0.59 ) }
    dend_43 { pt3dadd( -27.3648, -331.781, -8.59582, 0.59 ) }
    dend_43 { pt3dadd( -27.4493, -333.048, -8.29315, 0.74 ) }
    dend_43 { pt3dadd( -27.4666, -333.127, -8.27851, 0.74 ) }
    dend_43 { pt3dadd( -27.842, -334.279, -8.20928, 0.59 ) }
    dend_43 { pt3dadd( -27.8741, -334.366, -8.20916, 0.59 ) }
    dend_43 { pt3dadd( -28.4131, -335.884, -8.2872, 0.74 ) }
    dend_43 { pt3dadd( -28.9112, -337.418, -8.42547, 0.59 ) }
    dend_43 { pt3dadd( -29.4513, -339.411, -8.70405, 0.59 ) }
    dend_43 { pt3dadd( -29.8816, -341.217, -9.03115, 0.59 ) }
    dend_43 { pt3dadd( -30.1223, -342.495, -9.32962, 0.59 ) }
    dend_43 { pt3dadd( -30.2859, -343.62, -9.63311, 0.81 ) }
    dend_43 { pt3dadd( -30.3061, -343.859, -9.70913, 0.81 ) }
    dend_43 { pt3dadd( -30.3064, -344.804, -10.0454, 0.81 ) }
    dend_43 { pt3dadd( -30.2994, -344.87, -10.0631, 0.81 ) }
    dend_43 { pt3dadd( -30.2012, -346.022, -10.2151, 0.81 ) }
    dend_43 { pt3dadd( -30.1991, -346.093, -10.2128, 0.81 ) }
    dend_43 { pt3dadd( -30.2163, -347.309, -10.0706, 0.66 ) }
    dend_43 { pt3dadd( -30.2169, -347.379, -10.0608, 0.66 ) }
    dend_43 { pt3dadd( -30.2287, -348.786, -9.84236, 0.66 ) }
    dend_43 { pt3dadd( -30.1739, -350.509, -9.59563, 0.44 ) }
    dend_43 { pt3dadd( -30.0341, -352.801, -9.27878, 0.66 ) }
    dend_43 { pt3dadd( -29.7771, -354.78, -9.00525, 0.96 ) }
    dend_43 { pt3dadd( -29.4501, -356.457, -8.77329, 0.96 ) }
    dend_43 { pt3dadd( -29.4192, -356.581, -8.75747, 0.96 ) }
    dend_43 { pt3dadd( -28.8762, -358.199, -8.57457, 0.81 ) }
    dend_43 { pt3dadd( -28.8146, -358.351, -8.56273, 0.81 ) }
    dend_43 { pt3dadd( -28.087, -360.008, -8.5449, 0.74 ) }
    dend_43 { pt3dadd( -28.0532, -360.082, -8.54357, 0.74 ) }
    dend_43 { pt3dadd( -27.7665, -360.864, -8.51899, 0.96 ) }
    dend_43 { pt3dadd( -27.7236, -361.022, -8.525, 0.96 ) }
    dend_43 { pt3dadd( -27.4899, -362.371, -8.58797, 0.96 ) }
    dend_43 { pt3dadd( -27.385, -363.33, -8.66298, 0.96 ) }
    dend_43 { pt3dadd( -27.3852, -363.411, -8.67391, 0.96 ) }
    dend_43 { pt3dadd( -27.393, -364.633, -8.84607, 0.52 ) }
    dend_43 { pt3dadd( -27.4104, -365.979, -9.05494, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -45.7182, -96.7317, -24.6669, 0.74 ) }
    dend_34 { pt3dadd( -46.42, -96.7052, -24.1411, 0.74 ) }
    dend_34 { pt3dadd( -46.4798, -96.7149, -24.0784, 0.74 ) }
    dend_34 { pt3dadd( -47.2709, -96.983, -23.0711, 0.52 ) }
    dend_34 { pt3dadd( -47.6817, -97.1505, -22.54, 0.44 ) }
    dend_34 { pt3dadd( -48.3736, -97.4345, -21.6935, 0.44 ) }
    dend_34 { pt3dadd( -49.0516, -97.7049, -20.9255, 0.96 ) }
    dend_34 { pt3dadd( -50.3055, -98.2807, -19.5746, 0.74 ) }
    dend_34 { pt3dadd( -51.0779, -98.6531, -18.8295, 0.74 ) }
    dend_34 { pt3dadd( -51.4659, -98.8597, -18.5109, 0.74 ) }
    dend_34 { pt3dadd( -52.0352, -99.1425, -18.1132, 0.59 ) }
    dend_34 { pt3dadd( -52.5454, -99.3532, -17.8149, 0.52 ) }
    dend_34 { pt3dadd( -53.286, -99.6026, -17.4605, 0.52 ) }
    dend_34 { pt3dadd( -53.7961, -99.7456, -17.2683, 0.88 ) }
    dend_34 { pt3dadd( -54.6502, -99.9464, -16.9562, 0.59 ) }
    dend_34 { pt3dadd( -55.9416, -100.199, -16.3952, 0.96 ) }
    dend_34 { pt3dadd( -57.374, -100.446, -15.6847, 1.33 ) }
    dend_34 { pt3dadd( -57.9173, -100.532, -15.3851, 1.33 ) }
    dend_34 { pt3dadd( -58.7911, -100.67, -14.8803, 0.44 ) }
    dend_34 { pt3dadd( -59.3089, -100.737, -14.5829, 0.44 ) }
    dend_34 { pt3dadd( -60.4407, -100.844, -13.987, 0.44 ) }
    dend_34 { pt3dadd( -60.4987, -100.849, -13.9618, 0.44 ) }
    dend_34 { pt3dadd( -61.4352, -100.892, -13.6396, 0.81 ) }
    dend_34 { pt3dadd( -62.0753, -100.92, -13.3573, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -45.7182, -96.7317, -24.6669, 0.59 ) }
    dend_31 { pt3dadd( -47.3437, -98.3687, -25.4788, 0.59 ) }
    dend_31 { pt3dadd( -48.2152, -99.2959, -25.8463, 0.52 ) }
    dend_31 { pt3dadd( -48.7333, -99.8494, -26.0705, 0.88 ) }
    dend_31 { pt3dadd( -49.708, -100.822, -26.5753, 0.88 ) }
    dend_31 { pt3dadd( -50.3816, -101.459, -27.093, 0.88 ) }
    dend_31 { pt3dadd( -50.9833, -101.978, -27.652, 1.03 ) }
    dend_31 { pt3dadd( -51.8442, -102.545, -28.5422, 0.59 ) }
    dend_31 { pt3dadd( -52.5672, -102.856, -29.4894, 0.44 ) }
    dend_31 { pt3dadd( -53.5073, -103.001, -30.8871, 0.74 ) }
    dend_31 { pt3dadd( -55.0664, -102.791, -33.4897, 0.44 ) }
    dend_31 { pt3dadd( -55.4608, -102.631, -34.1529, 0.44 ) }
    dend_31 { pt3dadd( -55.9125, -102.381, -34.8838, 0.44 ) }
    dend_31 { pt3dadd( -56.4457, -102.047, -35.6656, 0.74 ) }
    dend_31 { pt3dadd( -56.8234, -101.829, -36.12, 0.96 ) }
    dend_31 { pt3dadd( -56.8929, -101.802, -36.1775, 0.96 ) }
    dend_31 { pt3dadd( -57.6671, -101.635, -36.6029, 0.88 ) }
    dend_31 { pt3dadd( -59.3223, -101.366, -37.5015, 0.44 ) }
    dend_31 { pt3dadd( -59.829, -101.278, -37.7729, 0.44 ) }
    dend_31 { pt3dadd( -59.9066, -101.258, -37.8273, 0.44 ) }
    dend_31 { pt3dadd( -60.4589, -101.053, -38.2641, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -61.2618, -100.66, -38.9682, 0.44 ) }
    dend_31 { pt3dadd( -61.7832, -100.329, -39.4439, 0.81 ) }
    dend_31 { pt3dadd( -62.2512, -99.953, -39.9099, 1.33 ) }
    dend_31 { pt3dadd( -63.7689, -98.6395, -41.5078, 1.33 ) }
    dend_31 { pt3dadd( -64.403, -98.1093, -42.1572, 1.25 ) }
    dend_31 { pt3dadd( -65.1393, -97.5266, -42.8884, 0.96 ) }
    dend_31 { pt3dadd( -65.9327, -96.9595, -43.6761, 0.88 ) }
    dend_31 { pt3dadd( -66.8573, -96.3516, -44.5458, 0.74 ) }
    dend_31 { pt3dadd( -67.5891, -95.9095, -45.1735, 0.74 ) }
    dend_31 { pt3dadd( -68.6139, -95.3253, -45.9848, 0.66 ) }
    dend_31 { pt3dadd( -69.1659, -95.0135, -46.4579, 0.52 ) }
    dend_31 { pt3dadd( -70.0676, -94.4945, -47.2364, 0.29 ) }
    dend_31 { pt3dadd( -70.6387, -94.1228, -47.8361, 0.37 ) }
    dend_31 { pt3dadd( -70.7009, -94.0758, -47.9103, 0.37 ) }
    dend_31 { pt3dadd( -71.5816, -93.1699, -49.2125, 0.88 ) }
    dend_31 { pt3dadd( -71.8245, -92.7988, -49.7426, 1.25 ) }
    dend_31 { pt3dadd( -72.1258, -92.2605, -50.5944, 1.18 ) }
    dend_31 { pt3dadd( -72.7056, -91.2893, -52.2361, 0.66 ) }
    dend_31 { pt3dadd( -72.7369, -91.2449, -52.3168, 0.66 ) }
    dend_31 { pt3dadd( -73.1783, -90.7214, -53.2664, 0.74 ) }
    dend_31 { pt3dadd( -74.1851, -89.7733, -55.0503, 0.88 ) }
    dend_31 { pt3dadd( -74.9563, -89.144, -56.3057, 0.52 ) }
    dend_31 { pt3dadd( -75.5873, -88.7632, -57.1428, 0.88 ) }
    dend_31 { pt3dadd( -76.3428, -88.4905, -57.8891, 1.03 ) }
    dend_31 { pt3dadd( -77.1897, -88.2888, -58.618, 1.33 ) }
    dend_31 { pt3dadd( -77.9861, -88.1851, -59.1873, 0.88 ) }
    dend_31 { pt3dadd( -78.0675, -88.1762, -59.2388, 0.88 ) }
    dend_31 { pt3dadd( -79.1063, -88.0576, -59.9446, 0.59 ) }
    dend_31 { pt3dadd( -80.4015, -87.9005, -60.9824, 0.52 ) }
    dend_31 { pt3dadd( -80.544, -87.8788, -61.1115, 0.52 ) }
    dend_31 { pt3dadd( -80.9754, -87.7763, -61.5348, 0.81 ) }
    dend_31 { pt3dadd( -82.334, -87.232, -63.1399, 0.29 ) }
    dend_31 { pt3dadd( -82.3877, -87.2074, -63.2131, 0.29 ) }
    dend_31 { pt3dadd( -82.8141, -86.9803, -63.9998, 0.29 ) }
    dend_31 { pt3dadd( -82.9731, -86.8945, -64.3418, 0.88 ) }
    dend_31 { pt3dadd( -83.1468, -86.8337, -64.7804, 1.18 ) }
    dend_31 { pt3dadd( -83.9428, -86.6999, -66.9581, 0.37 ) }
    dend_31 { pt3dadd( -84.437, -86.7179, -68.2788, 0.74 ) }
    dend_31 { pt3dadd( -85.1141, -86.8771, -70.0934, 1.03 ) }
    dend_31 { pt3dadd( -85.148, -86.8906, -70.18, 1.03 ) }
    dend_31 { pt3dadd( -85.9229, -87.2775, -71.9795, 0.44 ) }
    dend_31 { pt3dadd( -86.1411, -87.3894, -72.4214, 1.18 ) }
    dend_31 { pt3dadd( -86.5651, -87.5799, -73.0908, 1.47 ) }
    dend_31 { pt3dadd( -87.6334, -87.9796, -75.0619, 0.81 ) }
    dend_31 { pt3dadd( -88.0789, -88.1198, -75.9206, 0.52 ) }
    dend_31 { pt3dadd( -88.7056, -88.2957, -77.1602, 0.37 ) }
    dend_31 { pt3dadd( -89.0793, -88.3888, -77.8922, 0.37 ) }
    dend_31 { pt3dadd( -89.5556, -88.5127, -78.8407, 1.18 ) }
    dend_31 { pt3dadd( -91.9736, -89.2065, -83.8165, 0.81 ) }
    dend_31 { pt3dadd( -92.0567, -89.2318, -83.9859, 0.81 ) }
    dend_31 { pt3dadd( -92.5186, -89.3966, -84.9348, 0.81 ) }
    dend_31 { pt3dadd( -92.8546, -89.5147, -85.5599, 0.88 ) }
    dend_31 { pt3dadd( -93.2121, -89.6613, -86.1933, 0.81 ) }
    dend_31 { pt3dadd( -94.0708, -90.0674, -87.4755, 0.29 ) }
    dend_31 { pt3dadd( -94.29, -90.1635, -87.6888, 0.29 ) }
    dend_31 { pt3dadd( -94.6526, -90.3673, -88.1206, 0.29 ) }
    dend_31 { pt3dadd( -95.2955, -90.8231, -88.9897, 1.18 ) }
    dend_31 { pt3dadd( -96.6436, -92.0381, -90.8794, 0.59 ) }
    dend_31 { pt3dadd( -97.0682, -92.5087, -91.444, 1.33 ) }
    dend_31 { pt3dadd( -97.1215, -92.577, -91.5088, 1.33 ) }
    dend_31 { pt3dadd( -98.1562, -93.9942, -92.6627, 0.74 ) }
    dend_31 { pt3dadd( -98.6773, -94.7606, -93.2065, 0.66 ) }
    dend_31 { pt3dadd( -99.2756, -95.6883, -93.8552, 0.37 ) }
    dend_31 { pt3dadd( -99.8961, -96.6191, -94.4621, 0.88 ) }
    dend_31 { pt3dadd( -100.537, -97.5796, -95.1157, 1.03 ) }
    dend_31 { pt3dadd( -101.064, -98.3795, -95.694, 0.88 ) }
    dend_31 { pt3dadd( -101.107, -98.4483, -95.7438, 0.88 ) }
    dend_31 { pt3dadd( -102.098, -100.297, -97.1308, 0.74 ) }
    dend_31 { pt3dadd( -102.535, -101.227, -97.9737, 0.44 ) }
    dend_31 { pt3dadd( -102.762, -101.726, -98.49, 1.47 ) }
    dend_31 { pt3dadd( -103.233, -102.705, -99.6506, 1.03 ) }
    dend_31 { pt3dadd( -103.528, -103.21, -100.348, 0.74 ) }
    dend_31 { pt3dadd( -103.829, -103.562, -100.921, 0.74 ) }
    dend_31 { pt3dadd( -105.101, -104.498, -102.928, 0.52 ) }
    dend_31 { pt3dadd( -105.734, -104.816, -103.914, 0.66 ) }
    dend_31 { pt3dadd( -106.316, -105.08, -104.865, 0.37 ) }
    dend_31 { pt3dadd( -106.718, -105.302, -105.696, 0.29 ) }
    dend_31 { pt3dadd( -107.069, -105.524, -106.534, 0.29 ) }
    dend_31 { pt3dadd( -107.459, -105.808, -107.58, 0.74 ) }
    dend_31 { pt3dadd( -107.972, -106.27, -109.108, 0.96 ) }
    dend_31 { pt3dadd( -108.616, -106.905, -111.246, 0.96 ) }
    dend_31 { pt3dadd( -109.507, -107.769, -114.463, 0.88 ) }
    dend_31 { pt3dadd( -109.529, -107.786, -114.538, 0.88 ) }
    dend_31 { pt3dadd( -109.937, -108.017, -115.874, 0.88 ) }
    dend_31 { pt3dadd( -110.145, -108.083, -116.463, 1.03 ) }
    dend_31 { pt3dadd( -110.524, -108.153, -117.344, 1.03 ) }
    dend_31 { pt3dadd( -111.2, -108.275, -118.62, 0.74 ) }
    dend_31 { pt3dadd( -111.992, -108.522, -119.962, 0.37 ) }
    dend_31 { pt3dadd( -112.035, -108.546, -120.045, 0.37 ) }
    dend_31 { pt3dadd( -112.826, -109.156, -121.714, 0.37 ) }
    dend_31 { pt3dadd( -113.493, -109.816, -123.294, 0.37 ) }
    dend_31 { pt3dadd( -114.093, -110.493, -124.762, 0.88 ) }
    dend_31 { pt3dadd( -114.685, -111.144, -126.117, 1.18 ) }
    dend_31 { pt3dadd( -115.54, -112.051, -128.283, 0.59 ) }
    dend_31 { pt3dadd( -115.574, -112.079, -128.369, 0.59 ) }
    dend_31 { pt3dadd( -116.357, -112.456, -130.297, 0.44 ) }
    dend_31 { pt3dadd( -116.577, -112.491, -130.938, 0.37 ) }
    dend_31 { pt3dadd( -116.939, -112.44, -132.158, 0.37 ) }
    dend_31 { pt3dadd( -117.758, -112.129, -134.962, 1.03 ) }
    dend_31 { pt3dadd( -118.184, -111.906, -136.356, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -118.565, -111.73, -137.49, 1.25 ) }
    dend_31 { pt3dadd( -119.512, -111.425, -140.325, 1.18 ) }
    dend_31 { pt3dadd( -119.54, -111.427, -140.415, 1.18 ) }
    dend_31 { pt3dadd( -119.981, -111.594, -141.705, 0.59 ) }
    dend_31 { pt3dadd( -120.27, -111.778, -142.425, 0.74 ) }
    dend_31 { pt3dadd( -120.598, -112.051, -143.197, 0.74 ) }
    dend_31 { pt3dadd( -121.688, -113.113, -145.76, 0.88 ) }
    dend_31 { pt3dadd( -122.584, -114.212, -148.61, 0.52 ) }
    dend_31 { pt3dadd( -122.796, -114.525, -149.45, 1.18 ) }
    dend_31 { pt3dadd( -123.099, -115.103, -151.054, 1.55 ) }
    dend_31 { pt3dadd( -123.237, -115.402, -151.906, 1.25 ) }
    dend_31 { pt3dadd( -123.72, -116.499, -154.969, 0.74 ) }
    dend_31 { pt3dadd( -124.637, -118.64, -160.724, 0.74 ) }
    dend_31 { pt3dadd( -124.74, -118.906, -161.437, 1.4 ) }
    dend_31 { pt3dadd( -125.188, -120.183, -164.99, 0.74 ) }
    dend_31 { pt3dadd( -125.213, -120.247, -165.182, 0.74 ) }
    dend_31 { pt3dadd( -125.371, -120.604, -166.355, 0.59 ) }
    dend_31 { pt3dadd( -125.39, -120.63, -166.447, 0.59 ) }
    dend_31 { pt3dadd( -126.418, -121.371, -169.226, 0.59 ) }
    dend_31 { pt3dadd( -126.482, -121.407, -169.368, 0.59 ) }
    dend_31 { pt3dadd( -127.148, -121.708, -170.666, 0.66 ) }
    dend_31 { pt3dadd( -127.538, -121.874, -171.438, 0.88 ) }
    dend_31 { pt3dadd( -128.931, -122.396, -174.202, 0.44 ) }
    dend_31 { pt3dadd( -129.123, -122.466, -174.536, 1.03 ) }
    dend_31 { pt3dadd( -130.294, -122.869, -176.007, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -31.9136, -194.58, -82.0343, 0.29 ) }
    dend_29 { pt3dadd( -33.3755, -195.141, -82.7838, 0.29 ) }
    dend_29 { pt3dadd( -34.2814, -195.454, -83.229, 0.29 ) }
    dend_29 { pt3dadd( -35.5677, -195.865, -83.968, 0.22 ) }
    dend_29 { pt3dadd( -36.131, -196.074, -84.3035, 0.81 ) }
    dend_29 { pt3dadd( -36.6826, -196.299, -84.6333, 0.81 ) }
    dend_29 { pt3dadd( -37.1414, -196.504, -84.9496, 0.81 ) }
    dend_29 { pt3dadd( -37.8976, -196.877, -85.5513, 0.52 ) }
    dend_29 { pt3dadd( -39.3369, -197.677, -86.848, 0.22 ) }
    dend_29 { pt3dadd( -40.2821, -198.265, -87.751, 0.22 ) }
    dend_29 { pt3dadd( -40.718, -198.565, -88.1885, 0.81 ) }
    dend_29 { pt3dadd( -41.9526, -199.474, -89.4548, 0.96 ) }
    dend_29 { pt3dadd( -42.2439, -199.714, -89.7986, 1.11 ) }
    dend_29 { pt3dadd( -43.1522, -200.59, -91.1228, 0.22 ) }
    dend_29 { pt3dadd( -43.5876, -201.038, -91.804, 0.22 ) }
    dend_29 { pt3dadd( -43.8278, -201.285, -92.1961, 0.74 ) }
    dend_29 { pt3dadd( -44.0922, -201.575, -92.6434, 0.96 ) }
    dend_29 { pt3dadd( -45.0239, -202.692, -94.3381, 0.59 ) }
    dend_29 { pt3dadd( -45.8661, -203.753, -96.0006, 0.29 ) }
    dend_29 { pt3dadd( -46.4141, -204.482, -97.282, 0.22 ) }
    dend_29 { pt3dadd( -46.5559, -204.667, -97.6316, 0.37 ) }
    dend_29 { pt3dadd( -47.2149, -205.475, -99.2674, 0.22 ) }
    dend_29 { pt3dadd( -47.7572, -206.128, -100.629, 0.81 ) }
    dend_29 { pt3dadd( -47.9974, -206.41, -101.207, 1.03 ) }
    dend_29 { pt3dadd( -48.7694, -207.442, -103.418, 0.37 ) }
    dend_29 { pt3dadd( -49.0212, -207.809, -104.231, 0.52 ) }
    dend_29 { pt3dadd( -49.6083, -208.678, -106.149, 0.29 ) }
    dend_29 { pt3dadd( -49.856, -209.02, -106.881, 0.66 ) }
    dend_29 { pt3dadd( -50.0705, -209.312, -107.467, 0.81 ) }
    dend_29 { pt3dadd( -50.9515, -210.686, -110.169, 0.29 ) }
    dend_29 { pt3dadd( -51.1652, -211.067, -110.857, 0.44 ) }
    dend_29 { pt3dadd( -51.1891, -211.122, -110.954, 0.44 ) }
    dend_29 { pt3dadd( -51.403, -211.641, -111.857, 0.59 ) }
    dend_29 { pt3dadd( -51.6154, -212.384, -113.096, 1.03 ) }
    dend_29 { pt3dadd( -51.7971, -213.853, -115.431, 1.03 ) }
    dend_29 { pt3dadd( -51.7802, -215.164, -117.407, 0.29 ) }
    dend_29 { pt3dadd( -51.6722, -216.383, -119.223, 0.88 ) }
    dend_29 { pt3dadd( -51.6275, -216.822, -119.877, 1.25 ) }
    dend_29 { pt3dadd( -51.37, -219.665, -124.156, 0.29 ) }
    dend_29 { pt3dadd( -51.2275, -221.434, -126.817, 0.37 ) }
    dend_29 { pt3dadd( -51.1711, -222.734, -128.711, 0.81 ) }
    dend_29 { pt3dadd( -51.1524, -223.921, -130.454, 0.44 ) }
    dend_29 { pt3dadd( -51.1919, -224.648, -131.511, 0.37 ) }
    dend_29 { pt3dadd( -51.3287, -225.674, -132.967, 0.37 ) }
    dend_29 { pt3dadd( -51.7338, -226.989, -134.687, 0.37 ) }
    dend_29 { pt3dadd( -52.176, -227.991, -135.918, 0.37 ) }
    dend_29 { pt3dadd( -52.5626, -228.816, -136.868, 1.11 ) }
    dend_29 { pt3dadd( -52.8223, -229.358, -137.471, 1.25 ) }
    dend_29 { pt3dadd( -53.4632, -230.617, -138.956, 0.81 ) }
    dend_29 { pt3dadd( -54.1098, -231.716, -140.277, 0.52 ) }
    dend_29 { pt3dadd( -54.4799, -232.189, -140.828, 0.52 ) }
    dend_29 { pt3dadd( -54.532, -232.252, -140.907, 0.52 ) }
    dend_29 { pt3dadd( -55.1964, -233.027, -141.881, 0.52 ) }
    dend_29 { pt3dadd( -56.3536, -234.322, -143.63, 0.44 ) }
    dend_29 { pt3dadd( -56.9086, -234.917, -144.44, 0.44 ) }
    dend_29 { pt3dadd( -57.7937, -235.939, -145.938, 0.74 ) }
    dend_29 { pt3dadd( -58.8697, -237.29, -147.956, 0.74 ) }
    dend_29 { pt3dadd( -58.9058, -237.339, -148.027, 0.74 ) }
    dend_29 { pt3dadd( -59.73, -238.603, -149.795, 0.37 ) }
    dend_29 { pt3dadd( -60.0351, -239.087, -150.479, 0.81 ) }
    dend_29 { pt3dadd( -61.0363, -240.572, -152.84, 0.29 ) }
    dend_29 { pt3dadd( -61.3844, -241.025, -153.656, 0.29 ) }
    dend_29 { pt3dadd( -61.7613, -241.462, -154.372, 0.88 ) }
    dend_29 { pt3dadd( -61.9142, -241.646, -154.663, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -31.9136, -194.58, -82.0343, 0.59 ) }
    dend_28 { pt3dadd( -31.5852, -197.087, -82.6688, 0.59 ) }
    dend_28 { pt3dadd( -31.4731, -198.127, -82.8922, 0.59 ) }
    dend_28 { pt3dadd( -31.4401, -198.418, -82.9453, 0.81 ) }
    dend_28 { pt3dadd( -31.3512, -199.093, -83.0451, 0.81 ) }
    dend_28 { pt3dadd( -31.205, -200.069, -83.1669, 0.15 ) }
    dend_28 { pt3dadd( -31.0492, -200.965, -83.2554, 0.15 ) }
    dend_28 { pt3dadd( -31.0373, -201.03, -83.2489, 0.15 ) }
    dend_28 { pt3dadd( -30.951, -201.408, -83.2098, 0.59 ) }
    dend_28 { pt3dadd( -30.8131, -201.967, -83.1538, 0.88 ) }
    dend_28 { pt3dadd( -30.7788, -202.111, -83.1409, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( -30.6919, -202.611, -83.1087, 0.88 ) }
    dend_28 { pt3dadd( -30.5941, -203.663, -83.0421, 0.52 ) }
    dend_28 { pt3dadd( -30.591, -204.523, -82.9962, 0.44 ) }
    dend_28 { pt3dadd( -30.6281, -205.003, -82.9761, 0.74 ) }
    dend_28 { pt3dadd( -30.7144, -205.608, -82.9549, 0.44 ) }
    dend_28 { pt3dadd( -30.8902, -206.441, -82.8954, 0.29 ) }
    dend_28 { pt3dadd( -31.0604, -207.006, -82.8437, 0.88 ) }
    dend_28 { pt3dadd( -31.2245, -207.529, -82.777, 0.96 ) }
    dend_28 { pt3dadd( -31.4475, -208.34, -82.6441, 0.81 ) }
    dend_28 { pt3dadd( -31.6418, -209.28, -82.4729, 0.29 ) }
    dend_28 { pt3dadd( -31.7569, -210.271, -82.2973, 0.44 ) }
    dend_28 { pt3dadd( -31.7767, -210.978, -82.1625, 0.22 ) }
    dend_28 { pt3dadd( -31.7001, -212.111, -81.9474, 0.22 ) }
    dend_28 { pt3dadd( -31.5703, -212.801, -81.804, 0.59 ) }
    dend_28 { pt3dadd( -31.3376, -213.582, -81.591, 0.81 ) }
    dend_28 { pt3dadd( -31.076, -214.263, -81.3788, 0.81 ) }
    dend_28 { pt3dadd( -30.8581, -214.784, -81.2144, 0.88 ) }
    dend_28 { pt3dadd( -30.507, -215.761, -80.899, 0.37 ) }
    dend_28 { pt3dadd( -30.3142, -216.745, -80.6163, 0.59 ) }
    dend_28 { pt3dadd( -30.2489, -217.713, -80.3913, 0.96 ) }
    dend_28 { pt3dadd( -30.2697, -218.4, -80.2613, 0.59 ) }
    dend_28 { pt3dadd( -30.3728, -219.228, -80.148, 0.29 ) }
    dend_28 { pt3dadd( -30.5899, -220.376, -80.1289, 0.29 ) }
    dend_28 { pt3dadd( -30.8939, -221.624, -80.2259, 0.74 ) }
    dend_28 { pt3dadd( -31.0797, -222.349, -80.3352, 0.96 ) }
    dend_28 { pt3dadd( -31.1049, -222.457, -80.3536, 0.96 ) }
    dend_28 { pt3dadd( -31.2278, -223.045, -80.4423, 0.96 ) }
    dend_28 { pt3dadd( -31.4342, -224.129, -80.5844, 0.44 ) }
    dend_28 { pt3dadd( -31.5646, -224.878, -80.6618, 0.29 ) }
    dend_28 { pt3dadd( -31.8076, -225.882, -80.7074, 0.59 ) }
    dend_28 { pt3dadd( -32.0884, -226.696, -80.6989, 1.03 ) }
    dend_28 { pt3dadd( -32.1949, -226.943, -80.6888, 1.11 ) }
    dend_28 { pt3dadd( -32.4293, -227.425, -80.6496, 0.96 ) }
    dend_28 { pt3dadd( -32.7312, -227.999, -80.5817, 0.96 ) }
    dend_28 { pt3dadd( -33.2071, -228.855, -80.4782, 0.37 ) }
    dend_28 { pt3dadd( -33.6814, -229.694, -80.39, 0.22 ) }
    dend_28 { pt3dadd( -33.9644, -230.236, -80.348, 0.44 ) }
    dend_28 { pt3dadd( -34.4063, -231.164, -80.2715, 0.44 ) }
    dend_28 { pt3dadd( -34.6604, -231.827, -80.2078, 0.66 ) }
    dend_28 { pt3dadd( -34.8409, -232.513, -80.1358, 0.88 ) }
    dend_28 { pt3dadd( -34.9767, -233.244, -80.0729, 0.29 ) }
    dend_28 { pt3dadd( -35.1311, -234.059, -79.9279, 0.29 ) }
    dend_28 { pt3dadd( -35.1477, -234.149, -79.9055, 0.29 ) }
    dend_28 { pt3dadd( -35.3103, -234.922, -79.6804, 0.29 ) }
    dend_28 { pt3dadd( -35.536, -235.905, -79.3878, 0.29 ) }
    dend_28 { pt3dadd( -35.805, -237.016, -79.0591, 0.29 ) }
    dend_28 { pt3dadd( -36.2272, -238.408, -78.5906, 0.59 ) }
    dend_28 { pt3dadd( -36.3671, -238.755, -78.4703, 0.74 ) }
    dend_28 { pt3dadd( -36.7869, -239.654, -78.1745, 0.29 ) }
    dend_28 { pt3dadd( -37.148, -240.352, -77.9676, 0.29 ) }
    dend_28 { pt3dadd( -37.1778, -240.419, -77.95, 0.29 ) }
    dend_28 { pt3dadd( -37.4154, -241.269, -77.7912, 0.81 ) }
    dend_28 { pt3dadd( -37.4943, -241.805, -77.7475, 1.25 ) }
    dend_28 { pt3dadd( -37.5413, -242.398, -77.7333, 0.88 ) }
    dend_28 { pt3dadd( -37.5326, -243.398, -77.7421, 0.52 ) }
    dend_28 { pt3dadd( -37.4542, -244.626, -77.7332, 0.29 ) }
    dend_28 { pt3dadd( -37.3949, -245.244, -77.7271, 0.66 ) }
    dend_28 { pt3dadd( -37.2628, -246.058, -77.7167, 0.74 ) }
    dend_28 { pt3dadd( -36.9452, -247.408, -77.6447, 0.22 ) }
    dend_28 { pt3dadd( -36.7192, -248.195, -77.5752, 0.22 ) }
    dend_28 { pt3dadd( -36.4579, -248.984, -77.4401, 0.88 ) }
    dend_28 { pt3dadd( -36.434, -249.061, -77.42, 0.88 ) }
    dend_28 { pt3dadd( -36.2299, -249.757, -77.1847, 0.81 ) }
    dend_28 { pt3dadd( -36.0161, -250.502, -76.9106, 0.74 ) }
    dend_28 { pt3dadd( -36.0007, -250.571, -76.8854, 0.74 ) }
    dend_28 { pt3dadd( -35.901, -251.579, -76.6133, 0.29 ) }
    dend_28 { pt3dadd( -35.8843, -252.567, -76.4264, 0.74 ) }
    dend_28 { pt3dadd( -35.9107, -252.906, -76.3776, 0.81 ) }
    dend_28 { pt3dadd( -36.0903, -253.863, -76.3161, 0.22 ) }
    dend_28 { pt3dadd( -36.2271, -254.336, -76.3223, 0.66 ) }
    dend_28 { pt3dadd( -36.3876, -254.815, -76.3589, 0.74 ) }
    dend_28 { pt3dadd( -36.4113, -254.875, -76.3688, 0.74 ) }
    dend_28 { pt3dadd( -36.716, -255.562, -76.5119, 0.74 ) }
    dend_28 { pt3dadd( -37.1177, -256.352, -76.7054, 0.22 ) }
    dend_28 { pt3dadd( -37.4757, -256.985, -76.9536, 0.22 ) }
    dend_28 { pt3dadd( -37.5034, -257.035, -76.9782, 0.22 ) }
    dend_28 { pt3dadd( -37.6727, -257.397, -77.1773, 0.66 ) }
    dend_28 { pt3dadd( -37.6942, -257.469, -77.2151, 0.66 ) }
    dend_28 { pt3dadd( -37.7526, -257.861, -77.4203, 0.66 ) }
    dend_28 { pt3dadd( -37.8656, -258.961, -77.9473, 0.52 ) }
    dend_28 { pt3dadd( -37.8695, -259.016, -77.9824, 0.52 ) }
    dend_28 { pt3dadd( -37.9425, -259.751, -78.4709, 0.22 ) }
    dend_28 { pt3dadd( -38.025, -260.348, -78.867, 1.03 ) }
    dend_28 { pt3dadd( -38.0721, -260.715, -79.1161, 1.11 ) }
    dend_28 { pt3dadd( -38.1592, -261.388, -79.5567, 0.88 ) }
    dend_28 { pt3dadd( -38.4842, -263.551, -80.8633, 0.22 ) }
    dend_28 { pt3dadd( -38.5636, -264.072, -81.1659, 0.88 ) }
    dend_28 { pt3dadd( -38.6554, -264.632, -81.494, 0.59 ) }
    dend_28 { pt3dadd( -38.7837, -265.469, -81.9586, 0.52 ) }
    dend_28 { pt3dadd( -38.8752, -266.231, -82.3268, 0.81 ) }
    dend_28 { pt3dadd( -38.8839, -266.793, -82.6123, 0.81 ) }
    dend_28 { pt3dadd( -38.7873, -267.991, -83.3254, 0.29 ) }
    dend_28 { pt3dadd( -38.7789, -268.041, -83.3603, 0.29 ) }
    dend_28 { pt3dadd( -38.6632, -268.476, -83.7137, 0.96 ) }
    dend_28 { pt3dadd( -38.5122, -268.902, -84.1083, 1.25 ) }
    dend_28 { pt3dadd( -37.6694, -270.822, -86.0511, 0.52 ) }
    dend_28 { pt3dadd( -37.0343, -272.08, -87.3942, 0.44 ) }
    dend_28 { pt3dadd( -36.8367, -272.425, -87.7637, 0.66 ) }
    dend_28 { pt3dadd( -36.2134, -273.446, -88.8305, 0.52 ) }
    dend_28 { pt3dadd( -35.4861, -274.548, -89.9377, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( -35.3012, -274.813, -90.1827, 0.59 ) }
    dend_28 { pt3dadd( -35.2232, -274.927, -90.2635, 0.59 ) }
    dend_28 { pt3dadd( -34.4381, -276.035, -90.899, 0.22 ) }
    dend_28 { pt3dadd( -34.3938, -276.099, -90.933, 0.22 ) }
    dend_28 { pt3dadd( -34.0877, -276.554, -91.0803, 0.59 ) }
    dend_28 { pt3dadd( -33.9927, -276.693, -91.0994, 0.59 ) }
    dend_28 { pt3dadd( -33.861, -276.882, -91.1283, 0.59 ) }
    dend_28 { pt3dadd( -33.8183, -276.943, -91.1361, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.88033, 143.72, -11.4153, 0.29 ) }
    dend_24 { pt3dadd( -6.70866, 144.442, -12.7457, 0.29 ) }
    dend_24 { pt3dadd( -6.66427, 144.926, -13.6489, 0.29 ) }
    dend_24 { pt3dadd( -6.6586, 145.585, -14.8878, 0.66 ) }
    dend_24 { pt3dadd( -6.6297, 146.16, -15.9734, 0.29 ) }
    dend_24 { pt3dadd( -6.61138, 146.451, -16.5183, 0.37 ) }
    dend_24 { pt3dadd( -6.57564, 147.057, -17.6437, 0.37 ) }
    dend_24 { pt3dadd( -6.58553, 147.718, -18.7982, 0.59 ) }
    dend_24 { pt3dadd( -6.58906, 148.054, -19.3776, 0.81 ) }
    dend_24 { pt3dadd( -6.61109, 148.629, -20.3598, 0.37 ) }
    dend_24 { pt3dadd( -6.63425, 148.834, -20.6679, 0.88 ) }
    dend_24 { pt3dadd( -6.6589, 149.165, -21.1143, 1.03 ) }
    dend_24 { pt3dadd( -6.68448, 149.64, -21.6763, 0.81 ) }
    dend_24 { pt3dadd( -6.71317, 150.057, -22.1161, 0.37 ) }
    dend_24 { pt3dadd( -6.72049, 150.118, -22.1682, 0.37 ) }
    dend_24 { pt3dadd( -6.83913, 150.847, -22.6622, 0.37 ) }
    dend_24 { pt3dadd( -6.85032, 150.935, -22.7129, 0.37 ) }
    dend_24 { pt3dadd( -7.02062, 151.665, -23.0473, 0.37 ) }
    dend_24 { pt3dadd( -7.04162, 151.73, -23.0706, 0.37 ) }
    dend_24 { pt3dadd( -7.43702, 152.709, -23.3847, 0.22 ) }
    dend_24 { pt3dadd( -7.67694, 153.249, -23.5516, 0.74 ) }
    dend_24 { pt3dadd( -7.70658, 153.313, -23.5695, 0.74 ) }
    dend_24 { pt3dadd( -8.38499, 154.805, -23.9796, 0.29 ) }
    dend_24 { pt3dadd( -8.52786, 155.106, -24.0544, 0.66 ) }
    dend_24 { pt3dadd( -8.72729, 155.518, -24.1588, 0.66 ) }
    dend_24 { pt3dadd( -9.0873, 156.246, -24.3541, 0.37 ) }
    dend_24 { pt3dadd( -9.32324, 156.769, -24.4902, 0.29 ) }
    dend_24 { pt3dadd( -9.51456, 157.301, -24.6254, 0.29 ) }
    dend_24 { pt3dadd( -9.70947, 158.094, -24.8143, 0.96 ) }
    dend_24 { pt3dadd( -9.72607, 158.16, -24.8305, 0.96 ) }
    dend_24 { pt3dadd( -9.82656, 158.594, -24.9194, 0.66 ) }
    dend_24 { pt3dadd( -9.97166, 159.258, -25.0405, 0.29 ) }
    dend_24 { pt3dadd( -10.1002, 159.914, -25.176, 0.29 ) }
    dend_24 { pt3dadd( -10.1097, 159.981, -25.1925, 0.29 ) }
    dend_24 { pt3dadd( -10.163, 160.652, -25.3741, 1.11 ) }
    dend_24 { pt3dadd( -10.1884, 161.296, -25.507, 1.47 ) }
    dend_24 { pt3dadd( -10.19, 161.472, -25.5333, 1.47 ) }
    dend_24 { pt3dadd( -10.1806, 162.373, -25.64, 0.66 ) }
    dend_24 { pt3dadd( -10.1712, 163.077, -25.71, 0.37 ) }
    dend_24 { pt3dadd( -10.1614, 163.961, -25.7943, 0.37 ) }
    dend_24 { pt3dadd( -10.0624, 165.339, -25.9374, 0.29 ) }
    dend_24 { pt3dadd( -9.90154, 166.796, -26.1172, 0.29 ) }
    dend_24 { pt3dadd( -9.88347, 166.946, -26.1352, 0.29 ) }
    dend_24 { pt3dadd( -9.75031, 167.882, -26.2313, 0.96 ) }
    dend_24 { pt3dadd( -9.67015, 168.387, -26.2831, 1.18 ) }
    dend_24 { pt3dadd( -9.32617, 170.035, -26.505, 0.37 ) }
    dend_24 { pt3dadd( -9.1673, 170.578, -26.6347, 0.37 ) }
    dend_24 { pt3dadd( -9.76903, 178.76, -32.3024, 0.37 ) }
    dend_24 { pt3dadd( -8.80436, 187.763, -36.5542, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -6.88033, 143.72, -11.4153, 1.03 ) }
    dend_21 { pt3dadd( -7.05713, 144.287, -11.3971, 1.03 ) }
    dend_21 { pt3dadd( -7.4742, 145.64, -11.4174, 1.4 ) }
    dend_21 { pt3dadd( -7.93591, 147.341, -11.4792, 1.4 ) }
    dend_21 { pt3dadd( -7.9616, 147.447, -11.4837, 1.4 ) }
    dend_21 { pt3dadd( -8.28387, 148.992, -11.5548, 1.25 ) }
    dend_21 { pt3dadd( -8.58953, 150.629, -11.5937, 0.81 ) }
    dend_21 { pt3dadd( -8.61015, 150.736, -11.5906, 0.81 ) }
    dend_21 { pt3dadd( -8.83512, 151.955, -11.5207, 0.96 ) }
    dend_21 { pt3dadd( -8.89944, 152.385, -11.4926, 0.96 ) }
    dend_21 { pt3dadd( -9.08002, 153.598, -11.393, 1.18 ) }
    dend_21 { pt3dadd( -9.28352, 154.989, -11.2308, 0.96 ) }
    dend_21 { pt3dadd( -9.5314, 156.95, -11.0758, 1.18 ) }
    dend_21 { pt3dadd( -9.55041, 157.111, -11.0708, 1.18 ) }
    dend_21 { pt3dadd( -9.66618, 158.42, -11.1094, 1.18 ) }
    dend_21 { pt3dadd( -9.69578, 159.903, -11.2591, 0.96 ) }
    dend_21 { pt3dadd( -9.68915, 160.036, -11.2823, 0.96 ) }
    dend_21 { pt3dadd( -9.48351, 161.821, -11.6692, 1.47 ) }
    dend_21 { pt3dadd( -9.46556, 161.926, -11.6939, 1.47 ) }
    dend_21 { pt3dadd( -9.15353, 163.573, -12.0001, 1.18 ) }
    dend_21 { pt3dadd( -8.76919, 165.277, -12.2243, 0.81 ) }
    dend_21 { pt3dadd( -8.72267, 165.468, -12.2315, 0.81 ) }
    dend_21 { pt3dadd( -8.54741, 166.665, -12.1257, 0.74 ) }
    dend_21 { pt3dadd( -8.54717, 166.761, -12.1041, 0.74 ) }
    dend_21 { pt3dadd( -8.66204, 167.581, -11.9134, 0.74 ) }
    dend_21 { pt3dadd( -8.69379, 167.683, -11.894, 0.74 ) }
    dend_21 { pt3dadd( -9.04054, 168.529, -11.82, 0.81 ) }
    dend_21 { pt3dadd( -9.87404, 170.367, -11.8501, 1.18 ) }
    dend_21 { pt3dadd( -10.2297, 171.101, -11.9202, 1.4 ) }
    dend_21 { pt3dadd( -10.8692, 172.42, -12.101, 0.96 ) }
    dend_21 { pt3dadd( -11.4799, 173.691, -12.3161, 0.96 ) }
    dend_21 { pt3dadd( -11.9934, 174.821, -12.5399, 0.96 ) }
    dend_21 { pt3dadd( -12.5601, 176.23, -12.8824, 0.96 ) }
    dend_21 { pt3dadd( -12.5983, 176.329, -12.9029, 0.96 ) }
    dend_21 { pt3dadd( -12.9074, 177.07, -12.9919, 0.96 ) }
    dend_21 { pt3dadd( -13.1429, 177.624, -13.0186, 1.18 ) }
    dend_21 { pt3dadd( -13.2574, 177.888, -13.0129, 1.18 ) }
    dend_21 { pt3dadd( -13.7293, 178.987, -12.973, 1.18 ) }
    dend_21 { pt3dadd( -14.6331, 181.202, -12.9206, 0.96 ) }
    dend_21 { pt3dadd( -15.3791, 183.019, -12.8812, 0.66 ) }
    dend_21 { pt3dadd( -15.7421, 183.889, -12.866, 0.66 ) }
    dend_21 { pt3dadd( -16.211, 185.049, -12.8771, 0.88 ) }
    dend_21 { pt3dadd( -16.6581, 186.229, -12.9082, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -17.0499, 187.348, -12.9583, 1.03 ) }
    dend_21 { pt3dadd( -17.4034, 188.56, -13.0622, 1.03 ) }
    dend_21 { pt3dadd( -17.4303, 188.651, -13.0686, 1.03 ) }
    dend_21 { pt3dadd( -17.7211, 189.687, -13.1599, 1.11 ) }
    dend_21 { pt3dadd( -18.0019, 190.782, -13.2907, 1.11 ) }
    dend_21 { pt3dadd( -18.041, 190.938, -13.3127, 1.11 ) }
    dend_21 { pt3dadd( -18.4217, 192.539, -13.5869, 0.96 ) }
    dend_21 { pt3dadd( -18.7097, 193.656, -13.7661, 0.96 ) }
    dend_21 { pt3dadd( -19.1116, 195.174, -13.9651, 1.4 ) }
    dend_21 { pt3dadd( -19.3969, 196.241, -14.0783, 1.03 ) }
    dend_21 { pt3dadd( -19.7237, 197.571, -14.195, 1.25 ) }
    dend_21 { pt3dadd( -20.0592, 199.212, -14.2822, 0.88 ) }
    dend_21 { pt3dadd( -20.288, 200.751, -14.289, 0.88 ) }
    dend_21 { pt3dadd( -20.4347, 202.089, -14.226, 0.88 ) }
    dend_21 { pt3dadd( -20.4512, 202.398, -14.1937, 0.88 ) }
    dend_21 { pt3dadd( -20.4593, 203.514, -14.0569, 0.88 ) }
    dend_21 { pt3dadd( -20.4345, 205.038, -13.9148, 0.81 ) }
    dend_21 { pt3dadd( -20.383, 206.444, -13.8444, 0.81 ) }
    dend_21 { pt3dadd( -20.3804, 206.54, -13.8483, 0.81 ) }
    dend_21 { pt3dadd( -20.4428, 207.47, -13.9044, 0.96 ) }
    dend_21 { pt3dadd( -20.6865, 209.062, -14.0574, 0.96 ) }
    dend_21 { pt3dadd( -21.0586, 210.767, -14.2701, 1.03 ) }
    dend_21 { pt3dadd( -21.0799, 210.849, -14.2816, 1.03 ) }
    dend_21 { pt3dadd( -21.6795, 212.916, -14.6092, 1.03 ) }
    dend_21 { pt3dadd( -22.1709, 214.629, -14.8843, 1.03 ) }
    dend_21 { pt3dadd( -22.6321, 216.339, -15.1407, 1.03 ) }
    dend_21 { pt3dadd( -22.7808, 216.984, -15.2162, 1.03 ) }
    dend_21 { pt3dadd( -22.9183, 217.794, -15.2809, 1.03 ) }
    dend_21 { pt3dadd( -23.0742, 219.098, -15.3634, 0.88 ) }
    dend_21 { pt3dadd( -23.1444, 220.693, -15.4316, 0.88 ) }
    dend_21 { pt3dadd( -23.102, 222.065, -15.4959, 1.11 ) }
    dend_21 { pt3dadd( -23.045, 222.627, -15.5164, 1.11 ) }
    dend_21 { pt3dadd( -22.841, 224.13, -15.6032, 1.11 ) }
    dend_21 { pt3dadd( -22.8055, 224.332, -15.617, 1.11 ) }
    dend_21 { pt3dadd( -22.5867, 225.377, -15.6999, 0.96 ) }
    dend_21 { pt3dadd( -22.5694, 225.456, -15.7092, 0.96 ) }
    dend_21 { pt3dadd( -22.2372, 227.111, -15.9695, 0.88 ) }
    dend_21 { pt3dadd( -22.0202, 228.363, -16.2023, 0.66 ) }
    dend_21 { pt3dadd( -21.9929, 228.555, -16.2392, 0.66 ) }
    dend_21 { pt3dadd( -21.8438, 229.724, -16.4346, 0.66 ) }
    dend_21 { pt3dadd( -21.8319, 229.832, -16.4482, 0.66 ) }
    dend_21 { pt3dadd( -21.7013, 231.077, -16.513, 0.96 ) }
    dend_21 { pt3dadd( -21.683, 231.27, -16.5062, 0.96 ) }
    dend_21 { pt3dadd( -21.5063, 232.506, -16.407, 0.96 ) }
    dend_21 { pt3dadd( -21.4686, 232.734, -16.3841, 0.96 ) }
    dend_21 { pt3dadd( -21.3584, 233.393, -16.3146, 0.96 ) }
    dend_21 { pt3dadd( -21.2086, 234.652, -16.1444, 0.96 ) }
    dend_21 { pt3dadd( -21.1313, 235.565, -16.0, 1.18 ) }
    dend_21 { pt3dadd( -21.0816, 236.639, -15.839, 0.74 ) }
    dend_21 { pt3dadd( -21.0857, 237.913, -15.6906, 0.74 ) }
    dend_21 { pt3dadd( -21.1389, 238.885, -15.6257, 1.18 ) }
    dend_21 { pt3dadd( -21.3339, 240.388, -15.6512, 0.66 ) }
    dend_21 { pt3dadd( -21.5652, 241.508, -15.7759, 0.66 ) }
    dend_21 { pt3dadd( -21.912, 242.843, -16.0276, 0.66 ) }
    dend_21 { pt3dadd( -22.3098, 244.146, -16.3583, 1.18 ) }
    dend_21 { pt3dadd( -22.5995, 245.08, -16.6599, 1.18 ) }
    dend_21 { pt3dadd( -23.1363, 246.897, -17.3501, 0.96 ) }
    dend_21 { pt3dadd( -23.4975, 248.135, -17.8377, 0.96 ) }
    dend_21 { pt3dadd( -23.7686, 249.037, -18.1639, 0.66 ) }
    dend_21 { pt3dadd( -23.7903, 249.112, -18.1873, 0.66 ) }
    dend_21 { pt3dadd( -24.1963, 250.588, -18.5723, 0.59 ) }
    dend_21 { pt3dadd( -24.4423, 251.535, -18.7738, 1.03 ) }
    dend_21 { pt3dadd( -24.963, 253.283, -19.0175, 0.81 ) }
    dend_21 { pt3dadd( -25.2809, 254.218, -19.1127, 1.03 ) }
    dend_21 { pt3dadd( -25.35, 254.401, -19.1308, 1.03 ) }
    dend_21 { pt3dadd( -25.8079, 255.543, -19.2591, 1.03 ) }
    dend_21 { pt3dadd( -25.9761, 255.927, -19.3091, 1.03 ) }
    dend_21 { pt3dadd( -26.6469, 257.468, -19.5671, 0.96 ) }
    dend_21 { pt3dadd( -27.1777, 258.856, -19.841, 0.96 ) }
    dend_21 { pt3dadd( -27.5248, 259.92, -20.0262, 0.96 ) }
    dend_21 { pt3dadd( -27.8174, 261.001, -20.1895, 1.11 ) }
    dend_21 { pt3dadd( -27.9733, 261.791, -20.2858, 1.33 ) }
    dend_21 { pt3dadd( -27.9872, 261.898, -20.2978, 1.33 ) }
    dend_21 { pt3dadd( -28.0219, 263.353, -20.4381, 0.88 ) }
    dend_21 { pt3dadd( -27.9943, 264.477, -20.4863, 1.11 ) }
    dend_21 { pt3dadd( -27.983, 264.683, -20.476, 1.11 ) }
    dend_21 { pt3dadd( -27.9017, 265.588, -20.3416, 1.11 ) }
    dend_21 { pt3dadd( -27.8899, 265.679, -20.3196, 1.11 ) }
    dend_21 { pt3dadd( -27.8057, 266.611, -19.9746, 0.88 ) }
    dend_21 { pt3dadd( -27.8, 266.697, -19.9348, 0.81 ) }
    dend_21 { pt3dadd( -27.7481, 267.646, -19.4937, 1.03 ) }
    dend_21 { pt3dadd( -27.7268, 268.34, -19.1744, 1.03 ) }
    dend_21 { pt3dadd( -27.7223, 269.49, -18.6853, 0.81 ) }
    dend_21 { pt3dadd( -27.7665, 271.228, -18.0472, 0.74 ) }
    dend_21 { pt3dadd( -27.8343, 272.489, -17.6693, 0.74 ) }
    dend_21 { pt3dadd( -27.9537, 273.764, -17.3429, 0.88 ) }
    dend_21 { pt3dadd( -28.0367, 274.477, -17.1936, 0.88 ) }
    dend_21 { pt3dadd( -28.2074, 275.537, -17.0163, 0.88 ) }
    dend_21 { pt3dadd( -28.3317, 276.234, -16.931, 0.88 ) }
    dend_21 { pt3dadd( -28.4574, 277.192, -16.8389, 0.88 ) }
    dend_21 { pt3dadd( -28.5797, 278.562, -16.6669, 0.88 ) }
    dend_21 { pt3dadd( -28.62, 279.268, -16.5311, 0.88 ) }
    dend_21 { pt3dadd( -28.6242, 279.469, -16.4873, 0.88 ) }
    dend_21 { pt3dadd( -28.6151, 280.71, -16.1825, 0.88 ) }
    dend_21 { pt3dadd( -28.5808, 282.011, -15.8731, 0.88 ) }
    dend_21 { pt3dadd( -28.5127, 283.435, -15.5493, 0.44 ) }
    dend_21 { pt3dadd( -28.4799, 284.734, -15.2829, 0.81 ) }
    dend_21 { pt3dadd( -28.5099, 285.713, -15.1135, 1.25 ) }
    dend_21 { pt3dadd( -28.5984, 286.94, -14.9314, 0.96 ) }
    dend_21 { pt3dadd( -28.7948, 288.53, -14.7637, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( -28.8758, 289.019, -14.7328, 1.47 ) }
    dend_21 { pt3dadd( -29.2524, 291.067, -14.698, 1.11 ) }
    dend_21 { pt3dadd( -29.4803, 292.297, -14.7409, 0.96 ) }
    dend_21 { pt3dadd( -29.4982, 292.391, -14.7459, 0.96 ) }
    dend_21 { pt3dadd( -29.668, 293.475, -14.8207, 0.96 ) }
    dend_21 { pt3dadd( -29.677, 293.56, -14.8274, 0.96 ) }
    dend_21 { pt3dadd( -29.7426, 294.944, -14.9202, 0.96 ) }
    dend_21 { pt3dadd( -29.7342, 295.137, -14.933, 0.96 ) }
    dend_21 { pt3dadd( -29.5774, 296.941, -15.0237, 0.96 ) }
    dend_21 { pt3dadd( -29.2788, 298.996, -15.1486, 0.96 ) }
    dend_21 { pt3dadd( -28.9287, 300.838, -15.2697, 0.96 ) }
    dend_21 { pt3dadd( -28.7167, 301.95, -15.3197, 0.96 ) }
    dend_21 { pt3dadd( -28.5155, 302.943, -15.3449, 0.96 ) }
    dend_21 { pt3dadd( -28.2394, 304.292, -15.3535, 1.11 ) }
    dend_21 { pt3dadd( -27.8236, 306.305, -15.3244, 1.11 ) }
    dend_21 { pt3dadd( -27.8113, 306.39, -15.3181, 1.11 ) }
    dend_21 { pt3dadd( -27.7252, 308.2, -15.0214, 1.11 ) }
    dend_21 { pt3dadd( -27.7302, 308.293, -15.0006, 1.11 ) }
    dend_21 { pt3dadd( -27.8899, 309.469, -14.6707, 1.11 ) }
    dend_21 { pt3dadd( -28.0641, 310.437, -14.3662, 1.18 ) }
    dend_21 { pt3dadd( -28.4317, 312.087, -13.8207, 0.88 ) }
    dend_21 { pt3dadd( -28.6563, 313.244, -13.4701, 0.66 ) }
    dend_21 { pt3dadd( -28.6714, 313.338, -13.4476, 0.66 ) }
    dend_21 { pt3dadd( -28.8398, 314.217, -13.315, 0.81 ) }
    dend_21 { pt3dadd( -29.0672, 315.341, -13.238, 0.81 ) }
    dend_21 { pt3dadd( -29.0841, 315.438, -13.2377, 0.81 ) }
    dend_21 { pt3dadd( -29.2174, 316.488, -13.3049, 0.66 ) }
    dend_21 { pt3dadd( -29.3206, 317.591, -13.3971, 1.18 ) }
    dend_21 { pt3dadd( -29.461, 319.339, -13.5468, 1.03 ) }
    dend_21 { pt3dadd( -29.5333, 320.445, -13.6441, 0.88 ) }
    dend_21 { pt3dadd( -29.5724, 321.848, -13.781, 0.74 ) }
    dend_21 { pt3dadd( -29.559, 323.449, -13.9429, 1.25 ) }
    dend_21 { pt3dadd( -29.5223, 324.299, -14.0397, 1.03 ) }
    dend_21 { pt3dadd( -29.5062, 324.502, -14.0603, 1.03 ) }
    dend_21 { pt3dadd( -29.3279, 325.902, -14.2101, 1.03 ) }
    dend_21 { pt3dadd( -29.2466, 327.037, -14.288, 1.03 ) }
    dend_21 { pt3dadd( -29.2448, 327.136, -14.2843, 1.03 ) }
    dend_21 { pt3dadd( -29.2929, 328.597, -14.0732, 1.25 ) }
    dend_21 { pt3dadd( -29.3002, 328.689, -14.0482, 1.25 ) }
    dend_21 { pt3dadd( -29.4507, 330.204, -13.5096, 1.4 ) }
    dend_21 { pt3dadd( -29.7404, 332.54, -12.4932, 0.74 ) }
    dend_21 { pt3dadd( -29.9398, 333.966, -11.8302, 0.59 ) }
    dend_21 { pt3dadd( -29.9563, 334.09, -11.7713, 0.59 ) }
    dend_21 { pt3dadd( -30.1362, 335.761, -10.9539, 0.59 ) }
    dend_21 { pt3dadd( -30.2026, 336.701, -10.54, 0.81 ) }
    dend_21 { pt3dadd( -30.2052, 336.79, -10.5074, 0.81 ) }
    dend_21 { pt3dadd( -30.1469, 337.877, -10.2832, 0.81 ) }
    dend_21 { pt3dadd( -30.1305, 338.166, -10.2537, 0.81 ) }
    dend_21 { pt3dadd( -30.0588, 339.366, -10.196, 1.03 ) }
    dend_21 { pt3dadd( -29.9712, 340.562, -10.1977, 1.25 ) }
    dend_21 { pt3dadd( -29.9271, 341.48, -10.1469, 1.25 ) }
    dend_21 { pt3dadd( -29.9241, 341.561, -10.1386, 1.25 ) }
    dend_21 { pt3dadd( -29.9478, 342.74, -9.93034, 0.96 ) }
    dend_21 { pt3dadd( -30.0494, 344.453, -9.54741, 0.74 ) }
    dend_21 { pt3dadd( -30.1622, 345.225, -9.32922, 0.74 ) }
    dend_21 { pt3dadd( -30.51, 346.95, -8.77442, 0.88 ) }
    dend_21 { pt3dadd( -30.7158, 347.807, -8.4956, 0.74 ) }
    dend_21 { pt3dadd( -31.1814, 349.607, -7.92951, 0.74 ) }
    dend_21 { pt3dadd( -31.437, 350.508, -7.66496, 0.74 ) }
    dend_21 { pt3dadd( -31.9738, 352.292, -7.21212, 0.96 ) }
    dend_21 { pt3dadd( -32.2821, 353.35, -7.00488, 1.03 ) }
    dend_21 { pt3dadd( -32.564, 354.404, -6.88866, 1.03 ) }
    dend_21 { pt3dadd( -32.8039, 355.454, -6.82159, 1.18 ) }
    dend_21 { pt3dadd( -32.9644, 356.596, -6.80897, 0.59 ) }
    dend_21 { pt3dadd( -33.02, 357.273, -6.81125, 0.37 ) }
    dend_21 { pt3dadd( -33.0184, 357.817, -6.82427, 0.81 ) }
    dend_21 { pt3dadd( -32.9925, 358.385, -6.83632, 0.81 ) }
    dend_21 { pt3dadd( -32.9229, 359.446, -6.87455, 0.81 ) }
    dend_21 { pt3dadd( -32.871, 360.429, -6.9552, 0.81 ) }
    dend_21 { pt3dadd( -32.8621, 361.245, -7.08077, 0.88 ) }
    dend_21 { pt3dadd( -32.9026, 361.895, -7.24094, 0.81 ) }
    dend_21 { pt3dadd( -33.0475, 362.939, -7.59212, 0.74 ) }
    dend_21 { pt3dadd( -33.2552, 363.959, -8.00821, 0.74 ) }
    dend_21 { pt3dadd( -33.5387, 364.996, -8.50643, 0.96 ) }
    dend_21 { pt3dadd( -33.867, 366.028, -9.0336, 0.44 ) }
    dend_21 { pt3dadd( -34.2051, 367.005, -9.54008, 0.44 ) }
    dend_21 { pt3dadd( -34.5379, 367.937, -10.0024, 0.96 ) }
    dend_21 { pt3dadd( -34.5731, 368.032, -10.0464, 0.96 ) }
    dend_21 { pt3dadd( -34.8046, 368.735, -10.3377, 0.96 ) }
    dend_21 { pt3dadd( -35.0611, 369.635, -10.6644, 0.96 ) }
    dend_21 { pt3dadd( -35.1331, 369.904, -10.7384, 0.96 ) }
    dend_21 { pt3dadd( -35.393, 370.73, -10.9594, 0.81 ) }
    dend_21 { pt3dadd( -35.5015, 371.005, -11.0144, 0.81 ) }
    dend_21 { pt3dadd( -36.0489, 372.214, -11.2226, 0.81 ) }
    dend_21 { pt3dadd( -36.0892, 372.298, -11.2345, 0.81 ) }
    dend_21 { pt3dadd( -36.6385, 373.409, -11.3623, 0.96 ) }
    dend_21 { pt3dadd( -37.2418, 374.687, -11.478, 0.81 ) }
    dend_21 { pt3dadd( -37.9979, 376.355, -11.581, 0.81 ) }
    dend_21 { pt3dadd( -38.0335, 376.444, -11.5841, 0.81 ) }
    dend_21 { pt3dadd( -38.4016, 377.602, -11.5856, 0.81 ) }
    dend_21 { pt3dadd( -38.4211, 377.696, -11.5854, 0.81 ) }
    dend_21 { pt3dadd( -38.4314, 378.81, -11.639, 0.59 ) }
    dend_21 { pt3dadd( -38.4208, 378.953, -11.6461, 0.59 ) }
    dend_21 { pt3dadd( -38.3043, 379.737, -11.7363, 0.59 ) }
    dend_21 { pt3dadd( -38.1178, 380.851, -11.8735, 0.59 ) }
    dend_21 { pt3dadd( -37.8523, 382.157, -12.0571, 0.81 ) }
    dend_21 { pt3dadd( -37.4148, 384.041, -12.3398, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 18.7081, 83.7281, -49.3462, 0.52 ) }
    dend_17 { pt3dadd( 20.6251, 85.1491, -50.0251, 0.52 ) }
    dend_17 { pt3dadd( 20.6718, 85.1893, -50.0441, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 21.5308, 86.1219, -50.4527, 0.44 ) }
    dend_17 { pt3dadd( 21.5791, 86.1872, -50.4808, 0.44 ) }
    dend_17 { pt3dadd( 22.0208, 86.7637, -50.7343, 0.88 ) }
    dend_17 { pt3dadd( 22.4711, 87.3045, -50.9506, 1.11 ) }
    dend_17 { pt3dadd( 22.5137, 87.3623, -50.9709, 1.11 ) }
    dend_17 { pt3dadd( 23.088, 88.0462, -51.1725, 1.03 ) }
    dend_17 { pt3dadd( 23.9941, 88.999, -51.3941, 0.37 ) }
    dend_17 { pt3dadd( 25.2385, 90.0509, -51.6155, 0.44 ) }
    dend_17 { pt3dadd( 25.9495, 90.5543, -51.7005, 0.44 ) }
    dend_17 { pt3dadd( 26.0645, 90.6316, -51.7132, 0.44 ) }
    dend_17 { pt3dadd( 26.6936, 91.068, -51.8409, 0.44 ) }
    dend_17 { pt3dadd( 26.7683, 91.1273, -51.8709, 0.44 ) }
    dend_17 { pt3dadd( 27.677, 92.0095, -52.4423, 0.96 ) }
    dend_17 { pt3dadd( 27.9177, 92.3348, -52.6714, 1.33 ) }
    dend_17 { pt3dadd( 28.3783, 93.0867, -53.1975, 1.18 ) }
    dend_17 { pt3dadd( 28.9892, 94.2189, -53.9661, 0.81 ) }
    dend_17 { pt3dadd( 29.5391, 95.4436, -54.7415, 0.37 ) }
    dend_17 { pt3dadd( 29.5678, 95.5142, -54.7821, 0.37 ) }
    dend_17 { pt3dadd( 29.8025, 96.2295, -55.1328, 0.66 ) }
    dend_17 { pt3dadd( 29.9732, 96.7049, -55.3379, 0.88 ) }
    dend_17 { pt3dadd( 30.0271, 96.8638, -55.3912, 0.88 ) }
    dend_17 { pt3dadd( 30.2772, 97.5981, -55.6049, 0.88 ) }
    dend_17 { pt3dadd( 30.5958, 98.5159, -55.8812, 0.74 ) }
    dend_17 { pt3dadd( 30.8538, 99.3115, -56.1562, 0.59 ) }
    dend_17 { pt3dadd( 31.1821, 100.42, -56.5836, 1.03 ) }
    dend_17 { pt3dadd( 31.382, 101.265, -56.9455, 0.29 ) }
    dend_17 { pt3dadd( 31.5516, 102.242, -57.3687, 0.81 ) }
    dend_17 { pt3dadd( 31.6011, 102.744, -57.5867, 0.88 ) }
    dend_17 { pt3dadd( 31.6055, 103.326, -57.8273, 0.96 ) }
    dend_17 { pt3dadd( 31.5964, 103.903, -58.072, 0.66 ) }
    dend_17 { pt3dadd( 31.5424, 104.929, -58.4823, 0.22 ) }
    dend_17 { pt3dadd( 31.5002, 105.888, -58.8432, 1.62 ) }
    dend_17 { pt3dadd( 31.4697, 106.555, -59.0663, 1.99 ) }
    dend_17 { pt3dadd( 31.4389, 107.153, -59.2507, 1.77 ) }
    dend_17 { pt3dadd( 31.3423, 108.397, -59.6134, 1.25 ) }
    dend_17 { pt3dadd( 31.2317, 109.32, -59.8584, 0.81 ) }
    dend_17 { pt3dadd( 31.1184, 110.027, -60.0239, 0.66 ) }
    dend_17 { pt3dadd( 30.9669, 110.777, -60.1883, 0.81 ) }
    dend_17 { pt3dadd( 30.7604, 111.668, -60.3551, 0.29 ) }
    dend_17 { pt3dadd( 30.475, 112.724, -60.5175, 0.29 ) }
    dend_17 { pt3dadd( 30.2921, 113.272, -60.5687, 0.44 ) }
    dend_17 { pt3dadd( 30.2684, 113.345, -60.5742, 0.44 ) }
    dend_17 { pt3dadd( 30.0082, 114.176, -60.6448, 0.59 ) }
    dend_17 { pt3dadd( 29.8514, 114.738, -60.6997, 1.11 ) }
    dend_17 { pt3dadd( 29.6987, 115.363, -60.7757, 1.11 ) }
    dend_17 { pt3dadd( 29.5169, 116.165, -60.882, 0.88 ) }
    dend_17 { pt3dadd( 29.265, 117.324, -61.0531, 0.52 ) }
    dend_17 { pt3dadd( 28.9882, 118.62, -61.2513, 0.52 ) }
    dend_17 { pt3dadd( 28.7423, 119.815, -61.4366, 0.66 ) }
    dend_17 { pt3dadd( 28.5533, 120.806, -61.5914, 0.29 ) }
    dend_17 { pt3dadd( 28.3968, 121.765, -61.7399, 0.81 ) }
    dend_17 { pt3dadd( 28.3878, 121.843, -61.7515, 0.81 ) }
    dend_17 { pt3dadd( 28.3646, 122.357, -61.8189, 1.03 ) }
    dend_17 { pt3dadd( 28.3742, 122.539, -61.8384, 1.03 ) }
    dend_17 { pt3dadd( 28.4465, 123.161, -61.9078, 1.03 ) }
    dend_17 { pt3dadd( 28.5538, 123.854, -61.9882, 0.96 ) }
    dend_17 { pt3dadd( 28.6406, 124.462, -62.0834, 0.66 ) }
    dend_17 { pt3dadd( 28.7044, 125.246, -62.2511, 0.52 ) }
    dend_17 { pt3dadd( 28.6936, 125.774, -62.41, 0.44 ) }
    dend_17 { pt3dadd( 28.5947, 126.745, -62.765, 0.44 ) }
    dend_17 { pt3dadd( 28.561, 126.892, -62.8312, 0.44 ) }
    dend_17 { pt3dadd( 28.366, 127.425, -63.1063, 0.37 ) }
    dend_17 { pt3dadd( 28.0456, 128.067, -63.467, 0.37 ) }
    dend_17 { pt3dadd( 27.5662, 128.875, -63.9155, 1.03 ) }
    dend_17 { pt3dadd( 27.5316, 128.935, -63.9465, 1.03 ) }
    dend_17 { pt3dadd( 27.2548, 129.464, -64.1896, 1.18 ) }
    dend_17 { pt3dadd( 27.0064, 130.008, -64.4075, 0.59 ) }
    dend_17 { pt3dadd( 26.759, 130.658, -64.6243, 0.37 ) }
    dend_17 { pt3dadd( 26.5378, 131.39, -64.824, 0.29 ) }
    dend_17 { pt3dadd( 26.2752, 132.39, -65.0241, 0.22 ) }
    dend_17 { pt3dadd( 26.1501, 132.869, -65.1074, 0.44 ) }
    dend_17 { pt3dadd( 26.11, 133.03, -65.1317, 0.44 ) }
    dend_17 { pt3dadd( 25.8993, 133.699, -65.1767, 0.44 ) }
    dend_17 { pt3dadd( 25.8708, 133.769, -65.1731, 0.44 ) }
    dend_17 { pt3dadd( 25.412, 134.753, -65.0521, 0.74 ) }
    dend_17 { pt3dadd( 25.017, 135.526, -64.93, 1.33 ) }
    dend_17 { pt3dadd( 24.5142, 136.482, -64.7576, 1.4 ) }
    dend_17 { pt3dadd( 23.7287, 137.973, -64.4793, 0.52 ) }
    dend_17 { pt3dadd( 23.2241, 138.94, -64.3088, 0.59 ) }
    dend_17 { pt3dadd( 22.8618, 139.658, -64.2054, 0.74 ) }
    dend_17 { pt3dadd( 22.6328, 140.151, -64.1562, 0.74 ) }
    dend_17 { pt3dadd( 22.5986, 140.233, -64.1533, 0.74 ) }
    dend_17 { pt3dadd( 22.3845, 140.821, -64.1867, 0.44 ) }
    dend_17 { pt3dadd( 22.1506, 141.644, -64.3437, 0.52 ) }
    dend_17 { pt3dadd( 22.0195, 142.188, -64.4649, 0.66 ) }
    dend_17 { pt3dadd( 21.897, 142.682, -64.5549, 0.44 ) }
    dend_17 { pt3dadd( 21.7233, 143.368, -64.6605, 0.22 ) }
    dend_17 { pt3dadd( 21.4663, 144.326, -64.7982, 0.66 ) }
    dend_17 { pt3dadd( 21.3355, 144.799, -64.8773, 0.88 ) }
    dend_17 { pt3dadd( 21.1473, 145.458, -65.0021, 0.29 ) }
    dend_17 { pt3dadd( 20.9089, 146.249, -65.1688, 0.22 ) }
    dend_17 { pt3dadd( 20.7454, 146.774, -65.2913, 0.37 ) }
    dend_17 { pt3dadd( 20.5879, 147.309, -65.4458, 0.52 ) }
    dend_17 { pt3dadd( 20.3852, 148.117, -65.7435, 0.29 ) }
    dend_17 { pt3dadd( 20.291, 148.541, -65.9068, 0.59 ) }
    dend_17 { pt3dadd( 20.2592, 148.706, -65.9623, 0.59 ) }
    dend_17 { pt3dadd( 20.1981, 149.167, -66.0783, 0.59 ) }
    dend_17 { pt3dadd( 20.1906, 149.242, -66.0902, 0.59 ) }
    dend_17 { pt3dadd( 20.1262, 149.942, -66.1597, 0.59 ) }
    dend_17 { pt3dadd( 20.0043, 150.982, -66.1936, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( 19.8872, 151.834, -66.2095, 0.59 ) }
    dend_17 { pt3dadd( 19.7783, 152.54, -66.2235, 1.03 ) }
    dend_17 { pt3dadd( 19.6525, 153.242, -66.2457, 1.03 ) }
    dend_17 { pt3dadd( 19.5039, 153.941, -66.2876, 0.81 ) }
    dend_17 { pt3dadd( 19.3226, 154.669, -66.3574, 0.59 ) }
    dend_17 { pt3dadd( 19.1066, 155.429, -66.4734, 0.37 ) }
    dend_17 { pt3dadd( 18.7814, 156.491, -66.6981, 0.37 ) }
    dend_17 { pt3dadd( 18.5068, 157.359, -66.9021, 0.37 ) }
    dend_17 { pt3dadd( 18.2863, 158.057, -67.0795, 0.44 ) }
    dend_17 { pt3dadd( 18.0617, 158.79, -67.2779, 0.44 ) }
    dend_17 { pt3dadd( 17.8643, 159.486, -67.4532, 0.29 ) }
    dend_17 { pt3dadd( 17.6156, 160.393, -67.6508, 0.29 ) }
    dend_17 { pt3dadd( 17.4427, 161.103, -67.769, 0.81 ) }
    dend_17 { pt3dadd( 17.2853, 161.796, -67.8287, 1.11 ) }
    dend_17 { pt3dadd( 17.1332, 162.503, -67.8473, 0.81 ) }
    dend_17 { pt3dadd( 16.9088, 163.546, -67.8368, 0.52 ) }
    dend_17 { pt3dadd( 16.8927, 163.62, -67.834, 0.52 ) }
    dend_17 { pt3dadd( 16.6634, 164.546, -67.8044, 0.52 ) }
    dend_17 { pt3dadd( 16.376, 165.541, -67.8069, 0.29 ) }
    dend_17 { pt3dadd( 16.1577, 166.219, -67.8339, 0.59 ) }
    dend_17 { pt3dadd( 15.9121, 166.885, -67.9127, 0.81 ) }
    dend_17 { pt3dadd( 15.8544, 167.023, -67.9432, 0.81 ) }
    dend_17 { pt3dadd( 15.6049, 167.63, -68.0944, 0.81 ) }
    dend_17 { pt3dadd( 15.3879, 168.219, -68.2475, 0.66 ) }
    dend_17 { pt3dadd( 15.3628, 168.299, -68.2692, 0.66 ) }
    dend_17 { pt3dadd( 15.144, 169.044, -68.457, 0.44 ) }
    dend_17 { pt3dadd( 14.887, 169.938, -68.6783, 0.37 ) }
    dend_17 { pt3dadd( 14.6546, 170.771, -68.8808, 0.37 ) }
    dend_17 { pt3dadd( 14.4049, 171.672, -69.1009, 0.52 ) }
    dend_17 { pt3dadd( 14.1969, 172.4, -69.287, 0.37 ) }
    dend_17 { pt3dadd( 14.0175, 172.975, -69.4509, 0.37 ) }
    dend_17 { pt3dadd( 13.8237, 173.575, -69.6335, 0.81 ) }
    dend_17 { pt3dadd( 13.6341, 174.131, -69.8183, 0.88 ) }
    dend_17 { pt3dadd( 13.454, 174.608, -69.9923, 0.59 ) }
    dend_17 { pt3dadd( 13.3432, 174.892, -70.0989, 0.44 ) }
    dend_17 { pt3dadd( 13.0403, 175.76, -70.3937, 0.37 ) }
    dend_17 { pt3dadd( 12.7298, 176.811, -70.701, 0.37 ) }
    dend_17 { pt3dadd( 12.6225, 177.344, -70.8376, 0.66 ) }
    dend_17 { pt3dadd( 12.6115, 177.428, -70.8568, 0.66 ) }
    dend_17 { pt3dadd( 12.5748, 178.272, -71.0053, 0.74 ) }
    dend_17 { pt3dadd( 12.5725, 178.703, -71.0733, 0.88 ) }
    dend_17 { pt3dadd( 12.6249, 179.695, -71.2045, 0.59 ) }
    dend_17 { pt3dadd( 12.7239, 180.685, -71.3253, 0.29 ) }
    dend_17 { pt3dadd( 12.736, 180.77, -71.3344, 0.29 ) }
    dend_17 { pt3dadd( 12.9672, 182.114, -71.4627, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 18.7081, 83.7281, -49.3462, 0.59 ) }
    dend_16 { pt3dadd( 19.0359, 84.596, -49.2216, 0.59 ) }
    dend_16 { pt3dadd( 19.2627, 85.2226, -49.1167, 0.29 ) }
    dend_16 { pt3dadd( 19.4446, 85.7476, -49.0292, 0.29 ) }
    dend_16 { pt3dadd( 19.6743, 86.4414, -48.9175, 0.29 ) }
    dend_16 { pt3dadd( 20.1721, 88.0428, -48.6661, 0.29 ) }
    dend_16 { pt3dadd( 20.4789, 89.0836, -48.5109, 0.74 ) }
    dend_16 { pt3dadd( 20.6518, 89.7713, -48.4203, 0.74 ) }
    dend_16 { pt3dadd( 20.812, 90.4861, -48.3448, 0.52 ) }
    dend_16 { pt3dadd( 20.9015, 90.9209, -48.3143, 0.44 ) }
    dend_16 { pt3dadd( 21.0074, 91.4614, -48.2907, 0.29 ) }
    dend_16 { pt3dadd( 21.1296, 92.0993, -48.2891, 0.29 ) }
    dend_16 { pt3dadd( 21.3024, 92.9401, -48.3124, 0.66 ) }
    dend_16 { pt3dadd( 21.4281, 93.4835, -48.3178, 0.96 ) }
    dend_16 { pt3dadd( 21.5696, 93.9804, -48.3087, 0.66 ) }
    dend_16 { pt3dadd( 21.6292, 94.1614, -48.3012, 0.66 ) }
    dend_16 { pt3dadd( 21.8275, 94.7036, -48.2684, 0.44 ) }
    dend_16 { pt3dadd( 22.023, 95.263, -48.2228, 0.29 ) }
    dend_16 { pt3dadd( 22.2044, 95.8182, -48.1697, 0.22 ) }
    dend_16 { pt3dadd( 22.4443, 96.7401, -48.018, 0.29 ) }
    dend_16 { pt3dadd( 22.4582, 96.8161, -48.0028, 0.29 ) }
    dend_16 { pt3dadd( 22.5562, 97.5405, -47.8451, 0.37 ) }
    dend_16 { pt3dadd( 22.616, 98.3386, -47.6723, 0.66 ) }
    dend_16 { pt3dadd( 22.6314, 98.8984, -47.5529, 0.96 ) }
    dend_16 { pt3dadd( 22.6616, 100.175, -47.2975, 0.81 ) }
    dend_16 { pt3dadd( 22.7029, 100.979, -47.1478, 0.59 ) }
    dend_16 { pt3dadd( 22.7129, 101.065, -47.1343, 0.59 ) }
    dend_16 { pt3dadd( 22.8822, 101.981, -47.0215, 0.59 ) }
    dend_16 { pt3dadd( 23.0285, 102.546, -46.9745, 0.66 ) }
    dend_16 { pt3dadd( 23.4231, 103.723, -46.921, 0.22 ) }
    dend_16 { pt3dadd( 23.6703, 104.295, -46.9264, 0.22 ) }
    dend_16 { pt3dadd( 24.0224, 104.991, -46.9271, 0.74 ) }
    dend_16 { pt3dadd( 24.3323, 105.577, -46.9249, 0.81 ) }
    dend_16 { pt3dadd( 24.375, 105.657, -46.9242, 0.81 ) }
    dend_16 { pt3dadd( 24.6932, 106.307, -46.918, 0.88 ) }
    dend_16 { pt3dadd( 24.9309, 106.836, -46.9066, 0.81 ) }
    dend_16 { pt3dadd( 25.2057, 107.481, -46.8975, 0.29 ) }
    dend_16 { pt3dadd( 25.6056, 108.61, -46.8897, 0.29 ) }
    dend_16 { pt3dadd( 26.1065, 110.239, -46.89, 0.74 ) }
    dend_16 { pt3dadd( 26.3139, 111.037, -46.8966, 1.11 ) }
    dend_16 { pt3dadd( 26.4599, 111.748, -46.9108, 0.88 ) }
    dend_16 { pt3dadd( 26.6446, 112.929, -46.9334, 0.22 ) }
    dend_16 { pt3dadd( 26.7952, 114.172, -46.958, 0.22 ) }
    dend_16 { pt3dadd( 26.8086, 114.296, -46.9642, 0.22 ) }
    dend_16 { pt3dadd( 26.8436, 114.609, -47.0038, 0.22 ) }
    dend_16 { pt3dadd( 26.9375, 115.318, -47.1278, 0.74 ) }
    dend_16 { pt3dadd( 26.9954, 115.762, -47.2168, 1.11 ) }
    dend_16 { pt3dadd( 27.1005, 116.608, -47.4355, 1.25 ) }
    dend_16 { pt3dadd( 27.2307, 117.571, -47.708, 0.74 ) }
    dend_16 { pt3dadd( 27.3972, 118.869, -48.1147, 0.22 ) }
    dend_16 { pt3dadd( 27.4907, 119.649, -48.3673, 0.37 ) }
    dend_16 { pt3dadd( 27.6059, 120.693, -48.7036, 0.37 ) }
    dend_16 { pt3dadd( 27.7592, 122.184, -49.1581, 0.52 ) }
    dend_16 { pt3dadd( 27.8212, 122.792, -49.3269, 0.88 ) }
    dend_16 { pt3dadd( 27.951, 124.072, -49.6257, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( 28.0452, 124.878, -49.7868, 0.66 ) }
    dend_16 { pt3dadd( 28.1649, 125.778, -49.9483, 0.29 ) }
    dend_16 { pt3dadd( 28.3169, 126.777, -50.0993, 0.22 ) }
    dend_16 { pt3dadd( 28.4518, 127.624, -50.1848, 0.22 ) }
    dend_16 { pt3dadd( 28.5856, 128.434, -50.2531, 0.44 ) }
    dend_16 { pt3dadd( 28.6847, 128.972, -50.2847, 0.59 ) }
    dend_16 { pt3dadd( 28.8518, 129.742, -50.3368, 0.37 ) }
    dend_16 { pt3dadd( 29.0406, 130.49, -50.3909, 0.29 ) }
    dend_16 { pt3dadd( 29.3006, 131.365, -50.4562, 0.44 ) }
    dend_16 { pt3dadd( 29.596, 132.176, -50.5448, 0.29 ) }
    dend_16 { pt3dadd( 30.0067, 133.049, -50.7229, 0.66 ) }
    dend_16 { pt3dadd( 30.2634, 133.581, -50.8638, 1.03 ) }
    dend_16 { pt3dadd( 30.4278, 133.915, -50.9675, 1.25 ) }
    dend_16 { pt3dadd( 30.7331, 134.584, -51.1921, 0.44 ) }
    dend_16 { pt3dadd( 31.1432, 135.619, -51.5543, 0.52 ) }
    dend_16 { pt3dadd( 31.5485, 136.853, -51.9948, 0.29 ) }
    dend_16 { pt3dadd( 31.9602, 138.338, -52.5123, 0.29 ) }
    dend_16 { pt3dadd( 31.9895, 138.446, -52.5469, 0.29 ) }
    dend_16 { pt3dadd( 32.1718, 139.122, -52.7607, 0.29 ) }
    dend_16 { pt3dadd( 32.4732, 140.051, -53.0325, 0.81 ) }
    dend_16 { pt3dadd( 32.5062, 140.133, -53.051, 0.81 ) }
    dend_16 { pt3dadd( 32.7748, 140.652, -53.1636, 0.88 ) }
    dend_16 { pt3dadd( 33.2503, 141.392, -53.4089, 0.88 ) }
    dend_16 { pt3dadd( 33.6589, 142.037, -53.6518, 0.44 ) }
    dend_16 { pt3dadd( 34.1905, 142.902, -54.003, 0.22 ) }
    dend_16 { pt3dadd( 34.6612, 143.751, -54.4199, 0.22 ) }
    dend_16 { pt3dadd( 35.1923, 144.836, -55.0049, 0.81 ) }
    dend_16 { pt3dadd( 35.5545, 145.721, -55.5069, 0.88 ) }
    dend_16 { pt3dadd( 35.7584, 146.354, -55.8546, 0.96 ) }
    dend_16 { pt3dadd( 35.906, 146.899, -56.1392, 0.96 ) }
    dend_16 { pt3dadd( 36.1983, 148.264, -56.8499, 0.44 ) }
    dend_16 { pt3dadd( 36.2157, 148.34, -56.8874, 0.44 ) }
    dend_16 { pt3dadd( 36.4104, 149.085, -57.1758, 0.44 ) }
    dend_16 { pt3dadd( 36.7084, 150.125, -57.5172, 0.66 ) }
    dend_16 { pt3dadd( 36.7604, 150.298, -57.5708, 0.66 ) }
    dend_16 { pt3dadd( 36.904, 150.778, -57.7493, 0.88 ) }
    dend_16 { pt3dadd( 37.1509, 151.596, -58.068, 0.52 ) }
    dend_16 { pt3dadd( 37.3868, 152.324, -58.3979, 0.37 ) }
    dend_16 { pt3dadd( 37.9046, 153.969, -59.2528, 1.11 ) }
    dend_16 { pt3dadd( 38.0114, 154.362, -59.4735, 1.25 ) }
    dend_16 { pt3dadd( 38.3557, 155.937, -60.3601, 0.22 ) }
    dend_16 { pt3dadd( 38.3657, 156.013, -60.4032, 0.22 ) }
    dend_16 { pt3dadd( 38.3718, 156.574, -60.7486, 0.22 ) }
    dend_16 { pt3dadd( 38.3129, 157.267, -61.1773, 0.22 ) }
    dend_16 { pt3dadd( 38.2333, 157.727, -61.4186, 0.74 ) }
    dend_16 { pt3dadd( 38.1414, 158.162, -61.6344, 1.03 ) }
    dend_16 { pt3dadd( 37.9863, 158.831, -61.9202, 0.81 ) }
    dend_16 { pt3dadd( 37.7411, 159.984, -62.4229, 0.52 ) }
    dend_16 { pt3dadd( 37.661, 160.386, -62.6435, 0.37 ) }
    dend_16 { pt3dadd( 37.5459, 161.15, -63.1391, 0.29 ) }
    dend_16 { pt3dadd( 37.4853, 161.92, -63.6674, 0.59 ) }
    dend_16 { pt3dadd( 37.497, 162.384, -63.9845, 0.96 ) }
    dend_16 { pt3dadd( 37.552, 162.835, -64.2835, 1.11 ) }
    dend_16 { pt3dadd( 37.8003, 164.22, -65.0792, 0.37 ) }
    dend_16 { pt3dadd( 37.8154, 164.296, -65.1203, 0.37 ) }
    dend_16 { pt3dadd( 37.9645, 165.138, -65.5037, 0.29 ) }
    dend_16 { pt3dadd( 38.0832, 166.018, -65.7688, 0.29 ) }
    dend_16 { pt3dadd( 38.0867, 166.104, -65.7841, 0.29 ) }
    dend_16 { pt3dadd( 38.0418, 167.013, -65.8465, 0.37 ) }
    dend_16 { pt3dadd( 38.0066, 167.475, -65.8359, 0.59 ) }
    dend_16 { pt3dadd( 37.9263, 168.415, -65.8051, 0.74 ) }
    dend_16 { pt3dadd( 37.8449, 169.186, -65.7731, 0.52 ) }
    dend_16 { pt3dadd( 37.7347, 170.357, -65.7207, 0.22 ) }
    dend_16 { pt3dadd( 37.6984, 171.175, -65.6892, 0.22 ) }
    dend_16 { pt3dadd( 37.6975, 171.826, -65.7001, 0.22 ) }
    dend_16 { pt3dadd( 37.726, 172.774, -65.7693, 0.74 ) }
    dend_16 { pt3dadd( 37.7774, 173.589, -65.8719, 0.88 ) }
    dend_16 { pt3dadd( 37.8363, 174.324, -65.998, 0.74 ) }
    dend_16 { pt3dadd( 37.9217, 175.229, -66.1752, 0.66 ) }
    dend_16 { pt3dadd( 38.0386, 176.746, -66.4947, 0.29 ) }
    dend_16 { pt3dadd( 38.0837, 177.77, -66.719, 0.29 ) }
    dend_16 { pt3dadd( 38.1052, 178.306, -66.8421, 0.44 ) }
    dend_16 { pt3dadd( 38.1142, 178.492, -66.884, 0.44 ) }
    dend_16 { pt3dadd( 38.1516, 179.027, -66.9906, 0.44 ) }
    dend_16 { pt3dadd( 38.2084, 179.539, -67.0671, 0.29 ) }
    dend_16 { pt3dadd( 38.3058, 180.049, -67.1034, 0.74 ) }
    dend_16 { pt3dadd( 38.5097, 180.761, -67.1416, 0.96 ) }
    dend_16 { pt3dadd( 38.6365, 181.12, -67.1595, 0.88 ) }
    dend_16 { pt3dadd( 38.9729, 181.978, -67.2015, 0.29 ) }
    dend_16 { pt3dadd( 39.2195, 182.561, -67.2295, 0.44 ) }
    dend_16 { pt3dadd( 39.5466, 183.305, -67.2636, 0.29 ) }
    dend_16 { pt3dadd( 39.9905, 184.399, -67.3086, 0.37 ) }
    dend_16 { pt3dadd( 40.1774, 184.864, -67.3257, 0.59 ) }
    dend_16 { pt3dadd( 40.4669, 185.542, -67.3513, 0.74 ) }
    dend_16 { pt3dadd( 40.6462, 185.966, -67.3672, 0.52 ) }
    dend_16 { pt3dadd( 40.8685, 186.495, -67.3749, 0.37 ) }
    dend_16 { pt3dadd( 41.3822, 187.749, -67.3383, 0.52 ) }
    dend_16 { pt3dadd( 41.8009, 188.782, -67.2736, 0.44 ) }
    dend_16 { pt3dadd( 42.4228, 190.295, -67.1475, 0.88 ) }
    dend_16 { pt3dadd( 42.6804, 190.898, -67.0892, 1.25 ) }
    dend_16 { pt3dadd( 42.9367, 191.505, -67.0274, 1.03 ) }
    dend_16 { pt3dadd( 43.3376, 192.46, -66.9237, 0.29 ) }
    dend_16 { pt3dadd( 43.6714, 193.291, -66.8324, 0.44 ) }
    dend_16 { pt3dadd( 43.9776, 194.251, -66.7603, 0.37 ) }
    dend_16 { pt3dadd( 44.2148, 195.188, -66.7294, 0.74 ) }
    dend_16 { pt3dadd( 44.4298, 196.17, -66.7468, 0.74 ) }
    dend_16 { pt3dadd( 44.4444, 196.256, -66.7531, 0.74 ) }
    dend_16 { pt3dadd( 44.5645, 197.246, -66.8588, 0.74 ) }
    dend_16 { pt3dadd( 44.6584, 198.342, -66.98, 0.22 ) }
    dend_16 { pt3dadd( 44.7043, 198.91, -67.0421, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( 44.7587, 199.547, -67.1063, 0.96 ) }
    dend_16 { pt3dadd( 44.8584, 200.538, -67.195, 0.22 ) }
    dend_16 { pt3dadd( 44.9612, 201.343, -67.2543, 0.66 ) }
    dend_16 { pt3dadd( 45.083, 202.071, -67.2922, 1.03 ) }
    dend_16 { pt3dadd( 45.2892, 203.077, -67.2745, 0.81 ) }
    dend_16 { pt3dadd( 45.5153, 204.169, -67.2127, 0.52 ) }
    dend_16 { pt3dadd( 45.6343, 204.789, -67.1723, 0.44 ) }
    dend_16 { pt3dadd( 45.8494, 206.083, -67.0853, 0.37 ) }
    dend_16 { pt3dadd( 46.0048, 207.23, -67.0093, 0.88 ) }
    dend_16 { pt3dadd( 46.1608, 208.488, -66.9301, 1.25 ) }
    dend_16 { pt3dadd( 46.2567, 209.225, -66.889, 0.88 ) }
    dend_16 { pt3dadd( 46.4105, 210.214, -66.8482, 0.44 ) }
    dend_16 { pt3dadd( 46.5844, 211.289, -66.8268, 0.59 ) }
    dend_16 { pt3dadd( 46.6952, 211.927, -66.8312, 0.81 ) }
    dend_16 { pt3dadd( 46.8319, 212.63, -66.859, 0.59 ) }
    dend_16 { pt3dadd( 47.0318, 213.511, -66.9229, 0.37 ) }
    dend_16 { pt3dadd( 47.4143, 214.934, -66.9929, 0.52 ) }
    dend_16 { pt3dadd( 47.6696, 215.844, -67.0086, 0.37 ) }
    dend_16 { pt3dadd( 47.7775, 216.265, -67.0142, 0.74 ) }
    dend_16 { pt3dadd( 47.8979, 216.9, -67.0203, 0.88 ) }
    dend_16 { pt3dadd( 47.9287, 217.252, -67.0367, 0.88 ) }
    dend_16 { pt3dadd( 47.9448, 217.89, -67.1451, 1.11 ) }
    dend_16 { pt3dadd( 47.9762, 218.534, -67.3203, 1.03 ) }
    dend_16 { pt3dadd( 48.0248, 219.138, -67.5206, 0.37 ) }
    dend_16 { pt3dadd( 48.1071, 219.857, -67.7826, 0.37 ) }
    dend_16 { pt3dadd( 48.2923, 220.927, -68.2209, 0.66 ) }
    dend_16 { pt3dadd( 48.6435, 222.553, -68.8982, 0.29 ) }
    dend_16 { pt3dadd( 48.9092, 223.625, -69.3345, 0.52 ) }
    dend_16 { pt3dadd( 48.9286, 223.696, -69.3621, 0.52 ) }
    dend_16 { pt3dadd( 49.1018, 224.289, -69.5699, 0.66 ) }
    dend_16 { pt3dadd( 49.4147, 225.329, -69.8647, 0.37 ) }
    dend_16 { pt3dadd( 49.7588, 226.513, -70.103, 0.66 ) }
    dend_16 { pt3dadd( 49.9891, 227.391, -70.2186, 0.59 ) }
    dend_16 { pt3dadd( 50.1371, 228.026, -70.2684, 0.74 ) }
    dend_16 { pt3dadd( 50.3252, 228.872, -70.2928, 0.37 ) }
    dend_16 { pt3dadd( 50.5778, 230.022, -70.1837, 0.59 ) }
    dend_16 { pt3dadd( 50.6154, 230.193, -70.1497, 0.59 ) }
    dend_16 { pt3dadd( 50.7674, 230.861, -69.988, 0.37 ) }
    dend_16 { pt3dadd( 51.0785, 232.182, -69.6379, 0.29 ) }
    dend_16 { pt3dadd( 51.3471, 233.318, -69.3531, 0.52 ) }
    dend_16 { pt3dadd( 51.7752, 235.136, -68.9151, 0.22 ) }
    dend_16 { pt3dadd( 52.0644, 236.255, -68.6763, 0.52 ) }
    dend_16 { pt3dadd( 52.2106, 236.848, -68.5772, 0.81 ) }
    dend_16 { pt3dadd( 52.356, 237.544, -68.5047, 0.52 ) }
    dend_16 { pt3dadd( 52.5757, 238.782, -68.4872, 0.74 ) }
    dend_16 { pt3dadd( 52.5859, 238.87, -68.4933, 0.74 ) }
    dend_16 { pt3dadd( 52.6209, 240.03, -68.6701, 1.33 ) }
    dend_16 { pt3dadd( 52.5936, 240.937, -68.7995, 0.88 ) }
    dend_16 { pt3dadd( 52.5049, 241.968, -68.9272, 0.66 ) }
    dend_16 { pt3dadd( 52.3596, 242.965, -69.0186, 0.52 ) }
    dend_16 { pt3dadd( 52.1446, 244.13, -69.1102, 0.52 ) }
    dend_16 { pt3dadd( 51.9439, 245.08, -69.1859, 0.52 ) }
    dend_16 { pt3dadd( 51.6698, 246.141, -69.273, 0.29 ) }
    dend_16 { pt3dadd( 51.4913, 246.881, -69.3342, 0.52 ) }
    dend_16 { pt3dadd( 51.3162, 247.574, -69.3853, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 47.9114, 67.8798, 12.5719, 0.59 ) }
    dend_11 { pt3dadd( 48.9256, 69.1649, 8.22268, 0.59 ) }
    dend_11 { pt3dadd( 49.5716, 69.8559, 6.13205, 0.74 ) }
    dend_11 { pt3dadd( 49.6023, 69.8859, 6.04778, 0.74 ) }
    dend_11 { pt3dadd( 49.949, 70.2134, 5.23379, 0.74 ) }
    dend_11 { pt3dadd( 50.5938, 70.7327, 3.98128, 0.96 ) }
    dend_11 { pt3dadd( 50.6384, 70.7615, 3.90305, 0.96 ) }
    dend_11 { pt3dadd( 51.295, 70.9946, 3.22303, 0.96 ) }
    dend_11 { pt3dadd( 51.3594, 71.0137, 3.15657, 0.96 ) }
    dend_11 { pt3dadd( 52.5645, 71.4058, 1.81809, 0.52 ) }
    dend_11 { pt3dadd( 53.3258, 71.6798, 0.908742, 0.52 ) }
    dend_11 { pt3dadd( 54.3403, 72.0654, -0.332521, 0.81 ) }
    dend_11 { pt3dadd( 54.8996, 72.2891, -0.999775, 0.88 ) }
    dend_11 { pt3dadd( 55.8556, 72.6603, -2.19734, 0.52 ) }
    dend_11 { pt3dadd( 56.1489, 72.7759, -2.54646, 0.74 ) }
    dend_11 { pt3dadd( 56.2539, 72.827, -2.69509, 0.74 ) }
    dend_11 { pt3dadd( 56.5964, 73.0639, -3.28868, 0.29 ) }
    dend_11 { pt3dadd( 56.9965, 73.4198, -4.05357, 0.59 ) }
    dend_11 { pt3dadd( 57.5811, 74.1206, -5.54556, 0.74 ) }
    dend_11 { pt3dadd( 57.883, 74.536, -6.40652, 0.59 ) }
    dend_11 { pt3dadd( 58.5398, 75.5706, -8.54033, 1.03 ) }
    dend_11 { pt3dadd( 58.5795, 75.6383, -8.67185, 1.03 ) }
    dend_11 { pt3dadd( 58.7006, 75.8701, -9.09953, 0.74 ) }
    dend_11 { pt3dadd( 59.1806, 76.9288, -10.8312, 0.44 ) }
    dend_11 { pt3dadd( 59.3767, 77.3781, -11.4472, 0.59 ) }
    dend_11 { pt3dadd( 59.7903, 78.2106, -12.5356, 0.66 ) }
    dend_11 { pt3dadd( 60.1236, 78.7075, -13.1167, 0.74 ) }
    dend_11 { pt3dadd( 60.1637, 78.7612, -13.1809, 0.74 ) }
    dend_11 { pt3dadd( 60.3246, 78.9563, -13.4096, 0.74 ) }
    dend_11 { pt3dadd( 60.3683, 79.0031, -13.4586, 0.74 ) }
    dend_11 { pt3dadd( 61.2148, 80.1108, -14.674, 0.29 ) }
    dend_11 { pt3dadd( 61.3864, 80.5017, -15.084, 0.66 ) }
    dend_11 { pt3dadd( 61.4104, 80.6376, -15.2268, 0.66 ) }
    dend_11 { pt3dadd( 61.4397, 80.9578, -15.6138, 0.88 ) }
    dend_11 { pt3dadd( 61.4336, 81.0191, -15.7002, 0.88 ) }
    dend_11 { pt3dadd( 61.1827, 82.2305, -17.4526, 0.29 ) }
    dend_11 { pt3dadd( 60.8687, 83.2815, -18.9994, 0.29 ) }
    dend_11 { pt3dadd( 60.4229, 84.5308, -20.8821, 1.11 ) }
    dend_11 { pt3dadd( 59.9535, 85.7038, -22.6815, 0.96 ) }
    dend_11 { pt3dadd( 58.9807, 87.942, -26.0618, 0.66 ) }
    dend_11 { pt3dadd( 58.7778, 88.3802, -26.7056, 0.66 ) }
    dend_11 { pt3dadd( 58.7048, 88.5277, -26.909, 0.66 ) }
    dend_11 { pt3dadd( 58.3332, 89.3183, -27.9097, 0.59 ) }
    dend_11 { pt3dadd( 58.2762, 89.4649, -28.0623, 0.59 ) }
    dend_11 { pt3dadd( 57.9102, 90.8053, -29.0493, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 57.9066, 90.8675, -29.0828, 0.52 ) }
    dend_11 { pt3dadd( 57.9265, 91.5519, -29.4564, 0.96 ) }
    dend_11 { pt3dadd( 58.0136, 92.3615, -29.8796, 1.11 ) }
    dend_11 { pt3dadd( 58.3426, 94.034, -30.6758, 0.29 ) }
    dend_11 { pt3dadd( 58.3631, 94.1056, -30.7159, 0.29 ) }
    dend_11 { pt3dadd( 58.5737, 94.5684, -31.081, 0.52 ) }
    dend_11 { pt3dadd( 58.6028, 94.6226, -31.1346, 0.52 ) }
    dend_11 { pt3dadd( 58.7163, 94.8075, -31.3478, 0.74 ) }
    dend_11 { pt3dadd( 58.7462, 94.8639, -31.4152, 0.74 ) }
    dend_11 { pt3dadd( 59.1966, 95.8786, -32.4295, 0.74 ) }
    dend_11 { pt3dadd( 59.5256, 96.8711, -33.2528, 0.59 ) }
    dend_11 { pt3dadd( 59.5443, 96.9452, -33.3065, 0.59 ) }
    dend_11 { pt3dadd( 59.7127, 97.6377, -33.7387, 0.29 ) }
    dend_11 { pt3dadd( 59.9744, 98.7968, -34.3391, 0.29 ) }
    dend_11 { pt3dadd( 60.1621, 99.7636, -34.771, 0.88 ) }
    dend_11 { pt3dadd( 60.2588, 100.325, -34.9478, 1.11 ) }
    dend_11 { pt3dadd( 60.272, 100.404, -34.969, 1.11 ) }
    dend_11 { pt3dadd( 60.4367, 101.188, -35.1921, 0.88 ) }
    dend_11 { pt3dadd( 60.5216, 101.493, -35.3099, 0.52 ) }
    dend_11 { pt3dadd( 60.9709, 102.638, -35.8427, 0.37 ) }
    dend_11 { pt3dadd( 61.4088, 103.59, -36.3793, 0.22 ) }
    dend_11 { pt3dadd( 61.4465, 103.665, -36.4249, 0.22 ) }
    dend_11 { pt3dadd( 61.6867, 104.155, -36.7098, 0.74 ) }
    dend_11 { pt3dadd( 62.159, 105.305, -37.3856, 0.88 ) }
    dend_11 { pt3dadd( 62.3948, 105.87, -37.7147, 0.22 ) }
    dend_11 { pt3dadd( 62.635, 106.381, -38.0582, 0.29 ) }
    dend_11 { pt3dadd( 62.6713, 106.448, -38.1122, 0.29 ) }
    dend_11 { pt3dadd( 62.925, 106.944, -38.6501, 0.29 ) }
    dend_11 { pt3dadd( 63.3519, 107.832, -39.9546, 0.88 ) }
    dend_11 { pt3dadd( 63.5068, 108.127, -40.4658, 1.18 ) }
    dend_11 { pt3dadd( 63.9685, 108.955, -42.0942, 0.29 ) }
    dend_11 { pt3dadd( 64.1751, 109.305, -42.8309, 0.88 ) }
    dend_11 { pt3dadd( 64.8949, 110.495, -45.3015, 1.33 ) }
    dend_11 { pt3dadd( 65.5121, 111.443, -47.2948, 0.52 ) }
    dend_11 { pt3dadd( 65.7317, 111.772, -47.9576, 1.25 ) }
    dend_11 { pt3dadd( 65.7547, 111.811, -48.0252, 1.25 ) }
    dend_11 { pt3dadd( 66.2779, 112.838, -49.4959, 0.29 ) }
    dend_11 { pt3dadd( 66.5433, 113.394, -50.1603, 0.29 ) }
    dend_11 { pt3dadd( 66.8349, 113.951, -50.6295, 0.59 ) }
    dend_11 { pt3dadd( 66.9988, 114.279, -50.8636, 0.96 ) }
    dend_11 { pt3dadd( 67.332, 114.947, -51.3472, 0.96 ) }
    dend_11 { pt3dadd( 67.8957, 115.949, -52.1376, 0.59 ) }
    dend_11 { pt3dadd( 67.938, 116.013, -52.1912, 0.59 ) }
    dend_11 { pt3dadd( 68.2784, 116.486, -52.6085, 0.29 ) }
    dend_11 { pt3dadd( 68.7721, 117.17, -53.1711, 0.44 ) }
    dend_11 { pt3dadd( 69.0801, 117.592, -53.4934, 0.66 ) }
    dend_11 { pt3dadd( 69.5296, 118.273, -53.9592, 0.29 ) }
    dend_11 { pt3dadd( 69.8322, 118.723, -54.2298, 0.22 ) }
    dend_11 { pt3dadd( 70.2247, 119.328, -54.59, 0.66 ) }
    dend_11 { pt3dadd( 70.4353, 119.651, -54.7817, 0.74 ) }
    dend_11 { pt3dadd( 70.6547, 119.994, -54.9719, 0.59 ) }
    dend_11 { pt3dadd( 71.4438, 121.137, -55.6418, 0.22 ) }
    dend_11 { pt3dadd( 71.8089, 121.547, -55.9672, 0.44 ) }
    dend_11 { pt3dadd( 71.8689, 121.594, -56.0239, 0.44 ) }
    dend_11 { pt3dadd( 72.2221, 121.783, -56.3501, 0.59 ) }
    dend_11 { pt3dadd( 72.2776, 121.808, -56.4033, 0.59 ) }
    dend_11 { pt3dadd( 72.8192, 122.025, -56.9215, 0.59 ) }
    dend_11 { pt3dadd( 73.7086, 122.356, -57.732, 0.22 ) }
    dend_11 { pt3dadd( 74.1862, 122.588, -58.1689, 0.59 ) }
    dend_11 { pt3dadd( 74.503, 122.764, -58.45, 0.66 ) }
    dend_11 { pt3dadd( 75.0757, 123.174, -59.0206, 0.66 ) }
    dend_11 { pt3dadd( 75.1259, 123.217, -59.072, 0.66 ) }
    dend_11 { pt3dadd( 75.7641, 123.885, -59.764, 0.22 ) }
    dend_11 { pt3dadd( 76.2137, 124.409, -60.2387, 0.66 ) }
    dend_11 { pt3dadd( 76.4111, 124.652, -60.4515, 0.96 ) }
    dend_11 { pt3dadd( 77.4436, 125.952, -61.5514, 0.22 ) }
    dend_11 { pt3dadd( 77.7833, 126.417, -61.969, 0.22 ) }
    dend_11 { pt3dadd( 78.2125, 127.145, -62.7312, 0.59 ) }
    dend_11 { pt3dadd( 78.3724, 127.517, -63.1779, 0.96 ) }
    dend_11 { pt3dadd( 78.4374, 127.694, -63.4133, 1.18 ) }
    dend_11 { pt3dadd( 78.4539, 127.739, -63.4786, 1.18 ) }
    dend_11 { pt3dadd( 78.9478, 128.796, -65.1505, 0.44 ) }
    dend_11 { pt3dadd( 79.4158, 129.551, -66.4969, 0.37 ) }
    dend_11 { pt3dadd( 79.8138, 130.06, -67.4825, 0.29 ) }
    dend_11 { pt3dadd( 80.0849, 130.348, -68.0519, 0.44 ) }
    dend_11 { pt3dadd( 80.2958, 130.563, -68.4563, 0.44 ) }
    dend_11 { pt3dadd( 80.9696, 131.17, -69.4934, 0.22 ) }
    dend_11 { pt3dadd( 81.5531, 131.557, -70.14, 0.81 ) }
    dend_11 { pt3dadd( 81.6693, 131.622, -70.2515, 0.81 ) }
    dend_11 { pt3dadd( 82.0539, 131.797, -70.6114, 0.96 ) }
    dend_11 { pt3dadd( 83.5246, 132.406, -72.0052, 0.37 ) }
    dend_11 { pt3dadd( 84.3684, 132.775, -72.8111, 0.37 ) }
    dend_11 { pt3dadd( 85.1386, 133.187, -73.6464, 0.29 ) }
    dend_11 { pt3dadd( 85.1803, 133.209, -73.6977, 0.29 ) }
    dend_11 { pt3dadd( 85.7026, 133.478, -74.3776, 0.29 ) }
    dend_11 { pt3dadd( 86.1082, 133.676, -74.9029, 0.74 ) }
    dend_11 { pt3dadd( 86.6648, 133.906, -75.4947, 1.03 ) }
    dend_11 { pt3dadd( 87.6899, 134.349, -76.5366, 0.88 ) }
    dend_11 { pt3dadd( 89.1837, 134.967, -77.7202, 0.29 ) }
    dend_11 { pt3dadd( 89.7404, 135.151, -78.0588, 0.44 ) }
    dend_11 { pt3dadd( 90.5726, 135.355, -78.45, 0.29 ) }
    dend_11 { pt3dadd( 91.9733, 135.558, -78.9359, 1.33 ) }
    dend_11 { pt3dadd( 92.5022, 135.58, -79.0557, 1.69 ) }
    dend_11 { pt3dadd( 94.3159, 135.557, -79.2697, 0.29 ) }
    dend_11 { pt3dadd( 95.1164, 135.527, -79.3087, 0.29 ) }
    dend_11 { pt3dadd( 95.6002, 135.494, -79.3455, 0.66 ) }
    dend_11 { pt3dadd( 95.6716, 135.487, -79.3555, 0.66 ) }
    dend_11 { pt3dadd( 96.1841, 135.431, -79.4971, 0.66 ) }
    dend_11 { pt3dadd( 97.0523, 135.312, -79.8234, 0.22 ) }
    dend_11 { pt3dadd( 97.5642, 135.194, -80.0835, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 97.6475, 135.171, -80.1225, 0.44 ) }
    dend_11 { pt3dadd( 98.2667, 134.982, -80.3944, 0.44 ) }
    dend_11 { pt3dadd( 98.3246, 134.965, -80.4296, 0.44 ) }
    dend_11 { pt3dadd( 99.0437, 134.785, -80.9398, 0.29 ) }
    dend_11 { pt3dadd( 99.7858, 134.611, -81.59, 0.29 ) }
    dend_11 { pt3dadd( 100.311, 134.496, -82.1157, 0.74 ) }
    dend_11 { pt3dadd( 100.593, 134.44, -82.4157, 0.96 ) }
    dend_11 { pt3dadd( 102.024, 134.203, -84.0817, 0.37 ) }
    dend_11 { pt3dadd( 102.331, 134.174, -84.4692, 1.03 ) }
    dend_11 { pt3dadd( 103.034, 134.206, -85.5141, 1.03 ) }
    dend_11 { pt3dadd( 103.321, 134.266, -86.0275, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 47.9114, 67.8798, 12.5719, 0.88 ) }
    dend_4 { pt3dadd( 49.3215, 69.3039, 15.0543, 0.88 ) }
    dend_4 { pt3dadd( 50.0597, 70.0689, 16.0998, 0.66 ) }
    dend_4 { pt3dadd( 50.4606, 70.5549, 16.6367, 0.66 ) }
    dend_4 { pt3dadd( 50.4967, 70.6058, 16.6832, 0.66 ) }
    dend_4 { pt3dadd( 50.8903, 71.2689, 17.1696, 0.66 ) }
    dend_4 { pt3dadd( 50.9237, 71.331, 17.2083, 0.66 ) }
    dend_4 { pt3dadd( 51.3006, 72.2189, 17.5445, 0.74 ) }
    dend_4 { pt3dadd( 51.7891, 73.6978, 18.1058, 0.44 ) }
    dend_4 { pt3dadd( 51.9784, 74.3726, 18.3874, 0.37 ) }
    dend_4 { pt3dadd( 52.232, 75.34, 18.8166, 0.37 ) }
    dend_4 { pt3dadd( 52.3442, 75.7945, 19.0242, 0.59 ) }
    dend_4 { pt3dadd( 52.611, 76.8766, 19.5104, 0.59 ) }
    dend_4 { pt3dadd( 52.8135, 77.6587, 19.8495, 0.59 ) }
    dend_4 { pt3dadd( 52.9352, 78.0096, 19.9763, 0.88 ) }
    dend_4 { pt3dadd( 52.9696, 78.0845, 20.0089, 0.88 ) }
    dend_4 { pt3dadd( 53.3306, 78.7487, 20.4118, 1.18 ) }
    dend_4 { pt3dadd( 53.4015, 78.8722, 20.5068, 1.18 ) }
    dend_4 { pt3dadd( 53.6081, 79.24, 20.8304, 0.88 ) }
    dend_4 { pt3dadd( 54.0429, 80.0306, 21.5596, 0.44 ) }
    dend_4 { pt3dadd( 54.5639, 80.9445, 22.3869, 0.74 ) }
    dend_4 { pt3dadd( 55.2565, 82.1229, 23.4663, 1.33 ) }
    dend_4 { pt3dadd( 55.8898, 83.1919, 24.4296, 0.96 ) }
    dend_4 { pt3dadd( 56.5399, 84.2984, 25.3887, 0.52 ) }
    dend_4 { pt3dadd( 56.9319, 84.9966, 25.9524, 0.44 ) }
    dend_4 { pt3dadd( 57.4309, 85.9397, 26.6934, 0.37 ) }
    dend_4 { pt3dadd( 57.878, 86.9212, 27.4425, 0.37 ) }
    dend_4 { pt3dadd( 58.1309, 87.5844, 27.9622, 0.37 ) }
    dend_4 { pt3dadd( 58.1807, 87.7636, 28.1112, 0.37 ) }
    dend_4 { pt3dadd( 58.286, 88.3645, 28.6732, 0.59 ) }
    dend_4 { pt3dadd( 58.3543, 89.7025, 30.0527, 0.88 ) }
    dend_4 { pt3dadd( 58.284, 90.7155, 31.1625, 0.88 ) }
    dend_4 { pt3dadd( 58.1594, 91.5115, 32.0275, 0.52 ) }
    dend_4 { pt3dadd( 58.0608, 91.9929, 32.5659, 0.52 ) }
    dend_4 { pt3dadd( 58.0522, 92.0382, 32.6132, 0.52 ) }
    dend_4 { pt3dadd( 58.0035, 92.4624, 32.9599, 0.52 ) }
    dend_4 { pt3dadd( 58.0109, 92.5374, 32.9826, 0.52 ) }
    dend_4 { pt3dadd( 58.1573, 93.0451, 33.0127, 0.74 ) }
    dend_4 { pt3dadd( 58.1991, 93.1557, 33.0097, 0.74 ) }
    dend_4 { pt3dadd( 58.5037, 93.8318, 32.986, 0.37 ) }
    dend_4 { pt3dadd( 58.9846, 94.8327, 32.946, 0.44 ) }
    dend_4 { pt3dadd( 59.4205, 95.6563, 32.8596, 0.44 ) }
    dend_4 { pt3dadd( 59.7906, 96.3266, 32.7585, 0.74 ) }
    dend_4 { pt3dadd( 59.8688, 96.4601, 32.7327, 0.74 ) }
    dend_4 { pt3dadd( 60.3514, 97.3101, 32.5323, 0.74 ) }
    dend_4 { pt3dadd( 60.3887, 97.3765, 32.5141, 0.74 ) }
    dend_4 { pt3dadd( 60.9223, 98.3768, 32.227, 0.66 ) }
    dend_4 { pt3dadd( 60.9569, 98.4472, 32.2078, 0.66 ) }
    dend_4 { pt3dadd( 61.2571, 99.0661, 32.0658, 0.74 ) }
    dend_4 { pt3dadd( 61.7761, 100.191, 31.8559, 0.29 ) }
    dend_4 { pt3dadd( 62.0735, 100.881, 31.7949, 0.44 ) }
    dend_4 { pt3dadd( 62.4015, 101.692, 31.794, 0.22 ) }
    dend_4 { pt3dadd( 62.6225, 102.308, 31.856, 0.66 ) }
    dend_4 { pt3dadd( 62.7745, 102.781, 31.9221, 0.66 ) }
    dend_4 { pt3dadd( 62.7964, 102.868, 31.9391, 0.66 ) }
    dend_4 { pt3dadd( 63.0623, 103.971, 32.2345, 0.44 ) }
    dend_4 { pt3dadd( 63.0847, 104.047, 32.2517, 0.44 ) }
    dend_4 { pt3dadd( 63.2264, 104.424, 32.3173, 0.52 ) }
    dend_4 { pt3dadd( 63.3213, 104.653, 32.3371, 0.52 ) }
    dend_4 { pt3dadd( 63.5115, 105.1, 32.3372, 0.52 ) }
    dend_4 { pt3dadd( 63.9115, 106.095, 32.2826, 0.29 ) }
    dend_4 { pt3dadd( 64.2448, 107.058, 32.2013, 0.29 ) }
    dend_4 { pt3dadd( 64.2613, 107.124, 32.1978, 0.29 ) }
    dend_4 { pt3dadd( 64.3916, 107.862, 32.1754, 0.44 ) }
    dend_4 { pt3dadd( 64.414, 108.12, 32.1737, 0.44 ) }
    dend_4 { pt3dadd( 64.4073, 108.925, 32.2323, 0.44 ) }
    dend_4 { pt3dadd( 64.3236, 109.68, 32.3349, 0.59 ) }
    dend_4 { pt3dadd( 64.2515, 110.342, 32.4998, 0.74 ) }
    dend_4 { pt3dadd( 64.2484, 110.427, 32.5261, 0.74 ) }
    dend_4 { pt3dadd( 64.2965, 111.056, 32.7491, 0.74 ) }
    dend_4 { pt3dadd( 64.5081, 111.965, 33.2365, 0.52 ) }
    dend_4 { pt3dadd( 64.5313, 112.027, 33.2776, 0.52 ) }
    dend_4 { pt3dadd( 64.8402, 112.735, 33.7512, 0.44 ) }
    dend_4 { pt3dadd( 65.0111, 113.133, 34.0355, 0.29 ) }
    dend_4 { pt3dadd( 65.2488, 113.782, 34.4857, 0.29 ) }
    dend_4 { pt3dadd( 65.6636, 115.183, 35.55, 0.29 ) }
    dend_4 { pt3dadd( 65.7911, 115.708, 35.9375, 0.37 ) }
    dend_4 { pt3dadd( 65.9553, 116.434, 36.4545, 0.44 ) }
    dend_4 { pt3dadd( 66.166, 117.501, 37.1861, 0.96 ) }
    dend_4 { pt3dadd( 66.3084, 118.161, 37.631, 1.25 ) }
    dend_4 { pt3dadd( 66.7833, 119.782, 38.7345, 0.52 ) }
    dend_4 { pt3dadd( 67.0418, 120.449, 39.1469, 0.52 ) }
    dend_4 { pt3dadd( 67.3205, 120.988, 39.4939, 0.66 ) }
    dend_4 { pt3dadd( 67.3641, 121.052, 39.5376, 0.66 ) }
    dend_4 { pt3dadd( 67.8412, 121.64, 39.8975, 0.44 ) }
    dend_4 { pt3dadd( 68.5838, 122.487, 40.3706, 0.29 ) }
    dend_4 { pt3dadd( 68.811, 122.788, 40.497, 0.52 ) }
    dend_4 { pt3dadd( 69.1429, 123.314, 40.7309, 0.52 ) }
    dend_4 { pt3dadd( 69.5273, 123.997, 41.037, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 69.8263, 124.523, 41.2543, 0.29 ) }
    dend_4 { pt3dadd( 70.0822, 124.96, 41.4682, 0.52 ) }
    dend_4 { pt3dadd( 70.6588, 125.842, 41.9038, 0.88 ) }
    dend_4 { pt3dadd( 70.961, 126.259, 42.1208, 0.52 ) }
    dend_4 { pt3dadd( 71.6589, 127.11, 42.5857, 0.44 ) }
    dend_4 { pt3dadd( 72.2303, 127.734, 42.9255, 0.59 ) }
    dend_4 { pt3dadd( 73.2837, 128.734, 43.5468, 0.29 ) }
    dend_4 { pt3dadd( 74.0655, 129.391, 44.0089, 0.29 ) }
    dend_4 { pt3dadd( 77.6432, 138.758, 48.7245, 0.29 ) }
    dend_4 { pt3dadd( 80.4412, 149.199, 51.364, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -119.215, -171.976, 3.18099, 0.29 ) }
    dend_87 { pt3dadd( -119.39, -172.645, 3.34059, 0.29 ) }
    dend_87 { pt3dadd( -119.45, -172.873, 3.39495, 0.74 ) }
    dend_87 { pt3dadd( -119.562, -173.299, 3.49668, 0.29 ) }
    dend_87 { pt3dadd( -119.668, -173.7, 3.5923, 0.29 ) }
    dend_87 { pt3dadd( -119.811, -174.244, 3.72232, 0.37 ) }
    dend_87 { pt3dadd( -121.283, -179.879, 4.28191, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -119.215, -171.976, 3.18099, 0.37 ) }
    dend_68 { pt3dadd( -119.768, -172.184, 4.04367, 0.37 ) }
    dend_68 { pt3dadd( -120.081, -172.289, 4.47161, 0.37 ) }
    dend_68 { pt3dadd( -120.659, -172.458, 5.26314, 0.44 ) }
    dend_68 { pt3dadd( -121.071, -172.574, 5.8026, 0.37 ) }
    dend_68 { pt3dadd( -121.898, -172.828, 6.83905, 0.88 ) }
    dend_68 { pt3dadd( -122.183, -172.937, 7.22185, 1.11 ) }
    dend_68 { pt3dadd( -122.531, -173.084, 7.68507, 0.81 ) }
    dend_68 { pt3dadd( -123.337, -173.518, 8.83749, 0.29 ) }
    dend_68 { pt3dadd( -123.601, -173.664, 9.19544, 0.29 ) }
    dend_68 { pt3dadd( -123.834, -173.796, 9.5213, 0.74 ) }
    dend_68 { pt3dadd( -124.633, -174.218, 10.5559, 0.44 ) }
    dend_68 { pt3dadd( -124.879, -174.341, 10.8806, 0.44 ) }
    dend_68 { pt3dadd( -125.432, -174.562, 11.5624, 0.29 ) }
    dend_68 { pt3dadd( -126.014, -174.817, 12.3496, 0.29 ) }
    dend_68 { pt3dadd( -126.368, -174.99, 12.9895, 0.59 ) }
    dend_68 { pt3dadd( -126.601, -175.1, 13.4604, 0.66 ) }
    dend_68 { pt3dadd( -126.94, -175.247, 14.1678, 0.44 ) }
    dend_68 { pt3dadd( -127.24, -175.385, 14.873, 0.37 ) }
    dend_68 { pt3dadd( -127.936, -175.747, 16.6923, 0.66 ) }
    dend_68 { pt3dadd( -128.587, -176.133, 18.509, 0.81 ) }
    dend_68 { pt3dadd( -128.739, -176.211, 18.9045, 0.88 ) }
    dend_68 { pt3dadd( -128.867, -176.28, 19.263, 0.88 ) }
    dend_68 { pt3dadd( -128.889, -176.291, 19.3242, 0.88 ) }
    dend_68 { pt3dadd( -129.286, -176.467, 20.3467, 0.52 ) }
    dend_68 { pt3dadd( -129.582, -176.491, 20.7955, 0.52 ) }
    dend_68 { pt3dadd( -130.655, -176.555, 22.0416, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.49594, -85.9174, -17.5314, 0.74 ) }
    dend_52 { pt3dadd( -6.80913, -87.2251, -18.0522, 0.74 ) }
    dend_52 { pt3dadd( -6.96262, -88.2893, -18.4952, 0.74 ) }
    dend_52 { pt3dadd( -7.08938, -89.7504, -19.0895, 0.88 ) }
    dend_52 { pt3dadd( -7.13194, -90.6462, -19.4472, 0.88 ) }
    dend_52 { pt3dadd( -7.20171, -92.1146, -20.0337, 0.81 ) }
    dend_52 { pt3dadd( -7.29636, -94.1068, -20.8294, 0.88 ) }
    dend_52 { pt3dadd( -7.25292, -95.3266, -21.3173, 0.88 ) }
    dend_52 { pt3dadd( -7.16885, -96.1787, -21.6763, 1.33 ) }
    dend_52 { pt3dadd( -7.02485, -97.0793, -22.043, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -6.49594, -85.9174, -17.5314, 0.59 ) }
    dend_49 { pt3dadd( -6.50697, -86.6466, -17.7138, 0.59 ) }
    dend_49 { pt3dadd( -6.59408, -87.5969, -18.0798, 0.52 ) }
    dend_49 { pt3dadd( -6.67051, -88.5502, -18.4964, 0.44 ) }
    dend_49 { pt3dadd( -6.73107, -89.3732, -18.8737, 0.44 ) }
    dend_49 { pt3dadd( -6.77123, -90.4887, -19.3813, 0.59 ) }
    dend_49 { pt3dadd( -6.79162, -91.8213, -20.0068, 0.74 ) }
    dend_49 { pt3dadd( -6.79727, -92.8186, -20.5197, 0.59 ) }
    dend_49 { pt3dadd( -6.78655, -93.5393, -20.9139, 0.59 ) }
    dend_49 { pt3dadd( -6.78278, -93.5965, -20.9452, 0.59 ) }
    dend_49 { pt3dadd( -6.64129, -94.7104, -21.5028, 0.59 ) }
    dend_49 { pt3dadd( -6.38087, -95.9048, -21.9872, 0.74 ) }
    dend_49 { pt3dadd( -6.184, -96.5848, -22.2232, 0.74 ) }
    dend_49 { pt3dadd( -5.82654, -97.686, -22.5798, 0.66 ) }
    dend_49 { pt3dadd( -5.47369, -98.6979, -22.8974, 0.59 ) }
    dend_49 { pt3dadd( -5.41839, -98.8235, -22.9317, 0.59 ) }
    dend_49 { pt3dadd( -4.8581, -99.7502, -23.1435, 0.59 ) }
    dend_49 { pt3dadd( -4.59862, -100.072, -23.1983, 0.81 ) }
    dend_49 { pt3dadd( -4.54857, -100.128, -23.2066, 0.81 ) }
    dend_49 { pt3dadd( -4.06866, -100.661, -23.288, 0.81 ) }
    dend_49 { pt3dadd( -3.22371, -101.675, -23.513, 0.66 ) }
    dend_49 { pt3dadd( -2.64688, -102.474, -23.7166, 0.66 ) }
    dend_49 { pt3dadd( -2.16169, -103.259, -23.8888, 0.66 ) }
    dend_49 { pt3dadd( -1.66149, -104.144, -24.0236, 0.81 ) }
    dend_49 { pt3dadd( -1.29928, -104.85, -24.1022, 0.96 ) }
    dend_49 { pt3dadd( -0.821771, -105.903, -24.189, 0.52 ) }
    dend_49 { pt3dadd( -0.489007, -106.732, -24.2509, 0.52 ) }
    dend_49 { pt3dadd( -0.0549318, -107.819, -24.2785, 0.81 ) }
    dend_49 { pt3dadd( 0.317962, -108.689, -24.2796, 0.81 ) }
    dend_49 { pt3dadd( 0.671885, -109.487, -24.2663, 0.81 ) }
    dend_49 { pt3dadd( 0.701269, -109.558, -24.2638, 0.81 ) }
    dend_49 { pt3dadd( 1.11488, -110.632, -24.2371, 0.81 ) }
    dend_49 { pt3dadd( 1.15763, -110.757, -24.2404, 0.81 ) }
    dend_49 { pt3dadd( 1.51155, -112.024, -24.3103, 0.81 ) }
    dend_49 { pt3dadd( 1.72725, -112.985, -24.3531, 0.81 ) }
    dend_49 { pt3dadd( 1.90204, -113.892, -24.3658, 0.66 ) }
    dend_49 { pt3dadd( 1.91614, -113.967, -24.3624, 0.66 ) }
    dend_49 { pt3dadd( 2.0851, -114.931, -24.2746, 0.37 ) }
    dend_49 { pt3dadd( 2.30107, -116.075, -24.1572, 0.66 ) }
    dend_49 { pt3dadd( 2.40614, -116.602, -24.0943, 0.96 ) }
    dend_49 { pt3dadd( 2.65986, -117.64, -23.9371, 0.74 ) }
    dend_49 { pt3dadd( 2.99954, -118.89, -23.719, 0.96 ) }
    dend_49 { pt3dadd( 3.2501, -119.847, -23.5579, 0.81 ) }
    dend_49 { pt3dadd( 3.53519, -120.977, -23.3799, 0.74 ) }
    dend_49 { pt3dadd( 3.54603, -121.032, -23.3746, 0.74 ) }
    dend_49 { pt3dadd( 3.72512, -122.216, -23.3431, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 3.73391, -122.283, -23.3486, 0.74 ) }
    dend_49 { pt3dadd( 3.85888, -123.426, -23.69, 0.44 ) }
    dend_49 { pt3dadd( 3.92265, -124.012, -23.9351, 0.44 ) }
    dend_49 { pt3dadd( 4.04242, -125.198, -24.5349, 1.4 ) }
    dend_49 { pt3dadd( 4.12471, -125.95, -25.0012, 1.18 ) }
    dend_49 { pt3dadd( 4.22888, -126.865, -25.7009, 1.03 ) }
    dend_49 { pt3dadd( 4.4683, -128.348, -26.9795, 0.66 ) }
    dend_49 { pt3dadd( 4.60061, -128.897, -27.4943, 0.66 ) }
    dend_49 { pt3dadd( 4.63833, -129.019, -27.6125, 0.66 ) }
    dend_49 { pt3dadd( 5.0497, -130.122, -28.6602, 0.81 ) }
    dend_49 { pt3dadd( 5.34713, -130.932, -29.4662, 0.96 ) }
    dend_49 { pt3dadd( 5.73922, -131.979, -30.5439, 0.74 ) }
    dend_49 { pt3dadd( 6.08193, -132.766, -31.3477, 0.74 ) }
    dend_49 { pt3dadd( 6.36188, -133.361, -31.9556, 0.96 ) }
    dend_49 { pt3dadd( 6.59086, -133.816, -32.3856, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -27.4104, -365.979, -9.05494, 0.29 ) }
    dend_47 { pt3dadd( -26.3153, -365.95, -9.658, 0.29 ) }
    dend_47 { pt3dadd( -25.6515, -365.932, -10.0235, 0.29 ) }
    dend_47 { pt3dadd( -24.3553, -365.898, -10.7374, 0.22 ) }
    dend_47 { pt3dadd( -23.7205, -365.881, -11.0869, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -27.4104, -365.979, -9.05494, 0.59 ) }
    dend_44 { pt3dadd( -27.8301, -367.754, -9.10825, 0.59 ) }
    dend_44 { pt3dadd( -27.8621, -367.869, -9.10935, 0.59 ) }
    dend_44 { pt3dadd( -28.4244, -369.693, -9.07677, 0.52 ) }
    dend_44 { pt3dadd( -29.007, -371.537, -9.02391, 0.66 ) }
    dend_44 { pt3dadd( -29.5089, -373.28, -8.97108, 0.66 ) }
    dend_44 { pt3dadd( -30.0013, -375.086, -8.91557, 0.81 ) }
    dend_44 { pt3dadd( -30.1058, -375.452, -8.89345, 0.81 ) }
    dend_44 { pt3dadd( -30.5174, -377.283, -8.71468, 0.81 ) }
    dend_44 { pt3dadd( -30.553, -377.528, -8.68299, 0.81 ) }
    dend_44 { pt3dadd( -30.5239, -379.663, -8.27846, 0.81 ) }
    dend_44 { pt3dadd( -30.516, -379.794, -8.26073, 0.81 ) }
    dend_44 { pt3dadd( -30.46, -381.72, -8.28574, 0.59 ) }
    dend_44 { pt3dadd( -30.4824, -383.639, -8.49515, 0.37 ) }
    dend_44 { pt3dadd( -30.5567, -384.804, -8.828, 0.74 ) }
    dend_44 { pt3dadd( -30.9843, -387.096, -10.0757, 0.81 ) }
    dend_44 { pt3dadd( -31.5653, -389.482, -11.8256, 0.52 ) }
    dend_44 { pt3dadd( -32.2777, -392.324, -14.3052, 0.52 ) }
    dend_44 { pt3dadd( -32.2979, -392.396, -14.3757, 0.52 ) }
    dend_44 { pt3dadd( -32.9868, -394.44, -16.846, 0.96 ) }
    dend_44 { pt3dadd( -33.8483, -396.841, -20.3393, 1.69 ) }
    dend_44 { pt3dadd( -34.1586, -397.732, -21.8802, 0.37 ) }
    dend_44 { pt3dadd( -34.4834, -398.842, -24.1472, 0.37 ) }
    dend_44 { pt3dadd( -34.5795, -399.325, -25.2252, 0.66 ) }
    dend_44 { pt3dadd( -34.8614, -401.533, -30.321, 1.25 ) }
    dend_44 { pt3dadd( -34.925, -402.991, -33.8837, 0.44 ) }
    dend_44 { pt3dadd( -34.8794, -403.881, -36.0929, 0.81 ) }
    dend_44 { pt3dadd( -34.7302, -405.583, -40.3061, 0.37 ) }
    dend_44 { pt3dadd( -34.6067, -406.249, -41.9273, 0.29 ) }
    dend_44 { pt3dadd( -34.2743, -407.185, -44.0983, 0.29 ) }
    dend_44 { pt3dadd( -34.0168, -407.659, -44.9985, 0.96 ) }
    dend_44 { pt3dadd( -33.6781, -408.166, -45.8867, 0.96 ) }
    dend_44 { pt3dadd( -32.8757, -409.338, -47.679, 0.44 ) }
    dend_44 { pt3dadd( -32.5898, -409.738, -48.3636, 0.81 ) }
    dend_44 { pt3dadd( -32.2197, -410.228, -49.3698, 1.03 ) }
    dend_44 { pt3dadd( -32.1769, -410.282, -49.4832, 1.03 ) }
    dend_44 { pt3dadd( -31.0062, -411.852, -52.4467, 0.37 ) }
    dend_44 { pt3dadd( -30.212, -412.98, -54.4176, 1.4 ) }
    dend_44 { pt3dadd( -29.0183, -415.251, -58.1227, 0.37 ) }
    dend_44 { pt3dadd( -28.7261, -415.974, -59.2014, 0.66 ) }
    dend_44 { pt3dadd( -28.3209, -417.111, -60.733, 0.29 ) }
    dend_44 { pt3dadd( -27.9376, -418.131, -61.9215, 0.96 ) }
    dend_44 { pt3dadd( -27.7406, -418.625, -62.3929, 0.96 ) }
    dend_44 { pt3dadd( -26.1252, -422.597, -65.5128, 0.37 ) }
    dend_44 { pt3dadd( -25.892, -423.171, -65.8493, 0.59 ) }
    dend_44 { pt3dadd( -25.2429, -424.749, -66.8079, 0.29 ) }
    dend_44 { pt3dadd( -24.5542, -426.328, -67.9289, 0.96 ) }
    dend_44 { pt3dadd( -24.5134, -426.413, -67.9947, 0.96 ) }
    dend_44 { pt3dadd( -24.0437, -427.145, -68.4046, 1.33 ) }
    dend_44 { pt3dadd( -23.9602, -427.228, -68.3963, 1.33 ) }
    dend_44 { pt3dadd( -23.3853, -427.805, -68.3008, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -62.0753, -100.92, -13.3573, 0.29 ) }
    dend_40 { pt3dadd( -61.5998, -102.281, -12.9193, 0.29 ) }
    dend_40 { pt3dadd( -61.2609, -103.25, -12.6073, 0.37 ) }
    dend_40 { pt3dadd( -60.9482, -104.145, -12.3192, 0.37 ) }
    dend_40 { pt3dadd( -60.5002, -105.427, -11.9067, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -62.0753, -100.92, -13.3573, 0.37 ) }
    dend_35 { pt3dadd( -63.1511, -101.608, -13.1332, 0.37 ) }
    dend_35 { pt3dadd( -63.904, -101.994, -12.884, 0.37 ) }
    dend_35 { pt3dadd( -64.7705, -102.342, -12.5662, 0.81 ) }
    dend_35 { pt3dadd( -65.3659, -102.52, -12.2462, 1.25 ) }
    dend_35 { pt3dadd( -65.8158, -102.629, -11.9623, 1.25 ) }
    dend_35 { pt3dadd( -67.7306, -103.097, -10.7324, 0.44 ) }
    dend_35 { pt3dadd( -67.8629, -103.121, -10.6413, 0.44 ) }
    dend_35 { pt3dadd( -68.3102, -103.191, -10.3321, 0.74 ) }
    dend_35 { pt3dadd( -70.0764, -103.481, -9.16431, 0.52 ) }
    dend_35 { pt3dadd( -71.0005, -103.691, -8.60517, 0.59 ) }
    dend_35 { pt3dadd( -71.6837, -103.939, -8.31273, 0.44 ) }
    dend_35 { pt3dadd( -72.2295, -104.244, -8.22721, 0.29 ) }
    dend_35 { pt3dadd( -72.8077, -104.643, -8.21491, 0.29 ) }
    dend_35 { pt3dadd( -73.521, -105.263, -8.30745, 1.11 ) }
    dend_35 { pt3dadd( -73.9567, -105.727, -8.43671, 1.33 ) }
    dend_35 { pt3dadd( -74.9644, -107.057, -8.80534, 0.74 ) }
    dend_35 { pt3dadd( -75.4507, -107.844, -8.98516, 0.74 ) }
    dend_35 { pt3dadd( -75.7032, -108.351, -9.07344, 1.11 ) }
    dend_35 { pt3dadd( -75.9833, -108.982, -9.1355, 0.88 ) }
    dend_35 { pt3dadd( -76.2986, -109.758, -9.15559, 0.66 ) }
    dend_35 { pt3dadd( -76.6456, -110.676, -9.12466, 0.37 ) }
    dend_35 { pt3dadd( -76.8374, -111.292, -9.05639, 0.37 ) }
    dend_35 { pt3dadd( -77.0982, -112.249, -8.94332, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -77.3404, -113.312, -8.81624, 0.37 ) }
    dend_35 { pt3dadd( -77.4963, -114.103, -8.72453, 0.29 ) }
    dend_35 { pt3dadd( -77.6119, -114.859, -8.61535, 0.59 ) }
    dend_35 { pt3dadd( -77.711, -115.626, -8.46539, 0.81 ) }
    dend_35 { pt3dadd( -77.715, -115.689, -8.45232, 0.81 ) }
    dend_35 { pt3dadd( -77.7144, -116.536, -8.23952, 0.74 ) }
    dend_35 { pt3dadd( -77.6835, -117.072, -8.09934, 1.11 ) }
    dend_35 { pt3dadd( -77.5923, -118.251, -7.7652, 0.59 ) }
    dend_35 { pt3dadd( -77.556, -118.789, -7.60304, 1.03 ) }
    dend_35 { pt3dadd( -77.5173, -119.832, -7.25768, 0.52 ) }
    dend_35 { pt3dadd( -77.5079, -120.701, -6.96101, 0.74 ) }
    dend_35 { pt3dadd( -77.5187, -121.313, -6.75428, 0.66 ) }
    dend_35 { pt3dadd( -77.5595, -122.425, -6.3897, 0.44 ) }
    dend_35 { pt3dadd( -77.6464, -123.409, -6.07879, 0.44 ) }
    dend_35 { pt3dadd( -77.8262, -124.432, -5.76174, 0.44 ) }
    dend_35 { pt3dadd( -77.9455, -124.842, -5.63894, 0.81 ) }
    dend_35 { pt3dadd( -78.2246, -125.575, -5.44257, 1.18 ) }
    dend_35 { pt3dadd( -78.3578, -125.85, -5.37024, 1.33 ) }
    dend_35 { pt3dadd( -78.9844, -126.957, -5.06362, 0.44 ) }
    dend_35 { pt3dadd( -79.5063, -127.822, -4.83115, 0.59 ) }
    dend_35 { pt3dadd( -79.9273, -128.448, -4.58554, 0.81 ) }
    dend_35 { pt3dadd( -80.1504, -128.735, -4.43998, 0.81 ) }
    dend_35 { pt3dadd( -80.7386, -129.35, -4.01603, 0.37 ) }
    dend_35 { pt3dadd( -81.4078, -129.935, -3.54463, 0.74 ) }
    dend_35 { pt3dadd( -81.6862, -130.136, -3.35358, 0.96 ) }
    dend_35 { pt3dadd( -83.2533, -131.153, -2.24507, 0.59 ) }
    dend_35 { pt3dadd( -83.9399, -131.552, -1.76404, 0.81 ) }
    dend_35 { pt3dadd( -85.3175, -132.266, -0.811408, 0.52 ) }
    dend_35 { pt3dadd( -86.1602, -132.634, -0.253129, 0.52 ) }
    dend_35 { pt3dadd( -86.9044, -132.912, 0.191301, 0.74 ) }
    dend_35 { pt3dadd( -92.44, -140.626, 4.76441, 0.74 ) }
    dend_35 { pt3dadd( -98.2227, -148.728, 8.26271, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -130.294, -122.869, -176.007, 0.52 ) }
    dend_33 { pt3dadd( -129.841, -124.009, -176.677, 0.52 ) }
    dend_33 { pt3dadd( -129.298, -125.33, -177.422, 0.88 ) }
    dend_33 { pt3dadd( -129.015, -125.949, -177.744, 0.88 ) }
    dend_33 { pt3dadd( -128.496, -126.976, -178.266, 0.37 ) }
    dend_33 { pt3dadd( -128.261, -127.424, -178.48, 0.29 ) }
    dend_33 { pt3dadd( -128.052, -127.841, -178.666, 0.88 ) }
    dend_33 { pt3dadd( -128.008, -127.926, -178.7, 0.88 ) }
    dend_33 { pt3dadd( -127.69, -128.619, -178.888, 0.88 ) }
    dend_33 { pt3dadd( -127.312, -129.547, -179.093, 0.29 ) }
    dend_33 { pt3dadd( -127.084, -130.199, -179.182, 0.29 ) }
    dend_33 { pt3dadd( -126.909, -130.807, -179.252, 0.22 ) }
    dend_33 { pt3dadd( -126.752, -131.51, -179.319, 0.22 ) }
    dend_33 { pt3dadd( -126.701, -131.853, -179.347, 0.81 ) }
    dend_33 { pt3dadd( -126.657, -132.481, -179.383, 1.25 ) }
    dend_33 { pt3dadd( -126.621, -133.519, -179.41, 0.37 ) }
    dend_33 { pt3dadd( -126.603, -134.491, -179.437, 0.22 ) }
    dend_33 { pt3dadd( -126.597, -135.085, -179.454, 0.66 ) }
    dend_33 { pt3dadd( -126.603, -135.646, -179.473, 0.81 ) }
    dend_33 { pt3dadd( -126.64, -136.774, -179.515, 0.22 ) }
    dend_33 { pt3dadd( -126.676, -137.325, -179.538, 0.88 ) }
    dend_33 { pt3dadd( -126.708, -137.63, -179.554, 1.03 ) }
    dend_33 { pt3dadd( -126.747, -138.091, -179.579, 1.03 ) }
    dend_33 { pt3dadd( -126.77, -138.573, -179.603, 0.74 ) }
    dend_33 { pt3dadd( -126.767, -138.651, -179.606, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -130.294, -122.869, -176.007, 0.22 ) }
    dend_32 { pt3dadd( -132.112, -123.036, -178.363, 0.22 ) }
    dend_32 { pt3dadd( -132.836, -123.162, -179.238, 0.22 ) }
    dend_32 { pt3dadd( -133.619, -123.342, -180.092, 0.81 ) }
    dend_32 { pt3dadd( -134.043, -123.462, -180.504, 1.11 ) }
    dend_32 { pt3dadd( -134.567, -123.636, -180.954, 1.03 ) }
    dend_32 { pt3dadd( -136.049, -124.163, -182.103, 0.22 ) }
    dend_32 { pt3dadd( -136.325, -124.29, -182.264, 0.66 ) }
    dend_32 { pt3dadd( -136.936, -124.6, -182.616, 0.96 ) }
    dend_32 { pt3dadd( -137.648, -124.924, -182.963, 0.29 ) }
    dend_32 { pt3dadd( -138.474, -125.229, -183.345, 0.29 ) }
    dend_32 { pt3dadd( -138.794, -125.32, -183.474, 0.96 ) }
    dend_32 { pt3dadd( -139.445, -125.453, -183.726, 1.18 ) }
    dend_32 { pt3dadd( -139.507, -125.46, -183.756, 1.18 ) }
    dend_32 { pt3dadd( -140.32, -125.5, -184.182, 0.88 ) }
    dend_32 { pt3dadd( -140.442, -125.504, -184.248, 0.88 ) }
    dend_32 { pt3dadd( -140.949, -125.541, -184.518, 0.66 ) }
    dend_32 { pt3dadd( -142.149, -125.742, -185.226, 0.29 ) }
    dend_32 { pt3dadd( -142.374, -125.792, -185.359, 0.29 ) }
    dend_32 { pt3dadd( -143.301, -126.044, -185.913, 0.29 ) }
    dend_32 { pt3dadd( -143.782, -126.156, -186.278, 0.59 ) }
    dend_32 { pt3dadd( -144.17, -126.22, -186.599, 0.59 ) }
    dend_32 { pt3dadd( -145.322, -126.351, -187.64, 0.29 ) }
    dend_32 { pt3dadd( -145.639, -126.371, -187.928, 1.03 ) }
    dend_32 { pt3dadd( -146.105, -126.349, -188.429, 1.33 ) }
    dend_32 { pt3dadd( -147.506, -126.047, -190.243, 0.29 ) }
    dend_32 { pt3dadd( -147.76, -125.96, -190.584, 0.29 ) }
    dend_32 { pt3dadd( -147.808, -125.94, -190.65, 0.29 ) }
    dend_32 { pt3dadd( -148.213, -125.772, -191.282, 0.59 ) }
    dend_32 { pt3dadd( -149.157, -125.473, -192.852, 0.81 ) }
    dend_32 { pt3dadd( -149.777, -125.376, -194.029, 0.52 ) }
    dend_32 { pt3dadd( -150.078, -125.407, -194.663, 1.11 ) }
    dend_32 { pt3dadd( -150.596, -125.563, -195.909, 1.4 ) }
    dend_32 { pt3dadd( -151.341, -125.838, -197.805, 0.29 ) }
    dend_32 { pt3dadd( -151.507, -125.923, -198.269, 0.88 ) }
    dend_32 { pt3dadd( -152.152, -126.454, -200.192, 0.52 ) }
    dend_32 { pt3dadd( -152.615, -127.005, -201.754, 0.81 ) }
    dend_32 { pt3dadd( -152.766, -127.249, -202.366, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -37.4148, 384.041, -12.3398, 0.37 ) }
    dend_23 { pt3dadd( -36.9099, 384.033, -12.1626, 0.37 ) }
    dend_23 { pt3dadd( -35.9369, 383.954, -11.8207, 0.66 ) }
    dend_23 { pt3dadd( -35.8737, 383.945, -11.7968, 0.66 ) }
    dend_23 { pt3dadd( -35.4146, 383.876, -11.6219, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( -35.341, 383.865, -11.5933, 0.29 ) }
    dend_23 { pt3dadd( -34.0692, 383.731, -11.1627, 0.29 ) }
    dend_23 { pt3dadd( -34.0051, 383.727, -11.1417, 0.29 ) }
    dend_23 { pt3dadd( -33.7065, 383.736, -11.0373, 0.66 ) }
    dend_23 { pt3dadd( -33.3462, 383.76, -10.9237, 0.52 ) }
    dend_23 { pt3dadd( -33.2788, 383.768, -10.9058, 0.52 ) }
    dend_23 { pt3dadd( -32.0425, 384.028, -10.5748, 0.22 ) }
    dend_23 { pt3dadd( -31.4518, 384.285, -10.4015, 0.22 ) }
    dend_23 { pt3dadd( -31.1278, 384.436, -10.3134, 0.29 ) }
    dend_23 { pt3dadd( -22.7826, 386.958, -6.1483, 0.29 ) }
    dend_23 { pt3dadd( -15.1705, 391.264, -1.97239, 0.29 ) }
    dend_23 { pt3dadd( -7.1692, 396.21, 0.424449, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -37.4148, 384.041, -12.3398, 0.29 ) }
    dend_22 { pt3dadd( -37.1798, 385.635, -12.2781, 0.29 ) }
    dend_22 { pt3dadd( -37.1181, 386.172, -12.283, 0.29 ) }
    dend_22 { pt3dadd( -37.1167, 386.243, -12.2843, 0.29 ) }
    dend_22 { pt3dadd( -37.1477, 387.066, -12.304, 0.29 ) }
    dend_22 { pt3dadd( -37.1526, 387.127, -12.306, 0.29 ) }
    dend_22 { pt3dadd( -37.3183, 388.234, -12.3258, 0.29 ) }
    dend_22 { pt3dadd( -37.3366, 388.292, -12.3298, 0.29 ) }
    dend_22 { pt3dadd( -37.5658, 388.98, -12.3238, 0.52 ) }
    dend_22 { pt3dadd( -37.6067, 389.118, -12.3151, 0.52 ) }
    dend_22 { pt3dadd( -37.6708, 389.408, -12.2885, 0.52 ) }
    dend_22 { pt3dadd( -37.7816, 390.112, -12.22, 0.22 ) }
    dend_22 { pt3dadd( -37.8374, 390.8, -12.1647, 0.22 ) }
    dend_22 { pt3dadd( -37.8666, 391.486, -12.1149, 0.44 ) }
    dend_22 { pt3dadd( -37.8535, 392.01, -12.0857, 0.44 ) }
    dend_22 { pt3dadd( -37.8163, 392.754, -12.0495, 0.22 ) }
    dend_22 { pt3dadd( -37.8095, 392.827, -12.0475, 0.22 ) }
    dend_22 { pt3dadd( -37.6325, 393.857, -12.0819, 0.22 ) }
    dend_22 { pt3dadd( -37.8796, 403.894, -13.1045, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 12.9672, 182.114, -71.4627, 0.66 ) }
    dend_19 { pt3dadd( 12.7845, 182.794, -71.6968, 0.66 ) }
    dend_19 { pt3dadd( 12.6177, 183.453, -71.889, 0.29 ) }
    dend_19 { pt3dadd( 12.6006, 183.524, -71.9071, 0.29 ) }
    dend_19 { pt3dadd( 12.4362, 184.222, -72.07, 0.29 ) }
    dend_19 { pt3dadd( 12.1478, 185.419, -72.3756, 0.29 ) }
    dend_19 { pt3dadd( 12.0193, 185.93, -72.5266, 0.52 ) }
    dend_19 { pt3dadd( 11.9757, 186.097, -72.5809, 0.52 ) }
    dend_19 { pt3dadd( 11.9132, 186.338, -72.6621, 0.52 ) }
    dend_19 { pt3dadd( 11.7964, 186.778, -72.8201, 0.37 ) }
    dend_19 { pt3dadd( 11.6292, 187.375, -73.0661, 0.37 ) }
    dend_19 { pt3dadd( 11.3509, 188.214, -73.5642, 0.88 ) }
    dend_19 { pt3dadd( 11.3096, 188.324, -73.6391, 0.88 ) }
    dend_19 { pt3dadd( 11.1359, 188.762, -73.9479, 1.03 ) }
    dend_19 { pt3dadd( 10.9656, 189.186, -74.2377, 1.18 ) }
    dend_19 { pt3dadd( 10.7789, 189.658, -74.5352, 0.66 ) }
    dend_19 { pt3dadd( 10.5483, 190.257, -74.8729, 0.52 ) }
    dend_19 { pt3dadd( 10.438, 190.554, -75.0208, 0.59 ) }
    dend_19 { pt3dadd( 10.3273, 190.892, -75.1539, 0.44 ) }
    dend_19 { pt3dadd( 10.0559, 191.848, -75.4274, 0.29 ) }
    dend_19 { pt3dadd( 9.96239, 192.227, -75.5063, 0.37 ) }
    dend_19 { pt3dadd( 9.94956, 192.302, -75.5199, 0.37 ) }
    dend_19 { pt3dadd( 9.89198, 192.742, -75.6118, 0.22 ) }
    dend_19 { pt3dadd( 9.75431, 193.592, -75.8406, 0.59 ) }
    dend_19 { pt3dadd( 9.67028, 194.026, -75.9783, 0.88 ) }
    dend_19 { pt3dadd( 9.5066, 194.742, -76.236, 0.52 ) }
    dend_19 { pt3dadd( 9.27586, 195.627, -76.5869, 0.29 ) }
    dend_19 { pt3dadd( 9.0873, 196.267, -76.8628, 0.29 ) }
    dend_19 { pt3dadd( 8.80646, 197.102, -77.2666, 0.59 ) }
    dend_19 { pt3dadd( 8.77771, 197.165, -77.3, 0.59 ) }
    dend_19 { pt3dadd( 8.54375, 197.59, -77.5238, 0.29 ) }
    dend_19 { pt3dadd( 8.48598, 197.679, -77.5679, 0.29 ) }
    dend_19 { pt3dadd( 8.03666, 198.363, -77.8054, 0.52 ) }
    dend_19 { pt3dadd( 7.85931, 198.694, -77.9016, 0.66 ) }
    dend_19 { pt3dadd( 7.49628, 199.505, -78.1438, 0.52 ) }
    dend_19 { pt3dadd( 7.4673, 199.573, -78.1646, 0.52 ) }
    dend_19 { pt3dadd( 7.27424, 200.063, -78.3226, 0.29 ) }
    dend_19 { pt3dadd( 6.91072, 201.258, -78.7526, 0.29 ) }
    dend_19 { pt3dadd( 6.7258, 202.134, -79.1046, 0.66 ) }
    dend_19 { pt3dadd( 6.66146, 202.448, -79.2412, 0.88 ) }
    dend_19 { pt3dadd( 6.64856, 202.515, -79.2725, 0.88 ) }
    dend_19 { pt3dadd( 6.49888, 203.123, -79.5916, 0.52 ) }
    dend_19 { pt3dadd( 6.26408, 203.884, -80.0541, 0.52 ) }
    dend_19 { pt3dadd( 6.0389, 204.51, -80.457, 0.29 ) }
    dend_19 { pt3dadd( 5.72602, 205.341, -80.9491, 0.29 ) }
    dend_19 { pt3dadd( 5.46792, 205.993, -81.303, 1.03 ) }
    dend_19 { pt3dadd( 5.18189, 206.695, -81.6551, 0.74 ) }
    dend_19 { pt3dadd( 4.81231, 207.496, -81.997, 0.29 ) }
    dend_19 { pt3dadd( 4.24786, 208.631, -82.4064, 0.44 ) }
    dend_19 { pt3dadd( 3.95039, 209.229, -82.5865, 0.37 ) }
    dend_19 { pt3dadd( 3.60548, 209.945, -82.7708, 0.37 ) }
    dend_19 { pt3dadd( 3.21396, 210.722, -82.9217, 0.96 ) }
    dend_19 { pt3dadd( 2.66901, 211.785, -83.0433, 0.37 ) }
    dend_19 { pt3dadd( 2.2913, 212.499, -83.0821, 0.37 ) }
    dend_19 { pt3dadd( 1.9465, 213.129, -83.0873, 0.59 ) }
    dend_19 { pt3dadd( 1.76745, 213.476, -83.0799, 0.88 ) }
    dend_19 { pt3dadd( 1.66715, 213.689, -83.0737, 0.88 ) }
    dend_19 { pt3dadd( 1.37772, 214.368, -83.0517, 0.59 ) }
    dend_19 { pt3dadd( 1.35637, 214.428, -83.0511, 0.52 ) }
    dend_19 { pt3dadd( 0.850542, 215.932, -83.0202, 0.15 ) }
    dend_19 { pt3dadd( 0.643055, 216.625, -83.0152, 0.59 ) }
    dend_19 { pt3dadd( 0.622542, 216.697, -83.0147, 0.59 ) }
    dend_19 { pt3dadd( 0.488003, 217.25, -82.9839, 0.59 ) }
    dend_19 { pt3dadd( 0.473634, 217.322, -82.9768, 0.59 ) }
    dend_19 { pt3dadd( 0.374044, 217.921, -82.906, 0.88 ) }
    dend_19 { pt3dadd( 0.261277, 218.774, -82.8098, 1.18 ) }
    dend_19 { pt3dadd( 0.208682, 219.157, -82.7736, 1.18 ) }
    dend_19 { pt3dadd( -0.0259611, 220.601, -82.6915, 0.15 ) }
    dend_19 { pt3dadd( -0.226633, 221.66, -82.6891, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( -0.352282, 222.234, -82.7299, 0.52 ) }
    dend_19 { pt3dadd( -0.517445, 222.9, -82.8246, 0.66 ) }
    dend_19 { pt3dadd( -0.623116, 223.279, -82.9112, 0.74 ) }
    dend_19 { pt3dadd( -0.853288, 224.027, -83.1467, 0.29 ) }
    dend_19 { pt3dadd( -1.08157, 224.723, -83.4093, 0.37 ) }
    dend_19 { pt3dadd( -1.41517, 225.626, -83.6973, 0.29 ) }
    dend_19 { pt3dadd( -1.44562, 225.704, -83.7161, 0.29 ) }
    dend_19 { pt3dadd( -1.85425, 226.769, -83.8238, 0.52 ) }
    dend_19 { pt3dadd( -1.87977, 226.84, -83.8217, 0.52 ) }
    dend_19 { pt3dadd( -2.20812, 227.807, -83.6707, 0.81 ) }
    dend_19 { pt3dadd( -2.54135, 228.818, -83.4155, 0.37 ) }
    dend_19 { pt3dadd( -2.56435, 228.886, -83.3941, 0.37 ) }
    dend_19 { pt3dadd( -2.9169, 229.911, -83.1252, 0.29 ) }
    dend_19 { pt3dadd( -3.08061, 230.383, -83.0284, 0.37 ) }
    dend_19 { pt3dadd( -3.10068, 230.444, -83.0212, 0.37 ) }
    dend_19 { pt3dadd( -3.29565, 231.106, -82.9934, 0.37 ) }
    dend_19 { pt3dadd( -3.65045, 232.152, -82.957, 0.29 ) }
    dend_19 { pt3dadd( -4.10309, 233.302, -82.8705, 0.37 ) }
    dend_19 { pt3dadd( -4.28309, 233.726, -82.8329, 0.88 ) }
    dend_19 { pt3dadd( -4.48069, 234.202, -82.7681, 0.96 ) }
    dend_19 { pt3dadd( -4.96572, 235.332, -82.5018, 0.52 ) }
    dend_19 { pt3dadd( -5.56195, 236.722, -82.0358, 0.66 ) }
    dend_19 { pt3dadd( -5.7923, 237.24, -81.8105, 0.66 ) }
    dend_19 { pt3dadd( -6.0918, 237.895, -81.4592, 0.29 ) }
    dend_19 { pt3dadd( -6.43573, 238.629, -81.0284, 0.44 ) }
    dend_19 { pt3dadd( -6.84299, 239.471, -80.5099, 1.11 ) }
    dend_19 { pt3dadd( -7.17424, 240.143, -80.0959, 1.11 ) }
    dend_19 { pt3dadd( -7.66088, 241.2, -79.4804, 1.11 ) }
    dend_19 { pt3dadd( -7.89606, 241.648, -79.2085, 1.55 ) }
    dend_19 { pt3dadd( -8.31985, 242.369, -78.7252, 1.55 ) }
    dend_19 { pt3dadd( -8.37888, 242.456, -78.6576, 1.55 ) }
    dend_19 { pt3dadd( -8.77639, 242.944, -78.2153, 1.55 ) }
    dend_19 { pt3dadd( -8.80984, 242.98, -78.1772, 1.55 ) }
    dend_19 { pt3dadd( -9.34429, 243.512, -77.5468, 2.06 ) }
    dend_19 { pt3dadd( -9.38593, 243.549, -77.4992, 2.06 ) }
    dend_19 { pt3dadd( -10.5406, 244.513, -76.158, 0.52 ) }
    dend_19 { pt3dadd( -11.2248, 245.066, -75.342, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.9672, 182.114, -71.4627, 0.74 ) }
    dend_18 { pt3dadd( 13.1032, 181.213, -70.7934, 0.74 ) }
    dend_18 { pt3dadd( 13.1116, 181.163, -70.7596, 0.74 ) }
    dend_18 { pt3dadd( 13.2235, 180.525, -70.3612, 0.37 ) }
    dend_18 { pt3dadd( 13.3918, 179.589, -69.8187, 0.22 ) }
    dend_18 { pt3dadd( 13.4756, 179.131, -69.5803, 0.37 ) }
    dend_18 { pt3dadd( 13.5864, 178.563, -69.3023, 0.15 ) }
    dend_18 { pt3dadd( 13.777, 177.676, -68.9225, 0.15 ) }
    dend_18 { pt3dadd( 13.8616, 177.28, -68.7563, 0.44 ) }
    dend_18 { pt3dadd( 13.9525, 176.845, -68.5846, 0.44 ) }
    dend_18 { pt3dadd( 14.1313, 175.99, -68.287, 0.22 ) }
    dend_18 { pt3dadd( 14.3672, 174.999, -67.9694, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 103.321, 134.266, -86.0275, 0.22 ) }
    dend_13 { pt3dadd( 103.835, 134.881, -87.5643, 0.22 ) }
    dend_13 { pt3dadd( 104.016, 135.098, -88.1074, 0.74 ) }
    dend_13 { pt3dadd( 104.112, 135.213, -88.3957, 0.74 ) }
    dend_13 { pt3dadd( 104.869, 136.12, -90.6614, 0.29 ) }
    dend_13 { pt3dadd( 105.055, 136.342, -91.2177, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 103.321, 134.266, -86.0275, 0.22 ) }
    dend_12 { pt3dadd( 104.193, 133.844, -86.7356, 0.22 ) }
    dend_12 { pt3dadd( 104.809, 133.604, -87.2914, 0.66 ) }
    dend_12 { pt3dadd( 105.214, 133.466, -87.665, 0.66 ) }
    dend_12 { pt3dadd( 105.693, 133.339, -88.0947, 0.52 ) }
    dend_12 { pt3dadd( 106.643, 133.228, -88.9484, 0.22 ) }
    dend_12 { pt3dadd( 107.103, 133.249, -89.3446, 0.22 ) }
    dend_12 { pt3dadd( 107.778, 133.468, -89.8586, 0.59 ) }
    dend_12 { pt3dadd( 108.121, 133.631, -90.0872, 0.74 ) }
    dend_12 { pt3dadd( 108.621, 133.889, -90.3663, 0.74 ) }
    dend_12 { pt3dadd( 109.648, 134.454, -90.8296, 0.29 ) }
    dend_12 { pt3dadd( 110.535, 134.973, -91.132, 0.29 ) }
    dend_12 { pt3dadd( 111.633, 135.629, -91.4628, 0.59 ) }
    dend_12 { pt3dadd( 112.146, 135.936, -91.5873, 0.52 ) }
    dend_12 { pt3dadd( 113.161, 136.533, -91.8136, 0.22 ) }
    dend_12 { pt3dadd( 113.727, 136.829, -91.9221, 0.29 ) }
    dend_12 { pt3dadd( 114.526, 137.134, -92.0274, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 80.4412, 149.199, 51.364, 0.29 ) }
    dend_6 { pt3dadd( 83.0726, 155.983, 54.5398, 0.29 ) }
    dend_6 { pt3dadd( 84.9083, 163.474, 56.5519, 0.29 ) }
    dend_6 { pt3dadd( 86.5804, 170.919, 58.8444, 0.29 ) }
    dend_6 { pt3dadd( 87.3675, 178.224, 61.9103, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 80.4412, 149.199, 51.364, 0.44 ) }
    dend_5 { pt3dadd( 84.0241, 156.957, 55.4155, 0.29 ) }
    dend_5 { pt3dadd( 87.8259, 164.764, 59.1651, 0.29 ) }
    dend_5 { pt3dadd( 92.3347, 172.824, 61.2564, 0.29 ) }
    dend_5 { pt3dadd( 95.1902, 181.82, 62.408, 0.29 ) }
    dend_5 { pt3dadd( 98.4385, 190.712, 61.5782, 0.29 ) }
    dend_5 { pt3dadd( 101.351, 199.761, 61.2942, 0.29 ) }
    dend_5 { pt3dadd( 103.318, 209.068, 61.7332, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -121.283, -179.879, 4.28191, 0.29 ) }
    dend_91 { pt3dadd( -122.19, -185.528, 5.95565, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -121.283, -179.879, 4.28191, 0.44 ) }
    dend_88 { pt3dadd( -126.529, -186.692, 2.52229, 0.29 ) }
    dend_88 { pt3dadd( -130.471, -193.825, -0.758547, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -130.655, -176.555, 22.0416, 0.66 ) }
    dend_72 { pt3dadd( -130.878, -175.593, 22.6538, 0.66 ) }
    dend_72 { pt3dadd( -130.955, -175.003, 22.9744, 0.29 ) }
    dend_72 { pt3dadd( -131.015, -174.334, 23.2762, 0.29 ) }
    dend_72 { pt3dadd( -131.02, -174.279, 23.2954, 0.29 ) }
    dend_72 { pt3dadd( -131.127, -173.232, 23.5952, 0.52 ) }
    dend_72 { pt3dadd( -131.15, -173.027, 23.6449, 0.74 ) }
    dend_72 { pt3dadd( -131.213, -172.222, 23.7533, 0.37 ) }
    dend_72 { pt3dadd( -131.265, -171.53, 23.82, 0.37 ) }
    dend_72 { pt3dadd( -131.333, -170.847, 23.8583, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -131.367, -170.429, 23.8638, 0.59 ) }
    dend_72 { pt3dadd( -131.388, -169.968, 23.843, 0.59 ) }
    dend_72 { pt3dadd( -131.371, -169.434, 23.8216, 0.59 ) }
    dend_72 { pt3dadd( -131.274, -168.726, 23.7999, 0.52 ) }
    dend_72 { pt3dadd( -131.144, -168.206, 23.7914, 0.96 ) }
    dend_72 { pt3dadd( -130.936, -167.589, 23.7933, 0.37 ) }
    dend_72 { pt3dadd( -130.779, -167.207, 23.7927, 0.29 ) }
    dend_72 { pt3dadd( -130.442, -166.491, 23.7886, 0.29 ) }
    dend_72 { pt3dadd( -130.159, -165.91, 23.7848, 0.29 ) }
    dend_72 { pt3dadd( -129.977, -165.53, 23.7824, 0.52 ) }
    dend_72 { pt3dadd( -129.957, -165.478, 23.7814, 0.52 ) }
    dend_72 { pt3dadd( -129.864, -165.16, 23.7731, 0.52 ) }
    dend_72 { pt3dadd( -129.738, -164.535, 23.7574, 0.37 ) }
    dend_72 { pt3dadd( -129.627, -163.816, 23.7389, 0.37 ) }
    dend_72 { pt3dadd( -129.62, -163.758, 23.7376, 0.37 ) }
    dend_72 { pt3dadd( -129.527, -162.599, 23.7154, 0.37 ) }
    dend_72 { pt3dadd( -129.48, -161.557, 23.7001, 0.37 ) }
    dend_72 { pt3dadd( -129.459, -160.26, 23.6859, 0.37 ) }
    dend_72 { pt3dadd( -129.459, -160.153, 23.6852, 0.37 ) }
    dend_72 { pt3dadd( -129.43, -159.147, 23.669, 0.37 ) }
    dend_72 { pt3dadd( -129.427, -159.096, 23.6679, 0.37 ) }
    dend_72 { pt3dadd( -129.371, -158.453, 23.6533, 0.88 ) }
    dend_72 { pt3dadd( -129.355, -158.324, 23.6486, 0.88 ) }
    dend_72 { pt3dadd( -129.199, -157.527, 23.6085, 0.29 ) }
    dend_72 { pt3dadd( -128.947, -156.531, 23.5552, 0.29 ) }
    dend_72 { pt3dadd( -128.75, -155.898, 23.5185, 0.44 ) }
    dend_72 { pt3dadd( -128.595, -155.429, 23.4928, 0.44 ) }
    dend_72 { pt3dadd( -128.409, -154.877, 23.4487, 0.29 ) }
    dend_72 { pt3dadd( -128.386, -154.805, 23.442, 0.29 ) }
    dend_72 { pt3dadd( -128.1, -154.017, 23.355, 0.66 ) }
    dend_72 { pt3dadd( -128.018, -153.825, 23.3421, 0.66 ) }
    dend_72 { pt3dadd( -127.864, -153.491, 23.3279, 0.59 ) }
    dend_72 { pt3dadd( -127.477, -152.648, 23.3169, 0.37 ) }
    dend_72 { pt3dadd( -127.453, -152.596, 23.3201, 0.37 ) }
    dend_72 { pt3dadd( -126.92, -151.398, 23.4682, 0.37 ) }
    dend_72 { pt3dadd( -126.634, -150.704, 23.6087, 0.37 ) }
    dend_72 { pt3dadd( -126.435, -150.233, 23.7258, 0.37 ) }
    dend_72 { pt3dadd( -126.356, -150.051, 23.786, 0.88 ) }
    dend_72 { pt3dadd( -126.116, -149.494, 24.0567, 0.74 ) }
    dend_72 { pt3dadd( -126.1, -149.445, 24.0832, 0.74 ) }
    dend_72 { pt3dadd( -126.121, -149.067, 24.3592, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -130.655, -176.555, 22.0416, 0.52 ) }
    dend_69 { pt3dadd( -131.63, -177.325, 22.1958, 0.52 ) }
    dend_69 { pt3dadd( -132.56, -177.979, 22.3655, 0.29 ) }
    dend_69 { pt3dadd( -133.461, -178.574, 22.541, 0.29 ) }
    dend_69 { pt3dadd( -134.862, -179.452, 22.8347, 0.44 ) }
    dend_69 { pt3dadd( -136.041, -180.186, 23.0873, 0.37 ) }
    dend_69 { pt3dadd( -136.558, -180.508, 23.1991, 0.66 ) }
    dend_69 { pt3dadd( -137.022, -180.761, 23.3118, 0.88 ) }
    dend_69 { pt3dadd( -137.631, -181.024, 23.4311, 0.88 ) }
    dend_69 { pt3dadd( -138.55, -181.353, 23.5635, 0.44 ) }
    dend_69 { pt3dadd( -139.7, -181.736, 23.6627, 0.44 ) }
    dend_69 { pt3dadd( -139.782, -181.762, 23.6668, 0.44 ) }
    dend_69 { pt3dadd( -140.797, -182.054, 23.6984, 0.44 ) }
    dend_69 { pt3dadd( -142.461, -182.49, 23.7415, 0.29 ) }
    dend_69 { pt3dadd( -143.5, -182.729, 23.7758, 0.29 ) }
    dend_69 { pt3dadd( -144.772, -182.981, 23.9121, 0.29 ) }
    dend_69 { pt3dadd( -144.867, -182.997, 23.9309, 0.74 ) }
    dend_69 { pt3dadd( -144.947, -183.012, 23.9535, 0.74 ) }
    dend_69 { pt3dadd( -145.78, -183.196, 24.1885, 0.74 ) }
    dend_69 { pt3dadd( -146.51, -183.419, 24.4013, 0.74 ) }
    dend_69 { pt3dadd( -148.043, -183.957, 24.756, 0.29 ) }
    dend_69 { pt3dadd( -148.892, -184.296, 24.8605, 0.29 ) }
    dend_69 { pt3dadd( -150.091, -184.815, 24.9129, 0.29 ) }
    dend_69 { pt3dadd( -151.666, -185.546, 24.8649, 0.29 ) }
    dend_69 { pt3dadd( -152.406, -185.928, 24.8348, 0.59 ) }
    dend_69 { pt3dadd( -152.76, -186.111, 24.8229, 0.59 ) }
    dend_69 { pt3dadd( -153.812, -186.617, 24.8107, 0.37 ) }
    dend_69 { pt3dadd( -153.974, -186.683, 24.8623, 0.37 ) }
    dend_69 { pt3dadd( -154.723, -186.895, 25.4312, 0.37 ) }
    dend_69 { pt3dadd( -155.875, -187.117, 26.5365, 0.29 ) }
    dend_69 { pt3dadd( -156.522, -187.281, 27.3628, 0.29 ) }
    dend_69 { pt3dadd( -156.985, -187.429, 28.0767, 0.59 ) }
    dend_69 { pt3dadd( -157.829, -187.832, 29.624, 0.59 ) }
    dend_69 { pt3dadd( -158.268, -188.116, 30.5203, 0.59 ) }
    dend_69 { pt3dadd( -158.561, -188.423, 31.2653, 0.59 ) }
    dend_69 { pt3dadd( -159.314, -189.57, 33.3455, 0.44 ) }
    dend_69 { pt3dadd( -159.335, -189.609, 33.4019, 0.44 ) }
    dend_69 { pt3dadd( -159.641, -190.258, 34.2095, 0.44 ) }
    dend_69 { pt3dadd( -159.664, -190.303, 34.2605, 0.44 ) }
    dend_69 { pt3dadd( -160.199, -191.206, 35.2644, 0.59 ) }
    dend_69 { pt3dadd( -160.609, -191.735, 35.8501, 0.59 ) }
    dend_69 { pt3dadd( -161.316, -192.35, 36.5278, 0.29 ) }
    dend_69 { pt3dadd( -161.37, -192.391, 36.5774, 0.29 ) }
    dend_69 { pt3dadd( -162.687, -193.189, 37.6447, 0.44 ) }
    dend_69 { pt3dadd( -163.304, -193.509, 38.0491, 0.96 ) }
    dend_69 { pt3dadd( -163.959, -193.797, 38.3922, 1.33 ) }
    dend_69 { pt3dadd( -164.825, -194.169, 38.804, 0.88 ) }
    dend_69 { pt3dadd( -166.288, -194.816, 39.3944, 0.44 ) }
    dend_69 { pt3dadd( -167.471, -195.338, 39.7815, 0.44 ) }
    dend_69 { pt3dadd( -168.795, -195.895, 40.1054, 0.52 ) }
    dend_69 { pt3dadd( -169.753, -196.255, 40.3348, 0.52 ) }
    dend_69 { pt3dadd( -169.834, -196.281, 40.3535, 0.52 ) }
    dend_69 { pt3dadd( -171.084, -196.596, 40.6374, 0.37 ) }
    dend_69 { pt3dadd( -172.007, -196.764, 40.8361, 0.37 ) }
    dend_69 { pt3dadd( -172.95, -196.873, 41.1162, 0.37 ) }
    dend_69 { pt3dadd( -174.214, -196.93, 41.6221, 0.52 ) }
    dend_69 { pt3dadd( -174.614, -196.926, 41.798, 0.96 ) }
    dend_69 { pt3dadd( -175.061, -196.902, 41.9875, 0.96 ) }
    dend_69 { pt3dadd( -175.654, -196.84, 42.2291, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -176.454, -196.774, 42.528, 0.81 ) }
    dend_69 { pt3dadd( -177.839, -196.764, 42.9811, 0.37 ) }
    dend_69 { pt3dadd( -177.908, -196.77, 43.0002, 0.37 ) }
    dend_69 { pt3dadd( -179.092, -196.936, 43.2987, 0.37 ) }
    dend_69 { pt3dadd( -179.784, -197.066, 43.4571, 0.59 ) }
    dend_69 { pt3dadd( -180.295, -197.17, 43.5679, 0.66 ) }
    dend_69 { pt3dadd( -181.092, -197.327, 43.7371, 0.52 ) }
    dend_69 { pt3dadd( -182.111, -197.469, 43.9069, 0.29 ) }
    dend_69 { pt3dadd( -182.207, -197.476, 43.925, 0.29 ) }
    dend_69 { pt3dadd( -183.144, -197.507, 44.1258, 0.29 ) }
    dend_69 { pt3dadd( -184.06, -197.551, 44.3627, 0.44 ) }
    dend_69 { pt3dadd( -184.671, -197.599, 44.5358, 0.44 ) }
    dend_69 { pt3dadd( -185.897, -197.739, 44.9103, 0.44 ) }
    dend_69 { pt3dadd( -187.119, -197.939, 45.3038, 0.37 ) }
    dend_69 { pt3dadd( -187.666, -198.057, 45.5229, 0.37 ) }
    dend_69 { pt3dadd( -189.155, -198.457, 46.3613, 0.37 ) }
    dend_69 { pt3dadd( -189.793, -198.662, 46.8428, 0.37 ) }
    dend_69 { pt3dadd( -190.396, -198.881, 47.4284, 0.37 ) }
    dend_69 { pt3dadd( -190.883, -199.058, 48.0377, 0.37 ) }
    dend_69 { pt3dadd( -191.622, -199.28, 49.1505, 0.37 ) }
    dend_69 { pt3dadd( -192.396, -199.433, 50.444, 0.37 ) }
    dend_69 { pt3dadd( -192.634, -199.47, 50.8839, 0.81 ) }
    dend_69 { pt3dadd( -192.818, -199.527, 51.1989, 1.11 ) }
    dend_69 { pt3dadd( -193.214, -199.719, 51.8025, 1.11 ) }
    dend_69 { pt3dadd( -193.257, -199.744, 51.8535, 1.11 ) }
    dend_69 { pt3dadd( -194.009, -200.206, 52.5459, 0.59 ) }
    dend_69 { pt3dadd( -195.162, -200.982, 53.5322, 0.44 ) }
    dend_69 { pt3dadd( -195.907, -201.497, 54.2185, 0.66 ) }
    dend_69 { pt3dadd( -195.957, -201.53, 54.2644, 0.66 ) }
    dend_69 { pt3dadd( -196.491, -201.849, 54.7199, 0.66 ) }
    dend_69 { pt3dadd( -197.387, -202.28, 55.4163, 0.44 ) }
    dend_69 { pt3dadd( -197.493, -202.328, 55.5005, 0.44 ) }
    dend_69 { pt3dadd( -198.363, -202.726, 56.1686, 0.37 ) }
    dend_69 { pt3dadd( -199.273, -203.181, 56.8696, 0.37 ) }
    dend_69 { pt3dadd( -200.124, -203.637, 57.5018, 0.88 ) }
    dend_69 { pt3dadd( -200.718, -203.976, 57.9185, 1.18 ) }
    dend_69 { pt3dadd( -202.481, -204.958, 59.1259, 0.37 ) }
    dend_69 { pt3dadd( -203.27, -205.383, 59.685, 0.29 ) }
    dend_69 { pt3dadd( -203.767, -205.64, 60.0508, 0.81 ) }
    dend_69 { pt3dadd( -203.838, -205.674, 60.1094, 0.81 ) }
    dend_69 { pt3dadd( -204.134, -205.824, 60.3837, 0.81 ) }
    dend_69 { pt3dadd( -205.347, -206.434, 61.5429, 0.37 ) }
    dend_69 { pt3dadd( -205.807, -206.642, 61.9806, 0.74 ) }
    dend_69 { pt3dadd( -206.294, -206.882, 62.4636, 0.74 ) }
    dend_69 { pt3dadd( -207.184, -207.315, 63.3356, 0.81 ) }
    dend_69 { pt3dadd( -208.396, -207.929, 64.5042, 0.29 ) }
    dend_69 { pt3dadd( -208.81, -208.15, 64.8986, 0.29 ) }
    dend_69 { pt3dadd( -208.859, -208.179, 64.9418, 0.29 ) }
    dend_69 { pt3dadd( -209.438, -208.517, 65.4069, 0.74 ) }
    dend_69 { pt3dadd( -209.89, -208.771, 65.7659, 0.81 ) }
    dend_69 { pt3dadd( -211.035, -209.309, 66.6584, 0.37 ) }
    dend_69 { pt3dadd( -211.1, -209.334, 66.7102, 0.37 ) }
    dend_69 { pt3dadd( -211.782, -209.597, 67.2836, 0.29 ) }
    dend_69 { pt3dadd( -212.315, -209.803, 67.749, 0.29 ) }
    dend_69 { pt3dadd( -213.103, -210.111, 68.509, 0.52 ) }
    dend_69 { pt3dadd( -213.757, -210.392, 69.1844, 0.88 ) }
    dend_69 { pt3dadd( -213.991, -210.474, 69.4423, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -7.02485, -97.0793, -22.043, 0.96 ) }
    dend_62 { pt3dadd( -7.02408, -100.322, -21.1284, 0.96 ) }
    dend_62 { pt3dadd( -6.96533, -102.33, -20.5736, 0.96 ) }
    dend_62 { pt3dadd( -6.86551, -104.071, -20.1233, 1.03 ) }
    dend_62 { pt3dadd( -6.7685, -105.111, -19.8849, 1.25 ) }
    dend_62 { pt3dadd( -6.62136, -106.426, -19.6044, 1.11 ) }
    dend_62 { pt3dadd( -6.34602, -108.328, -19.1843, 0.74 ) }
    dend_62 { pt3dadd( -6.03983, -109.861, -18.9494, 0.96 ) }
    dend_62 { pt3dadd( -5.74151, -110.964, -18.7777, 0.74 ) }
    dend_62 { pt3dadd( -5.20039, -112.656, -18.5531, 0.59 ) }
    dend_62 { pt3dadd( -5.16987, -112.744, -18.5471, 0.59 ) }
    dend_62 { pt3dadd( -4.48447, -114.766, -18.5345, 0.59 ) }
    dend_62 { pt3dadd( -3.96644, -116.553, -18.7149, 0.59 ) }
    dend_62 { pt3dadd( -3.94904, -116.633, -18.731, 0.59 ) }
    dend_62 { pt3dadd( -3.70831, -118.272, -19.0619, 0.88 ) }
    dend_62 { pt3dadd( -3.57278, -119.885, -19.3902, 0.88 ) }
    dend_62 { pt3dadd( -3.5282, -120.859, -19.5924, 0.88 ) }
    dend_62 { pt3dadd( -3.51638, -122.436, -19.8832, 0.66 ) }
    dend_62 { pt3dadd( -3.49895, -124.08, -20.0153, 0.52 ) }
    dend_62 { pt3dadd( -3.4385, -125.699, -19.9911, 1.11 ) }
    dend_62 { pt3dadd( -3.39293, -126.464, -19.9012, 1.11 ) }
    dend_62 { pt3dadd( -3.29921, -127.661, -19.6915, 0.88 ) }
    dend_62 { pt3dadd( -3.12498, -129.256, -19.397, 0.81 ) }
    dend_62 { pt3dadd( -2.93764, -130.701, -19.1566, 0.88 ) }
    dend_62 { pt3dadd( -2.77543, -131.769, -19.0879, 1.03 ) }
    dend_62 { pt3dadd( -2.50578, -133.427, -19.1521, 0.74 ) }
    dend_62 { pt3dadd( -2.28953, -134.662, -19.2731, 0.59 ) }
    dend_62 { pt3dadd( -2.00157, -136.089, -19.4974, 0.52 ) }
    dend_62 { pt3dadd( -1.75924, -137.188, -19.7669, 0.74 ) }
    dend_62 { pt3dadd( -1.2962, -139.119, -20.3557, 0.66 ) }
    dend_62 { pt3dadd( -0.958413, -140.464, -20.7992, 0.74 ) }
    dend_62 { pt3dadd( -0.655471, -141.633, -21.171, 0.81 ) }
    dend_62 { pt3dadd( -0.378645, -142.733, -21.4511, 1.11 ) }
    dend_62 { pt3dadd( -0.0849006, -143.93, -21.6765, 0.88 ) }
    dend_62 { pt3dadd( -0.0655577, -144.019, -21.6958, 0.88 ) }
    dend_62 { pt3dadd( 0.175138, -145.38, -22.1193, 0.59 ) }
    dend_62 { pt3dadd( 0.372889, -146.754, -22.6864, 0.59 ) }
    dend_62 { pt3dadd( 0.54485, -148.15, -23.3422, 0.81 ) }
    dend_62 { pt3dadd( 0.749487, -149.854, -24.1812, 1.03 ) }
    dend_62 { pt3dadd( 1.18729, -152.933, -25.8065, 1.03 ) }
    dend_62 { pt3dadd( 1.56687, -155.176, -27.035, 0.81 ) }
    dend_62 { pt3dadd( 1.94072, -157.016, -28.101, 0.59 ) }
    dend_62 { pt3dadd( 1.95842, -157.098, -28.1486, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 2.25734, -158.446, -28.8934, 0.74 ) }
    dend_62 { pt3dadd( 2.63394, -159.995, -29.5925, 0.66 ) }
    dend_62 { pt3dadd( 3.07232, -161.557, -30.0789, 0.66 ) }
    dend_62 { pt3dadd( 3.52013, -163.131, -30.4874, 0.66 ) }
    dend_62 { pt3dadd( 3.86721, -164.506, -30.812, 0.96 ) }
    dend_62 { pt3dadd( 4.0616, -165.641, -31.0579, 1.18 ) }
    dend_62 { pt3dadd( 4.13804, -167.056, -31.3584, 1.03 ) }
    dend_62 { pt3dadd( 4.02105, -168.292, -31.6209, 0.88 ) }
    dend_62 { pt3dadd( 3.69617, -169.726, -31.9632, 0.66 ) }
    dend_62 { pt3dadd( 3.41136, -170.611, -32.1787, 0.74 ) }
    dend_62 { pt3dadd( 2.79203, -172.316, -32.6076, 0.74 ) }
    dend_62 { pt3dadd( 2.29622, -173.633, -32.915, 0.81 ) }
    dend_62 { pt3dadd( 1.63068, -175.441, -33.2815, 0.81 ) }
    dend_62 { pt3dadd( 1.13418, -177.046, -33.5505, 1.03 ) }
    dend_62 { pt3dadd( 0.887899, -178.187, -33.6959, 1.11 ) }
    dend_62 { pt3dadd( 0.755163, -179.432, -33.8383, 0.81 ) }
    dend_62 { pt3dadd( 0.748614, -181.394, -34.0223, 0.66 ) }
    dend_62 { pt3dadd( 0.894203, -182.948, -34.1081, 0.81 ) }
    dend_62 { pt3dadd( 1.11744, -184.053, -34.1559, 0.81 ) }
    dend_62 { pt3dadd( 1.44803, -185.174, -34.2224, 0.81 ) }
    dend_62 { pt3dadd( 1.73055, -185.915, -34.2826, 1.03 ) }
    dend_62 { pt3dadd( 1.77117, -186.001, -34.2917, 1.03 ) }
    dend_62 { pt3dadd( 2.40175, -187.066, -34.4392, 0.74 ) }
    dend_62 { pt3dadd( 3.16315, -188.221, -34.7041, 0.44 ) }
    dend_62 { pt3dadd( 3.4218, -188.603, -34.8198, 0.74 ) }
    dend_62 { pt3dadd( 3.47214, -188.678, -34.8507, 0.74 ) }
    dend_62 { pt3dadd( 3.85316, -189.301, -35.127, 0.74 ) }
    dend_62 { pt3dadd( 3.90171, -189.387, -35.1647, 0.74 ) }
    dend_62 { pt3dadd( 4.80241, -191.157, -35.8301, 0.59 ) }
    dend_62 { pt3dadd( 5.05395, -191.707, -36.0074, 0.88 ) }
    dend_62 { pt3dadd( 5.54168, -192.929, -36.3428, 0.88 ) }
    dend_62 { pt3dadd( 6.09308, -194.538, -36.6997, 0.66 ) }
    dend_62 { pt3dadd( 6.41629, -195.683, -36.8931, 0.74 ) }
    dend_62 { pt3dadd( 6.75241, -197.199, -37.1299, 0.88 ) }
    dend_62 { pt3dadd( 6.89656, -198.267, -37.3238, 0.44 ) }
    dend_62 { pt3dadd( 6.95472, -199.231, -37.5818, 0.44 ) }
    dend_62 { pt3dadd( 6.94097, -200.335, -37.9462, 0.52 ) }
    dend_62 { pt3dadd( 6.88112, -201.228, -38.3389, 0.81 ) }
    dend_62 { pt3dadd( 6.75361, -202.791, -39.1393, 1.03 ) }
    dend_62 { pt3dadd( 6.65233, -204.542, -40.1214, 0.88 ) }
    dend_62 { pt3dadd( 6.6486, -206.191, -41.0602, 0.59 ) }
    dend_62 { pt3dadd( 6.70366, -207.088, -41.5711, 0.74 ) }
    dend_62 { pt3dadd( 6.95458, -208.702, -42.4056, 0.52 ) }
    dend_62 { pt3dadd( 7.19027, -209.588, -42.7802, 0.52 ) }
    dend_62 { pt3dadd( 7.65705, -210.765, -43.0981, 0.81 ) }
    dend_62 { pt3dadd( 8.11007, -211.633, -43.2281, 1.03 ) }
    dend_62 { pt3dadd( 8.45762, -212.187, -43.27, 1.03 ) }
    dend_62 { pt3dadd( 9.4924, -213.693, -43.3333, 0.52 ) }
    dend_62 { pt3dadd( 9.8926, -214.28, -43.3511, 0.66 ) }
    dend_62 { pt3dadd( 10.5198, -215.273, -43.4146, 0.66 ) }
    dend_62 { pt3dadd( 10.5732, -215.367, -43.4235, 0.66 ) }
    dend_62 { pt3dadd( 11.0464, -216.278, -43.5366, 0.81 ) }
    dend_62 { pt3dadd( 11.6163, -217.482, -43.7239, 0.59 ) }
    dend_62 { pt3dadd( 12.2731, -218.988, -44.0168, 0.37 ) }
    dend_62 { pt3dadd( 12.6229, -219.778, -44.1738, 0.88 ) }
    dend_62 { pt3dadd( 13.0786, -220.71, -44.3958, 1.18 ) }
    dend_62 { pt3dadd( 13.1235, -220.789, -44.4172, 1.18 ) }
    dend_62 { pt3dadd( 13.5649, -221.492, -44.7254, 1.11 ) }
    dend_62 { pt3dadd( 14.0325, -222.219, -45.1945, 0.96 ) }
    dend_62 { pt3dadd( 14.0752, -222.286, -45.2465, 0.96 ) }
    dend_62 { pt3dadd( 14.8179, -223.575, -46.3194, 0.59 ) }
    dend_62 { pt3dadd( 15.2236, -224.38, -46.9786, 0.81 ) }
    dend_62 { pt3dadd( 16.0872, -226.464, -48.5211, 0.59 ) }
    dend_62 { pt3dadd( 16.4222, -227.507, -49.1978, 0.88 ) }
    dend_62 { pt3dadd( 16.5857, -228.249, -49.6001, 0.88 ) }
    dend_62 { pt3dadd( 16.7088, -229.094, -49.9621, 0.81 ) }
    dend_62 { pt3dadd( 16.7807, -230.274, -50.3098, 0.59 ) }
    dend_62 { pt3dadd( 16.8048, -231.523, -50.5339, 0.66 ) }
    dend_62 { pt3dadd( 16.8192, -232.979, -50.6348, 1.03 ) }
    dend_62 { pt3dadd( 16.8393, -233.896, -50.6861, 1.33 ) }
    dend_62 { pt3dadd( 16.856, -234.678, -50.7459, 1.18 ) }
    dend_62 { pt3dadd( 16.8723, -235.729, -50.8892, 0.81 ) }
    dend_62 { pt3dadd( 16.9112, -237.07, -51.248, 0.59 ) }
    dend_62 { pt3dadd( 17.043, -238.336, -51.7304, 0.74 ) }
    dend_62 { pt3dadd( 17.201, -239.108, -52.05, 0.96 ) }
    dend_62 { pt3dadd( 17.2219, -239.179, -52.079, 0.96 ) }
    dend_62 { pt3dadd( 17.7399, -240.573, -52.6213, 0.96 ) }
    dend_62 { pt3dadd( 18.7232, -242.772, -53.4521, 0.74 ) }
    dend_62 { pt3dadd( 19.5521, -244.341, -54.0371, 0.74 ) }
    dend_62 { pt3dadd( 20.3674, -245.743, -54.5288, 0.88 ) }
    dend_62 { pt3dadd( 21.1166, -246.998, -54.8031, 0.88 ) }
    dend_62 { pt3dadd( 21.8989, -248.305, -54.907, 0.59 ) }
    dend_62 { pt3dadd( 22.4447, -249.278, -54.7424, 0.59 ) }
    dend_62 { pt3dadd( 22.8511, -250.168, -54.3676, 0.59 ) }
    dend_62 { pt3dadd( 22.8713, -250.235, -54.331, 0.59 ) }
    dend_62 { pt3dadd( 23.2798, -253.049, -52.6525, 0.52 ) }
    dend_62 { pt3dadd( 23.2797, -254.258, -51.8941, 0.52 ) }
    dend_62 { pt3dadd( 22.9677, -256.593, -50.6017, 1.18 ) }
    dend_62 { pt3dadd( 22.6574, -257.985, -49.9682, 1.18 ) }
    dend_62 { pt3dadd( 22.3287, -259.211, -49.6204, 0.52 ) }
    dend_62 { pt3dadd( 21.8469, -261.028, -49.5569, 0.52 ) }
    dend_62 { pt3dadd( 21.4961, -262.473, -49.8516, 0.66 ) }
    dend_62 { pt3dadd( 21.0321, -264.808, -50.6526, 0.66 ) }
    dend_62 { pt3dadd( 20.851, -266.127, -51.322, 0.66 ) }
    dend_62 { pt3dadd( 20.697, -268.413, -52.6636, 0.66 ) }
    dend_62 { pt3dadd( 20.7605, -270.823, -54.2346, 0.74 ) }
    dend_62 { pt3dadd( 20.8745, -271.668, -54.8299, 1.03 ) }
    dend_62 { pt3dadd( 21.0532, -272.436, -55.3867, 1.03 ) }
    dend_62 { pt3dadd( 21.5458, -273.966, -56.4716, 0.66 ) }
    dend_62 { pt3dadd( 21.9356, -275.017, -57.2281, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 22.3379, -275.98, -57.8379, 0.74 ) }
    dend_62 { pt3dadd( 22.71, -276.826, -58.3032, 1.03 ) }
    dend_62 { pt3dadd( 22.7457, -276.9, -58.3445, 1.03 ) }
    dend_62 { pt3dadd( 22.9433, -277.216, -58.5085, 1.25 ) }
    dend_62 { pt3dadd( 23.0137, -277.293, -58.5339, 1.25 ) }
    dend_62 { pt3dadd( 23.5119, -277.774, -58.6518, 1.25 ) }
    dend_62 { pt3dadd( 23.575, -277.841, -58.6618, 1.25 ) }
    dend_62 { pt3dadd( 24.0535, -278.415, -58.7239, 1.25 ) }
    dend_62 { pt3dadd( 24.4922, -279.037, -58.7728, 1.25 ) }
    dend_62 { pt3dadd( 25.4911, -280.677, -58.8021, 0.59 ) }
    dend_62 { pt3dadd( 26.2535, -281.965, -58.7901, 0.59 ) }
    dend_62 { pt3dadd( 27.0776, -283.412, -58.745, 0.66 ) }
    dend_62 { pt3dadd( 27.7203, -284.513, -58.6971, 0.66 ) }
    dend_62 { pt3dadd( 28.5674, -285.897, -58.6213, 0.59 ) }
    dend_62 { pt3dadd( 29.2876, -287.012, -58.5457, 0.44 ) }
    dend_62 { pt3dadd( 30.0059, -287.934, -58.474, 0.29 ) }
    dend_62 { pt3dadd( 30.0678, -287.989, -58.4704, 0.29 ) }
    dend_62 { pt3dadd( 31.1344, -288.526, -58.4357, 0.59 ) }
    dend_62 { pt3dadd( 32.1675, -288.939, -58.4285, 0.74 ) }
    dend_62 { pt3dadd( 32.2558, -288.972, -58.4236, 0.74 ) }
    dend_62 { pt3dadd( 33.5525, -289.489, -58.3228, 0.74 ) }
    dend_62 { pt3dadd( 33.634, -289.526, -58.3079, 0.74 ) }
    dend_62 { pt3dadd( 35.5911, -290.432, -57.7395, 0.59 ) }
    dend_62 { pt3dadd( 36.5778, -290.899, -57.3717, 0.81 ) }
    dend_62 { pt3dadd( 38.1342, -291.704, -56.6843, 0.66 ) }
    dend_62 { pt3dadd( 38.22, -291.749, -56.6452, 0.66 ) }
    dend_62 { pt3dadd( 39.7742, -292.521, -55.8756, 1.03 ) }
    dend_62 { pt3dadd( 40.9439, -293.017, -55.2178, 1.47 ) }
    dend_62 { pt3dadd( 41.5359, -293.246, -54.7967, 1.55 ) }
    dend_62 { pt3dadd( 42.7889, -293.727, -53.7832, 0.29 ) }
    dend_62 { pt3dadd( 43.6746, -294.077, -53.0144, 0.59 ) }
    dend_62 { pt3dadd( 44.9657, -294.612, -51.8752, 0.81 ) }
    dend_62 { pt3dadd( 46.4944, -295.272, -50.4819, 1.18 ) }
    dend_62 { pt3dadd( 48.4286, -296.179, -48.6995, 0.44 ) }
    dend_62 { pt3dadd( 49.7178, -296.813, -47.4885, 0.59 ) }
    dend_62 { pt3dadd( 49.7826, -296.847, -47.4291, 0.59 ) }
    dend_62 { pt3dadd( 50.526, -297.341, -46.7895, 0.81 ) }
    dend_62 { pt3dadd( 50.5784, -297.386, -46.7529, 0.81 ) }
    dend_62 { pt3dadd( 51.3543, -298.137, -46.3606, 0.37 ) }
    dend_62 { pt3dadd( 52.2167, -298.982, -46.0558, 0.88 ) }
    dend_62 { pt3dadd( 52.8446, -299.662, -45.8495, 1.33 ) }
    dend_62 { pt3dadd( 53.4454, -300.403, -45.6477, 1.47 ) }
    dend_62 { pt3dadd( 54.6477, -302.05, -45.3198, 0.88 ) }
    dend_62 { pt3dadd( 54.7017, -302.128, -45.3095, 0.88 ) }
    dend_62 { pt3dadd( 55.1975, -302.867, -45.2673, 1.03 ) }
    dend_62 { pt3dadd( 55.9777, -304.088, -45.3299, 0.44 ) }
    dend_62 { pt3dadd( 56.7575, -305.35, -45.4904, 0.44 ) }
    dend_62 { pt3dadd( 57.4005, -306.455, -45.7224, 0.66 ) }
    dend_62 { pt3dadd( 57.4453, -306.533, -45.746, 0.66 ) }
    dend_62 { pt3dadd( 57.8837, -307.251, -45.9542, 0.44 ) }
    dend_62 { pt3dadd( 58.3871, -308.027, -46.1727, 0.81 ) }
    dend_62 { pt3dadd( 58.7197, -308.486, -46.2904, 0.96 ) }
    dend_62 { pt3dadd( 59.2402, -309.175, -46.4331, 1.11 ) }
    dend_62 { pt3dadd( 59.9049, -310.072, -46.5492, 0.29 ) }
    dend_62 { pt3dadd( 60.4476, -310.833, -46.6441, 0.22 ) }
    dend_62 { pt3dadd( 60.5007, -310.912, -46.6535, 0.22 ) }
    dend_62 { pt3dadd( 61.1773, -311.863, -46.7718, 1.47 ) }
    dend_62 { pt3dadd( 61.2341, -311.936, -46.7817, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -7.02485, -97.0793, -22.043, 0.44 ) }
    dend_53 { pt3dadd( -7.09303, -97.9897, -22.8257, 0.44 ) }
    dend_53 { pt3dadd( -7.12724, -98.8967, -23.6142, 0.59 ) }
    dend_53 { pt3dadd( -7.11241, -101.269, -25.6557, 0.59 ) }
    dend_53 { pt3dadd( -7.06698, -102.367, -26.5782, 0.81 ) }
    dend_53 { pt3dadd( -6.96826, -103.76, -27.7321, 0.81 ) }
    dend_53 { pt3dadd( -6.85012, -105.064, -28.7874, 0.88 ) }
    dend_53 { pt3dadd( -6.76347, -105.814, -29.3671, 1.03 ) }
    dend_53 { pt3dadd( -6.57157, -106.925, -30.1983, 0.52 ) }
    dend_53 { pt3dadd( -6.44043, -107.428, -30.5278, 0.88 ) }
    dend_53 { pt3dadd( -6.22313, -108.231, -31.0407, 0.88 ) }
    dend_53 { pt3dadd( -6.12943, -108.675, -31.2983, 0.88 ) }
    dend_53 { pt3dadd( -6.13016, -108.733, -31.329, 0.88 ) }
    dend_53 { pt3dadd( -6.38305, -109.507, -31.8097, 0.44 ) }
    dend_53 { pt3dadd( -6.65218, -110.031, -32.2018, 0.74 ) }
    dend_53 { pt3dadd( -6.94392, -110.639, -32.7095, 0.74 ) }
    dend_53 { pt3dadd( -7.24418, -111.402, -33.4004, 0.96 ) }
    dend_53 { pt3dadd( -7.53052, -112.454, -34.4244, 0.96 ) }
    dend_53 { pt3dadd( -7.66413, -113.53, -35.4779, 0.96 ) }
    dend_53 { pt3dadd( -7.68631, -114.592, -36.5325, 0.96 ) }
    dend_53 { pt3dadd( -7.5841, -115.814, -37.6798, 0.88 ) }
    dend_53 { pt3dadd( -7.38425, -116.993, -38.7054, 0.88 ) }
    dend_53 { pt3dadd( -7.1536, -118.047, -39.5316, 0.59 ) }
    dend_53 { pt3dadd( -6.89413, -119.123, -40.3084, 0.59 ) }
    dend_53 { pt3dadd( -6.7091, -119.962, -40.8704, 0.96 ) }
    dend_53 { pt3dadd( -6.56338, -120.817, -41.399, 1.25 ) }
    dend_53 { pt3dadd( -6.47976, -121.656, -41.8818, 1.33 ) }
    dend_53 { pt3dadd( -6.39732, -122.876, -42.5265, 0.96 ) }
    dend_53 { pt3dadd( -6.34348, -123.814, -43.0009, 0.81 ) }
    dend_53 { pt3dadd( -6.26763, -124.837, -43.5351, 0.88 ) }
    dend_53 { pt3dadd( -6.16288, -125.317, -43.7822, 1.11 ) }
    dend_53 { pt3dadd( -6.14727, -125.358, -43.8066, 1.11 ) }
    dend_53 { pt3dadd( -5.787, -125.95, -44.1893, 1.11 ) }
    dend_53 { pt3dadd( -5.42355, -126.366, -44.4447, 1.25 ) }
    dend_53 { pt3dadd( -5.33568, -126.451, -44.5043, 1.25 ) }
    dend_53 { pt3dadd( -4.73073, -127.02, -44.9997, 1.33 ) }
    dend_53 { pt3dadd( -4.15332, -127.629, -45.6318, 1.03 ) }
    dend_53 { pt3dadd( -3.865, -128.012, -46.0746, 0.59 ) }
    dend_53 { pt3dadd( -3.68704, -128.331, -46.4817, 0.81 ) }
    dend_53 { pt3dadd( -3.40812, -129.201, -47.6832, 0.81 ) }
    dend_53 { pt3dadd( -3.35342, -129.884, -48.6611, 1.11 ) }
    dend_53 { pt3dadd( -3.45371, -130.611, -49.6903, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( -3.67159, -131.482, -50.8596, 0.59 ) }
    dend_53 { pt3dadd( -3.81852, -131.997, -51.5419, 0.81 ) }
    dend_53 { pt3dadd( -4.06967, -132.879, -52.7241, 0.96 ) }
    dend_53 { pt3dadd( -4.24063, -133.626, -53.6764, 0.81 ) }
    dend_53 { pt3dadd( -4.37923, -134.637, -54.8482, 0.37 ) }
    dend_53 { pt3dadd( -4.39706, -135.574, -55.8346, 1.03 ) }
    dend_53 { pt3dadd( -4.25651, -136.92, -57.0807, 0.96 ) }
    dend_53 { pt3dadd( -3.97166, -138.284, -58.2227, 1.18 ) }
    dend_53 { pt3dadd( -3.67438, -139.285, -59.0126, 1.18 ) }
    dend_53 { pt3dadd( -3.30081, -140.329, -59.8094, 1.18 ) }
    dend_53 { pt3dadd( -2.90859, -141.315, -60.544, 0.81 ) }
    dend_53 { pt3dadd( -2.44672, -142.407, -61.3103, 0.66 ) }
    dend_53 { pt3dadd( -2.18028, -143.018, -61.7005, 0.96 ) }
    dend_53 { pt3dadd( -1.6375, -144.195, -62.402, 1.25 ) }
    dend_53 { pt3dadd( -1.61336, -144.245, -62.4339, 1.25 ) }
    dend_53 { pt3dadd( -1.12823, -145.151, -62.9933, 1.11 ) }
    dend_53 { pt3dadd( -0.753187, -145.86, -63.3601, 0.81 ) }
    dend_53 { pt3dadd( -0.517939, -146.339, -63.5637, 1.25 ) }
    dend_53 { pt3dadd( -0.253049, -146.945, -63.7449, 1.25 ) }
    dend_53 { pt3dadd( -0.0376526, -147.567, -63.8435, 0.66 ) }
    dend_53 { pt3dadd( 0.0933465, -148.21, -63.9604, 0.59 ) }
    dend_53 { pt3dadd( 0.0996555, -149.029, -64.1134, 0.59 ) }
    dend_53 { pt3dadd( 0.036753, -149.425, -64.2096, 0.88 ) }
    dend_53 { pt3dadd( 0.0221221, -149.485, -64.2267, 0.88 ) }
    dend_53 { pt3dadd( -0.171934, -150.24, -64.496, 0.88 ) }
    dend_53 { pt3dadd( -0.415901, -151.591, -65.058, 0.59 ) }
    dend_53 { pt3dadd( -0.442985, -152.189, -65.3541, 0.44 ) }
    dend_53 { pt3dadd( -0.434168, -152.296, -65.4085, 0.44 ) }
    dend_53 { pt3dadd( -0.343421, -152.841, -65.6837, 0.74 ) }
    dend_53 { pt3dadd( -0.161217, -153.695, -66.0833, 0.96 ) }
    dend_53 { pt3dadd( 0.0100826, -154.411, -66.4294, 0.96 ) }
    dend_53 { pt3dadd( 0.276262, -155.5, -66.9046, 0.59 ) }
    dend_53 { pt3dadd( 0.395884, -156.076, -67.1568, 0.88 ) }
    dend_53 { pt3dadd( 0.405603, -156.133, -67.1815, 0.88 ) }
    dend_53 { pt3dadd( 0.495896, -156.75, -67.4298, 0.96 ) }
    dend_53 { pt3dadd( 0.646751, -158.177, -67.9999, 0.59 ) }
    dend_53 { pt3dadd( 0.723181, -158.989, -68.3325, 1.03 ) }
    dend_53 { pt3dadd( 0.802439, -159.62, -68.5865, 1.18 ) }
    dend_53 { pt3dadd( 0.96694, -160.669, -69.022, 0.88 ) }
    dend_53 { pt3dadd( 1.11038, -161.57, -69.3845, 0.74 ) }
    dend_53 { pt3dadd( 1.26024, -162.542, -69.7569, 0.66 ) }
    dend_53 { pt3dadd( 1.41677, -163.779, -70.1737, 0.52 ) }
    dend_53 { pt3dadd( 1.46997, -164.536, -70.4219, 0.81 ) }
    dend_53 { pt3dadd( 1.46269, -165.324, -70.6746, 0.37 ) }
    dend_53 { pt3dadd( 1.37031, -165.991, -70.8793, 0.37 ) }
    dend_53 { pt3dadd( 1.25614, -166.466, -71.0209, 0.88 ) }
    dend_53 { pt3dadd( 1.10336, -166.914, -71.1528, 1.18 ) }
    dend_53 { pt3dadd( 0.858579, -167.441, -71.312, 1.33 ) }
    dend_53 { pt3dadd( 0.422392, -168.341, -71.6189, 0.88 ) }
    dend_53 { pt3dadd( -0.0213157, -169.329, -72.0081, 0.74 ) }
    dend_53 { pt3dadd( -0.0455908, -169.385, -72.0315, 0.74 ) }
    dend_53 { pt3dadd( -0.601832, -170.697, -72.6155, 0.52 ) }
    dend_53 { pt3dadd( -0.947831, -171.531, -73.0013, 0.66 ) }
    dend_53 { pt3dadd( -1.55485, -173.041, -73.711, 0.59 ) }
    dend_53 { pt3dadd( -1.85794, -173.901, -74.0968, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 6.59086, -133.816, -32.3856, 0.37 ) }
    dend_51 { pt3dadd( 7.13683, -133.991, -32.2334, 0.37 ) }
    dend_51 { pt3dadd( 7.73132, -134.224, -32.0712, 0.59 ) }
    dend_51 { pt3dadd( 8.0934, -134.37, -31.9817, 0.59 ) }
    dend_51 { pt3dadd( 8.74412, -134.619, -31.8388, 0.59 ) }
    dend_51 { pt3dadd( 8.83141, -134.652, -31.8211, 0.59 ) }
    dend_51 { pt3dadd( 9.30158, -134.817, -31.7475, 0.22 ) }
    dend_51 { pt3dadd( 9.54423, -134.88, -31.7508, 0.44 ) }
    dend_51 { pt3dadd( 9.93361, -134.945, -31.8376, 0.44 ) }
    dend_51 { pt3dadd( 10.2265, -134.979, -31.9505, 0.81 ) }
    dend_51 { pt3dadd( 10.2753, -134.98, -31.974, 0.81 ) }
    dend_51 { pt3dadd( 10.6204, -134.936, -32.174, 0.96 ) }
    dend_51 { pt3dadd( 11.3696, -134.756, -32.7105, 0.52 ) }
    dend_51 { pt3dadd( 11.6143, -134.686, -32.8977, 0.52 ) }
    dend_51 { pt3dadd( 11.6479, -134.676, -32.924, 0.52 ) }
    dend_51 { pt3dadd( 12.0635, -134.545, -33.2499, 0.44 ) }
    dend_51 { pt3dadd( 12.8313, -134.291, -33.825, 0.74 ) }
    dend_51 { pt3dadd( 13.5454, -134.041, -34.3728, 0.29 ) }
    dend_51 { pt3dadd( 13.8553, -133.924, -34.6037, 0.29 ) }
    dend_51 { pt3dadd( 14.0662, -133.852, -34.7612, 0.59 ) }
    dend_51 { pt3dadd( 14.0958, -133.845, -34.7838, 0.59 ) }
    dend_51 { pt3dadd( 14.3143, -133.816, -34.9703, 1.18 ) }
    dend_51 { pt3dadd( 15.0071, -133.804, -35.5334, 1.11 ) }
    dend_51 { pt3dadd( 15.3876, -133.83, -35.8563, 0.37 ) }
    dend_51 { pt3dadd( 15.9166, -133.89, -36.3142, 0.29 ) }
    dend_51 { pt3dadd( 16.5321, -133.98, -36.8272, 1.11 ) }
    dend_51 { pt3dadd( 17.3598, -134.111, -37.476, 0.66 ) }
    dend_51 { pt3dadd( 17.892, -134.205, -37.8721, 0.44 ) }
    dend_51 { pt3dadd( 18.58, -134.333, -38.3751, 1.18 ) }
    dend_51 { pt3dadd( 18.8403, -134.379, -38.5742, 1.62 ) }
    dend_51 { pt3dadd( 19.2286, -134.43, -38.8654, 1.18 ) }
    dend_51 { pt3dadd( 19.688, -134.467, -39.1786, 0.74 ) }
    dend_51 { pt3dadd( 19.7206, -134.468, -39.1987, 0.74 ) }
    dend_51 { pt3dadd( 20.5602, -134.467, -39.8026, 0.59 ) }
    dend_51 { pt3dadd( 20.5908, -134.465, -39.8255, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 6.59086, -133.816, -32.3856, 0.59 ) }
    dend_50 { pt3dadd( 6.57225, -136.33, -31.795, 0.59 ) }
    dend_50 { pt3dadd( 6.65866, -137.615, -31.1458, 0.66 ) }
    dend_50 { pt3dadd( 6.75445, -138.266, -30.6687, 1.03 ) }
    dend_50 { pt3dadd( 6.78492, -138.511, -30.4689, 1.03 ) }
    dend_50 { pt3dadd( 6.82239, -138.99, -29.9426, 1.03 ) }
    dend_50 { pt3dadd( 6.89044, -140.247, -28.3678, 0.74 ) }
    dend_50 { pt3dadd( 6.91324, -142.049, -25.6005, 1.03 ) }
    dend_50 { pt3dadd( 7.02808, -143.12, -23.5151, 1.11 ) }
    dend_50 { pt3dadd( 7.0893, -143.574, -22.6097, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 7.27135, -145.552, -18.771, 0.74 ) }
    dend_50 { pt3dadd( 7.27586, -145.628, -18.6261, 0.74 ) }
    dend_50 { pt3dadd( 7.301, -146.47, -17.1033, 0.66 ) }
    dend_50 { pt3dadd( 7.40441, -150.234, -11.5397, 0.66 ) }
    dend_50 { pt3dadd( 7.45653, -151.369, -10.1945, 0.52 ) }
    dend_50 { pt3dadd( 7.57907, -152.82, -8.85808, 0.74 ) }
    dend_50 { pt3dadd( 7.58757, -152.902, -8.80644, 0.74 ) }
    dend_50 { pt3dadd( 7.71796, -154.078, -8.241, 0.88 ) }
    dend_50 { pt3dadd( 8.07325, -157.075, -7.26575, 0.52 ) }
    dend_50 { pt3dadd( 8.20081, -158.513, -7.06453, 0.52 ) }
    dend_50 { pt3dadd( 8.37354, -160.02, -6.85627, 0.52 ) }
    dend_50 { pt3dadd( 8.57147, -161.475, -6.69266, 0.44 ) }
    dend_50 { pt3dadd( 8.69857, -162.602, -6.59, 0.37 ) }
    dend_50 { pt3dadd( 8.90257, -164.582, -6.40624, 0.37 ) }
    dend_50 { pt3dadd( 9.0775, -166.158, -6.30507, 0.59 ) }
    dend_50 { pt3dadd( 9.20378, -167.086, -6.21597, 0.88 ) }
    dend_50 { pt3dadd( 9.22138, -167.184, -6.19875, 0.88 ) }
    dend_50 { pt3dadd( 9.4067, -167.997, -6.005, 0.96 ) }
    dend_50 { pt3dadd( 9.99309, -170.192, -5.17091, 0.44 ) }
    dend_50 { pt3dadd( 10.3565, -171.365, -4.61857, 0.59 ) }
    dend_50 { pt3dadd( 10.3823, -171.437, -4.57588, 0.59 ) }
    dend_50 { pt3dadd( 11.0586, -173.167, -3.54443, 0.81 ) }
    dend_50 { pt3dadd( 11.2793, -173.766, -3.19069, 0.96 ) }
    dend_50 { pt3dadd( 12.1555, -176.321, -1.73827, 0.52 ) }
    dend_50 { pt3dadd( 12.3308, -176.924, -1.42229, 0.74 ) }
    dend_50 { pt3dadd( 12.8275, -178.99, -0.435663, 0.52 ) }
    dend_50 { pt3dadd( 13.1033, -180.324, 0.0519953, 0.74 ) }
    dend_50 { pt3dadd( 13.3116, -181.538, 0.402478, 0.44 ) }
    dend_50 { pt3dadd( 13.4578, -182.596, 0.73724, 0.29 ) }
    dend_50 { pt3dadd( 13.5348, -183.267, 0.988428, 0.37 ) }
    dend_50 { pt3dadd( 13.6502, -184.259, 1.55091, 0.59 ) }
    dend_50 { pt3dadd( 13.831, -185.452, 2.37678, 0.59 ) }
    dend_50 { pt3dadd( 14.261, -187.376, 3.87165, 0.81 ) }
    dend_50 { pt3dadd( 14.9433, -189.382, 5.5528, 0.44 ) }
    dend_50 { pt3dadd( 15.8368, -191.253, 7.25073, 0.88 ) }
    dend_50 { pt3dadd( 17.0864, -193.239, 9.18204, 0.74 ) }
    dend_50 { pt3dadd( 17.7391, -193.958, 9.93101, 0.29 ) }
    dend_50 { pt3dadd( 18.9364, -194.84, 10.883, 0.37 ) }
    dend_50 { pt3dadd( 20.3812, -195.209, 11.1302, 0.37 ) }
    dend_50 { pt3dadd( 21.5873, -195.2, 10.9385, 0.66 ) }
    dend_50 { pt3dadd( 21.6814, -195.189, 10.9106, 0.66 ) }
    dend_50 { pt3dadd( 23.128, -194.904, 10.3064, 0.29 ) }
    dend_50 { pt3dadd( 23.2296, -194.881, 10.2653, 0.29 ) }
    dend_50 { pt3dadd( 24.8542, -194.456, 9.71315, 0.15 ) }
    dend_50 { pt3dadd( 26.3726, -193.97, 9.10913, 0.15 ) }
    dend_50 { pt3dadd( 30.5111, -204.557, 16.8263, 0.15 ) }
    dend_50 { pt3dadd( 33.4122, -215.274, 24.9301, 0.15 ) }
    dend_50 { pt3dadd( 37.6446, -226.967, 30.8752, 0.15 ) }
    dend_50 { pt3dadd( 44.764, -236.434, 37.756, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -23.3853, -427.805, -68.3008, 1.18 ) }
    dend_46 { pt3dadd( -22.7337, -429.005, -68.1169, 1.18 ) }
    dend_46 { pt3dadd( -22.0383, -430.204, -67.9056, 0.96 ) }
    dend_46 { pt3dadd( -21.733, -430.707, -67.8235, 1.47 ) }
    dend_46 { pt3dadd( -21.3617, -431.31, -67.7404, 1.84 ) }
    dend_46 { pt3dadd( -20.904, -432.041, -67.6501, 1.33 ) }
    dend_46 { pt3dadd( -20.2762, -433.053, -67.5542, 0.74 ) }
    dend_46 { pt3dadd( -20.2415, -433.109, -67.554, 0.74 ) }
    dend_46 { pt3dadd( -19.7836, -433.842, -67.5718, 0.81 ) }
    dend_46 { pt3dadd( -19.4138, -434.431, -67.6133, 0.44 ) }
    dend_46 { pt3dadd( -19.3803, -434.488, -67.6233, 0.44 ) }
    dend_46 { pt3dadd( -18.8855, -435.44, -67.8671, 0.29 ) }
    dend_46 { pt3dadd( -18.4647, -436.297, -68.1614, 0.44 ) }
    dend_46 { pt3dadd( -18.2077, -436.831, -68.3569, 0.81 ) }
    dend_46 { pt3dadd( -17.9402, -437.335, -68.5335, 0.81 ) }
    dend_46 { pt3dadd( -17.3361, -438.29, -68.8423, 0.37 ) }
    dend_46 { pt3dadd( -17.2926, -438.349, -68.8564, 0.37 ) }
    dend_46 { pt3dadd( -16.7834, -438.991, -68.9533, 0.81 ) }
    dend_46 { pt3dadd( -16.2589, -439.657, -68.999, 1.11 ) }
    dend_46 { pt3dadd( -15.5597, -440.617, -68.998, 1.11 ) }
    dend_46 { pt3dadd( -14.7447, -441.891, -68.9249, 0.29 ) }
    dend_46 { pt3dadd( -14.2061, -442.898, -68.8154, 0.29 ) }
    dend_46 { pt3dadd( -13.8947, -443.642, -68.7047, 0.66 ) }
    dend_46 { pt3dadd( -13.63, -444.59, -68.5315, 0.88 ) }
    dend_46 { pt3dadd( -13.4967, -445.404, -68.3702, 1.03 ) }
    dend_46 { pt3dadd( -13.4884, -446.089, -68.2348, 1.03 ) }
    dend_46 { pt3dadd( -13.5848, -446.896, -68.0446, 0.74 ) }
    dend_46 { pt3dadd( -13.8032, -448.022, -67.7445, 0.22 ) }
    dend_46 { pt3dadd( -13.9573, -448.742, -67.5115, 0.74 ) }
    dend_46 { pt3dadd( -13.9721, -448.809, -67.4844, 0.74 ) }
    dend_46 { pt3dadd( -14.1046, -449.454, -67.1958, 0.74 ) }
    dend_46 { pt3dadd( -14.1182, -449.513, -67.1687, 0.74 ) }
    dend_46 { pt3dadd( -14.3021, -450.273, -66.8425, 0.29 ) }
    dend_46 { pt3dadd( -14.4178, -450.821, -66.6577, 0.29 ) }
    dend_46 { pt3dadd( -14.5293, -451.538, -66.4611, 1.03 ) }
    dend_46 { pt3dadd( -14.6206, -452.277, -66.3443, 1.4 ) }
    dend_46 { pt3dadd( -14.7077, -453.109, -66.292, 0.52 ) }
    dend_46 { pt3dadd( -14.7809, -453.637, -66.2954, 0.29 ) }
    dend_46 { pt3dadd( -14.9753, -454.499, -66.4269, 0.37 ) }
    dend_46 { pt3dadd( -15.1495, -455.031, -66.6017, 0.66 ) }
    dend_46 { pt3dadd( -15.4921, -455.848, -67.0548, 0.37 ) }
    dend_46 { pt3dadd( -15.677, -456.214, -67.369, 0.96 ) }
    dend_46 { pt3dadd( -15.8618, -456.57, -67.729, 0.96 ) }
    dend_46 { pt3dadd( -16.3527, -457.454, -68.7112, 0.37 ) }
    dend_46 { pt3dadd( -16.8124, -458.276, -69.7043, 0.74 ) }
    dend_46 { pt3dadd( -17.2707, -459.167, -70.828, 1.25 ) }
    dend_46 { pt3dadd( -17.9668, -460.779, -72.9553, 0.29 ) }
    dend_46 { pt3dadd( -18.178, -461.321, -73.7026, 0.29 ) }
    dend_46 { pt3dadd( -18.1914, -461.362, -73.7611, 0.29 ) }
    dend_46 { pt3dadd( -18.3197, -461.946, -74.5954, 0.88 ) }
    dend_46 { pt3dadd( -18.3487, -462.22, -74.9861, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( -18.3025, -463.027, -76.1112, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -23.3853, -427.805, -68.3008, 0.44 ) }
    dend_45 { pt3dadd( -22.4361, -428.876, -68.3461, 0.44 ) }
    dend_45 { pt3dadd( -21.2926, -430.212, -68.3688, 0.44 ) }
    dend_45 { pt3dadd( -21.2286, -430.294, -68.3679, 0.44 ) }
    dend_45 { pt3dadd( -20.7876, -430.875, -68.3552, 0.29 ) }
    dend_45 { pt3dadd( -20.2425, -431.573, -68.3346, 0.81 ) }
    dend_45 { pt3dadd( -19.6081, -432.341, -68.3085, 1.11 ) }
    dend_45 { pt3dadd( -19.5596, -432.404, -68.3025, 1.11 ) }
    dend_45 { pt3dadd( -18.874, -433.32, -68.2323, 0.44 ) }
    dend_45 { pt3dadd( -18.8223, -433.393, -68.2284, 0.44 ) }
    dend_45 { pt3dadd( -18.1951, -434.311, -68.2038, 0.37 ) }
    dend_45 { pt3dadd( -17.7742, -434.988, -68.1878, 0.37 ) }
    dend_45 { pt3dadd( -17.1209, -436.158, -68.1651, 0.29 ) }
    dend_45 { pt3dadd( -16.7477, -436.834, -68.1646, 0.74 ) }
    dend_45 { pt3dadd( -16.527, -437.227, -68.1706, 0.81 ) }
    dend_45 { pt3dadd( -16.4301, -437.398, -68.1826, 0.81 ) }
    dend_45 { pt3dadd( -15.8705, -438.361, -68.2912, 0.44 ) }
    dend_45 { pt3dadd( -15.3557, -439.198, -68.4124, 0.29 ) }
    dend_45 { pt3dadd( -14.749, -440.074, -68.565, 0.52 ) }
    dend_45 { pt3dadd( -14.3871, -440.547, -68.6564, 0.52 ) }
    dend_45 { pt3dadd( -13.4297, -441.763, -68.9393, 0.29 ) }
    dend_45 { pt3dadd( -12.7498, -442.631, -69.1985, 0.59 ) }
    dend_45 { pt3dadd( -12.6984, -442.701, -69.2271, 0.59 ) }
    dend_45 { pt3dadd( -12.4081, -443.175, -69.4276, 0.59 ) }
    dend_45 { pt3dadd( -12.3681, -443.248, -69.4594, 0.59 ) }
    dend_45 { pt3dadd( -11.6677, -444.671, -70.1042, 0.81 ) }
    dend_45 { pt3dadd( -11.3182, -445.48, -70.4818, 1.03 ) }
    dend_45 { pt3dadd( -10.8645, -446.649, -71.0829, 0.59 ) }
    dend_45 { pt3dadd( -10.3961, -447.927, -71.7554, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -98.2227, -148.728, 8.26271, 0.37 ) }
    dend_39 { pt3dadd( -105.758, -157.851, 12.404, 0.37 ) }
    dend_39 { pt3dadd( -115.483, -165.415, 14.3796, 0.37 ) }
    dend_39 { pt3dadd( -126.363, -171.413, 14.803, 0.37 ) }
    dend_39 { pt3dadd( -136.433, -178.311, 17.3043, 0.37 ) }
    dend_39 { pt3dadd( -146.609, -184.879, 20.1977, 0.37 ) }
    dend_39 { pt3dadd( -155.66, -193.16, 22.6045, 0.37 ) }
    dend_39 { pt3dadd( -163.591, -202.283, 25.9116, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -98.2227, -148.728, 8.26271, 0.29 ) }
    dend_36 { pt3dadd( -104.838, -156.466, 11.7881, 0.37 ) }
    dend_36 { pt3dadd( -110.273, -165.059, 15.451, 0.37 ) }
    dend_36 { pt3dadd( -115.186, -174.239, 18.4123, 0.37 ) }
    dend_36 { pt3dadd( -120.949, -182.553, 22.1854, 0.37 ) }
    dend_36 { pt3dadd( -127.142, -191.213, 23.9735, 0.37 ) }
    dend_36 { pt3dadd( -133.695, -199.196, 27.0583, 0.37 ) }
    dend_36 { pt3dadd( -140.723, -206.029, 31.4672, 0.37 ) }
    dend_36 { pt3dadd( -147.956, -212.604, 35.9159, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 87.3675, 178.224, 61.9103, 0.29 ) }
    dend_8 { pt3dadd( 89.3988, 186.705, 64.9329, 0.29 ) }
    dend_8 { pt3dadd( 91.4795, 194.597, 69.1833, 0.29 ) }
    dend_8 { pt3dadd( 92.8083, 202.782, 73.1989, 0.29 ) }
    dend_8 { pt3dadd( 94.7772, 210.622, 77.5927, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 87.3675, 178.224, 61.9103, 0.44 ) }
    dend_7 { pt3dadd( 90.1753, 190.292, 65.5147, 0.29 ) }
    dend_7 { pt3dadd( 91.5722, 202.735, 68.6856, 0.29 ) }
    dend_7 { pt3dadd( 92.6956, 214.569, 73.6533, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -130.471, -193.825, -0.758547, 0.29 ) }
    dend_90 { pt3dadd( -137.248, -201.811, -3.84676, 0.29 ) }
    dend_90 { pt3dadd( -144.655, -208.556, -8.08868, 0.29 ) }
    dend_90 { pt3dadd( -151.569, -214.934, -13.5324, 0.29 ) }
    dend_90 { pt3dadd( -159.425, -221.76, -16.71, 0.29 ) }
    dend_90 { pt3dadd( -167.176, -228.743, -19.8203, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -130.471, -193.825, -0.758547, 0.44 ) }
    dend_89 { pt3dadd( -134.981, -203.148, -3.58466, 0.29 ) }
    dend_89 { pt3dadd( -138.845, -212.781, -6.36722, 0.29 ) }
    dend_89 { pt3dadd( -141.827, -222.989, -8.10028, 0.29 ) }
    dend_89 { pt3dadd( -145.563, -232.996, -9.48631, 0.29 ) }
    dend_89 { pt3dadd( -149.571, -242.971, -10.208, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -126.121, -149.067, 24.3592, 0.22 ) }
    dend_86 { pt3dadd( -125.277, -148.438, 24.8945, 0.22 ) }
    dend_86 { pt3dadd( -124.89, -148.162, 25.1232, 0.52 ) }
    dend_86 { pt3dadd( -124.603, -147.978, 25.2665, 0.74 ) }
    dend_86 { pt3dadd( -123.679, -147.451, 25.6692, 0.37 ) }
    dend_86 { pt3dadd( -122.628, -146.881, 26.0696, 0.37 ) }
    dend_86 { pt3dadd( -122.239, -146.671, 26.2175, 0.37 ) }
    dend_86 { pt3dadd( -122.071, -146.59, 26.2694, 0.37 ) }
    dend_86 { pt3dadd( -121.261, -146.238, 26.5119, 0.37 ) }
    dend_86 { pt3dadd( -120.88, -146.091, 26.6078, 0.88 ) }
    dend_86 { pt3dadd( -120.3, -145.902, 26.6586, 0.88 ) }
    dend_86 { pt3dadd( -112.903, -142.934, 30.483, 0.88 ) }
    dend_86 { pt3dadd( -105.839, -138.428, 33.4032, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -126.121, -149.067, 24.3592, 0.44 ) }
    dend_73 { pt3dadd( -126.131, -147.96, 24.3576, 0.44 ) }
    dend_73 { pt3dadd( -126.098, -146.894, 24.3655, 0.37 ) }
    dend_73 { pt3dadd( -126.094, -146.844, 24.3681, 0.37 ) }
    dend_73 { pt3dadd( -126.042, -145.989, 24.445, 0.37 ) }
    dend_73 { pt3dadd( -126.04, -145.902, 24.4578, 0.37 ) }
    dend_73 { pt3dadd( -126.038, -144.863, 24.6442, 0.37 ) }
    dend_73 { pt3dadd( -126.038, -144.808, 24.6593, 0.37 ) }
    dend_73 { pt3dadd( -126.079, -144.133, 24.8765, 0.29 ) }
    dend_73 { pt3dadd( -126.161, -143.415, 25.113, 0.29 ) }
    dend_73 { pt3dadd( -126.279, -142.757, 25.3382, 0.29 ) }
    dend_73 { pt3dadd( -126.317, -142.599, 25.3916, 0.66 ) }
    dend_73 { pt3dadd( -126.356, -142.482, 25.4268, 0.66 ) }
    dend_73 { pt3dadd( -126.496, -142.08, 25.5152, 0.66 ) }
    dend_73 { pt3dadd( -126.739, -141.433, 25.5991, 0.29 ) }
    dend_73 { pt3dadd( -126.853, -141.159, 25.6203, 0.44 ) }
    dend_73 { pt3dadd( -126.9, -141.058, 25.6251, 0.44 ) }
    dend_73 { pt3dadd( -127.157, -140.573, 25.6555, 0.37 ) }
    dend_73 { pt3dadd( -127.463, -140.045, 25.6994, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -127.491, -139.998, 25.7043, 0.37 ) }
    dend_73 { pt3dadd( -128.046, -139.144, 25.8176, 0.29 ) }
    dend_73 { pt3dadd( -128.375, -138.632, 25.8941, 0.44 ) }
    dend_73 { pt3dadd( -128.469, -138.481, 25.9229, 0.44 ) }
    dend_73 { pt3dadd( -128.763, -137.997, 26.0397, 0.44 ) }
    dend_73 { pt3dadd( -129.041, -137.519, 26.1632, 0.29 ) }
    dend_73 { pt3dadd( -129.098, -137.415, 26.191, 0.29 ) }
    dend_73 { pt3dadd( -129.245, -137.114, 26.2772, 0.44 ) }
    dend_73 { pt3dadd( -129.403, -136.78, 26.3752, 0.44 ) }
    dend_73 { pt3dadd( -129.429, -136.723, 26.3915, 0.44 ) }
    dend_73 { pt3dadd( -129.591, -136.321, 26.4995, 0.44 ) }
    dend_73 { pt3dadd( -129.735, -135.884, 26.6211, 0.44 ) }
    dend_73 { pt3dadd( -129.746, -135.83, 26.635, 0.44 ) }
    dend_73 { pt3dadd( -129.821, -135.332, 26.7491, 0.37 ) }
    dend_73 { pt3dadd( -129.851, -135.088, 26.7984, 0.37 ) }
    dend_73 { pt3dadd( -129.914, -134.455, 26.9036, 0.44 ) }
    dend_73 { pt3dadd( -129.954, -133.894, 26.9845, 0.44 ) }
    dend_73 { pt3dadd( -129.99, -133.278, 27.0142, 0.44 ) }
    dend_73 { pt3dadd( -130.036, -132.414, 27.0066, 0.44 ) }
    dend_73 { pt3dadd( -130.09, -131.616, 26.9675, 0.74 ) }
    dend_73 { pt3dadd( -130.182, -130.551, 26.8767, 0.81 ) }
    dend_73 { pt3dadd( -130.229, -130.113, 26.8203, 0.74 ) }
    dend_73 { pt3dadd( -130.425, -128.577, 26.545, 0.29 ) }
    dend_73 { pt3dadd( -130.432, -128.529, 26.5347, 0.29 ) }
    dend_73 { pt3dadd( -130.48, -128.183, 26.4509, 0.29 ) }
    dend_73 { pt3dadd( -130.493, -128.065, 26.4256, 0.29 ) }
    dend_73 { pt3dadd( -130.518, -127.773, 26.394, 0.44 ) }
    dend_73 { pt3dadd( -130.52, -127.718, 26.392, 0.44 ) }
    dend_73 { pt3dadd( -130.528, -127.321, 26.4082, 0.44 ) }
    dend_73 { pt3dadd( -130.519, -126.677, 26.426, 0.88 ) }
    dend_73 { pt3dadd( -130.48, -125.772, 26.4404, 0.52 ) }
    dend_73 { pt3dadd( -130.442, -125.067, 26.4505, 0.52 ) }
    dend_73 { pt3dadd( -130.411, -124.498, 26.4486, 0.44 ) }
    dend_73 { pt3dadd( -130.386, -123.872, 26.4409, 0.29 ) }
    dend_73 { pt3dadd( -130.373, -123.403, 26.4304, 0.59 ) }
    dend_73 { pt3dadd( -130.373, -123.221, 26.4257, 0.59 ) }
    dend_73 { pt3dadd( -130.388, -122.763, 26.4157, 0.59 ) }
    dend_73 { pt3dadd( -130.407, -122.306, 26.407, 0.29 ) }
    dend_73 { pt3dadd( -130.433, -121.683, 26.4094, 0.29 ) }
    dend_73 { pt3dadd( -130.434, -121.619, 26.4098, 0.29 ) }
    dend_73 { pt3dadd( -130.44, -121.148, 26.4077, 0.59 ) }
    dend_73 { pt3dadd( -130.44, -121.074, 26.4071, 0.59 ) }
    dend_73 { pt3dadd( -130.438, -120.549, 26.4093, 0.66 ) }
    dend_73 { pt3dadd( -130.433, -119.968, 26.4203, 0.66 ) }
    dend_73 { pt3dadd( -130.42, -119.352, 26.431, 0.29 ) }
    dend_73 { pt3dadd( -130.398, -118.49, 26.4471, 0.29 ) }
    dend_73 { pt3dadd( -130.394, -118.426, 26.4484, 0.29 ) }
    dend_73 { pt3dadd( -130.323, -117.336, 26.5083, 0.29 ) }
    dend_73 { pt3dadd( -130.315, -117.213, 26.5195, 0.29 ) }
    dend_73 { pt3dadd( -130.27, -116.518, 26.607, 0.52 ) }
    dend_73 { pt3dadd( -130.264, -116.398, 26.6268, 0.52 ) }
    dend_73 { pt3dadd( -130.242, -115.679, 26.7704, 0.81 ) }
    dend_73 { pt3dadd( -130.244, -114.995, 26.9105, 0.52 ) }
    dend_73 { pt3dadd( -130.266, -114.436, 27.0303, 0.52 ) }
    dend_73 { pt3dadd( -130.302, -113.917, 27.1312, 0.74 ) }
    dend_73 { pt3dadd( -130.361, -113.299, 27.2317, 0.88 ) }
    dend_73 { pt3dadd( -130.377, -113.066, 27.2523, 0.88 ) }
    dend_73 { pt3dadd( -130.374, -112.323, 27.2298, 0.88 ) }
    dend_73 { pt3dadd( -130.368, -112.267, 27.2223, 0.88 ) }
    dend_73 { pt3dadd( -130.29, -111.875, 27.1494, 0.66 ) }
    dend_73 { pt3dadd( -130.128, -111.28, 27.0556, 0.44 ) }
    dend_73 { pt3dadd( -129.848, -110.399, 26.9792, 0.37 ) }
    dend_73 { pt3dadd( -129.572, -109.534, 26.9601, 0.29 ) }
    dend_73 { pt3dadd( -129.378, -108.949, 26.9741, 0.29 ) }
    dend_73 { pt3dadd( -129.361, -108.895, 26.978, 0.29 ) }
    dend_73 { pt3dadd( -129.097, -107.899, 27.1076, 0.29 ) }
    dend_73 { pt3dadd( -128.816, -106.649, 27.3316, 0.29 ) }
    dend_73 { pt3dadd( -128.701, -105.916, 27.4975, 0.37 ) }
    dend_73 { pt3dadd( -128.69, -105.798, 27.5252, 0.37 ) }
    dend_73 { pt3dadd( -128.653, -105.176, 27.6504, 0.37 ) }
    dend_73 { pt3dadd( -128.614, -104.558, 27.7664, 0.37 ) }
    dend_73 { pt3dadd( -128.607, -104.446, 27.7847, 0.37 ) }
    dend_73 { pt3dadd( -128.575, -103.592, 27.9417, 0.52 ) }
    dend_73 { pt3dadd( -128.561, -102.723, 28.1171, 0.44 ) }
    dend_73 { pt3dadd( -128.56, -101.809, 28.3125, 1.11 ) }
    dend_73 { pt3dadd( -128.551, -100.587, 28.5801, 0.29 ) }
    dend_73 { pt3dadd( -128.549, -100.525, 28.5963, 0.29 ) }
    dend_73 { pt3dadd( -128.505, -99.5919, 28.8534, 0.29 ) }
    dend_73 { pt3dadd( -128.464, -99.0643, 29.0031, 0.29 ) }
    dend_73 { pt3dadd( -128.46, -99.0186, 29.0159, 0.29 ) }
    dend_73 { pt3dadd( -128.357, -98.078, 29.2596, 0.37 ) }
    dend_73 { pt3dadd( -128.194, -96.6752, 29.5794, 0.37 ) }
    dend_73 { pt3dadd( -128.055, -95.6803, 29.7911, 0.37 ) }
    dend_73 { pt3dadd( -127.916, -94.8853, 29.9488, 0.81 ) }
    dend_73 { pt3dadd( -127.819, -94.3609, 30.0466, 1.03 ) }
    dend_73 { pt3dadd( -127.663, -93.4741, 30.1956, 0.29 ) }
    dend_73 { pt3dadd( -127.567, -92.87, 30.2805, 0.29 ) }
    dend_73 { pt3dadd( -127.512, -92.4595, 30.3148, 0.44 ) }
    dend_73 { pt3dadd( -127.506, -92.4045, 30.3197, 0.44 ) }
    dend_73 { pt3dadd( -127.49, -92.1082, 30.3482, 0.44 ) }
    dend_73 { pt3dadd( -127.481, -91.3702, 30.4523, 0.29 ) }
    dend_73 { pt3dadd( -127.484, -91.2597, 30.4722, 0.29 ) }
    dend_73 { pt3dadd( -127.525, -90.3392, 30.6621, 0.29 ) }
    dend_73 { pt3dadd( -127.529, -90.2836, 30.6744, 0.29 ) }
    dend_73 { pt3dadd( -127.629, -89.2807, 30.9054, 0.29 ) }
    dend_73 { pt3dadd( -127.693, -88.6939, 31.0428, 0.66 ) }
    dend_73 { pt3dadd( -127.734, -88.2704, 31.1414, 0.74 ) }
    dend_73 { pt3dadd( -127.739, -88.1607, 31.1649, 0.74 ) }
    dend_73 { pt3dadd( -127.728, -87.1369, 31.3574, 0.29 ) }
    dend_73 { pt3dadd( -127.721, -87.0317, 31.3737, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -127.66, -86.3932, 31.4398, 0.29 ) }
    dend_73 { pt3dadd( -127.613, -85.9464, 31.4701, 0.74 ) }
    dend_73 { pt3dadd( -127.517, -85.2388, 31.5099, 0.22 ) }
    dend_73 { pt3dadd( -127.346, -84.2207, 31.5567, 0.22 ) }
    dend_73 { pt3dadd( -127.131, -83.2979, 31.5872, 1.03 ) }
    dend_73 { pt3dadd( -126.888, -82.3704, 31.6127, 0.29 ) }
    dend_73 { pt3dadd( -126.838, -82.1966, 31.6169, 0.29 ) }
    dend_73 { pt3dadd( -126.557, -81.258, 31.6379, 0.29 ) }
    dend_73 { pt3dadd( -126.502, -81.0864, 31.6416, 0.29 ) }
    dend_73 { pt3dadd( -125.991, -79.6262, 31.6713, 0.29 ) }
    dend_73 { pt3dadd( -125.94, -79.4808, 31.676, 0.29 ) }
    dend_73 { pt3dadd( -125.59, -78.4622, 31.6915, 0.29 ) }
    dend_73 { pt3dadd( -125.571, -78.4004, 31.6909, 0.29 ) }
    dend_73 { pt3dadd( -125.371, -77.5943, 31.6635, 0.44 ) }
    dend_73 { pt3dadd( -125.36, -77.5385, 31.6604, 0.44 ) }
    dend_73 { pt3dadd( -125.265, -76.8569, 31.6052, 0.44 ) }
    dend_73 { pt3dadd( -125.171, -76.1491, 31.5412, 0.74 ) }
    dend_73 { pt3dadd( -125.166, -76.0927, 31.5355, 0.74 ) }
    dend_73 { pt3dadd( -125.138, -75.7606, 31.5043, 1.03 ) }
    dend_73 { pt3dadd( -125.104, -75.1466, 31.4622, 0.59 ) }
    dend_73 { pt3dadd( -125.09, -74.5052, 31.51, 0.29 ) }
    dend_73 { pt3dadd( -125.09, -74.3864, 31.5364, 0.29 ) }
    dend_73 { pt3dadd( -125.106, -73.9786, 31.682, 0.29 ) }
    dend_73 { pt3dadd( -125.11, -73.919, 31.7064, 0.29 ) }
    dend_73 { pt3dadd( -125.164, -73.2918, 31.9899, 0.88 ) }
    dend_73 { pt3dadd( -125.253, -72.3779, 32.399, 0.88 ) }
    dend_73 { pt3dadd( -125.263, -72.2749, 32.4417, 0.88 ) }
    dend_73 { pt3dadd( -125.298, -71.8412, 32.6061, 0.66 ) }
    dend_73 { pt3dadd( -125.309, -71.4132, 32.7762, 0.29 ) }
    dend_73 { pt3dadd( -125.299, -70.9695, 32.9527, 0.29 ) }
    dend_73 { pt3dadd( -125.244, -70.1148, 33.2795, 0.29 ) }
    dend_73 { pt3dadd( -125.2, -69.6822, 33.4287, 0.44 ) }
    dend_73 { pt3dadd( -125.192, -69.6224, 33.4516, 0.44 ) }
    dend_73 { pt3dadd( -125.051, -68.7526, 33.8795, 0.37 ) }
    dend_73 { pt3dadd( -124.968, -68.1672, 34.1977, 0.29 ) }
    dend_73 { pt3dadd( -124.964, -68.1174, 34.2248, 0.29 ) }
    dend_73 { pt3dadd( -124.944, -67.712, 34.4414, 0.74 ) }
    dend_73 { pt3dadd( -124.945, -67.6695, 34.4612, 0.74 ) }
    dend_73 { pt3dadd( -125.056, -66.5631, 34.9147, 0.29 ) }
    dend_73 { pt3dadd( -125.218, -65.5426, 35.2551, 0.29 ) }
    dend_73 { pt3dadd( -125.362, -64.6865, 35.5383, 0.22 ) }
    dend_73 { pt3dadd( -125.392, -64.5214, 35.5932, 0.22 ) }
    dend_73 { pt3dadd( -125.61, -63.3891, 35.953, 0.29 ) }
    dend_73 { pt3dadd( -125.621, -63.3283, 35.971, 0.29 ) }
    dend_73 { pt3dadd( -125.815, -62.3412, 36.2239, 0.29 ) }
    dend_73 { pt3dadd( -125.969, -61.5081, 36.4683, 0.29 ) }
    dend_73 { pt3dadd( -126.113, -60.6576, 36.7513, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -213.991, -210.474, 69.4423, 0.37 ) }
    dend_71 { pt3dadd( -214.238, -211.113, 69.0397, 0.37 ) }
    dend_71 { pt3dadd( -214.857, -212.45, 68.2469, 0.37 ) }
    dend_71 { pt3dadd( -215.392, -213.586, 67.6349, 0.29 ) }
    dend_71 { pt3dadd( -215.724, -214.258, 67.2615, 0.44 ) }
    dend_71 { pt3dadd( -216.053, -214.927, 66.8998, 0.44 ) }
    dend_71 { pt3dadd( -216.696, -216.252, 66.2126, 0.29 ) }
    dend_71 { pt3dadd( -216.949, -216.737, 65.9762, 0.37 ) }
    dend_71 { pt3dadd( -217.334, -217.426, 65.6907, 0.37 ) }
    dend_71 { pt3dadd( -218.144, -218.805, 65.0548, 0.37 ) }
    dend_71 { pt3dadd( -218.519, -219.444, 64.7376, 0.37 ) }
    dend_71 { pt3dadd( -218.772, -219.899, 64.5028, 0.66 ) }
    dend_71 { pt3dadd( -218.807, -219.962, 64.4721, 0.66 ) }
    dend_71 { pt3dadd( -219.06, -220.369, 64.2594, 0.74 ) }
    dend_71 { pt3dadd( -219.776, -221.37, 63.7075, 0.37 ) }
    dend_71 { pt3dadd( -220.247, -221.953, 63.4129, 0.37 ) }
    dend_71 { pt3dadd( -220.305, -222.012, 63.3757, 0.37 ) }
    dend_71 { pt3dadd( -220.748, -222.429, 63.0773, 0.37 ) }
    dend_71 { pt3dadd( -224.51, -232.259, 59.6834, 0.37 ) }
    dend_71 { pt3dadd( -226.741, -242.868, 57.3536, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -213.991, -210.474, 69.4423, 0.29 ) }
    dend_70 { pt3dadd( -215.104, -210.283, 70.13, 0.29 ) }
    dend_70 { pt3dadd( -216.094, -210.171, 70.8904, 0.52 ) }
    dend_70 { pt3dadd( -217.499, -210.116, 71.9715, 0.44 ) }
    dend_70 { pt3dadd( -217.996, -210.157, 72.337, 0.29 ) }
    dend_70 { pt3dadd( -218.946, -210.314, 72.9772, 0.29 ) }
    dend_70 { pt3dadd( -219.72, -210.462, 73.5202, 0.44 ) }
    dend_70 { pt3dadd( -221.565, -210.891, 74.9013, 0.29 ) }
    dend_70 { pt3dadd( -222.341, -211.069, 75.4559, 0.29 ) }
    dend_70 { pt3dadd( -223.466, -211.352, 76.2462, 0.29 ) }
    dend_70 { pt3dadd( -224.522, -211.625, 77.0529, 0.29 ) }
    dend_70 { pt3dadd( -225.628, -211.894, 77.9374, 0.29 ) }
    dend_70 { pt3dadd( -225.682, -211.908, 77.9805, 0.29 ) }
    dend_70 { pt3dadd( -226.646, -212.074, 78.7115, 0.44 ) }
    dend_70 { pt3dadd( -228.024, -212.16, 79.8865, 0.44 ) }
    dend_70 { pt3dadd( -228.155, -212.149, 80.0104, 0.44 ) }
    dend_70 { pt3dadd( -228.869, -212.073, 80.735, 0.66 ) }
    dend_70 { pt3dadd( -229.657, -212.082, 81.3821, 0.66 ) }
    dend_70 { pt3dadd( -238.709, -212.818, 88.6742, 0.66 ) }
    dend_70 { pt3dadd( -245.882, -213.367, 97.8341, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 61.2341, -311.936, -46.7817, 0.52 ) }
    dend_64 { pt3dadd( 60.2672, -312.827, -46.3311, 0.52 ) }
    dend_64 { pt3dadd( 59.5133, -313.556, -46.002, 0.29 ) }
    dend_64 { pt3dadd( 58.7123, -314.398, -45.6868, 0.22 ) }
    dend_64 { pt3dadd( 58.3103, -314.847, -45.5119, 0.52 ) }
    dend_64 { pt3dadd( 57.9535, -315.259, -45.3468, 0.74 ) }
    dend_64 { pt3dadd( 57.5032, -315.79, -45.134, 0.81 ) }
    dend_64 { pt3dadd( 57.082, -316.284, -44.9388, 0.66 ) }
    dend_64 { pt3dadd( 56.4771, -317.0, -44.6861, 0.29 ) }
    dend_64 { pt3dadd( 55.8128, -317.913, -44.3869, 0.29 ) }
    dend_64 { pt3dadd( 55.7719, -317.973, -44.3681, 0.29 ) }
    dend_64 { pt3dadd( 55.6455, -318.168, -44.3097, 0.66 ) }
    dend_64 { pt3dadd( 55.2812, -318.725, -44.1395, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 54.8188, -319.411, -43.9306, 0.22 ) }
    dend_64 { pt3dadd( 54.4126, -320.004, -43.7672, 0.22 ) }
    dend_64 { pt3dadd( 54.2171, -320.301, -43.7213, 0.52 ) }
    dend_64 { pt3dadd( 53.9793, -320.675, -43.6672, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 61.2341, -311.936, -46.7817, 1.18 ) }
    dend_63 { pt3dadd( 61.6717, -312.62, -46.7706, 1.18 ) }
    dend_63 { pt3dadd( 61.8468, -312.94, -46.7517, 1.4 ) }
    dend_63 { pt3dadd( 62.1313, -313.551, -46.6512, 0.37 ) }
    dend_63 { pt3dadd( 62.3215, -314.117, -46.4673, 0.44 ) }
    dend_63 { pt3dadd( 62.417, -314.594, -46.2665, 0.66 ) }
    dend_63 { pt3dadd( 62.4774, -315.272, -45.8983, 0.66 ) }
    dend_63 { pt3dadd( 62.4639, -315.619, -45.6816, 0.66 ) }
    dend_63 { pt3dadd( 62.3852, -316.406, -45.1669, 0.59 ) }
    dend_63 { pt3dadd( 62.2451, -317.424, -44.4872, 0.37 ) }
    dend_63 { pt3dadd( 62.1596, -318.028, -44.0866, 1.55 ) }
    dend_63 { pt3dadd( 62.049, -319.11, -43.4183, 0.37 ) }
    dend_63 { pt3dadd( 62.0211, -319.797, -43.0621, 0.44 ) }
    dend_63 { pt3dadd( 62.0552, -320.488, -42.7794, 0.44 ) }
    dend_63 { pt3dadd( 62.112, -320.882, -42.6817, 0.88 ) }
    dend_63 { pt3dadd( 62.1957, -321.248, -42.6417, 1.03 ) }
    dend_63 { pt3dadd( 62.3691, -321.965, -42.6058, 0.37 ) }
    dend_63 { pt3dadd( 62.4856, -322.525, -42.6134, 0.37 ) }
    dend_63 { pt3dadd( 62.5336, -322.805, -42.6113, 0.88 ) }
    dend_63 { pt3dadd( 62.5891, -323.183, -42.6031, 0.96 ) }
    dend_63 { pt3dadd( 62.6572, -323.811, -42.5798, 0.96 ) }
    dend_63 { pt3dadd( 62.7337, -324.588, -42.5478, 0.29 ) }
    dend_63 { pt3dadd( 62.8455, -325.378, -42.4669, 0.29 ) }
    dend_63 { pt3dadd( 62.8981, -325.66, -42.4232, 0.66 ) }
    dend_63 { pt3dadd( 62.9761, -325.983, -42.3412, 0.88 ) }
    dend_63 { pt3dadd( 62.9898, -326.031, -42.3252, 0.88 ) }
    dend_63 { pt3dadd( 63.1214, -326.419, -42.1651, 0.74 ) }
    dend_63 { pt3dadd( 63.435, -327.389, -41.6966, 0.29 ) }
    dend_63 { pt3dadd( 63.5737, -327.904, -41.4353, 0.29 ) }
    dend_63 { pt3dadd( 63.7696, -328.593, -41.1271, 1.11 ) }
    dend_63 { pt3dadd( 63.8872, -328.933, -41.0037, 1.11 ) }
    dend_63 { pt3dadd( 63.9061, -328.98, -40.9912, 1.11 ) }
    dend_63 { pt3dadd( 64.0836, -329.381, -40.9275, 1.11 ) }
    dend_63 { pt3dadd( 64.5592, -330.306, -40.8384, 0.29 ) }
    dend_63 { pt3dadd( 64.9884, -331.085, -40.7725, 0.29 ) }
    dend_63 { pt3dadd( 65.3607, -331.767, -40.7157, 0.29 ) }
    dend_63 { pt3dadd( 65.5634, -332.148, -40.6731, 0.81 ) }
    dend_63 { pt3dadd( 65.8008, -332.613, -40.5919, 0.96 ) }
    dend_63 { pt3dadd( 66.2864, -333.503, -40.3144, 0.96 ) }
    dend_63 { pt3dadd( 66.5668, -334.027, -40.0893, 0.37 ) }
    dend_63 { pt3dadd( 66.822, -334.546, -39.8191, 0.88 ) }
    dend_63 { pt3dadd( 67.0087, -334.967, -39.5825, 0.88 ) }
    dend_63 { pt3dadd( 67.3482, -335.805, -39.1066, 0.59 ) }
    dend_63 { pt3dadd( 67.7536, -336.943, -38.4965, 0.44 ) }
    dend_63 { pt3dadd( 67.8915, -337.398, -38.2905, 0.59 ) }
    dend_63 { pt3dadd( 67.9822, -337.768, -38.1456, 0.59 ) }
    dend_63 { pt3dadd( 68.0844, -338.359, -37.9694, 0.88 ) }
    dend_63 { pt3dadd( 68.1533, -338.896, -37.87, 0.29 ) }
    dend_63 { pt3dadd( 68.2094, -339.524, -37.8153, 0.29 ) }
    dend_63 { pt3dadd( 68.2687, -340.176, -37.7752, 0.37 ) }
    dend_63 { pt3dadd( 68.3597, -340.887, -37.7103, 0.96 ) }
    dend_63 { pt3dadd( 68.4371, -341.401, -37.6502, 1.33 ) }
    dend_63 { pt3dadd( 68.5981, -342.25, -37.4942, 0.37 ) }
    dend_63 { pt3dadd( 68.7179, -342.858, -37.3436, 0.52 ) }
    dend_63 { pt3dadd( 68.8672, -343.643, -37.1038, 0.44 ) }
    dend_63 { pt3dadd( 68.9456, -344.056, -36.9625, 0.29 ) }
    dend_63 { pt3dadd( 69.0375, -344.501, -36.8046, 0.88 ) }
    dend_63 { pt3dadd( 69.1881, -345.292, -36.5224, 0.74 ) }
    dend_63 { pt3dadd( 69.3015, -345.809, -36.3232, 0.29 ) }
    dend_63 { pt3dadd( 69.4386, -346.292, -36.1558, 0.59 ) }
    dend_63 { pt3dadd( 69.5944, -346.813, -35.9913, 0.74 ) }
    dend_63 { pt3dadd( 69.7316, -347.235, -35.839, 0.88 ) }
    dend_63 { pt3dadd( 69.7477, -347.286, -35.8189, 0.88 ) }
    dend_63 { pt3dadd( 70.0073, -348.342, -35.3976, 0.52 ) }
    dend_63 { pt3dadd( 70.0688, -348.758, -35.2022, 0.52 ) }
    dend_63 { pt3dadd( 70.0879, -349.375, -34.847, 0.52 ) }
    dend_63 { pt3dadd( 70.0654, -350.013, -34.463, 0.96 ) }
    dend_63 { pt3dadd( 70.0541, -350.343, -34.2395, 1.33 ) }
    dend_63 { pt3dadd( 70.0565, -350.812, -33.9069, 0.59 ) }
    dend_63 { pt3dadd( 70.0658, -351.409, -33.4896, 0.37 ) }
    dend_63 { pt3dadd( 70.1332, -352.265, -32.9071, 0.44 ) }
    dend_63 { pt3dadd( 70.2032, -352.774, -32.6012, 0.66 ) }
    dend_63 { pt3dadd( 70.3672, -353.719, -32.1387, 0.96 ) }
    dend_63 { pt3dadd( 70.5707, -354.681, -31.7263, 0.44 ) }
    dend_63 { pt3dadd( 70.6847, -355.174, -31.5454, 1.03 ) }
    dend_63 { pt3dadd( 70.8364, -355.763, -31.3814, 1.18 ) }
    dend_63 { pt3dadd( 71.0245, -356.577, -31.2497, 0.29 ) }
    dend_63 { pt3dadd( 71.1645, -357.357, -31.2084, 0.29 ) }
    dend_63 { pt3dadd( 71.1791, -357.474, -31.216, 0.88 ) }
    dend_63 { pt3dadd( 71.1993, -357.754, -31.2473, 1.25 ) }
    dend_63 { pt3dadd( 71.2292, -358.332, -31.2887, 0.66 ) }
    dend_63 { pt3dadd( 71.2449, -358.965, -31.3047, 0.59 ) }
    dend_63 { pt3dadd( 71.2499, -359.842, -31.2891, 0.52 ) }
    dend_63 { pt3dadd( 71.2363, -360.362, -31.2635, 0.52 ) }
    dend_63 { pt3dadd( 71.2095, -361.108, -31.2106, 0.52 ) }
    dend_63 { pt3dadd( 71.1897, -361.81, -31.1262, 0.37 ) }
    dend_63 { pt3dadd( 71.1558, -362.459, -31.0506, 0.29 ) }
    dend_63 { pt3dadd( 71.1439, -362.717, -31.0271, 0.74 ) }
    dend_63 { pt3dadd( 71.139, -362.871, -31.02, 0.74 ) }
    dend_63 { pt3dadd( 71.1283, -363.296, -31.0308, 0.74 ) }
    dend_63 { pt3dadd( 71.1178, -363.984, -31.1021, 0.81 ) }
    dend_63 { pt3dadd( 71.0726, -365.043, -31.2901, 0.81 ) }
    dend_63 { pt3dadd( 71.0573, -365.731, -31.4378, 0.81 ) }
    dend_63 { pt3dadd( 71.0606, -366.494, -31.6146, 0.81 ) }
    dend_63 { pt3dadd( 71.0618, -366.544, -31.6262, 0.81 ) }
    dend_63 { pt3dadd( 71.0913, -367.213, -31.787, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 71.1492, -368.048, -31.9899, 0.44 ) }
    dend_63 { pt3dadd( 71.2182, -368.583, -32.0873, 0.44 ) }
    dend_63 { pt3dadd( 71.3223, -369.196, -32.187, 0.29 ) }
    dend_63 { pt3dadd( 71.421, -369.714, -32.2502, 0.74 ) }
    dend_63 { pt3dadd( 71.4733, -370.024, -32.2748, 0.96 ) }
    dend_63 { pt3dadd( 71.4809, -370.075, -32.2734, 0.96 ) }
    dend_63 { pt3dadd( 71.5344, -370.603, -32.2067, 0.52 ) }
    dend_63 { pt3dadd( 71.5689, -371.376, -32.032, 0.52 ) }
    dend_63 { pt3dadd( 71.5883, -372.097, -31.8173, 0.52 ) }
    dend_63 { pt3dadd( 71.6091, -372.575, -31.6635, 0.59 ) }
    dend_63 { pt3dadd( 71.6745, -373.396, -31.3998, 0.74 ) }
    dend_63 { pt3dadd( 71.7306, -373.847, -31.2607, 0.52 ) }
    dend_63 { pt3dadd( 71.8575, -374.676, -31.0296, 0.37 ) }
    dend_63 { pt3dadd( 71.8666, -374.726, -31.0177, 0.37 ) }
    dend_63 { pt3dadd( 72.0552, -375.483, -30.9027, 0.44 ) }
    dend_63 { pt3dadd( 72.2232, -376.026, -30.8788, 0.37 ) }
    dend_63 { pt3dadd( 72.3509, -376.405, -30.9135, 0.74 ) }
    dend_63 { pt3dadd( 72.5398, -376.984, -30.9953, 0.29 ) }
    dend_63 { pt3dadd( 72.5504, -377.025, -31.0027, 0.29 ) }
    dend_63 { pt3dadd( 72.6102, -377.3, -31.0471, 0.44 ) }
    dend_63 { pt3dadd( 72.616, -377.342, -31.0524, 0.44 ) }
    dend_63 { pt3dadd( 72.6402, -377.721, -31.0867, 0.44 ) }
    dend_63 { pt3dadd( 72.6744, -378.467, -31.1296, 0.22 ) }
    dend_63 { pt3dadd( 72.7189, -378.993, -31.1366, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -1.85794, -173.901, -74.0968, 0.29 ) }
    dend_61 { pt3dadd( -2.85057, -173.581, -74.6745, 0.29 ) }
    dend_61 { pt3dadd( -2.97916, -173.541, -74.7387, 0.29 ) }
    dend_61 { pt3dadd( -3.58698, -173.336, -75.0047, 0.29 ) }
    dend_61 { pt3dadd( -5.04096, -172.785, -75.5676, 0.29 ) }
    dend_61 { pt3dadd( -5.56636, -172.558, -75.7839, 0.59 ) }
    dend_61 { pt3dadd( -7.02028, -171.836, -76.3837, 0.59 ) }
    dend_61 { pt3dadd( -7.80809, -171.359, -76.7114, 0.37 ) }
    dend_61 { pt3dadd( -8.22144, -171.062, -76.8978, 0.66 ) }
    dend_61 { pt3dadd( -8.65072, -170.719, -77.11, 0.88 ) }
    dend_61 { pt3dadd( -10.1062, -169.45, -77.8749, 0.22 ) }
    dend_61 { pt3dadd( -10.6401, -168.95, -78.1815, 0.44 ) }
    dend_61 { pt3dadd( -11.0763, -168.494, -78.4456, 0.59 ) }
    dend_61 { pt3dadd( -11.8037, -167.71, -78.9781, 0.29 ) }
    dend_61 { pt3dadd( -12.4492, -167.034, -79.4935, 0.74 ) }
    dend_61 { pt3dadd( -13.2246, -166.259, -80.1503, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -1.85794, -173.901, -74.0968, 0.52 ) }
    dend_54 { pt3dadd( -2.76502, -175.928, -76.5986, 0.52 ) }
    dend_54 { pt3dadd( -2.79351, -175.987, -76.6527, 0.52 ) }
    dend_54 { pt3dadd( -3.05679, -176.547, -77.0669, 0.52 ) }
    dend_54 { pt3dadd( -3.91163, -178.53, -78.3079, 1.33 ) }
    dend_54 { pt3dadd( -4.23016, -179.301, -78.7468, 1.77 ) }
    dend_54 { pt3dadd( -4.64306, -180.449, -79.3166, 0.66 ) }
    dend_54 { pt3dadd( -5.10979, -181.891, -79.8119, 0.66 ) }
    dend_54 { pt3dadd( -5.64524, -183.831, -80.5008, 0.66 ) }
    dend_54 { pt3dadd( -5.85197, -184.896, -80.921, 0.88 ) }
    dend_54 { pt3dadd( -5.87217, -185.174, -81.0347, 0.88 ) }
    dend_54 { pt3dadd( -5.85325, -186.896, -81.7932, 0.88 ) }
    dend_54 { pt3dadd( -5.84853, -186.963, -81.825, 0.88 ) }
    dend_54 { pt3dadd( -5.54668, -189.05, -82.8372, 0.66 ) }
    dend_54 { pt3dadd( -5.20572, -190.67, -83.7031, 0.44 ) }
    dend_54 { pt3dadd( -4.97693, -191.646, -84.2932, 0.96 ) }
    dend_54 { pt3dadd( -4.63379, -193.029, -85.1973, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -147.956, -212.604, 35.9159, 0.29 ) }
    dend_38 { pt3dadd( -151.766, -216.256, 43.3737, 0.29 ) }
    dend_38 { pt3dadd( -156.048, -219.402, 50.7913, 0.29 ) }
    dend_38 { pt3dadd( -160.475, -222.859, 57.9897, 0.29 ) }
    dend_38 { pt3dadd( -165.536, -228.381, 63.2984, 0.29 ) }
    dend_38 { pt3dadd( -170.018, -233.73, 69.2605, 0.29 ) }
    dend_38 { pt3dadd( -174.322, -238.871, 75.5204, 0.29 ) }
    dend_38 { pt3dadd( -178.786, -243.656, 81.9338, 0.29 ) }
    dend_38 { pt3dadd( -182.97, -248.952, 88.1542, 0.29 ) }
    dend_38 { pt3dadd( -186.846, -254.624, 94.2576, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -147.956, -212.604, 35.9159, 0.44 ) }
    dend_37 { pt3dadd( -154.139, -220.428, 33.853, 0.29 ) }
    dend_37 { pt3dadd( -161.293, -227.1, 31.1695, 0.29 ) }
    dend_37 { pt3dadd( -167.968, -234.292, 28.5269, 0.29 ) }
    dend_37 { pt3dadd( -173.403, -242.106, 24.9132, 0.29 ) }
    dend_37 { pt3dadd( -177.634, -250.046, 20.1378, 0.29 ) }
    dend_37 { pt3dadd( -181.111, -257.737, 14.4558, 0.29 ) }
    dend_37 { pt3dadd( -185.025, -264.454, 7.94353, 0.29 ) }
    dend_37 { pt3dadd( -189.955, -270.508, 1.50225, 0.29 ) }
    dend_37 { pt3dadd( -193.708, -278.263, -3.91682, 0.29 ) }
    dend_37 { pt3dadd( -197.575, -286.976, -7.58854, 0.29 ) }
    dend_37 { pt3dadd( -201.947, -296.047, -9.4085, 0.29 ) }
    dend_37 { pt3dadd( -207.809, -304.4, -9.34487, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 94.7772, 210.622, 77.5927, 0.29 ) }
    dend_10 { pt3dadd( 96.5832, 221.29, 81.7305, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 94.7772, 210.622, 77.5927, 0.44 ) }
    dend_9 { pt3dadd( 96.852, 220.108, 82.1457, 0.29 ) }
    dend_9 { pt3dadd( 99.2711, 229.146, 87.3512, 0.29 ) }
    dend_9 { pt3dadd( 101.215, 238.324, 92.5147, 0.29 ) }
    dend_9 { pt3dadd( 103.095, 246.788, 98.7455, 0.29 ) }
    dend_9 { pt3dadd( 103.266, 256.04, 104.114, 0.29 ) }
    dend_9 { pt3dadd( 103.18, 264.651, 110.412, 0.29 ) }
    dend_9 { pt3dadd( 101.819, 274.161, 115.123, 0.29 ) }
    dend_9 { pt3dadd( 99.8246, 283.284, 120.301, 0.29 ) }
    dend_9 { pt3dadd( 96.616, 291.067, 126.784, 0.29 ) }
    dend_9 { pt3dadd( 94.7496, 299.074, 133.534, 0.29 ) }
    dend_9 { pt3dadd( 95.0191, 306.197, 141.408, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -126.113, -60.6576, 36.7513, 0.22 ) }
    dend_83 { pt3dadd( -127.157, -60.6452, 36.9717, 0.22 ) }
    dend_83 { pt3dadd( -128.884, -60.6245, 37.3363, 0.22 ) }
    dend_83 { pt3dadd( -129.639, -60.6155, 37.4959, 0.52 ) }
    dend_83 { pt3dadd( -130.103, -60.6099, 37.5939, 0.74 ) }
    dend_83 { pt3dadd( -139.695, -59.0637, 41.0058, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -149.133, -58.2528, 45.0363, 0.74 ) }
    dend_83 { pt3dadd( -157.701, -56.4027, 50.4573, 0.74 ) }
    dend_83 { pt3dadd( -165.906, -56.1903, 56.6713, 0.74 ) }
    dend_83 { pt3dadd( -173.264, -54.3418, 63.656, 0.74 ) }
    dend_83 { pt3dadd( -179.139, -53.1307, 72.0428, 0.74 ) }
    dend_83 { pt3dadd( -183.204, -51.776, 81.4304, 0.74 ) }
    dend_83 { pt3dadd( -186.84, -49.5894, 90.8542, 0.74 ) }
    dend_83 { pt3dadd( -190.82, -46.4863, 99.8911, 0.74 ) }
    dend_83 { pt3dadd( -194.139, -44.5935, 109.489, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -126.113, -60.6576, 36.7513, 0.44 ) }
    dend_74 { pt3dadd( -126.063, -60.0606, 36.8983, 0.44 ) }
    dend_74 { pt3dadd( -126.033, -59.6251, 36.9989, 0.66 ) }
    dend_74 { pt3dadd( -126.03, -59.5444, 37.0166, 0.66 ) }
    dend_74 { pt3dadd( -126.023, -59.3001, 37.0689, 0.59 ) }
    dend_74 { pt3dadd( -126.0, -58.7397, 37.1836, 0.29 ) }
    dend_74 { pt3dadd( -125.944, -57.8426, 37.3569, 0.29 ) }
    dend_74 { pt3dadd( -125.938, -57.7489, 37.3778, 0.29 ) }
    dend_74 { pt3dadd( -125.89, -57.0979, 37.5442, 0.52 ) }
    dend_74 { pt3dadd( -125.886, -57.0488, 37.5578, 0.52 ) }
    dend_74 { pt3dadd( -125.824, -56.384, 37.7537, 0.52 ) }
    dend_74 { pt3dadd( -125.729, -55.5782, 38.0009, 1.03 ) }
    dend_74 { pt3dadd( -125.573, -54.5974, 38.3186, 0.29 ) }
    dend_74 { pt3dadd( -125.565, -54.5553, 38.3327, 0.29 ) }
    dend_74 { pt3dadd( -125.429, -53.9921, 38.5357, 0.29 ) }
    dend_74 { pt3dadd( -125.308, -53.5995, 38.6758, 0.52 ) }
    dend_74 { pt3dadd( -125.16, -53.2035, 38.8167, 0.52 ) }
    dend_74 { pt3dadd( -124.974, -52.7742, 38.955, 0.96 ) }
    dend_74 { pt3dadd( -124.959, -52.7416, 38.9639, 0.96 ) }
    dend_74 { pt3dadd( -124.505, -51.7607, 39.2295, 0.29 ) }
    dend_74 { pt3dadd( -124.134, -50.9438, 39.449, 0.29 ) }
    dend_74 { pt3dadd( -124.116, -50.8979, 39.4611, 0.29 ) }
    dend_74 { pt3dadd( -123.862, -50.1327, 39.6533, 0.29 ) }
    dend_74 { pt3dadd( -123.803, -49.8721, 39.7119, 0.59 ) }
    dend_74 { pt3dadd( -123.786, -49.7408, 39.7396, 0.59 ) }
    dend_74 { pt3dadd( -123.79, -49.3833, 39.8074, 0.52 ) }
    dend_74 { pt3dadd( -123.823, -49.0055, 39.8845, 0.66 ) }
    dend_74 { pt3dadd( -123.862, -48.6069, 39.9664, 0.66 ) }
    dend_74 { pt3dadd( -123.935, -47.9899, 40.0952, 0.29 ) }
    dend_74 { pt3dadd( -123.943, -47.8973, 40.1199, 0.29 ) }
    dend_74 { pt3dadd( -123.961, -47.5011, 40.2429, 0.29 ) }
    dend_74 { pt3dadd( -123.958, -47.2004, 40.3763, 0.52 ) }
    dend_74 { pt3dadd( -123.956, -47.162, 40.3971, 0.52 ) }
    dend_74 { pt3dadd( -123.889, -46.6198, 40.7186, 0.37 ) }
    dend_74 { pt3dadd( -123.778, -45.9773, 41.1275, 0.59 ) }
    dend_74 { pt3dadd( -123.71, -45.6619, 41.3264, 0.96 ) }
    dend_74 { pt3dadd( -123.491, -44.785, 41.881, 0.37 ) }
    dend_74 { pt3dadd( -123.475, -44.7337, 41.9149, 0.37 ) }
    dend_74 { pt3dadd( -123.266, -44.1471, 42.304, 0.37 ) }
    dend_74 { pt3dadd( -123.251, -44.1119, 42.3274, 0.37 ) }
    dend_74 { pt3dadd( -123.072, -43.6983, 42.573, 0.37 ) }
    dend_74 { pt3dadd( -123.029, -43.5784, 42.6298, 0.37 ) }
    dend_74 { pt3dadd( -122.817, -42.6784, 42.9264, 0.59 ) }
    dend_74 { pt3dadd( -122.788, -42.5096, 42.9775, 0.88 ) }
    dend_74 { pt3dadd( -122.781, -42.4664, 42.9889, 0.88 ) }
    dend_74 { pt3dadd( -122.733, -42.1128, 43.0714, 0.88 ) }
    dend_74 { pt3dadd( -122.558, -40.8234, 43.3276, 0.29 ) }
    dend_74 { pt3dadd( -122.393, -39.6917, 43.4798, 0.29 ) }
    dend_74 { pt3dadd( -122.367, -39.5295, 43.4929, 0.29 ) }
    dend_74 { pt3dadd( -122.158, -38.2149, 43.6241, 0.29 ) }
    dend_74 { pt3dadd( -122.133, -38.032, 43.6462, 0.29 ) }
    dend_74 { pt3dadd( -122.027, -37.1632, 43.7656, 0.37 ) }
    dend_74 { pt3dadd( -121.929, -36.0896, 43.9425, 0.37 ) }
    dend_74 { pt3dadd( -121.899, -35.5689, 44.0716, 0.37 ) }
    dend_74 { pt3dadd( -121.881, -34.7778, 44.3293, 0.29 ) }
    dend_74 { pt3dadd( -121.91, -34.0064, 44.6365, 0.29 ) }
    dend_74 { pt3dadd( -121.916, -33.9196, 44.677, 0.29 ) }
    dend_74 { pt3dadd( -121.976, -33.5405, 44.913, 0.29 ) }
    dend_74 { pt3dadd( -122.178, -32.6888, 45.6281, 1.18 ) }
    dend_74 { pt3dadd( -122.216, -32.5244, 45.7736, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.63379, -193.029, -85.1973, 0.88 ) }
    dend_56 { pt3dadd( -5.24635, -194.298, -85.667, 0.88 ) }
    dend_56 { pt3dadd( -5.64078, -195.207, -85.9554, 1.47 ) }
    dend_56 { pt3dadd( -5.96735, -196.105, -86.2105, 1.69 ) }
    dend_56 { pt3dadd( -6.50359, -197.954, -86.6812, 0.59 ) }
    dend_56 { pt3dadd( -6.51875, -198.017, -86.6982, 0.59 ) }
    dend_56 { pt3dadd( -6.75171, -199.157, -87.0116, 0.29 ) }
    dend_56 { pt3dadd( -6.87189, -200.058, -87.2492, 0.44 ) }
    dend_56 { pt3dadd( -6.94444, -200.845, -87.5301, 0.66 ) }
    dend_56 { pt3dadd( -7.00622, -201.703, -87.9733, 1.11 ) }
    dend_56 { pt3dadd( -7.03892, -202.539, -88.4619, 1.47 ) }
    dend_56 { pt3dadd( -7.0673, -202.964, -88.7251, 1.47 ) }
    dend_56 { pt3dadd( -7.07383, -203.032, -88.7684, 1.47 ) }
    dend_56 { pt3dadd( -7.33366, -205.03, -89.9464, 1.11 ) }
    dend_56 { pt3dadd( -7.65056, -206.847, -90.8326, 0.59 ) }
    dend_56 { pt3dadd( -7.80525, -207.787, -91.1844, 0.81 ) }
    dend_56 { pt3dadd( -7.91906, -208.657, -91.4233, 1.11 ) }
    dend_56 { pt3dadd( -7.98806, -209.554, -91.6023, 1.25 ) }
    dend_56 { pt3dadd( -8.02817, -210.871, -91.7623, 0.66 ) }
    dend_56 { pt3dadd( -8.00271, -212.374, -91.7859, 0.52 ) }
    dend_56 { pt3dadd( -7.93337, -213.807, -91.7479, 1.03 ) }
    dend_56 { pt3dadd( -7.89677, -214.511, -91.7502, 1.25 ) }
    dend_56 { pt3dadd( -7.80002, -215.993, -91.8046, 0.66 ) }
    dend_56 { pt3dadd( -7.77492, -216.437, -91.8461, 0.44 ) }
    dend_56 { pt3dadd( -7.73273, -217.015, -91.9384, 0.96 ) }
    dend_56 { pt3dadd( -7.69257, -217.519, -92.0481, 1.25 ) }
    dend_56 { pt3dadd( -7.62028, -218.819, -92.3732, 1.11 ) }
    dend_56 { pt3dadd( -7.58349, -219.849, -92.6609, 0.96 ) }
    dend_56 { pt3dadd( -7.53261, -220.97, -92.9494, 0.66 ) }
    dend_56 { pt3dadd( -7.47157, -222.148, -93.2013, 0.59 ) }
    dend_56 { pt3dadd( -7.46678, -222.228, -93.2155, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( -7.4267, -223.135, -93.3148, 0.59 ) }
    dend_56 { pt3dadd( -7.45355, -224.351, -93.3048, 0.52 ) }
    dend_56 { pt3dadd( -7.61305, -225.533, -93.1589, 0.81 ) }
    dend_56 { pt3dadd( -7.8484, -226.401, -92.9424, 1.03 ) }
    dend_56 { pt3dadd( -7.89408, -226.511, -92.9062, 1.03 ) }
    dend_56 { pt3dadd( -8.272, -227.307, -92.6134, 1.03 ) }
    dend_56 { pt3dadd( -8.87582, -228.337, -92.1593, 0.52 ) }
    dend_56 { pt3dadd( -9.26156, -228.892, -91.8716, 1.11 ) }
    dend_56 { pt3dadd( -9.74978, -229.48, -91.5994, 1.33 ) }
    dend_56 { pt3dadd( -9.79979, -229.536, -91.5708, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -4.63379, -193.029, -85.1973, 0.52 ) }
    dend_55 { pt3dadd( -3.43518, -193.531, -84.7387, 0.52 ) }
    dend_55 { pt3dadd( -1.23631, -194.443, -83.8081, 0.29 ) }
    dend_55 { pt3dadd( 0.0577499, -195.006, -83.2721, 0.59 ) }
    dend_55 { pt3dadd( 0.835601, -195.348, -82.9139, 0.96 ) }
    dend_55 { pt3dadd( 3.20804, -196.402, -81.806, 0.22 ) }
    dend_55 { pt3dadd( 4.82984, -197.11, -81.0647, 0.59 ) }
    dend_55 { pt3dadd( 4.91685, -197.146, -81.0244, 0.59 ) }
    dend_55 { pt3dadd( 6.10622, -197.657, -80.548, 0.52 ) }
    dend_55 { pt3dadd( 7.85644, -198.529, -79.8226, 0.37 ) }
    dend_55 { pt3dadd( 8.5965, -198.962, -79.5369, 0.81 ) }
    dend_55 { pt3dadd( 9.17987, -199.353, -79.3706, 0.96 ) }
    dend_55 { pt3dadd( 10.6419, -200.404, -79.0396, 0.37 ) }
    dend_55 { pt3dadd( 11.9622, -201.374, -78.9413, 0.37 ) }
    dend_55 { pt3dadd( 13.201, -202.324, -79.0821, 0.44 ) }
    dend_55 { pt3dadd( 13.9023, -202.884, -79.3073, 0.44 ) }
    dend_55 { pt3dadd( 14.8471, -203.642, -79.629, 0.22 ) }
    dend_55 { pt3dadd( 15.5236, -204.157, -79.8679, 0.44 ) }
    dend_55 { pt3dadd( 18.0673, -205.916, -80.7987, 0.37 ) }
    dend_55 { pt3dadd( 19.0866, -206.559, -81.1721, 0.52 ) }
    dend_55 { pt3dadd( 20.236, -207.233, -81.589, 0.59 ) }
    dend_55 { pt3dadd( 21.5559, -207.94, -81.9897, 0.81 ) }
    dend_55 { pt3dadd( 22.9402, -208.634, -82.3081, 0.29 ) }
    dend_55 { pt3dadd( 24.1945, -209.202, -82.4762, 0.52 ) }
    dend_55 { pt3dadd( 24.8801, -209.477, -82.4859, 0.81 ) }
    dend_55 { pt3dadd( 25.5889, -209.701, -82.5186, 1.11 ) }
    dend_55 { pt3dadd( 25.8928, -209.776, -82.5462, 1.11 ) }
    dend_55 { pt3dadd( 26.495, -209.894, -82.6348, 0.96 ) }
    dend_55 { pt3dadd( 27.6207, -210.024, -82.6892, 0.59 ) }
    dend_55 { pt3dadd( 29.5005, -210.078, -82.4892, 0.29 ) }
    dend_55 { pt3dadd( 30.4291, -210.1, -82.3122, 0.52 ) }
    dend_55 { pt3dadd( 31.1541, -210.119, -82.1372, 0.66 ) }
    dend_55 { pt3dadd( 31.2496, -210.125, -82.1109, 0.66 ) }
    dend_55 { pt3dadd( 33.6399, -210.382, -81.3479, 0.52 ) }
    dend_55 { pt3dadd( 35.4526, -210.645, -80.7116, 0.74 ) }
    dend_55 { pt3dadd( 37.235, -210.937, -80.0673, 0.22 ) }
    dend_55 { pt3dadd( 37.7208, -211.038, -79.9133, 0.74 ) }
    dend_55 { pt3dadd( 38.6045, -211.274, -79.6598, 0.81 ) }
    dend_55 { pt3dadd( 40.5487, -211.932, -79.2018, 0.22 ) }
    dend_55 { pt3dadd( 41.1455, -212.207, -79.1239, 0.66 ) }
    dend_55 { pt3dadd( 41.7027, -212.508, -79.075, 0.74 ) }
    dend_55 { pt3dadd( 43.0409, -213.347, -78.9362, 0.22 ) }
    dend_55 { pt3dadd( 44.1911, -214.164, -78.7727, 0.66 ) }
    dend_55 { pt3dadd( 44.5872, -214.476, -78.7108, 0.81 ) }
    dend_55 { pt3dadd( 45.2797, -215.12, -78.6029, 0.52 ) }
    dend_55 { pt3dadd( 45.3409, -215.178, -78.5927, 0.52 ) }
    dend_55 { pt3dadd( 46.2721, -216.127, -78.4707, 0.22 ) }
    dend_55 { pt3dadd( 47.4813, -217.443, -78.3899, 0.74 ) }
    dend_55 { pt3dadd( 48.1233, -218.128, -78.4814, 0.81 ) }
    dend_55 { pt3dadd( 48.2624, -218.269, -78.5149, 0.81 ) }
    dend_55 { pt3dadd( 48.946, -218.912, -78.761, 0.59 ) }
    dend_55 { pt3dadd( 49.6073, -219.491, -79.1524, 0.29 ) }
    dend_55 { pt3dadd( 50.2953, -220.092, -79.7081, 1.03 ) }
    dend_55 { pt3dadd( 51.2977, -221.088, -80.6998, 1.03 ) }
    dend_55 { pt3dadd( 51.4747, -221.294, -80.8933, 1.25 ) }
    dend_55 { pt3dadd( 52.0904, -222.176, -81.5962, 0.66 ) }
    dend_55 { pt3dadd( 53.0316, -223.806, -82.705, 0.52 ) }
    dend_55 { pt3dadd( 53.5719, -224.909, -83.3108, 0.37 ) }
    dend_55 { pt3dadd( 53.9409, -225.84, -83.7228, 0.29 ) }
    dend_55 { pt3dadd( 54.2286, -226.806, -84.0047, 0.29 ) }
    dend_55 { pt3dadd( 54.6402, -228.523, -84.3596, 0.29 ) }
    dend_55 { pt3dadd( 54.7599, -229.127, -84.4635, 0.81 ) }
    dend_55 { pt3dadd( 54.9256, -229.965, -84.5837, 1.03 ) }
    dend_55 { pt3dadd( 54.9524, -230.064, -84.6021, 1.03 ) }
    dend_55 { pt3dadd( 55.4424, -231.42, -84.9232, 0.59 ) }
    dend_55 { pt3dadd( 56.0116, -232.68, -85.2001, 0.44 ) }
    dend_55 { pt3dadd( 56.6923, -234.094, -85.4591, 0.88 ) }
    dend_55 { pt3dadd( 56.8922, -234.496, -85.5195, 1.25 ) }
    dend_55 { pt3dadd( 57.2766, -235.199, -85.5689, 1.55 ) }
    dend_55 { pt3dadd( 57.8208, -236.084, -85.5661, 0.29 ) }
    dend_55 { pt3dadd( 58.8238, -237.449, -85.2081, 0.29 ) }
    dend_55 { pt3dadd( 59.7298, -238.587, -84.695, 0.29 ) }
    dend_55 { pt3dadd( 59.7868, -238.659, -84.6566, 0.29 ) }
    dend_55 { pt3dadd( 60.6513, -239.783, -84.0471, 1.47 ) }
    dend_55 { pt3dadd( 61.3801, -240.763, -83.5229, 1.77 ) }
    dend_55 { pt3dadd( 63.2866, -243.325, -82.164, 0.37 ) }
    dend_55 { pt3dadd( 63.9437, -244.202, -81.6963, 0.22 ) }
    dend_55 { pt3dadd( 64.8177, -245.356, -81.0534, 0.29 ) }
    dend_55 { pt3dadd( 65.2037, -245.901, -80.7695, 0.52 ) }
    dend_55 { pt3dadd( 65.6661, -246.657, -80.4392, 0.66 ) }
    dend_55 { pt3dadd( 65.7104, -246.746, -80.4069, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -194.139, -44.5935, 109.489, 0.37 ) }
    dend_85 { pt3dadd( -201.09, -42.9633, 116.868, 0.37 ) }
    dend_85 { pt3dadd( -208.906, -42.332, 123.478, 0.37 ) }
    dend_85 { pt3dadd( -215.234, -41.602, 131.522, 0.37 ) }
    dend_85 { pt3dadd( -222.159, -42.1894, 139.056, 0.37 ) }
    dend_85 { pt3dadd( -230.497, -44.2171, 144.666, 0.37 ) }
    dend_85 { pt3dadd( -237.883, -46.3977, 151.433, 0.37 ) }
    dend_85 { pt3dadd( -244.662, -49.7388, 158.371, 0.37 ) }
    dend_85 { pt3dadd( -249.375, -54.6862, 166.043, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -253.79, -61.8614, 172.018, 0.37 ) }
    dend_85 { pt3dadd( -258.317, -70.1488, 176.314, 0.37 ) }
    dend_85 { pt3dadd( -261.845, -78.7344, 180.956, 0.37 ) }
    dend_85 { pt3dadd( -265.321, -87.3131, 185.65, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -194.139, -44.5935, 109.489, 0.29 ) }
    dend_84 { pt3dadd( -201.767, -43.3538, 118.383, 0.37 ) }
    dend_84 { pt3dadd( -209.907, -41.6874, 126.737, 0.37 ) }
    dend_84 { pt3dadd( -218.786, -40.8088, 134.413, 0.37 ) }
    dend_84 { pt3dadd( -225.457, -39.0811, 143.987, 0.37 ) }
    dend_84 { pt3dadd( -231.26, -38.374, 154.223, 0.37 ) }
    dend_84 { pt3dadd( -237.824, -38.9584, 163.974, 0.37 ) }
    dend_84 { pt3dadd( -245.782, -37.4833, 172.536, 0.37 ) }
    dend_84 { pt3dadd( -254.696, -33.9815, 179.425, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -122.216, -32.5244, 45.7736, 0.59 ) }
    dend_82 { pt3dadd( -120.163, -30.9393, 46.4301, 0.59 ) }
    dend_82 { pt3dadd( -120.072, -30.8694, 46.4615, 0.59 ) }
    dend_82 { pt3dadd( -118.273, -29.3127, 47.0049, 0.29 ) }
    dend_82 { pt3dadd( -117.361, -28.3992, 47.1911, 0.29 ) }
    dend_82 { pt3dadd( -117.278, -28.3098, 47.2043, 0.29 ) }
    dend_82 { pt3dadd( -115.526, -26.2458, 47.3028, 0.29 ) }
    dend_82 { pt3dadd( -115.474, -26.1725, 47.2961, 0.29 ) }
    dend_82 { pt3dadd( -114.115, -24.0856, 46.9605, 0.29 ) }
    dend_82 { pt3dadd( -112.624, -21.7711, 46.3761, 0.29 ) }
    dend_82 { pt3dadd( -112.501, -21.586, 46.3195, 0.29 ) }
    dend_82 { pt3dadd( -111.164, -19.6833, 45.6721, 0.74 ) }
    dend_82 { pt3dadd( -109.999, -18.1313, 45.1382, 0.29 ) }
    dend_82 { pt3dadd( -109.65, -17.7142, 45.0337, 0.29 ) }
    dend_82 { pt3dadd( -107.831, -15.7391, 44.5887, 0.29 ) }
    dend_82 { pt3dadd( -106.94, -14.8558, 44.437, 0.29 ) }
    dend_82 { pt3dadd( -105.442, -13.4706, 44.2866, 0.29 ) }
    dend_82 { pt3dadd( -103.512, -11.8869, 44.3409, 0.29 ) }
    dend_82 { pt3dadd( -101.813, -10.6002, 44.5295, 0.88 ) }
    dend_82 { pt3dadd( -94.4334, 2.42616, 44.0117, 0.88 ) }
    dend_82 { pt3dadd( -88.7783, 16.208, 45.7391, 0.88 ) }
    dend_82 { pt3dadd( -82.7335, 29.9395, 46.027, 0.88 ) }
    dend_82 { pt3dadd( -75.5873, 43.1055, 45.6397, 0.88 ) }
    dend_82 { pt3dadd( -67.8994, 55.9211, 46.3378, 0.88 ) }
    dend_82 { pt3dadd( -61.3529, 69.4087, 46.5941, 0.88 ) }
    dend_82 { pt3dadd( -53.7667, 82.2758, 47.4567, 0.88 ) }
    dend_82 { pt3dadd( -44.5031, 93.8822, 48.7912, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -122.216, -32.5244, 45.7736, 0.59 ) }
    dend_75 { pt3dadd( -122.74, -31.1545, 46.1867, 0.59 ) }
    dend_75 { pt3dadd( -123.153, -29.9309, 46.5887, 0.59 ) }
    dend_75 { pt3dadd( -123.497, -28.7276, 47.0367, 0.37 ) }
    dend_75 { pt3dadd( -123.896, -27.1878, 47.6276, 0.29 ) }
    dend_75 { pt3dadd( -124.192, -25.7355, 48.2396, 0.29 ) }
    dend_75 { pt3dadd( -124.21, -25.6339, 48.2843, 0.29 ) }
    dend_75 { pt3dadd( -124.364, -24.3543, 48.8924, 0.29 ) }
    dend_75 { pt3dadd( -124.482, -23.232, 49.4583, 0.66 ) }
    dend_75 { pt3dadd( -124.543, -22.517, 49.7907, 0.81 ) }
    dend_75 { pt3dadd( -124.702, -20.899, 50.3998, 0.29 ) }
    dend_75 { pt3dadd( -124.714, -20.7935, 50.4373, 0.29 ) }
    dend_75 { pt3dadd( -124.896, -19.3682, 50.8466, 0.29 ) }
    dend_75 { pt3dadd( -124.911, -19.2717, 50.8663, 0.29 ) }
    dend_75 { pt3dadd( -125.137, -17.7037, 51.0409, 0.52 ) }
    dend_75 { pt3dadd( -125.322, -16.618, 51.0961, 0.74 ) }
    dend_75 { pt3dadd( -125.348, -16.5082, 51.0953, 0.74 ) }
    dend_75 { pt3dadd( -125.602, -15.5051, 51.1446, 0.74 ) }
    dend_75 { pt3dadd( -125.627, -15.4091, 51.1527, 0.74 ) }
    dend_75 { pt3dadd( -126.045, -14.0321, 51.3134, 0.29 ) }
    dend_75 { pt3dadd( -126.532, -12.6079, 51.5235, 0.29 ) }
    dend_75 { pt3dadd( -127.24, -10.6995, 51.833, 0.29 ) }
    dend_75 { pt3dadd( -127.827, -9.05, 52.0771, 0.29 ) }
    dend_75 { pt3dadd( -127.884, -8.86119, 52.1042, 0.29 ) }
    dend_75 { pt3dadd( -128.207, -7.28553, 52.2803, 0.29 ) }
    dend_75 { pt3dadd( -128.221, -7.18727, 52.2894, 0.29 ) }
    dend_75 { pt3dadd( -128.284, -5.58066, 52.3751, 0.29 ) }
    dend_75 { pt3dadd( -128.224, -3.14733, 52.4297, 0.29 ) }
    dend_75 { pt3dadd( -128.103, 0.0538367, 52.4056, 0.29 ) }
    dend_75 { pt3dadd( -127.96, 2.97908, 52.3663, 0.29 ) }
    dend_75 { pt3dadd( -127.951, 3.175, 52.3672, 0.29 ) }
    dend_75 { pt3dadd( -127.86, 6.08925, 52.4223, 0.29 ) }
    dend_75 { pt3dadd( -127.856, 6.29868, 52.4285, 0.29 ) }
    dend_75 { pt3dadd( -127.905, 9.68433, 52.5718, 0.29 ) }
    dend_75 { pt3dadd( -127.911, 9.797, 52.5774, 0.29 ) }
    dend_75 { pt3dadd( -128.248, 12.8162, 52.8044, 0.29 ) }
    dend_75 { pt3dadd( -128.267, 12.9269, 52.8144, 0.29 ) }
    dend_75 { pt3dadd( -128.878, 15.1768, 53.0157, 0.29 ) }
    dend_75 { pt3dadd( -129.053, 15.7541, 53.0521, 0.74 ) }
    dend_75 { pt3dadd( -129.088, 15.8612, 53.0572, 0.74 ) }
    dend_75 { pt3dadd( -129.341, 16.5783, 53.0641, 0.59 ) }
    dend_75 { pt3dadd( -130.105, 18.3591, 52.8899, 0.29 ) }
    dend_75 { pt3dadd( -130.643, 19.4211, 52.7757, 0.88 ) }
    dend_75 { pt3dadd( -131.106, 20.0491, 52.6917, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -9.79979, -229.536, -91.5708, 0.52 ) }
    dend_60 { pt3dadd( -10.3055, -230.401, -91.2759, 0.52 ) }
    dend_60 { pt3dadd( -10.6881, -231.096, -91.055, 0.37 ) }
    dend_60 { pt3dadd( -11.027, -231.773, -90.8246, 0.29 ) }
    dend_60 { pt3dadd( -11.2933, -232.288, -90.6359, 0.66 ) }
    dend_60 { pt3dadd( -11.5287, -232.735, -90.4676, 0.66 ) }
    dend_60 { pt3dadd( -11.5619, -232.797, -90.4442, 0.66 ) }
    dend_60 { pt3dadd( -11.7792, -233.217, -90.2872, 0.59 ) }
    dend_60 { pt3dadd( -12.1839, -233.951, -90.0187, 0.29 ) }
    dend_60 { pt3dadd( -12.5994, -234.721, -89.7504, 0.29 ) }
    dend_60 { pt3dadd( -12.7646, -235.045, -89.6469, 0.66 ) }
    dend_60 { pt3dadd( -13.0183, -235.581, -89.4932, 0.96 ) }
    dend_60 { pt3dadd( -13.2011, -236.035, -89.3818, 1.18 ) }
    dend_60 { pt3dadd( -13.5391, -236.989, -89.1849, 0.29 ) }
    dend_60 { pt3dadd( -13.7359, -237.617, -89.0853, 0.29 ) }
    dend_60 { pt3dadd( -13.8432, -237.992, -89.0268, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( -13.8814, -238.12, -88.9882, 0.52 ) }
    dend_60 { pt3dadd( -14.0472, -238.588, -88.7654, 0.22 ) }
    dend_60 { pt3dadd( -14.2237, -238.965, -88.508, 0.44 ) }
    dend_60 { pt3dadd( -14.3939, -239.274, -88.2066, 0.66 ) }
    dend_60 { pt3dadd( -14.6366, -239.65, -87.8002, 0.66 ) }
    dend_60 { pt3dadd( -15.2536, -240.53, -86.8393, 0.29 ) }
    dend_60 { pt3dadd( -15.4341, -240.787, -86.572, 0.96 ) }
    dend_60 { pt3dadd( -15.6169, -241.069, -86.3055, 1.25 ) }
    dend_60 { pt3dadd( -16.1824, -242.11, -85.4487, 0.52 ) }
    dend_60 { pt3dadd( -16.5007, -242.803, -84.9741, 0.52 ) }
    dend_60 { pt3dadd( -16.7511, -243.402, -84.6378, 0.29 ) }
    dend_60 { pt3dadd( -16.9856, -243.934, -84.4047, 0.37 ) }
    dend_60 { pt3dadd( -17.2537, -244.489, -84.1792, 0.44 ) }
    dend_60 { pt3dadd( -17.4808, -244.855, -84.035, 0.44 ) }
    dend_60 { pt3dadd( -17.9019, -245.372, -83.8508, 0.22 ) }
    dend_60 { pt3dadd( -18.1745, -245.627, -83.7371, 0.37 ) }
    dend_60 { pt3dadd( -18.6526, -245.992, -83.4963, 0.59 ) }
    dend_60 { pt3dadd( -19.2974, -246.414, -83.1362, 1.18 ) }
    dend_60 { pt3dadd( -19.8976, -246.786, -82.74, 0.74 ) }
    dend_60 { pt3dadd( -19.9497, -246.818, -82.7009, 0.74 ) }
    dend_60 { pt3dadd( -20.7581, -247.359, -82.0111, 0.37 ) }
    dend_60 { pt3dadd( -21.4902, -247.937, -81.2928, 0.29 ) }
    dend_60 { pt3dadd( -21.6531, -248.083, -81.0887, 0.59 ) }
    dend_60 { pt3dadd( -21.9997, -248.406, -80.503, 0.74 ) }
    dend_60 { pt3dadd( -22.0326, -248.437, -80.4264, 0.74 ) }
    dend_60 { pt3dadd( -22.1649, -248.567, -79.9551, 0.74 ) }
    dend_60 { pt3dadd( -22.176, -248.575, -79.9042, 0.74 ) }
    dend_60 { pt3dadd( -22.3854, -248.668, -78.9345, 0.29 ) }
    dend_60 { pt3dadd( -22.6276, -248.739, -77.7968, 0.59 ) }
    dend_60 { pt3dadd( -22.8272, -248.774, -76.8238, 0.96 ) }
    dend_60 { pt3dadd( -23.1612, -248.819, -75.1156, 0.59 ) }
    dend_60 { pt3dadd( -23.2904, -248.827, -74.4016, 0.29 ) }
    dend_60 { pt3dadd( -23.3014, -248.829, -74.3386, 0.29 ) }
    dend_60 { pt3dadd( -23.4852, -248.882, -73.1637, 0.88 ) }
    dend_60 { pt3dadd( -23.6247, -248.927, -72.086, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -9.79979, -229.536, -91.5708, 0.52 ) }
    dend_57 { pt3dadd( -10.1702, -230.939, -92.7216, 0.52 ) }
    dend_57 { pt3dadd( -10.187, -231.015, -92.7752, 0.52 ) }
    dend_57 { pt3dadd( -10.4348, -232.148, -93.5092, 0.66 ) }
    dend_57 { pt3dadd( -10.9382, -234.64, -94.9475, 0.44 ) }
    dend_57 { pt3dadd( -11.3394, -236.5, -95.9485, 0.37 ) }
    dend_57 { pt3dadd( -11.5629, -237.524, -96.4404, 0.66 ) }
    dend_57 { pt3dadd( -11.8075, -238.681, -96.8816, 0.88 ) }
    dend_57 { pt3dadd( -12.1077, -239.993, -97.3173, 0.88 ) }
    dend_57 { pt3dadd( -12.3868, -241.17, -97.6407, 0.88 ) }
    dend_57 { pt3dadd( -12.742, -242.778, -98.0495, 0.59 ) }
    dend_57 { pt3dadd( -13.0381, -244.242, -98.4854, 0.37 ) }
    dend_57 { pt3dadd( -13.3301, -245.768, -99.0476, 0.37 ) }
    dend_57 { pt3dadd( -13.5951, -247.399, -99.788, 0.74 ) }
    dend_57 { pt3dadd( -13.6737, -248.093, -100.141, 1.11 ) }
    dend_57 { pt3dadd( -13.9297, -250.523, -101.54, 0.74 ) }
    dend_57 { pt3dadd( -14.0405, -251.67, -102.241, 0.44 ) }
    dend_57 { pt3dadd( -14.0488, -251.75, -102.29, 0.44 ) }
    dend_57 { pt3dadd( -14.2311, -253.462, -103.268, 1.03 ) }
    dend_57 { pt3dadd( -14.3163, -254.379, -103.703, 1.33 ) }
    dend_57 { pt3dadd( -14.5376, -256.445, -104.434, 0.66 ) }
    dend_57 { pt3dadd( -14.7259, -258.322, -104.836, 0.66 ) }
    dend_57 { pt3dadd( -14.9179, -260.185, -105.121, 0.88 ) }
    dend_57 { pt3dadd( -14.9234, -260.282, -105.132, 0.88 ) }
    dend_57 { pt3dadd( -14.9535, -261.725, -105.253, 1.11 ) }
    dend_57 { pt3dadd( -14.9164, -263.879, -105.401, 1.03 ) }
    dend_57 { pt3dadd( -14.797, -265.477, -105.457, 0.52 ) }
    dend_57 { pt3dadd( -14.7942, -265.574, -105.466, 0.52 ) }
    dend_57 { pt3dadd( -14.8612, -267.222, -105.72, 0.88 ) }
    dend_57 { pt3dadd( -14.9587, -268.285, -105.918, 0.96 ) }
    dend_57 { pt3dadd( -15.1363, -269.235, -106.171, 0.96 ) }
    dend_57 { pt3dadd( -15.4469, -270.218, -106.513, 0.66 ) }
    dend_57 { pt3dadd( -16.5993, -273.005, -107.51, 0.44 ) }
    dend_57 { pt3dadd( -17.0611, -274.027, -107.874, 0.96 ) }
    dend_57 { pt3dadd( -17.5439, -274.964, -108.204, 1.25 ) }
    dend_57 { pt3dadd( -18.5758, -276.887, -108.896, 1.11 ) }
    dend_57 { pt3dadd( -19.5442, -278.557, -109.563, 0.74 ) }
    dend_57 { pt3dadd( -20.0939, -279.43, -109.931, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -131.106, 20.0491, 52.6917, 0.29 ) }
    dend_81 { pt3dadd( -132.585, 20.2703, 52.7761, 0.29 ) }
    dend_81 { pt3dadd( -132.673, 20.2798, 52.7834, 0.29 ) }
    dend_81 { pt3dadd( -133.782, 20.395, 52.7264, 0.29 ) }
    dend_81 { pt3dadd( -133.87, 20.4041, 52.7178, 0.29 ) }
    dend_81 { pt3dadd( -134.88, 20.5631, 52.6107, 0.66 ) }
    dend_81 { pt3dadd( -135.651, 20.714, 52.5281, 0.81 ) }
    dend_81 { pt3dadd( -135.717, 20.7281, 52.5211, 0.81 ) }
    dend_81 { pt3dadd( -137.716, 21.2276, 52.4213, 0.29 ) }
    dend_81 { pt3dadd( -137.897, 21.2787, 52.4185, 0.29 ) }
    dend_81 { pt3dadd( -139.343, 21.7441, 52.4538, 0.29 ) }
    dend_81 { pt3dadd( -141.001, 22.3603, 52.5542, 0.29 ) }
    dend_81 { pt3dadd( -141.073, 22.3901, 52.5628, 0.29 ) }
    dend_81 { pt3dadd( -142.553, 23.0267, 52.8451, 0.44 ) }
    dend_81 { pt3dadd( -142.621, 23.0604, 52.8657, 0.44 ) }
    dend_81 { pt3dadd( -143.166, 23.349, 53.0295, 0.44 ) }
    dend_81 { pt3dadd( -143.23, 23.386, 53.0494, 0.44 ) }
    dend_81 { pt3dadd( -144.371, 24.1392, 53.3752, 0.29 ) }
    dend_81 { pt3dadd( -144.508, 24.2341, 53.3984, 0.29 ) }
    dend_81 { pt3dadd( -145.422, 24.8974, 53.4405, 0.29 ) }
    dend_81 { pt3dadd( -145.874, 25.237, 53.4552, 0.59 ) }
    dend_81 { pt3dadd( -146.007, 25.3412, 53.4576, 0.59 ) }
    dend_81 { pt3dadd( -146.408, 25.648, 53.465, 0.59 ) }
    dend_81 { pt3dadd( -147.394, 26.3876, 53.4803, 0.37 ) }
    dend_81 { pt3dadd( -147.54, 26.4901, 53.4846, 0.37 ) }
    dend_81 { pt3dadd( -148.327, 27.0327, 53.4493, 0.37 ) }
    dend_81 { pt3dadd( -148.391, 27.078, 53.4431, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -149.287, 27.6714, 53.3417, 0.37 ) }
    dend_81 { pt3dadd( -149.43, 27.7617, 53.3231, 0.37 ) }
    dend_81 { pt3dadd( -150.369, 28.3007, 53.2334, 0.37 ) }
    dend_81 { pt3dadd( -151.614, 28.9467, 53.1573, 0.22 ) }
    dend_81 { pt3dadd( -151.775, 29.0188, 53.1571, 0.22 ) }
    dend_81 { pt3dadd( -152.666, 29.3705, 53.2092, 0.22 ) }
    dend_81 { pt3dadd( -152.739, 29.3954, 53.2195, 0.22 ) }
    dend_81 { pt3dadd( -153.674, 29.5936, 53.6025, 0.81 ) }
    dend_81 { pt3dadd( -153.982, 29.6318, 53.7867, 0.81 ) }
    dend_81 { pt3dadd( -154.827, 29.6706, 54.3564, 0.22 ) }
    dend_81 { pt3dadd( -154.892, 29.6678, 54.4001, 0.22 ) }
    dend_81 { pt3dadd( -155.606, 29.5861, 54.922, 0.22 ) }
    dend_81 { pt3dadd( -157.604, 29.2843, 56.35, 0.22 ) }
    dend_81 { pt3dadd( -157.74, 29.2612, 56.4446, 0.22 ) }
    dend_81 { pt3dadd( -158.71, 29.0922, 57.1093, 0.22 ) }
    dend_81 { pt3dadd( -159.639, 28.9241, 57.7315, 0.22 ) }
    dend_81 { pt3dadd( -161.063, 28.6865, 58.6426, 0.22 ) }
    dend_81 { pt3dadd( -162.091, 28.5376, 59.2582, 0.22 ) }
    dend_81 { pt3dadd( -162.17, 28.5321, 59.2976, 0.22 ) }
    dend_81 { pt3dadd( -163.383, 28.6293, 59.8297, 0.52 ) }
    dend_81 { pt3dadd( -163.749, 28.7526, 59.9579, 0.81 ) }
    dend_81 { pt3dadd( -163.889, 28.8339, 59.9909, 0.81 ) }
    dend_81 { pt3dadd( -164.228, 29.0794, 60.0227, 0.81 ) }
    dend_81 { pt3dadd( -164.3, 29.1325, 60.0185, 0.81 ) }
    dend_81 { pt3dadd( -165.406, 29.8824, 59.8499, 0.37 ) }
    dend_81 { pt3dadd( -166.026, 30.2966, 59.6995, 0.59 ) }
    dend_81 { pt3dadd( -166.09, 30.3386, 59.6812, 0.59 ) }
    dend_81 { pt3dadd( -166.894, 30.8806, 59.4355, 0.44 ) }
    dend_81 { pt3dadd( -168.252, 31.7396, 58.8483, 0.29 ) }
    dend_81 { pt3dadd( -168.384, 31.8195, 58.7795, 0.29 ) }
    dend_81 { pt3dadd( -169.152, 32.1887, 58.2425, 0.29 ) }
    dend_81 { pt3dadd( -169.203, 32.2103, 58.2024, 0.29 ) }
    dend_81 { pt3dadd( -169.984, 32.5078, 57.5787, 0.29 ) }
    dend_81 { pt3dadd( -171.305, 32.9032, 56.2897, 0.29 ) }
    dend_81 { pt3dadd( -171.35, 32.9134, 56.2438, 0.29 ) }
    dend_81 { pt3dadd( -172.934, 33.1291, 54.619, 0.29 ) }
    dend_81 { pt3dadd( -172.98, 33.1319, 54.5738, 0.29 ) }
    dend_81 { pt3dadd( -173.459, 33.1524, 54.1394, 0.66 ) }
    dend_81 { pt3dadd( -175.678, 33.1594, 52.2823, 0.37 ) }
    dend_81 { pt3dadd( -175.821, 33.1588, 52.18, 0.37 ) }
    dend_81 { pt3dadd( -176.628, 33.1447, 51.6819, 0.29 ) }
    dend_81 { pt3dadd( -177.433, 33.1438, 51.3218, 0.15 ) }
    dend_81 { pt3dadd( -177.928, 33.147, 51.1412, 0.74 ) }
    dend_81 { pt3dadd( -178.156, 33.1498, 51.0937, 0.74 ) }
    dend_81 { pt3dadd( -179.655, 33.1866, 51.052, 0.37 ) }
    dend_81 { pt3dadd( -180.367, 33.2358, 51.0337, 0.29 ) }
    dend_81 { pt3dadd( -181.322, 33.3714, 51.0469, 0.29 ) }
    dend_81 { pt3dadd( -181.431, 33.3913, 51.0541, 0.29 ) }
    dend_81 { pt3dadd( -182.788, 33.6898, 51.2448, 0.29 ) }
    dend_81 { pt3dadd( -182.946, 33.7344, 51.2787, 0.29 ) }
    dend_81 { pt3dadd( -183.812, 34.0374, 51.5356, 0.29 ) }
    dend_81 { pt3dadd( -184.651, 34.3502, 51.777, 0.29 ) }
    dend_81 { pt3dadd( -184.724, 34.3741, 51.7935, 0.29 ) }
    dend_81 { pt3dadd( -185.868, 34.7191, 51.9891, 0.29 ) }
    dend_81 { pt3dadd( -186.981, 35.0081, 52.0812, 0.29 ) }
    dend_81 { pt3dadd( -187.198, 35.054, 52.0889, 0.29 ) }
    dend_81 { pt3dadd( -188.227, 35.2591, 52.0156, 0.29 ) }
    dend_81 { pt3dadd( -189.381, 35.5376, 51.841, 0.52 ) }
    dend_81 { pt3dadd( -189.967, 35.7169, 51.7272, 0.66 ) }
    dend_81 { pt3dadd( -191.318, 36.2156, 51.401, 0.29 ) }
    dend_81 { pt3dadd( -192.823, 36.8406, 50.9995, 1.11 ) }
    dend_81 { pt3dadd( -194.352, 37.4923, 50.5155, 0.29 ) }
    dend_81 { pt3dadd( -195.175, 37.8601, 50.2214, 0.29 ) }
    dend_81 { pt3dadd( -195.882, 38.1911, 49.969, 0.74 ) }
    dend_81 { pt3dadd( -196.035, 38.262, 49.911, 0.74 ) }
    dend_81 { pt3dadd( -196.463, 38.4621, 49.7396, 0.74 ) }
    dend_81 { pt3dadd( -198.67, 39.3739, 48.8157, 0.29 ) }
    dend_81 { pt3dadd( -198.774, 39.4096, 48.7769, 0.29 ) }
    dend_81 { pt3dadd( -199.574, 39.6564, 48.479, 0.29 ) }
    dend_81 { pt3dadd( -199.633, 39.6753, 48.4569, 0.29 ) }
    dend_81 { pt3dadd( -200.638, 40.0215, 48.0916, 0.59 ) }
    dend_81 { pt3dadd( -202.527, 40.7835, 47.4503, 0.29 ) }
    dend_81 { pt3dadd( -202.604, 40.8254, 47.4299, 0.29 ) }
    dend_81 { pt3dadd( -203.156, 41.1913, 47.2851, 0.29 ) }
    dend_81 { pt3dadd( -203.449, 41.4585, 47.2017, 0.59 ) }
    dend_81 { pt3dadd( -203.508, 41.5246, 47.1856, 0.59 ) }
    dend_81 { pt3dadd( -203.96, 42.1295, 47.0711, 0.59 ) }
    dend_81 { pt3dadd( -204.389, 42.7814, 46.9748, 0.29 ) }
    dend_81 { pt3dadd( -204.779, 43.3005, 46.8933, 0.29 ) }
    dend_81 { pt3dadd( -206.033, 44.7678, 46.6532, 0.29 ) }
    dend_81 { pt3dadd( -206.082, 44.8159, 46.6461, 0.29 ) }
    dend_81 { pt3dadd( -206.789, 45.4294, 46.5642, 0.29 ) }
    dend_81 { pt3dadd( -207.118, 45.6692, 46.5379, 0.29 ) }
    dend_81 { pt3dadd( -208.051, 46.2108, 46.5043, 0.52 ) }
    dend_81 { pt3dadd( -208.464, 46.4022, 46.516, 0.59 ) }
    dend_81 { pt3dadd( -209.677, 46.8597, 46.6343, 0.22 ) }
    dend_81 { pt3dadd( -210.008, 46.9833, 46.6532, 0.22 ) }
    dend_81 { pt3dadd( -210.683, 47.2744, 46.6681, 0.22 ) }
    dend_81 { pt3dadd( -211.323, 47.6093, 46.6541, 0.81 ) }
    dend_81 { pt3dadd( -211.763, 47.8695, 46.6257, 1.03 ) }
    dend_81 { pt3dadd( -212.476, 48.2981, 46.5601, 0.52 ) }
    dend_81 { pt3dadd( -213.789, 49.074, 46.4163, 0.29 ) }
    dend_81 { pt3dadd( -215.298, 49.9364, 46.2489, 0.22 ) }
    dend_81 { pt3dadd( -216.748, 50.8098, 46.0607, 0.22 ) }
    dend_81 { pt3dadd( -216.92, 50.9207, 46.0354, 0.22 ) }
    dend_81 { pt3dadd( -217.64, 51.3985, 45.9257, 0.74 ) }
    dend_81 { pt3dadd( -218.03, 51.6543, 45.8737, 0.74 ) }
    dend_81 { pt3dadd( -218.507, 51.9491, 45.8644, 0.74 ) }
    dend_81 { pt3dadd( -228.599, 55.3773, 44.0438, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -131.106, 20.0491, 52.6917, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -131.069, 20.9863, 52.4643, 0.29 ) }
    dend_76 { pt3dadd( -130.987, 22.6182, 51.999, 0.29 ) }
    dend_76 { pt3dadd( -130.984, 22.6865, 51.9787, 0.29 ) }
    dend_76 { pt3dadd( -130.917, 24.2166, 51.5216, 0.29 ) }
    dend_76 { pt3dadd( -130.916, 24.2932, 51.4993, 0.29 ) }
    dend_76 { pt3dadd( -130.927, 26.5729, 50.8557, 0.52 ) }
    dend_76 { pt3dadd( -130.979, 27.8545, 50.5141, 0.52 ) }
    dend_76 { pt3dadd( -131.054, 28.7765, 50.2729, 0.52 ) }
    dend_76 { pt3dadd( -131.087, 29.035, 50.2036, 0.52 ) }
    dend_76 { pt3dadd( -131.278, 30.1654, 49.9961, 0.52 ) }
    dend_76 { pt3dadd( -131.472, 31.0365, 49.9156, 0.81 ) }
    dend_76 { pt3dadd( -131.527, 31.2025, 49.9242, 0.81 ) }
    dend_76 { pt3dadd( -131.803, 31.906, 50.0445, 0.66 ) }
    dend_76 { pt3dadd( -132.113, 32.581, 50.1967, 0.37 ) }
    dend_76 { pt3dadd( -133.108, 34.6167, 50.7188, 0.37 ) }
    dend_76 { pt3dadd( -133.146, 34.6873, 50.7354, 0.37 ) }
    dend_76 { pt3dadd( -133.547, 35.384, 50.872, 0.52 ) }
    dend_76 { pt3dadd( -133.607, 35.4825, 50.8821, 0.52 ) }
    dend_76 { pt3dadd( -134.372, 36.6953, 50.9124, 0.44 ) }
    dend_76 { pt3dadd( -134.462, 36.8322, 50.9039, 0.44 ) }
    dend_76 { pt3dadd( -135.131, 37.7722, 50.7238, 0.44 ) }
    dend_76 { pt3dadd( -135.325, 38.0617, 50.6681, 0.44 ) }
    dend_76 { pt3dadd( -136.214, 39.551, 50.3839, 0.44 ) }
    dend_76 { pt3dadd( -136.253, 39.6219, 50.3708, 0.44 ) }
    dend_76 { pt3dadd( -136.62, 40.3628, 50.2414, 0.52 ) }
    dend_76 { pt3dadd( -136.689, 40.5203, 50.2097, 0.52 ) }
    dend_76 { pt3dadd( -137.084, 41.4963, 50.0062, 0.37 ) }
    dend_76 { pt3dadd( -137.497, 42.6332, 49.7447, 0.74 ) }
    dend_76 { pt3dadd( -137.523, 42.7092, 49.7272, 0.74 ) }
    dend_76 { pt3dadd( -137.699, 43.2373, 49.6061, 0.74 ) }
    dend_76 { pt3dadd( -138.493, 45.7658, 49.111, 0.52 ) }
    dend_76 { pt3dadd( -138.516, 45.8435, 49.0976, 0.52 ) }
    dend_76 { pt3dadd( -139.113, 47.9662, 48.7899, 0.52 ) }
    dend_76 { pt3dadd( -139.798, 50.498, 48.4813, 0.52 ) }
    dend_76 { pt3dadd( -139.825, 50.6006, 48.4708, 0.52 ) }
    dend_76 { pt3dadd( -140.247, 52.2601, 48.3409, 0.88 ) }
    dend_76 { pt3dadd( -140.335, 52.6217, 48.3251, 0.88 ) }
    dend_76 { pt3dadd( -140.818, 54.6505, 48.2328, 0.52 ) }
    dend_76 { pt3dadd( -141.114, 55.9415, 48.1703, 0.52 ) }
    dend_76 { pt3dadd( -141.163, 56.1833, 48.1658, 0.52 ) }
    dend_76 { pt3dadd( -141.418, 57.3829, 48.1125, 0.52 ) }
    dend_76 { pt3dadd( -141.501, 57.7115, 48.0859, 0.52 ) }
    dend_76 { pt3dadd( -141.74, 58.522, 48.021, 0.59 ) }
    dend_76 { pt3dadd( -142.041, 59.4552, 47.9399, 0.37 ) }
    dend_76 { pt3dadd( -142.543, 60.9496, 47.803, 0.44 ) }
    dend_76 { pt3dadd( -143.087, 62.566, 47.6386, 0.22 ) }
    dend_76 { pt3dadd( -143.583, 64.0157, 47.4783, 0.22 ) }
    dend_76 { pt3dadd( -143.79, 64.6342, 47.417, 0.37 ) }
    dend_76 { pt3dadd( -144.27, 66.0745, 47.282, 0.22 ) }
    dend_76 { pt3dadd( -144.317, 66.22, 47.2682, 0.22 ) }
    dend_76 { pt3dadd( -144.683, 67.4529, 47.2044, 0.22 ) }
    dend_76 { pt3dadd( -144.702, 67.5328, 47.2076, 0.22 ) }
    dend_76 { pt3dadd( -144.948, 68.8459, 47.2845, 0.22 ) }
    dend_76 { pt3dadd( -144.96, 68.9161, 47.2884, 0.22 ) }
    dend_76 { pt3dadd( -145.249, 70.6376, 47.3945, 0.22 ) }
    dend_76 { pt3dadd( -145.562, 72.5695, 47.4922, 0.66 ) }
    dend_76 { pt3dadd( -145.681, 73.3073, 47.5207, 0.96 ) }
    dend_76 { pt3dadd( -145.893, 74.6698, 47.5843, 0.22 ) }
    dend_76 { pt3dadd( -146.077, 75.8406, 47.6379, 0.22 ) }
    dend_76 { pt3dadd( -146.091, 75.9324, 47.6431, 0.22 ) }
    dend_76 { pt3dadd( -146.198, 76.6154, 47.6901, 0.59 ) }
    dend_76 { pt3dadd( -146.323, 77.1939, 47.6918, 0.88 ) }
    dend_76 { pt3dadd( -146.665, 78.5414, 47.6615, 0.44 ) }
    dend_76 { pt3dadd( -146.894, 79.3394, 47.6195, 0.29 ) }
    dend_76 { pt3dadd( -146.966, 79.5828, 47.5959, 0.29 ) }
    dend_76 { pt3dadd( -147.131, 80.1507, 47.5167, 0.29 ) }
    dend_76 { pt3dadd( -147.509, 81.5517, 47.1738, 0.74 ) }
    dend_76 { pt3dadd( -147.672, 82.2107, 46.9499, 0.29 ) }
    dend_76 { pt3dadd( -147.837, 82.88, 46.6749, 0.44 ) }
    dend_76 { pt3dadd( -147.961, 83.4219, 46.4529, 0.59 ) }
    dend_76 { pt3dadd( -147.978, 83.4971, 46.4243, 0.59 ) }
    dend_76 { pt3dadd( -148.322, 85.1492, 45.8455, 0.22 ) }
    dend_76 { pt3dadd( -148.373, 85.397, 45.772, 0.22 ) }
    dend_76 { pt3dadd( -148.667, 86.8287, 45.4629, 0.22 ) }
    dend_76 { pt3dadd( -148.681, 86.9066, 45.4517, 0.22 ) }
    dend_76 { pt3dadd( -148.817, 87.7964, 45.3795, 0.44 ) }
    dend_76 { pt3dadd( -148.829, 87.8888, 45.3778, 0.44 ) }
    dend_76 { pt3dadd( -148.873, 88.3839, 45.4141, 0.44 ) }
    dend_76 { pt3dadd( -148.942, 90.0135, 45.5733, 0.29 ) }
    dend_76 { pt3dadd( -148.921, 90.6237, 45.6624, 0.44 ) }
    dend_76 { pt3dadd( -148.911, 90.7959, 45.6909, 0.44 ) }
    dend_76 { pt3dadd( -148.83, 91.5949, 45.8553, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -20.0939, -279.43, -109.931, 0.29 ) }
    dend_59 { pt3dadd( -20.4851, -279.653, -109.514, 0.29 ) }
    dend_59 { pt3dadd( -20.9497, -280.03, -109.04, 0.29 ) }
    dend_59 { pt3dadd( -21.0335, -280.107, -108.956, 0.59 ) }
    dend_59 { pt3dadd( -21.3306, -280.393, -108.658, 0.66 ) }
    dend_59 { pt3dadd( -21.3954, -280.449, -108.606, 0.66 ) }
    dend_59 { pt3dadd( -21.744, -280.727, -108.346, 0.66 ) }
    dend_59 { pt3dadd( -22.3645, -281.25, -107.911, 0.22 ) }
    dend_59 { pt3dadd( -22.619, -281.475, -107.737, 0.66 ) }
    dend_59 { pt3dadd( -22.92, -281.739, -107.535, 0.66 ) }
    dend_59 { pt3dadd( -23.7356, -282.441, -107.006, 0.22 ) }
    dend_59 { pt3dadd( -24.214, -282.841, -106.702, 0.22 ) }
    dend_59 { pt3dadd( -24.8929, -283.383, -106.287, 0.22 ) }
    dend_59 { pt3dadd( -25.3734, -283.737, -105.995, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -20.0939, -279.43, -109.931, 0.29 ) }
    dend_58 { pt3dadd( -19.9722, -281.146, -110.464, 0.29 ) }
    dend_58 { pt3dadd( -19.8756, -282.189, -110.865, 0.29 ) }
    dend_58 { pt3dadd( -19.8445, -282.708, -111.05, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( -19.8393, -283.169, -111.224, 0.88 ) }
    dend_58 { pt3dadd( -19.841, -283.283, -111.268, 0.88 ) }
    dend_58 { pt3dadd( -19.8699, -284.093, -111.551, 0.88 ) }
    dend_58 { pt3dadd( -19.8537, -285.496, -111.99, 0.22 ) }
    dend_58 { pt3dadd( -19.8612, -286.299, -112.237, 0.22 ) }
    dend_58 { pt3dadd( -19.8944, -287.225, -112.539, 0.88 ) }
    dend_58 { pt3dadd( -19.8942, -287.301, -112.565, 0.88 ) }
    dend_58 { pt3dadd( -19.8493, -288.253, -112.905, 0.74 ) }
    dend_58 { pt3dadd( -19.683, -289.414, -113.348, 0.37 ) }
    dend_58 { pt3dadd( -19.6581, -289.483, -113.379, 0.37 ) }
    dend_58 { pt3dadd( -18.7739, -290.9, -114.043, 0.29 ) }
    dend_58 { pt3dadd( -18.2508, -291.537, -114.346, 0.59 ) }
    dend_58 { pt3dadd( -18.0902, -291.706, -114.431, 0.59 ) }
    dend_58 { pt3dadd( -17.2841, -292.445, -114.836, 0.88 ) }
    dend_58 { pt3dadd( -15.9733, -293.441, -115.261, 0.74 ) }
    dend_58 { pt3dadd( -14.3504, -294.536, -115.63, 0.29 ) }
    dend_58 { pt3dadd( -13.4598, -295.085, -115.778, 0.74 ) }
    dend_58 { pt3dadd( -13.3933, -295.126, -115.787, 0.74 ) }
    dend_58 { pt3dadd( -12.8396, -295.456, -115.845, 0.74 ) }
    dend_58 { pt3dadd( -10.258, -296.864, -115.93, 0.44 ) }
    dend_58 { pt3dadd( -9.37318, -297.306, -115.872, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -148.83, 91.5949, 45.8553, 0.29 ) }
    dend_78 { pt3dadd( -147.046, 90.7019, 46.0896, 0.29 ) }
    dend_78 { pt3dadd( -146.842, 90.5919, 46.1057, 0.29 ) }
    dend_78 { pt3dadd( -146.211, 90.2467, 46.1414, 0.29 ) }
    dend_78 { pt3dadd( -146.11, 90.1911, 46.1472, 0.29 ) }
    dend_78 { pt3dadd( -144.655, 89.3946, 46.2296, 0.29 ) }
    dend_78 { pt3dadd( -144.024, 89.0492, 46.2653, 0.81 ) }
    dend_78 { pt3dadd( -143.303, 88.6723, 46.2136, 1.03 ) }
    dend_78 { pt3dadd( -143.204, 88.6135, 46.2058, 1.03 ) }
    dend_78 { pt3dadd( -130.278, 79.3882, 44.3864, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -148.83, 91.5949, 45.8553, 0.44 ) }
    dend_77 { pt3dadd( -149.105, 93.0789, 45.7668, 0.44 ) }
    dend_77 { pt3dadd( -149.4, 94.7389, 45.6555, 0.37 ) }
    dend_77 { pt3dadd( -149.888, 97.7908, 45.5422, 0.29 ) }
    dend_77 { pt3dadd( -150.342, 100.506, 45.4936, 0.29 ) }
    dend_77 { pt3dadd( -150.533, 101.731, 45.478, 0.74 ) }
    dend_77 { pt3dadd( -150.623, 102.331, 45.4716, 0.74 ) }
    dend_77 { pt3dadd( -150.718, 103.104, 45.4533, 0.44 ) }
    dend_77 { pt3dadd( -150.859, 104.888, 45.42, 0.37 ) }
    dend_77 { pt3dadd( -150.922, 106.758, 45.3874, 0.29 ) }
    dend_77 { pt3dadd( -150.956, 108.634, 45.3516, 0.29 ) }
    dend_77 { pt3dadd( -150.954, 108.823, 45.3507, 0.29 ) }
    dend_77 { pt3dadd( -150.91, 111.421, 45.355, 0.29 ) }
    dend_77 { pt3dadd( -150.895, 111.914, 45.3535, 0.29 ) }
    dend_77 { pt3dadd( -150.838, 113.519, 45.3201, 0.29 ) }
    dend_77 { pt3dadd( -150.834, 113.6, 45.3207, 0.29 ) }
    dend_77 { pt3dadd( -150.883, 115.139, 45.393, 0.29 ) }
    dend_77 { pt3dadd( -151.031, 115.959, 45.4404, 0.44 ) }
    dend_77 { pt3dadd( -151.084, 116.125, 45.4524, 0.44 ) }
    dend_77 { pt3dadd( -151.318, 116.715, 45.4853, 0.29 ) }
    dend_77 { pt3dadd( -151.362, 116.813, 45.4886, 0.29 ) }
    dend_77 { pt3dadd( -152.08, 118.324, 45.4339, 0.29 ) }
    dend_77 { pt3dadd( -153.337, 120.87, 45.1881, 0.29 ) }
    dend_77 { pt3dadd( -153.478, 121.166, 45.155, 0.29 ) }
    dend_77 { pt3dadd( -153.898, 122.08, 45.0437, 0.74 ) }
    dend_77 { pt3dadd( -154.233, 122.841, 44.9477, 0.88 ) }
    dend_77 { pt3dadd( -154.89, 124.368, 44.7501, 0.52 ) }
    dend_77 { pt3dadd( -155.477, 125.751, 44.5691, 0.37 ) }
    dend_77 { pt3dadd( -156.3, 127.667, 44.3534, 0.29 ) }
    dend_77 { pt3dadd( -156.431, 127.968, 44.3262, 0.29 ) }
    dend_77 { pt3dadd( -157.496, 130.432, 44.1603, 0.29 ) }
    dend_77 { pt3dadd( -157.585, 130.639, 44.1529, 0.29 ) }
    dend_77 { pt3dadd( -158.307, 132.354, 44.1735, 0.29 ) }
    dend_77 { pt3dadd( -158.589, 133.018, 44.2147, 0.52 ) }
    dend_77 { pt3dadd( -158.818, 133.542, 44.2827, 0.66 ) }
    dend_77 { pt3dadd( -158.888, 133.702, 44.3129, 0.66 ) }
    dend_77 { pt3dadd( -159.147, 134.287, 44.4843, 0.66 ) }
    dend_77 { pt3dadd( -159.195, 134.388, 44.514, 0.66 ) }
    dend_77 { pt3dadd( -159.718, 135.393, 44.7739, 0.29 ) }
    dend_77 { pt3dadd( -159.892, 135.703, 44.848, 0.22 ) }
    dend_77 { pt3dadd( -160.229, 136.279, 44.9907, 0.52 ) }
    dend_77 { pt3dadd( -160.409, 136.604, 45.0644, 0.52 ) }
    dend_77 { pt3dadd( -160.848, 137.42, 45.2358, 0.29 ) }
    dend_77 { pt3dadd( -161.407, 138.522, 45.4203, 0.29 ) }
    dend_77 { pt3dadd( -162.196, 140.245, 45.6901, 0.29 ) }
    dend_77 { pt3dadd( -162.241, 140.351, 45.7081, 0.29 ) }
    dend_77 { pt3dadd( -162.936, 142.147, 46.0217, 0.29 ) }
    dend_77 { pt3dadd( -162.995, 142.312, 46.051, 0.29 ) }
    dend_77 { pt3dadd( -163.636, 144.283, 46.3929, 0.29 ) }
    dend_77 { pt3dadd( -164.136, 145.929, 46.6412, 0.29 ) }
    dend_77 { pt3dadd( -164.207, 146.169, 46.6563, 0.29 ) }
    dend_77 { pt3dadd( -164.443, 146.978, 46.6542, 0.29 ) }
    dend_77 { pt3dadd( -164.462, 147.045, 46.6494, 0.29 ) }
    dend_77 { pt3dadd( -164.764, 148.091, 46.5163, 0.88 ) }
    dend_77 { pt3dadd( -164.852, 148.404, 46.456, 0.88 ) }
    dend_77 { pt3dadd( -165.26, 149.878, 46.1241, 0.22 ) }
    dend_77 { pt3dadd( -165.646, 151.32, 45.7535, 0.22 ) }
    dend_77 { pt3dadd( -165.704, 151.54, 45.6936, 0.22 ) }
    dend_77 { pt3dadd( -166.112, 153.123, 45.2546, 0.22 ) }
    dend_77 { pt3dadd( -166.129, 153.191, 45.2359, 0.22 ) }
    dend_77 { pt3dadd( -166.71, 155.282, 44.5171, 0.52 ) }
    dend_77 { pt3dadd( -167.163, 156.778, 43.9421, 0.29 ) }
    dend_77 { pt3dadd( -167.384, 157.436, 43.6488, 0.37 ) }
    dend_77 { pt3dadd( -167.43, 157.567, 43.5863, 0.37 ) }
    dend_77 { pt3dadd( -167.698, 158.285, 43.2261, 0.37 ) }
    dend_77 { pt3dadd( -168.558, 160.448, 41.9935, 0.22 ) }
    dend_77 { pt3dadd( -169.087, 161.73, 41.228, 0.22 ) }
    dend_77 { pt3dadd( -169.114, 161.799, 41.1899, 0.22 ) }
    dend_77 { pt3dadd( -169.366, 162.495, 40.8132, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( -169.709, 163.485, 40.3082, 0.66 ) }
    dend_77 { pt3dadd( -170.378, 165.484, 39.2413, 0.15 ) }
    dend_77 { pt3dadd( -170.886, 167.14, 38.3879, 0.15 ) }
    dend_77 { pt3dadd( -171.148, 167.958, 37.9032, 0.29 ) }
    dend_77 { pt3dadd( -171.172, 168.026, 37.8613, 0.29 ) }
    dend_77 { pt3dadd( -171.347, 168.507, 37.5453, 0.29 ) }
    dend_77 { pt3dadd( -171.923, 169.987, 36.5564, 0.44 ) }
    dend_77 { pt3dadd( -172.093, 170.374, 36.2454, 0.44 ) }
    dend_77 { pt3dadd( -172.583, 171.317, 35.4433, 0.22 ) }
    dend_77 { pt3dadd( -172.858, 171.832, 35.035, 0.52 ) }
    dend_77 { pt3dadd( -172.89, 171.893, 34.9896, 0.52 ) }
    dend_77 { pt3dadd( -173.129, 172.351, 34.6923, 0.88 ) }
    dend_77 { pt3dadd( -174.525, 175.12, 33.2266, 0.29 ) }
    dend_77 { pt3dadd( -175.689, 177.45, 32.0827, 0.29 ) }
    dend_77 { pt3dadd( -176.063, 178.287, 31.7302, 0.29 ) }
    dend_77 { pt3dadd( -176.09, 178.361, 31.7035, 0.29 ) }
    dend_77 { pt3dadd( -176.535, 179.865, 31.2525, 0.29 ) }
    dend_77 { pt3dadd( -176.799, 181.238, 30.9474, 0.29 ) }
    dend_77 { pt3dadd( -176.804, 181.306, 30.9393, 0.29 ) }
    dend_77 { pt3dadd( -176.74, 183.355, 30.6673, 0.29 ) }
    dend_77 { pt3dadd( -176.63, 184.888, 30.4586, 0.59 ) }
    dend_77 { pt3dadd( -176.556, 185.649, 30.3506, 0.59 ) }
    dend_77 { pt3dadd( -176.436, 186.968, 30.1628, 0.22 ) }
    dend_77 { pt3dadd( -176.332, 188.457, 29.9534, 0.22 ) }
    dend_77 { pt3dadd( -176.325, 188.642, 29.9281, 0.22 ) }
    dend_77 { pt3dadd( -176.315, 190.925, 29.6292, 0.22 ) }
    dend_77 { pt3dadd( -176.319, 191.101, 29.607, 0.22 ) }
    dend_77 { pt3dadd( -176.502, 194.688, 29.172, 0.22 ) }
    dend_77 { pt3dadd( -176.51, 194.782, 29.1614, 0.22 ) }
    dend_77 { pt3dadd( -176.8, 196.908, 28.9352, 0.22 ) }
    dend_77 { pt3dadd( -176.845, 197.155, 28.9109, 0.22 ) }
    dend_77 { pt3dadd( -176.931, 197.509, 28.8798, 0.59 ) }
    dend_77 { pt3dadd( -177.134, 198.236, 28.8209, 0.59 ) }
    dend_77 { pt3dadd( -177.741, 200.006, 28.5694, 0.29 ) }
    dend_77 { pt3dadd( -178.039, 200.799, 28.4212, 0.59 ) }
    dend_77 { pt3dadd( -178.539, 202.019, 28.1497, 0.52 ) }
    dend_77 { pt3dadd( -178.965, 203.074, 27.8909, 0.74 ) }
    dend_77 { pt3dadd( -179.326, 203.984, 27.6461, 0.74 ) }
    dend_77 { pt3dadd( -179.996, 205.802, 27.1051, 0.22 ) }
    dend_77 { pt3dadd( -180.251, 206.569, 26.8475, 0.44 ) }
    dend_77 { pt3dadd( -180.458, 207.256, 26.6154, 0.74 ) }
    dend_77 { pt3dadd( -180.568, 207.658, 26.4903, 1.03 ) }
    dend_77 { pt3dadd( -180.585, 207.722, 26.4712, 1.03 ) }
    dend_77 { pt3dadd( -180.805, 208.612, 26.2662, 1.03 ) }
    dend_77 { pt3dadd( -180.823, 208.693, 26.2597, 1.03 ) }
    dend_77 { pt3dadd( -181.104, 210.009, 26.1479, 0.37 ) }
    dend_77 { pt3dadd( -181.39, 211.312, 26.0283, 0.29 ) }
    dend_77 { pt3dadd( -182.7, 222.66, 25.117, 0.29 ) }
    dend_77 { pt3dadd( -185.199, 233.817, 25.6709, 0.29 ) }
    dend_77 { pt3dadd( -187.364, 245.003, 26.7541, 0.29 ) }
    dend_77 { pt3dadd( -188.909, 256.064, 29.1845, 0.29 ) }
    dend_77 { pt3dadd( -189.363, 266.995, 32.4436, 0.29 ) }
    dend_77 { pt3dadd( -190.706, 277.03, 37.62, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -130.278, 79.3882, 44.3864, 0.22 ) }
    dend_80 { pt3dadd( -124.299, 75.8009, 43.8747, 0.22 ) }
    dend_80 { pt3dadd( -118.224, 72.3528, 44.097, 0.22 ) }
    dend_80 { pt3dadd( -111.84, 69.5464, 44.0282, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -130.278, 79.3882, 44.3864, 0.22 ) }
    dend_79 { pt3dadd( -122.231, 73.684, 43.7474, 0.22 ) }
    dend_79 { pt3dadd( -114.198, 67.9486, 43.2024, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 5
    dend_93 nseg = 5
    dend_26 nseg = 5
    dend_1 nseg = 3
    dend_102 nseg = 7
    dend_97 nseg = 3
    dend_94 nseg = 3
    dend_65 nseg = 3
    dend_27 nseg = 7
    dend_20 nseg = 5
    dend_15 nseg = 3
    dend_2 nseg = 9
    dend_103 nseg = 5
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 3
    dend_67 nseg = 7
    dend_66 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 17
    dend_31 nseg = 9
    dend_29 nseg = 5
    dend_28 nseg = 5
    dend_24 nseg = 3
    dend_21 nseg = 13
    dend_17 nseg = 5
    dend_16 nseg = 9
    dend_11 nseg = 7
    dend_4 nseg = 5
    dend_49 nseg = 3
    dend_44 nseg = 5
    dend_35 nseg = 3
    dend_19 nseg = 3
    dend_5 nseg = 3
    dend_69 nseg = 5
    dend_62 nseg = 13
    dend_53 nseg = 5
    dend_50 nseg = 7
    dend_46 nseg = 3
    dend_39 nseg = 5
    dend_36 nseg = 5
    dend_90 nseg = 3
    dend_89 nseg = 3
    dend_73 nseg = 5
    dend_70 nseg = 3
    dend_63 nseg = 3
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_9 nseg = 5
    dend_83 nseg = 5
    dend_55 nseg = 5
    dend_85 nseg = 7
    dend_84 nseg = 5
    dend_82 nseg = 7
    dend_75 nseg = 3
    dend_57 nseg = 3
    dend_81 nseg = 5
    dend_76 nseg = 3
    dend_77 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_DBC_a60ab35166_0_0


