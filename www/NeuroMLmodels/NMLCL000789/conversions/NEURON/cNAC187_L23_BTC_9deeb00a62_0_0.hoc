// Cell: cNAC187_L23_BTC_9deeb00a62_0_0
/*
{
  "id" : "cNAC187_L23_BTC_9deeb00a62_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.10599, -10.005, -3.63045, 2.05199", "1.00994, -8.98941, -3.26388, 3.40229", "0.913884, -7.97383, -2.89732, 4.43836", "0.817831, -6.95825, -2.53075, 5.9106", "0.721777, -5.94268, -2.16418, 7.4154", "0.625724, -4.9271, -1.79761, 8.65317", "0.52967, -3.91152, -1.43104, 9.36003", "0.433616, -2.89594, -1.06447, 10.0585", "0.337563, -1.88037, -0.697906, 10.4351", "0.241509, -0.864787, -0.331337, 10.6941", "0.145456, 0.150791, 0.0352311, 10.9531", "0.0494021, 1.16637, 0.4018, 11.2338", "-0.0466515, 2.18195, 0.768368, 11.5118", "-0.142705, 3.19752, 1.13494, 11.7095", "-0.238759, 4.2131, 1.5015, 10.7536", "-0.334812, 5.22868, 1.86807, 9.97", "-0.430866, 6.24426, 2.23464, 9.36435", "-0.526919, 7.25984, 2.60121, 8.19972", "-0.622973, 8.27541, 2.96778, 6.07377", "-0.719027, 9.29099, 3.33435, 3.38096", "-0.81508, 10.3066, 3.70092, 2.12602" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.00111, -10.0801, -3.03985, 2.66", "1.35618, -16.3883, -3.53418, 2.66", "1.7446, -23.2888, -4.07494, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.84111, 9.92238, 0.260152, 2.66", "4.0026, 10.5253, 4.56667, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.81508, 10.3066, 3.70092, 0.66", "-2.22748, 25.24, 3.70092, 0.66", "-3.63987, 40.1733, 3.70092, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "1.7446, -23.2888, -4.07494, 2.66", "1.7695, -23.6698, -2.40356, 2.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.7446, -23.2888, -4.07494, 0.66", "4.82349, -26.0967, -4.36532, 0.66", "8.47331, -29.4252, -4.70955, 0.66", "11.3709, -32.0678, -4.98283, 0.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.0026, 10.5253, 4.56667, 1.99", "4.54206, 16.1562, 2.93806, 1.99", "4.91465, 20.0453, 1.81323, 1.99", "5.23925, 23.4335, 0.83327, 1.99", "5.62406, 27.4502, -0.328466, 1.99", "6.04121, 31.8045, -1.58785, 1.99", "6.34561, 34.9818, -2.50681, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.0026, 10.5253, 4.56667, 1.33", "4.48371, 19.0979, 6.56344, 1.33", "4.97909, 25.7721, 8.19209, 1.33", "5.58793, 31.5462, 9.53274, 1.33", "6.3441, 37.7723, 10.7395, 0.66", "6.87335, 41.2895, 11.3403, 0.66", "7.74178, 46.6904, 12.0078, 0.66", "8.24316, 49.4681, 12.2778, 0.66", "9.20611, 54.0989, 12.3639, 0.66", "11.4194, 63.0552, 12.3344, 0.66", "12.3502, 66.805, 12.2759, 0.66", "13.7166, 72.7978, 12.1847, 0.66", "14.3445, 75.9005, 12.1289, 0.66", "15.0932, 79.6788, 12.0461, 0.66", "16.1622, 85.7215, 12.0062, 0.66", "16.7564, 88.859, 12.05, 0.66", "17.5357, 93.3832, 12.2433, 0.66", "18.1807, 97.7944, 12.6232, 0.66", "18.6038, 101.116, 12.9207, 0.66", "19.1015, 104.417, 13.2437, 0.66", "20.0855, 110.498, 13.962, 0.66", "20.9428, 114.896, 14.6662, 0.66", "21.7829, 118.912, 15.5947, 0.66", "22.508, 121.554, 16.3424, 0.66", "23.2136, 124.012, 17.0963, 0.66", "24.2337, 127.026, 18.0737, 0.66", "25.3488, 130.01, 19.1056, 0.66", "27.1907, 134.079, 20.4425, 0.66", "29.5443, 138.871, 21.9643, 0.66", "31.1436, 142.281, 23.0085, 0.66", "32.0096, 144.242, 23.5326, 0.33", "32.5778, 145.493, 23.804, 0.66", "34.0347, 148.835, 24.4494, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.63987, 40.1733, 3.70092, 0.33", "-5.05227, 55.1067, 3.70092, 0.33", "-6.46467, 70.04, 3.70092, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "1.7695, -23.6698, -2.40356, 2.0", "1.0029, -25.889, -7.63439, 2.0" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "1.7695, -23.6698, -2.40356, 0.66", "1.31576, -27.1237, -0.0974289, 0.66", "1.01901, -29.4184, 1.32484, 0.66", "0.800715, -31.0546, 2.16071, 0.66", "-0.0248707, -36.0406, 5.16697, 0.66", "-0.241695, -37.5374, 6.20286, 0.66", "-0.483235, -39.321, 7.50137, 0.33", "-0.594061, -40.0586, 8.06569, 0.66", "-0.928885, -42.2234, 9.75285, 0.66", "-1.44486, -47.8112, 13.9643, 0.66", "-1.65393, -50.6929, 15.7723, 0.33", "-1.70362, -51.2456, 16.0788, 0.66", "-1.91953, -53.3488, 17.2206, 0.66", "-2.06538, -55.1731, 18.1559, 0.33", "-2.12573, -56.0023, 18.5478, 0.66", "-2.37843, -59.4176, 19.4359, 0.33", "-2.72806, -62.5286, 20.0974, 0.66", "-3.09311, -65.7236, 20.8372, 0.33", "-3.17002, -66.3394, 21.0007, 0.66" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "11.3709, -32.0678, -4.98283, 0.66", "15.5135, -31.9503, -6.24685, 0.66", "19.6883, -31.9264, -7.63002, 0.66", "28.5969, -32.1493, -10.5544, 0.66", "33.9168, -32.2381, -11.9385, 0.66", "39.3534, -32.3789, -13.0992, 0.66", "43.9695, -32.4962, -13.9625, 0.66", "48.0505, -32.8567, -14.545, 0.66", "53.424, -33.5367, -15.155, 0.66", "60.3474, -34.448, -15.4843, 0.66", "63.5735, -34.8517, -15.6918, 0.66", "66.0964, -35.1226, -15.9315, 0.33", "71.9967, -35.7241, -16.2838, 0.66", "76.4323, -36.1947, -16.4567, 0.66", "78.7388, -36.4395, -16.5825, 0.66", "81.3694, -36.6915, -16.8087, 0.33", "84.0018, -36.7746, -17.1059, 0.66", "87.2915, -36.7173, -17.6838, 0.66", "90.4117, -36.5231, -18.4678, 0.33", "92.0431, -36.4155, -18.8356, 0.66", "94.7839, -36.2527, -19.5553, 0.33", "99.2609, -35.9427, -20.9498, 0.66", "104.127, -35.7736, -22.5163, 0.66", "106.036, -35.781, -23.2002, 0.33", "110.497, -35.8881, -24.8597, 0.66", "115.763, -36.1244, -26.8439, 0.33", "118.305, -36.3945, -27.8829, 1.33", "120.982, -36.8541, -28.93, 0.66", "122.979, -37.3705, -29.6426, 0.33", "124.147, -37.7654, -30.0732, 0.66", "125.68, -38.4787, -30.7821, 0.33", "129.192, -40.577, -32.488, 1.33", "130.479, -41.3539, -33.1431, 0.66", "134.377, -43.6264, -35.1434, 0.33", "135.028, -43.9406, -35.546, 0.33", "137.969, -45.3395, -37.4343, 0.66", "140.789, -46.706, -39.3116, 0.33", "142.776, -47.583, -40.6044, 1.33", "145.602, -48.6274, -42.6848, 0.33", "151.109, -50.0374, -47.4722, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "11.3709, -32.0678, -4.98283, 0.66", "11.6199, -34.8087, -2.51156, 0.66", "11.3922, -36.9112, -0.43836, 0.66", "11.2935, -37.6819, 0.316983, 0.66", "10.9419, -40.45, 3.01937, 0.66", "10.1445, -44.6174, 7.06737, 0.66", "10.007, -45.2295, 7.66834, 1.33", "8.79559, -48.8427, 11.2429, 0.33", "8.44178, -49.9245, 12.5142, 0.33", "8.36539, -50.1608, 12.81, 0.66", "7.92563, -51.8621, 15.131, 0.33", "7.62703, -53.3139, 17.3575, 0.66", "7.53763, -54.2694, 19.0028, 0.66", "8.11719, -58.0422, 26.7762, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.34561, 34.9818, -2.50681, 1.33", "9.77176, 38.9353, -8.76502, 1.33", "11.7492, 41.2171, -12.3771, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.34561, 34.9818, -2.50681, 1.33", "3.93483, 39.3838, -13.1088, 1.33", "2.44835, 42.0981, -19.646, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "1.0029, -25.889, -7.63439, 0.66", "1.67852, -25.2995, -9.35037, 0.66", "2.12624, -24.8495, -10.6267, 0.66", "4.09271, -22.9339, -17.4194, 0.66", "4.9925, -21.8129, -23.2722, 0.66", "5.26632, -21.5321, -25.9799, 0.66", "5.53464, -21.2793, -28.9992, 0.66", "5.99026, -21.1078, -34.8084, 0.66", "6.14265, -21.243, -38.8644, 0.66", "5.93814, -21.9999, -48.6864, 0.66", "5.63916, -22.6041, -55.8774, 0.66", "5.54209, -22.8521, -57.7777, 0.66", "5.40268, -23.3358, -60.3564, 0.66", "5.10513, -24.9092, -68.0842, 0.66", "5.2813, -26.7931, -77.4153, 0.66", "5.73672, -27.3588, -80.8047, 0.66", "6.32409, -27.7352, -84.6743, 0.66", "6.76143, -27.9571, -87.2455, 0.66", "8.83889, -28.8223, -97.8424, 0.66", "9.20929, -28.9711, -99.4981, 0.66", "11.8988, -30.1345, -111.565, 0.66", "13.843, -30.8831, -119.648, 0.33", "14.0597, -30.9392, -120.471, 1.33", "14.5518, -31.0557, -122.045, 0.66", "16.6912, -31.6461, -127.864, 0.33", "17.9903, -31.9638, -130.913, 1.33", "19.0366, -32.2908, -132.664, 0.33", "19.6853, -32.4827, -133.565, 0.66", "22.1653, -33.0602, -137.519, 0.33", "22.6937, -33.189, -138.519, 1.33", "23.3652, -33.3362, -139.759, 0.66", "24.5701, -33.547, -142.019, 0.33", "25.8738, -33.7573, -144.582, 1.33", "29.7419, -34.1924, -152.818, 0.33", "31.8872, -34.3964, -158.204, 0.33", "32.8654, -34.53, -160.785, 0.33", "33.2576, -34.5927, -161.846, 0.33", "33.7238, -34.6213, -163.031, 0.33", "35.9852, -34.6084, -167.915, 0.66", "39.8879, -34.2391, -175.224, 0.33", "41.2657, -33.986, -177.699, 0.33", "42.6265, -33.662, -180.323, 0.66", "45.6588, -32.8291, -186.149, 0.33", "46.7462, -32.4611, -188.147, 0.66", "47.709, -32.0795, -189.614, 0.33", "47.9379, -31.9476, -189.912, 0.66", "51.2087, -29.4339, -195.256, 0.33", "51.7063, -29.0059, -196.268, 0.66" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "1.0029, -25.889, -7.63439, 1.33", "0.570583, -28.5927, -10.0411, 1.33", "-0.119369, -32.9076, -13.882, 1.99" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "11.7492, 41.2171, -12.3771, 1.33", "14.1507, 43.0016, -9.79964, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "11.7492, 41.2171, -12.3771, 0.66", "11.4014, 42.927, -13.0899, 0.66", "11.1742, 44.4286, -13.6919, 0.66", "10.9605, 46.2633, -14.2341, 0.66", "10.747, 49.0067, -14.8874, 0.66", "10.5043, 54.0971, -15.8577, 0.66", "10.4881, 56.0649, -16.1681, 0.66", "10.5659, 57.9712, -16.3708, 0.66", "10.8091, 60.9967, -16.6882, 0.66", "10.9464, 62.2089, -16.7794, 0.66", "11.2461, 64.388, -16.8581, 0.66", "11.4332, 66.215, -16.8264, 0.66", "11.7212, 70.8751, -17.1078, 0.66", "11.8225, 74.7214, -17.5756, 0.66", "11.7692, 77.2881, -18.0325, 0.66", "11.6516, 79.7536, -18.5115, 0.66", "11.4908, 82.2692, -19.1066, 0.66", "11.1053, 86.8874, -20.2509, 0.66", "10.9203, 89.2634, -20.8526, 0.66", "10.6261, 93.1439, -21.7531, 0.66", "10.5147, 95.082, -22.207, 0.33", "10.4054, 98.0095, -22.8096, 0.66", "10.4263, 99.9615, -23.1132, 0.66", "10.5289, 101.895, -23.2397, 0.66", "10.6161, 103.563, -23.3666, 0.33", "10.7272, 105.15, -23.4714, 0.66", "10.8053, 106.62, -23.5576, 0.33", "10.8759, 107.839, -23.6066, 0.66", "10.9701, 110.39, -23.9153, 0.33", "10.9674, 112.267, -24.2073, 0.66", "10.9692, 114.417, -24.5958, 0.66", "11.0128, 115.487, -24.8153, 0.33", "11.084, 116.559, -25.0151, 0.33", "11.2693, 118.701, -25.355, 0.66", "11.4018, 120.163, -25.5014, 0.33", "11.5785, 121.136, -25.5438, 0.33", "11.8372, 122.839, -25.5902, 0.66", "12.1311, 125.346, -25.7198, 0.66", "12.1733, 126.206, -25.7934, 0.66", "12.1077, 129.228, -26.002, 0.66", "11.8656, 131.155, -26.0472, 0.66", "11.003, 134.785, -26.1175, 0.66", "10.0357, 137.679, -26.1597, 0.66", "9.06782, 140.22, -26.1289, 0.33", "8.13582, 142.441, -26.0245, 0.66", "6.57906, 145.862, -25.7172, 0.33", "5.68599, 147.899, -25.408, 0.66", "4.91847, 150.041, -24.8958, 0.66", "4.1978, 152.558, -24.1394, 0.33", "4.00434, 153.664, -23.8181, 0.66", "3.93601, 154.465, -23.5177, 0.66", "3.98029, 156.849, -22.3988, 0.33", "4.0783, 157.928, -21.7654, 0.66", "4.30043, 159.313, -20.8501, 0.33", "4.55397, 160.463, -20.062, 0.66", "5.79007, 165.13, -16.8722, 0.66", "6.2172, 166.53, -15.9533, 0.33", "6.68787, 167.84, -15.1254, 0.33", "6.95924, 168.612, -14.6201, 0.66", "7.34999, 169.72, -13.8945, 0.33", "7.69693, 170.851, -13.241, 0.33", "8.01532, 172.118, -12.5942, 0.33", "8.0583, 172.336, -12.4412, 0.66", "8.46097, 174.901, -10.4153, 0.33", "8.53655, 175.651, -9.80197, 0.33", "8.57365, 176.069, -9.46656, 0.66", "8.91838, 178.761, -7.47766, 0.33", "8.94977, 178.995, -7.33094, 0.66", "9.32539, 180.994, -6.41025, 0.33", "9.46907, 181.72, -6.19341, 0.66", "9.97273, 184.516, -5.27072, 0.33", "10.2743, 186.036, -4.93354, 0.33", "10.544, 187.426, -4.74443, 0.33", "11.132, 191.048, -4.21948, 0.66", "11.6779, 194.611, -3.69657, 0.66", "12.2783, 199.293, -3.01469, 0.66", "12.7973, 204.869, -2.41443, 0.66", "12.9563, 207.46, -2.267, 0.33", "13.2162, 213.323, -1.99378, 0.66", "13.2316, 214.426, -1.97923, 0.66", "13.2357, 215.981, -2.02815, 0.66", "13.1407, 219.338, -2.39331, 0.66", "12.8412, 222.507, -2.34162, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.44835, 42.0981, -19.646, 0.66", "2.17631, 43.8797, -21.0687, 0.66", "1.83949, 45.5468, -22.5794, 0.66", "1.07688, 48.3028, -25.1908, 0.66", "-0.619182, 53.274, -30.3226, 0.66", "-1.28509, 54.9357, -32.0825, 0.66", "-2.7744, 58.4196, -35.7933, 0.66", "-4.09622, 60.9442, -38.6878, 0.66", "-4.75509, 62.1025, -40.2136, 0.66", "-6.95049, 65.7623, -45.62, 0.66", "-7.42528, 66.6564, -46.8626, 0.66", "-8.0745, 67.8887, -48.5312, 0.66", "-8.44572, 68.7328, -49.6195, 0.33", "-10.0995, 73.5335, -55.4671, 0.66", "-10.3277, 74.5643, -56.644, 1.33", "-10.6241, 76.4016, -58.5543, 0.33", "-10.7495, 77.218, -59.3728, 0.66", "-11.2896, 80.4345, -62.3307, 0.33", "-11.6073, 82.4739, -64.063, 1.33", "-12.5076, 86.772, -67.4118, 0.66", "-12.8558, 87.9703, -68.4619, 0.66", "-13.6508, 90.1409, -70.5524, 0.66", "-14.1754, 91.2642, -71.765, 0.66", "-15.59, 93.8659, -74.7675, 0.66", "-16.9639, 96.1124, -77.4778, 0.66", "-18.9525, 99.2266, -81.0564, 0.33", "-19.3917, 99.9468, -81.8729, 0.66", "-21.6002, 103.693, -86.1008, 0.33", "-22.0804, 104.554, -87.043, 0.33", "-22.9152, 106.098, -88.4885, 1.33", "-23.7502, 107.72, -89.9357, 0.33", "-24.195, 108.636, -90.7117, 0.66", "-26.6279, 113.592, -94.857, 0.33", "-27.2209, 114.813, -95.747, 0.33", "-28.299, 116.973, -97.3002, 0.66", "-30.927, 122.804, -102.13, 0.33", "-31.3971, 123.964, -103.152, 0.33", "-32.3045, 126.398, -105.393, 0.66", "-33.1848, 128.963, -107.812, 0.33", "-33.9427, 131.252, -110.207, 0.66", "-35.7236, 137.089, -116.756, 0.33", "-36.2917, 138.851, -118.797, 0.66", "-37.3035, 141.475, -121.93, 0.33", "-37.624, 142.247, -122.909, 0.66", "-38.8232, 144.968, -126.267, 0.66", "-39.9909, 147.591, -129.114, 0.33", "-41.1626, 150.161, -131.767, 0.66", "-42.2554, 152.547, -134.323, 0.66", "-44.2319, 156.776, -139.248, 0.66", "-45.2964, 158.95, -141.896, 0.33", "-46.5367, 161.348, -144.993, 0.66", "-50.378, 169.132, -154.931, 0.66", "-51.2583, 170.928, -157.347, 0.66", "-53.2882, 174.797, -162.677, 0.33", "-53.8432, 175.817, -164.128, 0.66", "-55.796, 179.279, -169.185, 0.33", "-57.3368, 181.883, -172.839, 0.66", "-60.9427, 187.349, -180.635, 0.66", "-62.1077, 189.027, -183.137, 1.99", "-66.0118, 194.308, -191.337, 0.66", "-67.0316, 195.665, -193.479, 0.66", "-67.9411, 196.835, -195.316, 0.66", "-73.5011, 203.92, -206.954, 0.66", "-75.3182, 206.379, -210.856, 0.33", "-76.6654, 208.203, -213.96, 0.66", "-77.8179, 209.651, -216.411, 0.66", "-79.2651, 211.426, -219.478, 0.66", "-83.0556, 216.092, -227.516, 0.66", "-86.6169, 220.48, -234.819, 0.66", "-94.2442, 229.438, -250.266, 0.33", "-96.2963, 231.738, -254.426, 0.33", "-99.7123, 235.27, -261.312, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.44835, 42.0981, -19.646, 0.66", "-0.903172, 47.187, -23.3794, 0.66", "-3.36393, 50.2575, -25.9464, 0.66", "-6.85868, 54.6434, -29.5151, 0.66", "-9.30114, 57.6564, -31.788, 0.66", "-10.4452, 59.093, -32.8679, 0.66", "-15.0536, 64.43, -37.0543, 0.66", "-20.2689, 69.5495, -41.6296, 0.66", "-21.883, 71.013, -43.0178, 0.66", "-26.751, 75.821, -47.0367, 0.66", "-30.9189, 79.8449, -49.9913, 0.66", "-36.3622, 85.355, -53.2247, 0.66", "-40.0072, 89.4007, -54.92, 0.66", "-42.1539, 91.9269, -55.5133, 0.66", "-48.5301, 99.6599, -56.1517, 0.66", "-51.6172, 104.054, -55.5884, 0.66", "-55.7295, 110.361, -54.082, 0.66", "-57.7711, 113.925, -52.9066, 0.66", "-62.4619, 122.676, -49.4125, 0.66", "-64.168, 125.877, -47.9496, 0.66", "-67.9343, 133.069, -43.8405, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-0.119369, -32.9076, -13.882, 1.33", "-1.62727, -38.6423, -13.366, 1.33", "-2.31294, -41.1994, -14.7676, 1.33", "-2.33817, -41.3625, -14.8657, 1.33", "-2.64468, -43.5892, -16.1317, 0.66", "-2.83196, -45.3687, -17.0631, 0.66", "-3.11792, -47.6956, -18.1362, 0.66", "-4.27093, -59.0424, -23.127, 0.66", "-4.67868, -63.2451, -24.676, 0.66", "-4.81285, -66.164, -25.4777, 0.66", "-4.90731, -68.9946, -26.0563, 0.66", "-5.07554, -74.1106, -26.9821, 0.66", "-5.21674, -79.8177, -27.8078, 0.66", "-5.3611, -83.1101, -28.0488, 0.66", "-5.69654, -91.0897, -28.7409, 0.66", "-5.89177, -95.2859, -29.0807, 0.66", "-6.25525, -103.829, -29.815, 0.66", "-6.30274, -107.449, -30.138, 0.66", "-6.27426, -114.158, -30.9019, 0.66", "-6.20427, -118.956, -31.5196, 0.66", "-6.09872, -124.38, -32.3822, 0.66", "-5.83711, -130.396, -33.2856, 0.66", "-5.65783, -133.999, -33.7413, 0.66", "-5.36187, -141.87, -34.7593, 0.66", "-5.18876, -146.083, -35.2674, 0.66", "-4.98276, -151.651, -35.976, 0.66", "-4.65398, -159.196, -36.968, 0.66", "-4.60042, -162.525, -37.3289, 0.66", "-4.6652, -169.923, -37.9535, 0.66", "-4.77203, -180.159, -38.2323, 0.66" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-0.119369, -32.9076, -13.882, 1.33", "-3.34874, -34.5959, -10.4594, 1.33", "-11.7331, -38.9792, -1.57345, 1.33" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "14.1507, 43.0016, -9.79964, 1.33", "17.4825, 48.5073, -12.4242, 1.33", "18.4443, 50.03, -12.9921, 1.33", "20.2226, 52.7812, -13.6125, 1.33", "22.4674, 56.3388, -14.0871, 1.33", "25.7983, 61.5471, -14.3912, 1.33", "31.2794, 69.4383, -14.024, 1.33", "34.4565, 73.8506, -13.0958, 1.33", "37.6901, 78.397, -11.6101, 0.66", "39.5414, 80.7221, -10.6502, 0.66", "44.2943, 86.1911, -8.53851, 0.66", "50.2153, 92.7798, -5.65104, 0.66", "53.7802, 96.7388, -3.83916, 0.66", "60.4931, 103.97, -0.960802, 0.66", "69.5543, 113.398, 2.40621, 0.66", "77.6702, 121.476, 5.25566, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "14.1507, 43.0016, -9.79964, 0.66", "17.6904, 43.3094, -4.33463, 0.66", "20.0035, 43.6919, -0.938767, 0.66", "23.3156, 44.4699, 3.65888, 0.66", "24.4274, 44.7538, 5.10785, 0.66", "25.9728, 45.1522, 7.20935, 0.66", "27.8962, 45.6612, 10.0638, 0.66", "30.7477, 46.7149, 14.449, 0.66", "31.6612, 47.0679, 15.7883, 0.33", "32.3534, 47.3468, 16.7736, 0.66", "36.3789, 49.117, 22.8435, 0.66", "38.8483, 50.342, 26.9129, 0.66", "39.9344, 50.8994, 28.8003, 0.66", "41.1098, 51.6341, 30.7227, 0.66", "41.9554, 52.4848, 32.2469, 0.33", "42.2418, 52.8501, 32.7667, 0.66", "42.6993, 53.785, 33.3961, 0.33", "42.9039, 54.3759, 33.6751, 0.66", "43.601, 57.2855, 35.2172, 0.33", "43.987, 61.2873, 37.0029, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "12.8412, 222.507, -2.34162, 0.33", "11.7254, 223.588, -4.61251, 0.33", "11.171, 224.126, -5.74088, 0.66", "9.78287, 225.471, -8.56629, 0.33", "8.77814, 226.445, -10.6113, 0.66", "6.64569, 228.512, -14.9515, 0.33", "5.72033, 229.409, -16.835, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "12.8412, 222.507, -2.34162, 0.33", "11.1898, 223.51, -4.23367, 0.33", "9.44781, 224.568, -6.2296, 0.66", "5.11862, 227.197, -11.1898, 0.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-67.9343, 133.069, -43.8405, 0.66", "-71.7141, 136.712, -45.8727, 0.66", "-76.6038, 140.705, -48.7154, 0.66", "-80.946, 144.081, -50.936, 0.66", "-82.526, 145.252, -51.6465, 0.66", "-85.3592, 147.349, -52.7434, 0.66", "-86.6693, 148.267, -53.2079, 0.66", "-92.7267, 152.446, -55.1049, 0.66", "-97.5996, 155.72, -56.0712, 0.66", "-99.2946, 156.77, -56.4172, 0.66", "-103.72, 159.485, -57.2506, 0.66", "-108.678, 162.655, -58.1128, 0.66", "-112.272, 165.026, -58.8167, 0.66", "-116.82, 168.142, -59.8202, 0.66", "-123.084, 172.255, -61.734, 0.33", "-125.513, 173.851, -62.6913, 0.66", "-126.292, 174.342, -63.0798, 0.66", "-131.267, 177.371, -66.084, 0.66", "-134.063, 179.02, -68.2092, 0.33", "-135.04, 179.595, -69.0466, 0.66", "-138.804, 181.888, -72.3504, 0.33", "-140.734, 182.997, -74.1686, 1.33", "-145.624, 185.85, -78.8111, 0.33", "-149.261, 188.053, -82.3732, 0.33", "-150.013, 188.506, -83.1425, 0.66", "-152.584, 189.953, -85.8908, 0.33", "-156.351, 192.017, -89.9268, 0.66", "-157.714, 192.794, -91.407, 0.33", "-159.281, 193.725, -93.117, 0.66", "-162.599, 195.709, -96.5364, 0.33", "-164.666, 197.247, -98.6972, 0.66", "-165.679, 198.312, -99.7394, 0.33", "-166.601, 199.804, -100.579, 0.66", "-167.313, 201.564, -101.178, 0.33", "-167.746, 204.222, -101.364, 0.66", "-167.859, 208.982, -100.958, 0.33", "-167.642, 211.729, -100.486, 0.66", "-167.16, 214.727, -99.6457, 0.33", "-166.993, 215.647, -99.3229, 0.66", "-166.465, 219.16, -97.9653, 0.33", "-166.367, 220.29, -97.4637, 0.66", "-166.18, 223.286, -96.0889, 0.33", "-165.906, 230.657, -92.6248, 0.66", "-165.871, 234.008, -90.9736, 0.33", "-166.032, 239.968, -88.0639, 0.33", "-166.332, 243.443, -86.3429, 0.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-67.9343, 133.069, -43.8405, 0.33", "-68.6662, 135.508, -43.8481, 0.33", "-69.0974, 137.29, -43.8351, 0.33", "-69.3292, 138.286, -43.8189, 0.66", "-69.9317, 140.824, -43.7538, 0.33", "-70.1672, 141.758, -43.7221, 0.66", "-70.4744, 143.048, -43.5477, 0.33", "-71.1213, 145.851, -42.9972, 0.33", "-71.3441, 146.712, -42.7934, 0.66", "-71.7965, 148.196, -42.3864, 0.33", "-72.0122, 148.859, -42.1848, 0.66", "-73.1795, 152.668, -41.2185, 0.33", "-73.7399, 154.406, -40.7415, 1.33", "-74.3636, 156.203, -40.2366, 0.33", "-74.5998, 156.86, -40.0656, 0.66", "-75.8111, 160.121, -39.3, 0.33", "-76.9521, 162.857, -38.8131, 0.66", "-78.7349, 166.686, -38.2716, 0.66", "-79.4069, 168.258, -37.9897, 0.66", "-80.4955, 170.972, -37.4941, 0.66", "-81.2074, 172.866, -37.1191, 0.33", "-82.3322, 175.916, -36.4826, 0.66", "-83.592, 179.823, -35.6768, 0.66", "-85.1331, 185.948, -34.2553, 0.33", "-85.3357, 186.913, -33.9927, 0.66", "-85.8854, 190.511, -32.9548, 0.33", "-86.3215, 194.008, -31.8786, 0.33", "-86.433, 195.276, -31.4759, 0.66", "-86.9337, 201.124, -29.9815, 0.33", "-87.0236, 202.026, -29.8273, 0.66", "-87.3133, 205.642, -29.2923, 0.33", "-87.4458, 207.235, -29.1021, 0.33", "-87.6191, 210.206, -28.8419, 0.66", "-87.9119, 214.365, -28.6126, 0.66", "-88.1875, 218.251, -28.5468, 0.66", "-88.4316, 221.766, -28.3543, 0.33", "-88.5464, 223.05, -28.2238, 0.33", "-89.0038, 226.89, -27.6895, 0.33", "-89.1879, 227.811, -27.4543, 0.66", "-89.6877, 229.521, -26.9501, 0.33", "-90.031, 230.389, -26.6994, 0.66", "-90.9051, 232.259, -26.2774, 0.33", "-91.6915, 233.908, -25.8987, 1.99", "-93.6614, 237.313, -25.0289, 0.33", "-95.2117, 240.177, -24.4053, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-4.77203, -180.159, -38.2323, 0.33", "-5.32769, -183.496, -39.2063, 0.33", "-5.4033, -184.311, -39.2718, 0.66", "-5.54725, -185.811, -39.2263, 0.33", "-5.57905, -186.188, -39.2037, 0.66", "-6.06164, -191.472, -39.0548, 0.66", "-6.20653, -194.035, -39.1954, 0.33", "-6.40832, -199.621, -39.9447, 0.66", "-6.58238, -205.602, -40.8394, 0.66", "-6.62368, -208.04, -41.2114, 0.66", "-6.7717, -215.58, -42.1962, 0.66", "-6.88882, -223.045, -43.0585, 0.66", "-6.97567, -226.583, -43.5093, 0.66", "-7.15601, -231.509, -44.1365, 0.66", "-7.39332, -235.929, -44.5762, 0.66", "-7.75263, -241.53, -44.8931, 0.66", "-8.21449, -246.767, -44.9239, 0.66", "-8.67494, -250.771, -44.7259, 0.66", "-9.6527, -258.212, -44.2777, 0.66", "-10.2953, -263.002, -43.9105, 0.66", "-11.0997, -268.53, -43.4107, 0.66", "-11.8255, -273.662, -42.905, 0.66", "-12.9416, -281.293, -42.04, 0.66", "-13.7496, -287.095, -41.3736, 0.66", "-14.4829, -293.401, -40.8107, 0.66", "-14.9018, -297.795, -40.4604, 0.66", "-15.1839, -302.215, -40.2384, 0.66", "-15.3053, -307.79, -40.1068, 0.66", "-15.382, -313.151, -40.2849, 0.66", "-15.444, -318.942, -40.7634, 0.66", "-15.4894, -323.829, -41.3982, 0.66", "-15.5678, -330.115, -42.2883, 0.66", "-15.778, -336.215, -43.1558, 0.66", "-15.9923, -341.529, -43.8728, 0.66", "-16.2438, -345.809, -44.4012, 0.66", "-16.4694, -348.448, -44.6881, 0.66", "-17.1799, -355.722, -45.8025, 0.66", "-18.05, -363.818, -47.3408, 0.66", "-18.2938, -366.59, -48.0024, 0.33", "-18.409, -368.371, -48.448, 0.33", "-18.634, -371.61, -49.2868, 0.66", "-19.0726, -377.778, -51.0105, 0.66", "-19.5081, -385.235, -53.2632, 0.66", "-19.6505, -387.599, -53.9761, 0.33", "-19.8666, -390.798, -54.7374, 0.33", "-20.0373, -394.229, -55.4252, 0.66", "-20.1238, -396.542, -55.8628, 0.66", "-20.2247, -399.451, -56.3393, 0.33", "-20.3014, -401.414, -56.6534, 0.66", "-21.3507, -428.078, -60.8467, 0.66", "-21.4405, -430.193, -61.1978, 0.33", "-21.663, -436.421, -62.3542, 0.66", "-21.7502, -438.615, -62.7794, 0.33", "-21.7913, -439.917, -63.0275, 0.66", "-21.8916, -443.023, -63.5778, 0.33", "-21.9681, -444.498, -63.7516, 0.66", "-22.6642, -449.707, -64.3148, 0.33", "-22.9735, -451.327, -64.4262, 0.33", "-24.494, -458.234, -64.8783, 0.66", "-25.3692, -462.248, -65.0793, 0.66", "-26.0636, -465.486, -65.1993, 0.66", "-27.3455, -471.468, -65.1982, 0.66", "-28.4282, -476.786, -64.9981, 0.66", "-29.0222, -480.479, -64.8136, 0.66", "-29.5713, -484.86, -64.5333, 0.33", "-29.6104, -486.031, -64.4416, 0.66", "-29.4073, -489.412, -64.1609, 0.66", "-28.9815, -492.153, -63.8227, 0.66", "-28.4268, -495.228, -63.3921, 0.33", "-28.2726, -496.023, -63.2592, 0.66", "-27.5963, -499.811, -62.6666, 0.66", "-26.8517, -504.49, -62.025, 0.66", "-26.3648, -508.429, -61.5869, 0.66", "-26.2976, -509.938, -61.437, 0.66", "-26.3621, -513.1, -61.2292, 0.33", "-26.5205, -515.569, -61.1442, 0.66", "-26.7154, -517.784, -61.3134, 0.33", "-26.9111, -519.946, -61.726, 0.66", "-27.1508, -522.304, -62.3907, 0.33", "-27.6123, -526.72, -63.7318, 0.33", "-27.702, -527.494, -63.9791, 0.66", "-28.1237, -532.351, -65.3984, 0.33", "-28.2772, -535.2, -66.2017, 0.33", "-28.2958, -535.713, -66.2845, 0.66", "-28.3114, -537.695, -66.336, 0.33", "-28.3305, -538.425, -66.2404, 0.66", "-28.3375, -540.409, -65.8694, 0.33", "-28.3461, -542.58, -65.3358, 0.66", "-28.1231, -547.822, -64.3745, 0.33", "-28.0583, -548.98, -64.2224, 0.33", "-28.0323, -549.349, -64.1932, 0.66", "-27.6777, -553.557, -64.0519, 0.33", "-27.4394, -556.111, -64.1076, 0.33", "-27.0168, -560.531, -64.4319, 0.33", "-26.9576, -561.337, -64.5095, 0.66", "-26.8798, -564.48, -64.5892, 0.33", "-26.8798, -564.48, -64.5892, 0.66", "-27.012, -566.786, -64.2935, 0.33", "-27.012, -566.786, -64.2935, 0.66", "-26.9051, -569.937, -64.016, 0.33", "-26.691, -573.666, -63.763, 0.33", "-26.5661, -575.227, -63.6883, 0.66", "-26.2972, -579.037, -63.5989, 0.33", "-25.9896, -584.92, -63.7555, 0.33", "-25.9549, -586.241, -63.8425, 0.33", "-25.9628, -586.965, -63.9198, 0.66", "-26.0106, -588.946, -64.1389, 0.33", "-26.1497, -591.61, -64.4279, 0.66", "-26.7396, -597.713, -65.2846, 0.33", "-27.108, -599.524, -65.4994, 0.66", "-27.8911, -603.103, -65.9546, 0.33" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-4.77203, -180.159, -38.2323, 0.66", "-2.61625, -181.264, -38.8397, 0.66", "6.2891E-4, -182.792, -39.6354, 0.33", "0.447615, -183.067, -39.7736, 0.66", "5.50585, -186.251, -41.298, 0.66", "9.78851, -189.01, -42.5082, 0.33", "11.1871, -189.923, -42.8128, 0.33", "13.1065, -191.327, -43.1485, 0.33", "13.7046, -191.808, -43.1738, 0.66", "14.786, -192.829, -42.8451, 0.33", "16.1019, -194.223, -42.0492, 0.66", "18.4321, -196.703, -40.1145, 0.33", "20.0012, -198.439, -38.6607, 0.66", "21.6516, -200.197, -36.9953, 0.33", "24.963, -204.0, -33.2165, 0.66" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-11.7331, -38.9792, -1.57345, 0.66", "-15.6749, -42.7134, -1.6613, 0.66", "-18.0856, -44.9137, -1.80103, 0.66", "-22.3207, -48.4942, -2.36236, 0.66", "-23.6549, -49.5453, -2.57552, 0.66", "-24.7642, -50.3952, -2.76523, 0.66", "-27.7177, -52.5332, -3.39879, 0.66", "-29.4397, -53.6776, -3.83326, 0.66", "-32.1148, -55.0798, -4.66756, 0.66", "-33.0715, -55.5572, -5.04807, 0.66", "-34.2896, -56.1405, -5.45117, 0.66", "-36.7954, -57.5189, -6.04681, 0.66", "-38.5493, -58.5642, -6.33033, 0.66", "-40.0275, -59.5755, -6.49567, 0.66", "-42.8486, -61.7495, -6.62146, 0.66", "-47.7804, -65.9572, -6.69673, 0.66", "-50.1442, -68.1128, -6.57585, 0.66", "-51.8782, -69.8225, -6.39976, 0.66", "-53.4963, -71.6265, -6.24689, 0.66", "-54.1962, -72.5135, -6.17145, 0.66", "-54.8448, -73.4698, -6.07361, 0.66", "-56.4337, -76.2789, -5.83908, 0.66", "-58.1424, -78.8276, -5.68463, 0.66", "-60.0359, -81.4683, -5.72659, 0.66", "-61.2827, -83.053, -5.98475, 0.66", "-62.8365, -84.9844, -6.47883, 0.66", "-65.2414, -87.9167, -7.3656, 0.66", "-68.1826, -91.57, -8.61669, 0.66", "-72.0755, -96.2831, -10.4732, 0.66", "-75.3417, -100.204, -12.2649, 0.66", "-76.4458, -101.646, -12.9278, 0.66", "-78.9514, -105.118, -14.5872, 0.66", "-79.5589, -106.076, -15.0482, 0.66", "-81.7083, -110.098, -16.8898, 0.66", "-83.0545, -112.94, -17.941, 0.66", "-84.72, -116.769, -19.0332, 0.66", "-86.1173, -119.811, -19.9219, 0.66", "-86.6492, -120.983, -20.3003, 0.66", "-87.7386, -123.039, -20.988, 0.33", "-88.55, -124.35, -21.4568, 0.33", "-89.6682, -125.698, -22.3251, 0.33", "-90.5915, -126.638, -23.1262, 1.33", "-91.413, -127.449, -23.8622, 0.66", "-93.3684, -129.137, -25.6224, 0.66", "-95.4436, -130.676, -27.3802, 0.66", "-99.5427, -133.388, -30.7969, 0.33", "-100.17, -133.783, -31.2924, 0.33", "-101.115, -134.33, -31.9882, 0.66", "-103.621, -135.573, -33.6059, 0.33", "-104.752, -136.048, -34.1737, 0.33", "-105.389, -136.273, -34.3721, 0.33", "-107.569, -136.982, -34.6321, 0.33", "-110.141, -137.642, -35.1073, 0.66", "-111.489, -137.903, -35.3934, 0.33", "-111.91, -137.966, -35.4859, 0.66", "-113.327, -138.17, -35.8574, 0.33", "-114.898, -138.357, -36.2934, 0.66", "-117.731, -138.727, -37.2864, 0.33", "-118.6, -138.9, -37.5818, 0.66", "-119.875, -139.275, -38.1379, 0.33", "-120.642, -139.588, -38.5093, 0.33", "-121.228, -139.951, -38.8161, 0.66", "-123.249, -142.045, -39.9093, 0.33", "-123.697, -142.887, -40.1655, 0.66", "-124.348, -144.678, -40.6002, 0.33", "-124.671, -146.175, -40.8323, 0.33", "-124.829, -147.917, -41.0077, 0.33", "-124.838, -149.081, -41.0265, 0.33", "-124.796, -150.029, -40.9775, 0.66", "-124.815, -150.752, -40.9423, 0.33", "-124.975, -152.127, -40.8536, 0.66", "-125.242, -153.44, -40.8002, 0.66", "-125.923, -156.155, -40.6515, 0.33", "-126.149, -156.957, -40.5973, 0.66", "-126.961, -159.734, -40.3976, 0.33", "-127.198, -160.537, -40.3379, 0.66", "-127.671, -161.897, -40.2057, 0.33", "-127.958, -162.549, -40.1196, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-11.7331, -38.9792, -1.57345, 0.66", "-14.9037, -38.1392, -2.39011, 0.66", "-20.7362, -36.594, -3.89239, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "77.6702, 121.476, 5.25566, 0.33", "87.2087, 124.344, 10.6835, 0.33", "90.3734, 125.257, 12.0123, 0.33", "91.0361, 125.453, 12.2301, 0.66", "95.1723, 126.749, 12.8221, 0.33", "97.4283, 127.41, 13.1932, 0.66", "99.3491, 128.03, 13.5773, 0.33", "100.549, 128.463, 13.617, 0.33", "102.786, 129.349, 13.9629, 0.33", "106.764, 131.235, 15.0381, 0.66", "111.607, 134.454, 16.8923, 0.66", "113.722, 136.171, 17.9162, 0.66", "115.352, 137.674, 18.8382, 0.66", "117.311, 139.665, 20.0815, 0.66", "119.071, 141.667, 21.3141, 0.66", "122.643, 145.971, 23.9226, 0.66", "124.606, 148.491, 25.3279, 0.33", "125.443, 149.542, 25.9804, 0.66", "126.772, 151.185, 27.1384, 0.33", "128.244, 152.905, 28.2864, 0.66", "130.172, 154.991, 29.79, 0.33", "132.435, 157.173, 31.7326, 0.66", "134.026, 158.651, 33.0092, 0.33", "135.62, 160.291, 34.2268, 0.33", "139.05, 164.201, 36.9994, 0.66", "141.745, 167.584, 38.8051, 0.33", "143.125, 169.616, 39.4267, 1.33", "144.602, 171.701, 39.4981, 0.33", "146.723, 174.62, 39.9126, 0.33", "147.323, 175.37, 40.0939, 0.66", "150.369, 178.879, 41.3048, 0.66", "151.768, 180.378, 41.7152, 0.33", "154.701, 183.556, 42.5668, 0.66", "160.152, 189.376, 44.9401, 0.33", "161.845, 191.057, 45.8139, 0.33", "162.896, 192.089, 46.435, 0.33", "163.604, 192.767, 46.9807, 0.66", "165.585, 194.766, 48.7122, 0.33", "168.022, 197.664, 51.2551, 0.33", "169.044, 199.101, 51.852, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "77.6702, 121.476, 5.25566, 0.66", "79.3423, 125.435, 4.9396, 0.66", "80.7051, 129.442, 4.5324, 0.66", "81.8402, 133.025, 4.16232, 0.66", "83.1889, 137.592, 3.51193, 0.66", "84.2997, 141.7, 2.89023, 0.66", "86.1594, 148.792, 1.79906, 0.66", "86.8401, 151.875, 1.28339, 0.66", "87.3959, 154.672, 0.879953, 0.66", "88.1243, 158.551, 0.157576, 0.33", "88.837, 162.947, -0.777857, 0.66", "89.1563, 164.569, -1.14141, 0.66", "89.4751, 166.059, -1.47424, 0.66", "90.2299, 169.273, -2.16175, 0.66", "91.1112, 173.19, -2.98502, 0.66", "91.7396, 175.745, -3.41988, 0.66", "92.6896, 179.378, -4.29512, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "-27.8911, -603.103, -65.9546, 0.66", "-29.2145, -607.912, -67.4213, 0.66", "-29.1757, -611.017, -68.1605, 0.33", "-29.0903, -611.789, -68.3265, 0.66", "-28.6307, -615.939, -69.2191, 0.33", "-28.0899, -620.823, -70.2696, 0.33", "-27.6845, -624.484, -71.0572, 1.99", "-26.1361, -634.409, -72.256, 0.33", "-25.9678, -635.086, -72.3328, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-27.8911, -603.103, -65.9546, 0.33", "-29.1077, -601.63, -65.8053, 0.33", "-29.3835, -601.296, -65.7715, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-20.7362, -36.594, -3.89239, 0.66", "-25.8911, -37.9048, -2.08928, 0.66", "-27.5102, -38.2343, -1.54254, 0.66", "-32.3852, -39.2723, 0.0533581, 0.66", "-36.0109, -40.1605, 1.17182, 0.66", "-39.6948, -41.0943, 2.24017, 0.66", "-43.3173, -42.0702, 3.24536, 0.66", "-45.8691, -42.9545, 4.03256, 0.66", "-47.6992, -43.7478, 4.73117, 0.66", "-51.3572, -45.7618, 6.31783, 0.66", "-54.2036, -47.639, 7.62672, 0.66", "-55.3406, -48.5506, 8.20133, 0.66", "-59.7814, -52.5198, 10.5868, 0.66", "-63.9001, -56.5835, 12.579, 0.66", "-67.2033, -59.9832, 13.9391, 0.66", "-68.629, -61.5528, 14.3634, 0.66", "-70.565, -63.7174, 14.7013, 0.66", "-72.6295, -65.9703, 14.8002, 0.66", "-77.1593, -70.7318, 14.5199, 0.66", "-81.2616, -74.9831, 14.052, 0.66", "-83.9115, -77.6975, 13.9401, 0.66", "-86.472, -80.4819, 13.997, 0.33", "-87.2789, -81.3579, 14.0778, 0.66", "-90.8457, -85.4708, 14.7959, 0.66", "-92.2989, -87.1169, 15.3971, 0.66", "-95.1799, -90.2708, 17.0586, 0.66", "-97.0979, -92.4002, 18.3965, 0.66", "-98.1365, -93.5952, 19.1992, 0.66", "-99.9905, -95.6753, 20.691, 0.66", "-102.325, -98.2523, 22.5993, 0.66", "-105.507, -101.429, 25.1646, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-20.7362, -36.594, -3.89239, 0.33", "-22.257, -36.0585, -2.80734, 0.33", "-24.7154, -35.083, -1.1653, 0.66", "-25.8176, -34.6457, -0.429079, 0.66", "-28.7531, -33.4808, 1.53167, 0.66", "-31.5108, -32.3865, 3.37366, 0.66", "-34.134, -31.3456, 5.12582, 0.66", "-35.7508, -30.7799, 6.24453, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "92.6896, 179.378, -4.29512, 0.33", "95.2234, 181.744, -3.88852, 0.33", "96.2107, 182.685, -3.71449, 0.33", "97.2749, 183.695, -3.42113, 0.66", "98.975, 185.486, -2.80717, 0.33", "100.534, 187.189, -2.13211, 0.33", "101.352, 188.134, -1.63585, 0.33", "102.144, 189.155, -0.877297, 0.66", "103.137, 190.481, 0.274346, 0.66", "104.228, 191.999, 1.70829, 0.33", "104.649, 192.647, 2.36916, 0.66", "106.337, 195.272, 4.95062, 0.33", "107.152, 196.427, 6.02313, 0.66", "108.261, 197.756, 7.23828, 0.33", "108.577, 198.101, 7.53767, 0.66", "110.817, 200.256, 9.451, 0.33", "112.779, 202.08, 11.0656, 0.33", "113.622, 202.77, 11.5847, 0.66", "116.456, 204.953, 13.3213, 0.33", "117.64, 205.875, 14.0989, 0.66", "122.729, 209.806, 17.4517, 0.66", "125.433, 211.874, 19.2149, 0.66", "130.837, 215.991, 22.8716, 0.66", "134.896, 219.152, 25.6083, 0.66", "137.816, 221.434, 27.4957, 1.33" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "92.6896, 179.378, -4.29512, 0.33", "93.0791, 180.724, -5.68243, 0.33", "93.202, 181.309, -6.10281, 0.66", "93.424, 182.457, -6.77697, 0.33", "93.5671, 183.286, -7.17805, 0.66", "94.5074, 188.484, -9.36225, 0.33", "94.8107, 190.345, -10.0429, 0.33", "95.532, 194.373, -11.3659, 0.66", "95.8128, 196.068, -11.7909, 0.33", "96.0665, 198.049, -12.1508, 0.66", "96.2778, 199.519, -12.2865, 0.33", "96.5509, 201.164, -12.4007, 0.66", "96.8113, 202.796, -12.6128, 0.33", "97.3525, 205.433, -13.082, 0.66", "97.6988, 206.931, -13.3697, 0.33", "98.6438, 210.598, -14.1323, 0.66", "99.8362, 214.679, -14.9694, 0.33", "100.206, 215.628, -15.1777, 0.33", "100.81, 216.976, -15.628, 0.66", "101.533, 218.323, -16.2186, 0.33", "101.985, 219.075, -16.6563, 0.66", "102.812, 220.592, -17.4933, 0.33", "103.882, 222.46, -18.3239, 0.33", "106.342, 227.165, -20.1721, 0.33", "106.61, 227.734, -20.3722, 0.66", "108.468, 232.169, -21.6681, 0.33", "109.88, 236.109, -22.8289, 0.66", "110.731, 238.864, -23.5839, 0.33", "111.373, 241.254, -24.1175, 0.33", "112.081, 243.633, -24.5018, 0.33", "112.462, 244.886, -24.7301, 0.66", "113.995, 249.513, -25.6602, 0.33", "114.54, 250.845, -25.9248, 0.66", "115.241, 252.344, -26.0016, 0.66", "116.649, 254.746, -25.6761, 0.33", "116.913, 255.164, -25.5326, 0.66", "118.23, 257.143, -24.5544, 0.66", "120.815, 260.961, -21.7525, 0.66", "122.587, 263.726, -19.5733, 0.33", "122.768, 264.031, -19.2884, 0.66", "124.052, 266.389, -16.8942, 0.33", "124.212, 266.697, -16.5872, 0.66", "125.691, 269.586, -13.7998, 0.33", "127.332, 272.897, -10.9306, 0.66", "129.485, 277.354, -7.33313, 0.33", "129.658, 277.709, -7.04617, 0.66", "130.442, 279.344, -5.73985, 0.33", "131.155, 281.088, -4.85216, 0.33", "131.756, 283.098, -4.81993, 0.33", "132.024, 284.569, -5.32245, 0.66", "132.255, 286.188, -6.46301, 0.33", "132.419, 287.325, -7.38045, 0.66", "133.08, 292.684, -12.109, 0.33", "133.265, 293.761, -13.0251, 0.66", "133.512, 294.761, -13.8746, 0.66", "135.041, 300.651, -19.2626, 0.33", "135.369, 301.791, -20.3694, 0.33", "135.536, 302.251, -20.8103, 0.66", "138.052, 307.431, -25.0832, 0.33", "138.343, 307.95, -25.4873, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-105.507, -101.429, 25.1646, 0.66", "-112.548, -109.627, 27.9347, 0.66", "-114.582, -111.773, 28.7192, 0.66", "-116.72, -113.804, 29.4788, 0.66", "-119.585, -116.325, 30.4322, 0.66", "-122.14, -118.493, 31.2263, 0.66", "-124.126, -120.177, 31.8112, 0.33", "-127.084, -122.398, 32.4331, 0.66", "-130.758, -125.236, 33.1984, 0.66", "-132.385, -126.509, 33.5321, 0.66", "-135.017, -128.518, 34.0587, 0.66", "-136.692, -129.794, 34.3039, 0.33", "-138.519, -131.4, 34.4537, 0.66", "-141.867, -134.823, 34.4483, 0.66", "-143.013, -136.128, 34.4164, 0.66", "-143.839, -137.068, 34.402, 0.66", "-146.734, -140.388, 34.3768, 0.33", "-147.877, -141.763, 34.3802, 0.33", "-148.139, -142.099, 34.3794, 0.66", "-150.465, -145.072, 34.4116, 0.33", "-152.059, -147.252, 34.4943, 0.66", "-152.883, -148.293, 34.6297, 0.33", "-153.979, -149.554, 35.0865, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-105.507, -101.429, 25.1646, 0.33", "-105.667, -101.341, 26.1186, 0.33", "-106.09, -101.109, 28.6531, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-35.7508, -30.7799, 6.24453, 0.66", "-35.1353, -29.4111, 5.70651, 0.66" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-35.7508, -30.7799, 6.24453, 0.66", "-38.721, -30.0411, 8.65777, 0.66", "-40.2788, -29.6639, 9.73383, 0.66", "-42.164, -29.2796, 10.865, 0.66", "-46.1194, -28.6871, 12.8447, 0.66", "-49.4024, -28.318, 14.1334, 0.66", "-51.6855, -28.0613, 15.0297, 0.33", "-53.9308, -27.8577, 15.674, 0.66", "-56.0578, -27.7037, 16.137, 0.33", "-59.0003, -27.6969, 16.4917, 0.66", "-62.5444, -27.9759, 15.8792, 0.33" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_1", "apic_1", "apic_1", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_8", "dend_8", "dend_3", "dend_3", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_7", "apic_7", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_8", "apic_8", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_9", "apic_9", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_BTC_9deeb00a62_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_22, id: apic_22, parent: apic_6
create apic_22
public apic_22
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_17, id: apic_17, parent: apic_7
create apic_17
public apic_17
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_8
create apic_16
public apic_16
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999995461318083)
    connect dend_0(0), soma_0(0.4999995461318083)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_22(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_17(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.10599, -10.005, -3.63045, 2.05199 ) }
    soma_0 { pt3dadd( 1.00994, -8.98941, -3.26388, 3.40229 ) }
    soma_0 { pt3dadd( 0.913884, -7.97383, -2.89732, 4.43836 ) }
    soma_0 { pt3dadd( 0.817831, -6.95825, -2.53075, 5.9106 ) }
    soma_0 { pt3dadd( 0.721777, -5.94268, -2.16418, 7.4154 ) }
    soma_0 { pt3dadd( 0.625724, -4.9271, -1.79761, 8.65317 ) }
    soma_0 { pt3dadd( 0.52967, -3.91152, -1.43104, 9.36003 ) }
    soma_0 { pt3dadd( 0.433616, -2.89594, -1.06447, 10.0585 ) }
    soma_0 { pt3dadd( 0.337563, -1.88037, -0.697906, 10.4351 ) }
    soma_0 { pt3dadd( 0.241509, -0.864787, -0.331337, 10.6941 ) }
    soma_0 { pt3dadd( 0.145456, 0.150791, 0.0352311, 10.9531 ) }
    soma_0 { pt3dadd( 0.0494021, 1.16637, 0.4018, 11.2338 ) }
    soma_0 { pt3dadd( -0.0466515, 2.18195, 0.768368, 11.5118 ) }
    soma_0 { pt3dadd( -0.142705, 3.19752, 1.13494, 11.7095 ) }
    soma_0 { pt3dadd( -0.238759, 4.2131, 1.5015, 10.7536 ) }
    soma_0 { pt3dadd( -0.334812, 5.22868, 1.86807, 9.97 ) }
    soma_0 { pt3dadd( -0.430866, 6.24426, 2.23464, 9.36435 ) }
    soma_0 { pt3dadd( -0.526919, 7.25984, 2.60121, 8.19972 ) }
    soma_0 { pt3dadd( -0.622973, 8.27541, 2.96778, 6.07377 ) }
    soma_0 { pt3dadd( -0.719027, 9.29099, 3.33435, 3.38096 ) }
    soma_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 2.12602 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.00111, -10.0801, -3.03985, 2.66 ) }
    apic_0 { pt3dadd( 1.35618, -16.3883, -3.53418, 2.66 ) }
    apic_0 { pt3dadd( 1.7446, -23.2888, -4.07494, 2.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.84111, 9.92238, 0.260152, 2.66 ) }
    dend_0 { pt3dadd( 4.0026, 10.5253, 4.56667, 2.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -2.22748, 25.24, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.66 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 29/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 1.7446, -23.2888, -4.07494, 2.66 ) }
    apic_4 { pt3dadd( 1.7695, -23.6698, -2.40356, 2.66 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 31/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.7446, -23.2888, -4.07494, 0.66 ) }
    apic_1 { pt3dadd( 4.82349, -26.0967, -4.36532, 0.66 ) }
    apic_1 { pt3dadd( 8.47331, -29.4252, -4.70955, 0.66 ) }
    apic_1 { pt3dadd( 11.3709, -32.0678, -4.98283, 0.66 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 35/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.0026, 10.5253, 4.56667, 1.99 ) }
    dend_2 { pt3dadd( 4.54206, 16.1562, 2.93806, 1.99 ) }
    dend_2 { pt3dadd( 4.91465, 20.0453, 1.81323, 1.99 ) }
    dend_2 { pt3dadd( 5.23925, 23.4335, 0.83327, 1.99 ) }
    dend_2 { pt3dadd( 5.62406, 27.4502, -0.328466, 1.99 ) }
    dend_2 { pt3dadd( 6.04121, 31.8045, -1.58785, 1.99 ) }
    dend_2 { pt3dadd( 6.34561, 34.9818, -2.50681, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.0026, 10.5253, 4.56667, 1.33 ) }
    dend_1 { pt3dadd( 4.48371, 19.0979, 6.56344, 1.33 ) }
    dend_1 { pt3dadd( 4.97909, 25.7721, 8.19209, 1.33 ) }
    dend_1 { pt3dadd( 5.58793, 31.5462, 9.53274, 1.33 ) }
    dend_1 { pt3dadd( 6.3441, 37.7723, 10.7395, 0.66 ) }
    dend_1 { pt3dadd( 6.87335, 41.2895, 11.3403, 0.66 ) }
    dend_1 { pt3dadd( 7.74178, 46.6904, 12.0078, 0.66 ) }
    dend_1 { pt3dadd( 8.24316, 49.4681, 12.2778, 0.66 ) }
    dend_1 { pt3dadd( 9.20611, 54.0989, 12.3639, 0.66 ) }
    dend_1 { pt3dadd( 11.4194, 63.0552, 12.3344, 0.66 ) }
    dend_1 { pt3dadd( 12.3502, 66.805, 12.2759, 0.66 ) }
    dend_1 { pt3dadd( 13.7166, 72.7978, 12.1847, 0.66 ) }
    dend_1 { pt3dadd( 14.3445, 75.9005, 12.1289, 0.66 ) }
    dend_1 { pt3dadd( 15.0932, 79.6788, 12.0461, 0.66 ) }
    dend_1 { pt3dadd( 16.1622, 85.7215, 12.0062, 0.66 ) }
    dend_1 { pt3dadd( 16.7564, 88.859, 12.05, 0.66 ) }
    dend_1 { pt3dadd( 17.5357, 93.3832, 12.2433, 0.66 ) }
    dend_1 { pt3dadd( 18.1807, 97.7944, 12.6232, 0.66 ) }
    dend_1 { pt3dadd( 18.6038, 101.116, 12.9207, 0.66 ) }
    dend_1 { pt3dadd( 19.1015, 104.417, 13.2437, 0.66 ) }
    dend_1 { pt3dadd( 20.0855, 110.498, 13.962, 0.66 ) }
    dend_1 { pt3dadd( 20.9428, 114.896, 14.6662, 0.66 ) }
    dend_1 { pt3dadd( 21.7829, 118.912, 15.5947, 0.66 ) }
    dend_1 { pt3dadd( 22.508, 121.554, 16.3424, 0.66 ) }
    dend_1 { pt3dadd( 23.2136, 124.012, 17.0963, 0.66 ) }
    dend_1 { pt3dadd( 24.2337, 127.026, 18.0737, 0.66 ) }
    dend_1 { pt3dadd( 25.3488, 130.01, 19.1056, 0.66 ) }
    dend_1 { pt3dadd( 27.1907, 134.079, 20.4425, 0.66 ) }
    dend_1 { pt3dadd( 29.5443, 138.871, 21.9643, 0.66 ) }
    dend_1 { pt3dadd( 31.1436, 142.281, 23.0085, 0.66 ) }
    dend_1 { pt3dadd( 32.0096, 144.242, 23.5326, 0.33 ) }
    dend_1 { pt3dadd( 32.5778, 145.493, 23.804, 0.66 ) }
    dend_1 { pt3dadd( 34.0347, 148.835, 24.4494, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 75/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -5.05227, 55.1067, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -6.46467, 70.04, 3.70092, 0.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 78/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 1.7695, -23.6698, -2.40356, 2.0 ) }
    apic_6 { pt3dadd( 1.0029, -25.889, -7.63439, 2.0 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 80/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 1.7695, -23.6698, -2.40356, 0.66 ) }
    apic_5 { pt3dadd( 1.31576, -27.1237, -0.0974289, 0.66 ) }
    apic_5 { pt3dadd( 1.01901, -29.4184, 1.32484, 0.66 ) }
    apic_5 { pt3dadd( 0.800715, -31.0546, 2.16071, 0.66 ) }
    apic_5 { pt3dadd( -0.0248707, -36.0406, 5.16697, 0.66 ) }
    apic_5 { pt3dadd( -0.241695, -37.5374, 6.20286, 0.66 ) }
    apic_5 { pt3dadd( -0.483235, -39.321, 7.50137, 0.33 ) }
    apic_5 { pt3dadd( -0.594061, -40.0586, 8.06569, 0.66 ) }
    apic_5 { pt3dadd( -0.928885, -42.2234, 9.75285, 0.66 ) }
    apic_5 { pt3dadd( -1.44486, -47.8112, 13.9643, 0.66 ) }
    apic_5 { pt3dadd( -1.65393, -50.6929, 15.7723, 0.33 ) }
    apic_5 { pt3dadd( -1.70362, -51.2456, 16.0788, 0.66 ) }
    apic_5 { pt3dadd( -1.91953, -53.3488, 17.2206, 0.66 ) }
    apic_5 { pt3dadd( -2.06538, -55.1731, 18.1559, 0.33 ) }
    apic_5 { pt3dadd( -2.12573, -56.0023, 18.5478, 0.66 ) }
    apic_5 { pt3dadd( -2.37843, -59.4176, 19.4359, 0.33 ) }
    apic_5 { pt3dadd( -2.72806, -62.5286, 20.0974, 0.66 ) }
    apic_5 { pt3dadd( -3.09311, -65.7236, 20.8372, 0.33 ) }
    apic_5 { pt3dadd( -3.17002, -66.3394, 21.0007, 0.66 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 99/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 11.3709, -32.0678, -4.98283, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_3 { pt3dadd( 15.5135, -31.9503, -6.24685, 0.66 ) }
    apic_3 { pt3dadd( 19.6883, -31.9264, -7.63002, 0.66 ) }
    apic_3 { pt3dadd( 28.5969, -32.1493, -10.5544, 0.66 ) }
    apic_3 { pt3dadd( 33.9168, -32.2381, -11.9385, 0.66 ) }
    apic_3 { pt3dadd( 39.3534, -32.3789, -13.0992, 0.66 ) }
    apic_3 { pt3dadd( 43.9695, -32.4962, -13.9625, 0.66 ) }
    apic_3 { pt3dadd( 48.0505, -32.8567, -14.545, 0.66 ) }
    apic_3 { pt3dadd( 53.424, -33.5367, -15.155, 0.66 ) }
    apic_3 { pt3dadd( 60.3474, -34.448, -15.4843, 0.66 ) }
    apic_3 { pt3dadd( 63.5735, -34.8517, -15.6918, 0.66 ) }
    apic_3 { pt3dadd( 66.0964, -35.1226, -15.9315, 0.33 ) }
    apic_3 { pt3dadd( 71.9967, -35.7241, -16.2838, 0.66 ) }
    apic_3 { pt3dadd( 76.4323, -36.1947, -16.4567, 0.66 ) }
    apic_3 { pt3dadd( 78.7388, -36.4395, -16.5825, 0.66 ) }
    apic_3 { pt3dadd( 81.3694, -36.6915, -16.8087, 0.33 ) }
    apic_3 { pt3dadd( 84.0018, -36.7746, -17.1059, 0.66 ) }
    apic_3 { pt3dadd( 87.2915, -36.7173, -17.6838, 0.66 ) }
    apic_3 { pt3dadd( 90.4117, -36.5231, -18.4678, 0.33 ) }
    apic_3 { pt3dadd( 92.0431, -36.4155, -18.8356, 0.66 ) }
    apic_3 { pt3dadd( 94.7839, -36.2527, -19.5553, 0.33 ) }
    apic_3 { pt3dadd( 99.2609, -35.9427, -20.9498, 0.66 ) }
    apic_3 { pt3dadd( 104.127, -35.7736, -22.5163, 0.66 ) }
    apic_3 { pt3dadd( 106.036, -35.781, -23.2002, 0.33 ) }
    apic_3 { pt3dadd( 110.497, -35.8881, -24.8597, 0.66 ) }
    apic_3 { pt3dadd( 115.763, -36.1244, -26.8439, 0.33 ) }
    apic_3 { pt3dadd( 118.305, -36.3945, -27.8829, 1.33 ) }
    apic_3 { pt3dadd( 120.982, -36.8541, -28.93, 0.66 ) }
    apic_3 { pt3dadd( 122.979, -37.3705, -29.6426, 0.33 ) }
    apic_3 { pt3dadd( 124.147, -37.7654, -30.0732, 0.66 ) }
    apic_3 { pt3dadd( 125.68, -38.4787, -30.7821, 0.33 ) }
    apic_3 { pt3dadd( 129.192, -40.577, -32.488, 1.33 ) }
    apic_3 { pt3dadd( 130.479, -41.3539, -33.1431, 0.66 ) }
    apic_3 { pt3dadd( 134.377, -43.6264, -35.1434, 0.33 ) }
    apic_3 { pt3dadd( 135.028, -43.9406, -35.546, 0.33 ) }
    apic_3 { pt3dadd( 137.969, -45.3395, -37.4343, 0.66 ) }
    apic_3 { pt3dadd( 140.789, -46.706, -39.3116, 0.33 ) }
    apic_3 { pt3dadd( 142.776, -47.583, -40.6044, 1.33 ) }
    apic_3 { pt3dadd( 145.602, -48.6274, -42.6848, 0.33 ) }
    apic_3 { pt3dadd( 151.109, -50.0374, -47.4722, 0.66 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 39/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 11.3709, -32.0678, -4.98283, 0.66 ) }
    apic_2 { pt3dadd( 11.6199, -34.8087, -2.51156, 0.66 ) }
    apic_2 { pt3dadd( 11.3922, -36.9112, -0.43836, 0.66 ) }
    apic_2 { pt3dadd( 11.2935, -37.6819, 0.316983, 0.66 ) }
    apic_2 { pt3dadd( 10.9419, -40.45, 3.01937, 0.66 ) }
    apic_2 { pt3dadd( 10.1445, -44.6174, 7.06737, 0.66 ) }
    apic_2 { pt3dadd( 10.007, -45.2295, 7.66834, 1.33 ) }
    apic_2 { pt3dadd( 8.79559, -48.8427, 11.2429, 0.33 ) }
    apic_2 { pt3dadd( 8.44178, -49.9245, 12.5142, 0.33 ) }
    apic_2 { pt3dadd( 8.36539, -50.1608, 12.81, 0.66 ) }
    apic_2 { pt3dadd( 7.92563, -51.8621, 15.131, 0.33 ) }
    apic_2 { pt3dadd( 7.62703, -53.3139, 17.3575, 0.66 ) }
    apic_2 { pt3dadd( 7.53763, -54.2694, 19.0028, 0.66 ) }
    apic_2 { pt3dadd( 8.11719, -58.0422, 26.7762, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.34561, 34.9818, -2.50681, 1.33 ) }
    dend_8 { pt3dadd( 9.77176, 38.9353, -8.76502, 1.33 ) }
    dend_8 { pt3dadd( 11.7492, 41.2171, -12.3771, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.34561, 34.9818, -2.50681, 1.33 ) }
    dend_3 { pt3dadd( 3.93483, 39.3838, -13.1088, 1.33 ) }
    dend_3 { pt3dadd( 2.44835, 42.0981, -19.646, 1.33 ) }
    // Section: apic_22, id: apic_22, parent: apic_6 (entry count 59/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 1.0029, -25.889, -7.63439, 0.66 ) }
    apic_22 { pt3dadd( 1.67852, -25.2995, -9.35037, 0.66 ) }
    apic_22 { pt3dadd( 2.12624, -24.8495, -10.6267, 0.66 ) }
    apic_22 { pt3dadd( 4.09271, -22.9339, -17.4194, 0.66 ) }
    apic_22 { pt3dadd( 4.9925, -21.8129, -23.2722, 0.66 ) }
    apic_22 { pt3dadd( 5.26632, -21.5321, -25.9799, 0.66 ) }
    apic_22 { pt3dadd( 5.53464, -21.2793, -28.9992, 0.66 ) }
    apic_22 { pt3dadd( 5.99026, -21.1078, -34.8084, 0.66 ) }
    apic_22 { pt3dadd( 6.14265, -21.243, -38.8644, 0.66 ) }
    apic_22 { pt3dadd( 5.93814, -21.9999, -48.6864, 0.66 ) }
    apic_22 { pt3dadd( 5.63916, -22.6041, -55.8774, 0.66 ) }
    apic_22 { pt3dadd( 5.54209, -22.8521, -57.7777, 0.66 ) }
    apic_22 { pt3dadd( 5.40268, -23.3358, -60.3564, 0.66 ) }
    apic_22 { pt3dadd( 5.10513, -24.9092, -68.0842, 0.66 ) }
    apic_22 { pt3dadd( 5.2813, -26.7931, -77.4153, 0.66 ) }
    apic_22 { pt3dadd( 5.73672, -27.3588, -80.8047, 0.66 ) }
    apic_22 { pt3dadd( 6.32409, -27.7352, -84.6743, 0.66 ) }
    apic_22 { pt3dadd( 6.76143, -27.9571, -87.2455, 0.66 ) }
    apic_22 { pt3dadd( 8.83889, -28.8223, -97.8424, 0.66 ) }
    apic_22 { pt3dadd( 9.20929, -28.9711, -99.4981, 0.66 ) }
    apic_22 { pt3dadd( 11.8988, -30.1345, -111.565, 0.66 ) }
    apic_22 { pt3dadd( 13.843, -30.8831, -119.648, 0.33 ) }
    apic_22 { pt3dadd( 14.0597, -30.9392, -120.471, 1.33 ) }
    apic_22 { pt3dadd( 14.5518, -31.0557, -122.045, 0.66 ) }
    apic_22 { pt3dadd( 16.6912, -31.6461, -127.864, 0.33 ) }
    apic_22 { pt3dadd( 17.9903, -31.9638, -130.913, 1.33 ) }
    apic_22 { pt3dadd( 19.0366, -32.2908, -132.664, 0.33 ) }
    apic_22 { pt3dadd( 19.6853, -32.4827, -133.565, 0.66 ) }
    apic_22 { pt3dadd( 22.1653, -33.0602, -137.519, 0.33 ) }
    apic_22 { pt3dadd( 22.6937, -33.189, -138.519, 1.33 ) }
    apic_22 { pt3dadd( 23.3652, -33.3362, -139.759, 0.66 ) }
    apic_22 { pt3dadd( 24.5701, -33.547, -142.019, 0.33 ) }
    apic_22 { pt3dadd( 25.8738, -33.7573, -144.582, 1.33 ) }
    apic_22 { pt3dadd( 29.7419, -34.1924, -152.818, 0.33 ) }
    apic_22 { pt3dadd( 31.8872, -34.3964, -158.204, 0.33 ) }
    apic_22 { pt3dadd( 32.8654, -34.53, -160.785, 0.33 ) }
    apic_22 { pt3dadd( 33.2576, -34.5927, -161.846, 0.33 ) }
    apic_22 { pt3dadd( 33.7238, -34.6213, -163.031, 0.33 ) }
    apic_22 { pt3dadd( 35.9852, -34.6084, -167.915, 0.66 ) }
    apic_22 { pt3dadd( 39.8879, -34.2391, -175.224, 0.33 ) }
    apic_22 { pt3dadd( 41.2657, -33.986, -177.699, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_22 { pt3dadd( 42.6265, -33.662, -180.323, 0.66 ) }
    apic_22 { pt3dadd( 45.6588, -32.8291, -186.149, 0.33 ) }
    apic_22 { pt3dadd( 46.7462, -32.4611, -188.147, 0.66 ) }
    apic_22 { pt3dadd( 47.709, -32.0795, -189.614, 0.33 ) }
    apic_22 { pt3dadd( 47.9379, -31.9476, -189.912, 0.66 ) }
    apic_22 { pt3dadd( 51.2087, -29.4339, -195.256, 0.33 ) }
    apic_22 { pt3dadd( 51.7063, -29.0059, -196.268, 0.66 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 7/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 1.0029, -25.889, -7.63439, 1.33 ) }
    apic_7 { pt3dadd( 0.570583, -28.5927, -10.0411, 1.33 ) }
    apic_7 { pt3dadd( -0.119369, -32.9076, -13.882, 1.99 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 10/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 11.7492, 41.2171, -12.3771, 1.33 ) }
    dend_12 { pt3dadd( 14.1507, 43.0016, -9.79964, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 11.7492, 41.2171, -12.3771, 0.66 ) }
    dend_9 { pt3dadd( 11.4014, 42.927, -13.0899, 0.66 ) }
    dend_9 { pt3dadd( 11.1742, 44.4286, -13.6919, 0.66 ) }
    dend_9 { pt3dadd( 10.9605, 46.2633, -14.2341, 0.66 ) }
    dend_9 { pt3dadd( 10.747, 49.0067, -14.8874, 0.66 ) }
    dend_9 { pt3dadd( 10.5043, 54.0971, -15.8577, 0.66 ) }
    dend_9 { pt3dadd( 10.4881, 56.0649, -16.1681, 0.66 ) }
    dend_9 { pt3dadd( 10.5659, 57.9712, -16.3708, 0.66 ) }
    dend_9 { pt3dadd( 10.8091, 60.9967, -16.6882, 0.66 ) }
    dend_9 { pt3dadd( 10.9464, 62.2089, -16.7794, 0.66 ) }
    dend_9 { pt3dadd( 11.2461, 64.388, -16.8581, 0.66 ) }
    dend_9 { pt3dadd( 11.4332, 66.215, -16.8264, 0.66 ) }
    dend_9 { pt3dadd( 11.7212, 70.8751, -17.1078, 0.66 ) }
    dend_9 { pt3dadd( 11.8225, 74.7214, -17.5756, 0.66 ) }
    dend_9 { pt3dadd( 11.7692, 77.2881, -18.0325, 0.66 ) }
    dend_9 { pt3dadd( 11.6516, 79.7536, -18.5115, 0.66 ) }
    dend_9 { pt3dadd( 11.4908, 82.2692, -19.1066, 0.66 ) }
    dend_9 { pt3dadd( 11.1053, 86.8874, -20.2509, 0.66 ) }
    dend_9 { pt3dadd( 10.9203, 89.2634, -20.8526, 0.66 ) }
    dend_9 { pt3dadd( 10.6261, 93.1439, -21.7531, 0.66 ) }
    dend_9 { pt3dadd( 10.5147, 95.082, -22.207, 0.33 ) }
    dend_9 { pt3dadd( 10.4054, 98.0095, -22.8096, 0.66 ) }
    dend_9 { pt3dadd( 10.4263, 99.9615, -23.1132, 0.66 ) }
    dend_9 { pt3dadd( 10.5289, 101.895, -23.2397, 0.66 ) }
    dend_9 { pt3dadd( 10.6161, 103.563, -23.3666, 0.33 ) }
    dend_9 { pt3dadd( 10.7272, 105.15, -23.4714, 0.66 ) }
    dend_9 { pt3dadd( 10.8053, 106.62, -23.5576, 0.33 ) }
    dend_9 { pt3dadd( 10.8759, 107.839, -23.6066, 0.66 ) }
    dend_9 { pt3dadd( 10.9701, 110.39, -23.9153, 0.33 ) }
    dend_9 { pt3dadd( 10.9674, 112.267, -24.2073, 0.66 ) }
    dend_9 { pt3dadd( 10.9692, 114.417, -24.5958, 0.66 ) }
    dend_9 { pt3dadd( 11.0128, 115.487, -24.8153, 0.33 ) }
    dend_9 { pt3dadd( 11.084, 116.559, -25.0151, 0.33 ) }
    dend_9 { pt3dadd( 11.2693, 118.701, -25.355, 0.66 ) }
    dend_9 { pt3dadd( 11.4018, 120.163, -25.5014, 0.33 ) }
    dend_9 { pt3dadd( 11.5785, 121.136, -25.5438, 0.33 ) }
    dend_9 { pt3dadd( 11.8372, 122.839, -25.5902, 0.66 ) }
    dend_9 { pt3dadd( 12.1311, 125.346, -25.7198, 0.66 ) }
    dend_9 { pt3dadd( 12.1733, 126.206, -25.7934, 0.66 ) }
    dend_9 { pt3dadd( 12.1077, 129.228, -26.002, 0.66 ) }
    dend_9 { pt3dadd( 11.8656, 131.155, -26.0472, 0.66 ) }
    dend_9 { pt3dadd( 11.003, 134.785, -26.1175, 0.66 ) }
    dend_9 { pt3dadd( 10.0357, 137.679, -26.1597, 0.66 ) }
    dend_9 { pt3dadd( 9.06782, 140.22, -26.1289, 0.33 ) }
    dend_9 { pt3dadd( 8.13582, 142.441, -26.0245, 0.66 ) }
    dend_9 { pt3dadd( 6.57906, 145.862, -25.7172, 0.33 ) }
    dend_9 { pt3dadd( 5.68599, 147.899, -25.408, 0.66 ) }
    dend_9 { pt3dadd( 4.91847, 150.041, -24.8958, 0.66 ) }
    dend_9 { pt3dadd( 4.1978, 152.558, -24.1394, 0.33 ) }
    dend_9 { pt3dadd( 4.00434, 153.664, -23.8181, 0.66 ) }
    dend_9 { pt3dadd( 3.93601, 154.465, -23.5177, 0.66 ) }
    dend_9 { pt3dadd( 3.98029, 156.849, -22.3988, 0.33 ) }
    dend_9 { pt3dadd( 4.0783, 157.928, -21.7654, 0.66 ) }
    dend_9 { pt3dadd( 4.30043, 159.313, -20.8501, 0.33 ) }
    dend_9 { pt3dadd( 4.55397, 160.463, -20.062, 0.66 ) }
    dend_9 { pt3dadd( 5.79007, 165.13, -16.8722, 0.66 ) }
    dend_9 { pt3dadd( 6.2172, 166.53, -15.9533, 0.33 ) }
    dend_9 { pt3dadd( 6.68787, 167.84, -15.1254, 0.33 ) }
    dend_9 { pt3dadd( 6.95924, 168.612, -14.6201, 0.66 ) }
    dend_9 { pt3dadd( 7.34999, 169.72, -13.8945, 0.33 ) }
    dend_9 { pt3dadd( 7.69693, 170.851, -13.241, 0.33 ) }
    dend_9 { pt3dadd( 8.01532, 172.118, -12.5942, 0.33 ) }
    dend_9 { pt3dadd( 8.0583, 172.336, -12.4412, 0.66 ) }
    dend_9 { pt3dadd( 8.46097, 174.901, -10.4153, 0.33 ) }
    dend_9 { pt3dadd( 8.53655, 175.651, -9.80197, 0.33 ) }
    dend_9 { pt3dadd( 8.57365, 176.069, -9.46656, 0.66 ) }
    dend_9 { pt3dadd( 8.91838, 178.761, -7.47766, 0.33 ) }
    dend_9 { pt3dadd( 8.94977, 178.995, -7.33094, 0.66 ) }
    dend_9 { pt3dadd( 9.32539, 180.994, -6.41025, 0.33 ) }
    dend_9 { pt3dadd( 9.46907, 181.72, -6.19341, 0.66 ) }
    dend_9 { pt3dadd( 9.97273, 184.516, -5.27072, 0.33 ) }
    dend_9 { pt3dadd( 10.2743, 186.036, -4.93354, 0.33 ) }
    dend_9 { pt3dadd( 10.544, 187.426, -4.74443, 0.33 ) }
    dend_9 { pt3dadd( 11.132, 191.048, -4.21948, 0.66 ) }
    dend_9 { pt3dadd( 11.6779, 194.611, -3.69657, 0.66 ) }
    dend_9 { pt3dadd( 12.2783, 199.293, -3.01469, 0.66 ) }
    dend_9 { pt3dadd( 12.7973, 204.869, -2.41443, 0.66 ) }
    dend_9 { pt3dadd( 12.9563, 207.46, -2.267, 0.33 ) }
    dend_9 { pt3dadd( 13.2162, 213.323, -1.99378, 0.66 ) }
    dend_9 { pt3dadd( 13.2316, 214.426, -1.97923, 0.66 ) }
    dend_9 { pt3dadd( 13.2357, 215.981, -2.02815, 0.66 ) }
    dend_9 { pt3dadd( 13.1407, 219.338, -2.39331, 0.66 ) }
    dend_9 { pt3dadd( 12.8412, 222.507, -2.34162, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 95/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.44835, 42.0981, -19.646, 0.66 ) }
    dend_7 { pt3dadd( 2.17631, 43.8797, -21.0687, 0.66 ) }
    dend_7 { pt3dadd( 1.83949, 45.5468, -22.5794, 0.66 ) }
    dend_7 { pt3dadd( 1.07688, 48.3028, -25.1908, 0.66 ) }
    dend_7 { pt3dadd( -0.619182, 53.274, -30.3226, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( -1.28509, 54.9357, -32.0825, 0.66 ) }
    dend_7 { pt3dadd( -2.7744, 58.4196, -35.7933, 0.66 ) }
    dend_7 { pt3dadd( -4.09622, 60.9442, -38.6878, 0.66 ) }
    dend_7 { pt3dadd( -4.75509, 62.1025, -40.2136, 0.66 ) }
    dend_7 { pt3dadd( -6.95049, 65.7623, -45.62, 0.66 ) }
    dend_7 { pt3dadd( -7.42528, 66.6564, -46.8626, 0.66 ) }
    dend_7 { pt3dadd( -8.0745, 67.8887, -48.5312, 0.66 ) }
    dend_7 { pt3dadd( -8.44572, 68.7328, -49.6195, 0.33 ) }
    dend_7 { pt3dadd( -10.0995, 73.5335, -55.4671, 0.66 ) }
    dend_7 { pt3dadd( -10.3277, 74.5643, -56.644, 1.33 ) }
    dend_7 { pt3dadd( -10.6241, 76.4016, -58.5543, 0.33 ) }
    dend_7 { pt3dadd( -10.7495, 77.218, -59.3728, 0.66 ) }
    dend_7 { pt3dadd( -11.2896, 80.4345, -62.3307, 0.33 ) }
    dend_7 { pt3dadd( -11.6073, 82.4739, -64.063, 1.33 ) }
    dend_7 { pt3dadd( -12.5076, 86.772, -67.4118, 0.66 ) }
    dend_7 { pt3dadd( -12.8558, 87.9703, -68.4619, 0.66 ) }
    dend_7 { pt3dadd( -13.6508, 90.1409, -70.5524, 0.66 ) }
    dend_7 { pt3dadd( -14.1754, 91.2642, -71.765, 0.66 ) }
    dend_7 { pt3dadd( -15.59, 93.8659, -74.7675, 0.66 ) }
    dend_7 { pt3dadd( -16.9639, 96.1124, -77.4778, 0.66 ) }
    dend_7 { pt3dadd( -18.9525, 99.2266, -81.0564, 0.33 ) }
    dend_7 { pt3dadd( -19.3917, 99.9468, -81.8729, 0.66 ) }
    dend_7 { pt3dadd( -21.6002, 103.693, -86.1008, 0.33 ) }
    dend_7 { pt3dadd( -22.0804, 104.554, -87.043, 0.33 ) }
    dend_7 { pt3dadd( -22.9152, 106.098, -88.4885, 1.33 ) }
    dend_7 { pt3dadd( -23.7502, 107.72, -89.9357, 0.33 ) }
    dend_7 { pt3dadd( -24.195, 108.636, -90.7117, 0.66 ) }
    dend_7 { pt3dadd( -26.6279, 113.592, -94.857, 0.33 ) }
    dend_7 { pt3dadd( -27.2209, 114.813, -95.747, 0.33 ) }
    dend_7 { pt3dadd( -28.299, 116.973, -97.3002, 0.66 ) }
    dend_7 { pt3dadd( -30.927, 122.804, -102.13, 0.33 ) }
    dend_7 { pt3dadd( -31.3971, 123.964, -103.152, 0.33 ) }
    dend_7 { pt3dadd( -32.3045, 126.398, -105.393, 0.66 ) }
    dend_7 { pt3dadd( -33.1848, 128.963, -107.812, 0.33 ) }
    dend_7 { pt3dadd( -33.9427, 131.252, -110.207, 0.66 ) }
    dend_7 { pt3dadd( -35.7236, 137.089, -116.756, 0.33 ) }
    dend_7 { pt3dadd( -36.2917, 138.851, -118.797, 0.66 ) }
    dend_7 { pt3dadd( -37.3035, 141.475, -121.93, 0.33 ) }
    dend_7 { pt3dadd( -37.624, 142.247, -122.909, 0.66 ) }
    dend_7 { pt3dadd( -38.8232, 144.968, -126.267, 0.66 ) }
    dend_7 { pt3dadd( -39.9909, 147.591, -129.114, 0.33 ) }
    dend_7 { pt3dadd( -41.1626, 150.161, -131.767, 0.66 ) }
    dend_7 { pt3dadd( -42.2554, 152.547, -134.323, 0.66 ) }
    dend_7 { pt3dadd( -44.2319, 156.776, -139.248, 0.66 ) }
    dend_7 { pt3dadd( -45.2964, 158.95, -141.896, 0.33 ) }
    dend_7 { pt3dadd( -46.5367, 161.348, -144.993, 0.66 ) }
    dend_7 { pt3dadd( -50.378, 169.132, -154.931, 0.66 ) }
    dend_7 { pt3dadd( -51.2583, 170.928, -157.347, 0.66 ) }
    dend_7 { pt3dadd( -53.2882, 174.797, -162.677, 0.33 ) }
    dend_7 { pt3dadd( -53.8432, 175.817, -164.128, 0.66 ) }
    dend_7 { pt3dadd( -55.796, 179.279, -169.185, 0.33 ) }
    dend_7 { pt3dadd( -57.3368, 181.883, -172.839, 0.66 ) }
    dend_7 { pt3dadd( -60.9427, 187.349, -180.635, 0.66 ) }
    dend_7 { pt3dadd( -62.1077, 189.027, -183.137, 1.99 ) }
    dend_7 { pt3dadd( -66.0118, 194.308, -191.337, 0.66 ) }
    dend_7 { pt3dadd( -67.0316, 195.665, -193.479, 0.66 ) }
    dend_7 { pt3dadd( -67.9411, 196.835, -195.316, 0.66 ) }
    dend_7 { pt3dadd( -73.5011, 203.92, -206.954, 0.66 ) }
    dend_7 { pt3dadd( -75.3182, 206.379, -210.856, 0.33 ) }
    dend_7 { pt3dadd( -76.6654, 208.203, -213.96, 0.66 ) }
    dend_7 { pt3dadd( -77.8179, 209.651, -216.411, 0.66 ) }
    dend_7 { pt3dadd( -79.2651, 211.426, -219.478, 0.66 ) }
    dend_7 { pt3dadd( -83.0556, 216.092, -227.516, 0.66 ) }
    dend_7 { pt3dadd( -86.6169, 220.48, -234.819, 0.66 ) }
    dend_7 { pt3dadd( -94.2442, 229.438, -250.266, 0.33 ) }
    dend_7 { pt3dadd( -96.2963, 231.738, -254.426, 0.33 ) }
    dend_7 { pt3dadd( -99.7123, 235.27, -261.312, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 67/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.44835, 42.0981, -19.646, 0.66 ) }
    dend_4 { pt3dadd( -0.903172, 47.187, -23.3794, 0.66 ) }
    dend_4 { pt3dadd( -3.36393, 50.2575, -25.9464, 0.66 ) }
    dend_4 { pt3dadd( -6.85868, 54.6434, -29.5151, 0.66 ) }
    dend_4 { pt3dadd( -9.30114, 57.6564, -31.788, 0.66 ) }
    dend_4 { pt3dadd( -10.4452, 59.093, -32.8679, 0.66 ) }
    dend_4 { pt3dadd( -15.0536, 64.43, -37.0543, 0.66 ) }
    dend_4 { pt3dadd( -20.2689, 69.5495, -41.6296, 0.66 ) }
    dend_4 { pt3dadd( -21.883, 71.013, -43.0178, 0.66 ) }
    dend_4 { pt3dadd( -26.751, 75.821, -47.0367, 0.66 ) }
    dend_4 { pt3dadd( -30.9189, 79.8449, -49.9913, 0.66 ) }
    dend_4 { pt3dadd( -36.3622, 85.355, -53.2247, 0.66 ) }
    dend_4 { pt3dadd( -40.0072, 89.4007, -54.92, 0.66 ) }
    dend_4 { pt3dadd( -42.1539, 91.9269, -55.5133, 0.66 ) }
    dend_4 { pt3dadd( -48.5301, 99.6599, -56.1517, 0.66 ) }
    dend_4 { pt3dadd( -51.6172, 104.054, -55.5884, 0.66 ) }
    dend_4 { pt3dadd( -55.7295, 110.361, -54.082, 0.66 ) }
    dend_4 { pt3dadd( -57.7711, 113.925, -52.9066, 0.66 ) }
    dend_4 { pt3dadd( -62.4619, 122.676, -49.4125, 0.66 ) }
    dend_4 { pt3dadd( -64.168, 125.877, -47.9496, 0.66 ) }
    dend_4 { pt3dadd( -67.9343, 133.069, -43.8405, 0.66 ) }
    // Section: apic_17, id: apic_17, parent: apic_7 (entry count 88/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -0.119369, -32.9076, -13.882, 1.33 ) }
    apic_17 { pt3dadd( -1.62727, -38.6423, -13.366, 1.33 ) }
    apic_17 { pt3dadd( -2.31294, -41.1994, -14.7676, 1.33 ) }
    apic_17 { pt3dadd( -2.33817, -41.3625, -14.8657, 1.33 ) }
    apic_17 { pt3dadd( -2.64468, -43.5892, -16.1317, 0.66 ) }
    apic_17 { pt3dadd( -2.83196, -45.3687, -17.0631, 0.66 ) }
    apic_17 { pt3dadd( -3.11792, -47.6956, -18.1362, 0.66 ) }
    apic_17 { pt3dadd( -4.27093, -59.0424, -23.127, 0.66 ) }
    apic_17 { pt3dadd( -4.67868, -63.2451, -24.676, 0.66 ) }
    apic_17 { pt3dadd( -4.81285, -66.164, -25.4777, 0.66 ) }
    apic_17 { pt3dadd( -4.90731, -68.9946, -26.0563, 0.66 ) }
    apic_17 { pt3dadd( -5.07554, -74.1106, -26.9821, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_17 { pt3dadd( -5.21674, -79.8177, -27.8078, 0.66 ) }
    apic_17 { pt3dadd( -5.3611, -83.1101, -28.0488, 0.66 ) }
    apic_17 { pt3dadd( -5.69654, -91.0897, -28.7409, 0.66 ) }
    apic_17 { pt3dadd( -5.89177, -95.2859, -29.0807, 0.66 ) }
    apic_17 { pt3dadd( -6.25525, -103.829, -29.815, 0.66 ) }
    apic_17 { pt3dadd( -6.30274, -107.449, -30.138, 0.66 ) }
    apic_17 { pt3dadd( -6.27426, -114.158, -30.9019, 0.66 ) }
    apic_17 { pt3dadd( -6.20427, -118.956, -31.5196, 0.66 ) }
    apic_17 { pt3dadd( -6.09872, -124.38, -32.3822, 0.66 ) }
    apic_17 { pt3dadd( -5.83711, -130.396, -33.2856, 0.66 ) }
    apic_17 { pt3dadd( -5.65783, -133.999, -33.7413, 0.66 ) }
    apic_17 { pt3dadd( -5.36187, -141.87, -34.7593, 0.66 ) }
    apic_17 { pt3dadd( -5.18876, -146.083, -35.2674, 0.66 ) }
    apic_17 { pt3dadd( -4.98276, -151.651, -35.976, 0.66 ) }
    apic_17 { pt3dadd( -4.65398, -159.196, -36.968, 0.66 ) }
    apic_17 { pt3dadd( -4.60042, -162.525, -37.3289, 0.66 ) }
    apic_17 { pt3dadd( -4.6652, -169.923, -37.9535, 0.66 ) }
    apic_17 { pt3dadd( -4.77203, -180.159, -38.2323, 0.66 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 18/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -0.119369, -32.9076, -13.882, 1.33 ) }
    apic_8 { pt3dadd( -3.34874, -34.5959, -10.4594, 1.33 ) }
    apic_8 { pt3dadd( -11.7331, -38.9792, -1.57345, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 21/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 14.1507, 43.0016, -9.79964, 1.33 ) }
    dend_14 { pt3dadd( 17.4825, 48.5073, -12.4242, 1.33 ) }
    dend_14 { pt3dadd( 18.4443, 50.03, -12.9921, 1.33 ) }
    dend_14 { pt3dadd( 20.2226, 52.7812, -13.6125, 1.33 ) }
    dend_14 { pt3dadd( 22.4674, 56.3388, -14.0871, 1.33 ) }
    dend_14 { pt3dadd( 25.7983, 61.5471, -14.3912, 1.33 ) }
    dend_14 { pt3dadd( 31.2794, 69.4383, -14.024, 1.33 ) }
    dend_14 { pt3dadd( 34.4565, 73.8506, -13.0958, 1.33 ) }
    dend_14 { pt3dadd( 37.6901, 78.397, -11.6101, 0.66 ) }
    dend_14 { pt3dadd( 39.5414, 80.7221, -10.6502, 0.66 ) }
    dend_14 { pt3dadd( 44.2943, 86.1911, -8.53851, 0.66 ) }
    dend_14 { pt3dadd( 50.2153, 92.7798, -5.65104, 0.66 ) }
    dend_14 { pt3dadd( 53.7802, 96.7388, -3.83916, 0.66 ) }
    dend_14 { pt3dadd( 60.4931, 103.97, -0.960802, 0.66 ) }
    dend_14 { pt3dadd( 69.5543, 113.398, 2.40621, 0.66 ) }
    dend_14 { pt3dadd( 77.6702, 121.476, 5.25566, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 14.1507, 43.0016, -9.79964, 0.66 ) }
    dend_13 { pt3dadd( 17.6904, 43.3094, -4.33463, 0.66 ) }
    dend_13 { pt3dadd( 20.0035, 43.6919, -0.938767, 0.66 ) }
    dend_13 { pt3dadd( 23.3156, 44.4699, 3.65888, 0.66 ) }
    dend_13 { pt3dadd( 24.4274, 44.7538, 5.10785, 0.66 ) }
    dend_13 { pt3dadd( 25.9728, 45.1522, 7.20935, 0.66 ) }
    dend_13 { pt3dadd( 27.8962, 45.6612, 10.0638, 0.66 ) }
    dend_13 { pt3dadd( 30.7477, 46.7149, 14.449, 0.66 ) }
    dend_13 { pt3dadd( 31.6612, 47.0679, 15.7883, 0.33 ) }
    dend_13 { pt3dadd( 32.3534, 47.3468, 16.7736, 0.66 ) }
    dend_13 { pt3dadd( 36.3789, 49.117, 22.8435, 0.66 ) }
    dend_13 { pt3dadd( 38.8483, 50.342, 26.9129, 0.66 ) }
    dend_13 { pt3dadd( 39.9344, 50.8994, 28.8003, 0.66 ) }
    dend_13 { pt3dadd( 41.1098, 51.6341, 30.7227, 0.66 ) }
    dend_13 { pt3dadd( 41.9554, 52.4848, 32.2469, 0.33 ) }
    dend_13 { pt3dadd( 42.2418, 52.8501, 32.7667, 0.66 ) }
    dend_13 { pt3dadd( 42.6993, 53.785, 33.3961, 0.33 ) }
    dend_13 { pt3dadd( 42.9039, 54.3759, 33.6751, 0.66 ) }
    dend_13 { pt3dadd( 43.601, 57.2855, 35.2172, 0.33 ) }
    dend_13 { pt3dadd( 43.987, 61.2873, 37.0029, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 12.8412, 222.507, -2.34162, 0.33 ) }
    dend_11 { pt3dadd( 11.7254, 223.588, -4.61251, 0.33 ) }
    dend_11 { pt3dadd( 11.171, 224.126, -5.74088, 0.66 ) }
    dend_11 { pt3dadd( 9.78287, 225.471, -8.56629, 0.33 ) }
    dend_11 { pt3dadd( 8.77814, 226.445, -10.6113, 0.66 ) }
    dend_11 { pt3dadd( 6.64569, 228.512, -14.9515, 0.33 ) }
    dend_11 { pt3dadd( 5.72033, 229.409, -16.835, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 12.8412, 222.507, -2.34162, 0.33 ) }
    dend_10 { pt3dadd( 11.1898, 223.51, -4.23367, 0.33 ) }
    dend_10 { pt3dadd( 9.44781, 224.568, -6.2296, 0.66 ) }
    dend_10 { pt3dadd( 5.11862, 227.197, -11.1898, 0.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -67.9343, 133.069, -43.8405, 0.66 ) }
    dend_6 { pt3dadd( -71.7141, 136.712, -45.8727, 0.66 ) }
    dend_6 { pt3dadd( -76.6038, 140.705, -48.7154, 0.66 ) }
    dend_6 { pt3dadd( -80.946, 144.081, -50.936, 0.66 ) }
    dend_6 { pt3dadd( -82.526, 145.252, -51.6465, 0.66 ) }
    dend_6 { pt3dadd( -85.3592, 147.349, -52.7434, 0.66 ) }
    dend_6 { pt3dadd( -86.6693, 148.267, -53.2079, 0.66 ) }
    dend_6 { pt3dadd( -92.7267, 152.446, -55.1049, 0.66 ) }
    dend_6 { pt3dadd( -97.5996, 155.72, -56.0712, 0.66 ) }
    dend_6 { pt3dadd( -99.2946, 156.77, -56.4172, 0.66 ) }
    dend_6 { pt3dadd( -103.72, 159.485, -57.2506, 0.66 ) }
    dend_6 { pt3dadd( -108.678, 162.655, -58.1128, 0.66 ) }
    dend_6 { pt3dadd( -112.272, 165.026, -58.8167, 0.66 ) }
    dend_6 { pt3dadd( -116.82, 168.142, -59.8202, 0.66 ) }
    dend_6 { pt3dadd( -123.084, 172.255, -61.734, 0.33 ) }
    dend_6 { pt3dadd( -125.513, 173.851, -62.6913, 0.66 ) }
    dend_6 { pt3dadd( -126.292, 174.342, -63.0798, 0.66 ) }
    dend_6 { pt3dadd( -131.267, 177.371, -66.084, 0.66 ) }
    dend_6 { pt3dadd( -134.063, 179.02, -68.2092, 0.33 ) }
    dend_6 { pt3dadd( -135.04, 179.595, -69.0466, 0.66 ) }
    dend_6 { pt3dadd( -138.804, 181.888, -72.3504, 0.33 ) }
    dend_6 { pt3dadd( -140.734, 182.997, -74.1686, 1.33 ) }
    dend_6 { pt3dadd( -145.624, 185.85, -78.8111, 0.33 ) }
    dend_6 { pt3dadd( -149.261, 188.053, -82.3732, 0.33 ) }
    dend_6 { pt3dadd( -150.013, 188.506, -83.1425, 0.66 ) }
    dend_6 { pt3dadd( -152.584, 189.953, -85.8908, 0.33 ) }
    dend_6 { pt3dadd( -156.351, 192.017, -89.9268, 0.66 ) }
    dend_6 { pt3dadd( -157.714, 192.794, -91.407, 0.33 ) }
    dend_6 { pt3dadd( -159.281, 193.725, -93.117, 0.66 ) }
    dend_6 { pt3dadd( -162.599, 195.709, -96.5364, 0.33 ) }
    dend_6 { pt3dadd( -164.666, 197.247, -98.6972, 0.66 ) }
    dend_6 { pt3dadd( -165.679, 198.312, -99.7394, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( -166.601, 199.804, -100.579, 0.66 ) }
    dend_6 { pt3dadd( -167.313, 201.564, -101.178, 0.33 ) }
    dend_6 { pt3dadd( -167.746, 204.222, -101.364, 0.66 ) }
    dend_6 { pt3dadd( -167.859, 208.982, -100.958, 0.33 ) }
    dend_6 { pt3dadd( -167.642, 211.729, -100.486, 0.66 ) }
    dend_6 { pt3dadd( -167.16, 214.727, -99.6457, 0.33 ) }
    dend_6 { pt3dadd( -166.993, 215.647, -99.3229, 0.66 ) }
    dend_6 { pt3dadd( -166.465, 219.16, -97.9653, 0.33 ) }
    dend_6 { pt3dadd( -166.367, 220.29, -97.4637, 0.66 ) }
    dend_6 { pt3dadd( -166.18, 223.286, -96.0889, 0.33 ) }
    dend_6 { pt3dadd( -165.906, 230.657, -92.6248, 0.66 ) }
    dend_6 { pt3dadd( -165.871, 234.008, -90.9736, 0.33 ) }
    dend_6 { pt3dadd( -166.032, 239.968, -88.0639, 0.33 ) }
    dend_6 { pt3dadd( -166.332, 243.443, -86.3429, 0.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 14/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -67.9343, 133.069, -43.8405, 0.33 ) }
    dend_5 { pt3dadd( -68.6662, 135.508, -43.8481, 0.33 ) }
    dend_5 { pt3dadd( -69.0974, 137.29, -43.8351, 0.33 ) }
    dend_5 { pt3dadd( -69.3292, 138.286, -43.8189, 0.66 ) }
    dend_5 { pt3dadd( -69.9317, 140.824, -43.7538, 0.33 ) }
    dend_5 { pt3dadd( -70.1672, 141.758, -43.7221, 0.66 ) }
    dend_5 { pt3dadd( -70.4744, 143.048, -43.5477, 0.33 ) }
    dend_5 { pt3dadd( -71.1213, 145.851, -42.9972, 0.33 ) }
    dend_5 { pt3dadd( -71.3441, 146.712, -42.7934, 0.66 ) }
    dend_5 { pt3dadd( -71.7965, 148.196, -42.3864, 0.33 ) }
    dend_5 { pt3dadd( -72.0122, 148.859, -42.1848, 0.66 ) }
    dend_5 { pt3dadd( -73.1795, 152.668, -41.2185, 0.33 ) }
    dend_5 { pt3dadd( -73.7399, 154.406, -40.7415, 1.33 ) }
    dend_5 { pt3dadd( -74.3636, 156.203, -40.2366, 0.33 ) }
    dend_5 { pt3dadd( -74.5998, 156.86, -40.0656, 0.66 ) }
    dend_5 { pt3dadd( -75.8111, 160.121, -39.3, 0.33 ) }
    dend_5 { pt3dadd( -76.9521, 162.857, -38.8131, 0.66 ) }
    dend_5 { pt3dadd( -78.7349, 166.686, -38.2716, 0.66 ) }
    dend_5 { pt3dadd( -79.4069, 168.258, -37.9897, 0.66 ) }
    dend_5 { pt3dadd( -80.4955, 170.972, -37.4941, 0.66 ) }
    dend_5 { pt3dadd( -81.2074, 172.866, -37.1191, 0.33 ) }
    dend_5 { pt3dadd( -82.3322, 175.916, -36.4826, 0.66 ) }
    dend_5 { pt3dadd( -83.592, 179.823, -35.6768, 0.66 ) }
    dend_5 { pt3dadd( -85.1331, 185.948, -34.2553, 0.33 ) }
    dend_5 { pt3dadd( -85.3357, 186.913, -33.9927, 0.66 ) }
    dend_5 { pt3dadd( -85.8854, 190.511, -32.9548, 0.33 ) }
    dend_5 { pt3dadd( -86.3215, 194.008, -31.8786, 0.33 ) }
    dend_5 { pt3dadd( -86.433, 195.276, -31.4759, 0.66 ) }
    dend_5 { pt3dadd( -86.9337, 201.124, -29.9815, 0.33 ) }
    dend_5 { pt3dadd( -87.0236, 202.026, -29.8273, 0.66 ) }
    dend_5 { pt3dadd( -87.3133, 205.642, -29.2923, 0.33 ) }
    dend_5 { pt3dadd( -87.4458, 207.235, -29.1021, 0.33 ) }
    dend_5 { pt3dadd( -87.6191, 210.206, -28.8419, 0.66 ) }
    dend_5 { pt3dadd( -87.9119, 214.365, -28.6126, 0.66 ) }
    dend_5 { pt3dadd( -88.1875, 218.251, -28.5468, 0.66 ) }
    dend_5 { pt3dadd( -88.4316, 221.766, -28.3543, 0.33 ) }
    dend_5 { pt3dadd( -88.5464, 223.05, -28.2238, 0.33 ) }
    dend_5 { pt3dadd( -89.0038, 226.89, -27.6895, 0.33 ) }
    dend_5 { pt3dadd( -89.1879, 227.811, -27.4543, 0.66 ) }
    dend_5 { pt3dadd( -89.6877, 229.521, -26.9501, 0.33 ) }
    dend_5 { pt3dadd( -90.031, 230.389, -26.6994, 0.66 ) }
    dend_5 { pt3dadd( -90.9051, 232.259, -26.2774, 0.33 ) }
    dend_5 { pt3dadd( -91.6915, 233.908, -25.8987, 1.99 ) }
    dend_5 { pt3dadd( -93.6614, 237.313, -25.0289, 0.33 ) }
    dend_5 { pt3dadd( -95.2117, 240.177, -24.4053, 0.66 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 59/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -4.77203, -180.159, -38.2323, 0.33 ) }
    apic_19 { pt3dadd( -5.32769, -183.496, -39.2063, 0.33 ) }
    apic_19 { pt3dadd( -5.4033, -184.311, -39.2718, 0.66 ) }
    apic_19 { pt3dadd( -5.54725, -185.811, -39.2263, 0.33 ) }
    apic_19 { pt3dadd( -5.57905, -186.188, -39.2037, 0.66 ) }
    apic_19 { pt3dadd( -6.06164, -191.472, -39.0548, 0.66 ) }
    apic_19 { pt3dadd( -6.20653, -194.035, -39.1954, 0.33 ) }
    apic_19 { pt3dadd( -6.40832, -199.621, -39.9447, 0.66 ) }
    apic_19 { pt3dadd( -6.58238, -205.602, -40.8394, 0.66 ) }
    apic_19 { pt3dadd( -6.62368, -208.04, -41.2114, 0.66 ) }
    apic_19 { pt3dadd( -6.7717, -215.58, -42.1962, 0.66 ) }
    apic_19 { pt3dadd( -6.88882, -223.045, -43.0585, 0.66 ) }
    apic_19 { pt3dadd( -6.97567, -226.583, -43.5093, 0.66 ) }
    apic_19 { pt3dadd( -7.15601, -231.509, -44.1365, 0.66 ) }
    apic_19 { pt3dadd( -7.39332, -235.929, -44.5762, 0.66 ) }
    apic_19 { pt3dadd( -7.75263, -241.53, -44.8931, 0.66 ) }
    apic_19 { pt3dadd( -8.21449, -246.767, -44.9239, 0.66 ) }
    apic_19 { pt3dadd( -8.67494, -250.771, -44.7259, 0.66 ) }
    apic_19 { pt3dadd( -9.6527, -258.212, -44.2777, 0.66 ) }
    apic_19 { pt3dadd( -10.2953, -263.002, -43.9105, 0.66 ) }
    apic_19 { pt3dadd( -11.0997, -268.53, -43.4107, 0.66 ) }
    apic_19 { pt3dadd( -11.8255, -273.662, -42.905, 0.66 ) }
    apic_19 { pt3dadd( -12.9416, -281.293, -42.04, 0.66 ) }
    apic_19 { pt3dadd( -13.7496, -287.095, -41.3736, 0.66 ) }
    apic_19 { pt3dadd( -14.4829, -293.401, -40.8107, 0.66 ) }
    apic_19 { pt3dadd( -14.9018, -297.795, -40.4604, 0.66 ) }
    apic_19 { pt3dadd( -15.1839, -302.215, -40.2384, 0.66 ) }
    apic_19 { pt3dadd( -15.3053, -307.79, -40.1068, 0.66 ) }
    apic_19 { pt3dadd( -15.382, -313.151, -40.2849, 0.66 ) }
    apic_19 { pt3dadd( -15.444, -318.942, -40.7634, 0.66 ) }
    apic_19 { pt3dadd( -15.4894, -323.829, -41.3982, 0.66 ) }
    apic_19 { pt3dadd( -15.5678, -330.115, -42.2883, 0.66 ) }
    apic_19 { pt3dadd( -15.778, -336.215, -43.1558, 0.66 ) }
    apic_19 { pt3dadd( -15.9923, -341.529, -43.8728, 0.66 ) }
    apic_19 { pt3dadd( -16.2438, -345.809, -44.4012, 0.66 ) }
    apic_19 { pt3dadd( -16.4694, -348.448, -44.6881, 0.66 ) }
    apic_19 { pt3dadd( -17.1799, -355.722, -45.8025, 0.66 ) }
    apic_19 { pt3dadd( -18.05, -363.818, -47.3408, 0.66 ) }
    apic_19 { pt3dadd( -18.2938, -366.59, -48.0024, 0.33 ) }
    apic_19 { pt3dadd( -18.409, -368.371, -48.448, 0.33 ) }
    apic_19 { pt3dadd( -18.634, -371.61, -49.2868, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_19 { pt3dadd( -19.0726, -377.778, -51.0105, 0.66 ) }
    apic_19 { pt3dadd( -19.5081, -385.235, -53.2632, 0.66 ) }
    apic_19 { pt3dadd( -19.6505, -387.599, -53.9761, 0.33 ) }
    apic_19 { pt3dadd( -19.8666, -390.798, -54.7374, 0.33 ) }
    apic_19 { pt3dadd( -20.0373, -394.229, -55.4252, 0.66 ) }
    apic_19 { pt3dadd( -20.1238, -396.542, -55.8628, 0.66 ) }
    apic_19 { pt3dadd( -20.2247, -399.451, -56.3393, 0.33 ) }
    apic_19 { pt3dadd( -20.3014, -401.414, -56.6534, 0.66 ) }
    apic_19 { pt3dadd( -21.3507, -428.078, -60.8467, 0.66 ) }
    apic_19 { pt3dadd( -21.4405, -430.193, -61.1978, 0.33 ) }
    apic_19 { pt3dadd( -21.663, -436.421, -62.3542, 0.66 ) }
    apic_19 { pt3dadd( -21.7502, -438.615, -62.7794, 0.33 ) }
    apic_19 { pt3dadd( -21.7913, -439.917, -63.0275, 0.66 ) }
    apic_19 { pt3dadd( -21.8916, -443.023, -63.5778, 0.33 ) }
    apic_19 { pt3dadd( -21.9681, -444.498, -63.7516, 0.66 ) }
    apic_19 { pt3dadd( -22.6642, -449.707, -64.3148, 0.33 ) }
    apic_19 { pt3dadd( -22.9735, -451.327, -64.4262, 0.33 ) }
    apic_19 { pt3dadd( -24.494, -458.234, -64.8783, 0.66 ) }
    apic_19 { pt3dadd( -25.3692, -462.248, -65.0793, 0.66 ) }
    apic_19 { pt3dadd( -26.0636, -465.486, -65.1993, 0.66 ) }
    apic_19 { pt3dadd( -27.3455, -471.468, -65.1982, 0.66 ) }
    apic_19 { pt3dadd( -28.4282, -476.786, -64.9981, 0.66 ) }
    apic_19 { pt3dadd( -29.0222, -480.479, -64.8136, 0.66 ) }
    apic_19 { pt3dadd( -29.5713, -484.86, -64.5333, 0.33 ) }
    apic_19 { pt3dadd( -29.6104, -486.031, -64.4416, 0.66 ) }
    apic_19 { pt3dadd( -29.4073, -489.412, -64.1609, 0.66 ) }
    apic_19 { pt3dadd( -28.9815, -492.153, -63.8227, 0.66 ) }
    apic_19 { pt3dadd( -28.4268, -495.228, -63.3921, 0.33 ) }
    apic_19 { pt3dadd( -28.2726, -496.023, -63.2592, 0.66 ) }
    apic_19 { pt3dadd( -27.5963, -499.811, -62.6666, 0.66 ) }
    apic_19 { pt3dadd( -26.8517, -504.49, -62.025, 0.66 ) }
    apic_19 { pt3dadd( -26.3648, -508.429, -61.5869, 0.66 ) }
    apic_19 { pt3dadd( -26.2976, -509.938, -61.437, 0.66 ) }
    apic_19 { pt3dadd( -26.3621, -513.1, -61.2292, 0.33 ) }
    apic_19 { pt3dadd( -26.5205, -515.569, -61.1442, 0.66 ) }
    apic_19 { pt3dadd( -26.7154, -517.784, -61.3134, 0.33 ) }
    apic_19 { pt3dadd( -26.9111, -519.946, -61.726, 0.66 ) }
    apic_19 { pt3dadd( -27.1508, -522.304, -62.3907, 0.33 ) }
    apic_19 { pt3dadd( -27.6123, -526.72, -63.7318, 0.33 ) }
    apic_19 { pt3dadd( -27.702, -527.494, -63.9791, 0.66 ) }
    apic_19 { pt3dadd( -28.1237, -532.351, -65.3984, 0.33 ) }
    apic_19 { pt3dadd( -28.2772, -535.2, -66.2017, 0.33 ) }
    apic_19 { pt3dadd( -28.2958, -535.713, -66.2845, 0.66 ) }
    apic_19 { pt3dadd( -28.3114, -537.695, -66.336, 0.33 ) }
    apic_19 { pt3dadd( -28.3305, -538.425, -66.2404, 0.66 ) }
    apic_19 { pt3dadd( -28.3375, -540.409, -65.8694, 0.33 ) }
    apic_19 { pt3dadd( -28.3461, -542.58, -65.3358, 0.66 ) }
    apic_19 { pt3dadd( -28.1231, -547.822, -64.3745, 0.33 ) }
    apic_19 { pt3dadd( -28.0583, -548.98, -64.2224, 0.33 ) }
    apic_19 { pt3dadd( -28.0323, -549.349, -64.1932, 0.66 ) }
    apic_19 { pt3dadd( -27.6777, -553.557, -64.0519, 0.33 ) }
    apic_19 { pt3dadd( -27.4394, -556.111, -64.1076, 0.33 ) }
    apic_19 { pt3dadd( -27.0168, -560.531, -64.4319, 0.33 ) }
    apic_19 { pt3dadd( -26.9576, -561.337, -64.5095, 0.66 ) }
    apic_19 { pt3dadd( -26.8798, -564.48, -64.5892, 0.33 ) }
    apic_19 { pt3dadd( -26.8798, -564.48, -64.5892, 0.66 ) }
    apic_19 { pt3dadd( -27.012, -566.786, -64.2935, 0.33 ) }
    apic_19 { pt3dadd( -27.012, -566.786, -64.2935, 0.66 ) }
    apic_19 { pt3dadd( -26.9051, -569.937, -64.016, 0.33 ) }
    apic_19 { pt3dadd( -26.691, -573.666, -63.763, 0.33 ) }
    apic_19 { pt3dadd( -26.5661, -575.227, -63.6883, 0.66 ) }
    apic_19 { pt3dadd( -26.2972, -579.037, -63.5989, 0.33 ) }
    apic_19 { pt3dadd( -25.9896, -584.92, -63.7555, 0.33 ) }
    apic_19 { pt3dadd( -25.9549, -586.241, -63.8425, 0.33 ) }
    apic_19 { pt3dadd( -25.9628, -586.965, -63.9198, 0.66 ) }
    apic_19 { pt3dadd( -26.0106, -588.946, -64.1389, 0.33 ) }
    apic_19 { pt3dadd( -26.1497, -591.61, -64.4279, 0.66 ) }
    apic_19 { pt3dadd( -26.7396, -597.713, -65.2846, 0.33 ) }
    apic_19 { pt3dadd( -27.108, -599.524, -65.4994, 0.66 ) }
    apic_19 { pt3dadd( -27.8911, -603.103, -65.9546, 0.33 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 70/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -4.77203, -180.159, -38.2323, 0.66 ) }
    apic_18 { pt3dadd( -2.61625, -181.264, -38.8397, 0.66 ) }
    apic_18 { pt3dadd( 6.2891E-4, -182.792, -39.6354, 0.33 ) }
    apic_18 { pt3dadd( 0.447615, -183.067, -39.7736, 0.66 ) }
    apic_18 { pt3dadd( 5.50585, -186.251, -41.298, 0.66 ) }
    apic_18 { pt3dadd( 9.78851, -189.01, -42.5082, 0.33 ) }
    apic_18 { pt3dadd( 11.1871, -189.923, -42.8128, 0.33 ) }
    apic_18 { pt3dadd( 13.1065, -191.327, -43.1485, 0.33 ) }
    apic_18 { pt3dadd( 13.7046, -191.808, -43.1738, 0.66 ) }
    apic_18 { pt3dadd( 14.786, -192.829, -42.8451, 0.33 ) }
    apic_18 { pt3dadd( 16.1019, -194.223, -42.0492, 0.66 ) }
    apic_18 { pt3dadd( 18.4321, -196.703, -40.1145, 0.33 ) }
    apic_18 { pt3dadd( 20.0012, -198.439, -38.6607, 0.66 ) }
    apic_18 { pt3dadd( 21.6516, -200.197, -36.9953, 0.33 ) }
    apic_18 { pt3dadd( 24.963, -204.0, -33.2165, 0.66 ) }
    // Section: apic_16, id: apic_16, parent: apic_8 (entry count 85/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -11.7331, -38.9792, -1.57345, 0.66 ) }
    apic_16 { pt3dadd( -15.6749, -42.7134, -1.6613, 0.66 ) }
    apic_16 { pt3dadd( -18.0856, -44.9137, -1.80103, 0.66 ) }
    apic_16 { pt3dadd( -22.3207, -48.4942, -2.36236, 0.66 ) }
    apic_16 { pt3dadd( -23.6549, -49.5453, -2.57552, 0.66 ) }
    apic_16 { pt3dadd( -24.7642, -50.3952, -2.76523, 0.66 ) }
    apic_16 { pt3dadd( -27.7177, -52.5332, -3.39879, 0.66 ) }
    apic_16 { pt3dadd( -29.4397, -53.6776, -3.83326, 0.66 ) }
    apic_16 { pt3dadd( -32.1148, -55.0798, -4.66756, 0.66 ) }
    apic_16 { pt3dadd( -33.0715, -55.5572, -5.04807, 0.66 ) }
    apic_16 { pt3dadd( -34.2896, -56.1405, -5.45117, 0.66 ) }
    apic_16 { pt3dadd( -36.7954, -57.5189, -6.04681, 0.66 ) }
    apic_16 { pt3dadd( -38.5493, -58.5642, -6.33033, 0.66 ) }
    apic_16 { pt3dadd( -40.0275, -59.5755, -6.49567, 0.66 ) }
    apic_16 { pt3dadd( -42.8486, -61.7495, -6.62146, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_16 { pt3dadd( -47.7804, -65.9572, -6.69673, 0.66 ) }
    apic_16 { pt3dadd( -50.1442, -68.1128, -6.57585, 0.66 ) }
    apic_16 { pt3dadd( -51.8782, -69.8225, -6.39976, 0.66 ) }
    apic_16 { pt3dadd( -53.4963, -71.6265, -6.24689, 0.66 ) }
    apic_16 { pt3dadd( -54.1962, -72.5135, -6.17145, 0.66 ) }
    apic_16 { pt3dadd( -54.8448, -73.4698, -6.07361, 0.66 ) }
    apic_16 { pt3dadd( -56.4337, -76.2789, -5.83908, 0.66 ) }
    apic_16 { pt3dadd( -58.1424, -78.8276, -5.68463, 0.66 ) }
    apic_16 { pt3dadd( -60.0359, -81.4683, -5.72659, 0.66 ) }
    apic_16 { pt3dadd( -61.2827, -83.053, -5.98475, 0.66 ) }
    apic_16 { pt3dadd( -62.8365, -84.9844, -6.47883, 0.66 ) }
    apic_16 { pt3dadd( -65.2414, -87.9167, -7.3656, 0.66 ) }
    apic_16 { pt3dadd( -68.1826, -91.57, -8.61669, 0.66 ) }
    apic_16 { pt3dadd( -72.0755, -96.2831, -10.4732, 0.66 ) }
    apic_16 { pt3dadd( -75.3417, -100.204, -12.2649, 0.66 ) }
    apic_16 { pt3dadd( -76.4458, -101.646, -12.9278, 0.66 ) }
    apic_16 { pt3dadd( -78.9514, -105.118, -14.5872, 0.66 ) }
    apic_16 { pt3dadd( -79.5589, -106.076, -15.0482, 0.66 ) }
    apic_16 { pt3dadd( -81.7083, -110.098, -16.8898, 0.66 ) }
    apic_16 { pt3dadd( -83.0545, -112.94, -17.941, 0.66 ) }
    apic_16 { pt3dadd( -84.72, -116.769, -19.0332, 0.66 ) }
    apic_16 { pt3dadd( -86.1173, -119.811, -19.9219, 0.66 ) }
    apic_16 { pt3dadd( -86.6492, -120.983, -20.3003, 0.66 ) }
    apic_16 { pt3dadd( -87.7386, -123.039, -20.988, 0.33 ) }
    apic_16 { pt3dadd( -88.55, -124.35, -21.4568, 0.33 ) }
    apic_16 { pt3dadd( -89.6682, -125.698, -22.3251, 0.33 ) }
    apic_16 { pt3dadd( -90.5915, -126.638, -23.1262, 1.33 ) }
    apic_16 { pt3dadd( -91.413, -127.449, -23.8622, 0.66 ) }
    apic_16 { pt3dadd( -93.3684, -129.137, -25.6224, 0.66 ) }
    apic_16 { pt3dadd( -95.4436, -130.676, -27.3802, 0.66 ) }
    apic_16 { pt3dadd( -99.5427, -133.388, -30.7969, 0.33 ) }
    apic_16 { pt3dadd( -100.17, -133.783, -31.2924, 0.33 ) }
    apic_16 { pt3dadd( -101.115, -134.33, -31.9882, 0.66 ) }
    apic_16 { pt3dadd( -103.621, -135.573, -33.6059, 0.33 ) }
    apic_16 { pt3dadd( -104.752, -136.048, -34.1737, 0.33 ) }
    apic_16 { pt3dadd( -105.389, -136.273, -34.3721, 0.33 ) }
    apic_16 { pt3dadd( -107.569, -136.982, -34.6321, 0.33 ) }
    apic_16 { pt3dadd( -110.141, -137.642, -35.1073, 0.66 ) }
    apic_16 { pt3dadd( -111.489, -137.903, -35.3934, 0.33 ) }
    apic_16 { pt3dadd( -111.91, -137.966, -35.4859, 0.66 ) }
    apic_16 { pt3dadd( -113.327, -138.17, -35.8574, 0.33 ) }
    apic_16 { pt3dadd( -114.898, -138.357, -36.2934, 0.66 ) }
    apic_16 { pt3dadd( -117.731, -138.727, -37.2864, 0.33 ) }
    apic_16 { pt3dadd( -118.6, -138.9, -37.5818, 0.66 ) }
    apic_16 { pt3dadd( -119.875, -139.275, -38.1379, 0.33 ) }
    apic_16 { pt3dadd( -120.642, -139.588, -38.5093, 0.33 ) }
    apic_16 { pt3dadd( -121.228, -139.951, -38.8161, 0.66 ) }
    apic_16 { pt3dadd( -123.249, -142.045, -39.9093, 0.33 ) }
    apic_16 { pt3dadd( -123.697, -142.887, -40.1655, 0.66 ) }
    apic_16 { pt3dadd( -124.348, -144.678, -40.6002, 0.33 ) }
    apic_16 { pt3dadd( -124.671, -146.175, -40.8323, 0.33 ) }
    apic_16 { pt3dadd( -124.829, -147.917, -41.0077, 0.33 ) }
    apic_16 { pt3dadd( -124.838, -149.081, -41.0265, 0.33 ) }
    apic_16 { pt3dadd( -124.796, -150.029, -40.9775, 0.66 ) }
    apic_16 { pt3dadd( -124.815, -150.752, -40.9423, 0.33 ) }
    apic_16 { pt3dadd( -124.975, -152.127, -40.8536, 0.66 ) }
    apic_16 { pt3dadd( -125.242, -153.44, -40.8002, 0.66 ) }
    apic_16 { pt3dadd( -125.923, -156.155, -40.6515, 0.33 ) }
    apic_16 { pt3dadd( -126.149, -156.957, -40.5973, 0.66 ) }
    apic_16 { pt3dadd( -126.961, -159.734, -40.3976, 0.33 ) }
    apic_16 { pt3dadd( -127.198, -160.537, -40.3379, 0.66 ) }
    apic_16 { pt3dadd( -127.671, -161.897, -40.2057, 0.33 ) }
    apic_16 { pt3dadd( -127.958, -162.549, -40.1196, 0.66 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 63/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -11.7331, -38.9792, -1.57345, 0.66 ) }
    apic_9 { pt3dadd( -14.9037, -38.1392, -2.39011, 0.66 ) }
    apic_9 { pt3dadd( -20.7362, -36.594, -3.89239, 0.66 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 77.6702, 121.476, 5.25566, 0.33 ) }
    dend_18 { pt3dadd( 87.2087, 124.344, 10.6835, 0.33 ) }
    dend_18 { pt3dadd( 90.3734, 125.257, 12.0123, 0.33 ) }
    dend_18 { pt3dadd( 91.0361, 125.453, 12.2301, 0.66 ) }
    dend_18 { pt3dadd( 95.1723, 126.749, 12.8221, 0.33 ) }
    dend_18 { pt3dadd( 97.4283, 127.41, 13.1932, 0.66 ) }
    dend_18 { pt3dadd( 99.3491, 128.03, 13.5773, 0.33 ) }
    dend_18 { pt3dadd( 100.549, 128.463, 13.617, 0.33 ) }
    dend_18 { pt3dadd( 102.786, 129.349, 13.9629, 0.33 ) }
    dend_18 { pt3dadd( 106.764, 131.235, 15.0381, 0.66 ) }
    dend_18 { pt3dadd( 111.607, 134.454, 16.8923, 0.66 ) }
    dend_18 { pt3dadd( 113.722, 136.171, 17.9162, 0.66 ) }
    dend_18 { pt3dadd( 115.352, 137.674, 18.8382, 0.66 ) }
    dend_18 { pt3dadd( 117.311, 139.665, 20.0815, 0.66 ) }
    dend_18 { pt3dadd( 119.071, 141.667, 21.3141, 0.66 ) }
    dend_18 { pt3dadd( 122.643, 145.971, 23.9226, 0.66 ) }
    dend_18 { pt3dadd( 124.606, 148.491, 25.3279, 0.33 ) }
    dend_18 { pt3dadd( 125.443, 149.542, 25.9804, 0.66 ) }
    dend_18 { pt3dadd( 126.772, 151.185, 27.1384, 0.33 ) }
    dend_18 { pt3dadd( 128.244, 152.905, 28.2864, 0.66 ) }
    dend_18 { pt3dadd( 130.172, 154.991, 29.79, 0.33 ) }
    dend_18 { pt3dadd( 132.435, 157.173, 31.7326, 0.66 ) }
    dend_18 { pt3dadd( 134.026, 158.651, 33.0092, 0.33 ) }
    dend_18 { pt3dadd( 135.62, 160.291, 34.2268, 0.33 ) }
    dend_18 { pt3dadd( 139.05, 164.201, 36.9994, 0.66 ) }
    dend_18 { pt3dadd( 141.745, 167.584, 38.8051, 0.33 ) }
    dend_18 { pt3dadd( 143.125, 169.616, 39.4267, 1.33 ) }
    dend_18 { pt3dadd( 144.602, 171.701, 39.4981, 0.33 ) }
    dend_18 { pt3dadd( 146.723, 174.62, 39.9126, 0.33 ) }
    dend_18 { pt3dadd( 147.323, 175.37, 40.0939, 0.66 ) }
    dend_18 { pt3dadd( 150.369, 178.879, 41.3048, 0.66 ) }
    dend_18 { pt3dadd( 151.768, 180.378, 41.7152, 0.33 ) }
    dend_18 { pt3dadd( 154.701, 183.556, 42.5668, 0.66 ) }
    dend_18 { pt3dadd( 160.152, 189.376, 44.9401, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 161.845, 191.057, 45.8139, 0.33 ) }
    dend_18 { pt3dadd( 162.896, 192.089, 46.435, 0.33 ) }
    dend_18 { pt3dadd( 163.604, 192.767, 46.9807, 0.66 ) }
    dend_18 { pt3dadd( 165.585, 194.766, 48.7122, 0.33 ) }
    dend_18 { pt3dadd( 168.022, 197.664, 51.2551, 0.33 ) }
    dend_18 { pt3dadd( 169.044, 199.101, 51.852, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 77.6702, 121.476, 5.25566, 0.66 ) }
    dend_15 { pt3dadd( 79.3423, 125.435, 4.9396, 0.66 ) }
    dend_15 { pt3dadd( 80.7051, 129.442, 4.5324, 0.66 ) }
    dend_15 { pt3dadd( 81.8402, 133.025, 4.16232, 0.66 ) }
    dend_15 { pt3dadd( 83.1889, 137.592, 3.51193, 0.66 ) }
    dend_15 { pt3dadd( 84.2997, 141.7, 2.89023, 0.66 ) }
    dend_15 { pt3dadd( 86.1594, 148.792, 1.79906, 0.66 ) }
    dend_15 { pt3dadd( 86.8401, 151.875, 1.28339, 0.66 ) }
    dend_15 { pt3dadd( 87.3959, 154.672, 0.879953, 0.66 ) }
    dend_15 { pt3dadd( 88.1243, 158.551, 0.157576, 0.33 ) }
    dend_15 { pt3dadd( 88.837, 162.947, -0.777857, 0.66 ) }
    dend_15 { pt3dadd( 89.1563, 164.569, -1.14141, 0.66 ) }
    dend_15 { pt3dadd( 89.4751, 166.059, -1.47424, 0.66 ) }
    dend_15 { pt3dadd( 90.2299, 169.273, -2.16175, 0.66 ) }
    dend_15 { pt3dadd( 91.1112, 173.19, -2.98502, 0.66 ) }
    dend_15 { pt3dadd( 91.7396, 175.745, -3.41988, 0.66 ) }
    dend_15 { pt3dadd( 92.6896, 179.378, -4.29512, 0.66 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 23/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( -27.8911, -603.103, -65.9546, 0.66 ) }
    apic_21 { pt3dadd( -29.2145, -607.912, -67.4213, 0.66 ) }
    apic_21 { pt3dadd( -29.1757, -611.017, -68.1605, 0.33 ) }
    apic_21 { pt3dadd( -29.0903, -611.789, -68.3265, 0.66 ) }
    apic_21 { pt3dadd( -28.6307, -615.939, -69.2191, 0.33 ) }
    apic_21 { pt3dadd( -28.0899, -620.823, -70.2696, 0.33 ) }
    apic_21 { pt3dadd( -27.6845, -624.484, -71.0572, 1.99 ) }
    apic_21 { pt3dadd( -26.1361, -634.409, -72.256, 0.33 ) }
    apic_21 { pt3dadd( -25.9678, -635.086, -72.3328, 0.66 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 32/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -27.8911, -603.103, -65.9546, 0.33 ) }
    apic_20 { pt3dadd( -29.1077, -601.63, -65.8053, 0.33 ) }
    apic_20 { pt3dadd( -29.3835, -601.296, -65.7715, 0.66 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 35/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -20.7362, -36.594, -3.89239, 0.66 ) }
    apic_13 { pt3dadd( -25.8911, -37.9048, -2.08928, 0.66 ) }
    apic_13 { pt3dadd( -27.5102, -38.2343, -1.54254, 0.66 ) }
    apic_13 { pt3dadd( -32.3852, -39.2723, 0.0533581, 0.66 ) }
    apic_13 { pt3dadd( -36.0109, -40.1605, 1.17182, 0.66 ) }
    apic_13 { pt3dadd( -39.6948, -41.0943, 2.24017, 0.66 ) }
    apic_13 { pt3dadd( -43.3173, -42.0702, 3.24536, 0.66 ) }
    apic_13 { pt3dadd( -45.8691, -42.9545, 4.03256, 0.66 ) }
    apic_13 { pt3dadd( -47.6992, -43.7478, 4.73117, 0.66 ) }
    apic_13 { pt3dadd( -51.3572, -45.7618, 6.31783, 0.66 ) }
    apic_13 { pt3dadd( -54.2036, -47.639, 7.62672, 0.66 ) }
    apic_13 { pt3dadd( -55.3406, -48.5506, 8.20133, 0.66 ) }
    apic_13 { pt3dadd( -59.7814, -52.5198, 10.5868, 0.66 ) }
    apic_13 { pt3dadd( -63.9001, -56.5835, 12.579, 0.66 ) }
    apic_13 { pt3dadd( -67.2033, -59.9832, 13.9391, 0.66 ) }
    apic_13 { pt3dadd( -68.629, -61.5528, 14.3634, 0.66 ) }
    apic_13 { pt3dadd( -70.565, -63.7174, 14.7013, 0.66 ) }
    apic_13 { pt3dadd( -72.6295, -65.9703, 14.8002, 0.66 ) }
    apic_13 { pt3dadd( -77.1593, -70.7318, 14.5199, 0.66 ) }
    apic_13 { pt3dadd( -81.2616, -74.9831, 14.052, 0.66 ) }
    apic_13 { pt3dadd( -83.9115, -77.6975, 13.9401, 0.66 ) }
    apic_13 { pt3dadd( -86.472, -80.4819, 13.997, 0.33 ) }
    apic_13 { pt3dadd( -87.2789, -81.3579, 14.0778, 0.66 ) }
    apic_13 { pt3dadd( -90.8457, -85.4708, 14.7959, 0.66 ) }
    apic_13 { pt3dadd( -92.2989, -87.1169, 15.3971, 0.66 ) }
    apic_13 { pt3dadd( -95.1799, -90.2708, 17.0586, 0.66 ) }
    apic_13 { pt3dadd( -97.0979, -92.4002, 18.3965, 0.66 ) }
    apic_13 { pt3dadd( -98.1365, -93.5952, 19.1992, 0.66 ) }
    apic_13 { pt3dadd( -99.9905, -95.6753, 20.691, 0.66 ) }
    apic_13 { pt3dadd( -102.325, -98.2523, 22.5993, 0.66 ) }
    apic_13 { pt3dadd( -105.507, -101.429, 25.1646, 0.66 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 66/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -20.7362, -36.594, -3.89239, 0.33 ) }
    apic_10 { pt3dadd( -22.257, -36.0585, -2.80734, 0.33 ) }
    apic_10 { pt3dadd( -24.7154, -35.083, -1.1653, 0.66 ) }
    apic_10 { pt3dadd( -25.8176, -34.6457, -0.429079, 0.66 ) }
    apic_10 { pt3dadd( -28.7531, -33.4808, 1.53167, 0.66 ) }
    apic_10 { pt3dadd( -31.5108, -32.3865, 3.37366, 0.66 ) }
    apic_10 { pt3dadd( -34.134, -31.3456, 5.12582, 0.66 ) }
    apic_10 { pt3dadd( -35.7508, -30.7799, 6.24453, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 74/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 92.6896, 179.378, -4.29512, 0.33 ) }
    dend_17 { pt3dadd( 95.2234, 181.744, -3.88852, 0.33 ) }
    dend_17 { pt3dadd( 96.2107, 182.685, -3.71449, 0.33 ) }
    dend_17 { pt3dadd( 97.2749, 183.695, -3.42113, 0.66 ) }
    dend_17 { pt3dadd( 98.975, 185.486, -2.80717, 0.33 ) }
    dend_17 { pt3dadd( 100.534, 187.189, -2.13211, 0.33 ) }
    dend_17 { pt3dadd( 101.352, 188.134, -1.63585, 0.33 ) }
    dend_17 { pt3dadd( 102.144, 189.155, -0.877297, 0.66 ) }
    dend_17 { pt3dadd( 103.137, 190.481, 0.274346, 0.66 ) }
    dend_17 { pt3dadd( 104.228, 191.999, 1.70829, 0.33 ) }
    dend_17 { pt3dadd( 104.649, 192.647, 2.36916, 0.66 ) }
    dend_17 { pt3dadd( 106.337, 195.272, 4.95062, 0.33 ) }
    dend_17 { pt3dadd( 107.152, 196.427, 6.02313, 0.66 ) }
    dend_17 { pt3dadd( 108.261, 197.756, 7.23828, 0.33 ) }
    dend_17 { pt3dadd( 108.577, 198.101, 7.53767, 0.66 ) }
    dend_17 { pt3dadd( 110.817, 200.256, 9.451, 0.33 ) }
    dend_17 { pt3dadd( 112.779, 202.08, 11.0656, 0.33 ) }
    dend_17 { pt3dadd( 113.622, 202.77, 11.5847, 0.66 ) }
    dend_17 { pt3dadd( 116.456, 204.953, 13.3213, 0.33 ) }
    dend_17 { pt3dadd( 117.64, 205.875, 14.0989, 0.66 ) }
    dend_17 { pt3dadd( 122.729, 209.806, 17.4517, 0.66 ) }
    dend_17 { pt3dadd( 125.433, 211.874, 19.2149, 0.66 ) }
    dend_17 { pt3dadd( 130.837, 215.991, 22.8716, 0.66 ) }
    dend_17 { pt3dadd( 134.896, 219.152, 25.6083, 0.66 ) }
    dend_17 { pt3dadd( 137.816, 221.434, 27.4957, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 92.6896, 179.378, -4.29512, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_16 { pt3dadd( 93.0791, 180.724, -5.68243, 0.33 ) }
    dend_16 { pt3dadd( 93.202, 181.309, -6.10281, 0.66 ) }
    dend_16 { pt3dadd( 93.424, 182.457, -6.77697, 0.33 ) }
    dend_16 { pt3dadd( 93.5671, 183.286, -7.17805, 0.66 ) }
    dend_16 { pt3dadd( 94.5074, 188.484, -9.36225, 0.33 ) }
    dend_16 { pt3dadd( 94.8107, 190.345, -10.0429, 0.33 ) }
    dend_16 { pt3dadd( 95.532, 194.373, -11.3659, 0.66 ) }
    dend_16 { pt3dadd( 95.8128, 196.068, -11.7909, 0.33 ) }
    dend_16 { pt3dadd( 96.0665, 198.049, -12.1508, 0.66 ) }
    dend_16 { pt3dadd( 96.2778, 199.519, -12.2865, 0.33 ) }
    dend_16 { pt3dadd( 96.5509, 201.164, -12.4007, 0.66 ) }
    dend_16 { pt3dadd( 96.8113, 202.796, -12.6128, 0.33 ) }
    dend_16 { pt3dadd( 97.3525, 205.433, -13.082, 0.66 ) }
    dend_16 { pt3dadd( 97.6988, 206.931, -13.3697, 0.33 ) }
    dend_16 { pt3dadd( 98.6438, 210.598, -14.1323, 0.66 ) }
    dend_16 { pt3dadd( 99.8362, 214.679, -14.9694, 0.33 ) }
    dend_16 { pt3dadd( 100.206, 215.628, -15.1777, 0.33 ) }
    dend_16 { pt3dadd( 100.81, 216.976, -15.628, 0.66 ) }
    dend_16 { pt3dadd( 101.533, 218.323, -16.2186, 0.33 ) }
    dend_16 { pt3dadd( 101.985, 219.075, -16.6563, 0.66 ) }
    dend_16 { pt3dadd( 102.812, 220.592, -17.4933, 0.33 ) }
    dend_16 { pt3dadd( 103.882, 222.46, -18.3239, 0.33 ) }
    dend_16 { pt3dadd( 106.342, 227.165, -20.1721, 0.33 ) }
    dend_16 { pt3dadd( 106.61, 227.734, -20.3722, 0.66 ) }
    dend_16 { pt3dadd( 108.468, 232.169, -21.6681, 0.33 ) }
    dend_16 { pt3dadd( 109.88, 236.109, -22.8289, 0.66 ) }
    dend_16 { pt3dadd( 110.731, 238.864, -23.5839, 0.33 ) }
    dend_16 { pt3dadd( 111.373, 241.254, -24.1175, 0.33 ) }
    dend_16 { pt3dadd( 112.081, 243.633, -24.5018, 0.33 ) }
    dend_16 { pt3dadd( 112.462, 244.886, -24.7301, 0.66 ) }
    dend_16 { pt3dadd( 113.995, 249.513, -25.6602, 0.33 ) }
    dend_16 { pt3dadd( 114.54, 250.845, -25.9248, 0.66 ) }
    dend_16 { pt3dadd( 115.241, 252.344, -26.0016, 0.66 ) }
    dend_16 { pt3dadd( 116.649, 254.746, -25.6761, 0.33 ) }
    dend_16 { pt3dadd( 116.913, 255.164, -25.5326, 0.66 ) }
    dend_16 { pt3dadd( 118.23, 257.143, -24.5544, 0.66 ) }
    dend_16 { pt3dadd( 120.815, 260.961, -21.7525, 0.66 ) }
    dend_16 { pt3dadd( 122.587, 263.726, -19.5733, 0.33 ) }
    dend_16 { pt3dadd( 122.768, 264.031, -19.2884, 0.66 ) }
    dend_16 { pt3dadd( 124.052, 266.389, -16.8942, 0.33 ) }
    dend_16 { pt3dadd( 124.212, 266.697, -16.5872, 0.66 ) }
    dend_16 { pt3dadd( 125.691, 269.586, -13.7998, 0.33 ) }
    dend_16 { pt3dadd( 127.332, 272.897, -10.9306, 0.66 ) }
    dend_16 { pt3dadd( 129.485, 277.354, -7.33313, 0.33 ) }
    dend_16 { pt3dadd( 129.658, 277.709, -7.04617, 0.66 ) }
    dend_16 { pt3dadd( 130.442, 279.344, -5.73985, 0.33 ) }
    dend_16 { pt3dadd( 131.155, 281.088, -4.85216, 0.33 ) }
    dend_16 { pt3dadd( 131.756, 283.098, -4.81993, 0.33 ) }
    dend_16 { pt3dadd( 132.024, 284.569, -5.32245, 0.66 ) }
    dend_16 { pt3dadd( 132.255, 286.188, -6.46301, 0.33 ) }
    dend_16 { pt3dadd( 132.419, 287.325, -7.38045, 0.66 ) }
    dend_16 { pt3dadd( 133.08, 292.684, -12.109, 0.33 ) }
    dend_16 { pt3dadd( 133.265, 293.761, -13.0251, 0.66 ) }
    dend_16 { pt3dadd( 133.512, 294.761, -13.8746, 0.66 ) }
    dend_16 { pt3dadd( 135.041, 300.651, -19.2626, 0.33 ) }
    dend_16 { pt3dadd( 135.369, 301.791, -20.3694, 0.33 ) }
    dend_16 { pt3dadd( 135.536, 302.251, -20.8103, 0.66 ) }
    dend_16 { pt3dadd( 138.052, 307.431, -25.0832, 0.33 ) }
    dend_16 { pt3dadd( 138.343, 307.95, -25.4873, 0.66 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 59/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -105.507, -101.429, 25.1646, 0.66 ) }
    apic_15 { pt3dadd( -112.548, -109.627, 27.9347, 0.66 ) }
    apic_15 { pt3dadd( -114.582, -111.773, 28.7192, 0.66 ) }
    apic_15 { pt3dadd( -116.72, -113.804, 29.4788, 0.66 ) }
    apic_15 { pt3dadd( -119.585, -116.325, 30.4322, 0.66 ) }
    apic_15 { pt3dadd( -122.14, -118.493, 31.2263, 0.66 ) }
    apic_15 { pt3dadd( -124.126, -120.177, 31.8112, 0.33 ) }
    apic_15 { pt3dadd( -127.084, -122.398, 32.4331, 0.66 ) }
    apic_15 { pt3dadd( -130.758, -125.236, 33.1984, 0.66 ) }
    apic_15 { pt3dadd( -132.385, -126.509, 33.5321, 0.66 ) }
    apic_15 { pt3dadd( -135.017, -128.518, 34.0587, 0.66 ) }
    apic_15 { pt3dadd( -136.692, -129.794, 34.3039, 0.33 ) }
    apic_15 { pt3dadd( -138.519, -131.4, 34.4537, 0.66 ) }
    apic_15 { pt3dadd( -141.867, -134.823, 34.4483, 0.66 ) }
    apic_15 { pt3dadd( -143.013, -136.128, 34.4164, 0.66 ) }
    apic_15 { pt3dadd( -143.839, -137.068, 34.402, 0.66 ) }
    apic_15 { pt3dadd( -146.734, -140.388, 34.3768, 0.33 ) }
    apic_15 { pt3dadd( -147.877, -141.763, 34.3802, 0.33 ) }
    apic_15 { pt3dadd( -148.139, -142.099, 34.3794, 0.66 ) }
    apic_15 { pt3dadd( -150.465, -145.072, 34.4116, 0.33 ) }
    apic_15 { pt3dadd( -152.059, -147.252, 34.4943, 0.66 ) }
    apic_15 { pt3dadd( -152.883, -148.293, 34.6297, 0.33 ) }
    apic_15 { pt3dadd( -153.979, -149.554, 35.0865, 0.66 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 82/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -105.507, -101.429, 25.1646, 0.33 ) }
    apic_14 { pt3dadd( -105.667, -101.341, 26.1186, 0.33 ) }
    apic_14 { pt3dadd( -106.09, -101.109, 28.6531, 0.66 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 85/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -35.7508, -30.7799, 6.24453, 0.66 ) }
    apic_12 { pt3dadd( -35.1353, -29.4111, 5.70651, 0.66 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 87/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -35.7508, -30.7799, 6.24453, 0.66 ) }
    apic_11 { pt3dadd( -38.721, -30.0411, 8.65777, 0.66 ) }
    apic_11 { pt3dadd( -40.2788, -29.6639, 9.73383, 0.66 ) }
    apic_11 { pt3dadd( -42.164, -29.2796, 10.865, 0.66 ) }
    apic_11 { pt3dadd( -46.1194, -28.6871, 12.8447, 0.66 ) }
    apic_11 { pt3dadd( -49.4024, -28.318, 14.1334, 0.66 ) }
    apic_11 { pt3dadd( -51.6855, -28.0613, 15.0297, 0.33 ) }
    apic_11 { pt3dadd( -53.9308, -27.8577, 15.674, 0.66 ) }
    apic_11 { pt3dadd( -56.0578, -27.7037, 16.137, 0.33 ) }
    apic_11 { pt3dadd( -59.0003, -27.6969, 16.4917, 0.66 ) }
    apic_11 { pt3dadd( -62.5444, -27.9759, 15.8792, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_22 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    apic_17 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    apic_19 ModelViewParmSubset_2.append()
    apic_18 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    apic_21 ModelViewParmSubset_2.append()
    apic_20 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_5 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_3 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_2 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    apic_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_4 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_17 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_14 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    apic_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_13 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    apic_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    apic_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_6 = new SectionList()
    apic_1 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_8 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_3 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_10 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_11 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    apic_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_9 all.append()
    apic_9 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 7
    apic_5 nseg = 3
    apic_3 nseg = 7
    apic_2 nseg = 3
    apic_22 nseg = 11
    dend_9 nseg = 9
    dend_7 nseg = 17
    dend_4 nseg = 7
    apic_17 nseg = 7
    dend_14 nseg = 5
    dend_13 nseg = 3
    dend_6 nseg = 9
    dend_5 nseg = 5
    apic_19 nseg = 21
    apic_18 nseg = 3
    apic_16 nseg = 9
    dend_18 nseg = 7
    dend_15 nseg = 3
    apic_13 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 7
    apic_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_BTC_9deeb00a62_0_0


