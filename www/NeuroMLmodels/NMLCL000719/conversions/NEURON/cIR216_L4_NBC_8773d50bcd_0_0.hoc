// Cell: cIR216_L4_NBC_8773d50bcd_0_0
/*
{
  "id" : "cIR216_L4_NBC_8773d50bcd_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.43002, -7.14884, -0.034622, 2.50374", "-6.6077, -6.46772, -0.0380434, 4.42492", "-5.78537, -5.7866, -0.0414649, 9.53787", "-4.96305, -5.10547, -0.0448864, 10.4902", "-4.14072, -4.42435, -0.0483079, 10.6433", "-3.31839, -3.74322, -0.0517294, 10.5673", "-2.49607, -3.0621, -0.0551509, 10.1499", "-1.67374, -2.38098, -0.0585724, 9.69481", "-0.851413, -1.69985, -0.0619939, 9.23972", "-0.0290863, -1.01873, -0.0654154, 9.00279", "0.79324, -0.337605, -0.0688369, 8.97028", "1.61557, 0.343519, -0.0722584, 8.95274", "2.43789, 1.02464, -0.0756799, 8.9352", "3.26022, 1.70577, -0.0791013, 8.91317", "4.08255, 2.38689, -0.0825228, 8.85399", "4.90487, 3.06802, -0.0859443, 8.77123", "5.7272, 3.74914, -0.0893658, 8.34273", "6.54953, 4.43026, -0.0927873, 7.49401", "7.37185, 5.11139, -0.0962088, 6.34034", "8.19418, 5.79251, -0.0996303, 4.815", "9.0165, 6.47364, -0.103052, 2.95062" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "8.9604, 7.00163, -11.8639, 1.33", "10.781, 10.6193, -11.5535, 1.33", "12.3664, 13.7695, -11.2832, 1.33", "14.3674, 17.7456, -10.942, 0.67", "14.7651, 18.5359, -10.8742, 0.67", "15.7907, 20.5738, -10.6993, 0.67", "16.314, 21.6137, -10.6101, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "6.02039, 7.05863, -0.533942, 0.67", "5.10384, 8.80881, 2.41672, 0.67", "4.46295, 10.3504, 4.51364, 0.67", "2.55639, 16.927, 11.7619, 0.67", "1.71195, 21.2395, 15.6933, 0.67", "1.04007, 26.5456, 19.8647, 0.67", "0.851545, 29.2269, 21.7022, 0.67", "0.755287, 31.6833, 23.1384, 0.67", "0.800741, 35.5424, 24.8442, 0.67", "0.974279, 38.8173, 25.7344, 0.67", "1.49844, 43.7492, 26.9464, 0.67", "2.00288, 47.5532, 28.1032, 0.67", "2.11433, 48.6387, 28.4913, 0.67", "2.35081, 51.472, 29.6278, 0.33", "2.46411, 53.5475, 30.5406, 0.67", "2.58963, 56.467, 31.8633, 0.33", "2.66297, 58.5228, 32.7523, 0.67", "2.70397, 60.3597, 33.553, 0.33", "2.76162, 61.4539, 33.9675, 0.67", "2.92869, 63.066, 34.4869, 0.33", "3.08641, 64.6819, 34.7736, 0.67", "3.26177, 66.199, 34.8089, 0.33", "3.43939, 67.3448, 34.7478, 0.67", "3.804, 69.403, 34.5756, 0.67", "4.20023, 71.4105, 34.3676, 0.67", "4.88401, 74.2667, 33.9802, 0.33", "5.46949, 76.3244, 33.6448, 0.67", "5.8075, 77.399, 33.4438, 0.33", "5.99944, 77.9961, 33.3228, 0.67", "6.3177, 79.1041, 33.0978, 0.33", "6.61119, 80.4275, 32.8509, 0.67", "6.85218, 87.6679, 37.4177, 0.67", "6.21052, 94.5683, 42.495, 0.67", "6.14466, 100.926, 48.3318, 0.67", "6.81024, 107.407, 53.978, 0.67", "5.93362, 113.49, 60.0691, 0.67", "6.58718, 119.96, 65.7307, 0.67", "8.31104, 126.712, 70.7737, 0.67", "10.4357, 133.931, 74.8718, 0.67", "11.2177, 140.643, 80.1983, 0.67", "10.9744, 147.854, 84.8166, 0.67", "12.1217, 155.52, 88.3831, 0.67", "14.0228, 163.509, 90.6335, 0.67", "16.1742, 171.665, 91.7717, 0.67", "17.8084, 179.968, 92.5799, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "3.52039, 6.38413, -19.4339, 1.33", "2.93285, 9.50987, -19.0791, 1.33", "2.9079, 14.186, -17.9636, 1.33", "2.91913, 18.109, -17.3374, 2.0", "2.91913, 18.109, -17.3374, 2.0", "2.91782, 21.1876, -17.1715, 1.33", "2.9148, 28.2346, -16.7919, 1.33", "3.12408, 36.2187, -16.4417, 1.33", "3.33848, 41.5589, -16.3071, 0.67", "3.72158, 48.0041, -15.851, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.8796, -1.05437, -4.34395, 1.33", "-14.6952, 3.38305, -6.04018, 1.33", "-15.5748, 3.88848, -6.25107, 1.33", "-19.4877, 6.01121, -7.14228, 0.67", "-22.1909, 7.46772, -7.91379, 0.67", "-27.2693, 9.96836, -9.58987, 0.67", "-29.1948, 10.8397, -10.3167, 0.67", "-34.0846, 13.0046, -12.6617, 0.67", "-38.2213, 14.7114, -14.7297, 0.67", "-42.6398, 16.376, -16.9559, 0.67", "-45.6993, 17.4972, -18.5762, 0.67", "-48.3224, 18.2801, -20.0773, 0.67", "-53.076, 19.6288, -23.1269, 0.67", "-56.8913, 20.7852, -25.8414, 0.67", "-58.5527, 21.2149, -27.0416, 0.67", "-60.7251, 21.6481, -28.41, 0.67", "-64.8811, 22.4667, -30.8254, 0.67", "-68.4328, 23.0874, -32.7625, 0.33", "-70.1066, 23.3024, -33.6278, 0.67", "-72.5508, 23.6003, -34.9117, 0.67", "-78.3361, 24.59, -38.0709, 0.67", "-80.4019, 25.0729, -39.1667, 0.33", "-82.4409, 25.7142, -40.2661, 0.67", "-84.6537, 26.497, -41.4947, 0.67", "-87.7303, 27.7454, -43.4266, 0.33", "-91.0405, 29.5543, -46.1, 0.67", "-92.5592, 30.5799, -47.6549, 0.67", "-94.5967, 31.9539, -50.0061, 0.33", "-95.3972, 32.49, -50.9689, 0.33", "-95.8977, 32.8834, -51.6249, 1.33", "-97.8444, 34.7472, -54.4009, 0.33", "-98.8967, 35.8631, -56.1106, 0.33", "-100.114, 37.3465, -58.1932, 0.67", "-100.957, 38.4111, -59.63, 0.33", "-101.563, 39.1827, -60.6929, 0.33", "-102.601, 40.5043, -62.468, 0.67", "-103.278, 41.3483, -63.5132, 0.33", "-104.155, 42.595, -64.902, 0.67", "-105.774, 44.8865, -67.825, 0.33", "-106.393, 45.6811, -69.1088, 0.33", "-106.787, 46.1066, -69.902, 0.33", "-107.194, 46.5244, -70.7672, 0.33", "-108.37, 47.7198, -73.6265, 0.67", "-110.42, 49.7193, -78.6484, 0.67", "-111.831, 50.9679, -81.6827, 0.33", "-112.8, 51.6968, -83.4966, 0.67", "-114.513, 52.8456, -86.3732, 0.33", "-115.859, 53.5664, -88.2809, 0.67", "-117.749, 54.3035, -90.2548, 0.33", "-120.178, 54.9006, -91.6111, 0.67", "-122.103, 55.151, -92.4134, 0.33", "-123.245, 55.2203, -92.8254, 0.67", "-125.285, 55.3274, -93.5803, 0.33", "-127.178, 55.4752, -94.3242, 0.67", "-131.006, 55.7771, -96.1925, 0.67", "-134.744, 56.2251, -98.2656, 0.33", "-136.598, 56.7097, -99.3074, 0.67", "-140.502, 58.1668, -101.501, 0.33", "-143.1, 59.4937, -103.082, 0.67", "-146.025, 61.3972, -104.861, 0.33", "-147.361, 62.4228, -105.647, 0.67", "-153.287, 67.3753, -108.893, 0.33", "-154.415, 68.3886, -109.508, 0.67", "-157.685, 71.6689, -111.362, 0.33", "-161.979, 76.4754, -113.725, 0.33", "-163.017, 77.7577, -114.298, 0.67", "-164.296, 79.4206, -115.073, 0.33", "-164.937, 80.315, -115.504, 0.67", "-167.351, 83.6931, -117.06, 0.33", "-169.748, 87.1508, -118.394, 0.67", "-171.959, 91.2134, -120.092, 0.33", "-172.229, 91.7567, -120.313, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.42961, -3.01137, -0.553942, 0.67", "-8.30326, -3.70347, 1.11306, 0.67", "-9.69763, -4.73818, 3.55161, 1.33", "-14.0565, -7.67019, 10.6062, 0.33", "-15.6578, -8.70473, 13.0281, 0.67", "-17.9606, -10.065, 16.3711, 0.67", "-18.7701, -10.4971, 17.4644, 0.33", "-19.186, -10.6804, 17.9834, 0.67", "-22.9134, -12.037, 22.0527, 0.33", "-25.0913, -12.681, 24.0445, 0.67", "-27.7026, -13.3245, 26.4057, 0.67", "-30.485, -13.8362, 28.7088, 0.67", "-32.9848, -14.202, 30.6661, 0.67", "-35.4357, -14.5054, 32.4937, 0.33", "-36.4855, -14.5723, 33.1596, 0.67", "-37.9926, -14.5891, 34.0201, 0.33", "-39.4133, -14.5853, 34.6808, 0.67", "-40.7048, -14.4884, 35.1893, 0.33", "-46.4697, -17.4211, 43.321, 0.33", "-52.2057, -20.1195, 51.5622, 0.33", "-58.1468, -23.101, 59.546, 0.33", "-64.9785, -27.2858, 66.0891, 0.33", "-72.147, -31.225, 72.4378, 0.33", "-80.0429, -35.79, 77.2805, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-4.0096, -7.68537, -10.3139, 1.33", "-5.41238, -9.05827, -11.294, 1.33", "-7.79392, -11.3891, -12.958, 1.33", "-9.89543, -13.4458, -14.4264, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.3696, -8.28387, -7.51395, 1.33", "-4.99366, -10.1419, -6.80505, 1.33", "-6.00617, -13.1565, -5.65489, 1.33", "-6.86443, -15.7118, -4.67995, 1.33", "-8.64105, -21.0014, -2.66178, 1.33", "-9.71963, -24.2127, -1.43656, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.609607, -6.41237, -14.2639, 1.33", "-0.103368, -10.9243, -14.8359, 0.67", "0.663353, -17.1903, -16.288, 0.67", "1.01849, -19.9199, -17.0395, 1.33", "1.65, -24.0329, -18.2169, 0.67", "3.08306, -31.8693, -20.6629, 0.67", "3.86168, -35.9324, -21.9542, 0.67", "4.29353, -39.7572, -23.4121, 0.67", "4.44298, -42.1006, -24.4613, 0.67", "4.5488, -45.7846, -26.3552, 0.67", "4.48944, -48.6502, -27.9941, 0.67", "4.06639, -51.3815, -29.6248, 0.67", "2.65294, -55.1398, -31.8713, 0.67", "2.24663, -55.9289, -32.3744, 0.67", "0.0155091, -59.5161, -34.9106, 0.67", "-1.35912, -61.432, -36.3861, 0.67", "-1.87496, -62.1871, -36.9802, 0.67", "-3.17975, -64.3456, -38.7112, 0.67", "-5.00401, -68.1268, -41.5399, 0.67", "-5.47631, -69.3392, -42.4892, 0.33", "-5.82003, -70.6864, -43.5978, 1.33", "-6.35609, -73.5977, -46.183, 0.67", "-6.52771, -74.9633, -47.686, 0.33", "-6.62054, -75.8518, -48.7891, 0.67", "-6.84928, -77.8937, -51.6585, 0.67", "-6.93701, -79.0852, -53.4615, 0.67", "-6.99724, -80.659, -56.0145, 1.33", "-6.97437, -85.0064, -63.9413, 0.33", "-6.94761, -85.3727, -64.6687, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "3.0304, -3.80937, 5.81606, 1.33", "2.57524, -10.886, 12.0544, 1.33", "2.29316, -16.7253, 17.0672, 1.33", "1.65643, -26.1984, 25.0263, 1.33", "1.00588, -36.0004, 33.1973, 1.33", "0.800573, -39.2662, 35.933, 1.33", "0.487124, -45.0273, 40.6327, 1.33", "0.392253, -46.8549, 42.3098, 1.33", "0.066529, -50.2614, 45.5734, 1.33", "-0.209057, -53.7543, 48.3568, 1.33", "0.0996261, -58.0356, 50.9886, 1.33", "0.155662, -61.4789, 53.0593, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "9.43039, 3.36313, 4.45605, 1.33", "12.3038, 2.5841, 4.98277, 1.33", "17.5909, 1.15064, 5.95196, 1.33", "22.1091, -0.074357, 6.7802, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998506351923
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.0165, 6.47364, -0.103052, 0.67", "20.5684, 16.042, -0.103052, 0.67", "32.1203, 25.6103, -0.103052, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "16.314, 21.6137, -10.6101, 0.33", "22.3157, 26.341, -12.5285, 0.33", "25.9205, 29.4649, -13.6406, 0.67", "29.6506, 32.8357, -14.7645, 0.33", "32.2975, 35.2626, -15.5775, 0.67", "37.4922, 40.0952, -17.1641, 0.67", "39.8898, 42.318, -17.8781, 0.33", "42.2988, 44.7347, -18.4197, 0.33", "42.6829, 45.1334, -18.5175, 1.33", "47.1396, 49.7727, -19.5432, 0.33", "48.4296, 51.043, -19.8334, 0.67", "50.2901, 52.7975, -20.2159, 0.33", "51.4991, 53.9358, -20.4106, 0.67", "55.3642, 57.5261, -20.9946, 0.33", "57.4929, 59.5872, -21.2468, 0.67", "60.3904, 62.6803, -21.5698, 0.33", "61.2176, 63.6494, -21.6869, 0.33", "61.6846, 64.2849, -21.764, 0.67", "62.7414, 65.9816, -21.9515, 0.33", "63.4818, 67.4529, -22.0767, 0.67", "65.3349, 71.4596, -22.3375, 0.33", "66.1439, 73.2752, -22.4369, 0.67", "67.0924, 75.4678, -22.5938, 0.33", "68.1598, 78.0372, -22.791, 0.67", "69.6315, 81.502, -23.0566, 0.33", "73.874, 90.9166, -23.7699, 0.67", "75.3526, 93.9917, -23.9771, 0.33", "77.1492, 97.4647, -24.2399, 0.67", "78.0141, 99.0171, -24.3679, 0.33", "80.9354, 103.964, -24.7815, 0.67", "82.1413, 105.969, -24.9238, 0.33", "82.8347, 107.232, -25.009, 0.67", "84.661, 110.546, -25.1257, 0.33", "85.2001, 111.546, -25.15, 0.67", "86.4836, 114.051, -25.2375, 0.33", "87.735, 117.414, -25.379, 0.67", "89.1879, 122.528, -25.634, 0.33" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.314, 21.6137, -10.6101, 0.67", "18.1799, 25.4494, -6.70843, 0.67", "18.9719, 27.7911, -4.54359, 1.33", "19.4068, 29.3593, -3.0002, 0.67", "20.0211, 31.1872, -1.02372, 0.67", "20.6273, 32.8061, 0.870795, 0.67", "21.5256, 35.1156, 3.70754, 0.67", "22.0622, 36.4573, 5.36694, 1.33", "22.8436, 38.6376, 8.49021, 0.67", "23.3266, 40.2681, 11.159, 0.67", "23.5326, 41.0449, 12.5556, 0.67", "23.9202, 42.5009, 15.3848, 0.33", "24.0158, 42.9264, 16.1871, 1.33", "24.2125, 45.2604, 20.0674, 0.33", "24.1411, 46.1995, 21.3471, 1.33", "23.6277, 48.7639, 24.3659, 0.67", "23.4586, 49.5551, 25.175, 0.33", "23.2753, 50.4248, 25.9744, 0.67", "22.881, 52.7333, 27.9401, 0.33", "22.7994, 53.4436, 28.4663, 1.33", "22.6467, 55.6181, 30.0187, 0.67", "22.6294, 58.1562, 31.6185, 0.67", "22.7551, 59.5746, 32.4602, 1.33", "23.1909, 62.3149, 33.9564, 0.67", "23.3208, 62.8601, 34.23, 1.33", "23.8097, 64.2061, 34.8744, 0.33", "24.8906, 66.2419, 35.9053, 0.67", "26.0058, 67.982, 36.8124, 0.33", "26.5053, 68.7142, 37.209, 1.33", "27.9886, 70.737, 38.3247, 0.33", "29.003, 71.9875, 39.2492, 2.0", "31.6739, 74.5423, 41.3693, 0.67", "32.4039, 75.2111, 41.9725, 0.33", "33.7202, 76.3613, 43.0662, 2.0", "35.6193, 77.9408, 44.637, 0.67", "39.4403, 80.9712, 47.8014, 1.33", "44.0633, 84.562, 51.7056, 0.67", "47.4753, 91.1224, 57.7171, 0.67", "51.677, 98.0974, 62.6078, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "3.72158, 48.0041, -15.851, 0.33", "2.91319, 51.144, -13.8846, 0.33", "2.7642, 51.7281, -13.6227, 0.67", "1.71966, 56.6923, -12.0842, 0.67", "0.613408, 62.0546, -10.8091, 0.33", "-0.175957, 66.1029, -9.76825, 0.33", "-0.551487, 68.3105, -9.19694, 0.67", "-1.17676, 72.2526, -8.07249, 0.67", "-1.81154, 76.9766, -6.9645, 0.67", "-2.14502, 79.7152, -6.52673, 0.67", "-2.53882, 84.2077, -5.95509, 0.33", "-2.69506, 86.8672, -5.54284, 0.67", "-2.88475, 89.8301, -5.00261, 0.33", "-3.0127, 92.8392, -4.41445, 0.67", "-3.11575, 95.5677, -3.98758, 0.33", "-3.14599, 99.0556, -3.62184, 0.67", "-3.12842, 100.799, -3.55239, 0.33", "-3.09498, 102.426, -3.49536, 0.33", "-2.77681, 106.978, -3.4778, 0.67", "-2.39954, 110.621, -3.45137, 0.33", "-2.27619, 111.529, -3.46127, 0.67", "-2.08717, 113.279, -3.50818, 0.33", "-1.96375, 114.447, -3.54938, 0.67", "-1.65688, 117.2, -3.64991, 0.33", "-1.62413, 117.531, -3.66286, 0.67", "-1.35029, 120.831, -3.78478, 0.33", "-1.29637, 122.21, -3.81303, 0.33", "-1.31472, 127.095, -3.81575, 0.33", "-1.35734, 128.094, -3.7576, 0.67", "-1.509, 129.723, -3.5388, 0.33", "-1.59361, 130.437, -3.41753, 0.67", "-1.77428, 131.752, -3.03375, 0.33", "-1.93526, 132.808, -2.5039, 0.67", "-2.49949, 135.184, -0.795396, 0.33", "-2.74953, 136.064, -0.0746791, 0.67", "-3.14214, 137.359, 1.07326, 0.33", "-3.79518, 139.572, 3.02409, 0.67", "-4.61524, 142.43, 5.46073, 0.33", "-4.84922, 143.232, 6.10018, 0.33", "-4.92397, 143.502, 6.273, 0.67", "-5.34605, 145.378, 7.09815, 0.33", "-5.70116, 147.355, 7.76069, 0.67", "-5.93675, 148.919, 8.28681, 0.33", "-6.01365, 149.546, 8.44274, 0.67", "-6.22776, 151.939, 9.0178, 0.33", "-6.34915, 153.534, 9.42508, 0.67", "-6.54399, 156.822, 10.1142, 0.33", "-6.72171, 160.101, 10.8161, 0.33", "-6.94406, 163.584, 11.5194, 0.67", "-7.07514, 165.181, 11.7747, 0.33", "-7.07514, 165.181, 11.7747, 0.67", "-7.43846, 168.346, 11.2352, 0.33", "-7.4808, 169.707, 10.3815, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.72158, 48.0041, -15.851, 0.67", "3.992, 51.893, -17.8227, 0.67", "4.46257, 54.1774, -19.0202, 0.67", "4.67773, 54.8642, -19.4516, 0.33", "5.29133, 56.741, -20.6756, 0.67", "6.54661, 60.2791, -23.07, 0.67", "6.874, 61.0902, -23.6215, 0.33", "8.01464, 63.6742, -25.4183, 0.67", "8.88174, 65.8653, -27.152, 0.67", "9.44661, 67.4202, -28.4256, 0.67", "9.92667, 68.9058, -29.7289, 0.67", "10.4631, 70.9076, -31.5467, 0.67", "10.8628, 74.1208, -34.5226, 0.67", "10.8434, 76.0574, -36.2407, 0.33", "10.7856, 76.792, -36.8556, 0.67", "10.4717, 78.7979, -38.5714, 0.33", "10.1036, 80.2549, -39.755, 0.67", "9.61944, 81.6626, -40.8838, 0.33", "9.11896, 82.9634, -41.833, 0.33", "8.73573, 83.9698, -42.4735, 0.67", "8.06501, 85.8082, -43.5875, 0.33", "7.56045, 87.2438, -44.3949, 0.67", "7.09182, 88.7771, -45.2148, 0.33", "6.76541, 89.8531, -45.7287, 0.33", "6.23357, 91.6163, -46.6862, 0.33", "5.95082, 92.6759, -47.272, 0.67", "5.56019, 94.5145, -48.3315, 0.33", "5.18507, 96.4784, -49.5131, 0.33", "5.02868, 97.6636, -50.2338, 0.67", "4.76655, 100.608, -52.0925, 0.33", "4.70342, 101.583, -52.7438, 0.67", "4.65474, 103.55, -54.018, 0.33", "4.6605, 103.82, -54.2001, 0.67", "4.69248, 105.742, -55.4403, 0.33", "4.69407, 106.563, -55.9187, 0.67", "4.66591, 108.332, -56.7411, 0.33", "4.65043, 109.005, -57.0241, 0.67", "4.60374, 111.289, -57.8528, 0.33", "4.60556, 113.339, -58.5972, 0.67", "4.62605, 116.306, -59.6261, 0.33", "4.64668, 117.6, -60.1227, 0.67", "4.68298, 119.581, -60.858, 0.33", "4.69582, 120.062, -61.0439, 0.67", "4.81938, 122.77, -62.0924, 0.33", "4.98967, 125.131, -63.202, 0.33", "5.14601, 126.72, -63.9032, 0.67" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-80.0429, -35.79, 77.2805, 0.33", "-86.8893, -38.2097, 84.0687, 0.33", "-92.5225, -41.5183, 91.5081, 0.33", "-97.4167, -42.8351, 100.072, 0.33", "-103.344, -43.1636, 108.082, 0.33", "-107.829, -41.6585, 116.861, 0.33", "-112.129, -41.4597, 125.854, 0.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-80.0429, -35.79, 77.2805, 0.33", "-86.3376, -39.2077, 84.2993, 0.33", "-92.4617, -42.2296, 91.6622, 0.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-9.89543, -13.4458, -14.4264, 0.67", "-16.0553, -20.0258, -18.5246, 0.67", "-17.4902, -21.5586, -19.4792, 0.67", "-22.5568, -26.9707, -22.85, 0.67", "-27.6691, -32.4317, -26.2513, 0.67", "-29.7975, -34.7053, -27.6674, 1.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.89543, -13.4458, -14.4264, 1.33", "-10.9572, -12.1607, -16.4514, 1.33", "-11.9299, -11.4496, -18.1081, 0.67", "-13.5658, -10.2293, -20.8578, 0.67", "-15.7123, -8.60459, -24.2823, 0.67", "-16.2109, -8.24641, -25.0274, 0.67", "-18.8768, -6.47468, -28.9708, 0.67", "-20.542, -5.4754, -31.5336, 0.67", "-22.9048, -4.18371, -35.315, 0.67", "-23.9581, -3.69587, -37.0697, 0.67", "-24.636, -3.42363, -38.0459, 0.67", "-25.6705, -2.93785, -39.5429, 0.67", "-26.2455, -2.5677, -40.4991, 0.67", "-27.8457, -1.54552, -43.4206, 0.67", "-28.9517, -0.834913, -45.5537, 0.67", "-29.5463, -0.353884, -46.8227, 0.67", "-30.7112, 0.799504, -49.5006, 0.67", "-32.2653, 2.41963, -52.982, 0.67", "-33.5725, 3.79873, -55.8738, 0.67", "-33.9078, 4.199, -56.6855, 0.67", "-34.8104, 5.48591, -59.0638, 0.67", "-35.781, 7.00652, -61.9898, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.71963, -24.2127, -1.43656, 0.67", "-16.2123, -30.2922, -2.87851, 0.67", "-18.4339, -32.353, -3.32236, 0.67", "-23.4872, -37.1732, -4.555, 0.67", "-26.3202, -39.9048, -5.36192, 0.67", "-31.3265, -44.2805, -6.89766, 0.67", "-33.7324, -46.2206, -7.67164, 0.67", "-38.1203, -49.0945, -9.11208, 0.67", "-40.7941, -50.623, -10.5451, 0.67", "-42.1898, -51.1749, -11.9215, 0.67", "-45.8568, -52.249, -16.8308, 0.67", "-47.1563, -52.6287, -18.9071, 0.67", "-50.4904, -54.1538, -24.6296, 0.67", "-52.7381, -55.3716, -28.4879, 0.67", "-56.2197, -57.7814, -34.1055, 0.67", "-57.7338, -59.1293, -36.5923, 0.67", "-59.9132, -61.7484, -40.3735, 0.67", "-62.4694, -65.3083, -44.3671, 0.67", "-64.1371, -67.5123, -46.2018, 0.67", "-66.148, -70.0846, -48.0253, 0.67", "-67.9934, -72.4725, -49.5874, 0.67", "-69.4972, -74.473, -50.9886, 0.67", "-72.1082, -77.9428, -53.4561, 0.67", "-76.9873, -83.8968, -57.8746, 0.67", "-78.4791, -85.6731, -59.2533, 0.67", "-80.1884, -87.5155, -60.9591, 0.67", "-82.4052, -89.6241, -63.3085, 0.67", "-85.1644, -91.9981, -66.642, 0.67", "-87.001, -93.5217, -69.3706, 0.67", "-88.7508, -95.1798, -72.6152, 0.67", "-90.7122, -96.8989, -76.0949, 0.67", "-93.7916, -99.2986, -81.451, 0.67", "-94.9989, -100.109, -83.5093, 1.33", "-97.0978, -101.563, -87.0617, 0.67", "-98.9154, -102.97, -89.792, 0.67", "-99.9177, -103.731, -90.9986, 0.67", "-101.932, -105.093, -92.8443, 0.33", "-102.751, -105.514, -93.4384, 0.67", "-106.252, -107.202, -95.4302, 0.67", "-107.938, -108.02, -96.1984, 0.33", "-109.987, -108.994, -97.0368, 0.67", "-112.795, -110.561, -98.2133, 0.33", "-113.797, -111.219, -98.6109, 0.67", "-115.207, -112.159, -99.1839, 0.33", "-115.788, -112.502, -99.3766, 1.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.71963, -24.2127, -1.43656, 0.67", "-8.68329, -25.5149, 1.28196, 0.67", "-7.75457, -26.614, 3.60973, 0.67", "-4.71176, -30.0389, 9.951, 0.67", "-2.71273, -32.1692, 13.5514, 0.67", "-0.893267, -34.239, 16.6726, 0.67", "1.13483, -36.4927, 20.0719, 0.67", "2.00708, -37.4437, 21.4724, 0.67", "5.10261, -40.9732, 26.0314, 0.67", "7.33929, -43.4432, 28.6755, 0.67", "8.89159, -45.3841, 30.3906, 0.67", "12.2635, -50.3698, 34.1651, 0.67", "15.1368, -54.7775, 37.237, 0.67", "16.9457, -57.4424, 39.2597, 0.67", "18.5281, -59.9572, 41.1788, 0.67", "20.2369, -62.9684, 43.5204, 0.67", "21.6203, -65.3905, 45.4049, 0.67", "23.882, -69.8339, 48.5927, 0.67", "25.7173, -73.5059, 51.5969, 0.67", "26.9424, -75.8271, 53.844, 0.67", "28.781, -79.4577, 57.7969, 0.33", "33.5759, -86.0964, 65.5642, 0.33", "38.2905, -92.1398, 73.8989, 0.33", "44.3315, -96.7168, 82.4131, 0.33", "50.5406, -99.3566, 91.6862, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-6.94761, -85.3727, -64.6687, 0.67", "-6.4521, -88.5668, -61.6907, 0.67", "-6.09835, -92.4915, -57.9306, 0.67", "-5.9922, -94.6999, -55.917, 0.67", "-5.62004, -104.265, -47.7263, 0.33", "-5.57709, -106.726, -45.8014, 0.67", "-5.59376, -110.586, -43.0823, 0.33", "-5.62845, -112.574, -41.652, 0.33", "-5.69401, -114.724, -40.199, 0.33", "-5.67092, -116.615, -39.2715, 0.67", "-5.63479, -119.872, -38.6003, 0.67", "-5.42403, -123.077, -37.9894, 0.33", "-5.06103, -126.074, -37.6216, 0.33", "-4.96577, -126.567, -37.55, 0.67", "-4.60055, -128.156, -37.2398, 0.33", "-3.92697, -130.72, -36.6015, 0.67", "-2.94537, -133.005, -35.7955, 0.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.94761, -85.3727, -64.6687, 0.67", "-5.61876, -88.2227, -64.8249, 0.67", "-3.53241, -92.4936, -65.0679, 0.67", "-2.60299, -94.4793, -65.1765, 0.33", "-2.4761, -94.7546, -65.1987, 0.67", "-1.20014, -97.6562, -65.4678, 0.33", "-0.956197, -98.2864, -65.5543, 0.67", "-0.296727, -100.338, -65.9541, 0.33", "-0.118275, -101.384, -66.1907, 0.67", "0.135224, -103.682, -66.7082, 0.33", "0.227928, -104.598, -66.993, 0.67", "0.415542, -107.364, -67.9325, 0.33", "0.512418, -109.65, -68.7348, 0.67", "0.569512, -112.511, -69.7925, 0.33", "0.640016, -114.568, -70.5668, 0.33", "0.711732, -118.079, -71.8456, 0.67" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.155662, -61.4789, 53.0593, 0.67", "0.707824, -64.4244, 54.3423, 0.67", "1.87989, -69.8794, 56.2124, 0.67", "2.26438, -71.0379, 56.575, 0.67", "3.2167, -73.7252, 57.0899, 0.67", "4.9349, -78.811, 57.5283, 0.67", "6.22263, -82.2115, 57.6856, 0.67", "7.37241, -84.866, 57.5962, 0.67", "9.86925, -90.0505, 57.1037, 1.33", "12.3839, -94.7199, 56.7837, 1.33", "15.8604, -100.725, 56.6743, 1.33", "18.1425, -104.61, 56.7615, 1.33", "20.2825, -108.155, 57.0745, 1.33", "23.015, -112.586, 57.814, 0.67", "24.8328, -115.454, 58.8364, 0.67", "26.905, -118.152, 60.4587, 0.67", "27.8196, -119.215, 61.3019, 1.33", "29.4128, -120.973, 62.8393, 0.67", "30.9459, -122.443, 64.2288, 0.67", "34.8344, -125.786, 67.0879, 0.67", "37.7121, -127.998, 68.505, 0.67", "40.2955, -129.876, 69.4372, 0.67", "43.2013, -132.158, 70.3051, 0.67", "44.5009, -133.277, 70.6043, 1.33", "46.7273, -135.41, 70.9902, 0.67", "50.2173, -138.851, 71.3589, 0.67", "52.1234, -140.81, 71.6346, 1.33", "55.1036, -143.808, 72.0663, 1.33", "56.6542, -145.498, 72.2896, 0.33", "57.5135, -146.452, 72.4131, 1.33", "59.3111, -148.482, 72.6712, 0.67", "59.909, -149.186, 72.7567, 0.67", "61.3006, -150.643, 72.9577, 0.33", "63.575, -152.754, 73.2891, 0.67", "65.3473, -154.332, 73.4789, 0.33", "66.0219, -154.932, 73.5471, 1.33", "67.7609, -156.553, 73.7052, 0.33", "69.0004, -157.707, 73.8074, 0.67", "70.576, -158.994, 73.9148, 0.33", "72.0121, -159.893, 73.9833, 1.33", "78.1561, -170.335, 73.9604, 1.33", "84.3276, -180.652, 72.3609, 1.33", "92.7126, -189.347, 70.3232, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "0.155662, -61.4789, 53.0593, 0.67", "4.11808, -66.1264, 57.1571, 0.67", "6.92503, -69.6131, 59.9256, 0.67", "7.99316, -70.9169, 61.0899, 0.67", "8.87574, -72.0136, 62.053, 0.67", "10.1705, -73.6004, 63.507, 0.67", "10.9246, -74.5245, 64.3538, 0.33", "12.1787, -76.1679, 65.708, 0.67", "14.4954, -78.8551, 68.3438, 0.33", "15.9081, -80.6585, 70.1973, 0.67", "17.5231, -82.7409, 72.4543, 0.33", "21.5685, -88.5341, 77.6517, 0.33", "26.125, -94.6735, 81.9039, 0.33", "30.1529, -100.256, 87.3637, 0.33", "35.2575, -104.797, 92.9897, 0.33", "39.8134, -110.193, 98.2384, 0.33", "43.233, -115.469, 104.402, 0.33", "47.1468, -121.914, 108.788, 0.33", "50.8351, -128.546, 113.058, 0.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "22.1091, -0.074357, 6.7802, 0.67", "22.9119, 0.029808, 8.33186, 0.67", "23.5085, 0.087822, 9.58297, 0.67", "25.9293, 0.394713, 14.9276, 0.67", "26.9935, 0.526746, 17.295, 0.67", "27.9593, 0.646562, 19.4435, 0.67", "31.8354, 1.12741, 28.0656, 0.67", "33.0344, 1.25824, 30.9223, 0.67", "34.0545, 1.41959, 33.5402, 0.67", "34.4861, 1.4943, 34.7409, 0.67", "37.7476, 0.777765, 40.3178, 0.67", "40.6234, 0.529856, 46.1422, 0.67", "42.7903, -0.746023, 52.1315, 0.67", "44.9204, -1.87335, 58.1655, 0.67", "47.536, -2.44892, 64.0889, 0.67", "50.3427, -1.90449, 69.9179, 0.67", "54.4907, -1.33623, 74.8816, 0.67", "58.9818, 0.175399, 79.2918, 0.67", "63.6946, 1.77616, 83.4279, 0.67", "68.4049, 4.14882, 87.1305, 0.67", "72.6718, 6.81597, 91.1319, 0.67", "76.8361, 8.84614, 95.6266, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "22.1091, -0.074357, 6.7802, 0.67", "22.6605, -0.430583, 6.81993, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "32.1203, 25.6103, -0.103052, 0.688915", "43.6723, 35.1786, -0.103052, 0.688915", "55.2242, 44.747, -0.103052, 0.688915" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.14601, 126.72, -63.9032, 0.67", "3.29767, 128.124, -63.6378, 0.67", "1.7766, 129.263, -63.4357, 0.33", "0.671028, 130.092, -63.3036, 0.67", "-2.53144, 132.524, -62.9482, 0.33", "-3.78396, 133.412, -62.8293, 0.67", "-6.45461, 135.18, -62.7159, 0.33", "-6.95178, 135.501, -62.7071, 0.67", "-8.88396, 136.719, -62.7134, 0.33", "-9.84043, 137.307, -62.7567, 0.67", "-13.3538, 139.262, -63.0169, 0.33", "-15.376, 140.268, -63.2205, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "5.14601, 126.72, -63.9032, 0.33", "2.73551, 132.802, -66.5723, 0.33", "1.92431, 134.848, -67.4705, 0.33", "1.36225, 136.266, -68.0928, 0.67", "-0.105495, 139.97, -69.718, 0.33", "-0.287037, 140.428, -69.919, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-29.7975, -34.7053, -27.6674, 0.33", "-30.3103, -36.6461, -28.2606, 0.33", "-30.9909, -39.1899, -28.771, 0.67", "-31.7255, -41.8966, -29.143, 0.33", "-32.9188, -46.574, -29.3921, 0.67", "-33.5091, -49.0075, -29.4032, 0.33", "-33.618, -49.4718, -29.3801, 0.67", "-34.3962, -52.6137, -29.0185, 0.33", "-34.5849, -53.3312, -28.8555, 0.67", "-35.2384, -56.0921, -27.9408, 0.33", "-35.4055, -56.7403, -27.6664, 0.67", "-36.1197, -59.3954, -26.6009, 0.33", "-36.4061, -60.3878, -26.2938, 0.67", "-36.9213, -61.9679, -26.1283, 0.33", "-37.4221, -63.3146, -26.1653, 0.33", "-37.6082, -63.7477, -26.2562, 0.67", "-38.0166, -64.7056, -26.6249, 0.33", "-38.5381, -65.9751, -27.353, 0.67", "-39.3709, -68.1675, -28.8556, 0.33", "-39.6535, -68.933, -29.443, 0.33", "-39.7529, -69.1836, -29.6548, 0.67", "-40.5339, -71.18, -31.338, 0.33", "-40.6012, -71.3582, -31.4873, 0.67", "-41.0271, -72.5351, -32.3563, 0.33", "-41.2145, -73.0803, -32.7418, 0.67", "-41.8025, -74.6598, -33.989, 0.33", "-41.9877, -75.0993, -34.361, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-29.7975, -34.7053, -27.6674, 0.67", "-34.3889, -40.7477, -23.5803, 0.67", "-36.1512, -43.0526, -22.0294, 0.67", "-37.6651, -45.0791, -20.5649, 0.67", "-39.5337, -47.5298, -18.7028, 0.67", "-43.3538, -52.3172, -14.7972, 0.67", "-45.5634, -54.8594, -12.5043, 0.67", "-46.3256, -55.6082, -11.751, 0.67", "-48.8333, -57.5948, -9.47929, 0.67", "-49.6259, -58.1168, -8.83495, 0.33", "-51.2235, -59.0246, -7.69381, 0.67", "-56.2281, -61.7029, -4.59505, 0.67", "-57.3341, -62.2485, -4.00696, 0.67", "-63.4994, -65.1421, -1.16146, 0.67", "-65.4178, -66.044, -0.430583, 0.67", "-67.3959, -67.0395, 0.292498, 0.33", "-68.619, -67.6531, 0.689706, 0.67", "-70.0193, -68.3182, 1.10117, 0.33", "-73.0653, -69.7799, 2.10951, 0.67", "-73.9375, -70.1843, 2.43567, 0.67", "-76.0801, -71.1628, 3.21153, 0.67", "-78.1448, -71.9803, 3.9119, 0.33", "-79.4364, -72.4166, 4.33509, 0.67", "-80.7586, -72.8225, 4.74369, 0.67", "-83.4679, -73.6042, 5.61319, 0.67", "-85.3857, -74.0943, 6.11962, 0.67", "-86.7496, -74.4584, 6.40507, 0.67", "-89.4796, -75.224, 6.93672, 0.67", "-90.7621, -75.5764, 7.19678, 0.67", "-95.0184, -76.7516, 7.93011, 0.67", "-97.4874, -77.4269, 8.28631, 0.33", "-98.7417, -77.7867, 8.44045, 0.67", "-99.9767, -78.2336, 8.56779, 0.33", "-101.882, -78.9497, 8.73969, 0.67", "-105.351, -80.2588, 9.01064, 0.67", "-109.516, -81.9178, 9.24971, 0.67", "-112.67, -83.1974, 9.52715, 0.67", "-119.429, -85.8879, 10.0778, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-35.781, 7.00652, -61.9898, 0.33", "-37.2941, 12.1586, -67.235, 0.33", "-37.8232, 13.9437, -69.1454, 0.67", "-38.8029, 17.4319, -72.8085, 0.33", "-38.9041, 17.795, -73.198, 0.67", "-39.883, 21.0865, -76.8435, 0.33", "-40.3112, 22.4271, -78.3436, 0.33", "-40.9308, 24.5135, -80.6713, 0.67", "-42.2443, 28.5287, -85.2791, 0.33", "-42.8137, 30.1315, -87.0098, 0.67", "-43.5541, 32.1564, -89.2313, 0.33", "-43.8812, 32.9511, -90.1125, 0.67", "-44.364, 34.1234, -91.4917, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-35.781, 7.00652, -61.9898, 0.33", "-42.7092, 10.0627, -70.4578, 0.33", "-43.4477, 10.3596, -71.2284, 1.33", "-47.8214, 12.1316, -75.3761, 0.33", "-49.3671, 12.7464, -76.7347, 0.33", "-50.124, 13.0437, -77.4011, 0.67", "-51.844, 13.7555, -78.8705, 0.33", "-54.0565, 14.6484, -80.4808, 0.67", "-56.2749, 15.5898, -82.2388, 0.33", "-59.3858, 16.7193, -84.7888, 1.33", "-62.6309, 17.9134, -88.1835, 0.67", "-64.0716, 18.4041, -89.8184, 0.67", "-66.8516, 19.3623, -93.268, 0.67", "-69.8941, 20.4805, -97.4574, 0.67", "-72.495, 21.2791, -100.855, 0.67", "-80.2923, 23.4606, -110.687, 0.33", "-81.3912, 23.7516, -112.077, 0.67", "-83.8554, 24.3629, -115.244, 0.33", "-85.7675, 24.8509, -117.675, 1.33", "-92.9781, 26.6038, -126.525, 0.33", "-93.6335, 26.7961, -127.273, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-115.788, -112.502, -99.3766, 0.33", "-117.242, -113.788, -100.581, 0.33", "-117.98, -114.474, -101.215, 0.67", "-119.902, -116.174, -102.797, 0.33", "-120.256, -116.474, -103.095, 0.67", "-122.571, -118.415, -105.284, 0.33", "-123.189, -118.933, -105.869, 0.67", "-124.19, -119.772, -106.928, 0.33", "-124.899, -120.376, -107.752, 0.67", "-126.213, -121.499, -109.403, 0.33", "-127.587, -122.588, -111.107, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-115.788, -112.502, -99.3766, 0.67", "-116.416, -114.768, -99.8468, 0.67", "-116.951, -116.557, -100.35, 0.67", "-117.699, -119.114, -101.135, 0.33", "-117.985, -120.131, -101.519, 0.67", "-118.442, -121.87, -102.231, 0.33", "-118.524, -122.244, -102.414, 0.67", "-118.993, -124.744, -103.933, 0.33", "-119.04, -125.113, -104.186, 0.67", "-119.204, -127.184, -105.728, 0.33", "-119.23, -127.744, -106.148, 0.67", "-119.221, -130.192, -108.144, 0.33", "-119.202, -130.672, -108.543, 0.67", "-119.117, -131.615, -109.342, 0.33", "-119.021, -132.814, -110.365, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "22.6605, -0.430583, 6.81993, 0.67", "25.3843, 0.870894, 5.52304, 0.67", "28.6752, 2.49573, 3.40587, 0.67", "31.3434, 3.69567, 1.63154, 0.67", "33.7512, 4.7337, 0.0600873, 0.67", "34.4199, 5.02385, -0.374997, 1.33", "36.5785, 5.88609, -2.29139, 0.67", "38.6923, 6.635, -4.78762, 0.67", "40.5369, 7.08946, -7.46405, 0.67", "41.4403, 7.22884, -8.92569, 0.67", "41.7553, 7.26084, -9.43851, 1.33", "46.9302, 7.86537, -18.065, 0.33", "47.5243, 7.96293, -19.0093, 0.33", "48.0642, 8.07097, -19.8042, 1.33", "49.1897, 8.46089, -21.4317, 0.33", "49.7573, 8.72949, -22.1671, 0.33", "51.2628, 9.68383, -23.6721, 0.67", "53.3571, 11.3323, -25.0161, 0.67", "54.5987, 12.3083, -25.8232, 0.67", "56.6373, 13.8666, -27.1329, 0.33", "57.4765, 14.4413, -27.6388, 1.33", "59.3359, 15.5105, -28.5882, 0.33", "60.7219, 16.1177, -29.1973, 1.33", "62.7379, 16.6976, -29.9643, 0.33", "63.7718, 16.8297, -30.2735, 0.67", "65.9081, 16.6654, -30.785, 1.33", "68.8954, 16.1345, -31.4166, 0.67", "70.519, 15.6954, -31.7304, 0.67", "72.5424, 15.0989, -32.1004, 0.33", "73.256, 14.8717, -32.2107, 1.33", "76.3351, 13.7773, -32.6774, 0.33", "77.3982, 13.3842, -32.8455, 0.33", "78.1836, 13.1007, -33.0265, 0.67", "79.4531, 12.7024, -33.2736, 0.33", "80.4924, 12.3893, -33.4713, 0.67", "81.9903, 11.9357, -33.8314, 0.33", "83.4873, 11.4714, -34.226, 0.67", "85.5548, 10.7629, -34.7939, 0.33", "86.1069, 10.5656, -34.946, 0.67", "87.3789, 10.0586, -35.2829, 0.33", "89.6523, 9.13096, -35.8461, 0.33", "90.889, 8.61594, -36.1166, 0.67", "92.9139, 7.76007, -36.4418, 0.33", "93.933, 7.32721, -36.5147, 0.67", "95.3879, 6.7474, -36.5512, 0.33", "96.1923, 6.46808, -36.5445, 0.33", "96.7734, 6.28577, -36.5517, 0.67", "99.0884, 5.56939, -36.7235, 0.33", "99.9172, 5.33981, -36.8316, 0.67", "101.407, 5.0322, -37.08, 0.33", "103.41, 4.7326, -37.5025, 0.67", "105.57, 4.44853, -38.0105, 0.33", "105.864, 4.4129, -38.0872, 0.67", "107.733, 4.19358, -38.6526, 0.33", "109.039, 4.04432, -39.0711, 0.67", "111.015, 3.75749, -39.6731, 0.33", "111.537, 3.71158, -39.7965, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "22.6605, -0.430583, 6.81993, 0.67", "25.5798, -7.49542, 10.6115, 0.67", "27.1824, -11.7694, 12.5915, 0.67", "28.15, -14.529, 13.975, 0.67", "29.2785, -17.9687, 15.7206, 0.67", "30.0803, -20.779, 17.1241, 0.67", "31.3521, -25.2473, 19.2936, 0.67", "32.1412, -28.2129, 20.5621, 0.67", "33.7557, -32.8827, 22.6121, 0.67", "35.3892, -36.5685, 24.2152, 0.67", "37.2233, -40.2816, 25.8043, 0.67", "39.4287, -44.3035, 27.4705, 0.67", "42.2203, -48.9988, 29.3393, 0.67", "44.3406, -52.215, 30.6494, 0.67", "47.9457, -57.4314, 32.6558, 0.67", "49.2617, -59.3227, 33.4566, 0.67", "50.707, -61.2882, 34.3303, 0.33", "52.0628, -63.2962, 35.2808, 0.67", "53.6742, -66.1656, 36.7313, 0.67", "54.1224, -67.3554, 37.4084, 0.67", "54.6963, -70.3131, 39.5457, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-119.429, -85.8879, 10.0778, 0.33", "-120.313, -88.2539, 10.0627, 0.33", "-120.418, -88.5468, 10.06, 0.67", "-120.865, -89.7597, 10.0503, 0.33", "-121.488, -91.5317, 10.0328, 0.67", "-121.991, -93.0094, 10.0182, 0.33", "-122.741, -95.409, 9.89326, 0.67", "-123.369, -97.5079, 9.70448, 0.33", "-123.604, -98.3368, 9.52342, 0.67", "-124.039, -99.7536, 9.04305, 0.33", "-124.316, -100.616, 8.64036, 0.67", "-124.848, -102.628, 7.43939, 0.33", "-124.949, -103.234, 7.05468, 0.67", "-125.369, -106.327, 4.70432, 0.33", "-125.441, -107.576, 3.74907, 0.33", "-125.452, -108.076, 3.37431, 0.33", "-125.439, -109.151, 2.58914, 0.67", "-125.277, -112.013, 0.757271, 0.33", "-124.947, -114.634, -0.681937, 0.67", "-124.543, -116.722, -1.44736, 0.33", "-124.379, -117.347, -1.69663, 0.67", "-125.983, -125.501, -6.07208, 0.67", "-129.276, -133.674, -9.41442, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-119.429, -85.8879, 10.0778, 0.67", "-122.472, -86.2316, 11.7265, 0.67", "-124.19, -86.4256, 12.657, 0.67", "-125.779, -86.6051, 13.5179, 0.67", "-128.375, -86.8982, 14.9241, 0.67", "-131.975, -87.3048, 16.8741, 0.67", "-134.652, -87.607, 18.3239, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-127.587, -122.588, -111.107, 0.33", "-128.493, -123.337, -112.251, 0.33", "-128.725, -123.534, -112.532, 0.67", "-130.858, -125.586, -114.77, 0.33", "-131.333, -126.073, -115.234, 0.67", "-133.638, -128.47, -117.317, 0.33", "-134.349, -129.189, -117.858, 0.33", "-135.467, -130.322, -118.631, 0.67", "-138.093, -132.892, -120.061, 0.33", "-138.551, -133.325, -120.227, 0.67", "-139.634, -134.402, -120.584, 0.33", "-141.78, -136.495, -121.402, 0.33", "-142.551, -137.195, -121.739, 0.67", "-144.036, -138.327, -122.53, 0.33", "-144.714, -138.761, -122.958, 0.67", "-148.57, -141.14, -125.664, 0.33", "-151.61, -143.001, -127.971, 0.67", "-154.391, -144.669, -130.229, 0.33", "-158.43, -147.02, -133.552, 0.33", "-160.308, -148.096, -135.191, 0.67", "-162.203, -149.085, -136.837, 0.33", "-162.651, -149.262, -137.192, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-127.587, -122.588, -111.107, 0.33", "-129.378, -123.73, -111.194, 0.33", "-130.72, -124.696, -110.994, 0.67", "-137.038, -129.399, -109.464, 0.33", "-138.1, -130.19, -109.207, 0.67", "-140.833, -132.224, -108.546, 0.33", "-143.708, -134.365, -107.85, 0.67", "-147.634, -137.491, -106.904, 0.33", "-148.606, -138.341, -106.521, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "54.6963, -70.3131, 39.5457, 0.33", "55.191, -72.012, 40.0905, 0.33", "55.8987, -74.4578, 40.8748, 0.67", "57.2055, -78.9247, 42.306, 0.67", "58.1662, -82.4337, 43.4356, 0.67", "59.2362, -86.3197, 44.7323, 0.67", "60.1683, -89.9252, 46.0663, 0.67", "61.0122, -93.2064, 47.4364, 0.67", "61.3131, -94.3784, 47.9729, 0.67", "61.9822, -96.6293, 49.0831, 0.67", "62.6635, -99.2162, 50.4381, 0.67", "63.6163, -102.795, 52.3681, 0.67", "64.9787, -107.146, 54.6993, 0.33", "65.3879, -108.409, 55.3485, 0.67", "66.1635, -110.668, 56.398, 0.67", "67.2208, -113.258, 57.4644, 0.67", "68.7343, -116.594, 58.6089, 0.67", "70.1244, -119.44, 59.1666, 0.67", "71.713, -122.422, 59.4229, 0.67", "72.7735, -124.184, 59.4288, 0.67", "74.3545, -126.426, 59.3101, 0.33", "75.0438, -127.247, 59.1642, 1.33", "78.6114, -131.177, 58.0777, 0.67", "80.4501, -133.049, 57.436, 0.67", "83.5735, -136.004, 56.2835, 0.67", "85.8224, -138.172, 55.4656, 0.67", "88.889, -141.252, 54.3121, 0.33", "89.2854, -141.608, 54.1742, 0.67", "94.1207, -151.656, 55.4941, 0.67", "98.4971, -162.007, 55.4926, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "54.6963, -70.3131, 39.5457, 0.67", "53.3724, -71.5601, 40.2177, 0.67", "46.2351, -77.3283, 42.9375, 0.67", "38.8321, -82.7779, 45.6755, 0.67", "31.1174, -86.837, 49.8018, 0.67", "24.3788, -91.3343, 54.9438, 0.67", "18.3889, -96.0025, 60.7668, 0.67", "12.1635, -99.0377, 67.4918, 0.67", "6.50413, -101.786, 74.8231, 0.67", "1.09614, -103.209, 82.7748, 0.67", "-2.56028, -104.416, 91.7026, 0.67", "-4.63762, -104.658, 101.24, 0.67", "-6.29748, -105.102, 110.844, 0.67", "-8.99979, -103.816, 120.191, 0.67", "-10.9539, -103.023, 129.763, 0.67", "-13.5584, -103.653, 139.134, 0.67", "-17.0686, -104.073, 148.228, 0.67", "-19.5754, -106.813, 157.129, 0.67", "-20.7004, -107.556, 166.78, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-134.652, -87.607, 18.3239, 0.67", "-143.455, -85.0114, 20.6649, 0.67", "-144.777, -84.6214, 21.0166, 0.67", "-148.553, -83.5081, 22.0206, 0.33", "-149.251, -83.3023, 22.2062, 0.67", "-157.495, -80.8716, 24.3984, 0.33", "-166.485, -78.0442, 27.8596, 0.33", "-175.689, -75.1608, 30.6651, 0.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-134.652, -87.607, 18.3239, 0.67", "-136.548, -88.077, 19.7481, 0.67", "-138.907, -88.5269, 21.5418, 0.33", "-141.375, -88.4283, 22.5608, 0.67", "-142.533, -88.3821, 23.039, 0.33", "-143.6, -88.3395, 23.4793, 0.67", "-144.706, -88.2953, 23.9363, 0.33", "-145.248, -88.2442, 24.0404, 0.67", "-149.182, -85.4633, 22.2809, 0.33", "-157.019, -83.1205, 24.3049, 0.33", "-164.912, -81.7034, 26.9573, 0.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-175.689, -75.1608, 30.6651, 0.33", "-187.077, -71.7746, 32.5417, 0.33", "-198.142, -67.2419, 33.2382, 0.33", "-208.58, -61.5057, 32.739, 0.33", "-218.73, -55.3371, 32.0672, 0.33", "-228.716, -48.9117, 31.91, 0.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-175.689, -75.1608, 30.6651, 0.33", "-187.715, -71.5591, 31.9788, 0.33", "-199.827, -68.2196, 33.3042, 0.33", "-211.193, -63.3456, 35.4905, 0.33", "-222.989, -58.9579, 35.2862, 0.33", "-234.59, -54.337, 33.7743, 0.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-164.912, -81.7034, 26.9573, 0.33", "-175.202, -79.5622, 29.5479, 0.33" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-164.912, -81.7034, 26.9573, 0.33", "-173.211, -80.5579, 31.3026, 0.33" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_44", "dend_39", "dend_38", "dend_35", "dend_20", "dend_13", "dend_10", "dend_7", "dend_0", "dend_47", "dend_46", "dend_43", "dend_40", "dend_37", "dend_36", "dend_24", "dend_21", "dend_15", "dend_14", "dend_12", "dend_11", "dend_9", "dend_8", "dend_6", "dend_1", "dend_42", "dend_41", "dend_34", "dend_25", "dend_23", "dend_22", "dend_17", "dend_16", "dend_5", "dend_2", "dend_33", "dend_26", "dend_19", "dend_18", "dend_4", "dend_3", "dend_30", "dend_27", "dend_32", "dend_31", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_44", "dend_39", "dend_38", "dend_35", "dend_20", "dend_13", "dend_10", "dend_7", "dend_0", "dend_47", "dend_46", "dend_43", "dend_40", "dend_37", "dend_36", "dend_24", "dend_21", "dend_15", "dend_14", "dend_12", "dend_11", "dend_9", "dend_8", "dend_6", "dend_1", "dend_42", "dend_41", "dend_34", "dend_25", "dend_23", "dend_22", "dend_17", "dend_16", "dend_5", "dend_2", "dend_33", "dend_26", "dend_19", "dend_18", "dend_4", "dend_3", "dend_30", "dend_27", "dend_32", "dend_31", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_44", "dend_39", "dend_38", "dend_35", "dend_20", "dend_13", "dend_10", "dend_7", "dend_0", "axon_0", "dend_47", "dend_46", "dend_43", "dend_40", "dend_37", "dend_36", "dend_24", "dend_21", "dend_15", "dend_14", "dend_12", "dend_11", "dend_9", "dend_8", "dend_6", "dend_1", "axon_1", "dend_42", "dend_41", "dend_34", "dend_25", "dend_23", "dend_22", "dend_17", "dend_16", "dend_5", "dend_2", "dend_33", "dend_26", "dend_19", "dend_18", "dend_4", "dend_3", "dend_30", "dend_27", "dend_32", "dend_31", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_NBC_8773d50bcd_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_24
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, axon_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, axon_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.4999998506351923)
    connect dend_44(0), soma_0(0.4999998506351923)
    connect dend_39(0), soma_0(0.4999998506351923)
    connect dend_38(0), soma_0(0.4999998506351923)
    connect dend_35(0), soma_0(0.4999998506351923)
    connect dend_20(0), soma_0(0.4999998506351923)
    connect dend_13(0), soma_0(0.4999998506351923)
    connect dend_10(0), soma_0(0.4999998506351923)
    connect dend_7(0), soma_0(0.4999998506351923)
    connect dend_0(0), soma_0(0.4999998506351923)
    connect axon_0(0), soma_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.43002, -7.14884, -0.034622, 2.50374 ) }
    soma_0 { pt3dadd( -6.6077, -6.46772, -0.0380434, 4.42492 ) }
    soma_0 { pt3dadd( -5.78537, -5.7866, -0.0414649, 9.53787 ) }
    soma_0 { pt3dadd( -4.96305, -5.10547, -0.0448864, 10.4902 ) }
    soma_0 { pt3dadd( -4.14072, -4.42435, -0.0483079, 10.6433 ) }
    soma_0 { pt3dadd( -3.31839, -3.74322, -0.0517294, 10.5673 ) }
    soma_0 { pt3dadd( -2.49607, -3.0621, -0.0551509, 10.1499 ) }
    soma_0 { pt3dadd( -1.67374, -2.38098, -0.0585724, 9.69481 ) }
    soma_0 { pt3dadd( -0.851413, -1.69985, -0.0619939, 9.23972 ) }
    soma_0 { pt3dadd( -0.0290863, -1.01873, -0.0654154, 9.00279 ) }
    soma_0 { pt3dadd( 0.79324, -0.337605, -0.0688369, 8.97028 ) }
    soma_0 { pt3dadd( 1.61557, 0.343519, -0.0722584, 8.95274 ) }
    soma_0 { pt3dadd( 2.43789, 1.02464, -0.0756799, 8.9352 ) }
    soma_0 { pt3dadd( 3.26022, 1.70577, -0.0791013, 8.91317 ) }
    soma_0 { pt3dadd( 4.08255, 2.38689, -0.0825228, 8.85399 ) }
    soma_0 { pt3dadd( 4.90487, 3.06802, -0.0859443, 8.77123 ) }
    soma_0 { pt3dadd( 5.7272, 3.74914, -0.0893658, 8.34273 ) }
    soma_0 { pt3dadd( 6.54953, 4.43026, -0.0927873, 7.49401 ) }
    soma_0 { pt3dadd( 7.37185, 5.11139, -0.0962088, 6.34034 ) }
    soma_0 { pt3dadd( 8.19418, 5.79251, -0.0996303, 4.815 ) }
    soma_0 { pt3dadd( 9.0165, 6.47364, -0.103052, 2.95062 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 8.9604, 7.00163, -11.8639, 1.33 ) }
    dend_45 { pt3dadd( 10.781, 10.6193, -11.5535, 1.33 ) }
    dend_45 { pt3dadd( 12.3664, 13.7695, -11.2832, 1.33 ) }
    dend_45 { pt3dadd( 14.3674, 17.7456, -10.942, 0.67 ) }
    dend_45 { pt3dadd( 14.7651, 18.5359, -10.8742, 0.67 ) }
    dend_45 { pt3dadd( 15.7907, 20.5738, -10.6993, 0.67 ) }
    dend_45 { pt3dadd( 16.314, 21.6137, -10.6101, 1.33 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 6.02039, 7.05863, -0.533942, 0.67 ) }
    dend_44 { pt3dadd( 5.10384, 8.80881, 2.41672, 0.67 ) }
    dend_44 { pt3dadd( 4.46295, 10.3504, 4.51364, 0.67 ) }
    dend_44 { pt3dadd( 2.55639, 16.927, 11.7619, 0.67 ) }
    dend_44 { pt3dadd( 1.71195, 21.2395, 15.6933, 0.67 ) }
    dend_44 { pt3dadd( 1.04007, 26.5456, 19.8647, 0.67 ) }
    dend_44 { pt3dadd( 0.851545, 29.2269, 21.7022, 0.67 ) }
    dend_44 { pt3dadd( 0.755287, 31.6833, 23.1384, 0.67 ) }
    dend_44 { pt3dadd( 0.800741, 35.5424, 24.8442, 0.67 ) }
    dend_44 { pt3dadd( 0.974279, 38.8173, 25.7344, 0.67 ) }
    dend_44 { pt3dadd( 1.49844, 43.7492, 26.9464, 0.67 ) }
    dend_44 { pt3dadd( 2.00288, 47.5532, 28.1032, 0.67 ) }
    dend_44 { pt3dadd( 2.11433, 48.6387, 28.4913, 0.67 ) }
    dend_44 { pt3dadd( 2.35081, 51.472, 29.6278, 0.33 ) }
    dend_44 { pt3dadd( 2.46411, 53.5475, 30.5406, 0.67 ) }
    dend_44 { pt3dadd( 2.58963, 56.467, 31.8633, 0.33 ) }
    dend_44 { pt3dadd( 2.66297, 58.5228, 32.7523, 0.67 ) }
    dend_44 { pt3dadd( 2.70397, 60.3597, 33.553, 0.33 ) }
    dend_44 { pt3dadd( 2.76162, 61.4539, 33.9675, 0.67 ) }
    dend_44 { pt3dadd( 2.92869, 63.066, 34.4869, 0.33 ) }
    dend_44 { pt3dadd( 3.08641, 64.6819, 34.7736, 0.67 ) }
    dend_44 { pt3dadd( 3.26177, 66.199, 34.8089, 0.33 ) }
    dend_44 { pt3dadd( 3.43939, 67.3448, 34.7478, 0.67 ) }
    dend_44 { pt3dadd( 3.804, 69.403, 34.5756, 0.67 ) }
    dend_44 { pt3dadd( 4.20023, 71.4105, 34.3676, 0.67 ) }
    dend_44 { pt3dadd( 4.88401, 74.2667, 33.9802, 0.33 ) }
    dend_44 { pt3dadd( 5.46949, 76.3244, 33.6448, 0.67 ) }
    dend_44 { pt3dadd( 5.8075, 77.399, 33.4438, 0.33 ) }
    dend_44 { pt3dadd( 5.99944, 77.9961, 33.3228, 0.67 ) }
    dend_44 { pt3dadd( 6.3177, 79.1041, 33.0978, 0.33 ) }
    dend_44 { pt3dadd( 6.61119, 80.4275, 32.8509, 0.67 ) }
    dend_44 { pt3dadd( 6.85218, 87.6679, 37.4177, 0.67 ) }
    dend_44 { pt3dadd( 6.21052, 94.5683, 42.495, 0.67 ) }
    dend_44 { pt3dadd( 6.14466, 100.926, 48.3318, 0.67 ) }
    dend_44 { pt3dadd( 6.81024, 107.407, 53.978, 0.67 ) }
    dend_44 { pt3dadd( 5.93362, 113.49, 60.0691, 0.67 ) }
    dend_44 { pt3dadd( 6.58718, 119.96, 65.7307, 0.67 ) }
    dend_44 { pt3dadd( 8.31104, 126.712, 70.7737, 0.67 ) }
    dend_44 { pt3dadd( 10.4357, 133.931, 74.8718, 0.67 ) }
    dend_44 { pt3dadd( 11.2177, 140.643, 80.1983, 0.67 ) }
    dend_44 { pt3dadd( 10.9744, 147.854, 84.8166, 0.67 ) }
    dend_44 { pt3dadd( 12.1217, 155.52, 88.3831, 0.67 ) }
    dend_44 { pt3dadd( 14.0228, 163.509, 90.6335, 0.67 ) }
    dend_44 { pt3dadd( 16.1742, 171.665, 91.7717, 0.67 ) }
    dend_44 { pt3dadd( 17.8084, 179.968, 92.5799, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 3.52039, 6.38413, -19.4339, 1.33 ) }
    dend_39 { pt3dadd( 2.93285, 9.50987, -19.0791, 1.33 ) }
    dend_39 { pt3dadd( 2.9079, 14.186, -17.9636, 1.33 ) }
    dend_39 { pt3dadd( 2.91913, 18.109, -17.3374, 2.0 ) }
    dend_39 { pt3dadd( 2.91913, 18.109, -17.3374, 2.0 ) }
    dend_39 { pt3dadd( 2.91782, 21.1876, -17.1715, 1.33 ) }
    dend_39 { pt3dadd( 2.9148, 28.2346, -16.7919, 1.33 ) }
    dend_39 { pt3dadd( 3.12408, 36.2187, -16.4417, 1.33 ) }
    dend_39 { pt3dadd( 3.33848, 41.5589, -16.3071, 0.67 ) }
    dend_39 { pt3dadd( 3.72158, 48.0041, -15.851, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.8796, -1.05437, -4.34395, 1.33 ) }
    dend_38 { pt3dadd( -14.6952, 3.38305, -6.04018, 1.33 ) }
    dend_38 { pt3dadd( -15.5748, 3.88848, -6.25107, 1.33 ) }
    dend_38 { pt3dadd( -19.4877, 6.01121, -7.14228, 0.67 ) }
    dend_38 { pt3dadd( -22.1909, 7.46772, -7.91379, 0.67 ) }
    dend_38 { pt3dadd( -27.2693, 9.96836, -9.58987, 0.67 ) }
    dend_38 { pt3dadd( -29.1948, 10.8397, -10.3167, 0.67 ) }
    dend_38 { pt3dadd( -34.0846, 13.0046, -12.6617, 0.67 ) }
    dend_38 { pt3dadd( -38.2213, 14.7114, -14.7297, 0.67 ) }
    dend_38 { pt3dadd( -42.6398, 16.376, -16.9559, 0.67 ) }
    dend_38 { pt3dadd( -45.6993, 17.4972, -18.5762, 0.67 ) }
    dend_38 { pt3dadd( -48.3224, 18.2801, -20.0773, 0.67 ) }
    dend_38 { pt3dadd( -53.076, 19.6288, -23.1269, 0.67 ) }
    dend_38 { pt3dadd( -56.8913, 20.7852, -25.8414, 0.67 ) }
    dend_38 { pt3dadd( -58.5527, 21.2149, -27.0416, 0.67 ) }
    dend_38 { pt3dadd( -60.7251, 21.6481, -28.41, 0.67 ) }
    dend_38 { pt3dadd( -64.8811, 22.4667, -30.8254, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_38 { pt3dadd( -68.4328, 23.0874, -32.7625, 0.33 ) }
    dend_38 { pt3dadd( -70.1066, 23.3024, -33.6278, 0.67 ) }
    dend_38 { pt3dadd( -72.5508, 23.6003, -34.9117, 0.67 ) }
    dend_38 { pt3dadd( -78.3361, 24.59, -38.0709, 0.67 ) }
    dend_38 { pt3dadd( -80.4019, 25.0729, -39.1667, 0.33 ) }
    dend_38 { pt3dadd( -82.4409, 25.7142, -40.2661, 0.67 ) }
    dend_38 { pt3dadd( -84.6537, 26.497, -41.4947, 0.67 ) }
    dend_38 { pt3dadd( -87.7303, 27.7454, -43.4266, 0.33 ) }
    dend_38 { pt3dadd( -91.0405, 29.5543, -46.1, 0.67 ) }
    dend_38 { pt3dadd( -92.5592, 30.5799, -47.6549, 0.67 ) }
    dend_38 { pt3dadd( -94.5967, 31.9539, -50.0061, 0.33 ) }
    dend_38 { pt3dadd( -95.3972, 32.49, -50.9689, 0.33 ) }
    dend_38 { pt3dadd( -95.8977, 32.8834, -51.6249, 1.33 ) }
    dend_38 { pt3dadd( -97.8444, 34.7472, -54.4009, 0.33 ) }
    dend_38 { pt3dadd( -98.8967, 35.8631, -56.1106, 0.33 ) }
    dend_38 { pt3dadd( -100.114, 37.3465, -58.1932, 0.67 ) }
    dend_38 { pt3dadd( -100.957, 38.4111, -59.63, 0.33 ) }
    dend_38 { pt3dadd( -101.563, 39.1827, -60.6929, 0.33 ) }
    dend_38 { pt3dadd( -102.601, 40.5043, -62.468, 0.67 ) }
    dend_38 { pt3dadd( -103.278, 41.3483, -63.5132, 0.33 ) }
    dend_38 { pt3dadd( -104.155, 42.595, -64.902, 0.67 ) }
    dend_38 { pt3dadd( -105.774, 44.8865, -67.825, 0.33 ) }
    dend_38 { pt3dadd( -106.393, 45.6811, -69.1088, 0.33 ) }
    dend_38 { pt3dadd( -106.787, 46.1066, -69.902, 0.33 ) }
    dend_38 { pt3dadd( -107.194, 46.5244, -70.7672, 0.33 ) }
    dend_38 { pt3dadd( -108.37, 47.7198, -73.6265, 0.67 ) }
    dend_38 { pt3dadd( -110.42, 49.7193, -78.6484, 0.67 ) }
    dend_38 { pt3dadd( -111.831, 50.9679, -81.6827, 0.33 ) }
    dend_38 { pt3dadd( -112.8, 51.6968, -83.4966, 0.67 ) }
    dend_38 { pt3dadd( -114.513, 52.8456, -86.3732, 0.33 ) }
    dend_38 { pt3dadd( -115.859, 53.5664, -88.2809, 0.67 ) }
    dend_38 { pt3dadd( -117.749, 54.3035, -90.2548, 0.33 ) }
    dend_38 { pt3dadd( -120.178, 54.9006, -91.6111, 0.67 ) }
    dend_38 { pt3dadd( -122.103, 55.151, -92.4134, 0.33 ) }
    dend_38 { pt3dadd( -123.245, 55.2203, -92.8254, 0.67 ) }
    dend_38 { pt3dadd( -125.285, 55.3274, -93.5803, 0.33 ) }
    dend_38 { pt3dadd( -127.178, 55.4752, -94.3242, 0.67 ) }
    dend_38 { pt3dadd( -131.006, 55.7771, -96.1925, 0.67 ) }
    dend_38 { pt3dadd( -134.744, 56.2251, -98.2656, 0.33 ) }
    dend_38 { pt3dadd( -136.598, 56.7097, -99.3074, 0.67 ) }
    dend_38 { pt3dadd( -140.502, 58.1668, -101.501, 0.33 ) }
    dend_38 { pt3dadd( -143.1, 59.4937, -103.082, 0.67 ) }
    dend_38 { pt3dadd( -146.025, 61.3972, -104.861, 0.33 ) }
    dend_38 { pt3dadd( -147.361, 62.4228, -105.647, 0.67 ) }
    dend_38 { pt3dadd( -153.287, 67.3753, -108.893, 0.33 ) }
    dend_38 { pt3dadd( -154.415, 68.3886, -109.508, 0.67 ) }
    dend_38 { pt3dadd( -157.685, 71.6689, -111.362, 0.33 ) }
    dend_38 { pt3dadd( -161.979, 76.4754, -113.725, 0.33 ) }
    dend_38 { pt3dadd( -163.017, 77.7577, -114.298, 0.67 ) }
    dend_38 { pt3dadd( -164.296, 79.4206, -115.073, 0.33 ) }
    dend_38 { pt3dadd( -164.937, 80.315, -115.504, 0.67 ) }
    dend_38 { pt3dadd( -167.351, 83.6931, -117.06, 0.33 ) }
    dend_38 { pt3dadd( -169.748, 87.1508, -118.394, 0.67 ) }
    dend_38 { pt3dadd( -171.959, 91.2134, -120.092, 0.33 ) }
    dend_38 { pt3dadd( -172.229, 91.7567, -120.313, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 55/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.42961, -3.01137, -0.553942, 0.67 ) }
    dend_35 { pt3dadd( -8.30326, -3.70347, 1.11306, 0.67 ) }
    dend_35 { pt3dadd( -9.69763, -4.73818, 3.55161, 1.33 ) }
    dend_35 { pt3dadd( -14.0565, -7.67019, 10.6062, 0.33 ) }
    dend_35 { pt3dadd( -15.6578, -8.70473, 13.0281, 0.67 ) }
    dend_35 { pt3dadd( -17.9606, -10.065, 16.3711, 0.67 ) }
    dend_35 { pt3dadd( -18.7701, -10.4971, 17.4644, 0.33 ) }
    dend_35 { pt3dadd( -19.186, -10.6804, 17.9834, 0.67 ) }
    dend_35 { pt3dadd( -22.9134, -12.037, 22.0527, 0.33 ) }
    dend_35 { pt3dadd( -25.0913, -12.681, 24.0445, 0.67 ) }
    dend_35 { pt3dadd( -27.7026, -13.3245, 26.4057, 0.67 ) }
    dend_35 { pt3dadd( -30.485, -13.8362, 28.7088, 0.67 ) }
    dend_35 { pt3dadd( -32.9848, -14.202, 30.6661, 0.67 ) }
    dend_35 { pt3dadd( -35.4357, -14.5054, 32.4937, 0.33 ) }
    dend_35 { pt3dadd( -36.4855, -14.5723, 33.1596, 0.67 ) }
    dend_35 { pt3dadd( -37.9926, -14.5891, 34.0201, 0.33 ) }
    dend_35 { pt3dadd( -39.4133, -14.5853, 34.6808, 0.67 ) }
    dend_35 { pt3dadd( -40.7048, -14.4884, 35.1893, 0.33 ) }
    dend_35 { pt3dadd( -46.4697, -17.4211, 43.321, 0.33 ) }
    dend_35 { pt3dadd( -52.2057, -20.1195, 51.5622, 0.33 ) }
    dend_35 { pt3dadd( -58.1468, -23.101, 59.546, 0.33 ) }
    dend_35 { pt3dadd( -64.9785, -27.2858, 66.0891, 0.33 ) }
    dend_35 { pt3dadd( -72.147, -31.225, 72.4378, 0.33 ) }
    dend_35 { pt3dadd( -80.0429, -35.79, 77.2805, 0.33 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -4.0096, -7.68537, -10.3139, 1.33 ) }
    dend_20 { pt3dadd( -5.41238, -9.05827, -11.294, 1.33 ) }
    dend_20 { pt3dadd( -7.79392, -11.3891, -12.958, 1.33 ) }
    dend_20 { pt3dadd( -9.89543, -13.4458, -14.4264, 2.0 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 83/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.3696, -8.28387, -7.51395, 1.33 ) }
    dend_13 { pt3dadd( -4.99366, -10.1419, -6.80505, 1.33 ) }
    dend_13 { pt3dadd( -6.00617, -13.1565, -5.65489, 1.33 ) }
    dend_13 { pt3dadd( -6.86443, -15.7118, -4.67995, 1.33 ) }
    dend_13 { pt3dadd( -8.64105, -21.0014, -2.66178, 1.33 ) }
    dend_13 { pt3dadd( -9.71963, -24.2127, -1.43656, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.609607, -6.41237, -14.2639, 1.33 ) }
    dend_10 { pt3dadd( -0.103368, -10.9243, -14.8359, 0.67 ) }
    dend_10 { pt3dadd( 0.663353, -17.1903, -16.288, 0.67 ) }
    dend_10 { pt3dadd( 1.01849, -19.9199, -17.0395, 1.33 ) }
    dend_10 { pt3dadd( 1.65, -24.0329, -18.2169, 0.67 ) }
    dend_10 { pt3dadd( 3.08306, -31.8693, -20.6629, 0.67 ) }
    dend_10 { pt3dadd( 3.86168, -35.9324, -21.9542, 0.67 ) }
    dend_10 { pt3dadd( 4.29353, -39.7572, -23.4121, 0.67 ) }
    dend_10 { pt3dadd( 4.44298, -42.1006, -24.4613, 0.67 ) }
    dend_10 { pt3dadd( 4.5488, -45.7846, -26.3552, 0.67 ) }
    dend_10 { pt3dadd( 4.48944, -48.6502, -27.9941, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_10 { pt3dadd( 4.06639, -51.3815, -29.6248, 0.67 ) }
    dend_10 { pt3dadd( 2.65294, -55.1398, -31.8713, 0.67 ) }
    dend_10 { pt3dadd( 2.24663, -55.9289, -32.3744, 0.67 ) }
    dend_10 { pt3dadd( 0.0155091, -59.5161, -34.9106, 0.67 ) }
    dend_10 { pt3dadd( -1.35912, -61.432, -36.3861, 0.67 ) }
    dend_10 { pt3dadd( -1.87496, -62.1871, -36.9802, 0.67 ) }
    dend_10 { pt3dadd( -3.17975, -64.3456, -38.7112, 0.67 ) }
    dend_10 { pt3dadd( -5.00401, -68.1268, -41.5399, 0.67 ) }
    dend_10 { pt3dadd( -5.47631, -69.3392, -42.4892, 0.33 ) }
    dend_10 { pt3dadd( -5.82003, -70.6864, -43.5978, 1.33 ) }
    dend_10 { pt3dadd( -6.35609, -73.5977, -46.183, 0.67 ) }
    dend_10 { pt3dadd( -6.52771, -74.9633, -47.686, 0.33 ) }
    dend_10 { pt3dadd( -6.62054, -75.8518, -48.7891, 0.67 ) }
    dend_10 { pt3dadd( -6.84928, -77.8937, -51.6585, 0.67 ) }
    dend_10 { pt3dadd( -6.93701, -79.0852, -53.4615, 0.67 ) }
    dend_10 { pt3dadd( -6.99724, -80.659, -56.0145, 1.33 ) }
    dend_10 { pt3dadd( -6.97437, -85.0064, -63.9413, 0.33 ) }
    dend_10 { pt3dadd( -6.94761, -85.3727, -64.6687, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 3.0304, -3.80937, 5.81606, 1.33 ) }
    dend_7 { pt3dadd( 2.57524, -10.886, 12.0544, 1.33 ) }
    dend_7 { pt3dadd( 2.29316, -16.7253, 17.0672, 1.33 ) }
    dend_7 { pt3dadd( 1.65643, -26.1984, 25.0263, 1.33 ) }
    dend_7 { pt3dadd( 1.00588, -36.0004, 33.1973, 1.33 ) }
    dend_7 { pt3dadd( 0.800573, -39.2662, 35.933, 1.33 ) }
    dend_7 { pt3dadd( 0.487124, -45.0273, 40.6327, 1.33 ) }
    dend_7 { pt3dadd( 0.392253, -46.8549, 42.3098, 1.33 ) }
    dend_7 { pt3dadd( 0.066529, -50.2614, 45.5734, 1.33 ) }
    dend_7 { pt3dadd( -0.209057, -53.7543, 48.3568, 1.33 ) }
    dend_7 { pt3dadd( 0.0996261, -58.0356, 50.9886, 1.33 ) }
    dend_7 { pt3dadd( 0.155662, -61.4789, 53.0593, 1.33 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 9.43039, 3.36313, 4.45605, 1.33 ) }
    dend_0 { pt3dadd( 12.3038, 2.5841, 4.98277, 1.33 ) }
    dend_0 { pt3dadd( 17.5909, 1.15064, 5.95196, 1.33 ) }
    dend_0 { pt3dadd( 22.1091, -0.074357, 6.7802, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 34/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.0165, 6.47364, -0.103052, 0.67 ) }
    axon_0 { pt3dadd( 20.5684, 16.042, -0.103052, 0.67 ) }
    axon_0 { pt3dadd( 32.1203, 25.6103, -0.103052, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 37/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 16.314, 21.6137, -10.6101, 0.33 ) }
    dend_47 { pt3dadd( 22.3157, 26.341, -12.5285, 0.33 ) }
    dend_47 { pt3dadd( 25.9205, 29.4649, -13.6406, 0.67 ) }
    dend_47 { pt3dadd( 29.6506, 32.8357, -14.7645, 0.33 ) }
    dend_47 { pt3dadd( 32.2975, 35.2626, -15.5775, 0.67 ) }
    dend_47 { pt3dadd( 37.4922, 40.0952, -17.1641, 0.67 ) }
    dend_47 { pt3dadd( 39.8898, 42.318, -17.8781, 0.33 ) }
    dend_47 { pt3dadd( 42.2988, 44.7347, -18.4197, 0.33 ) }
    dend_47 { pt3dadd( 42.6829, 45.1334, -18.5175, 1.33 ) }
    dend_47 { pt3dadd( 47.1396, 49.7727, -19.5432, 0.33 ) }
    dend_47 { pt3dadd( 48.4296, 51.043, -19.8334, 0.67 ) }
    dend_47 { pt3dadd( 50.2901, 52.7975, -20.2159, 0.33 ) }
    dend_47 { pt3dadd( 51.4991, 53.9358, -20.4106, 0.67 ) }
    dend_47 { pt3dadd( 55.3642, 57.5261, -20.9946, 0.33 ) }
    dend_47 { pt3dadd( 57.4929, 59.5872, -21.2468, 0.67 ) }
    dend_47 { pt3dadd( 60.3904, 62.6803, -21.5698, 0.33 ) }
    dend_47 { pt3dadd( 61.2176, 63.6494, -21.6869, 0.33 ) }
    dend_47 { pt3dadd( 61.6846, 64.2849, -21.764, 0.67 ) }
    dend_47 { pt3dadd( 62.7414, 65.9816, -21.9515, 0.33 ) }
    dend_47 { pt3dadd( 63.4818, 67.4529, -22.0767, 0.67 ) }
    dend_47 { pt3dadd( 65.3349, 71.4596, -22.3375, 0.33 ) }
    dend_47 { pt3dadd( 66.1439, 73.2752, -22.4369, 0.67 ) }
    dend_47 { pt3dadd( 67.0924, 75.4678, -22.5938, 0.33 ) }
    dend_47 { pt3dadd( 68.1598, 78.0372, -22.791, 0.67 ) }
    dend_47 { pt3dadd( 69.6315, 81.502, -23.0566, 0.33 ) }
    dend_47 { pt3dadd( 73.874, 90.9166, -23.7699, 0.67 ) }
    dend_47 { pt3dadd( 75.3526, 93.9917, -23.9771, 0.33 ) }
    dend_47 { pt3dadd( 77.1492, 97.4647, -24.2399, 0.67 ) }
    dend_47 { pt3dadd( 78.0141, 99.0171, -24.3679, 0.33 ) }
    dend_47 { pt3dadd( 80.9354, 103.964, -24.7815, 0.67 ) }
    dend_47 { pt3dadd( 82.1413, 105.969, -24.9238, 0.33 ) }
    dend_47 { pt3dadd( 82.8347, 107.232, -25.009, 0.67 ) }
    dend_47 { pt3dadd( 84.661, 110.546, -25.1257, 0.33 ) }
    dend_47 { pt3dadd( 85.2001, 111.546, -25.15, 0.67 ) }
    dend_47 { pt3dadd( 86.4836, 114.051, -25.2375, 0.33 ) }
    dend_47 { pt3dadd( 87.735, 117.414, -25.379, 0.67 ) }
    dend_47 { pt3dadd( 89.1879, 122.528, -25.634, 0.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.314, 21.6137, -10.6101, 0.67 ) }
    dend_46 { pt3dadd( 18.1799, 25.4494, -6.70843, 0.67 ) }
    dend_46 { pt3dadd( 18.9719, 27.7911, -4.54359, 1.33 ) }
    dend_46 { pt3dadd( 19.4068, 29.3593, -3.0002, 0.67 ) }
    dend_46 { pt3dadd( 20.0211, 31.1872, -1.02372, 0.67 ) }
    dend_46 { pt3dadd( 20.6273, 32.8061, 0.870795, 0.67 ) }
    dend_46 { pt3dadd( 21.5256, 35.1156, 3.70754, 0.67 ) }
    dend_46 { pt3dadd( 22.0622, 36.4573, 5.36694, 1.33 ) }
    dend_46 { pt3dadd( 22.8436, 38.6376, 8.49021, 0.67 ) }
    dend_46 { pt3dadd( 23.3266, 40.2681, 11.159, 0.67 ) }
    dend_46 { pt3dadd( 23.5326, 41.0449, 12.5556, 0.67 ) }
    dend_46 { pt3dadd( 23.9202, 42.5009, 15.3848, 0.33 ) }
    dend_46 { pt3dadd( 24.0158, 42.9264, 16.1871, 1.33 ) }
    dend_46 { pt3dadd( 24.2125, 45.2604, 20.0674, 0.33 ) }
    dend_46 { pt3dadd( 24.1411, 46.1995, 21.3471, 1.33 ) }
    dend_46 { pt3dadd( 23.6277, 48.7639, 24.3659, 0.67 ) }
    dend_46 { pt3dadd( 23.4586, 49.5551, 25.175, 0.33 ) }
    dend_46 { pt3dadd( 23.2753, 50.4248, 25.9744, 0.67 ) }
    dend_46 { pt3dadd( 22.881, 52.7333, 27.9401, 0.33 ) }
    dend_46 { pt3dadd( 22.7994, 53.4436, 28.4663, 1.33 ) }
    dend_46 { pt3dadd( 22.6467, 55.6181, 30.0187, 0.67 ) }
    dend_46 { pt3dadd( 22.6294, 58.1562, 31.6185, 0.67 ) }
    dend_46 { pt3dadd( 22.7551, 59.5746, 32.4602, 1.33 ) }
    dend_46 { pt3dadd( 23.1909, 62.3149, 33.9564, 0.67 ) }
    dend_46 { pt3dadd( 23.3208, 62.8601, 34.23, 1.33 ) }
    dend_46 { pt3dadd( 23.8097, 64.2061, 34.8744, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_46 { pt3dadd( 24.8906, 66.2419, 35.9053, 0.67 ) }
    dend_46 { pt3dadd( 26.0058, 67.982, 36.8124, 0.33 ) }
    dend_46 { pt3dadd( 26.5053, 68.7142, 37.209, 1.33 ) }
    dend_46 { pt3dadd( 27.9886, 70.737, 38.3247, 0.33 ) }
    dend_46 { pt3dadd( 29.003, 71.9875, 39.2492, 2.0 ) }
    dend_46 { pt3dadd( 31.6739, 74.5423, 41.3693, 0.67 ) }
    dend_46 { pt3dadd( 32.4039, 75.2111, 41.9725, 0.33 ) }
    dend_46 { pt3dadd( 33.7202, 76.3613, 43.0662, 2.0 ) }
    dend_46 { pt3dadd( 35.6193, 77.9408, 44.637, 0.67 ) }
    dend_46 { pt3dadd( 39.4403, 80.9712, 47.8014, 1.33 ) }
    dend_46 { pt3dadd( 44.0633, 84.562, 51.7056, 0.67 ) }
    dend_46 { pt3dadd( 47.4753, 91.1224, 57.7171, 0.67 ) }
    dend_46 { pt3dadd( 51.677, 98.0974, 62.6078, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 13/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 3.72158, 48.0041, -15.851, 0.33 ) }
    dend_43 { pt3dadd( 2.91319, 51.144, -13.8846, 0.33 ) }
    dend_43 { pt3dadd( 2.7642, 51.7281, -13.6227, 0.67 ) }
    dend_43 { pt3dadd( 1.71966, 56.6923, -12.0842, 0.67 ) }
    dend_43 { pt3dadd( 0.613408, 62.0546, -10.8091, 0.33 ) }
    dend_43 { pt3dadd( -0.175957, 66.1029, -9.76825, 0.33 ) }
    dend_43 { pt3dadd( -0.551487, 68.3105, -9.19694, 0.67 ) }
    dend_43 { pt3dadd( -1.17676, 72.2526, -8.07249, 0.67 ) }
    dend_43 { pt3dadd( -1.81154, 76.9766, -6.9645, 0.67 ) }
    dend_43 { pt3dadd( -2.14502, 79.7152, -6.52673, 0.67 ) }
    dend_43 { pt3dadd( -2.53882, 84.2077, -5.95509, 0.33 ) }
    dend_43 { pt3dadd( -2.69506, 86.8672, -5.54284, 0.67 ) }
    dend_43 { pt3dadd( -2.88475, 89.8301, -5.00261, 0.33 ) }
    dend_43 { pt3dadd( -3.0127, 92.8392, -4.41445, 0.67 ) }
    dend_43 { pt3dadd( -3.11575, 95.5677, -3.98758, 0.33 ) }
    dend_43 { pt3dadd( -3.14599, 99.0556, -3.62184, 0.67 ) }
    dend_43 { pt3dadd( -3.12842, 100.799, -3.55239, 0.33 ) }
    dend_43 { pt3dadd( -3.09498, 102.426, -3.49536, 0.33 ) }
    dend_43 { pt3dadd( -2.77681, 106.978, -3.4778, 0.67 ) }
    dend_43 { pt3dadd( -2.39954, 110.621, -3.45137, 0.33 ) }
    dend_43 { pt3dadd( -2.27619, 111.529, -3.46127, 0.67 ) }
    dend_43 { pt3dadd( -2.08717, 113.279, -3.50818, 0.33 ) }
    dend_43 { pt3dadd( -1.96375, 114.447, -3.54938, 0.67 ) }
    dend_43 { pt3dadd( -1.65688, 117.2, -3.64991, 0.33 ) }
    dend_43 { pt3dadd( -1.62413, 117.531, -3.66286, 0.67 ) }
    dend_43 { pt3dadd( -1.35029, 120.831, -3.78478, 0.33 ) }
    dend_43 { pt3dadd( -1.29637, 122.21, -3.81303, 0.33 ) }
    dend_43 { pt3dadd( -1.31472, 127.095, -3.81575, 0.33 ) }
    dend_43 { pt3dadd( -1.35734, 128.094, -3.7576, 0.67 ) }
    dend_43 { pt3dadd( -1.509, 129.723, -3.5388, 0.33 ) }
    dend_43 { pt3dadd( -1.59361, 130.437, -3.41753, 0.67 ) }
    dend_43 { pt3dadd( -1.77428, 131.752, -3.03375, 0.33 ) }
    dend_43 { pt3dadd( -1.93526, 132.808, -2.5039, 0.67 ) }
    dend_43 { pt3dadd( -2.49949, 135.184, -0.795396, 0.33 ) }
    dend_43 { pt3dadd( -2.74953, 136.064, -0.0746791, 0.67 ) }
    dend_43 { pt3dadd( -3.14214, 137.359, 1.07326, 0.33 ) }
    dend_43 { pt3dadd( -3.79518, 139.572, 3.02409, 0.67 ) }
    dend_43 { pt3dadd( -4.61524, 142.43, 5.46073, 0.33 ) }
    dend_43 { pt3dadd( -4.84922, 143.232, 6.10018, 0.33 ) }
    dend_43 { pt3dadd( -4.92397, 143.502, 6.273, 0.67 ) }
    dend_43 { pt3dadd( -5.34605, 145.378, 7.09815, 0.33 ) }
    dend_43 { pt3dadd( -5.70116, 147.355, 7.76069, 0.67 ) }
    dend_43 { pt3dadd( -5.93675, 148.919, 8.28681, 0.33 ) }
    dend_43 { pt3dadd( -6.01365, 149.546, 8.44274, 0.67 ) }
    dend_43 { pt3dadd( -6.22776, 151.939, 9.0178, 0.33 ) }
    dend_43 { pt3dadd( -6.34915, 153.534, 9.42508, 0.67 ) }
    dend_43 { pt3dadd( -6.54399, 156.822, 10.1142, 0.33 ) }
    dend_43 { pt3dadd( -6.72171, 160.101, 10.8161, 0.33 ) }
    dend_43 { pt3dadd( -6.94406, 163.584, 11.5194, 0.67 ) }
    dend_43 { pt3dadd( -7.07514, 165.181, 11.7747, 0.33 ) }
    dend_43 { pt3dadd( -7.07514, 165.181, 11.7747, 0.67 ) }
    dend_43 { pt3dadd( -7.43846, 168.346, 11.2352, 0.33 ) }
    dend_43 { pt3dadd( -7.4808, 169.707, 10.3815, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.72158, 48.0041, -15.851, 0.67 ) }
    dend_40 { pt3dadd( 3.992, 51.893, -17.8227, 0.67 ) }
    dend_40 { pt3dadd( 4.46257, 54.1774, -19.0202, 0.67 ) }
    dend_40 { pt3dadd( 4.67773, 54.8642, -19.4516, 0.33 ) }
    dend_40 { pt3dadd( 5.29133, 56.741, -20.6756, 0.67 ) }
    dend_40 { pt3dadd( 6.54661, 60.2791, -23.07, 0.67 ) }
    dend_40 { pt3dadd( 6.874, 61.0902, -23.6215, 0.33 ) }
    dend_40 { pt3dadd( 8.01464, 63.6742, -25.4183, 0.67 ) }
    dend_40 { pt3dadd( 8.88174, 65.8653, -27.152, 0.67 ) }
    dend_40 { pt3dadd( 9.44661, 67.4202, -28.4256, 0.67 ) }
    dend_40 { pt3dadd( 9.92667, 68.9058, -29.7289, 0.67 ) }
    dend_40 { pt3dadd( 10.4631, 70.9076, -31.5467, 0.67 ) }
    dend_40 { pt3dadd( 10.8628, 74.1208, -34.5226, 0.67 ) }
    dend_40 { pt3dadd( 10.8434, 76.0574, -36.2407, 0.33 ) }
    dend_40 { pt3dadd( 10.7856, 76.792, -36.8556, 0.67 ) }
    dend_40 { pt3dadd( 10.4717, 78.7979, -38.5714, 0.33 ) }
    dend_40 { pt3dadd( 10.1036, 80.2549, -39.755, 0.67 ) }
    dend_40 { pt3dadd( 9.61944, 81.6626, -40.8838, 0.33 ) }
    dend_40 { pt3dadd( 9.11896, 82.9634, -41.833, 0.33 ) }
    dend_40 { pt3dadd( 8.73573, 83.9698, -42.4735, 0.67 ) }
    dend_40 { pt3dadd( 8.06501, 85.8082, -43.5875, 0.33 ) }
    dend_40 { pt3dadd( 7.56045, 87.2438, -44.3949, 0.67 ) }
    dend_40 { pt3dadd( 7.09182, 88.7771, -45.2148, 0.33 ) }
    dend_40 { pt3dadd( 6.76541, 89.8531, -45.7287, 0.33 ) }
    dend_40 { pt3dadd( 6.23357, 91.6163, -46.6862, 0.33 ) }
    dend_40 { pt3dadd( 5.95082, 92.6759, -47.272, 0.67 ) }
    dend_40 { pt3dadd( 5.56019, 94.5145, -48.3315, 0.33 ) }
    dend_40 { pt3dadd( 5.18507, 96.4784, -49.5131, 0.33 ) }
    dend_40 { pt3dadd( 5.02868, 97.6636, -50.2338, 0.67 ) }
    dend_40 { pt3dadd( 4.76655, 100.608, -52.0925, 0.33 ) }
    dend_40 { pt3dadd( 4.70342, 101.583, -52.7438, 0.67 ) }
    dend_40 { pt3dadd( 4.65474, 103.55, -54.018, 0.33 ) }
    dend_40 { pt3dadd( 4.6605, 103.82, -54.2001, 0.67 ) }
    dend_40 { pt3dadd( 4.69248, 105.742, -55.4403, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_40 { pt3dadd( 4.69407, 106.563, -55.9187, 0.67 ) }
    dend_40 { pt3dadd( 4.66591, 108.332, -56.7411, 0.33 ) }
    dend_40 { pt3dadd( 4.65043, 109.005, -57.0241, 0.67 ) }
    dend_40 { pt3dadd( 4.60374, 111.289, -57.8528, 0.33 ) }
    dend_40 { pt3dadd( 4.60556, 113.339, -58.5972, 0.67 ) }
    dend_40 { pt3dadd( 4.62605, 116.306, -59.6261, 0.33 ) }
    dend_40 { pt3dadd( 4.64668, 117.6, -60.1227, 0.67 ) }
    dend_40 { pt3dadd( 4.68298, 119.581, -60.858, 0.33 ) }
    dend_40 { pt3dadd( 4.69582, 120.062, -61.0439, 0.67 ) }
    dend_40 { pt3dadd( 4.81938, 122.77, -62.0924, 0.33 ) }
    dend_40 { pt3dadd( 4.98967, 125.131, -63.202, 0.33 ) }
    dend_40 { pt3dadd( 5.14601, 126.72, -63.9032, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -80.0429, -35.79, 77.2805, 0.33 ) }
    dend_37 { pt3dadd( -86.8893, -38.2097, 84.0687, 0.33 ) }
    dend_37 { pt3dadd( -92.5225, -41.5183, 91.5081, 0.33 ) }
    dend_37 { pt3dadd( -97.4167, -42.8351, 100.072, 0.33 ) }
    dend_37 { pt3dadd( -103.344, -43.1636, 108.082, 0.33 ) }
    dend_37 { pt3dadd( -107.829, -41.6585, 116.861, 0.33 ) }
    dend_37 { pt3dadd( -112.129, -41.4597, 125.854, 0.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -80.0429, -35.79, 77.2805, 0.33 ) }
    dend_36 { pt3dadd( -86.3376, -39.2077, 84.2993, 0.33 ) }
    dend_36 { pt3dadd( -92.4617, -42.2296, 91.6622, 0.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -9.89543, -13.4458, -14.4264, 0.67 ) }
    dend_24 { pt3dadd( -16.0553, -20.0258, -18.5246, 0.67 ) }
    dend_24 { pt3dadd( -17.4902, -21.5586, -19.4792, 0.67 ) }
    dend_24 { pt3dadd( -22.5568, -26.9707, -22.85, 0.67 ) }
    dend_24 { pt3dadd( -27.6691, -32.4317, -26.2513, 0.67 ) }
    dend_24 { pt3dadd( -29.7975, -34.7053, -27.6674, 1.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.89543, -13.4458, -14.4264, 1.33 ) }
    dend_21 { pt3dadd( -10.9572, -12.1607, -16.4514, 1.33 ) }
    dend_21 { pt3dadd( -11.9299, -11.4496, -18.1081, 0.67 ) }
    dend_21 { pt3dadd( -13.5658, -10.2293, -20.8578, 0.67 ) }
    dend_21 { pt3dadd( -15.7123, -8.60459, -24.2823, 0.67 ) }
    dend_21 { pt3dadd( -16.2109, -8.24641, -25.0274, 0.67 ) }
    dend_21 { pt3dadd( -18.8768, -6.47468, -28.9708, 0.67 ) }
    dend_21 { pt3dadd( -20.542, -5.4754, -31.5336, 0.67 ) }
    dend_21 { pt3dadd( -22.9048, -4.18371, -35.315, 0.67 ) }
    dend_21 { pt3dadd( -23.9581, -3.69587, -37.0697, 0.67 ) }
    dend_21 { pt3dadd( -24.636, -3.42363, -38.0459, 0.67 ) }
    dend_21 { pt3dadd( -25.6705, -2.93785, -39.5429, 0.67 ) }
    dend_21 { pt3dadd( -26.2455, -2.5677, -40.4991, 0.67 ) }
    dend_21 { pt3dadd( -27.8457, -1.54552, -43.4206, 0.67 ) }
    dend_21 { pt3dadd( -28.9517, -0.834913, -45.5537, 0.67 ) }
    dend_21 { pt3dadd( -29.5463, -0.353884, -46.8227, 0.67 ) }
    dend_21 { pt3dadd( -30.7112, 0.799504, -49.5006, 0.67 ) }
    dend_21 { pt3dadd( -32.2653, 2.41963, -52.982, 0.67 ) }
    dend_21 { pt3dadd( -33.5725, 3.79873, -55.8738, 0.67 ) }
    dend_21 { pt3dadd( -33.9078, 4.199, -56.6855, 0.67 ) }
    dend_21 { pt3dadd( -34.8104, 5.48591, -59.0638, 0.67 ) }
    dend_21 { pt3dadd( -35.781, 7.00652, -61.9898, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 50/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.71963, -24.2127, -1.43656, 0.67 ) }
    dend_15 { pt3dadd( -16.2123, -30.2922, -2.87851, 0.67 ) }
    dend_15 { pt3dadd( -18.4339, -32.353, -3.32236, 0.67 ) }
    dend_15 { pt3dadd( -23.4872, -37.1732, -4.555, 0.67 ) }
    dend_15 { pt3dadd( -26.3202, -39.9048, -5.36192, 0.67 ) }
    dend_15 { pt3dadd( -31.3265, -44.2805, -6.89766, 0.67 ) }
    dend_15 { pt3dadd( -33.7324, -46.2206, -7.67164, 0.67 ) }
    dend_15 { pt3dadd( -38.1203, -49.0945, -9.11208, 0.67 ) }
    dend_15 { pt3dadd( -40.7941, -50.623, -10.5451, 0.67 ) }
    dend_15 { pt3dadd( -42.1898, -51.1749, -11.9215, 0.67 ) }
    dend_15 { pt3dadd( -45.8568, -52.249, -16.8308, 0.67 ) }
    dend_15 { pt3dadd( -47.1563, -52.6287, -18.9071, 0.67 ) }
    dend_15 { pt3dadd( -50.4904, -54.1538, -24.6296, 0.67 ) }
    dend_15 { pt3dadd( -52.7381, -55.3716, -28.4879, 0.67 ) }
    dend_15 { pt3dadd( -56.2197, -57.7814, -34.1055, 0.67 ) }
    dend_15 { pt3dadd( -57.7338, -59.1293, -36.5923, 0.67 ) }
    dend_15 { pt3dadd( -59.9132, -61.7484, -40.3735, 0.67 ) }
    dend_15 { pt3dadd( -62.4694, -65.3083, -44.3671, 0.67 ) }
    dend_15 { pt3dadd( -64.1371, -67.5123, -46.2018, 0.67 ) }
    dend_15 { pt3dadd( -66.148, -70.0846, -48.0253, 0.67 ) }
    dend_15 { pt3dadd( -67.9934, -72.4725, -49.5874, 0.67 ) }
    dend_15 { pt3dadd( -69.4972, -74.473, -50.9886, 0.67 ) }
    dend_15 { pt3dadd( -72.1082, -77.9428, -53.4561, 0.67 ) }
    dend_15 { pt3dadd( -76.9873, -83.8968, -57.8746, 0.67 ) }
    dend_15 { pt3dadd( -78.4791, -85.6731, -59.2533, 0.67 ) }
    dend_15 { pt3dadd( -80.1884, -87.5155, -60.9591, 0.67 ) }
    dend_15 { pt3dadd( -82.4052, -89.6241, -63.3085, 0.67 ) }
    dend_15 { pt3dadd( -85.1644, -91.9981, -66.642, 0.67 ) }
    dend_15 { pt3dadd( -87.001, -93.5217, -69.3706, 0.67 ) }
    dend_15 { pt3dadd( -88.7508, -95.1798, -72.6152, 0.67 ) }
    dend_15 { pt3dadd( -90.7122, -96.8989, -76.0949, 0.67 ) }
    dend_15 { pt3dadd( -93.7916, -99.2986, -81.451, 0.67 ) }
    dend_15 { pt3dadd( -94.9989, -100.109, -83.5093, 1.33 ) }
    dend_15 { pt3dadd( -97.0978, -101.563, -87.0617, 0.67 ) }
    dend_15 { pt3dadd( -98.9154, -102.97, -89.792, 0.67 ) }
    dend_15 { pt3dadd( -99.9177, -103.731, -90.9986, 0.67 ) }
    dend_15 { pt3dadd( -101.932, -105.093, -92.8443, 0.33 ) }
    dend_15 { pt3dadd( -102.751, -105.514, -93.4384, 0.67 ) }
    dend_15 { pt3dadd( -106.252, -107.202, -95.4302, 0.67 ) }
    dend_15 { pt3dadd( -107.938, -108.02, -96.1984, 0.33 ) }
    dend_15 { pt3dadd( -109.987, -108.994, -97.0368, 0.67 ) }
    dend_15 { pt3dadd( -112.795, -110.561, -98.2133, 0.33 ) }
    dend_15 { pt3dadd( -113.797, -111.219, -98.6109, 0.67 ) }
    dend_15 { pt3dadd( -115.207, -112.159, -99.1839, 0.33 ) }
    dend_15 { pt3dadd( -115.788, -112.502, -99.3766, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 95/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.71963, -24.2127, -1.43656, 0.67 ) }
    dend_14 { pt3dadd( -8.68329, -25.5149, 1.28196, 0.67 ) }
    dend_14 { pt3dadd( -7.75457, -26.614, 3.60973, 0.67 ) }
    dend_14 { pt3dadd( -4.71176, -30.0389, 9.951, 0.67 ) }
    dend_14 { pt3dadd( -2.71273, -32.1692, 13.5514, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -0.893267, -34.239, 16.6726, 0.67 ) }
    dend_14 { pt3dadd( 1.13483, -36.4927, 20.0719, 0.67 ) }
    dend_14 { pt3dadd( 2.00708, -37.4437, 21.4724, 0.67 ) }
    dend_14 { pt3dadd( 5.10261, -40.9732, 26.0314, 0.67 ) }
    dend_14 { pt3dadd( 7.33929, -43.4432, 28.6755, 0.67 ) }
    dend_14 { pt3dadd( 8.89159, -45.3841, 30.3906, 0.67 ) }
    dend_14 { pt3dadd( 12.2635, -50.3698, 34.1651, 0.67 ) }
    dend_14 { pt3dadd( 15.1368, -54.7775, 37.237, 0.67 ) }
    dend_14 { pt3dadd( 16.9457, -57.4424, 39.2597, 0.67 ) }
    dend_14 { pt3dadd( 18.5281, -59.9572, 41.1788, 0.67 ) }
    dend_14 { pt3dadd( 20.2369, -62.9684, 43.5204, 0.67 ) }
    dend_14 { pt3dadd( 21.6203, -65.3905, 45.4049, 0.67 ) }
    dend_14 { pt3dadd( 23.882, -69.8339, 48.5927, 0.67 ) }
    dend_14 { pt3dadd( 25.7173, -73.5059, 51.5969, 0.67 ) }
    dend_14 { pt3dadd( 26.9424, -75.8271, 53.844, 0.67 ) }
    dend_14 { pt3dadd( 28.781, -79.4577, 57.7969, 0.33 ) }
    dend_14 { pt3dadd( 33.5759, -86.0964, 65.5642, 0.33 ) }
    dend_14 { pt3dadd( 38.2905, -92.1398, 73.8989, 0.33 ) }
    dend_14 { pt3dadd( 44.3315, -96.7168, 82.4131, 0.33 ) }
    dend_14 { pt3dadd( 50.5406, -99.3566, 91.6862, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 20/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -6.94761, -85.3727, -64.6687, 0.67 ) }
    dend_12 { pt3dadd( -6.4521, -88.5668, -61.6907, 0.67 ) }
    dend_12 { pt3dadd( -6.09835, -92.4915, -57.9306, 0.67 ) }
    dend_12 { pt3dadd( -5.9922, -94.6999, -55.917, 0.67 ) }
    dend_12 { pt3dadd( -5.62004, -104.265, -47.7263, 0.33 ) }
    dend_12 { pt3dadd( -5.57709, -106.726, -45.8014, 0.67 ) }
    dend_12 { pt3dadd( -5.59376, -110.586, -43.0823, 0.33 ) }
    dend_12 { pt3dadd( -5.62845, -112.574, -41.652, 0.33 ) }
    dend_12 { pt3dadd( -5.69401, -114.724, -40.199, 0.33 ) }
    dend_12 { pt3dadd( -5.67092, -116.615, -39.2715, 0.67 ) }
    dend_12 { pt3dadd( -5.63479, -119.872, -38.6003, 0.67 ) }
    dend_12 { pt3dadd( -5.42403, -123.077, -37.9894, 0.33 ) }
    dend_12 { pt3dadd( -5.06103, -126.074, -37.6216, 0.33 ) }
    dend_12 { pt3dadd( -4.96577, -126.567, -37.55, 0.67 ) }
    dend_12 { pt3dadd( -4.60055, -128.156, -37.2398, 0.33 ) }
    dend_12 { pt3dadd( -3.92697, -130.72, -36.6015, 0.67 ) }
    dend_12 { pt3dadd( -2.94537, -133.005, -35.7955, 0.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 37/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.94761, -85.3727, -64.6687, 0.67 ) }
    dend_11 { pt3dadd( -5.61876, -88.2227, -64.8249, 0.67 ) }
    dend_11 { pt3dadd( -3.53241, -92.4936, -65.0679, 0.67 ) }
    dend_11 { pt3dadd( -2.60299, -94.4793, -65.1765, 0.33 ) }
    dend_11 { pt3dadd( -2.4761, -94.7546, -65.1987, 0.67 ) }
    dend_11 { pt3dadd( -1.20014, -97.6562, -65.4678, 0.33 ) }
    dend_11 { pt3dadd( -0.956197, -98.2864, -65.5543, 0.67 ) }
    dend_11 { pt3dadd( -0.296727, -100.338, -65.9541, 0.33 ) }
    dend_11 { pt3dadd( -0.118275, -101.384, -66.1907, 0.67 ) }
    dend_11 { pt3dadd( 0.135224, -103.682, -66.7082, 0.33 ) }
    dend_11 { pt3dadd( 0.227928, -104.598, -66.993, 0.67 ) }
    dend_11 { pt3dadd( 0.415542, -107.364, -67.9325, 0.33 ) }
    dend_11 { pt3dadd( 0.512418, -109.65, -68.7348, 0.67 ) }
    dend_11 { pt3dadd( 0.569512, -112.511, -69.7925, 0.33 ) }
    dend_11 { pt3dadd( 0.640016, -114.568, -70.5668, 0.33 ) }
    dend_11 { pt3dadd( 0.711732, -118.079, -71.8456, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.155662, -61.4789, 53.0593, 0.67 ) }
    dend_9 { pt3dadd( 0.707824, -64.4244, 54.3423, 0.67 ) }
    dend_9 { pt3dadd( 1.87989, -69.8794, 56.2124, 0.67 ) }
    dend_9 { pt3dadd( 2.26438, -71.0379, 56.575, 0.67 ) }
    dend_9 { pt3dadd( 3.2167, -73.7252, 57.0899, 0.67 ) }
    dend_9 { pt3dadd( 4.9349, -78.811, 57.5283, 0.67 ) }
    dend_9 { pt3dadd( 6.22263, -82.2115, 57.6856, 0.67 ) }
    dend_9 { pt3dadd( 7.37241, -84.866, 57.5962, 0.67 ) }
    dend_9 { pt3dadd( 9.86925, -90.0505, 57.1037, 1.33 ) }
    dend_9 { pt3dadd( 12.3839, -94.7199, 56.7837, 1.33 ) }
    dend_9 { pt3dadd( 15.8604, -100.725, 56.6743, 1.33 ) }
    dend_9 { pt3dadd( 18.1425, -104.61, 56.7615, 1.33 ) }
    dend_9 { pt3dadd( 20.2825, -108.155, 57.0745, 1.33 ) }
    dend_9 { pt3dadd( 23.015, -112.586, 57.814, 0.67 ) }
    dend_9 { pt3dadd( 24.8328, -115.454, 58.8364, 0.67 ) }
    dend_9 { pt3dadd( 26.905, -118.152, 60.4587, 0.67 ) }
    dend_9 { pt3dadd( 27.8196, -119.215, 61.3019, 1.33 ) }
    dend_9 { pt3dadd( 29.4128, -120.973, 62.8393, 0.67 ) }
    dend_9 { pt3dadd( 30.9459, -122.443, 64.2288, 0.67 ) }
    dend_9 { pt3dadd( 34.8344, -125.786, 67.0879, 0.67 ) }
    dend_9 { pt3dadd( 37.7121, -127.998, 68.505, 0.67 ) }
    dend_9 { pt3dadd( 40.2955, -129.876, 69.4372, 0.67 ) }
    dend_9 { pt3dadd( 43.2013, -132.158, 70.3051, 0.67 ) }
    dend_9 { pt3dadd( 44.5009, -133.277, 70.6043, 1.33 ) }
    dend_9 { pt3dadd( 46.7273, -135.41, 70.9902, 0.67 ) }
    dend_9 { pt3dadd( 50.2173, -138.851, 71.3589, 0.67 ) }
    dend_9 { pt3dadd( 52.1234, -140.81, 71.6346, 1.33 ) }
    dend_9 { pt3dadd( 55.1036, -143.808, 72.0663, 1.33 ) }
    dend_9 { pt3dadd( 56.6542, -145.498, 72.2896, 0.33 ) }
    dend_9 { pt3dadd( 57.5135, -146.452, 72.4131, 1.33 ) }
    dend_9 { pt3dadd( 59.3111, -148.482, 72.6712, 0.67 ) }
    dend_9 { pt3dadd( 59.909, -149.186, 72.7567, 0.67 ) }
    dend_9 { pt3dadd( 61.3006, -150.643, 72.9577, 0.33 ) }
    dend_9 { pt3dadd( 63.575, -152.754, 73.2891, 0.67 ) }
    dend_9 { pt3dadd( 65.3473, -154.332, 73.4789, 0.33 ) }
    dend_9 { pt3dadd( 66.0219, -154.932, 73.5471, 1.33 ) }
    dend_9 { pt3dadd( 67.7609, -156.553, 73.7052, 0.33 ) }
    dend_9 { pt3dadd( 69.0004, -157.707, 73.8074, 0.67 ) }
    dend_9 { pt3dadd( 70.576, -158.994, 73.9148, 0.33 ) }
    dend_9 { pt3dadd( 72.0121, -159.893, 73.9833, 1.33 ) }
    dend_9 { pt3dadd( 78.1561, -170.335, 73.9604, 1.33 ) }
    dend_9 { pt3dadd( 84.3276, -180.652, 72.3609, 1.33 ) }
    dend_9 { pt3dadd( 92.7126, -189.347, 70.3232, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 0.155662, -61.4789, 53.0593, 0.67 ) }
    dend_8 { pt3dadd( 4.11808, -66.1264, 57.1571, 0.67 ) }
    dend_8 { pt3dadd( 6.92503, -69.6131, 59.9256, 0.67 ) }
    dend_8 { pt3dadd( 7.99316, -70.9169, 61.0899, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_8 { pt3dadd( 8.87574, -72.0136, 62.053, 0.67 ) }
    dend_8 { pt3dadd( 10.1705, -73.6004, 63.507, 0.67 ) }
    dend_8 { pt3dadd( 10.9246, -74.5245, 64.3538, 0.33 ) }
    dend_8 { pt3dadd( 12.1787, -76.1679, 65.708, 0.67 ) }
    dend_8 { pt3dadd( 14.4954, -78.8551, 68.3438, 0.33 ) }
    dend_8 { pt3dadd( 15.9081, -80.6585, 70.1973, 0.67 ) }
    dend_8 { pt3dadd( 17.5231, -82.7409, 72.4543, 0.33 ) }
    dend_8 { pt3dadd( 21.5685, -88.5341, 77.6517, 0.33 ) }
    dend_8 { pt3dadd( 26.125, -94.6735, 81.9039, 0.33 ) }
    dend_8 { pt3dadd( 30.1529, -100.256, 87.3637, 0.33 ) }
    dend_8 { pt3dadd( 35.2575, -104.797, 92.9897, 0.33 ) }
    dend_8 { pt3dadd( 39.8134, -110.193, 98.2384, 0.33 ) }
    dend_8 { pt3dadd( 43.233, -115.469, 104.402, 0.33 ) }
    dend_8 { pt3dadd( 47.1468, -121.914, 108.788, 0.33 ) }
    dend_8 { pt3dadd( 50.8351, -128.546, 113.058, 0.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 15/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 22.1091, -0.074357, 6.7802, 0.67 ) }
    dend_6 { pt3dadd( 22.9119, 0.029808, 8.33186, 0.67 ) }
    dend_6 { pt3dadd( 23.5085, 0.087822, 9.58297, 0.67 ) }
    dend_6 { pt3dadd( 25.9293, 0.394713, 14.9276, 0.67 ) }
    dend_6 { pt3dadd( 26.9935, 0.526746, 17.295, 0.67 ) }
    dend_6 { pt3dadd( 27.9593, 0.646562, 19.4435, 0.67 ) }
    dend_6 { pt3dadd( 31.8354, 1.12741, 28.0656, 0.67 ) }
    dend_6 { pt3dadd( 33.0344, 1.25824, 30.9223, 0.67 ) }
    dend_6 { pt3dadd( 34.0545, 1.41959, 33.5402, 0.67 ) }
    dend_6 { pt3dadd( 34.4861, 1.4943, 34.7409, 0.67 ) }
    dend_6 { pt3dadd( 37.7476, 0.777765, 40.3178, 0.67 ) }
    dend_6 { pt3dadd( 40.6234, 0.529856, 46.1422, 0.67 ) }
    dend_6 { pt3dadd( 42.7903, -0.746023, 52.1315, 0.67 ) }
    dend_6 { pt3dadd( 44.9204, -1.87335, 58.1655, 0.67 ) }
    dend_6 { pt3dadd( 47.536, -2.44892, 64.0889, 0.67 ) }
    dend_6 { pt3dadd( 50.3427, -1.90449, 69.9179, 0.67 ) }
    dend_6 { pt3dadd( 54.4907, -1.33623, 74.8816, 0.67 ) }
    dend_6 { pt3dadd( 58.9818, 0.175399, 79.2918, 0.67 ) }
    dend_6 { pt3dadd( 63.6946, 1.77616, 83.4279, 0.67 ) }
    dend_6 { pt3dadd( 68.4049, 4.14882, 87.1305, 0.67 ) }
    dend_6 { pt3dadd( 72.6718, 6.81597, 91.1319, 0.67 ) }
    dend_6 { pt3dadd( 76.8361, 8.84614, 95.6266, 0.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 22.1091, -0.074357, 6.7802, 0.67 ) }
    dend_1 { pt3dadd( 22.6605, -0.430583, 6.81993, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 39/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 32.1203, 25.6103, -0.103052, 0.688915 ) }
    axon_1 { pt3dadd( 43.6723, 35.1786, -0.103052, 0.688915 ) }
    axon_1 { pt3dadd( 55.2242, 44.747, -0.103052, 0.688915 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 42/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.14601, 126.72, -63.9032, 0.67 ) }
    dend_42 { pt3dadd( 3.29767, 128.124, -63.6378, 0.67 ) }
    dend_42 { pt3dadd( 1.7766, 129.263, -63.4357, 0.33 ) }
    dend_42 { pt3dadd( 0.671028, 130.092, -63.3036, 0.67 ) }
    dend_42 { pt3dadd( -2.53144, 132.524, -62.9482, 0.33 ) }
    dend_42 { pt3dadd( -3.78396, 133.412, -62.8293, 0.67 ) }
    dend_42 { pt3dadd( -6.45461, 135.18, -62.7159, 0.33 ) }
    dend_42 { pt3dadd( -6.95178, 135.501, -62.7071, 0.67 ) }
    dend_42 { pt3dadd( -8.88396, 136.719, -62.7134, 0.33 ) }
    dend_42 { pt3dadd( -9.84043, 137.307, -62.7567, 0.67 ) }
    dend_42 { pt3dadd( -13.3538, 139.262, -63.0169, 0.33 ) }
    dend_42 { pt3dadd( -15.376, 140.268, -63.2205, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 54/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 5.14601, 126.72, -63.9032, 0.33 ) }
    dend_41 { pt3dadd( 2.73551, 132.802, -66.5723, 0.33 ) }
    dend_41 { pt3dadd( 1.92431, 134.848, -67.4705, 0.33 ) }
    dend_41 { pt3dadd( 1.36225, 136.266, -68.0928, 0.67 ) }
    dend_41 { pt3dadd( -0.105495, 139.97, -69.718, 0.33 ) }
    dend_41 { pt3dadd( -0.287037, 140.428, -69.919, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_24 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -29.7975, -34.7053, -27.6674, 0.33 ) }
    dend_34 { pt3dadd( -30.3103, -36.6461, -28.2606, 0.33 ) }
    dend_34 { pt3dadd( -30.9909, -39.1899, -28.771, 0.67 ) }
    dend_34 { pt3dadd( -31.7255, -41.8966, -29.143, 0.33 ) }
    dend_34 { pt3dadd( -32.9188, -46.574, -29.3921, 0.67 ) }
    dend_34 { pt3dadd( -33.5091, -49.0075, -29.4032, 0.33 ) }
    dend_34 { pt3dadd( -33.618, -49.4718, -29.3801, 0.67 ) }
    dend_34 { pt3dadd( -34.3962, -52.6137, -29.0185, 0.33 ) }
    dend_34 { pt3dadd( -34.5849, -53.3312, -28.8555, 0.67 ) }
    dend_34 { pt3dadd( -35.2384, -56.0921, -27.9408, 0.33 ) }
    dend_34 { pt3dadd( -35.4055, -56.7403, -27.6664, 0.67 ) }
    dend_34 { pt3dadd( -36.1197, -59.3954, -26.6009, 0.33 ) }
    dend_34 { pt3dadd( -36.4061, -60.3878, -26.2938, 0.67 ) }
    dend_34 { pt3dadd( -36.9213, -61.9679, -26.1283, 0.33 ) }
    dend_34 { pt3dadd( -37.4221, -63.3146, -26.1653, 0.33 ) }
    dend_34 { pt3dadd( -37.6082, -63.7477, -26.2562, 0.67 ) }
    dend_34 { pt3dadd( -38.0166, -64.7056, -26.6249, 0.33 ) }
    dend_34 { pt3dadd( -38.5381, -65.9751, -27.353, 0.67 ) }
    dend_34 { pt3dadd( -39.3709, -68.1675, -28.8556, 0.33 ) }
    dend_34 { pt3dadd( -39.6535, -68.933, -29.443, 0.33 ) }
    dend_34 { pt3dadd( -39.7529, -69.1836, -29.6548, 0.67 ) }
    dend_34 { pt3dadd( -40.5339, -71.18, -31.338, 0.33 ) }
    dend_34 { pt3dadd( -40.6012, -71.3582, -31.4873, 0.67 ) }
    dend_34 { pt3dadd( -41.0271, -72.5351, -32.3563, 0.33 ) }
    dend_34 { pt3dadd( -41.2145, -73.0803, -32.7418, 0.67 ) }
    dend_34 { pt3dadd( -41.8025, -74.6598, -33.989, 0.33 ) }
    dend_34 { pt3dadd( -41.9877, -75.0993, -34.361, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 87/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -29.7975, -34.7053, -27.6674, 0.67 ) }
    dend_25 { pt3dadd( -34.3889, -40.7477, -23.5803, 0.67 ) }
    dend_25 { pt3dadd( -36.1512, -43.0526, -22.0294, 0.67 ) }
    dend_25 { pt3dadd( -37.6651, -45.0791, -20.5649, 0.67 ) }
    dend_25 { pt3dadd( -39.5337, -47.5298, -18.7028, 0.67 ) }
    dend_25 { pt3dadd( -43.3538, -52.3172, -14.7972, 0.67 ) }
    dend_25 { pt3dadd( -45.5634, -54.8594, -12.5043, 0.67 ) }
    dend_25 { pt3dadd( -46.3256, -55.6082, -11.751, 0.67 ) }
    dend_25 { pt3dadd( -48.8333, -57.5948, -9.47929, 0.67 ) }
    dend_25 { pt3dadd( -49.6259, -58.1168, -8.83495, 0.33 ) }
    dend_25 { pt3dadd( -51.2235, -59.0246, -7.69381, 0.67 ) }
    dend_25 { pt3dadd( -56.2281, -61.7029, -4.59505, 0.67 ) }
    dend_25 { pt3dadd( -57.3341, -62.2485, -4.00696, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( -63.4994, -65.1421, -1.16146, 0.67 ) }
    dend_25 { pt3dadd( -65.4178, -66.044, -0.430583, 0.67 ) }
    dend_25 { pt3dadd( -67.3959, -67.0395, 0.292498, 0.33 ) }
    dend_25 { pt3dadd( -68.619, -67.6531, 0.689706, 0.67 ) }
    dend_25 { pt3dadd( -70.0193, -68.3182, 1.10117, 0.33 ) }
    dend_25 { pt3dadd( -73.0653, -69.7799, 2.10951, 0.67 ) }
    dend_25 { pt3dadd( -73.9375, -70.1843, 2.43567, 0.67 ) }
    dend_25 { pt3dadd( -76.0801, -71.1628, 3.21153, 0.67 ) }
    dend_25 { pt3dadd( -78.1448, -71.9803, 3.9119, 0.33 ) }
    dend_25 { pt3dadd( -79.4364, -72.4166, 4.33509, 0.67 ) }
    dend_25 { pt3dadd( -80.7586, -72.8225, 4.74369, 0.67 ) }
    dend_25 { pt3dadd( -83.4679, -73.6042, 5.61319, 0.67 ) }
    dend_25 { pt3dadd( -85.3857, -74.0943, 6.11962, 0.67 ) }
    dend_25 { pt3dadd( -86.7496, -74.4584, 6.40507, 0.67 ) }
    dend_25 { pt3dadd( -89.4796, -75.224, 6.93672, 0.67 ) }
    dend_25 { pt3dadd( -90.7621, -75.5764, 7.19678, 0.67 ) }
    dend_25 { pt3dadd( -95.0184, -76.7516, 7.93011, 0.67 ) }
    dend_25 { pt3dadd( -97.4874, -77.4269, 8.28631, 0.33 ) }
    dend_25 { pt3dadd( -98.7417, -77.7867, 8.44045, 0.67 ) }
    dend_25 { pt3dadd( -99.9767, -78.2336, 8.56779, 0.33 ) }
    dend_25 { pt3dadd( -101.882, -78.9497, 8.73969, 0.67 ) }
    dend_25 { pt3dadd( -105.351, -80.2588, 9.01064, 0.67 ) }
    dend_25 { pt3dadd( -109.516, -81.9178, 9.24971, 0.67 ) }
    dend_25 { pt3dadd( -112.67, -83.1974, 9.52715, 0.67 ) }
    dend_25 { pt3dadd( -119.429, -85.8879, 10.0778, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -35.781, 7.00652, -61.9898, 0.33 ) }
    dend_23 { pt3dadd( -37.2941, 12.1586, -67.235, 0.33 ) }
    dend_23 { pt3dadd( -37.8232, 13.9437, -69.1454, 0.67 ) }
    dend_23 { pt3dadd( -38.8029, 17.4319, -72.8085, 0.33 ) }
    dend_23 { pt3dadd( -38.9041, 17.795, -73.198, 0.67 ) }
    dend_23 { pt3dadd( -39.883, 21.0865, -76.8435, 0.33 ) }
    dend_23 { pt3dadd( -40.3112, 22.4271, -78.3436, 0.33 ) }
    dend_23 { pt3dadd( -40.9308, 24.5135, -80.6713, 0.67 ) }
    dend_23 { pt3dadd( -42.2443, 28.5287, -85.2791, 0.33 ) }
    dend_23 { pt3dadd( -42.8137, 30.1315, -87.0098, 0.67 ) }
    dend_23 { pt3dadd( -43.5541, 32.1564, -89.2313, 0.33 ) }
    dend_23 { pt3dadd( -43.8812, 32.9511, -90.1125, 0.67 ) }
    dend_23 { pt3dadd( -44.364, 34.1234, -91.4917, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 38/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -35.781, 7.00652, -61.9898, 0.33 ) }
    dend_22 { pt3dadd( -42.7092, 10.0627, -70.4578, 0.33 ) }
    dend_22 { pt3dadd( -43.4477, 10.3596, -71.2284, 1.33 ) }
    dend_22 { pt3dadd( -47.8214, 12.1316, -75.3761, 0.33 ) }
    dend_22 { pt3dadd( -49.3671, 12.7464, -76.7347, 0.33 ) }
    dend_22 { pt3dadd( -50.124, 13.0437, -77.4011, 0.67 ) }
    dend_22 { pt3dadd( -51.844, 13.7555, -78.8705, 0.33 ) }
    dend_22 { pt3dadd( -54.0565, 14.6484, -80.4808, 0.67 ) }
    dend_22 { pt3dadd( -56.2749, 15.5898, -82.2388, 0.33 ) }
    dend_22 { pt3dadd( -59.3858, 16.7193, -84.7888, 1.33 ) }
    dend_22 { pt3dadd( -62.6309, 17.9134, -88.1835, 0.67 ) }
    dend_22 { pt3dadd( -64.0716, 18.4041, -89.8184, 0.67 ) }
    dend_22 { pt3dadd( -66.8516, 19.3623, -93.268, 0.67 ) }
    dend_22 { pt3dadd( -69.8941, 20.4805, -97.4574, 0.67 ) }
    dend_22 { pt3dadd( -72.495, 21.2791, -100.855, 0.67 ) }
    dend_22 { pt3dadd( -80.2923, 23.4606, -110.687, 0.33 ) }
    dend_22 { pt3dadd( -81.3912, 23.7516, -112.077, 0.67 ) }
    dend_22 { pt3dadd( -83.8554, 24.3629, -115.244, 0.33 ) }
    dend_22 { pt3dadd( -85.7675, 24.8509, -117.675, 1.33 ) }
    dend_22 { pt3dadd( -92.9781, 26.6038, -126.525, 0.33 ) }
    dend_22 { pt3dadd( -93.6335, 26.7961, -127.273, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 59/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -115.788, -112.502, -99.3766, 0.33 ) }
    dend_17 { pt3dadd( -117.242, -113.788, -100.581, 0.33 ) }
    dend_17 { pt3dadd( -117.98, -114.474, -101.215, 0.67 ) }
    dend_17 { pt3dadd( -119.902, -116.174, -102.797, 0.33 ) }
    dend_17 { pt3dadd( -120.256, -116.474, -103.095, 0.67 ) }
    dend_17 { pt3dadd( -122.571, -118.415, -105.284, 0.33 ) }
    dend_17 { pt3dadd( -123.189, -118.933, -105.869, 0.67 ) }
    dend_17 { pt3dadd( -124.19, -119.772, -106.928, 0.33 ) }
    dend_17 { pt3dadd( -124.899, -120.376, -107.752, 0.67 ) }
    dend_17 { pt3dadd( -126.213, -121.499, -109.403, 0.33 ) }
    dend_17 { pt3dadd( -127.587, -122.588, -111.107, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -115.788, -112.502, -99.3766, 0.67 ) }
    dend_16 { pt3dadd( -116.416, -114.768, -99.8468, 0.67 ) }
    dend_16 { pt3dadd( -116.951, -116.557, -100.35, 0.67 ) }
    dend_16 { pt3dadd( -117.699, -119.114, -101.135, 0.33 ) }
    dend_16 { pt3dadd( -117.985, -120.131, -101.519, 0.67 ) }
    dend_16 { pt3dadd( -118.442, -121.87, -102.231, 0.33 ) }
    dend_16 { pt3dadd( -118.524, -122.244, -102.414, 0.67 ) }
    dend_16 { pt3dadd( -118.993, -124.744, -103.933, 0.33 ) }
    dend_16 { pt3dadd( -119.04, -125.113, -104.186, 0.67 ) }
    dend_16 { pt3dadd( -119.204, -127.184, -105.728, 0.33 ) }
    dend_16 { pt3dadd( -119.23, -127.744, -106.148, 0.67 ) }
    dend_16 { pt3dadd( -119.221, -130.192, -108.144, 0.33 ) }
    dend_16 { pt3dadd( -119.202, -130.672, -108.543, 0.67 ) }
    dend_16 { pt3dadd( -119.117, -131.615, -109.342, 0.33 ) }
    dend_16 { pt3dadd( -119.021, -132.814, -110.365, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 85/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 22.6605, -0.430583, 6.81993, 0.67 ) }
    dend_5 { pt3dadd( 25.3843, 0.870894, 5.52304, 0.67 ) }
    dend_5 { pt3dadd( 28.6752, 2.49573, 3.40587, 0.67 ) }
    dend_5 { pt3dadd( 31.3434, 3.69567, 1.63154, 0.67 ) }
    dend_5 { pt3dadd( 33.7512, 4.7337, 0.0600873, 0.67 ) }
    dend_5 { pt3dadd( 34.4199, 5.02385, -0.374997, 1.33 ) }
    dend_5 { pt3dadd( 36.5785, 5.88609, -2.29139, 0.67 ) }
    dend_5 { pt3dadd( 38.6923, 6.635, -4.78762, 0.67 ) }
    dend_5 { pt3dadd( 40.5369, 7.08946, -7.46405, 0.67 ) }
    dend_5 { pt3dadd( 41.4403, 7.22884, -8.92569, 0.67 ) }
    dend_5 { pt3dadd( 41.7553, 7.26084, -9.43851, 1.33 ) }
    dend_5 { pt3dadd( 46.9302, 7.86537, -18.065, 0.33 ) }
    dend_5 { pt3dadd( 47.5243, 7.96293, -19.0093, 0.33 ) }
    dend_5 { pt3dadd( 48.0642, 8.07097, -19.8042, 1.33 ) }
    dend_5 { pt3dadd( 49.1897, 8.46089, -21.4317, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( 49.7573, 8.72949, -22.1671, 0.33 ) }
    dend_5 { pt3dadd( 51.2628, 9.68383, -23.6721, 0.67 ) }
    dend_5 { pt3dadd( 53.3571, 11.3323, -25.0161, 0.67 ) }
    dend_5 { pt3dadd( 54.5987, 12.3083, -25.8232, 0.67 ) }
    dend_5 { pt3dadd( 56.6373, 13.8666, -27.1329, 0.33 ) }
    dend_5 { pt3dadd( 57.4765, 14.4413, -27.6388, 1.33 ) }
    dend_5 { pt3dadd( 59.3359, 15.5105, -28.5882, 0.33 ) }
    dend_5 { pt3dadd( 60.7219, 16.1177, -29.1973, 1.33 ) }
    dend_5 { pt3dadd( 62.7379, 16.6976, -29.9643, 0.33 ) }
    dend_5 { pt3dadd( 63.7718, 16.8297, -30.2735, 0.67 ) }
    dend_5 { pt3dadd( 65.9081, 16.6654, -30.785, 1.33 ) }
    dend_5 { pt3dadd( 68.8954, 16.1345, -31.4166, 0.67 ) }
    dend_5 { pt3dadd( 70.519, 15.6954, -31.7304, 0.67 ) }
    dend_5 { pt3dadd( 72.5424, 15.0989, -32.1004, 0.33 ) }
    dend_5 { pt3dadd( 73.256, 14.8717, -32.2107, 1.33 ) }
    dend_5 { pt3dadd( 76.3351, 13.7773, -32.6774, 0.33 ) }
    dend_5 { pt3dadd( 77.3982, 13.3842, -32.8455, 0.33 ) }
    dend_5 { pt3dadd( 78.1836, 13.1007, -33.0265, 0.67 ) }
    dend_5 { pt3dadd( 79.4531, 12.7024, -33.2736, 0.33 ) }
    dend_5 { pt3dadd( 80.4924, 12.3893, -33.4713, 0.67 ) }
    dend_5 { pt3dadd( 81.9903, 11.9357, -33.8314, 0.33 ) }
    dend_5 { pt3dadd( 83.4873, 11.4714, -34.226, 0.67 ) }
    dend_5 { pt3dadd( 85.5548, 10.7629, -34.7939, 0.33 ) }
    dend_5 { pt3dadd( 86.1069, 10.5656, -34.946, 0.67 ) }
    dend_5 { pt3dadd( 87.3789, 10.0586, -35.2829, 0.33 ) }
    dend_5 { pt3dadd( 89.6523, 9.13096, -35.8461, 0.33 ) }
    dend_5 { pt3dadd( 90.889, 8.61594, -36.1166, 0.67 ) }
    dend_5 { pt3dadd( 92.9139, 7.76007, -36.4418, 0.33 ) }
    dend_5 { pt3dadd( 93.933, 7.32721, -36.5147, 0.67 ) }
    dend_5 { pt3dadd( 95.3879, 6.7474, -36.5512, 0.33 ) }
    dend_5 { pt3dadd( 96.1923, 6.46808, -36.5445, 0.33 ) }
    dend_5 { pt3dadd( 96.7734, 6.28577, -36.5517, 0.67 ) }
    dend_5 { pt3dadd( 99.0884, 5.56939, -36.7235, 0.33 ) }
    dend_5 { pt3dadd( 99.9172, 5.33981, -36.8316, 0.67 ) }
    dend_5 { pt3dadd( 101.407, 5.0322, -37.08, 0.33 ) }
    dend_5 { pt3dadd( 103.41, 4.7326, -37.5025, 0.67 ) }
    dend_5 { pt3dadd( 105.57, 4.44853, -38.0105, 0.33 ) }
    dend_5 { pt3dadd( 105.864, 4.4129, -38.0872, 0.67 ) }
    dend_5 { pt3dadd( 107.733, 4.19358, -38.6526, 0.33 ) }
    dend_5 { pt3dadd( 109.039, 4.04432, -39.0711, 0.67 ) }
    dend_5 { pt3dadd( 111.015, 3.75749, -39.6731, 0.33 ) }
    dend_5 { pt3dadd( 111.537, 3.71158, -39.7965, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 42/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 22.6605, -0.430583, 6.81993, 0.67 ) }
    dend_2 { pt3dadd( 25.5798, -7.49542, 10.6115, 0.67 ) }
    dend_2 { pt3dadd( 27.1824, -11.7694, 12.5915, 0.67 ) }
    dend_2 { pt3dadd( 28.15, -14.529, 13.975, 0.67 ) }
    dend_2 { pt3dadd( 29.2785, -17.9687, 15.7206, 0.67 ) }
    dend_2 { pt3dadd( 30.0803, -20.779, 17.1241, 0.67 ) }
    dend_2 { pt3dadd( 31.3521, -25.2473, 19.2936, 0.67 ) }
    dend_2 { pt3dadd( 32.1412, -28.2129, 20.5621, 0.67 ) }
    dend_2 { pt3dadd( 33.7557, -32.8827, 22.6121, 0.67 ) }
    dend_2 { pt3dadd( 35.3892, -36.5685, 24.2152, 0.67 ) }
    dend_2 { pt3dadd( 37.2233, -40.2816, 25.8043, 0.67 ) }
    dend_2 { pt3dadd( 39.4287, -44.3035, 27.4705, 0.67 ) }
    dend_2 { pt3dadd( 42.2203, -48.9988, 29.3393, 0.67 ) }
    dend_2 { pt3dadd( 44.3406, -52.215, 30.6494, 0.67 ) }
    dend_2 { pt3dadd( 47.9457, -57.4314, 32.6558, 0.67 ) }
    dend_2 { pt3dadd( 49.2617, -59.3227, 33.4566, 0.67 ) }
    dend_2 { pt3dadd( 50.707, -61.2882, 34.3303, 0.33 ) }
    dend_2 { pt3dadd( 52.0628, -63.2962, 35.2808, 0.67 ) }
    dend_2 { pt3dadd( 53.6742, -66.1656, 36.7313, 0.67 ) }
    dend_2 { pt3dadd( 54.1224, -67.3554, 37.4084, 0.67 ) }
    dend_2 { pt3dadd( 54.6963, -70.3131, 39.5457, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 63/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -119.429, -85.8879, 10.0778, 0.33 ) }
    dend_33 { pt3dadd( -120.313, -88.2539, 10.0627, 0.33 ) }
    dend_33 { pt3dadd( -120.418, -88.5468, 10.06, 0.67 ) }
    dend_33 { pt3dadd( -120.865, -89.7597, 10.0503, 0.33 ) }
    dend_33 { pt3dadd( -121.488, -91.5317, 10.0328, 0.67 ) }
    dend_33 { pt3dadd( -121.991, -93.0094, 10.0182, 0.33 ) }
    dend_33 { pt3dadd( -122.741, -95.409, 9.89326, 0.67 ) }
    dend_33 { pt3dadd( -123.369, -97.5079, 9.70448, 0.33 ) }
    dend_33 { pt3dadd( -123.604, -98.3368, 9.52342, 0.67 ) }
    dend_33 { pt3dadd( -124.039, -99.7536, 9.04305, 0.33 ) }
    dend_33 { pt3dadd( -124.316, -100.616, 8.64036, 0.67 ) }
    dend_33 { pt3dadd( -124.848, -102.628, 7.43939, 0.33 ) }
    dend_33 { pt3dadd( -124.949, -103.234, 7.05468, 0.67 ) }
    dend_33 { pt3dadd( -125.369, -106.327, 4.70432, 0.33 ) }
    dend_33 { pt3dadd( -125.441, -107.576, 3.74907, 0.33 ) }
    dend_33 { pt3dadd( -125.452, -108.076, 3.37431, 0.33 ) }
    dend_33 { pt3dadd( -125.439, -109.151, 2.58914, 0.67 ) }
    dend_33 { pt3dadd( -125.277, -112.013, 0.757271, 0.33 ) }
    dend_33 { pt3dadd( -124.947, -114.634, -0.681937, 0.67 ) }
    dend_33 { pt3dadd( -124.543, -116.722, -1.44736, 0.33 ) }
    dend_33 { pt3dadd( -124.379, -117.347, -1.69663, 0.67 ) }
    dend_33 { pt3dadd( -125.983, -125.501, -6.07208, 0.67 ) }
    dend_33 { pt3dadd( -129.276, -133.674, -9.41442, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -119.429, -85.8879, 10.0778, 0.67 ) }
    dend_26 { pt3dadd( -122.472, -86.2316, 11.7265, 0.67 ) }
    dend_26 { pt3dadd( -124.19, -86.4256, 12.657, 0.67 ) }
    dend_26 { pt3dadd( -125.779, -86.6051, 13.5179, 0.67 ) }
    dend_26 { pt3dadd( -128.375, -86.8982, 14.9241, 0.67 ) }
    dend_26 { pt3dadd( -131.975, -87.3048, 16.8741, 0.67 ) }
    dend_26 { pt3dadd( -134.652, -87.607, 18.3239, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -127.587, -122.588, -111.107, 0.33 ) }
    dend_19 { pt3dadd( -128.493, -123.337, -112.251, 0.33 ) }
    dend_19 { pt3dadd( -128.725, -123.534, -112.532, 0.67 ) }
    dend_19 { pt3dadd( -130.858, -125.586, -114.77, 0.33 ) }
    dend_19 { pt3dadd( -131.333, -126.073, -115.234, 0.67 ) }
    dend_19 { pt3dadd( -133.638, -128.47, -117.317, 0.33 ) }
    dend_19 { pt3dadd( -134.349, -129.189, -117.858, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_19 { pt3dadd( -135.467, -130.322, -118.631, 0.67 ) }
    dend_19 { pt3dadd( -138.093, -132.892, -120.061, 0.33 ) }
    dend_19 { pt3dadd( -138.551, -133.325, -120.227, 0.67 ) }
    dend_19 { pt3dadd( -139.634, -134.402, -120.584, 0.33 ) }
    dend_19 { pt3dadd( -141.78, -136.495, -121.402, 0.33 ) }
    dend_19 { pt3dadd( -142.551, -137.195, -121.739, 0.67 ) }
    dend_19 { pt3dadd( -144.036, -138.327, -122.53, 0.33 ) }
    dend_19 { pt3dadd( -144.714, -138.761, -122.958, 0.67 ) }
    dend_19 { pt3dadd( -148.57, -141.14, -125.664, 0.33 ) }
    dend_19 { pt3dadd( -151.61, -143.001, -127.971, 0.67 ) }
    dend_19 { pt3dadd( -154.391, -144.669, -130.229, 0.33 ) }
    dend_19 { pt3dadd( -158.43, -147.02, -133.552, 0.33 ) }
    dend_19 { pt3dadd( -160.308, -148.096, -135.191, 0.67 ) }
    dend_19 { pt3dadd( -162.203, -149.085, -136.837, 0.33 ) }
    dend_19 { pt3dadd( -162.651, -149.262, -137.192, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -127.587, -122.588, -111.107, 0.33 ) }
    dend_18 { pt3dadd( -129.378, -123.73, -111.194, 0.33 ) }
    dend_18 { pt3dadd( -130.72, -124.696, -110.994, 0.67 ) }
    dend_18 { pt3dadd( -137.038, -129.399, -109.464, 0.33 ) }
    dend_18 { pt3dadd( -138.1, -130.19, -109.207, 0.67 ) }
    dend_18 { pt3dadd( -140.833, -132.224, -108.546, 0.33 ) }
    dend_18 { pt3dadd( -143.708, -134.365, -107.85, 0.67 ) }
    dend_18 { pt3dadd( -147.634, -137.491, -106.904, 0.33 ) }
    dend_18 { pt3dadd( -148.606, -138.341, -106.521, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 24/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 54.6963, -70.3131, 39.5457, 0.33 ) }
    dend_4 { pt3dadd( 55.191, -72.012, 40.0905, 0.33 ) }
    dend_4 { pt3dadd( 55.8987, -74.4578, 40.8748, 0.67 ) }
    dend_4 { pt3dadd( 57.2055, -78.9247, 42.306, 0.67 ) }
    dend_4 { pt3dadd( 58.1662, -82.4337, 43.4356, 0.67 ) }
    dend_4 { pt3dadd( 59.2362, -86.3197, 44.7323, 0.67 ) }
    dend_4 { pt3dadd( 60.1683, -89.9252, 46.0663, 0.67 ) }
    dend_4 { pt3dadd( 61.0122, -93.2064, 47.4364, 0.67 ) }
    dend_4 { pt3dadd( 61.3131, -94.3784, 47.9729, 0.67 ) }
    dend_4 { pt3dadd( 61.9822, -96.6293, 49.0831, 0.67 ) }
    dend_4 { pt3dadd( 62.6635, -99.2162, 50.4381, 0.67 ) }
    dend_4 { pt3dadd( 63.6163, -102.795, 52.3681, 0.67 ) }
    dend_4 { pt3dadd( 64.9787, -107.146, 54.6993, 0.33 ) }
    dend_4 { pt3dadd( 65.3879, -108.409, 55.3485, 0.67 ) }
    dend_4 { pt3dadd( 66.1635, -110.668, 56.398, 0.67 ) }
    dend_4 { pt3dadd( 67.2208, -113.258, 57.4644, 0.67 ) }
    dend_4 { pt3dadd( 68.7343, -116.594, 58.6089, 0.67 ) }
    dend_4 { pt3dadd( 70.1244, -119.44, 59.1666, 0.67 ) }
    dend_4 { pt3dadd( 71.713, -122.422, 59.4229, 0.67 ) }
    dend_4 { pt3dadd( 72.7735, -124.184, 59.4288, 0.67 ) }
    dend_4 { pt3dadd( 74.3545, -126.426, 59.3101, 0.33 ) }
    dend_4 { pt3dadd( 75.0438, -127.247, 59.1642, 1.33 ) }
    dend_4 { pt3dadd( 78.6114, -131.177, 58.0777, 0.67 ) }
    dend_4 { pt3dadd( 80.4501, -133.049, 57.436, 0.67 ) }
    dend_4 { pt3dadd( 83.5735, -136.004, 56.2835, 0.67 ) }
    dend_4 { pt3dadd( 85.8224, -138.172, 55.4656, 0.67 ) }
    dend_4 { pt3dadd( 88.889, -141.252, 54.3121, 0.33 ) }
    dend_4 { pt3dadd( 89.2854, -141.608, 54.1742, 0.67 ) }
    dend_4 { pt3dadd( 94.1207, -151.656, 55.4941, 0.67 ) }
    dend_4 { pt3dadd( 98.4971, -162.007, 55.4926, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 54/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 54.6963, -70.3131, 39.5457, 0.67 ) }
    dend_3 { pt3dadd( 53.3724, -71.5601, 40.2177, 0.67 ) }
    dend_3 { pt3dadd( 46.2351, -77.3283, 42.9375, 0.67 ) }
    dend_3 { pt3dadd( 38.8321, -82.7779, 45.6755, 0.67 ) }
    dend_3 { pt3dadd( 31.1174, -86.837, 49.8018, 0.67 ) }
    dend_3 { pt3dadd( 24.3788, -91.3343, 54.9438, 0.67 ) }
    dend_3 { pt3dadd( 18.3889, -96.0025, 60.7668, 0.67 ) }
    dend_3 { pt3dadd( 12.1635, -99.0377, 67.4918, 0.67 ) }
    dend_3 { pt3dadd( 6.50413, -101.786, 74.8231, 0.67 ) }
    dend_3 { pt3dadd( 1.09614, -103.209, 82.7748, 0.67 ) }
    dend_3 { pt3dadd( -2.56028, -104.416, 91.7026, 0.67 ) }
    dend_3 { pt3dadd( -4.63762, -104.658, 101.24, 0.67 ) }
    dend_3 { pt3dadd( -6.29748, -105.102, 110.844, 0.67 ) }
    dend_3 { pt3dadd( -8.99979, -103.816, 120.191, 0.67 ) }
    dend_3 { pt3dadd( -10.9539, -103.023, 129.763, 0.67 ) }
    dend_3 { pt3dadd( -13.5584, -103.653, 139.134, 0.67 ) }
    dend_3 { pt3dadd( -17.0686, -104.073, 148.228, 0.67 ) }
    dend_3 { pt3dadd( -19.5754, -106.813, 157.129, 0.67 ) }
    dend_3 { pt3dadd( -20.7004, -107.556, 166.78, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 73/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -134.652, -87.607, 18.3239, 0.67 ) }
    dend_30 { pt3dadd( -143.455, -85.0114, 20.6649, 0.67 ) }
    dend_30 { pt3dadd( -144.777, -84.6214, 21.0166, 0.67 ) }
    dend_30 { pt3dadd( -148.553, -83.5081, 22.0206, 0.33 ) }
    dend_30 { pt3dadd( -149.251, -83.3023, 22.2062, 0.67 ) }
    dend_30 { pt3dadd( -157.495, -80.8716, 24.3984, 0.33 ) }
    dend_30 { pt3dadd( -166.485, -78.0442, 27.8596, 0.33 ) }
    dend_30 { pt3dadd( -175.689, -75.1608, 30.6651, 0.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 81/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -134.652, -87.607, 18.3239, 0.67 ) }
    dend_27 { pt3dadd( -136.548, -88.077, 19.7481, 0.67 ) }
    dend_27 { pt3dadd( -138.907, -88.5269, 21.5418, 0.33 ) }
    dend_27 { pt3dadd( -141.375, -88.4283, 22.5608, 0.67 ) }
    dend_27 { pt3dadd( -142.533, -88.3821, 23.039, 0.33 ) }
    dend_27 { pt3dadd( -143.6, -88.3395, 23.4793, 0.67 ) }
    dend_27 { pt3dadd( -144.706, -88.2953, 23.9363, 0.33 ) }
    dend_27 { pt3dadd( -145.248, -88.2442, 24.0404, 0.67 ) }
    dend_27 { pt3dadd( -149.182, -85.4633, 22.2809, 0.33 ) }
    dend_27 { pt3dadd( -157.019, -83.1205, 24.3049, 0.33 ) }
    dend_27 { pt3dadd( -164.912, -81.7034, 26.9573, 0.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 92/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -175.689, -75.1608, 30.6651, 0.33 ) }
    dend_32 { pt3dadd( -187.077, -71.7746, 32.5417, 0.33 ) }
    dend_32 { pt3dadd( -198.142, -67.2419, 33.2382, 0.33 ) }
    dend_32 { pt3dadd( -208.58, -61.5057, 32.739, 0.33 ) }
    dend_32 { pt3dadd( -218.73, -55.3371, 32.0672, 0.33 ) }
    dend_32 { pt3dadd( -228.716, -48.9117, 31.91, 0.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -175.689, -75.1608, 30.6651, 0.33 ) }
    dend_31 { pt3dadd( -187.715, -71.5591, 31.9788, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_31 { pt3dadd( -199.827, -68.2196, 33.3042, 0.33 ) }
    dend_31 { pt3dadd( -211.193, -63.3456, 35.4905, 0.33 ) }
    dend_31 { pt3dadd( -222.989, -58.9579, 35.2862, 0.33 ) }
    dend_31 { pt3dadd( -234.59, -54.337, 33.7743, 0.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -164.912, -81.7034, 26.9573, 0.33 ) }
    dend_29 { pt3dadd( -175.202, -79.5622, 29.5479, 0.33 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -164.912, -81.7034, 26.9573, 0.33 ) }
    dend_28 { pt3dadd( -173.211, -80.5579, 31.3026, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_45, dend_44, dend_39, dend_38, dend_35, dend_20, dend_13, dend_10, dend_7, dend_0, axon_0, dend_47, dend_46, dend_43, dend_40, dend_37, dend_36, dend_24, dend_21, dend_15, dend_14, dend_12, dend_11, dend_9, dend_8, dend_6, dend_1, axon_1, dend_42, dend_41, dend_34, dend_25, dend_23, dend_22, dend_17, dend_16, dend_5, dend_2, dend_33, dend_26, dend_19, dend_18, dend_4, dend_3, dend_30, dend_27, dend_32, dend_31, dend_29, dend_28]}
    ModelViewParmSubset_5 = new SectionList()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_38 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_35 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_10 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_7 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_46 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_43 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_37 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_21 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_14 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_9 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_25 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_23 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_5 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_33 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_30 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_20 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_0 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_1 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_13 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_24 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_11 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_27 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_28 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_44 nseg = 11
    dend_39 nseg = 3
    dend_38 nseg = 11
    dend_35 nseg = 5
    dend_10 nseg = 5
    dend_7 nseg = 3
    dend_47 nseg = 7
    dend_46 nseg = 5
    dend_43 nseg = 7
    dend_40 nseg = 5
    dend_37 nseg = 3
    dend_21 nseg = 3
    dend_15 nseg = 9
    dend_14 nseg = 7
    dend_12 nseg = 3
    dend_9 nseg = 9
    dend_8 nseg = 5
    dend_6 nseg = 5
    dend_34 nseg = 3
    dend_25 nseg = 5
    dend_23 nseg = 3
    dend_22 nseg = 5
    dend_5 nseg = 5
    dend_2 nseg = 5
    dend_33 nseg = 3
    dend_19 nseg = 3
    dend_4 nseg = 5
    dend_3 nseg = 9
    dend_30 nseg = 3
    dend_32 nseg = 3
    dend_31 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_NBC_8773d50bcd_0_0


