// Cell: cACint209_L23_BP_13d0a0f335_0_0
/*
{
  "id" : "cACint209_L23_BP_13d0a0f335_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.582447, -10.9992, 12.4576, 1.66", "-1.15399, -13.2342, 14.3095, 1.66", "-2.13554, -17.0725, 17.4899, 1.39", "-6.03918, -32.3375, 30.1384, 1.11", "-6.72397, -35.0153, 32.3572, 1.11", "-7.59128, -38.4069, 35.1674, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.624044, 11.6476, 0.873799, 0.83", "0.626334, 12.8942, 1.41775, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.59128, -38.4069, 35.1674, 0.83", "-9.85317, -43.0564, 33.5403, 0.83", "-10.3917, -44.1635, 33.1528, 0.83", "-11.7665, -46.9894, 32.1638, 0.83", "-12.3828, -48.2562, 31.7205, 0.83", "-13.7082, -50.9806, 30.7671, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.59128, -38.4069, 35.1674, 0.83", "-7.23875, -40.0327, 35.5969, 0.83", "-6.91237, -41.5057, 35.9635, 0.83", "-6.53663, -43.4546, 36.3986, 0.83", "-5.56448, -47.8881, 37.301, 0.83", "-4.69762, -51.5337, 38.0062, 0.55", "-3.18384, -57.7202, 39.0674, 0.55", "-2.35739, -60.7705, 39.6493, 0.83", "-1.33684, -64.2344, 40.3442, 0.55", "0.435829, -69.8384, 41.7032, 0.55", "0.96744, -71.4283, 42.1218, 0.55", "2.41401, -75.7349, 43.2864, 0.55", "4.20882, -81.1562, 44.9016, 0.55", "5.26694, -84.4026, 45.9055, 0.55", "6.62105, -88.7377, 47.2701, 0.55", "8.76062, -96.6266, 49.7259, 0.55", "9.77836, -100.828, 50.968, 0.55", "10.4868, -103.987, 51.8288, 0.55", "10.8816, -106.22, 52.2915, 0.55", "11.1438, -108.207, 52.6253, 0.55", "11.4812, -112.239, 53.3267, 0.55", "11.6018, -114.27, 53.6802, 0.55", "11.7295, -117.373, 54.3404, 0.55", "11.8651, -121.53, 55.2865, 0.55", "11.9649, -127.547, 56.7176, 0.55", "12.0602, -132.951, 58.0924, 0.55", "12.0713, -137.674, 59.3735, 0.83", "12.0191, -142.183, 60.7441, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.626334, 12.8942, 1.41775, 0.83", "-0.21147, 23.8019, -3.68489, 0.83", "-0.332832, 26.6768, -4.93032, 0.83", "-0.487406, 30.2004, -6.49203, 0.83", "-0.563383, 33.111, -7.70117, 0.83", "-0.652082, 37.7655, -9.53931, 0.83", "-0.676339, 43.8529, -11.8165, 0.83", "-0.699872, 48.1791, -13.0739, 0.83", "-0.691405, 52.8604, -14.521, 0.83", "-0.636405, 57.6677, -16.2046, 0.55", "-0.619922, 59.1901, -16.7467, 0.55", "-0.634268, 61.7945, -17.6868, 0.55", "-0.579317, 67.2326, -19.5582, 0.55", "-0.573727, 71.1775, -20.8633, 0.55", "-0.478576, 81.0639, -24.1289, 0.55", "-0.499194, 85.5269, -25.7886, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.626334, 12.8942, 1.41775, 0.83", "1.4781, 15.6611, 2.6113, 0.83", "2.07733, 17.8465, 3.62028, 0.83", "2.90629, 21.2977, 5.31092, 0.83", "3.66236, 24.6255, 6.96509, 0.83", "4.52754, 28.8401, 8.85485, 0.83", "5.19149, 32.0165, 10.192, 0.83", "5.60554, 34.422, 11.1906, 0.83", "6.04805, 37.061, 12.187, 0.83", "6.14595, 37.7799, 12.4107, 0.83", "7.35168, 46.0408, 14.5337, 0.83", "7.59247, 47.7968, 14.8596, 0.83", "7.92224, 50.1842, 15.1721, 0.83", "8.19514, 52.2511, 15.3904, 0.83", "8.48096, 54.649, 15.5949, 0.83", "8.86436, 57.677, 15.8601, 0.83", "9.18252, 60.7996, 16.1038, 0.83", "9.39539, 62.5825, 16.2523, 0.83", "9.80013, 65.3376, 16.4959, 0.83", "10.152, 68.0483, 16.7311, 0.83", "10.5775, 70.8952, 16.9565, 0.83", "11.1244, 74.6163, 17.2913, 0.83", "11.4596, 77.0483, 17.622, 0.83", "11.6121, 78.3954, 17.8366, 0.83", "11.7388, 79.9208, 18.1504, 0.83", "11.8956, 82.179, 18.7483, 0.83", "11.9361, 85.5014, 19.8052, 0.55", "11.9719, 89.8602, 21.3739, 0.55", "11.9131, 91.1448, 21.8427, 0.55", "11.7819, 93.8467, 22.8105, 0.55", "11.7015, 94.9803, 23.1925, 0.55", "11.5178, 97.1071, 23.8959, 0.55", "11.3878, 99.3235, 24.5354, 0.55", "11.3762, 102.538, 25.3116, 0.55", "11.3822, 104.656, 25.7923, 0.55", "11.3676, 106.584, 26.1598, 0.55", "11.4152, 108.991, 26.6246, 0.55", "11.6191, 111.493, 27.0944, 0.55", "11.9872, 114.902, 27.8089, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.7082, -50.9806, 30.7671, 0.83", "-16.5817, -58.2373, 33.8352, 0.83", "-18.8162, -63.9904, 35.9852, 0.83", "-21.4654, -70.9324, 38.2694, 0.83", "-23.6518, -76.6711, 39.9592, 0.83", "-24.9805, -80.1586, 40.9861, 0.83", "-26.5648, -84.3167, 42.2104, 0.83", "-27.5789, -87.3331, 42.8842, 0.83", "-28.7161, -90.7777, 43.4985, 0.83", "-30.0267, -95.1908, 43.62, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.7082, -50.9806, 30.7671, 0.55", "-9.5788, -52.4139, 38.9027, 0.55", "-4.89594, -53.939, 47.4769, 0.55", "-2.51715, -54.7137, 51.8325, 0.55", "0.478969, -55.6895, 57.3183, 0.28", "0.973926, -55.8507, 58.2245, 0.83", "3.57046, -56.6963, 62.9787, 0.28", "4.05466, -56.7883, 63.7791, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.499194, 85.5269, -25.7886, 0.55", "0.258814, 88.8339, -26.3824, 0.55", "1.02229, 92.3292, -27.1026, 0.55", "1.57078, 94.7856, -27.5868, 0.55", "2.43847, 98.4664, -28.3107, 0.83", "3.06379, 101.082, -28.8117, 0.55", "3.67488, 103.518, -29.2794, 0.55", "4.27745, 105.794, -29.656, 1.11", "5.29572, 109.745, -30.4343, 0.55", "5.59055, 111.073, -30.7034, 0.55", "5.9472, 112.749, -31.0578, 1.11", "6.37282, 114.832, -31.5076, 0.55", "6.62616, 116.198, -31.791, 1.11", "7.38047, 120.37, -32.598, 0.55", "7.63638, 122.584, -33.1337, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.499194, 85.5269, -25.7886, 0.28", "-1.11855, 88.623, -28.8962, 0.28", "-1.18972, 89.0849, -29.3516, 0.55", "-1.71113, 93.1632, -33.2195, 0.28", "-2.13848, 96.9568, -37.0504, 1.11", "-2.3254, 98.9241, -39.1633, 0.28", "-2.3254, 98.9241, -39.1633, 0.55", "-2.1445, 101.29, -41.2871, 0.28", "-1.96931, 102.189, -42.0153, 1.11", "-0.159824, 106.1, -44.1851, 0.55", "1.95413, 109.097, -44.9359, 0.28", "5.73726, 113.749, -45.5385, 1.11", "9.24426, 117.673, -45.6128, 0.28", "9.33958, 117.763, -45.5938, 0.55", "12.3694, 120.299, -44.5452, 0.28", "12.6652, 120.521, -44.3869, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-30.0267, -95.1908, 43.62, 0.83", "-30.1648, -101.082, 45.672, 0.83", "-30.2961, -105.806, 47.6395, 0.83", "-30.2964, -108.02, 48.572, 0.83", "-30.3134, -109.291, 49.2178, 0.83", "-30.4485, -112.761, 51.0696, 0.83", "-30.5429, -114.813, 52.0168, 0.83", "-30.6865, -118.719, 53.4341, 0.83", "-30.6743, -121.435, 54.4239, 0.83", "-30.4266, -126.087, 55.9523, 0.83", "-30.1752, -128.49, 56.5778, 0.83", "-29.4165, -134.418, 57.5517, 0.83", "-28.78, -139.709, 58.0792, 0.83", "-28.367, -144.082, 58.1419, 0.83", "-28.2193, -147.241, 58.0979, 0.83", "-28.1991, -147.877, 58.0686, 0.83", "-28.2308, -151.52, 58.0893, 0.28", "-28.3048, -152.48, 58.1639, 0.83", "-28.6627, -154.947, 58.2916, 0.28", "-29.3572, -159.325, 58.45, 0.28", "-29.5168, -160.263, 58.5195, 0.28", "-30.0037, -163.257, 58.7638, 0.83", "-30.3686, -165.908, 59.0154, 0.28", "-30.6476, -168.035, 59.2464, 0.83", "-30.8017, -169.741, 59.477, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-30.0267, -95.1908, 43.62, 0.55", "-32.6223, -101.057, 41.5721, 0.55", "-33.8308, -103.563, 40.7629, 0.55", "-36.5251, -108.867, 39.1783, 0.55", "-37.7415, -111.131, 38.548, 0.55", "-39.0138, -113.326, 37.9829, 0.28", "-39.5823, -114.307, 37.7304, 0.55", "-41.1247, -116.555, 37.2929, 0.28", "-42.1561, -118.012, 37.0466, 0.55", "-43.4834, -119.692, 36.9142, 0.28", "-45.5917, -122.21, 36.6902, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "axon_0", "dend_7", "dend_6", "dend_2", "dend_1", "axon_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BP_13d0a0f335_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.582447, -10.9992, 12.4576, 1.66 ) }
    dend_5 { pt3dadd( -1.15399, -13.2342, 14.3095, 1.66 ) }
    dend_5 { pt3dadd( -2.13554, -17.0725, 17.4899, 1.39 ) }
    dend_5 { pt3dadd( -6.03918, -32.3375, 30.1384, 1.11 ) }
    dend_5 { pt3dadd( -6.72397, -35.0153, 32.3572, 1.11 ) }
    dend_5 { pt3dadd( -7.59128, -38.4069, 35.1674, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.624044, 11.6476, 0.873799, 0.83 ) }
    dend_0 { pt3dadd( 0.626334, 12.8942, 1.41775, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.59128, -38.4069, 35.1674, 0.83 ) }
    dend_7 { pt3dadd( -9.85317, -43.0564, 33.5403, 0.83 ) }
    dend_7 { pt3dadd( -10.3917, -44.1635, 33.1528, 0.83 ) }
    dend_7 { pt3dadd( -11.7665, -46.9894, 32.1638, 0.83 ) }
    dend_7 { pt3dadd( -12.3828, -48.2562, 31.7205, 0.83 ) }
    dend_7 { pt3dadd( -13.7082, -50.9806, 30.7671, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.59128, -38.4069, 35.1674, 0.83 ) }
    dend_6 { pt3dadd( -7.23875, -40.0327, 35.5969, 0.83 ) }
    dend_6 { pt3dadd( -6.91237, -41.5057, 35.9635, 0.83 ) }
    dend_6 { pt3dadd( -6.53663, -43.4546, 36.3986, 0.83 ) }
    dend_6 { pt3dadd( -5.56448, -47.8881, 37.301, 0.83 ) }
    dend_6 { pt3dadd( -4.69762, -51.5337, 38.0062, 0.55 ) }
    dend_6 { pt3dadd( -3.18384, -57.7202, 39.0674, 0.55 ) }
    dend_6 { pt3dadd( -2.35739, -60.7705, 39.6493, 0.83 ) }
    dend_6 { pt3dadd( -1.33684, -64.2344, 40.3442, 0.55 ) }
    dend_6 { pt3dadd( 0.435829, -69.8384, 41.7032, 0.55 ) }
    dend_6 { pt3dadd( 0.96744, -71.4283, 42.1218, 0.55 ) }
    dend_6 { pt3dadd( 2.41401, -75.7349, 43.2864, 0.55 ) }
    dend_6 { pt3dadd( 4.20882, -81.1562, 44.9016, 0.55 ) }
    dend_6 { pt3dadd( 5.26694, -84.4026, 45.9055, 0.55 ) }
    dend_6 { pt3dadd( 6.62105, -88.7377, 47.2701, 0.55 ) }
    dend_6 { pt3dadd( 8.76062, -96.6266, 49.7259, 0.55 ) }
    dend_6 { pt3dadd( 9.77836, -100.828, 50.968, 0.55 ) }
    dend_6 { pt3dadd( 10.4868, -103.987, 51.8288, 0.55 ) }
    dend_6 { pt3dadd( 10.8816, -106.22, 52.2915, 0.55 ) }
    dend_6 { pt3dadd( 11.1438, -108.207, 52.6253, 0.55 ) }
    dend_6 { pt3dadd( 11.4812, -112.239, 53.3267, 0.55 ) }
    dend_6 { pt3dadd( 11.6018, -114.27, 53.6802, 0.55 ) }
    dend_6 { pt3dadd( 11.7295, -117.373, 54.3404, 0.55 ) }
    dend_6 { pt3dadd( 11.8651, -121.53, 55.2865, 0.55 ) }
    dend_6 { pt3dadd( 11.9649, -127.547, 56.7176, 0.55 ) }
    dend_6 { pt3dadd( 12.0602, -132.951, 58.0924, 0.55 ) }
    dend_6 { pt3dadd( 12.0713, -137.674, 59.3735, 0.83 ) }
    dend_6 { pt3dadd( 12.0191, -142.183, 60.7441, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.626334, 12.8942, 1.41775, 0.83 ) }
    dend_2 { pt3dadd( -0.21147, 23.8019, -3.68489, 0.83 ) }
    dend_2 { pt3dadd( -0.332832, 26.6768, -4.93032, 0.83 ) }
    dend_2 { pt3dadd( -0.487406, 30.2004, -6.49203, 0.83 ) }
    dend_2 { pt3dadd( -0.563383, 33.111, -7.70117, 0.83 ) }
    dend_2 { pt3dadd( -0.652082, 37.7655, -9.53931, 0.83 ) }
    dend_2 { pt3dadd( -0.676339, 43.8529, -11.8165, 0.83 ) }
    dend_2 { pt3dadd( -0.699872, 48.1791, -13.0739, 0.83 ) }
    dend_2 { pt3dadd( -0.691405, 52.8604, -14.521, 0.83 ) }
    dend_2 { pt3dadd( -0.636405, 57.6677, -16.2046, 0.55 ) }
    dend_2 { pt3dadd( -0.619922, 59.1901, -16.7467, 0.55 ) }
    dend_2 { pt3dadd( -0.634268, 61.7945, -17.6868, 0.55 ) }
    dend_2 { pt3dadd( -0.579317, 67.2326, -19.5582, 0.55 ) }
    dend_2 { pt3dadd( -0.573727, 71.1775, -20.8633, 0.55 ) }
    dend_2 { pt3dadd( -0.478576, 81.0639, -24.1289, 0.55 ) }
    dend_2 { pt3dadd( -0.499194, 85.5269, -25.7886, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.626334, 12.8942, 1.41775, 0.83 ) }
    dend_1 { pt3dadd( 1.4781, 15.6611, 2.6113, 0.83 ) }
    dend_1 { pt3dadd( 2.07733, 17.8465, 3.62028, 0.83 ) }
    dend_1 { pt3dadd( 2.90629, 21.2977, 5.31092, 0.83 ) }
    dend_1 { pt3dadd( 3.66236, 24.6255, 6.96509, 0.83 ) }
    dend_1 { pt3dadd( 4.52754, 28.8401, 8.85485, 0.83 ) }
    dend_1 { pt3dadd( 5.19149, 32.0165, 10.192, 0.83 ) }
    dend_1 { pt3dadd( 5.60554, 34.422, 11.1906, 0.83 ) }
    dend_1 { pt3dadd( 6.04805, 37.061, 12.187, 0.83 ) }
    dend_1 { pt3dadd( 6.14595, 37.7799, 12.4107, 0.83 ) }
    dend_1 { pt3dadd( 7.35168, 46.0408, 14.5337, 0.83 ) }
    dend_1 { pt3dadd( 7.59247, 47.7968, 14.8596, 0.83 ) }
    dend_1 { pt3dadd( 7.92224, 50.1842, 15.1721, 0.83 ) }
    dend_1 { pt3dadd( 8.19514, 52.2511, 15.3904, 0.83 ) }
    dend_1 { pt3dadd( 8.48096, 54.649, 15.5949, 0.83 ) }
    dend_1 { pt3dadd( 8.86436, 57.677, 15.8601, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 9.18252, 60.7996, 16.1038, 0.83 ) }
    dend_1 { pt3dadd( 9.39539, 62.5825, 16.2523, 0.83 ) }
    dend_1 { pt3dadd( 9.80013, 65.3376, 16.4959, 0.83 ) }
    dend_1 { pt3dadd( 10.152, 68.0483, 16.7311, 0.83 ) }
    dend_1 { pt3dadd( 10.5775, 70.8952, 16.9565, 0.83 ) }
    dend_1 { pt3dadd( 11.1244, 74.6163, 17.2913, 0.83 ) }
    dend_1 { pt3dadd( 11.4596, 77.0483, 17.622, 0.83 ) }
    dend_1 { pt3dadd( 11.6121, 78.3954, 17.8366, 0.83 ) }
    dend_1 { pt3dadd( 11.7388, 79.9208, 18.1504, 0.83 ) }
    dend_1 { pt3dadd( 11.8956, 82.179, 18.7483, 0.83 ) }
    dend_1 { pt3dadd( 11.9361, 85.5014, 19.8052, 0.55 ) }
    dend_1 { pt3dadd( 11.9719, 89.8602, 21.3739, 0.55 ) }
    dend_1 { pt3dadd( 11.9131, 91.1448, 21.8427, 0.55 ) }
    dend_1 { pt3dadd( 11.7819, 93.8467, 22.8105, 0.55 ) }
    dend_1 { pt3dadd( 11.7015, 94.9803, 23.1925, 0.55 ) }
    dend_1 { pt3dadd( 11.5178, 97.1071, 23.8959, 0.55 ) }
    dend_1 { pt3dadd( 11.3878, 99.3235, 24.5354, 0.55 ) }
    dend_1 { pt3dadd( 11.3762, 102.538, 25.3116, 0.55 ) }
    dend_1 { pt3dadd( 11.3822, 104.656, 25.7923, 0.55 ) }
    dend_1 { pt3dadd( 11.3676, 106.584, 26.1598, 0.55 ) }
    dend_1 { pt3dadd( 11.4152, 108.991, 26.6246, 0.55 ) }
    dend_1 { pt3dadd( 11.6191, 111.493, 27.0944, 0.55 ) }
    dend_1 { pt3dadd( 11.9872, 114.902, 27.8089, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.7082, -50.9806, 30.7671, 0.83 ) }
    dend_9 { pt3dadd( -16.5817, -58.2373, 33.8352, 0.83 ) }
    dend_9 { pt3dadd( -18.8162, -63.9904, 35.9852, 0.83 ) }
    dend_9 { pt3dadd( -21.4654, -70.9324, 38.2694, 0.83 ) }
    dend_9 { pt3dadd( -23.6518, -76.6711, 39.9592, 0.83 ) }
    dend_9 { pt3dadd( -24.9805, -80.1586, 40.9861, 0.83 ) }
    dend_9 { pt3dadd( -26.5648, -84.3167, 42.2104, 0.83 ) }
    dend_9 { pt3dadd( -27.5789, -87.3331, 42.8842, 0.83 ) }
    dend_9 { pt3dadd( -28.7161, -90.7777, 43.4985, 0.83 ) }
    dend_9 { pt3dadd( -30.0267, -95.1908, 43.62, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.7082, -50.9806, 30.7671, 0.55 ) }
    dend_8 { pt3dadd( -9.5788, -52.4139, 38.9027, 0.55 ) }
    dend_8 { pt3dadd( -4.89594, -53.939, 47.4769, 0.55 ) }
    dend_8 { pt3dadd( -2.51715, -54.7137, 51.8325, 0.55 ) }
    dend_8 { pt3dadd( 0.478969, -55.6895, 57.3183, 0.28 ) }
    dend_8 { pt3dadd( 0.973926, -55.8507, 58.2245, 0.83 ) }
    dend_8 { pt3dadd( 3.57046, -56.6963, 62.9787, 0.28 ) }
    dend_8 { pt3dadd( 4.05466, -56.7883, 63.7791, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.499194, 85.5269, -25.7886, 0.55 ) }
    dend_4 { pt3dadd( 0.258814, 88.8339, -26.3824, 0.55 ) }
    dend_4 { pt3dadd( 1.02229, 92.3292, -27.1026, 0.55 ) }
    dend_4 { pt3dadd( 1.57078, 94.7856, -27.5868, 0.55 ) }
    dend_4 { pt3dadd( 2.43847, 98.4664, -28.3107, 0.83 ) }
    dend_4 { pt3dadd( 3.06379, 101.082, -28.8117, 0.55 ) }
    dend_4 { pt3dadd( 3.67488, 103.518, -29.2794, 0.55 ) }
    dend_4 { pt3dadd( 4.27745, 105.794, -29.656, 1.11 ) }
    dend_4 { pt3dadd( 5.29572, 109.745, -30.4343, 0.55 ) }
    dend_4 { pt3dadd( 5.59055, 111.073, -30.7034, 0.55 ) }
    dend_4 { pt3dadd( 5.9472, 112.749, -31.0578, 1.11 ) }
    dend_4 { pt3dadd( 6.37282, 114.832, -31.5076, 0.55 ) }
    dend_4 { pt3dadd( 6.62616, 116.198, -31.791, 1.11 ) }
    dend_4 { pt3dadd( 7.38047, 120.37, -32.598, 0.55 ) }
    dend_4 { pt3dadd( 7.63638, 122.584, -33.1337, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.499194, 85.5269, -25.7886, 0.28 ) }
    dend_3 { pt3dadd( -1.11855, 88.623, -28.8962, 0.28 ) }
    dend_3 { pt3dadd( -1.18972, 89.0849, -29.3516, 0.55 ) }
    dend_3 { pt3dadd( -1.71113, 93.1632, -33.2195, 0.28 ) }
    dend_3 { pt3dadd( -2.13848, 96.9568, -37.0504, 1.11 ) }
    dend_3 { pt3dadd( -2.3254, 98.9241, -39.1633, 0.28 ) }
    dend_3 { pt3dadd( -2.3254, 98.9241, -39.1633, 0.55 ) }
    dend_3 { pt3dadd( -2.1445, 101.29, -41.2871, 0.28 ) }
    dend_3 { pt3dadd( -1.96931, 102.189, -42.0153, 1.11 ) }
    dend_3 { pt3dadd( -0.159824, 106.1, -44.1851, 0.55 ) }
    dend_3 { pt3dadd( 1.95413, 109.097, -44.9359, 0.28 ) }
    dend_3 { pt3dadd( 5.73726, 113.749, -45.5385, 1.11 ) }
    dend_3 { pt3dadd( 9.24426, 117.673, -45.6128, 0.28 ) }
    dend_3 { pt3dadd( 9.33958, 117.763, -45.5938, 0.55 ) }
    dend_3 { pt3dadd( 12.3694, 120.299, -44.5452, 0.28 ) }
    dend_3 { pt3dadd( 12.6652, 120.521, -44.3869, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -30.0267, -95.1908, 43.62, 0.83 ) }
    dend_11 { pt3dadd( -30.1648, -101.082, 45.672, 0.83 ) }
    dend_11 { pt3dadd( -30.2961, -105.806, 47.6395, 0.83 ) }
    dend_11 { pt3dadd( -30.2964, -108.02, 48.572, 0.83 ) }
    dend_11 { pt3dadd( -30.3134, -109.291, 49.2178, 0.83 ) }
    dend_11 { pt3dadd( -30.4485, -112.761, 51.0696, 0.83 ) }
    dend_11 { pt3dadd( -30.5429, -114.813, 52.0168, 0.83 ) }
    dend_11 { pt3dadd( -30.6865, -118.719, 53.4341, 0.83 ) }
    dend_11 { pt3dadd( -30.6743, -121.435, 54.4239, 0.83 ) }
    dend_11 { pt3dadd( -30.4266, -126.087, 55.9523, 0.83 ) }
    dend_11 { pt3dadd( -30.1752, -128.49, 56.5778, 0.83 ) }
    dend_11 { pt3dadd( -29.4165, -134.418, 57.5517, 0.83 ) }
    dend_11 { pt3dadd( -28.78, -139.709, 58.0792, 0.83 ) }
    dend_11 { pt3dadd( -28.367, -144.082, 58.1419, 0.83 ) }
    dend_11 { pt3dadd( -28.2193, -147.241, 58.0979, 0.83 ) }
    dend_11 { pt3dadd( -28.1991, -147.877, 58.0686, 0.83 ) }
    dend_11 { pt3dadd( -28.2308, -151.52, 58.0893, 0.28 ) }
    dend_11 { pt3dadd( -28.3048, -152.48, 58.1639, 0.83 ) }
    dend_11 { pt3dadd( -28.6627, -154.947, 58.2916, 0.28 ) }
    dend_11 { pt3dadd( -29.3572, -159.325, 58.45, 0.28 ) }
    dend_11 { pt3dadd( -29.5168, -160.263, 58.5195, 0.28 ) }
    dend_11 { pt3dadd( -30.0037, -163.257, 58.7638, 0.83 ) }
    dend_11 { pt3dadd( -30.3686, -165.908, 59.0154, 0.28 ) }
    dend_11 { pt3dadd( -30.6476, -168.035, 59.2464, 0.83 ) }
    dend_11 { pt3dadd( -30.8017, -169.741, 59.477, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -30.0267, -95.1908, 43.62, 0.55 ) }
    dend_10 { pt3dadd( -32.6223, -101.057, 41.5721, 0.55 ) }
    dend_10 { pt3dadd( -33.8308, -103.563, 40.7629, 0.55 ) }
    dend_10 { pt3dadd( -36.5251, -108.867, 39.1783, 0.55 ) }
    dend_10 { pt3dadd( -37.7415, -111.131, 38.548, 0.55 ) }
    dend_10 { pt3dadd( -39.0138, -113.326, 37.9829, 0.28 ) }
    dend_10 { pt3dadd( -39.5823, -114.307, 37.7304, 0.55 ) }
    dend_10 { pt3dadd( -41.1247, -116.555, 37.2929, 0.28 ) }
    dend_10 { pt3dadd( -42.1561, -118.012, 37.0466, 0.55 ) }
    dend_10 { pt3dadd( -43.4834, -119.692, 36.9142, 0.28 ) }
    dend_10 { pt3dadd( -45.5917, -122.21, 36.6902, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_5 = new SectionList()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_9 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BP_13d0a0f335_0_0


